

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Mar 30 16:48:56 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 29 "E:\Mechatronics 2\Assignment2\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 29 "E:\Mechatronics 2\Assignment2\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_rotate
    48                           	FNCALL	_init,_init_adc
    49                           	FNCALL	_init,_lcd_init
    50                           	FNCALL	_lcd_init,_lcd_write_control
    51                           	FNROOT	_main
    52                           	FNCALL	_isr1,___lwmod
    53                           	FNCALL	_isr1,_readAvgDistance
    54                           	FNCALL	_isr1,_ADCconvert
    55                           	FNCALL	_ADCconvert,___lwmod
    56                           	FNCALL	_ADCconvert,_sprintf
    57                           	FNCALL	_ADCconvert,_lcd_set_cursor
    58                           	FNCALL	_ADCconvert,_lcd_write_string
    59                           	FNCALL	_readAvgDistance,_adc_read_channel
    60                           	FNCALL	_readAvgDistance,___lwdiv
    61                           	FNCALL	_readAvgDistance,_sprintf
    62                           	FNCALL	_readAvgDistance,_lcd_set_cursor
    63                           	FNCALL	_readAvgDistance,i1_lcd_write_control
    64                           	FNCALL	_readAvgDistance,_lcd_write_string
    65                           	FNCALL	_lcd_write_string,_lcd_write_data
    66                           	FNCALL	_lcd_set_cursor,i1_lcd_write_control
    67                           	FNCALL	_sprintf,___lwdiv
    68                           	FNCALL	_sprintf,___lwmod
    69                           	FNCALL	_adc_read_channel,_adc_read
    70                           	FNCALL	intlevel1,_isr1
    71                           	global	intlevel1
    72                           	FNROOT	intlevel1
    73                           	global	_current_step
    74                           psect	idataBANK1,class=CODE,space=0,delta=2
    75                           global __pidataBANK1
    76  0003                     __pidataBANK1:
    77                           	file	"E:\Mechatronics 2\Assignment2\Main.c"
    78                           	line	70
    79                           
    80                           ;initializer for _current_step
    81  0003  343C               	retlw	03Ch
    82                           	global	_dpowers
    83                           psect	strings,class=STRING,delta=2
    84                           global __pstrings
    85  0750                     __pstrings:
    86                           ;	global	stringdir,stringtab,__stringbase
    87  0750                     stringtab:
    88                           ;	String table - string pointers are 1 byte each
    89  0750                     stringcode:stringdir:
      + 0750                     stringdir:	
    90  0750  3007               movlw high(stringdir)
    91  0751  008A               movwf pclath
    92  0752  0804               movf fsr,w
    93  0753  0A84               incf fsr
    94  0754  0782               	addwf pc
    95  0755                     __stringbase:
    96  0755  3400               	retlw	0
    97                           psect	strings
    98                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
    99                           	line	350
   100  0756                     _dpowers:
   101  0756  3401               	retlw	01h
   102  0757  3400               	retlw	0
   103                           
   104  0758  340A               	retlw	0Ah
   105  0759  3400               	retlw	0
   106                           
   107  075A  3464               	retlw	064h
   108  075B  3400               	retlw	0
   109                           
   110  075C  34E8               	retlw	0E8h
   111  075D  3403               	retlw	03h
   112                           
   113  075E  3410               	retlw	010h
   114  075F  3427               	retlw	027h
   115                           
   116                           	global	_dpowers
   117                           	global	_RTC_Counter
   118                           	global	_pb0DebounceCount
   119                           	global	_pb1DebounceCount
   120                           	global	_pb2DebounceCount
   121                           	global	_pb3DebounceCount
   122                           	global	_RTC_FLAG_10MS
   123                           	global	_RTC_FLAG_1MS
   124                           	global	_RTC_FLAG_250MS
   125                           	global	_RTC_FLAG_500MS
   126                           	global	_RTC_FLAG_50MS
   127                           	global	_pb0Pressed
   128                           	global	_pb0Released
   129                           	global	_pb1Pressed
   130                           	global	_pb1Released
   131                           	global	_pb2Pressed
   132                           	global	_pb2Released
   133                           	global	_pb3Pressed
   134                           	global	_pb3Released
   135                           	global	ADCconvert@F1220
   136                           	global	readAvgDistance@F1216
   137                           	global	readDistance@F1211
   138                           	global	_current_direction
   139                           	global	_ADCON0
   140  001F                     _ADCON0	set	31
   141                           	global	_ADRESH
   142  001E                     _ADRESH	set	30
   143                           	global	_PORTA
   144  0005                     _PORTA	set	5
   145                           	global	_PORTC
   146  0007                     _PORTC	set	7
   147                           	global	_PORTD
   148  0008                     _PORTD	set	8
   149                           	global	_PORTE
   150  0009                     _PORTE	set	9
   151                           	global	_TMR0
   152  0001                     _TMR0	set	1
   153                           	global	_CARRY
   154  0018                     _CARRY	set	24
   155                           	global	_CHS0
   156  00FB                     _CHS0	set	251
   157                           	global	_CHS1
   158  00FC                     _CHS1	set	252
   159                           	global	_CHS2
   160  00FD                     _CHS2	set	253
   161                           	global	_GIE
   162  005F                     _GIE	set	95
   163                           	global	_GO
   164  00FA                     _GO	set	250
   165                           	global	_RB0
   166  0030                     _RB0	set	48
   167                           	global	_RB1
   168  0031                     _RB1	set	49
   169                           	global	_RB2
   170  0032                     _RB2	set	50
   171                           	global	_RB3
   172  0033                     _RB3	set	51
   173                           	global	_RB4
   174  0034                     _RB4	set	52
   175                           	global	_RB5
   176  0035                     _RB5	set	53
   177                           	global	_RE0
   178  0048                     _RE0	set	72
   179                           	global	_RE1
   180  0049                     _RE1	set	73
   181                           	global	_RE2
   182  004A                     _RE2	set	74
   183                           	global	_TMR0IE
   184  005D                     _TMR0IE	set	93
   185                           	global	_TMR0IF
   186  005A                     _TMR0IF	set	90
   187                           	global	_ADCON1
   188  009F                     _ADCON1	set	159
   189                           	global	_ADRESL
   190  009E                     _ADRESL	set	158
   191                           	global	_OPTION_REG
   192  0081                     _OPTION_REG	set	129
   193                           	global	_TRISA
   194  0085                     _TRISA	set	133
   195                           	global	_TRISB
   196  0086                     _TRISB	set	134
   197                           	global	_TRISC
   198  0087                     _TRISC	set	135
   199                           	global	_TRISD
   200  0088                     _TRISD	set	136
   201                           	global	_TRISE
   202  0089                     _TRISE	set	137
   203                           	global	_EEADR
   204  010D                     _EEADR	set	269
   205                           	global	_EEDATA
   206  010C                     _EEDATA	set	268
   207                           	global	_EECON1
   208  018C                     _EECON1	set	396
   209                           	global	_EECON2
   210  018D                     _EECON2	set	397
   211                           	global	_RD
   212  0C60                     _RD	set	3168
   213                           	global	_WR
   214  0C61                     _WR	set	3169
   215                           	global	_WREN
   216  0C62                     _WREN	set	3170
   217                           	
   218  0760                     STR_3:	
   219  0760  3444               	retlw	68	;'D'
   220  0761  3469               	retlw	105	;'i'
   221  0762  3473               	retlw	115	;'s'
   222  0763  3474               	retlw	116	;'t'
   223  0764  3461               	retlw	97	;'a'
   224  0765  346E               	retlw	110	;'n'
   225  0766  3463               	retlw	99	;'c'
   226  0767  3465               	retlw	101	;'e'
   227  0768  343A               	retlw	58	;':'
   228  0769  3420               	retlw	32	;' '
   229  076A  3425               	retlw	37	;'%'
   230  076B  3464               	retlw	100	;'d'
   231  076C  3463               	retlw	99	;'c'
   232  076D  346D               	retlw	109	;'m'
   233  076E  3400               	retlw	0
   234                           psect	strings
   235                           	
   236  076F                     STR_1:	
   237  076F  3441               	retlw	65	;'A'
   238  0770  3464               	retlw	100	;'d'
   239  0771  3463               	retlw	99	;'c'
   240  0772  3420               	retlw	32	;' '
   241  0773  3456               	retlw	86	;'V'
   242  0774  3461               	retlw	97	;'a'
   243  0775  346C               	retlw	108	;'l'
   244  0776  3475               	retlw	117	;'u'
   245  0777  3465               	retlw	101	;'e'
   246  0778  343A               	retlw	58	;':'
   247  0779  3420               	retlw	32	;' '
   248  077A  3425               	retlw	37	;'%'
   249  077B  3464               	retlw	100	;'d'
   250  077C  3400               	retlw	0
   251                           psect	strings
   252  076F                     STR_2	equ	STR_1+0
   253                           	file	"Assignment2_11055579.as"
   254                           	line	#
   255                           psect cinit,class=CODE,delta=2
   256                           global start_initialization
   257  07CF                     start_initialization:
   258                           
   259                           psect	bitbssBANK0,class=BANK0,bit,space=1
   260                           global __pbitbssBANK0
   261  0340                     __pbitbssBANK0:
   262  0340                     _RTC_FLAG_10MS:
   263  0340                            ds      1
   264                           
   265  0341                     _RTC_FLAG_1MS:
   266  0341                            ds      1
   267                           
   268  0342                     _RTC_FLAG_250MS:
   269  0342                            ds      1
   270                           
   271  0343                     _RTC_FLAG_500MS:
   272  0343                            ds      1
   273                           
   274  0344                     _RTC_FLAG_50MS:
   275  0344                            ds      1
   276                           
   277  0345                     _pb0Pressed:
   278  0345                            ds      1
   279                           
   280  0346                     _pb0Released:
   281  0346                            ds      1
   282                           
   283  0347                     _pb1Pressed:
   284  0347                            ds      1
   285                           
   286  0348                     _pb1Released:
   287  0348                            ds      1
   288                           
   289  0349                     _pb2Pressed:
   290  0349                            ds      1
   291                           
   292  034A                     _pb2Released:
   293  034A                            ds      1
   294                           
   295  034B                     _pb3Pressed:
   296  034B                            ds      1
   297                           
   298  034C                     _pb3Released:
   299  034C                            ds      1
   300                           
   301                           psect	bssBANK0,class=BANK0,space=1
   302                           global __pbssBANK0
   303  006A                     __pbssBANK0:
   304  006A                     _RTC_Counter:
   305  006A                            ds      2
   306                           
   307  006C                     _pb0DebounceCount:
   308  006C                            ds      1
   309                           
   310  006D                     _pb1DebounceCount:
   311  006D                            ds      1
   312                           
   313  006E                     _pb2DebounceCount:
   314  006E                            ds      1
   315                           
   316  006F                     _pb3DebounceCount:
   317  006F                            ds      1
   318                           
   319                           psect	bssBANK1,class=BANK1,space=1
   320                           global __pbssBANK1
   321  00A0                     __pbssBANK1:
   322  00A0                     ADCconvert@F1220:
   323  00A0                            ds      16
   324                           
   325  00B0                     readAvgDistance@F1216:
   326  00B0                            ds      16
   327                           
   328  00C0                     readDistance@F1211:
   329  00C0                            ds      16
   330                           
   331  00D0                     _current_direction:
   332  00D0                            ds      1
   333                           
   334                           psect	dataBANK1,class=BANK1,space=1
   335                           global __pdataBANK1
   336  00D6                     __pdataBANK1:
   337                           	file	"E:\Mechatronics 2\Assignment2\Main.c"
   338                           	line	70
   339  00D6                     _current_step:
   340  00D6                            ds      1
   341                           
   342                           psect clrtext,class=CODE,delta=2
   343                           global clear_ram
   344                           ;	Called with FSR containing the base address, and
   345                           ;	W with the last address+1
   346  0F7E                     clear_ram:
   347  0F7E  0064               	clrwdt			;clear the watchdog before getting into this loop
   348  0F7F                     clrloop:
   349  0F7F  0180               	clrf	indf		;clear RAM location pointed to by FSR
   350  0F80  0A84               	incf	fsr,f		;increment pointer
   351  0F81  0604               	xorwf	fsr,w		;XOR with final address
   352  0F82  1903               	btfsc	status,2	;have we reached the end yet?
   353  0F83  3400               	retlw	0		;all done for this memory range, return
   354  0F84  0604               	xorwf	fsr,w		;XOR again to restore value
   355  0F85  2F7F               	goto	clrloop		;do the next byte
   356                           
   357                           ; Clear objects allocated to BITBANK0
   358                           psect cinit,class=CODE,delta=2
   359  07CF  01E8               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   360  07D0  01E9               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   361                           ; Clear objects allocated to BANK0
   362                           psect cinit,class=CODE,delta=2
   363  07D1  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   364  07D2  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   365  07D3  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   366  07D4  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   367  07D5  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   368  07D6  01EF               	clrf	((__pbssBANK0)+5)&07Fh
   369                           ; Clear objects allocated to BANK1
   370                           psect cinit,class=CODE,delta=2
   371  07D7  1383               	bcf	status, 7	;select IRP bank0
   372  07D8  30A0               	movlw	low(__pbssBANK1)
   373  07D9  0084               	movwf	fsr
   374  07DA  30D1               	movlw	low((__pbssBANK1)+031h)
   375  07DB  120A  158A  277E   	fcall	clear_ram
              120A  118A         
   376                           ; Initialize objects allocated to BANK1
   377                           	global __pidataBANK1
   378                           psect cinit,class=CODE,delta=2
   379  07E0  1683               	bsf	status, 5	;RP0=1, select bank1
   380  07E1  1303               	bcf	status, 6	;RP1=0, select bank1
   381  07E2  120A  118A  2003   	fcall	__pidataBANK1+0		;fetch initializer
              120A  118A         
   382  07E7  00D6               	movwf	__pdataBANK1+0&07fh		
   383                           psect cinit,class=CODE,delta=2
   384                           global end_of_initialization
   385                           
   386                           ;End of C runtime variable initialization code
   387                           
   388  07E8                     end_of_initialization:
   389  07E8  0183               clrf status
   390  07E9  120A  118A  2E23   ljmp _main	;jump to C main() function
   391                           psect	cstackBANK1,class=BANK1,space=1
   392                           global __pcstackBANK1
   393  00D1                     __pcstackBANK1:
   394                           	global	??_init_adc
   395  00D1                     ??_init_adc:	; 0 bytes @ 0x0
   396                           	global	??_lcd_write_control
   397  00D1                     ??_lcd_write_control:	; 0 bytes @ 0x0
   398                           	global	?_rotate
   399  00D1                     ?_rotate:	; 0 bytes @ 0x0
   400                           	global	rotate@direction
   401  00D1                     rotate@direction:	; 1 bytes @ 0x0
   402  00D1                     	ds	1
   403                           	global	??_rotate
   404  00D2                     ??_rotate:	; 0 bytes @ 0x1
   405  00D2                     	ds	1
   406                           	global	lcd_write_control@databyte
   407  00D3                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   408  00D3                     	ds	1
   409                           	global	??_lcd_init
   410  00D4                     ??_lcd_init:	; 0 bytes @ 0x3
   411                           	global	??_init
   412  00D4                     ??_init:	; 0 bytes @ 0x3
   413                           	global	rotate@steps
   414  00D4                     rotate@steps:	; 1 bytes @ 0x3
   415  00D4                     	ds	1
   416                           	global	??_main
   417  00D5                     ??_main:	; 0 bytes @ 0x4
   418  00D5                     	ds	1
   419                           psect	cstackCOMMON,class=COMMON,space=1
   420                           global __pcstackCOMMON
   421  0070                     __pcstackCOMMON:
   422                           	global	?_init_adc
   423  0070                     ?_init_adc:	; 0 bytes @ 0x0
   424                           	global	?_lcd_init
   425  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   426                           	global	?_lcd_write_control
   427  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   428                           	global	?_lcd_set_cursor
   429  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   430                           	global	?_lcd_write_string
   431  0070                     ?_lcd_write_string:	; 0 bytes @ 0x0
   432                           	global	?_isr1
   433  0070                     ?_isr1:	; 0 bytes @ 0x0
   434                           	global	?_init
   435  0070                     ?_init:	; 0 bytes @ 0x0
   436                           	global	?_main
   437  0070                     ?_main:	; 0 bytes @ 0x0
   438                           	global	?_lcd_write_data
   439  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   440                           	global	??_lcd_write_data
   441  0070                     ??_lcd_write_data:	; 0 bytes @ 0x0
   442                           	global	?i1_lcd_write_control
   443  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
   444                           	global	??i1_lcd_write_control
   445  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
   446                           	global	?_adc_read_channel
   447  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
   448                           	global	?_adc_read
   449  0070                     ?_adc_read:	; 2 bytes @ 0x0
   450                           	global	?___lwdiv
   451  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   452                           	global	___lwdiv@divisor
   453  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   454  0070                     	ds	2
   455                           	global	??_adc_read
   456  0072                     ??_adc_read:	; 0 bytes @ 0x2
   457                           	global	lcd_write_data@databyte
   458  0072                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   459                           	global	i1lcd_write_control@databyte
   460  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
   461                           	global	___lwdiv@dividend
   462  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   463  0072                     	ds	1
   464                           	global	??_lcd_set_cursor
   465  0073                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   466                           	global	??_lcd_write_string
   467  0073                     ??_lcd_write_string:	; 0 bytes @ 0x3
   468                           	global	lcd_set_cursor@address
   469  0073                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   470  0073                     	ds	1
   471                           	global	??___lwdiv
   472  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   473                           	global	lcd_write_string@s
   474  0074                     lcd_write_string@s:	; 1 bytes @ 0x4
   475                           	global	adc_read@adc_value
   476  0074                     adc_read@adc_value:	; 2 bytes @ 0x4
   477  0074                     	ds	1
   478                           	global	___lwdiv@quotient
   479  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   480  0075                     	ds	1
   481                           	global	??_adc_read_channel
   482  0076                     ??_adc_read_channel:	; 0 bytes @ 0x6
   483  0076                     	ds	1
   484                           	global	adc_read_channel@channel
   485  0077                     adc_read_channel@channel:	; 1 bytes @ 0x7
   486                           	global	___lwdiv@counter
   487  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   488  0077                     	ds	1
   489                           	global	?___lwmod
   490  0078                     ?___lwmod:	; 2 bytes @ 0x8
   491                           	global	___lwmod@divisor
   492  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   493  0078                     	ds	2
   494                           	global	___lwmod@dividend
   495  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   496  007A                     	ds	2
   497                           	global	??___lwmod
   498  007C                     ??___lwmod:	; 0 bytes @ 0xC
   499  007C                     	ds	1
   500                           	global	___lwmod@counter
   501  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   502  007D                     	ds	1
   503                           psect	cstackBANK0,class=BANK0,space=1
   504                           global __pcstackBANK0
   505  0020                     __pcstackBANK0:
   506                           	global	?_sprintf
   507  0020                     ?_sprintf:	; 2 bytes @ 0x0
   508                           	global	sprintf@f
   509  0020                     sprintf@f:	; 1 bytes @ 0x0
   510  0020                     	ds	3
   511                           	global	??_sprintf
   512  0023                     ??_sprintf:	; 0 bytes @ 0x3
   513  0023                     	ds	3
   514                           	global	sprintf@ap
   515  0026                     sprintf@ap:	; 1 bytes @ 0x6
   516  0026                     	ds	1
   517                           	global	sprintf@flag
   518  0027                     sprintf@flag:	; 1 bytes @ 0x7
   519  0027                     	ds	1
   520                           	global	sprintf@prec
   521  0028                     sprintf@prec:	; 1 bytes @ 0x8
   522  0028                     	ds	1
   523                           	global	sprintf@_val
   524  0029                     sprintf@_val:	; 4 bytes @ 0x9
   525  0029                     	ds	4
   526                           	global	sprintf@sp
   527  002D                     sprintf@sp:	; 1 bytes @ 0xD
   528  002D                     	ds	1
   529                           	global	sprintf@c
   530  002E                     sprintf@c:	; 1 bytes @ 0xE
   531  002E                     	ds	1
   532                           	global	?_readAvgDistance
   533  002F                     ?_readAvgDistance:	; 2 bytes @ 0xF
   534  002F                     	ds	2
   535                           	global	??_readAvgDistance
   536  0031                     ??_readAvgDistance:	; 0 bytes @ 0x11
   537  0031                     	ds	4
   538                           	global	readAvgDistance@adcOutput
   539  0035                     readAvgDistance@adcOutput:	; 16 bytes @ 0x15
   540  0035                     	ds	16
   541                           	global	readAvgDistance@fullval
   542  0045                     readAvgDistance@fullval:	; 2 bytes @ 0x25
   543  0045                     	ds	2
   544                           	global	readAvgDistance@averageval
   545  0047                     readAvgDistance@averageval:	; 2 bytes @ 0x27
   546  0047                     	ds	2
   547                           	global	readAvgDistance@i
   548  0049                     readAvgDistance@i:	; 2 bytes @ 0x29
   549  0049                     	ds	2
   550                           	global	?_ADCconvert
   551  004B                     ?_ADCconvert:	; 0 bytes @ 0x2B
   552                           	global	ADCconvert@adcVal
   553  004B                     ADCconvert@adcVal:	; 2 bytes @ 0x2B
   554  004B                     	ds	2
   555                           	global	??_ADCconvert
   556  004D                     ??_ADCconvert:	; 0 bytes @ 0x2D
   557  004D                     	ds	4
   558                           	global	ADCconvert@adcOutput
   559  0051                     ADCconvert@adcOutput:	; 16 bytes @ 0x31
   560  0051                     	ds	16
   561                           	global	ADCconvert@distance
   562  0061                     ADCconvert@distance:	; 2 bytes @ 0x41
   563  0061                     	ds	2
   564                           	global	??_isr1
   565  0063                     ??_isr1:	; 0 bytes @ 0x43
   566  0063                     	ds	5
   567 ;;Data sizes: Strings 29, constant 10, data 1, bss 55, persistent 0 stack 0
   568 ;;Auto spaces:   Size  Autos    Used
   569 ;; COMMON          14     14      14
   570 ;; BANK0           80     72      80
   571 ;; BANK1           80      5      55
   572 ;; BANK3           96      0       0
   573 ;; BANK2           96      0       0
   574                           
   575 ;;
   576 ;; Pointer list with targets:
   577                           
   578 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
   579 ;;
   580 ;; ?_readAvgDistance	unsigned int  size(1) Largest target is 0
   581 ;;
   582 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   583 ;;
   584 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   585 ;;
   586 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
   587 ;;		 -> STR_3(CODE[15]), STR_2(CODE[14]), STR_1(CODE[14]), 
   588 ;;
   589 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
   590 ;;		 -> ADCconvert@adcOutput(BANK0[16]), readAvgDistance@adcOutput(BANK0[16]), readDistance@adcOutput(BANK0[16]), 
   591 ;;
   592 ;; ?_sprintf	int  size(1) Largest target is 0
   593 ;;
   594 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   595 ;;		 -> ?_sprintf(BANK0[2]), 
   596 ;;
   597 ;; S3018$_cp	PTR const unsigned char  size(1) Largest target is 0
   598 ;;
   599 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   600 ;;
   601 ;; lcd_write_string@s	PTR unsigned char  size(1) Largest target is 16
   602 ;;		 -> ADCconvert@adcOutput(BANK0[16]), readAvgDistance@adcOutput(BANK0[16]), readDistance@adcOutput(BANK0[16]), 
   603 ;;
   604                           
   605                           
   606 ;;
   607 ;; Critical Paths under _main in COMMON
   608 ;;
   609 ;;   None.
   610 ;;
   611 ;; Critical Paths under _isr1 in COMMON
   612 ;;
   613 ;;   _isr1->___lwmod
   614 ;;   _ADCconvert->___lwmod
   615 ;;   _lcd_write_string->_lcd_write_data
   616 ;;   _lcd_set_cursor->i1_lcd_write_control
   617 ;;   _sprintf->___lwmod
   618 ;;   _adc_read_channel->_adc_read
   619 ;;   ___lwmod->___lwdiv
   620 ;;
   621 ;; Critical Paths under _main in BANK0
   622 ;;
   623 ;;   None.
   624 ;;
   625 ;; Critical Paths under _isr1 in BANK0
   626 ;;
   627 ;;   _isr1->_ADCconvert
   628 ;;   _ADCconvert->_readAvgDistance
   629 ;;   _readAvgDistance->_sprintf
   630 ;;
   631 ;; Critical Paths under _main in BANK1
   632 ;;
   633 ;;   _main->_rotate
   634 ;;   _lcd_init->_lcd_write_control
   635 ;;
   636 ;; Critical Paths under _isr1 in BANK1
   637 ;;
   638 ;;   None.
   639 ;;
   640 ;; Critical Paths under _main in BANK3
   641 ;;
   642 ;;   None.
   643 ;;
   644 ;; Critical Paths under _isr1 in BANK3
   645 ;;
   646 ;;   None.
   647 ;;
   648 ;; Critical Paths under _main in BANK2
   649 ;;
   650 ;;   None.
   651 ;;
   652 ;; Critical Paths under _isr1 in BANK2
   653 ;;
   654 ;;   None.
   655                           
   656 ;;
   657 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   658 ;;
   659                           
   660 ;;
   661 ;;Call Graph Tables:
   662 ;;
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (0) _main                                                 1     1      0     111
   667 ;;                                              4 BANK1      1     1      0
   668 ;;                               _init
   669 ;;                             _rotate
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (1) _init                                                 0     0      0      22
   672 ;;                           _init_adc
   673 ;;                           _lcd_init
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (2) _lcd_init                                             0     0      0      22
   676 ;;                  _lcd_write_control
   677 ;; ---------------------------------------------------------------------------------
   678 ;; (3) _lcd_write_control                                    3     3      0      22
   679 ;;                                              0 BANK1      3     3      0
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (1) _rotate                                               4     3      1      89
   682 ;;                                              0 BANK1      4     3      1
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (2) _init_adc                                             1     1      0       0
   685 ;;                                              0 BANK1      1     1      0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; Estimated maximum stack depth 3
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (4) _isr1                                                 5     5      0    3573
   692 ;;                                             67 BANK0      5     5      0
   693 ;;                            ___lwmod
   694 ;;                    _readAvgDistance
   695 ;;                         _ADCconvert
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (5) _ADCconvert                                          24    22      2    2002
   698 ;;                                             43 BANK0     24    22      2
   699 ;;                            ___lwmod
   700 ;;                            _sprintf
   701 ;;                     _lcd_set_cursor
   702 ;;                   _lcd_write_string
   703 ;;                    _readAvgDistance (ARG)
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (5) _readAvgDistance                                     28    26      2    1412
   706 ;;                                             15 BANK0     28    26      2
   707 ;;                   _adc_read_channel
   708 ;;                            ___lwdiv
   709 ;;                            _sprintf
   710 ;;                     _lcd_set_cursor
   711 ;;                i1_lcd_write_control
   712 ;;                   _lcd_write_string
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (6) _lcd_write_string                                     2     2      0      67
   715 ;;                                              3 COMMON     2     2      0
   716 ;;                     _lcd_write_data
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (6) _lcd_set_cursor                                       1     1      0      96
   719 ;;                                              3 COMMON     1     1      0
   720 ;;                i1_lcd_write_control
   721 ;; ---------------------------------------------------------------------------------
   722 ;; (7) i1_lcd_write_control                                  3     3      0      73
   723 ;;                                              0 COMMON     3     3      0
   724 ;; ---------------------------------------------------------------------------------
   725 ;; (7) _lcd_write_data                                       3     3      0      22
   726 ;;                                              0 COMMON     3     3      0
   727 ;; ---------------------------------------------------------------------------------
   728 ;; (6) _sprintf                                             15    12      3     798
   729 ;;                                              0 BANK0     15    12      3
   730 ;;                            ___lwdiv
   731 ;;                            ___lwmod
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (6) _adc_read_channel                                     2     2      0      46
   734 ;;                                              6 COMMON     2     2      0
   735 ;;                           _adc_read
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (7) ___lwmod                                              6     2      4     159
   738 ;;                                              8 COMMON     6     2      4
   739 ;;                            ___lwdiv (ARG)
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (7) ___lwdiv                                              8     4      4     162
   742 ;;                                              0 COMMON     8     4      4
   743 ;; ---------------------------------------------------------------------------------
   744 ;; (7) _adc_read                                             6     4      2      24
   745 ;;                                              0 COMMON     6     4      2
   746 ;; ---------------------------------------------------------------------------------
   747 ;; Estimated maximum stack depth 7
   748 ;; ---------------------------------------------------------------------------------
   749                           
   750 ;; Call Graph Graphs:
   751                           
   752 ;; _main (ROOT)
   753 ;;   _init
   754 ;;     _init_adc
   755 ;;     _lcd_init
   756 ;;       _lcd_write_control
   757 ;;   _rotate
   758 ;;
   759 ;; _isr1 (ROOT)
   760 ;;   ___lwmod
   761 ;;     ___lwdiv (ARG)
   762 ;;   _readAvgDistance
   763 ;;     _adc_read_channel
   764 ;;       _adc_read
   765 ;;     ___lwdiv
   766 ;;     _sprintf
   767 ;;       ___lwdiv
   768 ;;       ___lwmod
   769 ;;         ___lwdiv (ARG)
   770 ;;     _lcd_set_cursor
   771 ;;       i1_lcd_write_control
   772 ;;     i1_lcd_write_control
   773 ;;     _lcd_write_string
   774 ;;       _lcd_write_data
   775 ;;   _ADCconvert
   776 ;;     ___lwmod
   777 ;;       ___lwdiv (ARG)
   778 ;;     _sprintf
   779 ;;       ___lwdiv
   780 ;;       ___lwmod
   781 ;;         ___lwdiv (ARG)
   782 ;;     _lcd_set_cursor
   783 ;;       i1_lcd_write_control
   784 ;;     _lcd_write_string
   785 ;;       _lcd_write_data
   786 ;;     _readAvgDistance (ARG)
   787 ;;       _adc_read_channel
   788 ;;         _adc_read
   789 ;;       ___lwdiv
   790 ;;       _sprintf
   791 ;;         ___lwdiv
   792 ;;         ___lwmod
   793 ;;           ___lwdiv (ARG)
   794 ;;       _lcd_set_cursor
   795 ;;         i1_lcd_write_control
   796 ;;       i1_lcd_write_control
   797 ;;       _lcd_write_string
   798 ;;         _lcd_write_data
   799 ;;
   800                           
   801 ;; Address spaces:
   802                           
   803 ;;Name               Size   Autos  Total    Cost      Usage
   804 ;;BANK3               60      0       0       9        0.0%
   805 ;;BITBANK3            60      0       0       8        0.0%
   806 ;;SFR3                 0      0       0       4        0.0%
   807 ;;BITSFR3              0      0       0       4        0.0%
   808 ;;BANK2               60      0       0      11        0.0%
   809 ;;BITBANK2            60      0       0      10        0.0%
   810 ;;SFR2                 0      0       0       5        0.0%
   811 ;;BITSFR2              0      0       0       5        0.0%
   812 ;;SFR1                 0      0       0       2        0.0%
   813 ;;BITSFR1              0      0       0       2        0.0%
   814 ;;BANK1               50      5      37       7       68.8%
   815 ;;BITBANK1            50      0       0       6        0.0%
   816 ;;CODE                 0      0       0       0        0.0%
   817 ;;DATA                 0      0      A0      12        0.0%
   818 ;;ABS                  0      0      95       3        0.0%
   819 ;;NULL                 0      0       0       0        0.0%
   820 ;;STACK                0      0       B       2        0.0%
   821 ;;BANK0               50     48      50       5      100.0%
   822 ;;BITBANK0            50      0       2       4        2.5%
   823 ;;SFR0                 0      0       0       1        0.0%
   824 ;;BITSFR0              0      0       0       1        0.0%
   825 ;;COMMON               E      E       E       1      100.0%
   826 ;;BITCOMMON            E      0       0       0        0.0%
   827 ;;EEDATA             100      0       0       0        0.0%
   828                           
   829                           	global	_main
   830                           psect	maintext,global,class=CODE,delta=2
   831                           global __pmaintext
   832  0623                     __pmaintext:
   833                           
   834 ;; *************** function _main *****************
   835 ;; Defined at:
   836 ;;		line 385 in file "E:\Mechatronics 2\Assignment2\Main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;		None               void
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 17F/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0
   852 ;;      Temps:          0       0       1       0       0
   853 ;;      Totals:         0       0       1       0       0
   854 ;;Total ram usage:        1 bytes
   855 ;; Hardware stack levels required when called:    7
   856 ;; This function calls:
   857 ;;		_init
   858 ;;		_rotate
   859 ;; This function is called by:
   860 ;;		Startup code after reset
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           psect	maintext
   864                           	file	"E:\Mechatronics 2\Assignment2\Main.c"
   865                           	line	385
   866                           	global	__size_of_main
   867  005A                     	__size_of_main	equ	__end_of_main-_main
   868                           	
   869  0623                     _main:	
   870                           	opt	stack 1
   871                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   872                           	line	390
   873                           	
   874  0623                     l5478:	
   875                           ;Main.c: 390: init();
   876  0623  120A  118A  27EC   	fcall	_init
              120A  118A         
   877                           	line	392
   878                           	
   879  0628                     l5480:	
   880                           ;Main.c: 392: rotate(8, 0);
   881  0628  1683               	bsf	status, 5	;RP0=1, select bank1
   882  0629  1303               	bcf	status, 6	;RP1=0, select bank1
   883  062A  01D1               	clrf	(?_rotate)^080h
   884  062B  3008               	movlw	(08h)
   885  062C  120A  118A  226A   	fcall	_rotate
              120A  118A         
   886  0631  2E32               	goto	l5482
   887                           	line	395
   888                           ;Main.c: 395: while(1)
   889                           	
   890  0632                     l843:	
   891                           	line	397
   892                           	
   893  0632                     l5482:	
   894                           ;Main.c: 396: {
   895                           ;Main.c: 397: if(pb0Pressed)
   896  0632  1283               	bcf	status, 5	;RP0=0, select bank0
   897  0633  1303               	bcf	status, 6	;RP1=0, select bank0
   898  0634  1EE8               	btfss	(_pb0Pressed/8),(_pb0Pressed)&7
   899  0635  2E37               	goto	u3671
   900  0636  2E38               	goto	u3670
   901  0637                     u3671:
   902  0637  2E3C               	goto	l5488
   903  0638                     u3670:
   904                           	line	399
   905                           	
   906  0638                     l5484:	
   907                           ;Main.c: 398: {
   908                           ;Main.c: 399: pb0Pressed = 0;
   909  0638  12E8               	bcf	(_pb0Pressed/8),(_pb0Pressed)&7
   910                           	line	402
   911                           	
   912  0639                     l5486:	
   913                           ;Main.c: 402: RB1 ^= 0x01;
   914  0639  3002               	movlw	1<<((49)&7)
   915  063A  0686               	xorwf	((49)/8),f
   916  063B  2E3C               	goto	l5488
   917                           	line	405
   918                           	
   919  063C                     l844:	
   920                           	line	407
   921                           	
   922  063C                     l5488:	
   923                           ;Main.c: 405: }
   924                           ;Main.c: 407: if(pb1Pressed)
   925  063C  1FE8               	btfss	(_pb1Pressed/8),(_pb1Pressed)&7
   926  063D  2E3F               	goto	u3681
   927  063E  2E40               	goto	u3680
   928  063F                     u3681:
   929  063F  2E4D               	goto	l5494
   930  0640                     u3680:
   931                           	line	409
   932                           	
   933  0640                     l5490:	
   934                           ;Main.c: 408: {
   935                           ;Main.c: 409: pb1Pressed = 0;
   936  0640  13E8               	bcf	(_pb1Pressed/8),(_pb1Pressed)&7
   937                           	line	411
   938                           	
   939  0641                     l5492:	
   940                           ;Main.c: 411: rotate(2, 1);
   941  0641  1683               	bsf	status, 5	;RP0=1, select bank1
   942  0642  1303               	bcf	status, 6	;RP1=0, select bank1
   943  0643  01D1               	clrf	(?_rotate)^080h
   944  0644  1403               	bsf	status,0
   945  0645  0DD1               	rlf	(?_rotate)^080h,f
   946  0646  3002               	movlw	(02h)
   947  0647  120A  118A  226A   	fcall	_rotate
              120A  118A         
   948  064C  2E4D               	goto	l5494
   949                           	line	412
   950                           	
   951  064D                     l845:	
   952                           	line	414
   953                           	
   954  064D                     l5494:	
   955                           ;Main.c: 412: }
   956                           ;Main.c: 414: if(pb2Pressed)
   957  064D  1283               	bcf	status, 5	;RP0=0, select bank0
   958  064E  1303               	bcf	status, 6	;RP1=0, select bank0
   959  064F  1CE9               	btfss	(_pb2Pressed/8),(_pb2Pressed)&7
   960  0650  2E52               	goto	u3691
   961  0651  2E53               	goto	u3690
   962  0652                     u3691:
   963  0652  2E5E               	goto	l5500
   964  0653                     u3690:
   965                           	line	416
   966                           	
   967  0653                     l5496:	
   968                           ;Main.c: 415: {
   969                           ;Main.c: 416: pb2Pressed = 0;
   970  0653  10E9               	bcf	(_pb2Pressed/8),(_pb2Pressed)&7
   971                           	line	418
   972                           	
   973  0654                     l5498:	
   974                           ;Main.c: 418: rotate(2, 0);
   975  0654  1683               	bsf	status, 5	;RP0=1, select bank1
   976  0655  1303               	bcf	status, 6	;RP1=0, select bank1
   977  0656  01D1               	clrf	(?_rotate)^080h
   978  0657  3002               	movlw	(02h)
   979  0658  120A  118A  226A   	fcall	_rotate
              120A  118A         
   980  065D  2E5E               	goto	l5500
   981                           	line	419
   982                           	
   983  065E                     l846:	
   984                           	line	421
   985                           	
   986  065E                     l5500:	
   987                           ;Main.c: 419: }
   988                           ;Main.c: 421: if(pb3Pressed)
   989  065E  1283               	bcf	status, 5	;RP0=0, select bank0
   990  065F  1303               	bcf	status, 6	;RP1=0, select bank0
   991  0660  1DE9               	btfss	(_pb3Pressed/8),(_pb3Pressed)&7
   992  0661  2E63               	goto	u3701
   993  0662  2E64               	goto	u3700
   994  0663                     u3701:
   995  0663  2E32               	goto	l5482
   996  0664                     u3700:
   997                           	line	423
   998                           	
   999  0664                     l5502:	
  1000                           ;Main.c: 422: {
  1001                           ;Main.c: 423: pb3Pressed = 0;
  1002  0664  11E9               	bcf	(_pb3Pressed/8),(_pb3Pressed)&7
  1003                           	line	425
  1004                           	
  1005  0665                     l5504:	
  1006                           ;Main.c: 425: rotate(200, current_direction);
  1007  0665  1683               	bsf	status, 5	;RP0=1, select bank1
  1008  0666  1303               	bcf	status, 6	;RP1=0, select bank1
  1009  0667  0850               	movf	(_current_direction)^080h,w
  1010  0668  00D5               	movwf	(??_main+0)^080h+0
  1011  0669  0855               	movf	(??_main+0)^080h+0,w
  1012  066A  00D1               	movwf	(?_rotate)^080h
  1013  066B  30C8               	movlw	(0C8h)
  1014  066C  120A  118A  226A   	fcall	_rotate
              120A  118A         
  1015                           	line	426
  1016                           	
  1017  0671                     l5506:	
  1018                           ;Main.c: 426: current_direction ^= 0x01;
  1019  0671  3001               	movlw	(01h)
  1020  0672  1683               	bsf	status, 5	;RP0=1, select bank1
  1021  0673  1303               	bcf	status, 6	;RP1=0, select bank1
  1022  0674  00D5               	movwf	(??_main+0)^080h+0
  1023  0675  0855               	movf	(??_main+0)^080h+0,w
  1024  0676  06D0               	xorwf	(_current_direction)^080h,f
  1025  0677  2E32               	goto	l5482
  1026                           	line	427
  1027                           	
  1028  0678                     l847:	
  1029  0678  2E32               	goto	l5482
  1030                           	line	428
  1031                           	
  1032  0679                     l848:	
  1033                           	line	395
  1034  0679  2E32               	goto	l5482
  1035                           	
  1036  067A                     l849:	
  1037                           	line	429
  1038                           	
  1039  067A                     l850:	
  1040                           	global	start
  1041  067A  120A  118A  2812   	ljmp	start
  1042                           	opt stack 0
  1043                           GLOBAL	__end_of_main
  1044  067D                     	__end_of_main:
  1045 ;; =============== function _main ends ============
  1046                           
  1047                           	signat	_main,88
  1048                           	global	_init
  1049                           psect	text457,local,class=CODE,delta=2
  1050                           global __ptext457
  1051  07EC                     __ptext457:
  1052                           
  1053 ;; *************** function _init *****************
  1054 ;; Defined at:
  1055 ;;		line 195 in file "E:\Mechatronics 2\Assignment2\Main.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;		None               void
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    6
  1076 ;; This function calls:
  1077 ;;		_init_adc
  1078 ;;		_lcd_init
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           psect	text457
  1084                           	file	"E:\Mechatronics 2\Assignment2\Main.c"
  1085                           	line	195
  1086                           	global	__size_of_init
  1087  0014                     	__size_of_init	equ	__end_of_init-_init
  1088                           	
  1089  07EC                     _init:	
  1090                           	opt	stack 1
  1091                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1092                           	line	196
  1093                           	
  1094  07EC                     l5466:	
  1095                           ;Main.c: 196: init_adc();
  1096  07EC  120A  158A  27B6   	fcall	_init_adc
              120A  118A         
  1097                           	line	197
  1098                           ;Main.c: 197: lcd_init();
  1099  07F1  120A  118A  277D   	fcall	_lcd_init
              120A  118A         
  1100                           	line	199
  1101                           	
  1102  07F6                     l5468:	
  1103                           ;Main.c: 199: TRISB = 0b11111100;
  1104  07F6  30FC               	movlw	(0FCh)
  1105  07F7  1683               	bsf	status, 5	;RP0=1, select bank1
  1106  07F8  1303               	bcf	status, 6	;RP1=0, select bank1
  1107  07F9  0086               	movwf	(134)^080h	;volatile
  1108                           	line	202
  1109                           	
  1110  07FA                     l5470:	
  1111                           ;Main.c: 202: TRISC = 0x00;
  1112  07FA  0187               	clrf	(135)^080h	;volatile
  1113                           	line	205
  1114                           	
  1115  07FB                     l5472:	
  1116                           ;Main.c: 205: OPTION_REG = 0b00000100;
  1117  07FB  3004               	movlw	(04h)
  1118  07FC  0081               	movwf	(129)^080h	;volatile
  1119                           	line	208
  1120                           	
  1121  07FD                     l5474:	
  1122                           ;Main.c: 208: TMR0IE = 1;
  1123  07FD  168B               	bsf	(93/8),(93)&7
  1124                           	line	211
  1125                           	
  1126  07FE                     l5476:	
  1127                           ;Main.c: 211: (GIE = 1);
  1128  07FE  178B               	bsf	(95/8),(95)&7
  1129                           	line	212
  1130                           	
  1131  07FF                     l767:	
  1132  07FF  0008               	return
  1133                           	opt stack 0
  1134                           GLOBAL	__end_of_init
  1135  0800                     	__end_of_init:
  1136 ;; =============== function _init ends ============
  1137                           
  1138                           	signat	_init,88
  1139                           	global	_lcd_init
  1140                           psect	text458,local,class=CODE,delta=2
  1141                           global __ptext458
  1142  077D                     __ptext458:
  1143                           
  1144 ;; *************** function _lcd_init *****************
  1145 ;; Defined at:
  1146 ;;		line 101 in file "E:\Mechatronics 2\Assignment2\lcd.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;		None               void
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    5
  1167 ;; This function calls:
  1168 ;;		_lcd_write_control
  1169 ;; This function is called by:
  1170 ;;		_init
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           psect	text458
  1174                           	file	"E:\Mechatronics 2\Assignment2\lcd.c"
  1175                           	line	101
  1176                           	global	__size_of_lcd_init
  1177  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1178                           	
  1179  077D                     _lcd_init:	
  1180                           	opt	stack 1
  1181                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1182                           	line	105
  1183                           	
  1184  077D                     l5446:	
  1185                           ;lcd.c: 105: ADCON1 = 0b00000010;
  1186  077D  3002               	movlw	(02h)
  1187  077E  1683               	bsf	status, 5	;RP0=1, select bank1
  1188  077F  1303               	bcf	status, 6	;RP1=0, select bank1
  1189  0780  009F               	movwf	(159)^080h	;volatile
  1190                           	line	108
  1191                           	
  1192  0781                     l5448:	
  1193                           ;lcd.c: 108: PORTD = 0;
  1194  0781  1283               	bcf	status, 5	;RP0=0, select bank0
  1195  0782  1303               	bcf	status, 6	;RP1=0, select bank0
  1196  0783  0188               	clrf	(8)	;volatile
  1197                           	line	109
  1198                           	
  1199  0784                     l5450:	
  1200                           ;lcd.c: 109: PORTE = 0;
  1201  0784  0189               	clrf	(9)	;volatile
  1202                           	line	111
  1203                           	
  1204  0785                     l5452:	
  1205                           ;lcd.c: 111: TRISD = 0b00000000;
  1206  0785  1683               	bsf	status, 5	;RP0=1, select bank1
  1207  0786  1303               	bcf	status, 6	;RP1=0, select bank1
  1208  0787  0188               	clrf	(136)^080h	;volatile
  1209                           	line	112
  1210                           	
  1211  0788                     l5454:	
  1212                           ;lcd.c: 112: TRISE = 0b00000000;
  1213  0788  0189               	clrf	(137)^080h	;volatile
  1214                           	line	115
  1215                           	
  1216  0789                     l5456:	
  1217                           ;lcd.c: 115: lcd_write_control(0b00000001);
  1218  0789  3001               	movlw	(01h)
  1219  078A  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1220                           	line	116
  1221                           	
  1222  078F                     l5458:	
  1223                           ;lcd.c: 116: lcd_write_control(0b00111000);
  1224  078F  3038               	movlw	(038h)
  1225  0790  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1226                           	line	117
  1227                           	
  1228  0795                     l5460:	
  1229                           ;lcd.c: 117: lcd_write_control(0b00001100);
  1230  0795  300C               	movlw	(0Ch)
  1231  0796  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1232                           	line	118
  1233                           	
  1234  079B                     l5462:	
  1235                           ;lcd.c: 118: lcd_write_control(0b00000110);
  1236  079B  3006               	movlw	(06h)
  1237  079C  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1238                           	line	119
  1239                           	
  1240  07A1                     l5464:	
  1241                           ;lcd.c: 119: lcd_write_control(0b00000010);
  1242  07A1  3002               	movlw	(02h)
  1243  07A2  120A  158A  27E4   	fcall	_lcd_write_control
              120A  118A         
  1244                           	line	121
  1245                           	
  1246  07A7                     l2273:	
  1247  07A7  0008               	return
  1248                           	opt stack 0
  1249                           GLOBAL	__end_of_lcd_init
  1250  07A8                     	__end_of_lcd_init:
  1251 ;; =============== function _lcd_init ends ============
  1252                           
  1253                           	signat	_lcd_init,88
  1254                           	global	_lcd_write_control
  1255                           psect	text459,local,class=CODE,delta=2
  1256                           global __ptext459
  1257  0FE4                     __ptext459:
  1258                           
  1259 ;; *************** function _lcd_write_control *****************
  1260 ;; Defined at:
  1261 ;;		line 18 in file "E:\Mechatronics 2\Assignment2\lcd.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  databyte        1    wreg     unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  databyte        1    2[BANK1 ] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;		None               void
  1268 ;; Registers used:
  1269 ;;		wreg
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       0       0       0       0
  1276 ;;      Locals:         0       0       1       0       0
  1277 ;;      Temps:          0       0       2       0       0
  1278 ;;      Totals:         0       0       3       0       0
  1279 ;;Total ram usage:        3 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    4
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_lcd_init
  1286 ;;		_readDistance
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           psect	text459
  1290                           	file	"E:\Mechatronics 2\Assignment2\lcd.c"
  1291                           	line	18
  1292                           	global	__size_of_lcd_write_control
  1293  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  1294                           	
  1295  0FE4                     _lcd_write_control:	
  1296                           	opt	stack 1
  1297                           ; Regs used in _lcd_write_control: [wreg]
  1298                           ;lcd_write_control@databyte stored from wreg
  1299  0FE4  1683               	bsf	status, 5	;RP0=1, select bank1
  1300  0FE5  1303               	bcf	status, 6	;RP1=0, select bank1
  1301  0FE6  00D3               	movwf	(lcd_write_control@databyte)^080h
  1302                           	line	19
  1303                           	
  1304  0FE7                     l5438:	
  1305                           ;lcd.c: 19: RE2 = 0;
  1306  0FE7  1283               	bcf	status, 5	;RP0=0, select bank0
  1307  0FE8  1303               	bcf	status, 6	;RP1=0, select bank0
  1308  0FE9  1109               	bcf	(74/8),(74)&7
  1309                           	line	20
  1310                           ;lcd.c: 20: RE1 = 0;
  1311  0FEA  1089               	bcf	(73/8),(73)&7
  1312                           	line	21
  1313                           ;lcd.c: 21: RE0 = 0;
  1314  0FEB  1009               	bcf	(72/8),(72)&7
  1315                           	line	22
  1316                           	
  1317  0FEC                     l5440:	
  1318                           ;lcd.c: 22: PORTD = databyte;
  1319  0FEC  1683               	bsf	status, 5	;RP0=1, select bank1
  1320  0FED  1303               	bcf	status, 6	;RP1=0, select bank1
  1321  0FEE  0853               	movf	(lcd_write_control@databyte)^080h,w
  1322  0FEF  1283               	bcf	status, 5	;RP0=0, select bank0
  1323  0FF0  1303               	bcf	status, 6	;RP1=0, select bank0
  1324  0FF1  0088               	movwf	(8)	;volatile
  1325                           	line	23
  1326                           	
  1327  0FF2                     l5442:	
  1328                           ;lcd.c: 23: RE2 = 1;
  1329  0FF2  1509               	bsf	(74/8),(74)&7
  1330                           	line	24
  1331                           	
  1332  0FF3                     l5444:	
  1333                           ;lcd.c: 24: RE2 = 0;
  1334  0FF3  1109               	bcf	(74/8),(74)&7
  1335                           	line	25
  1336                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  1337                           	opt asmopt_off
  1338  0FF4  300D               movlw	13
  1339  0FF5  1683               	bsf	status, 5	;RP0=1, select bank1
  1340  0FF6  1303               	bcf	status, 6	;RP1=0, select bank1
  1341  0FF7  00D2               movwf	((??_lcd_write_control+0)^080h+0+1),f
  1342  0FF8  30FB               	movlw	251
  1343  0FF9  00D1               movwf	((??_lcd_write_control+0)^080h+0),f
  1344  0FFA                     u3717:
  1345  0FFA  0BD1               	decfsz	((??_lcd_write_control+0)^080h+0),f
  1346  0FFB  2FFA               	goto	u3717
  1347  0FFC  0BD2               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  1348  0FFD  2FFA               	goto	u3717
  1349  0FFE  2FFF               	nop2
  1350                           opt asmopt_on
  1351                           
  1352                           	line	26
  1353                           	
  1354  0FFF                     l2243:	
  1355  0FFF  0008               	return
  1356                           	opt stack 0
  1357                           GLOBAL	__end_of_lcd_write_control
  1358  1000                     	__end_of_lcd_write_control:
  1359 ;; =============== function _lcd_write_control ends ============
  1360                           
  1361                           	signat	_lcd_write_control,4216
  1362                           	global	_rotate
  1363                           psect	text460,local,class=CODE,delta=2
  1364                           global __ptext460
  1365  026A                     __ptext460:
  1366                           
  1367 ;; *************** function _rotate *****************
  1368 ;; Defined at:
  1369 ;;		line 217 in file "E:\Mechatronics 2\Assignment2\Main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  steps           1    wreg     unsigned char 
  1372 ;;  direction       1    0[BANK1 ] unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  steps           1    3[BANK1 ] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;		None               void
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       0       1       0       0
  1385 ;;      Locals:         0       0       1       0       0
  1386 ;;      Temps:          0       0       2       0       0
  1387 ;;      Totals:         0       0       4       0       0
  1388 ;;Total ram usage:        4 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    4
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           psect	text460
  1398                           	file	"E:\Mechatronics 2\Assignment2\Main.c"
  1399                           	line	217
  1400                           	global	__size_of_rotate
  1401  012B                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  1402                           	
  1403  026A                     _rotate:	
  1404                           	opt	stack 3
  1405                           ; Regs used in _rotate: [wreg-fsr0h+status,2+status,0]
  1406                           ;rotate@steps stored from wreg
  1407                           	line	220
  1408  026A  1683               	bsf	status, 5	;RP0=1, select bank1
  1409  026B  1303               	bcf	status, 6	;RP1=0, select bank1
  1410  026C  00D4               	movwf	(rotate@steps)^080h
  1411                           	
  1412  026D                     l5376:	
  1413                           ;Main.c: 220: for(;steps!=0;--steps)
  1414  026D  08D4               	movf	(rotate@steps)^080h,f
  1415  026E  1D03               	skipz
  1416  026F  2A71               	goto	u3631
  1417  0270  2A72               	goto	u3630
  1418  0271                     u3631:
  1419  0271  2A74               	goto	l5380
  1420  0272                     u3630:
  1421  0272  2B90               	goto	l5436
  1422                           	
  1423  0273                     l5378:	
  1424  0273  2B90               	goto	l5436
  1425                           	line	221
  1426                           	
  1427  0274                     l770:	
  1428                           	line	222
  1429                           	
  1430  0274                     l5380:	
  1431                           ;Main.c: 221: {
  1432                           ;Main.c: 222: if (direction == 0)
  1433  0274  08D1               	movf	(rotate@direction)^080h,f
  1434  0275  1D03               	skipz
  1435  0276  2A78               	goto	u3641
  1436  0277  2A79               	goto	u3640
  1437  0278                     u3641:
  1438  0278  2AF6               	goto	l5406
  1439  0279                     u3640:
  1440  0279  2AD9               	goto	l5404
  1441                           	line	224
  1442                           	
  1443  027A                     l5382:	
  1444                           ;Main.c: 223: {
  1445                           ;Main.c: 224: switch(current_step)
  1446  027A  2AD9               	goto	l5404
  1447                           	line	226
  1448                           ;Main.c: 225: {
  1449                           ;Main.c: 226: case 0b00111100: PORTC = 0b00101110; current_step = 0b00101110;
  1450                           	
  1451  027B                     l774:	
  1452                           	
  1453  027B                     l5384:	
  1454  027B  302E               	movlw	(02Eh)
  1455  027C  1283               	bcf	status, 5	;RP0=0, select bank0
  1456  027D  1303               	bcf	status, 6	;RP1=0, select bank0
  1457  027E  0087               	movwf	(7)	;volatile
  1458  027F  302E               	movlw	(02Eh)
  1459  0280  1683               	bsf	status, 5	;RP0=1, select bank1
  1460  0281  1303               	bcf	status, 6	;RP1=0, select bank1
  1461  0282  00D2               	movwf	(??_rotate+0)^080h+0
  1462  0283  0852               	movf	(??_rotate+0)^080h+0,w
  1463  0284  00D6               	movwf	(_current_step)^080h
  1464                           	line	227
  1465                           ;Main.c: 227: break;
  1466  0285  2B7B               	goto	l5432
  1467                           	line	228
  1468                           ;Main.c: 228: case 0b00101110: PORTC = 0b00101011; current_step = 0b00101011;
  1469                           	
  1470  0286                     l776:	
  1471                           	
  1472  0286                     l5386:	
  1473  0286  302B               	movlw	(02Bh)
  1474  0287  1283               	bcf	status, 5	;RP0=0, select bank0
  1475  0288  1303               	bcf	status, 6	;RP1=0, select bank0
  1476  0289  0087               	movwf	(7)	;volatile
  1477  028A  302B               	movlw	(02Bh)
  1478  028B  1683               	bsf	status, 5	;RP0=1, select bank1
  1479  028C  1303               	bcf	status, 6	;RP1=0, select bank1
  1480  028D  00D2               	movwf	(??_rotate+0)^080h+0
  1481  028E  0852               	movf	(??_rotate+0)^080h+0,w
  1482  028F  00D6               	movwf	(_current_step)^080h
  1483                           	line	229
  1484                           ;Main.c: 229: break;
  1485  0290  2B7B               	goto	l5432
  1486                           	line	230
  1487                           ;Main.c: 230: case 0b00101011: PORTC = 0b00100111; current_step = 0b00100111;
  1488                           	
  1489  0291                     l777:	
  1490                           	
  1491  0291                     l5388:	
  1492  0291  3027               	movlw	(027h)
  1493  0292  1283               	bcf	status, 5	;RP0=0, select bank0
  1494  0293  1303               	bcf	status, 6	;RP1=0, select bank0
  1495  0294  0087               	movwf	(7)	;volatile
  1496  0295  3027               	movlw	(027h)
  1497  0296  1683               	bsf	status, 5	;RP0=1, select bank1
  1498  0297  1303               	bcf	status, 6	;RP1=0, select bank1
  1499  0298  00D2               	movwf	(??_rotate+0)^080h+0
  1500  0299  0852               	movf	(??_rotate+0)^080h+0,w
  1501  029A  00D6               	movwf	(_current_step)^080h
  1502                           	line	231
  1503                           ;Main.c: 231: break;
  1504  029B  2B7B               	goto	l5432
  1505                           	line	232
  1506                           ;Main.c: 232: case 0b00100111: PORTC = 0b00110101; current_step = 0b00110101;
  1507                           	
  1508  029C                     l778:	
  1509                           	
  1510  029C                     l5390:	
  1511  029C  3035               	movlw	(035h)
  1512  029D  1283               	bcf	status, 5	;RP0=0, select bank0
  1513  029E  1303               	bcf	status, 6	;RP1=0, select bank0
  1514  029F  0087               	movwf	(7)	;volatile
  1515  02A0  3035               	movlw	(035h)
  1516  02A1  1683               	bsf	status, 5	;RP0=1, select bank1
  1517  02A2  1303               	bcf	status, 6	;RP1=0, select bank1
  1518  02A3  00D2               	movwf	(??_rotate+0)^080h+0
  1519  02A4  0852               	movf	(??_rotate+0)^080h+0,w
  1520  02A5  00D6               	movwf	(_current_step)^080h
  1521                           	line	233
  1522                           ;Main.c: 233: break;
  1523  02A6  2B7B               	goto	l5432
  1524                           	line	234
  1525                           ;Main.c: 234: case 0b00110101: PORTC = 0b00010111; current_step = 0b00010111;
  1526                           	
  1527  02A7                     l779:	
  1528                           	
  1529  02A7                     l5392:	
  1530  02A7  3017               	movlw	(017h)
  1531  02A8  1283               	bcf	status, 5	;RP0=0, select bank0
  1532  02A9  1303               	bcf	status, 6	;RP1=0, select bank0
  1533  02AA  0087               	movwf	(7)	;volatile
  1534  02AB  3017               	movlw	(017h)
  1535  02AC  1683               	bsf	status, 5	;RP0=1, select bank1
  1536  02AD  1303               	bcf	status, 6	;RP1=0, select bank1
  1537  02AE  00D2               	movwf	(??_rotate+0)^080h+0
  1538  02AF  0852               	movf	(??_rotate+0)^080h+0,w
  1539  02B0  00D6               	movwf	(_current_step)^080h
  1540                           	line	235
  1541                           ;Main.c: 235: break;
  1542  02B1  2B7B               	goto	l5432
  1543                           	line	236
  1544                           ;Main.c: 236: case 0b00010111: PORTC = 0b00011011; current_step = 0b00011011;
  1545                           	
  1546  02B2                     l780:	
  1547                           	
  1548  02B2                     l5394:	
  1549  02B2  301B               	movlw	(01Bh)
  1550  02B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1551  02B4  1303               	bcf	status, 6	;RP1=0, select bank0
  1552  02B5  0087               	movwf	(7)	;volatile
  1553  02B6  301B               	movlw	(01Bh)
  1554  02B7  1683               	bsf	status, 5	;RP0=1, select bank1
  1555  02B8  1303               	bcf	status, 6	;RP1=0, select bank1
  1556  02B9  00D2               	movwf	(??_rotate+0)^080h+0
  1557  02BA  0852               	movf	(??_rotate+0)^080h+0,w
  1558  02BB  00D6               	movwf	(_current_step)^080h
  1559                           	line	237
  1560                           ;Main.c: 237: break;
  1561  02BC  2B7B               	goto	l5432
  1562                           	line	238
  1563                           ;Main.c: 238: case 0b00011011: PORTC = 0b00011110; current_step = 0b00011110;
  1564                           	
  1565  02BD                     l781:	
  1566                           	
  1567  02BD                     l5396:	
  1568  02BD  301E               	movlw	(01Eh)
  1569  02BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1570  02BF  1303               	bcf	status, 6	;RP1=0, select bank0
  1571  02C0  0087               	movwf	(7)	;volatile
  1572  02C1  301E               	movlw	(01Eh)
  1573  02C2  1683               	bsf	status, 5	;RP0=1, select bank1
  1574  02C3  1303               	bcf	status, 6	;RP1=0, select bank1
  1575  02C4  00D2               	movwf	(??_rotate+0)^080h+0
  1576  02C5  0852               	movf	(??_rotate+0)^080h+0,w
  1577  02C6  00D6               	movwf	(_current_step)^080h
  1578                           	line	239
  1579                           ;Main.c: 239: break;
  1580  02C7  2B7B               	goto	l5432
  1581                           	line	240
  1582                           ;Main.c: 240: case 0b00011110: PORTC = 0b00111100; current_step = 0b00111100;
  1583                           	
  1584  02C8                     l782:	
  1585                           	
  1586  02C8                     l5398:	
  1587  02C8  303C               	movlw	(03Ch)
  1588  02C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1589  02CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1590  02CB  0087               	movwf	(7)	;volatile
  1591  02CC  303C               	movlw	(03Ch)
  1592  02CD  1683               	bsf	status, 5	;RP0=1, select bank1
  1593  02CE  1303               	bcf	status, 6	;RP1=0, select bank1
  1594  02CF  00D2               	movwf	(??_rotate+0)^080h+0
  1595  02D0  0852               	movf	(??_rotate+0)^080h+0,w
  1596  02D1  00D6               	movwf	(_current_step)^080h
  1597                           	line	241
  1598                           ;Main.c: 241: break;
  1599  02D2  2B7B               	goto	l5432
  1600                           	line	243
  1601                           ;Main.c: 243: default: PORTC = 0b00111001;
  1602                           	
  1603  02D3                     l783:	
  1604                           	
  1605  02D3                     l5400:	
  1606  02D3  3039               	movlw	(039h)
  1607  02D4  1283               	bcf	status, 5	;RP0=0, select bank0
  1608  02D5  1303               	bcf	status, 6	;RP1=0, select bank0
  1609  02D6  0087               	movwf	(7)	;volatile
  1610                           	line	244
  1611                           ;Main.c: 244: break;
  1612  02D7  2B7B               	goto	l5432
  1613                           	line	245
  1614                           	
  1615  02D8                     l5402:	
  1616                           ;Main.c: 245: }
  1617  02D8  2B7B               	goto	l5432
  1618                           	line	224
  1619                           	
  1620  02D9                     l773:	
  1621                           	
  1622  02D9                     l5404:	
  1623  02D9  1683               	bsf	status, 5	;RP0=1, select bank1
  1624  02DA  1303               	bcf	status, 6	;RP1=0, select bank1
  1625  02DB  0856               	movf	(_current_step)^080h,w
  1626                           	; Switch size 1, requested type "space"
  1627                           ; Number of cases is 8, Range of values is 23 to 60
  1628                           ; switch strategies available:
  1629                           ; Name         Instructions Cycles
  1630                           ; simple_byte           25    13 (average)
  1631                           ; direct_byte          125    11 (fixed)
  1632                           ; jumptable            263     9 (fixed)
  1633                           ;	Chosen strategy is simple_byte
  1634                           
  1635                           	opt asmopt_off
  1636  02DC  3A17               	xorlw	23^0	; case 23
  1637  02DD  1903               	skipnz
  1638  02DE  2AB2               	goto	l5394
  1639  02DF  3A0C               	xorlw	27^23	; case 27
  1640  02E0  1903               	skipnz
  1641  02E1  2ABD               	goto	l5396
  1642  02E2  3A05               	xorlw	30^27	; case 30
  1643  02E3  1903               	skipnz
  1644  02E4  2AC8               	goto	l5398
  1645  02E5  3A39               	xorlw	39^30	; case 39
  1646  02E6  1903               	skipnz
  1647  02E7  2A9C               	goto	l5390
  1648  02E8  3A0C               	xorlw	43^39	; case 43
  1649  02E9  1903               	skipnz
  1650  02EA  2A91               	goto	l5388
  1651  02EB  3A05               	xorlw	46^43	; case 46
  1652  02EC  1903               	skipnz
  1653  02ED  2A86               	goto	l5386
  1654  02EE  3A1B               	xorlw	53^46	; case 53
  1655  02EF  1903               	skipnz
  1656  02F0  2AA7               	goto	l5392
  1657  02F1  3A09               	xorlw	60^53	; case 60
  1658  02F2  1903               	skipnz
  1659  02F3  2A7B               	goto	l5384
  1660  02F4  2AD3               	goto	l5400
  1661                           	opt asmopt_on
  1662                           
  1663                           	line	245
  1664                           	
  1665  02F5                     l775:	
  1666                           	line	246
  1667                           ;Main.c: 246: }
  1668  02F5  2B7B               	goto	l5432
  1669                           	line	247
  1670                           	
  1671  02F6                     l772:	
  1672                           	
  1673  02F6                     l5406:	
  1674                           ;Main.c: 247: else if (direction == 1)
  1675  02F6  0851               	movf	(rotate@direction)^080h,w
  1676  02F7  3A01               	xorlw	01h
  1677  02F8  1D03               	skipz
  1678  02F9  2AFB               	goto	u3651
  1679  02FA  2AFC               	goto	u3650
  1680  02FB                     u3651:
  1681  02FB  2B7B               	goto	l5432
  1682  02FC                     u3650:
  1683  02FC  2B5C               	goto	l5430
  1684                           	line	249
  1685                           	
  1686  02FD                     l5408:	
  1687                           ;Main.c: 248: {
  1688                           ;Main.c: 249: switch(current_step)
  1689  02FD  2B5C               	goto	l5430
  1690                           	line	251
  1691                           ;Main.c: 250: {
  1692                           ;Main.c: 251: case 0b00111100: PORTC = 0b00011110; current_step = 0b00011110;
  1693                           	
  1694  02FE                     l787:	
  1695                           	
  1696  02FE                     l5410:	
  1697  02FE  301E               	movlw	(01Eh)
  1698  02FF  1283               	bcf	status, 5	;RP0=0, select bank0
  1699  0300  1303               	bcf	status, 6	;RP1=0, select bank0
  1700  0301  0087               	movwf	(7)	;volatile
  1701  0302  301E               	movlw	(01Eh)
  1702  0303  1683               	bsf	status, 5	;RP0=1, select bank1
  1703  0304  1303               	bcf	status, 6	;RP1=0, select bank1
  1704  0305  00D2               	movwf	(??_rotate+0)^080h+0
  1705  0306  0852               	movf	(??_rotate+0)^080h+0,w
  1706  0307  00D6               	movwf	(_current_step)^080h
  1707                           	line	252
  1708                           ;Main.c: 252: break;
  1709  0308  2B7B               	goto	l5432
  1710                           	line	253
  1711                           ;Main.c: 253: case 0b00101110: PORTC = 0b00111100; current_step = 0b00111100;
  1712                           	
  1713  0309                     l789:	
  1714                           	
  1715  0309                     l5412:	
  1716  0309  303C               	movlw	(03Ch)
  1717  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  1718  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  1719  030C  0087               	movwf	(7)	;volatile
  1720  030D  303C               	movlw	(03Ch)
  1721  030E  1683               	bsf	status, 5	;RP0=1, select bank1
  1722  030F  1303               	bcf	status, 6	;RP1=0, select bank1
  1723  0310  00D2               	movwf	(??_rotate+0)^080h+0
  1724  0311  0852               	movf	(??_rotate+0)^080h+0,w
  1725  0312  00D6               	movwf	(_current_step)^080h
  1726                           	line	254
  1727                           ;Main.c: 254: break;
  1728  0313  2B7B               	goto	l5432
  1729                           	line	255
  1730                           ;Main.c: 255: case 0b00101011: PORTC = 0b00101110; current_step = 0b00101110;
  1731                           	
  1732  0314                     l790:	
  1733                           	
  1734  0314                     l5414:	
  1735  0314  302E               	movlw	(02Eh)
  1736  0315  1283               	bcf	status, 5	;RP0=0, select bank0
  1737  0316  1303               	bcf	status, 6	;RP1=0, select bank0
  1738  0317  0087               	movwf	(7)	;volatile
  1739  0318  302E               	movlw	(02Eh)
  1740  0319  1683               	bsf	status, 5	;RP0=1, select bank1
  1741  031A  1303               	bcf	status, 6	;RP1=0, select bank1
  1742  031B  00D2               	movwf	(??_rotate+0)^080h+0
  1743  031C  0852               	movf	(??_rotate+0)^080h+0,w
  1744  031D  00D6               	movwf	(_current_step)^080h
  1745                           	line	256
  1746                           ;Main.c: 256: break;
  1747  031E  2B7B               	goto	l5432
  1748                           	line	257
  1749                           ;Main.c: 257: case 0b00100111: PORTC = 0b00101011; current_step = 0b00101011;
  1750                           	
  1751  031F                     l791:	
  1752                           	
  1753  031F                     l5416:	
  1754  031F  302B               	movlw	(02Bh)
  1755  0320  1283               	bcf	status, 5	;RP0=0, select bank0
  1756  0321  1303               	bcf	status, 6	;RP1=0, select bank0
  1757  0322  0087               	movwf	(7)	;volatile
  1758  0323  302B               	movlw	(02Bh)
  1759  0324  1683               	bsf	status, 5	;RP0=1, select bank1
  1760  0325  1303               	bcf	status, 6	;RP1=0, select bank1
  1761  0326  00D2               	movwf	(??_rotate+0)^080h+0
  1762  0327  0852               	movf	(??_rotate+0)^080h+0,w
  1763  0328  00D6               	movwf	(_current_step)^080h
  1764                           	line	258
  1765                           ;Main.c: 258: break;
  1766  0329  2B7B               	goto	l5432
  1767                           	line	259
  1768                           ;Main.c: 259: case 0b00110101: PORTC = 0b00100111; current_step = 0b00100111;
  1769                           	
  1770  032A                     l792:	
  1771                           	
  1772  032A                     l5418:	
  1773  032A  3027               	movlw	(027h)
  1774  032B  1283               	bcf	status, 5	;RP0=0, select bank0
  1775  032C  1303               	bcf	status, 6	;RP1=0, select bank0
  1776  032D  0087               	movwf	(7)	;volatile
  1777  032E  3027               	movlw	(027h)
  1778  032F  1683               	bsf	status, 5	;RP0=1, select bank1
  1779  0330  1303               	bcf	status, 6	;RP1=0, select bank1
  1780  0331  00D2               	movwf	(??_rotate+0)^080h+0
  1781  0332  0852               	movf	(??_rotate+0)^080h+0,w
  1782  0333  00D6               	movwf	(_current_step)^080h
  1783                           	line	260
  1784                           ;Main.c: 260: break;
  1785  0334  2B7B               	goto	l5432
  1786                           	line	261
  1787                           ;Main.c: 261: case 0b00010111: PORTC = 0b00110101; current_step = 0b00110101;
  1788                           	
  1789  0335                     l793:	
  1790                           	
  1791  0335                     l5420:	
  1792  0335  3035               	movlw	(035h)
  1793  0336  1283               	bcf	status, 5	;RP0=0, select bank0
  1794  0337  1303               	bcf	status, 6	;RP1=0, select bank0
  1795  0338  0087               	movwf	(7)	;volatile
  1796  0339  3035               	movlw	(035h)
  1797  033A  1683               	bsf	status, 5	;RP0=1, select bank1
  1798  033B  1303               	bcf	status, 6	;RP1=0, select bank1
  1799  033C  00D2               	movwf	(??_rotate+0)^080h+0
  1800  033D  0852               	movf	(??_rotate+0)^080h+0,w
  1801  033E  00D6               	movwf	(_current_step)^080h
  1802                           	line	262
  1803                           ;Main.c: 262: break;
  1804  033F  2B7B               	goto	l5432
  1805                           	line	263
  1806                           ;Main.c: 263: case 0b00011011: PORTC = 0b00010111; current_step = 0b00010111;
  1807                           	
  1808  0340                     l794:	
  1809                           	
  1810  0340                     l5422:	
  1811  0340  3017               	movlw	(017h)
  1812  0341  1283               	bcf	status, 5	;RP0=0, select bank0
  1813  0342  1303               	bcf	status, 6	;RP1=0, select bank0
  1814  0343  0087               	movwf	(7)	;volatile
  1815  0344  3017               	movlw	(017h)
  1816  0345  1683               	bsf	status, 5	;RP0=1, select bank1
  1817  0346  1303               	bcf	status, 6	;RP1=0, select bank1
  1818  0347  00D2               	movwf	(??_rotate+0)^080h+0
  1819  0348  0852               	movf	(??_rotate+0)^080h+0,w
  1820  0349  00D6               	movwf	(_current_step)^080h
  1821                           	line	264
  1822                           ;Main.c: 264: break;
  1823  034A  2B7B               	goto	l5432
  1824                           	line	265
  1825                           ;Main.c: 265: case 0b00011110: PORTC = 0b00011011; current_step = 0b00011011;
  1826                           	
  1827  034B                     l795:	
  1828                           	
  1829  034B                     l5424:	
  1830  034B  301B               	movlw	(01Bh)
  1831  034C  1283               	bcf	status, 5	;RP0=0, select bank0
  1832  034D  1303               	bcf	status, 6	;RP1=0, select bank0
  1833  034E  0087               	movwf	(7)	;volatile
  1834  034F  301B               	movlw	(01Bh)
  1835  0350  1683               	bsf	status, 5	;RP0=1, select bank1
  1836  0351  1303               	bcf	status, 6	;RP1=0, select bank1
  1837  0352  00D2               	movwf	(??_rotate+0)^080h+0
  1838  0353  0852               	movf	(??_rotate+0)^080h+0,w
  1839  0354  00D6               	movwf	(_current_step)^080h
  1840                           	line	266
  1841                           ;Main.c: 266: break;
  1842  0355  2B7B               	goto	l5432
  1843                           	line	268
  1844                           ;Main.c: 268: default: PORTC = 0b00111001;
  1845                           	
  1846  0356                     l796:	
  1847                           	
  1848  0356                     l5426:	
  1849  0356  3039               	movlw	(039h)
  1850  0357  1283               	bcf	status, 5	;RP0=0, select bank0
  1851  0358  1303               	bcf	status, 6	;RP1=0, select bank0
  1852  0359  0087               	movwf	(7)	;volatile
  1853                           	line	269
  1854                           ;Main.c: 269: break;
  1855  035A  2B7B               	goto	l5432
  1856                           	line	270
  1857                           	
  1858  035B                     l5428:	
  1859                           ;Main.c: 270: }
  1860  035B  2B7B               	goto	l5432
  1861                           	line	249
  1862                           	
  1863  035C                     l786:	
  1864                           	
  1865  035C                     l5430:	
  1866  035C  1683               	bsf	status, 5	;RP0=1, select bank1
  1867  035D  1303               	bcf	status, 6	;RP1=0, select bank1
  1868  035E  0856               	movf	(_current_step)^080h,w
  1869                           	; Switch size 1, requested type "space"
  1870                           ; Number of cases is 8, Range of values is 23 to 60
  1871                           ; switch strategies available:
  1872                           ; Name         Instructions Cycles
  1873                           ; simple_byte           25    13 (average)
  1874                           ; direct_byte          125    11 (fixed)
  1875                           ; jumptable            263     9 (fixed)
  1876                           ;	Chosen strategy is simple_byte
  1877                           
  1878                           	opt asmopt_off
  1879  035F  3A17               	xorlw	23^0	; case 23
  1880  0360  1903               	skipnz
  1881  0361  2B35               	goto	l5420
  1882  0362  3A0C               	xorlw	27^23	; case 27
  1883  0363  1903               	skipnz
  1884  0364  2B40               	goto	l5422
  1885  0365  3A05               	xorlw	30^27	; case 30
  1886  0366  1903               	skipnz
  1887  0367  2B4B               	goto	l5424
  1888  0368  3A39               	xorlw	39^30	; case 39
  1889  0369  1903               	skipnz
  1890  036A  2B1F               	goto	l5416
  1891  036B  3A0C               	xorlw	43^39	; case 43
  1892  036C  1903               	skipnz
  1893  036D  2B14               	goto	l5414
  1894  036E  3A05               	xorlw	46^43	; case 46
  1895  036F  1903               	skipnz
  1896  0370  2B09               	goto	l5412
  1897  0371  3A1B               	xorlw	53^46	; case 53
  1898  0372  1903               	skipnz
  1899  0373  2B2A               	goto	l5418
  1900  0374  3A09               	xorlw	60^53	; case 60
  1901  0375  1903               	skipnz
  1902  0376  2AFE               	goto	l5410
  1903  0377  2B56               	goto	l5426
  1904                           	opt asmopt_on
  1905                           
  1906                           	line	270
  1907                           	
  1908  0378                     l788:	
  1909                           	line	271
  1910                           ;Main.c: 271: }
  1911  0378  2B7B               	goto	l5432
  1912                           	line	272
  1913                           	
  1914  0379                     l785:	
  1915  0379  2B7B               	goto	l5432
  1916                           	line	275
  1917                           ;Main.c: 272: else
  1918                           ;Main.c: 273: {
  1919                           	
  1920  037A                     l797:	
  1921  037A  2B7B               	goto	l5432
  1922                           	
  1923  037B                     l784:	
  1924                           	line	277
  1925                           	
  1926  037B                     l5432:	
  1927                           ;Main.c: 275: }
  1928                           ;Main.c: 277: _delay((unsigned long)((15)*(20000000/4000.0)));
  1929                           	opt asmopt_off
  1930  037B  3062               movlw	98
  1931  037C  1683               	bsf	status, 5	;RP0=1, select bank1
  1932  037D  1303               	bcf	status, 6	;RP1=0, select bank1
  1933  037E  00D3               movwf	((??_rotate+0)^080h+0+1),f
  1934  037F  3065               	movlw	101
  1935  0380  00D2               movwf	((??_rotate+0)^080h+0),f
  1936  0381                     u3727:
  1937  0381  0BD2               	decfsz	((??_rotate+0)^080h+0),f
  1938  0382  2B81               	goto	u3727
  1939  0383  0BD3               	decfsz	((??_rotate+0)^080h+0+1),f
  1940  0384  2B81               	goto	u3727
  1941  0385  2B86               	nop2
  1942                           opt asmopt_on
  1943                           
  1944                           	line	220
  1945                           	
  1946  0386                     l5434:	
  1947  0386  3001               	movlw	low(01h)
  1948  0387  1683               	bsf	status, 5	;RP0=1, select bank1
  1949  0388  1303               	bcf	status, 6	;RP1=0, select bank1
  1950  0389  02D4               	subwf	(rotate@steps)^080h,f
  1951  038A  08D4               	movf	(rotate@steps)^080h,f
  1952  038B  1D03               	skipz
  1953  038C  2B8E               	goto	u3661
  1954  038D  2B8F               	goto	u3660
  1955  038E                     u3661:
  1956  038E  2A74               	goto	l5380
  1957  038F                     u3660:
  1958  038F  2B90               	goto	l5436
  1959                           	
  1960  0390                     l771:	
  1961                           	line	280
  1962                           	
  1963  0390                     l5436:	
  1964                           ;Main.c: 278: }
  1965                           ;Main.c: 280: PORTC = 0b00111001;
  1966  0390  3039               	movlw	(039h)
  1967  0391  1283               	bcf	status, 5	;RP0=0, select bank0
  1968  0392  1303               	bcf	status, 6	;RP1=0, select bank0
  1969  0393  0087               	movwf	(7)	;volatile
  1970                           	line	281
  1971                           	
  1972  0394                     l798:	
  1973  0394  0008               	return
  1974                           	opt stack 0
  1975                           GLOBAL	__end_of_rotate
  1976  0395                     	__end_of_rotate:
  1977 ;; =============== function _rotate ends ============
  1978                           
  1979                           	signat	_rotate,8312
  1980                           	global	_init_adc
  1981                           psect	text461,local,class=CODE,delta=2
  1982                           global __ptext461
  1983  0FB6                     __ptext461:
  1984                           
  1985 ;; *************** function _init_adc *****************
  1986 ;; Defined at:
  1987 ;;		line 46 in file "E:\Mechatronics 2\Assignment2\adc.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;		None               void
  1994 ;; Registers used:
  1995 ;;		wreg, status,2
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0
  2003 ;;      Temps:          0       0       1       0       0
  2004 ;;      Totals:         0       0       1       0       0
  2005 ;;Total ram usage:        1 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    4
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_init
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           psect	text461
  2015                           	file	"E:\Mechatronics 2\Assignment2\adc.c"
  2016                           	line	46
  2017                           	global	__size_of_init_adc
  2018  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  2019                           	
  2020  0FB6                     _init_adc:	
  2021                           	opt	stack 2
  2022                           ; Regs used in _init_adc: [wreg+status,2]
  2023                           	line	48
  2024                           	
  2025  0FB6                     l5366:	
  2026                           ;adc.c: 48: PORTA = 0;
  2027  0FB6  1283               	bcf	status, 5	;RP0=0, select bank0
  2028  0FB7  1303               	bcf	status, 6	;RP1=0, select bank0
  2029  0FB8  0185               	clrf	(5)	;volatile
  2030                           	line	49
  2031                           	
  2032  0FB9                     l5368:	
  2033                           ;adc.c: 49: TRISA = 0b00111111;
  2034  0FB9  303F               	movlw	(03Fh)
  2035  0FBA  1683               	bsf	status, 5	;RP0=1, select bank1
  2036  0FBB  1303               	bcf	status, 6	;RP1=0, select bank1
  2037  0FBC  0085               	movwf	(133)^080h	;volatile
  2038                           	line	52
  2039                           	
  2040  0FBD                     l5370:	
  2041                           ;adc.c: 52: ADCON0 = 0b10100001;
  2042  0FBD  30A1               	movlw	(0A1h)
  2043  0FBE  1283               	bcf	status, 5	;RP0=0, select bank0
  2044  0FBF  1303               	bcf	status, 6	;RP1=0, select bank0
  2045  0FC0  009F               	movwf	(31)	;volatile
  2046                           	line	53
  2047                           	
  2048  0FC1                     l5372:	
  2049                           ;adc.c: 53: ADCON1 = 0b0000010;
  2050  0FC1  3002               	movlw	(02h)
  2051  0FC2  1683               	bsf	status, 5	;RP0=1, select bank1
  2052  0FC3  1303               	bcf	status, 6	;RP1=0, select bank1
  2053  0FC4  009F               	movwf	(159)^080h	;volatile
  2054                           	line	55
  2055                           	
  2056  0FC5                     l5374:	
  2057                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  2058                           	opt asmopt_off
  2059  0FC5  3053               movlw	83
  2060  0FC6  00D1               movwf	(??_init_adc+0)^080h+0,f
  2061  0FC7                     u3737:
  2062  0FC7  0BD1               decfsz	(??_init_adc+0)^080h+0,f
  2063  0FC8  2FC7               	goto	u3737
  2064                           opt asmopt_on
  2065                           
  2066                           	line	57
  2067                           	
  2068  0FC9                     l1550:	
  2069  0FC9  0008               	return
  2070                           	opt stack 0
  2071                           GLOBAL	__end_of_init_adc
  2072  0FCA                     	__end_of_init_adc:
  2073 ;; =============== function _init_adc ends ============
  2074                           
  2075                           	signat	_init_adc,88
  2076                           	global	_isr1
  2077                           psect	text462,local,class=CODE,delta=2
  2078                           global __ptext462
  2079  0493                     __ptext462:
  2080                           
  2081 ;; *************** function _isr1 *****************
  2082 ;; Defined at:
  2083 ;;		line 104 in file "E:\Mechatronics 2\Assignment2\Main.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;		None               void
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0
  2099 ;;      Temps:          0       5       0       0       0
  2100 ;;      Totals:         0       5       0       0       0
  2101 ;;Total ram usage:        5 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    3
  2104 ;; This function calls:
  2105 ;;		___lwmod
  2106 ;;		_readAvgDistance
  2107 ;;		_ADCconvert
  2108 ;; This function is called by:
  2109 ;;		Interrupt level 1
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           psect	text462
  2113                           	file	"E:\Mechatronics 2\Assignment2\Main.c"
  2114                           	line	104
  2115                           	global	__size_of_isr1
  2116  00FD                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  2117                           	
  2118  0493                     _isr1:	
  2119                           	opt	stack 1
  2120                           ; Regs used in _isr1: [allreg]
  2121                           psect	intentry,class=CODE,delta=2
  2122                           global __pintentry
  2123  0004                     __pintentry:
  2124                           global interrupt_function
  2125  0004                     interrupt_function:
  2126                           	global saved_w
  2127  007E                     	saved_w	set	btemp+0
  2128  0004  00FE               	movwf	saved_w
  2129  0005  0E03               	swapf	status,w
  2130  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  2131  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  2132  0008  00E4               	movwf	(??_isr1+1)
  2133  0009  0804               	movf	fsr0,w
  2134  000A  00E5               	movwf	(??_isr1+2)
  2135  000B  080A               	movf	pclath,w
  2136  000C  00E6               	movwf	(??_isr1+3)
  2137  000D  087F               	movf	btemp+1,w
  2138  000E  00E7               	movwf	(??_isr1+4)
  2139  000F  120A  118A  2C93   	ljmp	_isr1
  2140                           psect	text462
  2141                           	line	106
  2142                           	
  2143  0493                     i1l4988:	
  2144                           ;Main.c: 106: if(TMR0IF)
  2145  0493  1D0B               	btfss	(90/8),(90)&7
  2146  0494  2C96               	goto	u290_21
  2147  0495  2C97               	goto	u290_20
  2148  0496                     u290_21:
  2149  0496  2D85               	goto	i1l764
  2150  0497                     u290_20:
  2151                           	line	108
  2152                           	
  2153  0497                     i1l4990:	
  2154                           ;Main.c: 107: {
  2155                           ;Main.c: 108: TMR0IF = 0;
  2156  0497  110B               	bcf	(90/8),(90)&7
  2157                           	line	109
  2158                           	
  2159  0498                     i1l4992:	
  2160                           ;Main.c: 109: TMR0 = 100;
  2161  0498  3064               	movlw	(064h)
  2162  0499  0081               	movwf	(1)	;volatile
  2163                           	line	111
  2164                           ;Main.c: 111: RTC_Counter++;
  2165  049A  3001               	movlw	low(01h)
  2166  049B  07EA               	addwf	(_RTC_Counter),f	;volatile
  2167  049C  1803               	skipnc
  2168  049D  0AEB               	incf	(_RTC_Counter+1),f	;volatile
  2169  049E  3000               	movlw	high(01h)
  2170  049F  07EB               	addwf	(_RTC_Counter+1),f	;volatile
  2171                           	line	113
  2172                           	
  2173  04A0                     i1l4994:	
  2174                           ;Main.c: 113: RTC_FLAG_1MS = 1;
  2175  04A0  14E8               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  2176                           	line	114
  2177                           	
  2178  04A1                     i1l4996:	
  2179                           ;Main.c: 114: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
  2180  04A1  300A               	movlw	low(0Ah)
  2181  04A2  00F8               	movwf	(?___lwmod)
  2182  04A3  3000               	movlw	high(0Ah)
  2183  04A4  00F9               	movwf	((?___lwmod))+1
  2184  04A5  086B               	movf	(_RTC_Counter+1),w	;volatile
  2185  04A6  01FB               	clrf	1+(?___lwmod)+02h
  2186  04A7  07FB               	addwf	1+(?___lwmod)+02h
  2187  04A8  086A               	movf	(_RTC_Counter),w	;volatile
  2188  04A9  01FA               	clrf	0+(?___lwmod)+02h
  2189  04AA  07FA               	addwf	0+(?___lwmod)+02h
  2190                           
  2191  04AB  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2192  04B0  0879               	movf	((1+(?___lwmod))),w
  2193  04B1  0478               	iorwf	((0+(?___lwmod))),w
  2194  04B2  1D03               	skipz
  2195  04B3  2CB5               	goto	u291_21
  2196  04B4  2CB6               	goto	u291_20
  2197  04B5                     u291_21:
  2198  04B5  2CBA               	goto	i1l5000
  2199  04B6                     u291_20:
  2200                           	
  2201  04B6                     i1l4998:	
  2202  04B6  1283               	bcf	status, 5	;RP0=0, select bank0
  2203  04B7  1303               	bcf	status, 6	;RP1=0, select bank0
  2204  04B8  1468               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  2205  04B9  2CBA               	goto	i1l5000
  2206                           	
  2207  04BA                     i1l748:	
  2208                           	line	115
  2209                           	
  2210  04BA                     i1l5000:	
  2211                           ;Main.c: 115: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  2212  04BA  3032               	movlw	low(032h)
  2213  04BB  00F8               	movwf	(?___lwmod)
  2214  04BC  3000               	movlw	high(032h)
  2215  04BD  00F9               	movwf	((?___lwmod))+1
  2216  04BE  1283               	bcf	status, 5	;RP0=0, select bank0
  2217  04BF  1303               	bcf	status, 6	;RP1=0, select bank0
  2218  04C0  086B               	movf	(_RTC_Counter+1),w	;volatile
  2219  04C1  01FB               	clrf	1+(?___lwmod)+02h
  2220  04C2  07FB               	addwf	1+(?___lwmod)+02h
  2221  04C3  086A               	movf	(_RTC_Counter),w	;volatile
  2222  04C4  01FA               	clrf	0+(?___lwmod)+02h
  2223  04C5  07FA               	addwf	0+(?___lwmod)+02h
  2224                           
  2225  04C6  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2226  04CB  0879               	movf	((1+(?___lwmod))),w
  2227  04CC  0478               	iorwf	((0+(?___lwmod))),w
  2228  04CD  1D03               	skipz
  2229  04CE  2CD0               	goto	u292_21
  2230  04CF  2CD1               	goto	u292_20
  2231  04D0                     u292_21:
  2232  04D0  2CD5               	goto	i1l5004
  2233  04D1                     u292_20:
  2234                           	
  2235  04D1                     i1l5002:	
  2236  04D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2237  04D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2238  04D3  1668               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  2239  04D4  2CD5               	goto	i1l5004
  2240                           	
  2241  04D5                     i1l749:	
  2242                           	line	116
  2243                           	
  2244  04D5                     i1l5004:	
  2245                           ;Main.c: 116: if(RTC_Counter % 250 == 0)
  2246  04D5  30FA               	movlw	low(0FAh)
  2247  04D6  00F8               	movwf	(?___lwmod)
  2248  04D7  3000               	movlw	high(0FAh)
  2249  04D8  00F9               	movwf	((?___lwmod))+1
  2250  04D9  1283               	bcf	status, 5	;RP0=0, select bank0
  2251  04DA  1303               	bcf	status, 6	;RP1=0, select bank0
  2252  04DB  086B               	movf	(_RTC_Counter+1),w	;volatile
  2253  04DC  01FB               	clrf	1+(?___lwmod)+02h
  2254  04DD  07FB               	addwf	1+(?___lwmod)+02h
  2255  04DE  086A               	movf	(_RTC_Counter),w	;volatile
  2256  04DF  01FA               	clrf	0+(?___lwmod)+02h
  2257  04E0  07FA               	addwf	0+(?___lwmod)+02h
  2258                           
  2259  04E1  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2260  04E6  0879               	movf	((1+(?___lwmod))),w
  2261  04E7  0478               	iorwf	((0+(?___lwmod))),w
  2262  04E8  1D03               	skipz
  2263  04E9  2CEB               	goto	u293_21
  2264  04EA  2CEC               	goto	u293_20
  2265  04EB                     u293_21:
  2266  04EB  2D02               	goto	i1l5010
  2267  04EC                     u293_20:
  2268                           	line	118
  2269                           	
  2270  04EC                     i1l5006:	
  2271                           ;Main.c: 117: {
  2272                           ;Main.c: 118: ADCconvert(readAvgDistance());
  2273  04EC  120A  118A  2590   	fcall	_readAvgDistance
              120A  118A         
  2274  04F1  1283               	bcf	status, 5	;RP0=0, select bank0
  2275  04F2  1303               	bcf	status, 6	;RP1=0, select bank0
  2276  04F3  0830               	movf	(1+(?_readAvgDistance)),w
  2277  04F4  01CC               	clrf	(?_ADCconvert+1)
  2278  04F5  07CC               	addwf	(?_ADCconvert+1)
  2279  04F6  082F               	movf	(0+(?_readAvgDistance)),w
  2280  04F7  01CB               	clrf	(?_ADCconvert)
  2281  04F8  07CB               	addwf	(?_ADCconvert)
  2282                           
  2283  04F9  120A  118A  2015   	fcall	_ADCconvert
              120A  118A         
  2284                           	line	120
  2285                           	
  2286  04FE                     i1l5008:	
  2287                           ;Main.c: 120: RTC_FLAG_250MS = 1;
  2288  04FE  1283               	bcf	status, 5	;RP0=0, select bank0
  2289  04FF  1303               	bcf	status, 6	;RP1=0, select bank0
  2290  0500  1568               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2291  0501  2D02               	goto	i1l5010
  2292                           	line	122
  2293                           	
  2294  0502                     i1l750:	
  2295                           	line	123
  2296                           	
  2297  0502                     i1l5010:	
  2298                           ;Main.c: 122: }
  2299                           ;Main.c: 123: if(RTC_Counter % 500 == 0)
  2300  0502  30F4               	movlw	low(01F4h)
  2301  0503  00F8               	movwf	(?___lwmod)
  2302  0504  3001               	movlw	high(01F4h)
  2303  0505  00F9               	movwf	((?___lwmod))+1
  2304  0506  1283               	bcf	status, 5	;RP0=0, select bank0
  2305  0507  1303               	bcf	status, 6	;RP1=0, select bank0
  2306  0508  086B               	movf	(_RTC_Counter+1),w	;volatile
  2307  0509  01FB               	clrf	1+(?___lwmod)+02h
  2308  050A  07FB               	addwf	1+(?___lwmod)+02h
  2309  050B  086A               	movf	(_RTC_Counter),w	;volatile
  2310  050C  01FA               	clrf	0+(?___lwmod)+02h
  2311  050D  07FA               	addwf	0+(?___lwmod)+02h
  2312                           
  2313  050E  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2314  0513  0879               	movf	((1+(?___lwmod))),w
  2315  0514  0478               	iorwf	((0+(?___lwmod))),w
  2316  0515  1D03               	skipz
  2317  0516  2D18               	goto	u294_21
  2318  0517  2D19               	goto	u294_20
  2319  0518                     u294_21:
  2320  0518  2D21               	goto	i1l5018
  2321  0519                     u294_20:
  2322                           	line	125
  2323                           	
  2324  0519                     i1l5012:	
  2325                           ;Main.c: 124: {
  2326                           ;Main.c: 125: RTC_FLAG_500MS = 1;
  2327  0519  1283               	bcf	status, 5	;RP0=0, select bank0
  2328  051A  1303               	bcf	status, 6	;RP1=0, select bank0
  2329  051B  15E8               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  2330                           	line	126
  2331                           	
  2332  051C                     i1l5014:	
  2333                           ;Main.c: 126: RTC_Counter = 0;
  2334  051C  01EA               	clrf	(_RTC_Counter)	;volatile
  2335  051D  01EB               	clrf	(_RTC_Counter+1)	;volatile
  2336                           	line	127
  2337                           	
  2338  051E                     i1l5016:	
  2339                           ;Main.c: 127: RB0 ^= 0x01;
  2340  051E  3001               	movlw	1<<((48)&7)
  2341  051F  0686               	xorwf	((48)/8),f
  2342  0520  2D21               	goto	i1l5018
  2343                           	line	128
  2344                           	
  2345  0521                     i1l751:	
  2346                           	line	131
  2347                           	
  2348  0521                     i1l5018:	
  2349                           ;Main.c: 128: }
  2350                           ;Main.c: 131: if(!RB2)
  2351  0521  1283               	bcf	status, 5	;RP0=0, select bank0
  2352  0522  1303               	bcf	status, 6	;RP1=0, select bank0
  2353  0523  1906               	btfsc	(50/8),(50)&7
  2354  0524  2D26               	goto	u295_21
  2355  0525  2D27               	goto	u295_20
  2356  0526                     u295_21:
  2357  0526  2D39               	goto	i1l752
  2358  0527                     u295_20:
  2359                           	line	133
  2360                           	
  2361  0527                     i1l5020:	
  2362                           ;Main.c: 132: {
  2363                           ;Main.c: 133: pb0DebounceCount++;
  2364  0527  3001               	movlw	(01h)
  2365  0528  00E3               	movwf	(??_isr1+0)+0
  2366  0529  0863               	movf	(??_isr1+0)+0,w
  2367  052A  07EC               	addwf	(_pb0DebounceCount),f	;volatile
  2368                           	line	134
  2369                           	
  2370  052B                     i1l5022:	
  2371                           ;Main.c: 134: if(pb0DebounceCount >= 10 & pb0Released)
  2372  052B  300A               	movlw	(0Ah)
  2373  052C  026C               	subwf	(_pb0DebounceCount),w	;volatile
  2374  052D  1C03               	skipc
  2375  052E  2D30               	goto	u296_21
  2376  052F  2D31               	goto	u296_20
  2377  0530                     u296_21:
  2378  0530  2D3B               	goto	i1l754
  2379  0531                     u296_20:
  2380                           	
  2381  0531                     i1l5024:	
  2382  0531  1F68               	btfss	(_pb0Released/8),(_pb0Released)&7
  2383  0532  2D34               	goto	u297_21
  2384  0533  2D35               	goto	u297_20
  2385  0534                     u297_21:
  2386  0534  2D3B               	goto	i1l754
  2387  0535                     u297_20:
  2388                           	line	136
  2389                           	
  2390  0535                     i1l5026:	
  2391                           ;Main.c: 135: {
  2392                           ;Main.c: 136: pb0Pressed = 1;
  2393  0535  16E8               	bsf	(_pb0Pressed/8),(_pb0Pressed)&7
  2394                           	line	137
  2395                           ;Main.c: 137: pb0Released = 0;
  2396  0536  1368               	bcf	(_pb0Released/8),(_pb0Released)&7
  2397  0537  2D3B               	goto	i1l754
  2398                           	line	138
  2399                           	
  2400  0538                     i1l753:	
  2401                           	line	139
  2402                           ;Main.c: 138: }
  2403                           ;Main.c: 139: }
  2404  0538  2D3B               	goto	i1l754
  2405                           	line	140
  2406                           	
  2407  0539                     i1l752:	
  2408                           	line	142
  2409                           ;Main.c: 140: else
  2410                           ;Main.c: 141: {
  2411                           ;Main.c: 142: pb0DebounceCount = 0;
  2412  0539  01EC               	clrf	(_pb0DebounceCount)	;volatile
  2413                           	line	143
  2414                           ;Main.c: 143: pb0Released = 1;
  2415  053A  1768               	bsf	(_pb0Released/8),(_pb0Released)&7
  2416                           	line	144
  2417                           	
  2418  053B                     i1l754:	
  2419                           	line	147
  2420                           ;Main.c: 144: }
  2421                           ;Main.c: 147: if(!RB3)
  2422  053B  1986               	btfsc	(51/8),(51)&7
  2423  053C  2D3E               	goto	u298_21
  2424  053D  2D3F               	goto	u298_20
  2425  053E                     u298_21:
  2426  053E  2D51               	goto	i1l755
  2427  053F                     u298_20:
  2428                           	line	149
  2429                           	
  2430  053F                     i1l5028:	
  2431                           ;Main.c: 148: {
  2432                           ;Main.c: 149: pb1DebounceCount++;
  2433  053F  3001               	movlw	(01h)
  2434  0540  00E3               	movwf	(??_isr1+0)+0
  2435  0541  0863               	movf	(??_isr1+0)+0,w
  2436  0542  07ED               	addwf	(_pb1DebounceCount),f	;volatile
  2437                           	line	150
  2438                           	
  2439  0543                     i1l5030:	
  2440                           ;Main.c: 150: if(pb1DebounceCount >= 10 & pb1Released)
  2441  0543  300A               	movlw	(0Ah)
  2442  0544  026D               	subwf	(_pb1DebounceCount),w	;volatile
  2443  0545  1C03               	skipc
  2444  0546  2D48               	goto	u299_21
  2445  0547  2D49               	goto	u299_20
  2446  0548                     u299_21:
  2447  0548  2D53               	goto	i1l757
  2448  0549                     u299_20:
  2449                           	
  2450  0549                     i1l5032:	
  2451  0549  1C69               	btfss	(_pb1Released/8),(_pb1Released)&7
  2452  054A  2D4C               	goto	u300_21
  2453  054B  2D4D               	goto	u300_20
  2454  054C                     u300_21:
  2455  054C  2D53               	goto	i1l757
  2456  054D                     u300_20:
  2457                           	line	152
  2458                           	
  2459  054D                     i1l5034:	
  2460                           ;Main.c: 151: {
  2461                           ;Main.c: 152: pb1Pressed = 1;
  2462  054D  17E8               	bsf	(_pb1Pressed/8),(_pb1Pressed)&7
  2463                           	line	153
  2464                           ;Main.c: 153: pb1Released = 0;
  2465  054E  1069               	bcf	(_pb1Released/8),(_pb1Released)&7
  2466  054F  2D53               	goto	i1l757
  2467                           	line	154
  2468                           	
  2469  0550                     i1l756:	
  2470                           	line	155
  2471                           ;Main.c: 154: }
  2472                           ;Main.c: 155: }
  2473  0550  2D53               	goto	i1l757
  2474                           	line	156
  2475                           	
  2476  0551                     i1l755:	
  2477                           	line	158
  2478                           ;Main.c: 156: else
  2479                           ;Main.c: 157: {
  2480                           ;Main.c: 158: pb1DebounceCount = 0;
  2481  0551  01ED               	clrf	(_pb1DebounceCount)	;volatile
  2482                           	line	159
  2483                           ;Main.c: 159: pb1Released = 1;
  2484  0552  1469               	bsf	(_pb1Released/8),(_pb1Released)&7
  2485                           	line	160
  2486                           	
  2487  0553                     i1l757:	
  2488                           	line	162
  2489                           ;Main.c: 160: }
  2490                           ;Main.c: 162: if(!RB4)
  2491  0553  1A06               	btfsc	(52/8),(52)&7
  2492  0554  2D56               	goto	u301_21
  2493  0555  2D57               	goto	u301_20
  2494  0556                     u301_21:
  2495  0556  2D69               	goto	i1l758
  2496  0557                     u301_20:
  2497                           	line	164
  2498                           	
  2499  0557                     i1l5036:	
  2500                           ;Main.c: 163: {
  2501                           ;Main.c: 164: pb2DebounceCount++;
  2502  0557  3001               	movlw	(01h)
  2503  0558  00E3               	movwf	(??_isr1+0)+0
  2504  0559  0863               	movf	(??_isr1+0)+0,w
  2505  055A  07EE               	addwf	(_pb2DebounceCount),f	;volatile
  2506                           	line	165
  2507                           	
  2508  055B                     i1l5038:	
  2509                           ;Main.c: 165: if(pb2DebounceCount >= 10 & pb2Released)
  2510  055B  300A               	movlw	(0Ah)
  2511  055C  026E               	subwf	(_pb2DebounceCount),w	;volatile
  2512  055D  1C03               	skipc
  2513  055E  2D60               	goto	u302_21
  2514  055F  2D61               	goto	u302_20
  2515  0560                     u302_21:
  2516  0560  2D6B               	goto	i1l760
  2517  0561                     u302_20:
  2518                           	
  2519  0561                     i1l5040:	
  2520  0561  1D69               	btfss	(_pb2Released/8),(_pb2Released)&7
  2521  0562  2D64               	goto	u303_21
  2522  0563  2D65               	goto	u303_20
  2523  0564                     u303_21:
  2524  0564  2D6B               	goto	i1l760
  2525  0565                     u303_20:
  2526                           	line	167
  2527                           	
  2528  0565                     i1l5042:	
  2529                           ;Main.c: 166: {
  2530                           ;Main.c: 167: pb2Pressed = 1;
  2531  0565  14E9               	bsf	(_pb2Pressed/8),(_pb2Pressed)&7
  2532                           	line	168
  2533                           ;Main.c: 168: pb2Released = 0;
  2534  0566  1169               	bcf	(_pb2Released/8),(_pb2Released)&7
  2535  0567  2D6B               	goto	i1l760
  2536                           	line	169
  2537                           	
  2538  0568                     i1l759:	
  2539                           	line	170
  2540                           ;Main.c: 169: }
  2541                           ;Main.c: 170: }
  2542  0568  2D6B               	goto	i1l760
  2543                           	line	171
  2544                           	
  2545  0569                     i1l758:	
  2546                           	line	173
  2547                           ;Main.c: 171: else
  2548                           ;Main.c: 172: {
  2549                           ;Main.c: 173: pb2DebounceCount = 0;
  2550  0569  01EE               	clrf	(_pb2DebounceCount)	;volatile
  2551                           	line	174
  2552                           ;Main.c: 174: pb2Released = 1;
  2553  056A  1569               	bsf	(_pb2Released/8),(_pb2Released)&7
  2554                           	line	175
  2555                           	
  2556  056B                     i1l760:	
  2557                           	line	177
  2558                           ;Main.c: 175: }
  2559                           ;Main.c: 177: if(!RB5)
  2560  056B  1A86               	btfsc	(53/8),(53)&7
  2561  056C  2D6E               	goto	u304_21
  2562  056D  2D6F               	goto	u304_20
  2563  056E                     u304_21:
  2564  056E  2D81               	goto	i1l761
  2565  056F                     u304_20:
  2566                           	line	179
  2567                           	
  2568  056F                     i1l5044:	
  2569                           ;Main.c: 178: {
  2570                           ;Main.c: 179: pb3DebounceCount++;
  2571  056F  3001               	movlw	(01h)
  2572  0570  00E3               	movwf	(??_isr1+0)+0
  2573  0571  0863               	movf	(??_isr1+0)+0,w
  2574  0572  07EF               	addwf	(_pb3DebounceCount),f	;volatile
  2575                           	line	180
  2576                           	
  2577  0573                     i1l5046:	
  2578                           ;Main.c: 180: if(pb3DebounceCount >= 10 & pb3Released)
  2579  0573  300A               	movlw	(0Ah)
  2580  0574  026F               	subwf	(_pb3DebounceCount),w	;volatile
  2581  0575  1C03               	skipc
  2582  0576  2D78               	goto	u305_21
  2583  0577  2D79               	goto	u305_20
  2584  0578                     u305_21:
  2585  0578  2D85               	goto	i1l764
  2586  0579                     u305_20:
  2587                           	
  2588  0579                     i1l5048:	
  2589  0579  1E69               	btfss	(_pb3Released/8),(_pb3Released)&7
  2590  057A  2D7C               	goto	u306_21
  2591  057B  2D7D               	goto	u306_20
  2592  057C                     u306_21:
  2593  057C  2D85               	goto	i1l764
  2594  057D                     u306_20:
  2595                           	line	182
  2596                           	
  2597  057D                     i1l5050:	
  2598                           ;Main.c: 181: {
  2599                           ;Main.c: 182: pb3Pressed = 1;
  2600  057D  15E9               	bsf	(_pb3Pressed/8),(_pb3Pressed)&7
  2601                           	line	183
  2602                           ;Main.c: 183: pb3Released = 0;
  2603  057E  1269               	bcf	(_pb3Released/8),(_pb3Released)&7
  2604  057F  2D85               	goto	i1l764
  2605                           	line	184
  2606                           	
  2607  0580                     i1l762:	
  2608                           	line	185
  2609                           ;Main.c: 184: }
  2610                           ;Main.c: 185: }
  2611  0580  2D85               	goto	i1l764
  2612                           	line	186
  2613                           	
  2614  0581                     i1l761:	
  2615                           	line	188
  2616                           ;Main.c: 186: else
  2617                           ;Main.c: 187: {
  2618                           ;Main.c: 188: pb3DebounceCount = 0;
  2619  0581  01EF               	clrf	(_pb3DebounceCount)	;volatile
  2620                           	line	189
  2621                           ;Main.c: 189: pb3Released = 1;
  2622  0582  1669               	bsf	(_pb3Released/8),(_pb3Released)&7
  2623  0583  2D85               	goto	i1l764
  2624                           	line	190
  2625                           	
  2626  0584                     i1l763:	
  2627  0584  2D85               	goto	i1l764
  2628                           	line	191
  2629                           	
  2630  0585                     i1l747:	
  2631                           	line	192
  2632                           	
  2633  0585                     i1l764:	
  2634  0585  0867               	movf	(??_isr1+4),w
  2635  0586  00FF               	movwf	btemp+1
  2636  0587  0866               	movf	(??_isr1+3),w
  2637  0588  008A               	movwf	pclath
  2638  0589  0865               	movf	(??_isr1+2),w
  2639  058A  0084               	movwf	fsr0
  2640  058B  0E64               	swapf	(??_isr1+1)^00h,w
  2641  058C  0083               	movwf	status
  2642  058D  0EFE               	swapf	saved_w,f
  2643  058E  0E7E               	swapf	saved_w,w
  2644  058F  0009               	retfie
  2645                           	opt stack 0
  2646                           GLOBAL	__end_of_isr1
  2647  0590                     	__end_of_isr1:
  2648 ;; =============== function _isr1 ends ============
  2649                           
  2650                           	signat	_isr1,88
  2651                           	global	_ADCconvert
  2652                           psect	text463,local,class=CODE,delta=2
  2653                           global __ptext463
  2654  0015                     __ptext463:
  2655                           
  2656 ;; *************** function _ADCconvert *****************
  2657 ;; Defined at:
  2658 ;;		line 318 in file "E:\Mechatronics 2\Assignment2\Main.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  adcVal          2   43[BANK0 ] unsigned int 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  adcOutput      16   49[BANK0 ] unsigned char [16]
  2663 ;;  distance        2   65[BANK0 ] unsigned int 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;		None               void
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2673 ;;      Params:         0       2       0       0       0
  2674 ;;      Locals:         0      18       0       0       0
  2675 ;;      Temps:          0       4       0       0       0
  2676 ;;      Totals:         0      24       0       0       0
  2677 ;;Total ram usage:       24 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    2
  2680 ;; This function calls:
  2681 ;;		___lwmod
  2682 ;;		_sprintf
  2683 ;;		_lcd_set_cursor
  2684 ;;		_lcd_write_string
  2685 ;; This function is called by:
  2686 ;;		_isr1
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           psect	text463
  2690                           	file	"E:\Mechatronics 2\Assignment2\Main.c"
  2691                           	line	318
  2692                           	global	__size_of_ADCconvert
  2693  0255                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  2694                           	
  2695  0015                     _ADCconvert:	
  2696                           	opt	stack 1
  2697                           ; Regs used in _ADCconvert: [allreg]
  2698                           	line	319
  2699                           	
  2700  0015                     i1l5082:	
  2701                           ;Main.c: 319: char adcOutput[16] = "";
  2702  0015  3051               	movlw	(ADCconvert@adcOutput)&0ffh
  2703  0016  0084               	movwf	fsr0
  2704  0017  30A0               	movlw	low(ADCconvert@F1220)
  2705  0018  1283               	bcf	status, 5	;RP0=0, select bank0
  2706  0019  1303               	bcf	status, 6	;RP1=0, select bank0
  2707  001A  00CD               	movwf	(??_ADCconvert+0)+0
  2708  001B  0804               	movf	fsr0,w
  2709  001C  00CE               	movwf	((??_ADCconvert+0)+0+1)
  2710  001D  3010               	movlw	16
  2711  001E  00CF               	movwf	((??_ADCconvert+0)+0+2)
  2712  001F                     u310_20:
  2713  001F  084D               	movf	(??_ADCconvert+0)+0,w
  2714  0020  0084               	movwf	fsr0
  2715  0021  1383               	bcf	status, 7	;select IRP bank1
  2716                           	
  2717  0022  0800               	movf	indf,w
  2718  0023  00D0               	movwf	((??_ADCconvert+0)+0+3)
  2719  0024  0ACD               	incf	(??_ADCconvert+0)+0,f
  2720  0025  084E               	movf	((??_ADCconvert+0)+0+1),w
  2721  0026  0084               	movwf	fsr0
  2722                           	
  2723  0027  0850               	movf	((??_ADCconvert+0)+0+3),w
  2724  0028  0080               	movwf	indf
  2725  0029  0ACE               	incf	((??_ADCconvert+0)+0+1),f
  2726  002A  0BCF               	decfsz	((??_ADCconvert+0)+0+2),f
  2727  002B  281F               	goto	u310_20
  2728                           	line	321
  2729                           	
  2730  002C                     i1l5084:	
  2731                           ;Main.c: 320: unsigned int distance;
  2732                           ;Main.c: 321: if (adcVal > 250)
  2733  002C  3000               	movlw	high(0FBh)
  2734  002D  024C               	subwf	(ADCconvert@adcVal+1),w
  2735  002E  30FB               	movlw	low(0FBh)
  2736  002F  1903               	skipnz
  2737  0030  024B               	subwf	(ADCconvert@adcVal),w
  2738  0031  1C03               	skipc
  2739  0032  2834               	goto	u311_21
  2740  0033  2835               	goto	u311_20
  2741  0034                     u311_21:
  2742  0034  283A               	goto	i1l5088
  2743  0035                     u311_20:
  2744                           	line	323
  2745                           	
  2746  0035                     i1l5086:	
  2747                           ;Main.c: 322: {
  2748                           ;Main.c: 323: distance = 20;
  2749  0035  3014               	movlw	low(014h)
  2750  0036  00E1               	movwf	(ADCconvert@distance)
  2751  0037  3000               	movlw	high(014h)
  2752  0038  00E2               	movwf	((ADCconvert@distance))+1
  2753                           	line	324
  2754                           ;Main.c: 324: }
  2755  0039  2A4D               	goto	i1l5158
  2756                           	line	325
  2757                           	
  2758  003A                     i1l815:	
  2759                           	
  2760  003A                     i1l5088:	
  2761                           ;Main.c: 325: else if (adcVal < 250 && adcVal >= 190)
  2762  003A  3000               	movlw	high(0FAh)
  2763  003B  024C               	subwf	(ADCconvert@adcVal+1),w
  2764  003C  30FA               	movlw	low(0FAh)
  2765  003D  1903               	skipnz
  2766  003E  024B               	subwf	(ADCconvert@adcVal),w
  2767  003F  1803               	skipnc
  2768  0040  2842               	goto	u312_21
  2769  0041  2843               	goto	u312_20
  2770  0042                     u312_21:
  2771  0042  2866               	goto	i1l5094
  2772  0043                     u312_20:
  2773                           	
  2774  0043                     i1l5090:	
  2775  0043  3000               	movlw	high(0BEh)
  2776  0044  024C               	subwf	(ADCconvert@adcVal+1),w
  2777  0045  30BE               	movlw	low(0BEh)
  2778  0046  1903               	skipnz
  2779  0047  024B               	subwf	(ADCconvert@adcVal),w
  2780  0048  1C03               	skipc
  2781  0049  284B               	goto	u313_21
  2782  004A  284C               	goto	u313_20
  2783  004B                     u313_21:
  2784  004B  2866               	goto	i1l5094
  2785  004C                     u313_20:
  2786                           	line	327
  2787                           	
  2788  004C                     i1l5092:	
  2789                           ;Main.c: 326: {
  2790                           ;Main.c: 327: distance = 20+ (adcVal%100) ;
  2791  004C  3064               	movlw	low(064h)
  2792  004D  00F8               	movwf	(?___lwmod)
  2793  004E  3000               	movlw	high(064h)
  2794  004F  00F9               	movwf	((?___lwmod))+1
  2795  0050  084C               	movf	(ADCconvert@adcVal+1),w
  2796  0051  01FB               	clrf	1+(?___lwmod)+02h
  2797  0052  07FB               	addwf	1+(?___lwmod)+02h
  2798  0053  084B               	movf	(ADCconvert@adcVal),w
  2799  0054  01FA               	clrf	0+(?___lwmod)+02h
  2800  0055  07FA               	addwf	0+(?___lwmod)+02h
  2801                           
  2802  0056  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2803  005B  0878               	movf	(0+(?___lwmod)),w
  2804  005C  3E14               	addlw	low(014h)
  2805  005D  1283               	bcf	status, 5	;RP0=0, select bank0
  2806  005E  1303               	bcf	status, 6	;RP1=0, select bank0
  2807  005F  00E1               	movwf	(ADCconvert@distance)
  2808  0060  0879               	movf	(1+(?___lwmod)),w
  2809  0061  1803               	skipnc
  2810  0062  3E01               	addlw	1
  2811  0063  3E00               	addlw	high(014h)
  2812  0064  00E2               	movwf	1+(ADCconvert@distance)
  2813                           	line	328
  2814                           ;Main.c: 328: }
  2815  0065  2A4D               	goto	i1l5158
  2816                           	line	329
  2817                           	
  2818  0066                     i1l817:	
  2819                           	
  2820  0066                     i1l5094:	
  2821                           ;Main.c: 329: else if (adcVal < 190 && adcVal >= 96)
  2822  0066  3000               	movlw	high(0BEh)
  2823  0067  024C               	subwf	(ADCconvert@adcVal+1),w
  2824  0068  30BE               	movlw	low(0BEh)
  2825  0069  1903               	skipnz
  2826  006A  024B               	subwf	(ADCconvert@adcVal),w
  2827  006B  1803               	skipnc
  2828  006C  286E               	goto	u314_21
  2829  006D  286F               	goto	u314_20
  2830  006E                     u314_21:
  2831  006E  2892               	goto	i1l5100
  2832  006F                     u314_20:
  2833                           	
  2834  006F                     i1l5096:	
  2835  006F  3000               	movlw	high(060h)
  2836  0070  024C               	subwf	(ADCconvert@adcVal+1),w
  2837  0071  3060               	movlw	low(060h)
  2838  0072  1903               	skipnz
  2839  0073  024B               	subwf	(ADCconvert@adcVal),w
  2840  0074  1C03               	skipc
  2841  0075  2877               	goto	u315_21
  2842  0076  2878               	goto	u315_20
  2843  0077                     u315_21:
  2844  0077  2892               	goto	i1l5100
  2845  0078                     u315_20:
  2846                           	line	331
  2847                           	
  2848  0078                     i1l5098:	
  2849                           ;Main.c: 330: {
  2850                           ;Main.c: 331: distance = 30+ (adcVal%100) ;
  2851  0078  3064               	movlw	low(064h)
  2852  0079  00F8               	movwf	(?___lwmod)
  2853  007A  3000               	movlw	high(064h)
  2854  007B  00F9               	movwf	((?___lwmod))+1
  2855  007C  084C               	movf	(ADCconvert@adcVal+1),w
  2856  007D  01FB               	clrf	1+(?___lwmod)+02h
  2857  007E  07FB               	addwf	1+(?___lwmod)+02h
  2858  007F  084B               	movf	(ADCconvert@adcVal),w
  2859  0080  01FA               	clrf	0+(?___lwmod)+02h
  2860  0081  07FA               	addwf	0+(?___lwmod)+02h
  2861                           
  2862  0082  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2863  0087  0878               	movf	(0+(?___lwmod)),w
  2864  0088  3E1E               	addlw	low(01Eh)
  2865  0089  1283               	bcf	status, 5	;RP0=0, select bank0
  2866  008A  1303               	bcf	status, 6	;RP1=0, select bank0
  2867  008B  00E1               	movwf	(ADCconvert@distance)
  2868  008C  0879               	movf	(1+(?___lwmod)),w
  2869  008D  1803               	skipnc
  2870  008E  3E01               	addlw	1
  2871  008F  3E00               	addlw	high(01Eh)
  2872  0090  00E2               	movwf	1+(ADCconvert@distance)
  2873                           	line	332
  2874                           ;Main.c: 332: }
  2875  0091  2A4D               	goto	i1l5158
  2876                           	line	333
  2877                           	
  2878  0092                     i1l819:	
  2879                           	
  2880  0092                     i1l5100:	
  2881                           ;Main.c: 333: else if (adcVal < 190 && adcVal >= 96)
  2882  0092  3000               	movlw	high(0BEh)
  2883  0093  024C               	subwf	(ADCconvert@adcVal+1),w
  2884  0094  30BE               	movlw	low(0BEh)
  2885  0095  1903               	skipnz
  2886  0096  024B               	subwf	(ADCconvert@adcVal),w
  2887  0097  1803               	skipnc
  2888  0098  289A               	goto	u316_21
  2889  0099  289B               	goto	u316_20
  2890  009A                     u316_21:
  2891  009A  28BE               	goto	i1l5106
  2892  009B                     u316_20:
  2893                           	
  2894  009B                     i1l5102:	
  2895  009B  3000               	movlw	high(060h)
  2896  009C  024C               	subwf	(ADCconvert@adcVal+1),w
  2897  009D  3060               	movlw	low(060h)
  2898  009E  1903               	skipnz
  2899  009F  024B               	subwf	(ADCconvert@adcVal),w
  2900  00A0  1C03               	skipc
  2901  00A1  28A3               	goto	u317_21
  2902  00A2  28A4               	goto	u317_20
  2903  00A3                     u317_21:
  2904  00A3  28BE               	goto	i1l5106
  2905  00A4                     u317_20:
  2906                           	line	335
  2907                           	
  2908  00A4                     i1l5104:	
  2909                           ;Main.c: 334: {
  2910                           ;Main.c: 335: distance = 40+ (adcVal%100) ;
  2911  00A4  3064               	movlw	low(064h)
  2912  00A5  00F8               	movwf	(?___lwmod)
  2913  00A6  3000               	movlw	high(064h)
  2914  00A7  00F9               	movwf	((?___lwmod))+1
  2915  00A8  084C               	movf	(ADCconvert@adcVal+1),w
  2916  00A9  01FB               	clrf	1+(?___lwmod)+02h
  2917  00AA  07FB               	addwf	1+(?___lwmod)+02h
  2918  00AB  084B               	movf	(ADCconvert@adcVal),w
  2919  00AC  01FA               	clrf	0+(?___lwmod)+02h
  2920  00AD  07FA               	addwf	0+(?___lwmod)+02h
  2921                           
  2922  00AE  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2923  00B3  0878               	movf	(0+(?___lwmod)),w
  2924  00B4  3E28               	addlw	low(028h)
  2925  00B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2926  00B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2927  00B7  00E1               	movwf	(ADCconvert@distance)
  2928  00B8  0879               	movf	(1+(?___lwmod)),w
  2929  00B9  1803               	skipnc
  2930  00BA  3E01               	addlw	1
  2931  00BB  3E00               	addlw	high(028h)
  2932  00BC  00E2               	movwf	1+(ADCconvert@distance)
  2933                           	line	336
  2934                           ;Main.c: 336: }
  2935  00BD  2A4D               	goto	i1l5158
  2936                           	line	337
  2937                           	
  2938  00BE                     i1l821:	
  2939                           	
  2940  00BE                     i1l5106:	
  2941                           ;Main.c: 337: else if (adcVal < 115 && adcVal >= 96)
  2942  00BE  3000               	movlw	high(073h)
  2943  00BF  024C               	subwf	(ADCconvert@adcVal+1),w
  2944  00C0  3073               	movlw	low(073h)
  2945  00C1  1903               	skipnz
  2946  00C2  024B               	subwf	(ADCconvert@adcVal),w
  2947  00C3  1803               	skipnc
  2948  00C4  28C6               	goto	u318_21
  2949  00C5  28C7               	goto	u318_20
  2950  00C6                     u318_21:
  2951  00C6  28EA               	goto	i1l5112
  2952  00C7                     u318_20:
  2953                           	
  2954  00C7                     i1l5108:	
  2955  00C7  3000               	movlw	high(060h)
  2956  00C8  024C               	subwf	(ADCconvert@adcVal+1),w
  2957  00C9  3060               	movlw	low(060h)
  2958  00CA  1903               	skipnz
  2959  00CB  024B               	subwf	(ADCconvert@adcVal),w
  2960  00CC  1C03               	skipc
  2961  00CD  28CF               	goto	u319_21
  2962  00CE  28D0               	goto	u319_20
  2963  00CF                     u319_21:
  2964  00CF  28EA               	goto	i1l5112
  2965  00D0                     u319_20:
  2966                           	line	339
  2967                           	
  2968  00D0                     i1l5110:	
  2969                           ;Main.c: 338: {
  2970                           ;Main.c: 339: distance = 50+ (adcVal%100) ;
  2971  00D0  3064               	movlw	low(064h)
  2972  00D1  00F8               	movwf	(?___lwmod)
  2973  00D2  3000               	movlw	high(064h)
  2974  00D3  00F9               	movwf	((?___lwmod))+1
  2975  00D4  084C               	movf	(ADCconvert@adcVal+1),w
  2976  00D5  01FB               	clrf	1+(?___lwmod)+02h
  2977  00D6  07FB               	addwf	1+(?___lwmod)+02h
  2978  00D7  084B               	movf	(ADCconvert@adcVal),w
  2979  00D8  01FA               	clrf	0+(?___lwmod)+02h
  2980  00D9  07FA               	addwf	0+(?___lwmod)+02h
  2981                           
  2982  00DA  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  2983  00DF  0878               	movf	(0+(?___lwmod)),w
  2984  00E0  3E32               	addlw	low(032h)
  2985  00E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2986  00E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2987  00E3  00E1               	movwf	(ADCconvert@distance)
  2988  00E4  0879               	movf	(1+(?___lwmod)),w
  2989  00E5  1803               	skipnc
  2990  00E6  3E01               	addlw	1
  2991  00E7  3E00               	addlw	high(032h)
  2992  00E8  00E2               	movwf	1+(ADCconvert@distance)
  2993                           	line	340
  2994                           ;Main.c: 340: }
  2995  00E9  2A4D               	goto	i1l5158
  2996                           	line	341
  2997                           	
  2998  00EA                     i1l823:	
  2999                           	
  3000  00EA                     i1l5112:	
  3001                           ;Main.c: 341: else if (adcVal < 96 && adcVal >= 82)
  3002  00EA  3000               	movlw	high(060h)
  3003  00EB  024C               	subwf	(ADCconvert@adcVal+1),w
  3004  00EC  3060               	movlw	low(060h)
  3005  00ED  1903               	skipnz
  3006  00EE  024B               	subwf	(ADCconvert@adcVal),w
  3007  00EF  1803               	skipnc
  3008  00F0  28F2               	goto	u320_21
  3009  00F1  28F3               	goto	u320_20
  3010  00F2                     u320_21:
  3011  00F2  2916               	goto	i1l5118
  3012  00F3                     u320_20:
  3013                           	
  3014  00F3                     i1l5114:	
  3015  00F3  3000               	movlw	high(052h)
  3016  00F4  024C               	subwf	(ADCconvert@adcVal+1),w
  3017  00F5  3052               	movlw	low(052h)
  3018  00F6  1903               	skipnz
  3019  00F7  024B               	subwf	(ADCconvert@adcVal),w
  3020  00F8  1C03               	skipc
  3021  00F9  28FB               	goto	u321_21
  3022  00FA  28FC               	goto	u321_20
  3023  00FB                     u321_21:
  3024  00FB  2916               	goto	i1l5118
  3025  00FC                     u321_20:
  3026                           	line	343
  3027                           	
  3028  00FC                     i1l5116:	
  3029                           ;Main.c: 342: {
  3030                           ;Main.c: 343: distance = 60+ (adcVal%100) ;
  3031  00FC  3064               	movlw	low(064h)
  3032  00FD  00F8               	movwf	(?___lwmod)
  3033  00FE  3000               	movlw	high(064h)
  3034  00FF  00F9               	movwf	((?___lwmod))+1
  3035  0100  084C               	movf	(ADCconvert@adcVal+1),w
  3036  0101  01FB               	clrf	1+(?___lwmod)+02h
  3037  0102  07FB               	addwf	1+(?___lwmod)+02h
  3038  0103  084B               	movf	(ADCconvert@adcVal),w
  3039  0104  01FA               	clrf	0+(?___lwmod)+02h
  3040  0105  07FA               	addwf	0+(?___lwmod)+02h
  3041                           
  3042  0106  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3043  010B  0878               	movf	(0+(?___lwmod)),w
  3044  010C  3E3C               	addlw	low(03Ch)
  3045  010D  1283               	bcf	status, 5	;RP0=0, select bank0
  3046  010E  1303               	bcf	status, 6	;RP1=0, select bank0
  3047  010F  00E1               	movwf	(ADCconvert@distance)
  3048  0110  0879               	movf	(1+(?___lwmod)),w
  3049  0111  1803               	skipnc
  3050  0112  3E01               	addlw	1
  3051  0113  3E00               	addlw	high(03Ch)
  3052  0114  00E2               	movwf	1+(ADCconvert@distance)
  3053                           	line	344
  3054                           ;Main.c: 344: }
  3055  0115  2A4D               	goto	i1l5158
  3056                           	line	345
  3057                           	
  3058  0116                     i1l825:	
  3059                           	
  3060  0116                     i1l5118:	
  3061                           ;Main.c: 345: else if (adcVal < 82 && adcVal >= 70)
  3062  0116  3000               	movlw	high(052h)
  3063  0117  024C               	subwf	(ADCconvert@adcVal+1),w
  3064  0118  3052               	movlw	low(052h)
  3065  0119  1903               	skipnz
  3066  011A  024B               	subwf	(ADCconvert@adcVal),w
  3067  011B  1803               	skipnc
  3068  011C  291E               	goto	u322_21
  3069  011D  291F               	goto	u322_20
  3070  011E                     u322_21:
  3071  011E  2942               	goto	i1l5124
  3072  011F                     u322_20:
  3073                           	
  3074  011F                     i1l5120:	
  3075  011F  3000               	movlw	high(046h)
  3076  0120  024C               	subwf	(ADCconvert@adcVal+1),w
  3077  0121  3046               	movlw	low(046h)
  3078  0122  1903               	skipnz
  3079  0123  024B               	subwf	(ADCconvert@adcVal),w
  3080  0124  1C03               	skipc
  3081  0125  2927               	goto	u323_21
  3082  0126  2928               	goto	u323_20
  3083  0127                     u323_21:
  3084  0127  2942               	goto	i1l5124
  3085  0128                     u323_20:
  3086                           	line	347
  3087                           	
  3088  0128                     i1l5122:	
  3089                           ;Main.c: 346: {
  3090                           ;Main.c: 347: distance = 70+ (adcVal%100) ;
  3091  0128  3064               	movlw	low(064h)
  3092  0129  00F8               	movwf	(?___lwmod)
  3093  012A  3000               	movlw	high(064h)
  3094  012B  00F9               	movwf	((?___lwmod))+1
  3095  012C  084C               	movf	(ADCconvert@adcVal+1),w
  3096  012D  01FB               	clrf	1+(?___lwmod)+02h
  3097  012E  07FB               	addwf	1+(?___lwmod)+02h
  3098  012F  084B               	movf	(ADCconvert@adcVal),w
  3099  0130  01FA               	clrf	0+(?___lwmod)+02h
  3100  0131  07FA               	addwf	0+(?___lwmod)+02h
  3101                           
  3102  0132  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3103  0137  0878               	movf	(0+(?___lwmod)),w
  3104  0138  3E46               	addlw	low(046h)
  3105  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  3106  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  3107  013B  00E1               	movwf	(ADCconvert@distance)
  3108  013C  0879               	movf	(1+(?___lwmod)),w
  3109  013D  1803               	skipnc
  3110  013E  3E01               	addlw	1
  3111  013F  3E00               	addlw	high(046h)
  3112  0140  00E2               	movwf	1+(ADCconvert@distance)
  3113                           	line	348
  3114                           ;Main.c: 348: }
  3115  0141  2A4D               	goto	i1l5158
  3116                           	line	349
  3117                           	
  3118  0142                     i1l827:	
  3119                           	
  3120  0142                     i1l5124:	
  3121                           ;Main.c: 349: else if (adcVal < 70 && adcVal >= 64)
  3122  0142  3000               	movlw	high(046h)
  3123  0143  024C               	subwf	(ADCconvert@adcVal+1),w
  3124  0144  3046               	movlw	low(046h)
  3125  0145  1903               	skipnz
  3126  0146  024B               	subwf	(ADCconvert@adcVal),w
  3127  0147  1803               	skipnc
  3128  0148  294A               	goto	u324_21
  3129  0149  294B               	goto	u324_20
  3130  014A                     u324_21:
  3131  014A  296E               	goto	i1l5130
  3132  014B                     u324_20:
  3133                           	
  3134  014B                     i1l5126:	
  3135  014B  3000               	movlw	high(040h)
  3136  014C  024C               	subwf	(ADCconvert@adcVal+1),w
  3137  014D  3040               	movlw	low(040h)
  3138  014E  1903               	skipnz
  3139  014F  024B               	subwf	(ADCconvert@adcVal),w
  3140  0150  1C03               	skipc
  3141  0151  2953               	goto	u325_21
  3142  0152  2954               	goto	u325_20
  3143  0153                     u325_21:
  3144  0153  296E               	goto	i1l5130
  3145  0154                     u325_20:
  3146                           	line	351
  3147                           	
  3148  0154                     i1l5128:	
  3149                           ;Main.c: 350: {
  3150                           ;Main.c: 351: distance = 80+ (adcVal%100) ;
  3151  0154  3064               	movlw	low(064h)
  3152  0155  00F8               	movwf	(?___lwmod)
  3153  0156  3000               	movlw	high(064h)
  3154  0157  00F9               	movwf	((?___lwmod))+1
  3155  0158  084C               	movf	(ADCconvert@adcVal+1),w
  3156  0159  01FB               	clrf	1+(?___lwmod)+02h
  3157  015A  07FB               	addwf	1+(?___lwmod)+02h
  3158  015B  084B               	movf	(ADCconvert@adcVal),w
  3159  015C  01FA               	clrf	0+(?___lwmod)+02h
  3160  015D  07FA               	addwf	0+(?___lwmod)+02h
  3161                           
  3162  015E  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3163  0163  0878               	movf	(0+(?___lwmod)),w
  3164  0164  3E50               	addlw	low(050h)
  3165  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  3166  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  3167  0167  00E1               	movwf	(ADCconvert@distance)
  3168  0168  0879               	movf	(1+(?___lwmod)),w
  3169  0169  1803               	skipnc
  3170  016A  3E01               	addlw	1
  3171  016B  3E00               	addlw	high(050h)
  3172  016C  00E2               	movwf	1+(ADCconvert@distance)
  3173                           	line	352
  3174                           ;Main.c: 352: }
  3175  016D  2A4D               	goto	i1l5158
  3176                           	line	353
  3177                           	
  3178  016E                     i1l829:	
  3179                           	
  3180  016E                     i1l5130:	
  3181                           ;Main.c: 353: else if (adcVal < 64 && adcVal >= 56)
  3182  016E  3000               	movlw	high(040h)
  3183  016F  024C               	subwf	(ADCconvert@adcVal+1),w
  3184  0170  3040               	movlw	low(040h)
  3185  0171  1903               	skipnz
  3186  0172  024B               	subwf	(ADCconvert@adcVal),w
  3187  0173  1803               	skipnc
  3188  0174  2976               	goto	u326_21
  3189  0175  2977               	goto	u326_20
  3190  0176                     u326_21:
  3191  0176  299A               	goto	i1l5136
  3192  0177                     u326_20:
  3193                           	
  3194  0177                     i1l5132:	
  3195  0177  3000               	movlw	high(038h)
  3196  0178  024C               	subwf	(ADCconvert@adcVal+1),w
  3197  0179  3038               	movlw	low(038h)
  3198  017A  1903               	skipnz
  3199  017B  024B               	subwf	(ADCconvert@adcVal),w
  3200  017C  1C03               	skipc
  3201  017D  297F               	goto	u327_21
  3202  017E  2980               	goto	u327_20
  3203  017F                     u327_21:
  3204  017F  299A               	goto	i1l5136
  3205  0180                     u327_20:
  3206                           	line	355
  3207                           	
  3208  0180                     i1l5134:	
  3209                           ;Main.c: 354: {
  3210                           ;Main.c: 355: distance = 90+ (adcVal%100) ;
  3211  0180  3064               	movlw	low(064h)
  3212  0181  00F8               	movwf	(?___lwmod)
  3213  0182  3000               	movlw	high(064h)
  3214  0183  00F9               	movwf	((?___lwmod))+1
  3215  0184  084C               	movf	(ADCconvert@adcVal+1),w
  3216  0185  01FB               	clrf	1+(?___lwmod)+02h
  3217  0186  07FB               	addwf	1+(?___lwmod)+02h
  3218  0187  084B               	movf	(ADCconvert@adcVal),w
  3219  0188  01FA               	clrf	0+(?___lwmod)+02h
  3220  0189  07FA               	addwf	0+(?___lwmod)+02h
  3221                           
  3222  018A  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3223  018F  0878               	movf	(0+(?___lwmod)),w
  3224  0190  3E5A               	addlw	low(05Ah)
  3225  0191  1283               	bcf	status, 5	;RP0=0, select bank0
  3226  0192  1303               	bcf	status, 6	;RP1=0, select bank0
  3227  0193  00E1               	movwf	(ADCconvert@distance)
  3228  0194  0879               	movf	(1+(?___lwmod)),w
  3229  0195  1803               	skipnc
  3230  0196  3E01               	addlw	1
  3231  0197  3E00               	addlw	high(05Ah)
  3232  0198  00E2               	movwf	1+(ADCconvert@distance)
  3233                           	line	356
  3234                           ;Main.c: 356: }
  3235  0199  2A4D               	goto	i1l5158
  3236                           	line	357
  3237                           	
  3238  019A                     i1l831:	
  3239                           	
  3240  019A                     i1l5136:	
  3241                           ;Main.c: 357: else if (adcVal < 56 && adcVal >= 45)
  3242  019A  3000               	movlw	high(038h)
  3243  019B  024C               	subwf	(ADCconvert@adcVal+1),w
  3244  019C  3038               	movlw	low(038h)
  3245  019D  1903               	skipnz
  3246  019E  024B               	subwf	(ADCconvert@adcVal),w
  3247  019F  1803               	skipnc
  3248  01A0  29A2               	goto	u328_21
  3249  01A1  29A3               	goto	u328_20
  3250  01A2                     u328_21:
  3251  01A2  29C6               	goto	i1l5142
  3252  01A3                     u328_20:
  3253                           	
  3254  01A3                     i1l5138:	
  3255  01A3  3000               	movlw	high(02Dh)
  3256  01A4  024C               	subwf	(ADCconvert@adcVal+1),w
  3257  01A5  302D               	movlw	low(02Dh)
  3258  01A6  1903               	skipnz
  3259  01A7  024B               	subwf	(ADCconvert@adcVal),w
  3260  01A8  1C03               	skipc
  3261  01A9  29AB               	goto	u329_21
  3262  01AA  29AC               	goto	u329_20
  3263  01AB                     u329_21:
  3264  01AB  29C6               	goto	i1l5142
  3265  01AC                     u329_20:
  3266                           	line	359
  3267                           	
  3268  01AC                     i1l5140:	
  3269                           ;Main.c: 358: {
  3270                           ;Main.c: 359: distance = 100+ (adcVal%100) ;
  3271  01AC  3064               	movlw	low(064h)
  3272  01AD  00F8               	movwf	(?___lwmod)
  3273  01AE  3000               	movlw	high(064h)
  3274  01AF  00F9               	movwf	((?___lwmod))+1
  3275  01B0  084C               	movf	(ADCconvert@adcVal+1),w
  3276  01B1  01FB               	clrf	1+(?___lwmod)+02h
  3277  01B2  07FB               	addwf	1+(?___lwmod)+02h
  3278  01B3  084B               	movf	(ADCconvert@adcVal),w
  3279  01B4  01FA               	clrf	0+(?___lwmod)+02h
  3280  01B5  07FA               	addwf	0+(?___lwmod)+02h
  3281                           
  3282  01B6  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3283  01BB  0878               	movf	(0+(?___lwmod)),w
  3284  01BC  3E64               	addlw	low(064h)
  3285  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3286  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3287  01BF  00E1               	movwf	(ADCconvert@distance)
  3288  01C0  0879               	movf	(1+(?___lwmod)),w
  3289  01C1  1803               	skipnc
  3290  01C2  3E01               	addlw	1
  3291  01C3  3E00               	addlw	high(064h)
  3292  01C4  00E2               	movwf	1+(ADCconvert@distance)
  3293                           	line	360
  3294                           ;Main.c: 360: }
  3295  01C5  2A4D               	goto	i1l5158
  3296                           	line	361
  3297                           	
  3298  01C6                     i1l833:	
  3299                           	
  3300  01C6                     i1l5142:	
  3301                           ;Main.c: 361: else if (adcVal < 45 && adcVal >= 40)
  3302  01C6  3000               	movlw	high(02Dh)
  3303  01C7  024C               	subwf	(ADCconvert@adcVal+1),w
  3304  01C8  302D               	movlw	low(02Dh)
  3305  01C9  1903               	skipnz
  3306  01CA  024B               	subwf	(ADCconvert@adcVal),w
  3307  01CB  1803               	skipnc
  3308  01CC  29CE               	goto	u330_21
  3309  01CD  29CF               	goto	u330_20
  3310  01CE                     u330_21:
  3311  01CE  29F2               	goto	i1l5148
  3312  01CF                     u330_20:
  3313                           	
  3314  01CF                     i1l5144:	
  3315  01CF  3000               	movlw	high(028h)
  3316  01D0  024C               	subwf	(ADCconvert@adcVal+1),w
  3317  01D1  3028               	movlw	low(028h)
  3318  01D2  1903               	skipnz
  3319  01D3  024B               	subwf	(ADCconvert@adcVal),w
  3320  01D4  1C03               	skipc
  3321  01D5  29D7               	goto	u331_21
  3322  01D6  29D8               	goto	u331_20
  3323  01D7                     u331_21:
  3324  01D7  29F2               	goto	i1l5148
  3325  01D8                     u331_20:
  3326                           	line	363
  3327                           	
  3328  01D8                     i1l5146:	
  3329                           ;Main.c: 362: {
  3330                           ;Main.c: 363: distance = 110+ (adcVal%100) ;
  3331  01D8  3064               	movlw	low(064h)
  3332  01D9  00F8               	movwf	(?___lwmod)
  3333  01DA  3000               	movlw	high(064h)
  3334  01DB  00F9               	movwf	((?___lwmod))+1
  3335  01DC  084C               	movf	(ADCconvert@adcVal+1),w
  3336  01DD  01FB               	clrf	1+(?___lwmod)+02h
  3337  01DE  07FB               	addwf	1+(?___lwmod)+02h
  3338  01DF  084B               	movf	(ADCconvert@adcVal),w
  3339  01E0  01FA               	clrf	0+(?___lwmod)+02h
  3340  01E1  07FA               	addwf	0+(?___lwmod)+02h
  3341                           
  3342  01E2  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3343  01E7  0878               	movf	(0+(?___lwmod)),w
  3344  01E8  3E6E               	addlw	low(06Eh)
  3345  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
  3346  01EA  1303               	bcf	status, 6	;RP1=0, select bank0
  3347  01EB  00E1               	movwf	(ADCconvert@distance)
  3348  01EC  0879               	movf	(1+(?___lwmod)),w
  3349  01ED  1803               	skipnc
  3350  01EE  3E01               	addlw	1
  3351  01EF  3E00               	addlw	high(06Eh)
  3352  01F0  00E2               	movwf	1+(ADCconvert@distance)
  3353                           	line	364
  3354                           ;Main.c: 364: }
  3355  01F1  2A4D               	goto	i1l5158
  3356                           	line	365
  3357                           	
  3358  01F2                     i1l835:	
  3359                           	
  3360  01F2                     i1l5148:	
  3361                           ;Main.c: 365: else if (adcVal < 40 && adcVal >= 33)
  3362  01F2  3000               	movlw	high(028h)
  3363  01F3  024C               	subwf	(ADCconvert@adcVal+1),w
  3364  01F4  3028               	movlw	low(028h)
  3365  01F5  1903               	skipnz
  3366  01F6  024B               	subwf	(ADCconvert@adcVal),w
  3367  01F7  1803               	skipnc
  3368  01F8  29FA               	goto	u332_21
  3369  01F9  29FB               	goto	u332_20
  3370  01FA                     u332_21:
  3371  01FA  2A1E               	goto	i1l5154
  3372  01FB                     u332_20:
  3373                           	
  3374  01FB                     i1l5150:	
  3375  01FB  3000               	movlw	high(021h)
  3376  01FC  024C               	subwf	(ADCconvert@adcVal+1),w
  3377  01FD  3021               	movlw	low(021h)
  3378  01FE  1903               	skipnz
  3379  01FF  024B               	subwf	(ADCconvert@adcVal),w
  3380  0200  1C03               	skipc
  3381  0201  2A03               	goto	u333_21
  3382  0202  2A04               	goto	u333_20
  3383  0203                     u333_21:
  3384  0203  2A1E               	goto	i1l5154
  3385  0204                     u333_20:
  3386                           	line	367
  3387                           	
  3388  0204                     i1l5152:	
  3389                           ;Main.c: 366: {
  3390                           ;Main.c: 367: distance = 120+ (adcVal%100) ;
  3391  0204  3064               	movlw	low(064h)
  3392  0205  00F8               	movwf	(?___lwmod)
  3393  0206  3000               	movlw	high(064h)
  3394  0207  00F9               	movwf	((?___lwmod))+1
  3395  0208  084C               	movf	(ADCconvert@adcVal+1),w
  3396  0209  01FB               	clrf	1+(?___lwmod)+02h
  3397  020A  07FB               	addwf	1+(?___lwmod)+02h
  3398  020B  084B               	movf	(ADCconvert@adcVal),w
  3399  020C  01FA               	clrf	0+(?___lwmod)+02h
  3400  020D  07FA               	addwf	0+(?___lwmod)+02h
  3401                           
  3402  020E  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3403  0213  0878               	movf	(0+(?___lwmod)),w
  3404  0214  3E78               	addlw	low(078h)
  3405  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  3406  0216  1303               	bcf	status, 6	;RP1=0, select bank0
  3407  0217  00E1               	movwf	(ADCconvert@distance)
  3408  0218  0879               	movf	(1+(?___lwmod)),w
  3409  0219  1803               	skipnc
  3410  021A  3E01               	addlw	1
  3411  021B  3E00               	addlw	high(078h)
  3412  021C  00E2               	movwf	1+(ADCconvert@distance)
  3413                           	line	368
  3414                           ;Main.c: 368: }
  3415  021D  2A4D               	goto	i1l5158
  3416                           	line	369
  3417                           	
  3418  021E                     i1l837:	
  3419                           	
  3420  021E                     i1l5154:	
  3421                           ;Main.c: 369: else if (adcVal < 33 )
  3422  021E  3000               	movlw	high(021h)
  3423  021F  024C               	subwf	(ADCconvert@adcVal+1),w
  3424  0220  3021               	movlw	low(021h)
  3425  0221  1903               	skipnz
  3426  0222  024B               	subwf	(ADCconvert@adcVal),w
  3427  0223  1803               	skipnc
  3428  0224  2A26               	goto	u334_21
  3429  0225  2A27               	goto	u334_20
  3430  0226                     u334_21:
  3431  0226  2A4D               	goto	i1l5158
  3432  0227                     u334_20:
  3433                           	line	371
  3434                           	
  3435  0227                     i1l5156:	
  3436                           ;Main.c: 370: {
  3437                           ;Main.c: 371: distance = 130 + (adcVal%100) ;
  3438  0227  3064               	movlw	low(064h)
  3439  0228  00F8               	movwf	(?___lwmod)
  3440  0229  3000               	movlw	high(064h)
  3441  022A  00F9               	movwf	((?___lwmod))+1
  3442  022B  084C               	movf	(ADCconvert@adcVal+1),w
  3443  022C  01FB               	clrf	1+(?___lwmod)+02h
  3444  022D  07FB               	addwf	1+(?___lwmod)+02h
  3445  022E  084B               	movf	(ADCconvert@adcVal),w
  3446  022F  01FA               	clrf	0+(?___lwmod)+02h
  3447  0230  07FA               	addwf	0+(?___lwmod)+02h
  3448                           
  3449  0231  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  3450  0236  0878               	movf	(0+(?___lwmod)),w
  3451  0237  3E82               	addlw	low(082h)
  3452  0238  1283               	bcf	status, 5	;RP0=0, select bank0
  3453  0239  1303               	bcf	status, 6	;RP1=0, select bank0
  3454  023A  00E1               	movwf	(ADCconvert@distance)
  3455  023B  0879               	movf	(1+(?___lwmod)),w
  3456  023C  1803               	skipnc
  3457  023D  3E01               	addlw	1
  3458  023E  3E00               	addlw	high(082h)
  3459  023F  00E2               	movwf	1+(ADCconvert@distance)
  3460  0240  2A4D               	goto	i1l5158
  3461                           	line	372
  3462                           	
  3463  0241                     i1l839:	
  3464  0241  2A4D               	goto	i1l5158
  3465                           	line	377
  3466                           	
  3467  0242                     i1l838:	
  3468  0242  2A4D               	goto	i1l5158
  3469                           	
  3470  0243                     i1l836:	
  3471  0243  2A4D               	goto	i1l5158
  3472                           	
  3473  0244                     i1l834:	
  3474  0244  2A4D               	goto	i1l5158
  3475                           	
  3476  0245                     i1l832:	
  3477  0245  2A4D               	goto	i1l5158
  3478                           	
  3479  0246                     i1l830:	
  3480  0246  2A4D               	goto	i1l5158
  3481                           	
  3482  0247                     i1l828:	
  3483  0247  2A4D               	goto	i1l5158
  3484                           	
  3485  0248                     i1l826:	
  3486  0248  2A4D               	goto	i1l5158
  3487                           	
  3488  0249                     i1l824:	
  3489  0249  2A4D               	goto	i1l5158
  3490                           	
  3491  024A                     i1l822:	
  3492  024A  2A4D               	goto	i1l5158
  3493                           	
  3494  024B                     i1l820:	
  3495  024B  2A4D               	goto	i1l5158
  3496                           	
  3497  024C                     i1l818:	
  3498  024C  2A4D               	goto	i1l5158
  3499                           	
  3500  024D                     i1l816:	
  3501                           	
  3502  024D                     i1l5158:	
  3503                           ;Main.c: 372: }
  3504                           ;Main.c: 377: sprintf(adcOutput,"Distance: %dcm", distance);
  3505  024D  300B               	movlw	((STR_3-__stringbase))&0ffh
  3506  024E  00CD               	movwf	(??_ADCconvert+0)+0
  3507  024F  084D               	movf	(??_ADCconvert+0)+0,w
  3508  0250  00A0               	movwf	(?_sprintf)
  3509  0251  0862               	movf	(ADCconvert@distance+1),w
  3510  0252  01A2               	clrf	1+(?_sprintf)+01h
  3511  0253  07A2               	addwf	1+(?_sprintf)+01h
  3512  0254  0861               	movf	(ADCconvert@distance),w
  3513  0255  01A1               	clrf	0+(?_sprintf)+01h
  3514  0256  07A1               	addwf	0+(?_sprintf)+01h
  3515                           
  3516  0257  3051               	movlw	(ADCconvert@adcOutput)&0ffh
  3517  0258  120A  118A  2395   	fcall	_sprintf
              120A  118A         
  3518                           	line	378
  3519                           	
  3520  025D                     i1l5160:	
  3521                           ;Main.c: 378: lcd_set_cursor(0x40);
  3522  025D  3040               	movlw	(040h)
  3523  025E  120A  158A  2786   	fcall	_lcd_set_cursor
              120A  118A         
  3524                           	line	380
  3525                           ;Main.c: 380: lcd_write_string(adcOutput);
  3526  0263  3051               	movlw	(ADCconvert@adcOutput)&0ffh
  3527  0264  120A  158A  27CA   	fcall	_lcd_write_string
              120A  118A         
  3528                           	line	381
  3529                           	
  3530  0269                     i1l840:	
  3531  0269  0008               	return
  3532                           	opt stack 0
  3533                           GLOBAL	__end_of_ADCconvert
  3534  026A                     	__end_of_ADCconvert:
  3535 ;; =============== function _ADCconvert ends ============
  3536                           
  3537                           	signat	_ADCconvert,4216
  3538                           	global	_readAvgDistance
  3539                           psect	text464,local,class=CODE,delta=2
  3540                           global __ptext464
  3541  0590                     __ptext464:
  3542                           
  3543 ;; *************** function _readAvgDistance *****************
  3544 ;; Defined at:
  3545 ;;		line 300 in file "E:\Mechatronics 2\Assignment2\Main.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  i               2   41[BANK0 ] int 
  3550 ;;  adcOutput      16   21[BANK0 ] unsigned char [16]
  3551 ;;  averageval      2   39[BANK0 ] unsigned int 
  3552 ;;  fullval         2   37[BANK0 ] unsigned int 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  2   15[BANK0 ] unsigned int 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       2       0       0       0
  3563 ;;      Locals:         0      22       0       0       0
  3564 ;;      Temps:          0       4       0       0       0
  3565 ;;      Totals:         0      28       0       0       0
  3566 ;;Total ram usage:       28 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    2
  3569 ;; This function calls:
  3570 ;;		_adc_read_channel
  3571 ;;		___lwdiv
  3572 ;;		_sprintf
  3573 ;;		_lcd_set_cursor
  3574 ;;		i1_lcd_write_control
  3575 ;;		_lcd_write_string
  3576 ;; This function is called by:
  3577 ;;		_isr1
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           psect	text464
  3581                           	file	"E:\Mechatronics 2\Assignment2\Main.c"
  3582                           	line	300
  3583                           	global	__size_of_readAvgDistance
  3584  0093                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  3585                           	
  3586  0590                     _readAvgDistance:	
  3587                           	opt	stack 1
  3588                           ; Regs used in _readAvgDistance: [allreg]
  3589                           	line	301
  3590                           	
  3591  0590                     i1l5052:	
  3592                           ;Main.c: 301: unsigned int fullval = 0, averageval;
  3593  0590  1283               	bcf	status, 5	;RP0=0, select bank0
  3594  0591  1303               	bcf	status, 6	;RP1=0, select bank0
  3595  0592  01C5               	clrf	(readAvgDistance@fullval)
  3596  0593  01C6               	clrf	(readAvgDistance@fullval+1)
  3597                           	line	302
  3598                           	
  3599  0594                     i1l5054:	
  3600                           ;Main.c: 302: char adcOutput[16] = "";
  3601  0594  3035               	movlw	(readAvgDistance@adcOutput)&0ffh
  3602  0595  0084               	movwf	fsr0
  3603  0596  30B0               	movlw	low(readAvgDistance@F1216)
  3604  0597  00B1               	movwf	(??_readAvgDistance+0)+0
  3605  0598  0804               	movf	fsr0,w
  3606  0599  00B2               	movwf	((??_readAvgDistance+0)+0+1)
  3607  059A  3010               	movlw	16
  3608  059B  00B3               	movwf	((??_readAvgDistance+0)+0+2)
  3609  059C                     u307_20:
  3610  059C  0831               	movf	(??_readAvgDistance+0)+0,w
  3611  059D  0084               	movwf	fsr0
  3612  059E  1383               	bcf	status, 7	;select IRP bank1
  3613                           	
  3614  059F  0800               	movf	indf,w
  3615  05A0  00B4               	movwf	((??_readAvgDistance+0)+0+3)
  3616  05A1  0AB1               	incf	(??_readAvgDistance+0)+0,f
  3617  05A2  0832               	movf	((??_readAvgDistance+0)+0+1),w
  3618  05A3  0084               	movwf	fsr0
  3619                           	
  3620  05A4  0834               	movf	((??_readAvgDistance+0)+0+3),w
  3621  05A5  0080               	movwf	indf
  3622  05A6  0AB2               	incf	((??_readAvgDistance+0)+0+1),f
  3623  05A7  0BB3               	decfsz	((??_readAvgDistance+0)+0+2),f
  3624  05A8  2D9C               	goto	u307_20
  3625                           	line	304
  3626                           	
  3627  05A9                     i1l5056:	
  3628                           ;Main.c: 304: for (int i = 0; i < 10; i++)
  3629  05A9  01C9               	clrf	(readAvgDistance@i)
  3630  05AA  01CA               	clrf	(readAvgDistance@i+1)
  3631                           	
  3632  05AB                     i1l5058:	
  3633  05AB  084A               	movf	(readAvgDistance@i+1),w
  3634  05AC  3A80               	xorlw	80h
  3635  05AD  00FF               	movwf	btemp+1
  3636  05AE  3080               	movlw	(high(0Ah))^80h
  3637  05AF  027F               	subwf	btemp+1,w
  3638  05B0  1D03               	skipz
  3639  05B1  2DB4               	goto	u308_25
  3640  05B2  300A               	movlw	low(0Ah)
  3641  05B3  0249               	subwf	(readAvgDistance@i),w
  3642  05B4                     u308_25:
  3643                           
  3644  05B4  1C03               	skipc
  3645  05B5  2DB7               	goto	u308_21
  3646  05B6  2DB8               	goto	u308_20
  3647  05B7                     u308_21:
  3648  05B7  2DBA               	goto	i1l5062
  3649  05B8                     u308_20:
  3650  05B8  2DDE               	goto	i1l5068
  3651                           	
  3652  05B9                     i1l5060:	
  3653  05B9  2DDE               	goto	i1l5068
  3654                           	line	305
  3655                           	
  3656  05BA                     i1l808:	
  3657                           	line	306
  3658                           	
  3659  05BA                     i1l5062:	
  3660                           ;Main.c: 305: {
  3661                           ;Main.c: 306: fullval += adc_read_channel(0);
  3662  05BA  3000               	movlw	(0)
  3663  05BB  120A  118A  270F   	fcall	_adc_read_channel
              120A  118A         
  3664  05C0  1283               	bcf	status, 5	;RP0=0, select bank0
  3665  05C1  1303               	bcf	status, 6	;RP1=0, select bank0
  3666  05C2  00B1               	movwf	(??_readAvgDistance+0)+0
  3667  05C3  01B2               	clrf	(??_readAvgDistance+0)+0+1
  3668  05C4  0831               	movf	0+(??_readAvgDistance+0)+0,w
  3669  05C5  07C5               	addwf	(readAvgDistance@fullval),f
  3670  05C6  1803               	skipnc
  3671  05C7  0AC6               	incf	(readAvgDistance@fullval+1),f
  3672  05C8  0832               	movf	1+(??_readAvgDistance+0)+0,w
  3673  05C9  07C6               	addwf	(readAvgDistance@fullval+1),f
  3674                           	line	304
  3675                           	
  3676  05CA                     i1l5064:	
  3677  05CA  3001               	movlw	low(01h)
  3678  05CB  07C9               	addwf	(readAvgDistance@i),f
  3679  05CC  1803               	skipnc
  3680  05CD  0ACA               	incf	(readAvgDistance@i+1),f
  3681  05CE  3000               	movlw	high(01h)
  3682  05CF  07CA               	addwf	(readAvgDistance@i+1),f
  3683                           	
  3684  05D0                     i1l5066:	
  3685  05D0  084A               	movf	(readAvgDistance@i+1),w
  3686  05D1  3A80               	xorlw	80h
  3687  05D2  00FF               	movwf	btemp+1
  3688  05D3  3080               	movlw	(high(0Ah))^80h
  3689  05D4  027F               	subwf	btemp+1,w
  3690  05D5  1D03               	skipz
  3691  05D6  2DD9               	goto	u309_25
  3692  05D7  300A               	movlw	low(0Ah)
  3693  05D8  0249               	subwf	(readAvgDistance@i),w
  3694  05D9                     u309_25:
  3695                           
  3696  05D9  1C03               	skipc
  3697  05DA  2DDC               	goto	u309_21
  3698  05DB  2DDD               	goto	u309_20
  3699  05DC                     u309_21:
  3700  05DC  2DBA               	goto	i1l5062
  3701  05DD                     u309_20:
  3702  05DD  2DDE               	goto	i1l5068
  3703                           	
  3704  05DE                     i1l809:	
  3705                           	line	309
  3706                           	
  3707  05DE                     i1l5068:	
  3708                           ;Main.c: 308: }
  3709                           ;Main.c: 309: averageval = fullval / 10;
  3710  05DE  300A               	movlw	low(0Ah)
  3711  05DF  00F0               	movwf	(?___lwdiv)
  3712  05E0  3000               	movlw	high(0Ah)
  3713  05E1  00F1               	movwf	((?___lwdiv))+1
  3714  05E2  1283               	bcf	status, 5	;RP0=0, select bank0
  3715  05E3  1303               	bcf	status, 6	;RP1=0, select bank0
  3716  05E4  0846               	movf	(readAvgDistance@fullval+1),w
  3717  05E5  01F3               	clrf	1+(?___lwdiv)+02h
  3718  05E6  07F3               	addwf	1+(?___lwdiv)+02h
  3719  05E7  0845               	movf	(readAvgDistance@fullval),w
  3720  05E8  01F2               	clrf	0+(?___lwdiv)+02h
  3721  05E9  07F2               	addwf	0+(?___lwdiv)+02h
  3722                           
  3723  05EA  120A  118A  267D   	fcall	___lwdiv
              120A  118A         
  3724  05EF  0871               	movf	(1+(?___lwdiv)),w
  3725  05F0  1283               	bcf	status, 5	;RP0=0, select bank0
  3726  05F1  1303               	bcf	status, 6	;RP1=0, select bank0
  3727  05F2  01C8               	clrf	(readAvgDistance@averageval+1)
  3728  05F3  07C8               	addwf	(readAvgDistance@averageval+1)
  3729  05F4  0870               	movf	(0+(?___lwdiv)),w
  3730  05F5  01C7               	clrf	(readAvgDistance@averageval)
  3731  05F6  07C7               	addwf	(readAvgDistance@averageval)
  3732                           
  3733                           	line	310
  3734                           	
  3735  05F7                     i1l5070:	
  3736                           ;Main.c: 310: sprintf(adcOutput,"Adc Value: %d", averageval);
  3737  05F7  301A               	movlw	((STR_2-__stringbase))&0ffh
  3738  05F8  00B1               	movwf	(??_readAvgDistance+0)+0
  3739  05F9  0831               	movf	(??_readAvgDistance+0)+0,w
  3740  05FA  00A0               	movwf	(?_sprintf)
  3741  05FB  0848               	movf	(readAvgDistance@averageval+1),w
  3742  05FC  01A2               	clrf	1+(?_sprintf)+01h
  3743  05FD  07A2               	addwf	1+(?_sprintf)+01h
  3744  05FE  0847               	movf	(readAvgDistance@averageval),w
  3745  05FF  01A1               	clrf	0+(?_sprintf)+01h
  3746  0600  07A1               	addwf	0+(?_sprintf)+01h
  3747                           
  3748  0601  3035               	movlw	(readAvgDistance@adcOutput)&0ffh
  3749  0602  120A  118A  2395   	fcall	_sprintf
              120A  118A         
  3750                           	line	311
  3751                           	
  3752  0607                     i1l5072:	
  3753                           ;Main.c: 311: lcd_set_cursor(0x00);
  3754  0607  3000               	movlw	(0)
  3755  0608  120A  158A  2786   	fcall	_lcd_set_cursor
              120A  118A         
  3756                           	line	312
  3757                           	
  3758  060D                     i1l5074:	
  3759                           ;Main.c: 312: lcd_write_control(0b00000001);
  3760  060D  3001               	movlw	(01h)
  3761  060E  120A  158A  27A2   	fcall	i1_lcd_write_control
              120A  118A         
  3762                           	line	313
  3763                           	
  3764  0613                     i1l5076:	
  3765                           ;Main.c: 313: lcd_write_string(adcOutput);
  3766  0613  3035               	movlw	(readAvgDistance@adcOutput)&0ffh
  3767  0614  120A  158A  27CA   	fcall	_lcd_write_string
              120A  118A         
  3768                           	line	314
  3769                           	
  3770  0619                     i1l5078:	
  3771                           ;Main.c: 314: return averageval;
  3772  0619  1283               	bcf	status, 5	;RP0=0, select bank0
  3773  061A  1303               	bcf	status, 6	;RP1=0, select bank0
  3774  061B  0848               	movf	(readAvgDistance@averageval+1),w
  3775  061C  01B0               	clrf	(?_readAvgDistance+1)
  3776  061D  07B0               	addwf	(?_readAvgDistance+1)
  3777  061E  0847               	movf	(readAvgDistance@averageval),w
  3778  061F  01AF               	clrf	(?_readAvgDistance)
  3779  0620  07AF               	addwf	(?_readAvgDistance)
  3780                           
  3781  0621  2E22               	goto	i1l810
  3782                           	
  3783  0622                     i1l5080:	
  3784                           	line	315
  3785                           	
  3786  0622                     i1l810:	
  3787  0622  0008               	return
  3788                           	opt stack 0
  3789                           GLOBAL	__end_of_readAvgDistance
  3790  0623                     	__end_of_readAvgDistance:
  3791 ;; =============== function _readAvgDistance ends ============
  3792                           
  3793                           	signat	_readAvgDistance,90
  3794                           	global	_lcd_write_string
  3795                           psect	text465,local,class=CODE,delta=2
  3796                           global __ptext465
  3797  0FCA                     __ptext465:
  3798                           
  3799 ;; *************** function _lcd_write_string *****************
  3800 ;; Defined at:
  3801 ;;		line 48 in file "E:\Mechatronics 2\Assignment2\lcd.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  s               1    wreg     PTR unsigned char 
  3804 ;;		 -> ADCconvert@adcOutput(16), readAvgDistance@adcOutput(16), readDistance@adcOutput(16), 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  s               1    4[COMMON] PTR unsigned char 
  3807 ;;		 -> ADCconvert@adcOutput(16), readAvgDistance@adcOutput(16), readDistance@adcOutput(16), 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;		None               void
  3810 ;; Registers used:
  3811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3817 ;;      Params:         0       0       0       0       0
  3818 ;;      Locals:         1       0       0       0       0
  3819 ;;      Temps:          1       0       0       0       0
  3820 ;;      Totals:         2       0       0       0       0
  3821 ;;Total ram usage:        2 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    1
  3824 ;; This function calls:
  3825 ;;		_lcd_write_data
  3826 ;; This function is called by:
  3827 ;;		_readAvgDistance
  3828 ;;		_ADCconvert
  3829 ;;		_readDistance
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           psect	text465
  3833                           	file	"E:\Mechatronics 2\Assignment2\lcd.c"
  3834                           	line	48
  3835                           	global	__size_of_lcd_write_string
  3836  001A                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3837                           	
  3838  0FCA                     _lcd_write_string:	
  3839                           	opt	stack 1
  3840                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3841                           ;lcd_write_string@s stored from wreg
  3842  0FCA  00F4               	movwf	(lcd_write_string@s)
  3843                           	line	50
  3844                           	
  3845  0FCB                     i1l5258:	
  3846                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3847  0FCB  2FDA               	goto	i1l5264
  3848                           	
  3849  0FCC                     i1l2253:	
  3850                           	
  3851  0FCC                     i1l5260:	
  3852  0FCC  0874               	movf	(lcd_write_string@s),w
  3853  0FCD  0084               	movwf	fsr0
  3854  0FCE  1383               	bcf	status, 7	;select IRP bank0
  3855  0FCF  0800               	movf	indf,w
  3856  0FD0  120A  158A  278F   	fcall	_lcd_write_data
              120A  158A         
  3857                           	
  3858  0FD5                     i1l5262:	
  3859  0FD5  3001               	movlw	(01h)
  3860  0FD6  00F3               	movwf	(??_lcd_write_string+0)+0
  3861  0FD7  0873               	movf	(??_lcd_write_string+0)+0,w
  3862  0FD8  07F4               	addwf	(lcd_write_string@s),f
  3863  0FD9  2FDA               	goto	i1l5264
  3864                           	
  3865  0FDA                     i1l2252:	
  3866                           	
  3867  0FDA                     i1l5264:	
  3868  0FDA  0874               	movf	(lcd_write_string@s),w
  3869  0FDB  0084               	movwf	fsr0
  3870  0FDC  1383               	bcf	status, 7	;select IRP bank0
  3871  0FDD  0880               	movf	indf,f
  3872  0FDE  1D03               	skipz
  3873  0FDF  2FE1               	goto	u344_21
  3874  0FE0  2FE2               	goto	u344_20
  3875  0FE1                     u344_21:
  3876  0FE1  2FCC               	goto	i1l5260
  3877  0FE2                     u344_20:
  3878  0FE2  2FE3               	goto	i1l2255
  3879                           	
  3880  0FE3                     i1l2254:	
  3881                           	line	51
  3882                           	
  3883  0FE3                     i1l2255:	
  3884  0FE3  0008               	return
  3885                           	opt stack 0
  3886                           GLOBAL	__end_of_lcd_write_string
  3887  0FE4                     	__end_of_lcd_write_string:
  3888 ;; =============== function _lcd_write_string ends ============
  3889                           
  3890                           	signat	_lcd_write_string,4216
  3891                           	global	_lcd_set_cursor
  3892                           psect	text466,local,class=CODE,delta=2
  3893                           global __ptext466
  3894  0F86                     __ptext466:
  3895                           
  3896 ;; *************** function _lcd_set_cursor *****************
  3897 ;; Defined at:
  3898 ;;		line 42 in file "E:\Mechatronics 2\Assignment2\lcd.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  address         1    wreg     unsigned char 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  address         1    3[COMMON] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, pclath, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         1       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         1       0       0       0       0
  3916 ;;Total ram usage:        1 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    1
  3919 ;; This function calls:
  3920 ;;		i1_lcd_write_control
  3921 ;; This function is called by:
  3922 ;;		_readAvgDistance
  3923 ;;		_ADCconvert
  3924 ;;		_readDistance
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           psect	text466
  3928                           	file	"E:\Mechatronics 2\Assignment2\lcd.c"
  3929                           	line	42
  3930                           	global	__size_of_lcd_set_cursor
  3931  0009                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3932                           	
  3933  0F86                     _lcd_set_cursor:	
  3934                           	opt	stack 1
  3935                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3936                           ;lcd_set_cursor@address stored from wreg
  3937  0F86  00F3               	movwf	(lcd_set_cursor@address)
  3938                           	line	43
  3939                           	
  3940  0F87                     i1l5254:	
  3941                           ;lcd.c: 43: address |= 0b10000000;
  3942  0F87  17F3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3943                           	line	44
  3944                           	
  3945  0F88                     i1l5256:	
  3946                           ;lcd.c: 44: lcd_write_control(address);
  3947  0F88  0873               	movf	(lcd_set_cursor@address),w
  3948  0F89  120A  158A  27A2   	fcall	i1_lcd_write_control
              120A  158A         
  3949                           	line	45
  3950                           	
  3951  0F8E                     i1l2249:	
  3952  0F8E  0008               	return
  3953                           	opt stack 0
  3954                           GLOBAL	__end_of_lcd_set_cursor
  3955  0F8F                     	__end_of_lcd_set_cursor:
  3956 ;; =============== function _lcd_set_cursor ends ============
  3957                           
  3958                           	signat	_lcd_set_cursor,4216
  3959                           	global	i1_lcd_write_control
  3960                           psect	text467,local,class=CODE,delta=2
  3961                           global __ptext467
  3962  0FA2                     __ptext467:
  3963                           
  3964 ;; *************** function i1_lcd_write_control *****************
  3965 ;; Defined at:
  3966 ;;		line 18 in file "E:\Mechatronics 2\Assignment2\lcd.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  lcd_write_co    1    wreg     unsigned char 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  lcd_write_co    1    2[COMMON] unsigned char 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;		None               void
  3973 ;; Registers used:
  3974 ;;		wreg
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3980 ;;      Params:         0       0       0       0       0
  3981 ;;      Locals:         1       0       0       0       0
  3982 ;;      Temps:          2       0       0       0       0
  3983 ;;      Totals:         3       0       0       0       0
  3984 ;;Total ram usage:        3 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_readAvgDistance
  3990 ;;		_lcd_set_cursor
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           psect	text467
  3994                           	file	"E:\Mechatronics 2\Assignment2\lcd.c"
  3995                           	line	18
  3996                           	global	__size_ofi1_lcd_write_control
  3997  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
  3998                           	
  3999  0FA2                     i1_lcd_write_control:	
  4000                           	opt	stack 1
  4001                           ; Regs used in i1_lcd_write_control: [wreg]
  4002                           ;i1lcd_write_control@databyte stored from wreg
  4003  0FA2  00F2               	movwf	(i1lcd_write_control@databyte)
  4004                           	line	19
  4005                           	
  4006  0FA3                     i1l5358:	
  4007                           ;lcd.c: 19: RE2 = 0;
  4008  0FA3  1283               	bcf	status, 5	;RP0=0, select bank0
  4009  0FA4  1303               	bcf	status, 6	;RP1=0, select bank0
  4010  0FA5  1109               	bcf	(74/8),(74)&7
  4011                           	line	20
  4012                           ;lcd.c: 20: RE1 = 0;
  4013  0FA6  1089               	bcf	(73/8),(73)&7
  4014                           	line	21
  4015                           ;lcd.c: 21: RE0 = 0;
  4016  0FA7  1009               	bcf	(72/8),(72)&7
  4017                           	line	22
  4018                           	
  4019  0FA8                     i1l5360:	
  4020                           ;lcd.c: 22: PORTD = databyte;
  4021  0FA8  0872               	movf	(i1lcd_write_control@databyte),w
  4022  0FA9  0088               	movwf	(8)	;volatile
  4023                           	line	23
  4024                           	
  4025  0FAA                     i1l5362:	
  4026                           ;lcd.c: 23: RE2 = 1;
  4027  0FAA  1509               	bsf	(74/8),(74)&7
  4028                           	line	24
  4029                           	
  4030  0FAB                     i1l5364:	
  4031                           ;lcd.c: 24: RE2 = 0;
  4032  0FAB  1109               	bcf	(74/8),(74)&7
  4033                           	line	25
  4034                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  4035                           	opt asmopt_off
  4036  0FAC  300D               movlw	13
  4037  0FAD  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
  4038  0FAE  30FB               	movlw	251
  4039  0FAF  00F0               movwf	((??i1_lcd_write_control+0)+0),f
  4040  0FB0                     u374_27:
  4041  0FB0  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
  4042  0FB1  2FB0               	goto	u374_27
  4043  0FB2  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
  4044  0FB3  2FB0               	goto	u374_27
  4045  0FB4  2FB5               	nop2
  4046                           opt asmopt_on
  4047                           
  4048                           	line	26
  4049                           	
  4050  0FB5                     i1l2243:	
  4051  0FB5  0008               	return
  4052                           	opt stack 0
  4053                           GLOBAL	__end_ofi1_lcd_write_control
  4054  0FB6                     	__end_ofi1_lcd_write_control:
  4055 ;; =============== function i1_lcd_write_control ends ============
  4056                           
  4057                           	signat	i1_lcd_write_control,88
  4058                           	global	_lcd_write_data
  4059                           psect	text468,local,class=CODE,delta=2
  4060                           global __ptext468
  4061  0F8F                     __ptext468:
  4062                           
  4063 ;; *************** function _lcd_write_data *****************
  4064 ;; Defined at:
  4065 ;;		line 30 in file "E:\Mechatronics 2\Assignment2\lcd.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  databyte        1    wreg     unsigned char 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  databyte        1    2[COMMON] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;		None               void
  4072 ;; Registers used:
  4073 ;;		wreg
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         0       0       0       0       0
  4080 ;;      Locals:         1       0       0       0       0
  4081 ;;      Temps:          2       0       0       0       0
  4082 ;;      Totals:         3       0       0       0       0
  4083 ;;Total ram usage:        3 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_lcd_write_string
  4089 ;;		_lcd_write_2_digit_bcd
  4090 ;;		_lcd_write_3_digit_bcd
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           psect	text468
  4094                           	file	"E:\Mechatronics 2\Assignment2\lcd.c"
  4095                           	line	30
  4096                           	global	__size_of_lcd_write_data
  4097  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  4098                           	
  4099  0F8F                     _lcd_write_data:	
  4100                           	opt	stack 1
  4101                           ; Regs used in _lcd_write_data: [wreg]
  4102                           ;lcd_write_data@databyte stored from wreg
  4103  0F8F  00F2               	movwf	(lcd_write_data@databyte)
  4104                           	line	31
  4105                           	
  4106  0F90                     i1l5292:	
  4107                           ;lcd.c: 31: RE2 = 0;
  4108  0F90  1283               	bcf	status, 5	;RP0=0, select bank0
  4109  0F91  1303               	bcf	status, 6	;RP1=0, select bank0
  4110  0F92  1109               	bcf	(74/8),(74)&7
  4111                           	line	32
  4112                           ;lcd.c: 32: RE1 = 0;
  4113  0F93  1089               	bcf	(73/8),(73)&7
  4114                           	line	33
  4115                           ;lcd.c: 33: RE0 = 1;
  4116  0F94  1409               	bsf	(72/8),(72)&7
  4117                           	line	34
  4118                           	
  4119  0F95                     i1l5294:	
  4120                           ;lcd.c: 34: PORTD = databyte;
  4121  0F95  0872               	movf	(lcd_write_data@databyte),w
  4122  0F96  0088               	movwf	(8)	;volatile
  4123                           	line	35
  4124                           	
  4125  0F97                     i1l5296:	
  4126                           ;lcd.c: 35: RE2 = 1;
  4127  0F97  1509               	bsf	(74/8),(74)&7
  4128                           	line	36
  4129                           	
  4130  0F98                     i1l5298:	
  4131                           ;lcd.c: 36: RE2 = 0;
  4132  0F98  1109               	bcf	(74/8),(74)&7
  4133                           	line	37
  4134                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  4135                           	opt asmopt_off
  4136  0F99  3007               movlw	7
  4137  0F9A  00F1               movwf	((??_lcd_write_data+0)+0+1),f
  4138  0F9B  307D               	movlw	125
  4139  0F9C  00F0               movwf	((??_lcd_write_data+0)+0),f
  4140  0F9D                     u375_27:
  4141  0F9D  0BF0               	decfsz	((??_lcd_write_data+0)+0),f
  4142  0F9E  2F9D               	goto	u375_27
  4143  0F9F  0BF1               	decfsz	((??_lcd_write_data+0)+0+1),f
  4144  0FA0  2F9D               	goto	u375_27
  4145                           opt asmopt_on
  4146                           
  4147                           	line	38
  4148                           	
  4149  0FA1                     i1l2246:	
  4150  0FA1  0008               	return
  4151                           	opt stack 0
  4152                           GLOBAL	__end_of_lcd_write_data
  4153  0FA2                     	__end_of_lcd_write_data:
  4154 ;; =============== function _lcd_write_data ends ============
  4155                           
  4156                           	signat	_lcd_write_data,4216
  4157                           	global	_sprintf
  4158                           psect	text469,local,class=CODE,delta=2
  4159                           global __ptext469
  4160  0395                     __ptext469:
  4161                           
  4162 ;; *************** function _sprintf *****************
  4163 ;; Defined at:
  4164 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  sp              1    wreg     PTR unsigned char 
  4167 ;;		 -> ADCconvert@adcOutput(16), readAvgDistance@adcOutput(16), readDistance@adcOutput(16), 
  4168 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  4169 ;;		 -> STR_3(15), STR_2(14), STR_1(14), 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  4172 ;;		 -> ADCconvert@adcOutput(16), readAvgDistance@adcOutput(16), readDistance@adcOutput(16), 
  4173 ;;  _val            4    9[BANK0 ] struct .
  4174 ;;  c               1   14[BANK0 ] char 
  4175 ;;  prec            1    8[BANK0 ] char 
  4176 ;;  flag            1    7[BANK0 ] unsigned char 
  4177 ;;  ap              1    6[BANK0 ] PTR void [1]
  4178 ;;		 -> ?_sprintf(2), 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  2    0[BANK0 ] int 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       3       0       0       0
  4189 ;;      Locals:         0       9       0       0       0
  4190 ;;      Temps:          0       3       0       0       0
  4191 ;;      Totals:         0      15       0       0       0
  4192 ;;Total ram usage:       15 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    1
  4195 ;; This function calls:
  4196 ;;		___lwdiv
  4197 ;;		___lwmod
  4198 ;; This function is called by:
  4199 ;;		_readAvgDistance
  4200 ;;		_ADCconvert
  4201 ;;		_readDistance
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           psect	text469
  4205                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  4206                           	line	488
  4207                           	global	__size_of_sprintf
  4208  00FE                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4209                           	
  4210  0395                     _sprintf:	
  4211                           	opt	stack 1
  4212                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4213                           ;sprintf@sp stored from wreg
  4214                           	line	537
  4215  0395  1283               	bcf	status, 5	;RP0=0, select bank0
  4216  0396  1303               	bcf	status, 6	;RP1=0, select bank0
  4217  0397  00AD               	movwf	(sprintf@sp)
  4218                           	
  4219  0398                     i1l5196:	
  4220  0398  3021               	movlw	(?_sprintf+01h)&0ffh
  4221  0399  00A3               	movwf	(??_sprintf+0)+0
  4222  039A  0823               	movf	(??_sprintf+0)+0,w
  4223  039B  00A6               	movwf	(sprintf@ap)
  4224                           	line	540
  4225  039C  2C79               	goto	i1l5248
  4226                           	
  4227  039D                     i1l2283:	
  4228                           	line	542
  4229                           	
  4230  039D                     i1l5198:	
  4231  039D  082E               	movf	(sprintf@c),w
  4232  039E  3A25               	xorlw	025h
  4233  039F  1903               	skipnz
  4234  03A0  2BA2               	goto	u336_21
  4235  03A1  2BA3               	goto	u336_20
  4236  03A2                     u336_21:
  4237  03A2  2BAF               	goto	i1l2284
  4238  03A3                     u336_20:
  4239                           	line	545
  4240                           	
  4241  03A3                     i1l5200:	
  4242  03A3  082E               	movf	(sprintf@c),w
  4243  03A4  00A3               	movwf	(??_sprintf+0)+0
  4244  03A5  082D               	movf	(sprintf@sp),w
  4245  03A6  0084               	movwf	fsr0
  4246  03A7  0823               	movf	(??_sprintf+0)+0,w
  4247  03A8  1383               	bcf	status, 7	;select IRP bank0
  4248  03A9  0080               	movwf	indf
  4249                           	
  4250  03AA                     i1l5202:	
  4251  03AA  3001               	movlw	(01h)
  4252  03AB  00A3               	movwf	(??_sprintf+0)+0
  4253  03AC  0823               	movf	(??_sprintf+0)+0,w
  4254  03AD  07AD               	addwf	(sprintf@sp),f
  4255                           	line	546
  4256  03AE  2C79               	goto	i1l5248
  4257                           	line	547
  4258                           	
  4259  03AF                     i1l2284:	
  4260                           	line	552
  4261  03AF  01A7               	clrf	(sprintf@flag)
  4262                           	line	638
  4263  03B0  2BB6               	goto	i1l5206
  4264                           	line	640
  4265                           	
  4266  03B1                     i1l2286:	
  4267                           	line	641
  4268  03B1  2C8D               	goto	i1l5250
  4269                           	line	700
  4270                           	
  4271  03B2                     i1l2288:	
  4272  03B2  2BCB               	goto	i1l5208
  4273                           	line	701
  4274                           	
  4275  03B3                     i1l2289:	
  4276                           	line	702
  4277  03B3  2BCB               	goto	i1l5208
  4278                           	line	805
  4279                           	
  4280  03B4                     i1l2291:	
  4281                           	line	816
  4282  03B4  2C79               	goto	i1l5248
  4283                           	line	825
  4284                           	
  4285  03B5                     i1l5204:	
  4286  03B5  2BCB               	goto	i1l5208
  4287                           	line	638
  4288                           	
  4289  03B6                     i1l2285:	
  4290                           	
  4291  03B6                     i1l5206:	
  4292  03B6  3001               	movlw	01h
  4293  03B7  07A0               	addwf	(sprintf@f),f
  4294  03B8  30FF               	movlw	-01h
  4295  03B9  0720               	addwf	(sprintf@f),w
  4296  03BA  0084               	movwf	fsr0
  4297  03BB  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4298  03C0  00AE               	movwf	(sprintf@c)
  4299                           	; Switch size 1, requested type "space"
  4300                           ; Number of cases is 3, Range of values is 0 to 105
  4301                           ; switch strategies available:
  4302                           ; Name         Instructions Cycles
  4303                           ; simple_byte           10     6 (average)
  4304                           ; jumptable            260     6 (fixed)
  4305                           ; rangetable           110     6 (fixed)
  4306                           ; spacedrange          218     9 (fixed)
  4307                           ; locatedrange         106     3 (fixed)
  4308                           ;	Chosen strategy is simple_byte
  4309                           
  4310                           	opt asmopt_off
  4311  03C1  3A00               	xorlw	0^0	; case 0
  4312  03C2  1903               	skipnz
  4313  03C3  2C8D               	goto	i1l5250
  4314  03C4  3A64               	xorlw	100^0	; case 100
  4315  03C5  1903               	skipnz
  4316  03C6  2BCB               	goto	i1l5208
  4317  03C7  3A0D               	xorlw	105^100	; case 105
  4318  03C8  1903               	skipnz
  4319  03C9  2BCB               	goto	i1l5208
  4320  03CA  2C79               	goto	i1l5248
  4321                           	opt asmopt_on
  4322                           
  4323                           	line	825
  4324                           	
  4325  03CB                     i1l2290:	
  4326                           	line	1254
  4327                           	
  4328  03CB                     i1l5208:	
  4329  03CB  0826               	movf	(sprintf@ap),w
  4330  03CC  0084               	movwf	fsr0
  4331  03CD  1383               	bcf	status, 7	;select IRP bank0
  4332  03CE  0800               	movf	indf,w
  4333  03CF  00A9               	movwf	(sprintf@_val)
  4334  03D0  0A84               	incf	fsr0,f
  4335  03D1  0800               	movf	indf,w
  4336  03D2  00AA               	movwf	(sprintf@_val+1)
  4337                           	
  4338  03D3                     i1l5210:	
  4339  03D3  3002               	movlw	(02h)
  4340  03D4  00A3               	movwf	(??_sprintf+0)+0
  4341  03D5  0823               	movf	(??_sprintf+0)+0,w
  4342  03D6  07A6               	addwf	(sprintf@ap),f
  4343                           	line	1256
  4344                           	
  4345  03D7                     i1l5212:	
  4346  03D7  1FAA               	btfss	(sprintf@_val+1),7
  4347  03D8  2BDA               	goto	u337_21
  4348  03D9  2BDB               	goto	u337_20
  4349  03DA                     u337_21:
  4350  03DA  2BE5               	goto	i1l5218
  4351  03DB                     u337_20:
  4352                           	line	1257
  4353                           	
  4354  03DB                     i1l5214:	
  4355  03DB  3003               	movlw	(03h)
  4356  03DC  00A3               	movwf	(??_sprintf+0)+0
  4357  03DD  0823               	movf	(??_sprintf+0)+0,w
  4358  03DE  04A7               	iorwf	(sprintf@flag),f
  4359                           	line	1258
  4360                           	
  4361  03DF                     i1l5216:	
  4362  03DF  09A9               	comf	(sprintf@_val),f
  4363  03E0  09AA               	comf	(sprintf@_val+1),f
  4364  03E1  0AA9               	incf	(sprintf@_val),f
  4365  03E2  1903               	skipnz
  4366  03E3  0AAA               	incf	(sprintf@_val+1),f
  4367  03E4  2BE5               	goto	i1l5218
  4368                           	line	1259
  4369                           	
  4370  03E5                     i1l2292:	
  4371                           	line	1300
  4372                           	
  4373  03E5                     i1l5218:	
  4374  03E5  01AE               	clrf	(sprintf@c)
  4375  03E6  1403               	bsf	status,0
  4376  03E7  0DAE               	rlf	(sprintf@c),f
  4377                           	
  4378  03E8                     i1l5220:	
  4379  03E8  082E               	movf	(sprintf@c),w
  4380  03E9  3A05               	xorlw	05h
  4381  03EA  1D03               	skipz
  4382  03EB  2BED               	goto	u338_21
  4383  03EC  2BEE               	goto	u338_20
  4384  03ED                     u338_21:
  4385  03ED  2BF0               	goto	i1l5224
  4386  03EE                     u338_20:
  4387  03EE  2C18               	goto	i1l5232
  4388                           	
  4389  03EF                     i1l5222:	
  4390  03EF  2C18               	goto	i1l5232
  4391                           	line	1301
  4392                           	
  4393  03F0                     i1l2293:	
  4394                           	
  4395  03F0                     i1l5224:	
  4396  03F0  082E               	movf	(sprintf@c),w
  4397  03F1  00A3               	movwf	(??_sprintf+0)+0
  4398  03F2  0723               	addwf	(??_sprintf+0)+0,w
  4399  03F3  3E01               	addlw	low((_dpowers-__stringbase))
  4400  03F4  0084               	movwf	fsr0
  4401  03F5  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4402  03FA  00A4               	movwf	(??_sprintf+1)+0
  4403  03FB  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4404  0400  00A5               	movwf	(??_sprintf+1)+0+1
  4405  0401  0825               	movf	1+(??_sprintf+1)+0,w
  4406  0402  022A               	subwf	(sprintf@_val+1),w
  4407  0403  1D03               	skipz
  4408  0404  2C07               	goto	u339_25
  4409  0405  0824               	movf	0+(??_sprintf+1)+0,w
  4410  0406  0229               	subwf	(sprintf@_val),w
  4411  0407                     u339_25:
  4412  0407  1803               	skipnc
  4413  0408  2C0A               	goto	u339_21
  4414  0409  2C0B               	goto	u339_20
  4415  040A                     u339_21:
  4416  040A  2C0D               	goto	i1l5228
  4417  040B                     u339_20:
  4418  040B  2C18               	goto	i1l5232
  4419                           	line	1302
  4420                           	
  4421  040C                     i1l5226:	
  4422  040C  2C18               	goto	i1l5232
  4423                           	
  4424  040D                     i1l2295:	
  4425                           	line	1300
  4426                           	
  4427  040D                     i1l5228:	
  4428  040D  3001               	movlw	(01h)
  4429  040E  00A3               	movwf	(??_sprintf+0)+0
  4430  040F  0823               	movf	(??_sprintf+0)+0,w
  4431  0410  07AE               	addwf	(sprintf@c),f
  4432                           	
  4433  0411                     i1l5230:	
  4434  0411  082E               	movf	(sprintf@c),w
  4435  0412  3A05               	xorlw	05h
  4436  0413  1D03               	skipz
  4437  0414  2C16               	goto	u340_21
  4438  0415  2C17               	goto	u340_20
  4439  0416                     u340_21:
  4440  0416  2BF0               	goto	i1l5224
  4441  0417                     u340_20:
  4442  0417  2C18               	goto	i1l5232
  4443                           	
  4444  0418                     i1l2294:	
  4445                           	line	1433
  4446                           	
  4447  0418                     i1l5232:	
  4448  0418  0827               	movf	(sprintf@flag),w
  4449  0419  3903               	andlw	03h
  4450  041A  1903               	btfsc	status,2
  4451  041B  2C1D               	goto	u341_21
  4452  041C  2C1E               	goto	u341_20
  4453  041D                     u341_21:
  4454  041D  2C2A               	goto	i1l5238
  4455  041E                     u341_20:
  4456                           	line	1434
  4457                           	
  4458  041E                     i1l5234:	
  4459  041E  302D               	movlw	(02Dh)
  4460  041F  00A3               	movwf	(??_sprintf+0)+0
  4461  0420  082D               	movf	(sprintf@sp),w
  4462  0421  0084               	movwf	fsr0
  4463  0422  0823               	movf	(??_sprintf+0)+0,w
  4464  0423  1383               	bcf	status, 7	;select IRP bank0
  4465  0424  0080               	movwf	indf
  4466                           	
  4467  0425                     i1l5236:	
  4468  0425  3001               	movlw	(01h)
  4469  0426  00A3               	movwf	(??_sprintf+0)+0
  4470  0427  0823               	movf	(??_sprintf+0)+0,w
  4471  0428  07AD               	addwf	(sprintf@sp),f
  4472  0429  2C2A               	goto	i1l5238
  4473                           	
  4474  042A                     i1l2296:	
  4475                           	line	1467
  4476                           	
  4477  042A                     i1l5238:	
  4478  042A  082E               	movf	(sprintf@c),w
  4479  042B  00A3               	movwf	(??_sprintf+0)+0
  4480  042C  0823               	movf	(??_sprintf+0)+0,w
  4481  042D  00A8               	movwf	(sprintf@prec)
  4482                           	line	1469
  4483  042E  2C6D               	goto	i1l5246
  4484                           	
  4485  042F                     i1l2298:	
  4486                           	line	1484
  4487                           	
  4488  042F                     i1l5240:	
  4489  042F  300A               	movlw	low(0Ah)
  4490  0430  00F8               	movwf	(?___lwmod)
  4491  0431  3000               	movlw	high(0Ah)
  4492  0432  00F9               	movwf	((?___lwmod))+1
  4493  0433  0828               	movf	(sprintf@prec),w
  4494  0434  00A3               	movwf	(??_sprintf+0)+0
  4495  0435  0723               	addwf	(??_sprintf+0)+0,w
  4496  0436  3E01               	addlw	low((_dpowers-__stringbase))
  4497  0437  0084               	movwf	fsr0
  4498  0438  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4499  043D  00F0               	movwf	(?___lwdiv)
  4500  043E  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4501  0443  00F1               	movwf	(?___lwdiv+1)
  4502  0444  082A               	movf	(sprintf@_val+1),w
  4503  0445  01F3               	clrf	1+(?___lwdiv)+02h
  4504  0446  07F3               	addwf	1+(?___lwdiv)+02h
  4505  0447  0829               	movf	(sprintf@_val),w
  4506  0448  01F2               	clrf	0+(?___lwdiv)+02h
  4507  0449  07F2               	addwf	0+(?___lwdiv)+02h
  4508                           
  4509  044A  120A  118A  267D   	fcall	___lwdiv
              120A  118A         
  4510  044F  0871               	movf	(1+(?___lwdiv)),w
  4511  0450  01FB               	clrf	1+(?___lwmod)+02h
  4512  0451  07FB               	addwf	1+(?___lwmod)+02h
  4513  0452  0870               	movf	(0+(?___lwdiv)),w
  4514  0453  01FA               	clrf	0+(?___lwmod)+02h
  4515  0454  07FA               	addwf	0+(?___lwmod)+02h
  4516                           
  4517  0455  120A  118A  26CB   	fcall	___lwmod
              120A  118A         
  4518  045A  0878               	movf	(0+(?___lwmod)),w
  4519  045B  3E30               	addlw	030h
  4520  045C  1283               	bcf	status, 5	;RP0=0, select bank0
  4521  045D  1303               	bcf	status, 6	;RP1=0, select bank0
  4522  045E  00A4               	movwf	(??_sprintf+1)+0
  4523  045F  0824               	movf	(??_sprintf+1)+0,w
  4524  0460  00AE               	movwf	(sprintf@c)
  4525                           	line	1516
  4526                           	
  4527  0461                     i1l5242:	
  4528  0461  082E               	movf	(sprintf@c),w
  4529  0462  00A3               	movwf	(??_sprintf+0)+0
  4530  0463  082D               	movf	(sprintf@sp),w
  4531  0464  0084               	movwf	fsr0
  4532  0465  0823               	movf	(??_sprintf+0)+0,w
  4533  0466  1383               	bcf	status, 7	;select IRP bank0
  4534  0467  0080               	movwf	indf
  4535                           	
  4536  0468                     i1l5244:	
  4537  0468  3001               	movlw	(01h)
  4538  0469  00A3               	movwf	(??_sprintf+0)+0
  4539  046A  0823               	movf	(??_sprintf+0)+0,w
  4540  046B  07AD               	addwf	(sprintf@sp),f
  4541  046C  2C6D               	goto	i1l5246
  4542                           	line	1517
  4543                           	
  4544  046D                     i1l2297:	
  4545                           	line	1469
  4546                           	
  4547  046D                     i1l5246:	
  4548  046D  30FF               	movlw	(-1)
  4549  046E  00A3               	movwf	(??_sprintf+0)+0
  4550  046F  0823               	movf	(??_sprintf+0)+0,w
  4551  0470  07A8               	addwf	(sprintf@prec),f
  4552  0471  0828               	movf	((sprintf@prec)),w
  4553  0472  3AFF               	xorlw	-1
  4554  0473  1D03               	skipz
  4555  0474  2C76               	goto	u342_21
  4556  0475  2C77               	goto	u342_20
  4557  0476                     u342_21:
  4558  0476  2C2F               	goto	i1l5240
  4559  0477                     u342_20:
  4560  0477  2C79               	goto	i1l5248
  4561                           	
  4562  0478                     i1l2299:	
  4563  0478  2C79               	goto	i1l5248
  4564                           	line	1525
  4565                           	
  4566  0479                     i1l2282:	
  4567                           	line	540
  4568                           	
  4569  0479                     i1l5248:	
  4570  0479  3001               	movlw	01h
  4571  047A  07A0               	addwf	(sprintf@f),f
  4572  047B  30FF               	movlw	-01h
  4573  047C  0720               	addwf	(sprintf@f),w
  4574  047D  0084               	movwf	fsr0
  4575  047E  120A  118A  2750   	fcall	stringdir
              120A  118A         
  4576  0483  00A3               	movwf	(??_sprintf+0)+0
  4577  0484  0823               	movf	(??_sprintf+0)+0,w
  4578  0485  00AE               	movwf	(sprintf@c)
  4579  0486  08AE               	movf	((sprintf@c)),f
  4580  0487  1D03               	skipz
  4581  0488  2C8A               	goto	u343_21
  4582  0489  2C8B               	goto	u343_20
  4583  048A                     u343_21:
  4584  048A  2B9D               	goto	i1l5198
  4585  048B                     u343_20:
  4586  048B  2C8D               	goto	i1l5250
  4587                           	
  4588  048C                     i1l2300:	
  4589  048C  2C8D               	goto	i1l5250
  4590                           	line	1527
  4591                           	
  4592  048D                     i1l2287:	
  4593                           	line	1530
  4594                           	
  4595  048D                     i1l5250:	
  4596  048D  082D               	movf	(sprintf@sp),w
  4597  048E  0084               	movwf	fsr0
  4598  048F  1383               	bcf	status, 7	;select IRP bank0
  4599  0490  0180               	clrf	indf
  4600  0491  2C92               	goto	i1l2301
  4601                           	line	1532
  4602                           	
  4603  0492                     i1l5252:	
  4604                           	line	1533
  4605                           ;	Return value of _sprintf is never used
  4606                           	
  4607  0492                     i1l2301:	
  4608  0492  0008               	return
  4609                           	opt stack 0
  4610                           GLOBAL	__end_of_sprintf
  4611  0493                     	__end_of_sprintf:
  4612 ;; =============== function _sprintf ends ============
  4613                           
  4614                           	signat	_sprintf,4698
  4615                           	global	_adc_read_channel
  4616                           psect	text470,local,class=CODE,delta=2
  4617                           global __ptext470
  4618  070F                     __ptext470:
  4619                           
  4620 ;; *************** function _adc_read_channel *****************
  4621 ;; Defined at:
  4622 ;;		line 5 in file "E:\Mechatronics 2\Assignment2\adc.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  channel         1    wreg     unsigned char 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  channel         1    7[COMMON] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      unsigned char 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4636 ;;      Params:         0       0       0       0       0
  4637 ;;      Locals:         1       0       0       0       0
  4638 ;;      Temps:          1       0       0       0       0
  4639 ;;      Totals:         2       0       0       0       0
  4640 ;;Total ram usage:        2 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    1
  4643 ;; This function calls:
  4644 ;;		_adc_read
  4645 ;; This function is called by:
  4646 ;;		_readAvgDistance
  4647 ;;		_readDistance
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           psect	text470
  4651                           	file	"E:\Mechatronics 2\Assignment2\adc.c"
  4652                           	line	5
  4653                           	global	__size_of_adc_read_channel
  4654  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  4655                           	
  4656  070F                     _adc_read_channel:	
  4657                           	opt	stack 1
  4658                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4659                           ;adc_read_channel@channel stored from wreg
  4660  070F  00F7               	movwf	(adc_read_channel@channel)
  4661                           	line	6
  4662                           	
  4663  0710                     i1l5180:	
  4664                           ;adc.c: 6: switch(channel)
  4665  0710  2F33               	goto	i1l5188
  4666                           	line	8
  4667                           ;adc.c: 7: {
  4668                           ;adc.c: 8: case 0:
  4669                           	
  4670  0711                     i1l1540:	
  4671                           	line	9
  4672                           ;adc.c: 9: CHS0 = 0;
  4673  0711  1283               	bcf	status, 5	;RP0=0, select bank0
  4674  0712  1303               	bcf	status, 6	;RP1=0, select bank0
  4675  0713  119F               	bcf	(251/8),(251)&7
  4676                           	line	10
  4677                           ;adc.c: 10: CHS1 = 0;
  4678  0714  121F               	bcf	(252/8),(252)&7
  4679                           	line	11
  4680                           ;adc.c: 11: CHS2 = 0;
  4681  0715  129F               	bcf	(253/8),(253)&7
  4682                           	line	12
  4683                           ;adc.c: 12: break;
  4684  0716  2F44               	goto	i1l5190
  4685                           	line	13
  4686                           ;adc.c: 13: case 1:
  4687                           	
  4688  0717                     i1l1542:	
  4689                           	line	14
  4690                           ;adc.c: 14: CHS0 = 1;
  4691  0717  1283               	bcf	status, 5	;RP0=0, select bank0
  4692  0718  1303               	bcf	status, 6	;RP1=0, select bank0
  4693  0719  159F               	bsf	(251/8),(251)&7
  4694                           	line	15
  4695                           ;adc.c: 15: CHS1 = 0;
  4696  071A  121F               	bcf	(252/8),(252)&7
  4697                           	line	16
  4698                           ;adc.c: 16: CHS2 = 0;
  4699  071B  129F               	bcf	(253/8),(253)&7
  4700                           	line	17
  4701                           ;adc.c: 17: break;
  4702  071C  2F44               	goto	i1l5190
  4703                           	line	18
  4704                           ;adc.c: 18: case 2:
  4705                           	
  4706  071D                     i1l1543:	
  4707                           	line	19
  4708                           ;adc.c: 19: CHS0 = 0;
  4709  071D  1283               	bcf	status, 5	;RP0=0, select bank0
  4710  071E  1303               	bcf	status, 6	;RP1=0, select bank0
  4711  071F  119F               	bcf	(251/8),(251)&7
  4712                           	line	20
  4713                           ;adc.c: 20: CHS1 = 1;
  4714  0720  161F               	bsf	(252/8),(252)&7
  4715                           	line	21
  4716                           ;adc.c: 21: CHS2 = 0;
  4717  0721  129F               	bcf	(253/8),(253)&7
  4718                           	line	22
  4719                           ;adc.c: 22: break;
  4720  0722  2F44               	goto	i1l5190
  4721                           	line	23
  4722                           ;adc.c: 23: case 3:
  4723                           	
  4724  0723                     i1l1544:	
  4725                           	line	24
  4726                           ;adc.c: 24: CHS0 = 1;
  4727  0723  1283               	bcf	status, 5	;RP0=0, select bank0
  4728  0724  1303               	bcf	status, 6	;RP1=0, select bank0
  4729  0725  159F               	bsf	(251/8),(251)&7
  4730                           	line	25
  4731                           ;adc.c: 25: CHS1 = 1;
  4732  0726  161F               	bsf	(252/8),(252)&7
  4733                           	line	26
  4734                           ;adc.c: 26: CHS2 = 0;
  4735  0727  129F               	bcf	(253/8),(253)&7
  4736                           	line	27
  4737                           ;adc.c: 27: break;
  4738  0728  2F44               	goto	i1l5190
  4739                           	line	28
  4740                           ;adc.c: 28: case 4:
  4741                           	
  4742  0729                     i1l1545:	
  4743                           	line	29
  4744                           ;adc.c: 29: CHS0 = 0;
  4745  0729  1283               	bcf	status, 5	;RP0=0, select bank0
  4746  072A  1303               	bcf	status, 6	;RP1=0, select bank0
  4747  072B  119F               	bcf	(251/8),(251)&7
  4748                           	line	30
  4749                           ;adc.c: 30: CHS1 = 0;
  4750  072C  121F               	bcf	(252/8),(252)&7
  4751                           	line	31
  4752                           ;adc.c: 31: CHS2 = 1;
  4753  072D  169F               	bsf	(253/8),(253)&7
  4754                           	line	32
  4755                           ;adc.c: 32: break;
  4756  072E  2F44               	goto	i1l5190
  4757                           	line	35
  4758                           ;adc.c: 35: default:
  4759                           	
  4760  072F                     i1l1546:	
  4761                           	line	36
  4762                           	
  4763  072F                     i1l5182:	
  4764                           ;adc.c: 36: return 0;
  4765  072F  3000               	movlw	(0)
  4766  0730  2F4F               	goto	i1l1547
  4767                           	
  4768  0731                     i1l5184:	
  4769  0731  2F4F               	goto	i1l1547
  4770                           	line	37
  4771                           	
  4772  0732                     i1l5186:	
  4773                           ;adc.c: 37: }
  4774  0732  2F44               	goto	i1l5190
  4775                           	line	6
  4776                           	
  4777  0733                     i1l1539:	
  4778                           	
  4779  0733                     i1l5188:	
  4780  0733  0877               	movf	(adc_read_channel@channel),w
  4781                           	; Switch size 1, requested type "space"
  4782                           ; Number of cases is 5, Range of values is 0 to 4
  4783                           ; switch strategies available:
  4784                           ; Name         Instructions Cycles
  4785                           ; simple_byte           16     9 (average)
  4786                           ; direct_byte           23     8 (fixed)
  4787                           ; jumptable            260     6 (fixed)
  4788                           ; rangetable             9     6 (fixed)
  4789                           ; spacedrange           16     9 (fixed)
  4790                           ; locatedrange           5     3 (fixed)
  4791                           ;	Chosen strategy is simple_byte
  4792                           
  4793                           	opt asmopt_off
  4794  0734  3A00               	xorlw	0^0	; case 0
  4795  0735  1903               	skipnz
  4796  0736  2F11               	goto	i1l1540
  4797  0737  3A01               	xorlw	1^0	; case 1
  4798  0738  1903               	skipnz
  4799  0739  2F17               	goto	i1l1542
  4800  073A  3A03               	xorlw	2^1	; case 2
  4801  073B  1903               	skipnz
  4802  073C  2F1D               	goto	i1l1543
  4803  073D  3A01               	xorlw	3^2	; case 3
  4804  073E  1903               	skipnz
  4805  073F  2F23               	goto	i1l1544
  4806  0740  3A07               	xorlw	4^3	; case 4
  4807  0741  1903               	skipnz
  4808  0742  2F29               	goto	i1l1545
  4809  0743  2F2F               	goto	i1l5182
  4810                           	opt asmopt_on
  4811                           
  4812                           	line	37
  4813                           	
  4814  0744                     i1l1541:	
  4815                           	line	39
  4816                           	
  4817  0744                     i1l5190:	
  4818                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  4819                           	opt asmopt_off
  4820  0744  3053               movlw	83
  4821  0745  00F6               movwf	(??_adc_read_channel+0)+0,f
  4822  0746                     u376_27:
  4823  0746  0BF6               decfsz	(??_adc_read_channel+0)+0,f
  4824  0747  2F46               	goto	u376_27
  4825                           opt asmopt_on
  4826                           
  4827                           	line	41
  4828                           	
  4829  0748                     i1l5192:	
  4830                           ;adc.c: 41: return adc_read();
  4831  0748  120A  118A  27A8   	fcall	_adc_read
              120A  118A         
  4832  074D  0870               	movf	(0+(?_adc_read)),w
  4833  074E  2F4F               	goto	i1l1547
  4834                           	
  4835  074F                     i1l5194:	
  4836                           	line	43
  4837                           	
  4838  074F                     i1l1547:	
  4839  074F  0008               	return
  4840                           	opt stack 0
  4841                           GLOBAL	__end_of_adc_read_channel
  4842  0750                     	__end_of_adc_read_channel:
  4843 ;; =============== function _adc_read_channel ends ============
  4844                           
  4845                           	signat	_adc_read_channel,4217
  4846                           	global	___lwmod
  4847                           psect	text471,local,class=CODE,delta=2
  4848                           global __ptext471
  4849  06CB                     __ptext471:
  4850                           
  4851 ;; *************** function ___lwmod *****************
  4852 ;; Defined at:
  4853 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  divisor         2    8[COMMON] unsigned int 
  4856 ;;  dividend        2   10[COMMON] unsigned int 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  counter         1   13[COMMON] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  2    8[COMMON] unsigned int 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4868 ;;      Params:         4       0       0       0       0
  4869 ;;      Locals:         1       0       0       0       0
  4870 ;;      Temps:          1       0       0       0       0
  4871 ;;      Totals:         6       0       0       0       0
  4872 ;;Total ram usage:        6 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_isr1
  4878 ;;		_ADCconvert
  4879 ;;		_sprintf
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           psect	text471
  4883                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  4884                           	line	5
  4885                           	global	__size_of___lwmod
  4886  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4887                           	
  4888  06CB                     ___lwmod:	
  4889                           	opt	stack 1
  4890                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4891                           	line	8
  4892                           	
  4893  06CB                     i1l5336:	
  4894  06CB  0879               	movf	(___lwmod@divisor+1),w
  4895  06CC  0478               	iorwf	(___lwmod@divisor),w
  4896  06CD  1903               	skipnz
  4897  06CE  2ED0               	goto	u357_21
  4898  06CF  2ED1               	goto	u357_20
  4899  06D0                     u357_21:
  4900  06D0  2F07               	goto	i1l5354
  4901  06D1                     u357_20:
  4902                           	line	9
  4903                           	
  4904  06D1                     i1l5338:	
  4905  06D1  01FD               	clrf	(___lwmod@counter)
  4906  06D2  1403               	bsf	status,0
  4907  06D3  0DFD               	rlf	(___lwmod@counter),f
  4908                           	line	10
  4909  06D4  2EE1               	goto	i1l5344
  4910                           	
  4911  06D5                     i1l3002:	
  4912                           	line	11
  4913                           	
  4914  06D5                     i1l5340:	
  4915  06D5  3001               	movlw	01h
  4916                           	
  4917  06D6                     u358_25:
  4918  06D6  1003               	clrc
  4919  06D7  0DF8               	rlf	(___lwmod@divisor),f
  4920  06D8  0DF9               	rlf	(___lwmod@divisor+1),f
  4921  06D9  3EFF               	addlw	-1
  4922  06DA  1D03               	skipz
  4923  06DB  2ED6               	goto	u358_25
  4924                           	line	12
  4925                           	
  4926  06DC                     i1l5342:	
  4927  06DC  3001               	movlw	(01h)
  4928  06DD  00FC               	movwf	(??___lwmod+0)+0
  4929  06DE  087C               	movf	(??___lwmod+0)+0,w
  4930  06DF  07FD               	addwf	(___lwmod@counter),f
  4931  06E0  2EE1               	goto	i1l5344
  4932                           	line	13
  4933                           	
  4934  06E1                     i1l3001:	
  4935                           	line	10
  4936                           	
  4937  06E1                     i1l5344:	
  4938  06E1  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  4939  06E2  2EE4               	goto	u359_21
  4940  06E3  2EE5               	goto	u359_20
  4941  06E4                     u359_21:
  4942  06E4  2ED5               	goto	i1l5340
  4943  06E5                     u359_20:
  4944  06E5  2EE7               	goto	i1l5346
  4945                           	
  4946  06E6                     i1l3003:	
  4947  06E6  2EE7               	goto	i1l5346
  4948                           	line	14
  4949                           	
  4950  06E7                     i1l3004:	
  4951                           	line	15
  4952                           	
  4953  06E7                     i1l5346:	
  4954  06E7  0879               	movf	(___lwmod@divisor+1),w
  4955  06E8  027B               	subwf	(___lwmod@dividend+1),w
  4956  06E9  1D03               	skipz
  4957  06EA  2EED               	goto	u360_25
  4958  06EB  0878               	movf	(___lwmod@divisor),w
  4959  06EC  027A               	subwf	(___lwmod@dividend),w
  4960  06ED                     u360_25:
  4961  06ED  1C03               	skipc
  4962  06EE  2EF0               	goto	u360_21
  4963  06EF  2EF1               	goto	u360_20
  4964  06F0                     u360_21:
  4965  06F0  2EF8               	goto	i1l5350
  4966  06F1                     u360_20:
  4967                           	line	16
  4968                           	
  4969  06F1                     i1l5348:	
  4970  06F1  0878               	movf	(___lwmod@divisor),w
  4971  06F2  02FA               	subwf	(___lwmod@dividend),f
  4972  06F3  0879               	movf	(___lwmod@divisor+1),w
  4973  06F4  1C03               	skipc
  4974  06F5  03FB               	decf	(___lwmod@dividend+1),f
  4975  06F6  02FB               	subwf	(___lwmod@dividend+1),f
  4976  06F7  2EF8               	goto	i1l5350
  4977                           	
  4978  06F8                     i1l3005:	
  4979                           	line	17
  4980                           	
  4981  06F8                     i1l5350:	
  4982  06F8  3001               	movlw	01h
  4983                           	
  4984  06F9                     u361_25:
  4985  06F9  1003               	clrc
  4986  06FA  0CF9               	rrf	(___lwmod@divisor+1),f
  4987  06FB  0CF8               	rrf	(___lwmod@divisor),f
  4988  06FC  3EFF               	addlw	-1
  4989  06FD  1D03               	skipz
  4990  06FE  2EF9               	goto	u361_25
  4991                           	line	18
  4992                           	
  4993  06FF                     i1l5352:	
  4994  06FF  3001               	movlw	low(01h)
  4995  0700  02FD               	subwf	(___lwmod@counter),f
  4996  0701  1D03               	btfss	status,2
  4997  0702  2F04               	goto	u362_21
  4998  0703  2F05               	goto	u362_20
  4999  0704                     u362_21:
  5000  0704  2EE7               	goto	i1l5346
  5001  0705                     u362_20:
  5002  0705  2F07               	goto	i1l5354
  5003                           	
  5004  0706                     i1l3006:	
  5005  0706  2F07               	goto	i1l5354
  5006                           	line	19
  5007                           	
  5008  0707                     i1l3000:	
  5009                           	line	20
  5010                           	
  5011  0707                     i1l5354:	
  5012  0707  087B               	movf	(___lwmod@dividend+1),w
  5013  0708  01F9               	clrf	(?___lwmod+1)
  5014  0709  07F9               	addwf	(?___lwmod+1)
  5015  070A  087A               	movf	(___lwmod@dividend),w
  5016  070B  01F8               	clrf	(?___lwmod)
  5017  070C  07F8               	addwf	(?___lwmod)
  5018                           
  5019  070D  2F0E               	goto	i1l3007
  5020                           	
  5021  070E                     i1l5356:	
  5022                           	line	21
  5023                           	
  5024  070E                     i1l3007:	
  5025  070E  0008               	return
  5026                           	opt stack 0
  5027                           GLOBAL	__end_of___lwmod
  5028  070F                     	__end_of___lwmod:
  5029 ;; =============== function ___lwmod ends ============
  5030                           
  5031                           	signat	___lwmod,8314
  5032                           	global	___lwdiv
  5033                           psect	text472,local,class=CODE,delta=2
  5034                           global __ptext472
  5035  067D                     __ptext472:
  5036                           
  5037 ;; *************** function ___lwdiv *****************
  5038 ;; Defined at:
  5039 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  divisor         2    0[COMMON] unsigned int 
  5042 ;;  dividend        2    2[COMMON] unsigned int 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  quotient        2    5[COMMON] unsigned int 
  5045 ;;  counter         1    7[COMMON] unsigned char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  2    0[COMMON] unsigned int 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5055 ;;      Params:         4       0       0       0       0
  5056 ;;      Locals:         3       0       0       0       0
  5057 ;;      Temps:          1       0       0       0       0
  5058 ;;      Totals:         8       0       0       0       0
  5059 ;;Total ram usage:        8 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_readAvgDistance
  5065 ;;		_sprintf
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           psect	text472
  5069                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5070                           	line	5
  5071                           	global	__size_of___lwdiv
  5072  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  5073                           	
  5074  067D                     ___lwdiv:	
  5075                           	opt	stack 1
  5076                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5077                           	line	9
  5078                           	
  5079  067D                     i1l5310:	
  5080  067D  01F5               	clrf	(___lwdiv@quotient)
  5081  067E  01F6               	clrf	(___lwdiv@quotient+1)
  5082                           	line	10
  5083                           	
  5084  067F                     i1l5312:	
  5085  067F  0871               	movf	(___lwdiv@divisor+1),w
  5086  0680  0470               	iorwf	(___lwdiv@divisor),w
  5087  0681  1903               	skipnz
  5088  0682  2E84               	goto	u350_21
  5089  0683  2E85               	goto	u350_20
  5090  0684                     u350_21:
  5091  0684  2EC3               	goto	i1l5332
  5092  0685                     u350_20:
  5093                           	line	11
  5094                           	
  5095  0685                     i1l5314:	
  5096  0685  01F7               	clrf	(___lwdiv@counter)
  5097  0686  1403               	bsf	status,0
  5098  0687  0DF7               	rlf	(___lwdiv@counter),f
  5099                           	line	12
  5100  0688  2E95               	goto	i1l5320
  5101                           	
  5102  0689                     i1l2992:	
  5103                           	line	13
  5104                           	
  5105  0689                     i1l5316:	
  5106  0689  3001               	movlw	01h
  5107                           	
  5108  068A                     u351_25:
  5109  068A  1003               	clrc
  5110  068B  0DF0               	rlf	(___lwdiv@divisor),f
  5111  068C  0DF1               	rlf	(___lwdiv@divisor+1),f
  5112  068D  3EFF               	addlw	-1
  5113  068E  1D03               	skipz
  5114  068F  2E8A               	goto	u351_25
  5115                           	line	14
  5116                           	
  5117  0690                     i1l5318:	
  5118  0690  3001               	movlw	(01h)
  5119  0691  00F4               	movwf	(??___lwdiv+0)+0
  5120  0692  0874               	movf	(??___lwdiv+0)+0,w
  5121  0693  07F7               	addwf	(___lwdiv@counter),f
  5122  0694  2E95               	goto	i1l5320
  5123                           	line	15
  5124                           	
  5125  0695                     i1l2991:	
  5126                           	line	12
  5127                           	
  5128  0695                     i1l5320:	
  5129  0695  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  5130  0696  2E98               	goto	u352_21
  5131  0697  2E99               	goto	u352_20
  5132  0698                     u352_21:
  5133  0698  2E89               	goto	i1l5316
  5134  0699                     u352_20:
  5135  0699  2E9B               	goto	i1l5322
  5136                           	
  5137  069A                     i1l2993:	
  5138  069A  2E9B               	goto	i1l5322
  5139                           	line	16
  5140                           	
  5141  069B                     i1l2994:	
  5142                           	line	17
  5143                           	
  5144  069B                     i1l5322:	
  5145  069B  3001               	movlw	01h
  5146                           	
  5147  069C                     u353_25:
  5148  069C  1003               	clrc
  5149  069D  0DF5               	rlf	(___lwdiv@quotient),f
  5150  069E  0DF6               	rlf	(___lwdiv@quotient+1),f
  5151  069F  3EFF               	addlw	-1
  5152  06A0  1D03               	skipz
  5153  06A1  2E9C               	goto	u353_25
  5154                           	line	18
  5155  06A2  0871               	movf	(___lwdiv@divisor+1),w
  5156  06A3  0273               	subwf	(___lwdiv@dividend+1),w
  5157  06A4  1D03               	skipz
  5158  06A5  2EA8               	goto	u354_25
  5159  06A6  0870               	movf	(___lwdiv@divisor),w
  5160  06A7  0272               	subwf	(___lwdiv@dividend),w
  5161  06A8                     u354_25:
  5162  06A8  1C03               	skipc
  5163  06A9  2EAB               	goto	u354_21
  5164  06AA  2EAC               	goto	u354_20
  5165  06AB                     u354_21:
  5166  06AB  2EB4               	goto	i1l5328
  5167  06AC                     u354_20:
  5168                           	line	19
  5169                           	
  5170  06AC                     i1l5324:	
  5171  06AC  0870               	movf	(___lwdiv@divisor),w
  5172  06AD  02F2               	subwf	(___lwdiv@dividend),f
  5173  06AE  0871               	movf	(___lwdiv@divisor+1),w
  5174  06AF  1C03               	skipc
  5175  06B0  03F3               	decf	(___lwdiv@dividend+1),f
  5176  06B1  02F3               	subwf	(___lwdiv@dividend+1),f
  5177                           	line	20
  5178                           	
  5179  06B2                     i1l5326:	
  5180  06B2  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  5181  06B3  2EB4               	goto	i1l5328
  5182                           	line	21
  5183                           	
  5184  06B4                     i1l2995:	
  5185                           	line	22
  5186                           	
  5187  06B4                     i1l5328:	
  5188  06B4  3001               	movlw	01h
  5189                           	
  5190  06B5                     u355_25:
  5191  06B5  1003               	clrc
  5192  06B6  0CF1               	rrf	(___lwdiv@divisor+1),f
  5193  06B7  0CF0               	rrf	(___lwdiv@divisor),f
  5194  06B8  3EFF               	addlw	-1
  5195  06B9  1D03               	skipz
  5196  06BA  2EB5               	goto	u355_25
  5197                           	line	23
  5198                           	
  5199  06BB                     i1l5330:	
  5200  06BB  3001               	movlw	low(01h)
  5201  06BC  02F7               	subwf	(___lwdiv@counter),f
  5202  06BD  1D03               	btfss	status,2
  5203  06BE  2EC0               	goto	u356_21
  5204  06BF  2EC1               	goto	u356_20
  5205  06C0                     u356_21:
  5206  06C0  2E9B               	goto	i1l5322
  5207  06C1                     u356_20:
  5208  06C1  2EC3               	goto	i1l5332
  5209                           	
  5210  06C2                     i1l2996:	
  5211  06C2  2EC3               	goto	i1l5332
  5212                           	line	24
  5213                           	
  5214  06C3                     i1l2990:	
  5215                           	line	25
  5216                           	
  5217  06C3                     i1l5332:	
  5218  06C3  0876               	movf	(___lwdiv@quotient+1),w
  5219  06C4  01F1               	clrf	(?___lwdiv+1)
  5220  06C5  07F1               	addwf	(?___lwdiv+1)
  5221  06C6  0875               	movf	(___lwdiv@quotient),w
  5222  06C7  01F0               	clrf	(?___lwdiv)
  5223  06C8  07F0               	addwf	(?___lwdiv)
  5224                           
  5225  06C9  2ECA               	goto	i1l2997
  5226                           	
  5227  06CA                     i1l5334:	
  5228                           	line	26
  5229                           	
  5230  06CA                     i1l2997:	
  5231  06CA  0008               	return
  5232                           	opt stack 0
  5233                           GLOBAL	__end_of___lwdiv
  5234  06CB                     	__end_of___lwdiv:
  5235 ;; =============== function ___lwdiv ends ============
  5236                           
  5237                           	signat	___lwdiv,8314
  5238                           	global	_adc_read
  5239                           psect	text473,local,class=CODE,delta=2
  5240                           global __ptext473
  5241  07A8                     __ptext473:
  5242                           
  5243 ;; *************** function _adc_read *****************
  5244 ;; Defined at:
  5245 ;;		line 61 in file "E:\Mechatronics 2\Assignment2\adc.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  adc_value       2    4[COMMON] volatile unsigned int 
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  2    0[COMMON] unsigned int 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5259 ;;      Params:         2       0       0       0       0
  5260 ;;      Locals:         2       0       0       0       0
  5261 ;;      Temps:          2       0       0       0       0
  5262 ;;      Totals:         6       0       0       0       0
  5263 ;;Total ram usage:        6 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_adc_read_channel
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           psect	text473
  5272                           	file	"E:\Mechatronics 2\Assignment2\adc.c"
  5273                           	line	61
  5274                           	global	__size_of_adc_read
  5275  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  5276                           	
  5277  07A8                     _adc_read:	
  5278                           	opt	stack 1
  5279                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  5280                           	line	64
  5281                           	
  5282  07A8                     i1l5282:	
  5283                           ;adc.c: 62: volatile unsigned int adc_value;
  5284                           ;adc.c: 64: ADRESH = 0;
  5285  07A8  1283               	bcf	status, 5	;RP0=0, select bank0
  5286  07A9  1303               	bcf	status, 6	;RP1=0, select bank0
  5287  07AA  019E               	clrf	(30)	;volatile
  5288                           	line	66
  5289                           	
  5290  07AB                     i1l5284:	
  5291                           ;adc.c: 66: GO = 1;
  5292  07AB  151F               	bsf	(250/8),(250)&7
  5293                           	line	67
  5294                           ;adc.c: 67: while(GO) continue;
  5295  07AC  2FAD               	goto	i1l1553
  5296                           	
  5297  07AD                     i1l1554:	
  5298                           	
  5299  07AD                     i1l1553:	
  5300  07AD  191F               	btfsc	(250/8),(250)&7
  5301  07AE  2FB0               	goto	u347_21
  5302  07AF  2FB1               	goto	u347_20
  5303  07B0                     u347_21:
  5304  07B0  2FAD               	goto	i1l1553
  5305  07B1                     u347_20:
  5306                           	
  5307  07B1                     i1l1555:	
  5308                           	line	68
  5309                           # 68 "E:\Mechatronics 2\Assignment2\adc.c"
  5310  07B1  0000               nop ;#
  5311                           	line	69
  5312                           # 69 "E:\Mechatronics 2\Assignment2\adc.c"
  5313  07B2  0000               nop ;#
  5314                           	line	70
  5315                           # 70 "E:\Mechatronics 2\Assignment2\adc.c"
  5316  07B3  0000               nop ;#
  5317                           psect	text473
  5318                           	line	73
  5319                           	
  5320  07B4                     i1l5286:	
  5321                           ;adc.c: 73: adc_value = ADRESH;
  5322  07B4  1283               	bcf	status, 5	;RP0=0, select bank0
  5323  07B5  1303               	bcf	status, 6	;RP1=0, select bank0
  5324  07B6  081E               	movf	(30),w	;volatile
  5325  07B7  00F2               	movwf	(??_adc_read+0)+0
  5326  07B8  01F3               	clrf	(??_adc_read+0)+0+1
  5327  07B9  0872               	movf	0+(??_adc_read+0)+0,w
  5328  07BA  00F4               	movwf	(adc_read@adc_value)	;volatile
  5329  07BB  0873               	movf	1+(??_adc_read+0)+0,w
  5330  07BC  00F5               	movwf	(adc_read@adc_value+1)	;volatile
  5331                           	line	74
  5332                           ;adc.c: 74: adc_value <<= 1;
  5333  07BD  3001               	movlw	01h
  5334                           	
  5335  07BE                     u348_25:
  5336  07BE  1003               	clrc
  5337  07BF  0DF4               	rlf	(adc_read@adc_value),f	;volatile
  5338  07C0  0DF5               	rlf	(adc_read@adc_value+1),f	;volatile
  5339  07C1  3EFF               	addlw	-1
  5340  07C2  1D03               	skipz
  5341  07C3  2FBE               	goto	u348_25
  5342                           	line	75
  5343                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  5344  07C4  1683               	bsf	status, 5	;RP0=1, select bank1
  5345  07C5  1303               	bcf	status, 6	;RP1=0, select bank1
  5346  07C6  081E               	movf	(158)^080h,w	;volatile
  5347                           	line	78
  5348                           	
  5349  07C7                     i1l5288:	
  5350                           ;adc.c: 78: return (adc_value);
  5351  07C7  0875               	movf	(adc_read@adc_value+1),w	;volatile
  5352  07C8  01F1               	clrf	(?_adc_read+1)
  5353  07C9  07F1               	addwf	(?_adc_read+1)
  5354  07CA  0874               	movf	(adc_read@adc_value),w	;volatile
  5355  07CB  01F0               	clrf	(?_adc_read)
  5356  07CC  07F0               	addwf	(?_adc_read)
  5357                           
  5358  07CD  2FCE               	goto	i1l1556
  5359                           	
  5360  07CE                     i1l5290:	
  5361                           	line	79
  5362                           	
  5363  07CE                     i1l1556:	
  5364  07CE  0008               	return
  5365                           	opt stack 0
  5366                           GLOBAL	__end_of_adc_read
  5367  07CF                     	__end_of_adc_read:
  5368 ;; =============== function _adc_read ends ============
  5369                           
  5370                           	signat	_adc_read,90
  5371                           psect	text474,local,class=CODE,delta=2
  5372                           global __ptext474
  5373  0000                     __ptext474:
  5374                           	global	btemp
  5375  007E                     	btemp set 07Eh
  5376                           
  5377                           	DABS	1,126,2	;btemp
  5378                           	global	wtemp0
  5379  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Mar 30 16:48:56 2015

   __end_of_lcd_write_control 1000                             pc 0002                            _GO 00FA  
                          _RD 0C60                            _WR 0C61                            fsr 0004  
                         l770 0274                           l850 067A                           l771 0390  
                         l843 0632                           l772 02F6                           l780 02B2  
                         l844 063C                           l773 02D9                           l781 02BD  
                         l845 064D                           l790 0314                           l782 02C8  
                         l774 027B                           l846 065E                           l791 031F  
                         l775 02F5                           l783 02D3                           l767 07FF  
                         l847 0678                           l784 037B                           l792 032A  
                         l776 0286                           l848 0679                           l785 0379  
                         l793 0335                           l777 0291                           l849 067A  
                         l786 035C                           l794 0340                           l778 029C  
                         l795 034B                           l787 02FE                           l779 02A7  
                         l788 0378                           l796 0356                           l797 037A  
                         l789 0309                           l798 0394                           _GIE 005F  
                         _RB0 0030                           _RB1 0031                           _RB2 0032  
                         _RB3 0033                           _RB4 0034                           _RB5 0035  
                         _RE0 0048                           _RE1 0049                           _RE2 004A  
                         fsr0 0004                           indf 0000               ?_lcd_set_cursor 0070  
                        l2243 0FFF                          l1550 0FC9                          l2273 07A7  
                        l5400 02D3                          l5410 02FE                          l5402 02D8  
                        l5420 0335                          l5412 0309                          l5404 02D9  
                        l5500 065E                          l5422 0340                          l5414 0314  
                        l5430 035C                          l5406 02F6                          l5502 0664  
                        l5424 034B                          l5416 031F                          l5408 02FD  
                        l5432 037B                          l5440 0FEC                          l5504 0665  
                        l5370 0FBD                          l5434 0386                          l5426 0356  
                        l5418 032A                          l5442 0FF2                          l5450 0784  
                        l5506 0671                          l5372 0FC1                          l5428 035B  
                        l5436 0390                          l5380 0274                          l5444 0FF3  
                        l5460 0795                          l5452 0785                          l5374 0FC5  
                        l5366 0FB6                          l5390 029C                          l5382 027A  
                        l5438 0FE7                          l5462 079B                          l5454 0788  
                        l5446 077D                          l5470 07FA                          l5368 0FB9  
                        l5392 02A7                          l5384 027B                          l5376 026D  
                        l5464 07A1                          l5456 0789                          l5448 0781  
                        l5472 07FB                          l5480 0628                          l5394 02B2  
                        l5386 0286                          l5378 0273                          l5458 078F  
                        l5474 07FD                          l5466 07EC                          l5490 0640  
                        l5482 0632                          l5396 02BD                          l5388 0291  
                        l5476 07FE                          l5468 07F6                          l5492 0641  
                        l5484 0638                          l5398 02C8                          l5494 064D  
                        l5486 0639                          l5478 0623                          l5496 0653  
                        l5488 063C                          l5498 0654                          _CHS0 00FB  
                        _CHS1 00FC                          _CHS2 00FD                          STR_1 076F  
                        STR_2 076F                          STR_3 0760                          u3700 0664  
                        u3701 0663                          u3630 0272                          u3631 0271  
                        u3640 0279                          u3641 0278                          u3650 02FC  
                        u3651 02FB                          u3660 038F                          u3661 038E  
                        u3717 0FFA                          u3670 0638                          u3727 0381  
                        u3671 0637                          u3680 0640                          u3737 0FC7  
                        u3681 063F                          u3690 0653                          u3691 0652  
                        _TMR0 0001                          _WREN 0C62           __size_of_ADCconvert 0255  
      __end_of_lcd_write_data 0FA2                          _isr1 0493                          _main 0623  
                        _init 07EC                          btemp 007E                          start 0012  
__size_ofi1_lcd_write_control 0014                         ?_isr1 0070                         ?_main 0070  
                       ?_init 0070                         _EEADR 010D                         _CARRY 0018  
             __end_of___lwdiv 06CB               __end_of___lwmod 070F                         i1l810 0622  
                       i1l820 024B                         i1l821 00BE                         i1l822 024A  
                       i1l830 0246                         i1l750 0502                         i1l831 019A  
                       i1l823 00EA                         i1l815 003A                         i1l751 0521  
                       i1l808 05BA                         i1l840 0269                         i1l816 024D  
                       i1l824 0249                         i1l832 0245                         i1l760 056B  
                       i1l752 0539                         i1l809 05DE                         i1l833 01C6  
                       i1l825 0116                         i1l817 0066                         i1l761 0581  
                       i1l753 0538                         i1l818 024C                         i1l826 0248  
                       i1l834 0244                         i1l762 0580                         i1l754 053B  
                       i1l835 01F2                         i1l827 0142                         i1l819 0092  
                       i1l747 0585                         i1l763 0584                         i1l755 0551  
                       i1l828 0247                         i1l836 0243                         i1l756 0550  
                       i1l748 04BA                         i1l764 0585                         i1l837 021E  
                       i1l829 016E                         i1l757 0553                         i1l749 04D5  
                       i1l838 0242                         i1l758 0569                         i1l839 0241  
                       i1l759 0568                         _PORTA 0005                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089        lcd_write_data@databyte 0072                         pclath 000A  
             ?_lcd_write_data 0070             ?_adc_read_channel 0070                         status 0003  
                       wtemp0 007E               __end_of_sprintf 0493            ??_adc_read_channel 0076  
            ?_readAvgDistance 002F    __size_of_lcd_write_control 001C                  __end_of_isr1 0590  
                __end_of_main 067D                  __end_of_init 0800               rotate@direction 00D1  
      readAvgDistance@fullval 0045                        ??_isr1 0063                        ??_main 00D5  
                      ??_init 00D4                        _ADCON0 001F                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E                        _EEDATA 010C  
                      _EECON1 018C                        _EECON2 018D              __end_of_adc_read 07CF  
                      i1l3000 0707                        i1l3001 06E1                        i1l3002 06D5  
                      i1l3003 06E6                        i1l3004 06E7                        i1l2300 048C  
                      i1l3005 06F8                        i1l2301 0492                        i1l3006 0706  
                      i1l3007 070E                        i1l2243 0FB5                        i1l1540 0711  
                      i1l2252 0FDA                        i1l1541 0744                        i1l2253 0FCC  
                      i1l1542 0717                        i1l2246 0FA1                        i1l2254 0FE3  
                      i1l1543 071D                        i1l2255 0FE3                        i1l1544 0723  
                      i1l5000 04BA                        i1l1553 07AD                        i1l1545 0729  
                      i1l2249 0F8E                        i1l1554 07AD                        i1l1546 072F  
                      i1l2282 0479                        i1l2290 03CB                        i1l5010 0502  
                      i1l5002 04D1                        i1l1555 07B1                        i1l1539 0733  
                      i1l1547 074F                        i1l2291 03B4                        i1l2283 039D  
                      i1l1556 07CE                        i1l2292 03E5                        i1l2284 03AF  
                      i1l5100 0092                        i1l5020 0527                        i1l5012 0519  
                      i1l5004 04D5                        i1l2293 03F0                        i1l2285 03B6  
                      i1l2294 0418                        i1l2286 03B1                        i1l5110 00D0  
                      i1l5102 009B                        i1l5030 0543                        i1l5022 052B  
                      i1l5014 051C                        i1l5006 04EC                        i1l2287 048D  
                      i1l2295 040D                        i1l2296 042A                        i1l2288 03B2  
                      i1l5200 03A3                        i1l5120 011F                        i1l5112 00EA  
                      i1l5104 00A4                        i1l5040 0561                        i1l5032 0549  
                      i1l5024 0531                        i1l5016 051E                        i1l5008 04FE  
                      i1l2297 046D                        i1l2289 03B3                        i1l2298 042F  
                      i1l5210 03D3                        i1l5202 03AA                        i1l5130 016E  
                      i1l5122 0128                        i1l5114 00F3                        i1l5106 00BE  
                      i1l5050 057D                        i1l5042 0565                        i1l5034 054D  
                      i1l5026 0535                        i1l5018 0521                        i1l2299 0478  
                      i1l5220 03E8                        i1l5212 03D7                        i1l5204 03B5  
                      i1l5060 05B9                        i1l5052 0590                        i1l5140 01AC  
                      i1l5132 0177                        i1l5124 0142                        i1l5116 00FC  
                      i1l5108 00C7                        i1l5044 056F                        i1l5036 0557  
                      i1l5028 053F                        i1l5310 067D                        i1l5230 0411  
                      i1l5222 03EF                        i1l5214 03DB                        i1l5206 03B6  
                      i1l5070 05F7                        i1l5062 05BA                        i1l5054 0594  
                      i1l5150 01FB                        i1l5142 01C6                        i1l5134 0180  
                      i1l5126 014B                        i1l5118 0116                        i1l5046 0573  
                      i1l5038 055B                        i1l5320 0695                        i1l5312 067F  
                      i1l5240 042F                        i1l5232 0418                        i1l5224 03F0  
                      i1l5216 03DF                        i1l5208 03CB                        i1l5080 0622  
                      i1l5072 0607                        i1l5064 05CA                        i1l5056 05A9  
                      i1l5160 025D                        i1l5152 0204                        i1l5144 01CF  
                      i1l5136 019A                        i1l5128 0154                        i1l5048 0579  
                      i1l5330 06BB                        i1l5322 069B                        i1l5314 0685  
                      i1l5242 0461                        i1l5234 041E                        i1l5226 040C  
                      i1l5218 03E5                        i1l5250 048D                        i1l5074 060D  
                      i1l5066 05D0                        i1l5058 05AB                        i1l5154 021E  
                      i1l5146 01D8                        i1l5138 01A3                        i1l5090 0043  
                      i1l5082 0015                        i1l5324 06AC                        i1l5316 0689  
                      i1l5332 06C3                        i1l5340 06D5                        i1l5180 0710  
                      i1l5252 0492                        i1l5244 0468                        i1l5236 0425  
                      i1l5228 040D                        i1l5260 0FCC                        i1l5076 0613  
                      i1l5068 05DE                        i1l5156 0227                        i1l5148 01F2  
                      i1l5092 004C                        i1l5084 002C                        i1l5334 06CA  
                      i1l5326 06B2                        i1l5318 0690                        i1l5350 06F8  
                      i1l5342 06DC                        i1l5182 072F                        i1l5190 0744  
                      i1l5246 046D                        i1l5238 042A                        i1l5254 0F87  
                      i1l5262 0FD5                        i1l5078 0619                        i1l5094 0066  
                      i1l5158 024D                        i1l5086 0035                        i1l5328 06B4  
                      i1l5352 06FF                        i1l5344 06E1                        i1l5336 06CB  
                      i1l5192 0748                        i1l5184 0731                        i1l5248 0479  
                      i1l5360 0FA8                        i1l5256 0F88                        i1l5264 0FDA  
                      i1l5096 006F                        i1l5088 003A                        u300_20 054D  
                      u300_21 054C                        i1l5290 07CE                        i1l5282 07A8  
                      i1l5346 06E7                        i1l5338 06D1                        i1l5354 0707  
                      i1l5194 074F                        i1l5186 0732                        i1l5362 0FAA  
                      i1l5258 0FCB                        i1l5098 0078                        i1l5284 07AB  
                      i1l5356 070E                        i1l5348 06F1                        i1l5188 0733  
                      i1l5196 0398                        i1l5292 0F90                        i1l5364 0FAB  
                      i1l5286 07B4                        i1l2990 06C3                        i1l5198 039D  
                      i1l5294 0F95                        i1l5358 0FA3                        i1l2991 0695  
                      i1l5288 07C7                        i1l2992 0689                        i1l5296 0F97  
                      u301_20 0557                        i1l2993 069A                        u301_21 0556  
                      i1l2994 069B                        i1l5298 0F98                        i1l2995 06B4  
                      i1l2996 06C2                        i1l2997 06CA                        u310_20 001F  
                      u302_20 0561                        u302_21 0560                        i1l4990 0497  
                      u311_20 0035                        u303_20 0565                        i1l4992 0498  
                      u311_21 0034                        u303_21 0564                        i1l4994 04A0  
                      i1l4996 04A1                        i1l4988 0493                        i1l4998 04B6  
                      u320_20 00F3                        u312_20 0043                        u304_20 056F  
                      u320_21 00F2                        u312_21 0042                        u304_21 056E  
                      u321_20 00FC                        u313_20 004C                        u305_20 0579  
                      u321_21 00FB                        u313_21 004B                        u305_21 0578  
                      u330_20 01CF                        u322_20 011F                        u314_20 006F  
                      u306_20 057D                        u330_21 01CE                        u322_21 011E  
                      u314_21 006E                        u306_21 057C                        u307_20 059C  
                      u331_20 01D8                        u323_20 0128                        u315_20 0078  
                      u331_21 01D7                        u323_21 0127                        u315_21 0077  
                      u340_20 0417                        u308_20 05B8                        u332_20 01FB  
                      u324_20 014B                        u316_20 009B                        u340_21 0416  
                      u308_21 05B7                        u332_21 01FA                        u324_21 014A  
                      u316_21 009A                        u308_25 05B4                        u341_20 041E  
                      u309_20 05DD                        u333_20 0204                        u325_20 0154  
                      u317_20 00A4                        u341_21 041D                        u309_21 05DC  
                      u333_21 0203                        u325_21 0153                        u317_21 00A3  
                      u309_25 05D9                        u350_20 0685                        u342_20 0477  
                      u334_20 0227                        u326_20 0177                        u318_20 00C7  
                      u350_21 0684                        u342_21 0476                        u334_21 0226  
                      u326_21 0176                        u318_21 00C6                        u343_20 048B  
                      u327_20 0180                        u319_20 00D0                        u343_21 048A  
                      u327_21 017F                        u319_21 00CF                        u351_25 068A  
                      u352_20 0699                        u360_20 06F1                        u336_20 03A3  
                      u344_20 0FE2                        u328_20 01A3                        u352_21 0698  
                      u360_21 06F0                        u336_21 03A2                        u344_21 0FE1  
                      u328_21 01A2                        u360_25 06ED                        u337_20 03DB  
                      u329_20 01AC                        u337_21 03DA                        u329_21 01AB  
                      u353_25 069C                        u361_25 06F9                        u354_20 06AC  
                      u362_20 0705                        u338_20 03EE                        u290_20 0497  
                      u354_21 06AB                        u362_21 0704                        u338_21 03ED  
                      u290_21 0496                        u354_25 06A8                        u347_20 07B1  
                      u339_20 040B                        u291_20 04B6                        u347_21 07B0  
                      u339_21 040A                        u291_21 04B5                        u355_25 06B5  
                      u339_25 0407                        u356_20 06C1                        u292_20 04D1  
                      u356_21 06C0                        u292_21 04D0                        u348_25 07BE  
                      u357_20 06D1                        u293_20 04EC                        u357_21 06D0  
                      u293_21 04EB                        u294_20 0519                        u294_21 0518  
                      u358_25 06D6                        u374_27 0FB0                        u359_20 06E5  
                      u295_20 0527                        u359_21 06E4                        u295_21 0526  
                      u375_27 0F9D                        u296_20 0531                        u296_21 0530  
                      u376_27 0746                        u297_20 0535                        u297_21 0534  
                      u298_20 053F                        u298_21 053E                        u299_20 0549  
                      u299_21 0548                        _TMR0IE 005D                        _TMR0IF 005A  
            _pb0DebounceCount 006C              __end_of_lcd_init 07A8                  ??_ADCconvert 004D  
                   ??___lwdiv 0074                     ??___lwmod 007C              __end_of_init_adc 0FCA  
    __end_of_lcd_write_string 0FE4            ADCconvert@distance 0061                        _rotate 026A  
                      clrloop 0F7F                        saved_w 007E                     ??_sprintf 0023  
           lcd_write_string@s 0074            __end_of_ADCconvert 026A                __pcstackCOMMON 0070  
                __pidataBANK1 0003                    _pb0Pressed 0345                    _pb1Pressed 0347  
                  _pb2Pressed 0349                    _pb3Pressed 034B              ??_lcd_set_cursor 0073  
         i1_lcd_write_control 0FA2                    __pbssBANK0 006A                    __pbssBANK1 00A0  
            _pb1DebounceCount 006D                    __pmaintext 0623                    __pintentry 0004  
        ?i1_lcd_write_control 0070                     ?_adc_read 0070                       ?_rotate 00D1  
            ??_lcd_write_data 0070                     ?_lcd_init 0070           ADCconvert@adcOutput 0051  
                   ?_init_adc 0070         ??i1_lcd_write_control 0070                       ___lwdiv 067D  
                     ___lwmod 06CB     __size_of_adc_read_channel 0041                    ??_adc_read 0072  
             __size_of_rotate 012B                       _dpowers 0756                       _sprintf 0395  
                  ??_lcd_init 00D4          end_of_initialization 07E8                    ??_init_adc 00D1  
            _pb2DebounceCount 006E      __size_of_readAvgDistance 0093             ?_lcd_write_string 0070  
          ??_lcd_write_string 0073             adc_read@adc_value 0074          readAvgDistance@F1216 00B0  
    readAvgDistance@adcOutput 0035                   _pb0Released 0346                   _pb1Released 0348  
                 _pb2Released 034A                   _pb3Released 034C                 __pbitbssBANK0 0340  
              __end_of_rotate 0395           start_initialization 07CF                   rotate@steps 00D4  
            _pb3DebounceCount 006F         lcd_set_cursor@address 0073                _RTC_FLAG_250MS 0342  
              _RTC_FLAG_500MS 0343                   __pdataBANK1 00D6              _adc_read_channel 070F  
                    ??_rotate 00D2             __size_of_adc_read 0027             ??_readAvgDistance 0031  
               __pcstackBANK0 0020                 __pcstackBANK1 00D1             __size_of_lcd_init 002B  
                 sprintf@_val 0029                   sprintf@flag 0027                   sprintf@prec 0028  
                _current_step 00D6              readAvgDistance@i 0049             __size_of_init_adc 0014  
            ___lwdiv@dividend 0072                     __ptext460 026A                     __ptext461 0FB6  
                   __ptext470 070F                     __ptext462 0493                     __ptext471 06CB  
                   __ptext463 0015                     __ptext472 067D                     __ptext464 0590  
                   __ptext473 07A8                     __ptext465 0FCA                     __ptext457 07EC  
                   __ptext474 0000                     __ptext466 0F86                     __ptext458 077D  
                   __ptext467 0FA2                     __ptext459 0FE4                     __ptext468 0F8F  
                   __ptext469 0395                      ?___lwdiv 0070                      ?___lwmod 0078  
                   __pstrings 0750              ___lwdiv@quotient 0075                      ?_sprintf 0020  
     __size_of_lcd_set_cursor 0009             interrupt_function 0004   __end_ofi1_lcd_write_control 0FB6  
   readAvgDistance@averageval 0047                   __stringbase 0755     __size_of_lcd_write_string 001A  
     __size_of_lcd_write_data 0013              ADCconvert@adcVal 004B       adc_read_channel@channel 0077  
               _RTC_FLAG_10MS 0340                 _RTC_FLAG_50MS 0344                    _ADCconvert 0015  
            __size_of___lwdiv 004E              __size_of___lwmod 0044                      _adc_read 07A8  
             ___lwdiv@divisor 0070               ___lwdiv@counter 0077                      _lcd_init 077D  
            __size_of_sprintf 00FE      __end_of_adc_read_channel 0750     lcd_write_control@databyte 00D3  
                    _init_adc 0FB6                 __size_of_isr1 00FD                 __size_of_main 005A  
               __size_of_init 0014                      clear_ram 0F7E               _readAvgDistance 0590  
             ADCconvert@F1220 00A0             readDistance@F1211 00C0                  _RTC_FLAG_1MS 0341  
                    intlevel1 0000                _lcd_set_cursor 0F86                     sprintf@ap 0026  
                   sprintf@sp 002D              ___lwmod@dividend 007A                     stringcode 0750  
                 ?_ADCconvert 004B             _lcd_write_control 0FE4   i1lcd_write_control@databyte 0072  
          ?_lcd_write_control 0070                    _OPTION_REG 0081                      sprintf@c 002E  
                    sprintf@f 0020               ___lwmod@divisor 0078               ___lwmod@counter 007D  
                    stringdir 0750                      stringtab 0750           ??_lcd_write_control 00D1  
      __end_of_lcd_set_cursor 0F8F              _lcd_write_string 0FCA             _current_direction 00D0  
                 _RTC_Counter 006A       __end_of_readAvgDistance 0623                _lcd_write_data 0F8F  
