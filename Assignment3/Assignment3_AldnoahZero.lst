

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 11 14:33:24 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotTurnSpeed
    55                           	FNCALL	_main,___awtoft
    56                           	FNCALL	_main,___ftmul
    57                           	FNCALL	_main,___fttol
    58                           	FNCALL	_main,_robotTurn
    59                           	FNCALL	_main,_robotMoveSpeed
    60                           	FNCALL	_main,_ChargeMode
    61                           	FNCALL	_ChargeMode,_ser_putch
    62                           	FNCALL	_ChargeMode,_UpdateDisplay
    63                           	FNCALL	_robotMoveSpeed,_RobotDrive
    64                           	FNCALL	_robotMoveSpeed,_robot_read
    65                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    66                           	FNCALL	_robotMoveSpeed,_abs
    67                           	FNCALL	_robotTurnSpeed,_robotTurn
    68                           	FNCALL	_robotTurnSpeed,_robot_read
    69                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    70                           	FNCALL	_robotTurnSpeed,_abs
    71                           	FNCALL	_scan360,_readAvgDistance
    72                           	FNCALL	_scan360,_rotate
    73                           	FNCALL	_scan360,_UpdateDisplay
    74                           	FNCALL	_calibrateIR,_rotate
    75                           	FNCALL	_calibrateIR,_UpdateDisplay
    76                           	FNCALL	_UpdateDisplay,_lcd_write_control
    77                           	FNCALL	_UpdateDisplay,_sprintf
    78                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    79                           	FNCALL	_UpdateDisplay,_lcd_write_string
    80                           	FNCALL	_UpdateDisplay,___awmod
    81                           	FNCALL	_readAvgDistance,_readDistance
    82                           	FNCALL	_readAvgDistance,___lwdiv
    83                           	FNCALL	_readAvgDistance,_ADCconvert
    84                           	FNCALL	_init,_ser_init
    85                           	FNCALL	_init,_init_adc
    86                           	FNCALL	_init,_lcd_init
    87                           	FNCALL	_init,_robo_init
    88                           	FNCALL	_readDistance,_adc_read_channel
    89                           	FNCALL	_robot_read,_ser_putch
    90                           	FNCALL	_robot_read,_ser_getch
    91                           	FNCALL	_lcd_init,_lcd_write_control
    92                           	FNCALL	_lcd_write_string,_lcd_write_data
    93                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    94                           	FNCALL	___awtoft,___ftpack
    95                           	FNCALL	___ftmul,___ftpack
    96                           	FNCALL	_abs,___wmul
    97                           	FNCALL	_RobotDrive,_ser_putch
    98                           	FNCALL	_ser_getch,_ser_isrx
    99                           	FNCALL	_sprintf,___lwdiv
   100                           	FNCALL	_sprintf,___lwmod
   101                           	FNCALL	_ADCconvert,___wmul
   102                           	FNCALL	_ADCconvert,___lwdiv
   103                           	FNCALL	_robotTurn,_ser_putch
   104                           	FNCALL	_rotate,_spi_transfer
   105                           	FNCALL	_robo_init,_ser_putch
   106                           	FNCALL	_adc_read_channel,_adc_read
   107                           	FNROOT	_main
   108                           	FNCALL	_isr1,i1___lwmod
   109                           	FNCALL	_isr1,_ReadButtons
   110                           	FNCALL	_ReadButtons,_Debounce
   111                           	FNCALL	intlevel1,_isr1
   112                           	global	intlevel1
   113                           	FNROOT	intlevel1
   114                           	global	_menuStrings
   115                           	global	_shortMenuStrings
   116                           	global	_current_step
   117                           psect	idataBANK1,class=CODE,space=0,delta=2
   118                           global __pidataBANK1
   119  1383                     __pidataBANK1:
   120                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   121                           	line	49
   122                           
   123                           ;initializer for _menuStrings
   124  1383  3453               	retlw	(STR_1-__stringbase)&0ffh
   125  1384  344A               	retlw	(STR_2-__stringbase)&0ffh
   126  1385  3465               	retlw	(STR_3-__stringbase)&0ffh
   127  1386  346E               	retlw	(STR_4-__stringbase)&0ffh
   128  1387  345C               	retlw	(STR_5-__stringbase)&0ffh
   129  1388  3441               	retlw	(STR_6-__stringbase)&0ffh
   130                           	line	50
   131                           
   132                           ;initializer for _shortMenuStrings
   133  1389  3492               	retlw	(STR_7-__stringbase)&0ffh
   134  138A  3496               	retlw	(STR_8-__stringbase)&0ffh
   135  138B  347E               	retlw	(STR_9-__stringbase)&0ffh
   136  138C  348A               	retlw	(STR_10-__stringbase)&0ffh
   137  138D  349A               	retlw	(STR_11-__stringbase)&0ffh
   138  138E  348E               	retlw	(STR_12-__stringbase)&0ffh
   139                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   140                           	line	45
   141                           
   142                           ;initializer for _current_step
   143  138F  343C               	retlw	03Ch
   144                           	global	_dpowers
   145                           psect	strings,class=STRING,delta=2
   146                           global __pstrings
   147  0729                     __pstrings:
   148                           ;	global	stringdir,stringtab,__stringbase
   149  0729                     stringtab:
   150                           ;	String table - string pointers are 1 byte each
   151  0729  1BFF               	btfsc	(btemp+1),7
   152  072A  2F33               	ljmp	stringcode
   153  072B  1383               	bcf	status,7
   154  072C  187F               	btfsc	(btemp+1),0
   155  072D  1783               	bsf	status,7
   156  072E  0800               	movf	indf,w
   157  072F  0A84               	incf fsr
   158  0730  1903               skipnz
   159  0731  0AFF               incf btemp+1
   160  0732  0008               	return
   161  0733                     stringcode:stringdir:
      + 0733                     stringdir:	
   162  0733  3007               movlw high(stringdir)
   163  0734  008A               movwf pclath
   164  0735  0804               movf fsr,w
   165  0736  0A84               incf fsr
   166  0737  0782               	addwf pc
   167  0738                     __stringbase:
   168  0738  3400               	retlw	0
   169                           psect	strings
   170                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   171                           	line	350
   172  0739                     _dpowers:
   173  0739  3401               	retlw	01h
   174  073A  3400               	retlw	0
   175                           
   176  073B  340A               	retlw	0Ah
   177  073C  3400               	retlw	0
   178                           
   179  073D  3464               	retlw	064h
   180  073E  3400               	retlw	0
   181                           
   182  073F  34E8               	retlw	0E8h
   183  0740  3403               	retlw	03h
   184                           
   185  0741  3410               	retlw	010h
   186  0742  3427               	retlw	027h
   187                           
   188                           	global	_dpowers
   189                           	global	UpdateDisplay@F1241
   190                           	global	_txfifo
   191                           	global	_buttonPressed
   192                           	global	_CenterPressed
   193                           	global	_CenterReleased
   194                           	global	_DownPressed
   195                           	global	_DownReleased
   196                           	global	_LeftPressed
   197                           	global	_LeftReleased
   198                           	global	_RTC_FLAG_1MS
   199                           	global	_RTC_FLAG_250MS
   200                           	global	_RTC_FLAG_500MS
   201                           	global	_RightPressed
   202                           	global	_RightReleased
   203                           	global	_UpPressed
   204                           	global	_UpReleased
   205                           	global	_rxfifo
   206                           	global	_IRdistance
   207                           	global	_RTC_Counter
   208                           	global	_TotalDistTravelled
   209                           	global	_adcVal
   210                           	global	_angleTurned
   211                           	global	_distTravelled
   212                           	global	_dist_high
   213                           	global	_dist_low
   214                           	global	_pos
   215                           	global	_total
   216                           	global	_totalSteps
   217                           	global	_AngleHighByte
   218                           	global	_AngleLowByte
   219                           	global	_BumpSensors
   220                           	global	_CenterDebounceCount
   221                           	global	_DistHighByte
   222                           	global	_DistLowByte
   223                           	global	_DownDebounceCount
   224                           	global	_LeftDebounceCount
   225                           	global	_ROBOTerror
   226                           	global	_RightDebounceCount
   227                           	global	_UpDebounceCount
   228                           	global	_currentMenu
   229                           	global	_highByte
   230                           	global	_lowByte
   231                           	global	_rxiptr
   232                           	global	_rxoptr
   233                           	global	_ser_tmp
   234                           	global	_turnhighByte
   235                           	global	_turnlowByte
   236                           	global	_txiptr
   237                           	global	_txoptr
   238                           	global	_ADCON0
   239  001F                     _ADCON0	set	31
   240                           	global	_ADRESH
   241  001E                     _ADRESH	set	30
   242                           	global	_PORTA
   243  0005                     _PORTA	set	5
   244                           	global	_PORTD
   245  0008                     _PORTD	set	8
   246                           	global	_PORTE
   247  0009                     _PORTE	set	9
   248                           	global	_RCREG
   249  001A                     _RCREG	set	26
   250                           	global	_SSPBUF
   251  0013                     _SSPBUF	set	19
   252                           	global	_SSPCON
   253  0014                     _SSPCON	set	20
   254                           	global	_TMR0
   255  0001                     _TMR0	set	1
   256                           	global	_TXREG
   257  0019                     _TXREG	set	25
   258                           	global	AT25256A@CS0
   259  0038                     AT25256A@CS0	set	56
   260                           	global	AT25256A@CS1
   261  0039                     AT25256A@CS1	set	57
   262                           	global	_CARRY
   263  0018                     _CARRY	set	24
   264                           	global	_CHS0
   265  00FB                     _CHS0	set	251
   266                           	global	_CHS1
   267  00FC                     _CHS1	set	252
   268                           	global	_CHS2
   269  00FD                     _CHS2	set	253
   270                           	global	_CREN
   271  00C4                     _CREN	set	196
   272                           	global	_GIE
   273  005F                     _GIE	set	95
   274                           	global	_GO
   275  00FA                     _GO	set	250
   276                           	global	_OERR
   277  00C1                     _OERR	set	193
   278                           	global	_PEIE
   279  005E                     _PEIE	set	94
   280                           	global	_RB0
   281  0030                     _RB0	set	48
   282                           	global	_RB2
   283  0032                     _RB2	set	50
   284                           	global	_RB3
   285  0033                     _RB3	set	51
   286                           	global	_RB4
   287  0034                     _RB4	set	52
   288                           	global	_RB5
   289  0035                     _RB5	set	53
   290                           	global	_RB6
   291  0036                     _RB6	set	54
   292                           	global	_RC0
   293  0038                     _RC0	set	56
   294                           	global	_RC1
   295  0039                     _RC1	set	57
   296                           	global	_RC2
   297  003A                     _RC2	set	58
   298                           	global	_RCIF
   299  0065                     _RCIF	set	101
   300                           	global	_RE0
   301  0048                     _RE0	set	72
   302                           	global	_RE1
   303  0049                     _RE1	set	73
   304                           	global	_RE2
   305  004A                     _RE2	set	74
   306                           	global	_RX9
   307  00C6                     _RX9	set	198
   308                           	global	_SPEN
   309  00C7                     _SPEN	set	199
   310                           	global	_SSPIF
   311  0063                     _SSPIF	set	99
   312                           	global	_TMR0IE
   313  005D                     _TMR0IE	set	93
   314                           	global	_TMR0IF
   315  005A                     _TMR0IF	set	90
   316                           	global	_TXIF
   317  0064                     _TXIF	set	100
   318                           	global	_ADCON1
   319  009F                     _ADCON1	set	159
   320                           	global	_ADRESL
   321  009E                     _ADRESL	set	158
   322                           	global	_OPTION_REG
   323  0081                     _OPTION_REG	set	129
   324                           	global	_SPBRG
   325  0099                     _SPBRG	set	153
   326                           	global	_SSPSTAT
   327  0094                     _SSPSTAT	set	148
   328                           	global	_TRISA
   329  0085                     _TRISA	set	133
   330                           	global	_TRISB
   331  0086                     _TRISB	set	134
   332                           	global	_TRISC
   333  0087                     _TRISC	set	135
   334                           	global	_TRISD
   335  0088                     _TRISD	set	136
   336                           	global	_TRISE
   337  0089                     _TRISE	set	137
   338                           	global	_BRGH
   339  04C2                     _BRGH	set	1218
   340                           	global	_RCIE
   341  0465                     _RCIE	set	1125
   342                           	global	_SYNC
   343  04C4                     _SYNC	set	1220
   344                           	global	_TX9
   345  04C6                     _TX9	set	1222
   346                           	global	_TXEN
   347  04C5                     _TXEN	set	1221
   348                           	global	_TXIE
   349  0464                     _TXIE	set	1124
   350                           	global	_EEADR
   351  010D                     _EEADR	set	269
   352                           	global	_EEDATA
   353  010C                     _EEDATA	set	268
   354                           	global	_EECON1
   355  018C                     _EECON1	set	396
   356                           	global	_EECON2
   357  018D                     _EECON2	set	397
   358                           	global	_RD
   359  0C60                     _RD	set	3168
   360                           	global	_WR
   361  0C61                     _WR	set	3169
   362                           	global	_WREN
   363  0C62                     _WREN	set	3170
   364                           	
   365  0743                     STR_18:	
   366  0743  3420               	retlw	32	;' '
   367  0744  3443               	retlw	67	;'C'
   368  0745  3468               	retlw	104	;'h'
   369  0746  3461               	retlw	97	;'a'
   370  0747  3472               	retlw	114	;'r'
   371  0748  3467               	retlw	103	;'g'
   372  0749  3469               	retlw	105	;'i'
   373  074A  346E               	retlw	110	;'n'
   374  074B  3467               	retlw	103	;'g'
   375  074C  3420               	retlw	32	;' '
   376  074D  344D               	retlw	77	;'M'
   377  074E  346F               	retlw	111	;'o'
   378  074F  3464               	retlw	100	;'d'
   379  0750  3465               	retlw	101	;'e'
   380  0751  3420               	retlw	32	;' '
   381  0752  3400               	retlw	0
   382                           psect	strings
   383                           	
   384  0753                     STR_14:	
   385  0753  345A               	retlw	90	;'Z'
   386  0754  3465               	retlw	101	;'e'
   387  0755  3472               	retlw	114	;'r'
   388  0756  346F               	retlw	111	;'o'
   389  0757  3420               	retlw	32	;' '
   390  0758  3453               	retlw	83	;'S'
   391  0759  3474               	retlw	116	;'t'
   392  075A  3465               	retlw	101	;'e'
   393  075B  3470               	retlw	112	;'p'
   394  075C  345F               	retlw	95	;'_'
   395  075D  344D               	retlw	77	;'M'
   396  075E  346F               	retlw	111	;'o'
   397  075F  3474               	retlw	116	;'t'
   398  0760  346F               	retlw	111	;'o'
   399  0761  3472               	retlw	114	;'r'
   400  0762  3400               	retlw	0
   401                           psect	strings
   402                           	
   403  0763                     STR_13:	
   404  0763  3449               	retlw	73	;'I'
   405  0764  3452               	retlw	82	;'R'
   406  0765  343A               	retlw	58	;':'
   407  0766  3425               	retlw	37	;'%'
   408  0767  3464               	retlw	100	;'d'
   409  0768  3463               	retlw	99	;'c'
   410  0769  346D               	retlw	109	;'m'
   411  076A  3420               	retlw	32	;' '
   412  076B  3444               	retlw	68	;'D'
   413  076C  343A               	retlw	58	;':'
   414  076D  3425               	retlw	37	;'%'
   415  076E  3464               	retlw	100	;'d'
   416  076F  3400               	retlw	0
   417                           psect	strings
   418                           	
   419  0770                     STR_19:	
   420  0770  3420               	retlw	32	;' '
   421  0771  3420               	retlw	32	;' '
   422  0772  3445               	retlw	69	;'E'
   423  0773  3458               	retlw	88	;'X'
   424  0774  3449               	retlw	73	;'I'
   425  0775  3454               	retlw	84	;'T'
   426  0776  3420               	retlw	32	;' '
   427  0777  3420               	retlw	32	;' '
   428  0778  3400               	retlw	0
   429                           psect	strings
   430                           	
   431  0779                     STR_6:	
   432  0779  3420               	retlw	32	;' '
   433  077A  3443               	retlw	67	;'C'
   434  077B  3468               	retlw	104	;'h'
   435  077C  3461               	retlw	97	;'a'
   436  077D  3472               	retlw	114	;'r'
   437  077E  3467               	retlw	103	;'g'
   438  077F  3465               	retlw	101	;'e'
   439  0780  3420               	retlw	32	;' '
   440  0781  3400               	retlw	0
   441                           psect	strings
   442                           	
   443  0782                     STR_2:	
   444  0782  3453               	retlw	83	;'S'
   445  0783  3463               	retlw	99	;'c'
   446  0784  3461               	retlw	97	;'a'
   447  0785  346E               	retlw	110	;'n'
   448  0786  345F               	retlw	95	;'_'
   449  0787  3433               	retlw	51	;'3'
   450  0788  3436               	retlw	54	;'6'
   451  0789  3430               	retlw	48	;'0'
   452  078A  3400               	retlw	0
   453                           psect	strings
   454                           	
   455  078B                     STR_1:	
   456  078B  3443               	retlw	67	;'C'
   457  078C  3461               	retlw	97	;'a'
   458  078D  346C               	retlw	108	;'l'
   459  078E  3469               	retlw	105	;'i'
   460  078F  3462               	retlw	98	;'b'
   461  0790  345F               	retlw	95	;'_'
   462  0791  3449               	retlw	73	;'I'
   463  0792  3452               	retlw	82	;'R'
   464  0793  3400               	retlw	0
   465                           psect	strings
   466                           	
   467  0794                     STR_5:	
   468  0794  3446               	retlw	70	;'F'
   469  0795  346C               	retlw	108	;'l'
   470  0796  3477               	retlw	119	;'w'
   471  0797  345F               	retlw	95	;'_'
   472  0798  3457               	retlw	87	;'W'
   473  0799  3461               	retlw	97	;'a'
   474  079A  346C               	retlw	108	;'l'
   475  079B  346C               	retlw	108	;'l'
   476  079C  3400               	retlw	0
   477                           psect	strings
   478                           	
   479  079D                     STR_3:	
   480  079D  3444               	retlw	68	;'D'
   481  079E  3472               	retlw	114	;'r'
   482  079F  3469               	retlw	105	;'i'
   483  07A0  3476               	retlw	118	;'v'
   484  07A1  3465               	retlw	101	;'e'
   485  07A2  345F               	retlw	95	;'_'
   486  07A3  3432               	retlw	50	;'2'
   487  07A4  346D               	retlw	109	;'m'
   488  07A5  3400               	retlw	0
   489                           psect	strings
   490                           	
   491  07A6                     STR_4:	
   492  07A6  3444               	retlw	68	;'D'
   493  07A7  3472               	retlw	114	;'r'
   494  07A8  3469               	retlw	105	;'i'
   495  07A9  3476               	retlw	118	;'v'
   496  07AA  3465               	retlw	101	;'e'
   497  07AB  345F               	retlw	95	;'_'
   498  07AC  344C               	retlw	76	;'L'
   499  07AD  3400               	retlw	0
   500                           psect	strings
   501                           	
   502  07AE                     STR_16:	
   503  07AE  3443               	retlw	67	;'C'
   504  07AF  344F               	retlw	79	;'O'
   505  07B0  344E               	retlw	78	;'N'
   506  07B1  3446               	retlw	70	;'F'
   507  07B2  3449               	retlw	73	;'I'
   508  07B3  3452               	retlw	82	;'R'
   509  07B4  344D               	retlw	77	;'M'
   510  07B5  3400               	retlw	0
   511                           psect	strings
   512                           	
   513  07B6                     STR_9:	
   514  07B6  3444               	retlw	68	;'D'
   515  07B7  3472               	retlw	114	;'r'
   516  07B8  3432               	retlw	50	;'2'
   517  07B9  3400               	retlw	0
   518                           psect	strings
   519                           	
   520  07BA                     STR_15:	
   521  07BA  343C               	retlw	60	;'<'
   522  07BB  343C               	retlw	60	;'<'
   523  07BC  343C               	retlw	60	;'<'
   524  07BD  3400               	retlw	0
   525                           psect	strings
   526                           	
   527  07BE                     STR_17:	
   528  07BE  343E               	retlw	62	;'>'
   529  07BF  343E               	retlw	62	;'>'
   530  07C0  343E               	retlw	62	;'>'
   531  07C1  3400               	retlw	0
   532                           psect	strings
   533                           	
   534  07C2                     STR_10:	
   535  07C2  3444               	retlw	68	;'D'
   536  07C3  3472               	retlw	114	;'r'
   537  07C4  344C               	retlw	76	;'L'
   538  07C5  3400               	retlw	0
   539                           psect	strings
   540                           	
   541  07C6                     STR_12:	
   542  07C6  3443               	retlw	67	;'C'
   543  07C7  3468               	retlw	104	;'h'
   544  07C8  3467               	retlw	103	;'g'
   545  07C9  3400               	retlw	0
   546                           psect	strings
   547                           	
   548  07CA                     STR_7:	
   549  07CA  3443               	retlw	67	;'C'
   550  07CB  3461               	retlw	97	;'a'
   551  07CC  346C               	retlw	108	;'l'
   552  07CD  3400               	retlw	0
   553                           psect	strings
   554                           	
   555  07CE                     STR_8:	
   556  07CE  3453               	retlw	83	;'S'
   557  07CF  3463               	retlw	99	;'c'
   558  07D0  346E               	retlw	110	;'n'
   559  07D1  3400               	retlw	0
   560                           psect	strings
   561                           	
   562  07D2                     STR_11:	
   563  07D2  3446               	retlw	70	;'F'
   564  07D3  346C               	retlw	108	;'l'
   565  07D4  3477               	retlw	119	;'w'
   566  07D5  3400               	retlw	0
   567                           psect	strings
   568                           	file	"Assignment3_AldnoahZero.as"
   569                           	line	#
   570                           psect cinit,class=CODE,delta=2
   571                           global start_initialization
   572  143C                     start_initialization:
   573                           
   574                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   575                           global __pbitbssCOMMON
   576  0380                     __pbitbssCOMMON:
   577  0380                     _CenterPressed:
   578  0380                            ds      1
   579                           
   580  0381                     _CenterReleased:
   581  0381                            ds      1
   582                           
   583  0382                     _DownPressed:
   584  0382                            ds      1
   585                           
   586  0383                     _DownReleased:
   587  0383                            ds      1
   588                           
   589  0384                     _LeftPressed:
   590  0384                            ds      1
   591                           
   592  0385                     _LeftReleased:
   593  0385                            ds      1
   594                           
   595  0386                     _RTC_FLAG_1MS:
   596  0386                            ds      1
   597                           
   598  0387                     _RTC_FLAG_250MS:
   599  0387                            ds      1
   600                           
   601  0388                     _RTC_FLAG_500MS:
   602  0388                            ds      1
   603                           
   604  0389                     _RightPressed:
   605  0389                            ds      1
   606                           
   607  038A                     _RightReleased:
   608  038A                            ds      1
   609                           
   610  038B                     _UpPressed:
   611  038B                            ds      1
   612                           
   613  038C                     _UpReleased:
   614  038C                            ds      1
   615                           
   616                           psect	bssCOMMON,class=COMMON,space=1
   617                           global __pbssCOMMON
   618  007D                     __pbssCOMMON:
   619  007D                     _buttonPressed:
   620  007D                            ds      1
   621                           
   622                           psect	bssBANK1,class=BANK1,space=1
   623                           global __pbssBANK1
   624  00A0                     __pbssBANK1:
   625  00A0                     _rxfifo:
   626  00A0                            ds      16
   627                           
   628  00B0                     _IRdistance:
   629  00B0                            ds      2
   630                           
   631  00B2                     _RTC_Counter:
   632  00B2                            ds      2
   633                           
   634  00B4                     _TotalDistTravelled:
   635  00B4                            ds      2
   636                           
   637  00B6                     _adcVal:
   638  00B6                            ds      2
   639                           
   640  00B8                     _angleTurned:
   641  00B8                            ds      2
   642                           
   643  00BA                     _distTravelled:
   644  00BA                            ds      2
   645                           
   646  00BC                     _dist_high:
   647  00BC                            ds      2
   648                           
   649  00BE                     _dist_low:
   650  00BE                            ds      2
   651                           
   652  00C0                     _pos:
   653  00C0                            ds      2
   654                           
   655  00C2                     _total:
   656  00C2                            ds      2
   657                           
   658  00C4                     _totalSteps:
   659  00C4                            ds      2
   660                           
   661  00C6                     _AngleHighByte:
   662  00C6                            ds      1
   663                           
   664  00C7                     _AngleLowByte:
   665  00C7                            ds      1
   666                           
   667  00C8                     _BumpSensors:
   668  00C8                            ds      1
   669                           
   670  00C9                     _CenterDebounceCount:
   671  00C9                            ds      1
   672                           
   673  00CA                     _DistHighByte:
   674  00CA                            ds      1
   675                           
   676  00CB                     _DistLowByte:
   677  00CB                            ds      1
   678                           
   679  00CC                     _DownDebounceCount:
   680  00CC                            ds      1
   681                           
   682  00CD                     _LeftDebounceCount:
   683  00CD                            ds      1
   684                           
   685  00CE                     _ROBOTerror:
   686  00CE                            ds      1
   687                           
   688  00CF                     _RightDebounceCount:
   689  00CF                            ds      1
   690                           
   691  00D0                     _UpDebounceCount:
   692  00D0                            ds      1
   693                           
   694  00D1                     _currentMenu:
   695  00D1                            ds      1
   696                           
   697  00D2                     _highByte:
   698  00D2                            ds      1
   699                           
   700  00D3                     _lowByte:
   701  00D3                            ds      1
   702                           
   703  00D4                     _rxiptr:
   704  00D4                            ds      1
   705                           
   706  00D5                     _rxoptr:
   707  00D5                            ds      1
   708                           
   709  00D6                     _ser_tmp:
   710  00D6                            ds      1
   711                           
   712  00D7                     _turnhighByte:
   713  00D7                            ds      1
   714                           
   715  00D8                     _turnlowByte:
   716  00D8                            ds      1
   717                           
   718  00D9                     _txiptr:
   719  00D9                            ds      1
   720                           
   721  00DA                     _txoptr:
   722  00DA                            ds      1
   723                           
   724                           psect	dataBANK1,class=BANK1,space=1
   725                           global __pdataBANK1
   726  00DB                     __pdataBANK1:
   727                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   728                           	line	49
   729  00DB                     _menuStrings:
   730  00DB                            ds      6
   731                           
   732                           psect	dataBANK1
   733                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   734                           	line	50
   735  00E1                     _shortMenuStrings:
   736  00E1                            ds      6
   737                           
   738                           psect	dataBANK1
   739                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   740                           	line	45
   741  00E7                     _current_step:
   742  00E7                            ds      1
   743                           
   744                           psect	bssBANK3,class=BANK3,space=1
   745                           global __pbssBANK3
   746  0190                     __pbssBANK3:
   747  0190                     UpdateDisplay@F1241:
   748  0190                            ds      16
   749                           
   750  01A0                     _txfifo:
   751  01A0                            ds      16
   752                           
   753                           psect clrtext,class=CODE,delta=2
   754                           global clear_ram
   755                           ;	Called with FSR containing the base address, and
   756                           ;	W with the last address+1
   757  1370                     clear_ram:
   758  1370  0064               	clrwdt			;clear the watchdog before getting into this loop
   759  1371                     clrloop:
   760  1371  0180               	clrf	indf		;clear RAM location pointed to by FSR
   761  1372  0A84               	incf	fsr,f		;increment pointer
   762  1373  0604               	xorwf	fsr,w		;XOR with final address
   763  1374  1903               	btfsc	status,2	;have we reached the end yet?
   764  1375  3400               	retlw	0		;all done for this memory range, return
   765  1376  0604               	xorwf	fsr,w		;XOR again to restore value
   766  1377  2B71               	goto	clrloop		;do the next byte
   767                           
   768                           ; Clear objects allocated to BITCOMMON
   769                           psect cinit,class=CODE,delta=2
   770  143C  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   771  143D  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   772                           ; Clear objects allocated to COMMON
   773                           psect cinit,class=CODE,delta=2
   774  143E  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   775                           ; Clear objects allocated to BANK1
   776                           psect cinit,class=CODE,delta=2
   777  143F  1383               	bcf	status, 7	;select IRP bank0
   778  1440  30A0               	movlw	low(__pbssBANK1)
   779  1441  0084               	movwf	fsr
   780  1442  30DB               	movlw	low((__pbssBANK1)+03Bh)
   781  1443  160A  118A  2370   	fcall	clear_ram
              160A  118A         
   782                           ; Clear objects allocated to BANK3
   783                           psect cinit,class=CODE,delta=2
   784  1448  1783               	bsf	status, 7	;select IRP bank2
   785  1449  3090               	movlw	low(__pbssBANK3)
   786  144A  0084               	movwf	fsr
   787  144B  30B0               	movlw	low((__pbssBANK3)+020h)
   788  144C  160A  118A  2370   	fcall	clear_ram
              160A  118A         
   789                           global btemp
   790                           psect inittext,class=CODE,delta=2
   791                           global init_fetch,btemp
   792                           ;	Called with low address in FSR and high address in W
   793  13A3                     init_fetch:
   794  13A3  087E               	movf btemp,w
   795  13A4  008A               	movwf pclath
   796  13A5  087F               	movf btemp+1,w
   797  13A6  0082               	movwf pc
   798                           global init_ram
   799                           ;Called with:
   800                           ;	high address of idata address in btemp 
   801                           ;	low address of idata address in btemp+1 
   802                           ;	low address of data in FSR
   803                           ;	high address + 1 of data in btemp-1
   804  13A7                     init_ram:
   805  13A7  160A  118A  23A3   	fcall init_fetch
              160A  118A         
   806  13AC  0080               	movwf indf,f
   807  13AD  0A84               	incf fsr,f
   808  13AE  0804               	movf fsr,w
   809  13AF  067D               	xorwf btemp-1,w
   810  13B0  1903               	btfsc status,2
   811  13B1  3400               	retlw 0
   812  13B2  0AFF               	incf btemp+1,f
   813  13B3  1903               	btfsc status,2
   814  13B4  0AFE               	incf btemp,f
   815  13B5  2BA7               	goto init_ram
   816                           ; Initialize objects allocated to BANK1
   817                           psect cinit,class=CODE,delta=2
   818                           global init_ram, __pidataBANK1
   819  1451  1383               	bcf	status, 7	;select IRP bank0
   820  1452  30E8               	movlw low(__pdataBANK1+13)
   821  1453  00FD               	movwf btemp-1,f
   822  1454  3013               	movlw high(__pidataBANK1)
   823  1455  00FE               	movwf btemp,f
   824  1456  3083               	movlw low(__pidataBANK1)
   825  1457  00FF               	movwf btemp+1,f
   826  1458  30DB               	movlw low(__pdataBANK1)
   827  1459  0084               	movwf fsr,f
   828  145A  160A  118A  23A7   	fcall init_ram
              160A  118A         
   829                           psect cinit,class=CODE,delta=2
   830                           global end_of_initialization
   831                           
   832                           ;End of C runtime variable initialization code
   833                           
   834  145F                     end_of_initialization:
   835  145F  0183               clrf status
   836  1460  120A  118A  2A78   ljmp _main	;jump to C main() function
   837                           psect	cstackCOMMON,class=COMMON,space=1
   838                           global __pcstackCOMMON
   839  0072                     __pcstackCOMMON:
   840                           	global	?_ser_init
   841  0072                     ?_ser_init:	; 0 bytes @ 0x0
   842                           	global	?_robo_init
   843  0072                     ?_robo_init:	; 0 bytes @ 0x0
   844                           	global	?_robot_read
   845  0072                     ?_robot_read:	; 0 bytes @ 0x0
   846                           	global	?_readAvgDistance
   847  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   848                           	global	?_UpdateDisplay
   849  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   850                           	global	?_calibrateIR
   851  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   852                           	global	?_ChargeMode
   853  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   854                           	global	?_ser_putch
   855  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   856                           	global	?_ADCconvert
   857  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   858                           	global	?_init_adc
   859  0072                     ?_init_adc:	; 0 bytes @ 0x0
   860                           	global	?_lcd_write_control
   861  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   862                           	global	?_lcd_write_data
   863  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   864                           	global	?_lcd_set_cursor
   865  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   866                           	global	?_lcd_init
   867  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   868                           	global	?_isr1
   869  0072                     ?_isr1:	; 0 bytes @ 0x0
   870                           	global	?_init
   871  0072                     ?_init:	; 0 bytes @ 0x0
   872                           	global	?_main
   873  0072                     ?_main:	; 0 bytes @ 0x0
   874                           	global	?_Debounce
   875  0072                     ?_Debounce:	; 0 bytes @ 0x0
   876                           	global	??_Debounce
   877  0072                     ??_Debounce:	; 0 bytes @ 0x0
   878                           	global	?_ser_isrx
   879  0072                     ?_ser_isrx:	; 1 bit 
   880                           	global	?_ReadButtons
   881  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   882                           	global	?_Menu
   883  0072                     ?_Menu:	; 1 bytes @ 0x0
   884                           	global	?_ser_getch
   885  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   886                           	global	?_adc_read_channel
   887  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   888                           	global	?_spi_transfer
   889  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   890                           	global	?i1___lwmod
   891  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   892                           	global	i1___lwmod@divisor
   893  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   894  0072                     	ds	1
   895                           	global	??_ReadButtons
   896  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   897  0073                     	ds	1
   898                           	global	i1___lwmod@dividend
   899  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   900  0074                     	ds	2
   901                           	global	??i1___lwmod
   902  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   903  0076                     	ds	1
   904                           	global	i1___lwmod@counter
   905  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   906  0077                     	ds	1
   907                           	global	??_isr1
   908  0078                     ??_isr1:	; 0 bytes @ 0x6
   909  0078                     	ds	5
   910                           psect	cstackBANK0,class=BANK0,space=1
   911                           global __pcstackBANK0
   912  0020                     __pcstackBANK0:
   913                           	global	??_ser_init
   914  0020                     ??_ser_init:	; 0 bytes @ 0x0
   915                           	global	??_Menu
   916  0020                     ??_Menu:	; 0 bytes @ 0x0
   917                           	global	??_ser_putch
   918  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   919                           	global	??_ser_getch
   920  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   921                           	global	??_init_adc
   922  0020                     ??_init_adc:	; 0 bytes @ 0x0
   923                           	global	??_lcd_write_control
   924  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   925                           	global	??_lcd_write_data
   926  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   927                           	global	??_spi_transfer
   928  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   929                           	global	??_ser_isrx
   930  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   931                           	global	?_adc_read
   932  0020                     ?_adc_read:	; 2 bytes @ 0x0
   933                           	global	?___wmul
   934  0020                     ?___wmul:	; 2 bytes @ 0x0
   935                           	global	?___awmod
   936  0020                     ?___awmod:	; 2 bytes @ 0x0
   937                           	global	?___ftpack
   938  0020                     ?___ftpack:	; 3 bytes @ 0x0
   939                           	global	Menu@BTN_input
   940  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   941                           	global	___wmul@multiplier
   942  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   943                           	global	___awmod@divisor
   944  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   945                           	global	___ftpack@arg
   946  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
   947  0020                     	ds	1
   948                           	global	spi_transfer@temp
   949  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   950                           	global	ser_getch@c
   951  0021                     ser_getch@c:	; 1 bytes @ 0x1
   952                           	global	ser_putch@c
   953  0021                     ser_putch@c:	; 1 bytes @ 0x1
   954  0021                     	ds	1
   955                           	global	??_adc_read
   956  0022                     ??_adc_read:	; 0 bytes @ 0x2
   957                           	global	??_robo_init
   958  0022                     ??_robo_init:	; 0 bytes @ 0x2
   959                           	global	??_robot_read
   960  0022                     ??_robot_read:	; 0 bytes @ 0x2
   961                           	global	?_robotTurn
   962  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   963                           	global	?_RobotDrive
   964  0022                     ?_RobotDrive:	; 0 bytes @ 0x2
   965                           	global	lcd_write_control@databyte
   966  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   967                           	global	lcd_write_data@databyte
   968  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   969                           	global	spi_transfer@data
   970  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   971                           	global	RobotDrive@speed
   972  0022                     RobotDrive@speed:	; 2 bytes @ 0x2
   973                           	global	robotTurn@angle
   974  0022                     robotTurn@angle:	; 2 bytes @ 0x2
   975                           	global	___wmul@multiplicand
   976  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   977                           	global	___awmod@dividend
   978  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   979  0022                     	ds	1
   980                           	global	?_rotate
   981  0023                     ?_rotate:	; 0 bytes @ 0x3
   982                           	global	??_lcd_set_cursor
   983  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   984                           	global	??_lcd_init
   985  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   986                           	global	??_init
   987  0023                     ??_init:	; 0 bytes @ 0x3
   988                           	global	lcd_set_cursor@address
   989  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   990                           	global	___ftpack@exp
   991  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
   992                           	global	rotate@numsteps
   993  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   994  0023                     	ds	1
   995                           	global	??_robotTurn
   996  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   997                           	global	??_RobotDrive
   998  0024                     ??_RobotDrive:	; 0 bytes @ 0x4
   999                           	global	??___wmul
  1000  0024                     ??___wmul:	; 0 bytes @ 0x4
  1001                           	global	??___awmod
  1002  0024                     ??___awmod:	; 0 bytes @ 0x4
  1003                           	global	robot_read@readType
  1004  0024                     robot_read@readType:	; 1 bytes @ 0x4
  1005                           	global	___ftpack@sign
  1006  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1007                           	global	adc_read@adc_value
  1008  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1009                           	global	___wmul@product
  1010  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1011  0024                     	ds	1
  1012                           	global	??___ftpack
  1013  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1014                           	global	rotate@direction
  1015  0025                     rotate@direction:	; 1 bytes @ 0x5
  1016                           	global	RobotDrive@speedlowByte
  1017  0025                     RobotDrive@speedlowByte:	; 1 bytes @ 0x5
  1018                           	global	___awmod@counter
  1019  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1020  0025                     	ds	1
  1021                           	global	??_rotate
  1022  0026                     ??_rotate:	; 0 bytes @ 0x6
  1023                           	global	??_adc_read_channel
  1024  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1025                           	global	?_abs
  1026  0026                     ?_abs:	; 2 bytes @ 0x6
  1027                           	global	?___lwdiv
  1028  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1029                           	global	RobotDrive@speedhighByte
  1030  0026                     RobotDrive@speedhighByte:	; 1 bytes @ 0x6
  1031                           	global	___awmod@sign
  1032  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1033                           	global	abs@v
  1034  0026                     abs@v:	; 2 bytes @ 0x6
  1035                           	global	___lwdiv@divisor
  1036  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1037  0026                     	ds	1
  1038                           	global	?_lcd_write_string
  1039  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1040                           	global	adc_read_channel@channel
  1041  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1042                           	global	lcd_write_string@s
  1043  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1044  0027                     	ds	1
  1045                           	global	??_abs
  1046  0028                     ??_abs:	; 0 bytes @ 0x8
  1047                           	global	?_readDistance
  1048  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1049                           	global	?___fttol
  1050  0028                     ?___fttol:	; 4 bytes @ 0x8
  1051                           	global	rotate@i
  1052  0028                     rotate@i:	; 2 bytes @ 0x8
  1053                           	global	___lwdiv@dividend
  1054  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1055                           	global	___fttol@f1
  1056  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1057  0028                     	ds	1
  1058                           	global	??_lcd_write_string
  1059  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1060  0029                     	ds	1
  1061                           	global	??_readDistance
  1062  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1063                           	global	??___lwdiv
  1064  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1065  002A                     	ds	1
  1066                           	global	___lwdiv@quotient
  1067  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1068  002B                     	ds	1
  1069                           	global	??___fttol
  1070  002C                     ??___fttol:	; 0 bytes @ 0xC
  1071                           	global	readDistance@readVal
  1072  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1073  002C                     	ds	1
  1074                           	global	___lwdiv@counter
  1075  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1076  002D                     	ds	1
  1077                           	global	??_ADCconvert
  1078  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1079                           	global	?___lwmod
  1080  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1081                           	global	___lwmod@divisor
  1082  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1083  002E                     	ds	2
  1084                           	global	??_readAvgDistance
  1085  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1086                           	global	___fttol@sign1
  1087  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1088                           	global	readAvgDistance@fullval
  1089  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1090                           	global	___lwmod@dividend
  1091  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1092  0030                     	ds	1
  1093                           	global	___fttol@lval
  1094  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1095  0031                     	ds	1
  1096                           	global	??___lwmod
  1097  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1098                           	global	readAvgDistance@j
  1099  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1100  0032                     	ds	1
  1101                           	global	___lwmod@counter
  1102  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1103  0033                     	ds	1
  1104                           	global	?_sprintf
  1105  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1106                           	global	sprintf@f
  1107  0034                     sprintf@f:	; 1 bytes @ 0x14
  1108                           	global	readAvgDistance@tempIR
  1109  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1110  0034                     	ds	1
  1111                           	global	___fttol@exp1
  1112  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1113  0035                     	ds	1
  1114                           	global	?___awtoft
  1115  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1116                           	global	readAvgDistance@i
  1117  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1118                           	global	___awtoft@c
  1119  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1120  0036                     	ds	3
  1121                           	global	??_sprintf
  1122  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1123                           	global	??___awtoft
  1124  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1125  0039                     	ds	2
  1126                           	global	___awtoft@sign
  1127  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1128  003B                     	ds	1
  1129                           	global	?___ftmul
  1130  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  1131                           	global	sprintf@ap
  1132  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1133                           	global	___ftmul@f1
  1134  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  1135  003C                     	ds	1
  1136                           	global	sprintf@flag
  1137  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1138  003D                     	ds	1
  1139                           	global	sprintf@prec
  1140  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1141  003E                     	ds	1
  1142                           	global	___ftmul@f2
  1143  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  1144                           	global	sprintf@_val
  1145  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1146  003F                     	ds	3
  1147                           	global	??___ftmul
  1148  0042                     ??___ftmul:	; 0 bytes @ 0x22
  1149  0042                     	ds	1
  1150                           	global	sprintf@sp
  1151  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1152  0043                     	ds	1
  1153                           	global	sprintf@c
  1154  0044                     sprintf@c:	; 1 bytes @ 0x24
  1155  0044                     	ds	1
  1156                           	global	??_UpdateDisplay
  1157  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1158  0045                     	ds	1
  1159                           	global	___ftmul@exp
  1160  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  1161  0046                     	ds	1
  1162                           	global	___ftmul@f3_as_product
  1163  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  1164  0047                     	ds	2
  1165                           	global	UpdateDisplay@LCDOutput
  1166  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1167  0049                     	ds	1
  1168                           	global	___ftmul@cntr
  1169  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  1170  004A                     	ds	1
  1171                           	global	___ftmul@sign
  1172  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  1173  004B                     	ds	14
  1174                           	global	??_calibrateIR
  1175  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1176                           	global	?_robotTurnSpeed
  1177  0059                     ?_robotTurnSpeed:	; 0 bytes @ 0x39
  1178                           	global	?_robotMoveSpeed
  1179  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1180                           	global	??_ChargeMode
  1181  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1182                           	global	?_scan360
  1183  0059                     ?_scan360:	; 2 bytes @ 0x39
  1184                           	global	robotMoveSpeed@distance
  1185  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1186                           	global	robotTurnSpeed@angle
  1187  0059                     robotTurnSpeed@angle:	; 2 bytes @ 0x39
  1188  0059                     	ds	2
  1189                           	global	??_scan360
  1190  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1191                           	global	scan360@lowestVal
  1192  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1193                           	global	robotMoveSpeed@speed
  1194  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1195                           	global	robotTurnSpeed@speed
  1196  005B                     robotTurnSpeed@speed:	; 2 bytes @ 0x3B
  1197  005B                     	ds	2
  1198                           	global	??_robotTurnSpeed
  1199  005D                     ??_robotTurnSpeed:	; 0 bytes @ 0x3D
  1200                           	global	??_robotMoveSpeed
  1201  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1202                           	global	scan360@lowestSteps
  1203  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1204  005D                     	ds	2
  1205                           	global	scan360@steps
  1206  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1207  005F                     	ds	1
  1208                           	global	robotMoveSpeed@temp1
  1209  0060                     robotMoveSpeed@temp1:	; 2 bytes @ 0x40
  1210                           	global	robotTurnSpeed@temp1
  1211  0060                     robotTurnSpeed@temp1:	; 2 bytes @ 0x40
  1212  0060                     	ds	2
  1213                           	global	??_main
  1214  0062                     ??_main:	; 0 bytes @ 0x42
  1215  0062                     	ds	3
  1216                           	global	main@direction1
  1217  0065                     main@direction1:	; 2 bytes @ 0x45
  1218  0065                     	ds	2
  1219                           	global	main@RT2A
  1220  0067                     main@RT2A:	; 2 bytes @ 0x47
  1221  0067                     	ds	2
  1222                           	global	main@shortwall
  1223  0069                     main@shortwall:	; 2 bytes @ 0x49
  1224  0069                     	ds	2
  1225                           	global	main@choice
  1226  006B                     main@choice:	; 1 bytes @ 0x4B
  1227  006B                     	ds	1
  1228                           	global	main@shortwall_3021
  1229  006C                     main@shortwall_3021:	; 2 bytes @ 0x4C
  1230  006C                     	ds	2
  1231                           	global	main@RT2P
  1232  006E                     main@RT2P:	; 2 bytes @ 0x4E
  1233  006E                     	ds	2
  1234 ;;Data sizes: Strings 147, constant 10, data 13, bss 92, persistent 0 stack 0
  1235 ;;Auto spaces:   Size  Autos    Used
  1236 ;; COMMON          14     11      14
  1237 ;; BANK0           80     80      80
  1238 ;; BANK1           80      0      72
  1239 ;; BANK3           96      0      32
  1240 ;; BANK2           96      0       0
  1241                           
  1242 ;;
  1243 ;; Pointer list with targets:
  1244                           
  1245 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1246 ;;
  1247 ;; ?___ftpack	float  size(1) Largest target is 2
  1248 ;;		 -> main@RT2P(BANK0[2]), 
  1249 ;;
  1250 ;; ?_abs	int  size(1) Largest target is 0
  1251 ;;
  1252 ;; ?___awmod	int  size(1) Largest target is 0
  1253 ;;
  1254 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1255 ;;
  1256 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1257 ;;
  1258 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1259 ;;
  1260 ;; ?_scan360	int  size(1) Largest target is 0
  1261 ;;
  1262 ;; ?___fttol	long  size(1) Largest target is 0
  1263 ;;
  1264 ;; ?___ftmul	float  size(1) Largest target is 0
  1265 ;;
  1266 ;; ?___awtoft	float  size(1) Largest target is 0
  1267 ;;
  1268 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1269 ;;
  1270 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1271 ;;
  1272 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1273 ;;		 -> STR_13(CODE[13]), 
  1274 ;;
  1275 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1276 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1277 ;;
  1278 ;; ?_sprintf	int  size(1) Largest target is 0
  1279 ;;
  1280 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1281 ;;		 -> ?_sprintf(BANK0[2]), 
  1282 ;;
  1283 ;; S8192$_cp	PTR const unsigned char  size(1) Largest target is 0
  1284 ;;
  1285 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1286 ;;
  1287 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1288 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1289 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1290 ;;
  1291 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1292 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1293 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1294 ;;
  1295 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1296 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1297 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), 
  1298 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1299 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1300 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1301 ;;
  1302                           
  1303                           
  1304 ;;
  1305 ;; Critical Paths under _main in COMMON
  1306 ;;
  1307 ;;   None.
  1308 ;;
  1309 ;; Critical Paths under _isr1 in COMMON
  1310 ;;
  1311 ;;   _isr1->i1___lwmod
  1312 ;;   _ReadButtons->_Debounce
  1313 ;;
  1314 ;; Critical Paths under _main in BANK0
  1315 ;;
  1316 ;;   _main->_robotTurnSpeed
  1317 ;;   _main->_robotMoveSpeed
  1318 ;;   _ChargeMode->_UpdateDisplay
  1319 ;;   _robotMoveSpeed->_UpdateDisplay
  1320 ;;   _robotTurnSpeed->_UpdateDisplay
  1321 ;;   _scan360->_UpdateDisplay
  1322 ;;   _calibrateIR->_UpdateDisplay
  1323 ;;   _UpdateDisplay->_sprintf
  1324 ;;   _readAvgDistance->_ADCconvert
  1325 ;;   _readDistance->_adc_read_channel
  1326 ;;   _robot_read->_ser_putch
  1327 ;;   _robot_read->_ser_getch
  1328 ;;   _lcd_init->_lcd_write_control
  1329 ;;   _lcd_write_string->___awmod
  1330 ;;   _lcd_set_cursor->_lcd_write_control
  1331 ;;   ___awtoft->___fttol
  1332 ;;   ___ftmul->___awtoft
  1333 ;;   _abs->___wmul
  1334 ;;   _RobotDrive->_ser_putch
  1335 ;;   _sprintf->___lwmod
  1336 ;;   _ADCconvert->___lwdiv
  1337 ;;   _robotTurn->_ser_putch
  1338 ;;   _rotate->_spi_transfer
  1339 ;;   _robo_init->_ser_putch
  1340 ;;   _adc_read_channel->_adc_read
  1341 ;;   ___fttol->___ftpack
  1342 ;;   ___lwmod->___lwdiv
  1343 ;;   ___lwdiv->___wmul
  1344 ;;
  1345 ;; Critical Paths under _isr1 in BANK0
  1346 ;;
  1347 ;;   None.
  1348 ;;
  1349 ;; Critical Paths under _main in BANK1
  1350 ;;
  1351 ;;   None.
  1352 ;;
  1353 ;; Critical Paths under _isr1 in BANK1
  1354 ;;
  1355 ;;   None.
  1356 ;;
  1357 ;; Critical Paths under _main in BANK3
  1358 ;;
  1359 ;;   None.
  1360 ;;
  1361 ;; Critical Paths under _isr1 in BANK3
  1362 ;;
  1363 ;;   None.
  1364 ;;
  1365 ;; Critical Paths under _main in BANK2
  1366 ;;
  1367 ;;   None.
  1368 ;;
  1369 ;; Critical Paths under _isr1 in BANK2
  1370 ;;
  1371 ;;   None.
  1372                           
  1373 ;;
  1374 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1375 ;;
  1376                           
  1377 ;;
  1378 ;;Call Graph Tables:
  1379 ;;
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; (0) _main                                                14    14      0   12155
  1384 ;;                                             66 BANK0     14    14      0
  1385 ;;                               _init
  1386 ;;                         _robot_read
  1387 ;;                    _readAvgDistance
  1388 ;;                      _UpdateDisplay
  1389 ;;                               _Menu
  1390 ;;                        _calibrateIR
  1391 ;;                            _scan360
  1392 ;;                             _rotate
  1393 ;;                     _robotTurnSpeed
  1394 ;;                           ___awtoft
  1395 ;;                            ___ftmul
  1396 ;;                            ___fttol
  1397 ;;                          _robotTurn
  1398 ;;                     _robotMoveSpeed
  1399 ;;                         _ChargeMode
  1400 ;; ---------------------------------------------------------------------------------
  1401 ;; (1) _ChargeMode                                           1     1      0    1305
  1402 ;;                                             57 BANK0      1     1      0
  1403 ;;                          _ser_putch
  1404 ;;                      _UpdateDisplay
  1405 ;; ---------------------------------------------------------------------------------
  1406 ;; (1) _robotMoveSpeed                                       9     5      4    1777
  1407 ;;                                             57 BANK0      9     5      4
  1408 ;;                         _RobotDrive
  1409 ;;                         _robot_read
  1410 ;;                      _UpdateDisplay
  1411 ;;                                _abs
  1412 ;; ---------------------------------------------------------------------------------
  1413 ;; (1) _robotTurnSpeed                                       9     5      4    1710
  1414 ;;                                             57 BANK0      9     5      4
  1415 ;;                          _robotTurn
  1416 ;;                         _robot_read
  1417 ;;                      _UpdateDisplay
  1418 ;;                                _abs
  1419 ;; ---------------------------------------------------------------------------------
  1420 ;; (1) _scan360                                              8     6      2    2122
  1421 ;;                                             57 BANK0      8     6      2
  1422 ;;                    _readAvgDistance
  1423 ;;                             _rotate
  1424 ;;                      _UpdateDisplay
  1425 ;; ---------------------------------------------------------------------------------
  1426 ;; (1) _calibrateIR                                          0     0      0    1381
  1427 ;;                             _rotate
  1428 ;;                      _UpdateDisplay
  1429 ;; ---------------------------------------------------------------------------------
  1430 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1431 ;;                                             37 BANK0     20    20      0
  1432 ;;                  _lcd_write_control
  1433 ;;                            _sprintf
  1434 ;;                     _lcd_set_cursor
  1435 ;;                   _lcd_write_string
  1436 ;;                            ___awmod
  1437 ;; ---------------------------------------------------------------------------------
  1438 ;; (2) _readAvgDistance                                      8     8      0     625
  1439 ;;                                             16 BANK0      8     8      0
  1440 ;;                       _readDistance
  1441 ;;                            ___lwdiv
  1442 ;;                         _ADCconvert
  1443 ;; ---------------------------------------------------------------------------------
  1444 ;; (1) _init                                                 1     1      0      44
  1445 ;;                                              3 BANK0      1     1      0
  1446 ;;                           _ser_init
  1447 ;;                           _init_adc
  1448 ;;                           _lcd_init
  1449 ;;                          _robo_init
  1450 ;; ---------------------------------------------------------------------------------
  1451 ;; (3) _readDistance                                         6     4      2      69
  1452 ;;                                              8 BANK0      6     4      2
  1453 ;;                   _adc_read_channel
  1454 ;; ---------------------------------------------------------------------------------
  1455 ;; (2) _robot_read                                           3     3      0     111
  1456 ;;                                              2 BANK0      3     3      0
  1457 ;;                          _ser_putch
  1458 ;;                          _ser_getch
  1459 ;; ---------------------------------------------------------------------------------
  1460 ;; (2) _lcd_init                                             0     0      0      22
  1461 ;;                  _lcd_write_control
  1462 ;; ---------------------------------------------------------------------------------
  1463 ;; (3) _lcd_write_string                                     2     0      2      67
  1464 ;;                                              7 BANK0      2     0      2
  1465 ;;                     _lcd_write_data
  1466 ;;                            ___awmod (ARG)
  1467 ;; ---------------------------------------------------------------------------------
  1468 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1469 ;;                                              3 BANK0      1     1      0
  1470 ;;                  _lcd_write_control
  1471 ;; ---------------------------------------------------------------------------------
  1472 ;; (1) ___awtoft                                             6     3      3     300
  1473 ;;                                             22 BANK0      6     3      3
  1474 ;;                           ___ftpack
  1475 ;;                            ___fttol (ARG)
  1476 ;; ---------------------------------------------------------------------------------
  1477 ;; (1) ___ftmul                                             16    10      6     535
  1478 ;;                                             28 BANK0     16    10      6
  1479 ;;                           ___ftpack
  1480 ;;                           ___awtoft (ARG)
  1481 ;;                            ___fttol (ARG)
  1482 ;; ---------------------------------------------------------------------------------
  1483 ;; (2) _abs                                                  4     2      2     158
  1484 ;;                                              6 BANK0      4     2      2
  1485 ;;                             ___wmul
  1486 ;; ---------------------------------------------------------------------------------
  1487 ;; (2) _RobotDrive                                           5     3      2     112
  1488 ;;                                              2 BANK0      5     3      2
  1489 ;;                          _ser_putch
  1490 ;; ---------------------------------------------------------------------------------
  1491 ;; (3) _ser_getch                                            2     2      0      23
  1492 ;;                                              0 BANK0      2     2      0
  1493 ;;                           _ser_isrx
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (3) _sprintf                                             17    12      5     798
  1496 ;;                                             20 BANK0     17    12      5
  1497 ;;                            ___lwdiv
  1498 ;;                            ___lwmod
  1499 ;; ---------------------------------------------------------------------------------
  1500 ;; (3) _ADCconvert                                           2     2      0     254
  1501 ;;                                             14 BANK0      2     2      0
  1502 ;;                             ___wmul
  1503 ;;                            ___lwdiv
  1504 ;; ---------------------------------------------------------------------------------
  1505 ;; (1) _robotTurn                                            2     0      2      66
  1506 ;;                                              2 BANK0      2     0      2
  1507 ;;                          _ser_putch
  1508 ;; ---------------------------------------------------------------------------------
  1509 ;; (1) _rotate                                               7     4      3      98
  1510 ;;                                              3 BANK0      7     4      3
  1511 ;;                       _spi_transfer
  1512 ;; ---------------------------------------------------------------------------------
  1513 ;; (2) _robo_init                                            0     0      0      22
  1514 ;;                          _ser_putch
  1515 ;; ---------------------------------------------------------------------------------
  1516 ;; (4) _lcd_write_data                                       3     3      0      22
  1517 ;;                                              0 BANK0      3     3      0
  1518 ;; ---------------------------------------------------------------------------------
  1519 ;; (4) _lcd_write_control                                    3     3      0      22
  1520 ;;                                              0 BANK0      3     3      0
  1521 ;; ---------------------------------------------------------------------------------
  1522 ;; (2) _init_adc                                             1     1      0       0
  1523 ;;                                              0 BANK0      1     1      0
  1524 ;; ---------------------------------------------------------------------------------
  1525 ;; (4) _adc_read_channel                                     2     2      0      46
  1526 ;;                                              6 BANK0      2     2      0
  1527 ;;                           _adc_read
  1528 ;; ---------------------------------------------------------------------------------
  1529 ;; (3) ___awmod                                              7     3      4     296
  1530 ;;                                              0 BANK0      7     3      4
  1531 ;; ---------------------------------------------------------------------------------
  1532 ;; (1) ___fttol                                             14    10      4     252
  1533 ;;                                              8 BANK0     14    10      4
  1534 ;;                           ___ftpack (ARG)
  1535 ;; ---------------------------------------------------------------------------------
  1536 ;; (2) ___ftpack                                             8     3      5     209
  1537 ;;                                              0 BANK0      8     3      5
  1538 ;; ---------------------------------------------------------------------------------
  1539 ;; (4) ___lwmod                                              6     2      4     159
  1540 ;;                                             14 BANK0      6     2      4
  1541 ;;                            ___lwdiv (ARG)
  1542 ;; ---------------------------------------------------------------------------------
  1543 ;; (4) ___lwdiv                                              8     4      4     162
  1544 ;;                                              6 BANK0      8     4      4
  1545 ;;                             ___wmul (ARG)
  1546 ;; ---------------------------------------------------------------------------------
  1547 ;; (3) ___wmul                                               6     2      4      92
  1548 ;;                                              0 BANK0      6     2      4
  1549 ;; ---------------------------------------------------------------------------------
  1550 ;; (4) _ser_isrx                                             0     0      0       0
  1551 ;; ---------------------------------------------------------------------------------
  1552 ;; (2) _spi_transfer                                         3     3      0      30
  1553 ;;                                              0 BANK0      3     3      0
  1554 ;; ---------------------------------------------------------------------------------
  1555 ;; (2) _ser_putch                                            2     2      0      22
  1556 ;;                                              0 BANK0      2     2      0
  1557 ;; ---------------------------------------------------------------------------------
  1558 ;; (1) _Menu                                                 1     1      0      22
  1559 ;;                                              0 BANK0      1     1      0
  1560 ;; ---------------------------------------------------------------------------------
  1561 ;; (2) _ser_init                                             1     1      0       0
  1562 ;;                                              0 BANK0      1     1      0
  1563 ;; ---------------------------------------------------------------------------------
  1564 ;; (5) _adc_read                                             6     4      2      24
  1565 ;;                                              0 BANK0      6     4      2
  1566 ;; ---------------------------------------------------------------------------------
  1567 ;; Estimated maximum stack depth 5
  1568 ;; ---------------------------------------------------------------------------------
  1569 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1570 ;; ---------------------------------------------------------------------------------
  1571 ;; (6) _isr1                                                 5     5      0     521
  1572 ;;                                              6 COMMON     5     5      0
  1573 ;;                          i1___lwmod
  1574 ;;                        _ReadButtons
  1575 ;; ---------------------------------------------------------------------------------
  1576 ;; (7) _ReadButtons                                          0     0      0       0
  1577 ;;                           _Debounce
  1578 ;; ---------------------------------------------------------------------------------
  1579 ;; (7) i1___lwmod                                            6     2      4     521
  1580 ;;                                              0 COMMON     6     2      4
  1581 ;; ---------------------------------------------------------------------------------
  1582 ;; (8) _Debounce                                             1     1      0       0
  1583 ;;                                              0 COMMON     1     1      0
  1584 ;; ---------------------------------------------------------------------------------
  1585 ;; Estimated maximum stack depth 8
  1586 ;; ---------------------------------------------------------------------------------
  1587                           
  1588 ;; Call Graph Graphs:
  1589                           
  1590 ;; _main (ROOT)
  1591 ;;   _init
  1592 ;;     _ser_init
  1593 ;;     _init_adc
  1594 ;;     _lcd_init
  1595 ;;       _lcd_write_control
  1596 ;;     _robo_init
  1597 ;;       _ser_putch
  1598 ;;   _robot_read
  1599 ;;     _ser_putch
  1600 ;;     _ser_getch
  1601 ;;       _ser_isrx
  1602 ;;   _readAvgDistance
  1603 ;;     _readDistance
  1604 ;;       _adc_read_channel
  1605 ;;         _adc_read
  1606 ;;     ___lwdiv
  1607 ;;       ___wmul (ARG)
  1608 ;;     _ADCconvert
  1609 ;;       ___wmul
  1610 ;;       ___lwdiv
  1611 ;;         ___wmul (ARG)
  1612 ;;   _UpdateDisplay
  1613 ;;     _lcd_write_control
  1614 ;;     _sprintf
  1615 ;;       ___lwdiv
  1616 ;;         ___wmul (ARG)
  1617 ;;       ___lwmod
  1618 ;;         ___lwdiv (ARG)
  1619 ;;           ___wmul (ARG)
  1620 ;;     _lcd_set_cursor
  1621 ;;       _lcd_write_control
  1622 ;;     _lcd_write_string
  1623 ;;       _lcd_write_data
  1624 ;;       ___awmod (ARG)
  1625 ;;     ___awmod
  1626 ;;   _Menu
  1627 ;;   _calibrateIR
  1628 ;;     _rotate
  1629 ;;       _spi_transfer
  1630 ;;     _UpdateDisplay
  1631 ;;       _lcd_write_control
  1632 ;;       _sprintf
  1633 ;;         ___lwdiv
  1634 ;;           ___wmul (ARG)
  1635 ;;         ___lwmod
  1636 ;;           ___lwdiv (ARG)
  1637 ;;             ___wmul (ARG)
  1638 ;;       _lcd_set_cursor
  1639 ;;         _lcd_write_control
  1640 ;;       _lcd_write_string
  1641 ;;         _lcd_write_data
  1642 ;;         ___awmod (ARG)
  1643 ;;       ___awmod
  1644 ;;   _scan360
  1645 ;;     _readAvgDistance
  1646 ;;       _readDistance
  1647 ;;         _adc_read_channel
  1648 ;;           _adc_read
  1649 ;;       ___lwdiv
  1650 ;;         ___wmul (ARG)
  1651 ;;       _ADCconvert
  1652 ;;         ___wmul
  1653 ;;         ___lwdiv
  1654 ;;           ___wmul (ARG)
  1655 ;;     _rotate
  1656 ;;       _spi_transfer
  1657 ;;     _UpdateDisplay
  1658 ;;       _lcd_write_control
  1659 ;;       _sprintf
  1660 ;;         ___lwdiv
  1661 ;;           ___wmul (ARG)
  1662 ;;         ___lwmod
  1663 ;;           ___lwdiv (ARG)
  1664 ;;             ___wmul (ARG)
  1665 ;;       _lcd_set_cursor
  1666 ;;         _lcd_write_control
  1667 ;;       _lcd_write_string
  1668 ;;         _lcd_write_data
  1669 ;;         ___awmod (ARG)
  1670 ;;       ___awmod
  1671 ;;   _rotate
  1672 ;;     _spi_transfer
  1673 ;;   _robotTurnSpeed
  1674 ;;     _robotTurn
  1675 ;;       _ser_putch
  1676 ;;     _robot_read
  1677 ;;       _ser_putch
  1678 ;;       _ser_getch
  1679 ;;         _ser_isrx
  1680 ;;     _UpdateDisplay
  1681 ;;       _lcd_write_control
  1682 ;;       _sprintf
  1683 ;;         ___lwdiv
  1684 ;;           ___wmul (ARG)
  1685 ;;         ___lwmod
  1686 ;;           ___lwdiv (ARG)
  1687 ;;             ___wmul (ARG)
  1688 ;;       _lcd_set_cursor
  1689 ;;         _lcd_write_control
  1690 ;;       _lcd_write_string
  1691 ;;         _lcd_write_data
  1692 ;;         ___awmod (ARG)
  1693 ;;       ___awmod
  1694 ;;     _abs
  1695 ;;       ___wmul
  1696 ;;   ___awtoft
  1697 ;;     ___ftpack
  1698 ;;     ___fttol (ARG)
  1699 ;;       ___ftpack (ARG)
  1700 ;;   ___ftmul
  1701 ;;     ___ftpack
  1702 ;;     ___awtoft (ARG)
  1703 ;;       ___ftpack
  1704 ;;       ___fttol (ARG)
  1705 ;;         ___ftpack (ARG)
  1706 ;;     ___fttol (ARG)
  1707 ;;       ___ftpack (ARG)
  1708 ;;   ___fttol
  1709 ;;     ___ftpack (ARG)
  1710 ;;   _robotTurn
  1711 ;;     _ser_putch
  1712 ;;   _robotMoveSpeed
  1713 ;;     _RobotDrive
  1714 ;;       _ser_putch
  1715 ;;     _robot_read
  1716 ;;       _ser_putch
  1717 ;;       _ser_getch
  1718 ;;         _ser_isrx
  1719 ;;     _UpdateDisplay
  1720 ;;       _lcd_write_control
  1721 ;;       _sprintf
  1722 ;;         ___lwdiv
  1723 ;;           ___wmul (ARG)
  1724 ;;         ___lwmod
  1725 ;;           ___lwdiv (ARG)
  1726 ;;             ___wmul (ARG)
  1727 ;;       _lcd_set_cursor
  1728 ;;         _lcd_write_control
  1729 ;;       _lcd_write_string
  1730 ;;         _lcd_write_data
  1731 ;;         ___awmod (ARG)
  1732 ;;       ___awmod
  1733 ;;     _abs
  1734 ;;       ___wmul
  1735 ;;   _ChargeMode
  1736 ;;     _ser_putch
  1737 ;;     _UpdateDisplay
  1738 ;;       _lcd_write_control
  1739 ;;       _sprintf
  1740 ;;         ___lwdiv
  1741 ;;           ___wmul (ARG)
  1742 ;;         ___lwmod
  1743 ;;           ___lwdiv (ARG)
  1744 ;;             ___wmul (ARG)
  1745 ;;       _lcd_set_cursor
  1746 ;;         _lcd_write_control
  1747 ;;       _lcd_write_string
  1748 ;;         _lcd_write_data
  1749 ;;         ___awmod (ARG)
  1750 ;;       ___awmod
  1751 ;;
  1752 ;; _isr1 (ROOT)
  1753 ;;   i1___lwmod
  1754 ;;   _ReadButtons
  1755 ;;     _Debounce
  1756 ;;
  1757                           
  1758 ;; Address spaces:
  1759                           
  1760 ;;Name               Size   Autos  Total    Cost      Usage
  1761 ;;BANK3               60      0      20       9       33.3%
  1762 ;;BITBANK3            60      0       0       8        0.0%
  1763 ;;SFR3                 0      0       0       4        0.0%
  1764 ;;BITSFR3              0      0       0       4        0.0%
  1765 ;;BANK2               60      0       0      11        0.0%
  1766 ;;BITBANK2            60      0       0      10        0.0%
  1767 ;;SFR2                 0      0       0       5        0.0%
  1768 ;;BITSFR2              0      0       0       5        0.0%
  1769 ;;SFR1                 0      0       0       2        0.0%
  1770 ;;BITSFR1              0      0       0       2        0.0%
  1771 ;;BANK1               50      0      48       7       90.0%
  1772 ;;BITBANK1            50      0       0       6        0.0%
  1773 ;;CODE                 0      0       0       0        0.0%
  1774 ;;DATA                 0      0      D1      12        0.0%
  1775 ;;ABS                  0      0      C6       3        0.0%
  1776 ;;NULL                 0      0       0       0        0.0%
  1777 ;;STACK                0      0       B       2        0.0%
  1778 ;;BANK0               50     50      50       5      100.0%
  1779 ;;BITBANK0            50      0       0       4        0.0%
  1780 ;;SFR0                 0      0       0       1        0.0%
  1781 ;;BITSFR0              0      0       0       1        0.0%
  1782 ;;COMMON               E      B       E       1      100.0%
  1783 ;;BITCOMMON            E      0       2       0       14.3%
  1784 ;;EEDATA             100      0       0       0        0.0%
  1785                           
  1786                           	global	_main
  1787                           psect	maintext,global,class=CODE,delta=2
  1788                           global __pmaintext
  1789  0278                     __pmaintext:
  1790                           
  1791 ;; *************** function _main *****************
  1792 ;; Defined at:
  1793 ;;		line 172 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  RT2P            2   78[BANK0 ] int 
  1798 ;;  shortwall       2   76[BANK0 ] int 
  1799 ;;  RT2A            2   71[BANK0 ] int 
  1800 ;;  direction1      2   69[BANK0 ] int 
  1801 ;;  shortwall       2   73[BANK0 ] int 
  1802 ;;  choice          1   75[BANK0 ] unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;		None               void
  1805 ;; Registers used:
  1806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 17F/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         0       0       0       0       0
  1813 ;;      Locals:         0      11       0       0       0
  1814 ;;      Temps:          0       3       0       0       0
  1815 ;;      Totals:         0      14       0       0       0
  1816 ;;Total ram usage:       14 bytes
  1817 ;; Hardware stack levels required when called:    8
  1818 ;; This function calls:
  1819 ;;		_init
  1820 ;;		_robot_read
  1821 ;;		_readAvgDistance
  1822 ;;		_UpdateDisplay
  1823 ;;		_Menu
  1824 ;;		_calibrateIR
  1825 ;;		_scan360
  1826 ;;		_rotate
  1827 ;;		_robotTurnSpeed
  1828 ;;		___awtoft
  1829 ;;		___ftmul
  1830 ;;		___fttol
  1831 ;;		_robotTurn
  1832 ;;		_robotMoveSpeed
  1833 ;;		_ChargeMode
  1834 ;; This function is called by:
  1835 ;;		Startup code after reset
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           psect	maintext
  1839                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1840                           	line	172
  1841                           	global	__size_of_main
  1842  0252                     	__size_of_main	equ	__end_of_main-_main
  1843                           	
  1844  0278                     _main:	
  1845                           	opt	stack 0
  1846                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1847                           	line	173
  1848                           	
  1849  0278                     l11492:	
  1850                           ;Main.c: 173: unsigned char choice = 255;
  1851  0278  30FF               	movlw	(0FFh)
  1852  0279  1283               	bcf	status, 5	;RP0=0, select bank0
  1853  027A  1303               	bcf	status, 6	;RP1=0, select bank0
  1854  027B  00E2               	movwf	(??_main+0)+0
  1855  027C  0862               	movf	(??_main+0)+0,w
  1856  027D  00EB               	movwf	(main@choice)
  1857                           	line	174
  1858                           	
  1859  027E                     l11494:	
  1860                           ;Main.c: 174: int shortwall = 0;
  1861  027E  01E9               	clrf	(main@shortwall)
  1862  027F  01EA               	clrf	(main@shortwall+1)
  1863                           	line	177
  1864                           	
  1865  0280                     l11496:	
  1866                           ;Main.c: 177: init();
  1867  0280  160A  118A  25C1   	fcall	_init
              120A  118A         
  1868  0285  2A86               	goto	l11498
  1869                           	line	180
  1870                           ;Main.c: 180: while(1)
  1871                           	
  1872  0286                     l2228:	
  1873                           	line	182
  1874                           	
  1875  0286                     l11498:	
  1876                           ;Main.c: 181: {
  1877                           ;Main.c: 182: if (RTC_FLAG_250MS == 1)
  1878  0286  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1879  0287  2A89               	goto	u5521
  1880  0288  2A8A               	goto	u5520
  1881  0289                     u5521:
  1882  0289  2A9C               	goto	l11508
  1883  028A                     u5520:
  1884                           	line	184
  1885                           	
  1886  028A                     l11500:	
  1887                           ;Main.c: 183: {
  1888                           ;Main.c: 184: RTC_FLAG_250MS = 0;
  1889  028A  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1890                           	line	185
  1891                           	
  1892  028B                     l11502:	
  1893                           ;Main.c: 185: robot_read(2);
  1894  028B  3002               	movlw	(02h)
  1895  028C  120A  158A  2703   	fcall	_robot_read
              120A  118A         
  1896                           	line	186
  1897                           	
  1898  0291                     l11504:	
  1899                           ;Main.c: 186: readAvgDistance();
  1900  0291  120A  158A  2183   	fcall	_readAvgDistance
              120A  118A         
  1901                           	line	187
  1902                           	
  1903  0296                     l11506:	
  1904                           ;Main.c: 187: UpdateDisplay();
  1905  0296  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  118A         
  1906  029B  2A9C               	goto	l11508
  1907                           	line	188
  1908                           	
  1909  029C                     l2229:	
  1910                           	line	189
  1911                           	
  1912  029C                     l11508:	
  1913                           ;Main.c: 188: }
  1914                           ;Main.c: 189: if (buttonPressed)
  1915  029C  087D               	movf	(_buttonPressed),w	;volatile
  1916  029D  1D03               	skipz
  1917  029E  2AA0               	goto	u5530
  1918  029F  2CA9               	goto	l11596
  1919  02A0                     u5530:
  1920                           	line	192
  1921                           	
  1922  02A0                     l11510:	
  1923                           ;Main.c: 191: {
  1924                           ;Main.c: 192: choice = Menu(buttonPressed);
  1925  02A0  087D               	movf	(_buttonPressed),w	;volatile
  1926  02A1  120A  158A  2002   	fcall	_Menu
              120A  118A         
  1927  02A6  1283               	bcf	status, 5	;RP0=0, select bank0
  1928  02A7  1303               	bcf	status, 6	;RP1=0, select bank0
  1929  02A8  00E2               	movwf	(??_main+0)+0
  1930  02A9  0862               	movf	(??_main+0)+0,w
  1931  02AA  00EB               	movwf	(main@choice)
  1932                           	line	193
  1933                           	
  1934  02AB                     l11512:	
  1935                           ;Main.c: 193: buttonPressed = 0;
  1936  02AB  01FD               	clrf	(_buttonPressed)	;volatile
  1937  02AC  2CA9               	goto	l11596
  1938                           	line	194
  1939                           	
  1940  02AD                     l2230:	
  1941                           	line	198
  1942                           ;Main.c: 194: }
  1943                           ;Main.c: 198: switch (choice)
  1944  02AD  2CA9               	goto	l11596
  1945                           	line	200
  1946                           ;Main.c: 199: {
  1947                           ;Main.c: 200: case 0:
  1948                           	
  1949  02AE                     l2232:	
  1950                           	line	201
  1951                           	
  1952  02AE                     l11514:	
  1953                           ;Main.c: 201: calibrateIR();
  1954  02AE  120A  158A  2049   	fcall	_calibrateIR
              120A  118A         
  1955                           	line	202
  1956                           ;Main.c: 202: break;
  1957  02B3  2CBF               	goto	l11598
  1958                           	line	203
  1959                           ;Main.c: 203: case 1:
  1960                           	
  1961  02B4                     l2234:	
  1962                           	line	204
  1963                           	
  1964  02B4                     l11516:	
  1965                           ;Main.c: 204: shortwall = scan360() - 13;
  1966  02B4  120A  158A  21F9   	fcall	_scan360
              120A  118A         
  1967  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1968  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1969  02BB  0859               	movf	(0+(?_scan360)),w
  1970  02BC  3EF3               	addlw	low(-13)
  1971  02BD  00E9               	movwf	(main@shortwall)
  1972  02BE  085A               	movf	(1+(?_scan360)),w
  1973  02BF  1803               	skipnc
  1974  02C0  3E01               	addlw	1
  1975  02C1  3EFF               	addlw	high(-13)
  1976  02C2  00EA               	movwf	1+(main@shortwall)
  1977                           	line	205
  1978                           	
  1979  02C3                     l11518:	
  1980                           ;Main.c: 205: rotate((200 - shortwall), 0);
  1981  02C3  0969               	comf	(main@shortwall),w
  1982  02C4  00E2               	movwf	(??_main+0)+0
  1983  02C5  096A               	comf	(main@shortwall+1),w
  1984  02C6  00E3               	movwf	((??_main+0)+0+1)
  1985  02C7  0AE2               	incf	(??_main+0)+0,f
  1986  02C8  1903               	skipnz
  1987  02C9  0AE3               	incf	((??_main+0)+0+1),f
  1988  02CA  0862               	movf	0+(??_main+0)+0,w
  1989  02CB  3EC8               	addlw	low(0C8h)
  1990  02CC  00A3               	movwf	(?_rotate)
  1991  02CD  0863               	movf	1+(??_main+0)+0,w
  1992  02CE  1803               	skipnc
  1993  02CF  3E01               	addlw	1
  1994  02D0  3E00               	addlw	high(0C8h)
  1995  02D1  00A4               	movwf	1+(?_rotate)
  1996  02D2  01A5               	clrf	0+(?_rotate)+02h
  1997  02D3  160A  118A  27B0   	fcall	_rotate
              120A  118A         
  1998                           	line	206
  1999                           ;Main.c: 206: break;
  2000  02D8  2CBF               	goto	l11598
  2001                           	line	207
  2002                           ;Main.c: 207: case 2:
  2003                           	
  2004  02D9                     l2235:	
  2005                           	line	208
  2006                           	
  2007  02D9                     l11520:	
  2008                           ;Main.c: 208: robotTurnSpeed(-90, 1);
  2009  02D9  30A6               	movlw	low(-90)
  2010  02DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2011  02DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2012  02DC  00D9               	movwf	(?_robotTurnSpeed)
  2013  02DD  30FF               	movlw	high(-90)
  2014  02DE  00DA               	movwf	((?_robotTurnSpeed))+1
  2015  02DF  3001               	movlw	low(01h)
  2016  02E0  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2017  02E1  3000               	movlw	high(01h)
  2018  02E2  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2019  02E3  120A  158A  2388   	fcall	_robotTurnSpeed
              120A  118A         
  2020                           	line	209
  2021                           ;Main.c: 209: break;
  2022  02E8  2CBF               	goto	l11598
  2023                           	line	210
  2024                           ;Main.c: 210: case 3:
  2025                           	
  2026  02E9                     l2236:	
  2027                           	line	211
  2028                           	
  2029  02E9                     l11522:	
  2030                           ;Main.c: 211: robotTurnSpeed(90, 1);
  2031  02E9  305A               	movlw	low(05Ah)
  2032  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2033  02EB  1303               	bcf	status, 6	;RP1=0, select bank0
  2034  02EC  00D9               	movwf	(?_robotTurnSpeed)
  2035  02ED  3000               	movlw	high(05Ah)
  2036  02EE  00DA               	movwf	((?_robotTurnSpeed))+1
  2037  02EF  3001               	movlw	low(01h)
  2038  02F0  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2039  02F1  3000               	movlw	high(01h)
  2040  02F2  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2041  02F3  120A  158A  2388   	fcall	_robotTurnSpeed
              120A  118A         
  2042                           	line	212
  2043                           ;Main.c: 212: break;
  2044  02F8  2CBF               	goto	l11598
  2045                           	line	213
  2046                           ;Main.c: 213: case 4:
  2047                           	
  2048  02F9                     l2237:	
  2049                           	line	214
  2050                           	
  2051  02F9                     l11524:	
  2052                           ;Main.c: 214: TotalDistTravelled = 0;
  2053  02F9  1683               	bsf	status, 5	;RP0=1, select bank1
  2054  02FA  1303               	bcf	status, 6	;RP1=0, select bank1
  2055  02FB  01B4               	clrf	(_TotalDistTravelled)^080h
  2056  02FC  01B5               	clrf	(_TotalDistTravelled+1)^080h
  2057                           	line	215
  2058                           ;Main.c: 215: while(!ROBOTerror)
  2059  02FD  2C99               	goto	l11590
  2060                           	
  2061  02FE                     l2239:	
  2062                           	line	217
  2063                           	
  2064  02FE                     l11526:	
  2065                           ;Main.c: 216: {
  2066                           ;Main.c: 217: int shortwall = scan360();
  2067  02FE  120A  158A  21F9   	fcall	_scan360
              120A  118A         
  2068  0303  1283               	bcf	status, 5	;RP0=0, select bank0
  2069  0304  1303               	bcf	status, 6	;RP1=0, select bank0
  2070  0305  085A               	movf	(1+(?_scan360)),w
  2071  0306  01ED               	clrf	(main@shortwall_3021+1)
  2072  0307  07ED               	addwf	(main@shortwall_3021+1)
  2073  0308  0859               	movf	(0+(?_scan360)),w
  2074  0309  01EC               	clrf	(main@shortwall_3021)
  2075  030A  07EC               	addwf	(main@shortwall_3021)
  2076                           
  2077                           	line	218
  2078                           	
  2079  030B                     l11528:	
  2080                           ;Main.c: 218: int RT2P = 0;
  2081  030B  01EE               	clrf	(main@RT2P)
  2082  030C  01EF               	clrf	(main@RT2P+1)
  2083                           	line	219
  2084                           	
  2085  030D                     l11530:	
  2086                           ;Main.c: 219: int direction1 = 0;
  2087  030D  01E5               	clrf	(main@direction1)
  2088  030E  01E6               	clrf	(main@direction1+1)
  2089                           	line	220
  2090                           	
  2091  030F                     l11532:	
  2092                           ;Main.c: 220: if (shortwall > 200)
  2093  030F  086D               	movf	(main@shortwall_3021+1),w
  2094  0310  3A80               	xorlw	80h
  2095  0311  00FF               	movwf	btemp+1
  2096  0312  3080               	movlw	(high(0C9h))^80h
  2097  0313  027F               	subwf	btemp+1,w
  2098  0314  1D03               	skipz
  2099  0315  2B18               	goto	u5545
  2100  0316  30C9               	movlw	low(0C9h)
  2101  0317  026C               	subwf	(main@shortwall_3021),w
  2102  0318                     u5545:
  2103                           
  2104  0318  1C03               	skipc
  2105  0319  2B1B               	goto	u5541
  2106  031A  2B1C               	goto	u5540
  2107  031B                     u5541:
  2108  031B  2B27               	goto	l11536
  2109  031C                     u5540:
  2110                           	line	221
  2111                           	
  2112  031C                     l11534:	
  2113                           ;Main.c: 221: RT2P = shortwall + 100;
  2114  031C  1283               	bcf	status, 5	;RP0=0, select bank0
  2115  031D  1303               	bcf	status, 6	;RP1=0, select bank0
  2116  031E  086C               	movf	(main@shortwall_3021),w
  2117  031F  3E64               	addlw	low(064h)
  2118  0320  00EE               	movwf	(main@RT2P)
  2119  0321  086D               	movf	(main@shortwall_3021+1),w
  2120  0322  1803               	skipnc
  2121  0323  3E01               	addlw	1
  2122  0324  3E00               	addlw	high(064h)
  2123  0325  00EF               	movwf	1+(main@RT2P)
  2124  0326  2B27               	goto	l11536
  2125                           	
  2126  0327                     l2240:	
  2127                           	line	222
  2128                           	
  2129  0327                     l11536:	
  2130                           ;Main.c: 222: if (shortwall < 200)
  2131  0327  1283               	bcf	status, 5	;RP0=0, select bank0
  2132  0328  1303               	bcf	status, 6	;RP1=0, select bank0
  2133  0329  086D               	movf	(main@shortwall_3021+1),w
  2134  032A  3A80               	xorlw	80h
  2135  032B  00FF               	movwf	btemp+1
  2136  032C  3080               	movlw	(high(0C8h))^80h
  2137  032D  027F               	subwf	btemp+1,w
  2138  032E  1D03               	skipz
  2139  032F  2B32               	goto	u5555
  2140  0330  30C8               	movlw	low(0C8h)
  2141  0331  026C               	subwf	(main@shortwall_3021),w
  2142  0332                     u5555:
  2143                           
  2144  0332  1803               	skipnc
  2145  0333  2B35               	goto	u5551
  2146  0334  2B36               	goto	u5550
  2147  0335                     u5551:
  2148  0335  2B41               	goto	l11540
  2149  0336                     u5550:
  2150                           	line	223
  2151                           	
  2152  0336                     l11538:	
  2153                           ;Main.c: 223: RT2P = shortwall - 100;
  2154  0336  1283               	bcf	status, 5	;RP0=0, select bank0
  2155  0337  1303               	bcf	status, 6	;RP1=0, select bank0
  2156  0338  086C               	movf	(main@shortwall_3021),w
  2157  0339  3E9C               	addlw	low(-100)
  2158  033A  00EE               	movwf	(main@RT2P)
  2159  033B  086D               	movf	(main@shortwall_3021+1),w
  2160  033C  1803               	skipnc
  2161  033D  3E01               	addlw	1
  2162  033E  3EFF               	addlw	high(-100)
  2163  033F  00EF               	movwf	1+(main@RT2P)
  2164  0340  2B41               	goto	l11540
  2165                           	
  2166  0341                     l2241:	
  2167                           	line	225
  2168                           	
  2169  0341                     l11540:	
  2170                           ;Main.c: 225: if (RT2P >= 400 && RT2P < 500 )
  2171  0341  1283               	bcf	status, 5	;RP0=0, select bank0
  2172  0342  1303               	bcf	status, 6	;RP1=0, select bank0
  2173  0343  086F               	movf	(main@RT2P+1),w
  2174  0344  3A80               	xorlw	80h
  2175  0345  00FF               	movwf	btemp+1
  2176  0346  3081               	movlw	(high(0190h))^80h
  2177  0347  027F               	subwf	btemp+1,w
  2178  0348  1D03               	skipz
  2179  0349  2B4C               	goto	u5565
  2180  034A  3090               	movlw	low(0190h)
  2181  034B  026E               	subwf	(main@RT2P),w
  2182  034C                     u5565:
  2183                           
  2184  034C  1C03               	skipc
  2185  034D  2B4F               	goto	u5561
  2186  034E  2B50               	goto	u5560
  2187  034F                     u5561:
  2188  034F  2B6E               	goto	l11548
  2189  0350                     u5560:
  2190                           	
  2191  0350                     l11542:	
  2192  0350  1283               	bcf	status, 5	;RP0=0, select bank0
  2193  0351  1303               	bcf	status, 6	;RP1=0, select bank0
  2194  0352  086F               	movf	(main@RT2P+1),w
  2195  0353  3A80               	xorlw	80h
  2196  0354  00FF               	movwf	btemp+1
  2197  0355  3081               	movlw	(high(01F4h))^80h
  2198  0356  027F               	subwf	btemp+1,w
  2199  0357  1D03               	skipz
  2200  0358  2B5B               	goto	u5575
  2201  0359  30F4               	movlw	low(01F4h)
  2202  035A  026E               	subwf	(main@RT2P),w
  2203  035B                     u5575:
  2204                           
  2205  035B  1803               	skipnc
  2206  035C  2B5E               	goto	u5571
  2207  035D  2B5F               	goto	u5570
  2208  035E                     u5571:
  2209  035E  2B6E               	goto	l11548
  2210  035F                     u5570:
  2211                           	line	227
  2212                           	
  2213  035F                     l11544:	
  2214                           ;Main.c: 226: {
  2215                           ;Main.c: 227: RT2P = RT2P - 400;
  2216  035F  1283               	bcf	status, 5	;RP0=0, select bank0
  2217  0360  1303               	bcf	status, 6	;RP1=0, select bank0
  2218  0361  086E               	movf	(main@RT2P),w
  2219  0362  3E70               	addlw	low(-400)
  2220  0363  00EE               	movwf	(main@RT2P)
  2221  0364  086F               	movf	(main@RT2P+1),w
  2222  0365  1803               	skipnc
  2223  0366  3E01               	addlw	1
  2224  0367  3EFE               	addlw	high(-400)
  2225  0368  00EF               	movwf	1+(main@RT2P)
  2226                           	line	228
  2227                           	
  2228  0369                     l11546:	
  2229                           ;Main.c: 228: direction1 = 1;
  2230  0369  3001               	movlw	low(01h)
  2231  036A  00E5               	movwf	(main@direction1)
  2232  036B  3000               	movlw	high(01h)
  2233  036C  00E6               	movwf	((main@direction1))+1
  2234  036D  2B6E               	goto	l11548
  2235                           	line	229
  2236                           	
  2237  036E                     l2242:	
  2238                           	line	230
  2239                           	
  2240  036E                     l11548:	
  2241                           ;Main.c: 229: }
  2242                           ;Main.c: 230: if (RT2P >= 200 && RT2P < 400)
  2243  036E  1283               	bcf	status, 5	;RP0=0, select bank0
  2244  036F  1303               	bcf	status, 6	;RP1=0, select bank0
  2245  0370  086F               	movf	(main@RT2P+1),w
  2246  0371  3A80               	xorlw	80h
  2247  0372  00FF               	movwf	btemp+1
  2248  0373  3080               	movlw	(high(0C8h))^80h
  2249  0374  027F               	subwf	btemp+1,w
  2250  0375  1D03               	skipz
  2251  0376  2B79               	goto	u5585
  2252  0377  30C8               	movlw	low(0C8h)
  2253  0378  026E               	subwf	(main@RT2P),w
  2254  0379                     u5585:
  2255                           
  2256  0379  1C03               	skipc
  2257  037A  2B7C               	goto	u5581
  2258  037B  2B7D               	goto	u5580
  2259  037C                     u5581:
  2260  037C  2BA5               	goto	l11558
  2261  037D                     u5580:
  2262                           	
  2263  037D                     l11550:	
  2264  037D  1283               	bcf	status, 5	;RP0=0, select bank0
  2265  037E  1303               	bcf	status, 6	;RP1=0, select bank0
  2266  037F  086F               	movf	(main@RT2P+1),w
  2267  0380  3A80               	xorlw	80h
  2268  0381  00FF               	movwf	btemp+1
  2269  0382  3081               	movlw	(high(0190h))^80h
  2270  0383  027F               	subwf	btemp+1,w
  2271  0384  1D03               	skipz
  2272  0385  2B88               	goto	u5595
  2273  0386  3090               	movlw	low(0190h)
  2274  0387  026E               	subwf	(main@RT2P),w
  2275  0388                     u5595:
  2276                           
  2277  0388  1803               	skipnc
  2278  0389  2B8B               	goto	u5591
  2279  038A  2B8C               	goto	u5590
  2280  038B                     u5591:
  2281  038B  2BA5               	goto	l11558
  2282  038C                     u5590:
  2283                           	line	232
  2284                           	
  2285  038C                     l11552:	
  2286                           ;Main.c: 231: {
  2287                           ;Main.c: 232: RT2P = 400 - RT2P;
  2288  038C  1283               	bcf	status, 5	;RP0=0, select bank0
  2289  038D  1303               	bcf	status, 6	;RP1=0, select bank0
  2290  038E  096E               	comf	(main@RT2P),w
  2291  038F  00E2               	movwf	(??_main+0)+0
  2292  0390  096F               	comf	(main@RT2P+1),w
  2293  0391  00E3               	movwf	((??_main+0)+0+1)
  2294  0392  0AE2               	incf	(??_main+0)+0,f
  2295  0393  1903               	skipnz
  2296  0394  0AE3               	incf	((??_main+0)+0+1),f
  2297  0395  0862               	movf	0+(??_main+0)+0,w
  2298  0396  3E90               	addlw	low(0190h)
  2299  0397  00EE               	movwf	(main@RT2P)
  2300  0398  0863               	movf	1+(??_main+0)+0,w
  2301  0399  1803               	skipnc
  2302  039A  3E01               	addlw	1
  2303  039B  3E01               	addlw	high(0190h)
  2304  039C  00EF               	movwf	1+(main@RT2P)
  2305                           	line	233
  2306                           	
  2307  039D                     l11554:	
  2308                           ;Main.c: 233: RT2P = RT2P * -1;
  2309  039D  09EE               	comf	(main@RT2P),f
  2310  039E  09EF               	comf	(main@RT2P+1),f
  2311  039F  0AEE               	incf	(main@RT2P),f
  2312  03A0  1903               	skipnz
  2313  03A1  0AEF               	incf	(main@RT2P+1),f
  2314                           	line	234
  2315                           	
  2316  03A2                     l11556:	
  2317                           ;Main.c: 234: direction1 = 0;
  2318  03A2  01E5               	clrf	(main@direction1)
  2319  03A3  01E6               	clrf	(main@direction1+1)
  2320  03A4  2BA5               	goto	l11558
  2321                           	line	235
  2322                           	
  2323  03A5                     l2243:	
  2324                           	line	236
  2325                           	
  2326  03A5                     l11558:	
  2327                           ;Main.c: 235: }
  2328                           ;Main.c: 236: if (RT2P < 200 && RT2P >= 0)
  2329  03A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2330  03A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2331  03A7  086F               	movf	(main@RT2P+1),w
  2332  03A8  3A80               	xorlw	80h
  2333  03A9  00FF               	movwf	btemp+1
  2334  03AA  3080               	movlw	(high(0C8h))^80h
  2335  03AB  027F               	subwf	btemp+1,w
  2336  03AC  1D03               	skipz
  2337  03AD  2BB0               	goto	u5605
  2338  03AE  30C8               	movlw	low(0C8h)
  2339  03AF  026E               	subwf	(main@RT2P),w
  2340  03B0                     u5605:
  2341                           
  2342  03B0  1803               	skipnc
  2343  03B1  2BB3               	goto	u5601
  2344  03B2  2BB4               	goto	u5600
  2345  03B3                     u5601:
  2346  03B3  2BBF               	goto	l11564
  2347  03B4                     u5600:
  2348                           	
  2349  03B4                     l11560:	
  2350  03B4  1283               	bcf	status, 5	;RP0=0, select bank0
  2351  03B5  1303               	bcf	status, 6	;RP1=0, select bank0
  2352  03B6  1BEF               	btfsc	(main@RT2P+1),7
  2353  03B7  2BB9               	goto	u5611
  2354  03B8  2BBA               	goto	u5610
  2355  03B9                     u5611:
  2356  03B9  2BBF               	goto	l11564
  2357  03BA                     u5610:
  2358                           	line	238
  2359                           	
  2360  03BA                     l11562:	
  2361                           ;Main.c: 237: {
  2362                           ;Main.c: 238: direction1 = 1;
  2363  03BA  3001               	movlw	low(01h)
  2364  03BB  00E5               	movwf	(main@direction1)
  2365  03BC  3000               	movlw	high(01h)
  2366  03BD  00E6               	movwf	((main@direction1))+1
  2367  03BE  2BBF               	goto	l11564
  2368                           	line	239
  2369                           	
  2370  03BF                     l2244:	
  2371                           	line	240
  2372                           	
  2373  03BF                     l11564:	
  2374                           ;Main.c: 239: }
  2375                           ;Main.c: 240: if (RT2P < 0 && RT2P >= -200)
  2376  03BF  1283               	bcf	status, 5	;RP0=0, select bank0
  2377  03C0  1303               	bcf	status, 6	;RP1=0, select bank0
  2378  03C1  1FEF               	btfss	(main@RT2P+1),7
  2379  03C2  2BC4               	goto	u5621
  2380  03C3  2BC5               	goto	u5620
  2381  03C4                     u5621:
  2382  03C4  2BD7               	goto	l11570
  2383  03C5                     u5620:
  2384                           	
  2385  03C5                     l11566:	
  2386  03C5  086F               	movf	(main@RT2P+1),w
  2387  03C6  3A80               	xorlw	80h
  2388  03C7  00FF               	movwf	btemp+1
  2389  03C8  307F               	movlw	(high(-200))^80h
  2390  03C9  027F               	subwf	btemp+1,w
  2391  03CA  1D03               	skipz
  2392  03CB  2BCE               	goto	u5635
  2393  03CC  3038               	movlw	low(-200)
  2394  03CD  026E               	subwf	(main@RT2P),w
  2395  03CE                     u5635:
  2396                           
  2397  03CE  1C03               	skipc
  2398  03CF  2BD1               	goto	u5631
  2399  03D0  2BD2               	goto	u5630
  2400  03D1                     u5631:
  2401  03D1  2BD7               	goto	l11570
  2402  03D2                     u5630:
  2403                           	line	242
  2404                           	
  2405  03D2                     l11568:	
  2406                           ;Main.c: 241: {
  2407                           ;Main.c: 242: direction1 = 0;
  2408  03D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2409  03D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2410  03D4  01E5               	clrf	(main@direction1)
  2411  03D5  01E6               	clrf	(main@direction1+1)
  2412  03D6  2BD7               	goto	l11570
  2413                           	line	243
  2414                           	
  2415  03D7                     l2245:	
  2416                           	line	244
  2417                           	
  2418  03D7                     l11570:	
  2419                           ;Main.c: 243: }
  2420                           ;Main.c: 244: if(RT2P < -200 || RT2P >500)
  2421  03D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2422  03D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2423  03D9  086F               	movf	(main@RT2P+1),w
  2424  03DA  3A80               	xorlw	80h
  2425  03DB  00FF               	movwf	btemp+1
  2426  03DC  307F               	movlw	(high(-200))^80h
  2427  03DD  027F               	subwf	btemp+1,w
  2428  03DE  1D03               	skipz
  2429  03DF  2BE2               	goto	u5645
  2430  03E0  3038               	movlw	low(-200)
  2431  03E1  026E               	subwf	(main@RT2P),w
  2432  03E2                     u5645:
  2433                           
  2434  03E2  1C03               	skipc
  2435  03E3  2BE5               	goto	u5641
  2436  03E4  2BE6               	goto	u5640
  2437  03E5                     u5641:
  2438  03E5  2CBF               	goto	l11598
  2439  03E6                     u5640:
  2440                           	
  2441  03E6                     l11572:	
  2442  03E6  1283               	bcf	status, 5	;RP0=0, select bank0
  2443  03E7  1303               	bcf	status, 6	;RP1=0, select bank0
  2444  03E8  086F               	movf	(main@RT2P+1),w
  2445  03E9  3A80               	xorlw	80h
  2446  03EA  00FF               	movwf	btemp+1
  2447  03EB  3081               	movlw	(high(01F5h))^80h
  2448  03EC  027F               	subwf	btemp+1,w
  2449  03ED  1D03               	skipz
  2450  03EE  2BF1               	goto	u5655
  2451  03EF  30F5               	movlw	low(01F5h)
  2452  03F0  026E               	subwf	(main@RT2P),w
  2453  03F1                     u5655:
  2454                           
  2455  03F1  1C03               	skipc
  2456  03F2  2BF4               	goto	u5651
  2457  03F3  2BF5               	goto	u5650
  2458  03F4                     u5651:
  2459  03F4  2BF7               	goto	l11574
  2460  03F5                     u5650:
  2461  03F5  2CBF               	goto	l11598
  2462                           	
  2463  03F6                     l2248:	
  2464                           	line	246
  2465                           ;Main.c: 245: {
  2466                           ;Main.c: 246: break;
  2467  03F6  2CBF               	goto	l11598
  2468                           	line	247
  2469                           	
  2470  03F7                     l2246:	
  2471                           	line	249
  2472                           	
  2473  03F7                     l11574:	
  2474                           ;Main.c: 247: }
  2475                           ;Main.c: 249: rotate((400 - shortwall ), 0);
  2476  03F7  1283               	bcf	status, 5	;RP0=0, select bank0
  2477  03F8  1303               	bcf	status, 6	;RP1=0, select bank0
  2478  03F9  096C               	comf	(main@shortwall_3021),w
  2479  03FA  00E2               	movwf	(??_main+0)+0
  2480  03FB  096D               	comf	(main@shortwall_3021+1),w
  2481  03FC  00E3               	movwf	((??_main+0)+0+1)
  2482  03FD  0AE2               	incf	(??_main+0)+0,f
  2483  03FE  1903               	skipnz
  2484  03FF  0AE3               	incf	((??_main+0)+0+1),f
  2485  0400  0862               	movf	0+(??_main+0)+0,w
  2486  0401  3E90               	addlw	low(0190h)
  2487  0402  00A3               	movwf	(?_rotate)
  2488  0403  0863               	movf	1+(??_main+0)+0,w
  2489  0404  1803               	skipnc
  2490  0405  3E01               	addlw	1
  2491  0406  3E01               	addlw	high(0190h)
  2492  0407  00A4               	movwf	1+(?_rotate)
  2493  0408  01A5               	clrf	0+(?_rotate)+02h
  2494  0409  160A  118A  27B0   	fcall	_rotate
              120A  118A         
  2495                           	line	250
  2496                           	
  2497  040E                     l11576:	
  2498                           ;Main.c: 250: _delay((unsigned long)((100)*(20000000/4000.0)));
  2499                           	opt asmopt_off
  2500  040E  3003               movlw  3
  2501  040F  1283               	bcf	status, 5	;RP0=0, select bank0
  2502  0410  1303               	bcf	status, 6	;RP1=0, select bank0
  2503  0411  00E4               movwf	((??_main+0)+0+2),f
  2504  0412  308A               movlw	138
  2505  0413  00E3               movwf	((??_main+0)+0+1),f
  2506  0414  3056               	movlw	86
  2507  0415  00E2               movwf	((??_main+0)+0),f
  2508  0416                     u5677:
  2509  0416  0BE2               	decfsz	((??_main+0)+0),f
  2510  0417  2C16               	goto	u5677
  2511  0418  0BE3               	decfsz	((??_main+0)+0+1),f
  2512  0419  2C16               	goto	u5677
  2513  041A  0BE4               	decfsz	((??_main+0)+0+2),f
  2514  041B  2C16               	goto	u5677
  2515  041C  2C1D               	nop2
  2516                           opt asmopt_on
  2517                           
  2518                           	line	253
  2519                           	
  2520  041D                     l11578:	
  2521                           ;Main.c: 253: int RT2A= RT2P * (36.0/40.0);
  2522  041D  1283               	bcf	status, 5	;RP0=0, select bank0
  2523  041E  1303               	bcf	status, 6	;RP1=0, select bank0
  2524  041F  086F               	movf	(main@RT2P+1),w
  2525  0420  01B7               	clrf	(?___awtoft+1)
  2526  0421  07B7               	addwf	(?___awtoft+1)
  2527  0422  086E               	movf	(main@RT2P),w
  2528  0423  01B6               	clrf	(?___awtoft)
  2529  0424  07B6               	addwf	(?___awtoft)
  2530                           
  2531  0425  160A  118A  250F   	fcall	___awtoft
              120A  118A         
  2532  042A  1283               	bcf	status, 5	;RP0=0, select bank0
  2533  042B  1303               	bcf	status, 6	;RP1=0, select bank0
  2534  042C  0836               	movf	(0+(?___awtoft)),w
  2535  042D  00BF               	movwf	0+(?___ftmul)+03h
  2536  042E  0837               	movf	(1+(?___awtoft)),w
  2537  042F  00C0               	movwf	1+(?___ftmul)+03h
  2538  0430  0838               	movf	(2+(?___awtoft)),w
  2539  0431  00C1               	movwf	2+(?___ftmul)+03h
  2540  0432  3066               	movlw	0x66
  2541  0433  00BC               	movwf	(?___ftmul)
  2542  0434  3066               	movlw	0x66
  2543  0435  00BD               	movwf	(?___ftmul+1)
  2544  0436  303F               	movlw	0x3f
  2545  0437  00BE               	movwf	(?___ftmul+2)
  2546  0438  120A  158A  2615   	fcall	___ftmul
              120A  118A         
  2547  043D  1283               	bcf	status, 5	;RP0=0, select bank0
  2548  043E  1303               	bcf	status, 6	;RP1=0, select bank0
  2549  043F  083C               	movf	(0+(?___ftmul)),w
  2550  0440  00A8               	movwf	(?___fttol)
  2551  0441  083D               	movf	(1+(?___ftmul)),w
  2552  0442  00A9               	movwf	(?___fttol+1)
  2553  0443  083E               	movf	(2+(?___ftmul)),w
  2554  0444  00AA               	movwf	(?___fttol+2)
  2555  0445  120A  158A  2422   	fcall	___fttol
              120A  118A         
  2556  044A  1283               	bcf	status, 5	;RP0=0, select bank0
  2557  044B  1303               	bcf	status, 6	;RP1=0, select bank0
  2558  044C  0829               	movf	1+(((0+(?___fttol)))),w
  2559  044D  01E8               	clrf	(main@RT2A+1)
  2560  044E  07E8               	addwf	(main@RT2A+1)
  2561  044F  0828               	movf	0+(((0+(?___fttol)))),w
  2562  0450  01E7               	clrf	(main@RT2A)
  2563  0451  07E7               	addwf	(main@RT2A)
  2564                           
  2565                           	line	254
  2566                           	
  2567  0452                     l11580:	
  2568                           ;Main.c: 254: robotTurn(RT2A);
  2569  0452  0868               	movf	(main@RT2A+1),w
  2570  0453  01A3               	clrf	(?_robotTurn+1)
  2571  0454  07A3               	addwf	(?_robotTurn+1)
  2572  0455  0867               	movf	(main@RT2A),w
  2573  0456  01A2               	clrf	(?_robotTurn)
  2574  0457  07A2               	addwf	(?_robotTurn)
  2575                           
  2576  0458  120A  158A  210F   	fcall	_robotTurn
              120A  118A         
  2577                           	line	255
  2578                           	
  2579  045D                     l11582:	
  2580                           ;Main.c: 255: _delay((unsigned long)((100)*(20000000/4000.0)));
  2581                           	opt asmopt_off
  2582  045D  3003               movlw  3
  2583  045E  1283               	bcf	status, 5	;RP0=0, select bank0
  2584  045F  1303               	bcf	status, 6	;RP1=0, select bank0
  2585  0460  00E4               movwf	((??_main+0)+0+2),f
  2586  0461  308A               movlw	138
  2587  0462  00E3               movwf	((??_main+0)+0+1),f
  2588  0463  3056               	movlw	86
  2589  0464  00E2               movwf	((??_main+0)+0),f
  2590  0465                     u5687:
  2591  0465  0BE2               	decfsz	((??_main+0)+0),f
  2592  0466  2C65               	goto	u5687
  2593  0467  0BE3               	decfsz	((??_main+0)+0+1),f
  2594  0468  2C65               	goto	u5687
  2595  0469  0BE4               	decfsz	((??_main+0)+0+2),f
  2596  046A  2C65               	goto	u5687
  2597  046B  2C6C               	nop2
  2598                           opt asmopt_on
  2599                           
  2600                           	line	256
  2601                           	
  2602  046C                     l11584:	
  2603                           ;Main.c: 256: rotate(shortwall,0);
  2604  046C  1283               	bcf	status, 5	;RP0=0, select bank0
  2605  046D  1303               	bcf	status, 6	;RP1=0, select bank0
  2606  046E  086D               	movf	(main@shortwall_3021+1),w
  2607  046F  01A4               	clrf	(?_rotate+1)
  2608  0470  07A4               	addwf	(?_rotate+1)
  2609  0471  086C               	movf	(main@shortwall_3021),w
  2610  0472  01A3               	clrf	(?_rotate)
  2611  0473  07A3               	addwf	(?_rotate)
  2612                           
  2613  0474  01A5               	clrf	0+(?_rotate)+02h
  2614  0475  160A  118A  27B0   	fcall	_rotate
              120A  118A         
  2615                           	line	257
  2616                           	
  2617  047A                     l11586:	
  2618                           ;Main.c: 257: _delay((unsigned long)((100)*(20000000/4000.0)));
  2619                           	opt asmopt_off
  2620  047A  3003               movlw  3
  2621  047B  1283               	bcf	status, 5	;RP0=0, select bank0
  2622  047C  1303               	bcf	status, 6	;RP1=0, select bank0
  2623  047D  00E4               movwf	((??_main+0)+0+2),f
  2624  047E  308A               movlw	138
  2625  047F  00E3               movwf	((??_main+0)+0+1),f
  2626  0480  3056               	movlw	86
  2627  0481  00E2               movwf	((??_main+0)+0),f
  2628  0482                     u5697:
  2629  0482  0BE2               	decfsz	((??_main+0)+0),f
  2630  0483  2C82               	goto	u5697
  2631  0484  0BE3               	decfsz	((??_main+0)+0+1),f
  2632  0485  2C82               	goto	u5697
  2633  0486  0BE4               	decfsz	((??_main+0)+0+2),f
  2634  0487  2C82               	goto	u5697
  2635  0488  2C89               	nop2
  2636                           opt asmopt_on
  2637                           
  2638                           	line	258
  2639                           	
  2640  0489                     l11588:	
  2641                           ;Main.c: 258: robotMoveSpeed(500, 200);
  2642  0489  30F4               	movlw	low(01F4h)
  2643  048A  1283               	bcf	status, 5	;RP0=0, select bank0
  2644  048B  1303               	bcf	status, 6	;RP1=0, select bank0
  2645  048C  00D9               	movwf	(?_robotMoveSpeed)
  2646  048D  3001               	movlw	high(01F4h)
  2647  048E  00DA               	movwf	((?_robotMoveSpeed))+1
  2648  048F  30C8               	movlw	low(0C8h)
  2649  0490  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2650  0491  3000               	movlw	high(0C8h)
  2651  0492  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2652  0493  120A  158A  24C8   	fcall	_robotMoveSpeed
              120A  118A         
  2653  0498  2C99               	goto	l11590
  2654                           	line	259
  2655                           	
  2656  0499                     l2238:	
  2657                           	line	215
  2658                           	
  2659  0499                     l11590:	
  2660  0499  1683               	bsf	status, 5	;RP0=1, select bank1
  2661  049A  1303               	bcf	status, 6	;RP1=0, select bank1
  2662  049B  084E               	movf	(_ROBOTerror)^080h,w
  2663  049C  1D03               	skipz
  2664  049D  2C9F               	goto	u5660
  2665  049E  2AFE               	goto	l11526
  2666  049F                     u5660:
  2667  049F  2CBF               	goto	l11598
  2668                           	
  2669  04A0                     l2249:	
  2670                           	line	261
  2671                           ;Main.c: 259: }
  2672                           ;Main.c: 261: break;
  2673  04A0  2CBF               	goto	l11598
  2674                           	line	263
  2675                           ;Main.c: 263: case 5:
  2676                           	
  2677  04A1                     l2250:	
  2678                           	line	264
  2679                           	
  2680  04A1                     l11592:	
  2681                           ;Main.c: 264: ChargeMode();
  2682  04A1  160A  118A  271A   	fcall	_ChargeMode
              120A  118A         
  2683                           	line	265
  2684                           ;Main.c: 265: break;
  2685  04A6  2CBF               	goto	l11598
  2686                           	line	266
  2687                           ;Main.c: 266: default:
  2688                           	
  2689  04A7                     l2251:	
  2690                           	line	268
  2691                           ;Main.c: 268: break;
  2692  04A7  2CBF               	goto	l11598
  2693                           	line	269
  2694                           	
  2695  04A8                     l11594:	
  2696                           ;Main.c: 269: }
  2697  04A8  2CBF               	goto	l11598
  2698                           	line	198
  2699                           	
  2700  04A9                     l2231:	
  2701                           	
  2702  04A9                     l11596:	
  2703  04A9  1283               	bcf	status, 5	;RP0=0, select bank0
  2704  04AA  1303               	bcf	status, 6	;RP1=0, select bank0
  2705  04AB  086B               	movf	(main@choice),w
  2706                           	; Switch size 1, requested type "space"
  2707                           ; Number of cases is 6, Range of values is 0 to 5
  2708                           ; switch strategies available:
  2709                           ; Name         Instructions Cycles
  2710                           ; simple_byte           19    10 (average)
  2711                           ; direct_byte           26     8 (fixed)
  2712                           ; jumptable            260     6 (fixed)
  2713                           ; rangetable            10     6 (fixed)
  2714                           ; spacedrange           18     9 (fixed)
  2715                           ; locatedrange           6     3 (fixed)
  2716                           ;	Chosen strategy is simple_byte
  2717                           
  2718                           	opt asmopt_off
  2719  04AC  3A00               	xorlw	0^0	; case 0
  2720  04AD  1903               	skipnz
  2721  04AE  2AAE               	goto	l11514
  2722  04AF  3A01               	xorlw	1^0	; case 1
  2723  04B0  1903               	skipnz
  2724  04B1  2AB4               	goto	l11516
  2725  04B2  3A03               	xorlw	2^1	; case 2
  2726  04B3  1903               	skipnz
  2727  04B4  2AD9               	goto	l11520
  2728  04B5  3A01               	xorlw	3^2	; case 3
  2729  04B6  1903               	skipnz
  2730  04B7  2AE9               	goto	l11522
  2731  04B8  3A07               	xorlw	4^3	; case 4
  2732  04B9  1903               	skipnz
  2733  04BA  2AF9               	goto	l11524
  2734  04BB  3A01               	xorlw	5^4	; case 5
  2735  04BC  1903               	skipnz
  2736  04BD  2CA1               	goto	l11592
  2737  04BE  2CBF               	goto	l11598
  2738                           	opt asmopt_on
  2739                           
  2740                           	line	269
  2741                           	
  2742  04BF                     l2233:	
  2743                           	line	270
  2744                           	
  2745  04BF                     l11598:	
  2746                           ;Main.c: 270: choice = 255;
  2747  04BF  30FF               	movlw	(0FFh)
  2748  04C0  1283               	bcf	status, 5	;RP0=0, select bank0
  2749  04C1  1303               	bcf	status, 6	;RP1=0, select bank0
  2750  04C2  00E2               	movwf	(??_main+0)+0
  2751  04C3  0862               	movf	(??_main+0)+0,w
  2752  04C4  00EB               	movwf	(main@choice)
  2753  04C5  2A86               	goto	l11498
  2754                           	line	271
  2755                           	
  2756  04C6                     l2252:	
  2757                           	line	180
  2758  04C6  2A86               	goto	l11498
  2759                           	
  2760  04C7                     l2253:	
  2761                           	line	272
  2762                           	
  2763  04C7                     l2254:	
  2764                           	global	start
  2765  04C7  120A  118A  2812   	ljmp	start
  2766                           	opt stack 0
  2767                           GLOBAL	__end_of_main
  2768  04CA                     	__end_of_main:
  2769 ;; =============== function _main ends ============
  2770                           
  2771                           	signat	_main,88
  2772                           	global	_ChargeMode
  2773                           psect	text1072,local,class=CODE,delta=2
  2774                           global __ptext1072
  2775  171A                     __ptext1072:
  2776                           
  2777 ;; *************** function _ChargeMode *****************
  2778 ;; Defined at:
  2779 ;;		line 318 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;		None               void
  2786 ;; Registers used:
  2787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0
  2795 ;;      Temps:          0       1       0       0       0
  2796 ;;      Totals:         0       1       0       0       0
  2797 ;;Total ram usage:        1 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:    6
  2800 ;; This function calls:
  2801 ;;		_ser_putch
  2802 ;;		_UpdateDisplay
  2803 ;; This function is called by:
  2804 ;;		_main
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           psect	text1072
  2808                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2809                           	line	318
  2810                           	global	__size_of_ChargeMode
  2811  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2812                           	
  2813  171A                     _ChargeMode:	
  2814                           	opt	stack 1
  2815                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2816                           	line	320
  2817                           	
  2818  171A                     l11470:	
  2819                           ;Main.c: 320: currentMenu = 2;
  2820  171A  3002               	movlw	(02h)
  2821  171B  1283               	bcf	status, 5	;RP0=0, select bank0
  2822  171C  1303               	bcf	status, 6	;RP1=0, select bank0
  2823  171D  00D9               	movwf	(??_ChargeMode+0)+0
  2824  171E  0859               	movf	(??_ChargeMode+0)+0,w
  2825  171F  1683               	bsf	status, 5	;RP0=1, select bank1
  2826  1720  1303               	bcf	status, 6	;RP1=0, select bank1
  2827  1721  00D1               	movwf	(_currentMenu)^080h	;volatile
  2828                           	line	321
  2829                           	
  2830  1722                     l11472:	
  2831                           ;Main.c: 321: ser_putch(128);
  2832  1722  3080               	movlw	(080h)
  2833  1723  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  2834  1728  2F29               	goto	l11474
  2835                           	line	323
  2836                           ;Main.c: 323: while (1)
  2837                           	
  2838  1729                     l2272:	
  2839                           	line	325
  2840                           	
  2841  1729                     l11474:	
  2842                           ;Main.c: 324: {
  2843                           ;Main.c: 325: if (RTC_FLAG_250MS == 1)
  2844  1729  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2845  172A  2F2C               	goto	u5511
  2846  172B  2F2D               	goto	u5510
  2847  172C                     u5511:
  2848  172C  2F4C               	goto	l11490
  2849  172D                     u5510:
  2850                           	line	327
  2851                           	
  2852  172D                     l11476:	
  2853                           ;Main.c: 326: {
  2854                           ;Main.c: 327: RTC_FLAG_250MS = 0;
  2855  172D  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2856                           	line	328
  2857                           	
  2858  172E                     l11478:	
  2859                           ;Main.c: 328: UpdateDisplay();
  2860  172E  120A  118A  24CA   	fcall	_UpdateDisplay
              160A  118A         
  2861  1733  2F4C               	goto	l11490
  2862                           	line	329
  2863                           	
  2864  1734                     l2273:	
  2865                           	line	330
  2866                           ;Main.c: 329: }
  2867                           ;Main.c: 330: switch (buttonPressed)
  2868  1734  2F4C               	goto	l11490
  2869                           	line	332
  2870                           ;Main.c: 331: {
  2871                           ;Main.c: 332: case 1:
  2872                           	
  2873  1735                     l2275:	
  2874                           	line	333
  2875                           ;Main.c: 333: buttonPressed = 0;
  2876  1735  01FD               	clrf	(_buttonPressed)	;volatile
  2877                           	line	334
  2878                           ;Main.c: 334: break;
  2879  1736  2F29               	goto	l11474
  2880                           	line	335
  2881                           ;Main.c: 335: case 2:
  2882                           	
  2883  1737                     l2277:	
  2884                           	line	336
  2885                           ;Main.c: 336: buttonPressed = 0;
  2886  1737  01FD               	clrf	(_buttonPressed)	;volatile
  2887                           	line	337
  2888                           ;Main.c: 337: break;
  2889  1738  2F29               	goto	l11474
  2890                           	line	338
  2891                           ;Main.c: 338: case 3:
  2892                           	
  2893  1739                     l2278:	
  2894                           	line	339
  2895                           ;Main.c: 339: buttonPressed = 0;
  2896  1739  01FD               	clrf	(_buttonPressed)	;volatile
  2897                           	line	340
  2898                           ;Main.c: 340: break;
  2899  173A  2F29               	goto	l11474
  2900                           	line	341
  2901                           ;Main.c: 341: case 4:
  2902                           	
  2903  173B                     l2279:	
  2904                           	line	342
  2905                           ;Main.c: 342: buttonPressed = 0;
  2906  173B  01FD               	clrf	(_buttonPressed)	;volatile
  2907                           	line	343
  2908                           ;Main.c: 343: break;
  2909  173C  2F29               	goto	l11474
  2910                           	line	344
  2911                           ;Main.c: 344: case 5:
  2912                           	
  2913  173D                     l2280:	
  2914                           	line	345
  2915                           	
  2916  173D                     l11480:	
  2917                           ;Main.c: 345: ser_putch(132);
  2918  173D  3084               	movlw	(084h)
  2919  173E  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  2920                           	line	346
  2921                           	
  2922  1743                     l11482:	
  2923                           ;Main.c: 346: buttonPressed = 0;
  2924  1743  01FD               	clrf	(_buttonPressed)	;volatile
  2925                           	line	347
  2926                           	
  2927  1744                     l11484:	
  2928                           ;Main.c: 347: currentMenu = 0;
  2929  1744  1683               	bsf	status, 5	;RP0=1, select bank1
  2930  1745  1303               	bcf	status, 6	;RP1=0, select bank1
  2931  1746  01D1               	clrf	(_currentMenu)^080h	;volatile
  2932  1747  2F5F               	goto	l2281
  2933                           	line	348
  2934                           	
  2935  1748                     l11486:	
  2936                           ;Main.c: 348: return;
  2937  1748  2F5F               	goto	l2281
  2938                           	line	349
  2939                           ;Main.c: 349: default:
  2940                           	
  2941  1749                     l2282:	
  2942                           	line	350
  2943                           ;Main.c: 350: buttonPressed = 0;
  2944  1749  01FD               	clrf	(_buttonPressed)	;volatile
  2945                           	line	351
  2946                           ;Main.c: 351: break;
  2947  174A  2F29               	goto	l11474
  2948                           	line	352
  2949                           	
  2950  174B                     l11488:	
  2951                           ;Main.c: 352: }
  2952  174B  2F29               	goto	l11474
  2953                           	line	330
  2954                           	
  2955  174C                     l2274:	
  2956                           	
  2957  174C                     l11490:	
  2958  174C  087D               	movf	(_buttonPressed),w	;volatile
  2959                           	; Switch size 1, requested type "space"
  2960                           ; Number of cases is 5, Range of values is 1 to 5
  2961                           ; switch strategies available:
  2962                           ; Name         Instructions Cycles
  2963                           ; simple_byte           16     9 (average)
  2964                           ; direct_byte           26    11 (fixed)
  2965                           ; jumptable            263     9 (fixed)
  2966                           ;	Chosen strategy is simple_byte
  2967                           
  2968                           	opt asmopt_off
  2969  174D  3A01               	xorlw	1^0	; case 1
  2970  174E  1903               	skipnz
  2971  174F  2F35               	goto	l2275
  2972  1750  3A03               	xorlw	2^1	; case 2
  2973  1751  1903               	skipnz
  2974  1752  2F37               	goto	l2277
  2975  1753  3A01               	xorlw	3^2	; case 3
  2976  1754  1903               	skipnz
  2977  1755  2F39               	goto	l2278
  2978  1756  3A07               	xorlw	4^3	; case 4
  2979  1757  1903               	skipnz
  2980  1758  2F3B               	goto	l2279
  2981  1759  3A01               	xorlw	5^4	; case 5
  2982  175A  1903               	skipnz
  2983  175B  2F3D               	goto	l11480
  2984  175C  2F49               	goto	l2282
  2985                           	opt asmopt_on
  2986                           
  2987                           	line	352
  2988                           	
  2989  175D                     l2276:	
  2990  175D  2F29               	goto	l11474
  2991                           	line	353
  2992                           	
  2993  175E                     l2283:	
  2994                           	line	323
  2995  175E  2F29               	goto	l11474
  2996                           	
  2997  175F                     l2284:	
  2998                           	line	354
  2999                           	
  3000  175F                     l2281:	
  3001  175F  0008               	return
  3002                           	opt stack 0
  3003                           GLOBAL	__end_of_ChargeMode
  3004  1760                     	__end_of_ChargeMode:
  3005 ;; =============== function _ChargeMode ends ============
  3006                           
  3007                           	signat	_ChargeMode,88
  3008                           	global	_robotMoveSpeed
  3009                           psect	text1073,local,class=CODE,delta=2
  3010                           global __ptext1073
  3011  0CC8                     __ptext1073:
  3012                           
  3013 ;; *************** function _robotMoveSpeed *****************
  3014 ;; Defined at:
  3015 ;;		line 142 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  distance        2   57[BANK0 ] int 
  3018 ;;  speed           2   59[BANK0 ] int 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  temp1           2   64[BANK0 ] int 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;		None               void
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       4       0       0       0
  3031 ;;      Locals:         0       2       0       0       0
  3032 ;;      Temps:          0       3       0       0       0
  3033 ;;      Totals:         0       9       0       0       0
  3034 ;;Total ram usage:        9 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    6
  3037 ;; This function calls:
  3038 ;;		_RobotDrive
  3039 ;;		_robot_read
  3040 ;;		_UpdateDisplay
  3041 ;;		_abs
  3042 ;; This function is called by:
  3043 ;;		_main
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           psect	text1073
  3047                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3048                           	line	142
  3049                           	global	__size_of_robotMoveSpeed
  3050  00A6                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  3051                           	
  3052  0CC8                     _robotMoveSpeed:	
  3053                           	opt	stack 1
  3054                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3055                           	line	143
  3056                           	
  3057  0CC8                     l11444:	
  3058                           ;robot.c: 143: distTravelled = 0;
  3059  0CC8  1683               	bsf	status, 5	;RP0=1, select bank1
  3060  0CC9  1303               	bcf	status, 6	;RP1=0, select bank1
  3061  0CCA  01BA               	clrf	(_distTravelled)^080h
  3062  0CCB  01BB               	clrf	(_distTravelled+1)^080h
  3063                           	line	145
  3064                           	
  3065  0CCC                     l11446:	
  3066                           ;robot.c: 144: int temp1;
  3067                           ;robot.c: 145: RobotDrive(speed);
  3068  0CCC  1283               	bcf	status, 5	;RP0=0, select bank0
  3069  0CCD  1303               	bcf	status, 6	;RP1=0, select bank0
  3070  0CCE  085C               	movf	(robotMoveSpeed@speed+1),w
  3071  0CCF  01A3               	clrf	(?_RobotDrive+1)
  3072  0CD0  07A3               	addwf	(?_RobotDrive+1)
  3073  0CD1  085B               	movf	(robotMoveSpeed@speed),w
  3074  0CD2  01A2               	clrf	(?_RobotDrive)
  3075  0CD3  07A2               	addwf	(?_RobotDrive)
  3076                           
  3077  0CD4  160A  118A  2594   	fcall	_RobotDrive
              120A  158A         
  3078                           	line	148
  3079                           ;robot.c: 148: while (abs(distTravelled) <= abs(distance))
  3080  0CD9  2D2B               	goto	l11466
  3081                           	
  3082  0CDA                     l6026:	
  3083                           	line	150
  3084                           	
  3085  0CDA                     l11448:	
  3086                           ;robot.c: 149: {
  3087                           ;robot.c: 150: robot_read(0);
  3088  0CDA  3000               	movlw	(0)
  3089  0CDB  120A  158A  2703   	fcall	_robot_read
              120A  158A         
  3090                           	line	151
  3091                           	
  3092  0CE0                     l11450:	
  3093                           ;robot.c: 151: if (BumpSensors)
  3094  0CE0  1683               	bsf	status, 5	;RP0=1, select bank1
  3095  0CE1  1303               	bcf	status, 6	;RP1=0, select bank1
  3096  0CE2  0848               	movf	(_BumpSensors)^080h,w	;volatile
  3097  0CE3  1D03               	skipz
  3098  0CE4  2CE6               	goto	u5490
  3099  0CE5  2CEA               	goto	l11454
  3100  0CE6                     u5490:
  3101                           	line	153
  3102                           	
  3103  0CE6                     l11452:	
  3104                           ;robot.c: 152: {
  3105                           ;robot.c: 153: ROBOTerror = 1;
  3106  0CE6  01CE               	clrf	(_ROBOTerror)^080h
  3107  0CE7  1403               	bsf	status,0
  3108  0CE8  0DCE               	rlf	(_ROBOTerror)^080h,f
  3109                           	line	154
  3110                           ;robot.c: 154: break;
  3111  0CE9  2D62               	goto	l11468
  3112                           	line	155
  3113                           	
  3114  0CEA                     l6027:	
  3115                           	line	156
  3116                           	
  3117  0CEA                     l11454:	
  3118                           ;robot.c: 155: }
  3119                           ;robot.c: 156: temp1 = DistHighByte;
  3120  0CEA  084A               	movf	(_DistHighByte)^080h,w	;volatile
  3121  0CEB  1283               	bcf	status, 5	;RP0=0, select bank0
  3122  0CEC  1303               	bcf	status, 6	;RP1=0, select bank0
  3123  0CED  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3124  0CEE  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3125  0CEF  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3126  0CF0  00E0               	movwf	(robotMoveSpeed@temp1)
  3127  0CF1  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3128  0CF2  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3129                           	line	157
  3130                           	
  3131  0CF3                     l11456:	
  3132                           ;robot.c: 157: temp1 = temp1 << 8;
  3133  0CF3  0861               	movf	(robotMoveSpeed@temp1+1),w
  3134  0CF4  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  3135  0CF5  0860               	movf	(robotMoveSpeed@temp1),w
  3136  0CF6  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3137  0CF7  085D               	movf	(??_robotMoveSpeed+0)+0,w
  3138  0CF8  00DE               	movwf	(??_robotMoveSpeed+0)+1
  3139  0CF9  01DD               	clrf	(??_robotMoveSpeed+0)+0
  3140  0CFA  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3141  0CFB  00E0               	movwf	(robotMoveSpeed@temp1)
  3142  0CFC  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3143  0CFD  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3144                           	line	158
  3145                           	
  3146  0CFE                     l11458:	
  3147                           ;robot.c: 158: temp1 += DistLowByte;
  3148  0CFE  1683               	bsf	status, 5	;RP0=1, select bank1
  3149  0CFF  1303               	bcf	status, 6	;RP1=0, select bank1
  3150  0D00  084B               	movf	(_DistLowByte)^080h,w	;volatile
  3151  0D01  1283               	bcf	status, 5	;RP0=0, select bank0
  3152  0D02  1303               	bcf	status, 6	;RP1=0, select bank0
  3153  0D03  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3154  0D04  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3155  0D05  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3156  0D06  07E0               	addwf	(robotMoveSpeed@temp1),f
  3157  0D07  1803               	skipnc
  3158  0D08  0AE1               	incf	(robotMoveSpeed@temp1+1),f
  3159  0D09  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3160  0D0A  07E1               	addwf	(robotMoveSpeed@temp1+1),f
  3161                           	line	159
  3162                           	
  3163  0D0B                     l11460:	
  3164                           ;robot.c: 159: distTravelled += temp1;
  3165  0D0B  0860               	movf	(robotMoveSpeed@temp1),w
  3166  0D0C  1683               	bsf	status, 5	;RP0=1, select bank1
  3167  0D0D  1303               	bcf	status, 6	;RP1=0, select bank1
  3168  0D0E  07BA               	addwf	(_distTravelled)^080h,f
  3169  0D0F  1803               	skipnc
  3170  0D10  0ABB               	incf	(_distTravelled+1)^080h,f
  3171  0D11  1283               	bcf	status, 5	;RP0=0, select bank0
  3172  0D12  1303               	bcf	status, 6	;RP1=0, select bank0
  3173  0D13  0861               	movf	(robotMoveSpeed@temp1+1),w
  3174  0D14  1683               	bsf	status, 5	;RP0=1, select bank1
  3175  0D15  1303               	bcf	status, 6	;RP1=0, select bank1
  3176  0D16  07BB               	addwf	(_distTravelled+1)^080h,f
  3177                           	line	160
  3178                           	
  3179  0D17                     l11462:	
  3180                           ;robot.c: 160: TotalDistTravelled += temp1;
  3181  0D17  1283               	bcf	status, 5	;RP0=0, select bank0
  3182  0D18  1303               	bcf	status, 6	;RP1=0, select bank0
  3183  0D19  0860               	movf	(robotMoveSpeed@temp1),w
  3184  0D1A  1683               	bsf	status, 5	;RP0=1, select bank1
  3185  0D1B  1303               	bcf	status, 6	;RP1=0, select bank1
  3186  0D1C  07B4               	addwf	(_TotalDistTravelled)^080h,f
  3187  0D1D  1803               	skipnc
  3188  0D1E  0AB5               	incf	(_TotalDistTravelled+1)^080h,f
  3189  0D1F  1283               	bcf	status, 5	;RP0=0, select bank0
  3190  0D20  1303               	bcf	status, 6	;RP1=0, select bank0
  3191  0D21  0861               	movf	(robotMoveSpeed@temp1+1),w
  3192  0D22  1683               	bsf	status, 5	;RP0=1, select bank1
  3193  0D23  1303               	bcf	status, 6	;RP1=0, select bank1
  3194  0D24  07B5               	addwf	(_TotalDistTravelled+1)^080h,f
  3195                           	line	161
  3196                           	
  3197  0D25                     l11464:	
  3198                           ;robot.c: 161: UpdateDisplay();
  3199  0D25  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  158A         
  3200  0D2A  2D2B               	goto	l11466
  3201                           	line	162
  3202                           	
  3203  0D2B                     l6025:	
  3204                           	line	148
  3205                           	
  3206  0D2B                     l11466:	
  3207  0D2B  1283               	bcf	status, 5	;RP0=0, select bank0
  3208  0D2C  1303               	bcf	status, 6	;RP1=0, select bank0
  3209  0D2D  085A               	movf	(robotMoveSpeed@distance+1),w
  3210  0D2E  01A7               	clrf	(?_abs+1)
  3211  0D2F  07A7               	addwf	(?_abs+1)
  3212  0D30  0859               	movf	(robotMoveSpeed@distance),w
  3213  0D31  01A6               	clrf	(?_abs)
  3214  0D32  07A6               	addwf	(?_abs)
  3215                           
  3216  0D33  160A  118A  2620   	fcall	_abs
              120A  158A         
  3217  0D38  1283               	bcf	status, 5	;RP0=0, select bank0
  3218  0D39  1303               	bcf	status, 6	;RP1=0, select bank0
  3219  0D3A  0826               	movf	(0+?_abs),w
  3220  0D3B  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3221  0D3C  0827               	movf	(1+?_abs),w
  3222  0D3D  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  3223  0D3E  1683               	bsf	status, 5	;RP0=1, select bank1
  3224  0D3F  1303               	bcf	status, 6	;RP1=0, select bank1
  3225  0D40  083B               	movf	(_distTravelled+1)^080h,w
  3226  0D41  1283               	bcf	status, 5	;RP0=0, select bank0
  3227  0D42  1303               	bcf	status, 6	;RP1=0, select bank0
  3228  0D43  01A7               	clrf	(?_abs+1)
  3229  0D44  07A7               	addwf	(?_abs+1)
  3230  0D45  1683               	bsf	status, 5	;RP0=1, select bank1
  3231  0D46  1303               	bcf	status, 6	;RP1=0, select bank1
  3232  0D47  083A               	movf	(_distTravelled)^080h,w
  3233  0D48  1283               	bcf	status, 5	;RP0=0, select bank0
  3234  0D49  1303               	bcf	status, 6	;RP1=0, select bank0
  3235  0D4A  01A6               	clrf	(?_abs)
  3236  0D4B  07A6               	addwf	(?_abs)
  3237                           
  3238  0D4C  160A  118A  2620   	fcall	_abs
              120A  158A         
  3239  0D51  1283               	bcf	status, 5	;RP0=0, select bank0
  3240  0D52  1303               	bcf	status, 6	;RP1=0, select bank0
  3241  0D53  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3242  0D54  3A80               	xorlw	80h
  3243  0D55  00DF               	movwf	(??_robotMoveSpeed+2)+0
  3244  0D56  0827               	movf	(1+(?_abs)),w
  3245  0D57  3A80               	xorlw	80h
  3246  0D58  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  3247  0D59  1D03               	skipz
  3248  0D5A  2D5D               	goto	u5505
  3249  0D5B  0826               	movf	(0+(?_abs)),w
  3250  0D5C  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  3251  0D5D                     u5505:
  3252                           
  3253  0D5D  1803               	skipnc
  3254  0D5E  2D60               	goto	u5501
  3255  0D5F  2D61               	goto	u5500
  3256  0D60                     u5501:
  3257  0D60  2CDA               	goto	l11448
  3258  0D61                     u5500:
  3259  0D61  2D62               	goto	l11468
  3260                           	
  3261  0D62                     l6028:	
  3262                           	line	164
  3263                           	
  3264  0D62                     l11468:	
  3265                           ;robot.c: 162: }
  3266                           ;robot.c: 164: RobotDrive(0);
  3267  0D62  3000               	movlw	low(0)
  3268  0D63  1283               	bcf	status, 5	;RP0=0, select bank0
  3269  0D64  1303               	bcf	status, 6	;RP1=0, select bank0
  3270  0D65  00A2               	movwf	(?_RobotDrive)
  3271  0D66  3000               	movlw	high(0)
  3272  0D67  00A3               	movwf	((?_RobotDrive))+1
  3273  0D68  160A  118A  2594   	fcall	_RobotDrive
              120A  158A         
  3274                           	line	166
  3275                           	
  3276  0D6D                     l6029:	
  3277  0D6D  0008               	return
  3278                           	opt stack 0
  3279                           GLOBAL	__end_of_robotMoveSpeed
  3280  0D6E                     	__end_of_robotMoveSpeed:
  3281 ;; =============== function _robotMoveSpeed ends ============
  3282                           
  3283                           	signat	_robotMoveSpeed,8312
  3284                           	global	_robotTurnSpeed
  3285                           psect	text1074,local,class=CODE,delta=2
  3286                           global __ptext1074
  3287  0B88                     __ptext1074:
  3288                           
  3289 ;; *************** function _robotTurnSpeed *****************
  3290 ;; Defined at:
  3291 ;;		line 173 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  angle           2   57[BANK0 ] int 
  3294 ;;  speed           2   59[BANK0 ] int 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  temp1           2   64[BANK0 ] int 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;		None               void
  3299 ;; Registers used:
  3300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       4       0       0       0
  3307 ;;      Locals:         0       2       0       0       0
  3308 ;;      Temps:          0       3       0       0       0
  3309 ;;      Totals:         0       9       0       0       0
  3310 ;;Total ram usage:        9 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    6
  3313 ;; This function calls:
  3314 ;;		_robotTurn
  3315 ;;		_robot_read
  3316 ;;		_UpdateDisplay
  3317 ;;		_abs
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           psect	text1074
  3323                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3324                           	line	173
  3325                           	global	__size_of_robotTurnSpeed
  3326  009A                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  3327                           	
  3328  0B88                     _robotTurnSpeed:	
  3329                           	opt	stack 1
  3330                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3331                           	line	174
  3332                           	
  3333  0B88                     l11420:	
  3334                           ;robot.c: 174: angleTurned = 0;
  3335  0B88  1683               	bsf	status, 5	;RP0=1, select bank1
  3336  0B89  1303               	bcf	status, 6	;RP1=0, select bank1
  3337  0B8A  01B8               	clrf	(_angleTurned)^080h
  3338  0B8B  01B9               	clrf	(_angleTurned+1)^080h
  3339                           	line	175
  3340                           ;robot.c: 175: int temp1 = 0;
  3341  0B8C  1283               	bcf	status, 5	;RP0=0, select bank0
  3342  0B8D  1303               	bcf	status, 6	;RP1=0, select bank0
  3343  0B8E  01E0               	clrf	(robotTurnSpeed@temp1)
  3344  0B8F  01E1               	clrf	(robotTurnSpeed@temp1+1)
  3345                           	line	177
  3346                           	
  3347  0B90                     l11422:	
  3348                           ;robot.c: 177: robotTurn(angle);
  3349  0B90  085A               	movf	(robotTurnSpeed@angle+1),w
  3350  0B91  01A3               	clrf	(?_robotTurn+1)
  3351  0B92  07A3               	addwf	(?_robotTurn+1)
  3352  0B93  0859               	movf	(robotTurnSpeed@angle),w
  3353  0B94  01A2               	clrf	(?_robotTurn)
  3354  0B95  07A2               	addwf	(?_robotTurn)
  3355                           
  3356  0B96  120A  158A  210F   	fcall	_robotTurn
              120A  158A         
  3357                           	line	180
  3358                           ;robot.c: 180: while (abs(angleTurned) <= abs(angle))
  3359  0B9B  2BDF               	goto	l11440
  3360                           	
  3361  0B9C                     l6033:	
  3362                           	line	182
  3363                           	
  3364  0B9C                     l11424:	
  3365                           ;robot.c: 181: {
  3366                           ;robot.c: 182: robot_read(1);
  3367  0B9C  3001               	movlw	(01h)
  3368  0B9D  120A  158A  2703   	fcall	_robot_read
              120A  158A         
  3369                           	line	183
  3370                           	
  3371  0BA2                     l11426:	
  3372                           ;robot.c: 183: if (BumpSensors)
  3373  0BA2  1683               	bsf	status, 5	;RP0=1, select bank1
  3374  0BA3  1303               	bcf	status, 6	;RP1=0, select bank1
  3375  0BA4  0848               	movf	(_BumpSensors)^080h,w	;volatile
  3376  0BA5  1D03               	skipz
  3377  0BA6  2BA8               	goto	u5470
  3378  0BA7  2BAC               	goto	l11430
  3379  0BA8                     u5470:
  3380                           	line	185
  3381                           	
  3382  0BA8                     l11428:	
  3383                           ;robot.c: 184: {
  3384                           ;robot.c: 185: ROBOTerror = 1;
  3385  0BA8  01CE               	clrf	(_ROBOTerror)^080h
  3386  0BA9  1403               	bsf	status,0
  3387  0BAA  0DCE               	rlf	(_ROBOTerror)^080h,f
  3388                           	line	186
  3389                           ;robot.c: 186: break;
  3390  0BAB  2C16               	goto	l11442
  3391                           	line	187
  3392                           	
  3393  0BAC                     l6034:	
  3394                           	line	188
  3395                           	
  3396  0BAC                     l11430:	
  3397                           ;robot.c: 187: }
  3398                           ;robot.c: 188: temp1 = AngleHighByte;
  3399  0BAC  0846               	movf	(_AngleHighByte)^080h,w	;volatile
  3400  0BAD  1283               	bcf	status, 5	;RP0=0, select bank0
  3401  0BAE  1303               	bcf	status, 6	;RP1=0, select bank0
  3402  0BAF  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3403  0BB0  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  3404  0BB1  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3405  0BB2  00E0               	movwf	(robotTurnSpeed@temp1)
  3406  0BB3  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3407  0BB4  00E1               	movwf	(robotTurnSpeed@temp1+1)
  3408                           	line	189
  3409                           	
  3410  0BB5                     l11432:	
  3411                           ;robot.c: 189: temp1 = temp1 << 8;
  3412  0BB5  0861               	movf	(robotTurnSpeed@temp1+1),w
  3413  0BB6  00DE               	movwf	(??_robotTurnSpeed+0)+0+1
  3414  0BB7  0860               	movf	(robotTurnSpeed@temp1),w
  3415  0BB8  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3416  0BB9  085D               	movf	(??_robotTurnSpeed+0)+0,w
  3417  0BBA  00DE               	movwf	(??_robotTurnSpeed+0)+1
  3418  0BBB  01DD               	clrf	(??_robotTurnSpeed+0)+0
  3419  0BBC  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3420  0BBD  00E0               	movwf	(robotTurnSpeed@temp1)
  3421  0BBE  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3422  0BBF  00E1               	movwf	(robotTurnSpeed@temp1+1)
  3423                           	line	190
  3424                           	
  3425  0BC0                     l11434:	
  3426                           ;robot.c: 190: temp1 += AngleLowByte;
  3427  0BC0  1683               	bsf	status, 5	;RP0=1, select bank1
  3428  0BC1  1303               	bcf	status, 6	;RP1=0, select bank1
  3429  0BC2  0847               	movf	(_AngleLowByte)^080h,w	;volatile
  3430  0BC3  1283               	bcf	status, 5	;RP0=0, select bank0
  3431  0BC4  1303               	bcf	status, 6	;RP1=0, select bank0
  3432  0BC5  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3433  0BC6  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  3434  0BC7  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3435  0BC8  07E0               	addwf	(robotTurnSpeed@temp1),f
  3436  0BC9  1803               	skipnc
  3437  0BCA  0AE1               	incf	(robotTurnSpeed@temp1+1),f
  3438  0BCB  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3439  0BCC  07E1               	addwf	(robotTurnSpeed@temp1+1),f
  3440                           	line	191
  3441                           	
  3442  0BCD                     l11436:	
  3443                           ;robot.c: 191: angleTurned += temp1;
  3444  0BCD  0860               	movf	(robotTurnSpeed@temp1),w
  3445  0BCE  1683               	bsf	status, 5	;RP0=1, select bank1
  3446  0BCF  1303               	bcf	status, 6	;RP1=0, select bank1
  3447  0BD0  07B8               	addwf	(_angleTurned)^080h,f
  3448  0BD1  1803               	skipnc
  3449  0BD2  0AB9               	incf	(_angleTurned+1)^080h,f
  3450  0BD3  1283               	bcf	status, 5	;RP0=0, select bank0
  3451  0BD4  1303               	bcf	status, 6	;RP1=0, select bank0
  3452  0BD5  0861               	movf	(robotTurnSpeed@temp1+1),w
  3453  0BD6  1683               	bsf	status, 5	;RP0=1, select bank1
  3454  0BD7  1303               	bcf	status, 6	;RP1=0, select bank1
  3455  0BD8  07B9               	addwf	(_angleTurned+1)^080h,f
  3456                           	line	192
  3457                           	
  3458  0BD9                     l11438:	
  3459                           ;robot.c: 192: UpdateDisplay();
  3460  0BD9  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  158A         
  3461  0BDE  2BDF               	goto	l11440
  3462                           	line	193
  3463                           	
  3464  0BDF                     l6032:	
  3465                           	line	180
  3466                           	
  3467  0BDF                     l11440:	
  3468  0BDF  1283               	bcf	status, 5	;RP0=0, select bank0
  3469  0BE0  1303               	bcf	status, 6	;RP1=0, select bank0
  3470  0BE1  085A               	movf	(robotTurnSpeed@angle+1),w
  3471  0BE2  01A7               	clrf	(?_abs+1)
  3472  0BE3  07A7               	addwf	(?_abs+1)
  3473  0BE4  0859               	movf	(robotTurnSpeed@angle),w
  3474  0BE5  01A6               	clrf	(?_abs)
  3475  0BE6  07A6               	addwf	(?_abs)
  3476                           
  3477  0BE7  160A  118A  2620   	fcall	_abs
              120A  158A         
  3478  0BEC  1283               	bcf	status, 5	;RP0=0, select bank0
  3479  0BED  1303               	bcf	status, 6	;RP1=0, select bank0
  3480  0BEE  0826               	movf	(0+?_abs),w
  3481  0BEF  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3482  0BF0  0827               	movf	(1+?_abs),w
  3483  0BF1  00DE               	movwf	((??_robotTurnSpeed+0)+0+1)
  3484  0BF2  1683               	bsf	status, 5	;RP0=1, select bank1
  3485  0BF3  1303               	bcf	status, 6	;RP1=0, select bank1
  3486  0BF4  0839               	movf	(_angleTurned+1)^080h,w
  3487  0BF5  1283               	bcf	status, 5	;RP0=0, select bank0
  3488  0BF6  1303               	bcf	status, 6	;RP1=0, select bank0
  3489  0BF7  01A7               	clrf	(?_abs+1)
  3490  0BF8  07A7               	addwf	(?_abs+1)
  3491  0BF9  1683               	bsf	status, 5	;RP0=1, select bank1
  3492  0BFA  1303               	bcf	status, 6	;RP1=0, select bank1
  3493  0BFB  0838               	movf	(_angleTurned)^080h,w
  3494  0BFC  1283               	bcf	status, 5	;RP0=0, select bank0
  3495  0BFD  1303               	bcf	status, 6	;RP1=0, select bank0
  3496  0BFE  01A6               	clrf	(?_abs)
  3497  0BFF  07A6               	addwf	(?_abs)
  3498                           
  3499  0C00  160A  118A  2620   	fcall	_abs
              120A  158A         
  3500  0C05  1283               	bcf	status, 5	;RP0=0, select bank0
  3501  0C06  1303               	bcf	status, 6	;RP1=0, select bank0
  3502  0C07  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3503  0C08  3A80               	xorlw	80h
  3504  0C09  00DF               	movwf	(??_robotTurnSpeed+2)+0
  3505  0C0A  0827               	movf	(1+(?_abs)),w
  3506  0C0B  3A80               	xorlw	80h
  3507  0C0C  025F               	subwf	(??_robotTurnSpeed+2)+0,w
  3508  0C0D  1D03               	skipz
  3509  0C0E  2C11               	goto	u5485
  3510  0C0F  0826               	movf	(0+(?_abs)),w
  3511  0C10  025D               	subwf	0+(??_robotTurnSpeed+0)+0,w
  3512  0C11                     u5485:
  3513                           
  3514  0C11  1803               	skipnc
  3515  0C12  2C14               	goto	u5481
  3516  0C13  2C15               	goto	u5480
  3517  0C14                     u5481:
  3518  0C14  2B9C               	goto	l11424
  3519  0C15                     u5480:
  3520  0C15  2C16               	goto	l11442
  3521                           	
  3522  0C16                     l6035:	
  3523                           	line	195
  3524                           	
  3525  0C16                     l11442:	
  3526                           ;robot.c: 193: }
  3527                           ;robot.c: 195: robotTurn(0);
  3528  0C16  3000               	movlw	low(0)
  3529  0C17  1283               	bcf	status, 5	;RP0=0, select bank0
  3530  0C18  1303               	bcf	status, 6	;RP1=0, select bank0
  3531  0C19  00A2               	movwf	(?_robotTurn)
  3532  0C1A  3000               	movlw	high(0)
  3533  0C1B  00A3               	movwf	((?_robotTurn))+1
  3534  0C1C  120A  158A  210F   	fcall	_robotTurn
              120A  158A         
  3535                           	line	196
  3536                           	
  3537  0C21                     l6036:	
  3538  0C21  0008               	return
  3539                           	opt stack 0
  3540                           GLOBAL	__end_of_robotTurnSpeed
  3541  0C22                     	__end_of_robotTurnSpeed:
  3542 ;; =============== function _robotTurnSpeed ends ============
  3543                           
  3544                           	signat	_robotTurnSpeed,8312
  3545                           	global	_scan360
  3546                           psect	text1075,local,class=CODE,delta=2
  3547                           global __ptext1075
  3548  09F9                     __ptext1075:
  3549                           
  3550 ;; *************** function _scan360 *****************
  3551 ;; Defined at:
  3552 ;;		line 359 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  steps           2   63[BANK0 ] int 
  3557 ;;  lowestSteps     2   61[BANK0 ] int 
  3558 ;;  lowestVal       2   59[BANK0 ] int 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  2   57[BANK0 ] int 
  3561 ;; Registers used:
  3562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3568 ;;      Params:         0       2       0       0       0
  3569 ;;      Locals:         0       6       0       0       0
  3570 ;;      Temps:          0       0       0       0       0
  3571 ;;      Totals:         0       8       0       0       0
  3572 ;;Total ram usage:        8 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    7
  3575 ;; This function calls:
  3576 ;;		_readAvgDistance
  3577 ;;		_rotate
  3578 ;;		_UpdateDisplay
  3579 ;; This function is called by:
  3580 ;;		_main
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           psect	text1075
  3584                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3585                           	line	359
  3586                           	global	__size_of_scan360
  3587  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  3588                           	
  3589  09F9                     _scan360:	
  3590                           	opt	stack 0
  3591                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3592                           	line	360
  3593                           	
  3594  09F9                     l11392:	
  3595                           ;Main.c: 360: int lowestVal = 0, lowestSteps = 0;
  3596  09F9  1283               	bcf	status, 5	;RP0=0, select bank0
  3597  09FA  1303               	bcf	status, 6	;RP1=0, select bank0
  3598  09FB  01DB               	clrf	(scan360@lowestVal)
  3599  09FC  01DC               	clrf	(scan360@lowestVal+1)
  3600  09FD  01DD               	clrf	(scan360@lowestSteps)
  3601  09FE  01DE               	clrf	(scan360@lowestSteps+1)
  3602                           	line	362
  3603                           ;Main.c: 362: for (int steps = 0; steps < 200; steps+= 2)
  3604  09FF  01DF               	clrf	(scan360@steps)
  3605  0A00  01E0               	clrf	(scan360@steps+1)
  3606                           	
  3607  0A01                     l11394:	
  3608  0A01  0860               	movf	(scan360@steps+1),w
  3609  0A02  3A80               	xorlw	80h
  3610  0A03  00FF               	movwf	btemp+1
  3611  0A04  3080               	movlw	(high(0C8h))^80h
  3612  0A05  027F               	subwf	btemp+1,w
  3613  0A06  1D03               	skipz
  3614  0A07  2A0A               	goto	u5435
  3615  0A08  30C8               	movlw	low(0C8h)
  3616  0A09  025F               	subwf	(scan360@steps),w
  3617  0A0A                     u5435:
  3618                           
  3619  0A0A  1C03               	skipc
  3620  0A0B  2A0D               	goto	u5431
  3621  0A0C  2A0E               	goto	u5430
  3622  0A0D                     u5431:
  3623  0A0D  2A10               	goto	l11398
  3624  0A0E                     u5430:
  3625  0A0E  2A69               	goto	l11416
  3626                           	
  3627  0A0F                     l11396:	
  3628  0A0F  2A69               	goto	l11416
  3629                           	line	363
  3630                           	
  3631  0A10                     l2287:	
  3632                           	line	364
  3633                           	
  3634  0A10                     l11398:	
  3635                           ;Main.c: 363: {
  3636                           ;Main.c: 364: readAvgDistance();
  3637  0A10  120A  158A  2183   	fcall	_readAvgDistance
              120A  158A         
  3638                           	line	365
  3639                           	
  3640  0A15                     l11400:	
  3641                           ;Main.c: 365: if (adcVal > lowestVal)
  3642  0A15  1683               	bsf	status, 5	;RP0=1, select bank1
  3643  0A16  1303               	bcf	status, 6	;RP1=0, select bank1
  3644  0A17  0837               	movf	(_adcVal+1)^080h,w	;volatile
  3645  0A18  1283               	bcf	status, 5	;RP0=0, select bank0
  3646  0A19  1303               	bcf	status, 6	;RP1=0, select bank0
  3647  0A1A  025C               	subwf	(scan360@lowestVal+1),w
  3648  0A1B  1D03               	skipz
  3649  0A1C  2A23               	goto	u5445
  3650  0A1D  1683               	bsf	status, 5	;RP0=1, select bank1
  3651  0A1E  1303               	bcf	status, 6	;RP1=0, select bank1
  3652  0A1F  0836               	movf	(_adcVal)^080h,w	;volatile
  3653  0A20  1283               	bcf	status, 5	;RP0=0, select bank0
  3654  0A21  1303               	bcf	status, 6	;RP1=0, select bank0
  3655  0A22  025B               	subwf	(scan360@lowestVal),w
  3656  0A23                     u5445:
  3657  0A23  1803               	skipnc
  3658  0A24  2A26               	goto	u5441
  3659  0A25  2A27               	goto	u5440
  3660  0A26                     u5441:
  3661  0A26  2A3C               	goto	l11404
  3662  0A27                     u5440:
  3663                           	line	367
  3664                           	
  3665  0A27                     l11402:	
  3666                           ;Main.c: 366: {
  3667                           ;Main.c: 367: lowestVal = adcVal;
  3668  0A27  1683               	bsf	status, 5	;RP0=1, select bank1
  3669  0A28  1303               	bcf	status, 6	;RP1=0, select bank1
  3670  0A29  0837               	movf	(_adcVal+1)^080h,w	;volatile
  3671  0A2A  1283               	bcf	status, 5	;RP0=0, select bank0
  3672  0A2B  1303               	bcf	status, 6	;RP1=0, select bank0
  3673  0A2C  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  3674  0A2D  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  3675  0A2E  1683               	bsf	status, 5	;RP0=1, select bank1
  3676  0A2F  1303               	bcf	status, 6	;RP1=0, select bank1
  3677  0A30  0836               	movf	(_adcVal)^080h,w	;volatile
  3678  0A31  1283               	bcf	status, 5	;RP0=0, select bank0
  3679  0A32  1303               	bcf	status, 6	;RP1=0, select bank0
  3680  0A33  01DB               	clrf	(scan360@lowestVal)	;volatile
  3681  0A34  07DB               	addwf	(scan360@lowestVal)	;volatile
  3682                           
  3683                           	line	368
  3684                           ;Main.c: 368: lowestSteps = steps;
  3685  0A35  0860               	movf	(scan360@steps+1),w
  3686  0A36  01DE               	clrf	(scan360@lowestSteps+1)
  3687  0A37  07DE               	addwf	(scan360@lowestSteps+1)
  3688  0A38  085F               	movf	(scan360@steps),w
  3689  0A39  01DD               	clrf	(scan360@lowestSteps)
  3690  0A3A  07DD               	addwf	(scan360@lowestSteps)
  3691                           
  3692  0A3B  2A3C               	goto	l11404
  3693                           	line	370
  3694                           	
  3695  0A3C                     l2289:	
  3696                           	line	371
  3697                           	
  3698  0A3C                     l11404:	
  3699                           ;Main.c: 370: }
  3700                           ;Main.c: 371: rotate(2, 1);
  3701  0A3C  3002               	movlw	low(02h)
  3702  0A3D  00A3               	movwf	(?_rotate)
  3703  0A3E  3000               	movlw	high(02h)
  3704  0A3F  00A4               	movwf	((?_rotate))+1
  3705  0A40  01A5               	clrf	0+(?_rotate)+02h
  3706  0A41  1403               	bsf	status,0
  3707  0A42  0DA5               	rlf	0+(?_rotate)+02h,f
  3708  0A43  160A  118A  27B0   	fcall	_rotate
              120A  158A         
  3709                           	line	373
  3710                           	
  3711  0A48                     l11406:	
  3712                           ;Main.c: 373: if (RTC_FLAG_250MS == 1)
  3713  0A48  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3714  0A49  2A4B               	goto	u5451
  3715  0A4A  2A4C               	goto	u5450
  3716  0A4B                     u5451:
  3717  0A4B  2A53               	goto	l11412
  3718  0A4C                     u5450:
  3719                           	line	375
  3720                           	
  3721  0A4C                     l11408:	
  3722                           ;Main.c: 374: {
  3723                           ;Main.c: 375: RTC_FLAG_250MS = 0;
  3724  0A4C  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3725                           	line	376
  3726                           	
  3727  0A4D                     l11410:	
  3728                           ;Main.c: 376: UpdateDisplay();
  3729  0A4D  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  158A         
  3730  0A52  2A53               	goto	l11412
  3731                           	line	377
  3732                           	
  3733  0A53                     l2290:	
  3734                           	line	362
  3735                           	
  3736  0A53                     l11412:	
  3737  0A53  3002               	movlw	low(02h)
  3738  0A54  1283               	bcf	status, 5	;RP0=0, select bank0
  3739  0A55  1303               	bcf	status, 6	;RP1=0, select bank0
  3740  0A56  07DF               	addwf	(scan360@steps),f
  3741  0A57  1803               	skipnc
  3742  0A58  0AE0               	incf	(scan360@steps+1),f
  3743  0A59  3000               	movlw	high(02h)
  3744  0A5A  07E0               	addwf	(scan360@steps+1),f
  3745                           	
  3746  0A5B                     l11414:	
  3747  0A5B  0860               	movf	(scan360@steps+1),w
  3748  0A5C  3A80               	xorlw	80h
  3749  0A5D  00FF               	movwf	btemp+1
  3750  0A5E  3080               	movlw	(high(0C8h))^80h
  3751  0A5F  027F               	subwf	btemp+1,w
  3752  0A60  1D03               	skipz
  3753  0A61  2A64               	goto	u5465
  3754  0A62  30C8               	movlw	low(0C8h)
  3755  0A63  025F               	subwf	(scan360@steps),w
  3756  0A64                     u5465:
  3757                           
  3758  0A64  1C03               	skipc
  3759  0A65  2A67               	goto	u5461
  3760  0A66  2A68               	goto	u5460
  3761  0A67                     u5461:
  3762  0A67  2A10               	goto	l11398
  3763  0A68                     u5460:
  3764  0A68  2A69               	goto	l11416
  3765                           	
  3766  0A69                     l2288:	
  3767                           	line	380
  3768                           	
  3769  0A69                     l11416:	
  3770                           ;Main.c: 377: }
  3771                           ;Main.c: 378: }
  3772                           ;Main.c: 380: return lowestSteps;
  3773  0A69  1283               	bcf	status, 5	;RP0=0, select bank0
  3774  0A6A  1303               	bcf	status, 6	;RP1=0, select bank0
  3775  0A6B  085E               	movf	(scan360@lowestSteps+1),w
  3776  0A6C  01DA               	clrf	(?_scan360+1)
  3777  0A6D  07DA               	addwf	(?_scan360+1)
  3778  0A6E  085D               	movf	(scan360@lowestSteps),w
  3779  0A6F  01D9               	clrf	(?_scan360)
  3780  0A70  07D9               	addwf	(?_scan360)
  3781                           
  3782  0A71  2A72               	goto	l2291
  3783                           	
  3784  0A72                     l11418:	
  3785                           	line	381
  3786                           	
  3787  0A72                     l2291:	
  3788  0A72  0008               	return
  3789                           	opt stack 0
  3790                           GLOBAL	__end_of_scan360
  3791  0A73                     	__end_of_scan360:
  3792 ;; =============== function _scan360 ends ============
  3793                           
  3794                           	signat	_scan360,90
  3795                           	global	_calibrateIR
  3796                           psect	text1076,local,class=CODE,delta=2
  3797                           global __ptext1076
  3798  0849                     __ptext1076:
  3799                           
  3800 ;; *************** function _calibrateIR *****************
  3801 ;; Defined at:
  3802 ;;		line 278 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;		None               void
  3809 ;; Registers used:
  3810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3816 ;;      Params:         0       0       0       0       0
  3817 ;;      Locals:         0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0
  3819 ;;      Totals:         0       0       0       0       0
  3820 ;;Total ram usage:        0 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    6
  3823 ;; This function calls:
  3824 ;;		_rotate
  3825 ;;		_UpdateDisplay
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           psect	text1076
  3831                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3832                           	line	278
  3833                           	global	__size_of_calibrateIR
  3834  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  3835                           	
  3836  0849                     _calibrateIR:	
  3837                           	opt	stack 1
  3838                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3839                           	line	279
  3840                           	
  3841  0849                     l11362:	
  3842                           ;Main.c: 279: currentMenu = 1;
  3843  0849  1683               	bsf	status, 5	;RP0=1, select bank1
  3844  084A  1303               	bcf	status, 6	;RP1=0, select bank1
  3845  084B  01D1               	clrf	(_currentMenu)^080h	;volatile
  3846  084C  1403               	bsf	status,0
  3847  084D  0DD1               	rlf	(_currentMenu)^080h,f	;volatile
  3848                           	line	280
  3849                           	
  3850  084E                     l11364:	
  3851                           ;Main.c: 280: rotate(8, 0);
  3852  084E  3008               	movlw	low(08h)
  3853  084F  1283               	bcf	status, 5	;RP0=0, select bank0
  3854  0850  1303               	bcf	status, 6	;RP1=0, select bank0
  3855  0851  00A3               	movwf	(?_rotate)
  3856  0852  3000               	movlw	high(08h)
  3857  0853  00A4               	movwf	((?_rotate))+1
  3858  0854  01A5               	clrf	0+(?_rotate)+02h
  3859  0855  160A  118A  27B0   	fcall	_rotate
              120A  158A         
  3860  085A  285B               	goto	l11366
  3861                           	line	281
  3862                           ;Main.c: 281: while (1)
  3863                           	
  3864  085B                     l2257:	
  3865                           	line	283
  3866                           	
  3867  085B                     l11366:	
  3868                           ;Main.c: 282: {
  3869                           ;Main.c: 283: if (RTC_FLAG_250MS == 1)
  3870  085B  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3871  085C  285E               	goto	u5421
  3872  085D  285F               	goto	u5420
  3873  085E                     u5421:
  3874  085E  2893               	goto	l11390
  3875  085F                     u5420:
  3876                           	line	285
  3877                           	
  3878  085F                     l11368:	
  3879                           ;Main.c: 284: {
  3880                           ;Main.c: 285: RTC_FLAG_250MS = 0;
  3881  085F  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3882                           	line	286
  3883                           	
  3884  0860                     l11370:	
  3885                           ;Main.c: 286: UpdateDisplay();
  3886  0860  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  158A         
  3887  0865  2893               	goto	l11390
  3888                           	line	287
  3889                           	
  3890  0866                     l2258:	
  3891                           	line	288
  3892                           ;Main.c: 287: }
  3893                           ;Main.c: 288: switch (buttonPressed)
  3894  0866  2893               	goto	l11390
  3895                           	line	290
  3896                           ;Main.c: 289: {
  3897                           ;Main.c: 290: case 1:
  3898                           	
  3899  0867                     l2260:	
  3900                           	line	291
  3901                           ;Main.c: 291: buttonPressed = 0;
  3902  0867  01FD               	clrf	(_buttonPressed)	;volatile
  3903                           	line	292
  3904                           ;Main.c: 292: break;
  3905  0868  285B               	goto	l11366
  3906                           	line	293
  3907                           ;Main.c: 293: case 2:
  3908                           	
  3909  0869                     l2262:	
  3910                           	line	294
  3911                           ;Main.c: 294: buttonPressed = 0;
  3912  0869  01FD               	clrf	(_buttonPressed)	;volatile
  3913                           	line	295
  3914                           ;Main.c: 295: break;
  3915  086A  285B               	goto	l11366
  3916                           	line	296
  3917                           ;Main.c: 296: case 3:
  3918                           	
  3919  086B                     l2263:	
  3920                           	line	297
  3921                           	
  3922  086B                     l11372:	
  3923                           ;Main.c: 297: rotate(1, 1);
  3924  086B  3001               	movlw	low(01h)
  3925  086C  1283               	bcf	status, 5	;RP0=0, select bank0
  3926  086D  1303               	bcf	status, 6	;RP1=0, select bank0
  3927  086E  00A3               	movwf	(?_rotate)
  3928  086F  3000               	movlw	high(01h)
  3929  0870  00A4               	movwf	((?_rotate))+1
  3930  0871  01A5               	clrf	0+(?_rotate)+02h
  3931  0872  1403               	bsf	status,0
  3932  0873  0DA5               	rlf	0+(?_rotate)+02h,f
  3933  0874  160A  118A  27B0   	fcall	_rotate
              120A  158A         
  3934                           	line	298
  3935                           	
  3936  0879                     l11374:	
  3937                           ;Main.c: 298: buttonPressed = 0;
  3938  0879  01FD               	clrf	(_buttonPressed)	;volatile
  3939                           	line	299
  3940                           ;Main.c: 299: break;
  3941  087A  285B               	goto	l11366
  3942                           	line	300
  3943                           ;Main.c: 300: case 4:
  3944                           	
  3945  087B                     l2264:	
  3946                           	line	301
  3947                           	
  3948  087B                     l11376:	
  3949                           ;Main.c: 301: rotate(1, 0);
  3950  087B  3001               	movlw	low(01h)
  3951  087C  1283               	bcf	status, 5	;RP0=0, select bank0
  3952  087D  1303               	bcf	status, 6	;RP1=0, select bank0
  3953  087E  00A3               	movwf	(?_rotate)
  3954  087F  3000               	movlw	high(01h)
  3955  0880  00A4               	movwf	((?_rotate))+1
  3956  0881  01A5               	clrf	0+(?_rotate)+02h
  3957  0882  160A  118A  27B0   	fcall	_rotate
              120A  158A         
  3958                           	line	302
  3959                           	
  3960  0887                     l11378:	
  3961                           ;Main.c: 302: buttonPressed = 0;
  3962  0887  01FD               	clrf	(_buttonPressed)	;volatile
  3963                           	line	303
  3964                           ;Main.c: 303: break;
  3965  0888  285B               	goto	l11366
  3966                           	line	304
  3967                           ;Main.c: 304: case 5:
  3968                           	
  3969  0889                     l2265:	
  3970                           	line	305
  3971                           	
  3972  0889                     l11380:	
  3973                           ;Main.c: 305: totalSteps = 0;
  3974  0889  1683               	bsf	status, 5	;RP0=1, select bank1
  3975  088A  1303               	bcf	status, 6	;RP1=0, select bank1
  3976  088B  01C4               	clrf	(_totalSteps)^080h
  3977  088C  01C5               	clrf	(_totalSteps+1)^080h
  3978                           	line	306
  3979                           	
  3980  088D                     l11382:	
  3981                           ;Main.c: 306: buttonPressed = 0;
  3982  088D  01FD               	clrf	(_buttonPressed)	;volatile
  3983                           	line	307
  3984                           	
  3985  088E                     l11384:	
  3986                           ;Main.c: 307: currentMenu = 0;
  3987  088E  01D1               	clrf	(_currentMenu)^080h	;volatile
  3988  088F  28A6               	goto	l2266
  3989                           	line	308
  3990                           	
  3991  0890                     l11386:	
  3992                           ;Main.c: 308: return;
  3993  0890  28A6               	goto	l2266
  3994                           	line	309
  3995                           ;Main.c: 309: default:
  3996                           	
  3997  0891                     l2267:	
  3998                           	line	310
  3999                           ;Main.c: 310: break;
  4000  0891  285B               	goto	l11366
  4001                           	line	311
  4002                           	
  4003  0892                     l11388:	
  4004                           ;Main.c: 311: }
  4005  0892  285B               	goto	l11366
  4006                           	line	288
  4007                           	
  4008  0893                     l2259:	
  4009                           	
  4010  0893                     l11390:	
  4011  0893  087D               	movf	(_buttonPressed),w	;volatile
  4012                           	; Switch size 1, requested type "space"
  4013                           ; Number of cases is 5, Range of values is 1 to 5
  4014                           ; switch strategies available:
  4015                           ; Name         Instructions Cycles
  4016                           ; simple_byte           16     9 (average)
  4017                           ; direct_byte           26    11 (fixed)
  4018                           ; jumptable            263     9 (fixed)
  4019                           ;	Chosen strategy is simple_byte
  4020                           
  4021                           	opt asmopt_off
  4022  0894  3A01               	xorlw	1^0	; case 1
  4023  0895  1903               	skipnz
  4024  0896  2867               	goto	l2260
  4025  0897  3A03               	xorlw	2^1	; case 2
  4026  0898  1903               	skipnz
  4027  0899  2869               	goto	l2262
  4028  089A  3A01               	xorlw	3^2	; case 3
  4029  089B  1903               	skipnz
  4030  089C  286B               	goto	l11372
  4031  089D  3A07               	xorlw	4^3	; case 4
  4032  089E  1903               	skipnz
  4033  089F  287B               	goto	l11376
  4034  08A0  3A01               	xorlw	5^4	; case 5
  4035  08A1  1903               	skipnz
  4036  08A2  2889               	goto	l11380
  4037  08A3  285B               	goto	l11366
  4038                           	opt asmopt_on
  4039                           
  4040                           	line	311
  4041                           	
  4042  08A4                     l2261:	
  4043  08A4  285B               	goto	l11366
  4044                           	line	312
  4045                           	
  4046  08A5                     l2268:	
  4047                           	line	281
  4048  08A5  285B               	goto	l11366
  4049                           	
  4050  08A6                     l2269:	
  4051                           	line	313
  4052                           	
  4053  08A6                     l2266:	
  4054  08A6  0008               	return
  4055                           	opt stack 0
  4056                           GLOBAL	__end_of_calibrateIR
  4057  08A7                     	__end_of_calibrateIR:
  4058 ;; =============== function _calibrateIR ends ============
  4059                           
  4060                           	signat	_calibrateIR,88
  4061                           	global	_UpdateDisplay
  4062                           psect	text1077,local,class=CODE,delta=2
  4063                           global __ptext1077
  4064  04CA                     __ptext1077:
  4065                           
  4066 ;; *************** function _UpdateDisplay *****************
  4067 ;; Defined at:
  4068 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  4073 ;; Return value:  Size  Location     Type
  4074 ;;		None               void
  4075 ;; Registers used:
  4076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4082 ;;      Params:         0       0       0       0       0
  4083 ;;      Locals:         0      16       0       0       0
  4084 ;;      Temps:          0       4       0       0       0
  4085 ;;      Totals:         0      20       0       0       0
  4086 ;;Total ram usage:       20 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    5
  4089 ;; This function calls:
  4090 ;;		_lcd_write_control
  4091 ;;		_sprintf
  4092 ;;		_lcd_set_cursor
  4093 ;;		_lcd_write_string
  4094 ;;		___awmod
  4095 ;; This function is called by:
  4096 ;;		_main
  4097 ;;		_calibrateIR
  4098 ;;		_ChargeMode
  4099 ;;		_scan360
  4100 ;;		_robotMoveSpeed
  4101 ;;		_robotTurnSpeed
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           psect	text1077
  4105                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  4106                           	line	236
  4107                           	global	__size_of_UpdateDisplay
  4108  015F                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4109                           	
  4110  04CA                     _UpdateDisplay:	
  4111                           	opt	stack 1
  4112                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4113                           	line	237
  4114                           	
  4115  04CA                     l11318:	
  4116                           ;HMI.c: 237: char LCDOutput[16] = "";
  4117  04CA  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4118  04CB  0084               	movwf	fsr0
  4119  04CC  3090               	movlw	low(UpdateDisplay@F1241)
  4120  04CD  1283               	bcf	status, 5	;RP0=0, select bank0
  4121  04CE  1303               	bcf	status, 6	;RP1=0, select bank0
  4122  04CF  00C5               	movwf	(??_UpdateDisplay+0)+0
  4123  04D0  0804               	movf	fsr0,w
  4124  04D1  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  4125  04D2  3010               	movlw	16
  4126  04D3  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  4127  04D4                     u5400:
  4128  04D4  0845               	movf	(??_UpdateDisplay+0)+0,w
  4129  04D5  0084               	movwf	fsr0
  4130  04D6  1783               	bsf	status, 7	;select IRP bank3
  4131                           	
  4132  04D7  0800               	movf	indf,w
  4133  04D8  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  4134  04D9  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  4135  04DA  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  4136  04DB  0084               	movwf	fsr0
  4137  04DC  1383               	bcf	status, 7	;select IRP bank0
  4138                           	
  4139  04DD  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  4140  04DE  0080               	movwf	indf
  4141  04DF  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  4142  04E0  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4143  04E1  2CD4               	goto	u5400
  4144                           	line	238
  4145                           ;HMI.c: 238: switch (currentMenu)
  4146  04E2  2E1B               	goto	l11360
  4147                           	line	240
  4148                           ;HMI.c: 239: {
  4149                           ;HMI.c: 240: case 0:
  4150                           	
  4151  04E3                     l4529:	
  4152                           	line	241
  4153                           	
  4154  04E3                     l11320:	
  4155                           ;HMI.c: 241: lcd_write_control(0b00000001);
  4156  04E3  3001               	movlw	(01h)
  4157  04E4  160A  118A  23CA   	fcall	_lcd_write_control
              120A  118A         
  4158                           	line	242
  4159                           	
  4160  04E9                     l11322:	
  4161                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",IRdistance, angleTurned);
  4162  04E9  302B               	movlw	((STR_13-__stringbase))&0ffh
  4163  04EA  1283               	bcf	status, 5	;RP0=0, select bank0
  4164  04EB  1303               	bcf	status, 6	;RP1=0, select bank0
  4165  04EC  00C5               	movwf	(??_UpdateDisplay+0)+0
  4166  04ED  0845               	movf	(??_UpdateDisplay+0)+0,w
  4167  04EE  00B4               	movwf	(?_sprintf)
  4168  04EF  1683               	bsf	status, 5	;RP0=1, select bank1
  4169  04F0  1303               	bcf	status, 6	;RP1=0, select bank1
  4170  04F1  0831               	movf	(_IRdistance+1)^080h,w	;volatile
  4171  04F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4172  04F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4173  04F4  01B6               	clrf	1+(?_sprintf)+01h
  4174  04F5  07B6               	addwf	1+(?_sprintf)+01h
  4175  04F6  1683               	bsf	status, 5	;RP0=1, select bank1
  4176  04F7  1303               	bcf	status, 6	;RP1=0, select bank1
  4177  04F8  0830               	movf	(_IRdistance)^080h,w	;volatile
  4178  04F9  1283               	bcf	status, 5	;RP0=0, select bank0
  4179  04FA  1303               	bcf	status, 6	;RP1=0, select bank0
  4180  04FB  01B5               	clrf	0+(?_sprintf)+01h
  4181  04FC  07B5               	addwf	0+(?_sprintf)+01h
  4182                           
  4183  04FD  1683               	bsf	status, 5	;RP0=1, select bank1
  4184  04FE  1303               	bcf	status, 6	;RP1=0, select bank1
  4185  04FF  0839               	movf	(_angleTurned+1)^080h,w
  4186  0500  1283               	bcf	status, 5	;RP0=0, select bank0
  4187  0501  1303               	bcf	status, 6	;RP1=0, select bank0
  4188  0502  01B8               	clrf	1+(?_sprintf)+03h
  4189  0503  07B8               	addwf	1+(?_sprintf)+03h
  4190  0504  1683               	bsf	status, 5	;RP0=1, select bank1
  4191  0505  1303               	bcf	status, 6	;RP1=0, select bank1
  4192  0506  0838               	movf	(_angleTurned)^080h,w
  4193  0507  1283               	bcf	status, 5	;RP0=0, select bank0
  4194  0508  1303               	bcf	status, 6	;RP1=0, select bank0
  4195  0509  01B7               	clrf	0+(?_sprintf)+03h
  4196  050A  07B7               	addwf	0+(?_sprintf)+03h
  4197                           
  4198  050B  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4199  050C  120A  118A  2629   	fcall	_sprintf
              120A  118A         
  4200                           	line	243
  4201                           	
  4202  0511                     l11324:	
  4203                           ;HMI.c: 243: lcd_set_cursor(0x00);
  4204  0511  3000               	movlw	(0)
  4205  0512  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4206                           	line	244
  4207                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  4208  0517  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  4209  0518  1283               	bcf	status, 5	;RP0=0, select bank0
  4210  0519  1303               	bcf	status, 6	;RP1=0, select bank0
  4211  051A  00A7               	movwf	(?_lcd_write_string)
  4212  051B  3000               	movlw	(0x0/2)
  4213  051C  00A8               	movwf	(?_lcd_write_string+1)
  4214  051D  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4215                           	line	245
  4216                           	
  4217  0522                     l11326:	
  4218                           ;HMI.c: 245: lcd_set_cursor(0x40);
  4219  0522  3040               	movlw	(040h)
  4220  0523  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4221                           	line	246
  4222                           	
  4223  0528                     l11328:	
  4224                           ;HMI.c: 246: if (pos > 0)
  4225  0528  1683               	bsf	status, 5	;RP0=1, select bank1
  4226  0529  1303               	bcf	status, 6	;RP1=0, select bank1
  4227  052A  0841               	movf	(_pos+1)^080h,w
  4228  052B  3A80               	xorlw	80h
  4229  052C  00FF               	movwf	btemp+1
  4230  052D  3080               	movlw	(high(01h))^80h
  4231  052E  027F               	subwf	btemp+1,w
  4232  052F  1D03               	skipz
  4233  0530  2D33               	goto	u5415
  4234  0531  3001               	movlw	low(01h)
  4235  0532  0240               	subwf	(_pos)^080h,w
  4236  0533                     u5415:
  4237                           
  4238  0533  1C03               	skipc
  4239  0534  2D36               	goto	u5411
  4240  0535  2D37               	goto	u5410
  4241  0536                     u5411:
  4242  0536  2D4A               	goto	l11332
  4243  0537                     u5410:
  4244                           	line	247
  4245                           	
  4246  0537                     l11330:	
  4247                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  4248  0537  1683               	bsf	status, 5	;RP0=1, select bank1
  4249  0538  1303               	bcf	status, 6	;RP1=0, select bank1
  4250  0539  0840               	movf	(_pos)^080h,w
  4251  053A  3EFF               	addlw	0FFh
  4252  053B  3EE1               	addlw	_shortMenuStrings&0ffh
  4253  053C  0084               	movwf	fsr0
  4254  053D  1383               	bcf	status, 7	;select IRP bank1
  4255  053E  0800               	movf	indf,w
  4256  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  4257  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  4258  0541  00A7               	movwf	(?_lcd_write_string)
  4259  0542  3080               	movlw	80h
  4260  0543  00A8               	movwf	(?_lcd_write_string+1)
  4261  0544  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4262  0549  2D5D               	goto	l11334
  4263                           	line	248
  4264                           	
  4265  054A                     l4530:	
  4266                           	line	249
  4267                           	
  4268  054A                     l11332:	
  4269                           ;HMI.c: 248: else
  4270                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4271  054A  1683               	bsf	status, 5	;RP0=1, select bank1
  4272  054B  1303               	bcf	status, 6	;RP1=0, select bank1
  4273  054C  0840               	movf	(_pos)^080h,w
  4274  054D  3E05               	addlw	05h
  4275  054E  3EE1               	addlw	_shortMenuStrings&0ffh
  4276  054F  0084               	movwf	fsr0
  4277  0550  1383               	bcf	status, 7	;select IRP bank1
  4278  0551  0800               	movf	indf,w
  4279  0552  1283               	bcf	status, 5	;RP0=0, select bank0
  4280  0553  1303               	bcf	status, 6	;RP1=0, select bank0
  4281  0554  00A7               	movwf	(?_lcd_write_string)
  4282  0555  3080               	movlw	80h
  4283  0556  00A8               	movwf	(?_lcd_write_string+1)
  4284  0557  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4285  055C  2D5D               	goto	l11334
  4286                           	
  4287  055D                     l4531:	
  4288                           	line	250
  4289                           	
  4290  055D                     l11334:	
  4291                           ;HMI.c: 250: lcd_set_cursor(0x44);
  4292  055D  3044               	movlw	(044h)
  4293  055E  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4294                           	line	251
  4295                           	
  4296  0563                     l11336:	
  4297                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  4298  0563  1683               	bsf	status, 5	;RP0=1, select bank1
  4299  0564  1303               	bcf	status, 6	;RP1=0, select bank1
  4300  0565  0840               	movf	(_pos)^080h,w
  4301  0566  3EDB               	addlw	_menuStrings&0ffh
  4302  0567  0084               	movwf	fsr0
  4303  0568  1383               	bcf	status, 7	;select IRP bank1
  4304  0569  0800               	movf	indf,w
  4305  056A  1283               	bcf	status, 5	;RP0=0, select bank0
  4306  056B  1303               	bcf	status, 6	;RP1=0, select bank0
  4307  056C  00A7               	movwf	(?_lcd_write_string)
  4308  056D  3080               	movlw	80h
  4309  056E  00A8               	movwf	(?_lcd_write_string+1)
  4310  056F  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4311                           	line	252
  4312                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  4313  0574  304D               	movlw	(04Dh)
  4314  0575  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4315                           	line	253
  4316                           	
  4317  057A                     l11338:	
  4318                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4319  057A  3006               	movlw	low(06h)
  4320  057B  1283               	bcf	status, 5	;RP0=0, select bank0
  4321  057C  1303               	bcf	status, 6	;RP1=0, select bank0
  4322  057D  00A0               	movwf	(?___awmod)
  4323  057E  3000               	movlw	high(06h)
  4324  057F  00A1               	movwf	((?___awmod))+1
  4325  0580  1683               	bsf	status, 5	;RP0=1, select bank1
  4326  0581  1303               	bcf	status, 6	;RP1=0, select bank1
  4327  0582  0840               	movf	(_pos)^080h,w
  4328  0583  3E01               	addlw	low(01h)
  4329  0584  1283               	bcf	status, 5	;RP0=0, select bank0
  4330  0585  1303               	bcf	status, 6	;RP1=0, select bank0
  4331  0586  00A2               	movwf	0+(?___awmod)+02h
  4332  0587  1683               	bsf	status, 5	;RP0=1, select bank1
  4333  0588  1303               	bcf	status, 6	;RP1=0, select bank1
  4334  0589  0841               	movf	(_pos+1)^080h,w
  4335  058A  1803               	skipnc
  4336  058B  3E01               	addlw	1
  4337  058C  3E00               	addlw	high(01h)
  4338  058D  1283               	bcf	status, 5	;RP0=0, select bank0
  4339  058E  1303               	bcf	status, 6	;RP1=0, select bank0
  4340  058F  00A3               	movwf	1+0+(?___awmod)+02h
  4341  0590  120A  158A  20A7   	fcall	___awmod
              120A  118A         
  4342  0595  1283               	bcf	status, 5	;RP0=0, select bank0
  4343  0596  1303               	bcf	status, 6	;RP1=0, select bank0
  4344  0597  0820               	movf	(0+(?___awmod)),w
  4345  0598  3EE1               	addlw	_shortMenuStrings&0ffh
  4346  0599  0084               	movwf	fsr0
  4347  059A  1383               	bcf	status, 7	;select IRP bank1
  4348  059B  0800               	movf	indf,w
  4349  059C  00A7               	movwf	(?_lcd_write_string)
  4350  059D  3080               	movlw	80h
  4351  059E  00A8               	movwf	(?_lcd_write_string+1)
  4352  059F  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4353                           	line	254
  4354                           ;HMI.c: 254: break;
  4355  05A4  2E28               	goto	l4536
  4356                           	line	255
  4357                           ;HMI.c: 255: case 1:
  4358                           	
  4359  05A5                     l4533:	
  4360                           	line	256
  4361                           	
  4362  05A5                     l11340:	
  4363                           ;HMI.c: 256: lcd_write_control(0b00000001);
  4364  05A5  3001               	movlw	(01h)
  4365  05A6  160A  118A  23CA   	fcall	_lcd_write_control
              120A  118A         
  4366                           	line	257
  4367                           ;HMI.c: 257: lcd_set_cursor(0x00);
  4368  05AB  3000               	movlw	(0)
  4369  05AC  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4370                           	line	258
  4371                           	
  4372  05B1                     l11342:	
  4373                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  4374  05B1  301B               	movlw	low((STR_14-__stringbase))
  4375  05B2  1283               	bcf	status, 5	;RP0=0, select bank0
  4376  05B3  1303               	bcf	status, 6	;RP1=0, select bank0
  4377  05B4  00A7               	movwf	(?_lcd_write_string)
  4378  05B5  3080               	movlw	80h
  4379  05B6  00A8               	movwf	(?_lcd_write_string+1)
  4380  05B7  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4381                           	line	259
  4382                           	
  4383  05BC                     l11344:	
  4384                           ;HMI.c: 259: lcd_set_cursor(0x40);
  4385  05BC  3040               	movlw	(040h)
  4386  05BD  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4387                           	line	260
  4388                           ;HMI.c: 260: lcd_write_string("<<<");
  4389  05C2  3082               	movlw	low((STR_15-__stringbase))
  4390  05C3  1283               	bcf	status, 5	;RP0=0, select bank0
  4391  05C4  1303               	bcf	status, 6	;RP1=0, select bank0
  4392  05C5  00A7               	movwf	(?_lcd_write_string)
  4393  05C6  3080               	movlw	80h
  4394  05C7  00A8               	movwf	(?_lcd_write_string+1)
  4395  05C8  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4396                           	line	261
  4397                           	
  4398  05CD                     l11346:	
  4399                           ;HMI.c: 261: lcd_set_cursor(0x44);
  4400  05CD  3044               	movlw	(044h)
  4401  05CE  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4402                           	line	262
  4403                           	
  4404  05D3                     l11348:	
  4405                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  4406  05D3  3076               	movlw	low((STR_16-__stringbase))
  4407  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  4408  05D5  1303               	bcf	status, 6	;RP1=0, select bank0
  4409  05D6  00A7               	movwf	(?_lcd_write_string)
  4410  05D7  3080               	movlw	80h
  4411  05D8  00A8               	movwf	(?_lcd_write_string+1)
  4412  05D9  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4413                           	line	263
  4414                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  4415  05DE  304D               	movlw	(04Dh)
  4416  05DF  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4417                           	line	264
  4418                           	
  4419  05E4                     l11350:	
  4420                           ;HMI.c: 264: lcd_write_string(">>>");
  4421  05E4  3086               	movlw	low((STR_17-__stringbase))
  4422  05E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4423  05E6  1303               	bcf	status, 6	;RP1=0, select bank0
  4424  05E7  00A7               	movwf	(?_lcd_write_string)
  4425  05E8  3080               	movlw	80h
  4426  05E9  00A8               	movwf	(?_lcd_write_string+1)
  4427  05EA  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4428                           	line	265
  4429                           ;HMI.c: 265: break;
  4430  05EF  2E28               	goto	l4536
  4431                           	line	266
  4432                           ;HMI.c: 266: case 2:
  4433                           	
  4434  05F0                     l4534:	
  4435                           	line	267
  4436                           	
  4437  05F0                     l11352:	
  4438                           ;HMI.c: 267: lcd_write_control(0b00000001);
  4439  05F0  3001               	movlw	(01h)
  4440  05F1  160A  118A  23CA   	fcall	_lcd_write_control
              120A  118A         
  4441                           	line	268
  4442                           ;HMI.c: 268: lcd_set_cursor(0x00);
  4443  05F6  3000               	movlw	(0)
  4444  05F7  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4445                           	line	269
  4446                           	
  4447  05FC                     l11354:	
  4448                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  4449  05FC  300B               	movlw	low((STR_18-__stringbase))
  4450  05FD  1283               	bcf	status, 5	;RP0=0, select bank0
  4451  05FE  1303               	bcf	status, 6	;RP1=0, select bank0
  4452  05FF  00A7               	movwf	(?_lcd_write_string)
  4453  0600  3080               	movlw	80h
  4454  0601  00A8               	movwf	(?_lcd_write_string+1)
  4455  0602  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4456                           	line	270
  4457                           	
  4458  0607                     l11356:	
  4459                           ;HMI.c: 270: lcd_set_cursor(0x44);
  4460  0607  3044               	movlw	(044h)
  4461  0608  160A  118A  2378   	fcall	_lcd_set_cursor
              120A  118A         
  4462                           	line	271
  4463                           ;HMI.c: 271: lcd_write_string("  EXIT  ");
  4464  060D  3038               	movlw	low((STR_19-__stringbase))
  4465  060E  1283               	bcf	status, 5	;RP0=0, select bank0
  4466  060F  1303               	bcf	status, 6	;RP1=0, select bank0
  4467  0610  00A7               	movwf	(?_lcd_write_string)
  4468  0611  3080               	movlw	80h
  4469  0612  00A8               	movwf	(?_lcd_write_string+1)
  4470  0613  160A  118A  253B   	fcall	_lcd_write_string
              120A  118A         
  4471                           	line	272
  4472                           ;HMI.c: 272: break;
  4473  0618  2E28               	goto	l4536
  4474                           	line	273
  4475                           ;HMI.c: 273: default:
  4476                           	
  4477  0619                     l4535:	
  4478                           	line	274
  4479                           ;HMI.c: 274: break;
  4480  0619  2E28               	goto	l4536
  4481                           	line	275
  4482                           	
  4483  061A                     l11358:	
  4484                           ;HMI.c: 275: }
  4485  061A  2E28               	goto	l4536
  4486                           	line	238
  4487                           	
  4488  061B                     l4528:	
  4489                           	
  4490  061B                     l11360:	
  4491  061B  1683               	bsf	status, 5	;RP0=1, select bank1
  4492  061C  1303               	bcf	status, 6	;RP1=0, select bank1
  4493  061D  0851               	movf	(_currentMenu)^080h,w	;volatile
  4494                           	; Switch size 1, requested type "space"
  4495                           ; Number of cases is 3, Range of values is 0 to 2
  4496                           ; switch strategies available:
  4497                           ; Name         Instructions Cycles
  4498                           ; simple_byte           10     6 (average)
  4499                           ; direct_byte           17     8 (fixed)
  4500                           ; jumptable            260     6 (fixed)
  4501                           ; rangetable             7     6 (fixed)
  4502                           ; spacedrange           12     9 (fixed)
  4503                           ; locatedrange           3     3 (fixed)
  4504                           ;	Chosen strategy is simple_byte
  4505                           
  4506                           	opt asmopt_off
  4507  061E  3A00               	xorlw	0^0	; case 0
  4508  061F  1903               	skipnz
  4509  0620  2CE3               	goto	l11320
  4510  0621  3A01               	xorlw	1^0	; case 1
  4511  0622  1903               	skipnz
  4512  0623  2DA5               	goto	l11340
  4513  0624  3A03               	xorlw	2^1	; case 2
  4514  0625  1903               	skipnz
  4515  0626  2DF0               	goto	l11352
  4516  0627  2E28               	goto	l4536
  4517                           	opt asmopt_on
  4518                           
  4519                           	line	275
  4520                           	
  4521  0628                     l4532:	
  4522                           	line	276
  4523                           	
  4524  0628                     l4536:	
  4525  0628  0008               	return
  4526                           	opt stack 0
  4527                           GLOBAL	__end_of_UpdateDisplay
  4528  0629                     	__end_of_UpdateDisplay:
  4529 ;; =============== function _UpdateDisplay ends ============
  4530                           
  4531                           	signat	_UpdateDisplay,88
  4532                           	global	_readAvgDistance
  4533                           psect	text1078,local,class=CODE,delta=2
  4534                           global __ptext1078
  4535  0983                     __ptext1078:
  4536                           
  4537 ;; *************** function _readAvgDistance *****************
  4538 ;; Defined at:
  4539 ;;		line 27 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  i               2   22[BANK0 ] int 
  4544 ;;  tempIR          2   20[BANK0 ] unsigned int 
  4545 ;;  j               2   18[BANK0 ] int 
  4546 ;;  fullval         2   16[BANK0 ] unsigned int 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;		None               void
  4549 ;; Registers used:
  4550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       0       0       0       0
  4557 ;;      Locals:         0       8       0       0       0
  4558 ;;      Temps:          0       0       0       0       0
  4559 ;;      Totals:         0       8       0       0       0
  4560 ;;Total ram usage:        8 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    6
  4563 ;; This function calls:
  4564 ;;		_readDistance
  4565 ;;		___lwdiv
  4566 ;;		_ADCconvert
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;;		_scan360
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           psect	text1078
  4573                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4574                           	line	27
  4575                           	global	__size_of_readAvgDistance
  4576  0076                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4577                           	
  4578  0983                     _readAvgDistance:	
  4579                           	opt	stack 0
  4580                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4581                           	line	28
  4582                           	
  4583  0983                     l11302:	
  4584                           ;infrared.c: 28: unsigned int fullval = 0, tempIR = 0;
  4585  0983  1283               	bcf	status, 5	;RP0=0, select bank0
  4586  0984  1303               	bcf	status, 6	;RP1=0, select bank0
  4587  0985  01B0               	clrf	(readAvgDistance@fullval)
  4588  0986  01B1               	clrf	(readAvgDistance@fullval+1)
  4589  0987  01B4               	clrf	(readAvgDistance@tempIR)
  4590  0988  01B5               	clrf	(readAvgDistance@tempIR+1)
  4591                           	line	29
  4592                           ;infrared.c: 29: int j = 0;
  4593  0989  01B2               	clrf	(readAvgDistance@j)
  4594  098A  01B3               	clrf	(readAvgDistance@j+1)
  4595                           	line	31
  4596                           ;infrared.c: 31: for (int i = 0; i < 8; i++)
  4597  098B  01B6               	clrf	(readAvgDistance@i)
  4598  098C  01B7               	clrf	(readAvgDistance@i+1)
  4599                           	
  4600  098D                     l11304:	
  4601  098D  0837               	movf	(readAvgDistance@i+1),w
  4602  098E  3A80               	xorlw	80h
  4603  098F  00FF               	movwf	btemp+1
  4604  0990  3080               	movlw	(high(08h))^80h
  4605  0991  027F               	subwf	btemp+1,w
  4606  0992  1D03               	skipz
  4607  0993  2996               	goto	u5375
  4608  0994  3008               	movlw	low(08h)
  4609  0995  0236               	subwf	(readAvgDistance@i),w
  4610  0996                     u5375:
  4611                           
  4612  0996  1C03               	skipc
  4613  0997  2999               	goto	u5371
  4614  0998  299A               	goto	u5370
  4615  0999                     u5371:
  4616  0999  299C               	goto	l11308
  4617  099A                     u5370:
  4618  099A  29D2               	goto	l11316
  4619                           	
  4620  099B                     l11306:	
  4621  099B  29D2               	goto	l11316
  4622                           	line	32
  4623                           	
  4624  099C                     l2992:	
  4625                           	line	33
  4626                           	
  4627  099C                     l11308:	
  4628                           ;infrared.c: 32: {
  4629                           ;infrared.c: 33: tempIR = readDistance();
  4630  099C  160A  118A  23F4   	fcall	_readDistance
              120A  158A         
  4631  09A1  1283               	bcf	status, 5	;RP0=0, select bank0
  4632  09A2  1303               	bcf	status, 6	;RP1=0, select bank0
  4633  09A3  0829               	movf	(1+(?_readDistance)),w
  4634  09A4  01B5               	clrf	(readAvgDistance@tempIR+1)
  4635  09A5  07B5               	addwf	(readAvgDistance@tempIR+1)
  4636  09A6  0828               	movf	(0+(?_readDistance)),w
  4637  09A7  01B4               	clrf	(readAvgDistance@tempIR)
  4638  09A8  07B4               	addwf	(readAvgDistance@tempIR)
  4639                           
  4640                           	line	34
  4641                           	
  4642  09A9                     l11310:	
  4643                           ;infrared.c: 34: if (tempIR <= 1000)
  4644  09A9  3003               	movlw	high(03E9h)
  4645  09AA  0235               	subwf	(readAvgDistance@tempIR+1),w
  4646  09AB  30E9               	movlw	low(03E9h)
  4647  09AC  1903               	skipnz
  4648  09AD  0234               	subwf	(readAvgDistance@tempIR),w
  4649  09AE  1803               	skipnc
  4650  09AF  29B1               	goto	u5381
  4651  09B0  29B2               	goto	u5380
  4652  09B1                     u5381:
  4653  09B1  29BE               	goto	l2994
  4654  09B2                     u5380:
  4655                           	line	36
  4656                           	
  4657  09B2                     l11312:	
  4658                           ;infrared.c: 35: {
  4659                           ;infrared.c: 36: fullval += tempIR;
  4660  09B2  0834               	movf	(readAvgDistance@tempIR),w
  4661  09B3  07B0               	addwf	(readAvgDistance@fullval),f
  4662  09B4  1803               	skipnc
  4663  09B5  0AB1               	incf	(readAvgDistance@fullval+1),f
  4664  09B6  0835               	movf	(readAvgDistance@tempIR+1),w
  4665  09B7  07B1               	addwf	(readAvgDistance@fullval+1),f
  4666                           	line	37
  4667                           ;infrared.c: 37: j++;
  4668  09B8  3001               	movlw	low(01h)
  4669  09B9  07B2               	addwf	(readAvgDistance@j),f
  4670  09BA  1803               	skipnc
  4671  09BB  0AB3               	incf	(readAvgDistance@j+1),f
  4672  09BC  3000               	movlw	high(01h)
  4673  09BD  07B3               	addwf	(readAvgDistance@j+1),f
  4674                           	line	38
  4675                           	
  4676  09BE                     l2994:	
  4677                           	line	31
  4678  09BE  3001               	movlw	low(01h)
  4679  09BF  07B6               	addwf	(readAvgDistance@i),f
  4680  09C0  1803               	skipnc
  4681  09C1  0AB7               	incf	(readAvgDistance@i+1),f
  4682  09C2  3000               	movlw	high(01h)
  4683  09C3  07B7               	addwf	(readAvgDistance@i+1),f
  4684                           	
  4685  09C4                     l11314:	
  4686  09C4  0837               	movf	(readAvgDistance@i+1),w
  4687  09C5  3A80               	xorlw	80h
  4688  09C6  00FF               	movwf	btemp+1
  4689  09C7  3080               	movlw	(high(08h))^80h
  4690  09C8  027F               	subwf	btemp+1,w
  4691  09C9  1D03               	skipz
  4692  09CA  29CD               	goto	u5395
  4693  09CB  3008               	movlw	low(08h)
  4694  09CC  0236               	subwf	(readAvgDistance@i),w
  4695  09CD                     u5395:
  4696                           
  4697  09CD  1C03               	skipc
  4698  09CE  29D0               	goto	u5391
  4699  09CF  29D1               	goto	u5390
  4700  09D0                     u5391:
  4701  09D0  299C               	goto	l11308
  4702  09D1                     u5390:
  4703  09D1  29D2               	goto	l11316
  4704                           	
  4705  09D2                     l2993:	
  4706                           	line	40
  4707                           	
  4708  09D2                     l11316:	
  4709                           ;infrared.c: 38: }
  4710                           ;infrared.c: 39: }
  4711                           ;infrared.c: 40: adcVal = fullval / j;
  4712  09D2  1283               	bcf	status, 5	;RP0=0, select bank0
  4713  09D3  1303               	bcf	status, 6	;RP1=0, select bank0
  4714  09D4  0833               	movf	(readAvgDistance@j+1),w
  4715  09D5  01A7               	clrf	(?___lwdiv+1)
  4716  09D6  07A7               	addwf	(?___lwdiv+1)
  4717  09D7  0832               	movf	(readAvgDistance@j),w
  4718  09D8  01A6               	clrf	(?___lwdiv)
  4719  09D9  07A6               	addwf	(?___lwdiv)
  4720                           
  4721  09DA  0831               	movf	(readAvgDistance@fullval+1),w
  4722  09DB  01A9               	clrf	1+(?___lwdiv)+02h
  4723  09DC  07A9               	addwf	1+(?___lwdiv)+02h
  4724  09DD  0830               	movf	(readAvgDistance@fullval),w
  4725  09DE  01A8               	clrf	0+(?___lwdiv)+02h
  4726  09DF  07A8               	addwf	0+(?___lwdiv)+02h
  4727                           
  4728  09E0  160A  118A  2760   	fcall	___lwdiv
              120A  158A         
  4729  09E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4730  09E6  1303               	bcf	status, 6	;RP1=0, select bank0
  4731  09E7  0827               	movf	(1+(?___lwdiv)),w
  4732  09E8  1683               	bsf	status, 5	;RP0=1, select bank1
  4733  09E9  1303               	bcf	status, 6	;RP1=0, select bank1
  4734  09EA  01B7               	clrf	(_adcVal+1)^080h	;volatile
  4735  09EB  07B7               	addwf	(_adcVal+1)^080h	;volatile
  4736  09EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4737  09ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4738  09EE  0826               	movf	(0+(?___lwdiv)),w
  4739  09EF  1683               	bsf	status, 5	;RP0=1, select bank1
  4740  09F0  1303               	bcf	status, 6	;RP1=0, select bank1
  4741  09F1  01B6               	clrf	(_adcVal)^080h	;volatile
  4742  09F2  07B6               	addwf	(_adcVal)^080h	;volatile
  4743                           
  4744                           	line	41
  4745                           ;infrared.c: 41: ADCconvert();
  4746  09F3  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  4747                           	line	42
  4748                           	
  4749  09F8                     l2995:	
  4750  09F8  0008               	return
  4751                           	opt stack 0
  4752                           GLOBAL	__end_of_readAvgDistance
  4753  09F9                     	__end_of_readAvgDistance:
  4754 ;; =============== function _readAvgDistance ends ============
  4755                           
  4756                           	signat	_readAvgDistance,88
  4757                           	global	_init
  4758                           psect	text1079,local,class=CODE,delta=2
  4759                           global __ptext1079
  4760  15C1                     __ptext1079:
  4761                           
  4762 ;; *************** function _init *****************
  4763 ;; Defined at:
  4764 ;;		line 139 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;		None               void
  4771 ;; Registers used:
  4772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4778 ;;      Params:         0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0
  4780 ;;      Temps:          0       1       0       0       0
  4781 ;;      Totals:         0       1       0       0       0
  4782 ;;Total ram usage:        1 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    5
  4785 ;; This function calls:
  4786 ;;		_ser_init
  4787 ;;		_init_adc
  4788 ;;		_lcd_init
  4789 ;;		_robo_init
  4790 ;; This function is called by:
  4791 ;;		_main
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           psect	text1079
  4795                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4796                           	line	139
  4797                           	global	__size_of_init
  4798  002F                     	__size_of_init	equ	__end_of_init-_init
  4799                           	
  4800  15C1                     _init:	
  4801                           	opt	stack 2
  4802                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4803                           	line	140
  4804                           	
  4805  15C1                     l11276:	
  4806                           ;Main.c: 140: buttonPressed = 0;
  4807  15C1  01FD               	clrf	(_buttonPressed)	;volatile
  4808                           	line	142
  4809                           	
  4810  15C2                     l11278:	
  4811                           ;Main.c: 142: TRISB = 0b11111100;
  4812  15C2  30FC               	movlw	(0FCh)
  4813  15C3  1683               	bsf	status, 5	;RP0=1, select bank1
  4814  15C4  1303               	bcf	status, 6	;RP1=0, select bank1
  4815  15C5  0086               	movwf	(134)^080h	;volatile
  4816                           	line	143
  4817                           	
  4818  15C6                     l11280:	
  4819                           ;Main.c: 143: TRISC &= 0b10010000;
  4820  15C6  3090               	movlw	(090h)
  4821  15C7  1283               	bcf	status, 5	;RP0=0, select bank0
  4822  15C8  1303               	bcf	status, 6	;RP1=0, select bank0
  4823  15C9  00A3               	movwf	(??_init+0)+0
  4824  15CA  0823               	movf	(??_init+0)+0,w
  4825  15CB  1683               	bsf	status, 5	;RP0=1, select bank1
  4826  15CC  1303               	bcf	status, 6	;RP1=0, select bank1
  4827  15CD  0587               	andwf	(135)^080h,f	;volatile
  4828                           	line	146
  4829                           	
  4830  15CE                     l11282:	
  4831                           ;Main.c: 146: SSPSTAT = 0b01000000;
  4832  15CE  3040               	movlw	(040h)
  4833  15CF  0094               	movwf	(148)^080h	;volatile
  4834                           	line	147
  4835                           	
  4836  15D0                     l11284:	
  4837                           ;Main.c: 147: SSPCON = 0b10100001;
  4838  15D0  30A1               	movlw	(0A1h)
  4839  15D1  1283               	bcf	status, 5	;RP0=0, select bank0
  4840  15D2  1303               	bcf	status, 6	;RP1=0, select bank0
  4841  15D3  0094               	movwf	(20)	;volatile
  4842                           	line	150
  4843                           	
  4844  15D4                     l11286:	
  4845                           ;Main.c: 150: OPTION_REG = 0b00000100;
  4846  15D4  3004               	movlw	(04h)
  4847  15D5  1683               	bsf	status, 5	;RP0=1, select bank1
  4848  15D6  1303               	bcf	status, 6	;RP1=0, select bank1
  4849  15D7  0081               	movwf	(129)^080h	;volatile
  4850                           	line	153
  4851                           	
  4852  15D8                     l11288:	
  4853                           ;Main.c: 153: ser_init();
  4854  15D8  120A  118A  27D6   	fcall	_ser_init
              160A  118A         
  4855                           	line	154
  4856                           	
  4857  15DD                     l11290:	
  4858                           ;Main.c: 154: init_adc();
  4859  15DD  160A  118A  23DE   	fcall	_init_adc
              160A  118A         
  4860                           	line	155
  4861                           	
  4862  15E2                     l11292:	
  4863                           ;Main.c: 155: lcd_init();
  4864  15E2  160A  118A  248C   	fcall	_lcd_init
              160A  118A         
  4865                           	line	156
  4866                           	
  4867  15E7                     l11294:	
  4868                           ;Main.c: 156: robo_init();
  4869  15E7  160A  118A  2423   	fcall	_robo_init
              160A  118A         
  4870                           	line	160
  4871                           	
  4872  15EC                     l11296:	
  4873                           ;Main.c: 160: TMR0IE = 1;
  4874  15EC  168B               	bsf	(93/8),(93)&7
  4875                           	line	162
  4876                           	
  4877  15ED                     l11298:	
  4878                           ;Main.c: 162: PEIE=1;
  4879  15ED  170B               	bsf	(94/8),(94)&7
  4880                           	line	164
  4881                           	
  4882  15EE                     l11300:	
  4883                           ;Main.c: 164: (GIE = 1);
  4884  15EE  178B               	bsf	(95/8),(95)&7
  4885                           	line	165
  4886                           	
  4887  15EF                     l2225:	
  4888  15EF  0008               	return
  4889                           	opt stack 0
  4890                           GLOBAL	__end_of_init
  4891  15F0                     	__end_of_init:
  4892 ;; =============== function _init ends ============
  4893                           
  4894                           	signat	_init,88
  4895                           	global	_readDistance
  4896                           psect	text1080,local,class=CODE,delta=2
  4897                           global __ptext1080
  4898  13F4                     __ptext1080:
  4899                           
  4900 ;; *************** function _readDistance *****************
  4901 ;; Defined at:
  4902 ;;		line 47 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  readVal         2   12[BANK0 ] unsigned int 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  2    8[BANK0 ] unsigned int 
  4909 ;; Registers used:
  4910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4916 ;;      Params:         0       2       0       0       0
  4917 ;;      Locals:         0       2       0       0       0
  4918 ;;      Temps:          0       2       0       0       0
  4919 ;;      Totals:         0       6       0       0       0
  4920 ;;Total ram usage:        6 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    5
  4923 ;; This function calls:
  4924 ;;		_adc_read_channel
  4925 ;; This function is called by:
  4926 ;;		_readAvgDistance
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           psect	text1080
  4930                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4931                           	line	47
  4932                           	global	__size_of_readDistance
  4933  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  4934                           	
  4935  13F4                     _readDistance:	
  4936                           	opt	stack 0
  4937                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4938                           	line	50
  4939                           	
  4940  13F4                     l11270:	
  4941                           ;infrared.c: 48: unsigned int readVal;
  4942                           ;infrared.c: 50: readVal = adc_read_channel(0);
  4943  13F4  3000               	movlw	(0)
  4944  13F5  160A  118A  2655   	fcall	_adc_read_channel
              160A  118A         
  4945  13FA  1283               	bcf	status, 5	;RP0=0, select bank0
  4946  13FB  1303               	bcf	status, 6	;RP1=0, select bank0
  4947  13FC  00AA               	movwf	(??_readDistance+0)+0
  4948  13FD  01AB               	clrf	(??_readDistance+0)+0+1
  4949  13FE  082A               	movf	0+(??_readDistance+0)+0,w
  4950  13FF  00AC               	movwf	(readDistance@readVal)
  4951  1400  082B               	movf	1+(??_readDistance+0)+0,w
  4952  1401  00AD               	movwf	(readDistance@readVal+1)
  4953                           	line	52
  4954                           	
  4955  1402                     l11272:	
  4956                           ;infrared.c: 52: return readVal;
  4957  1402  082D               	movf	(readDistance@readVal+1),w
  4958  1403  01A9               	clrf	(?_readDistance+1)
  4959  1404  07A9               	addwf	(?_readDistance+1)
  4960  1405  082C               	movf	(readDistance@readVal),w
  4961  1406  01A8               	clrf	(?_readDistance)
  4962  1407  07A8               	addwf	(?_readDistance)
  4963                           
  4964  1408  2C09               	goto	l2998
  4965                           	
  4966  1409                     l11274:	
  4967                           	line	53
  4968                           	
  4969  1409                     l2998:	
  4970  1409  0008               	return
  4971                           	opt stack 0
  4972                           GLOBAL	__end_of_readDistance
  4973  140A                     	__end_of_readDistance:
  4974 ;; =============== function _readDistance ends ============
  4975                           
  4976                           	signat	_readDistance,90
  4977                           	global	_robot_read
  4978                           psect	text1081,local,class=CODE,delta=2
  4979                           global __ptext1081
  4980  0F03                     __ptext1081:
  4981                           
  4982 ;; *************** function _robot_read *****************
  4983 ;; Defined at:
  4984 ;;		line 41 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  readType        1    wreg     unsigned char 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  readType        1    4[BANK0 ] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;		None               void
  4991 ;; Registers used:
  4992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4998 ;;      Params:         0       0       0       0       0
  4999 ;;      Locals:         0       1       0       0       0
  5000 ;;      Temps:          0       2       0       0       0
  5001 ;;      Totals:         0       3       0       0       0
  5002 ;;Total ram usage:        3 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    5
  5005 ;; This function calls:
  5006 ;;		_ser_putch
  5007 ;;		_ser_getch
  5008 ;; This function is called by:
  5009 ;;		_main
  5010 ;;		_robotMoveSpeed
  5011 ;;		_robotTurnSpeed
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           psect	text1081
  5015                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5016                           	line	41
  5017                           	global	__size_of_robot_read
  5018  00FD                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  5019                           	
  5020  0F03                     _robot_read:	
  5021                           	opt	stack 1
  5022                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5023                           ;robot_read@readType stored from wreg
  5024  0F03  1283               	bcf	status, 5	;RP0=0, select bank0
  5025  0F04  1303               	bcf	status, 6	;RP1=0, select bank0
  5026  0F05  00A4               	movwf	(robot_read@readType)
  5027                           	line	42
  5028                           	
  5029  0F06                     l11228:	
  5030                           ;robot.c: 42: ser_putch(142);
  5031  0F06  308E               	movlw	(08Eh)
  5032  0F07  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5033                           	line	43
  5034                           ;robot.c: 43: ser_putch(7);
  5035  0F0C  3007               	movlw	(07h)
  5036  0F0D  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5037                           	line	44
  5038                           	
  5039  0F12                     l11230:	
  5040                           ;robot.c: 44: _delay((unsigned long)((5)*(20000000/4000.0)));
  5041                           	opt asmopt_off
  5042  0F12  3021               movlw	33
  5043  0F13  1283               	bcf	status, 5	;RP0=0, select bank0
  5044  0F14  1303               	bcf	status, 6	;RP1=0, select bank0
  5045  0F15  00A3               movwf	((??_robot_read+0)+0+1),f
  5046  0F16  3076               	movlw	118
  5047  0F17  00A2               movwf	((??_robot_read+0)+0),f
  5048  0F18                     u5707:
  5049  0F18  0BA2               	decfsz	((??_robot_read+0)+0),f
  5050  0F19  2F18               	goto	u5707
  5051  0F1A  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5052  0F1B  2F18               	goto	u5707
  5053  0F1C  0064               	clrwdt
  5054                           opt asmopt_on
  5055                           
  5056                           	line	45
  5057                           	
  5058  0F1D                     l11232:	
  5059                           ;robot.c: 45: BumpSensors = ser_getch();
  5060  0F1D  160A  118A  24E3   	fcall	_ser_getch
              120A  158A         
  5061  0F22  1283               	bcf	status, 5	;RP0=0, select bank0
  5062  0F23  1303               	bcf	status, 6	;RP1=0, select bank0
  5063  0F24  00A2               	movwf	(??_robot_read+0)+0
  5064  0F25  0822               	movf	(??_robot_read+0)+0,w
  5065  0F26  1683               	bsf	status, 5	;RP0=1, select bank1
  5066  0F27  1303               	bcf	status, 6	;RP1=0, select bank1
  5067  0F28  00C8               	movwf	(_BumpSensors)^080h	;volatile
  5068                           	line	46
  5069                           	
  5070  0F29                     l11234:	
  5071                           ;robot.c: 46: if (readType == 0)
  5072  0F29  1283               	bcf	status, 5	;RP0=0, select bank0
  5073  0F2A  1303               	bcf	status, 6	;RP1=0, select bank0
  5074  0F2B  08A4               	movf	(robot_read@readType),f
  5075  0F2C  1D03               	skipz
  5076  0F2D  2F2F               	goto	u5341
  5077  0F2E  2F30               	goto	u5340
  5078  0F2F                     u5341:
  5079  0F2F  2F60               	goto	l11244
  5080  0F30                     u5340:
  5081                           	line	48
  5082                           	
  5083  0F30                     l11236:	
  5084                           ;robot.c: 47: {
  5085                           ;robot.c: 48: ser_putch(142);
  5086  0F30  308E               	movlw	(08Eh)
  5087  0F31  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5088                           	line	49
  5089                           ;robot.c: 49: ser_putch(19);
  5090  0F36  3013               	movlw	(013h)
  5091  0F37  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5092                           	line	50
  5093                           	
  5094  0F3C                     l11238:	
  5095                           ;robot.c: 50: _delay((unsigned long)((5)*(20000000/4000.0)));
  5096                           	opt asmopt_off
  5097  0F3C  3021               movlw	33
  5098  0F3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5099  0F3E  1303               	bcf	status, 6	;RP1=0, select bank0
  5100  0F3F  00A3               movwf	((??_robot_read+0)+0+1),f
  5101  0F40  3076               	movlw	118
  5102  0F41  00A2               movwf	((??_robot_read+0)+0),f
  5103  0F42                     u5717:
  5104  0F42  0BA2               	decfsz	((??_robot_read+0)+0),f
  5105  0F43  2F42               	goto	u5717
  5106  0F44  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5107  0F45  2F42               	goto	u5717
  5108  0F46  0064               	clrwdt
  5109                           opt asmopt_on
  5110                           
  5111                           	line	51
  5112                           	
  5113  0F47                     l11240:	
  5114                           ;robot.c: 51: DistHighByte = ser_getch();
  5115  0F47  160A  118A  24E3   	fcall	_ser_getch
              120A  158A         
  5116  0F4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5117  0F4D  1303               	bcf	status, 6	;RP1=0, select bank0
  5118  0F4E  00A2               	movwf	(??_robot_read+0)+0
  5119  0F4F  0822               	movf	(??_robot_read+0)+0,w
  5120  0F50  1683               	bsf	status, 5	;RP0=1, select bank1
  5121  0F51  1303               	bcf	status, 6	;RP1=0, select bank1
  5122  0F52  00CA               	movwf	(_DistHighByte)^080h	;volatile
  5123                           	line	52
  5124                           	
  5125  0F53                     l11242:	
  5126                           ;robot.c: 52: DistLowByte = ser_getch();
  5127  0F53  160A  118A  24E3   	fcall	_ser_getch
              120A  158A         
  5128  0F58  1283               	bcf	status, 5	;RP0=0, select bank0
  5129  0F59  1303               	bcf	status, 6	;RP1=0, select bank0
  5130  0F5A  00A2               	movwf	(??_robot_read+0)+0
  5131  0F5B  0822               	movf	(??_robot_read+0)+0,w
  5132  0F5C  1683               	bsf	status, 5	;RP0=1, select bank1
  5133  0F5D  1303               	bcf	status, 6	;RP1=0, select bank1
  5134  0F5E  00CB               	movwf	(_DistLowByte)^080h	;volatile
  5135                           	line	53
  5136                           ;robot.c: 53: }
  5137  0F5F  2FFF               	goto	l6012
  5138                           	line	54
  5139                           	
  5140  0F60                     l6007:	
  5141                           	
  5142  0F60                     l11244:	
  5143                           ;robot.c: 54: else if (readType == 1)
  5144  0F60  1283               	bcf	status, 5	;RP0=0, select bank0
  5145  0F61  0824               	movf	(robot_read@readType),w
  5146  0F62  3A01               	xorlw	01h
  5147  0F63  1D03               	skipz
  5148  0F64  2F66               	goto	u5351
  5149  0F65  2F67               	goto	u5350
  5150  0F66                     u5351:
  5151  0F66  2F97               	goto	l11254
  5152  0F67                     u5350:
  5153                           	line	56
  5154                           	
  5155  0F67                     l11246:	
  5156                           ;robot.c: 55: {
  5157                           ;robot.c: 56: ser_putch(142);
  5158  0F67  308E               	movlw	(08Eh)
  5159  0F68  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5160                           	line	57
  5161                           ;robot.c: 57: ser_putch(20);
  5162  0F6D  3014               	movlw	(014h)
  5163  0F6E  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5164                           	line	58
  5165                           	
  5166  0F73                     l11248:	
  5167                           ;robot.c: 58: _delay((unsigned long)((5)*(20000000/4000.0)));
  5168                           	opt asmopt_off
  5169  0F73  3021               movlw	33
  5170  0F74  1283               	bcf	status, 5	;RP0=0, select bank0
  5171  0F75  1303               	bcf	status, 6	;RP1=0, select bank0
  5172  0F76  00A3               movwf	((??_robot_read+0)+0+1),f
  5173  0F77  3076               	movlw	118
  5174  0F78  00A2               movwf	((??_robot_read+0)+0),f
  5175  0F79                     u5727:
  5176  0F79  0BA2               	decfsz	((??_robot_read+0)+0),f
  5177  0F7A  2F79               	goto	u5727
  5178  0F7B  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5179  0F7C  2F79               	goto	u5727
  5180  0F7D  0064               	clrwdt
  5181                           opt asmopt_on
  5182                           
  5183                           	line	59
  5184                           	
  5185  0F7E                     l11250:	
  5186                           ;robot.c: 59: AngleHighByte = ser_getch();
  5187  0F7E  160A  118A  24E3   	fcall	_ser_getch
              120A  158A         
  5188  0F83  1283               	bcf	status, 5	;RP0=0, select bank0
  5189  0F84  1303               	bcf	status, 6	;RP1=0, select bank0
  5190  0F85  00A2               	movwf	(??_robot_read+0)+0
  5191  0F86  0822               	movf	(??_robot_read+0)+0,w
  5192  0F87  1683               	bsf	status, 5	;RP0=1, select bank1
  5193  0F88  1303               	bcf	status, 6	;RP1=0, select bank1
  5194  0F89  00C6               	movwf	(_AngleHighByte)^080h	;volatile
  5195                           	line	60
  5196                           	
  5197  0F8A                     l11252:	
  5198                           ;robot.c: 60: AngleLowByte = ser_getch();
  5199  0F8A  160A  118A  24E3   	fcall	_ser_getch
              120A  158A         
  5200  0F8F  1283               	bcf	status, 5	;RP0=0, select bank0
  5201  0F90  1303               	bcf	status, 6	;RP1=0, select bank0
  5202  0F91  00A2               	movwf	(??_robot_read+0)+0
  5203  0F92  0822               	movf	(??_robot_read+0)+0,w
  5204  0F93  1683               	bsf	status, 5	;RP0=1, select bank1
  5205  0F94  1303               	bcf	status, 6	;RP1=0, select bank1
  5206  0F95  00C7               	movwf	(_AngleLowByte)^080h	;volatile
  5207                           	line	61
  5208                           ;robot.c: 61: }
  5209  0F96  2FFF               	goto	l6012
  5210                           	line	62
  5211                           	
  5212  0F97                     l6009:	
  5213                           	
  5214  0F97                     l11254:	
  5215                           ;robot.c: 62: else if (readType == 2)
  5216  0F97  1283               	bcf	status, 5	;RP0=0, select bank0
  5217  0F98  0824               	movf	(robot_read@readType),w
  5218  0F99  3A02               	xorlw	02h
  5219  0F9A  1D03               	skipz
  5220  0F9B  2F9D               	goto	u5361
  5221  0F9C  2F9E               	goto	u5360
  5222  0F9D                     u5361:
  5223  0F9D  2FFF               	goto	l6012
  5224  0F9E                     u5360:
  5225                           	line	65
  5226                           	
  5227  0F9E                     l11256:	
  5228                           ;robot.c: 63: {
  5229                           ;robot.c: 65: ser_putch(142);
  5230  0F9E  308E               	movlw	(08Eh)
  5231  0F9F  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5232                           	line	66
  5233                           ;robot.c: 66: ser_putch(19);
  5234  0FA4  3013               	movlw	(013h)
  5235  0FA5  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5236                           	line	67
  5237                           	
  5238  0FAA                     l11258:	
  5239                           ;robot.c: 67: _delay((unsigned long)((5)*(20000000/4000.0)));
  5240                           	opt asmopt_off
  5241  0FAA  3021               movlw	33
  5242  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5243  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5244  0FAD  00A3               movwf	((??_robot_read+0)+0+1),f
  5245  0FAE  3076               	movlw	118
  5246  0FAF  00A2               movwf	((??_robot_read+0)+0),f
  5247  0FB0                     u5737:
  5248  0FB0  0BA2               	decfsz	((??_robot_read+0)+0),f
  5249  0FB1  2FB0               	goto	u5737
  5250  0FB2  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5251  0FB3  2FB0               	goto	u5737
  5252  0FB4  0064               	clrwdt
  5253                           opt asmopt_on
  5254                           
  5255                           	line	68
  5256                           	
  5257  0FB5                     l11260:	
  5258                           ;robot.c: 68: DistHighByte = ser_getch();
  5259  0FB5  160A  118A  24E3   	fcall	_ser_getch
              120A  158A         
  5260  0FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  5261  0FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  5262  0FBC  00A2               	movwf	(??_robot_read+0)+0
  5263  0FBD  0822               	movf	(??_robot_read+0)+0,w
  5264  0FBE  1683               	bsf	status, 5	;RP0=1, select bank1
  5265  0FBF  1303               	bcf	status, 6	;RP1=0, select bank1
  5266  0FC0  00CA               	movwf	(_DistHighByte)^080h	;volatile
  5267                           	line	69
  5268                           	
  5269  0FC1                     l11262:	
  5270                           ;robot.c: 69: DistLowByte = ser_getch();
  5271  0FC1  160A  118A  24E3   	fcall	_ser_getch
              120A  158A         
  5272  0FC6  1283               	bcf	status, 5	;RP0=0, select bank0
  5273  0FC7  1303               	bcf	status, 6	;RP1=0, select bank0
  5274  0FC8  00A2               	movwf	(??_robot_read+0)+0
  5275  0FC9  0822               	movf	(??_robot_read+0)+0,w
  5276  0FCA  1683               	bsf	status, 5	;RP0=1, select bank1
  5277  0FCB  1303               	bcf	status, 6	;RP1=0, select bank1
  5278  0FCC  00CB               	movwf	(_DistLowByte)^080h	;volatile
  5279                           	line	70
  5280                           	
  5281  0FCD                     l11264:	
  5282                           ;robot.c: 70: ser_putch(142);
  5283  0FCD  308E               	movlw	(08Eh)
  5284  0FCE  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5285                           	line	71
  5286                           	
  5287  0FD3                     l11266:	
  5288                           ;robot.c: 71: ser_putch(20);
  5289  0FD3  3014               	movlw	(014h)
  5290  0FD4  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  5291                           	line	72
  5292                           	
  5293  0FD9                     l11268:	
  5294                           ;robot.c: 72: _delay((unsigned long)((5)*(20000000/4000.0)));
  5295                           	opt asmopt_off
  5296  0FD9  3021               movlw	33
  5297  0FDA  1283               	bcf	status, 5	;RP0=0, select bank0
  5298  0FDB  1303               	bcf	status, 6	;RP1=0, select bank0
  5299  0FDC  00A3               movwf	((??_robot_read+0)+0+1),f
  5300  0FDD  3076               	movlw	118
  5301  0FDE  00A2               movwf	((??_robot_read+0)+0),f
  5302  0FDF                     u5747:
  5303  0FDF  0BA2               	decfsz	((??_robot_read+0)+0),f
  5304  0FE0  2FDF               	goto	u5747
  5305  0FE1  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5306  0FE2  2FDF               	goto	u5747
  5307  0FE3  0064               	clrwdt
  5308                           opt asmopt_on
  5309                           
  5310                           	line	73
  5311                           ;robot.c: 73: AngleHighByte = ser_getch();
  5312  0FE4  160A  118A  24E3   	fcall	_ser_getch
              120A  158A         
  5313  0FE9  1283               	bcf	status, 5	;RP0=0, select bank0
  5314  0FEA  1303               	bcf	status, 6	;RP1=0, select bank0
  5315  0FEB  00A2               	movwf	(??_robot_read+0)+0
  5316  0FEC  0822               	movf	(??_robot_read+0)+0,w
  5317  0FED  1683               	bsf	status, 5	;RP0=1, select bank1
  5318  0FEE  1303               	bcf	status, 6	;RP1=0, select bank1
  5319  0FEF  00C6               	movwf	(_AngleHighByte)^080h	;volatile
  5320                           	line	74
  5321                           ;robot.c: 74: AngleLowByte = ser_getch();
  5322  0FF0  160A  118A  24E3   	fcall	_ser_getch
              120A  158A         
  5323  0FF5  1283               	bcf	status, 5	;RP0=0, select bank0
  5324  0FF6  1303               	bcf	status, 6	;RP1=0, select bank0
  5325  0FF7  00A2               	movwf	(??_robot_read+0)+0
  5326  0FF8  0822               	movf	(??_robot_read+0)+0,w
  5327  0FF9  1683               	bsf	status, 5	;RP0=1, select bank1
  5328  0FFA  1303               	bcf	status, 6	;RP1=0, select bank1
  5329  0FFB  00C7               	movwf	(_AngleLowByte)^080h	;volatile
  5330  0FFC  2FFF               	goto	l6012
  5331                           	line	75
  5332                           	
  5333  0FFD                     l6011:	
  5334  0FFD  2FFF               	goto	l6012
  5335                           	line	76
  5336                           	
  5337  0FFE                     l6010:	
  5338  0FFE  2FFF               	goto	l6012
  5339                           	
  5340  0FFF                     l6008:	
  5341                           	
  5342  0FFF                     l6012:	
  5343  0FFF  0008               	return
  5344                           	opt stack 0
  5345                           GLOBAL	__end_of_robot_read
  5346  1000                     	__end_of_robot_read:
  5347 ;; =============== function _robot_read ends ============
  5348                           
  5349                           	signat	_robot_read,4216
  5350                           	global	_lcd_init
  5351                           psect	text1082,local,class=CODE,delta=2
  5352                           global __ptext1082
  5353  148C                     __ptext1082:
  5354                           
  5355 ;; *************** function _lcd_init *****************
  5356 ;; Defined at:
  5357 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;		None               void
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, status,0, pclath, cstack
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5371 ;;      Params:         0       0       0       0       0
  5372 ;;      Locals:         0       0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0
  5374 ;;      Totals:         0       0       0       0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    4
  5378 ;; This function calls:
  5379 ;;		_lcd_write_control
  5380 ;; This function is called by:
  5381 ;;		_init
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           psect	text1082
  5385                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5386                           	line	101
  5387                           	global	__size_of_lcd_init
  5388  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5389                           	
  5390  148C                     _lcd_init:	
  5391                           	opt	stack 2
  5392                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5393                           	line	105
  5394                           	
  5395  148C                     l11208:	
  5396                           ;lcd.c: 105: ADCON1 = 0b00000010;
  5397  148C  3002               	movlw	(02h)
  5398  148D  1683               	bsf	status, 5	;RP0=1, select bank1
  5399  148E  1303               	bcf	status, 6	;RP1=0, select bank1
  5400  148F  009F               	movwf	(159)^080h	;volatile
  5401                           	line	108
  5402                           	
  5403  1490                     l11210:	
  5404                           ;lcd.c: 108: PORTD = 0;
  5405  1490  1283               	bcf	status, 5	;RP0=0, select bank0
  5406  1491  1303               	bcf	status, 6	;RP1=0, select bank0
  5407  1492  0188               	clrf	(8)	;volatile
  5408                           	line	109
  5409                           	
  5410  1493                     l11212:	
  5411                           ;lcd.c: 109: PORTE = 0;
  5412  1493  0189               	clrf	(9)	;volatile
  5413                           	line	111
  5414                           	
  5415  1494                     l11214:	
  5416                           ;lcd.c: 111: TRISD = 0b00000000;
  5417  1494  1683               	bsf	status, 5	;RP0=1, select bank1
  5418  1495  1303               	bcf	status, 6	;RP1=0, select bank1
  5419  1496  0188               	clrf	(136)^080h	;volatile
  5420                           	line	112
  5421                           	
  5422  1497                     l11216:	
  5423                           ;lcd.c: 112: TRISE = 0b00000000;
  5424  1497  0189               	clrf	(137)^080h	;volatile
  5425                           	line	115
  5426                           	
  5427  1498                     l11218:	
  5428                           ;lcd.c: 115: lcd_write_control(0b00000001);
  5429  1498  3001               	movlw	(01h)
  5430  1499  160A  118A  23CA   	fcall	_lcd_write_control
              160A  118A         
  5431                           	line	116
  5432                           	
  5433  149E                     l11220:	
  5434                           ;lcd.c: 116: lcd_write_control(0b00111000);
  5435  149E  3038               	movlw	(038h)
  5436  149F  160A  118A  23CA   	fcall	_lcd_write_control
              160A  118A         
  5437                           	line	117
  5438                           	
  5439  14A4                     l11222:	
  5440                           ;lcd.c: 117: lcd_write_control(0b00001100);
  5441  14A4  300C               	movlw	(0Ch)
  5442  14A5  160A  118A  23CA   	fcall	_lcd_write_control
              160A  118A         
  5443                           	line	118
  5444                           	
  5445  14AA                     l11224:	
  5446                           ;lcd.c: 118: lcd_write_control(0b00000110);
  5447  14AA  3006               	movlw	(06h)
  5448  14AB  160A  118A  23CA   	fcall	_lcd_write_control
              160A  118A         
  5449                           	line	119
  5450                           	
  5451  14B0                     l11226:	
  5452                           ;lcd.c: 119: lcd_write_control(0b00000010);
  5453  14B0  3002               	movlw	(02h)
  5454  14B1  160A  118A  23CA   	fcall	_lcd_write_control
              160A  118A         
  5455                           	line	121
  5456                           	
  5457  14B6                     l1429:	
  5458  14B6  0008               	return
  5459                           	opt stack 0
  5460                           GLOBAL	__end_of_lcd_init
  5461  14B7                     	__end_of_lcd_init:
  5462 ;; =============== function _lcd_init ends ============
  5463                           
  5464                           	signat	_lcd_init,88
  5465                           	global	_lcd_write_string
  5466                           psect	text1083,local,class=CODE,delta=2
  5467                           global __ptext1083
  5468  153B                     __ptext1083:
  5469                           
  5470 ;; *************** function _lcd_write_string *****************
  5471 ;; Defined at:
  5472 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  s               2    7[BANK0 ] PTR unsigned char 
  5475 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  5476 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@LCDOutput(16), STR_12(4), 
  5477 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  5478 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  5479 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;		None               void
  5484 ;; Registers used:
  5485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5491 ;;      Params:         0       2       0       0       0
  5492 ;;      Locals:         0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0
  5494 ;;      Totals:         0       2       0       0       0
  5495 ;;Total ram usage:        2 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    4
  5498 ;; This function calls:
  5499 ;;		_lcd_write_data
  5500 ;; This function is called by:
  5501 ;;		_UpdateDisplay
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           psect	text1083
  5505                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5506                           	line	48
  5507                           	global	__size_of_lcd_write_string
  5508  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5509                           	
  5510  153B                     _lcd_write_string:	
  5511                           	opt	stack 1
  5512                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5513                           	line	50
  5514                           	
  5515  153B                     l11200:	
  5516                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5517  153B  2D55               	goto	l11206
  5518                           	
  5519  153C                     l1409:	
  5520                           	
  5521  153C                     l11202:	
  5522  153C  1283               	bcf	status, 5	;RP0=0, select bank0
  5523  153D  1303               	bcf	status, 6	;RP1=0, select bank0
  5524  153E  0828               	movf	(lcd_write_string@s+1),w
  5525  153F  00FF               	movwf	btemp+1
  5526  1540  0827               	movf	(lcd_write_string@s),w
  5527  1541  0084               	movwf	fsr0
  5528  1542  120A  118A  2729   	fcall	stringtab
              160A  118A         
  5529  1547  160A  118A  2390   	fcall	_lcd_write_data
              160A  118A         
  5530                           	
  5531  154C                     l11204:	
  5532  154C  3001               	movlw	low(01h)
  5533  154D  1283               	bcf	status, 5	;RP0=0, select bank0
  5534  154E  1303               	bcf	status, 6	;RP1=0, select bank0
  5535  154F  07A7               	addwf	(lcd_write_string@s),f
  5536  1550  1803               	skipnc
  5537  1551  0AA8               	incf	(lcd_write_string@s+1),f
  5538  1552  3000               	movlw	high(01h)
  5539  1553  07A8               	addwf	(lcd_write_string@s+1),f
  5540  1554  2D55               	goto	l11206
  5541                           	
  5542  1555                     l1408:	
  5543                           	
  5544  1555                     l11206:	
  5545  1555  1283               	bcf	status, 5	;RP0=0, select bank0
  5546  1556  1303               	bcf	status, 6	;RP1=0, select bank0
  5547  1557  0828               	movf	(lcd_write_string@s+1),w
  5548  1558  00FF               	movwf	btemp+1
  5549  1559  0827               	movf	(lcd_write_string@s),w
  5550  155A  0084               	movwf	fsr0
  5551  155B  120A  118A  2729   	fcall	stringtab
              160A  118A         
  5552  1560  3800               	iorlw	0
  5553  1561  1D03               	skipz
  5554  1562  2D64               	goto	u5331
  5555  1563  2D65               	goto	u5330
  5556  1564                     u5331:
  5557  1564  2D3C               	goto	l11202
  5558  1565                     u5330:
  5559  1565  2D66               	goto	l1411
  5560                           	
  5561  1566                     l1410:	
  5562                           	line	51
  5563                           	
  5564  1566                     l1411:	
  5565  1566  0008               	return
  5566                           	opt stack 0
  5567                           GLOBAL	__end_of_lcd_write_string
  5568  1567                     	__end_of_lcd_write_string:
  5569 ;; =============== function _lcd_write_string ends ============
  5570                           
  5571                           	signat	_lcd_write_string,4216
  5572                           	global	_lcd_set_cursor
  5573                           psect	text1084,local,class=CODE,delta=2
  5574                           global __ptext1084
  5575  1378                     __ptext1084:
  5576                           
  5577 ;; *************** function _lcd_set_cursor *****************
  5578 ;; Defined at:
  5579 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  address         1    wreg     unsigned char 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  address         1    3[BANK0 ] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0, pclath, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5593 ;;      Params:         0       0       0       0       0
  5594 ;;      Locals:         0       1       0       0       0
  5595 ;;      Temps:          0       0       0       0       0
  5596 ;;      Totals:         0       1       0       0       0
  5597 ;;Total ram usage:        1 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    4
  5600 ;; This function calls:
  5601 ;;		_lcd_write_control
  5602 ;; This function is called by:
  5603 ;;		_UpdateDisplay
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           psect	text1084
  5607                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5608                           	line	42
  5609                           	global	__size_of_lcd_set_cursor
  5610  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5611                           	
  5612  1378                     _lcd_set_cursor:	
  5613                           	opt	stack 1
  5614                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5615                           ;lcd_set_cursor@address stored from wreg
  5616  1378  1283               	bcf	status, 5	;RP0=0, select bank0
  5617  1379  1303               	bcf	status, 6	;RP1=0, select bank0
  5618  137A  00A3               	movwf	(lcd_set_cursor@address)
  5619                           	line	43
  5620                           	
  5621  137B                     l11196:	
  5622                           ;lcd.c: 43: address |= 0b10000000;
  5623  137B  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5624                           	line	44
  5625                           	
  5626  137C                     l11198:	
  5627                           ;lcd.c: 44: lcd_write_control(address);
  5628  137C  0823               	movf	(lcd_set_cursor@address),w
  5629  137D  160A  118A  23CA   	fcall	_lcd_write_control
              160A  118A         
  5630                           	line	45
  5631                           	
  5632  1382                     l1405:	
  5633  1382  0008               	return
  5634                           	opt stack 0
  5635                           GLOBAL	__end_of_lcd_set_cursor
  5636  1383                     	__end_of_lcd_set_cursor:
  5637 ;; =============== function _lcd_set_cursor ends ============
  5638                           
  5639                           	signat	_lcd_set_cursor,4216
  5640                           	global	___awtoft
  5641                           psect	text1085,local,class=CODE,delta=2
  5642                           global __ptext1085
  5643  150F                     __ptext1085:
  5644                           
  5645 ;; *************** function ___awtoft *****************
  5646 ;; Defined at:
  5647 ;;		line 33 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  c               2   22[BANK0 ] int 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  sign            1   27[BANK0 ] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  3   22[BANK0 ] float 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0, pclath, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5661 ;;      Params:         0       3       0       0       0
  5662 ;;      Locals:         0       1       0       0       0
  5663 ;;      Temps:          0       2       0       0       0
  5664 ;;      Totals:         0       6       0       0       0
  5665 ;;Total ram usage:        6 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    4
  5668 ;; This function calls:
  5669 ;;		___ftpack
  5670 ;; This function is called by:
  5671 ;;		_main
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           psect	text1085
  5675                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5676                           	line	33
  5677                           	global	__size_of___awtoft
  5678  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  5679                           	
  5680  150F                     ___awtoft:	
  5681                           	opt	stack 3
  5682                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5683                           	line	36
  5684                           	
  5685  150F                     l11188:	
  5686  150F  1283               	bcf	status, 5	;RP0=0, select bank0
  5687  1510  1303               	bcf	status, 6	;RP1=0, select bank0
  5688  1511  01BB               	clrf	(___awtoft@sign)
  5689                           	line	37
  5690  1512  1FB7               	btfss	(___awtoft@c+1),7
  5691  1513  2D15               	goto	u5321
  5692  1514  2D16               	goto	u5320
  5693  1515                     u5321:
  5694  1515  2D1F               	goto	l11192
  5695  1516                     u5320:
  5696                           	line	38
  5697                           	
  5698  1516                     l11190:	
  5699  1516  09B6               	comf	(___awtoft@c),f
  5700  1517  09B7               	comf	(___awtoft@c+1),f
  5701  1518  0AB6               	incf	(___awtoft@c),f
  5702  1519  1903               	skipnz
  5703  151A  0AB7               	incf	(___awtoft@c+1),f
  5704                           	line	39
  5705  151B  01BB               	clrf	(___awtoft@sign)
  5706  151C  1403               	bsf	status,0
  5707  151D  0DBB               	rlf	(___awtoft@sign),f
  5708  151E  2D1F               	goto	l11192
  5709                           	line	40
  5710                           	
  5711  151F                     l7620:	
  5712                           	line	41
  5713                           	
  5714  151F                     l11192:	
  5715  151F  0836               	movf	(___awtoft@c),w
  5716  1520  00A0               	movwf	(?___ftpack)
  5717  1521  0837               	movf	(___awtoft@c+1),w
  5718  1522  00A1               	movwf	(?___ftpack+1)
  5719  1523  01A2               	clrf	(?___ftpack+2)
  5720  1524  308E               	movlw	(08Eh)
  5721  1525  00B9               	movwf	(??___awtoft+0)+0
  5722  1526  0839               	movf	(??___awtoft+0)+0,w
  5723  1527  00A3               	movwf	0+(?___ftpack)+03h
  5724  1528  083B               	movf	(___awtoft@sign),w
  5725  1529  00BA               	movwf	(??___awtoft+1)+0
  5726  152A  083A               	movf	(??___awtoft+1)+0,w
  5727  152B  00A4               	movwf	0+(?___ftpack)+04h
  5728  152C  120A  158A  2273   	fcall	___ftpack
              160A  118A         
  5729  1531  1283               	bcf	status, 5	;RP0=0, select bank0
  5730  1532  1303               	bcf	status, 6	;RP1=0, select bank0
  5731  1533  0820               	movf	(0+(?___ftpack)),w
  5732  1534  00B6               	movwf	(?___awtoft)
  5733  1535  0821               	movf	(1+(?___ftpack)),w
  5734  1536  00B7               	movwf	(?___awtoft+1)
  5735  1537  0822               	movf	(2+(?___ftpack)),w
  5736  1538  00B8               	movwf	(?___awtoft+2)
  5737  1539  2D3A               	goto	l7621
  5738                           	
  5739  153A                     l11194:	
  5740                           	line	42
  5741                           	
  5742  153A                     l7621:	
  5743  153A  0008               	return
  5744                           	opt stack 0
  5745                           GLOBAL	__end_of___awtoft
  5746  153B                     	__end_of___awtoft:
  5747 ;; =============== function ___awtoft ends ============
  5748                           
  5749                           	signat	___awtoft,4219
  5750                           	global	___ftmul
  5751                           psect	text1086,local,class=CODE,delta=2
  5752                           global __ptext1086
  5753  0E15                     __ptext1086:
  5754                           
  5755 ;; *************** function ___ftmul *****************
  5756 ;; Defined at:
  5757 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  f1              3   28[BANK0 ] float 
  5760 ;;  f2              3   31[BANK0 ] float 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  5763 ;;  sign            1   43[BANK0 ] unsigned char 
  5764 ;;  cntr            1   42[BANK0 ] unsigned char 
  5765 ;;  exp             1   38[BANK0 ] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  3   28[BANK0 ] float 
  5768 ;; Registers used:
  5769 ;;		wreg, status,2, status,0, pclath, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5775 ;;      Params:         0       6       0       0       0
  5776 ;;      Locals:         0       6       0       0       0
  5777 ;;      Temps:          0       4       0       0       0
  5778 ;;      Totals:         0      16       0       0       0
  5779 ;;Total ram usage:       16 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    4
  5782 ;; This function calls:
  5783 ;;		___ftpack
  5784 ;; This function is called by:
  5785 ;;		_main
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           psect	text1086
  5789                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5790                           	line	52
  5791                           	global	__size_of___ftmul
  5792  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5793                           	
  5794  0E15                     ___ftmul:	
  5795                           	opt	stack 3
  5796                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5797                           	line	56
  5798                           	
  5799  0E15                     l11138:	
  5800  0E15  1283               	bcf	status, 5	;RP0=0, select bank0
  5801  0E16  1303               	bcf	status, 6	;RP1=0, select bank0
  5802  0E17  083C               	movf	(___ftmul@f1),w
  5803  0E18  00C2               	movwf	((??___ftmul+0)+0)
  5804  0E19  083D               	movf	(___ftmul@f1+1),w
  5805  0E1A  00C3               	movwf	((??___ftmul+0)+0+1)
  5806  0E1B  083E               	movf	(___ftmul@f1+2),w
  5807  0E1C  00C4               	movwf	((??___ftmul+0)+0+2)
  5808  0E1D  1003               	clrc
  5809  0E1E  0D43               	rlf	(??___ftmul+0)+1,w
  5810  0E1F  0D44               	rlf	(??___ftmul+0)+2,w
  5811  0E20  00C5               	movwf	(??___ftmul+3)+0
  5812  0E21  0845               	movf	(??___ftmul+3)+0,w
  5813  0E22  00C6               	movwf	(___ftmul@exp)
  5814  0E23  08C6               	movf	((___ftmul@exp)),f
  5815  0E24  1D03               	skipz
  5816  0E25  2E27               	goto	u5181
  5817  0E26  2E28               	goto	u5180
  5818  0E27                     u5181:
  5819  0E27  2E30               	goto	l11144
  5820  0E28                     u5180:
  5821                           	line	57
  5822                           	
  5823  0E28                     l11140:	
  5824  0E28  3000               	movlw	0x0
  5825  0E29  00BC               	movwf	(?___ftmul)
  5826  0E2A  3000               	movlw	0x0
  5827  0E2B  00BD               	movwf	(?___ftmul+1)
  5828  0E2C  3000               	movlw	0x0
  5829  0E2D  00BE               	movwf	(?___ftmul+2)
  5830  0E2E  2F02               	goto	l7583
  5831                           	
  5832  0E2F                     l11142:	
  5833  0E2F  2F02               	goto	l7583
  5834                           	
  5835  0E30                     l7582:	
  5836                           	line	58
  5837                           	
  5838  0E30                     l11144:	
  5839  0E30  083F               	movf	(___ftmul@f2),w
  5840  0E31  00C2               	movwf	((??___ftmul+0)+0)
  5841  0E32  0840               	movf	(___ftmul@f2+1),w
  5842  0E33  00C3               	movwf	((??___ftmul+0)+0+1)
  5843  0E34  0841               	movf	(___ftmul@f2+2),w
  5844  0E35  00C4               	movwf	((??___ftmul+0)+0+2)
  5845  0E36  1003               	clrc
  5846  0E37  0D43               	rlf	(??___ftmul+0)+1,w
  5847  0E38  0D44               	rlf	(??___ftmul+0)+2,w
  5848  0E39  00C5               	movwf	(??___ftmul+3)+0
  5849  0E3A  0845               	movf	(??___ftmul+3)+0,w
  5850  0E3B  00CB               	movwf	(___ftmul@sign)
  5851  0E3C  08CB               	movf	((___ftmul@sign)),f
  5852  0E3D  1D03               	skipz
  5853  0E3E  2E40               	goto	u5191
  5854  0E3F  2E41               	goto	u5190
  5855  0E40                     u5191:
  5856  0E40  2E49               	goto	l11150
  5857  0E41                     u5190:
  5858                           	line	59
  5859                           	
  5860  0E41                     l11146:	
  5861  0E41  3000               	movlw	0x0
  5862  0E42  00BC               	movwf	(?___ftmul)
  5863  0E43  3000               	movlw	0x0
  5864  0E44  00BD               	movwf	(?___ftmul+1)
  5865  0E45  3000               	movlw	0x0
  5866  0E46  00BE               	movwf	(?___ftmul+2)
  5867  0E47  2F02               	goto	l7583
  5868                           	
  5869  0E48                     l11148:	
  5870  0E48  2F02               	goto	l7583
  5871                           	
  5872  0E49                     l7584:	
  5873                           	line	60
  5874                           	
  5875  0E49                     l11150:	
  5876  0E49  084B               	movf	(___ftmul@sign),w
  5877  0E4A  3E7B               	addlw	07Bh
  5878  0E4B  00C2               	movwf	(??___ftmul+0)+0
  5879  0E4C  0842               	movf	(??___ftmul+0)+0,w
  5880  0E4D  07C6               	addwf	(___ftmul@exp),f
  5881                           	line	61
  5882  0E4E  083C               	movf	(___ftmul@f1),w
  5883  0E4F  00C2               	movwf	((??___ftmul+0)+0)
  5884  0E50  083D               	movf	(___ftmul@f1+1),w
  5885  0E51  00C3               	movwf	((??___ftmul+0)+0+1)
  5886  0E52  083E               	movf	(___ftmul@f1+2),w
  5887  0E53  00C4               	movwf	((??___ftmul+0)+0+2)
  5888  0E54  3010               	movlw	010h
  5889  0E55                     u5205:
  5890  0E55  1003               	clrc
  5891  0E56  0CC4               	rrf	(??___ftmul+0)+2,f
  5892  0E57  0CC3               	rrf	(??___ftmul+0)+1,f
  5893  0E58  0CC2               	rrf	(??___ftmul+0)+0,f
  5894  0E59                     u5200:
  5895  0E59  3EFF               	addlw	-1
  5896  0E5A  1D03               	skipz
  5897  0E5B  2E55               	goto	u5205
  5898  0E5C  0842               	movf	0+(??___ftmul+0)+0,w
  5899  0E5D  00C5               	movwf	(??___ftmul+3)+0
  5900  0E5E  0845               	movf	(??___ftmul+3)+0,w
  5901  0E5F  00CB               	movwf	(___ftmul@sign)
  5902                           	line	62
  5903  0E60  083F               	movf	(___ftmul@f2),w
  5904  0E61  00C2               	movwf	((??___ftmul+0)+0)
  5905  0E62  0840               	movf	(___ftmul@f2+1),w
  5906  0E63  00C3               	movwf	((??___ftmul+0)+0+1)
  5907  0E64  0841               	movf	(___ftmul@f2+2),w
  5908  0E65  00C4               	movwf	((??___ftmul+0)+0+2)
  5909  0E66  3010               	movlw	010h
  5910  0E67                     u5215:
  5911  0E67  1003               	clrc
  5912  0E68  0CC4               	rrf	(??___ftmul+0)+2,f
  5913  0E69  0CC3               	rrf	(??___ftmul+0)+1,f
  5914  0E6A  0CC2               	rrf	(??___ftmul+0)+0,f
  5915  0E6B                     u5210:
  5916  0E6B  3EFF               	addlw	-1
  5917  0E6C  1D03               	skipz
  5918  0E6D  2E67               	goto	u5215
  5919  0E6E  0842               	movf	0+(??___ftmul+0)+0,w
  5920  0E6F  00C5               	movwf	(??___ftmul+3)+0
  5921  0E70  0845               	movf	(??___ftmul+3)+0,w
  5922  0E71  06CB               	xorwf	(___ftmul@sign),f
  5923                           	line	63
  5924  0E72  3080               	movlw	(080h)
  5925  0E73  00C2               	movwf	(??___ftmul+0)+0
  5926  0E74  0842               	movf	(??___ftmul+0)+0,w
  5927  0E75  05CB               	andwf	(___ftmul@sign),f
  5928                           	line	64
  5929                           	
  5930  0E76                     l11152:	
  5931  0E76  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5932                           	line	66
  5933                           	
  5934  0E77                     l11154:	
  5935  0E77  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5936                           	line	67
  5937                           	
  5938  0E78                     l11156:	
  5939  0E78  30FF               	movlw	0FFh
  5940  0E79  05BF               	andwf	(___ftmul@f2),f
  5941  0E7A  30FF               	movlw	0FFh
  5942  0E7B  05C0               	andwf	(___ftmul@f2+1),f
  5943  0E7C  3000               	movlw	0
  5944  0E7D  05C1               	andwf	(___ftmul@f2+2),f
  5945                           	line	68
  5946                           	
  5947  0E7E                     l11158:	
  5948  0E7E  3000               	movlw	0
  5949  0E7F  00C7               	movwf	(___ftmul@f3_as_product)
  5950  0E80  3000               	movlw	0
  5951  0E81  00C8               	movwf	(___ftmul@f3_as_product+1)
  5952  0E82  3000               	movlw	0
  5953  0E83  00C9               	movwf	(___ftmul@f3_as_product+2)
  5954                           	line	69
  5955                           	
  5956  0E84                     l11160:	
  5957  0E84  3007               	movlw	(07h)
  5958  0E85  00C2               	movwf	(??___ftmul+0)+0
  5959  0E86  0842               	movf	(??___ftmul+0)+0,w
  5960  0E87  00CA               	movwf	(___ftmul@cntr)
  5961  0E88  2E89               	goto	l11162
  5962                           	line	70
  5963                           	
  5964  0E89                     l7585:	
  5965                           	line	71
  5966                           	
  5967  0E89                     l11162:	
  5968  0E89  1C3C               	btfss	(___ftmul@f1),(0)&7
  5969  0E8A  2E8C               	goto	u5221
  5970  0E8B  2E8D               	goto	u5220
  5971  0E8C                     u5221:
  5972  0E8C  2E9E               	goto	l11166
  5973  0E8D                     u5220:
  5974                           	line	72
  5975                           	
  5976  0E8D                     l11164:	
  5977  0E8D  083F               	movf	(___ftmul@f2),w
  5978  0E8E  07C7               	addwf	(___ftmul@f3_as_product),f
  5979  0E8F  0840               	movf	(___ftmul@f2+1),w
  5980  0E90  1103               	clrz
  5981  0E91  1803               	skipnc
  5982  0E92  0A40               	incf	(___ftmul@f2+1),w
  5983  0E93  1903               	skipnz
  5984  0E94  2E96               	goto	u5231
  5985  0E95  07C8               	addwf	(___ftmul@f3_as_product+1),f
  5986  0E96                     u5231:
  5987  0E96  0841               	movf	(___ftmul@f2+2),w
  5988  0E97  1103               	clrz
  5989  0E98  1803               	skipnc
  5990  0E99  0A41               	incf	(___ftmul@f2+2),w
  5991  0E9A  1903               	skipnz
  5992  0E9B  2E9D               	goto	u5232
  5993  0E9C  07C9               	addwf	(___ftmul@f3_as_product+2),f
  5994  0E9D                     u5232:
  5995                           
  5996  0E9D  2E9E               	goto	l11166
  5997                           	
  5998  0E9E                     l7586:	
  5999                           	line	73
  6000                           	
  6001  0E9E                     l11166:	
  6002  0E9E  3001               	movlw	01h
  6003  0E9F                     u5245:
  6004  0E9F  1003               	clrc
  6005  0EA0  0CBE               	rrf	(___ftmul@f1+2),f
  6006  0EA1  0CBD               	rrf	(___ftmul@f1+1),f
  6007  0EA2  0CBC               	rrf	(___ftmul@f1),f
  6008  0EA3  3EFF               	addlw	-1
  6009  0EA4  1D03               	skipz
  6010  0EA5  2E9F               	goto	u5245
  6011                           
  6012                           	line	74
  6013                           	
  6014  0EA6                     l11168:	
  6015  0EA6  3001               	movlw	01h
  6016  0EA7                     u5255:
  6017  0EA7  1003               	clrc
  6018  0EA8  0DBF               	rlf	(___ftmul@f2),f
  6019  0EA9  0DC0               	rlf	(___ftmul@f2+1),f
  6020  0EAA  0DC1               	rlf	(___ftmul@f2+2),f
  6021  0EAB  3EFF               	addlw	-1
  6022  0EAC  1D03               	skipz
  6023  0EAD  2EA7               	goto	u5255
  6024                           	line	75
  6025                           	
  6026  0EAE                     l11170:	
  6027  0EAE  3001               	movlw	low(01h)
  6028  0EAF  02CA               	subwf	(___ftmul@cntr),f
  6029  0EB0  1D03               	btfss	status,2
  6030  0EB1  2EB3               	goto	u5261
  6031  0EB2  2EB4               	goto	u5260
  6032  0EB3                     u5261:
  6033  0EB3  2E89               	goto	l11162
  6034  0EB4                     u5260:
  6035  0EB4  2EB5               	goto	l11172
  6036                           	
  6037  0EB5                     l7587:	
  6038                           	line	76
  6039                           	
  6040  0EB5                     l11172:	
  6041  0EB5  3009               	movlw	(09h)
  6042  0EB6  00C2               	movwf	(??___ftmul+0)+0
  6043  0EB7  0842               	movf	(??___ftmul+0)+0,w
  6044  0EB8  00CA               	movwf	(___ftmul@cntr)
  6045  0EB9  2EBA               	goto	l11174
  6046                           	line	77
  6047                           	
  6048  0EBA                     l7588:	
  6049                           	line	78
  6050                           	
  6051  0EBA                     l11174:	
  6052  0EBA  1C3C               	btfss	(___ftmul@f1),(0)&7
  6053  0EBB  2EBD               	goto	u5271
  6054  0EBC  2EBE               	goto	u5270
  6055  0EBD                     u5271:
  6056  0EBD  2ECF               	goto	l11178
  6057  0EBE                     u5270:
  6058                           	line	79
  6059                           	
  6060  0EBE                     l11176:	
  6061  0EBE  083F               	movf	(___ftmul@f2),w
  6062  0EBF  07C7               	addwf	(___ftmul@f3_as_product),f
  6063  0EC0  0840               	movf	(___ftmul@f2+1),w
  6064  0EC1  1103               	clrz
  6065  0EC2  1803               	skipnc
  6066  0EC3  0A40               	incf	(___ftmul@f2+1),w
  6067  0EC4  1903               	skipnz
  6068  0EC5  2EC7               	goto	u5281
  6069  0EC6  07C8               	addwf	(___ftmul@f3_as_product+1),f
  6070  0EC7                     u5281:
  6071  0EC7  0841               	movf	(___ftmul@f2+2),w
  6072  0EC8  1103               	clrz
  6073  0EC9  1803               	skipnc
  6074  0ECA  0A41               	incf	(___ftmul@f2+2),w
  6075  0ECB  1903               	skipnz
  6076  0ECC  2ECE               	goto	u5282
  6077  0ECD  07C9               	addwf	(___ftmul@f3_as_product+2),f
  6078  0ECE                     u5282:
  6079                           
  6080  0ECE  2ECF               	goto	l11178
  6081                           	
  6082  0ECF                     l7589:	
  6083                           	line	80
  6084                           	
  6085  0ECF                     l11178:	
  6086  0ECF  3001               	movlw	01h
  6087  0ED0                     u5295:
  6088  0ED0  1003               	clrc
  6089  0ED1  0CBE               	rrf	(___ftmul@f1+2),f
  6090  0ED2  0CBD               	rrf	(___ftmul@f1+1),f
  6091  0ED3  0CBC               	rrf	(___ftmul@f1),f
  6092  0ED4  3EFF               	addlw	-1
  6093  0ED5  1D03               	skipz
  6094  0ED6  2ED0               	goto	u5295
  6095                           
  6096                           	line	81
  6097                           	
  6098  0ED7                     l11180:	
  6099  0ED7  3001               	movlw	01h
  6100  0ED8                     u5305:
  6101  0ED8  1003               	clrc
  6102  0ED9  0CC9               	rrf	(___ftmul@f3_as_product+2),f
  6103  0EDA  0CC8               	rrf	(___ftmul@f3_as_product+1),f
  6104  0EDB  0CC7               	rrf	(___ftmul@f3_as_product),f
  6105  0EDC  3EFF               	addlw	-1
  6106  0EDD  1D03               	skipz
  6107  0EDE  2ED8               	goto	u5305
  6108                           
  6109                           	line	82
  6110                           	
  6111  0EDF                     l11182:	
  6112  0EDF  3001               	movlw	low(01h)
  6113  0EE0  02CA               	subwf	(___ftmul@cntr),f
  6114  0EE1  1D03               	btfss	status,2
  6115  0EE2  2EE4               	goto	u5311
  6116  0EE3  2EE5               	goto	u5310
  6117  0EE4                     u5311:
  6118  0EE4  2EBA               	goto	l11174
  6119  0EE5                     u5310:
  6120  0EE5  2EE6               	goto	l11184
  6121                           	
  6122  0EE6                     l7590:	
  6123                           	line	83
  6124                           	
  6125  0EE6                     l11184:	
  6126  0EE6  0847               	movf	(___ftmul@f3_as_product),w
  6127  0EE7  00A0               	movwf	(?___ftpack)
  6128  0EE8  0848               	movf	(___ftmul@f3_as_product+1),w
  6129  0EE9  00A1               	movwf	(?___ftpack+1)
  6130  0EEA  0849               	movf	(___ftmul@f3_as_product+2),w
  6131  0EEB  00A2               	movwf	(?___ftpack+2)
  6132  0EEC  0846               	movf	(___ftmul@exp),w
  6133  0EED  00C2               	movwf	(??___ftmul+0)+0
  6134  0EEE  0842               	movf	(??___ftmul+0)+0,w
  6135  0EEF  00A3               	movwf	0+(?___ftpack)+03h
  6136  0EF0  084B               	movf	(___ftmul@sign),w
  6137  0EF1  00C3               	movwf	(??___ftmul+1)+0
  6138  0EF2  0843               	movf	(??___ftmul+1)+0,w
  6139  0EF3  00A4               	movwf	0+(?___ftpack)+04h
  6140  0EF4  120A  158A  2273   	fcall	___ftpack
              120A  158A         
  6141  0EF9  1283               	bcf	status, 5	;RP0=0, select bank0
  6142  0EFA  1303               	bcf	status, 6	;RP1=0, select bank0
  6143  0EFB  0820               	movf	(0+(?___ftpack)),w
  6144  0EFC  00BC               	movwf	(?___ftmul)
  6145  0EFD  0821               	movf	(1+(?___ftpack)),w
  6146  0EFE  00BD               	movwf	(?___ftmul+1)
  6147  0EFF  0822               	movf	(2+(?___ftpack)),w
  6148  0F00  00BE               	movwf	(?___ftmul+2)
  6149  0F01  2F02               	goto	l7583
  6150                           	
  6151  0F02                     l11186:	
  6152                           	line	84
  6153                           	
  6154  0F02                     l7583:	
  6155  0F02  0008               	return
  6156                           	opt stack 0
  6157                           GLOBAL	__end_of___ftmul
  6158  0F03                     	__end_of___ftmul:
  6159 ;; =============== function ___ftmul ends ============
  6160                           
  6161                           	signat	___ftmul,8315
  6162                           	global	_abs
  6163                           psect	text1087,local,class=CODE,delta=2
  6164                           global __ptext1087
  6165  1620                     __ptext1087:
  6166                           
  6167 ;; *************** function _abs *****************
  6168 ;; Defined at:
  6169 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  v               2    6[BANK0 ] int 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;		None
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  2    6[BANK0 ] int 
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6183 ;;      Params:         0       2       0       0       0
  6184 ;;      Locals:         0       0       0       0       0
  6185 ;;      Temps:          0       2       0       0       0
  6186 ;;      Totals:         0       4       0       0       0
  6187 ;;Total ram usage:        4 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:    4
  6190 ;; This function calls:
  6191 ;;		___wmul
  6192 ;; This function is called by:
  6193 ;;		_robotMoveSpeed
  6194 ;;		_robotTurnSpeed
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           psect	text1087
  6198                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6199                           	line	201
  6200                           	global	__size_of_abs
  6201  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  6202                           	
  6203  1620                     _abs:	
  6204                           	opt	stack 2
  6205                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6206                           	line	202
  6207                           	
  6208  1620                     l11134:	
  6209                           ;robot.c: 202: return (v * ((v > 0) - (v < 0)));
  6210  1620  3000               	movlw	0
  6211  1621  1283               	bcf	status, 5	;RP0=0, select bank0
  6212  1622  1303               	bcf	status, 6	;RP1=0, select bank0
  6213  1623  1BA7               	btfsc	(abs@v+1),7
  6214  1624  3001               	movlw	1
  6215  1625  00A8               	movwf	(??_abs+0)+0
  6216  1626  01A9               	clrf	(??_abs+0)+0+1
  6217  1627  09A8               	comf	(??_abs+0)+0,f
  6218  1628  09A9               	comf	(??_abs+0)+1,f
  6219  1629  0AA8               	incf	(??_abs+0)+0,f
  6220  162A  1903               	skipnz
  6221  162B  0AA9               	incf	(??_abs+0)+1,f
  6222  162C  0827               	movf	(abs@v+1),w
  6223  162D  3A80               	xorlw	80h
  6224  162E  00FF               	movwf	btemp+1
  6225  162F  3080               	movlw	(high(01h))^80h
  6226  1630  027F               	subwf	btemp+1,w
  6227  1631  1D03               	skipz
  6228  1632  2E35               	goto	u5175
  6229  1633  3001               	movlw	low(01h)
  6230  1634  0226               	subwf	(abs@v),w
  6231  1635                     u5175:
  6232                           
  6233  1635  3000               	movlw	0
  6234  1636  1803               	skipnc
  6235  1637  3001               	movlw	1
  6236  1638  1283               	bcf	status, 5	;RP0=0, select bank0
  6237  1639  1303               	bcf	status, 6	;RP1=0, select bank0
  6238  163A  0728               	addwf	0+(??_abs+0)+0,w
  6239  163B  00A0               	movwf	(?___wmul)
  6240  163C  0829               	movf	1+(??_abs+0)+0,w
  6241  163D  1803               	skipnc
  6242  163E  0A29               	incf	1+(??_abs+0)+0,w
  6243  163F  00A1               	movwf	((?___wmul))+1
  6244  1640  0827               	movf	(abs@v+1),w
  6245  1641  01A3               	clrf	1+(?___wmul)+02h
  6246  1642  07A3               	addwf	1+(?___wmul)+02h
  6247  1643  0826               	movf	(abs@v),w
  6248  1644  01A2               	clrf	0+(?___wmul)+02h
  6249  1645  07A2               	addwf	0+(?___wmul)+02h
  6250                           
  6251  1646  160A  118A  24B7   	fcall	___wmul
              160A  118A         
  6252  164B  1283               	bcf	status, 5	;RP0=0, select bank0
  6253  164C  1303               	bcf	status, 6	;RP1=0, select bank0
  6254  164D  0821               	movf	(1+(?___wmul)),w
  6255  164E  01A7               	clrf	(?_abs+1)
  6256  164F  07A7               	addwf	(?_abs+1)
  6257  1650  0820               	movf	(0+(?___wmul)),w
  6258  1651  01A6               	clrf	(?_abs)
  6259  1652  07A6               	addwf	(?_abs)
  6260                           
  6261  1653  2E54               	goto	l6039
  6262                           	
  6263  1654                     l11136:	
  6264                           	line	203
  6265                           	
  6266  1654                     l6039:	
  6267  1654  0008               	return
  6268                           	opt stack 0
  6269                           GLOBAL	__end_of_abs
  6270  1655                     	__end_of_abs:
  6271 ;; =============== function _abs ends ============
  6272                           
  6273                           	signat	_abs,4218
  6274                           	global	_RobotDrive
  6275                           psect	text1088,local,class=CODE,delta=2
  6276                           global __ptext1088
  6277  1594                     __ptext1088:
  6278                           
  6279 ;; *************** function _RobotDrive *****************
  6280 ;; Defined at:
  6281 ;;		line 81 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  speed           2    2[BANK0 ] int 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  speedhighByt    1    6[BANK0 ] unsigned char 
  6286 ;;  speedlowByte    1    5[BANK0 ] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;		None               void
  6289 ;; Registers used:
  6290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6296 ;;      Params:         0       2       0       0       0
  6297 ;;      Locals:         0       2       0       0       0
  6298 ;;      Temps:          0       1       0       0       0
  6299 ;;      Totals:         0       5       0       0       0
  6300 ;;Total ram usage:        5 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    4
  6303 ;; This function calls:
  6304 ;;		_ser_putch
  6305 ;; This function is called by:
  6306 ;;		_robotMoveSpeed
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           psect	text1088
  6310                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6311                           	line	81
  6312                           	global	__size_of_RobotDrive
  6313  002D                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  6314                           	
  6315  1594                     _RobotDrive:	
  6316                           	opt	stack 2
  6317                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6318                           	line	83
  6319                           	
  6320  1594                     l11120:	
  6321                           ;robot.c: 83: unsigned char speedlowByte = (unsigned char)(speed);
  6322  1594  1283               	bcf	status, 5	;RP0=0, select bank0
  6323  1595  1303               	bcf	status, 6	;RP1=0, select bank0
  6324  1596  0822               	movf	(RobotDrive@speed),w
  6325  1597  00A4               	movwf	(??_RobotDrive+0)+0
  6326  1598  0824               	movf	(??_RobotDrive+0)+0,w
  6327  1599  00A5               	movwf	(RobotDrive@speedlowByte)
  6328                           	line	84
  6329                           	
  6330  159A                     l11122:	
  6331                           ;robot.c: 84: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  6332  159A  0823               	movf	(RobotDrive@speed+1),w
  6333  159B  00A4               	movwf	(??_RobotDrive+0)+0
  6334  159C  0824               	movf	(??_RobotDrive+0)+0,w
  6335  159D  00A6               	movwf	(RobotDrive@speedhighByte)
  6336                           	line	86
  6337                           	
  6338  159E                     l11124:	
  6339                           ;robot.c: 86: ser_putch(137);
  6340  159E  3089               	movlw	(089h)
  6341  159F  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  6342                           	line	88
  6343                           	
  6344  15A4                     l11126:	
  6345                           ;robot.c: 88: ser_putch(speedhighByte);
  6346  15A4  1283               	bcf	status, 5	;RP0=0, select bank0
  6347  15A5  1303               	bcf	status, 6	;RP1=0, select bank0
  6348  15A6  0826               	movf	(RobotDrive@speedhighByte),w
  6349  15A7  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  6350                           	line	90
  6351                           	
  6352  15AC                     l11128:	
  6353                           ;robot.c: 90: ser_putch(speedlowByte);
  6354  15AC  1283               	bcf	status, 5	;RP0=0, select bank0
  6355  15AD  1303               	bcf	status, 6	;RP1=0, select bank0
  6356  15AE  0825               	movf	(RobotDrive@speedlowByte),w
  6357  15AF  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  6358                           	line	92
  6359                           	
  6360  15B4                     l11130:	
  6361                           ;robot.c: 92: ser_putch(128);
  6362  15B4  3080               	movlw	(080h)
  6363  15B5  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  6364                           	line	94
  6365                           	
  6366  15BA                     l11132:	
  6367                           ;robot.c: 94: ser_putch(0);
  6368  15BA  3000               	movlw	(0)
  6369  15BB  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  6370                           	line	95
  6371                           	
  6372  15C0                     l6015:	
  6373  15C0  0008               	return
  6374                           	opt stack 0
  6375                           GLOBAL	__end_of_RobotDrive
  6376  15C1                     	__end_of_RobotDrive:
  6377 ;; =============== function _RobotDrive ends ============
  6378                           
  6379                           	signat	_RobotDrive,4216
  6380                           	global	_ser_getch
  6381                           psect	text1089,local,class=CODE,delta=2
  6382                           global __ptext1089
  6383  14E3                     __ptext1089:
  6384                           
  6385 ;; *************** function _ser_getch *****************
  6386 ;; Defined at:
  6387 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;  c               1    1[BANK0 ] unsigned char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      unsigned char 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6401 ;;      Params:         0       0       0       0       0
  6402 ;;      Locals:         0       1       0       0       0
  6403 ;;      Temps:          0       1       0       0       0
  6404 ;;      Totals:         0       2       0       0       0
  6405 ;;Total ram usage:        2 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    4
  6408 ;; This function calls:
  6409 ;;		_ser_isrx
  6410 ;; This function is called by:
  6411 ;;		_robot_read
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           psect	text1089
  6415                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  6416                           	line	55
  6417                           	global	__size_of_ser_getch
  6418  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  6419                           	
  6420  14E3                     _ser_getch:	
  6421                           	opt	stack 1
  6422                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6423                           	line	58
  6424                           	
  6425  14E3                     l11104:	
  6426                           ;ser.c: 56: unsigned char c;
  6427                           ;ser.c: 58: while (ser_isrx()==0)
  6428  14E3  2CE5               	goto	l11106
  6429                           	
  6430  14E4                     l6743:	
  6431                           	line	59
  6432                           ;ser.c: 59: continue;
  6433  14E4  2CE5               	goto	l11106
  6434                           	
  6435  14E5                     l6742:	
  6436                           	line	58
  6437                           	
  6438  14E5                     l11106:	
  6439  14E5  160A  118A  240A   	fcall	_ser_isrx
              160A  118A         
  6440  14EA  1C03               	btfss	status,0
  6441  14EB  2CED               	goto	u5161
  6442  14EC  2CEE               	goto	u5160
  6443  14ED                     u5161:
  6444  14ED  2CE5               	goto	l11106
  6445  14EE                     u5160:
  6446                           	
  6447  14EE                     l6744:	
  6448                           	line	61
  6449                           ;ser.c: 61: GIE=0;
  6450  14EE  138B               	bcf	(95/8),(95)&7
  6451                           	line	62
  6452                           	
  6453  14EF                     l11108:	
  6454                           ;ser.c: 62: c=rxfifo[rxoptr];
  6455  14EF  1683               	bsf	status, 5	;RP0=1, select bank1
  6456  14F0  1303               	bcf	status, 6	;RP1=0, select bank1
  6457  14F1  0855               	movf	(_rxoptr)^080h,w
  6458  14F2  3EA0               	addlw	_rxfifo&0ffh
  6459  14F3  0084               	movwf	fsr0
  6460  14F4  1383               	bcf	status, 7	;select IRP bank1
  6461  14F5  0800               	movf	indf,w
  6462  14F6  1283               	bcf	status, 5	;RP0=0, select bank0
  6463  14F7  1303               	bcf	status, 6	;RP1=0, select bank0
  6464  14F8  00A0               	movwf	(??_ser_getch+0)+0
  6465  14F9  0820               	movf	(??_ser_getch+0)+0,w
  6466  14FA  00A1               	movwf	(ser_getch@c)
  6467                           	line	63
  6468                           	
  6469  14FB                     l11110:	
  6470                           ;ser.c: 63: ++rxoptr;
  6471  14FB  3001               	movlw	(01h)
  6472  14FC  00A0               	movwf	(??_ser_getch+0)+0
  6473  14FD  0820               	movf	(??_ser_getch+0)+0,w
  6474  14FE  1683               	bsf	status, 5	;RP0=1, select bank1
  6475  14FF  1303               	bcf	status, 6	;RP1=0, select bank1
  6476  1500  07D5               	addwf	(_rxoptr)^080h,f	;volatile
  6477                           	line	64
  6478                           	
  6479  1501                     l11112:	
  6480                           ;ser.c: 64: rxoptr &= (16-1);
  6481  1501  300F               	movlw	(0Fh)
  6482  1502  1283               	bcf	status, 5	;RP0=0, select bank0
  6483  1503  1303               	bcf	status, 6	;RP1=0, select bank0
  6484  1504  00A0               	movwf	(??_ser_getch+0)+0
  6485  1505  0820               	movf	(??_ser_getch+0)+0,w
  6486  1506  1683               	bsf	status, 5	;RP0=1, select bank1
  6487  1507  1303               	bcf	status, 6	;RP1=0, select bank1
  6488  1508  05D5               	andwf	(_rxoptr)^080h,f	;volatile
  6489                           	line	65
  6490                           	
  6491  1509                     l11114:	
  6492                           ;ser.c: 65: GIE=1;
  6493  1509  178B               	bsf	(95/8),(95)&7
  6494                           	line	66
  6495                           	
  6496  150A                     l11116:	
  6497                           ;ser.c: 66: return c;
  6498  150A  1283               	bcf	status, 5	;RP0=0, select bank0
  6499  150B  1303               	bcf	status, 6	;RP1=0, select bank0
  6500  150C  0821               	movf	(ser_getch@c),w
  6501  150D  2D0E               	goto	l6745
  6502                           	
  6503  150E                     l11118:	
  6504                           	line	67
  6505                           	
  6506  150E                     l6745:	
  6507  150E  0008               	return
  6508                           	opt stack 0
  6509                           GLOBAL	__end_of_ser_getch
  6510  150F                     	__end_of_ser_getch:
  6511 ;; =============== function _ser_getch ends ============
  6512                           
  6513                           	signat	_ser_getch,89
  6514                           	global	_sprintf
  6515                           psect	text1090,local,class=CODE,delta=2
  6516                           global __ptext1090
  6517  0629                     __ptext1090:
  6518                           
  6519 ;; *************** function _sprintf *****************
  6520 ;; Defined at:
  6521 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  sp              1    wreg     PTR unsigned char 
  6524 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6525 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  6526 ;;		 -> STR_13(13), 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  6529 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6530 ;;  _val            4   31[BANK0 ] struct .
  6531 ;;  c               1   36[BANK0 ] char 
  6532 ;;  prec            1   30[BANK0 ] char 
  6533 ;;  flag            1   29[BANK0 ] unsigned char 
  6534 ;;  ap              1   28[BANK0 ] PTR void [1]
  6535 ;;		 -> ?_sprintf(2), 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  2   20[BANK0 ] int 
  6538 ;; Registers used:
  6539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6545 ;;      Params:         0       5       0       0       0
  6546 ;;      Locals:         0       9       0       0       0
  6547 ;;      Temps:          0       3       0       0       0
  6548 ;;      Totals:         0      17       0       0       0
  6549 ;;Total ram usage:       17 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    4
  6552 ;; This function calls:
  6553 ;;		___lwdiv
  6554 ;;		___lwmod
  6555 ;; This function is called by:
  6556 ;;		_UpdateDisplay
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           psect	text1090
  6560                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  6561                           	line	488
  6562                           	global	__size_of_sprintf
  6563  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  6564                           	
  6565  0629                     _sprintf:	
  6566                           	opt	stack 1
  6567                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6568                           ;sprintf@sp stored from wreg
  6569                           	line	537
  6570  0629  1283               	bcf	status, 5	;RP0=0, select bank0
  6571  062A  1303               	bcf	status, 6	;RP1=0, select bank0
  6572  062B  00C3               	movwf	(sprintf@sp)
  6573                           	
  6574  062C                     l11046:	
  6575  062C  3035               	movlw	(?_sprintf+01h)&0ffh
  6576  062D  00B9               	movwf	(??_sprintf+0)+0
  6577  062E  0839               	movf	(??_sprintf+0)+0,w
  6578  062F  00BC               	movwf	(sprintf@ap)
  6579                           	line	540
  6580  0630  2F0F               	goto	l11098
  6581                           	
  6582  0631                     l6783:	
  6583                           	line	542
  6584                           	
  6585  0631                     l11048:	
  6586  0631  0844               	movf	(sprintf@c),w
  6587  0632  3A25               	xorlw	025h
  6588  0633  1903               	skipnz
  6589  0634  2E36               	goto	u5081
  6590  0635  2E37               	goto	u5080
  6591  0636                     u5081:
  6592  0636  2E43               	goto	l6784
  6593  0637                     u5080:
  6594                           	line	545
  6595                           	
  6596  0637                     l11050:	
  6597  0637  0844               	movf	(sprintf@c),w
  6598  0638  00B9               	movwf	(??_sprintf+0)+0
  6599  0639  0843               	movf	(sprintf@sp),w
  6600  063A  0084               	movwf	fsr0
  6601  063B  0839               	movf	(??_sprintf+0)+0,w
  6602  063C  1383               	bcf	status, 7	;select IRP bank0
  6603  063D  0080               	movwf	indf
  6604                           	
  6605  063E                     l11052:	
  6606  063E  3001               	movlw	(01h)
  6607  063F  00B9               	movwf	(??_sprintf+0)+0
  6608  0640  0839               	movf	(??_sprintf+0)+0,w
  6609  0641  07C3               	addwf	(sprintf@sp),f
  6610                           	line	546
  6611  0642  2F0F               	goto	l11098
  6612                           	line	547
  6613                           	
  6614  0643                     l6784:	
  6615                           	line	552
  6616  0643  01BD               	clrf	(sprintf@flag)
  6617                           	line	638
  6618  0644  2E4A               	goto	l11056
  6619                           	line	640
  6620                           	
  6621  0645                     l6786:	
  6622                           	line	641
  6623  0645  2F23               	goto	l11100
  6624                           	line	700
  6625                           	
  6626  0646                     l6788:	
  6627  0646  2E5F               	goto	l11058
  6628                           	line	701
  6629                           	
  6630  0647                     l6789:	
  6631                           	line	702
  6632  0647  2E5F               	goto	l11058
  6633                           	line	805
  6634                           	
  6635  0648                     l6791:	
  6636                           	line	816
  6637  0648  2F0F               	goto	l11098
  6638                           	line	825
  6639                           	
  6640  0649                     l11054:	
  6641  0649  2E5F               	goto	l11058
  6642                           	line	638
  6643                           	
  6644  064A                     l6785:	
  6645                           	
  6646  064A                     l11056:	
  6647  064A  3001               	movlw	01h
  6648  064B  07B4               	addwf	(sprintf@f),f
  6649  064C  30FF               	movlw	-01h
  6650  064D  0734               	addwf	(sprintf@f),w
  6651  064E  0084               	movwf	fsr0
  6652  064F  120A  118A  2733   	fcall	stringdir
              120A  118A         
  6653  0654  00C4               	movwf	(sprintf@c)
  6654                           	; Switch size 1, requested type "space"
  6655                           ; Number of cases is 3, Range of values is 0 to 105
  6656                           ; switch strategies available:
  6657                           ; Name         Instructions Cycles
  6658                           ; simple_byte           10     6 (average)
  6659                           ; jumptable            260     6 (fixed)
  6660                           ; rangetable           110     6 (fixed)
  6661                           ; spacedrange          218     9 (fixed)
  6662                           ; locatedrange         106     3 (fixed)
  6663                           ;	Chosen strategy is simple_byte
  6664                           
  6665                           	opt asmopt_off
  6666  0655  3A00               	xorlw	0^0	; case 0
  6667  0656  1903               	skipnz
  6668  0657  2F23               	goto	l11100
  6669  0658  3A64               	xorlw	100^0	; case 100
  6670  0659  1903               	skipnz
  6671  065A  2E5F               	goto	l11058
  6672  065B  3A0D               	xorlw	105^100	; case 105
  6673  065C  1903               	skipnz
  6674  065D  2E5F               	goto	l11058
  6675  065E  2F0F               	goto	l11098
  6676                           	opt asmopt_on
  6677                           
  6678                           	line	825
  6679                           	
  6680  065F                     l6790:	
  6681                           	line	1254
  6682                           	
  6683  065F                     l11058:	
  6684  065F  083C               	movf	(sprintf@ap),w
  6685  0660  0084               	movwf	fsr0
  6686  0661  1383               	bcf	status, 7	;select IRP bank0
  6687  0662  0800               	movf	indf,w
  6688  0663  00BF               	movwf	(sprintf@_val)
  6689  0664  0A84               	incf	fsr0,f
  6690  0665  0800               	movf	indf,w
  6691  0666  00C0               	movwf	(sprintf@_val+1)
  6692                           	
  6693  0667                     l11060:	
  6694  0667  3002               	movlw	(02h)
  6695  0668  00B9               	movwf	(??_sprintf+0)+0
  6696  0669  0839               	movf	(??_sprintf+0)+0,w
  6697  066A  07BC               	addwf	(sprintf@ap),f
  6698                           	line	1256
  6699                           	
  6700  066B                     l11062:	
  6701  066B  1FC0               	btfss	(sprintf@_val+1),7
  6702  066C  2E6E               	goto	u5091
  6703  066D  2E6F               	goto	u5090
  6704  066E                     u5091:
  6705  066E  2E79               	goto	l11068
  6706  066F                     u5090:
  6707                           	line	1257
  6708                           	
  6709  066F                     l11064:	
  6710  066F  3003               	movlw	(03h)
  6711  0670  00B9               	movwf	(??_sprintf+0)+0
  6712  0671  0839               	movf	(??_sprintf+0)+0,w
  6713  0672  04BD               	iorwf	(sprintf@flag),f
  6714                           	line	1258
  6715                           	
  6716  0673                     l11066:	
  6717  0673  09BF               	comf	(sprintf@_val),f
  6718  0674  09C0               	comf	(sprintf@_val+1),f
  6719  0675  0ABF               	incf	(sprintf@_val),f
  6720  0676  1903               	skipnz
  6721  0677  0AC0               	incf	(sprintf@_val+1),f
  6722  0678  2E79               	goto	l11068
  6723                           	line	1259
  6724                           	
  6725  0679                     l6792:	
  6726                           	line	1300
  6727                           	
  6728  0679                     l11068:	
  6729  0679  01C4               	clrf	(sprintf@c)
  6730  067A  1403               	bsf	status,0
  6731  067B  0DC4               	rlf	(sprintf@c),f
  6732                           	
  6733  067C                     l11070:	
  6734  067C  0844               	movf	(sprintf@c),w
  6735  067D  3A05               	xorlw	05h
  6736  067E  1D03               	skipz
  6737  067F  2E81               	goto	u5101
  6738  0680  2E82               	goto	u5100
  6739  0681                     u5101:
  6740  0681  2E84               	goto	l11074
  6741  0682                     u5100:
  6742  0682  2EAC               	goto	l11082
  6743                           	
  6744  0683                     l11072:	
  6745  0683  2EAC               	goto	l11082
  6746                           	line	1301
  6747                           	
  6748  0684                     l6793:	
  6749                           	
  6750  0684                     l11074:	
  6751  0684  0844               	movf	(sprintf@c),w
  6752  0685  00B9               	movwf	(??_sprintf+0)+0
  6753  0686  0739               	addwf	(??_sprintf+0)+0,w
  6754  0687  3E01               	addlw	low((_dpowers-__stringbase))
  6755  0688  0084               	movwf	fsr0
  6756  0689  120A  118A  2733   	fcall	stringdir
              120A  118A         
  6757  068E  00BA               	movwf	(??_sprintf+1)+0
  6758  068F  120A  118A  2733   	fcall	stringdir
              120A  118A         
  6759  0694  00BB               	movwf	(??_sprintf+1)+0+1
  6760  0695  083B               	movf	1+(??_sprintf+1)+0,w
  6761  0696  0240               	subwf	(sprintf@_val+1),w
  6762  0697  1D03               	skipz
  6763  0698  2E9B               	goto	u5115
  6764  0699  083A               	movf	0+(??_sprintf+1)+0,w
  6765  069A  023F               	subwf	(sprintf@_val),w
  6766  069B                     u5115:
  6767  069B  1803               	skipnc
  6768  069C  2E9E               	goto	u5111
  6769  069D  2E9F               	goto	u5110
  6770  069E                     u5111:
  6771  069E  2EA1               	goto	l11078
  6772  069F                     u5110:
  6773  069F  2EAC               	goto	l11082
  6774                           	line	1302
  6775                           	
  6776  06A0                     l11076:	
  6777  06A0  2EAC               	goto	l11082
  6778                           	
  6779  06A1                     l6795:	
  6780                           	line	1300
  6781                           	
  6782  06A1                     l11078:	
  6783  06A1  3001               	movlw	(01h)
  6784  06A2  00B9               	movwf	(??_sprintf+0)+0
  6785  06A3  0839               	movf	(??_sprintf+0)+0,w
  6786  06A4  07C4               	addwf	(sprintf@c),f
  6787                           	
  6788  06A5                     l11080:	
  6789  06A5  0844               	movf	(sprintf@c),w
  6790  06A6  3A05               	xorlw	05h
  6791  06A7  1D03               	skipz
  6792  06A8  2EAA               	goto	u5121
  6793  06A9  2EAB               	goto	u5120
  6794  06AA                     u5121:
  6795  06AA  2E84               	goto	l11074
  6796  06AB                     u5120:
  6797  06AB  2EAC               	goto	l11082
  6798                           	
  6799  06AC                     l6794:	
  6800                           	line	1433
  6801                           	
  6802  06AC                     l11082:	
  6803  06AC  083D               	movf	(sprintf@flag),w
  6804  06AD  3903               	andlw	03h
  6805  06AE  1903               	btfsc	status,2
  6806  06AF  2EB1               	goto	u5131
  6807  06B0  2EB2               	goto	u5130
  6808  06B1                     u5131:
  6809  06B1  2EBE               	goto	l11088
  6810  06B2                     u5130:
  6811                           	line	1434
  6812                           	
  6813  06B2                     l11084:	
  6814  06B2  302D               	movlw	(02Dh)
  6815  06B3  00B9               	movwf	(??_sprintf+0)+0
  6816  06B4  0843               	movf	(sprintf@sp),w
  6817  06B5  0084               	movwf	fsr0
  6818  06B6  0839               	movf	(??_sprintf+0)+0,w
  6819  06B7  1383               	bcf	status, 7	;select IRP bank0
  6820  06B8  0080               	movwf	indf
  6821                           	
  6822  06B9                     l11086:	
  6823  06B9  3001               	movlw	(01h)
  6824  06BA  00B9               	movwf	(??_sprintf+0)+0
  6825  06BB  0839               	movf	(??_sprintf+0)+0,w
  6826  06BC  07C3               	addwf	(sprintf@sp),f
  6827  06BD  2EBE               	goto	l11088
  6828                           	
  6829  06BE                     l6796:	
  6830                           	line	1467
  6831                           	
  6832  06BE                     l11088:	
  6833  06BE  0844               	movf	(sprintf@c),w
  6834  06BF  00B9               	movwf	(??_sprintf+0)+0
  6835  06C0  0839               	movf	(??_sprintf+0)+0,w
  6836  06C1  00BE               	movwf	(sprintf@prec)
  6837                           	line	1469
  6838  06C2  2F03               	goto	l11096
  6839                           	
  6840  06C3                     l6798:	
  6841                           	line	1484
  6842                           	
  6843  06C3                     l11090:	
  6844  06C3  300A               	movlw	low(0Ah)
  6845  06C4  00AE               	movwf	(?___lwmod)
  6846  06C5  3000               	movlw	high(0Ah)
  6847  06C6  00AF               	movwf	((?___lwmod))+1
  6848  06C7  083E               	movf	(sprintf@prec),w
  6849  06C8  00B9               	movwf	(??_sprintf+0)+0
  6850  06C9  0739               	addwf	(??_sprintf+0)+0,w
  6851  06CA  3E01               	addlw	low((_dpowers-__stringbase))
  6852  06CB  0084               	movwf	fsr0
  6853  06CC  120A  118A  2733   	fcall	stringdir
              120A  118A         
  6854  06D1  00A6               	movwf	(?___lwdiv)
  6855  06D2  120A  118A  2733   	fcall	stringdir
              120A  118A         
  6856  06D7  00A7               	movwf	(?___lwdiv+1)
  6857  06D8  0840               	movf	(sprintf@_val+1),w
  6858  06D9  01A9               	clrf	1+(?___lwdiv)+02h
  6859  06DA  07A9               	addwf	1+(?___lwdiv)+02h
  6860  06DB  083F               	movf	(sprintf@_val),w
  6861  06DC  01A8               	clrf	0+(?___lwdiv)+02h
  6862  06DD  07A8               	addwf	0+(?___lwdiv)+02h
  6863                           
  6864  06DE  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  6865  06E3  1283               	bcf	status, 5	;RP0=0, select bank0
  6866  06E4  1303               	bcf	status, 6	;RP1=0, select bank0
  6867  06E5  0827               	movf	(1+(?___lwdiv)),w
  6868  06E6  01B1               	clrf	1+(?___lwmod)+02h
  6869  06E7  07B1               	addwf	1+(?___lwmod)+02h
  6870  06E8  0826               	movf	(0+(?___lwdiv)),w
  6871  06E9  01B0               	clrf	0+(?___lwmod)+02h
  6872  06EA  07B0               	addwf	0+(?___lwmod)+02h
  6873                           
  6874  06EB  160A  118A  26D4   	fcall	___lwmod
              120A  118A         
  6875  06F0  1283               	bcf	status, 5	;RP0=0, select bank0
  6876  06F1  1303               	bcf	status, 6	;RP1=0, select bank0
  6877  06F2  082E               	movf	(0+(?___lwmod)),w
  6878  06F3  3E30               	addlw	030h
  6879  06F4  00BA               	movwf	(??_sprintf+1)+0
  6880  06F5  083A               	movf	(??_sprintf+1)+0,w
  6881  06F6  00C4               	movwf	(sprintf@c)
  6882                           	line	1516
  6883                           	
  6884  06F7                     l11092:	
  6885  06F7  0844               	movf	(sprintf@c),w
  6886  06F8  00B9               	movwf	(??_sprintf+0)+0
  6887  06F9  0843               	movf	(sprintf@sp),w
  6888  06FA  0084               	movwf	fsr0
  6889  06FB  0839               	movf	(??_sprintf+0)+0,w
  6890  06FC  1383               	bcf	status, 7	;select IRP bank0
  6891  06FD  0080               	movwf	indf
  6892                           	
  6893  06FE                     l11094:	
  6894  06FE  3001               	movlw	(01h)
  6895  06FF  00B9               	movwf	(??_sprintf+0)+0
  6896  0700  0839               	movf	(??_sprintf+0)+0,w
  6897  0701  07C3               	addwf	(sprintf@sp),f
  6898  0702  2F03               	goto	l11096
  6899                           	line	1517
  6900                           	
  6901  0703                     l6797:	
  6902                           	line	1469
  6903                           	
  6904  0703                     l11096:	
  6905  0703  30FF               	movlw	(-1)
  6906  0704  00B9               	movwf	(??_sprintf+0)+0
  6907  0705  0839               	movf	(??_sprintf+0)+0,w
  6908  0706  07BE               	addwf	(sprintf@prec),f
  6909  0707  083E               	movf	((sprintf@prec)),w
  6910  0708  3AFF               	xorlw	-1
  6911  0709  1D03               	skipz
  6912  070A  2F0C               	goto	u5141
  6913  070B  2F0D               	goto	u5140
  6914  070C                     u5141:
  6915  070C  2EC3               	goto	l11090
  6916  070D                     u5140:
  6917  070D  2F0F               	goto	l11098
  6918                           	
  6919  070E                     l6799:	
  6920  070E  2F0F               	goto	l11098
  6921                           	line	1525
  6922                           	
  6923  070F                     l6782:	
  6924                           	line	540
  6925                           	
  6926  070F                     l11098:	
  6927  070F  3001               	movlw	01h
  6928  0710  07B4               	addwf	(sprintf@f),f
  6929  0711  30FF               	movlw	-01h
  6930  0712  0734               	addwf	(sprintf@f),w
  6931  0713  0084               	movwf	fsr0
  6932  0714  120A  118A  2733   	fcall	stringdir
              120A  118A         
  6933  0719  00B9               	movwf	(??_sprintf+0)+0
  6934  071A  0839               	movf	(??_sprintf+0)+0,w
  6935  071B  00C4               	movwf	(sprintf@c)
  6936  071C  08C4               	movf	((sprintf@c)),f
  6937  071D  1D03               	skipz
  6938  071E  2F20               	goto	u5151
  6939  071F  2F21               	goto	u5150
  6940  0720                     u5151:
  6941  0720  2E31               	goto	l11048
  6942  0721                     u5150:
  6943  0721  2F23               	goto	l11100
  6944                           	
  6945  0722                     l6800:	
  6946  0722  2F23               	goto	l11100
  6947                           	line	1527
  6948                           	
  6949  0723                     l6787:	
  6950                           	line	1530
  6951                           	
  6952  0723                     l11100:	
  6953  0723  0843               	movf	(sprintf@sp),w
  6954  0724  0084               	movwf	fsr0
  6955  0725  1383               	bcf	status, 7	;select IRP bank0
  6956  0726  0180               	clrf	indf
  6957  0727  2F28               	goto	l6801
  6958                           	line	1532
  6959                           	
  6960  0728                     l11102:	
  6961                           	line	1533
  6962                           ;	Return value of _sprintf is never used
  6963                           	
  6964  0728                     l6801:	
  6965  0728  0008               	return
  6966                           	opt stack 0
  6967                           GLOBAL	__end_of_sprintf
  6968  0729                     	__end_of_sprintf:
  6969 ;; =============== function _sprintf ends ============
  6970                           
  6971                           	signat	_sprintf,4698
  6972                           	global	_ADCconvert
  6973                           psect	text1091,local,class=CODE,delta=2
  6974                           global __ptext1091
  6975  0015                     __ptext1091:
  6976                           
  6977 ;; *************** function _ADCconvert *****************
  6978 ;; Defined at:
  6979 ;;		line 58 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;		None               void
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0, pclath, cstack
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6993 ;;      Params:         0       0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0
  6995 ;;      Temps:          0       2       0       0       0
  6996 ;;      Totals:         0       2       0       0       0
  6997 ;;Total ram usage:        2 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    4
  7000 ;; This function calls:
  7001 ;;		___wmul
  7002 ;;		___lwdiv
  7003 ;; This function is called by:
  7004 ;;		_readAvgDistance
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           psect	text1091
  7008                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  7009                           	line	58
  7010                           	global	__size_of_ADCconvert
  7011  0263                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  7012                           	
  7013  0015                     _ADCconvert:	
  7014                           	opt	stack 1
  7015                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  7016                           	line	64
  7017                           	
  7018  0015                     l11004:	
  7019                           ;infrared.c: 64: if (adcVal >= 213 && adcVal < 234)
  7020  0015  3000               	movlw	high(0D5h)
  7021  0016  1683               	bsf	status, 5	;RP0=1, select bank1
  7022  0017  1303               	bcf	status, 6	;RP1=0, select bank1
  7023  0018  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7024  0019  30D5               	movlw	low(0D5h)
  7025  001A  1903               	skipnz
  7026  001B  0236               	subwf	(_adcVal)^080h,w	;volatile
  7027  001C  1C03               	skipc
  7028  001D  281F               	goto	u4941
  7029  001E  2820               	goto	u4940
  7030  001F                     u4941:
  7031  001F  286D               	goto	l11010
  7032  0020                     u4940:
  7033                           	
  7034  0020                     l11006:	
  7035  0020  3000               	movlw	high(0EAh)
  7036  0021  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7037  0022  30EA               	movlw	low(0EAh)
  7038  0023  1903               	skipnz
  7039  0024  0236               	subwf	(_adcVal)^080h,w	;volatile
  7040  0025  1803               	skipnc
  7041  0026  2828               	goto	u4951
  7042  0027  2829               	goto	u4950
  7043  0028                     u4951:
  7044  0028  286D               	goto	l11010
  7045  0029                     u4950:
  7046                           	line	66
  7047                           	
  7048  0029                     l11008:	
  7049                           ;infrared.c: 65: {
  7050                           ;infrared.c: 66: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  7051  0029  3015               	movlw	low(015h)
  7052  002A  1283               	bcf	status, 5	;RP0=0, select bank0
  7053  002B  1303               	bcf	status, 6	;RP1=0, select bank0
  7054  002C  00A6               	movwf	(?___lwdiv)
  7055  002D  3000               	movlw	high(015h)
  7056  002E  00A7               	movwf	((?___lwdiv))+1
  7057  002F  1683               	bsf	status, 5	;RP0=1, select bank1
  7058  0030  1303               	bcf	status, 6	;RP1=0, select bank1
  7059  0031  0936               	comf	(_adcVal)^080h,w	;volatile
  7060  0032  1283               	bcf	status, 5	;RP0=0, select bank0
  7061  0033  1303               	bcf	status, 6	;RP1=0, select bank0
  7062  0034  00AE               	movwf	(??_ADCconvert+0)+0
  7063  0035  1683               	bsf	status, 5	;RP0=1, select bank1
  7064  0036  1303               	bcf	status, 6	;RP1=0, select bank1
  7065  0037  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7066  0038  1283               	bcf	status, 5	;RP0=0, select bank0
  7067  0039  1303               	bcf	status, 6	;RP1=0, select bank0
  7068  003A  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7069  003B  0AAE               	incf	(??_ADCconvert+0)+0,f
  7070  003C  1903               	skipnz
  7071  003D  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7072  003E  082E               	movf	0+(??_ADCconvert+0)+0,w
  7073  003F  3EEA               	addlw	low(0EAh)
  7074  0040  00A0               	movwf	(?___wmul)
  7075  0041  082F               	movf	1+(??_ADCconvert+0)+0,w
  7076  0042  1803               	skipnc
  7077  0043  3E01               	addlw	1
  7078  0044  3E00               	addlw	high(0EAh)
  7079  0045  00A1               	movwf	1+(?___wmul)
  7080  0046  3005               	movlw	low(05h)
  7081  0047  00A2               	movwf	0+(?___wmul)+02h
  7082  0048  3000               	movlw	high(05h)
  7083  0049  00A3               	movwf	(0+(?___wmul)+02h)+1
  7084  004A  160A  118A  24B7   	fcall	___wmul
              120A  118A         
  7085  004F  1283               	bcf	status, 5	;RP0=0, select bank0
  7086  0050  1303               	bcf	status, 6	;RP1=0, select bank0
  7087  0051  0821               	movf	(1+(?___wmul)),w
  7088  0052  01A9               	clrf	1+(?___lwdiv)+02h
  7089  0053  07A9               	addwf	1+(?___lwdiv)+02h
  7090  0054  0820               	movf	(0+(?___wmul)),w
  7091  0055  01A8               	clrf	0+(?___lwdiv)+02h
  7092  0056  07A8               	addwf	0+(?___lwdiv)+02h
  7093                           
  7094  0057  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7095  005C  1283               	bcf	status, 5	;RP0=0, select bank0
  7096  005D  1303               	bcf	status, 6	;RP1=0, select bank0
  7097  005E  0826               	movf	(0+(?___lwdiv)),w
  7098  005F  3E0F               	addlw	low(0Fh)
  7099  0060  1683               	bsf	status, 5	;RP0=1, select bank1
  7100  0061  1303               	bcf	status, 6	;RP1=0, select bank1
  7101  0062  00B0               	movwf	(_IRdistance)^080h	;volatile
  7102  0063  1283               	bcf	status, 5	;RP0=0, select bank0
  7103  0064  1303               	bcf	status, 6	;RP1=0, select bank0
  7104  0065  0827               	movf	(1+(?___lwdiv)),w
  7105  0066  1803               	skipnc
  7106  0067  3E01               	addlw	1
  7107  0068  3E00               	addlw	high(0Fh)
  7108  0069  1683               	bsf	status, 5	;RP0=1, select bank1
  7109  006A  1303               	bcf	status, 6	;RP1=0, select bank1
  7110  006B  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7111                           	line	67
  7112                           ;infrared.c: 67: }
  7113  006C  2A77               	goto	l3014
  7114                           	line	68
  7115                           	
  7116  006D                     l3001:	
  7117                           	
  7118  006D                     l11010:	
  7119                           ;infrared.c: 68: else if (adcVal >= 170 && adcVal < 213)
  7120  006D  3000               	movlw	high(0AAh)
  7121  006E  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7122  006F  30AA               	movlw	low(0AAh)
  7123  0070  1903               	skipnz
  7124  0071  0236               	subwf	(_adcVal)^080h,w	;volatile
  7125  0072  1C03               	skipc
  7126  0073  2875               	goto	u4961
  7127  0074  2876               	goto	u4960
  7128  0075                     u4961:
  7129  0075  28C3               	goto	l11016
  7130  0076                     u4960:
  7131                           	
  7132  0076                     l11012:	
  7133  0076  3000               	movlw	high(0D5h)
  7134  0077  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7135  0078  30D5               	movlw	low(0D5h)
  7136  0079  1903               	skipnz
  7137  007A  0236               	subwf	(_adcVal)^080h,w	;volatile
  7138  007B  1803               	skipnc
  7139  007C  287E               	goto	u4971
  7140  007D  287F               	goto	u4970
  7141  007E                     u4971:
  7142  007E  28C3               	goto	l11016
  7143  007F                     u4970:
  7144                           	line	70
  7145                           	
  7146  007F                     l11014:	
  7147                           ;infrared.c: 69: {
  7148                           ;infrared.c: 70: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  7149  007F  302B               	movlw	low(02Bh)
  7150  0080  1283               	bcf	status, 5	;RP0=0, select bank0
  7151  0081  1303               	bcf	status, 6	;RP1=0, select bank0
  7152  0082  00A6               	movwf	(?___lwdiv)
  7153  0083  3000               	movlw	high(02Bh)
  7154  0084  00A7               	movwf	((?___lwdiv))+1
  7155  0085  1683               	bsf	status, 5	;RP0=1, select bank1
  7156  0086  1303               	bcf	status, 6	;RP1=0, select bank1
  7157  0087  0936               	comf	(_adcVal)^080h,w	;volatile
  7158  0088  1283               	bcf	status, 5	;RP0=0, select bank0
  7159  0089  1303               	bcf	status, 6	;RP1=0, select bank0
  7160  008A  00AE               	movwf	(??_ADCconvert+0)+0
  7161  008B  1683               	bsf	status, 5	;RP0=1, select bank1
  7162  008C  1303               	bcf	status, 6	;RP1=0, select bank1
  7163  008D  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7164  008E  1283               	bcf	status, 5	;RP0=0, select bank0
  7165  008F  1303               	bcf	status, 6	;RP1=0, select bank0
  7166  0090  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7167  0091  0AAE               	incf	(??_ADCconvert+0)+0,f
  7168  0092  1903               	skipnz
  7169  0093  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7170  0094  082E               	movf	0+(??_ADCconvert+0)+0,w
  7171  0095  3ED5               	addlw	low(0D5h)
  7172  0096  00A0               	movwf	(?___wmul)
  7173  0097  082F               	movf	1+(??_ADCconvert+0)+0,w
  7174  0098  1803               	skipnc
  7175  0099  3E01               	addlw	1
  7176  009A  3E00               	addlw	high(0D5h)
  7177  009B  00A1               	movwf	1+(?___wmul)
  7178  009C  300A               	movlw	low(0Ah)
  7179  009D  00A2               	movwf	0+(?___wmul)+02h
  7180  009E  3000               	movlw	high(0Ah)
  7181  009F  00A3               	movwf	(0+(?___wmul)+02h)+1
  7182  00A0  160A  118A  24B7   	fcall	___wmul
              120A  118A         
  7183  00A5  1283               	bcf	status, 5	;RP0=0, select bank0
  7184  00A6  1303               	bcf	status, 6	;RP1=0, select bank0
  7185  00A7  0821               	movf	(1+(?___wmul)),w
  7186  00A8  01A9               	clrf	1+(?___lwdiv)+02h
  7187  00A9  07A9               	addwf	1+(?___lwdiv)+02h
  7188  00AA  0820               	movf	(0+(?___wmul)),w
  7189  00AB  01A8               	clrf	0+(?___lwdiv)+02h
  7190  00AC  07A8               	addwf	0+(?___lwdiv)+02h
  7191                           
  7192  00AD  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7193  00B2  1283               	bcf	status, 5	;RP0=0, select bank0
  7194  00B3  1303               	bcf	status, 6	;RP1=0, select bank0
  7195  00B4  0826               	movf	(0+(?___lwdiv)),w
  7196  00B5  3E14               	addlw	low(014h)
  7197  00B6  1683               	bsf	status, 5	;RP0=1, select bank1
  7198  00B7  1303               	bcf	status, 6	;RP1=0, select bank1
  7199  00B8  00B0               	movwf	(_IRdistance)^080h	;volatile
  7200  00B9  1283               	bcf	status, 5	;RP0=0, select bank0
  7201  00BA  1303               	bcf	status, 6	;RP1=0, select bank0
  7202  00BB  0827               	movf	(1+(?___lwdiv)),w
  7203  00BC  1803               	skipnc
  7204  00BD  3E01               	addlw	1
  7205  00BE  3E00               	addlw	high(014h)
  7206  00BF  1683               	bsf	status, 5	;RP0=1, select bank1
  7207  00C0  1303               	bcf	status, 6	;RP1=0, select bank1
  7208  00C1  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7209                           	line	71
  7210                           ;infrared.c: 71: }
  7211  00C2  2A77               	goto	l3014
  7212                           	line	72
  7213                           	
  7214  00C3                     l3003:	
  7215                           	
  7216  00C3                     l11016:	
  7217                           ;infrared.c: 72: else if (adcVal >= 128 && adcVal < 170)
  7218  00C3  3000               	movlw	high(080h)
  7219  00C4  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7220  00C5  3080               	movlw	low(080h)
  7221  00C6  1903               	skipnz
  7222  00C7  0236               	subwf	(_adcVal)^080h,w	;volatile
  7223  00C8  1C03               	skipc
  7224  00C9  28CB               	goto	u4981
  7225  00CA  28CC               	goto	u4980
  7226  00CB                     u4981:
  7227  00CB  2919               	goto	l11022
  7228  00CC                     u4980:
  7229                           	
  7230  00CC                     l11018:	
  7231  00CC  3000               	movlw	high(0AAh)
  7232  00CD  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7233  00CE  30AA               	movlw	low(0AAh)
  7234  00CF  1903               	skipnz
  7235  00D0  0236               	subwf	(_adcVal)^080h,w	;volatile
  7236  00D1  1803               	skipnc
  7237  00D2  28D4               	goto	u4991
  7238  00D3  28D5               	goto	u4990
  7239  00D4                     u4991:
  7240  00D4  2919               	goto	l11022
  7241  00D5                     u4990:
  7242                           	line	74
  7243                           	
  7244  00D5                     l11020:	
  7245                           ;infrared.c: 73: {
  7246                           ;infrared.c: 74: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  7247  00D5  302A               	movlw	low(02Ah)
  7248  00D6  1283               	bcf	status, 5	;RP0=0, select bank0
  7249  00D7  1303               	bcf	status, 6	;RP1=0, select bank0
  7250  00D8  00A6               	movwf	(?___lwdiv)
  7251  00D9  3000               	movlw	high(02Ah)
  7252  00DA  00A7               	movwf	((?___lwdiv))+1
  7253  00DB  1683               	bsf	status, 5	;RP0=1, select bank1
  7254  00DC  1303               	bcf	status, 6	;RP1=0, select bank1
  7255  00DD  0936               	comf	(_adcVal)^080h,w	;volatile
  7256  00DE  1283               	bcf	status, 5	;RP0=0, select bank0
  7257  00DF  1303               	bcf	status, 6	;RP1=0, select bank0
  7258  00E0  00AE               	movwf	(??_ADCconvert+0)+0
  7259  00E1  1683               	bsf	status, 5	;RP0=1, select bank1
  7260  00E2  1303               	bcf	status, 6	;RP1=0, select bank1
  7261  00E3  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7262  00E4  1283               	bcf	status, 5	;RP0=0, select bank0
  7263  00E5  1303               	bcf	status, 6	;RP1=0, select bank0
  7264  00E6  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7265  00E7  0AAE               	incf	(??_ADCconvert+0)+0,f
  7266  00E8  1903               	skipnz
  7267  00E9  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7268  00EA  082E               	movf	0+(??_ADCconvert+0)+0,w
  7269  00EB  3EAA               	addlw	low(0AAh)
  7270  00EC  00A0               	movwf	(?___wmul)
  7271  00ED  082F               	movf	1+(??_ADCconvert+0)+0,w
  7272  00EE  1803               	skipnc
  7273  00EF  3E01               	addlw	1
  7274  00F0  3E00               	addlw	high(0AAh)
  7275  00F1  00A1               	movwf	1+(?___wmul)
  7276  00F2  300A               	movlw	low(0Ah)
  7277  00F3  00A2               	movwf	0+(?___wmul)+02h
  7278  00F4  3000               	movlw	high(0Ah)
  7279  00F5  00A3               	movwf	(0+(?___wmul)+02h)+1
  7280  00F6  160A  118A  24B7   	fcall	___wmul
              120A  118A         
  7281  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
  7282  00FC  1303               	bcf	status, 6	;RP1=0, select bank0
  7283  00FD  0821               	movf	(1+(?___wmul)),w
  7284  00FE  01A9               	clrf	1+(?___lwdiv)+02h
  7285  00FF  07A9               	addwf	1+(?___lwdiv)+02h
  7286  0100  0820               	movf	(0+(?___wmul)),w
  7287  0101  01A8               	clrf	0+(?___lwdiv)+02h
  7288  0102  07A8               	addwf	0+(?___lwdiv)+02h
  7289                           
  7290  0103  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7291  0108  1283               	bcf	status, 5	;RP0=0, select bank0
  7292  0109  1303               	bcf	status, 6	;RP1=0, select bank0
  7293  010A  0826               	movf	(0+(?___lwdiv)),w
  7294  010B  3E1E               	addlw	low(01Eh)
  7295  010C  1683               	bsf	status, 5	;RP0=1, select bank1
  7296  010D  1303               	bcf	status, 6	;RP1=0, select bank1
  7297  010E  00B0               	movwf	(_IRdistance)^080h	;volatile
  7298  010F  1283               	bcf	status, 5	;RP0=0, select bank0
  7299  0110  1303               	bcf	status, 6	;RP1=0, select bank0
  7300  0111  0827               	movf	(1+(?___lwdiv)),w
  7301  0112  1803               	skipnc
  7302  0113  3E01               	addlw	1
  7303  0114  3E00               	addlw	high(01Eh)
  7304  0115  1683               	bsf	status, 5	;RP0=1, select bank1
  7305  0116  1303               	bcf	status, 6	;RP1=0, select bank1
  7306  0117  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7307                           	line	75
  7308                           ;infrared.c: 75: }
  7309  0118  2A77               	goto	l3014
  7310                           	line	76
  7311                           	
  7312  0119                     l3005:	
  7313                           	
  7314  0119                     l11022:	
  7315                           ;infrared.c: 76: else if (adcVal >= 107 && adcVal < 128)
  7316  0119  3000               	movlw	high(06Bh)
  7317  011A  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7318  011B  306B               	movlw	low(06Bh)
  7319  011C  1903               	skipnz
  7320  011D  0236               	subwf	(_adcVal)^080h,w	;volatile
  7321  011E  1C03               	skipc
  7322  011F  2921               	goto	u5001
  7323  0120  2922               	goto	u5000
  7324  0121                     u5001:
  7325  0121  296F               	goto	l11028
  7326  0122                     u5000:
  7327                           	
  7328  0122                     l11024:	
  7329  0122  3000               	movlw	high(080h)
  7330  0123  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7331  0124  3080               	movlw	low(080h)
  7332  0125  1903               	skipnz
  7333  0126  0236               	subwf	(_adcVal)^080h,w	;volatile
  7334  0127  1803               	skipnc
  7335  0128  292A               	goto	u5011
  7336  0129  292B               	goto	u5010
  7337  012A                     u5011:
  7338  012A  296F               	goto	l11028
  7339  012B                     u5010:
  7340                           	line	78
  7341                           	
  7342  012B                     l11026:	
  7343                           ;infrared.c: 77: {
  7344                           ;infrared.c: 78: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  7345  012B  3015               	movlw	low(015h)
  7346  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  7347  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  7348  012E  00A6               	movwf	(?___lwdiv)
  7349  012F  3000               	movlw	high(015h)
  7350  0130  00A7               	movwf	((?___lwdiv))+1
  7351  0131  1683               	bsf	status, 5	;RP0=1, select bank1
  7352  0132  1303               	bcf	status, 6	;RP1=0, select bank1
  7353  0133  0936               	comf	(_adcVal)^080h,w	;volatile
  7354  0134  1283               	bcf	status, 5	;RP0=0, select bank0
  7355  0135  1303               	bcf	status, 6	;RP1=0, select bank0
  7356  0136  00AE               	movwf	(??_ADCconvert+0)+0
  7357  0137  1683               	bsf	status, 5	;RP0=1, select bank1
  7358  0138  1303               	bcf	status, 6	;RP1=0, select bank1
  7359  0139  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7360  013A  1283               	bcf	status, 5	;RP0=0, select bank0
  7361  013B  1303               	bcf	status, 6	;RP1=0, select bank0
  7362  013C  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7363  013D  0AAE               	incf	(??_ADCconvert+0)+0,f
  7364  013E  1903               	skipnz
  7365  013F  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7366  0140  082E               	movf	0+(??_ADCconvert+0)+0,w
  7367  0141  3E80               	addlw	low(080h)
  7368  0142  00A0               	movwf	(?___wmul)
  7369  0143  082F               	movf	1+(??_ADCconvert+0)+0,w
  7370  0144  1803               	skipnc
  7371  0145  3E01               	addlw	1
  7372  0146  3E00               	addlw	high(080h)
  7373  0147  00A1               	movwf	1+(?___wmul)
  7374  0148  300A               	movlw	low(0Ah)
  7375  0149  00A2               	movwf	0+(?___wmul)+02h
  7376  014A  3000               	movlw	high(0Ah)
  7377  014B  00A3               	movwf	(0+(?___wmul)+02h)+1
  7378  014C  160A  118A  24B7   	fcall	___wmul
              120A  118A         
  7379  0151  1283               	bcf	status, 5	;RP0=0, select bank0
  7380  0152  1303               	bcf	status, 6	;RP1=0, select bank0
  7381  0153  0821               	movf	(1+(?___wmul)),w
  7382  0154  01A9               	clrf	1+(?___lwdiv)+02h
  7383  0155  07A9               	addwf	1+(?___lwdiv)+02h
  7384  0156  0820               	movf	(0+(?___wmul)),w
  7385  0157  01A8               	clrf	0+(?___lwdiv)+02h
  7386  0158  07A8               	addwf	0+(?___lwdiv)+02h
  7387                           
  7388  0159  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7389  015E  1283               	bcf	status, 5	;RP0=0, select bank0
  7390  015F  1303               	bcf	status, 6	;RP1=0, select bank0
  7391  0160  0826               	movf	(0+(?___lwdiv)),w
  7392  0161  3E28               	addlw	low(028h)
  7393  0162  1683               	bsf	status, 5	;RP0=1, select bank1
  7394  0163  1303               	bcf	status, 6	;RP1=0, select bank1
  7395  0164  00B0               	movwf	(_IRdistance)^080h	;volatile
  7396  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  7397  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  7398  0167  0827               	movf	(1+(?___lwdiv)),w
  7399  0168  1803               	skipnc
  7400  0169  3E01               	addlw	1
  7401  016A  3E00               	addlw	high(028h)
  7402  016B  1683               	bsf	status, 5	;RP0=1, select bank1
  7403  016C  1303               	bcf	status, 6	;RP1=0, select bank1
  7404  016D  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7405                           	line	79
  7406                           ;infrared.c: 79: }
  7407  016E  2A77               	goto	l3014
  7408                           	line	80
  7409                           	
  7410  016F                     l3007:	
  7411                           	
  7412  016F                     l11028:	
  7413                           ;infrared.c: 80: else if (adcVal >= 77 && adcVal < 107)
  7414  016F  3000               	movlw	high(04Dh)
  7415  0170  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7416  0171  304D               	movlw	low(04Dh)
  7417  0172  1903               	skipnz
  7418  0173  0236               	subwf	(_adcVal)^080h,w	;volatile
  7419  0174  1C03               	skipc
  7420  0175  2977               	goto	u5021
  7421  0176  2978               	goto	u5020
  7422  0177                     u5021:
  7423  0177  29C5               	goto	l11034
  7424  0178                     u5020:
  7425                           	
  7426  0178                     l11030:	
  7427  0178  3000               	movlw	high(06Bh)
  7428  0179  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7429  017A  306B               	movlw	low(06Bh)
  7430  017B  1903               	skipnz
  7431  017C  0236               	subwf	(_adcVal)^080h,w	;volatile
  7432  017D  1803               	skipnc
  7433  017E  2980               	goto	u5031
  7434  017F  2981               	goto	u5030
  7435  0180                     u5031:
  7436  0180  29C5               	goto	l11034
  7437  0181                     u5030:
  7438                           	line	82
  7439                           	
  7440  0181                     l11032:	
  7441                           ;infrared.c: 81: {
  7442                           ;infrared.c: 82: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  7443  0181  301E               	movlw	low(01Eh)
  7444  0182  1283               	bcf	status, 5	;RP0=0, select bank0
  7445  0183  1303               	bcf	status, 6	;RP1=0, select bank0
  7446  0184  00A6               	movwf	(?___lwdiv)
  7447  0185  3000               	movlw	high(01Eh)
  7448  0186  00A7               	movwf	((?___lwdiv))+1
  7449  0187  1683               	bsf	status, 5	;RP0=1, select bank1
  7450  0188  1303               	bcf	status, 6	;RP1=0, select bank1
  7451  0189  0936               	comf	(_adcVal)^080h,w	;volatile
  7452  018A  1283               	bcf	status, 5	;RP0=0, select bank0
  7453  018B  1303               	bcf	status, 6	;RP1=0, select bank0
  7454  018C  00AE               	movwf	(??_ADCconvert+0)+0
  7455  018D  1683               	bsf	status, 5	;RP0=1, select bank1
  7456  018E  1303               	bcf	status, 6	;RP1=0, select bank1
  7457  018F  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7458  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  7459  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  7460  0192  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7461  0193  0AAE               	incf	(??_ADCconvert+0)+0,f
  7462  0194  1903               	skipnz
  7463  0195  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7464  0196  082E               	movf	0+(??_ADCconvert+0)+0,w
  7465  0197  3E6B               	addlw	low(06Bh)
  7466  0198  00A0               	movwf	(?___wmul)
  7467  0199  082F               	movf	1+(??_ADCconvert+0)+0,w
  7468  019A  1803               	skipnc
  7469  019B  3E01               	addlw	1
  7470  019C  3E00               	addlw	high(06Bh)
  7471  019D  00A1               	movwf	1+(?___wmul)
  7472  019E  300A               	movlw	low(0Ah)
  7473  019F  00A2               	movwf	0+(?___wmul)+02h
  7474  01A0  3000               	movlw	high(0Ah)
  7475  01A1  00A3               	movwf	(0+(?___wmul)+02h)+1
  7476  01A2  160A  118A  24B7   	fcall	___wmul
              120A  118A         
  7477  01A7  1283               	bcf	status, 5	;RP0=0, select bank0
  7478  01A8  1303               	bcf	status, 6	;RP1=0, select bank0
  7479  01A9  0821               	movf	(1+(?___wmul)),w
  7480  01AA  01A9               	clrf	1+(?___lwdiv)+02h
  7481  01AB  07A9               	addwf	1+(?___lwdiv)+02h
  7482  01AC  0820               	movf	(0+(?___wmul)),w
  7483  01AD  01A8               	clrf	0+(?___lwdiv)+02h
  7484  01AE  07A8               	addwf	0+(?___lwdiv)+02h
  7485                           
  7486  01AF  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7487  01B4  1283               	bcf	status, 5	;RP0=0, select bank0
  7488  01B5  1303               	bcf	status, 6	;RP1=0, select bank0
  7489  01B6  0826               	movf	(0+(?___lwdiv)),w
  7490  01B7  3E32               	addlw	low(032h)
  7491  01B8  1683               	bsf	status, 5	;RP0=1, select bank1
  7492  01B9  1303               	bcf	status, 6	;RP1=0, select bank1
  7493  01BA  00B0               	movwf	(_IRdistance)^080h	;volatile
  7494  01BB  1283               	bcf	status, 5	;RP0=0, select bank0
  7495  01BC  1303               	bcf	status, 6	;RP1=0, select bank0
  7496  01BD  0827               	movf	(1+(?___lwdiv)),w
  7497  01BE  1803               	skipnc
  7498  01BF  3E01               	addlw	1
  7499  01C0  3E00               	addlw	high(032h)
  7500  01C1  1683               	bsf	status, 5	;RP0=1, select bank1
  7501  01C2  1303               	bcf	status, 6	;RP1=0, select bank1
  7502  01C3  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7503                           	line	83
  7504                           ;infrared.c: 83: }
  7505  01C4  2A77               	goto	l3014
  7506                           	line	84
  7507                           	
  7508  01C5                     l3009:	
  7509                           	
  7510  01C5                     l11034:	
  7511                           ;infrared.c: 84: else if (adcVal >= 56 && adcVal < 77)
  7512  01C5  3000               	movlw	high(038h)
  7513  01C6  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7514  01C7  3038               	movlw	low(038h)
  7515  01C8  1903               	skipnz
  7516  01C9  0236               	subwf	(_adcVal)^080h,w	;volatile
  7517  01CA  1C03               	skipc
  7518  01CB  29CD               	goto	u5041
  7519  01CC  29CE               	goto	u5040
  7520  01CD                     u5041:
  7521  01CD  2A1B               	goto	l11040
  7522  01CE                     u5040:
  7523                           	
  7524  01CE                     l11036:	
  7525  01CE  3000               	movlw	high(04Dh)
  7526  01CF  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7527  01D0  304D               	movlw	low(04Dh)
  7528  01D1  1903               	skipnz
  7529  01D2  0236               	subwf	(_adcVal)^080h,w	;volatile
  7530  01D3  1803               	skipnc
  7531  01D4  29D6               	goto	u5051
  7532  01D5  29D7               	goto	u5050
  7533  01D6                     u5051:
  7534  01D6  2A1B               	goto	l11040
  7535  01D7                     u5050:
  7536                           	line	86
  7537                           	
  7538  01D7                     l11038:	
  7539                           ;infrared.c: 85: {
  7540                           ;infrared.c: 86: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  7541  01D7  3015               	movlw	low(015h)
  7542  01D8  1283               	bcf	status, 5	;RP0=0, select bank0
  7543  01D9  1303               	bcf	status, 6	;RP1=0, select bank0
  7544  01DA  00A6               	movwf	(?___lwdiv)
  7545  01DB  3000               	movlw	high(015h)
  7546  01DC  00A7               	movwf	((?___lwdiv))+1
  7547  01DD  1683               	bsf	status, 5	;RP0=1, select bank1
  7548  01DE  1303               	bcf	status, 6	;RP1=0, select bank1
  7549  01DF  0936               	comf	(_adcVal)^080h,w	;volatile
  7550  01E0  1283               	bcf	status, 5	;RP0=0, select bank0
  7551  01E1  1303               	bcf	status, 6	;RP1=0, select bank0
  7552  01E2  00AE               	movwf	(??_ADCconvert+0)+0
  7553  01E3  1683               	bsf	status, 5	;RP0=1, select bank1
  7554  01E4  1303               	bcf	status, 6	;RP1=0, select bank1
  7555  01E5  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7556  01E6  1283               	bcf	status, 5	;RP0=0, select bank0
  7557  01E7  1303               	bcf	status, 6	;RP1=0, select bank0
  7558  01E8  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7559  01E9  0AAE               	incf	(??_ADCconvert+0)+0,f
  7560  01EA  1903               	skipnz
  7561  01EB  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7562  01EC  082E               	movf	0+(??_ADCconvert+0)+0,w
  7563  01ED  3E4D               	addlw	low(04Dh)
  7564  01EE  00A0               	movwf	(?___wmul)
  7565  01EF  082F               	movf	1+(??_ADCconvert+0)+0,w
  7566  01F0  1803               	skipnc
  7567  01F1  3E01               	addlw	1
  7568  01F2  3E00               	addlw	high(04Dh)
  7569  01F3  00A1               	movwf	1+(?___wmul)
  7570  01F4  300A               	movlw	low(0Ah)
  7571  01F5  00A2               	movwf	0+(?___wmul)+02h
  7572  01F6  3000               	movlw	high(0Ah)
  7573  01F7  00A3               	movwf	(0+(?___wmul)+02h)+1
  7574  01F8  160A  118A  24B7   	fcall	___wmul
              120A  118A         
  7575  01FD  1283               	bcf	status, 5	;RP0=0, select bank0
  7576  01FE  1303               	bcf	status, 6	;RP1=0, select bank0
  7577  01FF  0821               	movf	(1+(?___wmul)),w
  7578  0200  01A9               	clrf	1+(?___lwdiv)+02h
  7579  0201  07A9               	addwf	1+(?___lwdiv)+02h
  7580  0202  0820               	movf	(0+(?___wmul)),w
  7581  0203  01A8               	clrf	0+(?___lwdiv)+02h
  7582  0204  07A8               	addwf	0+(?___lwdiv)+02h
  7583                           
  7584  0205  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7585  020A  1283               	bcf	status, 5	;RP0=0, select bank0
  7586  020B  1303               	bcf	status, 6	;RP1=0, select bank0
  7587  020C  0826               	movf	(0+(?___lwdiv)),w
  7588  020D  3E3C               	addlw	low(03Ch)
  7589  020E  1683               	bsf	status, 5	;RP0=1, select bank1
  7590  020F  1303               	bcf	status, 6	;RP1=0, select bank1
  7591  0210  00B0               	movwf	(_IRdistance)^080h	;volatile
  7592  0211  1283               	bcf	status, 5	;RP0=0, select bank0
  7593  0212  1303               	bcf	status, 6	;RP1=0, select bank0
  7594  0213  0827               	movf	(1+(?___lwdiv)),w
  7595  0214  1803               	skipnc
  7596  0215  3E01               	addlw	1
  7597  0216  3E00               	addlw	high(03Ch)
  7598  0217  1683               	bsf	status, 5	;RP0=1, select bank1
  7599  0218  1303               	bcf	status, 6	;RP1=0, select bank1
  7600  0219  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7601                           	line	87
  7602                           ;infrared.c: 87: }
  7603  021A  2A77               	goto	l3014
  7604                           	line	88
  7605                           	
  7606  021B                     l3011:	
  7607                           	
  7608  021B                     l11040:	
  7609                           ;infrared.c: 88: else if (adcVal >= 43 && adcVal < 56)
  7610  021B  3000               	movlw	high(02Bh)
  7611  021C  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7612  021D  302B               	movlw	low(02Bh)
  7613  021E  1903               	skipnz
  7614  021F  0236               	subwf	(_adcVal)^080h,w	;volatile
  7615  0220  1C03               	skipc
  7616  0221  2A23               	goto	u5061
  7617  0222  2A24               	goto	u5060
  7618  0223                     u5061:
  7619  0223  2A77               	goto	l3014
  7620  0224                     u5060:
  7621                           	
  7622  0224                     l11042:	
  7623  0224  3000               	movlw	high(038h)
  7624  0225  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7625  0226  3038               	movlw	low(038h)
  7626  0227  1903               	skipnz
  7627  0228  0236               	subwf	(_adcVal)^080h,w	;volatile
  7628  0229  1803               	skipnc
  7629  022A  2A2C               	goto	u5071
  7630  022B  2A2D               	goto	u5070
  7631  022C                     u5071:
  7632  022C  2A77               	goto	l3014
  7633  022D                     u5070:
  7634                           	line	90
  7635                           	
  7636  022D                     l11044:	
  7637                           ;infrared.c: 89: {
  7638                           ;infrared.c: 90: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  7639  022D  300D               	movlw	low(0Dh)
  7640  022E  1283               	bcf	status, 5	;RP0=0, select bank0
  7641  022F  1303               	bcf	status, 6	;RP1=0, select bank0
  7642  0230  00A6               	movwf	(?___lwdiv)
  7643  0231  3000               	movlw	high(0Dh)
  7644  0232  00A7               	movwf	((?___lwdiv))+1
  7645  0233  1683               	bsf	status, 5	;RP0=1, select bank1
  7646  0234  1303               	bcf	status, 6	;RP1=0, select bank1
  7647  0235  0936               	comf	(_adcVal)^080h,w	;volatile
  7648  0236  1283               	bcf	status, 5	;RP0=0, select bank0
  7649  0237  1303               	bcf	status, 6	;RP1=0, select bank0
  7650  0238  00AE               	movwf	(??_ADCconvert+0)+0
  7651  0239  1683               	bsf	status, 5	;RP0=1, select bank1
  7652  023A  1303               	bcf	status, 6	;RP1=0, select bank1
  7653  023B  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7654  023C  1283               	bcf	status, 5	;RP0=0, select bank0
  7655  023D  1303               	bcf	status, 6	;RP1=0, select bank0
  7656  023E  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7657  023F  0AAE               	incf	(??_ADCconvert+0)+0,f
  7658  0240  1903               	skipnz
  7659  0241  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7660  0242  082E               	movf	0+(??_ADCconvert+0)+0,w
  7661  0243  3E38               	addlw	low(038h)
  7662  0244  00A0               	movwf	(?___wmul)
  7663  0245  082F               	movf	1+(??_ADCconvert+0)+0,w
  7664  0246  1803               	skipnc
  7665  0247  3E01               	addlw	1
  7666  0248  3E00               	addlw	high(038h)
  7667  0249  00A1               	movwf	1+(?___wmul)
  7668  024A  300A               	movlw	low(0Ah)
  7669  024B  00A2               	movwf	0+(?___wmul)+02h
  7670  024C  3000               	movlw	high(0Ah)
  7671  024D  00A3               	movwf	(0+(?___wmul)+02h)+1
  7672  024E  160A  118A  24B7   	fcall	___wmul
              120A  118A         
  7673  0253  1283               	bcf	status, 5	;RP0=0, select bank0
  7674  0254  1303               	bcf	status, 6	;RP1=0, select bank0
  7675  0255  0821               	movf	(1+(?___wmul)),w
  7676  0256  01A9               	clrf	1+(?___lwdiv)+02h
  7677  0257  07A9               	addwf	1+(?___lwdiv)+02h
  7678  0258  0820               	movf	(0+(?___wmul)),w
  7679  0259  01A8               	clrf	0+(?___lwdiv)+02h
  7680  025A  07A8               	addwf	0+(?___lwdiv)+02h
  7681                           
  7682  025B  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7683  0260  1283               	bcf	status, 5	;RP0=0, select bank0
  7684  0261  1303               	bcf	status, 6	;RP1=0, select bank0
  7685  0262  0826               	movf	(0+(?___lwdiv)),w
  7686  0263  3E46               	addlw	low(046h)
  7687  0264  1683               	bsf	status, 5	;RP0=1, select bank1
  7688  0265  1303               	bcf	status, 6	;RP1=0, select bank1
  7689  0266  00B0               	movwf	(_IRdistance)^080h	;volatile
  7690  0267  1283               	bcf	status, 5	;RP0=0, select bank0
  7691  0268  1303               	bcf	status, 6	;RP1=0, select bank0
  7692  0269  0827               	movf	(1+(?___lwdiv)),w
  7693  026A  1803               	skipnc
  7694  026B  3E01               	addlw	1
  7695  026C  3E00               	addlw	high(046h)
  7696  026D  1683               	bsf	status, 5	;RP0=1, select bank1
  7697  026E  1303               	bcf	status, 6	;RP1=0, select bank1
  7698  026F  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7699  0270  2A77               	goto	l3014
  7700                           	line	91
  7701                           	
  7702  0271                     l3013:	
  7703  0271  2A77               	goto	l3014
  7704                           	line	92
  7705                           	
  7706  0272                     l3012:	
  7707  0272  2A77               	goto	l3014
  7708                           	
  7709  0273                     l3010:	
  7710  0273  2A77               	goto	l3014
  7711                           	
  7712  0274                     l3008:	
  7713  0274  2A77               	goto	l3014
  7714                           	
  7715  0275                     l3006:	
  7716  0275  2A77               	goto	l3014
  7717                           	
  7718  0276                     l3004:	
  7719  0276  2A77               	goto	l3014
  7720                           	
  7721  0277                     l3002:	
  7722                           	
  7723  0277                     l3014:	
  7724  0277  0008               	return
  7725                           	opt stack 0
  7726                           GLOBAL	__end_of_ADCconvert
  7727  0278                     	__end_of_ADCconvert:
  7728 ;; =============== function _ADCconvert ends ============
  7729                           
  7730                           	signat	_ADCconvert,88
  7731                           	global	_robotTurn
  7732                           psect	text1092,local,class=CODE,delta=2
  7733                           global __ptext1092
  7734  090F                     __ptext1092:
  7735                           
  7736 ;; *************** function _robotTurn *****************
  7737 ;; Defined at:
  7738 ;;		line 99 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  angle           2    2[BANK0 ] int 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;		None
  7743 ;; Return value:  Size  Location     Type
  7744 ;;		None               void
  7745 ;; Registers used:
  7746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7752 ;;      Params:         0       2       0       0       0
  7753 ;;      Locals:         0       0       0       0       0
  7754 ;;      Temps:          0       0       0       0       0
  7755 ;;      Totals:         0       2       0       0       0
  7756 ;;Total ram usage:        2 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:    4
  7759 ;; This function calls:
  7760 ;;		_ser_putch
  7761 ;; This function is called by:
  7762 ;;		_main
  7763 ;;		_robotTurnSpeed
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           psect	text1092
  7767                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7768                           	line	99
  7769                           	global	__size_of_robotTurn
  7770  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  7771                           	
  7772  090F                     _robotTurn:	
  7773                           	opt	stack 3
  7774                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7775                           	line	101
  7776                           	
  7777  090F                     l10996:	
  7778                           ;robot.c: 101: if (angle > 0)
  7779  090F  1283               	bcf	status, 5	;RP0=0, select bank0
  7780  0910  1303               	bcf	status, 6	;RP1=0, select bank0
  7781  0911  0823               	movf	(robotTurn@angle+1),w
  7782  0912  3A80               	xorlw	80h
  7783  0913  00FF               	movwf	btemp+1
  7784  0914  3080               	movlw	(high(01h))^80h
  7785  0915  027F               	subwf	btemp+1,w
  7786  0916  1D03               	skipz
  7787  0917  291A               	goto	u4925
  7788  0918  3001               	movlw	low(01h)
  7789  0919  0222               	subwf	(robotTurn@angle),w
  7790  091A                     u4925:
  7791                           
  7792  091A  1C03               	skipc
  7793  091B  291D               	goto	u4921
  7794  091C  291E               	goto	u4920
  7795  091D                     u4921:
  7796  091D  293D               	goto	l6018
  7797  091E                     u4920:
  7798                           	line	103
  7799                           	
  7800  091E                     l10998:	
  7801                           ;robot.c: 102: {
  7802                           ;robot.c: 103: ser_putch(137);
  7803  091E  3089               	movlw	(089h)
  7804  091F  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7805                           	line	105
  7806                           ;robot.c: 105: ser_putch(0);
  7807  0924  3000               	movlw	(0)
  7808  0925  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7809                           	line	107
  7810                           ;robot.c: 107: ser_putch(50);
  7811  092A  3032               	movlw	(032h)
  7812  092B  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7813                           	line	109
  7814                           ;robot.c: 109: ser_putch(0);
  7815  0930  3000               	movlw	(0)
  7816  0931  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7817                           	line	111
  7818                           ;robot.c: 111: ser_putch(1);
  7819  0936  3001               	movlw	(01h)
  7820  0937  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7821                           	line	112
  7822                           ;robot.c: 112: }
  7823  093C  2982               	goto	l6022
  7824                           	line	113
  7825                           	
  7826  093D                     l6018:	
  7827                           ;robot.c: 113: else if (angle < 0)
  7828  093D  1283               	bcf	status, 5	;RP0=0, select bank0
  7829  093E  1303               	bcf	status, 6	;RP1=0, select bank0
  7830  093F  1FA3               	btfss	(robotTurn@angle+1),7
  7831  0940  2942               	goto	u4931
  7832  0941  2943               	goto	u4930
  7833  0942                     u4931:
  7834  0942  2962               	goto	l11002
  7835  0943                     u4930:
  7836                           	line	115
  7837                           	
  7838  0943                     l11000:	
  7839                           ;robot.c: 114: {
  7840                           ;robot.c: 115: ser_putch(137);
  7841  0943  3089               	movlw	(089h)
  7842  0944  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7843                           	line	117
  7844                           ;robot.c: 117: ser_putch(0);
  7845  0949  3000               	movlw	(0)
  7846  094A  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7847                           	line	119
  7848                           ;robot.c: 119: ser_putch(50);
  7849  094F  3032               	movlw	(032h)
  7850  0950  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7851                           	line	121
  7852                           ;robot.c: 121: ser_putch(255);
  7853  0955  30FF               	movlw	(0FFh)
  7854  0956  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7855                           	line	123
  7856                           ;robot.c: 123: ser_putch(255);
  7857  095B  30FF               	movlw	(0FFh)
  7858  095C  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7859                           	line	124
  7860                           ;robot.c: 124: }
  7861  0961  2982               	goto	l6022
  7862                           	line	125
  7863                           	
  7864  0962                     l6020:	
  7865                           	line	127
  7866                           	
  7867  0962                     l11002:	
  7868                           ;robot.c: 125: else
  7869                           ;robot.c: 126: {
  7870                           ;robot.c: 127: ser_putch(137);
  7871  0962  3089               	movlw	(089h)
  7872  0963  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7873                           	line	129
  7874                           ;robot.c: 129: ser_putch(0);
  7875  0968  3000               	movlw	(0)
  7876  0969  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7877                           	line	131
  7878                           ;robot.c: 131: ser_putch(0);
  7879  096E  3000               	movlw	(0)
  7880  096F  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7881                           	line	133
  7882                           ;robot.c: 133: ser_putch(0);
  7883  0974  3000               	movlw	(0)
  7884  0975  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7885                           	line	135
  7886                           ;robot.c: 135: ser_putch(0);
  7887  097A  3000               	movlw	(0)
  7888  097B  160A  118A  2567   	fcall	_ser_putch
              120A  158A         
  7889  0980  2982               	goto	l6022
  7890                           	line	136
  7891                           	
  7892  0981                     l6021:	
  7893  0981  2982               	goto	l6022
  7894                           	
  7895  0982                     l6019:	
  7896                           	line	137
  7897                           	
  7898  0982                     l6022:	
  7899  0982  0008               	return
  7900                           	opt stack 0
  7901                           GLOBAL	__end_of_robotTurn
  7902  0983                     	__end_of_robotTurn:
  7903 ;; =============== function _robotTurn ends ============
  7904                           
  7905                           	signat	_robotTurn,4216
  7906                           	global	_rotate
  7907                           psect	text1093,local,class=CODE,delta=2
  7908                           global __ptext1093
  7909  17B0                     __ptext1093:
  7910                           
  7911 ;; *************** function _rotate *****************
  7912 ;; Defined at:
  7913 ;;		line 66 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  numsteps        2    3[BANK0 ] unsigned int 
  7916 ;;  direction       1    5[BANK0 ] unsigned char 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;  i               2    8[BANK0 ] unsigned int 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;		None               void
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0, pclath, cstack
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7928 ;;      Params:         0       3       0       0       0
  7929 ;;      Locals:         0       2       0       0       0
  7930 ;;      Temps:          0       2       0       0       0
  7931 ;;      Totals:         0       7       0       0       0
  7932 ;;Total ram usage:        7 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    4
  7935 ;; This function calls:
  7936 ;;		_spi_transfer
  7937 ;; This function is called by:
  7938 ;;		_main
  7939 ;;		_calibrateIR
  7940 ;;		_scan360
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           psect	text1093
  7944                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7945                           	line	66
  7946                           	global	__size_of_rotate
  7947  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  7948                           	
  7949  17B0                     _rotate:	
  7950                           	opt	stack 3
  7951                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  7952                           	line	68
  7953                           	
  7954  17B0                     l10968:	
  7955                           ;steppermotor.c: 68: RC0 = 1; RC1 = 1;;
  7956  17B0  1283               	bcf	status, 5	;RP0=0, select bank0
  7957  17B1  1303               	bcf	status, 6	;RP1=0, select bank0
  7958  17B2  1407               	bsf	(56/8),(56)&7
  7959  17B3  1487               	bsf	(57/8),(57)&7
  7960                           	line	69
  7961                           	
  7962  17B4                     l10970:	
  7963                           ;steppermotor.c: 69: if (direction == 0)
  7964  17B4  08A5               	movf	(rotate@direction),f
  7965  17B5  1D03               	skipz
  7966  17B6  2FB8               	goto	u4901
  7967  17B7  2FB9               	goto	u4900
  7968  17B8                     u4901:
  7969  17B8  2FC0               	goto	l10974
  7970  17B9                     u4900:
  7971                           	line	70
  7972                           	
  7973  17B9                     l10972:	
  7974                           ;steppermotor.c: 70: spi_transfer(0b00001011);
  7975  17B9  300B               	movlw	(0Bh)
  7976  17BA  160A  118A  23B6   	fcall	_spi_transfer
              160A  118A         
  7977  17BF  2FC7               	goto	l10976
  7978                           	line	71
  7979                           	
  7980  17C0                     l3715:	
  7981                           	line	72
  7982                           	
  7983  17C0                     l10974:	
  7984                           ;steppermotor.c: 71: else
  7985                           ;steppermotor.c: 72: spi_transfer(0b00001001);
  7986  17C0  3009               	movlw	(09h)
  7987  17C1  160A  118A  23B6   	fcall	_spi_transfer
              160A  118A         
  7988  17C6  2FC7               	goto	l10976
  7989                           	
  7990  17C7                     l3716:	
  7991                           	line	73
  7992                           	
  7993  17C7                     l10976:	
  7994                           ;steppermotor.c: 73: RC0 = 0; RC1 = 0;;
  7995  17C7  1283               	bcf	status, 5	;RP0=0, select bank0
  7996  17C8  1303               	bcf	status, 6	;RP1=0, select bank0
  7997  17C9  1007               	bcf	(56/8),(56)&7
  7998                           	
  7999  17CA                     l10978:	
  8000  17CA  1087               	bcf	(57/8),(57)&7
  8001                           	line	74
  8002                           	
  8003  17CB                     l10980:	
  8004                           ;steppermotor.c: 74: for (unsigned int i = 0; i < numsteps; i++)
  8005  17CB  01A8               	clrf	(rotate@i)
  8006  17CC  01A9               	clrf	(rotate@i+1)
  8007  17CD  2FE4               	goto	l3717
  8008                           	line	75
  8009                           	
  8010  17CE                     l3718:	
  8011                           	line	76
  8012                           ;steppermotor.c: 75: {
  8013                           ;steppermotor.c: 76: RC2 = 1; _nop(); RC2 = 0;;
  8014  17CE  1507               	bsf	(58/8),(58)&7
  8015  17CF  0000               	nop
  8016  17D0  1283               	bcf	status, 5	;RP0=0, select bank0
  8017  17D1  1303               	bcf	status, 6	;RP1=0, select bank0
  8018  17D2  1107               	bcf	(58/8),(58)&7
  8019                           	line	77
  8020                           	
  8021  17D3                     l10982:	
  8022                           ;steppermotor.c: 77: _delay((unsigned long)((15)*(20000000/4000.0)));
  8023                           	opt asmopt_off
  8024  17D3  3062               movlw	98
  8025  17D4  00A7               movwf	((??_rotate+0)+0+1),f
  8026  17D5  3065               	movlw	101
  8027  17D6  00A6               movwf	((??_rotate+0)+0),f
  8028  17D7                     u5757:
  8029  17D7  0BA6               	decfsz	((??_rotate+0)+0),f
  8030  17D8  2FD7               	goto	u5757
  8031  17D9  0BA7               	decfsz	((??_rotate+0)+0+1),f
  8032  17DA  2FD7               	goto	u5757
  8033  17DB  2FDC               	nop2
  8034                           opt asmopt_on
  8035                           
  8036                           	line	74
  8037  17DC  3001               	movlw	low(01h)
  8038  17DD  1283               	bcf	status, 5	;RP0=0, select bank0
  8039  17DE  1303               	bcf	status, 6	;RP1=0, select bank0
  8040  17DF  07A8               	addwf	(rotate@i),f
  8041  17E0  1803               	skipnc
  8042  17E1  0AA9               	incf	(rotate@i+1),f
  8043  17E2  3000               	movlw	high(01h)
  8044  17E3  07A9               	addwf	(rotate@i+1),f
  8045                           	
  8046  17E4                     l3717:	
  8047  17E4  0824               	movf	(rotate@numsteps+1),w
  8048  17E5  0229               	subwf	(rotate@i+1),w
  8049  17E6  1D03               	skipz
  8050  17E7  2FEA               	goto	u4915
  8051  17E8  0823               	movf	(rotate@numsteps),w
  8052  17E9  0228               	subwf	(rotate@i),w
  8053  17EA                     u4915:
  8054  17EA  1C03               	skipc
  8055  17EB  2FED               	goto	u4911
  8056  17EC  2FEE               	goto	u4910
  8057  17ED                     u4911:
  8058  17ED  2FCE               	goto	l3718
  8059  17EE                     u4910:
  8060                           	
  8061  17EE                     l3719:	
  8062                           	line	79
  8063                           ;steppermotor.c: 78: }
  8064                           ;steppermotor.c: 79: RC0 = 1; RC1 = 1;;
  8065  17EE  1407               	bsf	(56/8),(56)&7
  8066  17EF  1487               	bsf	(57/8),(57)&7
  8067                           	line	80
  8068                           	
  8069  17F0                     l10984:	
  8070                           ;steppermotor.c: 80: spi_transfer(0b00000000);
  8071  17F0  3000               	movlw	(0)
  8072  17F1  160A  118A  23B6   	fcall	_spi_transfer
              160A  118A         
  8073                           	line	81
  8074                           	
  8075  17F6                     l10986:	
  8076                           ;steppermotor.c: 81: RC0 = 0; RC1 = 0;;
  8077  17F6  1283               	bcf	status, 5	;RP0=0, select bank0
  8078  17F7  1303               	bcf	status, 6	;RP1=0, select bank0
  8079  17F8  1007               	bcf	(56/8),(56)&7
  8080                           	
  8081  17F9                     l10988:	
  8082  17F9  1087               	bcf	(57/8),(57)&7
  8083                           	line	82
  8084                           	
  8085  17FA                     l10990:	
  8086                           ;steppermotor.c: 82: RC2 = 1; _nop(); RC2 = 0;;
  8087  17FA  1507               	bsf	(58/8),(58)&7
  8088                           	
  8089  17FB                     l10992:	
  8090  17FB  0000               	nop
  8091                           	
  8092  17FC                     l10994:	
  8093  17FC  1283               	bcf	status, 5	;RP0=0, select bank0
  8094  17FD  1303               	bcf	status, 6	;RP1=0, select bank0
  8095  17FE  1107               	bcf	(58/8),(58)&7
  8096                           	line	83
  8097                           	
  8098  17FF                     l3720:	
  8099  17FF  0008               	return
  8100                           	opt stack 0
  8101                           GLOBAL	__end_of_rotate
  8102  1800                     	__end_of_rotate:
  8103 ;; =============== function _rotate ends ============
  8104                           
  8105                           	signat	_rotate,8312
  8106                           	global	_robo_init
  8107                           psect	text1094,local,class=CODE,delta=2
  8108                           global __ptext1094
  8109  1423                     __ptext1094:
  8110                           
  8111 ;; *************** function _robo_init *****************
  8112 ;; Defined at:
  8113 ;;		line 31 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;		None
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;		None
  8118 ;; Return value:  Size  Location     Type
  8119 ;;		None               void
  8120 ;; Registers used:
  8121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8127 ;;      Params:         0       0       0       0       0
  8128 ;;      Locals:         0       0       0       0       0
  8129 ;;      Temps:          0       0       0       0       0
  8130 ;;      Totals:         0       0       0       0       0
  8131 ;;Total ram usage:        0 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:    4
  8134 ;; This function calls:
  8135 ;;		_ser_putch
  8136 ;; This function is called by:
  8137 ;;		_init
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           psect	text1094
  8141                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  8142                           	line	31
  8143                           	global	__size_of_robo_init
  8144  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  8145                           	
  8146  1423                     _robo_init:	
  8147                           	opt	stack 2
  8148                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8149                           	line	32
  8150                           	
  8151  1423                     l10966:	
  8152                           ;robot.c: 32: ser_putch(128);
  8153  1423  3080               	movlw	(080h)
  8154  1424  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  8155                           	line	33
  8156                           ;robot.c: 33: ser_putch(132);
  8157  1429  3084               	movlw	(084h)
  8158  142A  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  8159                           	line	34
  8160                           ;robot.c: 34: ser_putch(150);
  8161  142F  3096               	movlw	(096h)
  8162  1430  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  8163                           	line	35
  8164                           ;robot.c: 35: ser_putch(0);
  8165  1435  3000               	movlw	(0)
  8166  1436  160A  118A  2567   	fcall	_ser_putch
              160A  118A         
  8167                           	line	36
  8168                           	
  8169  143B                     l6004:	
  8170  143B  0008               	return
  8171                           	opt stack 0
  8172                           GLOBAL	__end_of_robo_init
  8173  143C                     	__end_of_robo_init:
  8174 ;; =============== function _robo_init ends ============
  8175                           
  8176                           	signat	_robo_init,88
  8177                           	global	_lcd_write_data
  8178                           psect	text1095,local,class=CODE,delta=2
  8179                           global __ptext1095
  8180  1390                     __ptext1095:
  8181                           
  8182 ;; *************** function _lcd_write_data *****************
  8183 ;; Defined at:
  8184 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  databyte        1    wreg     unsigned char 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;  databyte        1    2[BANK0 ] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;		None               void
  8191 ;; Registers used:
  8192 ;;		wreg
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8198 ;;      Params:         0       0       0       0       0
  8199 ;;      Locals:         0       1       0       0       0
  8200 ;;      Temps:          0       2       0       0       0
  8201 ;;      Totals:         0       3       0       0       0
  8202 ;;Total ram usage:        3 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    3
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		_lcd_write_string
  8209 ;;		_lcd_write_2_digit_bcd
  8210 ;;		_lcd_write_3_digit_bcd
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           psect	text1095
  8214                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8215                           	line	30
  8216                           	global	__size_of_lcd_write_data
  8217  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  8218                           	
  8219  1390                     _lcd_write_data:	
  8220                           	opt	stack 1
  8221                           ; Regs used in _lcd_write_data: [wreg]
  8222                           ;lcd_write_data@databyte stored from wreg
  8223  1390  1283               	bcf	status, 5	;RP0=0, select bank0
  8224  1391  1303               	bcf	status, 6	;RP1=0, select bank0
  8225  1392  00A2               	movwf	(lcd_write_data@databyte)
  8226                           	line	31
  8227                           	
  8228  1393                     l10958:	
  8229                           ;lcd.c: 31: RE2 = 0;
  8230  1393  1109               	bcf	(74/8),(74)&7
  8231                           	line	32
  8232                           ;lcd.c: 32: RE1 = 0;
  8233  1394  1089               	bcf	(73/8),(73)&7
  8234                           	line	33
  8235                           ;lcd.c: 33: RE0 = 1;
  8236  1395  1409               	bsf	(72/8),(72)&7
  8237                           	line	34
  8238                           	
  8239  1396                     l10960:	
  8240                           ;lcd.c: 34: PORTD = databyte;
  8241  1396  0822               	movf	(lcd_write_data@databyte),w
  8242  1397  0088               	movwf	(8)	;volatile
  8243                           	line	35
  8244                           	
  8245  1398                     l10962:	
  8246                           ;lcd.c: 35: RE2 = 1;
  8247  1398  1509               	bsf	(74/8),(74)&7
  8248                           	line	36
  8249                           	
  8250  1399                     l10964:	
  8251                           ;lcd.c: 36: RE2 = 0;
  8252  1399  1109               	bcf	(74/8),(74)&7
  8253                           	line	37
  8254                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  8255                           	opt asmopt_off
  8256  139A  3007               movlw	7
  8257  139B  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  8258  139C  307D               	movlw	125
  8259  139D  00A0               movwf	((??_lcd_write_data+0)+0),f
  8260  139E                     u5767:
  8261  139E  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  8262  139F  2B9E               	goto	u5767
  8263  13A0  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  8264  13A1  2B9E               	goto	u5767
  8265                           opt asmopt_on
  8266                           
  8267                           	line	38
  8268                           	
  8269  13A2                     l1402:	
  8270  13A2  0008               	return
  8271                           	opt stack 0
  8272                           GLOBAL	__end_of_lcd_write_data
  8273  13A3                     	__end_of_lcd_write_data:
  8274 ;; =============== function _lcd_write_data ends ============
  8275                           
  8276                           	signat	_lcd_write_data,4216
  8277                           	global	_lcd_write_control
  8278                           psect	text1096,local,class=CODE,delta=2
  8279                           global __ptext1096
  8280  13CA                     __ptext1096:
  8281                           
  8282 ;; *************** function _lcd_write_control *****************
  8283 ;; Defined at:
  8284 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  databyte        1    wreg     unsigned char 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  databyte        1    2[BANK0 ] unsigned char 
  8289 ;; Return value:  Size  Location     Type
  8290 ;;		None               void
  8291 ;; Registers used:
  8292 ;;		wreg
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8298 ;;      Params:         0       0       0       0       0
  8299 ;;      Locals:         0       1       0       0       0
  8300 ;;      Temps:          0       2       0       0       0
  8301 ;;      Totals:         0       3       0       0       0
  8302 ;;Total ram usage:        3 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:    3
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_lcd_set_cursor
  8309 ;;		_lcd_init
  8310 ;;		_UpdateDisplay
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           psect	text1096
  8314                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8315                           	line	18
  8316                           	global	__size_of_lcd_write_control
  8317  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  8318                           	
  8319  13CA                     _lcd_write_control:	
  8320                           	opt	stack 1
  8321                           ; Regs used in _lcd_write_control: [wreg]
  8322                           ;lcd_write_control@databyte stored from wreg
  8323  13CA  1283               	bcf	status, 5	;RP0=0, select bank0
  8324  13CB  1303               	bcf	status, 6	;RP1=0, select bank0
  8325  13CC  00A2               	movwf	(lcd_write_control@databyte)
  8326                           	line	19
  8327                           	
  8328  13CD                     l10950:	
  8329                           ;lcd.c: 19: RE2 = 0;
  8330  13CD  1109               	bcf	(74/8),(74)&7
  8331                           	line	20
  8332                           ;lcd.c: 20: RE1 = 0;
  8333  13CE  1089               	bcf	(73/8),(73)&7
  8334                           	line	21
  8335                           ;lcd.c: 21: RE0 = 0;
  8336  13CF  1009               	bcf	(72/8),(72)&7
  8337                           	line	22
  8338                           	
  8339  13D0                     l10952:	
  8340                           ;lcd.c: 22: PORTD = databyte;
  8341  13D0  0822               	movf	(lcd_write_control@databyte),w
  8342  13D1  0088               	movwf	(8)	;volatile
  8343                           	line	23
  8344                           	
  8345  13D2                     l10954:	
  8346                           ;lcd.c: 23: RE2 = 1;
  8347  13D2  1509               	bsf	(74/8),(74)&7
  8348                           	line	24
  8349                           	
  8350  13D3                     l10956:	
  8351                           ;lcd.c: 24: RE2 = 0;
  8352  13D3  1109               	bcf	(74/8),(74)&7
  8353                           	line	25
  8354                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  8355                           	opt asmopt_off
  8356  13D4  300D               movlw	13
  8357  13D5  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  8358  13D6  30FB               	movlw	251
  8359  13D7  00A0               movwf	((??_lcd_write_control+0)+0),f
  8360  13D8                     u5777:
  8361  13D8  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  8362  13D9  2BD8               	goto	u5777
  8363  13DA  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  8364  13DB  2BD8               	goto	u5777
  8365  13DC  2BDD               	nop2
  8366                           opt asmopt_on
  8367                           
  8368                           	line	26
  8369                           	
  8370  13DD                     l1399:	
  8371  13DD  0008               	return
  8372                           	opt stack 0
  8373                           GLOBAL	__end_of_lcd_write_control
  8374  13DE                     	__end_of_lcd_write_control:
  8375 ;; =============== function _lcd_write_control ends ============
  8376                           
  8377                           	signat	_lcd_write_control,4216
  8378                           	global	_init_adc
  8379                           psect	text1097,local,class=CODE,delta=2
  8380                           global __ptext1097
  8381  13DE                     __ptext1097:
  8382                           
  8383 ;; *************** function _init_adc *****************
  8384 ;; Defined at:
  8385 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;		None               void
  8392 ;; Registers used:
  8393 ;;		wreg, status,2
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8399 ;;      Params:         0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0
  8401 ;;      Temps:          0       1       0       0       0
  8402 ;;      Totals:         0       1       0       0       0
  8403 ;;Total ram usage:        1 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:    3
  8406 ;; This function calls:
  8407 ;;		Nothing
  8408 ;; This function is called by:
  8409 ;;		_init
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           psect	text1097
  8413                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8414                           	line	61
  8415                           	global	__size_of_init_adc
  8416  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  8417                           	
  8418  13DE                     _init_adc:	
  8419                           	opt	stack 3
  8420                           ; Regs used in _init_adc: [wreg+status,2]
  8421                           	line	63
  8422                           	
  8423  13DE                     l10940:	
  8424                           ;adc.c: 63: PORTA = 0;
  8425  13DE  1283               	bcf	status, 5	;RP0=0, select bank0
  8426  13DF  1303               	bcf	status, 6	;RP1=0, select bank0
  8427  13E0  0185               	clrf	(5)	;volatile
  8428                           	line	64
  8429                           	
  8430  13E1                     l10942:	
  8431                           ;adc.c: 64: TRISA = 0b00111111;
  8432  13E1  303F               	movlw	(03Fh)
  8433  13E2  1683               	bsf	status, 5	;RP0=1, select bank1
  8434  13E3  1303               	bcf	status, 6	;RP1=0, select bank1
  8435  13E4  0085               	movwf	(133)^080h	;volatile
  8436                           	line	67
  8437                           	
  8438  13E5                     l10944:	
  8439                           ;adc.c: 67: ADCON0 = 0b10100001;
  8440  13E5  30A1               	movlw	(0A1h)
  8441  13E6  1283               	bcf	status, 5	;RP0=0, select bank0
  8442  13E7  1303               	bcf	status, 6	;RP1=0, select bank0
  8443  13E8  009F               	movwf	(31)	;volatile
  8444                           	line	68
  8445                           	
  8446  13E9                     l10946:	
  8447                           ;adc.c: 68: ADCON1 = 0b0000010;
  8448  13E9  3002               	movlw	(02h)
  8449  13EA  1683               	bsf	status, 5	;RP0=1, select bank1
  8450  13EB  1303               	bcf	status, 6	;RP1=0, select bank1
  8451  13EC  009F               	movwf	(159)^080h	;volatile
  8452                           	line	70
  8453                           	
  8454  13ED                     l10948:	
  8455                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8456                           	opt asmopt_off
  8457  13ED  3053               movlw	83
  8458  13EE  1283               	bcf	status, 5	;RP0=0, select bank0
  8459  13EF  1303               	bcf	status, 6	;RP1=0, select bank0
  8460  13F0  00A0               movwf	(??_init_adc+0)+0,f
  8461  13F1                     u5787:
  8462  13F1  0BA0               decfsz	(??_init_adc+0)+0,f
  8463  13F2  2BF1               	goto	u5787
  8464                           opt asmopt_on
  8465                           
  8466                           	line	72
  8467                           	
  8468  13F3                     l700:	
  8469  13F3  0008               	return
  8470                           	opt stack 0
  8471                           GLOBAL	__end_of_init_adc
  8472  13F4                     	__end_of_init_adc:
  8473 ;; =============== function _init_adc ends ============
  8474                           
  8475                           	signat	_init_adc,88
  8476                           	global	_adc_read_channel
  8477                           psect	text1098,local,class=CODE,delta=2
  8478                           global __ptext1098
  8479  1655                     __ptext1098:
  8480                           
  8481 ;; *************** function _adc_read_channel *****************
  8482 ;; Defined at:
  8483 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  channel         1    wreg     unsigned char 
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;  channel         1    7[BANK0 ] unsigned char 
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      unsigned char 
  8490 ;; Registers used:
  8491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8497 ;;      Params:         0       0       0       0       0
  8498 ;;      Locals:         0       1       0       0       0
  8499 ;;      Temps:          0       1       0       0       0
  8500 ;;      Totals:         0       2       0       0       0
  8501 ;;Total ram usage:        2 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:    4
  8504 ;; This function calls:
  8505 ;;		_adc_read
  8506 ;; This function is called by:
  8507 ;;		_readDistance
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           psect	text1098
  8511                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8512                           	line	20
  8513                           	global	__size_of_adc_read_channel
  8514  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  8515                           	
  8516  1655                     _adc_read_channel:	
  8517                           	opt	stack 0
  8518                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8519                           ;adc_read_channel@channel stored from wreg
  8520  1655  1283               	bcf	status, 5	;RP0=0, select bank0
  8521  1656  1303               	bcf	status, 6	;RP1=0, select bank0
  8522  1657  00A7               	movwf	(adc_read_channel@channel)
  8523                           	line	21
  8524                           	
  8525  1658                     l10924:	
  8526                           ;adc.c: 21: switch(channel)
  8527  1658  2E71               	goto	l10932
  8528                           	line	23
  8529                           ;adc.c: 22: {
  8530                           ;adc.c: 23: case 0:
  8531                           	
  8532  1659                     l690:	
  8533                           	line	24
  8534                           ;adc.c: 24: CHS0 = 0;
  8535  1659  119F               	bcf	(251/8),(251)&7
  8536                           	line	25
  8537                           ;adc.c: 25: CHS1 = 0;
  8538  165A  121F               	bcf	(252/8),(252)&7
  8539                           	line	26
  8540                           ;adc.c: 26: CHS2 = 0;
  8541  165B  129F               	bcf	(253/8),(253)&7
  8542                           	line	27
  8543                           ;adc.c: 27: break;
  8544  165C  2E82               	goto	l10934
  8545                           	line	28
  8546                           ;adc.c: 28: case 1:
  8547                           	
  8548  165D                     l692:	
  8549                           	line	29
  8550                           ;adc.c: 29: CHS0 = 1;
  8551  165D  159F               	bsf	(251/8),(251)&7
  8552                           	line	30
  8553                           ;adc.c: 30: CHS1 = 0;
  8554  165E  121F               	bcf	(252/8),(252)&7
  8555                           	line	31
  8556                           ;adc.c: 31: CHS2 = 0;
  8557  165F  129F               	bcf	(253/8),(253)&7
  8558                           	line	32
  8559                           ;adc.c: 32: break;
  8560  1660  2E82               	goto	l10934
  8561                           	line	33
  8562                           ;adc.c: 33: case 2:
  8563                           	
  8564  1661                     l693:	
  8565                           	line	34
  8566                           ;adc.c: 34: CHS0 = 0;
  8567  1661  119F               	bcf	(251/8),(251)&7
  8568                           	line	35
  8569                           ;adc.c: 35: CHS1 = 1;
  8570  1662  161F               	bsf	(252/8),(252)&7
  8571                           	line	36
  8572                           ;adc.c: 36: CHS2 = 0;
  8573  1663  129F               	bcf	(253/8),(253)&7
  8574                           	line	37
  8575                           ;adc.c: 37: break;
  8576  1664  2E82               	goto	l10934
  8577                           	line	38
  8578                           ;adc.c: 38: case 3:
  8579                           	
  8580  1665                     l694:	
  8581                           	line	39
  8582                           ;adc.c: 39: CHS0 = 1;
  8583  1665  159F               	bsf	(251/8),(251)&7
  8584                           	line	40
  8585                           ;adc.c: 40: CHS1 = 1;
  8586  1666  161F               	bsf	(252/8),(252)&7
  8587                           	line	41
  8588                           ;adc.c: 41: CHS2 = 0;
  8589  1667  129F               	bcf	(253/8),(253)&7
  8590                           	line	42
  8591                           ;adc.c: 42: break;
  8592  1668  2E82               	goto	l10934
  8593                           	line	43
  8594                           ;adc.c: 43: case 4:
  8595                           	
  8596  1669                     l695:	
  8597                           	line	44
  8598                           ;adc.c: 44: CHS0 = 0;
  8599  1669  119F               	bcf	(251/8),(251)&7
  8600                           	line	45
  8601                           ;adc.c: 45: CHS1 = 0;
  8602  166A  121F               	bcf	(252/8),(252)&7
  8603                           	line	46
  8604                           ;adc.c: 46: CHS2 = 1;
  8605  166B  169F               	bsf	(253/8),(253)&7
  8606                           	line	47
  8607                           ;adc.c: 47: break;
  8608  166C  2E82               	goto	l10934
  8609                           	line	50
  8610                           ;adc.c: 50: default:
  8611                           	
  8612  166D                     l696:	
  8613                           	line	51
  8614                           	
  8615  166D                     l10926:	
  8616                           ;adc.c: 51: return 0;
  8617  166D  3000               	movlw	(0)
  8618  166E  2E8F               	goto	l697
  8619                           	
  8620  166F                     l10928:	
  8621  166F  2E8F               	goto	l697
  8622                           	line	52
  8623                           	
  8624  1670                     l10930:	
  8625                           ;adc.c: 52: }
  8626  1670  2E82               	goto	l10934
  8627                           	line	21
  8628                           	
  8629  1671                     l689:	
  8630                           	
  8631  1671                     l10932:	
  8632  1671  0827               	movf	(adc_read_channel@channel),w
  8633                           	; Switch size 1, requested type "space"
  8634                           ; Number of cases is 5, Range of values is 0 to 4
  8635                           ; switch strategies available:
  8636                           ; Name         Instructions Cycles
  8637                           ; simple_byte           16     9 (average)
  8638                           ; direct_byte           23     8 (fixed)
  8639                           ; jumptable            260     6 (fixed)
  8640                           ; rangetable             9     6 (fixed)
  8641                           ; spacedrange           16     9 (fixed)
  8642                           ; locatedrange           5     3 (fixed)
  8643                           ;	Chosen strategy is simple_byte
  8644                           
  8645                           	opt asmopt_off
  8646  1672  3A00               	xorlw	0^0	; case 0
  8647  1673  1903               	skipnz
  8648  1674  2E59               	goto	l690
  8649  1675  3A01               	xorlw	1^0	; case 1
  8650  1676  1903               	skipnz
  8651  1677  2E5D               	goto	l692
  8652  1678  3A03               	xorlw	2^1	; case 2
  8653  1679  1903               	skipnz
  8654  167A  2E61               	goto	l693
  8655  167B  3A01               	xorlw	3^2	; case 3
  8656  167C  1903               	skipnz
  8657  167D  2E65               	goto	l694
  8658  167E  3A07               	xorlw	4^3	; case 4
  8659  167F  1903               	skipnz
  8660  1680  2E69               	goto	l695
  8661  1681  2E6D               	goto	l10926
  8662                           	opt asmopt_on
  8663                           
  8664                           	line	52
  8665                           	
  8666  1682                     l691:	
  8667                           	line	54
  8668                           	
  8669  1682                     l10934:	
  8670                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8671                           	opt asmopt_off
  8672  1682  3053               movlw	83
  8673  1683  00A6               movwf	(??_adc_read_channel+0)+0,f
  8674  1684                     u5797:
  8675  1684  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  8676  1685  2E84               	goto	u5797
  8677                           opt asmopt_on
  8678                           
  8679                           	line	56
  8680                           	
  8681  1686                     l10936:	
  8682                           ;adc.c: 56: return adc_read();
  8683  1686  160A  118A  2463   	fcall	_adc_read
              160A  118A         
  8684  168B  1283               	bcf	status, 5	;RP0=0, select bank0
  8685  168C  1303               	bcf	status, 6	;RP1=0, select bank0
  8686  168D  0820               	movf	(0+(?_adc_read)),w
  8687  168E  2E8F               	goto	l697
  8688                           	
  8689  168F                     l10938:	
  8690                           	line	58
  8691                           	
  8692  168F                     l697:	
  8693  168F  0008               	return
  8694                           	opt stack 0
  8695                           GLOBAL	__end_of_adc_read_channel
  8696  1690                     	__end_of_adc_read_channel:
  8697 ;; =============== function _adc_read_channel ends ============
  8698                           
  8699                           	signat	_adc_read_channel,4217
  8700                           	global	___awmod
  8701                           psect	text1099,local,class=CODE,delta=2
  8702                           global __ptext1099
  8703  08A7                     __ptext1099:
  8704                           
  8705 ;; *************** function ___awmod *****************
  8706 ;; Defined at:
  8707 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  divisor         2    0[BANK0 ] int 
  8710 ;;  dividend        2    2[BANK0 ] int 
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  sign            1    6[BANK0 ] unsigned char 
  8713 ;;  counter         1    5[BANK0 ] unsigned char 
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  2    0[BANK0 ] int 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8723 ;;      Params:         0       4       0       0       0
  8724 ;;      Locals:         0       2       0       0       0
  8725 ;;      Temps:          0       1       0       0       0
  8726 ;;      Totals:         0       7       0       0       0
  8727 ;;Total ram usage:        7 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    3
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		_UpdateDisplay
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           psect	text1099
  8737                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8738                           	line	5
  8739                           	global	__size_of___awmod
  8740  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  8741                           	
  8742  08A7                     ___awmod:	
  8743                           	opt	stack 2
  8744                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8745                           	line	8
  8746                           	
  8747  08A7                     l10822:	
  8748  08A7  1283               	bcf	status, 5	;RP0=0, select bank0
  8749  08A8  1303               	bcf	status, 6	;RP1=0, select bank0
  8750  08A9  01A6               	clrf	(___awmod@sign)
  8751                           	line	9
  8752  08AA  1FA3               	btfss	(___awmod@dividend+1),7
  8753  08AB  28AD               	goto	u4691
  8754  08AC  28AE               	goto	u4690
  8755  08AD                     u4691:
  8756  08AD  28B7               	goto	l10826
  8757  08AE                     u4690:
  8758                           	line	10
  8759                           	
  8760  08AE                     l10824:	
  8761  08AE  09A2               	comf	(___awmod@dividend),f
  8762  08AF  09A3               	comf	(___awmod@dividend+1),f
  8763  08B0  0AA2               	incf	(___awmod@dividend),f
  8764  08B1  1903               	skipnz
  8765  08B2  0AA3               	incf	(___awmod@dividend+1),f
  8766                           	line	11
  8767  08B3  01A6               	clrf	(___awmod@sign)
  8768  08B4  1403               	bsf	status,0
  8769  08B5  0DA6               	rlf	(___awmod@sign),f
  8770  08B6  28B7               	goto	l10826
  8771                           	line	12
  8772                           	
  8773  08B7                     l7692:	
  8774                           	line	13
  8775                           	
  8776  08B7                     l10826:	
  8777  08B7  1FA1               	btfss	(___awmod@divisor+1),7
  8778  08B8  28BA               	goto	u4701
  8779  08B9  28BB               	goto	u4700
  8780  08BA                     u4701:
  8781  08BA  28C1               	goto	l10830
  8782  08BB                     u4700:
  8783                           	line	14
  8784                           	
  8785  08BB                     l10828:	
  8786  08BB  09A0               	comf	(___awmod@divisor),f
  8787  08BC  09A1               	comf	(___awmod@divisor+1),f
  8788  08BD  0AA0               	incf	(___awmod@divisor),f
  8789  08BE  1903               	skipnz
  8790  08BF  0AA1               	incf	(___awmod@divisor+1),f
  8791  08C0  28C1               	goto	l10830
  8792                           	
  8793  08C1                     l7693:	
  8794                           	line	15
  8795                           	
  8796  08C1                     l10830:	
  8797  08C1  0821               	movf	(___awmod@divisor+1),w
  8798  08C2  0420               	iorwf	(___awmod@divisor),w
  8799  08C3  1903               	skipnz
  8800  08C4  28C6               	goto	u4711
  8801  08C5  28C7               	goto	u4710
  8802  08C6                     u4711:
  8803  08C6  28FD               	goto	l10848
  8804  08C7                     u4710:
  8805                           	line	16
  8806                           	
  8807  08C7                     l10832:	
  8808  08C7  01A5               	clrf	(___awmod@counter)
  8809  08C8  1403               	bsf	status,0
  8810  08C9  0DA5               	rlf	(___awmod@counter),f
  8811                           	line	17
  8812  08CA  28D7               	goto	l10838
  8813                           	
  8814  08CB                     l7696:	
  8815                           	line	18
  8816                           	
  8817  08CB                     l10834:	
  8818  08CB  3001               	movlw	01h
  8819                           	
  8820  08CC                     u4725:
  8821  08CC  1003               	clrc
  8822  08CD  0DA0               	rlf	(___awmod@divisor),f
  8823  08CE  0DA1               	rlf	(___awmod@divisor+1),f
  8824  08CF  3EFF               	addlw	-1
  8825  08D0  1D03               	skipz
  8826  08D1  28CC               	goto	u4725
  8827                           	line	19
  8828                           	
  8829  08D2                     l10836:	
  8830  08D2  3001               	movlw	(01h)
  8831  08D3  00A4               	movwf	(??___awmod+0)+0
  8832  08D4  0824               	movf	(??___awmod+0)+0,w
  8833  08D5  07A5               	addwf	(___awmod@counter),f
  8834  08D6  28D7               	goto	l10838
  8835                           	line	20
  8836                           	
  8837  08D7                     l7695:	
  8838                           	line	17
  8839                           	
  8840  08D7                     l10838:	
  8841  08D7  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  8842  08D8  28DA               	goto	u4731
  8843  08D9  28DB               	goto	u4730
  8844  08DA                     u4731:
  8845  08DA  28CB               	goto	l10834
  8846  08DB                     u4730:
  8847  08DB  28DD               	goto	l10840
  8848                           	
  8849  08DC                     l7697:	
  8850  08DC  28DD               	goto	l10840
  8851                           	line	21
  8852                           	
  8853  08DD                     l7698:	
  8854                           	line	22
  8855                           	
  8856  08DD                     l10840:	
  8857  08DD  0821               	movf	(___awmod@divisor+1),w
  8858  08DE  0223               	subwf	(___awmod@dividend+1),w
  8859  08DF  1D03               	skipz
  8860  08E0  28E3               	goto	u4745
  8861  08E1  0820               	movf	(___awmod@divisor),w
  8862  08E2  0222               	subwf	(___awmod@dividend),w
  8863  08E3                     u4745:
  8864  08E3  1C03               	skipc
  8865  08E4  28E6               	goto	u4741
  8866  08E5  28E7               	goto	u4740
  8867  08E6                     u4741:
  8868  08E6  28EE               	goto	l10844
  8869  08E7                     u4740:
  8870                           	line	23
  8871                           	
  8872  08E7                     l10842:	
  8873  08E7  0820               	movf	(___awmod@divisor),w
  8874  08E8  02A2               	subwf	(___awmod@dividend),f
  8875  08E9  0821               	movf	(___awmod@divisor+1),w
  8876  08EA  1C03               	skipc
  8877  08EB  03A3               	decf	(___awmod@dividend+1),f
  8878  08EC  02A3               	subwf	(___awmod@dividend+1),f
  8879  08ED  28EE               	goto	l10844
  8880                           	
  8881  08EE                     l7699:	
  8882                           	line	24
  8883                           	
  8884  08EE                     l10844:	
  8885  08EE  3001               	movlw	01h
  8886                           	
  8887  08EF                     u4755:
  8888  08EF  1003               	clrc
  8889  08F0  0CA1               	rrf	(___awmod@divisor+1),f
  8890  08F1  0CA0               	rrf	(___awmod@divisor),f
  8891  08F2  3EFF               	addlw	-1
  8892  08F3  1D03               	skipz
  8893  08F4  28EF               	goto	u4755
  8894                           	line	25
  8895                           	
  8896  08F5                     l10846:	
  8897  08F5  3001               	movlw	low(01h)
  8898  08F6  02A5               	subwf	(___awmod@counter),f
  8899  08F7  1D03               	btfss	status,2
  8900  08F8  28FA               	goto	u4761
  8901  08F9  28FB               	goto	u4760
  8902  08FA                     u4761:
  8903  08FA  28DD               	goto	l10840
  8904  08FB                     u4760:
  8905  08FB  28FD               	goto	l10848
  8906                           	
  8907  08FC                     l7700:	
  8908  08FC  28FD               	goto	l10848
  8909                           	line	26
  8910                           	
  8911  08FD                     l7694:	
  8912                           	line	27
  8913                           	
  8914  08FD                     l10848:	
  8915  08FD  0826               	movf	(___awmod@sign),w
  8916  08FE  1D03               	skipz
  8917  08FF  2901               	goto	u4770
  8918  0900  2907               	goto	l10852
  8919  0901                     u4770:
  8920                           	line	28
  8921                           	
  8922  0901                     l10850:	
  8923  0901  09A2               	comf	(___awmod@dividend),f
  8924  0902  09A3               	comf	(___awmod@dividend+1),f
  8925  0903  0AA2               	incf	(___awmod@dividend),f
  8926  0904  1903               	skipnz
  8927  0905  0AA3               	incf	(___awmod@dividend+1),f
  8928  0906  2907               	goto	l10852
  8929                           	
  8930  0907                     l7701:	
  8931                           	line	29
  8932                           	
  8933  0907                     l10852:	
  8934  0907  0823               	movf	(___awmod@dividend+1),w
  8935  0908  01A1               	clrf	(?___awmod+1)
  8936  0909  07A1               	addwf	(?___awmod+1)
  8937  090A  0822               	movf	(___awmod@dividend),w
  8938  090B  01A0               	clrf	(?___awmod)
  8939  090C  07A0               	addwf	(?___awmod)
  8940                           
  8941  090D  290E               	goto	l7702
  8942                           	
  8943  090E                     l10854:	
  8944                           	line	30
  8945                           	
  8946  090E                     l7702:	
  8947  090E  0008               	return
  8948                           	opt stack 0
  8949                           GLOBAL	__end_of___awmod
  8950  090F                     	__end_of___awmod:
  8951 ;; =============== function ___awmod ends ============
  8952                           
  8953                           	signat	___awmod,8314
  8954                           	global	___fttol
  8955                           psect	text1100,local,class=CODE,delta=2
  8956                           global __ptext1100
  8957  0C22                     __ptext1100:
  8958                           
  8959 ;; *************** function ___fttol *****************
  8960 ;; Defined at:
  8961 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  f1              3    8[BANK0 ] float 
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;  lval            4   17[BANK0 ] unsigned long 
  8966 ;;  exp1            1   21[BANK0 ] unsigned char 
  8967 ;;  sign1           1   16[BANK0 ] unsigned char 
  8968 ;; Return value:  Size  Location     Type
  8969 ;;                  4    8[BANK0 ] long 
  8970 ;; Registers used:
  8971 ;;		wreg, status,2, status,0
  8972 ;; Tracked objects:
  8973 ;;		On entry : 0/0
  8974 ;;		On exit  : 0/0
  8975 ;;		Unchanged: 0/0
  8976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8977 ;;      Params:         0       4       0       0       0
  8978 ;;      Locals:         0       6       0       0       0
  8979 ;;      Temps:          0       4       0       0       0
  8980 ;;      Totals:         0      14       0       0       0
  8981 ;;Total ram usage:       14 bytes
  8982 ;; Hardware stack levels used:    1
  8983 ;; Hardware stack levels required when called:    3
  8984 ;; This function calls:
  8985 ;;		Nothing
  8986 ;; This function is called by:
  8987 ;;		_main
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           psect	text1100
  8991                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8992                           	line	45
  8993                           	global	__size_of___fttol
  8994  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  8995                           	
  8996  0C22                     ___fttol:	
  8997                           	opt	stack 4
  8998                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8999                           	line	49
  9000                           	
  9001  0C22                     l10766:	
  9002  0C22  1283               	bcf	status, 5	;RP0=0, select bank0
  9003  0C23  1303               	bcf	status, 6	;RP1=0, select bank0
  9004  0C24  0828               	movf	(___fttol@f1),w
  9005  0C25  00AC               	movwf	((??___fttol+0)+0)
  9006  0C26  0829               	movf	(___fttol@f1+1),w
  9007  0C27  00AD               	movwf	((??___fttol+0)+0+1)
  9008  0C28  082A               	movf	(___fttol@f1+2),w
  9009  0C29  00AE               	movwf	((??___fttol+0)+0+2)
  9010  0C2A  1003               	clrc
  9011  0C2B  0D2D               	rlf	(??___fttol+0)+1,w
  9012  0C2C  0D2E               	rlf	(??___fttol+0)+2,w
  9013  0C2D  00AF               	movwf	(??___fttol+3)+0
  9014  0C2E  082F               	movf	(??___fttol+3)+0,w
  9015  0C2F  00B5               	movwf	(___fttol@exp1)
  9016  0C30  08B5               	movf	((___fttol@exp1)),f
  9017  0C31  1D03               	skipz
  9018  0C32  2C34               	goto	u4581
  9019  0C33  2C35               	goto	u4580
  9020  0C34                     u4581:
  9021  0C34  2C3F               	goto	l10772
  9022  0C35                     u4580:
  9023                           	line	50
  9024                           	
  9025  0C35                     l10768:	
  9026  0C35  3000               	movlw	0
  9027  0C36  00AB               	movwf	(?___fttol+3)
  9028  0C37  3000               	movlw	0
  9029  0C38  00AA               	movwf	(?___fttol+2)
  9030  0C39  3000               	movlw	0
  9031  0C3A  00A9               	movwf	(?___fttol+1)
  9032  0C3B  3000               	movlw	0
  9033  0C3C  00A8               	movwf	(?___fttol)
  9034                           
  9035  0C3D  2CC7               	goto	l7594
  9036                           	
  9037  0C3E                     l10770:	
  9038  0C3E  2CC7               	goto	l7594
  9039                           	
  9040  0C3F                     l7593:	
  9041                           	line	51
  9042                           	
  9043  0C3F                     l10772:	
  9044  0C3F  0828               	movf	(___fttol@f1),w
  9045  0C40  00AC               	movwf	((??___fttol+0)+0)
  9046  0C41  0829               	movf	(___fttol@f1+1),w
  9047  0C42  00AD               	movwf	((??___fttol+0)+0+1)
  9048  0C43  082A               	movf	(___fttol@f1+2),w
  9049  0C44  00AE               	movwf	((??___fttol+0)+0+2)
  9050  0C45  3017               	movlw	017h
  9051  0C46                     u4595:
  9052  0C46  1003               	clrc
  9053  0C47  0CAE               	rrf	(??___fttol+0)+2,f
  9054  0C48  0CAD               	rrf	(??___fttol+0)+1,f
  9055  0C49  0CAC               	rrf	(??___fttol+0)+0,f
  9056  0C4A                     u4590:
  9057  0C4A  3EFF               	addlw	-1
  9058  0C4B  1D03               	skipz
  9059  0C4C  2C46               	goto	u4595
  9060  0C4D  082C               	movf	0+(??___fttol+0)+0,w
  9061  0C4E  00AF               	movwf	(??___fttol+3)+0
  9062  0C4F  082F               	movf	(??___fttol+3)+0,w
  9063  0C50  00B0               	movwf	(___fttol@sign1)
  9064                           	line	52
  9065                           	
  9066  0C51                     l10774:	
  9067  0C51  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
  9068                           	line	53
  9069                           	
  9070  0C52                     l10776:	
  9071  0C52  30FF               	movlw	0FFh
  9072  0C53  05A8               	andwf	(___fttol@f1),f
  9073  0C54  30FF               	movlw	0FFh
  9074  0C55  05A9               	andwf	(___fttol@f1+1),f
  9075  0C56  3000               	movlw	0
  9076  0C57  05AA               	andwf	(___fttol@f1+2),f
  9077                           	line	54
  9078                           	
  9079  0C58                     l10778:	
  9080  0C58  0828               	movf	(___fttol@f1),w
  9081  0C59  00B1               	movwf	(___fttol@lval)
  9082  0C5A  0829               	movf	(___fttol@f1+1),w
  9083  0C5B  00B2               	movwf	((___fttol@lval))+1
  9084  0C5C  082A               	movf	(___fttol@f1+2),w
  9085  0C5D  00B3               	movwf	((___fttol@lval))+2
  9086  0C5E  01B4               	clrf	((___fttol@lval))+3
  9087                           	line	55
  9088                           	
  9089  0C5F                     l10780:	
  9090  0C5F  308E               	movlw	low(08Eh)
  9091  0C60  02B5               	subwf	(___fttol@exp1),f
  9092                           	line	56
  9093                           	
  9094  0C61                     l10782:	
  9095  0C61  1FB5               	btfss	(___fttol@exp1),7
  9096  0C62  2C64               	goto	u4601
  9097  0C63  2C65               	goto	u4600
  9098  0C64                     u4601:
  9099  0C64  2C8A               	goto	l10792
  9100  0C65                     u4600:
  9101                           	line	57
  9102                           	
  9103  0C65                     l10784:	
  9104  0C65  0835               	movf	(___fttol@exp1),w
  9105  0C66  3A80               	xorlw	80h
  9106  0C67  3E8F               	addlw	-((-15)^80h)
  9107  0C68  1803               	skipnc
  9108  0C69  2C6B               	goto	u4611
  9109  0C6A  2C6C               	goto	u4610
  9110  0C6B                     u4611:
  9111  0C6B  2C77               	goto	l10790
  9112  0C6C                     u4610:
  9113                           	line	58
  9114                           	
  9115  0C6C                     l10786:	
  9116  0C6C  3000               	movlw	0
  9117  0C6D  00AB               	movwf	(?___fttol+3)
  9118  0C6E  3000               	movlw	0
  9119  0C6F  00AA               	movwf	(?___fttol+2)
  9120  0C70  3000               	movlw	0
  9121  0C71  00A9               	movwf	(?___fttol+1)
  9122  0C72  3000               	movlw	0
  9123  0C73  00A8               	movwf	(?___fttol)
  9124                           
  9125  0C74  2CC7               	goto	l7594
  9126                           	
  9127  0C75                     l10788:	
  9128  0C75  2CC7               	goto	l7594
  9129                           	
  9130  0C76                     l7596:	
  9131  0C76  2C77               	goto	l10790
  9132                           	line	59
  9133                           	
  9134  0C77                     l7597:	
  9135                           	line	60
  9136                           	
  9137  0C77                     l10790:	
  9138  0C77  3001               	movlw	01h
  9139  0C78                     u4625:
  9140  0C78  1003               	clrc
  9141  0C79  0CB4               	rrf	(___fttol@lval+3),f
  9142  0C7A  0CB3               	rrf	(___fttol@lval+2),f
  9143  0C7B  0CB2               	rrf	(___fttol@lval+1),f
  9144  0C7C  0CB1               	rrf	(___fttol@lval),f
  9145  0C7D  3EFF               	addlw	-1
  9146  0C7E  1D03               	skipz
  9147  0C7F  2C78               	goto	u4625
  9148                           
  9149                           	line	61
  9150  0C80  3001               	movlw	(01h)
  9151  0C81  00AC               	movwf	(??___fttol+0)+0
  9152  0C82  082C               	movf	(??___fttol+0)+0,w
  9153  0C83  07B5               	addwf	(___fttol@exp1),f
  9154  0C84  1D03               	btfss	status,2
  9155  0C85  2C87               	goto	u4631
  9156  0C86  2C88               	goto	u4630
  9157  0C87                     u4631:
  9158  0C87  2C77               	goto	l10790
  9159  0C88                     u4630:
  9160  0C88  2CAE               	goto	l10802
  9161                           	
  9162  0C89                     l7598:	
  9163                           	line	62
  9164  0C89  2CAE               	goto	l10802
  9165                           	
  9166  0C8A                     l7595:	
  9167                           	line	63
  9168                           	
  9169  0C8A                     l10792:	
  9170  0C8A  3018               	movlw	(018h)
  9171  0C8B  0235               	subwf	(___fttol@exp1),w
  9172  0C8C  1C03               	skipc
  9173  0C8D  2C8F               	goto	u4641
  9174  0C8E  2C90               	goto	u4640
  9175  0C8F                     u4641:
  9176  0C8F  2CA7               	goto	l10800
  9177  0C90                     u4640:
  9178                           	line	64
  9179                           	
  9180  0C90                     l10794:	
  9181  0C90  3000               	movlw	0
  9182  0C91  00AB               	movwf	(?___fttol+3)
  9183  0C92  3000               	movlw	0
  9184  0C93  00AA               	movwf	(?___fttol+2)
  9185  0C94  3000               	movlw	0
  9186  0C95  00A9               	movwf	(?___fttol+1)
  9187  0C96  3000               	movlw	0
  9188  0C97  00A8               	movwf	(?___fttol)
  9189                           
  9190  0C98  2CC7               	goto	l7594
  9191                           	
  9192  0C99                     l10796:	
  9193  0C99  2CC7               	goto	l7594
  9194                           	
  9195  0C9A                     l7600:	
  9196                           	line	65
  9197  0C9A  2CA7               	goto	l10800
  9198                           	
  9199  0C9B                     l7602:	
  9200                           	line	66
  9201                           	
  9202  0C9B                     l10798:	
  9203  0C9B  3001               	movlw	01h
  9204  0C9C  00AC               	movwf	(??___fttol+0)+0
  9205  0C9D                     u4655:
  9206  0C9D  1003               	clrc
  9207  0C9E  0DB1               	rlf	(___fttol@lval),f
  9208  0C9F  0DB2               	rlf	(___fttol@lval+1),f
  9209  0CA0  0DB3               	rlf	(___fttol@lval+2),f
  9210  0CA1  0DB4               	rlf	(___fttol@lval+3),f
  9211  0CA2  0BAC               	decfsz	(??___fttol+0)+0
  9212  0CA3  2C9D               	goto	u4655
  9213                           	line	67
  9214  0CA4  3001               	movlw	low(01h)
  9215  0CA5  02B5               	subwf	(___fttol@exp1),f
  9216  0CA6  2CA7               	goto	l10800
  9217                           	line	68
  9218                           	
  9219  0CA7                     l7601:	
  9220                           	line	65
  9221                           	
  9222  0CA7                     l10800:	
  9223  0CA7  08B5               	movf	(___fttol@exp1),f
  9224  0CA8  1D03               	skipz
  9225  0CA9  2CAB               	goto	u4661
  9226  0CAA  2CAC               	goto	u4660
  9227  0CAB                     u4661:
  9228  0CAB  2C9B               	goto	l10798
  9229  0CAC                     u4660:
  9230  0CAC  2CAE               	goto	l10802
  9231                           	
  9232  0CAD                     l7603:	
  9233  0CAD  2CAE               	goto	l10802
  9234                           	line	69
  9235                           	
  9236  0CAE                     l7599:	
  9237                           	line	70
  9238                           	
  9239  0CAE                     l10802:	
  9240  0CAE  0830               	movf	(___fttol@sign1),w
  9241  0CAF  1D03               	skipz
  9242  0CB0  2CB2               	goto	u4670
  9243  0CB1  2CBE               	goto	l10806
  9244  0CB2                     u4670:
  9245                           	line	71
  9246                           	
  9247  0CB2                     l10804:	
  9248  0CB2  09B1               	comf	(___fttol@lval),f
  9249  0CB3  09B2               	comf	(___fttol@lval+1),f
  9250  0CB4  09B3               	comf	(___fttol@lval+2),f
  9251  0CB5  09B4               	comf	(___fttol@lval+3),f
  9252  0CB6  0AB1               	incf	(___fttol@lval),f
  9253  0CB7  1903               	skipnz
  9254  0CB8  0AB2               	incf	(___fttol@lval+1),f
  9255  0CB9  1903               	skipnz
  9256  0CBA  0AB3               	incf	(___fttol@lval+2),f
  9257  0CBB  1903               	skipnz
  9258  0CBC  0AB4               	incf	(___fttol@lval+3),f
  9259  0CBD  2CBE               	goto	l10806
  9260                           	
  9261  0CBE                     l7604:	
  9262                           	line	72
  9263                           	
  9264  0CBE                     l10806:	
  9265  0CBE  0834               	movf	(___fttol@lval+3),w
  9266  0CBF  00AB               	movwf	(?___fttol+3)
  9267  0CC0  0833               	movf	(___fttol@lval+2),w
  9268  0CC1  00AA               	movwf	(?___fttol+2)
  9269  0CC2  0832               	movf	(___fttol@lval+1),w
  9270  0CC3  00A9               	movwf	(?___fttol+1)
  9271  0CC4  0831               	movf	(___fttol@lval),w
  9272  0CC5  00A8               	movwf	(?___fttol)
  9273                           
  9274  0CC6  2CC7               	goto	l7594
  9275                           	
  9276  0CC7                     l10808:	
  9277                           	line	73
  9278                           	
  9279  0CC7                     l7594:	
  9280  0CC7  0008               	return
  9281                           	opt stack 0
  9282                           GLOBAL	__end_of___fttol
  9283  0CC8                     	__end_of___fttol:
  9284 ;; =============== function ___fttol ends ============
  9285                           
  9286                           	signat	___fttol,4220
  9287                           	global	___ftpack
  9288                           psect	text1101,local,class=CODE,delta=2
  9289                           global __ptext1101
  9290  0A73                     __ptext1101:
  9291                           
  9292 ;; *************** function ___ftpack *****************
  9293 ;; Defined at:
  9294 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  9295 ;; Parameters:    Size  Location     Type
  9296 ;;  arg             3    0[BANK0 ] unsigned um
  9297 ;;  exp             1    3[BANK0 ] unsigned char 
  9298 ;;  sign            1    4[BANK0 ] unsigned char 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  3    0[BANK0 ] float 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, status,0
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9310 ;;      Params:         0       5       0       0       0
  9311 ;;      Locals:         0       0       0       0       0
  9312 ;;      Temps:          0       3       0       0       0
  9313 ;;      Totals:         0       8       0       0       0
  9314 ;;Total ram usage:        8 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; Hardware stack levels required when called:    3
  9317 ;; This function calls:
  9318 ;;		Nothing
  9319 ;; This function is called by:
  9320 ;;		___ftmul
  9321 ;;		___awtoft
  9322 ;;		___ftadd
  9323 ;;		___ftdiv
  9324 ;;		___lbtoft
  9325 ;;		___abtoft
  9326 ;;		___lwtoft
  9327 ;;		___altoft
  9328 ;;		___lltoft
  9329 ;;		___attoft
  9330 ;;		___lttoft
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           psect	text1101
  9334                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  9335                           	line	63
  9336                           	global	__size_of___ftpack
  9337  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  9338                           	
  9339  0A73                     ___ftpack:	
  9340                           	opt	stack 3
  9341                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9342                           	line	64
  9343                           	
  9344  0A73                     l10692:	
  9345  0A73  1283               	bcf	status, 5	;RP0=0, select bank0
  9346  0A74  1303               	bcf	status, 6	;RP1=0, select bank0
  9347  0A75  0823               	movf	(___ftpack@exp),w
  9348  0A76  1D03               	skipz
  9349  0A77  2A79               	goto	u4390
  9350  0A78  2A81               	goto	l10696
  9351  0A79                     u4390:
  9352                           	
  9353  0A79                     l10694:	
  9354  0A79  0822               	movf	(___ftpack@arg+2),w
  9355  0A7A  0421               	iorwf	(___ftpack@arg+1),w
  9356  0A7B  0420               	iorwf	(___ftpack@arg),w
  9357  0A7C  1D03               	skipz
  9358  0A7D  2A7F               	goto	u4401
  9359  0A7E  2A80               	goto	u4400
  9360  0A7F                     u4401:
  9361  0A7F  2A97               	goto	l10702
  9362  0A80                     u4400:
  9363  0A80  2A81               	goto	l10696
  9364                           	
  9365  0A81                     l7818:	
  9366                           	line	65
  9367                           	
  9368  0A81                     l10696:	
  9369  0A81  3000               	movlw	0x0
  9370  0A82  00A0               	movwf	(?___ftpack)
  9371  0A83  3000               	movlw	0x0
  9372  0A84  00A1               	movwf	(?___ftpack+1)
  9373  0A85  3000               	movlw	0x0
  9374  0A86  00A2               	movwf	(?___ftpack+2)
  9375  0A87  2AEF               	goto	l7819
  9376                           	
  9377  0A88                     l10698:	
  9378  0A88  2AEF               	goto	l7819
  9379                           	
  9380  0A89                     l7816:	
  9381                           	line	66
  9382  0A89  2A97               	goto	l10702
  9383                           	
  9384  0A8A                     l7821:	
  9385                           	line	67
  9386                           	
  9387  0A8A                     l10700:	
  9388  0A8A  3001               	movlw	(01h)
  9389  0A8B  00A5               	movwf	(??___ftpack+0)+0
  9390  0A8C  0825               	movf	(??___ftpack+0)+0,w
  9391  0A8D  07A3               	addwf	(___ftpack@exp),f
  9392                           	line	68
  9393  0A8E  3001               	movlw	01h
  9394  0A8F                     u4415:
  9395  0A8F  1003               	clrc
  9396  0A90  0CA2               	rrf	(___ftpack@arg+2),f
  9397  0A91  0CA1               	rrf	(___ftpack@arg+1),f
  9398  0A92  0CA0               	rrf	(___ftpack@arg),f
  9399  0A93  3EFF               	addlw	-1
  9400  0A94  1D03               	skipz
  9401  0A95  2A8F               	goto	u4415
  9402                           
  9403  0A96  2A97               	goto	l10702
  9404                           	line	69
  9405                           	
  9406  0A97                     l7820:	
  9407                           	line	66
  9408                           	
  9409  0A97                     l10702:	
  9410  0A97  30FE               	movlw	low highword(0FE0000h)
  9411  0A98  0522               	andwf	(___ftpack@arg+2),w
  9412  0A99  1D03               	btfss	status,2
  9413  0A9A  2A9C               	goto	u4421
  9414  0A9B  2A9D               	goto	u4420
  9415  0A9C                     u4421:
  9416  0A9C  2A8A               	goto	l10700
  9417  0A9D                     u4420:
  9418  0A9D  2AB5               	goto	l7823
  9419                           	
  9420  0A9E                     l7822:	
  9421                           	line	70
  9422  0A9E  2AB5               	goto	l7823
  9423                           	
  9424  0A9F                     l7824:	
  9425                           	line	71
  9426                           	
  9427  0A9F                     l10704:	
  9428  0A9F  3001               	movlw	(01h)
  9429  0AA0  00A5               	movwf	(??___ftpack+0)+0
  9430  0AA1  0825               	movf	(??___ftpack+0)+0,w
  9431  0AA2  07A3               	addwf	(___ftpack@exp),f
  9432                           	line	72
  9433                           	
  9434  0AA3                     l10706:	
  9435  0AA3  3001               	movlw	01h
  9436  0AA4  07A0               	addwf	(___ftpack@arg),f
  9437  0AA5  3000               	movlw	0
  9438  0AA6  1803               	skipnc
  9439  0AA7  3001               movlw 1
  9440  0AA8  07A1               	addwf	(___ftpack@arg+1),f
  9441  0AA9  3000               	movlw	0
  9442  0AAA  1803               	skipnc
  9443  0AAB  3001               movlw 1
  9444  0AAC  07A2               	addwf	(___ftpack@arg+2),f
  9445                           	line	73
  9446                           	
  9447  0AAD                     l10708:	
  9448  0AAD  3001               	movlw	01h
  9449  0AAE                     u4435:
  9450  0AAE  1003               	clrc
  9451  0AAF  0CA2               	rrf	(___ftpack@arg+2),f
  9452  0AB0  0CA1               	rrf	(___ftpack@arg+1),f
  9453  0AB1  0CA0               	rrf	(___ftpack@arg),f
  9454  0AB2  3EFF               	addlw	-1
  9455  0AB3  1D03               	skipz
  9456  0AB4  2AAE               	goto	u4435
  9457                           
  9458                           	line	74
  9459                           	
  9460  0AB5                     l7823:	
  9461                           	line	70
  9462  0AB5  30FF               	movlw	low highword(0FF0000h)
  9463  0AB6  0522               	andwf	(___ftpack@arg+2),w
  9464  0AB7  1D03               	btfss	status,2
  9465  0AB8  2ABA               	goto	u4441
  9466  0AB9  2ABB               	goto	u4440
  9467  0ABA                     u4441:
  9468  0ABA  2A9F               	goto	l10704
  9469  0ABB                     u4440:
  9470  0ABB  2AC8               	goto	l10712
  9471                           	
  9472  0ABC                     l7825:	
  9473                           	line	75
  9474  0ABC  2AC8               	goto	l10712
  9475                           	
  9476  0ABD                     l7827:	
  9477                           	line	76
  9478                           	
  9479  0ABD                     l10710:	
  9480  0ABD  3001               	movlw	low(01h)
  9481  0ABE  02A3               	subwf	(___ftpack@exp),f
  9482                           	line	77
  9483  0ABF  3001               	movlw	01h
  9484  0AC0                     u4455:
  9485  0AC0  1003               	clrc
  9486  0AC1  0DA0               	rlf	(___ftpack@arg),f
  9487  0AC2  0DA1               	rlf	(___ftpack@arg+1),f
  9488  0AC3  0DA2               	rlf	(___ftpack@arg+2),f
  9489  0AC4  3EFF               	addlw	-1
  9490  0AC5  1D03               	skipz
  9491  0AC6  2AC0               	goto	u4455
  9492  0AC7  2AC8               	goto	l10712
  9493                           	line	78
  9494                           	
  9495  0AC8                     l7826:	
  9496                           	line	75
  9497                           	
  9498  0AC8                     l10712:	
  9499  0AC8  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  9500  0AC9  2ACB               	goto	u4461
  9501  0ACA  2ACC               	goto	u4460
  9502  0ACB                     u4461:
  9503  0ACB  2ABD               	goto	l10710
  9504  0ACC                     u4460:
  9505                           	
  9506  0ACC                     l7828:	
  9507                           	line	79
  9508  0ACC  1823               	btfsc	(___ftpack@exp),(0)&7
  9509  0ACD  2ACF               	goto	u4471
  9510  0ACE  2AD0               	goto	u4470
  9511  0ACF                     u4471:
  9512  0ACF  2AD6               	goto	l7829
  9513  0AD0                     u4470:
  9514                           	line	80
  9515                           	
  9516  0AD0                     l10714:	
  9517  0AD0  30FF               	movlw	0FFh
  9518  0AD1  05A0               	andwf	(___ftpack@arg),f
  9519  0AD2  307F               	movlw	07Fh
  9520  0AD3  05A1               	andwf	(___ftpack@arg+1),f
  9521  0AD4  30FF               	movlw	0FFh
  9522  0AD5  05A2               	andwf	(___ftpack@arg+2),f
  9523                           	
  9524  0AD6                     l7829:	
  9525                           	line	81
  9526  0AD6  1003               	clrc
  9527  0AD7  0CA3               	rrf	(___ftpack@exp),f
  9528                           
  9529                           	line	82
  9530                           	
  9531  0AD8                     l10716:	
  9532  0AD8  0823               	movf	(___ftpack@exp),w
  9533  0AD9  00A5               	movwf	((??___ftpack+0)+0)
  9534  0ADA  01A6               	clrf	((??___ftpack+0)+0+1)
  9535  0ADB  01A7               	clrf	((??___ftpack+0)+0+2)
  9536  0ADC  3010               	movlw	010h
  9537  0ADD                     u4485:
  9538  0ADD  1003               	clrc
  9539  0ADE  0DA5               	rlf	(??___ftpack+0)+0,f
  9540  0ADF  0DA6               	rlf	(??___ftpack+0)+1,f
  9541  0AE0  0DA7               	rlf	(??___ftpack+0)+2,f
  9542  0AE1                     u4480:
  9543  0AE1  3EFF               	addlw	-1
  9544  0AE2  1D03               	skipz
  9545  0AE3  2ADD               	goto	u4485
  9546  0AE4  0825               	movf	0+(??___ftpack+0)+0,w
  9547  0AE5  04A0               	iorwf	(___ftpack@arg),f
  9548  0AE6  0826               	movf	1+(??___ftpack+0)+0,w
  9549  0AE7  04A1               	iorwf	(___ftpack@arg+1),f
  9550  0AE8  0827               	movf	2+(??___ftpack+0)+0,w
  9551  0AE9  04A2               	iorwf	(___ftpack@arg+2),f
  9552                           	line	83
  9553                           	
  9554  0AEA                     l10718:	
  9555  0AEA  0824               	movf	(___ftpack@sign),w
  9556  0AEB  1D03               	skipz
  9557  0AEC  2AEE               	goto	u4490
  9558  0AED  2AEF               	goto	l7830
  9559  0AEE                     u4490:
  9560                           	line	84
  9561                           	
  9562  0AEE                     l10720:	
  9563  0AEE  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  9564                           	
  9565  0AEF                     l7830:	
  9566                           	line	85
  9567                           	line	86
  9568                           	
  9569  0AEF                     l7819:	
  9570  0AEF  0008               	return
  9571                           	opt stack 0
  9572                           GLOBAL	__end_of___ftpack
  9573  0AF0                     	__end_of___ftpack:
  9574 ;; =============== function ___ftpack ends ============
  9575                           
  9576                           	signat	___ftpack,12411
  9577                           	global	___lwmod
  9578                           psect	text1102,local,class=CODE,delta=2
  9579                           global __ptext1102
  9580  16D4                     __ptext1102:
  9581                           
  9582 ;; *************** function ___lwmod *****************
  9583 ;; Defined at:
  9584 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;  divisor         2   14[BANK0 ] unsigned int 
  9587 ;;  dividend        2   16[BANK0 ] unsigned int 
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;  counter         1   19[BANK0 ] unsigned char 
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  2   14[BANK0 ] unsigned int 
  9592 ;; Registers used:
  9593 ;;		wreg, status,2, status,0
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9599 ;;      Params:         0       4       0       0       0
  9600 ;;      Locals:         0       1       0       0       0
  9601 ;;      Temps:          0       1       0       0       0
  9602 ;;      Totals:         0       6       0       0       0
  9603 ;;Total ram usage:        6 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    3
  9606 ;; This function calls:
  9607 ;;		Nothing
  9608 ;; This function is called by:
  9609 ;;		_sprintf
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           psect	text1102
  9613                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9614                           	line	5
  9615                           	global	__size_of___lwmod
  9616  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  9617                           	
  9618  16D4                     ___lwmod:	
  9619                           	opt	stack 1
  9620                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9621                           	line	8
  9622                           	
  9623  16D4                     l10600:	
  9624  16D4  1283               	bcf	status, 5	;RP0=0, select bank0
  9625  16D5  1303               	bcf	status, 6	;RP1=0, select bank0
  9626  16D6  082F               	movf	(___lwmod@divisor+1),w
  9627  16D7  042E               	iorwf	(___lwmod@divisor),w
  9628  16D8  1903               	skipnz
  9629  16D9  2EDB               	goto	u4091
  9630  16DA  2EDC               	goto	u4090
  9631  16DB                     u4091:
  9632  16DB  2F12               	goto	l10618
  9633  16DC                     u4090:
  9634                           	line	9
  9635                           	
  9636  16DC                     l10602:	
  9637  16DC  01B3               	clrf	(___lwmod@counter)
  9638  16DD  1403               	bsf	status,0
  9639  16DE  0DB3               	rlf	(___lwmod@counter),f
  9640                           	line	10
  9641  16DF  2EEC               	goto	l10608
  9642                           	
  9643  16E0                     l7502:	
  9644                           	line	11
  9645                           	
  9646  16E0                     l10604:	
  9647  16E0  3001               	movlw	01h
  9648                           	
  9649  16E1                     u4105:
  9650  16E1  1003               	clrc
  9651  16E2  0DAE               	rlf	(___lwmod@divisor),f
  9652  16E3  0DAF               	rlf	(___lwmod@divisor+1),f
  9653  16E4  3EFF               	addlw	-1
  9654  16E5  1D03               	skipz
  9655  16E6  2EE1               	goto	u4105
  9656                           	line	12
  9657                           	
  9658  16E7                     l10606:	
  9659  16E7  3001               	movlw	(01h)
  9660  16E8  00B2               	movwf	(??___lwmod+0)+0
  9661  16E9  0832               	movf	(??___lwmod+0)+0,w
  9662  16EA  07B3               	addwf	(___lwmod@counter),f
  9663  16EB  2EEC               	goto	l10608
  9664                           	line	13
  9665                           	
  9666  16EC                     l7501:	
  9667                           	line	10
  9668                           	
  9669  16EC                     l10608:	
  9670  16EC  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  9671  16ED  2EEF               	goto	u4111
  9672  16EE  2EF0               	goto	u4110
  9673  16EF                     u4111:
  9674  16EF  2EE0               	goto	l10604
  9675  16F0                     u4110:
  9676  16F0  2EF2               	goto	l10610
  9677                           	
  9678  16F1                     l7503:	
  9679  16F1  2EF2               	goto	l10610
  9680                           	line	14
  9681                           	
  9682  16F2                     l7504:	
  9683                           	line	15
  9684                           	
  9685  16F2                     l10610:	
  9686  16F2  082F               	movf	(___lwmod@divisor+1),w
  9687  16F3  0231               	subwf	(___lwmod@dividend+1),w
  9688  16F4  1D03               	skipz
  9689  16F5  2EF8               	goto	u4125
  9690  16F6  082E               	movf	(___lwmod@divisor),w
  9691  16F7  0230               	subwf	(___lwmod@dividend),w
  9692  16F8                     u4125:
  9693  16F8  1C03               	skipc
  9694  16F9  2EFB               	goto	u4121
  9695  16FA  2EFC               	goto	u4120
  9696  16FB                     u4121:
  9697  16FB  2F03               	goto	l10614
  9698  16FC                     u4120:
  9699                           	line	16
  9700                           	
  9701  16FC                     l10612:	
  9702  16FC  082E               	movf	(___lwmod@divisor),w
  9703  16FD  02B0               	subwf	(___lwmod@dividend),f
  9704  16FE  082F               	movf	(___lwmod@divisor+1),w
  9705  16FF  1C03               	skipc
  9706  1700  03B1               	decf	(___lwmod@dividend+1),f
  9707  1701  02B1               	subwf	(___lwmod@dividend+1),f
  9708  1702  2F03               	goto	l10614
  9709                           	
  9710  1703                     l7505:	
  9711                           	line	17
  9712                           	
  9713  1703                     l10614:	
  9714  1703  3001               	movlw	01h
  9715                           	
  9716  1704                     u4135:
  9717  1704  1003               	clrc
  9718  1705  0CAF               	rrf	(___lwmod@divisor+1),f
  9719  1706  0CAE               	rrf	(___lwmod@divisor),f
  9720  1707  3EFF               	addlw	-1
  9721  1708  1D03               	skipz
  9722  1709  2F04               	goto	u4135
  9723                           	line	18
  9724                           	
  9725  170A                     l10616:	
  9726  170A  3001               	movlw	low(01h)
  9727  170B  02B3               	subwf	(___lwmod@counter),f
  9728  170C  1D03               	btfss	status,2
  9729  170D  2F0F               	goto	u4141
  9730  170E  2F10               	goto	u4140
  9731  170F                     u4141:
  9732  170F  2EF2               	goto	l10610
  9733  1710                     u4140:
  9734  1710  2F12               	goto	l10618
  9735                           	
  9736  1711                     l7506:	
  9737  1711  2F12               	goto	l10618
  9738                           	line	19
  9739                           	
  9740  1712                     l7500:	
  9741                           	line	20
  9742                           	
  9743  1712                     l10618:	
  9744  1712  0831               	movf	(___lwmod@dividend+1),w
  9745  1713  01AF               	clrf	(?___lwmod+1)
  9746  1714  07AF               	addwf	(?___lwmod+1)
  9747  1715  0830               	movf	(___lwmod@dividend),w
  9748  1716  01AE               	clrf	(?___lwmod)
  9749  1717  07AE               	addwf	(?___lwmod)
  9750                           
  9751  1718  2F19               	goto	l7507
  9752                           	
  9753  1719                     l10620:	
  9754                           	line	21
  9755                           	
  9756  1719                     l7507:	
  9757  1719  0008               	return
  9758                           	opt stack 0
  9759                           GLOBAL	__end_of___lwmod
  9760  171A                     	__end_of___lwmod:
  9761 ;; =============== function ___lwmod ends ============
  9762                           
  9763                           	signat	___lwmod,8314
  9764                           	global	___lwdiv
  9765                           psect	text1103,local,class=CODE,delta=2
  9766                           global __ptext1103
  9767  1760                     __ptext1103:
  9768                           
  9769 ;; *************** function ___lwdiv *****************
  9770 ;; Defined at:
  9771 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  divisor         2    6[BANK0 ] unsigned int 
  9774 ;;  dividend        2    8[BANK0 ] unsigned int 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;  quotient        2   11[BANK0 ] unsigned int 
  9777 ;;  counter         1   13[BANK0 ] unsigned char 
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  2    6[BANK0 ] unsigned int 
  9780 ;; Registers used:
  9781 ;;		wreg, status,2, status,0
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9787 ;;      Params:         0       4       0       0       0
  9788 ;;      Locals:         0       3       0       0       0
  9789 ;;      Temps:          0       1       0       0       0
  9790 ;;      Totals:         0       8       0       0       0
  9791 ;;Total ram usage:        8 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:    3
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_readAvgDistance
  9798 ;;		_ADCconvert
  9799 ;;		_sprintf
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           psect	text1103
  9803                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9804                           	line	5
  9805                           	global	__size_of___lwdiv
  9806  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  9807                           	
  9808  1760                     ___lwdiv:	
  9809                           	opt	stack 1
  9810                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9811                           	line	9
  9812                           	
  9813  1760                     l10574:	
  9814  1760  1283               	bcf	status, 5	;RP0=0, select bank0
  9815  1761  1303               	bcf	status, 6	;RP1=0, select bank0
  9816  1762  01AB               	clrf	(___lwdiv@quotient)
  9817  1763  01AC               	clrf	(___lwdiv@quotient+1)
  9818                           	line	10
  9819                           	
  9820  1764                     l10576:	
  9821  1764  0827               	movf	(___lwdiv@divisor+1),w
  9822  1765  0426               	iorwf	(___lwdiv@divisor),w
  9823  1766  1903               	skipnz
  9824  1767  2F69               	goto	u4021
  9825  1768  2F6A               	goto	u4020
  9826  1769                     u4021:
  9827  1769  2FA8               	goto	l10596
  9828  176A                     u4020:
  9829                           	line	11
  9830                           	
  9831  176A                     l10578:	
  9832  176A  01AD               	clrf	(___lwdiv@counter)
  9833  176B  1403               	bsf	status,0
  9834  176C  0DAD               	rlf	(___lwdiv@counter),f
  9835                           	line	12
  9836  176D  2F7A               	goto	l10584
  9837                           	
  9838  176E                     l7492:	
  9839                           	line	13
  9840                           	
  9841  176E                     l10580:	
  9842  176E  3001               	movlw	01h
  9843                           	
  9844  176F                     u4035:
  9845  176F  1003               	clrc
  9846  1770  0DA6               	rlf	(___lwdiv@divisor),f
  9847  1771  0DA7               	rlf	(___lwdiv@divisor+1),f
  9848  1772  3EFF               	addlw	-1
  9849  1773  1D03               	skipz
  9850  1774  2F6F               	goto	u4035
  9851                           	line	14
  9852                           	
  9853  1775                     l10582:	
  9854  1775  3001               	movlw	(01h)
  9855  1776  00AA               	movwf	(??___lwdiv+0)+0
  9856  1777  082A               	movf	(??___lwdiv+0)+0,w
  9857  1778  07AD               	addwf	(___lwdiv@counter),f
  9858  1779  2F7A               	goto	l10584
  9859                           	line	15
  9860                           	
  9861  177A                     l7491:	
  9862                           	line	12
  9863                           	
  9864  177A                     l10584:	
  9865  177A  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  9866  177B  2F7D               	goto	u4041
  9867  177C  2F7E               	goto	u4040
  9868  177D                     u4041:
  9869  177D  2F6E               	goto	l10580
  9870  177E                     u4040:
  9871  177E  2F80               	goto	l10586
  9872                           	
  9873  177F                     l7493:	
  9874  177F  2F80               	goto	l10586
  9875                           	line	16
  9876                           	
  9877  1780                     l7494:	
  9878                           	line	17
  9879                           	
  9880  1780                     l10586:	
  9881  1780  3001               	movlw	01h
  9882                           	
  9883  1781                     u4055:
  9884  1781  1003               	clrc
  9885  1782  0DAB               	rlf	(___lwdiv@quotient),f
  9886  1783  0DAC               	rlf	(___lwdiv@quotient+1),f
  9887  1784  3EFF               	addlw	-1
  9888  1785  1D03               	skipz
  9889  1786  2F81               	goto	u4055
  9890                           	line	18
  9891  1787  0827               	movf	(___lwdiv@divisor+1),w
  9892  1788  0229               	subwf	(___lwdiv@dividend+1),w
  9893  1789  1D03               	skipz
  9894  178A  2F8D               	goto	u4065
  9895  178B  0826               	movf	(___lwdiv@divisor),w
  9896  178C  0228               	subwf	(___lwdiv@dividend),w
  9897  178D                     u4065:
  9898  178D  1C03               	skipc
  9899  178E  2F90               	goto	u4061
  9900  178F  2F91               	goto	u4060
  9901  1790                     u4061:
  9902  1790  2F99               	goto	l10592
  9903  1791                     u4060:
  9904                           	line	19
  9905                           	
  9906  1791                     l10588:	
  9907  1791  0826               	movf	(___lwdiv@divisor),w
  9908  1792  02A8               	subwf	(___lwdiv@dividend),f
  9909  1793  0827               	movf	(___lwdiv@divisor+1),w
  9910  1794  1C03               	skipc
  9911  1795  03A9               	decf	(___lwdiv@dividend+1),f
  9912  1796  02A9               	subwf	(___lwdiv@dividend+1),f
  9913                           	line	20
  9914                           	
  9915  1797                     l10590:	
  9916  1797  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  9917  1798  2F99               	goto	l10592
  9918                           	line	21
  9919                           	
  9920  1799                     l7495:	
  9921                           	line	22
  9922                           	
  9923  1799                     l10592:	
  9924  1799  3001               	movlw	01h
  9925                           	
  9926  179A                     u4075:
  9927  179A  1003               	clrc
  9928  179B  0CA7               	rrf	(___lwdiv@divisor+1),f
  9929  179C  0CA6               	rrf	(___lwdiv@divisor),f
  9930  179D  3EFF               	addlw	-1
  9931  179E  1D03               	skipz
  9932  179F  2F9A               	goto	u4075
  9933                           	line	23
  9934                           	
  9935  17A0                     l10594:	
  9936  17A0  3001               	movlw	low(01h)
  9937  17A1  02AD               	subwf	(___lwdiv@counter),f
  9938  17A2  1D03               	btfss	status,2
  9939  17A3  2FA5               	goto	u4081
  9940  17A4  2FA6               	goto	u4080
  9941  17A5                     u4081:
  9942  17A5  2F80               	goto	l10586
  9943  17A6                     u4080:
  9944  17A6  2FA8               	goto	l10596
  9945                           	
  9946  17A7                     l7496:	
  9947  17A7  2FA8               	goto	l10596
  9948                           	line	24
  9949                           	
  9950  17A8                     l7490:	
  9951                           	line	25
  9952                           	
  9953  17A8                     l10596:	
  9954  17A8  082C               	movf	(___lwdiv@quotient+1),w
  9955  17A9  01A7               	clrf	(?___lwdiv+1)
  9956  17AA  07A7               	addwf	(?___lwdiv+1)
  9957  17AB  082B               	movf	(___lwdiv@quotient),w
  9958  17AC  01A6               	clrf	(?___lwdiv)
  9959  17AD  07A6               	addwf	(?___lwdiv)
  9960                           
  9961  17AE  2FAF               	goto	l7497
  9962                           	
  9963  17AF                     l10598:	
  9964                           	line	26
  9965                           	
  9966  17AF                     l7497:	
  9967  17AF  0008               	return
  9968                           	opt stack 0
  9969                           GLOBAL	__end_of___lwdiv
  9970  17B0                     	__end_of___lwdiv:
  9971 ;; =============== function ___lwdiv ends ============
  9972                           
  9973                           	signat	___lwdiv,8314
  9974                           	global	___wmul
  9975                           psect	text1104,local,class=CODE,delta=2
  9976                           global __ptext1104
  9977  14B7                     __ptext1104:
  9978                           
  9979 ;; *************** function ___wmul *****************
  9980 ;; Defined at:
  9981 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9984 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;  product         2    4[BANK0 ] unsigned int 
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  2    0[BANK0 ] unsigned int 
  9989 ;; Registers used:
  9990 ;;		wreg, status,2, status,0
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9996 ;;      Params:         0       4       0       0       0
  9997 ;;      Locals:         0       2       0       0       0
  9998 ;;      Temps:          0       0       0       0       0
  9999 ;;      Totals:         0       6       0       0       0
 10000 ;;Total ram usage:        6 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; Hardware stack levels required when called:    3
 10003 ;; This function calls:
 10004 ;;		Nothing
 10005 ;; This function is called by:
 10006 ;;		_ADCconvert
 10007 ;;		_abs
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           psect	text1104
 10011                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10012                           	line	3
 10013                           	global	__size_of___wmul
 10014  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 10015                           	
 10016  14B7                     ___wmul:	
 10017                           	opt	stack 2
 10018                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10019                           	line	4
 10020                           	
 10021  14B7                     l10562:	
 10022  14B7  1283               	bcf	status, 5	;RP0=0, select bank0
 10023  14B8  1303               	bcf	status, 6	;RP1=0, select bank0
 10024  14B9  01A4               	clrf	(___wmul@product)
 10025  14BA  01A5               	clrf	(___wmul@product+1)
 10026  14BB  2CBC               	goto	l10564
 10027                           	line	6
 10028                           	
 10029  14BC                     l7484:	
 10030                           	line	7
 10031                           	
 10032  14BC                     l10564:	
 10033  14BC  1C20               	btfss	(___wmul@multiplier),(0)&7
 10034  14BD  2CBF               	goto	u3981
 10035  14BE  2CC0               	goto	u3980
 10036  14BF                     u3981:
 10037  14BF  2CC6               	goto	l7485
 10038  14C0                     u3980:
 10039                           	line	8
 10040                           	
 10041  14C0                     l10566:	
 10042  14C0  0822               	movf	(___wmul@multiplicand),w
 10043  14C1  07A4               	addwf	(___wmul@product),f
 10044  14C2  1803               	skipnc
 10045  14C3  0AA5               	incf	(___wmul@product+1),f
 10046  14C4  0823               	movf	(___wmul@multiplicand+1),w
 10047  14C5  07A5               	addwf	(___wmul@product+1),f
 10048                           	
 10049  14C6                     l7485:	
 10050                           	line	9
 10051  14C6  3001               	movlw	01h
 10052                           	
 10053  14C7                     u3995:
 10054  14C7  1003               	clrc
 10055  14C8  0DA2               	rlf	(___wmul@multiplicand),f
 10056  14C9  0DA3               	rlf	(___wmul@multiplicand+1),f
 10057  14CA  3EFF               	addlw	-1
 10058  14CB  1D03               	skipz
 10059  14CC  2CC7               	goto	u3995
 10060                           	line	10
 10061                           	
 10062  14CD                     l10568:	
 10063  14CD  3001               	movlw	01h
 10064                           	
 10065  14CE                     u4005:
 10066  14CE  1003               	clrc
 10067  14CF  0CA1               	rrf	(___wmul@multiplier+1),f
 10068  14D0  0CA0               	rrf	(___wmul@multiplier),f
 10069  14D1  3EFF               	addlw	-1
 10070  14D2  1D03               	skipz
 10071  14D3  2CCE               	goto	u4005
 10072                           	line	11
 10073  14D4  0821               	movf	((___wmul@multiplier+1)),w
 10074  14D5  0420               	iorwf	((___wmul@multiplier)),w
 10075  14D6  1D03               	skipz
 10076  14D7  2CD9               	goto	u4011
 10077  14D8  2CDA               	goto	u4010
 10078  14D9                     u4011:
 10079  14D9  2CBC               	goto	l10564
 10080  14DA                     u4010:
 10081  14DA  2CDB               	goto	l10570
 10082                           	
 10083  14DB                     l7486:	
 10084                           	line	12
 10085                           	
 10086  14DB                     l10570:	
 10087  14DB  0825               	movf	(___wmul@product+1),w
 10088  14DC  01A1               	clrf	(?___wmul+1)
 10089  14DD  07A1               	addwf	(?___wmul+1)
 10090  14DE  0824               	movf	(___wmul@product),w
 10091  14DF  01A0               	clrf	(?___wmul)
 10092  14E0  07A0               	addwf	(?___wmul)
 10093                           
 10094  14E1  2CE2               	goto	l7487
 10095                           	
 10096  14E2                     l10572:	
 10097                           	line	13
 10098                           	
 10099  14E2                     l7487:	
 10100  14E2  0008               	return
 10101                           	opt stack 0
 10102                           GLOBAL	__end_of___wmul
 10103  14E3                     	__end_of___wmul:
 10104 ;; =============== function ___wmul ends ============
 10105                           
 10106                           	signat	___wmul,8314
 10107                           	global	_ser_isrx
 10108                           psect	text1105,local,class=CODE,delta=2
 10109                           global __ptext1105
 10110  140A                     __ptext1105:
 10111                           
 10112 ;; *************** function _ser_isrx *****************
 10113 ;; Defined at:
 10114 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;		None
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;		None
 10119 ;; Return value:  Size  Location     Type
 10120 ;;		None               void
 10121 ;; Registers used:
 10122 ;;		wreg, status,2, status,0
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10128 ;;      Params:         0       0       0       0       0
 10129 ;;      Locals:         0       0       0       0       0
 10130 ;;      Temps:          0       0       0       0       0
 10131 ;;      Totals:         0       0       0       0       0
 10132 ;;Total ram usage:        0 bytes
 10133 ;; Hardware stack levels used:    1
 10134 ;; Hardware stack levels required when called:    3
 10135 ;; This function calls:
 10136 ;;		Nothing
 10137 ;; This function is called by:
 10138 ;;		_ser_getch
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           psect	text1105
 10142                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 10143                           	line	45
 10144                           	global	__size_of_ser_isrx
 10145  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 10146                           	
 10147  140A                     _ser_isrx:	
 10148                           	opt	stack 1
 10149                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 10150                           	line	46
 10151                           	
 10152  140A                     l10514:	
 10153                           ;ser.c: 46: if(OERR) {
 10154  140A  1283               	bcf	status, 5	;RP0=0, select bank0
 10155  140B  1303               	bcf	status, 6	;RP1=0, select bank0
 10156  140C  1C98               	btfss	(193/8),(193)&7
 10157  140D  2C0F               	goto	u3911
 10158  140E  2C10               	goto	u3910
 10159  140F                     u3911:
 10160  140F  2C15               	goto	l10522
 10161  1410                     u3910:
 10162                           	line	47
 10163                           	
 10164  1410                     l10516:	
 10165                           ;ser.c: 47: CREN = 0;
 10166  1410  1218               	bcf	(196/8),(196)&7
 10167                           	line	48
 10168                           ;ser.c: 48: CREN = 1;
 10169  1411  1618               	bsf	(196/8),(196)&7
 10170                           	line	49
 10171                           	
 10172  1412                     l10518:	
 10173                           ;ser.c: 49: return 0;
 10174  1412  1003               	clrc
 10175                           	
 10176  1413  2C22               	goto	l6739
 10177                           	
 10178  1414                     l10520:	
 10179  1414  2C22               	goto	l6739
 10180                           	line	50
 10181                           	
 10182  1415                     l6738:	
 10183                           	line	51
 10184                           	
 10185  1415                     l10522:	
 10186                           ;ser.c: 50: }
 10187                           ;ser.c: 51: return (rxiptr!=rxoptr);
 10188  1415  1683               	bsf	status, 5	;RP0=1, select bank1
 10189  1416  1303               	bcf	status, 6	;RP1=0, select bank1
 10190  1417  0854               	movf	(_rxiptr)^080h,w	;volatile
 10191  1418  0655               	xorwf	(_rxoptr)^080h,w	;volatile
 10192  1419  1D03               	skipz
 10193  141A  2C1C               	goto	u3921
 10194  141B  2C1D               	goto	u3920
 10195  141C                     u3921:
 10196  141C  2C1F               	goto	l10526
 10197  141D                     u3920:
 10198                           	
 10199  141D                     l10524:	
 10200  141D  1003               	clrc
 10201                           	
 10202  141E  2C22               	goto	l6739
 10203                           	
 10204  141F                     l10272:	
 10205                           	
 10206  141F                     l10526:	
 10207  141F  1403               	setc
 10208                           	
 10209  1420  2C22               	goto	l6739
 10210                           	
 10211  1421                     l10274:	
 10212  1421  2C22               	goto	l6739
 10213                           	
 10214  1422                     l10528:	
 10215                           	line	52
 10216                           	
 10217  1422                     l6739:	
 10218  1422  0008               	return
 10219                           	opt stack 0
 10220                           GLOBAL	__end_of_ser_isrx
 10221  1423                     	__end_of_ser_isrx:
 10222 ;; =============== function _ser_isrx ends ============
 10223                           
 10224                           	signat	_ser_isrx,88
 10225                           	global	_spi_transfer
 10226                           psect	text1106,local,class=CODE,delta=2
 10227                           global __ptext1106
 10228  13B6                     __ptext1106:
 10229                           
 10230 ;; *************** function _spi_transfer *****************
 10231 ;; Defined at:
 10232 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;  data            1    wreg     unsigned char 
 10235 ;; Auto vars:     Size  Location     Type
 10236 ;;  data            1    2[BANK0 ] unsigned char 
 10237 ;;  temp            1    1[BANK0 ] unsigned char 
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  1    wreg      unsigned char 
 10240 ;; Registers used:
 10241 ;;		wreg
 10242 ;; Tracked objects:
 10243 ;;		On entry : 0/0
 10244 ;;		On exit  : 0/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10247 ;;      Params:         0       0       0       0       0
 10248 ;;      Locals:         0       2       0       0       0
 10249 ;;      Temps:          0       1       0       0       0
 10250 ;;      Totals:         0       3       0       0       0
 10251 ;;Total ram usage:        3 bytes
 10252 ;; Hardware stack levels used:    1
 10253 ;; Hardware stack levels required when called:    3
 10254 ;; This function calls:
 10255 ;;		Nothing
 10256 ;; This function is called by:
 10257 ;;		_rotate
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           psect	text1106
 10261                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 10262                           	line	50
 10263                           	global	__size_of_spi_transfer
 10264  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 10265                           	
 10266  13B6                     _spi_transfer:	
 10267                           	opt	stack 3
 10268                           ; Regs used in _spi_transfer: [wreg]
 10269                           ;spi_transfer@data stored from wreg
 10270  13B6  1283               	bcf	status, 5	;RP0=0, select bank0
 10271  13B7  1303               	bcf	status, 6	;RP1=0, select bank0
 10272  13B8  00A2               	movwf	(spi_transfer@data)
 10273                           	line	51
 10274                           	
 10275  13B9                     l10462:	
 10276                           ;steppermotor.c: 51: unsigned char temp = 0;
 10277  13B9  01A1               	clrf	(spi_transfer@temp)
 10278                           	line	53
 10279                           ;steppermotor.c: 53: SSPIF = 0;
 10280  13BA  118C               	bcf	(99/8),(99)&7
 10281                           	line	54
 10282                           	
 10283  13BB                     l10464:	
 10284                           ;steppermotor.c: 54: SSPBUF = data;
 10285  13BB  0822               	movf	(spi_transfer@data),w
 10286  13BC  0093               	movwf	(19)	;volatile
 10287                           	line	56
 10288                           ;steppermotor.c: 56: while (SSPIF == 0);
 10289  13BD  2BBE               	goto	l3709
 10290                           	
 10291  13BE                     l3710:	
 10292                           	
 10293  13BE                     l3709:	
 10294  13BE  1D8C               	btfss	(99/8),(99)&7
 10295  13BF  2BC1               	goto	u3751
 10296  13C0  2BC2               	goto	u3750
 10297  13C1                     u3751:
 10298  13C1  2BBE               	goto	l3709
 10299  13C2                     u3750:
 10300  13C2  2BC3               	goto	l10466
 10301                           	
 10302  13C3                     l3711:	
 10303                           	line	57
 10304                           	
 10305  13C3                     l10466:	
 10306                           ;steppermotor.c: 57: temp = SSPBUF;
 10307  13C3  0813               	movf	(19),w	;volatile
 10308  13C4  00A0               	movwf	(??_spi_transfer+0)+0
 10309  13C5  0820               	movf	(??_spi_transfer+0)+0,w
 10310  13C6  00A1               	movwf	(spi_transfer@temp)
 10311                           	line	58
 10312                           	
 10313  13C7                     l10468:	
 10314                           ;steppermotor.c: 58: SSPIF = 0;
 10315  13C7  118C               	bcf	(99/8),(99)&7
 10316  13C8  2BC9               	goto	l3712
 10317                           	line	60
 10318                           	
 10319  13C9                     l10470:	
 10320                           	line	61
 10321                           ;steppermotor.c: 60: return temp;
 10322                           ;	Return value of _spi_transfer is never used
 10323                           	
 10324  13C9                     l3712:	
 10325  13C9  0008               	return
 10326                           	opt stack 0
 10327                           GLOBAL	__end_of_spi_transfer
 10328  13CA                     	__end_of_spi_transfer:
 10329 ;; =============== function _spi_transfer ends ============
 10330                           
 10331                           	signat	_spi_transfer,4217
 10332                           	global	_ser_putch
 10333                           psect	text1107,local,class=CODE,delta=2
 10334                           global __ptext1107
 10335  1567                     __ptext1107:
 10336                           
 10337 ;; *************** function _ser_putch *****************
 10338 ;; Defined at:
 10339 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;  c               1    wreg     unsigned char 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  c               1    1[BANK0 ] unsigned char 
 10344 ;; Return value:  Size  Location     Type
 10345 ;;		None               void
 10346 ;; Registers used:
 10347 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10353 ;;      Params:         0       0       0       0       0
 10354 ;;      Locals:         0       1       0       0       0
 10355 ;;      Temps:          0       1       0       0       0
 10356 ;;      Totals:         0       2       0       0       0
 10357 ;;Total ram usage:        2 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; Hardware stack levels required when called:    3
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_ChargeMode
 10364 ;;		_robo_init
 10365 ;;		_robot_read
 10366 ;;		_RobotDrive
 10367 ;;		_robotTurn
 10368 ;;		_ser_puts
 10369 ;;		_ser_puts2
 10370 ;;		_ser_puthex
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           psect	text1107
 10374                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 10375                           	line	70
 10376                           	global	__size_of_ser_putch
 10377  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 10378                           	
 10379  1567                     _ser_putch:	
 10380                           	opt	stack 3
 10381                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 10382                           ;ser_putch@c stored from wreg
 10383  1567  1283               	bcf	status, 5	;RP0=0, select bank0
 10384  1568  1303               	bcf	status, 6	;RP1=0, select bank0
 10385  1569  00A1               	movwf	(ser_putch@c)
 10386                           	line	71
 10387                           	
 10388  156A                     l10450:	
 10389                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 10390  156A  2D6C               	goto	l10452
 10391                           	
 10392  156B                     l6749:	
 10393                           	line	72
 10394                           ;ser.c: 72: continue;
 10395  156B  2D6C               	goto	l10452
 10396                           	
 10397  156C                     l6748:	
 10398                           	line	71
 10399                           	
 10400  156C                     l10452:	
 10401  156C  1683               	bsf	status, 5	;RP0=1, select bank1
 10402  156D  1303               	bcf	status, 6	;RP1=0, select bank1
 10403  156E  0859               	movf	(_txiptr)^080h,w	;volatile
 10404  156F  3E01               	addlw	01h
 10405  1570  390F               	andlw	0Fh
 10406  1571  065A               	xorwf	(_txoptr)^080h,w	;volatile
 10407  1572  1903               	skipnz
 10408  1573  2D75               	goto	u3741
 10409  1574  2D76               	goto	u3740
 10410  1575                     u3741:
 10411  1575  2D6C               	goto	l10452
 10412  1576                     u3740:
 10413                           	
 10414  1576                     l6750:	
 10415                           	line	73
 10416                           ;ser.c: 73: GIE=0;
 10417  1576  138B               	bcf	(95/8),(95)&7
 10418                           	line	74
 10419                           	
 10420  1577                     l10454:	
 10421                           ;ser.c: 74: txfifo[txiptr] = c;
 10422  1577  1283               	bcf	status, 5	;RP0=0, select bank0
 10423  1578  1303               	bcf	status, 6	;RP1=0, select bank0
 10424  1579  0821               	movf	(ser_putch@c),w
 10425  157A  00A0               	movwf	(??_ser_putch+0)+0
 10426  157B  1683               	bsf	status, 5	;RP0=1, select bank1
 10427  157C  1303               	bcf	status, 6	;RP1=0, select bank1
 10428  157D  0859               	movf	(_txiptr)^080h,w
 10429  157E  3EA0               	addlw	_txfifo&0ffh
 10430  157F  0084               	movwf	fsr0
 10431  1580  1283               	bcf	status, 5	;RP0=0, select bank0
 10432  1581  1303               	bcf	status, 6	;RP1=0, select bank0
 10433  1582  0820               	movf	(??_ser_putch+0)+0,w
 10434  1583  1783               	bsf	status, 7	;select IRP bank3
 10435  1584  0080               	movwf	indf
 10436                           	line	75
 10437                           	
 10438  1585                     l10456:	
 10439                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 10440  1585  1683               	bsf	status, 5	;RP0=1, select bank1
 10441  1586  1303               	bcf	status, 6	;RP1=0, select bank1
 10442  1587  0859               	movf	(_txiptr)^080h,w	;volatile
 10443  1588  3E01               	addlw	01h
 10444  1589  390F               	andlw	0Fh
 10445  158A  1283               	bcf	status, 5	;RP0=0, select bank0
 10446  158B  1303               	bcf	status, 6	;RP1=0, select bank0
 10447  158C  00A0               	movwf	(??_ser_putch+0)+0
 10448  158D  0820               	movf	(??_ser_putch+0)+0,w
 10449  158E  1683               	bsf	status, 5	;RP0=1, select bank1
 10450  158F  1303               	bcf	status, 6	;RP1=0, select bank1
 10451  1590  00D9               	movwf	(_txiptr)^080h	;volatile
 10452                           	line	76
 10453                           	
 10454  1591                     l10458:	
 10455                           ;ser.c: 76: TXIE=1;
 10456  1591  160C               	bsf	(1124/8)^080h,(1124)&7
 10457                           	line	77
 10458                           	
 10459  1592                     l10460:	
 10460                           ;ser.c: 77: GIE=1;
 10461  1592  178B               	bsf	(95/8),(95)&7
 10462                           	line	78
 10463                           	
 10464  1593                     l6751:	
 10465  1593  0008               	return
 10466                           	opt stack 0
 10467                           GLOBAL	__end_of_ser_putch
 10468  1594                     	__end_of_ser_putch:
 10469 ;; =============== function _ser_putch ends ============
 10470                           
 10471                           	signat	_ser_putch,4216
 10472                           	global	_Menu
 10473                           psect	text1108,local,class=CODE,delta=2
 10474                           global __ptext1108
 10475  0802                     __ptext1108:
 10476                           
 10477 ;; *************** function _Menu *****************
 10478 ;; Defined at:
 10479 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  BTN_input       1    wreg     unsigned char 
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1    wreg      unsigned char 
 10486 ;; Registers used:
 10487 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10493 ;;      Params:         0       0       0       0       0
 10494 ;;      Locals:         0       1       0       0       0
 10495 ;;      Temps:          0       0       0       0       0
 10496 ;;      Totals:         0       1       0       0       0
 10497 ;;Total ram usage:        1 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    3
 10500 ;; This function calls:
 10501 ;;		Nothing
 10502 ;; This function is called by:
 10503 ;;		_main
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           psect	text1108
 10507                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10508                           	line	201
 10509                           	global	__size_of_Menu
 10510  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 10511                           	
 10512  0802                     _Menu:	
 10513                           	opt	stack 4
 10514                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 10515                           ;Menu@BTN_input stored from wreg
 10516  0802  1283               	bcf	status, 5	;RP0=0, select bank0
 10517  0803  1303               	bcf	status, 6	;RP1=0, select bank0
 10518  0804  00A0               	movwf	(Menu@BTN_input)
 10519                           	line	202
 10520                           	
 10521  0805                     l10426:	
 10522                           ;HMI.c: 202: switch (BTN_input)
 10523  0805  2834               	goto	l10444
 10524                           	line	204
 10525                           ;HMI.c: 203: {
 10526                           ;HMI.c: 204: case 1:
 10527                           	
 10528  0806                     l4514:	
 10529                           	line	206
 10530                           ;HMI.c: 206: break;
 10531  0806  2846               	goto	l10446
 10532                           	line	207
 10533                           ;HMI.c: 207: case 2:
 10534                           	
 10535  0807                     l4516:	
 10536                           	line	209
 10537                           ;HMI.c: 209: break;
 10538  0807  2846               	goto	l10446
 10539                           	line	210
 10540                           ;HMI.c: 210: case 3:
 10541                           	
 10542  0808                     l4517:	
 10543                           	line	211
 10544                           	
 10545  0808                     l10428:	
 10546                           ;HMI.c: 211: pos--;
 10547  0808  30FF               	movlw	low(-1)
 10548  0809  1683               	bsf	status, 5	;RP0=1, select bank1
 10549  080A  1303               	bcf	status, 6	;RP1=0, select bank1
 10550  080B  07C0               	addwf	(_pos)^080h,f
 10551  080C  1803               	skipnc
 10552  080D  0AC1               	incf	(_pos+1)^080h,f
 10553  080E  30FF               	movlw	high(-1)
 10554  080F  07C1               	addwf	(_pos+1)^080h,f
 10555                           	line	212
 10556                           	
 10557  0810                     l10430:	
 10558                           ;HMI.c: 212: if (pos < 0)
 10559  0810  1FC1               	btfss	(_pos+1)^080h,7
 10560  0811  2813               	goto	u3721
 10561  0812  2814               	goto	u3720
 10562  0813                     u3721:
 10563  0813  2846               	goto	l10446
 10564  0814                     u3720:
 10565                           	line	213
 10566                           	
 10567  0814                     l10432:	
 10568                           ;HMI.c: 213: pos = 6 - 1;
 10569  0814  3005               	movlw	low(05h)
 10570  0815  00C0               	movwf	(_pos)^080h
 10571  0816  3000               	movlw	high(05h)
 10572  0817  00C1               	movwf	((_pos)^080h)+1
 10573  0818  2846               	goto	l10446
 10574                           	
 10575  0819                     l4518:	
 10576                           	line	215
 10577                           ;HMI.c: 215: break;
 10578  0819  2846               	goto	l10446
 10579                           	line	216
 10580                           ;HMI.c: 216: case 4:
 10581                           	
 10582  081A                     l4519:	
 10583                           	line	217
 10584                           	
 10585  081A                     l10434:	
 10586                           ;HMI.c: 217: pos++;
 10587  081A  3001               	movlw	low(01h)
 10588  081B  1683               	bsf	status, 5	;RP0=1, select bank1
 10589  081C  1303               	bcf	status, 6	;RP1=0, select bank1
 10590  081D  07C0               	addwf	(_pos)^080h,f
 10591  081E  1803               	skipnc
 10592  081F  0AC1               	incf	(_pos+1)^080h,f
 10593  0820  3000               	movlw	high(01h)
 10594  0821  07C1               	addwf	(_pos+1)^080h,f
 10595                           	line	218
 10596                           ;HMI.c: 218: if (pos == 6)
 10597  0822  3006               	movlw	06h
 10598  0823  0640               	xorwf	(_pos)^080h,w
 10599  0824  0441               	iorwf	(_pos+1)^080h,w
 10600  0825  1D03               	skipz
 10601  0826  2828               	goto	u3731
 10602  0827  2829               	goto	u3730
 10603  0828                     u3731:
 10604  0828  2846               	goto	l10446
 10605  0829                     u3730:
 10606                           	line	219
 10607                           	
 10608  0829                     l10436:	
 10609                           ;HMI.c: 219: pos = 0;
 10610  0829  01C0               	clrf	(_pos)^080h
 10611  082A  01C1               	clrf	(_pos+1)^080h
 10612  082B  2846               	goto	l10446
 10613                           	
 10614  082C                     l4520:	
 10615                           	line	221
 10616                           ;HMI.c: 221: break;
 10617  082C  2846               	goto	l10446
 10618                           	line	222
 10619                           ;HMI.c: 222: case 5:
 10620                           	
 10621  082D                     l4521:	
 10622                           	line	223
 10623                           	
 10624  082D                     l10438:	
 10625                           ;HMI.c: 223: return pos;
 10626  082D  1683               	bsf	status, 5	;RP0=1, select bank1
 10627  082E  1303               	bcf	status, 6	;RP1=0, select bank1
 10628  082F  0840               	movf	(_pos)^080h,w
 10629  0830  2848               	goto	l4522
 10630                           	
 10631  0831                     l10440:	
 10632  0831  2848               	goto	l4522
 10633                           	line	226
 10634                           ;HMI.c: 226: default:
 10635                           	
 10636  0832                     l4523:	
 10637                           	line	228
 10638                           ;HMI.c: 228: break;
 10639  0832  2846               	goto	l10446
 10640                           	line	229
 10641                           	
 10642  0833                     l10442:	
 10643                           ;HMI.c: 229: }
 10644  0833  2846               	goto	l10446
 10645                           	line	202
 10646                           	
 10647  0834                     l4513:	
 10648                           	
 10649  0834                     l10444:	
 10650  0834  1283               	bcf	status, 5	;RP0=0, select bank0
 10651  0835  0820               	movf	(Menu@BTN_input),w
 10652                           	; Switch size 1, requested type "space"
 10653                           ; Number of cases is 5, Range of values is 1 to 5
 10654                           ; switch strategies available:
 10655                           ; Name         Instructions Cycles
 10656                           ; simple_byte           16     9 (average)
 10657                           ; direct_byte           26    11 (fixed)
 10658                           ; jumptable            263     9 (fixed)
 10659                           ;	Chosen strategy is simple_byte
 10660                           
 10661                           	opt asmopt_off
 10662  0836  3A01               	xorlw	1^0	; case 1
 10663  0837  1903               	skipnz
 10664  0838  2846               	goto	l10446
 10665  0839  3A03               	xorlw	2^1	; case 2
 10666  083A  1903               	skipnz
 10667  083B  2846               	goto	l10446
 10668  083C  3A01               	xorlw	3^2	; case 3
 10669  083D  1903               	skipnz
 10670  083E  2808               	goto	l10428
 10671  083F  3A07               	xorlw	4^3	; case 4
 10672  0840  1903               	skipnz
 10673  0841  281A               	goto	l10434
 10674  0842  3A01               	xorlw	5^4	; case 5
 10675  0843  1903               	skipnz
 10676  0844  282D               	goto	l10438
 10677  0845  2846               	goto	l10446
 10678                           	opt asmopt_on
 10679                           
 10680                           	line	229
 10681                           	
 10682  0846                     l4515:	
 10683                           	line	230
 10684                           	
 10685  0846                     l10446:	
 10686                           ;HMI.c: 230: return 255;
 10687  0846  30FF               	movlw	(0FFh)
 10688  0847  2848               	goto	l4522
 10689                           	
 10690  0848                     l10448:	
 10691                           	line	231
 10692                           	
 10693  0848                     l4522:	
 10694  0848  0008               	return
 10695                           	opt stack 0
 10696                           GLOBAL	__end_of_Menu
 10697  0849                     	__end_of_Menu:
 10698 ;; =============== function _Menu ends ============
 10699                           
 10700                           	signat	_Menu,4217
 10701                           	global	_ser_init
 10702                           psect	text1109,local,class=CODE,delta=2
 10703                           global __ptext1109
 10704  07D6                     __ptext1109:
 10705                           
 10706 ;; *************** function _ser_init *****************
 10707 ;; Defined at:
 10708 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 10709 ;; Parameters:    Size  Location     Type
 10710 ;;		None
 10711 ;; Auto vars:     Size  Location     Type
 10712 ;;		None
 10713 ;; Return value:  Size  Location     Type
 10714 ;;		None               void
 10715 ;; Registers used:
 10716 ;;		wreg, status,2, status,0
 10717 ;; Tracked objects:
 10718 ;;		On entry : 0/0
 10719 ;;		On exit  : 0/0
 10720 ;;		Unchanged: 0/0
 10721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10722 ;;      Params:         0       0       0       0       0
 10723 ;;      Locals:         0       0       0       0       0
 10724 ;;      Temps:          0       1       0       0       0
 10725 ;;      Totals:         0       1       0       0       0
 10726 ;;Total ram usage:        1 bytes
 10727 ;; Hardware stack levels used:    1
 10728 ;; Hardware stack levels required when called:    3
 10729 ;; This function calls:
 10730 ;;		Nothing
 10731 ;; This function is called by:
 10732 ;;		_init
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           psect	text1109
 10736                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 10737                           	line	113
 10738                           	global	__size_of_ser_init
 10739  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 10740                           	
 10741  07D6                     _ser_init:	
 10742                           	opt	stack 3
 10743                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 10744                           	line	114
 10745                           	
 10746  07D6                     l10400:	
 10747                           ;ser.c: 114: TRISC |= 0b10000000;
 10748  07D6  1683               	bsf	status, 5	;RP0=1, select bank1
 10749  07D7  1303               	bcf	status, 6	;RP1=0, select bank1
 10750  07D8  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 10751                           	line	115
 10752                           	
 10753  07D9                     l10402:	
 10754                           ;ser.c: 115: TRISC &= 0b10111111;
 10755  07D9  30BF               	movlw	(0BFh)
 10756  07DA  1283               	bcf	status, 5	;RP0=0, select bank0
 10757  07DB  1303               	bcf	status, 6	;RP1=0, select bank0
 10758  07DC  00A0               	movwf	(??_ser_init+0)+0
 10759  07DD  0820               	movf	(??_ser_init+0)+0,w
 10760  07DE  1683               	bsf	status, 5	;RP0=1, select bank1
 10761  07DF  1303               	bcf	status, 6	;RP1=0, select bank1
 10762  07E0  0587               	andwf	(135)^080h,f	;volatile
 10763                           	line	116
 10764                           	
 10765  07E1                     l10404:	
 10766                           ;ser.c: 116: BRGH=1;
 10767  07E1  1518               	bsf	(1218/8)^080h,(1218)&7
 10768                           	line	118
 10769                           	
 10770  07E2                     l10406:	
 10771                           ;ser.c: 118: SPBRG=20;
 10772  07E2  3014               	movlw	(014h)
 10773  07E3  0099               	movwf	(153)^080h	;volatile
 10774                           	line	121
 10775                           	
 10776  07E4                     l10408:	
 10777                           ;ser.c: 121: TX9=0;
 10778  07E4  1318               	bcf	(1222/8)^080h,(1222)&7
 10779                           	line	122
 10780                           	
 10781  07E5                     l10410:	
 10782                           ;ser.c: 122: RX9=0;
 10783  07E5  1283               	bcf	status, 5	;RP0=0, select bank0
 10784  07E6  1303               	bcf	status, 6	;RP1=0, select bank0
 10785  07E7  1318               	bcf	(198/8),(198)&7
 10786                           	line	124
 10787                           	
 10788  07E8                     l10412:	
 10789                           ;ser.c: 124: SYNC=0;
 10790  07E8  1683               	bsf	status, 5	;RP0=1, select bank1
 10791  07E9  1303               	bcf	status, 6	;RP1=0, select bank1
 10792  07EA  1218               	bcf	(1220/8)^080h,(1220)&7
 10793                           	line	125
 10794                           	
 10795  07EB                     l10414:	
 10796                           ;ser.c: 125: SPEN=1;
 10797  07EB  1283               	bcf	status, 5	;RP0=0, select bank0
 10798  07EC  1303               	bcf	status, 6	;RP1=0, select bank0
 10799  07ED  1798               	bsf	(199/8),(199)&7
 10800                           	line	126
 10801                           	
 10802  07EE                     l10416:	
 10803                           ;ser.c: 126: CREN=1;
 10804  07EE  1618               	bsf	(196/8),(196)&7
 10805                           	line	127
 10806                           	
 10807  07EF                     l10418:	
 10808                           ;ser.c: 127: TXIE=0;
 10809  07EF  1683               	bsf	status, 5	;RP0=1, select bank1
 10810  07F0  1303               	bcf	status, 6	;RP1=0, select bank1
 10811  07F1  120C               	bcf	(1124/8)^080h,(1124)&7
 10812                           	line	128
 10813                           	
 10814  07F2                     l10420:	
 10815                           ;ser.c: 128: RCIE=1;
 10816  07F2  168C               	bsf	(1125/8)^080h,(1125)&7
 10817                           	line	129
 10818                           	
 10819  07F3                     l10422:	
 10820                           ;ser.c: 129: TXEN=1;
 10821  07F3  1698               	bsf	(1221/8)^080h,(1221)&7
 10822                           	line	132
 10823                           	
 10824  07F4                     l10424:	
 10825                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 10826  07F4  3000               	movlw	(0)
 10827  07F5  00DA               	movwf	(_txoptr)^080h	;volatile
 10828  07F6  00D9               	movwf	(_txiptr)^080h	;volatile
 10829  07F7  00D5               	movwf	(_rxoptr)^080h	;volatile
 10830  07F8  1283               	bcf	status, 5	;RP0=0, select bank0
 10831  07F9  1303               	bcf	status, 6	;RP1=0, select bank0
 10832  07FA  00A0               	movwf	(??_ser_init+0)+0
 10833  07FB  0820               	movf	(??_ser_init+0)+0,w
 10834  07FC  1683               	bsf	status, 5	;RP0=1, select bank1
 10835  07FD  1303               	bcf	status, 6	;RP1=0, select bank1
 10836  07FE  00D4               	movwf	(_rxiptr)^080h	;volatile
 10837                           	line	133
 10838                           	
 10839  07FF                     l6773:	
 10840  07FF  0008               	return
 10841                           	opt stack 0
 10842                           GLOBAL	__end_of_ser_init
 10843  0800                     	__end_of_ser_init:
 10844 ;; =============== function _ser_init ends ============
 10845                           
 10846                           	signat	_ser_init,88
 10847                           	global	_adc_read
 10848                           psect	text1110,local,class=CODE,delta=2
 10849                           global __ptext1110
 10850  1463                     __ptext1110:
 10851                           
 10852 ;; *************** function _adc_read *****************
 10853 ;; Defined at:
 10854 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10855 ;; Parameters:    Size  Location     Type
 10856 ;;		None
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  2    0[BANK0 ] unsigned int 
 10861 ;; Registers used:
 10862 ;;		wreg, status,2, status,0
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10868 ;;      Params:         0       2       0       0       0
 10869 ;;      Locals:         0       2       0       0       0
 10870 ;;      Temps:          0       2       0       0       0
 10871 ;;      Totals:         0       6       0       0       0
 10872 ;;Total ram usage:        6 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; Hardware stack levels required when called:    3
 10875 ;; This function calls:
 10876 ;;		Nothing
 10877 ;; This function is called by:
 10878 ;;		_adc_read_channel
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           psect	text1110
 10882                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10883                           	line	76
 10884                           	global	__size_of_adc_read
 10885  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 10886                           	
 10887  1463                     _adc_read:	
 10888                           	opt	stack 0
 10889                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 10890                           	line	79
 10891                           	
 10892  1463                     l10280:	
 10893                           ;adc.c: 77: volatile unsigned int adc_value;
 10894                           ;adc.c: 79: ADRESH = 0;
 10895  1463  1283               	bcf	status, 5	;RP0=0, select bank0
 10896  1464  1303               	bcf	status, 6	;RP1=0, select bank0
 10897  1465  019E               	clrf	(30)	;volatile
 10898                           	line	81
 10899                           	
 10900  1466                     l10282:	
 10901                           ;adc.c: 81: GO = 1;
 10902  1466  151F               	bsf	(250/8),(250)&7
 10903                           	line	82
 10904                           ;adc.c: 82: while(GO) continue;
 10905  1467  2C68               	goto	l703
 10906                           	
 10907  1468                     l704:	
 10908                           	
 10909  1468                     l703:	
 10910  1468  191F               	btfsc	(250/8),(250)&7
 10911  1469  2C6B               	goto	u3531
 10912  146A  2C6C               	goto	u3530
 10913  146B                     u3531:
 10914  146B  2C68               	goto	l703
 10915  146C                     u3530:
 10916                           	
 10917  146C                     l705:	
 10918                           	line	83
 10919                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10920  146C  0000               nop ;#
 10921                           	line	84
 10922                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10923  146D  0000               nop ;#
 10924                           	line	85
 10925                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10926  146E  0000               nop ;#
 10927                           psect	text1110
 10928                           	line	88
 10929                           	
 10930  146F                     l10284:	
 10931                           ;adc.c: 88: adc_value = ADRESH;
 10932  146F  1283               	bcf	status, 5	;RP0=0, select bank0
 10933  1470  1303               	bcf	status, 6	;RP1=0, select bank0
 10934  1471  081E               	movf	(30),w	;volatile
 10935  1472  00A2               	movwf	(??_adc_read+0)+0
 10936  1473  01A3               	clrf	(??_adc_read+0)+0+1
 10937  1474  0822               	movf	0+(??_adc_read+0)+0,w
 10938  1475  00A4               	movwf	(adc_read@adc_value)	;volatile
 10939  1476  0823               	movf	1+(??_adc_read+0)+0,w
 10940  1477  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 10941                           	line	89
 10942                           ;adc.c: 89: adc_value <<= 1;
 10943  1478  3001               	movlw	01h
 10944                           	
 10945  1479                     u3545:
 10946  1479  1003               	clrc
 10947  147A  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 10948  147B  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 10949  147C  3EFF               	addlw	-1
 10950  147D  1D03               	skipz
 10951  147E  2C79               	goto	u3545
 10952                           	line	90
 10953                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 10954  147F  1683               	bsf	status, 5	;RP0=1, select bank1
 10955  1480  1303               	bcf	status, 6	;RP1=0, select bank1
 10956  1481  081E               	movf	(158)^080h,w	;volatile
 10957                           	line	93
 10958                           	
 10959  1482                     l10286:	
 10960                           ;adc.c: 93: return (adc_value);
 10961  1482  1283               	bcf	status, 5	;RP0=0, select bank0
 10962  1483  1303               	bcf	status, 6	;RP1=0, select bank0
 10963  1484  0825               	movf	(adc_read@adc_value+1),w	;volatile
 10964  1485  01A1               	clrf	(?_adc_read+1)
 10965  1486  07A1               	addwf	(?_adc_read+1)
 10966  1487  0824               	movf	(adc_read@adc_value),w	;volatile
 10967  1488  01A0               	clrf	(?_adc_read)
 10968  1489  07A0               	addwf	(?_adc_read)
 10969                           
 10970  148A  2C8B               	goto	l706
 10971                           	
 10972  148B                     l10288:	
 10973                           	line	94
 10974                           	
 10975  148B                     l706:	
 10976  148B  0008               	return
 10977                           	opt stack 0
 10978                           GLOBAL	__end_of_adc_read
 10979  148C                     	__end_of_adc_read:
 10980 ;; =============== function _adc_read ends ============
 10981                           
 10982                           	signat	_adc_read,90
 10983                           	global	_isr1
 10984                           psect	text1111,local,class=CODE,delta=2
 10985                           global __ptext1111
 10986  0D6E                     __ptext1111:
 10987                           
 10988 ;; *************** function _isr1 *****************
 10989 ;; Defined at:
 10990 ;;		line 109 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;		None
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;		None
 10995 ;; Return value:  Size  Location     Type
 10996 ;;		None               void
 10997 ;; Registers used:
 10998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11004 ;;      Params:         0       0       0       0       0
 11005 ;;      Locals:         0       0       0       0       0
 11006 ;;      Temps:          5       0       0       0       0
 11007 ;;      Totals:         5       0       0       0       0
 11008 ;;Total ram usage:        5 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; Hardware stack levels required when called:    2
 11011 ;; This function calls:
 11012 ;;		i1___lwmod
 11013 ;;		_ReadButtons
 11014 ;; This function is called by:
 11015 ;;		Interrupt level 1
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           psect	text1111
 11019                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 11020                           	line	109
 11021                           	global	__size_of_isr1
 11022  00A7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 11023                           	
 11024  0D6E                     _isr1:	
 11025                           	opt	stack 0
 11026                           ; Regs used in _isr1: [allreg]
 11027                           psect	intentry,class=CODE,delta=2
 11028                           global __pintentry
 11029  0004                     __pintentry:
 11030                           global interrupt_function
 11031  0004                     interrupt_function:
 11032                           	global saved_w
 11033  007E                     	saved_w	set	btemp+0
 11034  0004  00FE               	movwf	saved_w
 11035  0005  0E03               	swapf	status,w
 11036  0006  00F9               	movwf	(??_isr1+1)
 11037  0007  0804               	movf	fsr0,w
 11038  0008  00FA               	movwf	(??_isr1+2)
 11039  0009  080A               	movf	pclath,w
 11040  000A  00FB               	movwf	(??_isr1+3)
 11041  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 11042  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 11043  000D  087F               	movf	btemp+1,w
 11044  000E  00FC               	movwf	(??_isr1+4)
 11045  000F  120A  158A  2D6E   	ljmp	_isr1
 11046                           psect	text1111
 11047                           	line	110
 11048                           	
 11049  0D6E                     i1l10316:	
 11050                           ;Main.c: 110: if(TMR0IF)
 11051  0D6E  1D0B               	btfss	(90/8),(90)&7
 11052  0D6F  2D71               	goto	u358_21
 11053  0D70  2D72               	goto	u358_20
 11054  0D71                     u358_21:
 11055  0D71  2DC1               	goto	i1l10338
 11056  0D72                     u358_20:
 11057                           	line	112
 11058                           	
 11059  0D72                     i1l10318:	
 11060                           ;Main.c: 111: {
 11061                           ;Main.c: 112: TMR0IF = 0;
 11062  0D72  110B               	bcf	(90/8),(90)&7
 11063                           	line	113
 11064                           	
 11065  0D73                     i1l10320:	
 11066                           ;Main.c: 113: TMR0 = 100;
 11067  0D73  3064               	movlw	(064h)
 11068  0D74  0081               	movwf	(1)	;volatile
 11069                           	line	115
 11070                           ;Main.c: 115: RTC_Counter++;
 11071  0D75  3001               	movlw	low(01h)
 11072  0D76  1683               	bsf	status, 5	;RP0=1, select bank1
 11073  0D77  1303               	bcf	status, 6	;RP1=0, select bank1
 11074  0D78  07B2               	addwf	(_RTC_Counter)^080h,f	;volatile
 11075  0D79  1803               	skipnc
 11076  0D7A  0AB3               	incf	(_RTC_Counter+1)^080h,f	;volatile
 11077  0D7B  3000               	movlw	high(01h)
 11078  0D7C  07B3               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 11079                           	line	118
 11080                           	
 11081  0D7D                     i1l10322:	
 11082                           ;Main.c: 118: RTC_FLAG_1MS = 1;
 11083  0D7D  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 11084                           	line	119
 11085                           	
 11086  0D7E                     i1l10324:	
 11087                           ;Main.c: 119: if(RTC_Counter % 250 == 0)
 11088  0D7E  30FA               	movlw	low(0FAh)
 11089  0D7F  00F2               	movwf	(?i1___lwmod)
 11090  0D80  3000               	movlw	high(0FAh)
 11091  0D81  00F3               	movwf	((?i1___lwmod))+1
 11092  0D82  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11093  0D83  01F5               	clrf	1+(?i1___lwmod)+02h
 11094  0D84  07F5               	addwf	1+(?i1___lwmod)+02h
 11095  0D85  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 11096  0D86  01F4               	clrf	0+(?i1___lwmod)+02h
 11097  0D87  07F4               	addwf	0+(?i1___lwmod)+02h
 11098                           
 11099  0D88  160A  118A  2690   	fcall	i1___lwmod
              120A  158A         
 11100  0D8D  0873               	movf	((1+(?i1___lwmod))),w
 11101  0D8E  0472               	iorwf	((0+(?i1___lwmod))),w
 11102  0D8F  1D03               	skipz
 11103  0D90  2D92               	goto	u359_21
 11104  0D91  2D93               	goto	u359_20
 11105  0D92                     u359_21:
 11106  0D92  2D95               	goto	i1l10328
 11107  0D93                     u359_20:
 11108                           	line	121
 11109                           	
 11110  0D93                     i1l10326:	
 11111                           ;Main.c: 120: {
 11112                           ;Main.c: 121: RTC_FLAG_250MS = 1;
 11113  0D93  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 11114  0D94  2D95               	goto	i1l10328
 11115                           	line	122
 11116                           	
 11117  0D95                     i1l2215:	
 11118                           	line	123
 11119                           	
 11120  0D95                     i1l10328:	
 11121                           ;Main.c: 122: }
 11122                           ;Main.c: 123: if(RTC_Counter % 500 == 0)
 11123  0D95  30F4               	movlw	low(01F4h)
 11124  0D96  00F2               	movwf	(?i1___lwmod)
 11125  0D97  3001               	movlw	high(01F4h)
 11126  0D98  00F3               	movwf	((?i1___lwmod))+1
 11127  0D99  1683               	bsf	status, 5	;RP0=1, select bank1
 11128  0D9A  1303               	bcf	status, 6	;RP1=0, select bank1
 11129  0D9B  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11130  0D9C  01F5               	clrf	1+(?i1___lwmod)+02h
 11131  0D9D  07F5               	addwf	1+(?i1___lwmod)+02h
 11132  0D9E  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 11133  0D9F  01F4               	clrf	0+(?i1___lwmod)+02h
 11134  0DA0  07F4               	addwf	0+(?i1___lwmod)+02h
 11135                           
 11136  0DA1  160A  118A  2690   	fcall	i1___lwmod
              120A  158A         
 11137  0DA6  0873               	movf	((1+(?i1___lwmod))),w
 11138  0DA7  0472               	iorwf	((0+(?i1___lwmod))),w
 11139  0DA8  1D03               	skipz
 11140  0DA9  2DAB               	goto	u360_21
 11141  0DAA  2DAC               	goto	u360_20
 11142  0DAB                     u360_21:
 11143  0DAB  2DB2               	goto	i1l10334
 11144  0DAC                     u360_20:
 11145                           	line	125
 11146                           	
 11147  0DAC                     i1l10330:	
 11148                           ;Main.c: 124: {
 11149                           ;Main.c: 125: RTC_FLAG_500MS = 1;
 11150  0DAC  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 11151                           	line	126
 11152                           	
 11153  0DAD                     i1l10332:	
 11154                           ;Main.c: 126: RB0 ^= 0x01;
 11155  0DAD  1283               	bcf	status, 5	;RP0=0, select bank0
 11156  0DAE  1303               	bcf	status, 6	;RP1=0, select bank0
 11157  0DAF  3001               	movlw	1<<((48)&7)
 11158  0DB0  0686               	xorwf	((48)/8),f
 11159  0DB1  2DB2               	goto	i1l10334
 11160                           	line	127
 11161                           	
 11162  0DB2                     i1l2216:	
 11163                           	line	128
 11164                           	
 11165  0DB2                     i1l10334:	
 11166                           ;Main.c: 127: }
 11167                           ;Main.c: 128: if (buttonPressed == 0)
 11168  0DB2  08FD               	movf	(_buttonPressed),f
 11169  0DB3  1D03               	skipz	;volatile
 11170  0DB4  2DB6               	goto	u361_21
 11171  0DB5  2DB7               	goto	u361_20
 11172  0DB6                     u361_21:
 11173  0DB6  2DC1               	goto	i1l10338
 11174  0DB7                     u361_20:
 11175                           	line	130
 11176                           	
 11177  0DB7                     i1l10336:	
 11178                           ;Main.c: 129: {
 11179                           ;Main.c: 130: buttonPressed = ReadButtons();
 11180  0DB7  160A  118A  25F0   	fcall	_ReadButtons
              120A  158A         
 11181  0DBC  00F8               	movwf	(??_isr1+0)+0
 11182  0DBD  0878               	movf	(??_isr1+0)+0,w
 11183  0DBE  00FD               	movwf	(_buttonPressed)	;volatile
 11184  0DBF  2DC1               	goto	i1l10338
 11185                           	line	131
 11186                           	
 11187  0DC0                     i1l2217:	
 11188  0DC0  2DC1               	goto	i1l10338
 11189                           	line	132
 11190                           	
 11191  0DC1                     i1l2214:	
 11192                           	line	133
 11193                           	
 11194  0DC1                     i1l10338:	
 11195                           ;Main.c: 131: }
 11196                           ;Main.c: 132: }
 11197                           ;Main.c: 133: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 11198  0DC1  1283               	bcf	status, 5	;RP0=0, select bank0
 11199  0DC2  1303               	bcf	status, 6	;RP1=0, select bank0
 11200  0DC3  1E8C               	btfss	(101/8),(101)&7
 11201  0DC4  2DC6               	goto	u362_21
 11202  0DC5  2DC7               	goto	u362_20
 11203  0DC6                     u362_21:
 11204  0DC6  2DE3               	goto	i1l10348
 11205  0DC7                     u362_20:
 11206                           	
 11207  0DC7                     i1l10340:	
 11208  0DC7  081A               	movf	(26),w	;volatile
 11209  0DC8  00F8               	movwf	(??_isr1+0)+0
 11210  0DC9  1683               	bsf	status, 5	;RP0=1, select bank1
 11211  0DCA  1303               	bcf	status, 6	;RP1=0, select bank1
 11212  0DCB  0854               	movf	(_rxiptr)^080h,w
 11213  0DCC  3EA0               	addlw	_rxfifo&0ffh
 11214  0DCD  0084               	movwf	fsr0
 11215  0DCE  0878               	movf	(??_isr1+0)+0,w
 11216  0DCF  1383               	bcf	status, 7	;select IRP bank1
 11217  0DD0  0080               	movwf	indf
 11218                           	
 11219  0DD1                     i1l10342:	
 11220  0DD1  0854               	movf	(_rxiptr)^080h,w	;volatile
 11221  0DD2  3E01               	addlw	01h
 11222  0DD3  390F               	andlw	0Fh
 11223  0DD4  00F8               	movwf	(??_isr1+0)+0
 11224  0DD5  0878               	movf	(??_isr1+0)+0,w
 11225  0DD6  00D6               	movwf	(_ser_tmp)^080h
 11226                           	
 11227  0DD7                     i1l10344:	
 11228  0DD7  0856               	movf	(_ser_tmp)^080h,w
 11229  0DD8  0655               	xorwf	(_rxoptr)^080h,w	;volatile
 11230  0DD9  1903               	skipnz
 11231  0DDA  2DDC               	goto	u363_21
 11232  0DDB  2DDD               	goto	u363_20
 11233  0DDC                     u363_21:
 11234  0DDC  2DE3               	goto	i1l10348
 11235  0DDD                     u363_20:
 11236                           	
 11237  0DDD                     i1l10346:	
 11238  0DDD  0856               	movf	(_ser_tmp)^080h,w
 11239  0DDE  00F8               	movwf	(??_isr1+0)+0
 11240  0DDF  0878               	movf	(??_isr1+0)+0,w
 11241  0DE0  00D4               	movwf	(_rxiptr)^080h	;volatile
 11242  0DE1  2DE3               	goto	i1l10348
 11243                           	
 11244  0DE2                     i1l2219:	
 11245  0DE2  2DE3               	goto	i1l10348
 11246                           	
 11247  0DE3                     i1l2218:	
 11248                           	
 11249  0DE3                     i1l10348:	
 11250  0DE3  1283               	bcf	status, 5	;RP0=0, select bank0
 11251  0DE4  1E0C               	btfss	(100/8),(100)&7
 11252  0DE5  2DE7               	goto	u364_21
 11253  0DE6  2DE8               	goto	u364_20
 11254  0DE7                     u364_21:
 11255  0DE7  2E09               	goto	i1l2222
 11256  0DE8                     u364_20:
 11257                           	
 11258  0DE8                     i1l10350:	
 11259  0DE8  1683               	bsf	status, 5	;RP0=1, select bank1
 11260  0DE9  1303               	bcf	status, 6	;RP1=0, select bank1
 11261  0DEA  1E0C               	btfss	(1124/8)^080h,(1124)&7
 11262  0DEB  2DED               	goto	u365_21
 11263  0DEC  2DEE               	goto	u365_20
 11264  0DED                     u365_21:
 11265  0DED  2E09               	goto	i1l2222
 11266  0DEE                     u365_20:
 11267                           	
 11268  0DEE                     i1l10352:	
 11269  0DEE  085A               	movf	(_txoptr)^080h,w
 11270  0DEF  3EA0               	addlw	_txfifo&0ffh
 11271  0DF0  0084               	movwf	fsr0
 11272  0DF1  1783               	bsf	status, 7	;select IRP bank3
 11273  0DF2  0800               	movf	indf,w
 11274  0DF3  1283               	bcf	status, 5	;RP0=0, select bank0
 11275  0DF4  1303               	bcf	status, 6	;RP1=0, select bank0
 11276  0DF5  0099               	movwf	(25)	;volatile
 11277                           	
 11278  0DF6                     i1l10354:	
 11279  0DF6  3001               	movlw	(01h)
 11280  0DF7  00F8               	movwf	(??_isr1+0)+0
 11281  0DF8  0878               	movf	(??_isr1+0)+0,w
 11282  0DF9  1683               	bsf	status, 5	;RP0=1, select bank1
 11283  0DFA  1303               	bcf	status, 6	;RP1=0, select bank1
 11284  0DFB  07DA               	addwf	(_txoptr)^080h,f	;volatile
 11285                           	
 11286  0DFC                     i1l10356:	
 11287  0DFC  300F               	movlw	(0Fh)
 11288  0DFD  00F8               	movwf	(??_isr1+0)+0
 11289  0DFE  0878               	movf	(??_isr1+0)+0,w
 11290  0DFF  05DA               	andwf	(_txoptr)^080h,f	;volatile
 11291                           	
 11292  0E00                     i1l10358:	
 11293  0E00  085A               	movf	(_txoptr)^080h,w	;volatile
 11294  0E01  0659               	xorwf	(_txiptr)^080h,w	;volatile
 11295  0E02  1D03               	skipz
 11296  0E03  2E05               	goto	u366_21
 11297  0E04  2E06               	goto	u366_20
 11298  0E05                     u366_21:
 11299  0E05  2E09               	goto	i1l2222
 11300  0E06                     u366_20:
 11301                           	
 11302  0E06                     i1l10360:	
 11303  0E06  120C               	bcf	(1124/8)^080h,(1124)&7
 11304  0E07  2E09               	goto	i1l2222
 11305                           	
 11306  0E08                     i1l2221:	
 11307  0E08  2E09               	goto	i1l2222
 11308                           	
 11309  0E09                     i1l2220:	
 11310                           	line	134
 11311                           	
 11312  0E09                     i1l2222:	
 11313  0E09  087C               	movf	(??_isr1+4),w
 11314  0E0A  1283               	bcf	status, 5	;RP0=0, select bank0
 11315  0E0B  00FF               	movwf	btemp+1
 11316  0E0C  087B               	movf	(??_isr1+3),w
 11317  0E0D  008A               	movwf	pclath
 11318  0E0E  087A               	movf	(??_isr1+2),w
 11319  0E0F  0084               	movwf	fsr0
 11320  0E10  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 11321  0E11  0083               	movwf	status
 11322  0E12  0EFE               	swapf	saved_w,f
 11323  0E13  0E7E               	swapf	saved_w,w
 11324  0E14  0009               	retfie
 11325                           	opt stack 0
 11326                           GLOBAL	__end_of_isr1
 11327  0E15                     	__end_of_isr1:
 11328 ;; =============== function _isr1 ends ============
 11329                           
 11330                           	signat	_isr1,88
 11331                           	global	_ReadButtons
 11332                           psect	text1112,local,class=CODE,delta=2
 11333                           global __ptext1112
 11334  15F0                     __ptext1112:
 11335                           
 11336 ;; *************** function _ReadButtons *****************
 11337 ;; Defined at:
 11338 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;		None
 11341 ;; Auto vars:     Size  Location     Type
 11342 ;;		None
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  1    wreg      unsigned char 
 11345 ;; Registers used:
 11346 ;;		wreg, status,2, status,0, pclath, cstack
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11352 ;;      Params:         0       0       0       0       0
 11353 ;;      Locals:         0       0       0       0       0
 11354 ;;      Temps:          0       0       0       0       0
 11355 ;;      Totals:         0       0       0       0       0
 11356 ;;Total ram usage:        0 bytes
 11357 ;; Hardware stack levels used:    1
 11358 ;; Hardware stack levels required when called:    1
 11359 ;; This function calls:
 11360 ;;		_Debounce
 11361 ;; This function is called by:
 11362 ;;		_isr1
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           psect	text1112
 11366                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11367                           	line	159
 11368                           	global	__size_of_ReadButtons
 11369  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 11370                           	
 11371  15F0                     _ReadButtons:	
 11372                           	opt	stack 0
 11373                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 11374                           	line	161
 11375                           	
 11376  15F0                     i1l10362:	
 11377                           ;HMI.c: 161: Debounce();
 11378  15F0  120A  158A  22F0   	fcall	_Debounce
              160A  118A         
 11379                           	line	163
 11380                           	
 11381  15F5                     i1l10364:	
 11382                           ;HMI.c: 163: if(UpPressed)
 11383  15F5  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 11384  15F6  2DF8               	goto	u367_21
 11385  15F7  2DF9               	goto	u367_20
 11386  15F8                     u367_21:
 11387  15F8  2DFD               	goto	i1l4505
 11388  15F9                     u367_20:
 11389                           	line	165
 11390                           	
 11391  15F9                     i1l10366:	
 11392                           ;HMI.c: 164: {
 11393                           ;HMI.c: 165: UpPressed = 0;
 11394  15F9  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 11395                           	line	166
 11396                           	
 11397  15FA                     i1l10368:	
 11398                           ;HMI.c: 166: return 1;
 11399  15FA  3001               	movlw	(01h)
 11400  15FB  2E1F               	goto	i1l4506
 11401                           	
 11402  15FC                     i1l10370:	
 11403  15FC  2E1F               	goto	i1l4506
 11404                           	line	168
 11405                           	
 11406  15FD                     i1l4505:	
 11407                           	line	170
 11408                           ;HMI.c: 168: }
 11409                           ;HMI.c: 170: if(DownPressed)
 11410  15FD  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 11411  15FE  2E00               	goto	u368_21
 11412  15FF  2E01               	goto	u368_20
 11413  1600                     u368_21:
 11414  1600  2E05               	goto	i1l4507
 11415  1601                     u368_20:
 11416                           	line	172
 11417                           	
 11418  1601                     i1l10372:	
 11419                           ;HMI.c: 171: {
 11420                           ;HMI.c: 172: DownPressed = 0;
 11421  1601  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 11422                           	line	173
 11423                           	
 11424  1602                     i1l10374:	
 11425                           ;HMI.c: 173: return 2;
 11426  1602  3002               	movlw	(02h)
 11427  1603  2E1F               	goto	i1l4506
 11428                           	
 11429  1604                     i1l10376:	
 11430  1604  2E1F               	goto	i1l4506
 11431                           	line	175
 11432                           	
 11433  1605                     i1l4507:	
 11434                           	line	176
 11435                           ;HMI.c: 175: }
 11436                           ;HMI.c: 176: if(LeftPressed)
 11437  1605  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 11438  1606  2E08               	goto	u369_21
 11439  1607  2E09               	goto	u369_20
 11440  1608                     u369_21:
 11441  1608  2E0D               	goto	i1l4508
 11442  1609                     u369_20:
 11443                           	line	178
 11444                           	
 11445  1609                     i1l10378:	
 11446                           ;HMI.c: 177: {
 11447                           ;HMI.c: 178: LeftPressed = 0;
 11448  1609  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 11449                           	line	179
 11450                           	
 11451  160A                     i1l10380:	
 11452                           ;HMI.c: 179: return 3;
 11453  160A  3003               	movlw	(03h)
 11454  160B  2E1F               	goto	i1l4506
 11455                           	
 11456  160C                     i1l10382:	
 11457  160C  2E1F               	goto	i1l4506
 11458                           	line	181
 11459                           	
 11460  160D                     i1l4508:	
 11461                           	line	182
 11462                           ;HMI.c: 181: }
 11463                           ;HMI.c: 182: if(RightPressed)
 11464  160D  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 11465  160E  2E10               	goto	u370_21
 11466  160F  2E11               	goto	u370_20
 11467  1610                     u370_21:
 11468  1610  2E15               	goto	i1l4509
 11469  1611                     u370_20:
 11470                           	line	184
 11471                           	
 11472  1611                     i1l10384:	
 11473                           ;HMI.c: 183: {
 11474                           ;HMI.c: 184: RightPressed = 0;
 11475  1611  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 11476                           	line	185
 11477                           	
 11478  1612                     i1l10386:	
 11479                           ;HMI.c: 185: return 4;
 11480  1612  3004               	movlw	(04h)
 11481  1613  2E1F               	goto	i1l4506
 11482                           	
 11483  1614                     i1l10388:	
 11484  1614  2E1F               	goto	i1l4506
 11485                           	line	187
 11486                           	
 11487  1615                     i1l4509:	
 11488                           	line	189
 11489                           ;HMI.c: 187: }
 11490                           ;HMI.c: 189: if(CenterPressed)
 11491  1615  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 11492  1616  2E18               	goto	u371_21
 11493  1617  2E19               	goto	u371_20
 11494  1618                     u371_21:
 11495  1618  2E1D               	goto	i1l10396
 11496  1619                     u371_20:
 11497                           	line	191
 11498                           	
 11499  1619                     i1l10390:	
 11500                           ;HMI.c: 190: {
 11501                           ;HMI.c: 191: CenterPressed = 0;
 11502  1619  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 11503                           	line	192
 11504                           	
 11505  161A                     i1l10392:	
 11506                           ;HMI.c: 192: return 5;
 11507  161A  3005               	movlw	(05h)
 11508  161B  2E1F               	goto	i1l4506
 11509                           	
 11510  161C                     i1l10394:	
 11511  161C  2E1F               	goto	i1l4506
 11512                           	line	194
 11513                           	
 11514  161D                     i1l4510:	
 11515                           	line	195
 11516                           	
 11517  161D                     i1l10396:	
 11518                           ;HMI.c: 194: }
 11519                           ;HMI.c: 195: return 0;
 11520  161D  3000               	movlw	(0)
 11521  161E  2E1F               	goto	i1l4506
 11522                           	
 11523  161F                     i1l10398:	
 11524                           	line	196
 11525                           	
 11526  161F                     i1l4506:	
 11527  161F  0008               	return
 11528                           	opt stack 0
 11529                           GLOBAL	__end_of_ReadButtons
 11530  1620                     	__end_of_ReadButtons:
 11531 ;; =============== function _ReadButtons ends ============
 11532                           
 11533                           	signat	_ReadButtons,89
 11534                           	global	i1___lwmod
 11535                           psect	text1113,local,class=CODE,delta=2
 11536                           global __ptext1113
 11537  1690                     __ptext1113:
 11538                           
 11539 ;; *************** function i1___lwmod *****************
 11540 ;; Defined at:
 11541 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;  __lwmod         2    0[COMMON] unsigned int 
 11544 ;;  __lwmod         2    2[COMMON] unsigned int 
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;  __lwmod         1    5[COMMON] unsigned char 
 11547 ;; Return value:  Size  Location     Type
 11548 ;;                  2    0[COMMON] unsigned int 
 11549 ;; Registers used:
 11550 ;;		wreg, status,2, status,0
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11556 ;;      Params:         4       0       0       0       0
 11557 ;;      Locals:         1       0       0       0       0
 11558 ;;      Temps:          1       0       0       0       0
 11559 ;;      Totals:         6       0       0       0       0
 11560 ;;Total ram usage:        6 bytes
 11561 ;; Hardware stack levels used:    1
 11562 ;; This function calls:
 11563 ;;		Nothing
 11564 ;; This function is called by:
 11565 ;;		_isr1
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           psect	text1113
 11569                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11570                           	line	5
 11571                           	global	__size_ofi1___lwmod
 11572  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 11573                           	
 11574  1690                     i1___lwmod:	
 11575                           	opt	stack 1
 11576                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 11577                           	line	8
 11578                           	
 11579  1690                     i1l10902:	
 11580  1690  0873               	movf	(i1___lwmod@divisor+1),w
 11581  1691  0472               	iorwf	(i1___lwmod@divisor),w
 11582  1692  1903               	skipnz
 11583  1693  2E95               	goto	u484_21
 11584  1694  2E96               	goto	u484_20
 11585  1695                     u484_21:
 11586  1695  2ECC               	goto	i1l10920
 11587  1696                     u484_20:
 11588                           	line	9
 11589                           	
 11590  1696                     i1l10904:	
 11591  1696  01F7               	clrf	(i1___lwmod@counter)
 11592  1697  1403               	bsf	status,0
 11593  1698  0DF7               	rlf	(i1___lwmod@counter),f
 11594                           	line	10
 11595  1699  2EA6               	goto	i1l10910
 11596                           	
 11597  169A                     i1l7502:	
 11598                           	line	11
 11599                           	
 11600  169A                     i1l10906:	
 11601  169A  3001               	movlw	01h
 11602                           	
 11603  169B                     u485_25:
 11604  169B  1003               	clrc
 11605  169C  0DF2               	rlf	(i1___lwmod@divisor),f
 11606  169D  0DF3               	rlf	(i1___lwmod@divisor+1),f
 11607  169E  3EFF               	addlw	-1
 11608  169F  1D03               	skipz
 11609  16A0  2E9B               	goto	u485_25
 11610                           	line	12
 11611                           	
 11612  16A1                     i1l10908:	
 11613  16A1  3001               	movlw	(01h)
 11614  16A2  00F6               	movwf	(??i1___lwmod+0)+0
 11615  16A3  0876               	movf	(??i1___lwmod+0)+0,w
 11616  16A4  07F7               	addwf	(i1___lwmod@counter),f
 11617  16A5  2EA6               	goto	i1l10910
 11618                           	line	13
 11619                           	
 11620  16A6                     i1l7501:	
 11621                           	line	10
 11622                           	
 11623  16A6                     i1l10910:	
 11624  16A6  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 11625  16A7  2EA9               	goto	u486_21
 11626  16A8  2EAA               	goto	u486_20
 11627  16A9                     u486_21:
 11628  16A9  2E9A               	goto	i1l10906
 11629  16AA                     u486_20:
 11630  16AA  2EAC               	goto	i1l10912
 11631                           	
 11632  16AB                     i1l7503:	
 11633  16AB  2EAC               	goto	i1l10912
 11634                           	line	14
 11635                           	
 11636  16AC                     i1l7504:	
 11637                           	line	15
 11638                           	
 11639  16AC                     i1l10912:	
 11640  16AC  0873               	movf	(i1___lwmod@divisor+1),w
 11641  16AD  0275               	subwf	(i1___lwmod@dividend+1),w
 11642  16AE  1D03               	skipz
 11643  16AF  2EB2               	goto	u487_25
 11644  16B0  0872               	movf	(i1___lwmod@divisor),w
 11645  16B1  0274               	subwf	(i1___lwmod@dividend),w
 11646  16B2                     u487_25:
 11647  16B2  1C03               	skipc
 11648  16B3  2EB5               	goto	u487_21
 11649  16B4  2EB6               	goto	u487_20
 11650  16B5                     u487_21:
 11651  16B5  2EBD               	goto	i1l10916
 11652  16B6                     u487_20:
 11653                           	line	16
 11654                           	
 11655  16B6                     i1l10914:	
 11656  16B6  0872               	movf	(i1___lwmod@divisor),w
 11657  16B7  02F4               	subwf	(i1___lwmod@dividend),f
 11658  16B8  0873               	movf	(i1___lwmod@divisor+1),w
 11659  16B9  1C03               	skipc
 11660  16BA  03F5               	decf	(i1___lwmod@dividend+1),f
 11661  16BB  02F5               	subwf	(i1___lwmod@dividend+1),f
 11662  16BC  2EBD               	goto	i1l10916
 11663                           	
 11664  16BD                     i1l7505:	
 11665                           	line	17
 11666                           	
 11667  16BD                     i1l10916:	
 11668  16BD  3001               	movlw	01h
 11669                           	
 11670  16BE                     u488_25:
 11671  16BE  1003               	clrc
 11672  16BF  0CF3               	rrf	(i1___lwmod@divisor+1),f
 11673  16C0  0CF2               	rrf	(i1___lwmod@divisor),f
 11674  16C1  3EFF               	addlw	-1
 11675  16C2  1D03               	skipz
 11676  16C3  2EBE               	goto	u488_25
 11677                           	line	18
 11678                           	
 11679  16C4                     i1l10918:	
 11680  16C4  3001               	movlw	low(01h)
 11681  16C5  02F7               	subwf	(i1___lwmod@counter),f
 11682  16C6  1D03               	btfss	status,2
 11683  16C7  2EC9               	goto	u489_21
 11684  16C8  2ECA               	goto	u489_20
 11685  16C9                     u489_21:
 11686  16C9  2EAC               	goto	i1l10912
 11687  16CA                     u489_20:
 11688  16CA  2ECC               	goto	i1l10920
 11689                           	
 11690  16CB                     i1l7506:	
 11691  16CB  2ECC               	goto	i1l10920
 11692                           	line	19
 11693                           	
 11694  16CC                     i1l7500:	
 11695                           	line	20
 11696                           	
 11697  16CC                     i1l10920:	
 11698  16CC  0875               	movf	(i1___lwmod@dividend+1),w
 11699  16CD  01F3               	clrf	(?i1___lwmod+1)
 11700  16CE  07F3               	addwf	(?i1___lwmod+1)
 11701  16CF  0874               	movf	(i1___lwmod@dividend),w
 11702  16D0  01F2               	clrf	(?i1___lwmod)
 11703  16D1  07F2               	addwf	(?i1___lwmod)
 11704                           
 11705  16D2  2ED3               	goto	i1l7507
 11706                           	
 11707  16D3                     i1l10922:	
 11708                           	line	21
 11709                           	
 11710  16D3                     i1l7507:	
 11711  16D3  0008               	return
 11712                           	opt stack 0
 11713                           GLOBAL	__end_ofi1___lwmod
 11714  16D4                     	__end_ofi1___lwmod:
 11715 ;; =============== function i1___lwmod ends ============
 11716                           
 11717                           	signat	i1___lwmod,90
 11718                           	global	_Debounce
 11719                           psect	text1114,local,class=CODE,delta=2
 11720                           global __ptext1114
 11721  0AF0                     __ptext1114:
 11722                           
 11723 ;; *************** function _Debounce *****************
 11724 ;; Defined at:
 11725 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;		None
 11728 ;; Auto vars:     Size  Location     Type
 11729 ;;		None
 11730 ;; Return value:  Size  Location     Type
 11731 ;;		None               void
 11732 ;; Registers used:
 11733 ;;		wreg, status,2, status,0
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11739 ;;      Params:         0       0       0       0       0
 11740 ;;      Locals:         0       0       0       0       0
 11741 ;;      Temps:          1       0       0       0       0
 11742 ;;      Totals:         1       0       0       0       0
 11743 ;;Total ram usage:        1 bytes
 11744 ;; Hardware stack levels used:    1
 11745 ;; This function calls:
 11746 ;;		Nothing
 11747 ;; This function is called by:
 11748 ;;		_ReadButtons
 11749 ;; This function uses a non-reentrant model
 11750 ;;
 11751                           psect	text1114
 11752                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11753                           	line	77
 11754                           	global	__size_of_Debounce
 11755  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 11756                           	
 11757  0AF0                     _Debounce:	
 11758                           	opt	stack 0
 11759                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 11760                           	line	79
 11761                           	
 11762  0AF0                     i1l10472:	
 11763                           ;HMI.c: 79: if(!RB2)
 11764  0AF0  1283               	bcf	status, 5	;RP0=0, select bank0
 11765  0AF1  1303               	bcf	status, 6	;RP1=0, select bank0
 11766  0AF2  1906               	btfsc	(50/8),(50)&7
 11767  0AF3  2AF5               	goto	u376_21
 11768  0AF4  2AF6               	goto	u376_20
 11769  0AF5                     u376_21:
 11770  0AF5  2B0A               	goto	i1l4487
 11771  0AF6                     u376_20:
 11772                           	line	81
 11773                           	
 11774  0AF6                     i1l10474:	
 11775                           ;HMI.c: 80: {
 11776                           ;HMI.c: 81: UpDebounceCount++;
 11777  0AF6  3001               	movlw	(01h)
 11778  0AF7  00F2               	movwf	(??_Debounce+0)+0
 11779  0AF8  0872               	movf	(??_Debounce+0)+0,w
 11780  0AF9  1683               	bsf	status, 5	;RP0=1, select bank1
 11781  0AFA  1303               	bcf	status, 6	;RP1=0, select bank1
 11782  0AFB  07D0               	addwf	(_UpDebounceCount)^080h,f	;volatile
 11783                           	line	82
 11784                           	
 11785  0AFC                     i1l10476:	
 11786                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 11787  0AFC  300A               	movlw	(0Ah)
 11788  0AFD  0250               	subwf	(_UpDebounceCount)^080h,w	;volatile
 11789  0AFE  1C03               	skipc
 11790  0AFF  2B01               	goto	u377_21
 11791  0B00  2B02               	goto	u377_20
 11792  0B01                     u377_21:
 11793  0B01  2B0E               	goto	i1l4489
 11794  0B02                     u377_20:
 11795                           	
 11796  0B02                     i1l10478:	
 11797  0B02  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 11798  0B03  2B05               	goto	u378_21
 11799  0B04  2B06               	goto	u378_20
 11800  0B05                     u378_21:
 11801  0B05  2B0E               	goto	i1l4489
 11802  0B06                     u378_20:
 11803                           	line	84
 11804                           	
 11805  0B06                     i1l10480:	
 11806                           ;HMI.c: 83: {
 11807                           ;HMI.c: 84: UpPressed = 1;
 11808  0B06  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 11809                           	line	85
 11810                           ;HMI.c: 85: UpReleased = 0;
 11811  0B07  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 11812  0B08  2B0E               	goto	i1l4489
 11813                           	line	86
 11814                           	
 11815  0B09                     i1l4488:	
 11816                           	line	87
 11817                           ;HMI.c: 86: }
 11818                           ;HMI.c: 87: }
 11819  0B09  2B0E               	goto	i1l4489
 11820                           	line	88
 11821                           	
 11822  0B0A                     i1l4487:	
 11823                           	line	90
 11824                           ;HMI.c: 88: else
 11825                           ;HMI.c: 89: {
 11826                           ;HMI.c: 90: UpDebounceCount = 0;
 11827  0B0A  1683               	bsf	status, 5	;RP0=1, select bank1
 11828  0B0B  1303               	bcf	status, 6	;RP1=0, select bank1
 11829  0B0C  01D0               	clrf	(_UpDebounceCount)^080h	;volatile
 11830                           	line	91
 11831                           ;HMI.c: 91: UpReleased = 1;
 11832  0B0D  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 11833                           	line	92
 11834                           	
 11835  0B0E                     i1l4489:	
 11836                           	line	95
 11837                           ;HMI.c: 92: }
 11838                           ;HMI.c: 95: if(!RB3)
 11839  0B0E  1283               	bcf	status, 5	;RP0=0, select bank0
 11840  0B0F  1303               	bcf	status, 6	;RP1=0, select bank0
 11841  0B10  1986               	btfsc	(51/8),(51)&7
 11842  0B11  2B13               	goto	u379_21
 11843  0B12  2B14               	goto	u379_20
 11844  0B13                     u379_21:
 11845  0B13  2B28               	goto	i1l4490
 11846  0B14                     u379_20:
 11847                           	line	97
 11848                           	
 11849  0B14                     i1l10482:	
 11850                           ;HMI.c: 96: {
 11851                           ;HMI.c: 97: DownDebounceCount++;
 11852  0B14  3001               	movlw	(01h)
 11853  0B15  00F2               	movwf	(??_Debounce+0)+0
 11854  0B16  0872               	movf	(??_Debounce+0)+0,w
 11855  0B17  1683               	bsf	status, 5	;RP0=1, select bank1
 11856  0B18  1303               	bcf	status, 6	;RP1=0, select bank1
 11857  0B19  07CC               	addwf	(_DownDebounceCount)^080h,f	;volatile
 11858                           	line	98
 11859                           	
 11860  0B1A                     i1l10484:	
 11861                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 11862  0B1A  300A               	movlw	(0Ah)
 11863  0B1B  024C               	subwf	(_DownDebounceCount)^080h,w	;volatile
 11864  0B1C  1C03               	skipc
 11865  0B1D  2B1F               	goto	u380_21
 11866  0B1E  2B20               	goto	u380_20
 11867  0B1F                     u380_21:
 11868  0B1F  2B2C               	goto	i1l4492
 11869  0B20                     u380_20:
 11870                           	
 11871  0B20                     i1l10486:	
 11872  0B20  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 11873  0B21  2B23               	goto	u381_21
 11874  0B22  2B24               	goto	u381_20
 11875  0B23                     u381_21:
 11876  0B23  2B2C               	goto	i1l4492
 11877  0B24                     u381_20:
 11878                           	line	100
 11879                           	
 11880  0B24                     i1l10488:	
 11881                           ;HMI.c: 99: {
 11882                           ;HMI.c: 100: DownPressed = 1;
 11883  0B24  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 11884                           	line	101
 11885                           ;HMI.c: 101: DownReleased = 0;
 11886  0B25  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 11887  0B26  2B2C               	goto	i1l4492
 11888                           	line	102
 11889                           	
 11890  0B27                     i1l4491:	
 11891                           	line	103
 11892                           ;HMI.c: 102: }
 11893                           ;HMI.c: 103: }
 11894  0B27  2B2C               	goto	i1l4492
 11895                           	line	104
 11896                           	
 11897  0B28                     i1l4490:	
 11898                           	line	106
 11899                           ;HMI.c: 104: else
 11900                           ;HMI.c: 105: {
 11901                           ;HMI.c: 106: DownDebounceCount = 0;
 11902  0B28  1683               	bsf	status, 5	;RP0=1, select bank1
 11903  0B29  1303               	bcf	status, 6	;RP1=0, select bank1
 11904  0B2A  01CC               	clrf	(_DownDebounceCount)^080h	;volatile
 11905                           	line	107
 11906                           ;HMI.c: 107: DownReleased = 1;
 11907  0B2B  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 11908                           	line	108
 11909                           	
 11910  0B2C                     i1l4492:	
 11911                           	line	110
 11912                           ;HMI.c: 108: }
 11913                           ;HMI.c: 110: if(!RB4)
 11914  0B2C  1283               	bcf	status, 5	;RP0=0, select bank0
 11915  0B2D  1303               	bcf	status, 6	;RP1=0, select bank0
 11916  0B2E  1A06               	btfsc	(52/8),(52)&7
 11917  0B2F  2B31               	goto	u382_21
 11918  0B30  2B32               	goto	u382_20
 11919  0B31                     u382_21:
 11920  0B31  2B46               	goto	i1l4493
 11921  0B32                     u382_20:
 11922                           	line	112
 11923                           	
 11924  0B32                     i1l10490:	
 11925                           ;HMI.c: 111: {
 11926                           ;HMI.c: 112: LeftDebounceCount++;
 11927  0B32  3001               	movlw	(01h)
 11928  0B33  00F2               	movwf	(??_Debounce+0)+0
 11929  0B34  0872               	movf	(??_Debounce+0)+0,w
 11930  0B35  1683               	bsf	status, 5	;RP0=1, select bank1
 11931  0B36  1303               	bcf	status, 6	;RP1=0, select bank1
 11932  0B37  07CD               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 11933                           	line	113
 11934                           	
 11935  0B38                     i1l10492:	
 11936                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 11937  0B38  300A               	movlw	(0Ah)
 11938  0B39  024D               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 11939  0B3A  1C03               	skipc
 11940  0B3B  2B3D               	goto	u383_21
 11941  0B3C  2B3E               	goto	u383_20
 11942  0B3D                     u383_21:
 11943  0B3D  2B4A               	goto	i1l4495
 11944  0B3E                     u383_20:
 11945                           	
 11946  0B3E                     i1l10494:	
 11947  0B3E  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 11948  0B3F  2B41               	goto	u384_21
 11949  0B40  2B42               	goto	u384_20
 11950  0B41                     u384_21:
 11951  0B41  2B4A               	goto	i1l4495
 11952  0B42                     u384_20:
 11953                           	line	115
 11954                           	
 11955  0B42                     i1l10496:	
 11956                           ;HMI.c: 114: {
 11957                           ;HMI.c: 115: LeftPressed = 1;
 11958  0B42  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 11959                           	line	116
 11960                           ;HMI.c: 116: LeftReleased = 0;
 11961  0B43  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 11962  0B44  2B4A               	goto	i1l4495
 11963                           	line	117
 11964                           	
 11965  0B45                     i1l4494:	
 11966                           	line	118
 11967                           ;HMI.c: 117: }
 11968                           ;HMI.c: 118: }
 11969  0B45  2B4A               	goto	i1l4495
 11970                           	line	119
 11971                           	
 11972  0B46                     i1l4493:	
 11973                           	line	121
 11974                           ;HMI.c: 119: else
 11975                           ;HMI.c: 120: {
 11976                           ;HMI.c: 121: LeftDebounceCount = 0;
 11977  0B46  1683               	bsf	status, 5	;RP0=1, select bank1
 11978  0B47  1303               	bcf	status, 6	;RP1=0, select bank1
 11979  0B48  01CD               	clrf	(_LeftDebounceCount)^080h	;volatile
 11980                           	line	122
 11981                           ;HMI.c: 122: LeftReleased = 1;
 11982  0B49  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 11983                           	line	123
 11984                           	
 11985  0B4A                     i1l4495:	
 11986                           	line	125
 11987                           ;HMI.c: 123: }
 11988                           ;HMI.c: 125: if(!RB5)
 11989  0B4A  1283               	bcf	status, 5	;RP0=0, select bank0
 11990  0B4B  1303               	bcf	status, 6	;RP1=0, select bank0
 11991  0B4C  1A86               	btfsc	(53/8),(53)&7
 11992  0B4D  2B4F               	goto	u385_21
 11993  0B4E  2B50               	goto	u385_20
 11994  0B4F                     u385_21:
 11995  0B4F  2B64               	goto	i1l4496
 11996  0B50                     u385_20:
 11997                           	line	127
 11998                           	
 11999  0B50                     i1l10498:	
 12000                           ;HMI.c: 126: {
 12001                           ;HMI.c: 127: RightDebounceCount++;
 12002  0B50  3001               	movlw	(01h)
 12003  0B51  00F2               	movwf	(??_Debounce+0)+0
 12004  0B52  0872               	movf	(??_Debounce+0)+0,w
 12005  0B53  1683               	bsf	status, 5	;RP0=1, select bank1
 12006  0B54  1303               	bcf	status, 6	;RP1=0, select bank1
 12007  0B55  07CF               	addwf	(_RightDebounceCount)^080h,f	;volatile
 12008                           	line	128
 12009                           	
 12010  0B56                     i1l10500:	
 12011                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 12012  0B56  300A               	movlw	(0Ah)
 12013  0B57  024F               	subwf	(_RightDebounceCount)^080h,w	;volatile
 12014  0B58  1C03               	skipc
 12015  0B59  2B5B               	goto	u386_21
 12016  0B5A  2B5C               	goto	u386_20
 12017  0B5B                     u386_21:
 12018  0B5B  2B68               	goto	i1l4498
 12019  0B5C                     u386_20:
 12020                           	
 12021  0B5C                     i1l10502:	
 12022  0B5C  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 12023  0B5D  2B5F               	goto	u387_21
 12024  0B5E  2B60               	goto	u387_20
 12025  0B5F                     u387_21:
 12026  0B5F  2B68               	goto	i1l4498
 12027  0B60                     u387_20:
 12028                           	line	130
 12029                           	
 12030  0B60                     i1l10504:	
 12031                           ;HMI.c: 129: {
 12032                           ;HMI.c: 130: RightPressed = 1;
 12033  0B60  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 12034                           	line	131
 12035                           ;HMI.c: 131: RightReleased = 0;
 12036  0B61  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 12037  0B62  2B68               	goto	i1l4498
 12038                           	line	132
 12039                           	
 12040  0B63                     i1l4497:	
 12041                           	line	133
 12042                           ;HMI.c: 132: }
 12043                           ;HMI.c: 133: }
 12044  0B63  2B68               	goto	i1l4498
 12045                           	line	134
 12046                           	
 12047  0B64                     i1l4496:	
 12048                           	line	136
 12049                           ;HMI.c: 134: else
 12050                           ;HMI.c: 135: {
 12051                           ;HMI.c: 136: RightDebounceCount = 0;
 12052  0B64  1683               	bsf	status, 5	;RP0=1, select bank1
 12053  0B65  1303               	bcf	status, 6	;RP1=0, select bank1
 12054  0B66  01CF               	clrf	(_RightDebounceCount)^080h	;volatile
 12055                           	line	137
 12056                           ;HMI.c: 137: RightReleased = 1;
 12057  0B67  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 12058                           	line	138
 12059                           	
 12060  0B68                     i1l4498:	
 12061                           	line	140
 12062                           ;HMI.c: 138: }
 12063                           ;HMI.c: 140: if(!RB6)
 12064  0B68  1283               	bcf	status, 5	;RP0=0, select bank0
 12065  0B69  1303               	bcf	status, 6	;RP1=0, select bank0
 12066  0B6A  1B06               	btfsc	(54/8),(54)&7
 12067  0B6B  2B6D               	goto	u388_21
 12068  0B6C  2B6E               	goto	u388_20
 12069  0B6D                     u388_21:
 12070  0B6D  2B82               	goto	i1l4499
 12071  0B6E                     u388_20:
 12072                           	line	142
 12073                           	
 12074  0B6E                     i1l10506:	
 12075                           ;HMI.c: 141: {
 12076                           ;HMI.c: 142: CenterDebounceCount++;
 12077  0B6E  3001               	movlw	(01h)
 12078  0B6F  00F2               	movwf	(??_Debounce+0)+0
 12079  0B70  0872               	movf	(??_Debounce+0)+0,w
 12080  0B71  1683               	bsf	status, 5	;RP0=1, select bank1
 12081  0B72  1303               	bcf	status, 6	;RP1=0, select bank1
 12082  0B73  07C9               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 12083                           	line	143
 12084                           	
 12085  0B74                     i1l10508:	
 12086                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 12087  0B74  300A               	movlw	(0Ah)
 12088  0B75  0249               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 12089  0B76  1C03               	skipc
 12090  0B77  2B79               	goto	u389_21
 12091  0B78  2B7A               	goto	u389_20
 12092  0B79                     u389_21:
 12093  0B79  2B87               	goto	i1l4502
 12094  0B7A                     u389_20:
 12095                           	
 12096  0B7A                     i1l10510:	
 12097  0B7A  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 12098  0B7B  2B7D               	goto	u390_21
 12099  0B7C  2B7E               	goto	u390_20
 12100  0B7D                     u390_21:
 12101  0B7D  2B87               	goto	i1l4502
 12102  0B7E                     u390_20:
 12103                           	line	145
 12104                           	
 12105  0B7E                     i1l10512:	
 12106                           ;HMI.c: 144: {
 12107                           ;HMI.c: 145: CenterPressed = 1;
 12108  0B7E  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 12109                           	line	146
 12110                           ;HMI.c: 146: CenterReleased = 0;
 12111  0B7F  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 12112  0B80  2B87               	goto	i1l4502
 12113                           	line	147
 12114                           	
 12115  0B81                     i1l4500:	
 12116                           	line	148
 12117                           ;HMI.c: 147: }
 12118                           ;HMI.c: 148: }
 12119  0B81  2B87               	goto	i1l4502
 12120                           	line	149
 12121                           	
 12122  0B82                     i1l4499:	
 12123                           	line	151
 12124                           ;HMI.c: 149: else
 12125                           ;HMI.c: 150: {
 12126                           ;HMI.c: 151: CenterDebounceCount = 0;
 12127  0B82  1683               	bsf	status, 5	;RP0=1, select bank1
 12128  0B83  1303               	bcf	status, 6	;RP1=0, select bank1
 12129  0B84  01C9               	clrf	(_CenterDebounceCount)^080h	;volatile
 12130                           	line	152
 12131                           ;HMI.c: 152: CenterReleased = 1;
 12132  0B85  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 12133  0B86  2B87               	goto	i1l4502
 12134                           	line	153
 12135                           	
 12136  0B87                     i1l4501:	
 12137                           	line	154
 12138                           	
 12139  0B87                     i1l4502:	
 12140  0B87  0008               	return
 12141                           	opt stack 0
 12142                           GLOBAL	__end_of_Debounce
 12143  0B88                     	__end_of_Debounce:
 12144 ;; =============== function _Debounce ends ============
 12145                           
 12146                           	signat	_Debounce,88
 12147                           psect	text1115,local,class=CODE,delta=2
 12148                           global __ptext1115
 12149  0000                     __ptext1115:
 12150                           	global	btemp
 12151  007E                     	btemp set 07Eh
 12152                           
 12153                           	DABS	1,126,2	;btemp
 12154                           	global	wtemp0
 12155  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 11 14:33:24 2015

 __end_of_lcd_write_control 13DE             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                _IRdistance 00B0                          fsr 0004         ___wmul@multiplicand 0022  
                       l700 13F3                         l703 1468                         l704 1468  
                       l705 146C                         l706 148B                         l690 1659  
                       l691 1682                         l692 165D                         l693 1661  
                       l694 1665                         l695 1669                         l696 166D  
                       l689 1671                         l697 168F                         _GIE 005F  
                       _RB0 0030                         _RC0 0038                         _RB2 0032  
                       _RC1 0039                         _RB3 0033                         _RC2 003A  
                       _RB4 0034                         _RB5 0035                         _RE0 0048  
                       _RB6 0036                         _RE1 0049                         _RE2 004A  
                       _RX9 00C6                         _TX9 04C6                         _abs 1620  
                       _pos 00C0                         fsr0 0004                         indf 0000  
              ___awmod@sign 0026            ??_robotMoveSpeed 005D             ?_lcd_set_cursor 0072  
                      ?_abs 0026                        l3001 006D                        l1402 13A2  
                      l3002 0277                        l3010 0273                        l1410 1566  
                      l3011 021B                        l3003 00C3                        l1411 1566  
                      l3004 0276                        l3012 0272                        l3013 0271  
                      l3005 0119                        l1405 1382                        l3006 0275  
                      l3014 0277                        l2230 02AD                        l3007 016F  
                      l2231 04A9                        l3008 0274                        l1408 1555  
                      l2240 0327                        l2232 02AE                        l3009 01C5  
                      l1409 153C                        l2225 15EF                        l2233 04BF  
                      l2241 0341                        l2250 04A1                        l2242 036E  
                      l2234 02B4                        l2251 04A7                        l2243 03A5  
                      l2235 02D9                        l2260 0867                        l2252 04C6  
                      l2244 03BF                        l2236 02E9                        l2228 0286  
                      l1429 14B6                        l2261 08A4                        l2253 04C7  
                      l2245 03D7                        l2237 02F9                        l2229 029C  
                      l2262 0869                        l2254 04C7                        l2238 0499  
                      l2246 03F7                        l2263 086B                        l2239 02FE  
                      l2264 087B                        l2280 173D                        l2272 1729  
                      l2248 03F6                        l2265 0889                        l2257 085B  
                      l2281 175F                        l2273 1734                        l2249 04A0  
                      l2266 08A6                        l2258 0866                        l2290 0A53  
                      l2274 174C                        l2282 1749                        l2259 0893  
                      l2267 0891                        l2291 0A72                        l2283 175E  
                      l2275 1735                        l2268 08A5                        l2284 175F  
                      l2276 175D                        l2269 08A6                        l2277 1737  
                      l2278 1739                        l1399 13DD                        l2287 0A10  
                      l2279 173B                        l2288 0A69                        l2289 0A3C  
                      l6010 0FFE                        l6011 0FFD                        l6004 143B  
                      l6020 0962                        l6012 0FFF                        l6021 0981  
                      l3710 13BE                        l6022 0982                        l3711 13C3  
                      l6015 15C0                        l6007 0F60                        l4520 082C  
                      l3712 13C9                        l3720 17FF                        l6008 0FFF  
                      l6032 0BDF                        l4513 0834                        l4521 082D  
                      l6009 0F97                        l6033 0B9C                        l6025 0D2B  
                      l4522 0848                        l4514 0806                        l6018 093D  
                      l4530 054A                        l6034 0BAC                        l6026 0CDA  
                      l4515 0846                        l4523 0832                        l3715 17C0  
                      l6019 0982                        l4531 055D                        l6035 0C16  
                      l6027 0CEA                        l4516 0807                        l3716 17C7  
                      l4532 0628                        l6036 0C21                        l6028 0D62  
                      l4517 0808                        l3709 13BE                        l3717 17E4  
                      l4533 05A5                        l6029 0D6D                        l4518 0819  
                      l3718 17CE                        l4534 05F0                        l4519 081A  
                      l3719 17EE                        l6039 1654                        l4535 0619  
                      l4528 061B                        l4536 0628                        l4529 04E3  
                      l2992 099C                        l2993 09D2                        l2994 09BE  
                      l2995 09F8                        l7500 1712                        l7501 16EC  
                      l7502 16E0                        l2998 1409                        l7503 16F1  
                      l7504 16F2                        l7600 0C9A                        l6800 0722  
                      l7505 1703                        l7601 0CA7                        l6801 0728  
                      l7506 1711                        l7602 0C9B                        l7507 1719  
                      l7603 0CAD                        l7604 0CBE                        l7700 08FC  
                      l7620 151F                        l7701 0907                        l7621 153A  
                      l6750 1576                        l7702 090E                        l6742 14E5  
                      l6751 1593                        l6743 14E4                        l6744 14EE  
                      l6745 150E                        l6738 1415                        l7490 17A8  
                      l6739 1422                        l7491 177A                        l6748 156C  
                      l7484 14BC                        l7492 176E                        l7820 0A97  
                      l6773 07FF                        l6749 156B                        l7485 14C6  
                      l7493 177F                        l7821 0A8A                        l7486 14DB  
                      l7494 1780                        l7830 0AEF                        l7822 0A9E  
                      l6782 070F                        l6790 065F                        l7590 0EE6  
                      l7582 0E30                        l7487 14E2                        l7495 1799  
                      l7823 0AB5                        l6791 0648                        l6783 0631  
                      l7583 0F02                        l7496 17A7                        l7824 0A9F  
                      l7816 0A89                        l6792 0679                        l6784 0643  
                      l7584 0E49                        l7497 17AF                        l7825 0ABC  
                      l7593 0C3F                        l6793 0684                        l6785 064A  
                      l7585 0E89                        l7826 0AC8                        l7818 0A81  
                      l7594 0CC7                        l6794 06AC                        l6786 0645  
                      l7586 0E9E                        l7827 0ABD                        l7819 0AEF  
                      l7595 0C8A                        l6787 0723                        l6795 06A1  
                      l7587 0EB5                        l7828 0ACC                        l7596 0C76  
                      l7692 08B7                        l6796 06BE                        l6788 0646  
                      l7588 0EBA                        l7829 0AD6                        l7597 0C77  
                      l7693 08C1                        l6797 0703                        l6789 0647  
                      l7589 0ECF                        l7598 0C89                        l7694 08FD  
                      l6798 06C3                        l7599 0CAE                        l7695 08D7  
                      l6799 070E                        l7696 08CB                        l7697 08DC  
                      l7698 08DD                        l7699 08EE                        _CHS0 00FB  
                      _CHS1 00FC                        _CHS2 00FD                        STR_1 078B  
                      STR_2 0782                        STR_3 079D                        STR_4 07A6  
                      STR_5 0794                        STR_6 0779                        STR_7 07CA  
                      STR_8 07CE                        STR_9 07B6                        _BRGH 04C2  
                      _CREN 00C4                        u4010 14DA                        u4011 14D9  
                      u4020 176A                        u4005 14CE                        u4021 1769  
                      u4110 16F0                        u4111 16EF                        u4040 177E  
                      u4120 16FC                        u5000 0122                        u4041 177D  
                      u4121 16FB                        u4105 16E1                        u5001 0121  
                      u5010 012B                        u4035 176F                        u5011 012A  
                      u4060 1791                        u4140 1710                        u5020 0178  
                      u5100 0682                        u4061 1790                        u4141 170F  
                      u4125 16F8                        u5021 0177                        u5101 0681  
                      u5030 0181                        u5110 069F                        u4055 1781  
                      u4135 1704                        u5031 0180                        u5111 069E  
                      u4080 17A6                        u4400 0A80                        u5040 01CE  
                      u5120 06AB                        u5200 0E59                        u4081 17A5  
                      u4065 178D                        u4401 0A7F                        u5041 01CD  
                      u5121 06AA                        u3530 146C                        u4090 16DC  
                      u5050 01D7                        u5130 06B2                        u5210 0E6B  
                      u3531 146B                        u4075 179A                        u4091 16DB  
                      u5051 01D6                        u5131 06B1                        u5115 069B  
                      u4420 0A9D                        u5060 0224                        u5140 070D  
                      u5220 0E8D                        u4421 0A9C                        u5061 0223  
                      u5141 070C                        u5221 0E8C                        u5205 0E55  
                      u5070 022D                        u5150 0721                        u5310 0EE5  
                      u4415 0A8F                        u5071 022C                        u5151 0720  
                      u5311 0EE4                        u5231 0E96                        u5215 0E67  
                      u3720 0814                        u4440 0ABB                        u4600 0C65  
                      u5080 0637                        u5160 14EE                        u5232 0E9D  
                      u5320 1516                        u5400 04D4                        u3545 1479  
                      u3721 0813                        u4441 0ABA                        u4601 0C64  
                      u5081 0636                        u5161 14ED                        u5305 0ED8  
                      u5321 1515                        u3730 0829                        u4610 0C6C  
                      u5090 066F                        u5330 1565                        u5410 0537  
                      u3731 0828                        u4435 0AAE                        u4611 0C6B  
                      u5091 066E                        u5331 1564                        u5411 0536  
                      _PEIE 005E                        u3740 1576                        u4460 0ACC  
                      u4700 08BB                        u5260 0EB4                        u5180 0E28  
                      u5340 0F30                        u5420 085F                        u5500 0D61  
                      u3741 1575                        u4461 0ACB                        u4701 08BA  
                      u5261 0EB3                        u5245 0E9F                        u5181 0E27  
                      u5341 0F2F                        u5421 085E                        u5501 0D60  
                      u3750 13C2                        u3910 1410                        u4470 0AD0  
                      u4390 0A79                        u4630 0C88                        u4710 08C7  
                      u5270 0EBE                        u5190 0E41                        u5350 0F67  
                      u5430 0A0E                        u5510 172D                        u3751 13C1  
                      u3911 140F                        u4471 0ACF                        u4455 0AC0  
                      u4631 0C87                        u4711 08C6                        u5175 1635  
                      u5271 0EBD                        u5255 0EA7                        u5191 0E40  
                      u5351 0F66                        u5415 0533                        u5431 0A0D  
                      u5511 172C                        u3920 141D                        u4480 0AE1  
                      u4640 0C90                        u5360 0F9E                        u5440 0A27  
                      u5600 03B4                        u5520 028A                        u3921 141C  
                      u4641 0C8F                        u4625 0C78                        u5281 0EC7  
                      u5361 0F9D                        u5441 0A26                        u5505 0D5D  
                      u5601 03B3                        u5521 0289                        u4490 0AEE  
                      u4730 08DB                        u5282 0ECE                        u5370 099A  
                      u5450 0A4C                        u5610 03BA                        u5530 02A0  
                      u4731 08DA                        u5371 0999                        u5451 0A4B  
                      u5435 0A0A                        u5611 03B9                        _RCIE 0465  
                      u4660 0CAC                        u4580 0C35                        u4740 08E7  
                      u4900 17B9                        u5380 09B2                        u5460 0A68  
                      u5620 03C5                        u5540 031C                        _RCIF 0065  
                      u4485 0ADD                        u4661 0CAB                        u4581 0C34  
                      u4741 08E6                        u4725 08CC                        u4901 17B8  
                      u5381 09B1                        u5461 0A67                        u5445 0A23  
                      u5621 03C4                        u5605 03B0                        u5541 031B  
                      u4670 0CB2                        u4590 0C4A                        u4910 17EE  
                      u5390 09D1                        u5470 0BA8                        u5630 03D2  
                      u5550 0336                        u4655 0C9D                        u4911 17ED  
                      u5295 0ED0                        u5391 09D0                        u5375 0996  
                      u5631 03D1                        u5551 0335                        u4760 08FB  
                      u4920 091E                        u5480 0C15                        u5640 03E6  
                      u5560 0350                        u4761 08FA                        u4745 08E3  
                      u4921 091D                        u5465 0A64                        u5481 0C14  
                      u5641 03E5                        u5561 034F                        u5545 0318  
                      u4770 0901                        u4690 08AE                        u4930 0943  
                      u5490 0CE6                        u5650 03F5                        u5570 035F  
                      u4595 0C46                        u4755 08EF                        u4691 08AD  
                      u4915 17EA                        u4931 0942                        u5707 0F18  
                      u5395 09CD                        u5651 03F4                        u5635 03CE  
                      u5571 035E                        u5555 0332                        u3980 14C0  
                      u4940 0020                        u5660 049F                        u5580 037D  
                      u3981 14BF                        u4925 091A                        u4941 001F  
                      u5717 0F42                        u5485 0C11                        u5645 03E2  
                      u5581 037C                        u5565 034C                        u4950 0029  
                      u5590 038C                        u4951 0028                        u5727 0F79  
                      u5655 03F1                        u5591 038B                        u5575 035B  
                      u4960 0076                        u4961 0075                        u5737 0FB0  
                      u5585 0379                        u4970 007F                        _OERR 00C1  
                      u3995 14C7                        u4971 007E                        u5747 0FDF  
                      u5595 0388                        u4980 00CC                        u5757 17D7  
                      u4981 00CB                        u5677 0416                        u4990 00D5  
                      u5767 139E                        u4991 00D4                        u5687 0465  
                      u5777 13D8                        u5697 0482                        u5787 13F1  
                      u5797 1684                        _TMR0 0001                  _ChargeMode 171A  
                      _SPEN 00C7                        _TXIE 0464                        _WREN 0C62  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
       __size_of_ADCconvert 0263                        _Menu 0802      __end_of_lcd_write_data 13A3  
                      abs@v 0026                        _isr1 0D6E                        _main 0278  
              ___ftpack@arg 0020                        _init 15C1                ___ftpack@exp 0023  
                      btemp 007E              _CenterReleased 0381                        start 0012  
              ___ftmul@cntr 004A                ___ftmul@sign 004B               ??_ReadButtons 0073  
          ??_robotTurnSpeed 005D                ___fttol@exp1 0035                       ??_abs 0028  
              ___fttol@lval 0031       readAvgDistance@tempIR 0034                       ?_Menu 0072  
                     l11000 0943                       l11002 0962                       l11010 006D  
                     l11020 00D5                       l11012 0076                       l11004 0015  
                     l11100 0723                       l11030 0178                       l11022 0119  
                     l11014 007F                       l11006 0020                       l11102 0728  
                     l11110 14FB                       l10400 07D6                       l11040 021B  
                     l11032 0181                       l11024 0122                       l11016 00C3  
                     l11008 0029                       l11112 1501                       l11104 14E3  
                     l11120 1594                       l11200 153B                       l10410 07E5  
                     l10402 07D9                       l11042 0224                       l11034 01C5  
                     l11026 012B                       l11018 00CC                       l11050 0637  
                     l11114 1509                       l11106 14E5                       l11130 15B4  
                     l11122 159A                       l11202 153C                       l11210 1490  
                     l10420 07F2                       l10412 07E8                       l10404 07E1  
                     l11044 022D                       l11036 01CE                       l11028 016F  
                     l11060 0667                       l11052 063E                       l11116 150A  
                     l11108 14EF                       l11132 15BA                       l11124 159E  
                     l11140 0E28                       l11204 154C                       l11220 149E  
                     l11212 1493                       l11300 15EE                       l10422 07F3  
                     l10414 07EB                       l10406 07E2                       l10430 0810  
                     l11038 01D7                       l11070 067C                       l11062 066B  
                     l11054 0649                       l11046 062C                       l11118 150E  
                     l11126 15A4                       l11134 1620                       l11150 0E49  
                     l11142 0E2F                       l11206 1555                       l11222 14A4  
                     l11214 1494                       l11230 0F12                       l11310 09A9  
                     l11302 0983                       l10280 1463                       l10424 07F4  
                     l10416 07EE                       l10408 07E4                       l10440 0831  
                     l10432 0814                       l10272 141F                       l10520 1414  
                     l10600 16D4                       l11080 06A5                       l11072 0683  
                     l11064 066F                       l11056 064A                       l11048 0631  
                     l11128 15AC                       l11136 1654                       l11160 0E84  
                     l11152 0E76                       l11144 0E30                       l11224 14AA  
                     l11216 1497                       l11208 148C                       l11240 0F47  
                     l11232 0F1D                       l11312 09B2                       l11304 098D  
                     l11320 04E3                       l11400 0A15                       l10282 1466  
                     l10418 07EF                       l10442 0833                       l10434 081A  
                     l10426 0805                       l10450 156A                       l10274 1421  
                     l10522 1415                       l10514 140A                       l10610 16F2  
                     l10602 16DC                       l11090 06C3                       l11082 06AC  
                     l11074 0684                       l11066 0673                       l11058 065F  
                     l11170 0EAE                       l11162 0E89                       l11154 0E77  
                     l11146 0E41                       l11138 0E15                       l11226 14B0  
                     l11218 1498                       l11250 0F7E                       l11242 0F53  
                     l11234 0F29                       l11314 09C4                       l11306 099B  
                     l11330 0537                       l11322 04E9                       l11410 0A4D  
                     l11402 0A27                       l10284 146F                       l10436 0829  
                     l10428 0808                       l10444 0834                       l10460 1592  
                     l10452 156C                       l10524 141D                       l10516 1410  
                     l10620 1719                       l10612 16FC                       l10604 16E0  
                     l10700 0A8A                       l11092 06F7                       l11084 06B2  
                     l11076 06A0                       l11068 0679                       l11180 0ED7  
                     l11172 0EB5                       l11164 0E8D                       l11156 0E78  
                     l11148 0E48                       l11260 0FB5                       l11252 0F8A  
                     l11236 0F30                       l11244 0F60                       l11228 0F06  
                     l11316 09D2                       l11308 099C                       l11340 05A5  
                     l11332 054A                       l11324 0511                       l11412 0A53  
                     l11404 0A3C                       l11420 0B88                       l11500 028A  
                     l10286 1482                       l10438 082D                       l10446 0846  
                     l10454 1577                       l10470 13C9                       l10462 13B9  
                     l10526 141F                       l10518 1412                       l10614 1703  
                     l10606 16E7                       l10710 0ABD                       l10702 0A97  
                     l11094 06FE                       l11086 06B9                       l11078 06A1  
                     l11182 0EDF                       l11174 0EBA                       l11166 0E9E  
                     l11158 0E7E                       l11190 1516                       l11262 0FC1  
                     l11246 0F67                       l11254 0F97                       l11238 0F3C  
                     l11270 13F4                       l11350 05E4                       l11342 05B1  
                     l11334 055D                       l11326 0522                       l11318 04CA  
                     l11414 0A5B                       l11406 0A48                       l11430 0BAC  
                     l11422 0B90                       l11510 02A0                       l11502 028B  
                     l10288 148B                       l10448 0848                       l10456 1585  
                     l10464 13BB                       l10528 1422                       l10616 170A  
                     l10608 16EC                       l10720 0AEE                       l10712 0AC8  
                     l10704 0A9F                       l10800 0CA7                       l11096 0703  
                     l11088 06BE                       l11184 0EE6                       l11176 0EBE  
                     l11168 0EA6                       l11192 151F                       l11264 0FCD  
                     l11256 0F9E                       l11248 0F73                       l11272 1402  
                     l11280 15C6                       l11352 05F0                       l11344 05BC  
                     l11336 0563                       l11328 0528                       l11360 061B  
                     l11408 0A4C                       l11416 0A69                       l11432 0BB5  
                     l11424 0B9C                       l11440 0BDF                       l11520 02D9  
                     l11512 02AB                       l11504 0291                       l10458 1591  
                     l10466 13C3                       l10570 14DB                       l10562 14B7  
                     l10618 1712                       l10714 0AD0                       l10706 0AA3  
                     l10802 0CAE                       l11098 070F                       l11186 0F02  
                     l11178 0ECF                       l11194 153A                       l11266 0FD3  
                     l11258 0FAA                       l11274 1409                       l11290 15DD  
                     l11282 15CE                       l11354 05FC                       l11346 05CD  
                     l11338 057A                       l11370 0860                       l11362 0849  
                     l11418 0A72                       l11434 0BC0                       l11442 0C16  
                     l11426 0BA2                       l11450 0CE0                       l11530 030D  
                     l11522 02E9                       l11514 02AE                       l11506 0296  
                     l10468 13C7                       l10572 14E2                       l10564 14BC  
                     l10580 176E                       l10716 0AD8                       l10708 0AAD  
                     l10804 0CB2                       l11188 150F                       l11196 137B  
                     l11268 0FD9                       l11292 15E2                       l11284 15D0  
                     l11276 15C1                       l11356 0607                       l11348 05D3  
                     l11380 0889                       l11372 086B                       l11364 084E  
                     l11436 0BCD                       l11428 0BA8                       l11460 0D0B  
                     l11452 0CE6                       l11444 0CC8                       l11540 0341  
                     l11532 030F                       l11524 02F9                       l11516 02B4  
                     l11508 029C                       l10566 14C0                       l10590 1797  
                     l10582 1775                       l10574 1760                       l10718 0AEA  
                     l10806 0CBE                       l10830 08C1                       l10822 08A7  
                     l11198 137C                       l11294 15E7                       l11286 15D4  
                     l11278 15C2                       l11358 061A                       l11382 088D  
                     l11374 0879                       l11390 0893                       l11366 085B  
                     l11438 0BD9                       l11462 0D17                       l11454 0CEA  
                     l11446 0CCC                       l11470 171A                       l11550 037D  
                     l11542 0350                       l11534 031C                       l11526 02FE  
                     l11518 02C3                       l10568 14CD                       l10592 1799  
                     l10584 177A                       l10576 1764                       l10808 0CC7  
                     l10840 08DD                       l10832 08C7                       l10824 08AE  
                     l11296 15EC                       l11288 15D8                       l11384 088E  
                     l11376 087B                       l11368 085F                       l11392 09F9  
                     l11464 0D25                       l11456 0CF3                       l11448 0CDA  
                     l11480 173D                       l11472 1722                       l11560 03B4  
                     l11552 038C                       l11544 035F                       l11536 0327  
                     l11528 030B                       l10594 17A0                       l10586 1780  
                     l10578 176A                       l10770 0C3E                       l10850 0901  
                     l10842 08E7                       l10834 08CB                       l10826 08B7  
                     l10930 1670                       l11298 15ED                       l11386 0890  
                     l11378 0887                       l11394 0A01                       l11458 0CFE  
                     l11466 0D2B                       l11482 1743                       l11490 174C  
                     l11474 1729                       l11570 03D7                       l11562 03BA  
                     l11554 039D                       l11546 0369                       l11538 0336  
                     l10588 1791                       l10596 17A8                       l10692 0A73  
                     l10780 0C5F                       l10772 0C3F                       l10852 0907  
                     l10844 08EE                       l10836 08D2                       l10828 08BB  
                     l10932 1671                       l10924 1658                       l10940 13DE  
                     l11388 0892                       l11396 0A0F                       l11468 0D62  
                     l11484 1744                       l11476 172D                       l11580 0452  
                     l11572 03E6                       l11564 03BF                       l11556 03A2  
                     l11548 036E                       l11492 0278                       l10598 17AF  
                     l10694 0A79                       l10790 0C77                       l10782 0C61  
                     l10774 0C51                       l10766 0C22                       l10854 090E  
                     l10846 08F5                       l10838 08D7                       l10926 166D  
                     l10934 1682                       l10942 13E1                       l10950 13CD  
                     l11398 0A10                       l11486 1748                       l11478 172E  
                     l11582 045D                       l11574 03F7                       l11566 03C5  
                     l11558 03A5                       l11590 0499                       l11494 027E  
                     l10696 0A81                       l10784 0C65                       l10792 0C8A  
                     l10776 0C52                       l10768 0C35                       l10848 08FD  
                     l10936 1686                       l10928 166F                       l10944 13E5  
                     l10952 13D0                       l10960 1396                       l11488 174B  
                     l11592 04A1                       l11584 046C                       l11576 040E  
                     l11568 03D2                       l11496 0280                       l10698 0A88  
                     l10794 0C90                       l10786 0C6C                       l10778 0C58  
                     l10938 168F                       l10946 13E9                       l10954 13D2  
                     l10962 1398                       l10970 17B4                       l11594 04A8  
                     l11586 047A                       l11578 041D                       l11498 0286  
                     l10796 0C99                       l10788 0C75                       l10948 13ED  
                     l10956 13D3                       l10964 1399                       l10980 17CB  
                     l10972 17B9                       l11588 0489                       l11596 04A9  
                     l10798 0C9B                       l10958 1393                       l10966 1423  
                     l10990 17FA                       l10982 17D3                       l10974 17C0  
                     l11598 04BF                       l10992 17FB                       l10984 17F0  
                     l10976 17C7                       l10968 17B0                       l10994 17FC  
                     l10986 17F6                       l10978 17CA                       l10988 17F9  
                     l10996 090F                       l10998 091E        __size_of_calibrateIR 005E  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
                     _EEADR 010D                       STR_10 07C2                       STR_11 07D2  
                     STR_12 07C6                       STR_13 0763                       STR_14 0753  
                     STR_15 07BA                       STR_16 07AE                       STR_17 07BE  
                     STR_18 0743                       STR_19 0770             __end_of___awmod 090F  
                     _CARRY 0018             __end_of___ftmul 0F03             __end_of___fttol 0CC8  
           __end_of___lwdiv 17B0             __end_of___lwmod 171A                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074             __end_of_scan360 0A73               ___awtoft@sign 003B  
             ___ftpack@sign 0024                       _total 00C2              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00D8             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0729            __end_of_Debounce 0B88          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072                __end_of_Menu 0849  
__size_of_lcd_write_control 0014            _shortMenuStrings 00E1                __end_of_isr1 0E15  
              __end_of_main 04CA                __end_of_init 15F0             rotate@direction 0025  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
                    ??_isr1 0078                      ??_main 0062               ___fttol@sign1 0030  
                    ??_init 0023         __end_of_ReadButtons 1620               Menu@BTN_input 0020  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of___awtoft 153B            __end_of___ftpack 0AF0  
          __end_of_adc_read 148C                 ?_ChargeMode 0072                      i1l2220 0E09  
                    i1l2221 0E08                      i1l2222 0E09                      i1l2214 0DC1  
                    i1l2215 0D95                      i1l2216 0DB2                      i1l2217 0DC0  
                    i1l2218 0DE3                      i1l2219 0DE2                      i1l4500 0B81  
                    i1l4501 0B87                      i1l4502 0B87                      i1l4510 161D  
                    i1l4505 15FD                      i1l4506 161F                      i1l4507 1605  
                    i1l4508 160D                      i1l4509 1615                      i1l4490 0B28  
                    i1l4491 0B27                      i1l4492 0B2C                      i1l4493 0B46  
                    i1l4494 0B45                      i1l4495 0B4A                      i1l4487 0B0A  
                    i1l4496 0B64                      i1l4488 0B09                      i1l4497 0B63  
                    i1l4489 0B0E                      i1l4498 0B68                      i1l4499 0B82  
                    i1l7500 16CC                      i1l7501 16A6                      i1l7502 169A  
                    i1l7503 16AB                      i1l7504 16AC                      i1l7505 16BD  
                    i1l7506 16CB                      i1l7507 16D3                      u360_20 0DAC  
                    u360_21 0DAB                      u361_20 0DB7                      u361_21 0DB6  
                    u370_20 1611                      u362_20 0DC7                      u370_21 1610  
                    u362_21 0DC6                      u371_20 1619                      u363_20 0DDD  
                    u371_21 1618                      u363_21 0DDC                      u380_20 0B20  
                    u364_20 0DE8                      u380_21 0B1F                      u364_21 0DE7  
                    u381_20 0B24                      u365_20 0DEE                      u381_21 0B23  
                    u365_21 0DED                      u390_20 0B7E                      u382_20 0B32  
                    u366_20 0E06                      u358_20 0D72                      u390_21 0B7D  
                    u382_21 0B31                      u366_21 0E05                      u358_21 0D71  
               _DistLowByte 00CB                      u383_20 0B3E                      u367_20 15F9  
                    u359_20 0D93                      u383_21 0B3D                      u367_21 15F8  
                    u359_21 0D92                      u384_20 0B42                      u376_20 0AF6  
                    u368_20 1601                      u384_21 0B41                      u376_21 0AF5  
                    u368_21 1600                      u385_20 0B50                      u377_20 0B02  
                    u369_20 1609                      u385_21 0B4F                      u377_21 0B01  
                    u369_21 1608                      u386_20 0B5C                      u378_20 0B06  
                    u386_21 0B5B                      u378_21 0B05                      u387_20 0B60  
                    u379_20 0B14                      u387_21 0B5F                      u379_21 0B13  
                    u388_20 0B6E                      u484_20 1696                      u388_21 0B6D  
                    u484_21 1695                      u389_20 0B7A                      u389_21 0B79  
                    u485_25 169B                      u486_20 16AA                      u486_21 16A9  
                    u487_20 16B6                      u487_21 16B5                      u487_25 16B2  
                    u488_25 16BE                      u489_20 16CA                      u489_21 16C9  
                    _TMR0IE 005D                      _TMR0IF 005A                scan360@steps 005F  
                    _SSPCON 0014                      _SSPBUF 0013                  _UpReleased 038C  
          __end_of_lcd_init 14B7                      _adcVal 00B6             _UpDebounceCount 00D0  
           RobotDrive@speed 0022                  _RobotDrive 1594                      ___wmul 14B7  
                 ??___awmod 0024                _turnhighByte 00D7                   ??___ftmul 0042  
              ??_ADCconvert 002E                   ??___fttol 002C                   ??___lwdiv 002A  
                 ??___lwmod 0032            __end_of_init_adc 13F4              ??_readDistance 002A  
           ___awmod@divisor 0020    __end_of_lcd_write_string 1567             ___awmod@counter 0025  
                    _rotate 17B0                      _rxfifo 00A0                      clrloop 1371  
                    _txfifo 01A0                      _rxiptr 00D4                      _rxoptr 00D5  
               _BumpSensors 00C8                      _txiptr 00D9                   ??_scan360 005B  
     ___ftmul@f3_as_product 0047                      _txoptr 00DA            __end_of_ser_init 0800  
          __end_of_ser_isrx 1423           __end_ofi1___lwmod 16D4                      saved_w 007E  
             main@shortwall 0069                _AngleLowByte 00C7                 _LeftPressed 0384  
    RobotDrive@speedlowByte 0025                   ??_sprintf 0039                 _DownPressed 0382  
         lcd_write_string@s 0027          __end_of_ADCconvert 0278                  ___awtoft@c 0036  
                ___ftmul@f1 003C                  ___ftmul@f2 003F                  ___fttol@f1 0028  
            __pcstackCOMMON 0072                __pidataBANK1 1383                 _ReadButtons 15F0  
       __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023                   ?_Debounce 0072  
             _buttonPressed 007D                  __pbssBANK1 00A0                  __pbssBANK3 0190  
         _DownDebounceCount 00CC              main@direction1 0065          _RightDebounceCount 00CF  
                __pmaintext 0278                 ?_RobotDrive 0022                     ?___wmul 0020  
                __pintentry 0004                _DistHighByte 00CA                  __ptext1100 0C22  
                __ptext1101 0A73                  __ptext1110 1463                  __ptext1102 16D4  
                __ptext1111 0D6E                  __ptext1103 1760                  __ptext1112 15F0  
                __ptext1104 14B7                  __ptext1113 1690                  __ptext1105 140A  
     __end_of_UpdateDisplay 0629                  __ptext1114 0AF0                  __ptext1106 13B6  
                __ptext1115 0000                  __ptext1107 1567                  __ptext1108 0802  
                __ptext1109 07D6                  __ptext1080 13F4                  __ptext1072 171A  
                __ptext1081 0F03                  __ptext1073 0CC8                  __ptext1090 0629  
                __ptext1082 148C                  __ptext1074 0B88                  __ptext1091 0015  
                __ptext1083 153B                  __ptext1075 09F9                  __ptext1092 090F  
                __ptext1084 1378                  __ptext1076 0849                  __ptext1093 17B0  
                __ptext1085 150F                  __ptext1077 04CA                  __ptext1094 1423  
                __ptext1086 0E15                  __ptext1078 0983                  __ptext1095 1390  
                __ptext1087 1620                  __ptext1079 15C1                  __ptext1096 13CA  
                __ptext1088 1594                  __ptext1097 13DE                  __ptext1089 14E3  
                __ptext1098 1655                  __ptext1099 08A7          __size_of_ser_getch 002C  
                 ?___awtoft 0036                   ?___ftpack 0020                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 002D          __size_of_robo_init 0019  
                   i1l10320 0D73                     i1l10330 0DAC                     i1l10322 0D7D  
                   i1l10500 0B56                     i1l10340 0DC7                     i1l10332 0DAD  
                   i1l10324 0D7E                     i1l10316 0D6E                     i1l10510 0B7A  
                   i1l10502 0B5C                     i1l10350 0DE8                     i1l10342 0DD1  
                   i1l10334 0DB2                     i1l10326 0D93                     i1l10318 0D72  
                   i1l10512 0B7E                     i1l10504 0B60                     i1l10360 0E06  
                   i1l10352 0DEE                     i1l10344 0DD7                     i1l10336 0DB7  
                   i1l10328 0D95                     i1l10506 0B6E                     i1l10370 15FC  
                   i1l10362 15F0                     i1l10354 0DF6                     i1l10346 0DDD  
                   i1l10338 0DC1                     i1l10508 0B74                     i1l10380 160A  
                   i1l10372 1601                     i1l10364 15F5                     i1l10356 0DFC  
                   i1l10348 0DE3                     i1l10390 1619                     i1l10382 160C  
                   i1l10374 1602                     i1l10366 15F9                     i1l10358 0E00  
                   i1l10480 0B06                     i1l10472 0AF0                     i1l10392 161A  
                   i1l10384 1611                     i1l10376 1604                     i1l10368 15FA  
                   i1l10490 0B32                     i1l10482 0B14                     i1l10474 0AF6  
                   i1l10394 161C                     i1l10386 1612                     i1l10378 1609  
                   i1l10492 0B38                     i1l10484 0B1A                     i1l10476 0AFC  
                   i1l10396 161D                     i1l10388 1614                     i1l10494 0B3E  
                   i1l10486 0B20                     i1l10478 0B02                     i1l10910 16A6  
                   i1l10902 1690                     i1l10398 161F                     i1l10496 0B42  
                   i1l10488 0B24                     i1l10912 16AC                     i1l10904 1696  
                   i1l10920 16CC                     i1l10498 0B50                     i1l10922 16D3  
                   i1l10914 16B6                     i1l10906 169A                     i1l10916 16BD  
                   i1l10908 16A1                     i1l10918 16C4          __size_of_robotTurn 0074  
                ??_Debounce 0072            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094        __end_of_readDistance 140A                   ?_init_adc 0072  
        main@shortwall_3021 006C                   ?_ser_init 0072                   ?_ser_isrx 0072  
             ??_calibrateIR 0059                     ___awmod 08A7             __size_of___wmul 002C  
                   ___ftmul 0E15                     ___fttol 0C22                     ___lwdiv 1760  
                   ___lwmod 16D4   __size_of_adc_read_channel 003B                  ??___awtoft 0039  
                ??___ftpack 0025                  ??_adc_read 0022             __size_of_rotate 0050  
                   _scan360 09F9                     _dpowers 0739                __size_of_abs 0035  
          ___awmod@dividend 0022                     _lowByte 00D3                     _ser_tmp 00D6  
                   _sprintf 0629                  ??_lcd_init 0023         __size_of_RobotDrive 002D  
      end_of_initialization 145F               _AngleHighByte 00C6                ??_ChargeMode 0059  
        robot_read@readType 0024           __end_of_ser_getch 150F                     init_ram 13A7  
                ??_init_adc 0020     __size_of_robotMoveSpeed 00A6           __end_of_ser_putch 1594  
   RobotDrive@speedhighByte 0026           __end_of_robo_init 143C                _LeftReleased 0385  
         __end_of_robotTurn 0983                  ??_ser_init 0020                  ??_ser_isrx 0020  
                   rotate@i 0028                _DownReleased 0383               _RightReleased 038A  
  __size_of_readAvgDistance 0076                  _robot_read 0F03           ?_lcd_write_string 0027  
        __end_of_ChargeMode 1760         __end_of_calibrateIR 08A7          ??_lcd_write_string 0029  
               AT25256A@CS0 0038                 AT25256A@CS1 0039           adc_read@adc_value 0024  
   __size_of_robotTurnSpeed 009A                   i1___lwmod 1690                  _totalSteps 00C4  
                main@choice 006B               ?_spi_transfer 0072                 ___ftmul@exp 0046  
             _CenterPressed 0380                ?_ReadButtons 0072              __end_of___wmul 14E3  
         i1___lwmod@divisor 0072           i1___lwmod@counter 0077              __end_of_rotate 1800  
       start_initialization 143C      UpdateDisplay@LCDOutput 0049                 __end_of_abs 1655  
     __size_of_readDistance 0016           __size_of_Debounce 0098                  ?i1___lwmod 0072  
        _TotalDistTravelled 00B4              ??_spi_transfer 0020       lcd_set_cursor@address 0023  
                 _UpPressed 038B                ??_RobotDrive 0024              _RTC_FLAG_250MS 0387  
            _RTC_FLAG_500MS 0388                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 0849                 __pdataBANK1 00DB            _adc_read_channel 1655  
               ?_robot_read 0072                    ??_rotate 0026                _readDistance 13F4  
         __size_of___awtoft 002C           __size_of___ftpack 007D           __size_of_adc_read 0029  
               __pbssCOMMON 007D           ??_readAvgDistance 0030               __pcstackBANK0 0020  
    robotMoveSpeed@distance 0059          __end_of_RobotDrive 15C1           __size_of_lcd_init 002B  
            _robotMoveSpeed 0CC8                 sprintf@_val 003F                 sprintf@flag 003D  
               sprintf@prec 003E                _current_step 00E7            readAvgDistance@i 0036  
          readAvgDistance@j 0032           __size_of_init_adc 0016            ___lwdiv@dividend 0028  
               _angleTurned 00B8                    ?___awmod 0020                    ?___ftmul 003C  
         __size_of_ser_init 002A                    ?___fttol 0028           __size_of_ser_isrx 0019  
                  ?___lwdiv 0026                    ?___lwmod 002E                   __pstrings 0729  
                 _dist_high 00BC                    ?_scan360 0059         readDistance@readVal 002C  
            _robotTurnSpeed 0B88         robotTurnSpeed@angle 0059         robotTurnSpeed@temp1 0060  
       robotTurnSpeed@speed 005B                  ser_getch@c 0021            ___lwdiv@quotient 002B  
               ??i1___lwmod 0076                    ?_sprintf 0034      __end_of_robotMoveSpeed 0D6E  
   __size_of_lcd_set_cursor 000B           interrupt_function 0004      __size_of_UpdateDisplay 015F  
            ___wmul@product 0024         __size_of_robot_read 00FD                  ser_putch@c 0021  
                 _ser_getch 14E3                   _ser_putch 1567                   _robo_init 1423  
                 _robotTurn 090F                _RightPressed 0389        __size_of_ReadButtons 0030  
      __end_of_spi_transfer 13CA      __end_of_robotTurnSpeed 0C22                 __stringbase 0738  
         ___wmul@multiplier 0020            spi_transfer@data 0022            spi_transfer@temp 0021  
                  _Debounce 0AF0           _LeftDebounceCount 00CD             ?_robotMoveSpeed 0059  
 __size_of_lcd_write_string 002C          scan360@lowestSteps 005D     __size_of_lcd_write_data 0013  
                ?_ser_getch 0072                  ?_ser_putch 0072     adc_read_channel@channel 0027  
                ?_robo_init 0072                   init_fetch 13A3                  ?_robotTurn 0022  
                _ADCconvert 0015            __size_of___awmod 0068            __size_of___ftmul 00EE  
          __size_of___fttol 00A6            __size_of___lwdiv 0050            __size_of___lwmod 0046  
                  ___awtoft 150F                    ___ftpack 0A73               _UpdateDisplay 04CA  
                  _adc_read 1463             ?_robotTurnSpeed 0059                 _currentMenu 00D1  
          __size_of_scan360 007A             ___lwdiv@divisor 0026             ___lwdiv@counter 002D  
               _menuStrings 00DB                    _highByte 00D2                    _lcd_init 148C  
                  _dist_low 00BE            __size_of_sprintf 0100    __end_of_adc_read_channel 1690  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 13DE  
             __size_of_isr1 00A7               __size_of_main 0252               __size_of_init 002F  
                  clear_ram 1370                    _ser_init 07D6                    _ser_isrx 140A  
                  main@RT2A 0067                    main@RT2P 006E             _readAvgDistance 0983  
              ?_calibrateIR 0072              ?_UpdateDisplay 0072                ??_robot_read 0022  
       _CenterDebounceCount 00C9                _RTC_FLAG_1MS 0386          UpdateDisplay@F1241 0190  
                  intlevel1 0000              _lcd_set_cursor 1378                   sprintf@ap 003C  
                 sprintf@sp 0043              robotTurn@angle 0022            ___lwmod@dividend 0030  
        __end_of_robot_read 1000                   stringcode 0733                 ??_ser_getch 0020  
               ??_ser_putch 0020               _distTravelled 00BA                 ??_robo_init 0022  
     __size_of_spi_transfer 0014                 ??_robotTurn 0024                 ?_ADCconvert 0072  
         _lcd_write_control 13CA            scan360@lowestVal 005B          ?_lcd_write_control 0072  
                _OPTION_REG 0081                    sprintf@c 0044                    sprintf@f 0034  
       robotMoveSpeed@temp1 0060         robotMoveSpeed@speed 005B             ___lwmod@divisor 002E  
                _ROBOTerror 00CE             ___lwmod@counter 0033                    stringdir 0733  
                  stringtab 0729         ??_lcd_write_control 0020      __end_of_lcd_set_cursor 1383  
          _lcd_write_string 153B                _spi_transfer 13B6                 _RTC_Counter 00B2  
   __end_of_readAvgDistance 09F9              _lcd_write_data 1390  
