

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Apr 27 16:05:05 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_distance
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMove
    55                           	FNCALL	_main,_robotTurn
    56                           	FNCALL	_main,_ChargeMode
    57                           	FNCALL	_scan360,_readAvgDistance
    58                           	FNCALL	_scan360,_rotate
    59                           	FNCALL	_scan360,_UpdateDisplay
    60                           	FNCALL	_ChargeMode,_ser_putch
    61                           	FNCALL	_ChargeMode,_UpdateDisplay
    62                           	FNCALL	_calibrateIR,_rotate
    63                           	FNCALL	_calibrateIR,_UpdateDisplay
    64                           	FNCALL	_readAvgDistance,_readDistance
    65                           	FNCALL	_readAvgDistance,___lwdiv
    66                           	FNCALL	_readAvgDistance,_ADCconvert
    67                           	FNCALL	_UpdateDisplay,_lcd_write_control
    68                           	FNCALL	_UpdateDisplay,_sprintf
    69                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    70                           	FNCALL	_UpdateDisplay,_lcd_write_string
    71                           	FNCALL	_UpdateDisplay,___awmod
    72                           	FNCALL	_init,_init_adc
    73                           	FNCALL	_init,_lcd_init
    74                           	FNCALL	_init,_ser_init
    75                           	FNCALL	_init,_robo_init
    76                           	FNCALL	_readDistance,_adc_read_channel
    77                           	FNCALL	_robot_distance,_robot_read
    78                           	FNCALL	_lcd_init,_lcd_write_control
    79                           	FNCALL	_lcd_write_string,_lcd_write_data
    80                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    81                           	FNCALL	_robot_read,_ser_putch
    82                           	FNCALL	_sprintf,___lwdiv
    83                           	FNCALL	_sprintf,___lwmod
    84                           	FNCALL	_ADCconvert,___wmul
    85                           	FNCALL	_ADCconvert,___lwdiv
    86                           	FNCALL	_robotTurn,_ser_putch
    87                           	FNCALL	_robotMove,_ser_putch
    88                           	FNCALL	_rotate,_spi_transfer
    89                           	FNCALL	_robo_init,_ser_putch
    90                           	FNCALL	_adc_read_channel,_adc_read
    91                           	FNROOT	_main
    92                           	FNCALL	_isr1,i1___lwmod
    93                           	FNCALL	_isr1,_ReadButtons
    94                           	FNCALL	_ReadButtons,_Debounce
    95                           	FNCALL	intlevel1,_isr1
    96                           	global	intlevel1
    97                           	FNROOT	intlevel1
    98                           	global	_menuStrings
    99                           	global	_shortMenuStrings
   100                           	global	_distTravelled
   101                           	global	_current_step
   102                           psect	idataBANK1,class=CODE,space=0,delta=2
   103                           global __pidataBANK1
   104  0954                     __pidataBANK1:
   105                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   106                           	line	32
   107                           
   108                           ;initializer for _menuStrings
   109  0954  3445               	retlw	(STR_1-__stringbase)&0ffh
   110  0955  343C               	retlw	(STR_2-__stringbase)&0ffh
   111  0956  3457               	retlw	(STR_3-__stringbase)&0ffh
   112  0957  3460               	retlw	(STR_4-__stringbase)&0ffh
   113  0958  344E               	retlw	(STR_5-__stringbase)&0ffh
   114  0959  3433               	retlw	(STR_6-__stringbase)&0ffh
   115                           	line	33
   116                           
   117                           ;initializer for _shortMenuStrings
   118  095A  3484               	retlw	(STR_7-__stringbase)&0ffh
   119  095B  3488               	retlw	(STR_8-__stringbase)&0ffh
   120  095C  3470               	retlw	(STR_9-__stringbase)&0ffh
   121  095D  347C               	retlw	(STR_10-__stringbase)&0ffh
   122  095E  348C               	retlw	(STR_11-__stringbase)&0ffh
   123  095F  3480               	retlw	(STR_12-__stringbase)&0ffh
   124                           	file	"E:\Aldnoah.Zero\Assignment3\robot.h"
   125                           	line	11
   126                           
   127                           ;initializer for _distTravelled
   128  0960  340B               	retlw	0Bh
   129  0961  3400               	retlw	0
   130                           
   131                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   132                           	line	30
   133                           
   134                           ;initializer for _current_step
   135  0962  343C               	retlw	03Ch
   136                           	global	_dpowers
   137                           psect	strings,class=STRING,delta=2
   138                           global __pstrings
   139  0700                     __pstrings:
   140                           ;	global	stringdir,stringtab,__stringbase
   141  0700                     stringtab:
   142                           ;	String table - string pointers are 1 byte each
   143  0700  1BFF               	btfsc	(btemp+1),7
   144  0701  2F0A               	ljmp	stringcode
   145  0702  1383               	bcf	status,7
   146  0703  187F               	btfsc	(btemp+1),0
   147  0704  1783               	bsf	status,7
   148  0705  0800               	movf	indf,w
   149  0706  0A84               	incf fsr
   150  0707  1903               skipnz
   151  0708  0AFF               incf btemp+1
   152  0709  0008               	return
   153  070A                     stringcode:stringdir:
      + 070A                     stringdir:	
   154  070A  3007               movlw high(stringdir)
   155  070B  008A               movwf pclath
   156  070C  0804               movf fsr,w
   157  070D  0A84               incf fsr
   158  070E  0782               	addwf pc
   159  070F                     __stringbase:
   160  070F  3400               	retlw	0
   161                           psect	strings
   162                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   163                           	line	350
   164  0710                     _dpowers:
   165  0710  3401               	retlw	01h
   166  0711  3400               	retlw	0
   167                           
   168  0712  340A               	retlw	0Ah
   169  0713  3400               	retlw	0
   170                           
   171  0714  3464               	retlw	064h
   172  0715  3400               	retlw	0
   173                           
   174  0716  34E8               	retlw	0E8h
   175  0717  3403               	retlw	03h
   176                           
   177  0718  3410               	retlw	010h
   178  0719  3427               	retlw	027h
   179                           
   180                           	global	_dpowers
   181                           	global	_RTC_Counter
   182                           	global	_adcVal
   183                           	global	_buttonPressed
   184                           	global	_txiptr
   185                           	global	_txoptr
   186                           	global	_RTC_FLAG_1MS
   187                           	global	UpdateDisplay@F1230
   188                           	global	_CenterPressed
   189                           	global	_CenterReleased
   190                           	global	_DownPressed
   191                           	global	_DownReleased
   192                           	global	_LeftPressed
   193                           	global	_LeftReleased
   194                           	global	_RTC_FLAG_10MS
   195                           	global	_RTC_FLAG_250MS
   196                           	global	_RTC_FLAG_500MS
   197                           	global	_RTC_FLAG_50MS
   198                           	global	_RightPressed
   199                           	global	_RightReleased
   200                           	global	_SER_RC_FLAG
   201                           	global	_UpPressed
   202                           	global	_UpReleased
   203                           	global	_rxfifo
   204                           	global	_txfifo
   205                           	global	_dist_high
   206                           	global	_dist_low
   207                           	global	_distance
   208                           	global	_pos
   209                           	global	_test
   210                           	global	_total
   211                           	global	_totalSteps
   212                           	global	_CenterDebounceCount
   213                           	global	_DistHighByte
   214                           	global	_DistLowByte
   215                           	global	_DownDebounceCount
   216                           	global	_LeftDebounceCount
   217                           	global	_RightDebounceCount
   218                           	global	_SCAN_FLAG
   219                           	global	_UpDebounceCount
   220                           	global	_currentMenu
   221                           	global	_current_direction
   222                           	global	_highByte
   223                           	global	_lowByte
   224                           	global	_rxiptr
   225                           	global	_rxoptr
   226                           	global	_ser_tmp
   227                           	global	_serialInput
   228                           	global	_turnhighByte
   229                           	global	_turnlowByte
   230                           	global	_ADCON0
   231  001F                     _ADCON0	set	31
   232                           	global	_ADRESH
   233  001E                     _ADRESH	set	30
   234                           	global	_PORTA
   235  0005                     _PORTA	set	5
   236                           	global	_PORTC
   237  0007                     _PORTC	set	7
   238                           	global	_PORTD
   239  0008                     _PORTD	set	8
   240                           	global	_PORTE
   241  0009                     _PORTE	set	9
   242                           	global	_RCREG
   243  001A                     _RCREG	set	26
   244                           	global	_SSPBUF
   245  0013                     _SSPBUF	set	19
   246                           	global	_SSPCON
   247  0014                     _SSPCON	set	20
   248                           	global	_TMR0
   249  0001                     _TMR0	set	1
   250                           	global	_TXREG
   251  0019                     _TXREG	set	25
   252                           	global	AT25256A@CS0
   253  0038                     AT25256A@CS0	set	56
   254                           	global	AT25256A@CS1
   255  0039                     AT25256A@CS1	set	57
   256                           	global	_CARRY
   257  0018                     _CARRY	set	24
   258                           	global	_CHS0
   259  00FB                     _CHS0	set	251
   260                           	global	_CHS1
   261  00FC                     _CHS1	set	252
   262                           	global	_CHS2
   263  00FD                     _CHS2	set	253
   264                           	global	_CREN
   265  00C4                     _CREN	set	196
   266                           	global	_GIE
   267  005F                     _GIE	set	95
   268                           	global	_GO
   269  00FA                     _GO	set	250
   270                           	global	_OERR
   271  00C1                     _OERR	set	193
   272                           	global	_PEIE
   273  005E                     _PEIE	set	94
   274                           	global	_RB0
   275  0030                     _RB0	set	48
   276                           	global	_RB1
   277  0031                     _RB1	set	49
   278                           	global	_RB2
   279  0032                     _RB2	set	50
   280                           	global	_RB3
   281  0033                     _RB3	set	51
   282                           	global	_RB4
   283  0034                     _RB4	set	52
   284                           	global	_RB5
   285  0035                     _RB5	set	53
   286                           	global	_RB6
   287  0036                     _RB6	set	54
   288                           	global	_RC0
   289  0038                     _RC0	set	56
   290                           	global	_RC1
   291  0039                     _RC1	set	57
   292                           	global	_RC2
   293  003A                     _RC2	set	58
   294                           	global	_RCIF
   295  0065                     _RCIF	set	101
   296                           	global	_RE0
   297  0048                     _RE0	set	72
   298                           	global	_RE1
   299  0049                     _RE1	set	73
   300                           	global	_RE2
   301  004A                     _RE2	set	74
   302                           	global	_RX9
   303  00C6                     _RX9	set	198
   304                           	global	_SPEN
   305  00C7                     _SPEN	set	199
   306                           	global	_SSPIF
   307  0063                     _SSPIF	set	99
   308                           	global	_TMR0IE
   309  005D                     _TMR0IE	set	93
   310                           	global	_TMR0IF
   311  005A                     _TMR0IF	set	90
   312                           	global	_TXIF
   313  0064                     _TXIF	set	100
   314                           	global	_ADCON1
   315  009F                     _ADCON1	set	159
   316                           	global	_ADRESL
   317  009E                     _ADRESL	set	158
   318                           	global	_OPTION_REG
   319  0081                     _OPTION_REG	set	129
   320                           	global	_SPBRG
   321  0099                     _SPBRG	set	153
   322                           	global	_SSPSTAT
   323  0094                     _SSPSTAT	set	148
   324                           	global	_TRISA
   325  0085                     _TRISA	set	133
   326                           	global	_TRISB
   327  0086                     _TRISB	set	134
   328                           	global	_TRISC
   329  0087                     _TRISC	set	135
   330                           	global	_TRISD
   331  0088                     _TRISD	set	136
   332                           	global	_TRISE
   333  0089                     _TRISE	set	137
   334                           	global	_BRGH
   335  04C2                     _BRGH	set	1218
   336                           	global	_RCIE
   337  0465                     _RCIE	set	1125
   338                           	global	_SYNC
   339  04C4                     _SYNC	set	1220
   340                           	global	_TX9
   341  04C6                     _TX9	set	1222
   342                           	global	_TXEN
   343  04C5                     _TXEN	set	1221
   344                           	global	_TXIE
   345  0464                     _TXIE	set	1124
   346                           	global	_EEADR
   347  010D                     _EEADR	set	269
   348                           	global	_EEDATA
   349  010C                     _EEDATA	set	268
   350                           	global	_EECON1
   351  018C                     _EECON1	set	396
   352                           	global	_EECON2
   353  018D                     _EECON2	set	397
   354                           	global	_RD
   355  0C60                     _RD	set	3168
   356                           	global	_WR
   357  0C61                     _WR	set	3169
   358                           	global	_WREN
   359  0C62                     _WREN	set	3170
   360                           	
   361  071A                     STR_18:	
   362  071A  3420               	retlw	32	;' '
   363  071B  3443               	retlw	67	;'C'
   364  071C  3468               	retlw	104	;'h'
   365  071D  3461               	retlw	97	;'a'
   366  071E  3472               	retlw	114	;'r'
   367  071F  3467               	retlw	103	;'g'
   368  0720  3469               	retlw	105	;'i'
   369  0721  346E               	retlw	110	;'n'
   370  0722  3467               	retlw	103	;'g'
   371  0723  3420               	retlw	32	;' '
   372  0724  344D               	retlw	77	;'M'
   373  0725  346F               	retlw	111	;'o'
   374  0726  3464               	retlw	100	;'d'
   375  0727  3465               	retlw	101	;'e'
   376  0728  3420               	retlw	32	;' '
   377  0729  3400               	retlw	0
   378                           psect	strings
   379                           	
   380  072A                     STR_13:	
   381  072A  3441               	retlw	65	;'A'
   382  072B  3444               	retlw	68	;'D'
   383  072C  3443               	retlw	67	;'C'
   384  072D  343A               	retlw	58	;':'
   385  072E  3425               	retlw	37	;'%'
   386  072F  3464               	retlw	100	;'d'
   387  0730  3420               	retlw	32	;' '
   388  0731  3444               	retlw	68	;'D'
   389  0732  3469               	retlw	105	;'i'
   390  0733  3473               	retlw	115	;'s'
   391  0734  3474               	retlw	116	;'t'
   392  0735  343A               	retlw	58	;':'
   393  0736  3425               	retlw	37	;'%'
   394  0737  3464               	retlw	100	;'d'
   395  0738  3400               	retlw	0
   396                           psect	strings
   397                           	
   398  0739                     STR_19:	
   399  0739  3420               	retlw	32	;' '
   400  073A  3420               	retlw	32	;' '
   401  073B  3445               	retlw	69	;'E'
   402  073C  3458               	retlw	88	;'X'
   403  073D  3449               	retlw	73	;'I'
   404  073E  3454               	retlw	84	;'T'
   405  073F  3420               	retlw	32	;' '
   406  0740  3420               	retlw	32	;' '
   407  0741  3400               	retlw	0
   408                           psect	strings
   409                           	
   410  0742                     STR_6:	
   411  0742  3420               	retlw	32	;' '
   412  0743  3443               	retlw	67	;'C'
   413  0744  3468               	retlw	104	;'h'
   414  0745  3461               	retlw	97	;'a'
   415  0746  3472               	retlw	114	;'r'
   416  0747  3467               	retlw	103	;'g'
   417  0748  3465               	retlw	101	;'e'
   418  0749  3420               	retlw	32	;' '
   419  074A  3400               	retlw	0
   420                           psect	strings
   421                           	
   422  074B                     STR_2:	
   423  074B  3453               	retlw	83	;'S'
   424  074C  3463               	retlw	99	;'c'
   425  074D  3461               	retlw	97	;'a'
   426  074E  346E               	retlw	110	;'n'
   427  074F  345F               	retlw	95	;'_'
   428  0750  3433               	retlw	51	;'3'
   429  0751  3436               	retlw	54	;'6'
   430  0752  3430               	retlw	48	;'0'
   431  0753  3400               	retlw	0
   432                           psect	strings
   433                           	
   434  0754                     STR_1:	
   435  0754  3443               	retlw	67	;'C'
   436  0755  3461               	retlw	97	;'a'
   437  0756  346C               	retlw	108	;'l'
   438  0757  3469               	retlw	105	;'i'
   439  0758  3462               	retlw	98	;'b'
   440  0759  345F               	retlw	95	;'_'
   441  075A  3449               	retlw	73	;'I'
   442  075B  3452               	retlw	82	;'R'
   443  075C  3400               	retlw	0
   444                           psect	strings
   445                           	
   446  075D                     STR_5:	
   447  075D  3446               	retlw	70	;'F'
   448  075E  346C               	retlw	108	;'l'
   449  075F  3477               	retlw	119	;'w'
   450  0760  345F               	retlw	95	;'_'
   451  0761  3457               	retlw	87	;'W'
   452  0762  3461               	retlw	97	;'a'
   453  0763  346C               	retlw	108	;'l'
   454  0764  346C               	retlw	108	;'l'
   455  0765  3400               	retlw	0
   456                           psect	strings
   457                           	
   458  0766                     STR_3:	
   459  0766  3444               	retlw	68	;'D'
   460  0767  3472               	retlw	114	;'r'
   461  0768  3469               	retlw	105	;'i'
   462  0769  3476               	retlw	118	;'v'
   463  076A  3465               	retlw	101	;'e'
   464  076B  345F               	retlw	95	;'_'
   465  076C  3432               	retlw	50	;'2'
   466  076D  346D               	retlw	109	;'m'
   467  076E  3400               	retlw	0
   468                           psect	strings
   469                           	
   470  076F                     STR_4:	
   471  076F  3444               	retlw	68	;'D'
   472  0770  3472               	retlw	114	;'r'
   473  0771  3469               	retlw	105	;'i'
   474  0772  3476               	retlw	118	;'v'
   475  0773  3465               	retlw	101	;'e'
   476  0774  345F               	retlw	95	;'_'
   477  0775  344C               	retlw	76	;'L'
   478  0776  3400               	retlw	0
   479                           psect	strings
   480                           	
   481  0777                     STR_16:	
   482  0777  3443               	retlw	67	;'C'
   483  0778  344F               	retlw	79	;'O'
   484  0779  344E               	retlw	78	;'N'
   485  077A  3446               	retlw	70	;'F'
   486  077B  3449               	retlw	73	;'I'
   487  077C  3452               	retlw	82	;'R'
   488  077D  344D               	retlw	77	;'M'
   489  077E  3400               	retlw	0
   490                           psect	strings
   491                           	
   492  077F                     STR_9:	
   493  077F  3444               	retlw	68	;'D'
   494  0780  3472               	retlw	114	;'r'
   495  0781  3432               	retlw	50	;'2'
   496  0782  3400               	retlw	0
   497                           psect	strings
   498                           	
   499  0783                     STR_15:	
   500  0783  343C               	retlw	60	;'<'
   501  0784  343C               	retlw	60	;'<'
   502  0785  343C               	retlw	60	;'<'
   503  0786  3400               	retlw	0
   504                           psect	strings
   505                           	
   506  0787                     STR_17:	
   507  0787  343E               	retlw	62	;'>'
   508  0788  343E               	retlw	62	;'>'
   509  0789  343E               	retlw	62	;'>'
   510  078A  3400               	retlw	0
   511                           psect	strings
   512                           	
   513  078B                     STR_10:	
   514  078B  3444               	retlw	68	;'D'
   515  078C  3472               	retlw	114	;'r'
   516  078D  344C               	retlw	76	;'L'
   517  078E  3400               	retlw	0
   518                           psect	strings
   519                           	
   520  078F                     STR_12:	
   521  078F  3443               	retlw	67	;'C'
   522  0790  3468               	retlw	104	;'h'
   523  0791  3467               	retlw	103	;'g'
   524  0792  3400               	retlw	0
   525                           psect	strings
   526                           	
   527  0793                     STR_7:	
   528  0793  3443               	retlw	67	;'C'
   529  0794  3461               	retlw	97	;'a'
   530  0795  346C               	retlw	108	;'l'
   531  0796  3400               	retlw	0
   532                           psect	strings
   533                           	
   534  0797                     STR_8:	
   535  0797  3453               	retlw	83	;'S'
   536  0798  3463               	retlw	99	;'c'
   537  0799  346E               	retlw	110	;'n'
   538  079A  3400               	retlw	0
   539                           psect	strings
   540                           	
   541  079B                     STR_11:	
   542  079B  3446               	retlw	70	;'F'
   543  079C  346C               	retlw	108	;'l'
   544  079D  3477               	retlw	119	;'w'
   545  079E  3400               	retlw	0
   546                           psect	strings
   547  072A                     STR_14	equ	STR_13+0
   548                           	file	"Assignment3_AldnoahZero.as"
   549                           	line	#
   550                           psect cinit,class=CODE,delta=2
   551                           global start_initialization
   552  0AEA                     start_initialization:
   553                           
   554                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   555                           global __pbitbssCOMMON
   556  0380                     __pbitbssCOMMON:
   557  0380                     _CenterPressed:
   558  0380                            ds      1
   559                           
   560  0381                     _CenterReleased:
   561  0381                            ds      1
   562                           
   563  0382                     _DownPressed:
   564  0382                            ds      1
   565                           
   566  0383                     _DownReleased:
   567  0383                            ds      1
   568                           
   569  0384                     _LeftPressed:
   570  0384                            ds      1
   571                           
   572  0385                     _LeftReleased:
   573  0385                            ds      1
   574                           
   575  0386                     _RTC_FLAG_10MS:
   576  0386                            ds      1
   577                           
   578  0387                     _RTC_FLAG_250MS:
   579  0387                            ds      1
   580                           
   581  0388                     _RTC_FLAG_500MS:
   582  0388                            ds      1
   583                           
   584  0389                     _RTC_FLAG_50MS:
   585  0389                            ds      1
   586                           
   587  038A                     _RightPressed:
   588  038A                            ds      1
   589                           
   590  038B                     _RightReleased:
   591  038B                            ds      1
   592                           
   593  038C                     _SER_RC_FLAG:
   594  038C                            ds      1
   595                           
   596  038D                     _UpPressed:
   597  038D                            ds      1
   598                           
   599  038E                     _UpReleased:
   600  038E                            ds      1
   601                           
   602                           psect	bitbssBANK0,class=BANK0,bit,space=1
   603                           global __pbitbssBANK0
   604  0378                     __pbitbssBANK0:
   605  0378                     _RTC_FLAG_1MS:
   606  0378                            ds      1
   607                           
   608                           psect	bssBANK0,class=BANK0,space=1
   609                           global __pbssBANK0
   610  0068                     __pbssBANK0:
   611  0068                     _RTC_Counter:
   612  0068                            ds      2
   613                           
   614  006A                     _adcVal:
   615  006A                            ds      2
   616                           
   617  006C                     _buttonPressed:
   618  006C                            ds      1
   619                           
   620  006D                     _txiptr:
   621  006D                            ds      1
   622                           
   623  006E                     _txoptr:
   624  006E                            ds      1
   625                           
   626                           psect	bssBANK1,class=BANK1,space=1
   627                           global __pbssBANK1
   628  00A0                     __pbssBANK1:
   629  00A0                     _rxfifo:
   630  00A0                            ds      16
   631                           
   632  00B0                     _txfifo:
   633  00B0                            ds      16
   634                           
   635  00C0                     _dist_high:
   636  00C0                            ds      2
   637                           
   638  00C2                     _dist_low:
   639  00C2                            ds      2
   640                           
   641  00C4                     _distance:
   642  00C4                            ds      2
   643                           
   644  00C6                     _pos:
   645  00C6                            ds      2
   646                           
   647  00C8                     _test:
   648  00C8                            ds      2
   649                           
   650  00CA                     _total:
   651  00CA                            ds      2
   652                           
   653  00CC                     _totalSteps:
   654  00CC                            ds      2
   655                           
   656  00CE                     _CenterDebounceCount:
   657  00CE                            ds      1
   658                           
   659  00CF                     _DistHighByte:
   660  00CF                            ds      1
   661                           
   662  00D0                     _DistLowByte:
   663  00D0                            ds      1
   664                           
   665  00D1                     _DownDebounceCount:
   666  00D1                            ds      1
   667                           
   668  00D2                     _LeftDebounceCount:
   669  00D2                            ds      1
   670                           
   671  00D3                     _RightDebounceCount:
   672  00D3                            ds      1
   673                           
   674  00D4                     _SCAN_FLAG:
   675  00D4                            ds      1
   676                           
   677  00D5                     _UpDebounceCount:
   678  00D5                            ds      1
   679                           
   680  00D6                     _currentMenu:
   681  00D6                            ds      1
   682                           
   683  00D7                     _current_direction:
   684  00D7                            ds      1
   685                           
   686  00D8                     _highByte:
   687  00D8                            ds      1
   688                           
   689  00D9                     _lowByte:
   690  00D9                            ds      1
   691                           
   692  00DA                     _rxiptr:
   693  00DA                            ds      1
   694                           
   695  00DB                     _rxoptr:
   696  00DB                            ds      1
   697                           
   698  00DC                     _ser_tmp:
   699  00DC                            ds      1
   700                           
   701  00DD                     _serialInput:
   702  00DD                            ds      1
   703                           
   704  00DE                     _turnhighByte:
   705  00DE                            ds      1
   706                           
   707  00DF                     _turnlowByte:
   708  00DF                            ds      1
   709                           
   710                           psect	dataBANK1,class=BANK1,space=1
   711                           global __pdataBANK1
   712  00E0                     __pdataBANK1:
   713                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   714                           	line	32
   715  00E0                     _menuStrings:
   716  00E0                            ds      6
   717                           
   718                           psect	dataBANK1
   719                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   720                           	line	33
   721  00E6                     _shortMenuStrings:
   722  00E6                            ds      6
   723                           
   724                           psect	dataBANK1
   725                           	file	"E:\Aldnoah.Zero\Assignment3\robot.h"
   726                           	line	11
   727  00EC                     _distTravelled:
   728  00EC                            ds      2
   729                           
   730                           psect	dataBANK1
   731                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   732                           	line	30
   733  00EE                     _current_step:
   734  00EE                            ds      1
   735                           
   736                           psect	bssBANK3,class=BANK3,space=1
   737                           global __pbssBANK3
   738  0190                     __pbssBANK3:
   739  0190                     UpdateDisplay@F1230:
   740  0190                            ds      16
   741                           
   742                           psect clrtext,class=CODE,delta=2
   743                           global clear_ram
   744                           ;	Called with FSR containing the base address, and
   745                           ;	W with the last address+1
   746  093F                     clear_ram:
   747  093F  0064               	clrwdt			;clear the watchdog before getting into this loop
   748  0940                     clrloop:
   749  0940  0180               	clrf	indf		;clear RAM location pointed to by FSR
   750  0941  0A84               	incf	fsr,f		;increment pointer
   751  0942  0604               	xorwf	fsr,w		;XOR with final address
   752  0943  1903               	btfsc	status,2	;have we reached the end yet?
   753  0944  3400               	retlw	0		;all done for this memory range, return
   754  0945  0604               	xorwf	fsr,w		;XOR again to restore value
   755  0946  2940               	goto	clrloop		;do the next byte
   756                           
   757                           ; Clear objects allocated to BITCOMMON
   758                           psect cinit,class=CODE,delta=2
   759  0AEA  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   760  0AEB  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   761                           ; Clear objects allocated to BITBANK0
   762                           psect cinit,class=CODE,delta=2
   763  0AEC  01EF               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   764                           ; Clear objects allocated to BANK0
   765                           psect cinit,class=CODE,delta=2
   766  0AED  01E8               	clrf	((__pbssBANK0)+0)&07Fh
   767  0AEE  01E9               	clrf	((__pbssBANK0)+1)&07Fh
   768  0AEF  01EA               	clrf	((__pbssBANK0)+2)&07Fh
   769  0AF0  01EB               	clrf	((__pbssBANK0)+3)&07Fh
   770  0AF1  01EC               	clrf	((__pbssBANK0)+4)&07Fh
   771  0AF2  01ED               	clrf	((__pbssBANK0)+5)&07Fh
   772  0AF3  01EE               	clrf	((__pbssBANK0)+6)&07Fh
   773                           ; Clear objects allocated to BANK1
   774                           psect cinit,class=CODE,delta=2
   775  0AF4  1383               	bcf	status, 7	;select IRP bank0
   776  0AF5  30A0               	movlw	low(__pbssBANK1)
   777  0AF6  0084               	movwf	fsr
   778  0AF7  30E0               	movlw	low((__pbssBANK1)+040h)
   779  0AF8  120A  158A  213F   	fcall	clear_ram
              120A  158A         
   780                           ; Clear objects allocated to BANK3
   781                           psect cinit,class=CODE,delta=2
   782  0AFD  1783               	bsf	status, 7	;select IRP bank2
   783  0AFE  3090               	movlw	low(__pbssBANK3)
   784  0AFF  0084               	movwf	fsr
   785  0B00  30A0               	movlw	low((__pbssBANK3)+010h)
   786  0B01  120A  158A  213F   	fcall	clear_ram
              120A  158A         
   787                           global btemp
   788                           psect inittext,class=CODE,delta=2
   789                           global init_fetch,btemp
   790                           ;	Called with low address in FSR and high address in W
   791  0988                     init_fetch:
   792  0988  087E               	movf btemp,w
   793  0989  008A               	movwf pclath
   794  098A  087F               	movf btemp+1,w
   795  098B  0082               	movwf pc
   796                           global init_ram
   797                           ;Called with:
   798                           ;	high address of idata address in btemp 
   799                           ;	low address of idata address in btemp+1 
   800                           ;	low address of data in FSR
   801                           ;	high address + 1 of data in btemp-1
   802  098C                     init_ram:
   803  098C  120A  158A  2188   	fcall init_fetch
              120A  158A         
   804  0991  0080               	movwf indf,f
   805  0992  0A84               	incf fsr,f
   806  0993  0804               	movf fsr,w
   807  0994  067D               	xorwf btemp-1,w
   808  0995  1903               	btfsc status,2
   809  0996  3400               	retlw 0
   810  0997  0AFF               	incf btemp+1,f
   811  0998  1903               	btfsc status,2
   812  0999  0AFE               	incf btemp,f
   813  099A  298C               	goto init_ram
   814                           ; Initialize objects allocated to BANK1
   815                           psect cinit,class=CODE,delta=2
   816                           global init_ram, __pidataBANK1
   817  0B06  1383               	bcf	status, 7	;select IRP bank0
   818  0B07  30EF               	movlw low(__pdataBANK1+15)
   819  0B08  00FD               	movwf btemp-1,f
   820  0B09  3009               	movlw high(__pidataBANK1)
   821  0B0A  00FE               	movwf btemp,f
   822  0B0B  3054               	movlw low(__pidataBANK1)
   823  0B0C  00FF               	movwf btemp+1,f
   824  0B0D  30E0               	movlw low(__pdataBANK1)
   825  0B0E  0084               	movwf fsr,f
   826  0B0F  120A  158A  218C   	fcall init_ram
              120A  158A         
   827                           psect cinit,class=CODE,delta=2
   828                           global end_of_initialization
   829                           
   830                           ;End of C runtime variable initialization code
   831                           
   832  0B14                     end_of_initialization:
   833  0B14  0183               clrf status
   834  0B15  120A  118A  2BB1   ljmp _main	;jump to C main() function
   835                           psect	cstackCOMMON,class=COMMON,space=1
   836                           global __pcstackCOMMON
   837  0072                     __pcstackCOMMON:
   838                           	global	?_ser_init
   839  0072                     ?_ser_init:	; 0 bytes @ 0x0
   840                           	global	?_robo_init
   841  0072                     ?_robo_init:	; 0 bytes @ 0x0
   842                           	global	?_UpdateDisplay
   843  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   844                           	global	?_ser_putch
   845  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   846                           	global	?_readAvgDistance
   847  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   848                           	global	?_robot_distance
   849  0072                     ?_robot_distance:	; 0 bytes @ 0x0
   850                           	global	?_ADCconvert
   851  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   852                           	global	?_init_adc
   853  0072                     ?_init_adc:	; 0 bytes @ 0x0
   854                           	global	?_lcd_write_control
   855  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   856                           	global	?_lcd_write_data
   857  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   858                           	global	?_lcd_set_cursor
   859  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   860                           	global	?_lcd_init
   861  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   862                           	global	?_isr1
   863  0072                     ?_isr1:	; 0 bytes @ 0x0
   864                           	global	?_init
   865  0072                     ?_init:	; 0 bytes @ 0x0
   866                           	global	?_calibrateIR
   867  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   868                           	global	?_ChargeMode
   869  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   870                           	global	?_main
   871  0072                     ?_main:	; 0 bytes @ 0x0
   872                           	global	?_Debounce
   873  0072                     ?_Debounce:	; 0 bytes @ 0x0
   874                           	global	??_Debounce
   875  0072                     ??_Debounce:	; 0 bytes @ 0x0
   876                           	global	?_robot_read
   877  0072                     ?_robot_read:	; 0 bytes @ 0x0
   878                           	global	?_ReadButtons
   879  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   880                           	global	?_Menu
   881  0072                     ?_Menu:	; 1 bytes @ 0x0
   882                           	global	?_adc_read_channel
   883  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   884                           	global	?_spi_transfer
   885  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   886                           	global	?i1___lwmod
   887  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   888                           	global	i1___lwmod@divisor
   889  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   890  0072                     	ds	1
   891                           	global	??_ReadButtons
   892  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   893  0073                     	ds	1
   894                           	global	i1___lwmod@dividend
   895  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   896  0074                     	ds	2
   897                           	global	??i1___lwmod
   898  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   899  0076                     	ds	1
   900                           	global	i1___lwmod@counter
   901  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   902  0077                     	ds	1
   903                           	global	??_isr1
   904  0078                     ??_isr1:	; 0 bytes @ 0x6
   905  0078                     	ds	6
   906                           psect	cstackBANK0,class=BANK0,space=1
   907                           global __pcstackBANK0
   908  0020                     __pcstackBANK0:
   909                           	global	??_ser_init
   910  0020                     ??_ser_init:	; 0 bytes @ 0x0
   911                           	global	??_ser_putch
   912  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   913                           	global	??_Menu
   914  0020                     ??_Menu:	; 0 bytes @ 0x0
   915                           	global	??_init_adc
   916  0020                     ??_init_adc:	; 0 bytes @ 0x0
   917                           	global	??_lcd_write_control
   918  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   919                           	global	??_lcd_write_data
   920  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   921                           	global	??_spi_transfer
   922  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   923                           	global	?_adc_read
   924  0020                     ?_adc_read:	; 2 bytes @ 0x0
   925                           	global	?___wmul
   926  0020                     ?___wmul:	; 2 bytes @ 0x0
   927                           	global	?___awmod
   928  0020                     ?___awmod:	; 2 bytes @ 0x0
   929                           	global	Menu@input
   930  0020                     Menu@input:	; 1 bytes @ 0x0
   931                           	global	___wmul@multiplier
   932  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   933                           	global	___awmod@divisor
   934  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   935  0020                     	ds	1
   936                           	global	spi_transfer@temp
   937  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   938                           	global	ser_putch@c
   939  0021                     ser_putch@c:	; 1 bytes @ 0x1
   940  0021                     	ds	1
   941                           	global	??_adc_read
   942  0022                     ??_adc_read:	; 0 bytes @ 0x2
   943                           	global	??_robo_init
   944  0022                     ??_robo_init:	; 0 bytes @ 0x2
   945                           	global	?_robotMove
   946  0022                     ?_robotMove:	; 0 bytes @ 0x2
   947                           	global	?_robotTurn
   948  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   949                           	global	??_robot_read
   950  0022                     ??_robot_read:	; 0 bytes @ 0x2
   951                           	global	lcd_write_control@databyte
   952  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   953                           	global	lcd_write_data@databyte
   954  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   955                           	global	spi_transfer@data
   956  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   957                           	global	robot_read@packet
   958  0022                     robot_read@packet:	; 1 bytes @ 0x2
   959                           	global	robotMove@distance
   960  0022                     robotMove@distance:	; 2 bytes @ 0x2
   961                           	global	robotTurn@distance
   962  0022                     robotTurn@distance:	; 2 bytes @ 0x2
   963                           	global	___wmul@multiplicand
   964  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   965                           	global	___awmod@dividend
   966  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   967  0022                     	ds	1
   968                           	global	?_rotate
   969  0023                     ?_rotate:	; 0 bytes @ 0x3
   970                           	global	??_robot_distance
   971  0023                     ??_robot_distance:	; 0 bytes @ 0x3
   972                           	global	??_lcd_set_cursor
   973  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   974                           	global	??_lcd_init
   975  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   976                           	global	??_init
   977  0023                     ??_init:	; 0 bytes @ 0x3
   978                           	global	lcd_set_cursor@address
   979  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   980                           	global	rotate@numsteps
   981  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   982  0023                     	ds	1
   983                           	global	??_robotMove
   984  0024                     ??_robotMove:	; 0 bytes @ 0x4
   985                           	global	??_robotTurn
   986  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   987                           	global	??___wmul
   988  0024                     ??___wmul:	; 0 bytes @ 0x4
   989                           	global	??___awmod
   990  0024                     ??___awmod:	; 0 bytes @ 0x4
   991                           	global	adc_read@adc_value
   992  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   993                           	global	___wmul@product
   994  0024                     ___wmul@product:	; 2 bytes @ 0x4
   995  0024                     	ds	1
   996                           	global	rotate@direction
   997  0025                     rotate@direction:	; 1 bytes @ 0x5
   998                           	global	___awmod@counter
   999  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1000  0025                     	ds	1
  1001                           	global	??_rotate
  1002  0026                     ??_rotate:	; 0 bytes @ 0x6
  1003                           	global	??_adc_read_channel
  1004  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1005                           	global	?___lwdiv
  1006  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1007                           	global	___awmod@sign
  1008  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1009                           	global	___lwdiv@divisor
  1010  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1011  0026                     	ds	1
  1012                           	global	?_lcd_write_string
  1013  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1014                           	global	adc_read_channel@channel
  1015  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1016                           	global	lcd_write_string@s
  1017  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1018  0027                     	ds	1
  1019                           	global	?_readDistance
  1020  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1021                           	global	rotate@i
  1022  0028                     rotate@i:	; 2 bytes @ 0x8
  1023                           	global	___lwdiv@dividend
  1024  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1025  0028                     	ds	1
  1026                           	global	??_lcd_write_string
  1027  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1028  0029                     	ds	1
  1029                           	global	??_readDistance
  1030  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1031                           	global	??___lwdiv
  1032  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1033  002A                     	ds	1
  1034                           	global	___lwdiv@quotient
  1035  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1036  002B                     	ds	1
  1037                           	global	readDistance@fullval
  1038  002C                     readDistance@fullval:	; 2 bytes @ 0xC
  1039  002C                     	ds	1
  1040                           	global	___lwdiv@counter
  1041  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1042  002D                     	ds	1
  1043                           	global	??_ADCconvert
  1044  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1045                           	global	?___lwmod
  1046  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1047                           	global	___lwmod@divisor
  1048  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1049  002E                     	ds	2
  1050                           	global	??_readAvgDistance
  1051  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1052                           	global	readAvgDistance@fullval
  1053  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1054                           	global	___lwmod@dividend
  1055  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1056  0030                     	ds	2
  1057                           	global	??___lwmod
  1058  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1059                           	global	readAvgDistance@i
  1060  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
  1061  0032                     	ds	1
  1062                           	global	___lwmod@counter
  1063  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1064  0033                     	ds	1
  1065                           	global	?_sprintf
  1066  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1067                           	global	sprintf@f
  1068  0034                     sprintf@f:	; 1 bytes @ 0x14
  1069  0034                     	ds	5
  1070                           	global	??_sprintf
  1071  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1072  0039                     	ds	3
  1073                           	global	sprintf@ap
  1074  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1075  003C                     	ds	1
  1076                           	global	sprintf@flag
  1077  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1078  003D                     	ds	1
  1079                           	global	sprintf@prec
  1080  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1081  003E                     	ds	1
  1082                           	global	sprintf@_val
  1083  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1084  003F                     	ds	4
  1085                           	global	sprintf@sp
  1086  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1087  0043                     	ds	1
  1088                           	global	sprintf@c
  1089  0044                     sprintf@c:	; 1 bytes @ 0x24
  1090  0044                     	ds	1
  1091                           	global	??_UpdateDisplay
  1092  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1093  0045                     	ds	5
  1094                           	global	UpdateDisplay@adcOutput
  1095  004A                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x2A
  1096  004A                     	ds	16
  1097                           	global	??_calibrateIR
  1098  005A                     ??_calibrateIR:	; 0 bytes @ 0x3A
  1099                           	global	??_ChargeMode
  1100  005A                     ??_ChargeMode:	; 0 bytes @ 0x3A
  1101                           	global	?_scan360
  1102  005A                     ?_scan360:	; 2 bytes @ 0x3A
  1103  005A                     	ds	2
  1104                           	global	??_scan360
  1105  005C                     ??_scan360:	; 0 bytes @ 0x3C
  1106                           	global	scan360@lowestVal
  1107  005C                     scan360@lowestVal:	; 2 bytes @ 0x3C
  1108  005C                     	ds	2
  1109                           	global	scan360@lowestSteps
  1110  005E                     scan360@lowestSteps:	; 2 bytes @ 0x3E
  1111  005E                     	ds	2
  1112                           	global	scan360@steps
  1113  0060                     scan360@steps:	; 2 bytes @ 0x40
  1114  0060                     	ds	2
  1115                           	global	??_main
  1116  0062                     ??_main:	; 0 bytes @ 0x42
  1117  0062                     	ds	3
  1118                           	global	main@shortwall
  1119  0065                     main@shortwall:	; 2 bytes @ 0x45
  1120  0065                     	ds	2
  1121                           	global	main@choice
  1122  0067                     main@choice:	; 1 bytes @ 0x47
  1123  0067                     	ds	1
  1124 ;;Data sizes: Strings 133, constant 10, data 15, bss 87, persistent 0 stack 0
  1125 ;;Auto spaces:   Size  Autos    Used
  1126 ;; COMMON          14     12      14
  1127 ;; BANK0           80     72      80
  1128 ;; BANK1           80      0      79
  1129 ;; BANK3           96      0      16
  1130 ;; BANK2           96      0       0
  1131                           
  1132 ;;
  1133 ;; Pointer list with targets:
  1134                           
  1135 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1136 ;;
  1137 ;; ?___awmod	int  size(1) Largest target is 0
  1138 ;;
  1139 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1140 ;;
  1141 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1142 ;;
  1143 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1144 ;;
  1145 ;; ?_scan360	int  size(1) Largest target is 0
  1146 ;;
  1147 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1148 ;;
  1149 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1150 ;;
  1151 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1152 ;;		 -> STR_14(CODE[15]), STR_13(CODE[15]), 
  1153 ;;
  1154 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1155 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1156 ;;
  1157 ;; ?_sprintf	int  size(1) Largest target is 0
  1158 ;;
  1159 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1160 ;;		 -> ?_sprintf(BANK0[2]), 
  1161 ;;
  1162 ;; S8133$_cp	PTR const unsigned char  size(1) Largest target is 0
  1163 ;;
  1164 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1165 ;;
  1166 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1167 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1168 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1169 ;;
  1170 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1171 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1172 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1173 ;;
  1174 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1175 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1176 ;;		 -> STR_15(CODE[4]), UpdateDisplay@adcOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), 
  1177 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1178 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1179 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1180 ;;
  1181                           
  1182                           
  1183 ;;
  1184 ;; Critical Paths under _main in COMMON
  1185 ;;
  1186 ;;   None.
  1187 ;;
  1188 ;; Critical Paths under _isr1 in COMMON
  1189 ;;
  1190 ;;   _isr1->i1___lwmod
  1191 ;;   _ReadButtons->_Debounce
  1192 ;;
  1193 ;; Critical Paths under _main in BANK0
  1194 ;;
  1195 ;;   _main->_scan360
  1196 ;;   _scan360->_UpdateDisplay
  1197 ;;   _ChargeMode->_UpdateDisplay
  1198 ;;   _calibrateIR->_UpdateDisplay
  1199 ;;   _readAvgDistance->_ADCconvert
  1200 ;;   _UpdateDisplay->_sprintf
  1201 ;;   _readDistance->_adc_read_channel
  1202 ;;   _robot_distance->_robot_read
  1203 ;;   _lcd_init->_lcd_write_control
  1204 ;;   _lcd_write_string->___awmod
  1205 ;;   _lcd_set_cursor->_lcd_write_control
  1206 ;;   _robot_read->_ser_putch
  1207 ;;   _sprintf->___lwmod
  1208 ;;   _ADCconvert->___lwdiv
  1209 ;;   _robotTurn->_ser_putch
  1210 ;;   _robotMove->_ser_putch
  1211 ;;   _rotate->_spi_transfer
  1212 ;;   _robo_init->_ser_putch
  1213 ;;   _adc_read_channel->_adc_read
  1214 ;;   ___lwmod->___lwdiv
  1215 ;;   ___lwdiv->___wmul
  1216 ;;
  1217 ;; Critical Paths under _isr1 in BANK0
  1218 ;;
  1219 ;;   None.
  1220 ;;
  1221 ;; Critical Paths under _main in BANK1
  1222 ;;
  1223 ;;   None.
  1224 ;;
  1225 ;; Critical Paths under _isr1 in BANK1
  1226 ;;
  1227 ;;   None.
  1228 ;;
  1229 ;; Critical Paths under _main in BANK3
  1230 ;;
  1231 ;;   None.
  1232 ;;
  1233 ;; Critical Paths under _isr1 in BANK3
  1234 ;;
  1235 ;;   None.
  1236 ;;
  1237 ;; Critical Paths under _main in BANK2
  1238 ;;
  1239 ;;   None.
  1240 ;;
  1241 ;; Critical Paths under _isr1 in BANK2
  1242 ;;
  1243 ;;   None.
  1244                           
  1245 ;;
  1246 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1247 ;;
  1248                           
  1249 ;;
  1250 ;;Call Graph Tables:
  1251 ;;
  1252 ;; ---------------------------------------------------------------------------------
  1253 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1254 ;; ---------------------------------------------------------------------------------
  1255 ;; (0) _main                                                 6     6      0    7235
  1256 ;;                                             66 BANK0      6     6      0
  1257 ;;                               _init
  1258 ;;                     _robot_distance
  1259 ;;                    _readAvgDistance
  1260 ;;                      _UpdateDisplay
  1261 ;;                               _Menu
  1262 ;;                        _calibrateIR
  1263 ;;                            _scan360
  1264 ;;                             _rotate
  1265 ;;                          _robotMove
  1266 ;;                          _robotTurn
  1267 ;;                         _ChargeMode
  1268 ;; ---------------------------------------------------------------------------------
  1269 ;; (1) _scan360                                              8     6      2    2118
  1270 ;;                                             58 BANK0      8     6      2
  1271 ;;                    _readAvgDistance
  1272 ;;                             _rotate
  1273 ;;                      _UpdateDisplay
  1274 ;; ---------------------------------------------------------------------------------
  1275 ;; (1) _ChargeMode                                           1     1      0    1349
  1276 ;;                                             58 BANK0      1     1      0
  1277 ;;                          _ser_putch
  1278 ;;                      _UpdateDisplay
  1279 ;; ---------------------------------------------------------------------------------
  1280 ;; (1) _calibrateIR                                          0     0      0    1425
  1281 ;;                             _rotate
  1282 ;;                      _UpdateDisplay
  1283 ;; ---------------------------------------------------------------------------------
  1284 ;; (2) _readAvgDistance                                      4     4      0     555
  1285 ;;                                             16 BANK0      4     4      0
  1286 ;;                       _readDistance
  1287 ;;                            ___lwdiv
  1288 ;;                         _ADCconvert
  1289 ;; ---------------------------------------------------------------------------------
  1290 ;; (2) _UpdateDisplay                                       21    21      0    1327
  1291 ;;                                             37 BANK0     21    21      0
  1292 ;;                  _lcd_write_control
  1293 ;;                            _sprintf
  1294 ;;                     _lcd_set_cursor
  1295 ;;                   _lcd_write_string
  1296 ;;                            ___awmod
  1297 ;; ---------------------------------------------------------------------------------
  1298 ;; (1) _init                                                 1     1      0      44
  1299 ;;                                              3 BANK0      1     1      0
  1300 ;;                           _init_adc
  1301 ;;                           _lcd_init
  1302 ;;                           _ser_init
  1303 ;;                          _robo_init
  1304 ;; ---------------------------------------------------------------------------------
  1305 ;; (3) _readDistance                                         6     4      2      69
  1306 ;;                                              8 BANK0      6     4      2
  1307 ;;                   _adc_read_channel
  1308 ;; ---------------------------------------------------------------------------------
  1309 ;; (1) _robot_distance                                       0     0      0      44
  1310 ;;                         _robot_read
  1311 ;; ---------------------------------------------------------------------------------
  1312 ;; (2) _lcd_init                                             0     0      0      22
  1313 ;;                  _lcd_write_control
  1314 ;; ---------------------------------------------------------------------------------
  1315 ;; (3) _lcd_write_string                                     2     0      2      67
  1316 ;;                                              7 BANK0      2     0      2
  1317 ;;                     _lcd_write_data
  1318 ;;                            ___awmod (ARG)
  1319 ;; ---------------------------------------------------------------------------------
  1320 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1321 ;;                                              3 BANK0      1     1      0
  1322 ;;                  _lcd_write_control
  1323 ;; ---------------------------------------------------------------------------------
  1324 ;; (2) _robot_read                                           1     1      0      44
  1325 ;;                                              2 BANK0      1     1      0
  1326 ;;                          _ser_putch
  1327 ;; ---------------------------------------------------------------------------------
  1328 ;; (3) _sprintf                                             17    12      5     798
  1329 ;;                                             20 BANK0     17    12      5
  1330 ;;                            ___lwdiv
  1331 ;;                            ___lwmod
  1332 ;; ---------------------------------------------------------------------------------
  1333 ;; (3) _ADCconvert                                           2     2      0     254
  1334 ;;                                             14 BANK0      2     2      0
  1335 ;;                             ___wmul
  1336 ;;                            ___lwdiv
  1337 ;; ---------------------------------------------------------------------------------
  1338 ;; (1) _robotTurn                                            3     1      2      88
  1339 ;;                                              2 BANK0      3     1      2
  1340 ;;                          _ser_putch
  1341 ;; ---------------------------------------------------------------------------------
  1342 ;; (1) _robotMove                                            3     1      2      88
  1343 ;;                                              2 BANK0      3     1      2
  1344 ;;                          _ser_putch
  1345 ;; ---------------------------------------------------------------------------------
  1346 ;; (1) _rotate                                               7     4      3      98
  1347 ;;                                              3 BANK0      7     4      3
  1348 ;;                       _spi_transfer
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (2) _robo_init                                            0     0      0      22
  1351 ;;                          _ser_putch
  1352 ;; ---------------------------------------------------------------------------------
  1353 ;; (4) _lcd_write_data                                       3     3      0      22
  1354 ;;                                              0 BANK0      3     3      0
  1355 ;; ---------------------------------------------------------------------------------
  1356 ;; (4) _lcd_write_control                                    3     3      0      22
  1357 ;;                                              0 BANK0      3     3      0
  1358 ;; ---------------------------------------------------------------------------------
  1359 ;; (2) _init_adc                                             1     1      0       0
  1360 ;;                                              0 BANK0      1     1      0
  1361 ;; ---------------------------------------------------------------------------------
  1362 ;; (4) _adc_read_channel                                     2     2      0      46
  1363 ;;                                              6 BANK0      2     2      0
  1364 ;;                           _adc_read
  1365 ;; ---------------------------------------------------------------------------------
  1366 ;; (3) ___awmod                                              7     3      4     296
  1367 ;;                                              0 BANK0      7     3      4
  1368 ;; ---------------------------------------------------------------------------------
  1369 ;; (4) ___lwmod                                              6     2      4     159
  1370 ;;                                             14 BANK0      6     2      4
  1371 ;;                            ___lwdiv (ARG)
  1372 ;; ---------------------------------------------------------------------------------
  1373 ;; (4) ___lwdiv                                              8     4      4     162
  1374 ;;                                              6 BANK0      8     4      4
  1375 ;;                             ___wmul (ARG)
  1376 ;; ---------------------------------------------------------------------------------
  1377 ;; (4) ___wmul                                               6     2      4      92
  1378 ;;                                              0 BANK0      6     2      4
  1379 ;; ---------------------------------------------------------------------------------
  1380 ;; (2) _spi_transfer                                         3     3      0      30
  1381 ;;                                              0 BANK0      3     3      0
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; (1) _Menu                                                 1     1      0      22
  1384 ;;                                              0 BANK0      1     1      0
  1385 ;; ---------------------------------------------------------------------------------
  1386 ;; (2) _ser_putch                                            2     2      0      22
  1387 ;;                                              0 BANK0      2     2      0
  1388 ;; ---------------------------------------------------------------------------------
  1389 ;; (2) _ser_init                                             1     1      0       0
  1390 ;;                                              0 BANK0      1     1      0
  1391 ;; ---------------------------------------------------------------------------------
  1392 ;; (5) _adc_read                                             6     4      2      24
  1393 ;;                                              0 BANK0      6     4      2
  1394 ;; ---------------------------------------------------------------------------------
  1395 ;; Estimated maximum stack depth 5
  1396 ;; ---------------------------------------------------------------------------------
  1397 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1398 ;; ---------------------------------------------------------------------------------
  1399 ;; (6) _isr1                                                 6     6      0     641
  1400 ;;                                              6 COMMON     6     6      0
  1401 ;;                          i1___lwmod
  1402 ;;                        _ReadButtons
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (7) _ReadButtons                                          0     0      0       0
  1405 ;;                           _Debounce
  1406 ;; ---------------------------------------------------------------------------------
  1407 ;; (7) i1___lwmod                                            6     2      4     641
  1408 ;;                                              0 COMMON     6     2      4
  1409 ;; ---------------------------------------------------------------------------------
  1410 ;; (8) _Debounce                                             1     1      0       0
  1411 ;;                                              0 COMMON     1     1      0
  1412 ;; ---------------------------------------------------------------------------------
  1413 ;; Estimated maximum stack depth 8
  1414 ;; ---------------------------------------------------------------------------------
  1415                           
  1416 ;; Call Graph Graphs:
  1417                           
  1418 ;; _main (ROOT)
  1419 ;;   _init
  1420 ;;     _init_adc
  1421 ;;     _lcd_init
  1422 ;;       _lcd_write_control
  1423 ;;     _ser_init
  1424 ;;     _robo_init
  1425 ;;       _ser_putch
  1426 ;;   _robot_distance
  1427 ;;     _robot_read
  1428 ;;       _ser_putch
  1429 ;;   _readAvgDistance
  1430 ;;     _readDistance
  1431 ;;       _adc_read_channel
  1432 ;;         _adc_read
  1433 ;;     ___lwdiv
  1434 ;;       ___wmul (ARG)
  1435 ;;     _ADCconvert
  1436 ;;       ___wmul
  1437 ;;       ___lwdiv
  1438 ;;         ___wmul (ARG)
  1439 ;;   _UpdateDisplay
  1440 ;;     _lcd_write_control
  1441 ;;     _sprintf
  1442 ;;       ___lwdiv
  1443 ;;         ___wmul (ARG)
  1444 ;;       ___lwmod
  1445 ;;         ___lwdiv (ARG)
  1446 ;;           ___wmul (ARG)
  1447 ;;     _lcd_set_cursor
  1448 ;;       _lcd_write_control
  1449 ;;     _lcd_write_string
  1450 ;;       _lcd_write_data
  1451 ;;       ___awmod (ARG)
  1452 ;;     ___awmod
  1453 ;;   _Menu
  1454 ;;   _calibrateIR
  1455 ;;     _rotate
  1456 ;;       _spi_transfer
  1457 ;;     _UpdateDisplay
  1458 ;;       _lcd_write_control
  1459 ;;       _sprintf
  1460 ;;         ___lwdiv
  1461 ;;           ___wmul (ARG)
  1462 ;;         ___lwmod
  1463 ;;           ___lwdiv (ARG)
  1464 ;;             ___wmul (ARG)
  1465 ;;       _lcd_set_cursor
  1466 ;;         _lcd_write_control
  1467 ;;       _lcd_write_string
  1468 ;;         _lcd_write_data
  1469 ;;         ___awmod (ARG)
  1470 ;;       ___awmod
  1471 ;;   _scan360
  1472 ;;     _readAvgDistance
  1473 ;;       _readDistance
  1474 ;;         _adc_read_channel
  1475 ;;           _adc_read
  1476 ;;       ___lwdiv
  1477 ;;         ___wmul (ARG)
  1478 ;;       _ADCconvert
  1479 ;;         ___wmul
  1480 ;;         ___lwdiv
  1481 ;;           ___wmul (ARG)
  1482 ;;     _rotate
  1483 ;;       _spi_transfer
  1484 ;;     _UpdateDisplay
  1485 ;;       _lcd_write_control
  1486 ;;       _sprintf
  1487 ;;         ___lwdiv
  1488 ;;           ___wmul (ARG)
  1489 ;;         ___lwmod
  1490 ;;           ___lwdiv (ARG)
  1491 ;;             ___wmul (ARG)
  1492 ;;       _lcd_set_cursor
  1493 ;;         _lcd_write_control
  1494 ;;       _lcd_write_string
  1495 ;;         _lcd_write_data
  1496 ;;         ___awmod (ARG)
  1497 ;;       ___awmod
  1498 ;;   _rotate
  1499 ;;     _spi_transfer
  1500 ;;   _robotMove
  1501 ;;     _ser_putch
  1502 ;;   _robotTurn
  1503 ;;     _ser_putch
  1504 ;;   _ChargeMode
  1505 ;;     _ser_putch
  1506 ;;     _UpdateDisplay
  1507 ;;       _lcd_write_control
  1508 ;;       _sprintf
  1509 ;;         ___lwdiv
  1510 ;;           ___wmul (ARG)
  1511 ;;         ___lwmod
  1512 ;;           ___lwdiv (ARG)
  1513 ;;             ___wmul (ARG)
  1514 ;;       _lcd_set_cursor
  1515 ;;         _lcd_write_control
  1516 ;;       _lcd_write_string
  1517 ;;         _lcd_write_data
  1518 ;;         ___awmod (ARG)
  1519 ;;       ___awmod
  1520 ;;
  1521 ;; _isr1 (ROOT)
  1522 ;;   i1___lwmod
  1523 ;;   _ReadButtons
  1524 ;;     _Debounce
  1525 ;;
  1526                           
  1527 ;; Address spaces:
  1528                           
  1529 ;;Name               Size   Autos  Total    Cost      Usage
  1530 ;;BANK3               60      0      10       9       16.7%
  1531 ;;BITBANK3            60      0       0       8        0.0%
  1532 ;;SFR3                 0      0       0       4        0.0%
  1533 ;;BITSFR3              0      0       0       4        0.0%
  1534 ;;BANK2               60      0       0      11        0.0%
  1535 ;;BITBANK2            60      0       0      10        0.0%
  1536 ;;SFR2                 0      0       0       5        0.0%
  1537 ;;BITSFR2              0      0       0       5        0.0%
  1538 ;;SFR1                 0      0       0       2        0.0%
  1539 ;;BITSFR1              0      0       0       2        0.0%
  1540 ;;BANK1               50      0      4F       7       98.8%
  1541 ;;BITBANK1            50      0       0       6        0.0%
  1542 ;;CODE                 0      0       0       0        0.0%
  1543 ;;DATA                 0      0      C8      12        0.0%
  1544 ;;ABS                  0      0      BD       3        0.0%
  1545 ;;NULL                 0      0       0       0        0.0%
  1546 ;;STACK                0      0       B       2        0.0%
  1547 ;;BANK0               50     48      50       5      100.0%
  1548 ;;BITBANK0            50      0       1       4        1.3%
  1549 ;;SFR0                 0      0       0       1        0.0%
  1550 ;;BITSFR0              0      0       0       1        0.0%
  1551 ;;COMMON               E      C       E       1      100.0%
  1552 ;;BITCOMMON            E      0       2       0       14.3%
  1553 ;;EEDATA             100      0       0       0        0.0%
  1554                           
  1555                           	global	_main
  1556                           psect	maintext,global,class=CODE,delta=2
  1557                           global __pmaintext
  1558  03B1                     __pmaintext:
  1559                           
  1560 ;; *************** function _main *****************
  1561 ;; Defined at:
  1562 ;;		line 318 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  shortwall       2   69[BANK0 ] int 
  1567 ;;  choice          1   71[BANK0 ] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;		None               void
  1570 ;; Registers used:
  1571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 17F/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       0       0       0       0
  1578 ;;      Locals:         0       3       0       0       0
  1579 ;;      Temps:          0       3       0       0       0
  1580 ;;      Totals:         0       6       0       0       0
  1581 ;;Total ram usage:        6 bytes
  1582 ;; Hardware stack levels required when called:    8
  1583 ;; This function calls:
  1584 ;;		_init
  1585 ;;		_robot_distance
  1586 ;;		_readAvgDistance
  1587 ;;		_UpdateDisplay
  1588 ;;		_Menu
  1589 ;;		_calibrateIR
  1590 ;;		_scan360
  1591 ;;		_rotate
  1592 ;;		_robotMove
  1593 ;;		_robotTurn
  1594 ;;		_ChargeMode
  1595 ;; This function is called by:
  1596 ;;		Startup code after reset
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           psect	maintext
  1600                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1601                           	line	318
  1602                           	global	__size_of_main
  1603  0115                     	__size_of_main	equ	__end_of_main-_main
  1604                           	
  1605  03B1                     _main:	
  1606                           	opt	stack 0
  1607                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1608                           	line	323
  1609                           	
  1610  03B1                     l11331:	
  1611                           ;Main.c: 323: init();
  1612  03B1  120A  158A  2348   	fcall	_init
              120A  118A         
  1613  03B6  2BB7               	goto	l11333
  1614                           	line	328
  1615                           ;Main.c: 328: while(1)
  1616                           	
  1617  03B7                     l2252:	
  1618                           	line	330
  1619                           	
  1620  03B7                     l11333:	
  1621                           ;Main.c: 329: {
  1622                           ;Main.c: 330: unsigned char choice = 255;
  1623  03B7  30FF               	movlw	(0FFh)
  1624  03B8  1283               	bcf	status, 5	;RP0=0, select bank0
  1625  03B9  1303               	bcf	status, 6	;RP1=0, select bank0
  1626  03BA  00E2               	movwf	(??_main+0)+0
  1627  03BB  0862               	movf	(??_main+0)+0,w
  1628  03BC  00E7               	movwf	(main@choice)
  1629                           	line	331
  1630                           	
  1631  03BD                     l11335:	
  1632                           ;Main.c: 331: int shortwall = 0;
  1633  03BD  01E5               	clrf	(main@shortwall)
  1634  03BE  01E6               	clrf	(main@shortwall+1)
  1635                           	line	333
  1636                           	
  1637  03BF                     l11337:	
  1638                           ;Main.c: 333: if ((SCAN_FLAG == 0) & (RTC_FLAG_250MS == 1))
  1639  03BF  1683               	bsf	status, 5	;RP0=1, select bank1
  1640  03C0  1303               	bcf	status, 6	;RP1=0, select bank1
  1641  03C1  08D4               	movf	(_SCAN_FLAG)^080h,f
  1642  03C2  1D03               	skipz
  1643  03C3  2BC5               	goto	u4971
  1644  03C4  2BC6               	goto	u4970
  1645  03C5                     u4971:
  1646  03C5  2C13               	goto	l11371
  1647  03C6                     u4970:
  1648                           	
  1649  03C6                     l11339:	
  1650  03C6  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1651  03C7  2BC9               	goto	u4981
  1652  03C8  2BCA               	goto	u4980
  1653  03C9                     u4981:
  1654  03C9  2C13               	goto	l11371
  1655  03CA                     u4980:
  1656                           	line	335
  1657                           	
  1658  03CA                     l11341:	
  1659                           ;Main.c: 334: {
  1660                           ;Main.c: 335: RTC_FLAG_250MS = 0;
  1661  03CA  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1662                           	line	336
  1663                           	
  1664  03CB                     l11343:	
  1665                           ;Main.c: 336: robot_distance();
  1666  03CB  120A  158A  2138   	fcall	_robot_distance
              120A  118A         
  1667                           	line	337
  1668                           	
  1669  03D0                     l11345:	
  1670                           ;Main.c: 337: readAvgDistance();
  1671  03D0  120A  118A  279F   	fcall	_readAvgDistance
              120A  118A         
  1672                           	line	338
  1673                           	
  1674  03D5                     l11347:	
  1675                           ;Main.c: 338: UpdateDisplay();
  1676  03D5  120A  118A  2238   	fcall	_UpdateDisplay
              120A  118A         
  1677  03DA  2C13               	goto	l11371
  1678                           	line	339
  1679                           	
  1680  03DB                     l2253:	
  1681                           	line	347
  1682                           ;Main.c: 339: }
  1683                           ;Main.c: 347: switch (buttonPressed)
  1684  03DB  2C13               	goto	l11371
  1685                           	line	349
  1686                           ;Main.c: 348: {
  1687                           ;Main.c: 349: case 1:
  1688                           	
  1689  03DC                     l2255:	
  1690                           	line	350
  1691                           	
  1692  03DC                     l11349:	
  1693                           ;Main.c: 350: Menu(1);
  1694  03DC  3001               	movlw	(01h)
  1695  03DD  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1696                           	line	352
  1697                           	
  1698  03E2                     l11351:	
  1699                           ;Main.c: 352: buttonPressed = 0;
  1700  03E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1701  03E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1702  03E4  01EC               	clrf	(_buttonPressed)	;volatile
  1703                           	line	354
  1704                           ;Main.c: 354: break;
  1705  03E5  2CA5               	goto	l11395
  1706                           	line	355
  1707                           ;Main.c: 355: case 2:
  1708                           	
  1709  03E6                     l2257:	
  1710                           	line	356
  1711                           	
  1712  03E6                     l11353:	
  1713                           ;Main.c: 356: Menu(2);
  1714  03E6  3002               	movlw	(02h)
  1715  03E7  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1716                           	line	358
  1717                           	
  1718  03EC                     l11355:	
  1719                           ;Main.c: 358: buttonPressed = 0;
  1720  03EC  1283               	bcf	status, 5	;RP0=0, select bank0
  1721  03ED  1303               	bcf	status, 6	;RP1=0, select bank0
  1722  03EE  01EC               	clrf	(_buttonPressed)	;volatile
  1723                           	line	360
  1724                           ;Main.c: 360: break;
  1725  03EF  2CA5               	goto	l11395
  1726                           	line	361
  1727                           ;Main.c: 361: case 3:
  1728                           	
  1729  03F0                     l2258:	
  1730                           	line	362
  1731                           	
  1732  03F0                     l11357:	
  1733                           ;Main.c: 362: Menu(3);
  1734  03F0  3003               	movlw	(03h)
  1735  03F1  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1736                           	line	364
  1737                           	
  1738  03F6                     l11359:	
  1739                           ;Main.c: 364: buttonPressed = 0;
  1740  03F6  1283               	bcf	status, 5	;RP0=0, select bank0
  1741  03F7  1303               	bcf	status, 6	;RP1=0, select bank0
  1742  03F8  01EC               	clrf	(_buttonPressed)	;volatile
  1743                           	line	366
  1744                           ;Main.c: 366: break;
  1745  03F9  2CA5               	goto	l11395
  1746                           	line	367
  1747                           ;Main.c: 367: case 4:
  1748                           	
  1749  03FA                     l2259:	
  1750                           	line	368
  1751                           	
  1752  03FA                     l11361:	
  1753                           ;Main.c: 368: Menu(4);
  1754  03FA  3004               	movlw	(04h)
  1755  03FB  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1756                           	line	370
  1757                           	
  1758  0400                     l11363:	
  1759                           ;Main.c: 370: buttonPressed = 0;
  1760  0400  1283               	bcf	status, 5	;RP0=0, select bank0
  1761  0401  1303               	bcf	status, 6	;RP1=0, select bank0
  1762  0402  01EC               	clrf	(_buttonPressed)	;volatile
  1763                           	line	372
  1764                           ;Main.c: 372: break;
  1765  0403  2CA5               	goto	l11395
  1766                           	line	373
  1767                           ;Main.c: 373: case 5:
  1768                           	
  1769  0404                     l2260:	
  1770                           	line	374
  1771                           	
  1772  0404                     l11365:	
  1773                           ;Main.c: 374: choice = Menu(5);
  1774  0404  3005               	movlw	(05h)
  1775  0405  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1776  040A  1283               	bcf	status, 5	;RP0=0, select bank0
  1777  040B  1303               	bcf	status, 6	;RP1=0, select bank0
  1778  040C  00E2               	movwf	(??_main+0)+0
  1779  040D  0862               	movf	(??_main+0)+0,w
  1780  040E  00E7               	movwf	(main@choice)
  1781                           	line	376
  1782                           	
  1783  040F                     l11367:	
  1784                           ;Main.c: 376: buttonPressed = 0;
  1785  040F  01EC               	clrf	(_buttonPressed)	;volatile
  1786                           	line	378
  1787                           ;Main.c: 378: break;
  1788  0410  2CA5               	goto	l11395
  1789                           	line	379
  1790                           ;Main.c: 379: default:
  1791                           	
  1792  0411                     l2261:	
  1793                           	line	381
  1794                           ;Main.c: 381: break;
  1795  0411  2CA5               	goto	l11395
  1796                           	line	382
  1797                           	
  1798  0412                     l11369:	
  1799                           ;Main.c: 382: }
  1800  0412  2CA5               	goto	l11395
  1801                           	line	347
  1802                           	
  1803  0413                     l2254:	
  1804                           	
  1805  0413                     l11371:	
  1806  0413  1283               	bcf	status, 5	;RP0=0, select bank0
  1807  0414  1303               	bcf	status, 6	;RP1=0, select bank0
  1808  0415  086C               	movf	(_buttonPressed),w	;volatile
  1809                           	; Switch size 1, requested type "space"
  1810                           ; Number of cases is 5, Range of values is 1 to 5
  1811                           ; switch strategies available:
  1812                           ; Name         Instructions Cycles
  1813                           ; simple_byte           16     9 (average)
  1814                           ; direct_byte           26    11 (fixed)
  1815                           ; jumptable            263     9 (fixed)
  1816                           ;	Chosen strategy is simple_byte
  1817                           
  1818                           	opt asmopt_off
  1819  0416  3A01               	xorlw	1^0	; case 1
  1820  0417  1903               	skipnz
  1821  0418  2BDC               	goto	l11349
  1822  0419  3A03               	xorlw	2^1	; case 2
  1823  041A  1903               	skipnz
  1824  041B  2BE6               	goto	l11353
  1825  041C  3A01               	xorlw	3^2	; case 3
  1826  041D  1903               	skipnz
  1827  041E  2BF0               	goto	l11357
  1828  041F  3A07               	xorlw	4^3	; case 4
  1829  0420  1903               	skipnz
  1830  0421  2BFA               	goto	l11361
  1831  0422  3A01               	xorlw	5^4	; case 5
  1832  0423  1903               	skipnz
  1833  0424  2C04               	goto	l11365
  1834  0425  2CA5               	goto	l11395
  1835                           	opt asmopt_on
  1836                           
  1837                           	line	382
  1838                           	
  1839  0426                     l2256:	
  1840                           	line	385
  1841                           ;Main.c: 385: switch (choice)
  1842  0426  2CA5               	goto	l11395
  1843                           	line	387
  1844                           ;Main.c: 386: {
  1845                           ;Main.c: 387: case 0:
  1846                           	
  1847  0427                     l2263:	
  1848                           	line	388
  1849                           	
  1850  0427                     l11373:	
  1851                           ;Main.c: 388: calibrateIR();
  1852  0427  120A  158A  256D   	fcall	_calibrateIR
              120A  118A         
  1853                           	line	389
  1854                           ;Main.c: 389: break;
  1855  042C  2CBB               	goto	l11397
  1856                           	line	390
  1857                           ;Main.c: 390: case 1:
  1858                           	
  1859  042D                     l2265:	
  1860                           	line	391
  1861                           	
  1862  042D                     l11375:	
  1863                           ;Main.c: 391: shortwall = scan360();
  1864  042D  120A  158A  25D1   	fcall	_scan360
              120A  118A         
  1865  0432  1283               	bcf	status, 5	;RP0=0, select bank0
  1866  0433  1303               	bcf	status, 6	;RP1=0, select bank0
  1867  0434  085B               	movf	(1+(?_scan360)),w
  1868  0435  01E6               	clrf	(main@shortwall+1)
  1869  0436  07E6               	addwf	(main@shortwall+1)
  1870  0437  085A               	movf	(0+(?_scan360)),w
  1871  0438  01E5               	clrf	(main@shortwall)
  1872  0439  07E5               	addwf	(main@shortwall)
  1873                           
  1874                           	line	392
  1875                           	
  1876  043A                     l11377:	
  1877                           ;Main.c: 392: rotate((400 - shortwall), 0);
  1878  043A  0965               	comf	(main@shortwall),w
  1879  043B  00E2               	movwf	(??_main+0)+0
  1880  043C  0966               	comf	(main@shortwall+1),w
  1881  043D  00E3               	movwf	((??_main+0)+0+1)
  1882  043E  0AE2               	incf	(??_main+0)+0,f
  1883  043F  1903               	skipnz
  1884  0440  0AE3               	incf	((??_main+0)+0+1),f
  1885  0441  0862               	movf	0+(??_main+0)+0,w
  1886  0442  3E90               	addlw	low(0190h)
  1887  0443  00A3               	movwf	(?_rotate)
  1888  0444  0863               	movf	1+(??_main+0)+0,w
  1889  0445  1803               	skipnc
  1890  0446  3E01               	addlw	1
  1891  0447  3E01               	addlw	high(0190h)
  1892  0448  00A4               	movwf	1+(?_rotate)
  1893  0449  01A5               	clrf	0+(?_rotate)+02h
  1894  044A  120A  158A  251D   	fcall	_rotate
              120A  118A         
  1895                           	line	393
  1896                           ;Main.c: 393: break;
  1897  044F  2CBB               	goto	l11397
  1898                           	line	394
  1899                           ;Main.c: 394: case 2:
  1900                           	
  1901  0450                     l2266:	
  1902                           	line	395
  1903                           	
  1904  0450                     l11379:	
  1905                           ;Main.c: 395: _delay((unsigned long)((100)*(20000000/4000.0)));
  1906                           	opt asmopt_off
  1907  0450  3003               movlw  3
  1908  0451  1283               	bcf	status, 5	;RP0=0, select bank0
  1909  0452  1303               	bcf	status, 6	;RP1=0, select bank0
  1910  0453  00E4               movwf	((??_main+0)+0+2),f
  1911  0454  308A               movlw	138
  1912  0455  00E3               movwf	((??_main+0)+0+1),f
  1913  0456  3056               	movlw	86
  1914  0457  00E2               movwf	((??_main+0)+0),f
  1915  0458                     u4997:
  1916  0458  0BE2               	decfsz	((??_main+0)+0),f
  1917  0459  2C58               	goto	u4997
  1918  045A  0BE3               	decfsz	((??_main+0)+0+1),f
  1919  045B  2C58               	goto	u4997
  1920  045C  0BE4               	decfsz	((??_main+0)+0+2),f
  1921  045D  2C58               	goto	u4997
  1922  045E  2C5F               	nop2
  1923                           opt asmopt_on
  1924                           
  1925                           	line	396
  1926                           	
  1927  045F                     l11381:	
  1928                           ;Main.c: 396: robotMove(200);
  1929  045F  30C8               	movlw	low(0C8h)
  1930  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  1931  0461  1303               	bcf	status, 6	;RP1=0, select bank0
  1932  0462  00A2               	movwf	(?_robotMove)
  1933  0463  3000               	movlw	high(0C8h)
  1934  0464  00A3               	movwf	((?_robotMove))+1
  1935  0465  120A  158A  26DC   	fcall	_robotMove
              120A  118A         
  1936                           	line	399
  1937                           ;Main.c: 399: break;
  1938  046A  2CBB               	goto	l11397
  1939                           	line	400
  1940                           ;Main.c: 400: case 3:
  1941                           	
  1942  046B                     l2267:	
  1943                           	line	401
  1944                           	
  1945  046B                     l11383:	
  1946                           ;Main.c: 401: _delay((unsigned long)((100)*(20000000/4000.0)));
  1947                           	opt asmopt_off
  1948  046B  3003               movlw  3
  1949  046C  1283               	bcf	status, 5	;RP0=0, select bank0
  1950  046D  1303               	bcf	status, 6	;RP1=0, select bank0
  1951  046E  00E4               movwf	((??_main+0)+0+2),f
  1952  046F  308A               movlw	138
  1953  0470  00E3               movwf	((??_main+0)+0+1),f
  1954  0471  3056               	movlw	86
  1955  0472  00E2               movwf	((??_main+0)+0),f
  1956  0473                     u5007:
  1957  0473  0BE2               	decfsz	((??_main+0)+0),f
  1958  0474  2C73               	goto	u5007
  1959  0475  0BE3               	decfsz	((??_main+0)+0+1),f
  1960  0476  2C73               	goto	u5007
  1961  0477  0BE4               	decfsz	((??_main+0)+0+2),f
  1962  0478  2C73               	goto	u5007
  1963  0479  2C7A               	nop2
  1964                           opt asmopt_on
  1965                           
  1966                           	line	402
  1967                           	
  1968  047A                     l11385:	
  1969                           ;Main.c: 402: robotMove(1000);
  1970  047A  30E8               	movlw	low(03E8h)
  1971  047B  1283               	bcf	status, 5	;RP0=0, select bank0
  1972  047C  1303               	bcf	status, 6	;RP1=0, select bank0
  1973  047D  00A2               	movwf	(?_robotMove)
  1974  047E  3003               	movlw	high(03E8h)
  1975  047F  00A3               	movwf	((?_robotMove))+1
  1976  0480  120A  158A  26DC   	fcall	_robotMove
              120A  118A         
  1977                           	line	403
  1978                           	
  1979  0485                     l11387:	
  1980                           ;Main.c: 403: robotTurn(-90);
  1981  0485  30A6               	movlw	low(-90)
  1982  0486  1283               	bcf	status, 5	;RP0=0, select bank0
  1983  0487  1303               	bcf	status, 6	;RP1=0, select bank0
  1984  0488  00A2               	movwf	(?_robotTurn)
  1985  0489  30FF               	movlw	high(-90)
  1986  048A  00A3               	movwf	((?_robotTurn))+1
  1987  048B  120A  158A  2654   	fcall	_robotTurn
              120A  118A         
  1988                           	line	404
  1989                           	
  1990  0490                     l11389:	
  1991                           ;Main.c: 404: robotMove(1000);
  1992  0490  30E8               	movlw	low(03E8h)
  1993  0491  1283               	bcf	status, 5	;RP0=0, select bank0
  1994  0492  1303               	bcf	status, 6	;RP1=0, select bank0
  1995  0493  00A2               	movwf	(?_robotMove)
  1996  0494  3003               	movlw	high(03E8h)
  1997  0495  00A3               	movwf	((?_robotMove))+1
  1998  0496  120A  158A  26DC   	fcall	_robotMove
              120A  118A         
  1999                           	line	405
  2000                           ;Main.c: 405: break;
  2001  049B  2CBB               	goto	l11397
  2002                           	line	406
  2003                           ;Main.c: 406: case 4:
  2004                           	
  2005  049C                     l2268:	
  2006                           	line	408
  2007                           ;Main.c: 408: break;
  2008  049C  2CBB               	goto	l11397
  2009                           	line	410
  2010                           ;Main.c: 410: case 5:
  2011                           	
  2012  049D                     l2269:	
  2013                           	line	411
  2014                           	
  2015  049D                     l11391:	
  2016                           ;Main.c: 411: ChargeMode();
  2017  049D  120A  158A  2484   	fcall	_ChargeMode
              120A  118A         
  2018                           	line	412
  2019                           ;Main.c: 412: break;
  2020  04A2  2CBB               	goto	l11397
  2021                           	line	413
  2022                           ;Main.c: 413: default:
  2023                           	
  2024  04A3                     l2270:	
  2025                           	line	415
  2026                           ;Main.c: 415: break;
  2027  04A3  2CBB               	goto	l11397
  2028                           	line	416
  2029                           	
  2030  04A4                     l11393:	
  2031                           ;Main.c: 416: }
  2032  04A4  2CBB               	goto	l11397
  2033                           	line	385
  2034                           	
  2035  04A5                     l2262:	
  2036                           	
  2037  04A5                     l11395:	
  2038  04A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2039  04A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2040  04A7  0867               	movf	(main@choice),w
  2041                           	; Switch size 1, requested type "space"
  2042                           ; Number of cases is 6, Range of values is 0 to 5
  2043                           ; switch strategies available:
  2044                           ; Name         Instructions Cycles
  2045                           ; simple_byte           19    10 (average)
  2046                           ; direct_byte           26     8 (fixed)
  2047                           ; jumptable            260     6 (fixed)
  2048                           ; rangetable            10     6 (fixed)
  2049                           ; spacedrange           18     9 (fixed)
  2050                           ; locatedrange           6     3 (fixed)
  2051                           ;	Chosen strategy is simple_byte
  2052                           
  2053                           	opt asmopt_off
  2054  04A8  3A00               	xorlw	0^0	; case 0
  2055  04A9  1903               	skipnz
  2056  04AA  2C27               	goto	l11373
  2057  04AB  3A01               	xorlw	1^0	; case 1
  2058  04AC  1903               	skipnz
  2059  04AD  2C2D               	goto	l11375
  2060  04AE  3A03               	xorlw	2^1	; case 2
  2061  04AF  1903               	skipnz
  2062  04B0  2C50               	goto	l11379
  2063  04B1  3A01               	xorlw	3^2	; case 3
  2064  04B2  1903               	skipnz
  2065  04B3  2C6B               	goto	l11383
  2066  04B4  3A07               	xorlw	4^3	; case 4
  2067  04B5  1903               	skipnz
  2068  04B6  2CBB               	goto	l11397
  2069  04B7  3A01               	xorlw	5^4	; case 5
  2070  04B8  1903               	skipnz
  2071  04B9  2C9D               	goto	l11391
  2072  04BA  2CBB               	goto	l11397
  2073                           	opt asmopt_on
  2074                           
  2075                           	line	416
  2076                           	
  2077  04BB                     l2264:	
  2078                           	line	417
  2079                           	
  2080  04BB                     l11397:	
  2081                           ;Main.c: 417: choice = 255;
  2082  04BB  30FF               	movlw	(0FFh)
  2083  04BC  1283               	bcf	status, 5	;RP0=0, select bank0
  2084  04BD  1303               	bcf	status, 6	;RP1=0, select bank0
  2085  04BE  00E2               	movwf	(??_main+0)+0
  2086  04BF  0862               	movf	(??_main+0)+0,w
  2087  04C0  00E7               	movwf	(main@choice)
  2088  04C1  2BB7               	goto	l11333
  2089                           	line	418
  2090                           	
  2091  04C2                     l2271:	
  2092                           	line	328
  2093  04C2  2BB7               	goto	l11333
  2094                           	
  2095  04C3                     l2272:	
  2096                           	line	419
  2097                           	
  2098  04C3                     l2273:	
  2099                           	global	start
  2100  04C3  120A  118A  2812   	ljmp	start
  2101                           	opt stack 0
  2102                           GLOBAL	__end_of_main
  2103  04C6                     	__end_of_main:
  2104 ;; =============== function _main ends ============
  2105                           
  2106                           	signat	_main,88
  2107                           	global	_scan360
  2108                           psect	text1211,local,class=CODE,delta=2
  2109                           global __ptext1211
  2110  0DD1                     __ptext1211:
  2111                           
  2112 ;; *************** function _scan360 *****************
  2113 ;; Defined at:
  2114 ;;		line 289 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  steps           2   64[BANK0 ] int 
  2119 ;;  lowestSteps     2   62[BANK0 ] int 
  2120 ;;  lowestVal       2   60[BANK0 ] int 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  2   58[BANK0 ] int 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       2       0       0       0
  2131 ;;      Locals:         0       6       0       0       0
  2132 ;;      Temps:          0       0       0       0       0
  2133 ;;      Totals:         0       8       0       0       0
  2134 ;;Total ram usage:        8 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    7
  2137 ;; This function calls:
  2138 ;;		_readAvgDistance
  2139 ;;		_rotate
  2140 ;;		_UpdateDisplay
  2141 ;; This function is called by:
  2142 ;;		_main
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           psect	text1211
  2146                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2147                           	line	289
  2148                           	global	__size_of_scan360
  2149  0083                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  2150                           	
  2151  0DD1                     _scan360:	
  2152                           	opt	stack 0
  2153                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2154                           	line	290
  2155                           	
  2156  0DD1                     l10983:	
  2157                           ;Main.c: 290: int lowestVal = 0, lowestSteps = 0;
  2158  0DD1  1283               	bcf	status, 5	;RP0=0, select bank0
  2159  0DD2  1303               	bcf	status, 6	;RP1=0, select bank0
  2160  0DD3  01DC               	clrf	(scan360@lowestVal)
  2161  0DD4  01DD               	clrf	(scan360@lowestVal+1)
  2162  0DD5  01DE               	clrf	(scan360@lowestSteps)
  2163  0DD6  01DF               	clrf	(scan360@lowestSteps+1)
  2164                           	line	291
  2165                           	
  2166  0DD7                     l10985:	
  2167                           ;Main.c: 291: SCAN_FLAG = 1;
  2168  0DD7  1683               	bsf	status, 5	;RP0=1, select bank1
  2169  0DD8  1303               	bcf	status, 6	;RP1=0, select bank1
  2170  0DD9  01D4               	clrf	(_SCAN_FLAG)^080h
  2171  0DDA  1403               	bsf	status,0
  2172  0DDB  0DD4               	rlf	(_SCAN_FLAG)^080h,f
  2173                           	line	292
  2174                           	
  2175  0DDC                     l10987:	
  2176                           ;Main.c: 292: for (int steps = 0; steps < 400; steps++)
  2177  0DDC  1283               	bcf	status, 5	;RP0=0, select bank0
  2178  0DDD  1303               	bcf	status, 6	;RP1=0, select bank0
  2179  0DDE  01E0               	clrf	(scan360@steps)
  2180  0DDF  01E1               	clrf	(scan360@steps+1)
  2181                           	
  2182  0DE0                     l10989:	
  2183  0DE0  0861               	movf	(scan360@steps+1),w
  2184  0DE1  3A80               	xorlw	80h
  2185  0DE2  00FF               	movwf	btemp+1
  2186  0DE3  3081               	movlw	(high(0190h))^80h
  2187  0DE4  027F               	subwf	btemp+1,w
  2188  0DE5  1D03               	skipz
  2189  0DE6  2DE9               	goto	u4525
  2190  0DE7  3090               	movlw	low(0190h)
  2191  0DE8  0260               	subwf	(scan360@steps),w
  2192  0DE9                     u4525:
  2193                           
  2194  0DE9  1C03               	skipc
  2195  0DEA  2DEC               	goto	u4521
  2196  0DEB  2DED               	goto	u4520
  2197  0DEC                     u4521:
  2198  0DEC  2DEF               	goto	l10993
  2199  0DED                     u4520:
  2200  0DED  2E47               	goto	l2246
  2201                           	
  2202  0DEE                     l10991:	
  2203  0DEE  2E47               	goto	l2246
  2204                           	line	293
  2205                           	
  2206  0DEF                     l2245:	
  2207                           	line	294
  2208                           	
  2209  0DEF                     l10993:	
  2210                           ;Main.c: 293: {
  2211                           ;Main.c: 294: readAvgDistance();
  2212  0DEF  120A  118A  279F   	fcall	_readAvgDistance
              120A  158A         
  2213                           	line	295
  2214                           	
  2215  0DF4                     l10995:	
  2216                           ;Main.c: 295: if (adcVal > lowestVal)
  2217  0DF4  1283               	bcf	status, 5	;RP0=0, select bank0
  2218  0DF5  1303               	bcf	status, 6	;RP1=0, select bank0
  2219  0DF6  086B               	movf	(_adcVal+1),w	;volatile
  2220  0DF7  025D               	subwf	(scan360@lowestVal+1),w
  2221  0DF8  1D03               	skipz
  2222  0DF9  2DFC               	goto	u4535
  2223  0DFA  086A               	movf	(_adcVal),w	;volatile
  2224  0DFB  025C               	subwf	(scan360@lowestVal),w
  2225  0DFC                     u4535:
  2226  0DFC  1803               	skipnc
  2227  0DFD  2DFF               	goto	u4531
  2228  0DFE  2E00               	goto	u4530
  2229  0DFF                     u4531:
  2230  0DFF  2E0D               	goto	l10999
  2231  0E00                     u4530:
  2232                           	line	297
  2233                           	
  2234  0E00                     l10997:	
  2235                           ;Main.c: 296: {
  2236                           ;Main.c: 297: lowestVal = adcVal;
  2237  0E00  086B               	movf	(_adcVal+1),w	;volatile
  2238  0E01  01DD               	clrf	(scan360@lowestVal+1)	;volatile
  2239  0E02  07DD               	addwf	(scan360@lowestVal+1)	;volatile
  2240  0E03  086A               	movf	(_adcVal),w	;volatile
  2241  0E04  01DC               	clrf	(scan360@lowestVal)	;volatile
  2242  0E05  07DC               	addwf	(scan360@lowestVal)	;volatile
  2243                           
  2244                           	line	298
  2245                           ;Main.c: 298: lowestSteps = steps;
  2246  0E06  0861               	movf	(scan360@steps+1),w
  2247  0E07  01DF               	clrf	(scan360@lowestSteps+1)
  2248  0E08  07DF               	addwf	(scan360@lowestSteps+1)
  2249  0E09  0860               	movf	(scan360@steps),w
  2250  0E0A  01DE               	clrf	(scan360@lowestSteps)
  2251  0E0B  07DE               	addwf	(scan360@lowestSteps)
  2252                           
  2253  0E0C  2E0D               	goto	l10999
  2254                           	line	300
  2255                           	
  2256  0E0D                     l2247:	
  2257                           	line	301
  2258                           	
  2259  0E0D                     l10999:	
  2260                           ;Main.c: 300: }
  2261                           ;Main.c: 301: rotate(1, 1);
  2262  0E0D  3001               	movlw	low(01h)
  2263  0E0E  00A3               	movwf	(?_rotate)
  2264  0E0F  3000               	movlw	high(01h)
  2265  0E10  00A4               	movwf	((?_rotate))+1
  2266  0E11  01A5               	clrf	0+(?_rotate)+02h
  2267  0E12  1403               	bsf	status,0
  2268  0E13  0DA5               	rlf	0+(?_rotate)+02h,f
  2269  0E14  120A  158A  251D   	fcall	_rotate
              120A  158A         
  2270                           	line	303
  2271                           	
  2272  0E19                     l11001:	
  2273                           ;Main.c: 303: if (RTC_FLAG_250MS == 1)
  2274  0E19  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2275  0E1A  2E1C               	goto	u4541
  2276  0E1B  2E1D               	goto	u4540
  2277  0E1C                     u4541:
  2278  0E1C  2E24               	goto	l11007
  2279  0E1D                     u4540:
  2280                           	line	305
  2281                           	
  2282  0E1D                     l11003:	
  2283                           ;Main.c: 304: {
  2284                           ;Main.c: 305: RTC_FLAG_250MS = 0;
  2285  0E1D  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2286                           	line	306
  2287                           	
  2288  0E1E                     l11005:	
  2289                           ;Main.c: 306: UpdateDisplay();
  2290  0E1E  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2291  0E23  2E24               	goto	l11007
  2292                           	line	307
  2293                           	
  2294  0E24                     l2248:	
  2295                           	line	308
  2296                           	
  2297  0E24                     l11007:	
  2298                           ;Main.c: 307: }
  2299                           ;Main.c: 308: test = lowestSteps;
  2300  0E24  1283               	bcf	status, 5	;RP0=0, select bank0
  2301  0E25  1303               	bcf	status, 6	;RP1=0, select bank0
  2302  0E26  085F               	movf	(scan360@lowestSteps+1),w
  2303  0E27  1683               	bsf	status, 5	;RP0=1, select bank1
  2304  0E28  1303               	bcf	status, 6	;RP1=0, select bank1
  2305  0E29  01C9               	clrf	(_test+1)^080h
  2306  0E2A  07C9               	addwf	(_test+1)^080h
  2307  0E2B  1283               	bcf	status, 5	;RP0=0, select bank0
  2308  0E2C  1303               	bcf	status, 6	;RP1=0, select bank0
  2309  0E2D  085E               	movf	(scan360@lowestSteps),w
  2310  0E2E  1683               	bsf	status, 5	;RP0=1, select bank1
  2311  0E2F  1303               	bcf	status, 6	;RP1=0, select bank1
  2312  0E30  01C8               	clrf	(_test)^080h
  2313  0E31  07C8               	addwf	(_test)^080h
  2314                           
  2315                           	line	292
  2316                           	
  2317  0E32                     l11009:	
  2318  0E32  3001               	movlw	low(01h)
  2319  0E33  1283               	bcf	status, 5	;RP0=0, select bank0
  2320  0E34  1303               	bcf	status, 6	;RP1=0, select bank0
  2321  0E35  07E0               	addwf	(scan360@steps),f
  2322  0E36  1803               	skipnc
  2323  0E37  0AE1               	incf	(scan360@steps+1),f
  2324  0E38  3000               	movlw	high(01h)
  2325  0E39  07E1               	addwf	(scan360@steps+1),f
  2326                           	
  2327  0E3A                     l11011:	
  2328  0E3A  0861               	movf	(scan360@steps+1),w
  2329  0E3B  3A80               	xorlw	80h
  2330  0E3C  00FF               	movwf	btemp+1
  2331  0E3D  3081               	movlw	(high(0190h))^80h
  2332  0E3E  027F               	subwf	btemp+1,w
  2333  0E3F  1D03               	skipz
  2334  0E40  2E43               	goto	u4555
  2335  0E41  3090               	movlw	low(0190h)
  2336  0E42  0260               	subwf	(scan360@steps),w
  2337  0E43                     u4555:
  2338                           
  2339  0E43  1C03               	skipc
  2340  0E44  2E46               	goto	u4551
  2341  0E45  2E47               	goto	u4550
  2342  0E46                     u4551:
  2343  0E46  2DEF               	goto	l10993
  2344  0E47                     u4550:
  2345                           	
  2346  0E47                     l2246:	
  2347                           	line	310
  2348                           ;Main.c: 309: }
  2349                           ;Main.c: 310: SCAN_FLAG = 0;
  2350  0E47  1683               	bsf	status, 5	;RP0=1, select bank1
  2351  0E48  1303               	bcf	status, 6	;RP1=0, select bank1
  2352  0E49  01D4               	clrf	(_SCAN_FLAG)^080h
  2353                           	line	311
  2354                           	
  2355  0E4A                     l11013:	
  2356                           ;Main.c: 311: return lowestSteps;
  2357  0E4A  1283               	bcf	status, 5	;RP0=0, select bank0
  2358  0E4B  1303               	bcf	status, 6	;RP1=0, select bank0
  2359  0E4C  085F               	movf	(scan360@lowestSteps+1),w
  2360  0E4D  01DB               	clrf	(?_scan360+1)
  2361  0E4E  07DB               	addwf	(?_scan360+1)
  2362  0E4F  085E               	movf	(scan360@lowestSteps),w
  2363  0E50  01DA               	clrf	(?_scan360)
  2364  0E51  07DA               	addwf	(?_scan360)
  2365                           
  2366  0E52  2E53               	goto	l2249
  2367                           	
  2368  0E53                     l11015:	
  2369                           	line	312
  2370                           	
  2371  0E53                     l2249:	
  2372  0E53  0008               	return
  2373                           	opt stack 0
  2374                           GLOBAL	__end_of_scan360
  2375  0E54                     	__end_of_scan360:
  2376 ;; =============== function _scan360 ends ============
  2377                           
  2378                           	signat	_scan360,90
  2379                           	global	_ChargeMode
  2380                           psect	text1212,local,class=CODE,delta=2
  2381                           global __ptext1212
  2382  0C84                     __ptext1212:
  2383                           
  2384 ;; *************** function _ChargeMode *****************
  2385 ;; Defined at:
  2386 ;;		line 235 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;		None               void
  2393 ;; Registers used:
  2394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0
  2402 ;;      Temps:          0       1       0       0       0
  2403 ;;      Totals:         0       1       0       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    6
  2407 ;; This function calls:
  2408 ;;		_ser_putch
  2409 ;;		_UpdateDisplay
  2410 ;; This function is called by:
  2411 ;;		_main
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           psect	text1212
  2415                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2416                           	line	235
  2417                           	global	__size_of_ChargeMode
  2418  0049                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2419                           	
  2420  0C84                     _ChargeMode:	
  2421                           	opt	stack 1
  2422                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2423                           	line	237
  2424                           	
  2425  0C84                     l10961:	
  2426                           ;Main.c: 237: currentMenu = 2;
  2427  0C84  3002               	movlw	(02h)
  2428  0C85  1283               	bcf	status, 5	;RP0=0, select bank0
  2429  0C86  1303               	bcf	status, 6	;RP1=0, select bank0
  2430  0C87  00DA               	movwf	(??_ChargeMode+0)+0
  2431  0C88  085A               	movf	(??_ChargeMode+0)+0,w
  2432  0C89  1683               	bsf	status, 5	;RP0=1, select bank1
  2433  0C8A  1303               	bcf	status, 6	;RP1=0, select bank1
  2434  0C8B  00D6               	movwf	(_currentMenu)^080h
  2435                           	line	238
  2436                           	
  2437  0C8C                     l10963:	
  2438                           ;Main.c: 238: ser_putch(128);
  2439  0C8C  3080               	movlw	(080h)
  2440  0C8D  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  2441  0C92  2C93               	goto	l10965
  2442                           	line	240
  2443                           ;Main.c: 240: while (1)
  2444                           	
  2445  0C93                     l2230:	
  2446                           	line	242
  2447                           	
  2448  0C93                     l10965:	
  2449                           ;Main.c: 241: {
  2450                           ;Main.c: 242: if (RTC_FLAG_250MS == 1)
  2451  0C93  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2452  0C94  2C96               	goto	u4511
  2453  0C95  2C97               	goto	u4510
  2454  0C96                     u4511:
  2455  0C96  2CB7               	goto	l10981
  2456  0C97                     u4510:
  2457                           	line	244
  2458                           	
  2459  0C97                     l10967:	
  2460                           ;Main.c: 243: {
  2461                           ;Main.c: 244: RTC_FLAG_250MS = 0;
  2462  0C97  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2463                           	line	245
  2464                           	
  2465  0C98                     l10969:	
  2466                           ;Main.c: 245: UpdateDisplay();
  2467  0C98  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2468  0C9D  2CB7               	goto	l10981
  2469                           	line	246
  2470                           	
  2471  0C9E                     l2231:	
  2472                           	line	247
  2473                           ;Main.c: 246: }
  2474                           ;Main.c: 247: switch (buttonPressed)
  2475  0C9E  2CB7               	goto	l10981
  2476                           	line	249
  2477                           ;Main.c: 248: {
  2478                           ;Main.c: 249: case 1:
  2479                           	
  2480  0C9F                     l2233:	
  2481                           	line	252
  2482                           ;Main.c: 252: buttonPressed = 0;
  2483  0C9F  01EC               	clrf	(_buttonPressed)	;volatile
  2484                           	line	254
  2485                           ;Main.c: 254: break;
  2486  0CA0  2C93               	goto	l10965
  2487                           	line	255
  2488                           ;Main.c: 255: case 2:
  2489                           	
  2490  0CA1                     l2235:	
  2491                           	line	258
  2492                           ;Main.c: 258: buttonPressed = 0;
  2493  0CA1  01EC               	clrf	(_buttonPressed)	;volatile
  2494                           	line	260
  2495                           ;Main.c: 260: break;
  2496  0CA2  2C93               	goto	l10965
  2497                           	line	261
  2498                           ;Main.c: 261: case 3:
  2499                           	
  2500  0CA3                     l2236:	
  2501                           	line	264
  2502                           ;Main.c: 264: buttonPressed = 0;
  2503  0CA3  01EC               	clrf	(_buttonPressed)	;volatile
  2504                           	line	266
  2505                           ;Main.c: 266: break;
  2506  0CA4  2C93               	goto	l10965
  2507                           	line	267
  2508                           ;Main.c: 267: case 4:
  2509                           	
  2510  0CA5                     l2237:	
  2511                           	line	270
  2512                           ;Main.c: 270: buttonPressed = 0;
  2513  0CA5  01EC               	clrf	(_buttonPressed)	;volatile
  2514                           	line	272
  2515                           ;Main.c: 272: break;
  2516  0CA6  2C93               	goto	l10965
  2517                           	line	273
  2518                           ;Main.c: 273: case 5:
  2519                           	
  2520  0CA7                     l2238:	
  2521                           	line	274
  2522                           	
  2523  0CA7                     l10971:	
  2524                           ;Main.c: 274: ser_putch(132);
  2525  0CA7  3084               	movlw	(084h)
  2526  0CA8  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  2527                           	line	276
  2528                           	
  2529  0CAD                     l10973:	
  2530                           ;Main.c: 276: buttonPressed = 0;
  2531  0CAD  1283               	bcf	status, 5	;RP0=0, select bank0
  2532  0CAE  1303               	bcf	status, 6	;RP1=0, select bank0
  2533  0CAF  01EC               	clrf	(_buttonPressed)	;volatile
  2534                           	line	277
  2535                           	
  2536  0CB0                     l10975:	
  2537                           ;Main.c: 277: currentMenu = 0;
  2538  0CB0  1683               	bsf	status, 5	;RP0=1, select bank1
  2539  0CB1  1303               	bcf	status, 6	;RP1=0, select bank1
  2540  0CB2  01D6               	clrf	(_currentMenu)^080h
  2541  0CB3  2CCC               	goto	l2239
  2542                           	line	278
  2543                           	
  2544  0CB4                     l10977:	
  2545                           ;Main.c: 278: return;
  2546  0CB4  2CCC               	goto	l2239
  2547                           	line	280
  2548                           ;Main.c: 280: default:
  2549                           	
  2550  0CB5                     l2240:	
  2551                           	line	282
  2552                           ;Main.c: 282: break;
  2553  0CB5  2C93               	goto	l10965
  2554                           	line	283
  2555                           	
  2556  0CB6                     l10979:	
  2557                           ;Main.c: 283: }
  2558  0CB6  2C93               	goto	l10965
  2559                           	line	247
  2560                           	
  2561  0CB7                     l2232:	
  2562                           	
  2563  0CB7                     l10981:	
  2564  0CB7  1283               	bcf	status, 5	;RP0=0, select bank0
  2565  0CB8  1303               	bcf	status, 6	;RP1=0, select bank0
  2566  0CB9  086C               	movf	(_buttonPressed),w	;volatile
  2567                           	; Switch size 1, requested type "space"
  2568                           ; Number of cases is 5, Range of values is 1 to 5
  2569                           ; switch strategies available:
  2570                           ; Name         Instructions Cycles
  2571                           ; simple_byte           16     9 (average)
  2572                           ; direct_byte           26    11 (fixed)
  2573                           ; jumptable            263     9 (fixed)
  2574                           ;	Chosen strategy is simple_byte
  2575                           
  2576                           	opt asmopt_off
  2577  0CBA  3A01               	xorlw	1^0	; case 1
  2578  0CBB  1903               	skipnz
  2579  0CBC  2C9F               	goto	l2233
  2580  0CBD  3A03               	xorlw	2^1	; case 2
  2581  0CBE  1903               	skipnz
  2582  0CBF  2CA1               	goto	l2235
  2583  0CC0  3A01               	xorlw	3^2	; case 3
  2584  0CC1  1903               	skipnz
  2585  0CC2  2CA3               	goto	l2236
  2586  0CC3  3A07               	xorlw	4^3	; case 4
  2587  0CC4  1903               	skipnz
  2588  0CC5  2CA5               	goto	l2237
  2589  0CC6  3A01               	xorlw	5^4	; case 5
  2590  0CC7  1903               	skipnz
  2591  0CC8  2CA7               	goto	l10971
  2592  0CC9  2C93               	goto	l10965
  2593                           	opt asmopt_on
  2594                           
  2595                           	line	283
  2596                           	
  2597  0CCA                     l2234:	
  2598  0CCA  2C93               	goto	l10965
  2599                           	line	284
  2600                           	
  2601  0CCB                     l2241:	
  2602                           	line	240
  2603  0CCB  2C93               	goto	l10965
  2604                           	
  2605  0CCC                     l2242:	
  2606                           	line	285
  2607                           	
  2608  0CCC                     l2239:	
  2609  0CCC  0008               	return
  2610                           	opt stack 0
  2611                           GLOBAL	__end_of_ChargeMode
  2612  0CCD                     	__end_of_ChargeMode:
  2613 ;; =============== function _ChargeMode ends ============
  2614                           
  2615                           	signat	_ChargeMode,88
  2616                           	global	_calibrateIR
  2617                           psect	text1213,local,class=CODE,delta=2
  2618                           global __ptext1213
  2619  0D6D                     __ptext1213:
  2620                           
  2621 ;; *************** function _calibrateIR *****************
  2622 ;; Defined at:
  2623 ;;		line 184 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;		None               void
  2630 ;; Registers used:
  2631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0
  2640 ;;      Totals:         0       0       0       0       0
  2641 ;;Total ram usage:        0 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    6
  2644 ;; This function calls:
  2645 ;;		_rotate
  2646 ;;		_UpdateDisplay
  2647 ;; This function is called by:
  2648 ;;		_main
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           psect	text1213
  2652                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2653                           	line	184
  2654                           	global	__size_of_calibrateIR
  2655  0064                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  2656                           	
  2657  0D6D                     _calibrateIR:	
  2658                           	opt	stack 1
  2659                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2660                           	line	186
  2661                           	
  2662  0D6D                     l10931:	
  2663                           ;Main.c: 186: currentMenu = 1;
  2664  0D6D  1683               	bsf	status, 5	;RP0=1, select bank1
  2665  0D6E  1303               	bcf	status, 6	;RP1=0, select bank1
  2666  0D6F  01D6               	clrf	(_currentMenu)^080h
  2667  0D70  1403               	bsf	status,0
  2668  0D71  0DD6               	rlf	(_currentMenu)^080h,f
  2669                           	line	187
  2670                           	
  2671  0D72                     l10933:	
  2672                           ;Main.c: 187: rotate(8, 0);
  2673  0D72  3008               	movlw	low(08h)
  2674  0D73  1283               	bcf	status, 5	;RP0=0, select bank0
  2675  0D74  1303               	bcf	status, 6	;RP1=0, select bank0
  2676  0D75  00A3               	movwf	(?_rotate)
  2677  0D76  3000               	movlw	high(08h)
  2678  0D77  00A4               	movwf	((?_rotate))+1
  2679  0D78  01A5               	clrf	0+(?_rotate)+02h
  2680  0D79  120A  158A  251D   	fcall	_rotate
              120A  158A         
  2681  0D7E  2D7F               	goto	l10935
  2682                           	line	188
  2683                           ;Main.c: 188: while (1)
  2684                           	
  2685  0D7F                     l2215:	
  2686                           	line	190
  2687                           	
  2688  0D7F                     l10935:	
  2689                           ;Main.c: 189: {
  2690                           ;Main.c: 190: if (RTC_FLAG_250MS == 1)
  2691  0D7F  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2692  0D80  2D82               	goto	u4501
  2693  0D81  2D83               	goto	u4500
  2694  0D82                     u4501:
  2695  0D82  2DBB               	goto	l10959
  2696  0D83                     u4500:
  2697                           	line	192
  2698                           	
  2699  0D83                     l10937:	
  2700                           ;Main.c: 191: {
  2701                           ;Main.c: 192: RTC_FLAG_250MS = 0;
  2702  0D83  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2703                           	line	193
  2704                           	
  2705  0D84                     l10939:	
  2706                           ;Main.c: 193: UpdateDisplay();
  2707  0D84  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2708  0D89  2DBB               	goto	l10959
  2709                           	line	194
  2710                           	
  2711  0D8A                     l2216:	
  2712                           	line	195
  2713                           ;Main.c: 194: }
  2714                           ;Main.c: 195: switch (buttonPressed)
  2715  0D8A  2DBB               	goto	l10959
  2716                           	line	197
  2717                           ;Main.c: 196: {
  2718                           ;Main.c: 197: case 1:
  2719                           	
  2720  0D8B                     l2218:	
  2721                           	line	200
  2722                           ;Main.c: 200: buttonPressed = 0;
  2723  0D8B  01EC               	clrf	(_buttonPressed)	;volatile
  2724                           	line	202
  2725                           ;Main.c: 202: break;
  2726  0D8C  2D7F               	goto	l10935
  2727                           	line	203
  2728                           ;Main.c: 203: case 2:
  2729                           	
  2730  0D8D                     l2220:	
  2731                           	line	206
  2732                           ;Main.c: 206: buttonPressed = 0;
  2733  0D8D  01EC               	clrf	(_buttonPressed)	;volatile
  2734                           	line	208
  2735                           ;Main.c: 208: break;
  2736  0D8E  2D7F               	goto	l10935
  2737                           	line	209
  2738                           ;Main.c: 209: case 3:
  2739                           	
  2740  0D8F                     l2221:	
  2741                           	line	210
  2742                           	
  2743  0D8F                     l10941:	
  2744                           ;Main.c: 210: rotate(1, 1);
  2745  0D8F  3001               	movlw	low(01h)
  2746  0D90  00A3               	movwf	(?_rotate)
  2747  0D91  3000               	movlw	high(01h)
  2748  0D92  00A4               	movwf	((?_rotate))+1
  2749  0D93  01A5               	clrf	0+(?_rotate)+02h
  2750  0D94  1403               	bsf	status,0
  2751  0D95  0DA5               	rlf	0+(?_rotate)+02h,f
  2752  0D96  120A  158A  251D   	fcall	_rotate
              120A  158A         
  2753                           	line	212
  2754                           	
  2755  0D9B                     l10943:	
  2756                           ;Main.c: 212: buttonPressed = 0;
  2757  0D9B  1283               	bcf	status, 5	;RP0=0, select bank0
  2758  0D9C  1303               	bcf	status, 6	;RP1=0, select bank0
  2759  0D9D  01EC               	clrf	(_buttonPressed)	;volatile
  2760                           	line	214
  2761                           ;Main.c: 214: break;
  2762  0D9E  2D7F               	goto	l10935
  2763                           	line	215
  2764                           ;Main.c: 215: case 4:
  2765                           	
  2766  0D9F                     l2222:	
  2767                           	line	216
  2768                           	
  2769  0D9F                     l10945:	
  2770                           ;Main.c: 216: rotate(1, 0);
  2771  0D9F  3001               	movlw	low(01h)
  2772  0DA0  00A3               	movwf	(?_rotate)
  2773  0DA1  3000               	movlw	high(01h)
  2774  0DA2  00A4               	movwf	((?_rotate))+1
  2775  0DA3  01A5               	clrf	0+(?_rotate)+02h
  2776  0DA4  120A  158A  251D   	fcall	_rotate
              120A  158A         
  2777                           	line	218
  2778                           	
  2779  0DA9                     l10947:	
  2780                           ;Main.c: 218: buttonPressed = 0;
  2781  0DA9  1283               	bcf	status, 5	;RP0=0, select bank0
  2782  0DAA  1303               	bcf	status, 6	;RP1=0, select bank0
  2783  0DAB  01EC               	clrf	(_buttonPressed)	;volatile
  2784                           	line	220
  2785                           ;Main.c: 220: break;
  2786  0DAC  2D7F               	goto	l10935
  2787                           	line	221
  2788                           ;Main.c: 221: case 5:
  2789                           	
  2790  0DAD                     l2223:	
  2791                           	line	222
  2792                           	
  2793  0DAD                     l10949:	
  2794                           ;Main.c: 222: totalSteps = 0;
  2795  0DAD  1683               	bsf	status, 5	;RP0=1, select bank1
  2796  0DAE  1303               	bcf	status, 6	;RP1=0, select bank1
  2797  0DAF  01CC               	clrf	(_totalSteps)^080h
  2798  0DB0  01CD               	clrf	(_totalSteps+1)^080h
  2799                           	line	224
  2800                           	
  2801  0DB1                     l10951:	
  2802                           ;Main.c: 224: buttonPressed = 0;
  2803  0DB1  1283               	bcf	status, 5	;RP0=0, select bank0
  2804  0DB2  1303               	bcf	status, 6	;RP1=0, select bank0
  2805  0DB3  01EC               	clrf	(_buttonPressed)	;volatile
  2806                           	line	225
  2807                           	
  2808  0DB4                     l10953:	
  2809                           ;Main.c: 225: currentMenu = 0;
  2810  0DB4  1683               	bsf	status, 5	;RP0=1, select bank1
  2811  0DB5  1303               	bcf	status, 6	;RP1=0, select bank1
  2812  0DB6  01D6               	clrf	(_currentMenu)^080h
  2813  0DB7  2DD0               	goto	l2224
  2814                           	line	226
  2815                           	
  2816  0DB8                     l10955:	
  2817                           ;Main.c: 226: return;
  2818  0DB8  2DD0               	goto	l2224
  2819                           	line	228
  2820                           ;Main.c: 228: default:
  2821                           	
  2822  0DB9                     l2225:	
  2823                           	line	230
  2824                           ;Main.c: 230: break;
  2825  0DB9  2D7F               	goto	l10935
  2826                           	line	231
  2827                           	
  2828  0DBA                     l10957:	
  2829                           ;Main.c: 231: }
  2830  0DBA  2D7F               	goto	l10935
  2831                           	line	195
  2832                           	
  2833  0DBB                     l2217:	
  2834                           	
  2835  0DBB                     l10959:	
  2836  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  2837  0DBC  1303               	bcf	status, 6	;RP1=0, select bank0
  2838  0DBD  086C               	movf	(_buttonPressed),w	;volatile
  2839                           	; Switch size 1, requested type "space"
  2840                           ; Number of cases is 5, Range of values is 1 to 5
  2841                           ; switch strategies available:
  2842                           ; Name         Instructions Cycles
  2843                           ; simple_byte           16     9 (average)
  2844                           ; direct_byte           26    11 (fixed)
  2845                           ; jumptable            263     9 (fixed)
  2846                           ;	Chosen strategy is simple_byte
  2847                           
  2848                           	opt asmopt_off
  2849  0DBE  3A01               	xorlw	1^0	; case 1
  2850  0DBF  1903               	skipnz
  2851  0DC0  2D8B               	goto	l2218
  2852  0DC1  3A03               	xorlw	2^1	; case 2
  2853  0DC2  1903               	skipnz
  2854  0DC3  2D8D               	goto	l2220
  2855  0DC4  3A01               	xorlw	3^2	; case 3
  2856  0DC5  1903               	skipnz
  2857  0DC6  2D8F               	goto	l10941
  2858  0DC7  3A07               	xorlw	4^3	; case 4
  2859  0DC8  1903               	skipnz
  2860  0DC9  2D9F               	goto	l10945
  2861  0DCA  3A01               	xorlw	5^4	; case 5
  2862  0DCB  1903               	skipnz
  2863  0DCC  2DAD               	goto	l10949
  2864  0DCD  2D7F               	goto	l10935
  2865                           	opt asmopt_on
  2866                           
  2867                           	line	231
  2868                           	
  2869  0DCE                     l2219:	
  2870  0DCE  2D7F               	goto	l10935
  2871                           	line	232
  2872                           	
  2873  0DCF                     l2226:	
  2874                           	line	188
  2875  0DCF  2D7F               	goto	l10935
  2876                           	
  2877  0DD0                     l2227:	
  2878                           	line	233
  2879                           	
  2880  0DD0                     l2224:	
  2881  0DD0  0008               	return
  2882                           	opt stack 0
  2883                           GLOBAL	__end_of_calibrateIR
  2884  0DD1                     	__end_of_calibrateIR:
  2885 ;; =============== function _calibrateIR ends ============
  2886                           
  2887                           	signat	_calibrateIR,88
  2888                           	global	_readAvgDistance
  2889                           psect	text1214,local,class=CODE,delta=2
  2890                           global __ptext1214
  2891  079F                     __ptext1214:
  2892                           
  2893 ;; *************** function _readAvgDistance *****************
  2894 ;; Defined at:
  2895 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  i               2   18[BANK0 ] int 
  2900 ;;  fullval         2   16[BANK0 ] unsigned int 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;		None               void
  2903 ;; Registers used:
  2904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2910 ;;      Params:         0       0       0       0       0
  2911 ;;      Locals:         0       4       0       0       0
  2912 ;;      Temps:          0       0       0       0       0
  2913 ;;      Totals:         0       4       0       0       0
  2914 ;;Total ram usage:        4 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    6
  2917 ;; This function calls:
  2918 ;;		_readDistance
  2919 ;;		___lwdiv
  2920 ;;		_ADCconvert
  2921 ;; This function is called by:
  2922 ;;		_scan360
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           psect	text1214
  2927                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  2928                           	line	10
  2929                           	global	__size_of_readAvgDistance
  2930  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  2931                           	
  2932  079F                     _readAvgDistance:	
  2933                           	opt	stack 0
  2934                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2935                           	line	11
  2936                           	
  2937  079F                     l10917:	
  2938                           ;infrared.c: 11: unsigned int fullval = 0;
  2939  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  2940  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2941  07A1  01B0               	clrf	(readAvgDistance@fullval)
  2942  07A2  01B1               	clrf	(readAvgDistance@fullval+1)
  2943                           	line	14
  2944                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  2945  07A3  01B2               	clrf	(readAvgDistance@i)
  2946  07A4  01B3               	clrf	(readAvgDistance@i+1)
  2947                           	
  2948  07A5                     l10919:	
  2949  07A5  0833               	movf	(readAvgDistance@i+1),w
  2950  07A6  3A80               	xorlw	80h
  2951  07A7  00FF               	movwf	btemp+1
  2952  07A8  3080               	movlw	(high(0Ah))^80h
  2953  07A9  027F               	subwf	btemp+1,w
  2954  07AA  1D03               	skipz
  2955  07AB  2FAE               	goto	u4485
  2956  07AC  300A               	movlw	low(0Ah)
  2957  07AD  0232               	subwf	(readAvgDistance@i),w
  2958  07AE                     u4485:
  2959                           
  2960  07AE  1C03               	skipc
  2961  07AF  2FB1               	goto	u4481
  2962  07B0  2FB2               	goto	u4480
  2963  07B1                     u4481:
  2964  07B1  2FB4               	goto	l10923
  2965  07B2                     u4480:
  2966  07B2  2FD5               	goto	l10929
  2967                           	
  2968  07B3                     l10921:	
  2969  07B3  2FD5               	goto	l10929
  2970                           	line	15
  2971                           	
  2972  07B4                     l2976:	
  2973                           	line	16
  2974                           	
  2975  07B4                     l10923:	
  2976                           ;infrared.c: 15: {
  2977                           ;infrared.c: 16: fullval += readDistance();
  2978  07B4  120A  158A  21D9   	fcall	_readDistance
              120A  118A         
  2979  07B9  1283               	bcf	status, 5	;RP0=0, select bank0
  2980  07BA  1303               	bcf	status, 6	;RP1=0, select bank0
  2981  07BB  0828               	movf	(0+(?_readDistance)),w
  2982  07BC  07B0               	addwf	(readAvgDistance@fullval),f
  2983  07BD  1803               	skipnc
  2984  07BE  0AB1               	incf	(readAvgDistance@fullval+1),f
  2985  07BF  0829               	movf	(1+(?_readDistance)),w
  2986  07C0  07B1               	addwf	(readAvgDistance@fullval+1),f
  2987                           	line	14
  2988                           	
  2989  07C1                     l10925:	
  2990  07C1  3001               	movlw	low(01h)
  2991  07C2  07B2               	addwf	(readAvgDistance@i),f
  2992  07C3  1803               	skipnc
  2993  07C4  0AB3               	incf	(readAvgDistance@i+1),f
  2994  07C5  3000               	movlw	high(01h)
  2995  07C6  07B3               	addwf	(readAvgDistance@i+1),f
  2996                           	
  2997  07C7                     l10927:	
  2998  07C7  0833               	movf	(readAvgDistance@i+1),w
  2999  07C8  3A80               	xorlw	80h
  3000  07C9  00FF               	movwf	btemp+1
  3001  07CA  3080               	movlw	(high(0Ah))^80h
  3002  07CB  027F               	subwf	btemp+1,w
  3003  07CC  1D03               	skipz
  3004  07CD  2FD0               	goto	u4495
  3005  07CE  300A               	movlw	low(0Ah)
  3006  07CF  0232               	subwf	(readAvgDistance@i),w
  3007  07D0                     u4495:
  3008                           
  3009  07D0  1C03               	skipc
  3010  07D1  2FD3               	goto	u4491
  3011  07D2  2FD4               	goto	u4490
  3012  07D3                     u4491:
  3013  07D3  2FB4               	goto	l10923
  3014  07D4                     u4490:
  3015  07D4  2FD5               	goto	l10929
  3016                           	
  3017  07D5                     l2977:	
  3018                           	line	19
  3019                           	
  3020  07D5                     l10929:	
  3021                           ;infrared.c: 18: }
  3022                           ;infrared.c: 19: adcVal = fullval / 10;
  3023  07D5  300A               	movlw	low(0Ah)
  3024  07D6  1283               	bcf	status, 5	;RP0=0, select bank0
  3025  07D7  1303               	bcf	status, 6	;RP1=0, select bank0
  3026  07D8  00A6               	movwf	(?___lwdiv)
  3027  07D9  3000               	movlw	high(0Ah)
  3028  07DA  00A7               	movwf	((?___lwdiv))+1
  3029  07DB  0831               	movf	(readAvgDistance@fullval+1),w
  3030  07DC  01A9               	clrf	1+(?___lwdiv)+02h
  3031  07DD  07A9               	addwf	1+(?___lwdiv)+02h
  3032  07DE  0830               	movf	(readAvgDistance@fullval),w
  3033  07DF  01A8               	clrf	0+(?___lwdiv)+02h
  3034  07E0  07A8               	addwf	0+(?___lwdiv)+02h
  3035                           
  3036  07E1  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  3037  07E6  1283               	bcf	status, 5	;RP0=0, select bank0
  3038  07E7  1303               	bcf	status, 6	;RP1=0, select bank0
  3039  07E8  0827               	movf	(1+(?___lwdiv)),w
  3040  07E9  01EB               	clrf	(_adcVal+1)	;volatile
  3041  07EA  07EB               	addwf	(_adcVal+1)	;volatile
  3042  07EB  0826               	movf	(0+(?___lwdiv)),w
  3043  07EC  01EA               	clrf	(_adcVal)	;volatile
  3044  07ED  07EA               	addwf	(_adcVal)	;volatile
  3045                           
  3046                           	line	20
  3047                           ;infrared.c: 20: ADCconvert();
  3048  07EE  120A  118A  2015   	fcall	_ADCconvert
              120A  118A         
  3049                           	line	21
  3050                           	
  3051  07F3                     l2978:	
  3052  07F3  0008               	return
  3053                           	opt stack 0
  3054                           GLOBAL	__end_of_readAvgDistance
  3055  07F4                     	__end_of_readAvgDistance:
  3056 ;; =============== function _readAvgDistance ends ============
  3057                           
  3058                           	signat	_readAvgDistance,88
  3059                           	global	_UpdateDisplay
  3060                           psect	text1215,local,class=CODE,delta=2
  3061                           global __ptext1215
  3062  0238                     __ptext1215:
  3063                           
  3064 ;; *************** function _UpdateDisplay *****************
  3065 ;; Defined at:
  3066 ;;		line 215 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  adcOutput      16   42[BANK0 ] unsigned char [16]
  3071 ;; Return value:  Size  Location     Type
  3072 ;;		None               void
  3073 ;; Registers used:
  3074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3080 ;;      Params:         0       0       0       0       0
  3081 ;;      Locals:         0      16       0       0       0
  3082 ;;      Temps:          0       5       0       0       0
  3083 ;;      Totals:         0      21       0       0       0
  3084 ;;Total ram usage:       21 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    5
  3087 ;; This function calls:
  3088 ;;		_lcd_write_control
  3089 ;;		_sprintf
  3090 ;;		_lcd_set_cursor
  3091 ;;		_lcd_write_string
  3092 ;;		___awmod
  3093 ;; This function is called by:
  3094 ;;		_calibrateIR
  3095 ;;		_ChargeMode
  3096 ;;		_scan360
  3097 ;;		_main
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           psect	text1215
  3101                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  3102                           	line	215
  3103                           	global	__size_of_UpdateDisplay
  3104  0179                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  3105                           	
  3106  0238                     _UpdateDisplay:	
  3107                           	opt	stack 1
  3108                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3109                           	line	216
  3110                           	
  3111  0238                     l10871:	
  3112                           ;HMI.c: 216: char adcOutput[16] = "";
  3113  0238  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3114  0239  0084               	movwf	fsr0
  3115  023A  3090               	movlw	low(UpdateDisplay@F1230)
  3116  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  3117  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  3118  023D  00C5               	movwf	(??_UpdateDisplay+0)+0
  3119  023E  0804               	movf	fsr0,w
  3120  023F  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  3121  0240  3010               	movlw	16
  3122  0241  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  3123  0242                     u4460:
  3124  0242  0845               	movf	(??_UpdateDisplay+0)+0,w
  3125  0243  0084               	movwf	fsr0
  3126  0244  1783               	bsf	status, 7	;select IRP bank3
  3127                           	
  3128  0245  0800               	movf	indf,w
  3129  0246  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  3130  0247  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  3131  0248  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  3132  0249  0084               	movwf	fsr0
  3133  024A  1383               	bcf	status, 7	;select IRP bank0
  3134                           	
  3135  024B  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  3136  024C  0080               	movwf	indf
  3137  024D  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  3138  024E  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  3139  024F  2A42               	goto	u4460
  3140                           	line	217
  3141                           ;HMI.c: 217: switch (currentMenu)
  3142  0250  2BA3               	goto	l10915
  3143                           	line	220
  3144                           ;HMI.c: 218: {
  3145                           ;HMI.c: 220: case 0:
  3146                           	
  3147  0251                     l5267:	
  3148                           	line	223
  3149                           	
  3150  0251                     l10873:	
  3151                           ;HMI.c: 223: lcd_write_control(0b00000001);
  3152  0251  3001               	movlw	(01h)
  3153  0252  120A  158A  21AF   	fcall	_lcd_write_control
              120A  118A         
  3154                           	line	225
  3155                           	
  3156  0257                     l10875:	
  3157                           ;HMI.c: 225: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, distTravelled);
  3158  0257  301B               	movlw	((STR_13-__stringbase))&0ffh
  3159  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  3160  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  3161  025A  00C5               	movwf	(??_UpdateDisplay+0)+0
  3162  025B  0845               	movf	(??_UpdateDisplay+0)+0,w
  3163  025C  00B4               	movwf	(?_sprintf)
  3164  025D  086B               	movf	(_adcVal+1),w	;volatile
  3165  025E  01B6               	clrf	1+(?_sprintf)+01h
  3166  025F  07B6               	addwf	1+(?_sprintf)+01h
  3167  0260  086A               	movf	(_adcVal),w	;volatile
  3168  0261  01B5               	clrf	0+(?_sprintf)+01h
  3169  0262  07B5               	addwf	0+(?_sprintf)+01h
  3170                           
  3171  0263  1683               	bsf	status, 5	;RP0=1, select bank1
  3172  0264  1303               	bcf	status, 6	;RP1=0, select bank1
  3173  0265  086D               	movf	(_distTravelled+1)^080h,w	;volatile
  3174  0266  1283               	bcf	status, 5	;RP0=0, select bank0
  3175  0267  1303               	bcf	status, 6	;RP1=0, select bank0
  3176  0268  01B8               	clrf	1+(?_sprintf)+03h
  3177  0269  07B8               	addwf	1+(?_sprintf)+03h
  3178  026A  1683               	bsf	status, 5	;RP0=1, select bank1
  3179  026B  1303               	bcf	status, 6	;RP1=0, select bank1
  3180  026C  086C               	movf	(_distTravelled)^080h,w	;volatile
  3181  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  3182  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  3183  026F  01B7               	clrf	0+(?_sprintf)+03h
  3184  0270  07B7               	addwf	0+(?_sprintf)+03h
  3185                           
  3186  0271  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3187  0272  120A  118A  24C6   	fcall	_sprintf
              120A  118A         
  3188                           	line	228
  3189                           	
  3190  0277                     l10877:	
  3191                           ;HMI.c: 228: lcd_set_cursor(0x00);
  3192  0277  3000               	movlw	(0)
  3193  0278  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3194                           	line	229
  3195                           ;HMI.c: 229: lcd_write_string(adcOutput);
  3196  027D  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3197  027E  1283               	bcf	status, 5	;RP0=0, select bank0
  3198  027F  1303               	bcf	status, 6	;RP1=0, select bank0
  3199  0280  00A7               	movwf	(?_lcd_write_string)
  3200  0281  3000               	movlw	(0x0/2)
  3201  0282  00A8               	movwf	(?_lcd_write_string+1)
  3202  0283  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3203                           	line	231
  3204                           	
  3205  0288                     l10879:	
  3206                           ;HMI.c: 231: lcd_set_cursor(0x40);
  3207  0288  3040               	movlw	(040h)
  3208  0289  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3209                           	line	232
  3210                           	
  3211  028E                     l10881:	
  3212                           ;HMI.c: 232: if (pos > 0)
  3213  028E  1683               	bsf	status, 5	;RP0=1, select bank1
  3214  028F  1303               	bcf	status, 6	;RP1=0, select bank1
  3215  0290  0847               	movf	(_pos+1)^080h,w
  3216  0291  3A80               	xorlw	80h
  3217  0292  00FF               	movwf	btemp+1
  3218  0293  3080               	movlw	(high(01h))^80h
  3219  0294  027F               	subwf	btemp+1,w
  3220  0295  1D03               	skipz
  3221  0296  2A99               	goto	u4475
  3222  0297  3001               	movlw	low(01h)
  3223  0298  0246               	subwf	(_pos)^080h,w
  3224  0299                     u4475:
  3225                           
  3226  0299  1C03               	skipc
  3227  029A  2A9C               	goto	u4471
  3228  029B  2A9D               	goto	u4470
  3229  029C                     u4471:
  3230  029C  2AB0               	goto	l10885
  3231  029D                     u4470:
  3232                           	line	233
  3233                           	
  3234  029D                     l10883:	
  3235                           ;HMI.c: 233: lcd_write_string(shortMenuStrings[pos - 1]);
  3236  029D  1683               	bsf	status, 5	;RP0=1, select bank1
  3237  029E  1303               	bcf	status, 6	;RP1=0, select bank1
  3238  029F  0846               	movf	(_pos)^080h,w
  3239  02A0  3EFF               	addlw	0FFh
  3240  02A1  3EE6               	addlw	_shortMenuStrings&0ffh
  3241  02A2  0084               	movwf	fsr0
  3242  02A3  1383               	bcf	status, 7	;select IRP bank1
  3243  02A4  0800               	movf	indf,w
  3244  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  3245  02A6  1303               	bcf	status, 6	;RP1=0, select bank0
  3246  02A7  00A7               	movwf	(?_lcd_write_string)
  3247  02A8  3080               	movlw	80h
  3248  02A9  00A8               	movwf	(?_lcd_write_string+1)
  3249  02AA  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3250  02AF  2AC3               	goto	l10887
  3251                           	line	234
  3252                           	
  3253  02B0                     l5268:	
  3254                           	line	235
  3255                           	
  3256  02B0                     l10885:	
  3257                           ;HMI.c: 234: else
  3258                           ;HMI.c: 235: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  3259  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
  3260  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
  3261  02B2  0846               	movf	(_pos)^080h,w
  3262  02B3  3E05               	addlw	05h
  3263  02B4  3EE6               	addlw	_shortMenuStrings&0ffh
  3264  02B5  0084               	movwf	fsr0
  3265  02B6  1383               	bcf	status, 7	;select IRP bank1
  3266  02B7  0800               	movf	indf,w
  3267  02B8  1283               	bcf	status, 5	;RP0=0, select bank0
  3268  02B9  1303               	bcf	status, 6	;RP1=0, select bank0
  3269  02BA  00A7               	movwf	(?_lcd_write_string)
  3270  02BB  3080               	movlw	80h
  3271  02BC  00A8               	movwf	(?_lcd_write_string+1)
  3272  02BD  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3273  02C2  2AC3               	goto	l10887
  3274                           	
  3275  02C3                     l5269:	
  3276                           	line	236
  3277                           	
  3278  02C3                     l10887:	
  3279                           ;HMI.c: 236: lcd_set_cursor(0x44);
  3280  02C3  3044               	movlw	(044h)
  3281  02C4  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3282                           	line	237
  3283                           	
  3284  02C9                     l10889:	
  3285                           ;HMI.c: 237: lcd_write_string(menuStrings[pos]);
  3286  02C9  1683               	bsf	status, 5	;RP0=1, select bank1
  3287  02CA  1303               	bcf	status, 6	;RP1=0, select bank1
  3288  02CB  0846               	movf	(_pos)^080h,w
  3289  02CC  3EE0               	addlw	_menuStrings&0ffh
  3290  02CD  0084               	movwf	fsr0
  3291  02CE  1383               	bcf	status, 7	;select IRP bank1
  3292  02CF  0800               	movf	indf,w
  3293  02D0  1283               	bcf	status, 5	;RP0=0, select bank0
  3294  02D1  1303               	bcf	status, 6	;RP1=0, select bank0
  3295  02D2  00A7               	movwf	(?_lcd_write_string)
  3296  02D3  3080               	movlw	80h
  3297  02D4  00A8               	movwf	(?_lcd_write_string+1)
  3298  02D5  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3299                           	line	238
  3300                           ;HMI.c: 238: lcd_set_cursor(0x4D);
  3301  02DA  304D               	movlw	(04Dh)
  3302  02DB  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3303                           	line	239
  3304                           	
  3305  02E0                     l10891:	
  3306                           ;HMI.c: 239: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  3307  02E0  3006               	movlw	low(06h)
  3308  02E1  1283               	bcf	status, 5	;RP0=0, select bank0
  3309  02E2  1303               	bcf	status, 6	;RP1=0, select bank0
  3310  02E3  00A0               	movwf	(?___awmod)
  3311  02E4  3000               	movlw	high(06h)
  3312  02E5  00A1               	movwf	((?___awmod))+1
  3313  02E6  1683               	bsf	status, 5	;RP0=1, select bank1
  3314  02E7  1303               	bcf	status, 6	;RP1=0, select bank1
  3315  02E8  0846               	movf	(_pos)^080h,w
  3316  02E9  3E01               	addlw	low(01h)
  3317  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  3318  02EB  1303               	bcf	status, 6	;RP1=0, select bank0
  3319  02EC  00A2               	movwf	0+(?___awmod)+02h
  3320  02ED  1683               	bsf	status, 5	;RP0=1, select bank1
  3321  02EE  1303               	bcf	status, 6	;RP1=0, select bank1
  3322  02EF  0847               	movf	(_pos+1)^080h,w
  3323  02F0  1803               	skipnc
  3324  02F1  3E01               	addlw	1
  3325  02F2  3E00               	addlw	high(01h)
  3326  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  3327  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  3328  02F5  00A3               	movwf	1+0+(?___awmod)+02h
  3329  02F6  120A  118A  2696   	fcall	___awmod
              120A  118A         
  3330  02FB  1283               	bcf	status, 5	;RP0=0, select bank0
  3331  02FC  1303               	bcf	status, 6	;RP1=0, select bank0
  3332  02FD  0820               	movf	(0+(?___awmod)),w
  3333  02FE  3EE6               	addlw	_shortMenuStrings&0ffh
  3334  02FF  0084               	movwf	fsr0
  3335  0300  1383               	bcf	status, 7	;select IRP bank1
  3336  0301  0800               	movf	indf,w
  3337  0302  00A7               	movwf	(?_lcd_write_string)
  3338  0303  3080               	movlw	80h
  3339  0304  00A8               	movwf	(?_lcd_write_string+1)
  3340  0305  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3341                           	line	240
  3342                           ;HMI.c: 240: break;
  3343  030A  2BB0               	goto	l5274
  3344                           	line	241
  3345                           ;HMI.c: 241: case 1:
  3346                           	
  3347  030B                     l5271:	
  3348                           	line	242
  3349                           	
  3350  030B                     l10893:	
  3351                           ;HMI.c: 242: lcd_write_control(0b00000001);
  3352  030B  3001               	movlw	(01h)
  3353  030C  120A  158A  21AF   	fcall	_lcd_write_control
              120A  118A         
  3354                           	line	244
  3355                           	
  3356  0311                     l10895:	
  3357                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  3358  0311  301B               	movlw	((STR_14-__stringbase))&0ffh
  3359  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  3360  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  3361  0314  00C5               	movwf	(??_UpdateDisplay+0)+0
  3362  0315  0845               	movf	(??_UpdateDisplay+0)+0,w
  3363  0316  00B4               	movwf	(?_sprintf)
  3364  0317  1683               	bsf	status, 5	;RP0=1, select bank1
  3365  0318  1303               	bcf	status, 6	;RP1=0, select bank1
  3366  0319  0858               	movf	(_highByte)^080h,w
  3367  031A  1283               	bcf	status, 5	;RP0=0, select bank0
  3368  031B  1303               	bcf	status, 6	;RP1=0, select bank0
  3369  031C  00C6               	movwf	(??_UpdateDisplay+1)+0
  3370  031D  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  3371  031E  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  3372  031F  00B5               	movwf	0+(?_sprintf)+01h
  3373  0320  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  3374  0321  00B6               	movwf	1+(?_sprintf)+01h
  3375  0322  1683               	bsf	status, 5	;RP0=1, select bank1
  3376  0323  1303               	bcf	status, 6	;RP1=0, select bank1
  3377  0324  0859               	movf	(_lowByte)^080h,w
  3378  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  3379  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  3380  0327  00C8               	movwf	(??_UpdateDisplay+3)+0
  3381  0328  01C9               	clrf	(??_UpdateDisplay+3)+0+1
  3382  0329  0848               	movf	0+(??_UpdateDisplay+3)+0,w
  3383  032A  00B7               	movwf	0+(?_sprintf)+03h
  3384  032B  0849               	movf	1+(??_UpdateDisplay+3)+0,w
  3385  032C  00B8               	movwf	1+(?_sprintf)+03h
  3386  032D  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3387  032E  120A  118A  24C6   	fcall	_sprintf
              120A  118A         
  3388                           	line	246
  3389                           	
  3390  0333                     l10897:	
  3391                           ;HMI.c: 246: lcd_set_cursor(0x00);
  3392  0333  3000               	movlw	(0)
  3393  0334  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3394                           	line	247
  3395                           ;HMI.c: 247: lcd_write_string(adcOutput);
  3396  0339  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3397  033A  1283               	bcf	status, 5	;RP0=0, select bank0
  3398  033B  1303               	bcf	status, 6	;RP1=0, select bank0
  3399  033C  00A7               	movwf	(?_lcd_write_string)
  3400  033D  3000               	movlw	(0x0/2)
  3401  033E  00A8               	movwf	(?_lcd_write_string+1)
  3402  033F  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3403                           	line	252
  3404                           	
  3405  0344                     l10899:	
  3406                           ;HMI.c: 252: lcd_set_cursor(0x40);
  3407  0344  3040               	movlw	(040h)
  3408  0345  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3409                           	line	254
  3410                           	
  3411  034A                     l10901:	
  3412                           ;HMI.c: 254: lcd_write_string("<<<");
  3413  034A  3074               	movlw	low((STR_15-__stringbase))
  3414  034B  1283               	bcf	status, 5	;RP0=0, select bank0
  3415  034C  1303               	bcf	status, 6	;RP1=0, select bank0
  3416  034D  00A7               	movwf	(?_lcd_write_string)
  3417  034E  3080               	movlw	80h
  3418  034F  00A8               	movwf	(?_lcd_write_string+1)
  3419  0350  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3420                           	line	257
  3421                           ;HMI.c: 257: lcd_set_cursor(0x44);
  3422  0355  3044               	movlw	(044h)
  3423  0356  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3424                           	line	258
  3425                           	
  3426  035B                     l10903:	
  3427                           ;HMI.c: 258: lcd_write_string("CONFIRM");
  3428  035B  3068               	movlw	low((STR_16-__stringbase))
  3429  035C  1283               	bcf	status, 5	;RP0=0, select bank0
  3430  035D  1303               	bcf	status, 6	;RP1=0, select bank0
  3431  035E  00A7               	movwf	(?_lcd_write_string)
  3432  035F  3080               	movlw	80h
  3433  0360  00A8               	movwf	(?_lcd_write_string+1)
  3434  0361  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3435                           	line	259
  3436                           	
  3437  0366                     l10905:	
  3438                           ;HMI.c: 259: lcd_set_cursor(0x4D);
  3439  0366  304D               	movlw	(04Dh)
  3440  0367  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3441                           	line	260
  3442                           ;HMI.c: 260: lcd_write_string(">>>");
  3443  036C  3078               	movlw	low((STR_17-__stringbase))
  3444  036D  1283               	bcf	status, 5	;RP0=0, select bank0
  3445  036E  1303               	bcf	status, 6	;RP1=0, select bank0
  3446  036F  00A7               	movwf	(?_lcd_write_string)
  3447  0370  3080               	movlw	80h
  3448  0371  00A8               	movwf	(?_lcd_write_string+1)
  3449  0372  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3450                           	line	261
  3451                           ;HMI.c: 261: break;
  3452  0377  2BB0               	goto	l5274
  3453                           	line	262
  3454                           ;HMI.c: 262: case 2:
  3455                           	
  3456  0378                     l5272:	
  3457                           	line	263
  3458                           	
  3459  0378                     l10907:	
  3460                           ;HMI.c: 263: lcd_write_control(0b00000001);
  3461  0378  3001               	movlw	(01h)
  3462  0379  120A  158A  21AF   	fcall	_lcd_write_control
              120A  118A         
  3463                           	line	265
  3464                           ;HMI.c: 265: lcd_set_cursor(0x00);
  3465  037E  3000               	movlw	(0)
  3466  037F  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3467                           	line	266
  3468                           	
  3469  0384                     l10909:	
  3470                           ;HMI.c: 266: lcd_write_string(" Charging Mode ");
  3471  0384  300B               	movlw	low((STR_18-__stringbase))
  3472  0385  1283               	bcf	status, 5	;RP0=0, select bank0
  3473  0386  1303               	bcf	status, 6	;RP1=0, select bank0
  3474  0387  00A7               	movwf	(?_lcd_write_string)
  3475  0388  3080               	movlw	80h
  3476  0389  00A8               	movwf	(?_lcd_write_string+1)
  3477  038A  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3478                           	line	270
  3479                           	
  3480  038F                     l10911:	
  3481                           ;HMI.c: 270: lcd_set_cursor(0x44);
  3482  038F  3044               	movlw	(044h)
  3483  0390  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3484                           	line	271
  3485                           ;HMI.c: 271: lcd_write_string("  EXIT  ");
  3486  0395  302A               	movlw	low((STR_19-__stringbase))
  3487  0396  1283               	bcf	status, 5	;RP0=0, select bank0
  3488  0397  1303               	bcf	status, 6	;RP1=0, select bank0
  3489  0398  00A7               	movwf	(?_lcd_write_string)
  3490  0399  3080               	movlw	80h
  3491  039A  00A8               	movwf	(?_lcd_write_string+1)
  3492  039B  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3493                           	line	273
  3494                           ;HMI.c: 273: break;
  3495  03A0  2BB0               	goto	l5274
  3496                           	line	275
  3497                           ;HMI.c: 275: default:
  3498                           	
  3499  03A1                     l5273:	
  3500                           	line	277
  3501                           ;HMI.c: 277: break;
  3502  03A1  2BB0               	goto	l5274
  3503                           	line	280
  3504                           	
  3505  03A2                     l10913:	
  3506                           ;HMI.c: 280: }
  3507  03A2  2BB0               	goto	l5274
  3508                           	line	217
  3509                           	
  3510  03A3                     l5266:	
  3511                           	
  3512  03A3                     l10915:	
  3513  03A3  1683               	bsf	status, 5	;RP0=1, select bank1
  3514  03A4  1303               	bcf	status, 6	;RP1=0, select bank1
  3515  03A5  0856               	movf	(_currentMenu)^080h,w
  3516                           	; Switch size 1, requested type "space"
  3517                           ; Number of cases is 3, Range of values is 0 to 2
  3518                           ; switch strategies available:
  3519                           ; Name         Instructions Cycles
  3520                           ; simple_byte           10     6 (average)
  3521                           ; direct_byte           17     8 (fixed)
  3522                           ; jumptable            260     6 (fixed)
  3523                           ; rangetable             7     6 (fixed)
  3524                           ; spacedrange           12     9 (fixed)
  3525                           ; locatedrange           3     3 (fixed)
  3526                           ;	Chosen strategy is simple_byte
  3527                           
  3528                           	opt asmopt_off
  3529  03A6  3A00               	xorlw	0^0	; case 0
  3530  03A7  1903               	skipnz
  3531  03A8  2A51               	goto	l10873
  3532  03A9  3A01               	xorlw	1^0	; case 1
  3533  03AA  1903               	skipnz
  3534  03AB  2B0B               	goto	l10893
  3535  03AC  3A03               	xorlw	2^1	; case 2
  3536  03AD  1903               	skipnz
  3537  03AE  2B78               	goto	l10907
  3538  03AF  2BB0               	goto	l5274
  3539                           	opt asmopt_on
  3540                           
  3541                           	line	280
  3542                           	
  3543  03B0                     l5270:	
  3544                           	line	281
  3545                           	
  3546  03B0                     l5274:	
  3547  03B0  0008               	return
  3548                           	opt stack 0
  3549                           GLOBAL	__end_of_UpdateDisplay
  3550  03B1                     	__end_of_UpdateDisplay:
  3551 ;; =============== function _UpdateDisplay ends ============
  3552                           
  3553                           	signat	_UpdateDisplay,88
  3554                           	global	_init
  3555                           psect	text1216,local,class=CODE,delta=2
  3556                           global __ptext1216
  3557  0B48                     __ptext1216:
  3558                           
  3559 ;; *************** function _init *****************
  3560 ;; Defined at:
  3561 ;;		line 158 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;		None               void
  3568 ;; Registers used:
  3569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0
  3577 ;;      Temps:          0       1       0       0       0
  3578 ;;      Totals:         0       1       0       0       0
  3579 ;;Total ram usage:        1 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    5
  3582 ;; This function calls:
  3583 ;;		_init_adc
  3584 ;;		_lcd_init
  3585 ;;		_ser_init
  3586 ;;		_robo_init
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           psect	text1216
  3592                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3593                           	line	158
  3594                           	global	__size_of_init
  3595  0030                     	__size_of_init	equ	__end_of_init-_init
  3596                           	
  3597  0B48                     _init:	
  3598                           	opt	stack 2
  3599                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3600                           	line	159
  3601                           	
  3602  0B48                     l11307:	
  3603                           ;Main.c: 159: GIE=0;
  3604  0B48  138B               	bcf	(95/8),(95)&7
  3605                           	line	160
  3606                           	
  3607  0B49                     l11309:	
  3608                           ;Main.c: 160: init_adc();
  3609  0B49  120A  158A  21C3   	fcall	_init_adc
              120A  158A         
  3610                           	line	161
  3611                           ;Main.c: 161: lcd_init();
  3612  0B4E  120A  158A  2239   	fcall	_lcd_init
              120A  158A         
  3613                           	line	162
  3614                           ;Main.c: 162: ser_init();
  3615  0B53  120A  158A  22BC   	fcall	_ser_init
              120A  158A         
  3616                           	line	163
  3617                           	
  3618  0B58                     l11311:	
  3619                           ;Main.c: 163: robo_init();
  3620  0B58  120A  158A  2147   	fcall	_robo_init
              120A  158A         
  3621                           	line	165
  3622                           	
  3623  0B5D                     l11313:	
  3624                           ;Main.c: 165: TRISB = 0b11111100;
  3625  0B5D  30FC               	movlw	(0FCh)
  3626  0B5E  1683               	bsf	status, 5	;RP0=1, select bank1
  3627  0B5F  1303               	bcf	status, 6	;RP1=0, select bank1
  3628  0B60  0086               	movwf	(134)^080h	;volatile
  3629                           	line	166
  3630                           	
  3631  0B61                     l11315:	
  3632                           ;Main.c: 166: TRISC &= 0b10010000;
  3633  0B61  3090               	movlw	(090h)
  3634  0B62  1283               	bcf	status, 5	;RP0=0, select bank0
  3635  0B63  1303               	bcf	status, 6	;RP1=0, select bank0
  3636  0B64  00A3               	movwf	(??_init+0)+0
  3637  0B65  0823               	movf	(??_init+0)+0,w
  3638  0B66  1683               	bsf	status, 5	;RP0=1, select bank1
  3639  0B67  1303               	bcf	status, 6	;RP1=0, select bank1
  3640  0B68  0587               	andwf	(135)^080h,f	;volatile
  3641                           	line	168
  3642                           	
  3643  0B69                     l11317:	
  3644                           ;Main.c: 168: SSPSTAT = 0b01000000;
  3645  0B69  3040               	movlw	(040h)
  3646  0B6A  0094               	movwf	(148)^080h	;volatile
  3647                           	line	169
  3648                           	
  3649  0B6B                     l11319:	
  3650                           ;Main.c: 169: SSPCON = 0b10100001;
  3651  0B6B  30A1               	movlw	(0A1h)
  3652  0B6C  1283               	bcf	status, 5	;RP0=0, select bank0
  3653  0B6D  1303               	bcf	status, 6	;RP1=0, select bank0
  3654  0B6E  0094               	movwf	(20)	;volatile
  3655                           	line	171
  3656                           	
  3657  0B6F                     l11321:	
  3658                           ;Main.c: 171: OPTION_REG = 0b00000100;
  3659  0B6F  3004               	movlw	(04h)
  3660  0B70  1683               	bsf	status, 5	;RP0=1, select bank1
  3661  0B71  1303               	bcf	status, 6	;RP1=0, select bank1
  3662  0B72  0081               	movwf	(129)^080h	;volatile
  3663                           	line	174
  3664                           	
  3665  0B73                     l11323:	
  3666                           ;Main.c: 174: TMR0IE = 1;
  3667  0B73  168B               	bsf	(93/8),(93)&7
  3668                           	line	175
  3669                           	
  3670  0B74                     l11325:	
  3671                           ;Main.c: 175: PEIE=1;
  3672  0B74  170B               	bsf	(94/8),(94)&7
  3673                           	line	177
  3674                           	
  3675  0B75                     l11327:	
  3676                           ;Main.c: 177: GIE=1;
  3677  0B75  178B               	bsf	(95/8),(95)&7
  3678                           	line	178
  3679                           	
  3680  0B76                     l11329:	
  3681                           ;Main.c: 178: (GIE = 1);
  3682  0B76  178B               	bsf	(95/8),(95)&7
  3683                           	line	179
  3684                           	
  3685  0B77                     l2212:	
  3686  0B77  0008               	return
  3687                           	opt stack 0
  3688                           GLOBAL	__end_of_init
  3689  0B78                     	__end_of_init:
  3690 ;; =============== function _init ends ============
  3691                           
  3692                           	signat	_init,88
  3693                           	global	_readDistance
  3694                           psect	text1217,local,class=CODE,delta=2
  3695                           global __ptext1217
  3696  09D9                     __ptext1217:
  3697                           
  3698 ;; *************** function _readDistance *****************
  3699 ;; Defined at:
  3700 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  fullval         2   12[BANK0 ] unsigned int 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  2    8[BANK0 ] unsigned int 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3714 ;;      Params:         0       2       0       0       0
  3715 ;;      Locals:         0       2       0       0       0
  3716 ;;      Temps:          0       2       0       0       0
  3717 ;;      Totals:         0       6       0       0       0
  3718 ;;Total ram usage:        6 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    5
  3721 ;; This function calls:
  3722 ;;		_adc_read_channel
  3723 ;; This function is called by:
  3724 ;;		_readAvgDistance
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           psect	text1217
  3728                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3729                           	line	24
  3730                           	global	__size_of_readDistance
  3731  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3732                           	
  3733  09D9                     _readDistance:	
  3734                           	opt	stack 0
  3735                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3736                           	line	27
  3737                           	
  3738  09D9                     l10841:	
  3739                           ;infrared.c: 25: unsigned int fullval ;
  3740                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3741  09D9  3000               	movlw	(0)
  3742  09DA  120A  158A  2378   	fcall	_adc_read_channel
              120A  158A         
  3743  09DF  1283               	bcf	status, 5	;RP0=0, select bank0
  3744  09E0  1303               	bcf	status, 6	;RP1=0, select bank0
  3745  09E1  00AA               	movwf	(??_readDistance+0)+0
  3746  09E2  01AB               	clrf	(??_readDistance+0)+0+1
  3747  09E3  082A               	movf	0+(??_readDistance+0)+0,w
  3748  09E4  00AC               	movwf	(readDistance@fullval)
  3749  09E5  082B               	movf	1+(??_readDistance+0)+0,w
  3750  09E6  00AD               	movwf	(readDistance@fullval+1)
  3751                           	line	29
  3752                           	
  3753  09E7                     l10843:	
  3754                           ;infrared.c: 29: return fullval;
  3755  09E7  082D               	movf	(readDistance@fullval+1),w
  3756  09E8  01A9               	clrf	(?_readDistance+1)
  3757  09E9  07A9               	addwf	(?_readDistance+1)
  3758  09EA  082C               	movf	(readDistance@fullval),w
  3759  09EB  01A8               	clrf	(?_readDistance)
  3760  09EC  07A8               	addwf	(?_readDistance)
  3761                           
  3762  09ED  29EE               	goto	l2981
  3763                           	
  3764  09EE                     l10845:	
  3765                           	line	30
  3766                           	
  3767  09EE                     l2981:	
  3768  09EE  0008               	return
  3769                           	opt stack 0
  3770                           GLOBAL	__end_of_readDistance
  3771  09EF                     	__end_of_readDistance:
  3772 ;; =============== function _readDistance ends ============
  3773                           
  3774                           	signat	_readDistance,90
  3775                           	global	_robot_distance
  3776                           psect	text1218,local,class=CODE,delta=2
  3777                           global __ptext1218
  3778  0938                     __ptext1218:
  3779                           
  3780 ;; *************** function _robot_distance *****************
  3781 ;; Defined at:
  3782 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;		None               void
  3789 ;; Registers used:
  3790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3796 ;;      Params:         0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0
  3799 ;;      Totals:         0       0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    5
  3803 ;; This function calls:
  3804 ;;		_robot_read
  3805 ;; This function is called by:
  3806 ;;		_main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           psect	text1218
  3810                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3811                           	line	20
  3812                           	global	__size_of_robot_distance
  3813  0007                     	__size_of_robot_distance	equ	__end_of_robot_distance-_robot_distance
  3814                           	
  3815  0938                     _robot_distance:	
  3816                           	opt	stack 2
  3817                           ; Regs used in _robot_distance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3818                           	line	22
  3819                           	
  3820  0938                     l10839:	
  3821                           ;robot.c: 22: robot_read(19);
  3822  0938  3013               	movlw	(013h)
  3823  0939  120A  158A  2163   	fcall	_robot_read
              120A  158A         
  3824                           	line	30
  3825                           	
  3826  093E                     l6726:	
  3827  093E  0008               	return
  3828                           	opt stack 0
  3829                           GLOBAL	__end_of_robot_distance
  3830  093F                     	__end_of_robot_distance:
  3831 ;; =============== function _robot_distance ends ============
  3832                           
  3833                           	signat	_robot_distance,88
  3834                           	global	_lcd_init
  3835                           psect	text1219,local,class=CODE,delta=2
  3836                           global __ptext1219
  3837  0A39                     __ptext1219:
  3838                           
  3839 ;; *************** function _lcd_init *****************
  3840 ;; Defined at:
  3841 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;		None               void
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, pclath, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    4
  3862 ;; This function calls:
  3863 ;;		_lcd_write_control
  3864 ;; This function is called by:
  3865 ;;		_init
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           psect	text1219
  3869                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3870                           	line	101
  3871                           	global	__size_of_lcd_init
  3872  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3873                           	
  3874  0A39                     _lcd_init:	
  3875                           	opt	stack 2
  3876                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3877                           	line	105
  3878                           	
  3879  0A39                     l10819:	
  3880                           ;lcd.c: 105: ADCON1 = 0b00000010;
  3881  0A39  3002               	movlw	(02h)
  3882  0A3A  1683               	bsf	status, 5	;RP0=1, select bank1
  3883  0A3B  1303               	bcf	status, 6	;RP1=0, select bank1
  3884  0A3C  009F               	movwf	(159)^080h	;volatile
  3885                           	line	108
  3886                           	
  3887  0A3D                     l10821:	
  3888                           ;lcd.c: 108: PORTD = 0;
  3889  0A3D  1283               	bcf	status, 5	;RP0=0, select bank0
  3890  0A3E  1303               	bcf	status, 6	;RP1=0, select bank0
  3891  0A3F  0188               	clrf	(8)	;volatile
  3892                           	line	109
  3893                           	
  3894  0A40                     l10823:	
  3895                           ;lcd.c: 109: PORTE = 0;
  3896  0A40  0189               	clrf	(9)	;volatile
  3897                           	line	111
  3898                           	
  3899  0A41                     l10825:	
  3900                           ;lcd.c: 111: TRISD = 0b00000000;
  3901  0A41  1683               	bsf	status, 5	;RP0=1, select bank1
  3902  0A42  1303               	bcf	status, 6	;RP1=0, select bank1
  3903  0A43  0188               	clrf	(136)^080h	;volatile
  3904                           	line	112
  3905                           	
  3906  0A44                     l10827:	
  3907                           ;lcd.c: 112: TRISE = 0b00000000;
  3908  0A44  0189               	clrf	(137)^080h	;volatile
  3909                           	line	115
  3910                           	
  3911  0A45                     l10829:	
  3912                           ;lcd.c: 115: lcd_write_control(0b00000001);
  3913  0A45  3001               	movlw	(01h)
  3914  0A46  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3915                           	line	116
  3916                           	
  3917  0A4B                     l10831:	
  3918                           ;lcd.c: 116: lcd_write_control(0b00111000);
  3919  0A4B  3038               	movlw	(038h)
  3920  0A4C  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3921                           	line	117
  3922                           	
  3923  0A51                     l10833:	
  3924                           ;lcd.c: 117: lcd_write_control(0b00001100);
  3925  0A51  300C               	movlw	(0Ch)
  3926  0A52  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3927                           	line	118
  3928                           	
  3929  0A57                     l10835:	
  3930                           ;lcd.c: 118: lcd_write_control(0b00000110);
  3931  0A57  3006               	movlw	(06h)
  3932  0A58  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3933                           	line	119
  3934                           	
  3935  0A5D                     l10837:	
  3936                           ;lcd.c: 119: lcd_write_control(0b00000010);
  3937  0A5D  3002               	movlw	(02h)
  3938  0A5E  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3939                           	line	121
  3940                           	
  3941  0A63                     l1429:	
  3942  0A63  0008               	return
  3943                           	opt stack 0
  3944                           GLOBAL	__end_of_lcd_init
  3945  0A64                     	__end_of_lcd_init:
  3946 ;; =============== function _lcd_init ends ============
  3947                           
  3948                           	signat	_lcd_init,88
  3949                           	global	_lcd_write_string
  3950                           psect	text1220,local,class=CODE,delta=2
  3951                           global __ptext1220
  3952  0A90                     __ptext1220:
  3953                           
  3954 ;; *************** function _lcd_write_string *****************
  3955 ;; Defined at:
  3956 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  s               2    7[BANK0 ] PTR unsigned char 
  3959 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  3960 ;;		 -> STR_15(4), UpdateDisplay@adcOutput(16), STR_12(4), STR_11(4), 
  3961 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  3962 ;;		 -> STR_6(9), STR_5(9), STR_4(8), STR_3(9), 
  3963 ;;		 -> STR_2(9), STR_1(9), 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;		None               void
  3968 ;; Registers used:
  3969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         0       2       0       0       0
  3976 ;;      Locals:         0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0
  3978 ;;      Totals:         0       2       0       0       0
  3979 ;;Total ram usage:        2 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    4
  3982 ;; This function calls:
  3983 ;;		_lcd_write_data
  3984 ;; This function is called by:
  3985 ;;		_UpdateDisplay
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           psect	text1220
  3989                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3990                           	line	48
  3991                           	global	__size_of_lcd_write_string
  3992  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3993                           	
  3994  0A90                     _lcd_write_string:	
  3995                           	opt	stack 1
  3996                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3997                           	line	50
  3998                           	
  3999  0A90                     l10811:	
  4000                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  4001  0A90  2AAA               	goto	l10817
  4002                           	
  4003  0A91                     l1409:	
  4004                           	
  4005  0A91                     l10813:	
  4006  0A91  1283               	bcf	status, 5	;RP0=0, select bank0
  4007  0A92  1303               	bcf	status, 6	;RP1=0, select bank0
  4008  0A93  0828               	movf	(lcd_write_string@s+1),w
  4009  0A94  00FF               	movwf	btemp+1
  4010  0A95  0827               	movf	(lcd_write_string@s),w
  4011  0A96  0084               	movwf	fsr0
  4012  0A97  120A  118A  2700   	fcall	stringtab
              120A  158A         
  4013  0A9C  120A  158A  2175   	fcall	_lcd_write_data
              120A  158A         
  4014                           	
  4015  0AA1                     l10815:	
  4016  0AA1  3001               	movlw	low(01h)
  4017  0AA2  1283               	bcf	status, 5	;RP0=0, select bank0
  4018  0AA3  1303               	bcf	status, 6	;RP1=0, select bank0
  4019  0AA4  07A7               	addwf	(lcd_write_string@s),f
  4020  0AA5  1803               	skipnc
  4021  0AA6  0AA8               	incf	(lcd_write_string@s+1),f
  4022  0AA7  3000               	movlw	high(01h)
  4023  0AA8  07A8               	addwf	(lcd_write_string@s+1),f
  4024  0AA9  2AAA               	goto	l10817
  4025                           	
  4026  0AAA                     l1408:	
  4027                           	
  4028  0AAA                     l10817:	
  4029  0AAA  1283               	bcf	status, 5	;RP0=0, select bank0
  4030  0AAB  1303               	bcf	status, 6	;RP1=0, select bank0
  4031  0AAC  0828               	movf	(lcd_write_string@s+1),w
  4032  0AAD  00FF               	movwf	btemp+1
  4033  0AAE  0827               	movf	(lcd_write_string@s),w
  4034  0AAF  0084               	movwf	fsr0
  4035  0AB0  120A  118A  2700   	fcall	stringtab
              120A  158A         
  4036  0AB5  3800               	iorlw	0
  4037  0AB6  1D03               	skipz
  4038  0AB7  2AB9               	goto	u4451
  4039  0AB8  2ABA               	goto	u4450
  4040  0AB9                     u4451:
  4041  0AB9  2A91               	goto	l10813
  4042  0ABA                     u4450:
  4043  0ABA  2ABB               	goto	l1411
  4044                           	
  4045  0ABB                     l1410:	
  4046                           	line	51
  4047                           	
  4048  0ABB                     l1411:	
  4049  0ABB  0008               	return
  4050                           	opt stack 0
  4051                           GLOBAL	__end_of_lcd_write_string
  4052  0ABC                     	__end_of_lcd_write_string:
  4053 ;; =============== function _lcd_write_string ends ============
  4054                           
  4055                           	signat	_lcd_write_string,4216
  4056                           	global	_lcd_set_cursor
  4057                           psect	text1221,local,class=CODE,delta=2
  4058                           global __ptext1221
  4059  07F4                     __ptext1221:
  4060                           
  4061 ;; *************** function _lcd_set_cursor *****************
  4062 ;; Defined at:
  4063 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  address         1    wreg     unsigned char 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  address         1    3[BANK0 ] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;		None               void
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0, pclath, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4077 ;;      Params:         0       0       0       0       0
  4078 ;;      Locals:         0       1       0       0       0
  4079 ;;      Temps:          0       0       0       0       0
  4080 ;;      Totals:         0       1       0       0       0
  4081 ;;Total ram usage:        1 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    4
  4084 ;; This function calls:
  4085 ;;		_lcd_write_control
  4086 ;; This function is called by:
  4087 ;;		_UpdateDisplay
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           psect	text1221
  4091                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4092                           	line	42
  4093                           	global	__size_of_lcd_set_cursor
  4094  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  4095                           	
  4096  07F4                     _lcd_set_cursor:	
  4097                           	opt	stack 1
  4098                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4099                           ;lcd_set_cursor@address stored from wreg
  4100  07F4  1283               	bcf	status, 5	;RP0=0, select bank0
  4101  07F5  1303               	bcf	status, 6	;RP1=0, select bank0
  4102  07F6  00A3               	movwf	(lcd_set_cursor@address)
  4103                           	line	43
  4104                           	
  4105  07F7                     l10807:	
  4106                           ;lcd.c: 43: address |= 0b10000000;
  4107  07F7  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  4108                           	line	44
  4109                           	
  4110  07F8                     l10809:	
  4111                           ;lcd.c: 44: lcd_write_control(address);
  4112  07F8  0823               	movf	(lcd_set_cursor@address),w
  4113  07F9  120A  158A  21AF   	fcall	_lcd_write_control
              120A  118A         
  4114                           	line	45
  4115                           	
  4116  07FE                     l1405:	
  4117  07FE  0008               	return
  4118                           	opt stack 0
  4119                           GLOBAL	__end_of_lcd_set_cursor
  4120  07FF                     	__end_of_lcd_set_cursor:
  4121 ;; =============== function _lcd_set_cursor ends ============
  4122                           
  4123                           	signat	_lcd_set_cursor,4216
  4124                           	global	_robot_read
  4125                           psect	text1222,local,class=CODE,delta=2
  4126                           global __ptext1222
  4127  0963                     __ptext1222:
  4128                           
  4129 ;; *************** function _robot_read *****************
  4130 ;; Defined at:
  4131 ;;		line 15 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  packet          1    wreg     unsigned char 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  packet          1    2[BANK0 ] unsigned char 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;		None               void
  4138 ;; Registers used:
  4139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4145 ;;      Params:         0       0       0       0       0
  4146 ;;      Locals:         0       1       0       0       0
  4147 ;;      Temps:          0       0       0       0       0
  4148 ;;      Totals:         0       1       0       0       0
  4149 ;;Total ram usage:        1 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    4
  4152 ;; This function calls:
  4153 ;;		_ser_putch
  4154 ;; This function is called by:
  4155 ;;		_robot_distance
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           psect	text1222
  4159                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4160                           	line	15
  4161                           	global	__size_of_robot_read
  4162  0012                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  4163                           	
  4164  0963                     _robot_read:	
  4165                           	opt	stack 2
  4166                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4167                           ;robot_read@packet stored from wreg
  4168  0963  1283               	bcf	status, 5	;RP0=0, select bank0
  4169  0964  1303               	bcf	status, 6	;RP1=0, select bank0
  4170  0965  00A2               	movwf	(robot_read@packet)
  4171                           	line	16
  4172                           	
  4173  0966                     l10805:	
  4174                           ;robot.c: 16: ser_putch (142);
  4175  0966  308E               	movlw	(08Eh)
  4176  0967  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  4177                           	line	17
  4178                           ;robot.c: 17: ser_putch (packet);
  4179  096C  1283               	bcf	status, 5	;RP0=0, select bank0
  4180  096D  1303               	bcf	status, 6	;RP1=0, select bank0
  4181  096E  0822               	movf	(robot_read@packet),w
  4182  096F  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  4183                           	line	18
  4184                           	
  4185  0974                     l6723:	
  4186  0974  0008               	return
  4187                           	opt stack 0
  4188                           GLOBAL	__end_of_robot_read
  4189  0975                     	__end_of_robot_read:
  4190 ;; =============== function _robot_read ends ============
  4191                           
  4192                           	signat	_robot_read,4216
  4193                           	global	_sprintf
  4194                           psect	text1223,local,class=CODE,delta=2
  4195                           global __ptext1223
  4196  04C6                     __ptext1223:
  4197                           
  4198 ;; *************** function _sprintf *****************
  4199 ;; Defined at:
  4200 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  sp              1    wreg     PTR unsigned char 
  4203 ;;		 -> UpdateDisplay@adcOutput(16), 
  4204 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  4205 ;;		 -> STR_14(15), STR_13(15), 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  4208 ;;		 -> UpdateDisplay@adcOutput(16), 
  4209 ;;  _val            4   31[BANK0 ] struct .
  4210 ;;  c               1   36[BANK0 ] char 
  4211 ;;  prec            1   30[BANK0 ] char 
  4212 ;;  flag            1   29[BANK0 ] unsigned char 
  4213 ;;  ap              1   28[BANK0 ] PTR void [1]
  4214 ;;		 -> ?_sprintf(2), 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  2   20[BANK0 ] int 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4224 ;;      Params:         0       5       0       0       0
  4225 ;;      Locals:         0       9       0       0       0
  4226 ;;      Temps:          0       3       0       0       0
  4227 ;;      Totals:         0      17       0       0       0
  4228 ;;Total ram usage:       17 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    4
  4231 ;; This function calls:
  4232 ;;		___lwdiv
  4233 ;;		___lwmod
  4234 ;; This function is called by:
  4235 ;;		_UpdateDisplay
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           psect	text1223
  4239                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  4240                           	line	488
  4241                           	global	__size_of_sprintf
  4242  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4243                           	
  4244  04C6                     _sprintf:	
  4245                           	opt	stack 1
  4246                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4247                           ;sprintf@sp stored from wreg
  4248                           	line	537
  4249  04C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4250  04C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4251  04C8  00C3               	movwf	(sprintf@sp)
  4252                           	
  4253  04C9                     l10747:	
  4254  04C9  3035               	movlw	(?_sprintf+01h)&0ffh
  4255  04CA  00B9               	movwf	(??_sprintf+0)+0
  4256  04CB  0839               	movf	(??_sprintf+0)+0,w
  4257  04CC  00BC               	movwf	(sprintf@ap)
  4258                           	line	540
  4259  04CD  2DAC               	goto	l10799
  4260                           	
  4261  04CE                     l6746:	
  4262                           	line	542
  4263                           	
  4264  04CE                     l10749:	
  4265  04CE  0844               	movf	(sprintf@c),w
  4266  04CF  3A25               	xorlw	025h
  4267  04D0  1903               	skipnz
  4268  04D1  2CD3               	goto	u4371
  4269  04D2  2CD4               	goto	u4370
  4270  04D3                     u4371:
  4271  04D3  2CE0               	goto	l6747
  4272  04D4                     u4370:
  4273                           	line	545
  4274                           	
  4275  04D4                     l10751:	
  4276  04D4  0844               	movf	(sprintf@c),w
  4277  04D5  00B9               	movwf	(??_sprintf+0)+0
  4278  04D6  0843               	movf	(sprintf@sp),w
  4279  04D7  0084               	movwf	fsr0
  4280  04D8  0839               	movf	(??_sprintf+0)+0,w
  4281  04D9  1383               	bcf	status, 7	;select IRP bank0
  4282  04DA  0080               	movwf	indf
  4283                           	
  4284  04DB                     l10753:	
  4285  04DB  3001               	movlw	(01h)
  4286  04DC  00B9               	movwf	(??_sprintf+0)+0
  4287  04DD  0839               	movf	(??_sprintf+0)+0,w
  4288  04DE  07C3               	addwf	(sprintf@sp),f
  4289                           	line	546
  4290  04DF  2DAC               	goto	l10799
  4291                           	line	547
  4292                           	
  4293  04E0                     l6747:	
  4294                           	line	552
  4295  04E0  01BD               	clrf	(sprintf@flag)
  4296                           	line	638
  4297  04E1  2CE7               	goto	l10757
  4298                           	line	640
  4299                           	
  4300  04E2                     l6749:	
  4301                           	line	641
  4302  04E2  2DC0               	goto	l10801
  4303                           	line	700
  4304                           	
  4305  04E3                     l6751:	
  4306  04E3  2CFC               	goto	l10759
  4307                           	line	701
  4308                           	
  4309  04E4                     l6752:	
  4310                           	line	702
  4311  04E4  2CFC               	goto	l10759
  4312                           	line	805
  4313                           	
  4314  04E5                     l6754:	
  4315                           	line	816
  4316  04E5  2DAC               	goto	l10799
  4317                           	line	825
  4318                           	
  4319  04E6                     l10755:	
  4320  04E6  2CFC               	goto	l10759
  4321                           	line	638
  4322                           	
  4323  04E7                     l6748:	
  4324                           	
  4325  04E7                     l10757:	
  4326  04E7  3001               	movlw	01h
  4327  04E8  07B4               	addwf	(sprintf@f),f
  4328  04E9  30FF               	movlw	-01h
  4329  04EA  0734               	addwf	(sprintf@f),w
  4330  04EB  0084               	movwf	fsr0
  4331  04EC  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4332  04F1  00C4               	movwf	(sprintf@c)
  4333                           	; Switch size 1, requested type "space"
  4334                           ; Number of cases is 3, Range of values is 0 to 105
  4335                           ; switch strategies available:
  4336                           ; Name         Instructions Cycles
  4337                           ; simple_byte           10     6 (average)
  4338                           ; jumptable            260     6 (fixed)
  4339                           ; rangetable           110     6 (fixed)
  4340                           ; spacedrange          218     9 (fixed)
  4341                           ; locatedrange         106     3 (fixed)
  4342                           ;	Chosen strategy is simple_byte
  4343                           
  4344                           	opt asmopt_off
  4345  04F2  3A00               	xorlw	0^0	; case 0
  4346  04F3  1903               	skipnz
  4347  04F4  2DC0               	goto	l10801
  4348  04F5  3A64               	xorlw	100^0	; case 100
  4349  04F6  1903               	skipnz
  4350  04F7  2CFC               	goto	l10759
  4351  04F8  3A0D               	xorlw	105^100	; case 105
  4352  04F9  1903               	skipnz
  4353  04FA  2CFC               	goto	l10759
  4354  04FB  2DAC               	goto	l10799
  4355                           	opt asmopt_on
  4356                           
  4357                           	line	825
  4358                           	
  4359  04FC                     l6753:	
  4360                           	line	1254
  4361                           	
  4362  04FC                     l10759:	
  4363  04FC  083C               	movf	(sprintf@ap),w
  4364  04FD  0084               	movwf	fsr0
  4365  04FE  1383               	bcf	status, 7	;select IRP bank0
  4366  04FF  0800               	movf	indf,w
  4367  0500  00BF               	movwf	(sprintf@_val)
  4368  0501  0A84               	incf	fsr0,f
  4369  0502  0800               	movf	indf,w
  4370  0503  00C0               	movwf	(sprintf@_val+1)
  4371                           	
  4372  0504                     l10761:	
  4373  0504  3002               	movlw	(02h)
  4374  0505  00B9               	movwf	(??_sprintf+0)+0
  4375  0506  0839               	movf	(??_sprintf+0)+0,w
  4376  0507  07BC               	addwf	(sprintf@ap),f
  4377                           	line	1256
  4378                           	
  4379  0508                     l10763:	
  4380  0508  1FC0               	btfss	(sprintf@_val+1),7
  4381  0509  2D0B               	goto	u4381
  4382  050A  2D0C               	goto	u4380
  4383  050B                     u4381:
  4384  050B  2D16               	goto	l10769
  4385  050C                     u4380:
  4386                           	line	1257
  4387                           	
  4388  050C                     l10765:	
  4389  050C  3003               	movlw	(03h)
  4390  050D  00B9               	movwf	(??_sprintf+0)+0
  4391  050E  0839               	movf	(??_sprintf+0)+0,w
  4392  050F  04BD               	iorwf	(sprintf@flag),f
  4393                           	line	1258
  4394                           	
  4395  0510                     l10767:	
  4396  0510  09BF               	comf	(sprintf@_val),f
  4397  0511  09C0               	comf	(sprintf@_val+1),f
  4398  0512  0ABF               	incf	(sprintf@_val),f
  4399  0513  1903               	skipnz
  4400  0514  0AC0               	incf	(sprintf@_val+1),f
  4401  0515  2D16               	goto	l10769
  4402                           	line	1259
  4403                           	
  4404  0516                     l6755:	
  4405                           	line	1300
  4406                           	
  4407  0516                     l10769:	
  4408  0516  01C4               	clrf	(sprintf@c)
  4409  0517  1403               	bsf	status,0
  4410  0518  0DC4               	rlf	(sprintf@c),f
  4411                           	
  4412  0519                     l10771:	
  4413  0519  0844               	movf	(sprintf@c),w
  4414  051A  3A05               	xorlw	05h
  4415  051B  1D03               	skipz
  4416  051C  2D1E               	goto	u4391
  4417  051D  2D1F               	goto	u4390
  4418  051E                     u4391:
  4419  051E  2D21               	goto	l10775
  4420  051F                     u4390:
  4421  051F  2D49               	goto	l10783
  4422                           	
  4423  0520                     l10773:	
  4424  0520  2D49               	goto	l10783
  4425                           	line	1301
  4426                           	
  4427  0521                     l6756:	
  4428                           	
  4429  0521                     l10775:	
  4430  0521  0844               	movf	(sprintf@c),w
  4431  0522  00B9               	movwf	(??_sprintf+0)+0
  4432  0523  0739               	addwf	(??_sprintf+0)+0,w
  4433  0524  3E01               	addlw	low((_dpowers-__stringbase))
  4434  0525  0084               	movwf	fsr0
  4435  0526  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4436  052B  00BA               	movwf	(??_sprintf+1)+0
  4437  052C  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4438  0531  00BB               	movwf	(??_sprintf+1)+0+1
  4439  0532  083B               	movf	1+(??_sprintf+1)+0,w
  4440  0533  0240               	subwf	(sprintf@_val+1),w
  4441  0534  1D03               	skipz
  4442  0535  2D38               	goto	u4405
  4443  0536  083A               	movf	0+(??_sprintf+1)+0,w
  4444  0537  023F               	subwf	(sprintf@_val),w
  4445  0538                     u4405:
  4446  0538  1803               	skipnc
  4447  0539  2D3B               	goto	u4401
  4448  053A  2D3C               	goto	u4400
  4449  053B                     u4401:
  4450  053B  2D3E               	goto	l10779
  4451  053C                     u4400:
  4452  053C  2D49               	goto	l10783
  4453                           	line	1302
  4454                           	
  4455  053D                     l10777:	
  4456  053D  2D49               	goto	l10783
  4457                           	
  4458  053E                     l6758:	
  4459                           	line	1300
  4460                           	
  4461  053E                     l10779:	
  4462  053E  3001               	movlw	(01h)
  4463  053F  00B9               	movwf	(??_sprintf+0)+0
  4464  0540  0839               	movf	(??_sprintf+0)+0,w
  4465  0541  07C4               	addwf	(sprintf@c),f
  4466                           	
  4467  0542                     l10781:	
  4468  0542  0844               	movf	(sprintf@c),w
  4469  0543  3A05               	xorlw	05h
  4470  0544  1D03               	skipz
  4471  0545  2D47               	goto	u4411
  4472  0546  2D48               	goto	u4410
  4473  0547                     u4411:
  4474  0547  2D21               	goto	l10775
  4475  0548                     u4410:
  4476  0548  2D49               	goto	l10783
  4477                           	
  4478  0549                     l6757:	
  4479                           	line	1433
  4480                           	
  4481  0549                     l10783:	
  4482  0549  083D               	movf	(sprintf@flag),w
  4483  054A  3903               	andlw	03h
  4484  054B  1903               	btfsc	status,2
  4485  054C  2D4E               	goto	u4421
  4486  054D  2D4F               	goto	u4420
  4487  054E                     u4421:
  4488  054E  2D5B               	goto	l10789
  4489  054F                     u4420:
  4490                           	line	1434
  4491                           	
  4492  054F                     l10785:	
  4493  054F  302D               	movlw	(02Dh)
  4494  0550  00B9               	movwf	(??_sprintf+0)+0
  4495  0551  0843               	movf	(sprintf@sp),w
  4496  0552  0084               	movwf	fsr0
  4497  0553  0839               	movf	(??_sprintf+0)+0,w
  4498  0554  1383               	bcf	status, 7	;select IRP bank0
  4499  0555  0080               	movwf	indf
  4500                           	
  4501  0556                     l10787:	
  4502  0556  3001               	movlw	(01h)
  4503  0557  00B9               	movwf	(??_sprintf+0)+0
  4504  0558  0839               	movf	(??_sprintf+0)+0,w
  4505  0559  07C3               	addwf	(sprintf@sp),f
  4506  055A  2D5B               	goto	l10789
  4507                           	
  4508  055B                     l6759:	
  4509                           	line	1467
  4510                           	
  4511  055B                     l10789:	
  4512  055B  0844               	movf	(sprintf@c),w
  4513  055C  00B9               	movwf	(??_sprintf+0)+0
  4514  055D  0839               	movf	(??_sprintf+0)+0,w
  4515  055E  00BE               	movwf	(sprintf@prec)
  4516                           	line	1469
  4517  055F  2DA0               	goto	l10797
  4518                           	
  4519  0560                     l6761:	
  4520                           	line	1484
  4521                           	
  4522  0560                     l10791:	
  4523  0560  300A               	movlw	low(0Ah)
  4524  0561  00AE               	movwf	(?___lwmod)
  4525  0562  3000               	movlw	high(0Ah)
  4526  0563  00AF               	movwf	((?___lwmod))+1
  4527  0564  083E               	movf	(sprintf@prec),w
  4528  0565  00B9               	movwf	(??_sprintf+0)+0
  4529  0566  0739               	addwf	(??_sprintf+0)+0,w
  4530  0567  3E01               	addlw	low((_dpowers-__stringbase))
  4531  0568  0084               	movwf	fsr0
  4532  0569  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4533  056E  00A6               	movwf	(?___lwdiv)
  4534  056F  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4535  0574  00A7               	movwf	(?___lwdiv+1)
  4536  0575  0840               	movf	(sprintf@_val+1),w
  4537  0576  01A9               	clrf	1+(?___lwdiv)+02h
  4538  0577  07A9               	addwf	1+(?___lwdiv)+02h
  4539  0578  083F               	movf	(sprintf@_val),w
  4540  0579  01A8               	clrf	0+(?___lwdiv)+02h
  4541  057A  07A8               	addwf	0+(?___lwdiv)+02h
  4542                           
  4543  057B  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4544  0580  1283               	bcf	status, 5	;RP0=0, select bank0
  4545  0581  1303               	bcf	status, 6	;RP1=0, select bank0
  4546  0582  0827               	movf	(1+(?___lwdiv)),w
  4547  0583  01B1               	clrf	1+(?___lwmod)+02h
  4548  0584  07B1               	addwf	1+(?___lwmod)+02h
  4549  0585  0826               	movf	(0+(?___lwdiv)),w
  4550  0586  01B0               	clrf	0+(?___lwmod)+02h
  4551  0587  07B0               	addwf	0+(?___lwmod)+02h
  4552                           
  4553  0588  120A  158A  23F7   	fcall	___lwmod
              120A  118A         
  4554  058D  1283               	bcf	status, 5	;RP0=0, select bank0
  4555  058E  1303               	bcf	status, 6	;RP1=0, select bank0
  4556  058F  082E               	movf	(0+(?___lwmod)),w
  4557  0590  3E30               	addlw	030h
  4558  0591  00BA               	movwf	(??_sprintf+1)+0
  4559  0592  083A               	movf	(??_sprintf+1)+0,w
  4560  0593  00C4               	movwf	(sprintf@c)
  4561                           	line	1516
  4562                           	
  4563  0594                     l10793:	
  4564  0594  0844               	movf	(sprintf@c),w
  4565  0595  00B9               	movwf	(??_sprintf+0)+0
  4566  0596  0843               	movf	(sprintf@sp),w
  4567  0597  0084               	movwf	fsr0
  4568  0598  0839               	movf	(??_sprintf+0)+0,w
  4569  0599  1383               	bcf	status, 7	;select IRP bank0
  4570  059A  0080               	movwf	indf
  4571                           	
  4572  059B                     l10795:	
  4573  059B  3001               	movlw	(01h)
  4574  059C  00B9               	movwf	(??_sprintf+0)+0
  4575  059D  0839               	movf	(??_sprintf+0)+0,w
  4576  059E  07C3               	addwf	(sprintf@sp),f
  4577  059F  2DA0               	goto	l10797
  4578                           	line	1517
  4579                           	
  4580  05A0                     l6760:	
  4581                           	line	1469
  4582                           	
  4583  05A0                     l10797:	
  4584  05A0  30FF               	movlw	(-1)
  4585  05A1  00B9               	movwf	(??_sprintf+0)+0
  4586  05A2  0839               	movf	(??_sprintf+0)+0,w
  4587  05A3  07BE               	addwf	(sprintf@prec),f
  4588  05A4  083E               	movf	((sprintf@prec)),w
  4589  05A5  3AFF               	xorlw	-1
  4590  05A6  1D03               	skipz
  4591  05A7  2DA9               	goto	u4431
  4592  05A8  2DAA               	goto	u4430
  4593  05A9                     u4431:
  4594  05A9  2D60               	goto	l10791
  4595  05AA                     u4430:
  4596  05AA  2DAC               	goto	l10799
  4597                           	
  4598  05AB                     l6762:	
  4599  05AB  2DAC               	goto	l10799
  4600                           	line	1525
  4601                           	
  4602  05AC                     l6745:	
  4603                           	line	540
  4604                           	
  4605  05AC                     l10799:	
  4606  05AC  3001               	movlw	01h
  4607  05AD  07B4               	addwf	(sprintf@f),f
  4608  05AE  30FF               	movlw	-01h
  4609  05AF  0734               	addwf	(sprintf@f),w
  4610  05B0  0084               	movwf	fsr0
  4611  05B1  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4612  05B6  00B9               	movwf	(??_sprintf+0)+0
  4613  05B7  0839               	movf	(??_sprintf+0)+0,w
  4614  05B8  00C4               	movwf	(sprintf@c)
  4615  05B9  08C4               	movf	((sprintf@c)),f
  4616  05BA  1D03               	skipz
  4617  05BB  2DBD               	goto	u4441
  4618  05BC  2DBE               	goto	u4440
  4619  05BD                     u4441:
  4620  05BD  2CCE               	goto	l10749
  4621  05BE                     u4440:
  4622  05BE  2DC0               	goto	l10801
  4623                           	
  4624  05BF                     l6763:	
  4625  05BF  2DC0               	goto	l10801
  4626                           	line	1527
  4627                           	
  4628  05C0                     l6750:	
  4629                           	line	1530
  4630                           	
  4631  05C0                     l10801:	
  4632  05C0  0843               	movf	(sprintf@sp),w
  4633  05C1  0084               	movwf	fsr0
  4634  05C2  1383               	bcf	status, 7	;select IRP bank0
  4635  05C3  0180               	clrf	indf
  4636  05C4  2DC5               	goto	l6764
  4637                           	line	1532
  4638                           	
  4639  05C5                     l10803:	
  4640                           	line	1533
  4641                           ;	Return value of _sprintf is never used
  4642                           	
  4643  05C5                     l6764:	
  4644  05C5  0008               	return
  4645                           	opt stack 0
  4646                           GLOBAL	__end_of_sprintf
  4647  05C6                     	__end_of_sprintf:
  4648 ;; =============== function _sprintf ends ============
  4649                           
  4650                           	signat	_sprintf,4698
  4651                           	global	_ADCconvert
  4652                           psect	text1224,local,class=CODE,delta=2
  4653                           global __ptext1224
  4654  0015                     __ptext1224:
  4655                           
  4656 ;; *************** function _ADCconvert *****************
  4657 ;; Defined at:
  4658 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;		None               void
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, pclath, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4672 ;;      Params:         0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0
  4674 ;;      Temps:          0       2       0       0       0
  4675 ;;      Totals:         0       2       0       0       0
  4676 ;;Total ram usage:        2 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    4
  4679 ;; This function calls:
  4680 ;;		___wmul
  4681 ;;		___lwdiv
  4682 ;; This function is called by:
  4683 ;;		_readAvgDistance
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           psect	text1224
  4687                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4688                           	line	33
  4689                           	global	__size_of_ADCconvert
  4690  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  4691                           	
  4692  0015                     _ADCconvert:	
  4693                           	opt	stack 1
  4694                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  4695                           	line	39
  4696                           	
  4697  0015                     l10705:	
  4698                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  4699  0015  3000               	movlw	high(0D5h)
  4700  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  4701  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  4702  0018  026B               	subwf	(_adcVal+1),w	;volatile
  4703  0019  30D5               	movlw	low(0D5h)
  4704  001A  1903               	skipnz
  4705  001B  026A               	subwf	(_adcVal),w	;volatile
  4706  001C  1C03               	skipc
  4707  001D  281F               	goto	u4231
  4708  001E  2820               	goto	u4230
  4709  001F                     u4231:
  4710  001F  2863               	goto	l10711
  4711  0020                     u4230:
  4712                           	
  4713  0020                     l10707:	
  4714  0020  3000               	movlw	high(0EAh)
  4715  0021  026B               	subwf	(_adcVal+1),w	;volatile
  4716  0022  30EA               	movlw	low(0EAh)
  4717  0023  1903               	skipnz
  4718  0024  026A               	subwf	(_adcVal),w	;volatile
  4719  0025  1803               	skipnc
  4720  0026  2828               	goto	u4241
  4721  0027  2829               	goto	u4240
  4722  0028                     u4241:
  4723  0028  2863               	goto	l10711
  4724  0029                     u4240:
  4725                           	line	41
  4726                           	
  4727  0029                     l10709:	
  4728                           ;infrared.c: 40: {
  4729                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  4730  0029  3015               	movlw	low(015h)
  4731  002A  00A6               	movwf	(?___lwdiv)
  4732  002B  3000               	movlw	high(015h)
  4733  002C  00A7               	movwf	((?___lwdiv))+1
  4734  002D  096A               	comf	(_adcVal),w	;volatile
  4735  002E  00AE               	movwf	(??_ADCconvert+0)+0
  4736  002F  096B               	comf	(_adcVal+1),w	;volatile
  4737  0030  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4738  0031  0AAE               	incf	(??_ADCconvert+0)+0,f
  4739  0032  1903               	skipnz
  4740  0033  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4741  0034  082E               	movf	0+(??_ADCconvert+0)+0,w
  4742  0035  3EEA               	addlw	low(0EAh)
  4743  0036  00A0               	movwf	(?___wmul)
  4744  0037  082F               	movf	1+(??_ADCconvert+0)+0,w
  4745  0038  1803               	skipnc
  4746  0039  3E01               	addlw	1
  4747  003A  3E00               	addlw	high(0EAh)
  4748  003B  00A1               	movwf	1+(?___wmul)
  4749  003C  3005               	movlw	low(05h)
  4750  003D  00A2               	movwf	0+(?___wmul)+02h
  4751  003E  3000               	movlw	high(05h)
  4752  003F  00A3               	movwf	(0+(?___wmul)+02h)+1
  4753  0040  120A  158A  2264   	fcall	___wmul
              120A  118A         
  4754  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  4755  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  4756  0047  0821               	movf	(1+(?___wmul)),w
  4757  0048  01A9               	clrf	1+(?___lwdiv)+02h
  4758  0049  07A9               	addwf	1+(?___lwdiv)+02h
  4759  004A  0820               	movf	(0+(?___wmul)),w
  4760  004B  01A8               	clrf	0+(?___lwdiv)+02h
  4761  004C  07A8               	addwf	0+(?___lwdiv)+02h
  4762                           
  4763  004D  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4764  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  4765  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  4766  0054  0826               	movf	(0+(?___lwdiv)),w
  4767  0055  3E0F               	addlw	low(0Fh)
  4768  0056  1683               	bsf	status, 5	;RP0=1, select bank1
  4769  0057  1303               	bcf	status, 6	;RP1=0, select bank1
  4770  0058  00C4               	movwf	(_distance)^080h	;volatile
  4771  0059  1283               	bcf	status, 5	;RP0=0, select bank0
  4772  005A  1303               	bcf	status, 6	;RP1=0, select bank0
  4773  005B  0827               	movf	(1+(?___lwdiv)),w
  4774  005C  1803               	skipnc
  4775  005D  3E01               	addlw	1
  4776  005E  3E00               	addlw	high(0Fh)
  4777  005F  1683               	bsf	status, 5	;RP0=1, select bank1
  4778  0060  1303               	bcf	status, 6	;RP1=0, select bank1
  4779  0061  00C5               	movwf	1+(_distance)^080h	;volatile
  4780                           	line	42
  4781                           ;infrared.c: 42: }
  4782  0062  2A37               	goto	l2997
  4783                           	line	43
  4784                           	
  4785  0063                     l2984:	
  4786                           	
  4787  0063                     l10711:	
  4788                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  4789  0063  3000               	movlw	high(0AAh)
  4790  0064  1283               	bcf	status, 5	;RP0=0, select bank0
  4791  0065  026B               	subwf	(_adcVal+1),w	;volatile
  4792  0066  30AA               	movlw	low(0AAh)
  4793  0067  1903               	skipnz
  4794  0068  026A               	subwf	(_adcVal),w	;volatile
  4795  0069  1C03               	skipc
  4796  006A  286C               	goto	u4251
  4797  006B  286D               	goto	u4250
  4798  006C                     u4251:
  4799  006C  28B0               	goto	l10717
  4800  006D                     u4250:
  4801                           	
  4802  006D                     l10713:	
  4803  006D  3000               	movlw	high(0D5h)
  4804  006E  026B               	subwf	(_adcVal+1),w	;volatile
  4805  006F  30D5               	movlw	low(0D5h)
  4806  0070  1903               	skipnz
  4807  0071  026A               	subwf	(_adcVal),w	;volatile
  4808  0072  1803               	skipnc
  4809  0073  2875               	goto	u4261
  4810  0074  2876               	goto	u4260
  4811  0075                     u4261:
  4812  0075  28B0               	goto	l10717
  4813  0076                     u4260:
  4814                           	line	45
  4815                           	
  4816  0076                     l10715:	
  4817                           ;infrared.c: 44: {
  4818                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  4819  0076  302B               	movlw	low(02Bh)
  4820  0077  00A6               	movwf	(?___lwdiv)
  4821  0078  3000               	movlw	high(02Bh)
  4822  0079  00A7               	movwf	((?___lwdiv))+1
  4823  007A  096A               	comf	(_adcVal),w	;volatile
  4824  007B  00AE               	movwf	(??_ADCconvert+0)+0
  4825  007C  096B               	comf	(_adcVal+1),w	;volatile
  4826  007D  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4827  007E  0AAE               	incf	(??_ADCconvert+0)+0,f
  4828  007F  1903               	skipnz
  4829  0080  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4830  0081  082E               	movf	0+(??_ADCconvert+0)+0,w
  4831  0082  3ED5               	addlw	low(0D5h)
  4832  0083  00A0               	movwf	(?___wmul)
  4833  0084  082F               	movf	1+(??_ADCconvert+0)+0,w
  4834  0085  1803               	skipnc
  4835  0086  3E01               	addlw	1
  4836  0087  3E00               	addlw	high(0D5h)
  4837  0088  00A1               	movwf	1+(?___wmul)
  4838  0089  300A               	movlw	low(0Ah)
  4839  008A  00A2               	movwf	0+(?___wmul)+02h
  4840  008B  3000               	movlw	high(0Ah)
  4841  008C  00A3               	movwf	(0+(?___wmul)+02h)+1
  4842  008D  120A  158A  2264   	fcall	___wmul
              120A  118A         
  4843  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  4844  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  4845  0094  0821               	movf	(1+(?___wmul)),w
  4846  0095  01A9               	clrf	1+(?___lwdiv)+02h
  4847  0096  07A9               	addwf	1+(?___lwdiv)+02h
  4848  0097  0820               	movf	(0+(?___wmul)),w
  4849  0098  01A8               	clrf	0+(?___lwdiv)+02h
  4850  0099  07A8               	addwf	0+(?___lwdiv)+02h
  4851                           
  4852  009A  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4853  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  4854  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  4855  00A1  0826               	movf	(0+(?___lwdiv)),w
  4856  00A2  3E14               	addlw	low(014h)
  4857  00A3  1683               	bsf	status, 5	;RP0=1, select bank1
  4858  00A4  1303               	bcf	status, 6	;RP1=0, select bank1
  4859  00A5  00C4               	movwf	(_distance)^080h	;volatile
  4860  00A6  1283               	bcf	status, 5	;RP0=0, select bank0
  4861  00A7  1303               	bcf	status, 6	;RP1=0, select bank0
  4862  00A8  0827               	movf	(1+(?___lwdiv)),w
  4863  00A9  1803               	skipnc
  4864  00AA  3E01               	addlw	1
  4865  00AB  3E00               	addlw	high(014h)
  4866  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  4867  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  4868  00AE  00C5               	movwf	1+(_distance)^080h	;volatile
  4869                           	line	46
  4870                           ;infrared.c: 46: }
  4871  00AF  2A37               	goto	l2997
  4872                           	line	47
  4873                           	
  4874  00B0                     l2986:	
  4875                           	
  4876  00B0                     l10717:	
  4877                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  4878  00B0  3000               	movlw	high(080h)
  4879  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
  4880  00B2  026B               	subwf	(_adcVal+1),w	;volatile
  4881  00B3  3080               	movlw	low(080h)
  4882  00B4  1903               	skipnz
  4883  00B5  026A               	subwf	(_adcVal),w	;volatile
  4884  00B6  1C03               	skipc
  4885  00B7  28B9               	goto	u4271
  4886  00B8  28BA               	goto	u4270
  4887  00B9                     u4271:
  4888  00B9  28FD               	goto	l10723
  4889  00BA                     u4270:
  4890                           	
  4891  00BA                     l10719:	
  4892  00BA  3000               	movlw	high(0AAh)
  4893  00BB  026B               	subwf	(_adcVal+1),w	;volatile
  4894  00BC  30AA               	movlw	low(0AAh)
  4895  00BD  1903               	skipnz
  4896  00BE  026A               	subwf	(_adcVal),w	;volatile
  4897  00BF  1803               	skipnc
  4898  00C0  28C2               	goto	u4281
  4899  00C1  28C3               	goto	u4280
  4900  00C2                     u4281:
  4901  00C2  28FD               	goto	l10723
  4902  00C3                     u4280:
  4903                           	line	49
  4904                           	
  4905  00C3                     l10721:	
  4906                           ;infrared.c: 48: {
  4907                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  4908  00C3  302A               	movlw	low(02Ah)
  4909  00C4  00A6               	movwf	(?___lwdiv)
  4910  00C5  3000               	movlw	high(02Ah)
  4911  00C6  00A7               	movwf	((?___lwdiv))+1
  4912  00C7  096A               	comf	(_adcVal),w	;volatile
  4913  00C8  00AE               	movwf	(??_ADCconvert+0)+0
  4914  00C9  096B               	comf	(_adcVal+1),w	;volatile
  4915  00CA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4916  00CB  0AAE               	incf	(??_ADCconvert+0)+0,f
  4917  00CC  1903               	skipnz
  4918  00CD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4919  00CE  082E               	movf	0+(??_ADCconvert+0)+0,w
  4920  00CF  3EAA               	addlw	low(0AAh)
  4921  00D0  00A0               	movwf	(?___wmul)
  4922  00D1  082F               	movf	1+(??_ADCconvert+0)+0,w
  4923  00D2  1803               	skipnc
  4924  00D3  3E01               	addlw	1
  4925  00D4  3E00               	addlw	high(0AAh)
  4926  00D5  00A1               	movwf	1+(?___wmul)
  4927  00D6  300A               	movlw	low(0Ah)
  4928  00D7  00A2               	movwf	0+(?___wmul)+02h
  4929  00D8  3000               	movlw	high(0Ah)
  4930  00D9  00A3               	movwf	(0+(?___wmul)+02h)+1
  4931  00DA  120A  158A  2264   	fcall	___wmul
              120A  118A         
  4932  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4933  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4934  00E1  0821               	movf	(1+(?___wmul)),w
  4935  00E2  01A9               	clrf	1+(?___lwdiv)+02h
  4936  00E3  07A9               	addwf	1+(?___lwdiv)+02h
  4937  00E4  0820               	movf	(0+(?___wmul)),w
  4938  00E5  01A8               	clrf	0+(?___lwdiv)+02h
  4939  00E6  07A8               	addwf	0+(?___lwdiv)+02h
  4940                           
  4941  00E7  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4942  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4943  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4944  00EE  0826               	movf	(0+(?___lwdiv)),w
  4945  00EF  3E1E               	addlw	low(01Eh)
  4946  00F0  1683               	bsf	status, 5	;RP0=1, select bank1
  4947  00F1  1303               	bcf	status, 6	;RP1=0, select bank1
  4948  00F2  00C4               	movwf	(_distance)^080h	;volatile
  4949  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4950  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4951  00F5  0827               	movf	(1+(?___lwdiv)),w
  4952  00F6  1803               	skipnc
  4953  00F7  3E01               	addlw	1
  4954  00F8  3E00               	addlw	high(01Eh)
  4955  00F9  1683               	bsf	status, 5	;RP0=1, select bank1
  4956  00FA  1303               	bcf	status, 6	;RP1=0, select bank1
  4957  00FB  00C5               	movwf	1+(_distance)^080h	;volatile
  4958                           	line	50
  4959                           ;infrared.c: 50: }
  4960  00FC  2A37               	goto	l2997
  4961                           	line	51
  4962                           	
  4963  00FD                     l2988:	
  4964                           	
  4965  00FD                     l10723:	
  4966                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  4967  00FD  3000               	movlw	high(06Bh)
  4968  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  4969  00FF  026B               	subwf	(_adcVal+1),w	;volatile
  4970  0100  306B               	movlw	low(06Bh)
  4971  0101  1903               	skipnz
  4972  0102  026A               	subwf	(_adcVal),w	;volatile
  4973  0103  1C03               	skipc
  4974  0104  2906               	goto	u4291
  4975  0105  2907               	goto	u4290
  4976  0106                     u4291:
  4977  0106  294A               	goto	l10729
  4978  0107                     u4290:
  4979                           	
  4980  0107                     l10725:	
  4981  0107  3000               	movlw	high(080h)
  4982  0108  026B               	subwf	(_adcVal+1),w	;volatile
  4983  0109  3080               	movlw	low(080h)
  4984  010A  1903               	skipnz
  4985  010B  026A               	subwf	(_adcVal),w	;volatile
  4986  010C  1803               	skipnc
  4987  010D  290F               	goto	u4301
  4988  010E  2910               	goto	u4300
  4989  010F                     u4301:
  4990  010F  294A               	goto	l10729
  4991  0110                     u4300:
  4992                           	line	53
  4993                           	
  4994  0110                     l10727:	
  4995                           ;infrared.c: 52: {
  4996                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  4997  0110  3015               	movlw	low(015h)
  4998  0111  00A6               	movwf	(?___lwdiv)
  4999  0112  3000               	movlw	high(015h)
  5000  0113  00A7               	movwf	((?___lwdiv))+1
  5001  0114  096A               	comf	(_adcVal),w	;volatile
  5002  0115  00AE               	movwf	(??_ADCconvert+0)+0
  5003  0116  096B               	comf	(_adcVal+1),w	;volatile
  5004  0117  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5005  0118  0AAE               	incf	(??_ADCconvert+0)+0,f
  5006  0119  1903               	skipnz
  5007  011A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5008  011B  082E               	movf	0+(??_ADCconvert+0)+0,w
  5009  011C  3E80               	addlw	low(080h)
  5010  011D  00A0               	movwf	(?___wmul)
  5011  011E  082F               	movf	1+(??_ADCconvert+0)+0,w
  5012  011F  1803               	skipnc
  5013  0120  3E01               	addlw	1
  5014  0121  3E00               	addlw	high(080h)
  5015  0122  00A1               	movwf	1+(?___wmul)
  5016  0123  300A               	movlw	low(0Ah)
  5017  0124  00A2               	movwf	0+(?___wmul)+02h
  5018  0125  3000               	movlw	high(0Ah)
  5019  0126  00A3               	movwf	(0+(?___wmul)+02h)+1
  5020  0127  120A  158A  2264   	fcall	___wmul
              120A  118A         
  5021  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  5022  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  5023  012E  0821               	movf	(1+(?___wmul)),w
  5024  012F  01A9               	clrf	1+(?___lwdiv)+02h
  5025  0130  07A9               	addwf	1+(?___lwdiv)+02h
  5026  0131  0820               	movf	(0+(?___wmul)),w
  5027  0132  01A8               	clrf	0+(?___lwdiv)+02h
  5028  0133  07A8               	addwf	0+(?___lwdiv)+02h
  5029                           
  5030  0134  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  5031  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  5032  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  5033  013B  0826               	movf	(0+(?___lwdiv)),w
  5034  013C  3E28               	addlw	low(028h)
  5035  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  5036  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  5037  013F  00C4               	movwf	(_distance)^080h	;volatile
  5038  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  5039  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  5040  0142  0827               	movf	(1+(?___lwdiv)),w
  5041  0143  1803               	skipnc
  5042  0144  3E01               	addlw	1
  5043  0145  3E00               	addlw	high(028h)
  5044  0146  1683               	bsf	status, 5	;RP0=1, select bank1
  5045  0147  1303               	bcf	status, 6	;RP1=0, select bank1
  5046  0148  00C5               	movwf	1+(_distance)^080h	;volatile
  5047                           	line	54
  5048                           ;infrared.c: 54: }
  5049  0149  2A37               	goto	l2997
  5050                           	line	55
  5051                           	
  5052  014A                     l2990:	
  5053                           	
  5054  014A                     l10729:	
  5055                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  5056  014A  3000               	movlw	high(04Dh)
  5057  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  5058  014C  026B               	subwf	(_adcVal+1),w	;volatile
  5059  014D  304D               	movlw	low(04Dh)
  5060  014E  1903               	skipnz
  5061  014F  026A               	subwf	(_adcVal),w	;volatile
  5062  0150  1C03               	skipc
  5063  0151  2953               	goto	u4311
  5064  0152  2954               	goto	u4310
  5065  0153                     u4311:
  5066  0153  2997               	goto	l10735
  5067  0154                     u4310:
  5068                           	
  5069  0154                     l10731:	
  5070  0154  3000               	movlw	high(06Bh)
  5071  0155  026B               	subwf	(_adcVal+1),w	;volatile
  5072  0156  306B               	movlw	low(06Bh)
  5073  0157  1903               	skipnz
  5074  0158  026A               	subwf	(_adcVal),w	;volatile
  5075  0159  1803               	skipnc
  5076  015A  295C               	goto	u4321
  5077  015B  295D               	goto	u4320
  5078  015C                     u4321:
  5079  015C  2997               	goto	l10735
  5080  015D                     u4320:
  5081                           	line	57
  5082                           	
  5083  015D                     l10733:	
  5084                           ;infrared.c: 56: {
  5085                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  5086  015D  301E               	movlw	low(01Eh)
  5087  015E  00A6               	movwf	(?___lwdiv)
  5088  015F  3000               	movlw	high(01Eh)
  5089  0160  00A7               	movwf	((?___lwdiv))+1
  5090  0161  096A               	comf	(_adcVal),w	;volatile
  5091  0162  00AE               	movwf	(??_ADCconvert+0)+0
  5092  0163  096B               	comf	(_adcVal+1),w	;volatile
  5093  0164  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5094  0165  0AAE               	incf	(??_ADCconvert+0)+0,f
  5095  0166  1903               	skipnz
  5096  0167  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5097  0168  082E               	movf	0+(??_ADCconvert+0)+0,w
  5098  0169  3E6B               	addlw	low(06Bh)
  5099  016A  00A0               	movwf	(?___wmul)
  5100  016B  082F               	movf	1+(??_ADCconvert+0)+0,w
  5101  016C  1803               	skipnc
  5102  016D  3E01               	addlw	1
  5103  016E  3E00               	addlw	high(06Bh)
  5104  016F  00A1               	movwf	1+(?___wmul)
  5105  0170  300A               	movlw	low(0Ah)
  5106  0171  00A2               	movwf	0+(?___wmul)+02h
  5107  0172  3000               	movlw	high(0Ah)
  5108  0173  00A3               	movwf	(0+(?___wmul)+02h)+1
  5109  0174  120A  158A  2264   	fcall	___wmul
              120A  118A         
  5110  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  5111  017A  1303               	bcf	status, 6	;RP1=0, select bank0
  5112  017B  0821               	movf	(1+(?___wmul)),w
  5113  017C  01A9               	clrf	1+(?___lwdiv)+02h
  5114  017D  07A9               	addwf	1+(?___lwdiv)+02h
  5115  017E  0820               	movf	(0+(?___wmul)),w
  5116  017F  01A8               	clrf	0+(?___lwdiv)+02h
  5117  0180  07A8               	addwf	0+(?___lwdiv)+02h
  5118                           
  5119  0181  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  5120  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  5121  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  5122  0188  0826               	movf	(0+(?___lwdiv)),w
  5123  0189  3E32               	addlw	low(032h)
  5124  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  5125  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  5126  018C  00C4               	movwf	(_distance)^080h	;volatile
  5127  018D  1283               	bcf	status, 5	;RP0=0, select bank0
  5128  018E  1303               	bcf	status, 6	;RP1=0, select bank0
  5129  018F  0827               	movf	(1+(?___lwdiv)),w
  5130  0190  1803               	skipnc
  5131  0191  3E01               	addlw	1
  5132  0192  3E00               	addlw	high(032h)
  5133  0193  1683               	bsf	status, 5	;RP0=1, select bank1
  5134  0194  1303               	bcf	status, 6	;RP1=0, select bank1
  5135  0195  00C5               	movwf	1+(_distance)^080h	;volatile
  5136                           	line	58
  5137                           ;infrared.c: 58: }
  5138  0196  2A37               	goto	l2997
  5139                           	line	59
  5140                           	
  5141  0197                     l2992:	
  5142                           	
  5143  0197                     l10735:	
  5144                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  5145  0197  3000               	movlw	high(038h)
  5146  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  5147  0199  026B               	subwf	(_adcVal+1),w	;volatile
  5148  019A  3038               	movlw	low(038h)
  5149  019B  1903               	skipnz
  5150  019C  026A               	subwf	(_adcVal),w	;volatile
  5151  019D  1C03               	skipc
  5152  019E  29A0               	goto	u4331
  5153  019F  29A1               	goto	u4330
  5154  01A0                     u4331:
  5155  01A0  29E4               	goto	l10741
  5156  01A1                     u4330:
  5157                           	
  5158  01A1                     l10737:	
  5159  01A1  3000               	movlw	high(04Dh)
  5160  01A2  026B               	subwf	(_adcVal+1),w	;volatile
  5161  01A3  304D               	movlw	low(04Dh)
  5162  01A4  1903               	skipnz
  5163  01A5  026A               	subwf	(_adcVal),w	;volatile
  5164  01A6  1803               	skipnc
  5165  01A7  29A9               	goto	u4341
  5166  01A8  29AA               	goto	u4340
  5167  01A9                     u4341:
  5168  01A9  29E4               	goto	l10741
  5169  01AA                     u4340:
  5170                           	line	61
  5171                           	
  5172  01AA                     l10739:	
  5173                           ;infrared.c: 60: {
  5174                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  5175  01AA  3015               	movlw	low(015h)
  5176  01AB  00A6               	movwf	(?___lwdiv)
  5177  01AC  3000               	movlw	high(015h)
  5178  01AD  00A7               	movwf	((?___lwdiv))+1
  5179  01AE  096A               	comf	(_adcVal),w	;volatile
  5180  01AF  00AE               	movwf	(??_ADCconvert+0)+0
  5181  01B0  096B               	comf	(_adcVal+1),w	;volatile
  5182  01B1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5183  01B2  0AAE               	incf	(??_ADCconvert+0)+0,f
  5184  01B3  1903               	skipnz
  5185  01B4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5186  01B5  082E               	movf	0+(??_ADCconvert+0)+0,w
  5187  01B6  3E4D               	addlw	low(04Dh)
  5188  01B7  00A0               	movwf	(?___wmul)
  5189  01B8  082F               	movf	1+(??_ADCconvert+0)+0,w
  5190  01B9  1803               	skipnc
  5191  01BA  3E01               	addlw	1
  5192  01BB  3E00               	addlw	high(04Dh)
  5193  01BC  00A1               	movwf	1+(?___wmul)
  5194  01BD  300A               	movlw	low(0Ah)
  5195  01BE  00A2               	movwf	0+(?___wmul)+02h
  5196  01BF  3000               	movlw	high(0Ah)
  5197  01C0  00A3               	movwf	(0+(?___wmul)+02h)+1
  5198  01C1  120A  158A  2264   	fcall	___wmul
              120A  118A         
  5199  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  5200  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  5201  01C8  0821               	movf	(1+(?___wmul)),w
  5202  01C9  01A9               	clrf	1+(?___lwdiv)+02h
  5203  01CA  07A9               	addwf	1+(?___lwdiv)+02h
  5204  01CB  0820               	movf	(0+(?___wmul)),w
  5205  01CC  01A8               	clrf	0+(?___lwdiv)+02h
  5206  01CD  07A8               	addwf	0+(?___lwdiv)+02h
  5207                           
  5208  01CE  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  5209  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
  5210  01D4  1303               	bcf	status, 6	;RP1=0, select bank0
  5211  01D5  0826               	movf	(0+(?___lwdiv)),w
  5212  01D6  3E3C               	addlw	low(03Ch)
  5213  01D7  1683               	bsf	status, 5	;RP0=1, select bank1
  5214  01D8  1303               	bcf	status, 6	;RP1=0, select bank1
  5215  01D9  00C4               	movwf	(_distance)^080h	;volatile
  5216  01DA  1283               	bcf	status, 5	;RP0=0, select bank0
  5217  01DB  1303               	bcf	status, 6	;RP1=0, select bank0
  5218  01DC  0827               	movf	(1+(?___lwdiv)),w
  5219  01DD  1803               	skipnc
  5220  01DE  3E01               	addlw	1
  5221  01DF  3E00               	addlw	high(03Ch)
  5222  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  5223  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  5224  01E2  00C5               	movwf	1+(_distance)^080h	;volatile
  5225                           	line	62
  5226                           ;infrared.c: 62: }
  5227  01E3  2A37               	goto	l2997
  5228                           	line	63
  5229                           	
  5230  01E4                     l2994:	
  5231                           	
  5232  01E4                     l10741:	
  5233                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  5234  01E4  3000               	movlw	high(02Bh)
  5235  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  5236  01E6  026B               	subwf	(_adcVal+1),w	;volatile
  5237  01E7  302B               	movlw	low(02Bh)
  5238  01E8  1903               	skipnz
  5239  01E9  026A               	subwf	(_adcVal),w	;volatile
  5240  01EA  1C03               	skipc
  5241  01EB  29ED               	goto	u4351
  5242  01EC  29EE               	goto	u4350
  5243  01ED                     u4351:
  5244  01ED  2A37               	goto	l2997
  5245  01EE                     u4350:
  5246                           	
  5247  01EE                     l10743:	
  5248  01EE  3000               	movlw	high(038h)
  5249  01EF  026B               	subwf	(_adcVal+1),w	;volatile
  5250  01F0  3038               	movlw	low(038h)
  5251  01F1  1903               	skipnz
  5252  01F2  026A               	subwf	(_adcVal),w	;volatile
  5253  01F3  1803               	skipnc
  5254  01F4  29F6               	goto	u4361
  5255  01F5  29F7               	goto	u4360
  5256  01F6                     u4361:
  5257  01F6  2A37               	goto	l2997
  5258  01F7                     u4360:
  5259                           	line	65
  5260                           	
  5261  01F7                     l10745:	
  5262                           ;infrared.c: 64: {
  5263                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  5264  01F7  300D               	movlw	low(0Dh)
  5265  01F8  00A6               	movwf	(?___lwdiv)
  5266  01F9  3000               	movlw	high(0Dh)
  5267  01FA  00A7               	movwf	((?___lwdiv))+1
  5268  01FB  096A               	comf	(_adcVal),w	;volatile
  5269  01FC  00AE               	movwf	(??_ADCconvert+0)+0
  5270  01FD  096B               	comf	(_adcVal+1),w	;volatile
  5271  01FE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5272  01FF  0AAE               	incf	(??_ADCconvert+0)+0,f
  5273  0200  1903               	skipnz
  5274  0201  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5275  0202  082E               	movf	0+(??_ADCconvert+0)+0,w
  5276  0203  3E38               	addlw	low(038h)
  5277  0204  00A0               	movwf	(?___wmul)
  5278  0205  082F               	movf	1+(??_ADCconvert+0)+0,w
  5279  0206  1803               	skipnc
  5280  0207  3E01               	addlw	1
  5281  0208  3E00               	addlw	high(038h)
  5282  0209  00A1               	movwf	1+(?___wmul)
  5283  020A  300A               	movlw	low(0Ah)
  5284  020B  00A2               	movwf	0+(?___wmul)+02h
  5285  020C  3000               	movlw	high(0Ah)
  5286  020D  00A3               	movwf	(0+(?___wmul)+02h)+1
  5287  020E  120A  158A  2264   	fcall	___wmul
              120A  118A         
  5288  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  5289  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  5290  0215  0821               	movf	(1+(?___wmul)),w
  5291  0216  01A9               	clrf	1+(?___lwdiv)+02h
  5292  0217  07A9               	addwf	1+(?___lwdiv)+02h
  5293  0218  0820               	movf	(0+(?___wmul)),w
  5294  0219  01A8               	clrf	0+(?___lwdiv)+02h
  5295  021A  07A8               	addwf	0+(?___lwdiv)+02h
  5296                           
  5297  021B  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  5298  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  5299  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  5300  0222  0826               	movf	(0+(?___lwdiv)),w
  5301  0223  3E46               	addlw	low(046h)
  5302  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  5303  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  5304  0226  00C4               	movwf	(_distance)^080h	;volatile
  5305  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  5306  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  5307  0229  0827               	movf	(1+(?___lwdiv)),w
  5308  022A  1803               	skipnc
  5309  022B  3E01               	addlw	1
  5310  022C  3E00               	addlw	high(046h)
  5311  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  5312  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  5313  022F  00C5               	movwf	1+(_distance)^080h	;volatile
  5314  0230  2A37               	goto	l2997
  5315                           	line	66
  5316                           	
  5317  0231                     l2996:	
  5318  0231  2A37               	goto	l2997
  5319                           	line	67
  5320                           	
  5321  0232                     l2995:	
  5322  0232  2A37               	goto	l2997
  5323                           	
  5324  0233                     l2993:	
  5325  0233  2A37               	goto	l2997
  5326                           	
  5327  0234                     l2991:	
  5328  0234  2A37               	goto	l2997
  5329                           	
  5330  0235                     l2989:	
  5331  0235  2A37               	goto	l2997
  5332                           	
  5333  0236                     l2987:	
  5334  0236  2A37               	goto	l2997
  5335                           	
  5336  0237                     l2985:	
  5337                           	
  5338  0237                     l2997:	
  5339  0237  0008               	return
  5340                           	opt stack 0
  5341                           GLOBAL	__end_of_ADCconvert
  5342  0238                     	__end_of_ADCconvert:
  5343 ;; =============== function _ADCconvert ends ============
  5344                           
  5345                           	signat	_ADCconvert,88
  5346                           	global	_robotTurn
  5347                           psect	text1225,local,class=CODE,delta=2
  5348                           global __ptext1225
  5349  0E54                     __ptext1225:
  5350                           
  5351 ;; *************** function _robotTurn *****************
  5352 ;; Defined at:
  5353 ;;		line 83 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  distance        2    2[BANK0 ] int 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;		None               void
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5367 ;;      Params:         0       2       0       0       0
  5368 ;;      Locals:         0       0       0       0       0
  5369 ;;      Temps:          0       1       0       0       0
  5370 ;;      Totals:         0       3       0       0       0
  5371 ;;Total ram usage:        3 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    4
  5374 ;; This function calls:
  5375 ;;		_ser_putch
  5376 ;; This function is called by:
  5377 ;;		_main
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           psect	text1225
  5381                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5382                           	line	83
  5383                           	global	__size_of_robotTurn
  5384  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  5385                           	
  5386  0E54                     _robotTurn:	
  5387                           	opt	stack 3
  5388                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5389                           	line	86
  5390                           	
  5391  0E54                     l10695:	
  5392                           ;robot.c: 86: turnlowByte = (unsigned char) (distance) ;
  5393  0E54  1283               	bcf	status, 5	;RP0=0, select bank0
  5394  0E55  1303               	bcf	status, 6	;RP1=0, select bank0
  5395  0E56  0822               	movf	(robotTurn@distance),w
  5396  0E57  00A4               	movwf	(??_robotTurn+0)+0
  5397  0E58  0824               	movf	(??_robotTurn+0)+0,w
  5398  0E59  1683               	bsf	status, 5	;RP0=1, select bank1
  5399  0E5A  1303               	bcf	status, 6	;RP1=0, select bank1
  5400  0E5B  00DF               	movwf	(_turnlowByte)^080h
  5401                           	line	87
  5402                           	
  5403  0E5C                     l10697:	
  5404                           ;robot.c: 87: turnhighByte = (unsigned char) (distance >> 8);
  5405  0E5C  1283               	bcf	status, 5	;RP0=0, select bank0
  5406  0E5D  1303               	bcf	status, 6	;RP1=0, select bank0
  5407  0E5E  0823               	movf	(robotTurn@distance+1),w
  5408  0E5F  00A4               	movwf	(??_robotTurn+0)+0
  5409  0E60  0824               	movf	(??_robotTurn+0)+0,w
  5410  0E61  1683               	bsf	status, 5	;RP0=1, select bank1
  5411  0E62  1303               	bcf	status, 6	;RP1=0, select bank1
  5412  0E63  00DE               	movwf	(_turnhighByte)^080h
  5413                           	line	88
  5414                           	
  5415  0E64                     l10699:	
  5416                           ;robot.c: 88: if (distance >= 0)
  5417  0E64  1283               	bcf	status, 5	;RP0=0, select bank0
  5418  0E65  1303               	bcf	status, 6	;RP1=0, select bank0
  5419  0E66  1BA3               	btfsc	(robotTurn@distance+1),7
  5420  0E67  2E69               	goto	u4221
  5421  0E68  2E6A               	goto	u4220
  5422  0E69                     u4221:
  5423  0E69  2E89               	goto	l10703
  5424  0E6A                     u4220:
  5425                           	line	90
  5426                           	
  5427  0E6A                     l10701:	
  5428                           ;robot.c: 89: {
  5429                           ;robot.c: 90: ser_putch(137);
  5430  0E6A  3089               	movlw	(089h)
  5431  0E6B  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5432                           	line	92
  5433                           ;robot.c: 92: ser_putch(0);
  5434  0E70  3000               	movlw	(0)
  5435  0E71  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5436                           	line	94
  5437                           ;robot.c: 94: ser_putch(100);
  5438  0E76  3064               	movlw	(064h)
  5439  0E77  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5440                           	line	96
  5441                           ;robot.c: 96: ser_putch(0);
  5442  0E7C  3000               	movlw	(0)
  5443  0E7D  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5444                           	line	98
  5445                           ;robot.c: 98: ser_putch(1);
  5446  0E82  3001               	movlw	(01h)
  5447  0E83  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5448                           	line	99
  5449                           ;robot.c: 99: }
  5450  0E88  2EA7               	goto	l6735
  5451                           	line	100
  5452                           	
  5453  0E89                     l6734:	
  5454                           	line	102
  5455                           	
  5456  0E89                     l10703:	
  5457                           ;robot.c: 100: else
  5458                           ;robot.c: 101: {
  5459                           ;robot.c: 102: ser_putch(137);
  5460  0E89  3089               	movlw	(089h)
  5461  0E8A  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5462                           	line	104
  5463                           ;robot.c: 104: ser_putch(0);
  5464  0E8F  3000               	movlw	(0)
  5465  0E90  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5466                           	line	106
  5467                           ;robot.c: 106: ser_putch(100);
  5468  0E95  3064               	movlw	(064h)
  5469  0E96  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5470                           	line	108
  5471                           ;robot.c: 108: ser_putch(255);
  5472  0E9B  30FF               	movlw	(0FFh)
  5473  0E9C  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5474                           	line	110
  5475                           ;robot.c: 110: ser_putch(255);
  5476  0EA1  30FF               	movlw	(0FFh)
  5477  0EA2  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5478                           	line	111
  5479                           	
  5480  0EA7                     l6735:	
  5481                           	line	112
  5482                           ;robot.c: 111: }
  5483                           ;robot.c: 112: ser_putch(157);
  5484  0EA7  309D               	movlw	(09Dh)
  5485  0EA8  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5486                           	line	114
  5487                           ;robot.c: 114: ser_putch(turnhighByte);
  5488  0EAD  1683               	bsf	status, 5	;RP0=1, select bank1
  5489  0EAE  1303               	bcf	status, 6	;RP1=0, select bank1
  5490  0EAF  085E               	movf	(_turnhighByte)^080h,w
  5491  0EB0  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5492                           	line	116
  5493                           ;robot.c: 116: ser_putch(turnlowByte);
  5494  0EB5  1683               	bsf	status, 5	;RP0=1, select bank1
  5495  0EB6  1303               	bcf	status, 6	;RP1=0, select bank1
  5496  0EB7  085F               	movf	(_turnlowByte)^080h,w
  5497  0EB8  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5498                           	line	118
  5499                           ;robot.c: 118: ser_putch(137);
  5500  0EBD  3089               	movlw	(089h)
  5501  0EBE  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5502                           	line	120
  5503                           ;robot.c: 120: ser_putch(0);
  5504  0EC3  3000               	movlw	(0)
  5505  0EC4  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5506                           	line	122
  5507                           ;robot.c: 122: ser_putch(0);
  5508  0EC9  3000               	movlw	(0)
  5509  0ECA  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5510                           	line	124
  5511                           ;robot.c: 124: ser_putch(0);
  5512  0ECF  3000               	movlw	(0)
  5513  0ED0  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5514                           	line	126
  5515                           ;robot.c: 126: ser_putch(0);
  5516  0ED5  3000               	movlw	(0)
  5517  0ED6  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5518                           	line	127
  5519                           	
  5520  0EDB                     l6736:	
  5521  0EDB  0008               	return
  5522                           	opt stack 0
  5523                           GLOBAL	__end_of_robotTurn
  5524  0EDC                     	__end_of_robotTurn:
  5525 ;; =============== function _robotTurn ends ============
  5526                           
  5527                           	signat	_robotTurn,4216
  5528                           	global	_robotMove
  5529                           psect	text1226,local,class=CODE,delta=2
  5530                           global __ptext1226
  5531  0EDC                     __ptext1226:
  5532                           
  5533 ;; *************** function _robotMove *****************
  5534 ;; Defined at:
  5535 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  distance        2    2[BANK0 ] int 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;		None               void
  5542 ;; Registers used:
  5543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5549 ;;      Params:         0       2       0       0       0
  5550 ;;      Locals:         0       0       0       0       0
  5551 ;;      Temps:          0       1       0       0       0
  5552 ;;      Totals:         0       3       0       0       0
  5553 ;;Total ram usage:        3 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    4
  5556 ;; This function calls:
  5557 ;;		_ser_putch
  5558 ;; This function is called by:
  5559 ;;		_main
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           psect	text1226
  5563                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5564                           	line	33
  5565                           	global	__size_of_robotMove
  5566  008C                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  5567                           	
  5568  0EDC                     _robotMove:	
  5569                           	opt	stack 3
  5570                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5571                           	line	34
  5572                           	
  5573  0EDC                     l10685:	
  5574                           ;robot.c: 34: distTravelled =0;
  5575  0EDC  1683               	bsf	status, 5	;RP0=1, select bank1
  5576  0EDD  1303               	bcf	status, 6	;RP1=0, select bank1
  5577  0EDE  01EC               	clrf	(_distTravelled)^080h	;volatile
  5578  0EDF  01ED               	clrf	(_distTravelled+1)^080h	;volatile
  5579                           	line	35
  5580                           	
  5581  0EE0                     l10687:	
  5582                           ;robot.c: 35: lowByte = (unsigned char) (distance) ;
  5583  0EE0  1283               	bcf	status, 5	;RP0=0, select bank0
  5584  0EE1  1303               	bcf	status, 6	;RP1=0, select bank0
  5585  0EE2  0822               	movf	(robotMove@distance),w
  5586  0EE3  00A4               	movwf	(??_robotMove+0)+0
  5587  0EE4  0824               	movf	(??_robotMove+0)+0,w
  5588  0EE5  1683               	bsf	status, 5	;RP0=1, select bank1
  5589  0EE6  1303               	bcf	status, 6	;RP1=0, select bank1
  5590  0EE7  00D9               	movwf	(_lowByte)^080h
  5591                           	line	36
  5592                           ;robot.c: 36: highByte = (unsigned char) (distance >> 8);
  5593  0EE8  1283               	bcf	status, 5	;RP0=0, select bank0
  5594  0EE9  1303               	bcf	status, 6	;RP1=0, select bank0
  5595  0EEA  0823               	movf	(robotMove@distance+1),w
  5596  0EEB  00A4               	movwf	(??_robotMove+0)+0
  5597  0EEC  0824               	movf	(??_robotMove+0)+0,w
  5598  0EED  1683               	bsf	status, 5	;RP0=1, select bank1
  5599  0EEE  1303               	bcf	status, 6	;RP1=0, select bank1
  5600  0EEF  00D8               	movwf	(_highByte)^080h
  5601                           	line	37
  5602                           	
  5603  0EF0                     l10689:	
  5604                           ;robot.c: 37: if (distance >= 0)
  5605  0EF0  1283               	bcf	status, 5	;RP0=0, select bank0
  5606  0EF1  1303               	bcf	status, 6	;RP1=0, select bank0
  5607  0EF2  1BA3               	btfsc	(robotMove@distance+1),7
  5608  0EF3  2EF5               	goto	u4211
  5609  0EF4  2EF6               	goto	u4210
  5610  0EF5                     u4211:
  5611  0EF5  2F15               	goto	l10693
  5612  0EF6                     u4210:
  5613                           	line	39
  5614                           	
  5615  0EF6                     l10691:	
  5616                           ;robot.c: 38: {
  5617                           ;robot.c: 39: ser_putch(137);
  5618  0EF6  3089               	movlw	(089h)
  5619  0EF7  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5620                           	line	41
  5621                           ;robot.c: 41: ser_putch(0);
  5622  0EFC  3000               	movlw	(0)
  5623  0EFD  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5624                           	line	43
  5625                           ;robot.c: 43: ser_putch(200);
  5626  0F02  30C8               	movlw	(0C8h)
  5627  0F03  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5628                           	line	45
  5629                           ;robot.c: 45: ser_putch(128);
  5630  0F08  3080               	movlw	(080h)
  5631  0F09  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5632                           	line	47
  5633                           ;robot.c: 47: ser_putch(0);
  5634  0F0E  3000               	movlw	(0)
  5635  0F0F  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5636                           	line	48
  5637                           ;robot.c: 48: }
  5638  0F14  2F33               	goto	l6730
  5639                           	line	49
  5640                           	
  5641  0F15                     l6729:	
  5642                           	line	51
  5643                           	
  5644  0F15                     l10693:	
  5645                           ;robot.c: 49: else
  5646                           ;robot.c: 50: {
  5647                           ;robot.c: 51: ser_putch(137);
  5648  0F15  3089               	movlw	(089h)
  5649  0F16  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5650                           	line	53
  5651                           ;robot.c: 53: ser_putch(0xff);
  5652  0F1B  30FF               	movlw	(0FFh)
  5653  0F1C  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5654                           	line	55
  5655                           ;robot.c: 55: ser_putch(0x38);
  5656  0F21  3038               	movlw	(038h)
  5657  0F22  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5658                           	line	57
  5659                           ;robot.c: 57: ser_putch(128);
  5660  0F27  3080               	movlw	(080h)
  5661  0F28  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5662                           	line	59
  5663                           ;robot.c: 59: ser_putch(0);
  5664  0F2D  3000               	movlw	(0)
  5665  0F2E  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5666                           	line	60
  5667                           	
  5668  0F33                     l6730:	
  5669                           	line	64
  5670                           ;robot.c: 60: }
  5671                           ;robot.c: 64: ser_putch(156);
  5672  0F33  309C               	movlw	(09Ch)
  5673  0F34  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5674                           	line	66
  5675                           ;robot.c: 66: ser_putch(highByte);
  5676  0F39  1683               	bsf	status, 5	;RP0=1, select bank1
  5677  0F3A  1303               	bcf	status, 6	;RP1=0, select bank1
  5678  0F3B  0858               	movf	(_highByte)^080h,w
  5679  0F3C  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5680                           	line	68
  5681                           ;robot.c: 68: ser_putch(lowByte);
  5682  0F41  1683               	bsf	status, 5	;RP0=1, select bank1
  5683  0F42  1303               	bcf	status, 6	;RP1=0, select bank1
  5684  0F43  0859               	movf	(_lowByte)^080h,w
  5685  0F44  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5686                           	line	70
  5687                           ;robot.c: 70: ser_putch(137);
  5688  0F49  3089               	movlw	(089h)
  5689  0F4A  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5690                           	line	72
  5691                           ;robot.c: 72: ser_putch(0);
  5692  0F4F  3000               	movlw	(0)
  5693  0F50  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5694                           	line	74
  5695                           ;robot.c: 74: ser_putch(0);
  5696  0F55  3000               	movlw	(0)
  5697  0F56  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5698                           	line	76
  5699                           ;robot.c: 76: ser_putch(0);
  5700  0F5B  3000               	movlw	(0)
  5701  0F5C  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5702                           	line	78
  5703                           ;robot.c: 78: ser_putch(0);
  5704  0F61  3000               	movlw	(0)
  5705  0F62  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5706                           	line	80
  5707                           	
  5708  0F67                     l6731:	
  5709  0F67  0008               	return
  5710                           	opt stack 0
  5711                           GLOBAL	__end_of_robotMove
  5712  0F68                     	__end_of_robotMove:
  5713 ;; =============== function _robotMove ends ============
  5714                           
  5715                           	signat	_robotMove,4216
  5716                           	global	_rotate
  5717                           psect	text1227,local,class=CODE,delta=2
  5718                           global __ptext1227
  5719  0D1D                     __ptext1227:
  5720                           
  5721 ;; *************** function _rotate *****************
  5722 ;; Defined at:
  5723 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  numsteps        2    3[BANK0 ] unsigned int 
  5726 ;;  direction       1    5[BANK0 ] unsigned char 
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  i               2    8[BANK0 ] unsigned int 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;		None               void
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0, pclath, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5738 ;;      Params:         0       3       0       0       0
  5739 ;;      Locals:         0       2       0       0       0
  5740 ;;      Temps:          0       2       0       0       0
  5741 ;;      Totals:         0       7       0       0       0
  5742 ;;Total ram usage:        7 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    4
  5745 ;; This function calls:
  5746 ;;		_spi_transfer
  5747 ;; This function is called by:
  5748 ;;		_calibrateIR
  5749 ;;		_scan360
  5750 ;;		_main
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           psect	text1227
  5754                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5755                           	line	48
  5756                           	global	__size_of_rotate
  5757  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  5758                           	
  5759  0D1D                     _rotate:	
  5760                           	opt	stack 3
  5761                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  5762                           	line	50
  5763                           	
  5764  0D1D                     l10657:	
  5765                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  5766  0D1D  1283               	bcf	status, 5	;RP0=0, select bank0
  5767  0D1E  1303               	bcf	status, 6	;RP1=0, select bank0
  5768  0D1F  1407               	bsf	(56/8),(56)&7
  5769  0D20  1487               	bsf	(57/8),(57)&7
  5770                           	line	51
  5771                           	
  5772  0D21                     l10659:	
  5773                           ;steppermotor.c: 51: if (direction == 0)
  5774  0D21  08A5               	movf	(rotate@direction),f
  5775  0D22  1D03               	skipz
  5776  0D23  2D25               	goto	u4191
  5777  0D24  2D26               	goto	u4190
  5778  0D25                     u4191:
  5779  0D25  2D2D               	goto	l10663
  5780  0D26                     u4190:
  5781                           	line	52
  5782                           	
  5783  0D26                     l10661:	
  5784                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  5785  0D26  300F               	movlw	(0Fh)
  5786  0D27  120A  158A  219B   	fcall	_spi_transfer
              120A  158A         
  5787  0D2C  2D34               	goto	l10665
  5788                           	line	53
  5789                           	
  5790  0D2D                     l3698:	
  5791                           	line	54
  5792                           	
  5793  0D2D                     l10663:	
  5794                           ;steppermotor.c: 53: else
  5795                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  5796  0D2D  300D               	movlw	(0Dh)
  5797  0D2E  120A  158A  219B   	fcall	_spi_transfer
              120A  158A         
  5798  0D33  2D34               	goto	l10665
  5799                           	
  5800  0D34                     l3699:	
  5801                           	line	55
  5802                           	
  5803  0D34                     l10665:	
  5804                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  5805  0D34  1283               	bcf	status, 5	;RP0=0, select bank0
  5806  0D35  1303               	bcf	status, 6	;RP1=0, select bank0
  5807  0D36  1007               	bcf	(56/8),(56)&7
  5808                           	
  5809  0D37                     l10667:	
  5810  0D37  1087               	bcf	(57/8),(57)&7
  5811                           	line	56
  5812                           	
  5813  0D38                     l10669:	
  5814                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  5815  0D38  01A8               	clrf	(rotate@i)
  5816  0D39  01A9               	clrf	(rotate@i+1)
  5817  0D3A  2D51               	goto	l3700
  5818                           	line	57
  5819                           	
  5820  0D3B                     l3701:	
  5821                           	line	58
  5822                           ;steppermotor.c: 57: {
  5823                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  5824  0D3B  1507               	bsf	(58/8),(58)&7
  5825  0D3C  0000               	nop
  5826  0D3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5827  0D3E  1303               	bcf	status, 6	;RP1=0, select bank0
  5828  0D3F  1107               	bcf	(58/8),(58)&7
  5829                           	line	59
  5830                           	
  5831  0D40                     l10671:	
  5832                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  5833                           	opt asmopt_off
  5834  0D40  3062               movlw	98
  5835  0D41  00A7               movwf	((??_rotate+0)+0+1),f
  5836  0D42  3065               	movlw	101
  5837  0D43  00A6               movwf	((??_rotate+0)+0),f
  5838  0D44                     u5017:
  5839  0D44  0BA6               	decfsz	((??_rotate+0)+0),f
  5840  0D45  2D44               	goto	u5017
  5841  0D46  0BA7               	decfsz	((??_rotate+0)+0+1),f
  5842  0D47  2D44               	goto	u5017
  5843  0D48  2D49               	nop2
  5844                           opt asmopt_on
  5845                           
  5846                           	line	56
  5847  0D49  3001               	movlw	low(01h)
  5848  0D4A  1283               	bcf	status, 5	;RP0=0, select bank0
  5849  0D4B  1303               	bcf	status, 6	;RP1=0, select bank0
  5850  0D4C  07A8               	addwf	(rotate@i),f
  5851  0D4D  1803               	skipnc
  5852  0D4E  0AA9               	incf	(rotate@i+1),f
  5853  0D4F  3000               	movlw	high(01h)
  5854  0D50  07A9               	addwf	(rotate@i+1),f
  5855                           	
  5856  0D51                     l3700:	
  5857  0D51  0824               	movf	(rotate@numsteps+1),w
  5858  0D52  0229               	subwf	(rotate@i+1),w
  5859  0D53  1D03               	skipz
  5860  0D54  2D57               	goto	u4205
  5861  0D55  0823               	movf	(rotate@numsteps),w
  5862  0D56  0228               	subwf	(rotate@i),w
  5863  0D57                     u4205:
  5864  0D57  1C03               	skipc
  5865  0D58  2D5A               	goto	u4201
  5866  0D59  2D5B               	goto	u4200
  5867  0D5A                     u4201:
  5868  0D5A  2D3B               	goto	l3701
  5869  0D5B                     u4200:
  5870                           	
  5871  0D5B                     l3702:	
  5872                           	line	61
  5873                           ;steppermotor.c: 60: }
  5874                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  5875  0D5B  1407               	bsf	(56/8),(56)&7
  5876  0D5C  1487               	bsf	(57/8),(57)&7
  5877                           	line	62
  5878                           	
  5879  0D5D                     l10673:	
  5880                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  5881  0D5D  3000               	movlw	(0)
  5882  0D5E  120A  158A  219B   	fcall	_spi_transfer
              120A  158A         
  5883                           	line	63
  5884                           	
  5885  0D63                     l10675:	
  5886                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  5887  0D63  1283               	bcf	status, 5	;RP0=0, select bank0
  5888  0D64  1303               	bcf	status, 6	;RP1=0, select bank0
  5889  0D65  1007               	bcf	(56/8),(56)&7
  5890                           	
  5891  0D66                     l10677:	
  5892  0D66  1087               	bcf	(57/8),(57)&7
  5893                           	line	64
  5894                           	
  5895  0D67                     l10679:	
  5896                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  5897  0D67  1507               	bsf	(58/8),(58)&7
  5898                           	
  5899  0D68                     l10681:	
  5900  0D68  0000               	nop
  5901                           	
  5902  0D69                     l10683:	
  5903  0D69  1283               	bcf	status, 5	;RP0=0, select bank0
  5904  0D6A  1303               	bcf	status, 6	;RP1=0, select bank0
  5905  0D6B  1107               	bcf	(58/8),(58)&7
  5906                           	line	65
  5907                           	
  5908  0D6C                     l3703:	
  5909  0D6C  0008               	return
  5910                           	opt stack 0
  5911                           GLOBAL	__end_of_rotate
  5912  0D6D                     	__end_of_rotate:
  5913 ;; =============== function _rotate ends ============
  5914                           
  5915                           	signat	_rotate,8312
  5916                           	global	_robo_init
  5917                           psect	text1228,local,class=CODE,delta=2
  5918                           global __ptext1228
  5919  0947                     __ptext1228:
  5920                           
  5921 ;; *************** function _robo_init *****************
  5922 ;; Defined at:
  5923 ;;		line 9 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;		None
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;		None
  5928 ;; Return value:  Size  Location     Type
  5929 ;;		None               void
  5930 ;; Registers used:
  5931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5937 ;;      Params:         0       0       0       0       0
  5938 ;;      Locals:         0       0       0       0       0
  5939 ;;      Temps:          0       0       0       0       0
  5940 ;;      Totals:         0       0       0       0       0
  5941 ;;Total ram usage:        0 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; Hardware stack levels required when called:    4
  5944 ;; This function calls:
  5945 ;;		_ser_putch
  5946 ;; This function is called by:
  5947 ;;		_init
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           psect	text1228
  5951                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5952                           	line	9
  5953                           	global	__size_of_robo_init
  5954  000D                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  5955                           	
  5956  0947                     _robo_init:	
  5957                           	opt	stack 2
  5958                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5959                           	line	10
  5960                           	
  5961  0947                     l10655:	
  5962                           ;robot.c: 10: ser_putch(128);
  5963  0947  3080               	movlw	(080h)
  5964  0948  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5965                           	line	11
  5966                           ;robot.c: 11: ser_putch(132);
  5967  094D  3084               	movlw	(084h)
  5968  094E  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5969                           	line	12
  5970                           	
  5971  0953                     l6720:	
  5972  0953  0008               	return
  5973                           	opt stack 0
  5974                           GLOBAL	__end_of_robo_init
  5975  0954                     	__end_of_robo_init:
  5976 ;; =============== function _robo_init ends ============
  5977                           
  5978                           	signat	_robo_init,88
  5979                           	global	_lcd_write_data
  5980                           psect	text1229,local,class=CODE,delta=2
  5981                           global __ptext1229
  5982  0975                     __ptext1229:
  5983                           
  5984 ;; *************** function _lcd_write_data *****************
  5985 ;; Defined at:
  5986 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  databyte        1    wreg     unsigned char 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  databyte        1    2[BANK0 ] unsigned char 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;		None               void
  5993 ;; Registers used:
  5994 ;;		wreg
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6000 ;;      Params:         0       0       0       0       0
  6001 ;;      Locals:         0       1       0       0       0
  6002 ;;      Temps:          0       2       0       0       0
  6003 ;;      Totals:         0       3       0       0       0
  6004 ;;Total ram usage:        3 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    3
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_lcd_write_string
  6011 ;;		_lcd_write_2_digit_bcd
  6012 ;;		_lcd_write_3_digit_bcd
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           psect	text1229
  6016                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6017                           	line	30
  6018                           	global	__size_of_lcd_write_data
  6019  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  6020                           	
  6021  0975                     _lcd_write_data:	
  6022                           	opt	stack 1
  6023                           ; Regs used in _lcd_write_data: [wreg]
  6024                           ;lcd_write_data@databyte stored from wreg
  6025  0975  1283               	bcf	status, 5	;RP0=0, select bank0
  6026  0976  1303               	bcf	status, 6	;RP1=0, select bank0
  6027  0977  00A2               	movwf	(lcd_write_data@databyte)
  6028                           	line	31
  6029                           	
  6030  0978                     l10647:	
  6031                           ;lcd.c: 31: RE2 = 0;
  6032  0978  1109               	bcf	(74/8),(74)&7
  6033                           	line	32
  6034                           ;lcd.c: 32: RE1 = 0;
  6035  0979  1089               	bcf	(73/8),(73)&7
  6036                           	line	33
  6037                           ;lcd.c: 33: RE0 = 1;
  6038  097A  1409               	bsf	(72/8),(72)&7
  6039                           	line	34
  6040                           	
  6041  097B                     l10649:	
  6042                           ;lcd.c: 34: PORTD = databyte;
  6043  097B  0822               	movf	(lcd_write_data@databyte),w
  6044  097C  0088               	movwf	(8)	;volatile
  6045                           	line	35
  6046                           	
  6047  097D                     l10651:	
  6048                           ;lcd.c: 35: RE2 = 1;
  6049  097D  1509               	bsf	(74/8),(74)&7
  6050                           	line	36
  6051                           	
  6052  097E                     l10653:	
  6053                           ;lcd.c: 36: RE2 = 0;
  6054  097E  1109               	bcf	(74/8),(74)&7
  6055                           	line	37
  6056                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  6057                           	opt asmopt_off
  6058  097F  3007               movlw	7
  6059  0980  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  6060  0981  307D               	movlw	125
  6061  0982  00A0               movwf	((??_lcd_write_data+0)+0),f
  6062  0983                     u5027:
  6063  0983  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  6064  0984  2983               	goto	u5027
  6065  0985  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  6066  0986  2983               	goto	u5027
  6067                           opt asmopt_on
  6068                           
  6069                           	line	38
  6070                           	
  6071  0987                     l1402:	
  6072  0987  0008               	return
  6073                           	opt stack 0
  6074                           GLOBAL	__end_of_lcd_write_data
  6075  0988                     	__end_of_lcd_write_data:
  6076 ;; =============== function _lcd_write_data ends ============
  6077                           
  6078                           	signat	_lcd_write_data,4216
  6079                           	global	_lcd_write_control
  6080                           psect	text1230,local,class=CODE,delta=2
  6081                           global __ptext1230
  6082  09AF                     __ptext1230:
  6083                           
  6084 ;; *************** function _lcd_write_control *****************
  6085 ;; Defined at:
  6086 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  databyte        1    wreg     unsigned char 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  databyte        1    2[BANK0 ] unsigned char 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;		None               void
  6093 ;; Registers used:
  6094 ;;		wreg
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6100 ;;      Params:         0       0       0       0       0
  6101 ;;      Locals:         0       1       0       0       0
  6102 ;;      Temps:          0       2       0       0       0
  6103 ;;      Totals:         0       3       0       0       0
  6104 ;;Total ram usage:        3 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    3
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_lcd_set_cursor
  6111 ;;		_lcd_init
  6112 ;;		_UpdateDisplay
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           psect	text1230
  6116                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6117                           	line	18
  6118                           	global	__size_of_lcd_write_control
  6119  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  6120                           	
  6121  09AF                     _lcd_write_control:	
  6122                           	opt	stack 1
  6123                           ; Regs used in _lcd_write_control: [wreg]
  6124                           ;lcd_write_control@databyte stored from wreg
  6125  09AF  1283               	bcf	status, 5	;RP0=0, select bank0
  6126  09B0  1303               	bcf	status, 6	;RP1=0, select bank0
  6127  09B1  00A2               	movwf	(lcd_write_control@databyte)
  6128                           	line	19
  6129                           	
  6130  09B2                     l10639:	
  6131                           ;lcd.c: 19: RE2 = 0;
  6132  09B2  1109               	bcf	(74/8),(74)&7
  6133                           	line	20
  6134                           ;lcd.c: 20: RE1 = 0;
  6135  09B3  1089               	bcf	(73/8),(73)&7
  6136                           	line	21
  6137                           ;lcd.c: 21: RE0 = 0;
  6138  09B4  1009               	bcf	(72/8),(72)&7
  6139                           	line	22
  6140                           	
  6141  09B5                     l10641:	
  6142                           ;lcd.c: 22: PORTD = databyte;
  6143  09B5  0822               	movf	(lcd_write_control@databyte),w
  6144  09B6  0088               	movwf	(8)	;volatile
  6145                           	line	23
  6146                           	
  6147  09B7                     l10643:	
  6148                           ;lcd.c: 23: RE2 = 1;
  6149  09B7  1509               	bsf	(74/8),(74)&7
  6150                           	line	24
  6151                           	
  6152  09B8                     l10645:	
  6153                           ;lcd.c: 24: RE2 = 0;
  6154  09B8  1109               	bcf	(74/8),(74)&7
  6155                           	line	25
  6156                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  6157                           	opt asmopt_off
  6158  09B9  300D               movlw	13
  6159  09BA  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  6160  09BB  30FB               	movlw	251
  6161  09BC  00A0               movwf	((??_lcd_write_control+0)+0),f
  6162  09BD                     u5037:
  6163  09BD  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  6164  09BE  29BD               	goto	u5037
  6165  09BF  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  6166  09C0  29BD               	goto	u5037
  6167  09C1  29C2               	nop2
  6168                           opt asmopt_on
  6169                           
  6170                           	line	26
  6171                           	
  6172  09C2                     l1399:	
  6173  09C2  0008               	return
  6174                           	opt stack 0
  6175                           GLOBAL	__end_of_lcd_write_control
  6176  09C3                     	__end_of_lcd_write_control:
  6177 ;; =============== function _lcd_write_control ends ============
  6178                           
  6179                           	signat	_lcd_write_control,4216
  6180                           	global	_init_adc
  6181                           psect	text1231,local,class=CODE,delta=2
  6182                           global __ptext1231
  6183  09C3                     __ptext1231:
  6184                           
  6185 ;; *************** function _init_adc *****************
  6186 ;; Defined at:
  6187 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;		None
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;		None               void
  6194 ;; Registers used:
  6195 ;;		wreg, status,2
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6201 ;;      Params:         0       0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0
  6203 ;;      Temps:          0       1       0       0       0
  6204 ;;      Totals:         0       1       0       0       0
  6205 ;;Total ram usage:        1 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    3
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_init
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           psect	text1231
  6215                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6216                           	line	46
  6217                           	global	__size_of_init_adc
  6218  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  6219                           	
  6220  09C3                     _init_adc:	
  6221                           	opt	stack 3
  6222                           ; Regs used in _init_adc: [wreg+status,2]
  6223                           	line	48
  6224                           	
  6225  09C3                     l10629:	
  6226                           ;adc.c: 48: PORTA = 0;
  6227  09C3  1283               	bcf	status, 5	;RP0=0, select bank0
  6228  09C4  1303               	bcf	status, 6	;RP1=0, select bank0
  6229  09C5  0185               	clrf	(5)	;volatile
  6230                           	line	49
  6231                           	
  6232  09C6                     l10631:	
  6233                           ;adc.c: 49: TRISA = 0b00111111;
  6234  09C6  303F               	movlw	(03Fh)
  6235  09C7  1683               	bsf	status, 5	;RP0=1, select bank1
  6236  09C8  1303               	bcf	status, 6	;RP1=0, select bank1
  6237  09C9  0085               	movwf	(133)^080h	;volatile
  6238                           	line	52
  6239                           	
  6240  09CA                     l10633:	
  6241                           ;adc.c: 52: ADCON0 = 0b10100001;
  6242  09CA  30A1               	movlw	(0A1h)
  6243  09CB  1283               	bcf	status, 5	;RP0=0, select bank0
  6244  09CC  1303               	bcf	status, 6	;RP1=0, select bank0
  6245  09CD  009F               	movwf	(31)	;volatile
  6246                           	line	53
  6247                           	
  6248  09CE                     l10635:	
  6249                           ;adc.c: 53: ADCON1 = 0b0000010;
  6250  09CE  3002               	movlw	(02h)
  6251  09CF  1683               	bsf	status, 5	;RP0=1, select bank1
  6252  09D0  1303               	bcf	status, 6	;RP1=0, select bank1
  6253  09D1  009F               	movwf	(159)^080h	;volatile
  6254                           	line	55
  6255                           	
  6256  09D2                     l10637:	
  6257                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6258                           	opt asmopt_off
  6259  09D2  3053               movlw	83
  6260  09D3  1283               	bcf	status, 5	;RP0=0, select bank0
  6261  09D4  1303               	bcf	status, 6	;RP1=0, select bank0
  6262  09D5  00A0               movwf	(??_init_adc+0)+0,f
  6263  09D6                     u5047:
  6264  09D6  0BA0               decfsz	(??_init_adc+0)+0,f
  6265  09D7  29D6               	goto	u5047
  6266                           opt asmopt_on
  6267                           
  6268                           	line	57
  6269                           	
  6270  09D8                     l700:	
  6271  09D8  0008               	return
  6272                           	opt stack 0
  6273                           GLOBAL	__end_of_init_adc
  6274  09D9                     	__end_of_init_adc:
  6275 ;; =============== function _init_adc ends ============
  6276                           
  6277                           	signat	_init_adc,88
  6278                           	global	_adc_read_channel
  6279                           psect	text1232,local,class=CODE,delta=2
  6280                           global __ptext1232
  6281  0B78                     __ptext1232:
  6282                           
  6283 ;; *************** function _adc_read_channel *****************
  6284 ;; Defined at:
  6285 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  channel         1    wreg     unsigned char 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  channel         1    7[BANK0 ] unsigned char 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      unsigned char 
  6292 ;; Registers used:
  6293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6299 ;;      Params:         0       0       0       0       0
  6300 ;;      Locals:         0       1       0       0       0
  6301 ;;      Temps:          0       1       0       0       0
  6302 ;;      Totals:         0       2       0       0       0
  6303 ;;Total ram usage:        2 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    4
  6306 ;; This function calls:
  6307 ;;		_adc_read
  6308 ;; This function is called by:
  6309 ;;		_readDistance
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           psect	text1232
  6313                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6314                           	line	5
  6315                           	global	__size_of_adc_read_channel
  6316  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  6317                           	
  6318  0B78                     _adc_read_channel:	
  6319                           	opt	stack 0
  6320                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6321                           ;adc_read_channel@channel stored from wreg
  6322  0B78  1283               	bcf	status, 5	;RP0=0, select bank0
  6323  0B79  1303               	bcf	status, 6	;RP1=0, select bank0
  6324  0B7A  00A7               	movwf	(adc_read_channel@channel)
  6325                           	line	6
  6326                           	
  6327  0B7B                     l10613:	
  6328                           ;adc.c: 6: switch(channel)
  6329  0B7B  2B94               	goto	l10621
  6330                           	line	8
  6331                           ;adc.c: 7: {
  6332                           ;adc.c: 8: case 0:
  6333                           	
  6334  0B7C                     l690:	
  6335                           	line	9
  6336                           ;adc.c: 9: CHS0 = 0;
  6337  0B7C  119F               	bcf	(251/8),(251)&7
  6338                           	line	10
  6339                           ;adc.c: 10: CHS1 = 0;
  6340  0B7D  121F               	bcf	(252/8),(252)&7
  6341                           	line	11
  6342                           ;adc.c: 11: CHS2 = 0;
  6343  0B7E  129F               	bcf	(253/8),(253)&7
  6344                           	line	12
  6345                           ;adc.c: 12: break;
  6346  0B7F  2BA5               	goto	l10623
  6347                           	line	13
  6348                           ;adc.c: 13: case 1:
  6349                           	
  6350  0B80                     l692:	
  6351                           	line	14
  6352                           ;adc.c: 14: CHS0 = 1;
  6353  0B80  159F               	bsf	(251/8),(251)&7
  6354                           	line	15
  6355                           ;adc.c: 15: CHS1 = 0;
  6356  0B81  121F               	bcf	(252/8),(252)&7
  6357                           	line	16
  6358                           ;adc.c: 16: CHS2 = 0;
  6359  0B82  129F               	bcf	(253/8),(253)&7
  6360                           	line	17
  6361                           ;adc.c: 17: break;
  6362  0B83  2BA5               	goto	l10623
  6363                           	line	18
  6364                           ;adc.c: 18: case 2:
  6365                           	
  6366  0B84                     l693:	
  6367                           	line	19
  6368                           ;adc.c: 19: CHS0 = 0;
  6369  0B84  119F               	bcf	(251/8),(251)&7
  6370                           	line	20
  6371                           ;adc.c: 20: CHS1 = 1;
  6372  0B85  161F               	bsf	(252/8),(252)&7
  6373                           	line	21
  6374                           ;adc.c: 21: CHS2 = 0;
  6375  0B86  129F               	bcf	(253/8),(253)&7
  6376                           	line	22
  6377                           ;adc.c: 22: break;
  6378  0B87  2BA5               	goto	l10623
  6379                           	line	23
  6380                           ;adc.c: 23: case 3:
  6381                           	
  6382  0B88                     l694:	
  6383                           	line	24
  6384                           ;adc.c: 24: CHS0 = 1;
  6385  0B88  159F               	bsf	(251/8),(251)&7
  6386                           	line	25
  6387                           ;adc.c: 25: CHS1 = 1;
  6388  0B89  161F               	bsf	(252/8),(252)&7
  6389                           	line	26
  6390                           ;adc.c: 26: CHS2 = 0;
  6391  0B8A  129F               	bcf	(253/8),(253)&7
  6392                           	line	27
  6393                           ;adc.c: 27: break;
  6394  0B8B  2BA5               	goto	l10623
  6395                           	line	28
  6396                           ;adc.c: 28: case 4:
  6397                           	
  6398  0B8C                     l695:	
  6399                           	line	29
  6400                           ;adc.c: 29: CHS0 = 0;
  6401  0B8C  119F               	bcf	(251/8),(251)&7
  6402                           	line	30
  6403                           ;adc.c: 30: CHS1 = 0;
  6404  0B8D  121F               	bcf	(252/8),(252)&7
  6405                           	line	31
  6406                           ;adc.c: 31: CHS2 = 1;
  6407  0B8E  169F               	bsf	(253/8),(253)&7
  6408                           	line	32
  6409                           ;adc.c: 32: break;
  6410  0B8F  2BA5               	goto	l10623
  6411                           	line	35
  6412                           ;adc.c: 35: default:
  6413                           	
  6414  0B90                     l696:	
  6415                           	line	36
  6416                           	
  6417  0B90                     l10615:	
  6418                           ;adc.c: 36: return 0;
  6419  0B90  3000               	movlw	(0)
  6420  0B91  2BB2               	goto	l697
  6421                           	
  6422  0B92                     l10617:	
  6423  0B92  2BB2               	goto	l697
  6424                           	line	37
  6425                           	
  6426  0B93                     l10619:	
  6427                           ;adc.c: 37: }
  6428  0B93  2BA5               	goto	l10623
  6429                           	line	6
  6430                           	
  6431  0B94                     l689:	
  6432                           	
  6433  0B94                     l10621:	
  6434  0B94  0827               	movf	(adc_read_channel@channel),w
  6435                           	; Switch size 1, requested type "space"
  6436                           ; Number of cases is 5, Range of values is 0 to 4
  6437                           ; switch strategies available:
  6438                           ; Name         Instructions Cycles
  6439                           ; simple_byte           16     9 (average)
  6440                           ; direct_byte           23     8 (fixed)
  6441                           ; jumptable            260     6 (fixed)
  6442                           ; rangetable             9     6 (fixed)
  6443                           ; spacedrange           16     9 (fixed)
  6444                           ; locatedrange           5     3 (fixed)
  6445                           ;	Chosen strategy is simple_byte
  6446                           
  6447                           	opt asmopt_off
  6448  0B95  3A00               	xorlw	0^0	; case 0
  6449  0B96  1903               	skipnz
  6450  0B97  2B7C               	goto	l690
  6451  0B98  3A01               	xorlw	1^0	; case 1
  6452  0B99  1903               	skipnz
  6453  0B9A  2B80               	goto	l692
  6454  0B9B  3A03               	xorlw	2^1	; case 2
  6455  0B9C  1903               	skipnz
  6456  0B9D  2B84               	goto	l693
  6457  0B9E  3A01               	xorlw	3^2	; case 3
  6458  0B9F  1903               	skipnz
  6459  0BA0  2B88               	goto	l694
  6460  0BA1  3A07               	xorlw	4^3	; case 4
  6461  0BA2  1903               	skipnz
  6462  0BA3  2B8C               	goto	l695
  6463  0BA4  2B90               	goto	l10615
  6464                           	opt asmopt_on
  6465                           
  6466                           	line	37
  6467                           	
  6468  0BA5                     l691:	
  6469                           	line	39
  6470                           	
  6471  0BA5                     l10623:	
  6472                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6473                           	opt asmopt_off
  6474  0BA5  3053               movlw	83
  6475  0BA6  00A6               movwf	(??_adc_read_channel+0)+0,f
  6476  0BA7                     u5057:
  6477  0BA7  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  6478  0BA8  2BA7               	goto	u5057
  6479                           opt asmopt_on
  6480                           
  6481                           	line	41
  6482                           	
  6483  0BA9                     l10625:	
  6484                           ;adc.c: 41: return adc_read();
  6485  0BA9  120A  158A  2210   	fcall	_adc_read
              120A  158A         
  6486  0BAE  1283               	bcf	status, 5	;RP0=0, select bank0
  6487  0BAF  1303               	bcf	status, 6	;RP1=0, select bank0
  6488  0BB0  0820               	movf	(0+(?_adc_read)),w
  6489  0BB1  2BB2               	goto	l697
  6490                           	
  6491  0BB2                     l10627:	
  6492                           	line	43
  6493                           	
  6494  0BB2                     l697:	
  6495  0BB2  0008               	return
  6496                           	opt stack 0
  6497                           GLOBAL	__end_of_adc_read_channel
  6498  0BB3                     	__end_of_adc_read_channel:
  6499 ;; =============== function _adc_read_channel ends ============
  6500                           
  6501                           	signat	_adc_read_channel,4217
  6502                           	global	___awmod
  6503                           psect	text1233,local,class=CODE,delta=2
  6504                           global __ptext1233
  6505  0696                     __ptext1233:
  6506                           
  6507 ;; *************** function ___awmod *****************
  6508 ;; Defined at:
  6509 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  divisor         2    0[BANK0 ] int 
  6512 ;;  dividend        2    2[BANK0 ] int 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  sign            1    6[BANK0 ] unsigned char 
  6515 ;;  counter         1    5[BANK0 ] unsigned char 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2    0[BANK0 ] int 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2, status,0
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6525 ;;      Params:         0       4       0       0       0
  6526 ;;      Locals:         0       2       0       0       0
  6527 ;;      Temps:          0       1       0       0       0
  6528 ;;      Totals:         0       7       0       0       0
  6529 ;;Total ram usage:        7 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    3
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_UpdateDisplay
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           psect	text1233
  6539                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6540                           	line	5
  6541                           	global	__size_of___awmod
  6542  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6543                           	
  6544  0696                     ___awmod:	
  6545                           	opt	stack 2
  6546                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6547                           	line	8
  6548                           	
  6549  0696                     l10557:	
  6550  0696  1283               	bcf	status, 5	;RP0=0, select bank0
  6551  0697  1303               	bcf	status, 6	;RP1=0, select bank0
  6552  0698  01A6               	clrf	(___awmod@sign)
  6553                           	line	9
  6554  0699  1FA3               	btfss	(___awmod@dividend+1),7
  6555  069A  2E9C               	goto	u4041
  6556  069B  2E9D               	goto	u4040
  6557  069C                     u4041:
  6558  069C  2EA6               	goto	l10561
  6559  069D                     u4040:
  6560                           	line	10
  6561                           	
  6562  069D                     l10559:	
  6563  069D  09A2               	comf	(___awmod@dividend),f
  6564  069E  09A3               	comf	(___awmod@dividend+1),f
  6565  069F  0AA2               	incf	(___awmod@dividend),f
  6566  06A0  1903               	skipnz
  6567  06A1  0AA3               	incf	(___awmod@dividend+1),f
  6568                           	line	11
  6569  06A2  01A6               	clrf	(___awmod@sign)
  6570  06A3  1403               	bsf	status,0
  6571  06A4  0DA6               	rlf	(___awmod@sign),f
  6572  06A5  2EA6               	goto	l10561
  6573                           	line	12
  6574                           	
  6575  06A6                     l7655:	
  6576                           	line	13
  6577                           	
  6578  06A6                     l10561:	
  6579  06A6  1FA1               	btfss	(___awmod@divisor+1),7
  6580  06A7  2EA9               	goto	u4051
  6581  06A8  2EAA               	goto	u4050
  6582  06A9                     u4051:
  6583  06A9  2EB0               	goto	l10565
  6584  06AA                     u4050:
  6585                           	line	14
  6586                           	
  6587  06AA                     l10563:	
  6588  06AA  09A0               	comf	(___awmod@divisor),f
  6589  06AB  09A1               	comf	(___awmod@divisor+1),f
  6590  06AC  0AA0               	incf	(___awmod@divisor),f
  6591  06AD  1903               	skipnz
  6592  06AE  0AA1               	incf	(___awmod@divisor+1),f
  6593  06AF  2EB0               	goto	l10565
  6594                           	
  6595  06B0                     l7656:	
  6596                           	line	15
  6597                           	
  6598  06B0                     l10565:	
  6599  06B0  0821               	movf	(___awmod@divisor+1),w
  6600  06B1  0420               	iorwf	(___awmod@divisor),w
  6601  06B2  1903               	skipnz
  6602  06B3  2EB5               	goto	u4061
  6603  06B4  2EB6               	goto	u4060
  6604  06B5                     u4061:
  6605  06B5  2EEC               	goto	l10583
  6606  06B6                     u4060:
  6607                           	line	16
  6608                           	
  6609  06B6                     l10567:	
  6610  06B6  01A5               	clrf	(___awmod@counter)
  6611  06B7  1403               	bsf	status,0
  6612  06B8  0DA5               	rlf	(___awmod@counter),f
  6613                           	line	17
  6614  06B9  2EC6               	goto	l10573
  6615                           	
  6616  06BA                     l7659:	
  6617                           	line	18
  6618                           	
  6619  06BA                     l10569:	
  6620  06BA  3001               	movlw	01h
  6621                           	
  6622  06BB                     u4075:
  6623  06BB  1003               	clrc
  6624  06BC  0DA0               	rlf	(___awmod@divisor),f
  6625  06BD  0DA1               	rlf	(___awmod@divisor+1),f
  6626  06BE  3EFF               	addlw	-1
  6627  06BF  1D03               	skipz
  6628  06C0  2EBB               	goto	u4075
  6629                           	line	19
  6630                           	
  6631  06C1                     l10571:	
  6632  06C1  3001               	movlw	(01h)
  6633  06C2  00A4               	movwf	(??___awmod+0)+0
  6634  06C3  0824               	movf	(??___awmod+0)+0,w
  6635  06C4  07A5               	addwf	(___awmod@counter),f
  6636  06C5  2EC6               	goto	l10573
  6637                           	line	20
  6638                           	
  6639  06C6                     l7658:	
  6640                           	line	17
  6641                           	
  6642  06C6                     l10573:	
  6643  06C6  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  6644  06C7  2EC9               	goto	u4081
  6645  06C8  2ECA               	goto	u4080
  6646  06C9                     u4081:
  6647  06C9  2EBA               	goto	l10569
  6648  06CA                     u4080:
  6649  06CA  2ECC               	goto	l10575
  6650                           	
  6651  06CB                     l7660:	
  6652  06CB  2ECC               	goto	l10575
  6653                           	line	21
  6654                           	
  6655  06CC                     l7661:	
  6656                           	line	22
  6657                           	
  6658  06CC                     l10575:	
  6659  06CC  0821               	movf	(___awmod@divisor+1),w
  6660  06CD  0223               	subwf	(___awmod@dividend+1),w
  6661  06CE  1D03               	skipz
  6662  06CF  2ED2               	goto	u4095
  6663  06D0  0820               	movf	(___awmod@divisor),w
  6664  06D1  0222               	subwf	(___awmod@dividend),w
  6665  06D2                     u4095:
  6666  06D2  1C03               	skipc
  6667  06D3  2ED5               	goto	u4091
  6668  06D4  2ED6               	goto	u4090
  6669  06D5                     u4091:
  6670  06D5  2EDD               	goto	l10579
  6671  06D6                     u4090:
  6672                           	line	23
  6673                           	
  6674  06D6                     l10577:	
  6675  06D6  0820               	movf	(___awmod@divisor),w
  6676  06D7  02A2               	subwf	(___awmod@dividend),f
  6677  06D8  0821               	movf	(___awmod@divisor+1),w
  6678  06D9  1C03               	skipc
  6679  06DA  03A3               	decf	(___awmod@dividend+1),f
  6680  06DB  02A3               	subwf	(___awmod@dividend+1),f
  6681  06DC  2EDD               	goto	l10579
  6682                           	
  6683  06DD                     l7662:	
  6684                           	line	24
  6685                           	
  6686  06DD                     l10579:	
  6687  06DD  3001               	movlw	01h
  6688                           	
  6689  06DE                     u4105:
  6690  06DE  1003               	clrc
  6691  06DF  0CA1               	rrf	(___awmod@divisor+1),f
  6692  06E0  0CA0               	rrf	(___awmod@divisor),f
  6693  06E1  3EFF               	addlw	-1
  6694  06E2  1D03               	skipz
  6695  06E3  2EDE               	goto	u4105
  6696                           	line	25
  6697                           	
  6698  06E4                     l10581:	
  6699  06E4  3001               	movlw	low(01h)
  6700  06E5  02A5               	subwf	(___awmod@counter),f
  6701  06E6  1D03               	btfss	status,2
  6702  06E7  2EE9               	goto	u4111
  6703  06E8  2EEA               	goto	u4110
  6704  06E9                     u4111:
  6705  06E9  2ECC               	goto	l10575
  6706  06EA                     u4110:
  6707  06EA  2EEC               	goto	l10583
  6708                           	
  6709  06EB                     l7663:	
  6710  06EB  2EEC               	goto	l10583
  6711                           	line	26
  6712                           	
  6713  06EC                     l7657:	
  6714                           	line	27
  6715                           	
  6716  06EC                     l10583:	
  6717  06EC  0826               	movf	(___awmod@sign),w
  6718  06ED  1D03               	skipz
  6719  06EE  2EF0               	goto	u4120
  6720  06EF  2EF6               	goto	l10587
  6721  06F0                     u4120:
  6722                           	line	28
  6723                           	
  6724  06F0                     l10585:	
  6725  06F0  09A2               	comf	(___awmod@dividend),f
  6726  06F1  09A3               	comf	(___awmod@dividend+1),f
  6727  06F2  0AA2               	incf	(___awmod@dividend),f
  6728  06F3  1903               	skipnz
  6729  06F4  0AA3               	incf	(___awmod@dividend+1),f
  6730  06F5  2EF6               	goto	l10587
  6731                           	
  6732  06F6                     l7664:	
  6733                           	line	29
  6734                           	
  6735  06F6                     l10587:	
  6736  06F6  0823               	movf	(___awmod@dividend+1),w
  6737  06F7  01A1               	clrf	(?___awmod+1)
  6738  06F8  07A1               	addwf	(?___awmod+1)
  6739  06F9  0822               	movf	(___awmod@dividend),w
  6740  06FA  01A0               	clrf	(?___awmod)
  6741  06FB  07A0               	addwf	(?___awmod)
  6742                           
  6743  06FC  2EFD               	goto	l7665
  6744                           	
  6745  06FD                     l10589:	
  6746                           	line	30
  6747                           	
  6748  06FD                     l7665:	
  6749  06FD  0008               	return
  6750                           	opt stack 0
  6751                           GLOBAL	__end_of___awmod
  6752  06FE                     	__end_of___awmod:
  6753 ;; =============== function ___awmod ends ============
  6754                           
  6755                           	signat	___awmod,8314
  6756                           	global	___lwmod
  6757                           psect	text1234,local,class=CODE,delta=2
  6758                           global __ptext1234
  6759  0BF7                     __ptext1234:
  6760                           
  6761 ;; *************** function ___lwmod *****************
  6762 ;; Defined at:
  6763 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  divisor         2   14[BANK0 ] unsigned int 
  6766 ;;  dividend        2   16[BANK0 ] unsigned int 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  counter         1   19[BANK0 ] unsigned char 
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  2   14[BANK0 ] unsigned int 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6778 ;;      Params:         0       4       0       0       0
  6779 ;;      Locals:         0       1       0       0       0
  6780 ;;      Temps:          0       1       0       0       0
  6781 ;;      Totals:         0       6       0       0       0
  6782 ;;Total ram usage:        6 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    3
  6785 ;; This function calls:
  6786 ;;		Nothing
  6787 ;; This function is called by:
  6788 ;;		_sprintf
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           psect	text1234
  6792                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6793                           	line	5
  6794                           	global	__size_of___lwmod
  6795  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6796                           	
  6797  0BF7                     ___lwmod:	
  6798                           	opt	stack 1
  6799                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6800                           	line	8
  6801                           	
  6802  0BF7                     l10535:	
  6803  0BF7  1283               	bcf	status, 5	;RP0=0, select bank0
  6804  0BF8  1303               	bcf	status, 6	;RP1=0, select bank0
  6805  0BF9  082F               	movf	(___lwmod@divisor+1),w
  6806  0BFA  042E               	iorwf	(___lwmod@divisor),w
  6807  0BFB  1903               	skipnz
  6808  0BFC  2BFE               	goto	u3981
  6809  0BFD  2BFF               	goto	u3980
  6810  0BFE                     u3981:
  6811  0BFE  2C35               	goto	l10553
  6812  0BFF                     u3980:
  6813                           	line	9
  6814                           	
  6815  0BFF                     l10537:	
  6816  0BFF  01B3               	clrf	(___lwmod@counter)
  6817  0C00  1403               	bsf	status,0
  6818  0C01  0DB3               	rlf	(___lwmod@counter),f
  6819                           	line	10
  6820  0C02  2C0F               	goto	l10543
  6821                           	
  6822  0C03                     l7465:	
  6823                           	line	11
  6824                           	
  6825  0C03                     l10539:	
  6826  0C03  3001               	movlw	01h
  6827                           	
  6828  0C04                     u3995:
  6829  0C04  1003               	clrc
  6830  0C05  0DAE               	rlf	(___lwmod@divisor),f
  6831  0C06  0DAF               	rlf	(___lwmod@divisor+1),f
  6832  0C07  3EFF               	addlw	-1
  6833  0C08  1D03               	skipz
  6834  0C09  2C04               	goto	u3995
  6835                           	line	12
  6836                           	
  6837  0C0A                     l10541:	
  6838  0C0A  3001               	movlw	(01h)
  6839  0C0B  00B2               	movwf	(??___lwmod+0)+0
  6840  0C0C  0832               	movf	(??___lwmod+0)+0,w
  6841  0C0D  07B3               	addwf	(___lwmod@counter),f
  6842  0C0E  2C0F               	goto	l10543
  6843                           	line	13
  6844                           	
  6845  0C0F                     l7464:	
  6846                           	line	10
  6847                           	
  6848  0C0F                     l10543:	
  6849  0C0F  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  6850  0C10  2C12               	goto	u4001
  6851  0C11  2C13               	goto	u4000
  6852  0C12                     u4001:
  6853  0C12  2C03               	goto	l10539
  6854  0C13                     u4000:
  6855  0C13  2C15               	goto	l10545
  6856                           	
  6857  0C14                     l7466:	
  6858  0C14  2C15               	goto	l10545
  6859                           	line	14
  6860                           	
  6861  0C15                     l7467:	
  6862                           	line	15
  6863                           	
  6864  0C15                     l10545:	
  6865  0C15  082F               	movf	(___lwmod@divisor+1),w
  6866  0C16  0231               	subwf	(___lwmod@dividend+1),w
  6867  0C17  1D03               	skipz
  6868  0C18  2C1B               	goto	u4015
  6869  0C19  082E               	movf	(___lwmod@divisor),w
  6870  0C1A  0230               	subwf	(___lwmod@dividend),w
  6871  0C1B                     u4015:
  6872  0C1B  1C03               	skipc
  6873  0C1C  2C1E               	goto	u4011
  6874  0C1D  2C1F               	goto	u4010
  6875  0C1E                     u4011:
  6876  0C1E  2C26               	goto	l10549
  6877  0C1F                     u4010:
  6878                           	line	16
  6879                           	
  6880  0C1F                     l10547:	
  6881  0C1F  082E               	movf	(___lwmod@divisor),w
  6882  0C20  02B0               	subwf	(___lwmod@dividend),f
  6883  0C21  082F               	movf	(___lwmod@divisor+1),w
  6884  0C22  1C03               	skipc
  6885  0C23  03B1               	decf	(___lwmod@dividend+1),f
  6886  0C24  02B1               	subwf	(___lwmod@dividend+1),f
  6887  0C25  2C26               	goto	l10549
  6888                           	
  6889  0C26                     l7468:	
  6890                           	line	17
  6891                           	
  6892  0C26                     l10549:	
  6893  0C26  3001               	movlw	01h
  6894                           	
  6895  0C27                     u4025:
  6896  0C27  1003               	clrc
  6897  0C28  0CAF               	rrf	(___lwmod@divisor+1),f
  6898  0C29  0CAE               	rrf	(___lwmod@divisor),f
  6899  0C2A  3EFF               	addlw	-1
  6900  0C2B  1D03               	skipz
  6901  0C2C  2C27               	goto	u4025
  6902                           	line	18
  6903                           	
  6904  0C2D                     l10551:	
  6905  0C2D  3001               	movlw	low(01h)
  6906  0C2E  02B3               	subwf	(___lwmod@counter),f
  6907  0C2F  1D03               	btfss	status,2
  6908  0C30  2C32               	goto	u4031
  6909  0C31  2C33               	goto	u4030
  6910  0C32                     u4031:
  6911  0C32  2C15               	goto	l10545
  6912  0C33                     u4030:
  6913  0C33  2C35               	goto	l10553
  6914                           	
  6915  0C34                     l7469:	
  6916  0C34  2C35               	goto	l10553
  6917                           	line	19
  6918                           	
  6919  0C35                     l7463:	
  6920                           	line	20
  6921                           	
  6922  0C35                     l10553:	
  6923  0C35  0831               	movf	(___lwmod@dividend+1),w
  6924  0C36  01AF               	clrf	(?___lwmod+1)
  6925  0C37  07AF               	addwf	(?___lwmod+1)
  6926  0C38  0830               	movf	(___lwmod@dividend),w
  6927  0C39  01AE               	clrf	(?___lwmod)
  6928  0C3A  07AE               	addwf	(?___lwmod)
  6929                           
  6930  0C3B  2C3C               	goto	l7470
  6931                           	
  6932  0C3C                     l10555:	
  6933                           	line	21
  6934                           	
  6935  0C3C                     l7470:	
  6936  0C3C  0008               	return
  6937                           	opt stack 0
  6938                           GLOBAL	__end_of___lwmod
  6939  0C3D                     	__end_of___lwmod:
  6940 ;; =============== function ___lwmod ends ============
  6941                           
  6942                           	signat	___lwmod,8314
  6943                           	global	___lwdiv
  6944                           psect	text1235,local,class=CODE,delta=2
  6945                           global __ptext1235
  6946  0CCD                     __ptext1235:
  6947                           
  6948 ;; *************** function ___lwdiv *****************
  6949 ;; Defined at:
  6950 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  divisor         2    6[BANK0 ] unsigned int 
  6953 ;;  dividend        2    8[BANK0 ] unsigned int 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;  quotient        2   11[BANK0 ] unsigned int 
  6956 ;;  counter         1   13[BANK0 ] unsigned char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2    6[BANK0 ] unsigned int 
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6966 ;;      Params:         0       4       0       0       0
  6967 ;;      Locals:         0       3       0       0       0
  6968 ;;      Temps:          0       1       0       0       0
  6969 ;;      Totals:         0       8       0       0       0
  6970 ;;Total ram usage:        8 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:    3
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		_readAvgDistance
  6977 ;;		_ADCconvert
  6978 ;;		_sprintf
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           psect	text1235
  6982                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6983                           	line	5
  6984                           	global	__size_of___lwdiv
  6985  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6986                           	
  6987  0CCD                     ___lwdiv:	
  6988                           	opt	stack 1
  6989                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6990                           	line	9
  6991                           	
  6992  0CCD                     l10509:	
  6993  0CCD  1283               	bcf	status, 5	;RP0=0, select bank0
  6994  0CCE  1303               	bcf	status, 6	;RP1=0, select bank0
  6995  0CCF  01AB               	clrf	(___lwdiv@quotient)
  6996  0CD0  01AC               	clrf	(___lwdiv@quotient+1)
  6997                           	line	10
  6998                           	
  6999  0CD1                     l10511:	
  7000  0CD1  0827               	movf	(___lwdiv@divisor+1),w
  7001  0CD2  0426               	iorwf	(___lwdiv@divisor),w
  7002  0CD3  1903               	skipnz
  7003  0CD4  2CD6               	goto	u3911
  7004  0CD5  2CD7               	goto	u3910
  7005  0CD6                     u3911:
  7006  0CD6  2D15               	goto	l10531
  7007  0CD7                     u3910:
  7008                           	line	11
  7009                           	
  7010  0CD7                     l10513:	
  7011  0CD7  01AD               	clrf	(___lwdiv@counter)
  7012  0CD8  1403               	bsf	status,0
  7013  0CD9  0DAD               	rlf	(___lwdiv@counter),f
  7014                           	line	12
  7015  0CDA  2CE7               	goto	l10519
  7016                           	
  7017  0CDB                     l7455:	
  7018                           	line	13
  7019                           	
  7020  0CDB                     l10515:	
  7021  0CDB  3001               	movlw	01h
  7022                           	
  7023  0CDC                     u3925:
  7024  0CDC  1003               	clrc
  7025  0CDD  0DA6               	rlf	(___lwdiv@divisor),f
  7026  0CDE  0DA7               	rlf	(___lwdiv@divisor+1),f
  7027  0CDF  3EFF               	addlw	-1
  7028  0CE0  1D03               	skipz
  7029  0CE1  2CDC               	goto	u3925
  7030                           	line	14
  7031                           	
  7032  0CE2                     l10517:	
  7033  0CE2  3001               	movlw	(01h)
  7034  0CE3  00AA               	movwf	(??___lwdiv+0)+0
  7035  0CE4  082A               	movf	(??___lwdiv+0)+0,w
  7036  0CE5  07AD               	addwf	(___lwdiv@counter),f
  7037  0CE6  2CE7               	goto	l10519
  7038                           	line	15
  7039                           	
  7040  0CE7                     l7454:	
  7041                           	line	12
  7042                           	
  7043  0CE7                     l10519:	
  7044  0CE7  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  7045  0CE8  2CEA               	goto	u3931
  7046  0CE9  2CEB               	goto	u3930
  7047  0CEA                     u3931:
  7048  0CEA  2CDB               	goto	l10515
  7049  0CEB                     u3930:
  7050  0CEB  2CED               	goto	l10521
  7051                           	
  7052  0CEC                     l7456:	
  7053  0CEC  2CED               	goto	l10521
  7054                           	line	16
  7055                           	
  7056  0CED                     l7457:	
  7057                           	line	17
  7058                           	
  7059  0CED                     l10521:	
  7060  0CED  3001               	movlw	01h
  7061                           	
  7062  0CEE                     u3945:
  7063  0CEE  1003               	clrc
  7064  0CEF  0DAB               	rlf	(___lwdiv@quotient),f
  7065  0CF0  0DAC               	rlf	(___lwdiv@quotient+1),f
  7066  0CF1  3EFF               	addlw	-1
  7067  0CF2  1D03               	skipz
  7068  0CF3  2CEE               	goto	u3945
  7069                           	line	18
  7070  0CF4  0827               	movf	(___lwdiv@divisor+1),w
  7071  0CF5  0229               	subwf	(___lwdiv@dividend+1),w
  7072  0CF6  1D03               	skipz
  7073  0CF7  2CFA               	goto	u3955
  7074  0CF8  0826               	movf	(___lwdiv@divisor),w
  7075  0CF9  0228               	subwf	(___lwdiv@dividend),w
  7076  0CFA                     u3955:
  7077  0CFA  1C03               	skipc
  7078  0CFB  2CFD               	goto	u3951
  7079  0CFC  2CFE               	goto	u3950
  7080  0CFD                     u3951:
  7081  0CFD  2D06               	goto	l10527
  7082  0CFE                     u3950:
  7083                           	line	19
  7084                           	
  7085  0CFE                     l10523:	
  7086  0CFE  0826               	movf	(___lwdiv@divisor),w
  7087  0CFF  02A8               	subwf	(___lwdiv@dividend),f
  7088  0D00  0827               	movf	(___lwdiv@divisor+1),w
  7089  0D01  1C03               	skipc
  7090  0D02  03A9               	decf	(___lwdiv@dividend+1),f
  7091  0D03  02A9               	subwf	(___lwdiv@dividend+1),f
  7092                           	line	20
  7093                           	
  7094  0D04                     l10525:	
  7095  0D04  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  7096  0D05  2D06               	goto	l10527
  7097                           	line	21
  7098                           	
  7099  0D06                     l7458:	
  7100                           	line	22
  7101                           	
  7102  0D06                     l10527:	
  7103  0D06  3001               	movlw	01h
  7104                           	
  7105  0D07                     u3965:
  7106  0D07  1003               	clrc
  7107  0D08  0CA7               	rrf	(___lwdiv@divisor+1),f
  7108  0D09  0CA6               	rrf	(___lwdiv@divisor),f
  7109  0D0A  3EFF               	addlw	-1
  7110  0D0B  1D03               	skipz
  7111  0D0C  2D07               	goto	u3965
  7112                           	line	23
  7113                           	
  7114  0D0D                     l10529:	
  7115  0D0D  3001               	movlw	low(01h)
  7116  0D0E  02AD               	subwf	(___lwdiv@counter),f
  7117  0D0F  1D03               	btfss	status,2
  7118  0D10  2D12               	goto	u3971
  7119  0D11  2D13               	goto	u3970
  7120  0D12                     u3971:
  7121  0D12  2CED               	goto	l10521
  7122  0D13                     u3970:
  7123  0D13  2D15               	goto	l10531
  7124                           	
  7125  0D14                     l7459:	
  7126  0D14  2D15               	goto	l10531
  7127                           	line	24
  7128                           	
  7129  0D15                     l7453:	
  7130                           	line	25
  7131                           	
  7132  0D15                     l10531:	
  7133  0D15  082C               	movf	(___lwdiv@quotient+1),w
  7134  0D16  01A7               	clrf	(?___lwdiv+1)
  7135  0D17  07A7               	addwf	(?___lwdiv+1)
  7136  0D18  082B               	movf	(___lwdiv@quotient),w
  7137  0D19  01A6               	clrf	(?___lwdiv)
  7138  0D1A  07A6               	addwf	(?___lwdiv)
  7139                           
  7140  0D1B  2D1C               	goto	l7460
  7141                           	
  7142  0D1C                     l10533:	
  7143                           	line	26
  7144                           	
  7145  0D1C                     l7460:	
  7146  0D1C  0008               	return
  7147                           	opt stack 0
  7148                           GLOBAL	__end_of___lwdiv
  7149  0D1D                     	__end_of___lwdiv:
  7150 ;; =============== function ___lwdiv ends ============
  7151                           
  7152                           	signat	___lwdiv,8314
  7153                           	global	___wmul
  7154                           psect	text1236,local,class=CODE,delta=2
  7155                           global __ptext1236
  7156  0A64                     __ptext1236:
  7157                           
  7158 ;; *************** function ___wmul *****************
  7159 ;; Defined at:
  7160 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7163 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  product         2    4[BANK0 ] unsigned int 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  2    0[BANK0 ] unsigned int 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7175 ;;      Params:         0       4       0       0       0
  7176 ;;      Locals:         0       2       0       0       0
  7177 ;;      Temps:          0       0       0       0       0
  7178 ;;      Totals:         0       6       0       0       0
  7179 ;;Total ram usage:        6 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:    3
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_ADCconvert
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           psect	text1236
  7189                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7190                           	line	3
  7191                           	global	__size_of___wmul
  7192  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7193                           	
  7194  0A64                     ___wmul:	
  7195                           	opt	stack 1
  7196                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7197                           	line	4
  7198                           	
  7199  0A64                     l10497:	
  7200  0A64  1283               	bcf	status, 5	;RP0=0, select bank0
  7201  0A65  1303               	bcf	status, 6	;RP1=0, select bank0
  7202  0A66  01A4               	clrf	(___wmul@product)
  7203  0A67  01A5               	clrf	(___wmul@product+1)
  7204  0A68  2A69               	goto	l10499
  7205                           	line	6
  7206                           	
  7207  0A69                     l7447:	
  7208                           	line	7
  7209                           	
  7210  0A69                     l10499:	
  7211  0A69  1C20               	btfss	(___wmul@multiplier),(0)&7
  7212  0A6A  2A6C               	goto	u3871
  7213  0A6B  2A6D               	goto	u3870
  7214  0A6C                     u3871:
  7215  0A6C  2A73               	goto	l7448
  7216  0A6D                     u3870:
  7217                           	line	8
  7218                           	
  7219  0A6D                     l10501:	
  7220  0A6D  0822               	movf	(___wmul@multiplicand),w
  7221  0A6E  07A4               	addwf	(___wmul@product),f
  7222  0A6F  1803               	skipnc
  7223  0A70  0AA5               	incf	(___wmul@product+1),f
  7224  0A71  0823               	movf	(___wmul@multiplicand+1),w
  7225  0A72  07A5               	addwf	(___wmul@product+1),f
  7226                           	
  7227  0A73                     l7448:	
  7228                           	line	9
  7229  0A73  3001               	movlw	01h
  7230                           	
  7231  0A74                     u3885:
  7232  0A74  1003               	clrc
  7233  0A75  0DA2               	rlf	(___wmul@multiplicand),f
  7234  0A76  0DA3               	rlf	(___wmul@multiplicand+1),f
  7235  0A77  3EFF               	addlw	-1
  7236  0A78  1D03               	skipz
  7237  0A79  2A74               	goto	u3885
  7238                           	line	10
  7239                           	
  7240  0A7A                     l10503:	
  7241  0A7A  3001               	movlw	01h
  7242                           	
  7243  0A7B                     u3895:
  7244  0A7B  1003               	clrc
  7245  0A7C  0CA1               	rrf	(___wmul@multiplier+1),f
  7246  0A7D  0CA0               	rrf	(___wmul@multiplier),f
  7247  0A7E  3EFF               	addlw	-1
  7248  0A7F  1D03               	skipz
  7249  0A80  2A7B               	goto	u3895
  7250                           	line	11
  7251  0A81  0821               	movf	((___wmul@multiplier+1)),w
  7252  0A82  0420               	iorwf	((___wmul@multiplier)),w
  7253  0A83  1D03               	skipz
  7254  0A84  2A86               	goto	u3901
  7255  0A85  2A87               	goto	u3900
  7256  0A86                     u3901:
  7257  0A86  2A69               	goto	l10499
  7258  0A87                     u3900:
  7259  0A87  2A88               	goto	l10505
  7260                           	
  7261  0A88                     l7449:	
  7262                           	line	12
  7263                           	
  7264  0A88                     l10505:	
  7265  0A88  0825               	movf	(___wmul@product+1),w
  7266  0A89  01A1               	clrf	(?___wmul+1)
  7267  0A8A  07A1               	addwf	(?___wmul+1)
  7268  0A8B  0824               	movf	(___wmul@product),w
  7269  0A8C  01A0               	clrf	(?___wmul)
  7270  0A8D  07A0               	addwf	(?___wmul)
  7271                           
  7272  0A8E  2A8F               	goto	l7450
  7273                           	
  7274  0A8F                     l10507:	
  7275                           	line	13
  7276                           	
  7277  0A8F                     l7450:	
  7278  0A8F  0008               	return
  7279                           	opt stack 0
  7280                           GLOBAL	__end_of___wmul
  7281  0A90                     	__end_of___wmul:
  7282 ;; =============== function ___wmul ends ============
  7283                           
  7284                           	signat	___wmul,8314
  7285                           	global	_spi_transfer
  7286                           psect	text1237,local,class=CODE,delta=2
  7287                           global __ptext1237
  7288  099B                     __ptext1237:
  7289                           
  7290 ;; *************** function _spi_transfer *****************
  7291 ;; Defined at:
  7292 ;;		line 34 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  data            1    wreg     unsigned char 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  data            1    2[BANK0 ] unsigned char 
  7297 ;;  temp            1    1[BANK0 ] unsigned char 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      unsigned char 
  7300 ;; Registers used:
  7301 ;;		wreg
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7307 ;;      Params:         0       0       0       0       0
  7308 ;;      Locals:         0       2       0       0       0
  7309 ;;      Temps:          0       1       0       0       0
  7310 ;;      Totals:         0       3       0       0       0
  7311 ;;Total ram usage:        3 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    3
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_rotate
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           psect	text1237
  7321                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7322                           	line	34
  7323                           	global	__size_of_spi_transfer
  7324  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  7325                           	
  7326  099B                     _spi_transfer:	
  7327                           	opt	stack 3
  7328                           ; Regs used in _spi_transfer: [wreg]
  7329                           ;spi_transfer@data stored from wreg
  7330  099B  1283               	bcf	status, 5	;RP0=0, select bank0
  7331  099C  1303               	bcf	status, 6	;RP1=0, select bank0
  7332  099D  00A2               	movwf	(spi_transfer@data)
  7333                           	line	35
  7334                           	
  7335  099E                     l10321:	
  7336                           ;steppermotor.c: 35: unsigned char temp = 0;
  7337  099E  01A1               	clrf	(spi_transfer@temp)
  7338                           	line	37
  7339                           ;steppermotor.c: 37: SSPIF = 0;
  7340  099F  118C               	bcf	(99/8),(99)&7
  7341                           	line	38
  7342                           	
  7343  09A0                     l10323:	
  7344                           ;steppermotor.c: 38: SSPBUF = data;
  7345  09A0  0822               	movf	(spi_transfer@data),w
  7346  09A1  0093               	movwf	(19)	;volatile
  7347                           	line	40
  7348                           ;steppermotor.c: 40: while (SSPIF == 0);
  7349  09A2  29A3               	goto	l3692
  7350                           	
  7351  09A3                     l3693:	
  7352                           	
  7353  09A3                     l3692:	
  7354  09A3  1D8C               	btfss	(99/8),(99)&7
  7355  09A4  29A6               	goto	u3591
  7356  09A5  29A7               	goto	u3590
  7357  09A6                     u3591:
  7358  09A6  29A3               	goto	l3692
  7359  09A7                     u3590:
  7360  09A7  29A8               	goto	l10325
  7361                           	
  7362  09A8                     l3694:	
  7363                           	line	41
  7364                           	
  7365  09A8                     l10325:	
  7366                           ;steppermotor.c: 41: temp = SSPBUF;
  7367  09A8  0813               	movf	(19),w	;volatile
  7368  09A9  00A0               	movwf	(??_spi_transfer+0)+0
  7369  09AA  0820               	movf	(??_spi_transfer+0)+0,w
  7370  09AB  00A1               	movwf	(spi_transfer@temp)
  7371                           	line	42
  7372                           	
  7373  09AC                     l10327:	
  7374                           ;steppermotor.c: 42: SSPIF = 0;
  7375  09AC  118C               	bcf	(99/8),(99)&7
  7376  09AD  29AE               	goto	l3695
  7377                           	line	44
  7378                           	
  7379  09AE                     l10329:	
  7380                           	line	45
  7381                           ;steppermotor.c: 44: return temp;
  7382                           ;	Return value of _spi_transfer is never used
  7383                           	
  7384  09AE                     l3695:	
  7385  09AE  0008               	return
  7386                           	opt stack 0
  7387                           GLOBAL	__end_of_spi_transfer
  7388  09AF                     	__end_of_spi_transfer:
  7389 ;; =============== function _spi_transfer ends ============
  7390                           
  7391                           	signat	_spi_transfer,4217
  7392                           	global	_Menu
  7393                           psect	text1238,local,class=CODE,delta=2
  7394                           global __ptext1238
  7395  0C3D                     __ptext1238:
  7396                           
  7397 ;; *************** function _Menu *****************
  7398 ;; Defined at:
  7399 ;;		line 180 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  input           1    wreg     unsigned char 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  input           1    0[BANK0 ] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      unsigned char 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7413 ;;      Params:         0       0       0       0       0
  7414 ;;      Locals:         0       1       0       0       0
  7415 ;;      Temps:          0       0       0       0       0
  7416 ;;      Totals:         0       1       0       0       0
  7417 ;;Total ram usage:        1 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    3
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_main
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           psect	text1238
  7427                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  7428                           	line	180
  7429                           	global	__size_of_Menu
  7430  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  7431                           	
  7432  0C3D                     _Menu:	
  7433                           	opt	stack 4
  7434                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  7435                           ;Menu@input stored from wreg
  7436  0C3D  1283               	bcf	status, 5	;RP0=0, select bank0
  7437  0C3E  1303               	bcf	status, 6	;RP1=0, select bank0
  7438  0C3F  00A0               	movwf	(Menu@input)
  7439                           	line	181
  7440                           	
  7441  0C40                     l10297:	
  7442                           ;HMI.c: 181: switch (input)
  7443  0C40  2C6F               	goto	l10315
  7444                           	line	183
  7445                           ;HMI.c: 182: {
  7446                           ;HMI.c: 183: case 1:
  7447                           	
  7448  0C41                     l5252:	
  7449                           	line	185
  7450                           ;HMI.c: 185: break;
  7451  0C41  2C81               	goto	l10317
  7452                           	line	186
  7453                           ;HMI.c: 186: case 2:
  7454                           	
  7455  0C42                     l5254:	
  7456                           	line	188
  7457                           ;HMI.c: 188: break;
  7458  0C42  2C81               	goto	l10317
  7459                           	line	189
  7460                           ;HMI.c: 189: case 3:
  7461                           	
  7462  0C43                     l5255:	
  7463                           	line	190
  7464                           	
  7465  0C43                     l10299:	
  7466                           ;HMI.c: 190: pos--;
  7467  0C43  30FF               	movlw	low(-1)
  7468  0C44  1683               	bsf	status, 5	;RP0=1, select bank1
  7469  0C45  1303               	bcf	status, 6	;RP1=0, select bank1
  7470  0C46  07C6               	addwf	(_pos)^080h,f
  7471  0C47  1803               	skipnc
  7472  0C48  0AC7               	incf	(_pos+1)^080h,f
  7473  0C49  30FF               	movlw	high(-1)
  7474  0C4A  07C7               	addwf	(_pos+1)^080h,f
  7475                           	line	191
  7476                           	
  7477  0C4B                     l10301:	
  7478                           ;HMI.c: 191: if (pos < 0)
  7479  0C4B  1FC7               	btfss	(_pos+1)^080h,7
  7480  0C4C  2C4E               	goto	u3571
  7481  0C4D  2C4F               	goto	u3570
  7482  0C4E                     u3571:
  7483  0C4E  2C81               	goto	l10317
  7484  0C4F                     u3570:
  7485                           	line	192
  7486                           	
  7487  0C4F                     l10303:	
  7488                           ;HMI.c: 192: pos = 6 - 1;
  7489  0C4F  3005               	movlw	low(05h)
  7490  0C50  00C6               	movwf	(_pos)^080h
  7491  0C51  3000               	movlw	high(05h)
  7492  0C52  00C7               	movwf	((_pos)^080h)+1
  7493  0C53  2C81               	goto	l10317
  7494                           	
  7495  0C54                     l5256:	
  7496                           	line	194
  7497                           ;HMI.c: 194: break;
  7498  0C54  2C81               	goto	l10317
  7499                           	line	195
  7500                           ;HMI.c: 195: case 4:
  7501                           	
  7502  0C55                     l5257:	
  7503                           	line	196
  7504                           	
  7505  0C55                     l10305:	
  7506                           ;HMI.c: 196: pos++;
  7507  0C55  3001               	movlw	low(01h)
  7508  0C56  1683               	bsf	status, 5	;RP0=1, select bank1
  7509  0C57  1303               	bcf	status, 6	;RP1=0, select bank1
  7510  0C58  07C6               	addwf	(_pos)^080h,f
  7511  0C59  1803               	skipnc
  7512  0C5A  0AC7               	incf	(_pos+1)^080h,f
  7513  0C5B  3000               	movlw	high(01h)
  7514  0C5C  07C7               	addwf	(_pos+1)^080h,f
  7515                           	line	197
  7516                           ;HMI.c: 197: if (pos == 6)
  7517  0C5D  3006               	movlw	06h
  7518  0C5E  0646               	xorwf	(_pos)^080h,w
  7519  0C5F  0447               	iorwf	(_pos+1)^080h,w
  7520  0C60  1D03               	skipz
  7521  0C61  2C63               	goto	u3581
  7522  0C62  2C64               	goto	u3580
  7523  0C63                     u3581:
  7524  0C63  2C81               	goto	l10317
  7525  0C64                     u3580:
  7526                           	line	198
  7527                           	
  7528  0C64                     l10307:	
  7529                           ;HMI.c: 198: pos = 0;
  7530  0C64  01C6               	clrf	(_pos)^080h
  7531  0C65  01C7               	clrf	(_pos+1)^080h
  7532  0C66  2C81               	goto	l10317
  7533                           	
  7534  0C67                     l5258:	
  7535                           	line	200
  7536                           ;HMI.c: 200: break;
  7537  0C67  2C81               	goto	l10317
  7538                           	line	201
  7539                           ;HMI.c: 201: case 5:
  7540                           	
  7541  0C68                     l5259:	
  7542                           	line	202
  7543                           	
  7544  0C68                     l10309:	
  7545                           ;HMI.c: 202: return pos;
  7546  0C68  1683               	bsf	status, 5	;RP0=1, select bank1
  7547  0C69  1303               	bcf	status, 6	;RP1=0, select bank1
  7548  0C6A  0846               	movf	(_pos)^080h,w
  7549  0C6B  2C83               	goto	l5260
  7550                           	
  7551  0C6C                     l10311:	
  7552  0C6C  2C83               	goto	l5260
  7553                           	line	205
  7554                           ;HMI.c: 205: default:
  7555                           	
  7556  0C6D                     l5261:	
  7557                           	line	207
  7558                           ;HMI.c: 207: break;
  7559  0C6D  2C81               	goto	l10317
  7560                           	line	208
  7561                           	
  7562  0C6E                     l10313:	
  7563                           ;HMI.c: 208: }
  7564  0C6E  2C81               	goto	l10317
  7565                           	line	181
  7566                           	
  7567  0C6F                     l5251:	
  7568                           	
  7569  0C6F                     l10315:	
  7570  0C6F  1283               	bcf	status, 5	;RP0=0, select bank0
  7571  0C70  0820               	movf	(Menu@input),w
  7572                           	; Switch size 1, requested type "space"
  7573                           ; Number of cases is 5, Range of values is 1 to 5
  7574                           ; switch strategies available:
  7575                           ; Name         Instructions Cycles
  7576                           ; simple_byte           16     9 (average)
  7577                           ; direct_byte           26    11 (fixed)
  7578                           ; jumptable            263     9 (fixed)
  7579                           ;	Chosen strategy is simple_byte
  7580                           
  7581                           	opt asmopt_off
  7582  0C71  3A01               	xorlw	1^0	; case 1
  7583  0C72  1903               	skipnz
  7584  0C73  2C81               	goto	l10317
  7585  0C74  3A03               	xorlw	2^1	; case 2
  7586  0C75  1903               	skipnz
  7587  0C76  2C81               	goto	l10317
  7588  0C77  3A01               	xorlw	3^2	; case 3
  7589  0C78  1903               	skipnz
  7590  0C79  2C43               	goto	l10299
  7591  0C7A  3A07               	xorlw	4^3	; case 4
  7592  0C7B  1903               	skipnz
  7593  0C7C  2C55               	goto	l10305
  7594  0C7D  3A01               	xorlw	5^4	; case 5
  7595  0C7E  1903               	skipnz
  7596  0C7F  2C68               	goto	l10309
  7597  0C80  2C81               	goto	l10317
  7598                           	opt asmopt_on
  7599                           
  7600                           	line	208
  7601                           	
  7602  0C81                     l5253:	
  7603                           	line	209
  7604                           	
  7605  0C81                     l10317:	
  7606                           ;HMI.c: 209: return 255;
  7607  0C81  30FF               	movlw	(0FFh)
  7608  0C82  2C83               	goto	l5260
  7609                           	
  7610  0C83                     l10319:	
  7611                           	line	210
  7612                           	
  7613  0C83                     l5260:	
  7614  0C83  0008               	return
  7615                           	opt stack 0
  7616                           GLOBAL	__end_of_Menu
  7617  0C84                     	__end_of_Menu:
  7618 ;; =============== function _Menu ends ============
  7619                           
  7620                           	signat	_Menu,4217
  7621                           	global	_ser_putch
  7622                           psect	text1239,local,class=CODE,delta=2
  7623                           global __ptext1239
  7624  09EF                     __ptext1239:
  7625                           
  7626 ;; *************** function _ser_putch *****************
  7627 ;; Defined at:
  7628 ;;		line 71 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  c               1    wreg     unsigned char 
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;  c               1    1[BANK0 ] unsigned char 
  7633 ;; Return value:  Size  Location     Type
  7634 ;;		None               void
  7635 ;; Registers used:
  7636 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7642 ;;      Params:         0       0       0       0       0
  7643 ;;      Locals:         0       1       0       0       0
  7644 ;;      Temps:          0       1       0       0       0
  7645 ;;      Totals:         0       2       0       0       0
  7646 ;;Total ram usage:        2 bytes
  7647 ;; Hardware stack levels used:    1
  7648 ;; Hardware stack levels required when called:    3
  7649 ;; This function calls:
  7650 ;;		Nothing
  7651 ;; This function is called by:
  7652 ;;		_ChargeMode
  7653 ;;		_robo_init
  7654 ;;		_robot_read
  7655 ;;		_robotMove
  7656 ;;		_robotTurn
  7657 ;;		_ser_puts
  7658 ;;		_ser_puts2
  7659 ;;		_ser_puthex
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           psect	text1239
  7663                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7664                           	line	71
  7665                           	global	__size_of_ser_putch
  7666  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  7667                           	
  7668  09EF                     _ser_putch:	
  7669                           	opt	stack 3
  7670                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  7671                           ;ser_putch@c stored from wreg
  7672  09EF  1283               	bcf	status, 5	;RP0=0, select bank0
  7673  09F0  1303               	bcf	status, 6	;RP1=0, select bank0
  7674  09F1  00A1               	movwf	(ser_putch@c)
  7675                           	line	72
  7676                           	
  7677  09F2                     l10285:	
  7678                           ;ser.c: 72: while (((txiptr+1) & (16-1))==txoptr)
  7679  09F2  29F4               	goto	l10287
  7680                           	
  7681  09F3                     l4444:	
  7682                           	line	73
  7683                           ;ser.c: 73: continue;
  7684  09F3  29F4               	goto	l10287
  7685                           	
  7686  09F4                     l4443:	
  7687                           	line	72
  7688                           	
  7689  09F4                     l10287:	
  7690  09F4  086D               	movf	(_txiptr),w	;volatile
  7691  09F5  3E01               	addlw	01h
  7692  09F6  390F               	andlw	0Fh
  7693  09F7  066E               	xorwf	(_txoptr),w	;volatile
  7694  09F8  1903               	skipnz
  7695  09F9  29FB               	goto	u3561
  7696  09FA  29FC               	goto	u3560
  7697  09FB                     u3561:
  7698  09FB  29F4               	goto	l10287
  7699  09FC                     u3560:
  7700                           	
  7701  09FC                     l4445:	
  7702                           	line	74
  7703                           ;ser.c: 74: GIE=0;
  7704  09FC  138B               	bcf	(95/8),(95)&7
  7705                           	line	75
  7706                           	
  7707  09FD                     l10289:	
  7708                           ;ser.c: 75: txfifo[txiptr] = c;
  7709  09FD  0821               	movf	(ser_putch@c),w
  7710  09FE  00A0               	movwf	(??_ser_putch+0)+0
  7711  09FF  086D               	movf	(_txiptr),w
  7712  0A00  3EB0               	addlw	_txfifo&0ffh
  7713  0A01  0084               	movwf	fsr0
  7714  0A02  0820               	movf	(??_ser_putch+0)+0,w
  7715  0A03  1383               	bcf	status, 7	;select IRP bank1
  7716  0A04  0080               	movwf	indf
  7717                           	line	76
  7718                           	
  7719  0A05                     l10291:	
  7720                           ;ser.c: 76: txiptr=(txiptr+1) & (16-1);
  7721  0A05  086D               	movf	(_txiptr),w	;volatile
  7722  0A06  3E01               	addlw	01h
  7723  0A07  390F               	andlw	0Fh
  7724  0A08  00A0               	movwf	(??_ser_putch+0)+0
  7725  0A09  0820               	movf	(??_ser_putch+0)+0,w
  7726  0A0A  00ED               	movwf	(_txiptr)	;volatile
  7727                           	line	77
  7728                           	
  7729  0A0B                     l10293:	
  7730                           ;ser.c: 77: TXIE=1;
  7731  0A0B  1683               	bsf	status, 5	;RP0=1, select bank1
  7732  0A0C  1303               	bcf	status, 6	;RP1=0, select bank1
  7733  0A0D  160C               	bsf	(1124/8)^080h,(1124)&7
  7734                           	line	78
  7735                           	
  7736  0A0E                     l10295:	
  7737                           ;ser.c: 78: GIE=1;
  7738  0A0E  178B               	bsf	(95/8),(95)&7
  7739                           	line	79
  7740                           	
  7741  0A0F                     l4446:	
  7742  0A0F  0008               	return
  7743                           	opt stack 0
  7744                           GLOBAL	__end_of_ser_putch
  7745  0A10                     	__end_of_ser_putch:
  7746 ;; =============== function _ser_putch ends ============
  7747                           
  7748                           	signat	_ser_putch,4216
  7749                           	global	_ser_init
  7750                           psect	text1240,local,class=CODE,delta=2
  7751                           global __ptext1240
  7752  0ABC                     __ptext1240:
  7753                           
  7754 ;; *************** function _ser_init *****************
  7755 ;; Defined at:
  7756 ;;		line 114 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;		None
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;		None
  7761 ;; Return value:  Size  Location     Type
  7762 ;;		None               void
  7763 ;; Registers used:
  7764 ;;		wreg, status,2, status,0
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7770 ;;      Params:         0       0       0       0       0
  7771 ;;      Locals:         0       0       0       0       0
  7772 ;;      Temps:          0       1       0       0       0
  7773 ;;      Totals:         0       1       0       0       0
  7774 ;;Total ram usage:        1 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:    3
  7777 ;; This function calls:
  7778 ;;		Nothing
  7779 ;; This function is called by:
  7780 ;;		_init
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           psect	text1240
  7784                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7785                           	line	114
  7786                           	global	__size_of_ser_init
  7787  002E                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  7788                           	
  7789  0ABC                     _ser_init:	
  7790                           	opt	stack 3
  7791                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  7792                           	line	115
  7793                           	
  7794  0ABC                     l11187:	
  7795                           ;ser.c: 115: TRISC |= 0b10000000;
  7796  0ABC  1683               	bsf	status, 5	;RP0=1, select bank1
  7797  0ABD  1303               	bcf	status, 6	;RP1=0, select bank1
  7798  0ABE  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  7799                           	line	116
  7800                           	
  7801  0ABF                     l11189:	
  7802                           ;ser.c: 116: TRISC &= 0b10111111;
  7803  0ABF  30BF               	movlw	(0BFh)
  7804  0AC0  1283               	bcf	status, 5	;RP0=0, select bank0
  7805  0AC1  1303               	bcf	status, 6	;RP1=0, select bank0
  7806  0AC2  00A0               	movwf	(??_ser_init+0)+0
  7807  0AC3  0820               	movf	(??_ser_init+0)+0,w
  7808  0AC4  1683               	bsf	status, 5	;RP0=1, select bank1
  7809  0AC5  1303               	bcf	status, 6	;RP1=0, select bank1
  7810  0AC6  0587               	andwf	(135)^080h,f	;volatile
  7811                           	line	117
  7812                           	
  7813  0AC7                     l11191:	
  7814                           ;ser.c: 117: BRGH=1;
  7815  0AC7  1518               	bsf	(1218/8)^080h,(1218)&7
  7816                           	line	119
  7817                           	
  7818  0AC8                     l11193:	
  7819                           ;ser.c: 119: SPBRG=20;
  7820  0AC8  3014               	movlw	(014h)
  7821  0AC9  0099               	movwf	(153)^080h	;volatile
  7822                           	line	122
  7823                           	
  7824  0ACA                     l11195:	
  7825                           ;ser.c: 122: TX9=0;
  7826  0ACA  1318               	bcf	(1222/8)^080h,(1222)&7
  7827                           	line	123
  7828                           	
  7829  0ACB                     l11197:	
  7830                           ;ser.c: 123: RX9=0;
  7831  0ACB  1283               	bcf	status, 5	;RP0=0, select bank0
  7832  0ACC  1303               	bcf	status, 6	;RP1=0, select bank0
  7833  0ACD  1318               	bcf	(198/8),(198)&7
  7834                           	line	125
  7835                           	
  7836  0ACE                     l11199:	
  7837                           ;ser.c: 125: SYNC=0;
  7838  0ACE  1683               	bsf	status, 5	;RP0=1, select bank1
  7839  0ACF  1303               	bcf	status, 6	;RP1=0, select bank1
  7840  0AD0  1218               	bcf	(1220/8)^080h,(1220)&7
  7841                           	line	126
  7842                           	
  7843  0AD1                     l11201:	
  7844                           ;ser.c: 126: SPEN=1;
  7845  0AD1  1283               	bcf	status, 5	;RP0=0, select bank0
  7846  0AD2  1303               	bcf	status, 6	;RP1=0, select bank0
  7847  0AD3  1798               	bsf	(199/8),(199)&7
  7848                           	line	127
  7849                           	
  7850  0AD4                     l11203:	
  7851                           ;ser.c: 127: CREN=1;
  7852  0AD4  1618               	bsf	(196/8),(196)&7
  7853                           	line	128
  7854                           	
  7855  0AD5                     l11205:	
  7856                           ;ser.c: 128: TXIE=0;
  7857  0AD5  1683               	bsf	status, 5	;RP0=1, select bank1
  7858  0AD6  1303               	bcf	status, 6	;RP1=0, select bank1
  7859  0AD7  120C               	bcf	(1124/8)^080h,(1124)&7
  7860                           	line	129
  7861                           	
  7862  0AD8                     l11207:	
  7863                           ;ser.c: 129: RCIE=1;
  7864  0AD8  168C               	bsf	(1125/8)^080h,(1125)&7
  7865                           	line	130
  7866                           	
  7867  0AD9                     l11209:	
  7868                           ;ser.c: 130: TXEN=1;
  7869  0AD9  1698               	bsf	(1221/8)^080h,(1221)&7
  7870                           	line	133
  7871                           	
  7872  0ADA                     l11211:	
  7873                           ;ser.c: 133: rxiptr=rxoptr=txiptr=txoptr=0;
  7874  0ADA  3000               	movlw	(0)
  7875  0ADB  1283               	bcf	status, 5	;RP0=0, select bank0
  7876  0ADC  1303               	bcf	status, 6	;RP1=0, select bank0
  7877  0ADD  00EE               	movwf	(_txoptr)	;volatile
  7878  0ADE  00ED               	movwf	(_txiptr)	;volatile
  7879  0ADF  1683               	bsf	status, 5	;RP0=1, select bank1
  7880  0AE0  1303               	bcf	status, 6	;RP1=0, select bank1
  7881  0AE1  00DB               	movwf	(_rxoptr)^080h	;volatile
  7882  0AE2  1283               	bcf	status, 5	;RP0=0, select bank0
  7883  0AE3  1303               	bcf	status, 6	;RP1=0, select bank0
  7884  0AE4  00A0               	movwf	(??_ser_init+0)+0
  7885  0AE5  0820               	movf	(??_ser_init+0)+0,w
  7886  0AE6  1683               	bsf	status, 5	;RP0=1, select bank1
  7887  0AE7  1303               	bcf	status, 6	;RP1=0, select bank1
  7888  0AE8  00DA               	movwf	(_rxiptr)^080h	;volatile
  7889                           	line	134
  7890                           	
  7891  0AE9                     l4468:	
  7892  0AE9  0008               	return
  7893                           	opt stack 0
  7894                           GLOBAL	__end_of_ser_init
  7895  0AEA                     	__end_of_ser_init:
  7896 ;; =============== function _ser_init ends ============
  7897                           
  7898                           	signat	_ser_init,88
  7899                           	global	_adc_read
  7900                           psect	text1241,local,class=CODE,delta=2
  7901                           global __ptext1241
  7902  0A10                     __ptext1241:
  7903                           
  7904 ;; *************** function _adc_read *****************
  7905 ;; Defined at:
  7906 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;		None
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  2    0[BANK0 ] unsigned int 
  7913 ;; Registers used:
  7914 ;;		wreg, status,2, status,0
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7920 ;;      Params:         0       2       0       0       0
  7921 ;;      Locals:         0       2       0       0       0
  7922 ;;      Temps:          0       2       0       0       0
  7923 ;;      Totals:         0       6       0       0       0
  7924 ;;Total ram usage:        6 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    3
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_adc_read_channel
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           psect	text1241
  7934                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7935                           	line	61
  7936                           	global	__size_of_adc_read
  7937  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7938                           	
  7939  0A10                     _adc_read:	
  7940                           	opt	stack 0
  7941                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  7942                           	line	64
  7943                           	
  7944  0A10                     l10133:	
  7945                           ;adc.c: 62: volatile unsigned int adc_value;
  7946                           ;adc.c: 64: ADRESH = 0;
  7947  0A10  1283               	bcf	status, 5	;RP0=0, select bank0
  7948  0A11  1303               	bcf	status, 6	;RP1=0, select bank0
  7949  0A12  019E               	clrf	(30)	;volatile
  7950                           	line	66
  7951                           	
  7952  0A13                     l10135:	
  7953                           ;adc.c: 66: GO = 1;
  7954  0A13  151F               	bsf	(250/8),(250)&7
  7955                           	line	67
  7956                           ;adc.c: 67: while(GO) continue;
  7957  0A14  2A15               	goto	l703
  7958                           	
  7959  0A15                     l704:	
  7960                           	
  7961  0A15                     l703:	
  7962  0A15  191F               	btfsc	(250/8),(250)&7
  7963  0A16  2A18               	goto	u3361
  7964  0A17  2A19               	goto	u3360
  7965  0A18                     u3361:
  7966  0A18  2A15               	goto	l703
  7967  0A19                     u3360:
  7968                           	
  7969  0A19                     l705:	
  7970                           	line	68
  7971                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7972  0A19  0000               nop ;#
  7973                           	line	69
  7974                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7975  0A1A  0000               nop ;#
  7976                           	line	70
  7977                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7978  0A1B  0000               nop ;#
  7979                           psect	text1241
  7980                           	line	73
  7981                           	
  7982  0A1C                     l10137:	
  7983                           ;adc.c: 73: adc_value = ADRESH;
  7984  0A1C  1283               	bcf	status, 5	;RP0=0, select bank0
  7985  0A1D  1303               	bcf	status, 6	;RP1=0, select bank0
  7986  0A1E  081E               	movf	(30),w	;volatile
  7987  0A1F  00A2               	movwf	(??_adc_read+0)+0
  7988  0A20  01A3               	clrf	(??_adc_read+0)+0+1
  7989  0A21  0822               	movf	0+(??_adc_read+0)+0,w
  7990  0A22  00A4               	movwf	(adc_read@adc_value)	;volatile
  7991  0A23  0823               	movf	1+(??_adc_read+0)+0,w
  7992  0A24  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  7993                           	line	74
  7994                           ;adc.c: 74: adc_value <<= 1;
  7995  0A25  3001               	movlw	01h
  7996                           	
  7997  0A26                     u3375:
  7998  0A26  1003               	clrc
  7999  0A27  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  8000  0A28  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  8001  0A29  3EFF               	addlw	-1
  8002  0A2A  1D03               	skipz
  8003  0A2B  2A26               	goto	u3375
  8004                           	line	75
  8005                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  8006  0A2C  1683               	bsf	status, 5	;RP0=1, select bank1
  8007  0A2D  1303               	bcf	status, 6	;RP1=0, select bank1
  8008  0A2E  081E               	movf	(158)^080h,w	;volatile
  8009                           	line	78
  8010                           	
  8011  0A2F                     l10139:	
  8012                           ;adc.c: 78: return (adc_value);
  8013  0A2F  1283               	bcf	status, 5	;RP0=0, select bank0
  8014  0A30  1303               	bcf	status, 6	;RP1=0, select bank0
  8015  0A31  0825               	movf	(adc_read@adc_value+1),w	;volatile
  8016  0A32  01A1               	clrf	(?_adc_read+1)
  8017  0A33  07A1               	addwf	(?_adc_read+1)
  8018  0A34  0824               	movf	(adc_read@adc_value),w	;volatile
  8019  0A35  01A0               	clrf	(?_adc_read)
  8020  0A36  07A0               	addwf	(?_adc_read)
  8021                           
  8022  0A37  2A38               	goto	l706
  8023                           	
  8024  0A38                     l10141:	
  8025                           	line	79
  8026                           	
  8027  0A38                     l706:	
  8028  0A38  0008               	return
  8029                           	opt stack 0
  8030                           GLOBAL	__end_of_adc_read
  8031  0A39                     	__end_of_adc_read:
  8032 ;; =============== function _adc_read ends ============
  8033                           
  8034                           	signat	_adc_read,90
  8035                           	global	_isr1
  8036                           psect	text1242,local,class=CODE,delta=2
  8037                           global __ptext1242
  8038  05C6                     __ptext1242:
  8039                           
  8040 ;; *************** function _isr1 *****************
  8041 ;; Defined at:
  8042 ;;		line 93 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;		None               void
  8049 ;; Registers used:
  8050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8056 ;;      Params:         0       0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0
  8058 ;;      Temps:          6       0       0       0       0
  8059 ;;      Totals:         6       0       0       0       0
  8060 ;;Total ram usage:        6 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    2
  8063 ;; This function calls:
  8064 ;;		i1___lwmod
  8065 ;;		_ReadButtons
  8066 ;; This function is called by:
  8067 ;;		Interrupt level 1
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           psect	text1242
  8071                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  8072                           	line	93
  8073                           	global	__size_of_isr1
  8074  00D0                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  8075                           	
  8076  05C6                     _isr1:	
  8077                           	opt	stack 0
  8078                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8079                           psect	intentry,class=CODE,delta=2
  8080                           global __pintentry
  8081  0004                     __pintentry:
  8082                           global interrupt_function
  8083  0004                     interrupt_function:
  8084                           	global saved_w
  8085  007E                     	saved_w	set	btemp+0
  8086  0004  00FE               	movwf	saved_w
  8087  0005  0E03               	swapf	status,w
  8088  0006  00FA               	movwf	(??_isr1+2)
  8089  0007  0804               	movf	fsr0,w
  8090  0008  00FB               	movwf	(??_isr1+3)
  8091  0009  080A               	movf	pclath,w
  8092  000A  00FC               	movwf	(??_isr1+4)
  8093  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  8094  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  8095  000D  087F               	movf	btemp+1,w
  8096  000E  00FD               	movwf	(??_isr1+5)
  8097  000F  120A  118A  2DC6   	ljmp	_isr1
  8098                           psect	text1242
  8099                           	line	98
  8100                           	
  8101  05C6                     i1l11097:	
  8102                           ;Main.c: 98: if(TMR0IF)
  8103  05C6  1D0B               	btfss	(90/8),(90)&7
  8104  05C7  2DC9               	goto	u458_21
  8105  05C8  2DCA               	goto	u458_20
  8106  05C9                     u458_21:
  8107  05C9  2E4F               	goto	i1l11129
  8108  05CA                     u458_20:
  8109                           	line	100
  8110                           	
  8111  05CA                     i1l11099:	
  8112                           ;Main.c: 99: {
  8113                           ;Main.c: 100: TMR0IF = 0;
  8114  05CA  110B               	bcf	(90/8),(90)&7
  8115                           	line	101
  8116                           	
  8117  05CB                     i1l11101:	
  8118                           ;Main.c: 101: TMR0 = 100;
  8119  05CB  3064               	movlw	(064h)
  8120  05CC  0081               	movwf	(1)	;volatile
  8121                           	line	103
  8122                           ;Main.c: 103: RTC_Counter++;
  8123  05CD  3001               	movlw	low(01h)
  8124  05CE  07E8               	addwf	(_RTC_Counter),f	;volatile
  8125  05CF  1803               	skipnc
  8126  05D0  0AE9               	incf	(_RTC_Counter+1),f	;volatile
  8127  05D1  3000               	movlw	high(01h)
  8128  05D2  07E9               	addwf	(_RTC_Counter+1),f	;volatile
  8129                           	line	105
  8130                           	
  8131  05D3                     i1l11103:	
  8132                           ;Main.c: 105: RTC_FLAG_1MS = 1;
  8133  05D3  146F               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  8134                           	line	106
  8135                           	
  8136  05D4                     i1l11105:	
  8137                           ;Main.c: 106: if(RTC_Counter % 10 == 0)
  8138  05D4  300A               	movlw	low(0Ah)
  8139  05D5  00F2               	movwf	(?i1___lwmod)
  8140  05D6  3000               	movlw	high(0Ah)
  8141  05D7  00F3               	movwf	((?i1___lwmod))+1
  8142  05D8  0869               	movf	(_RTC_Counter+1),w	;volatile
  8143  05D9  01F5               	clrf	1+(?i1___lwmod)+02h
  8144  05DA  07F5               	addwf	1+(?i1___lwmod)+02h
  8145  05DB  0868               	movf	(_RTC_Counter),w	;volatile
  8146  05DC  01F4               	clrf	0+(?i1___lwmod)+02h
  8147  05DD  07F4               	addwf	0+(?i1___lwmod)+02h
  8148                           
  8149  05DE  120A  158A  23B3   	fcall	i1___lwmod
              120A  118A         
  8150  05E3  0873               	movf	((1+(?i1___lwmod))),w
  8151  05E4  0472               	iorwf	((0+(?i1___lwmod))),w
  8152  05E5  1D03               	skipz
  8153  05E6  2DE8               	goto	u459_21
  8154  05E7  2DE9               	goto	u459_20
  8155  05E8                     u459_21:
  8156  05E8  2DEB               	goto	i1l11109
  8157  05E9                     u459_20:
  8158                           	line	108
  8159                           	
  8160  05E9                     i1l11107:	
  8161                           ;Main.c: 107: {
  8162                           ;Main.c: 108: RTC_FLAG_10MS = 1;
  8163  05E9  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  8164  05EA  2DEB               	goto	i1l11109
  8165                           	line	111
  8166                           	
  8167  05EB                     i1l2201:	
  8168                           	line	112
  8169                           	
  8170  05EB                     i1l11109:	
  8171                           ;Main.c: 111: }
  8172                           ;Main.c: 112: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  8173  05EB  3032               	movlw	low(032h)
  8174  05EC  00F2               	movwf	(?i1___lwmod)
  8175  05ED  3000               	movlw	high(032h)
  8176  05EE  00F3               	movwf	((?i1___lwmod))+1
  8177  05EF  1283               	bcf	status, 5	;RP0=0, select bank0
  8178  05F0  1303               	bcf	status, 6	;RP1=0, select bank0
  8179  05F1  0869               	movf	(_RTC_Counter+1),w	;volatile
  8180  05F2  01F5               	clrf	1+(?i1___lwmod)+02h
  8181  05F3  07F5               	addwf	1+(?i1___lwmod)+02h
  8182  05F4  0868               	movf	(_RTC_Counter),w	;volatile
  8183  05F5  01F4               	clrf	0+(?i1___lwmod)+02h
  8184  05F6  07F4               	addwf	0+(?i1___lwmod)+02h
  8185                           
  8186  05F7  120A  158A  23B3   	fcall	i1___lwmod
              120A  118A         
  8187  05FC  0873               	movf	((1+(?i1___lwmod))),w
  8188  05FD  0472               	iorwf	((0+(?i1___lwmod))),w
  8189  05FE  1D03               	skipz
  8190  05FF  2E01               	goto	u460_21
  8191  0600  2E02               	goto	u460_20
  8192  0601                     u460_21:
  8193  0601  2E04               	goto	i1l11113
  8194  0602                     u460_20:
  8195                           	
  8196  0602                     i1l11111:	
  8197  0602  14F1               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  8198  0603  2E04               	goto	i1l11113
  8199                           	
  8200  0604                     i1l2202:	
  8201                           	line	113
  8202                           	
  8203  0604                     i1l11113:	
  8204                           ;Main.c: 113: if(RTC_Counter % 250 == 0)
  8205  0604  30FA               	movlw	low(0FAh)
  8206  0605  00F2               	movwf	(?i1___lwmod)
  8207  0606  3000               	movlw	high(0FAh)
  8208  0607  00F3               	movwf	((?i1___lwmod))+1
  8209  0608  1283               	bcf	status, 5	;RP0=0, select bank0
  8210  0609  1303               	bcf	status, 6	;RP1=0, select bank0
  8211  060A  0869               	movf	(_RTC_Counter+1),w	;volatile
  8212  060B  01F5               	clrf	1+(?i1___lwmod)+02h
  8213  060C  07F5               	addwf	1+(?i1___lwmod)+02h
  8214  060D  0868               	movf	(_RTC_Counter),w	;volatile
  8215  060E  01F4               	clrf	0+(?i1___lwmod)+02h
  8216  060F  07F4               	addwf	0+(?i1___lwmod)+02h
  8217                           
  8218  0610  120A  158A  23B3   	fcall	i1___lwmod
              120A  118A         
  8219  0615  0873               	movf	((1+(?i1___lwmod))),w
  8220  0616  0472               	iorwf	((0+(?i1___lwmod))),w
  8221  0617  1D03               	skipz
  8222  0618  2E1A               	goto	u461_21
  8223  0619  2E1B               	goto	u461_20
  8224  061A                     u461_21:
  8225  061A  2E1D               	goto	i1l11117
  8226  061B                     u461_20:
  8227                           	line	116
  8228                           	
  8229  061B                     i1l11115:	
  8230                           ;Main.c: 114: {
  8231                           ;Main.c: 116: RTC_FLAG_250MS = 1;
  8232  061B  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  8233  061C  2E1D               	goto	i1l11117
  8234                           	line	118
  8235                           	
  8236  061D                     i1l2203:	
  8237                           	line	119
  8238                           	
  8239  061D                     i1l11117:	
  8240                           ;Main.c: 118: }
  8241                           ;Main.c: 119: if(RTC_Counter % 500 == 0)
  8242  061D  30F4               	movlw	low(01F4h)
  8243  061E  00F2               	movwf	(?i1___lwmod)
  8244  061F  3001               	movlw	high(01F4h)
  8245  0620  00F3               	movwf	((?i1___lwmod))+1
  8246  0621  1283               	bcf	status, 5	;RP0=0, select bank0
  8247  0622  1303               	bcf	status, 6	;RP1=0, select bank0
  8248  0623  0869               	movf	(_RTC_Counter+1),w	;volatile
  8249  0624  01F5               	clrf	1+(?i1___lwmod)+02h
  8250  0625  07F5               	addwf	1+(?i1___lwmod)+02h
  8251  0626  0868               	movf	(_RTC_Counter),w	;volatile
  8252  0627  01F4               	clrf	0+(?i1___lwmod)+02h
  8253  0628  07F4               	addwf	0+(?i1___lwmod)+02h
  8254                           
  8255  0629  120A  158A  23B3   	fcall	i1___lwmod
              120A  118A         
  8256  062E  0873               	movf	((1+(?i1___lwmod))),w
  8257  062F  0472               	iorwf	((0+(?i1___lwmod))),w
  8258  0630  1D03               	skipz
  8259  0631  2E33               	goto	u462_21
  8260  0632  2E34               	goto	u462_20
  8261  0633                     u462_21:
  8262  0633  2E3C               	goto	i1l11125
  8263  0634                     u462_20:
  8264                           	line	121
  8265                           	
  8266  0634                     i1l11119:	
  8267                           ;Main.c: 120: {
  8268                           ;Main.c: 121: RTC_FLAG_500MS = 1;
  8269  0634  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  8270                           	line	122
  8271                           	
  8272  0635                     i1l11121:	
  8273                           ;Main.c: 122: RTC_Counter = 0;
  8274  0635  1283               	bcf	status, 5	;RP0=0, select bank0
  8275  0636  1303               	bcf	status, 6	;RP1=0, select bank0
  8276  0637  01E8               	clrf	(_RTC_Counter)	;volatile
  8277  0638  01E9               	clrf	(_RTC_Counter+1)	;volatile
  8278                           	line	123
  8279                           	
  8280  0639                     i1l11123:	
  8281                           ;Main.c: 123: RB0 ^= 0x01;
  8282  0639  3001               	movlw	1<<((48)&7)
  8283  063A  0686               	xorwf	((48)/8),f
  8284  063B  2E3C               	goto	i1l11125
  8285                           	line	125
  8286                           	
  8287  063C                     i1l2204:	
  8288                           	line	127
  8289                           	
  8290  063C                     i1l11125:	
  8291                           ;Main.c: 125: }
  8292                           ;Main.c: 127: if (buttonPressed == 0)
  8293  063C  1283               	bcf	status, 5	;RP0=0, select bank0
  8294  063D  1303               	bcf	status, 6	;RP1=0, select bank0
  8295  063E  08EC               	movf	(_buttonPressed),f
  8296  063F  1D03               	skipz	;volatile
  8297  0640  2E42               	goto	u463_21
  8298  0641  2E43               	goto	u463_20
  8299  0642                     u463_21:
  8300  0642  2E4F               	goto	i1l11129
  8301  0643                     u463_20:
  8302                           	line	129
  8303                           	
  8304  0643                     i1l11127:	
  8305                           ;Main.c: 128: {
  8306                           ;Main.c: 129: buttonPressed = ReadButtons();
  8307  0643  120A  158A  2318   	fcall	_ReadButtons
              120A  118A         
  8308  0648  00F8               	movwf	(??_isr1+0)+0
  8309  0649  0878               	movf	(??_isr1+0)+0,w
  8310  064A  1283               	bcf	status, 5	;RP0=0, select bank0
  8311  064B  1303               	bcf	status, 6	;RP1=0, select bank0
  8312  064C  00EC               	movwf	(_buttonPressed)	;volatile
  8313  064D  2E4F               	goto	i1l11129
  8314                           	line	130
  8315                           	
  8316  064E                     i1l2205:	
  8317  064E  2E4F               	goto	i1l11129
  8318                           	line	131
  8319                           	
  8320  064F                     i1l2200:	
  8321                           	line	134
  8322                           	
  8323  064F                     i1l11129:	
  8324                           ;Main.c: 130: }
  8325                           ;Main.c: 131: }
  8326                           ;Main.c: 134: if (RCIF)
  8327  064F  1E8C               	btfss	(101/8),(101)&7
  8328  0650  2E52               	goto	u464_21
  8329  0651  2E53               	goto	u464_20
  8330  0652                     u464_21:
  8331  0652  2E64               	goto	i1l11135
  8332  0653                     u464_20:
  8333                           	line	136
  8334                           	
  8335  0653                     i1l11131:	
  8336                           ;Main.c: 135: {
  8337                           ;Main.c: 136: SER_RC_FLAG = 1;
  8338  0653  1671               	bsf	(_SER_RC_FLAG/8),(_SER_RC_FLAG)&7
  8339                           	line	137
  8340                           	
  8341  0654                     i1l11133:	
  8342                           ;Main.c: 137: RB1 ^= 0x01; DistHighByte = RCREG;
  8343  0654  3002               	movlw	1<<((49)&7)
  8344  0655  0686               	xorwf	((49)/8),f
  8345  0656  081A               	movf	(26),w	;volatile
  8346  0657  00F8               	movwf	(??_isr1+0)+0
  8347  0658  0878               	movf	(??_isr1+0)+0,w
  8348  0659  1683               	bsf	status, 5	;RP0=1, select bank1
  8349  065A  1303               	bcf	status, 6	;RP1=0, select bank1
  8350  065B  00CF               	movwf	(_DistHighByte)^080h	;volatile
  8351                           	line	139
  8352                           ;Main.c: 139: distTravelled = (int)DistHighByte ;
  8353  065C  084F               	movf	(_DistHighByte)^080h,w	;volatile
  8354  065D  00F8               	movwf	(??_isr1+0)+0
  8355  065E  01F9               	clrf	(??_isr1+0)+0+1
  8356  065F  0878               	movf	0+(??_isr1+0)+0,w
  8357  0660  00EC               	movwf	(_distTravelled)^080h	;volatile
  8358  0661  0879               	movf	1+(??_isr1+0)+0,w
  8359  0662  00ED               	movwf	(_distTravelled+1)^080h	;volatile
  8360  0663  2E64               	goto	i1l11135
  8361                           	line	145
  8362                           	
  8363  0664                     i1l2206:	
  8364                           	
  8365  0664                     i1l11135:	
  8366                           ;Main.c: 145: } if (TXIF && TXIE)
  8367  0664  1283               	bcf	status, 5	;RP0=0, select bank0
  8368  0665  1E0C               	btfss	(100/8),(100)&7
  8369  0666  2E68               	goto	u465_21
  8370  0667  2E69               	goto	u465_20
  8371  0668                     u465_21:
  8372  0668  2E8A               	goto	i1l2209
  8373  0669                     u465_20:
  8374                           	
  8375  0669                     i1l11137:	
  8376  0669  1683               	bsf	status, 5	;RP0=1, select bank1
  8377  066A  1303               	bcf	status, 6	;RP1=0, select bank1
  8378  066B  1E0C               	btfss	(1124/8)^080h,(1124)&7
  8379  066C  2E6E               	goto	u466_21
  8380  066D  2E6F               	goto	u466_20
  8381  066E                     u466_21:
  8382  066E  2E8A               	goto	i1l2209
  8383  066F                     u466_20:
  8384                           	line	147
  8385                           	
  8386  066F                     i1l11139:	
  8387                           ;Main.c: 147: { TXREG = txfifo[txoptr]; ++txoptr; txoptr &= (16-1); if (txoptr==txiptr)
  8388  066F  1283               	bcf	status, 5	;RP0=0, select bank0
  8389  0670  1303               	bcf	status, 6	;RP1=0, select bank0
  8390  0671  086E               	movf	(_txoptr),w
  8391  0672  3EB0               	addlw	_txfifo&0ffh
  8392  0673  0084               	movwf	fsr0
  8393  0674  1383               	bcf	status, 7	;select IRP bank1
  8394  0675  0800               	movf	indf,w
  8395  0676  0099               	movwf	(25)	;volatile
  8396                           	
  8397  0677                     i1l11141:	
  8398  0677  3001               	movlw	(01h)
  8399  0678  00F8               	movwf	(??_isr1+0)+0
  8400  0679  0878               	movf	(??_isr1+0)+0,w
  8401  067A  07EE               	addwf	(_txoptr),f	;volatile
  8402                           	
  8403  067B                     i1l11143:	
  8404  067B  300F               	movlw	(0Fh)
  8405  067C  00F8               	movwf	(??_isr1+0)+0
  8406  067D  0878               	movf	(??_isr1+0)+0,w
  8407  067E  05EE               	andwf	(_txoptr),f	;volatile
  8408                           	
  8409  067F                     i1l11145:	
  8410  067F  086E               	movf	(_txoptr),w	;volatile
  8411  0680  066D               	xorwf	(_txiptr),w	;volatile
  8412  0681  1D03               	skipz
  8413  0682  2E84               	goto	u467_21
  8414  0683  2E85               	goto	u467_20
  8415  0684                     u467_21:
  8416  0684  2E8A               	goto	i1l2209
  8417  0685                     u467_20:
  8418                           	line	152
  8419                           	
  8420  0685                     i1l11147:	
  8421                           ;Main.c: 152: TXIE = 0;
  8422  0685  1683               	bsf	status, 5	;RP0=1, select bank1
  8423  0686  1303               	bcf	status, 6	;RP1=0, select bank1
  8424  0687  120C               	bcf	(1124/8)^080h,(1124)&7
  8425  0688  2E8A               	goto	i1l2209
  8426                           	
  8427  0689                     i1l2208:	
  8428  0689  2E8A               	goto	i1l2209
  8429                           	line	154
  8430                           	
  8431  068A                     i1l2207:	
  8432                           	
  8433  068A                     i1l2209:	
  8434  068A  087D               	movf	(??_isr1+5),w
  8435  068B  1283               	bcf	status, 5	;RP0=0, select bank0
  8436  068C  00FF               	movwf	btemp+1
  8437  068D  087C               	movf	(??_isr1+4),w
  8438  068E  008A               	movwf	pclath
  8439  068F  087B               	movf	(??_isr1+3),w
  8440  0690  0084               	movwf	fsr0
  8441  0691  0E7A               	swapf	(??_isr1+2)^0FFFFFF80h,w
  8442  0692  0083               	movwf	status
  8443  0693  0EFE               	swapf	saved_w,f
  8444  0694  0E7E               	swapf	saved_w,w
  8445  0695  0009               	retfie
  8446                           	opt stack 0
  8447                           GLOBAL	__end_of_isr1
  8448  0696                     	__end_of_isr1:
  8449 ;; =============== function _isr1 ends ============
  8450                           
  8451                           	signat	_isr1,88
  8452                           	global	_ReadButtons
  8453                           psect	text1243,local,class=CODE,delta=2
  8454                           global __ptext1243
  8455  0B18                     __ptext1243:
  8456                           
  8457 ;; *************** function _ReadButtons *****************
  8458 ;; Defined at:
  8459 ;;		line 141 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;		None
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;		None
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  1    wreg      unsigned char 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, status,0, pclath, cstack
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8473 ;;      Params:         0       0       0       0       0
  8474 ;;      Locals:         0       0       0       0       0
  8475 ;;      Temps:          0       0       0       0       0
  8476 ;;      Totals:         0       0       0       0       0
  8477 ;;Total ram usage:        0 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; Hardware stack levels required when called:    1
  8480 ;; This function calls:
  8481 ;;		_Debounce
  8482 ;; This function is called by:
  8483 ;;		_isr1
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           psect	text1243
  8487                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  8488                           	line	141
  8489                           	global	__size_of_ReadButtons
  8490  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  8491                           	
  8492  0B18                     _ReadButtons:	
  8493                           	opt	stack 0
  8494                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  8495                           	line	142
  8496                           	
  8497  0B18                     i1l11149:	
  8498                           ;HMI.c: 142: Debounce();
  8499  0B18  120A  158A  2768   	fcall	_Debounce
              120A  158A         
  8500                           	line	144
  8501                           	
  8502  0B1D                     i1l11151:	
  8503                           ;HMI.c: 144: if(UpPressed)
  8504  0B1D  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
  8505  0B1E  2B20               	goto	u468_21
  8506  0B1F  2B21               	goto	u468_20
  8507  0B20                     u468_21:
  8508  0B20  2B25               	goto	i1l5243
  8509  0B21                     u468_20:
  8510                           	line	146
  8511                           	
  8512  0B21                     i1l11153:	
  8513                           ;HMI.c: 145: {
  8514                           ;HMI.c: 146: UpPressed = 0;
  8515  0B21  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
  8516                           	line	147
  8517                           	
  8518  0B22                     i1l11155:	
  8519                           ;HMI.c: 147: return 1;
  8520  0B22  3001               	movlw	(01h)
  8521  0B23  2B47               	goto	i1l5244
  8522                           	
  8523  0B24                     i1l11157:	
  8524  0B24  2B47               	goto	i1l5244
  8525                           	line	149
  8526                           	
  8527  0B25                     i1l5243:	
  8528                           	line	151
  8529                           ;HMI.c: 149: }
  8530                           ;HMI.c: 151: if(DownPressed)
  8531  0B25  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
  8532  0B26  2B28               	goto	u469_21
  8533  0B27  2B29               	goto	u469_20
  8534  0B28                     u469_21:
  8535  0B28  2B2D               	goto	i1l5245
  8536  0B29                     u469_20:
  8537                           	line	153
  8538                           	
  8539  0B29                     i1l11159:	
  8540                           ;HMI.c: 152: {
  8541                           ;HMI.c: 153: DownPressed = 0;
  8542  0B29  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
  8543                           	line	154
  8544                           	
  8545  0B2A                     i1l11161:	
  8546                           ;HMI.c: 154: return 2;
  8547  0B2A  3002               	movlw	(02h)
  8548  0B2B  2B47               	goto	i1l5244
  8549                           	
  8550  0B2C                     i1l11163:	
  8551  0B2C  2B47               	goto	i1l5244
  8552                           	line	156
  8553                           	
  8554  0B2D                     i1l5245:	
  8555                           	line	157
  8556                           ;HMI.c: 156: }
  8557                           ;HMI.c: 157: if(LeftPressed)
  8558  0B2D  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  8559  0B2E  2B30               	goto	u470_21
  8560  0B2F  2B31               	goto	u470_20
  8561  0B30                     u470_21:
  8562  0B30  2B35               	goto	i1l5246
  8563  0B31                     u470_20:
  8564                           	line	159
  8565                           	
  8566  0B31                     i1l11165:	
  8567                           ;HMI.c: 158: {
  8568                           ;HMI.c: 159: LeftPressed = 0;
  8569  0B31  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  8570                           	line	160
  8571                           	
  8572  0B32                     i1l11167:	
  8573                           ;HMI.c: 160: return 3;
  8574  0B32  3003               	movlw	(03h)
  8575  0B33  2B47               	goto	i1l5244
  8576                           	
  8577  0B34                     i1l11169:	
  8578  0B34  2B47               	goto	i1l5244
  8579                           	line	162
  8580                           	
  8581  0B35                     i1l5246:	
  8582                           	line	163
  8583                           ;HMI.c: 162: }
  8584                           ;HMI.c: 163: if(RightPressed)
  8585  0B35  1D71               	btfss	(_RightPressed/8),(_RightPressed)&7
  8586  0B36  2B38               	goto	u471_21
  8587  0B37  2B39               	goto	u471_20
  8588  0B38                     u471_21:
  8589  0B38  2B3D               	goto	i1l5247
  8590  0B39                     u471_20:
  8591                           	line	165
  8592                           	
  8593  0B39                     i1l11171:	
  8594                           ;HMI.c: 164: {
  8595                           ;HMI.c: 165: RightPressed = 0;
  8596  0B39  1171               	bcf	(_RightPressed/8),(_RightPressed)&7
  8597                           	line	166
  8598                           	
  8599  0B3A                     i1l11173:	
  8600                           ;HMI.c: 166: return 4;
  8601  0B3A  3004               	movlw	(04h)
  8602  0B3B  2B47               	goto	i1l5244
  8603                           	
  8604  0B3C                     i1l11175:	
  8605  0B3C  2B47               	goto	i1l5244
  8606                           	line	168
  8607                           	
  8608  0B3D                     i1l5247:	
  8609                           	line	170
  8610                           ;HMI.c: 168: }
  8611                           ;HMI.c: 170: if(CenterPressed)
  8612  0B3D  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  8613  0B3E  2B40               	goto	u472_21
  8614  0B3F  2B41               	goto	u472_20
  8615  0B40                     u472_21:
  8616  0B40  2B45               	goto	i1l11183
  8617  0B41                     u472_20:
  8618                           	line	172
  8619                           	
  8620  0B41                     i1l11177:	
  8621                           ;HMI.c: 171: {
  8622                           ;HMI.c: 172: CenterPressed = 0;
  8623  0B41  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  8624                           	line	173
  8625                           	
  8626  0B42                     i1l11179:	
  8627                           ;HMI.c: 173: return 5;
  8628  0B42  3005               	movlw	(05h)
  8629  0B43  2B47               	goto	i1l5244
  8630                           	
  8631  0B44                     i1l11181:	
  8632  0B44  2B47               	goto	i1l5244
  8633                           	line	175
  8634                           	
  8635  0B45                     i1l5248:	
  8636                           	line	176
  8637                           	
  8638  0B45                     i1l11183:	
  8639                           ;HMI.c: 175: }
  8640                           ;HMI.c: 176: return 0;
  8641  0B45  3000               	movlw	(0)
  8642  0B46  2B47               	goto	i1l5244
  8643                           	
  8644  0B47                     i1l11185:	
  8645                           	line	177
  8646                           	
  8647  0B47                     i1l5244:	
  8648  0B47  0008               	return
  8649                           	opt stack 0
  8650                           GLOBAL	__end_of_ReadButtons
  8651  0B48                     	__end_of_ReadButtons:
  8652 ;; =============== function _ReadButtons ends ============
  8653                           
  8654                           	signat	_ReadButtons,89
  8655                           	global	i1___lwmod
  8656                           psect	text1244,local,class=CODE,delta=2
  8657                           global __ptext1244
  8658  0BB3                     __ptext1244:
  8659                           
  8660 ;; *************** function i1___lwmod *****************
  8661 ;; Defined at:
  8662 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;  __lwmod         2    0[COMMON] unsigned int 
  8665 ;;  __lwmod         2    2[COMMON] unsigned int 
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;  __lwmod         1    5[COMMON] unsigned char 
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  2    0[COMMON] unsigned int 
  8670 ;; Registers used:
  8671 ;;		wreg, status,2, status,0
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8677 ;;      Params:         4       0       0       0       0
  8678 ;;      Locals:         1       0       0       0       0
  8679 ;;      Temps:          1       0       0       0       0
  8680 ;;      Totals:         6       0       0       0       0
  8681 ;;Total ram usage:        6 bytes
  8682 ;; Hardware stack levels used:    1
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_isr1
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           psect	text1244
  8690                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8691                           	line	5
  8692                           	global	__size_ofi1___lwmod
  8693  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
  8694                           	
  8695  0BB3                     i1___lwmod:	
  8696                           	opt	stack 1
  8697                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8698                           	line	8
  8699                           	
  8700  0BB3                     i1l11285:	
  8701  0BB3  0873               	movf	(i1___lwmod@divisor+1),w
  8702  0BB4  0472               	iorwf	(i1___lwmod@divisor),w
  8703  0BB5  1903               	skipnz
  8704  0BB6  2BB8               	goto	u491_21
  8705  0BB7  2BB9               	goto	u491_20
  8706  0BB8                     u491_21:
  8707  0BB8  2BEF               	goto	i1l11303
  8708  0BB9                     u491_20:
  8709                           	line	9
  8710                           	
  8711  0BB9                     i1l11287:	
  8712  0BB9  01F7               	clrf	(i1___lwmod@counter)
  8713  0BBA  1403               	bsf	status,0
  8714  0BBB  0DF7               	rlf	(i1___lwmod@counter),f
  8715                           	line	10
  8716  0BBC  2BC9               	goto	i1l11293
  8717                           	
  8718  0BBD                     i1l7465:	
  8719                           	line	11
  8720                           	
  8721  0BBD                     i1l11289:	
  8722  0BBD  3001               	movlw	01h
  8723                           	
  8724  0BBE                     u492_25:
  8725  0BBE  1003               	clrc
  8726  0BBF  0DF2               	rlf	(i1___lwmod@divisor),f
  8727  0BC0  0DF3               	rlf	(i1___lwmod@divisor+1),f
  8728  0BC1  3EFF               	addlw	-1
  8729  0BC2  1D03               	skipz
  8730  0BC3  2BBE               	goto	u492_25
  8731                           	line	12
  8732                           	
  8733  0BC4                     i1l11291:	
  8734  0BC4  3001               	movlw	(01h)
  8735  0BC5  00F6               	movwf	(??i1___lwmod+0)+0
  8736  0BC6  0876               	movf	(??i1___lwmod+0)+0,w
  8737  0BC7  07F7               	addwf	(i1___lwmod@counter),f
  8738  0BC8  2BC9               	goto	i1l11293
  8739                           	line	13
  8740                           	
  8741  0BC9                     i1l7464:	
  8742                           	line	10
  8743                           	
  8744  0BC9                     i1l11293:	
  8745  0BC9  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
  8746  0BCA  2BCC               	goto	u493_21
  8747  0BCB  2BCD               	goto	u493_20
  8748  0BCC                     u493_21:
  8749  0BCC  2BBD               	goto	i1l11289
  8750  0BCD                     u493_20:
  8751  0BCD  2BCF               	goto	i1l11295
  8752                           	
  8753  0BCE                     i1l7466:	
  8754  0BCE  2BCF               	goto	i1l11295
  8755                           	line	14
  8756                           	
  8757  0BCF                     i1l7467:	
  8758                           	line	15
  8759                           	
  8760  0BCF                     i1l11295:	
  8761  0BCF  0873               	movf	(i1___lwmod@divisor+1),w
  8762  0BD0  0275               	subwf	(i1___lwmod@dividend+1),w
  8763  0BD1  1D03               	skipz
  8764  0BD2  2BD5               	goto	u494_25
  8765  0BD3  0872               	movf	(i1___lwmod@divisor),w
  8766  0BD4  0274               	subwf	(i1___lwmod@dividend),w
  8767  0BD5                     u494_25:
  8768  0BD5  1C03               	skipc
  8769  0BD6  2BD8               	goto	u494_21
  8770  0BD7  2BD9               	goto	u494_20
  8771  0BD8                     u494_21:
  8772  0BD8  2BE0               	goto	i1l11299
  8773  0BD9                     u494_20:
  8774                           	line	16
  8775                           	
  8776  0BD9                     i1l11297:	
  8777  0BD9  0872               	movf	(i1___lwmod@divisor),w
  8778  0BDA  02F4               	subwf	(i1___lwmod@dividend),f
  8779  0BDB  0873               	movf	(i1___lwmod@divisor+1),w
  8780  0BDC  1C03               	skipc
  8781  0BDD  03F5               	decf	(i1___lwmod@dividend+1),f
  8782  0BDE  02F5               	subwf	(i1___lwmod@dividend+1),f
  8783  0BDF  2BE0               	goto	i1l11299
  8784                           	
  8785  0BE0                     i1l7468:	
  8786                           	line	17
  8787                           	
  8788  0BE0                     i1l11299:	
  8789  0BE0  3001               	movlw	01h
  8790                           	
  8791  0BE1                     u495_25:
  8792  0BE1  1003               	clrc
  8793  0BE2  0CF3               	rrf	(i1___lwmod@divisor+1),f
  8794  0BE3  0CF2               	rrf	(i1___lwmod@divisor),f
  8795  0BE4  3EFF               	addlw	-1
  8796  0BE5  1D03               	skipz
  8797  0BE6  2BE1               	goto	u495_25
  8798                           	line	18
  8799                           	
  8800  0BE7                     i1l11301:	
  8801  0BE7  3001               	movlw	low(01h)
  8802  0BE8  02F7               	subwf	(i1___lwmod@counter),f
  8803  0BE9  1D03               	btfss	status,2
  8804  0BEA  2BEC               	goto	u496_21
  8805  0BEB  2BED               	goto	u496_20
  8806  0BEC                     u496_21:
  8807  0BEC  2BCF               	goto	i1l11295
  8808  0BED                     u496_20:
  8809  0BED  2BEF               	goto	i1l11303
  8810                           	
  8811  0BEE                     i1l7469:	
  8812  0BEE  2BEF               	goto	i1l11303
  8813                           	line	19
  8814                           	
  8815  0BEF                     i1l7463:	
  8816                           	line	20
  8817                           	
  8818  0BEF                     i1l11303:	
  8819  0BEF  0875               	movf	(i1___lwmod@dividend+1),w
  8820  0BF0  01F3               	clrf	(?i1___lwmod+1)
  8821  0BF1  07F3               	addwf	(?i1___lwmod+1)
  8822  0BF2  0874               	movf	(i1___lwmod@dividend),w
  8823  0BF3  01F2               	clrf	(?i1___lwmod)
  8824  0BF4  07F2               	addwf	(?i1___lwmod)
  8825                           
  8826  0BF5  2BF6               	goto	i1l7470
  8827                           	
  8828  0BF6                     i1l11305:	
  8829                           	line	21
  8830                           	
  8831  0BF6                     i1l7470:	
  8832  0BF6  0008               	return
  8833                           	opt stack 0
  8834                           GLOBAL	__end_ofi1___lwmod
  8835  0BF7                     	__end_ofi1___lwmod:
  8836 ;; =============== function i1___lwmod ends ============
  8837                           
  8838                           	signat	i1___lwmod,90
  8839                           	global	_Debounce
  8840                           psect	text1245,local,class=CODE,delta=2
  8841                           global __ptext1245
  8842  0F68                     __ptext1245:
  8843                           
  8844 ;; *************** function _Debounce *****************
  8845 ;; Defined at:
  8846 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;		None
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;		None               void
  8853 ;; Registers used:
  8854 ;;		wreg, status,2, status,0
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8860 ;;      Params:         0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0
  8862 ;;      Temps:          1       0       0       0       0
  8863 ;;      Totals:         1       0       0       0       0
  8864 ;;Total ram usage:        1 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; This function calls:
  8867 ;;		Nothing
  8868 ;; This function is called by:
  8869 ;;		_ReadButtons
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           psect	text1245
  8873                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  8874                           	line	61
  8875                           	global	__size_of_Debounce
  8876  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  8877                           	
  8878  0F68                     _Debounce:	
  8879                           	opt	stack 0
  8880                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  8881                           	line	63
  8882                           	
  8883  0F68                     i1l11243:	
  8884                           ;HMI.c: 63: if(!RB2)
  8885  0F68  1283               	bcf	status, 5	;RP0=0, select bank0
  8886  0F69  1303               	bcf	status, 6	;RP1=0, select bank0
  8887  0F6A  1906               	btfsc	(50/8),(50)&7
  8888  0F6B  2F6D               	goto	u476_21
  8889  0F6C  2F6E               	goto	u476_20
  8890  0F6D                     u476_21:
  8891  0F6D  2F82               	goto	i1l5225
  8892  0F6E                     u476_20:
  8893                           	line	65
  8894                           	
  8895  0F6E                     i1l11245:	
  8896                           ;HMI.c: 64: {
  8897                           ;HMI.c: 65: UpDebounceCount++;
  8898  0F6E  3001               	movlw	(01h)
  8899  0F6F  00F2               	movwf	(??_Debounce+0)+0
  8900  0F70  0872               	movf	(??_Debounce+0)+0,w
  8901  0F71  1683               	bsf	status, 5	;RP0=1, select bank1
  8902  0F72  1303               	bcf	status, 6	;RP1=0, select bank1
  8903  0F73  07D5               	addwf	(_UpDebounceCount)^080h,f	;volatile
  8904                           	line	66
  8905                           	
  8906  0F74                     i1l11247:	
  8907                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  8908  0F74  300A               	movlw	(0Ah)
  8909  0F75  0255               	subwf	(_UpDebounceCount)^080h,w	;volatile
  8910  0F76  1C03               	skipc
  8911  0F77  2F79               	goto	u477_21
  8912  0F78  2F7A               	goto	u477_20
  8913  0F79                     u477_21:
  8914  0F79  2F86               	goto	i1l5227
  8915  0F7A                     u477_20:
  8916                           	
  8917  0F7A                     i1l11249:	
  8918  0F7A  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
  8919  0F7B  2F7D               	goto	u478_21
  8920  0F7C  2F7E               	goto	u478_20
  8921  0F7D                     u478_21:
  8922  0F7D  2F86               	goto	i1l5227
  8923  0F7E                     u478_20:
  8924                           	line	68
  8925                           	
  8926  0F7E                     i1l11251:	
  8927                           ;HMI.c: 67: {
  8928                           ;HMI.c: 68: UpPressed = 1;
  8929  0F7E  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
  8930                           	line	69
  8931                           ;HMI.c: 69: UpReleased = 0;
  8932  0F7F  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
  8933  0F80  2F86               	goto	i1l5227
  8934                           	line	70
  8935                           	
  8936  0F81                     i1l5226:	
  8937                           	line	71
  8938                           ;HMI.c: 70: }
  8939                           ;HMI.c: 71: }
  8940  0F81  2F86               	goto	i1l5227
  8941                           	line	72
  8942                           	
  8943  0F82                     i1l5225:	
  8944                           	line	74
  8945                           ;HMI.c: 72: else
  8946                           ;HMI.c: 73: {
  8947                           ;HMI.c: 74: UpDebounceCount = 0;
  8948  0F82  1683               	bsf	status, 5	;RP0=1, select bank1
  8949  0F83  1303               	bcf	status, 6	;RP1=0, select bank1
  8950  0F84  01D5               	clrf	(_UpDebounceCount)^080h	;volatile
  8951                           	line	75
  8952                           ;HMI.c: 75: UpReleased = 1;
  8953  0F85  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
  8954                           	line	76
  8955                           	
  8956  0F86                     i1l5227:	
  8957                           	line	79
  8958                           ;HMI.c: 76: }
  8959                           ;HMI.c: 79: if(!RB3)
  8960  0F86  1283               	bcf	status, 5	;RP0=0, select bank0
  8961  0F87  1303               	bcf	status, 6	;RP1=0, select bank0
  8962  0F88  1986               	btfsc	(51/8),(51)&7
  8963  0F89  2F8B               	goto	u479_21
  8964  0F8A  2F8C               	goto	u479_20
  8965  0F8B                     u479_21:
  8966  0F8B  2FA0               	goto	i1l5228
  8967  0F8C                     u479_20:
  8968                           	line	81
  8969                           	
  8970  0F8C                     i1l11253:	
  8971                           ;HMI.c: 80: {
  8972                           ;HMI.c: 81: DownDebounceCount++;
  8973  0F8C  3001               	movlw	(01h)
  8974  0F8D  00F2               	movwf	(??_Debounce+0)+0
  8975  0F8E  0872               	movf	(??_Debounce+0)+0,w
  8976  0F8F  1683               	bsf	status, 5	;RP0=1, select bank1
  8977  0F90  1303               	bcf	status, 6	;RP1=0, select bank1
  8978  0F91  07D1               	addwf	(_DownDebounceCount)^080h,f	;volatile
  8979                           	line	82
  8980                           	
  8981  0F92                     i1l11255:	
  8982                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  8983  0F92  300A               	movlw	(0Ah)
  8984  0F93  0251               	subwf	(_DownDebounceCount)^080h,w	;volatile
  8985  0F94  1C03               	skipc
  8986  0F95  2F97               	goto	u480_21
  8987  0F96  2F98               	goto	u480_20
  8988  0F97                     u480_21:
  8989  0F97  2FA4               	goto	i1l5230
  8990  0F98                     u480_20:
  8991                           	
  8992  0F98                     i1l11257:	
  8993  0F98  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
  8994  0F99  2F9B               	goto	u481_21
  8995  0F9A  2F9C               	goto	u481_20
  8996  0F9B                     u481_21:
  8997  0F9B  2FA4               	goto	i1l5230
  8998  0F9C                     u481_20:
  8999                           	line	84
  9000                           	
  9001  0F9C                     i1l11259:	
  9002                           ;HMI.c: 83: {
  9003                           ;HMI.c: 84: DownPressed = 1;
  9004  0F9C  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
  9005                           	line	85
  9006                           ;HMI.c: 85: DownReleased = 0;
  9007  0F9D  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
  9008  0F9E  2FA4               	goto	i1l5230
  9009                           	line	86
  9010                           	
  9011  0F9F                     i1l5229:	
  9012                           	line	87
  9013                           ;HMI.c: 86: }
  9014                           ;HMI.c: 87: }
  9015  0F9F  2FA4               	goto	i1l5230
  9016                           	line	88
  9017                           	
  9018  0FA0                     i1l5228:	
  9019                           	line	90
  9020                           ;HMI.c: 88: else
  9021                           ;HMI.c: 89: {
  9022                           ;HMI.c: 90: DownDebounceCount = 0;
  9023  0FA0  1683               	bsf	status, 5	;RP0=1, select bank1
  9024  0FA1  1303               	bcf	status, 6	;RP1=0, select bank1
  9025  0FA2  01D1               	clrf	(_DownDebounceCount)^080h	;volatile
  9026                           	line	91
  9027                           ;HMI.c: 91: DownReleased = 1;
  9028  0FA3  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
  9029                           	line	92
  9030                           	
  9031  0FA4                     i1l5230:	
  9032                           	line	94
  9033                           ;HMI.c: 92: }
  9034                           ;HMI.c: 94: if(!RB4)
  9035  0FA4  1283               	bcf	status, 5	;RP0=0, select bank0
  9036  0FA5  1303               	bcf	status, 6	;RP1=0, select bank0
  9037  0FA6  1A06               	btfsc	(52/8),(52)&7
  9038  0FA7  2FA9               	goto	u482_21
  9039  0FA8  2FAA               	goto	u482_20
  9040  0FA9                     u482_21:
  9041  0FA9  2FBE               	goto	i1l5231
  9042  0FAA                     u482_20:
  9043                           	line	96
  9044                           	
  9045  0FAA                     i1l11261:	
  9046                           ;HMI.c: 95: {
  9047                           ;HMI.c: 96: LeftDebounceCount++;
  9048  0FAA  3001               	movlw	(01h)
  9049  0FAB  00F2               	movwf	(??_Debounce+0)+0
  9050  0FAC  0872               	movf	(??_Debounce+0)+0,w
  9051  0FAD  1683               	bsf	status, 5	;RP0=1, select bank1
  9052  0FAE  1303               	bcf	status, 6	;RP1=0, select bank1
  9053  0FAF  07D2               	addwf	(_LeftDebounceCount)^080h,f	;volatile
  9054                           	line	97
  9055                           	
  9056  0FB0                     i1l11263:	
  9057                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  9058  0FB0  300A               	movlw	(0Ah)
  9059  0FB1  0252               	subwf	(_LeftDebounceCount)^080h,w	;volatile
  9060  0FB2  1C03               	skipc
  9061  0FB3  2FB5               	goto	u483_21
  9062  0FB4  2FB6               	goto	u483_20
  9063  0FB5                     u483_21:
  9064  0FB5  2FC2               	goto	i1l5233
  9065  0FB6                     u483_20:
  9066                           	
  9067  0FB6                     i1l11265:	
  9068  0FB6  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  9069  0FB7  2FB9               	goto	u484_21
  9070  0FB8  2FBA               	goto	u484_20
  9071  0FB9                     u484_21:
  9072  0FB9  2FC2               	goto	i1l5233
  9073  0FBA                     u484_20:
  9074                           	line	99
  9075                           	
  9076  0FBA                     i1l11267:	
  9077                           ;HMI.c: 98: {
  9078                           ;HMI.c: 99: LeftPressed = 1;
  9079  0FBA  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  9080                           	line	100
  9081                           ;HMI.c: 100: LeftReleased = 0;
  9082  0FBB  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  9083  0FBC  2FC2               	goto	i1l5233
  9084                           	line	101
  9085                           	
  9086  0FBD                     i1l5232:	
  9087                           	line	102
  9088                           ;HMI.c: 101: }
  9089                           ;HMI.c: 102: }
  9090  0FBD  2FC2               	goto	i1l5233
  9091                           	line	103
  9092                           	
  9093  0FBE                     i1l5231:	
  9094                           	line	105
  9095                           ;HMI.c: 103: else
  9096                           ;HMI.c: 104: {
  9097                           ;HMI.c: 105: LeftDebounceCount = 0;
  9098  0FBE  1683               	bsf	status, 5	;RP0=1, select bank1
  9099  0FBF  1303               	bcf	status, 6	;RP1=0, select bank1
  9100  0FC0  01D2               	clrf	(_LeftDebounceCount)^080h	;volatile
  9101                           	line	106
  9102                           ;HMI.c: 106: LeftReleased = 1;
  9103  0FC1  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  9104                           	line	107
  9105                           	
  9106  0FC2                     i1l5233:	
  9107                           	line	109
  9108                           ;HMI.c: 107: }
  9109                           ;HMI.c: 109: if(!RB5)
  9110  0FC2  1283               	bcf	status, 5	;RP0=0, select bank0
  9111  0FC3  1303               	bcf	status, 6	;RP1=0, select bank0
  9112  0FC4  1A86               	btfsc	(53/8),(53)&7
  9113  0FC5  2FC7               	goto	u485_21
  9114  0FC6  2FC8               	goto	u485_20
  9115  0FC7                     u485_21:
  9116  0FC7  2FDC               	goto	i1l5234
  9117  0FC8                     u485_20:
  9118                           	line	111
  9119                           	
  9120  0FC8                     i1l11269:	
  9121                           ;HMI.c: 110: {
  9122                           ;HMI.c: 111: RightDebounceCount++;
  9123  0FC8  3001               	movlw	(01h)
  9124  0FC9  00F2               	movwf	(??_Debounce+0)+0
  9125  0FCA  0872               	movf	(??_Debounce+0)+0,w
  9126  0FCB  1683               	bsf	status, 5	;RP0=1, select bank1
  9127  0FCC  1303               	bcf	status, 6	;RP1=0, select bank1
  9128  0FCD  07D3               	addwf	(_RightDebounceCount)^080h,f	;volatile
  9129                           	line	112
  9130                           	
  9131  0FCE                     i1l11271:	
  9132                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  9133  0FCE  300A               	movlw	(0Ah)
  9134  0FCF  0253               	subwf	(_RightDebounceCount)^080h,w	;volatile
  9135  0FD0  1C03               	skipc
  9136  0FD1  2FD3               	goto	u486_21
  9137  0FD2  2FD4               	goto	u486_20
  9138  0FD3                     u486_21:
  9139  0FD3  2FE0               	goto	i1l5236
  9140  0FD4                     u486_20:
  9141                           	
  9142  0FD4                     i1l11273:	
  9143  0FD4  1DF1               	btfss	(_RightReleased/8),(_RightReleased)&7
  9144  0FD5  2FD7               	goto	u487_21
  9145  0FD6  2FD8               	goto	u487_20
  9146  0FD7                     u487_21:
  9147  0FD7  2FE0               	goto	i1l5236
  9148  0FD8                     u487_20:
  9149                           	line	114
  9150                           	
  9151  0FD8                     i1l11275:	
  9152                           ;HMI.c: 113: {
  9153                           ;HMI.c: 114: RightPressed = 1;
  9154  0FD8  1571               	bsf	(_RightPressed/8),(_RightPressed)&7
  9155                           	line	115
  9156                           ;HMI.c: 115: RightReleased = 0;
  9157  0FD9  11F1               	bcf	(_RightReleased/8),(_RightReleased)&7
  9158  0FDA  2FE0               	goto	i1l5236
  9159                           	line	116
  9160                           	
  9161  0FDB                     i1l5235:	
  9162                           	line	117
  9163                           ;HMI.c: 116: }
  9164                           ;HMI.c: 117: }
  9165  0FDB  2FE0               	goto	i1l5236
  9166                           	line	118
  9167                           	
  9168  0FDC                     i1l5234:	
  9169                           	line	120
  9170                           ;HMI.c: 118: else
  9171                           ;HMI.c: 119: {
  9172                           ;HMI.c: 120: RightDebounceCount = 0;
  9173  0FDC  1683               	bsf	status, 5	;RP0=1, select bank1
  9174  0FDD  1303               	bcf	status, 6	;RP1=0, select bank1
  9175  0FDE  01D3               	clrf	(_RightDebounceCount)^080h	;volatile
  9176                           	line	121
  9177                           ;HMI.c: 121: RightReleased = 1;
  9178  0FDF  15F1               	bsf	(_RightReleased/8),(_RightReleased)&7
  9179                           	line	122
  9180                           	
  9181  0FE0                     i1l5236:	
  9182                           	line	124
  9183                           ;HMI.c: 122: }
  9184                           ;HMI.c: 124: if(!RB6)
  9185  0FE0  1283               	bcf	status, 5	;RP0=0, select bank0
  9186  0FE1  1303               	bcf	status, 6	;RP1=0, select bank0
  9187  0FE2  1B06               	btfsc	(54/8),(54)&7
  9188  0FE3  2FE5               	goto	u488_21
  9189  0FE4  2FE6               	goto	u488_20
  9190  0FE5                     u488_21:
  9191  0FE5  2FFA               	goto	i1l5237
  9192  0FE6                     u488_20:
  9193                           	line	126
  9194                           	
  9195  0FE6                     i1l11277:	
  9196                           ;HMI.c: 125: {
  9197                           ;HMI.c: 126: CenterDebounceCount++;
  9198  0FE6  3001               	movlw	(01h)
  9199  0FE7  00F2               	movwf	(??_Debounce+0)+0
  9200  0FE8  0872               	movf	(??_Debounce+0)+0,w
  9201  0FE9  1683               	bsf	status, 5	;RP0=1, select bank1
  9202  0FEA  1303               	bcf	status, 6	;RP1=0, select bank1
  9203  0FEB  07CE               	addwf	(_CenterDebounceCount)^080h,f	;volatile
  9204                           	line	127
  9205                           	
  9206  0FEC                     i1l11279:	
  9207                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  9208  0FEC  300A               	movlw	(0Ah)
  9209  0FED  024E               	subwf	(_CenterDebounceCount)^080h,w	;volatile
  9210  0FEE  1C03               	skipc
  9211  0FEF  2FF1               	goto	u489_21
  9212  0FF0  2FF2               	goto	u489_20
  9213  0FF1                     u489_21:
  9214  0FF1  2FFF               	goto	i1l5240
  9215  0FF2                     u489_20:
  9216                           	
  9217  0FF2                     i1l11281:	
  9218  0FF2  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  9219  0FF3  2FF5               	goto	u490_21
  9220  0FF4  2FF6               	goto	u490_20
  9221  0FF5                     u490_21:
  9222  0FF5  2FFF               	goto	i1l5240
  9223  0FF6                     u490_20:
  9224                           	line	129
  9225                           	
  9226  0FF6                     i1l11283:	
  9227                           ;HMI.c: 128: {
  9228                           ;HMI.c: 129: CenterPressed = 1;
  9229  0FF6  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  9230                           	line	130
  9231                           ;HMI.c: 130: CenterReleased = 0;
  9232  0FF7  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  9233  0FF8  2FFF               	goto	i1l5240
  9234                           	line	131
  9235                           	
  9236  0FF9                     i1l5238:	
  9237                           	line	132
  9238                           ;HMI.c: 131: }
  9239                           ;HMI.c: 132: }
  9240  0FF9  2FFF               	goto	i1l5240
  9241                           	line	133
  9242                           	
  9243  0FFA                     i1l5237:	
  9244                           	line	135
  9245                           ;HMI.c: 133: else
  9246                           ;HMI.c: 134: {
  9247                           ;HMI.c: 135: CenterDebounceCount = 0;
  9248  0FFA  1683               	bsf	status, 5	;RP0=1, select bank1
  9249  0FFB  1303               	bcf	status, 6	;RP1=0, select bank1
  9250  0FFC  01CE               	clrf	(_CenterDebounceCount)^080h	;volatile
  9251                           	line	136
  9252                           ;HMI.c: 136: CenterReleased = 1;
  9253  0FFD  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  9254  0FFE  2FFF               	goto	i1l5240
  9255                           	line	137
  9256                           	
  9257  0FFF                     i1l5239:	
  9258                           	line	138
  9259                           	
  9260  0FFF                     i1l5240:	
  9261  0FFF  0008               	return
  9262                           	opt stack 0
  9263                           GLOBAL	__end_of_Debounce
  9264  1000                     	__end_of_Debounce:
  9265 ;; =============== function _Debounce ends ============
  9266                           
  9267                           	signat	_Debounce,88
  9268                           psect	text1246,local,class=CODE,delta=2
  9269                           global __ptext1246
  9270  0000                     __ptext1246:
  9271                           	global	btemp
  9272  007E                     	btemp set 07Eh
  9273                           
  9274                           	DABS	1,126,2	;btemp
  9275                           	global	wtemp0
  9276  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Apr 27 16:05:05 2015

 __end_of_lcd_write_control 09C3             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 09D8  
                       l703 0A15                         l704 0A15                         l705 0A19  
                       l706 0A38                         l690 0B7C                         l691 0BA5  
                       l692 0B80                         l693 0B84                         l694 0B88  
                       l695 0B8C                         l696 0B90                         l689 0B94  
                       l697 0BB2                         _GIE 005F                         _RB0 0030  
                       _RB1 0031                         _RC0 0038                         _RB2 0032  
                       _RC1 0039                         _RB3 0033                         _RC2 003A  
                       _RB4 0034                         _RB5 0035                         _RE0 0048  
                       _RB6 0036                         _RE1 0049                         _RE2 004A  
                       _RX9 00C6                         _TX9 04C6                         _pos 00C6  
                       fsr0 0004                         indf 0000                ___awmod@sign 0026  
           ?_lcd_set_cursor 0072                        l1402 0987                        l1410 0ABB  
                      l1411 0ABB                        l2212 0B77                        l2220 0D8D  
                      l1405 07FE                        l2221 0D8F                        l2222 0D9F  
                      l2230 0C93                        l2223 0DAD                        l2215 0D7F  
                      l2231 0C9E                        l1408 0AAA                        l2224 0DD0  
                      l2216 0D8A                        l2232 0CB7                        l2240 0CB5  
                      l1409 0A91                        l2217 0DBB                        l2225 0DB9  
                      l2241 0CCB                        l2233 0C9F                        l2226 0DCF  
                      l2218 0D8B                        l2242 0CCC                        l2234 0CCA  
                      l2227 0DD0                        l2219 0DCE                        l2235 0CA1  
                      l2236 0CA3                        l2260 0404                        l2252 03B7  
                      l1429 0A63                        l2237 0CA5                        l2245 0DEF  
                      l2261 0411                        l2253 03DB                        l2238 0CA7  
                      l2246 0E47                        l2262 04A5                        l2270 04A3  
                      l2254 0413                        l2239 0CCC                        l2247 0E0D  
                      l2271 04C2                        l2263 0427                        l2255 03DC  
                      l2248 0E24                        l2272 04C3                        l2264 04BB  
                      l2256 0426                        l2249 0E53                        l2273 04C3  
                      l2265 042D                        l2257 03E6                        l2266 0450  
                      l2258 03F0                        l2267 046B                        l2259 03FA  
                      l2268 049C                        l2269 049D                        l1399 09C2  
                      l3700 0D51                        l3701 0D3B                        l3702 0D5B  
                      l3703 0D6C                        l4443 09F4                        l5251 0C6F  
                      l4444 09F3                        l5260 0C83                        l5252 0C41  
                      l4445 09FC                        l5253 0C81                        l5261 0C6D  
                      l4446 0A0F                        l5254 0C42                        l5270 03B0  
                      l5255 0C43                        l5271 030B                        l5256 0C54  
                      l5272 0378                        l5257 0C55                        l5273 03A1  
                      l5258 0C67                        l5266 03A3                        l5274 03B0  
                      l5259 0C68                        l5267 0251                        l4468 0AE9  
                      l3692 09A3                        l5268 02B0                        l3693 09A3  
                      l2981 09EE                        l5269 02C3                        l3694 09A8  
                      l2990 014A                        l3695 09AE                        l2991 0234  
                      l2992 0197                        l2984 0063                        l2976 07B4  
                      l2985 0237                        l2993 0233                        l2977 07D5  
                      l3698 0D2D                        l2994 01E4                        l2986 00B0  
                      l2978 07F3                        l3699 0D34                        l2987 0236  
                      l2995 0232                        l2996 0231                        l2988 00FD  
                      l2989 0235                        l2997 0237                        l6720 0953  
                      l7450 0A8F                        l6730 0F33                        l6731 0F67  
                      l6723 0974                        l7460 0D1C                        l7453 0D15  
                      l7454 0CE7                        l7470 0C3C                        l6734 0E89  
                      l6750 05C0                        l6726 093E                        l7447 0A69  
                      l7455 0CDB                        l7463 0C35                        l6735 0EA7  
                      l6751 04E3                        l7448 0A73                        l7456 0CEC  
                      l7464 0C0F                        l6736 0EDB                        l6760 05A0  
                      l6752 04E4                        l7449 0A88                        l7457 0CED  
                      l7465 0C03                        l6729 0F15                        l6745 05AC  
                      l6761 0560                        l6753 04FC                        l7458 0D06  
                      l7466 0C14                        l6762 05AB                        l6754 04E5  
                      l6746 04CE                        l7459 0D14                        l7467 0C15  
                      l6763 05BF                        l6755 0516                        l6747 04E0  
                      l7468 0C26                        l7660 06CB                        l6764 05C5  
                      l6756 0521                        l6748 04E7                        l7469 0C34  
                      l7661 06CC                        l6757 0549                        l6749 04E2  
                      l7662 06DD                        l6758 053E                        l7663 06EB  
                      l7655 06A6                        l6759 055B                        l7664 06F6  
                      l7656 06B0                        l7665 06FD                        l7657 06EC  
                      l7658 06C6                        l7659 06BA                        _CHS0 00FB  
                      _CHS1 00FC                        _CHS2 00FD                        STR_1 0754  
                      STR_2 074B                        STR_3 0766                        STR_4 076F  
                      STR_5 075D                        STR_6 0742                        STR_7 0793  
                      STR_8 0797                        STR_9 077F                        _BRGH 04C2  
                      _CREN 00C4                        u4000 0C13                        u4001 0C12  
                      u4010 0C1F                        u4011 0C1E                        u4030 0C33  
                      u4110 06EA                        u4031 0C32                        u4015 0C1B  
                      u4111 06E9                        u4120 06F0                        u4040 069D  
                      u4200 0D5B                        u4025 0C27                        u4105 06DE  
                      u4041 069C                        u4201 0D5A                        u4050 06AA  
                      u4210 0EF6                        u4051 06A9                        u4211 0EF5  
                      u4060 06B6                        u4220 0E6A                        u4300 0110  
                      u4061 06B5                        u4205 0D57                        u4221 0E69  
                      u4301 010F                        u4310 0154                        u4230 0020  
                      u4311 0153                        u4231 001F                        u5007 0473  
                      u3360 0A19                        u4080 06CA                        u4320 015D  
                      u4240 0029                        u4400 053C                        u3361 0A18  
                      u4081 06C9                        u5017 0D44                        u4321 015C  
                      u4241 0028                        u4401 053B                        u4090 06D6  
                      u4330 01A1                        u4250 006D                        u4410 0548  
                      u4091 06D5                        u4075 06BB                        u5027 0983  
                      u4331 01A0                        u4251 006C                        u4411 0547  
                      u4340 01AA                        u4260 0076                        u4420 054F  
                      u4500 0D83                        u5037 09BD                        u4341 01A9  
                      u4261 0075                        u4421 054E                        u4405 0538  
                      u4501 0D82                        u4190 0D26                        u4350 01EE  
                      u4270 00BA                        u4430 05AA                        u4510 0C97  
                      u3375 0A26                        u4095 06D2                        u5047 09D6  
                      u4191 0D25                        u4351 01ED                        u4271 00B9  
                      u4431 05A9                        u4511 0C96                        u3560 09FC  
                      u4360 01F7                        u4280 00C3                        u4440 05BE  
                      u4520 0DED                        u3561 09FB                        u5057 0BA7  
                      u4361 01F6                        u4281 00C2                        u4441 05BD  
                      u4521 0DEC                        u3570 0C4F                        u4290 0107  
                      u4370 04D4                        u4450 0ABA                        u4530 0E00  
                      u3571 0C4E                        u4291 0106                        u4371 04D3  
                      u4451 0AB9                        u4531 0DFF                        _PEIE 005E  
                      u3580 0C64                        u3900 0A87                        u4380 050C  
                      u4460 0242                        u4540 0E1D                        u3581 0C63  
                      u3901 0A86                        u4381 050B                        u4541 0E1C  
                      u4525 0DE9                        u3590 09A7                        u3910 0CD7  
                      u4390 051F                        u4470 029D                        u4550 0E47  
                      u3591 09A6                        u3911 0CD6                        u4391 051E  
                      u4471 029C                        u4551 0E46                        u4535 0DFC  
                      u4480 07B2                        u4481 07B1                        u3930 0CEB  
                      u4490 07D4                        u3931 0CEA                        u4475 0299  
                      u4491 07D3                        u4555 0E43                        _RCIE 0465  
                      _RCIF 0065                        u3925 0CDC                        u4485 07AE  
                      u3870 0A6D                        u3950 0CFE                        u3871 0A6C  
                      u3951 0CFD                        u4495 07D0                        u3945 0CEE  
                      u3970 0D13                        u3971 0D12                        u3955 0CFA  
                      u3980 0BFF                        u3885 0A74                        u3965 0D07  
                      u3981 0BFE                        u3895 0A7B                        u4970 03C6  
                      _OERR 00C1                        u3995 0C04                        u4971 03C5  
                      u4980 03CA                        u4981 03C9                        u4997 0458  
                      _TMR0 0001                  _ChargeMode 0C84                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 0C3D      __end_of_lcd_write_data 0988                        _isr1 05C6  
                      _main 03B1                        _init 0B48                        _test 00C8  
                      btemp 007E              _CenterReleased 0381                        start 0012  
             ??_ReadButtons 0073                       ?_Menu 0072            ??_robot_distance 0023  
                     l11001 0E19                       l11011 0E3A                       l11003 0E1D  
                     l10141 0A38                       l10133 0A10                       l10301 0C4B  
                     l11013 0E4A                       l11005 0E1E                       l10135 0A13  
                     l10311 0C6C                       l10303 0C4F                       l11015 0E53  
                     l11007 0E24                       l10137 0A1C                       l11201 0AD1  
                     l10313 0C6E                       l10305 0C55                       l10321 099E  
                     l11009 0E32                       l10139 0A2F                       l11211 0ADA  
                     l11203 0AD4                       l10307 0C64                       l10315 0C6F  
                     l10323 09A0                       l11205 0AD5                       l10309 0C68  
                     l10317 0C81                       l10325 09A8                       l10501 0A6D  
                     l11207 0AD8                       l10319 0C83                       l10327 09AC  
                     l10503 0A7A                       l10511 0CD1                       l11311 0B58  
                     l11209 0AD9                       l10329 09AE                       l10505 0A88  
                     l10521 0CED                       l10513 0CD7                       l11321 0B6F  
                     l11313 0B5D                       l10291 0A05                       l10507 0A8F  
                     l10523 0CFE                       l10515 0CDB                       l10531 0D15  
                     l11323 0B73                       l11315 0B61                       l11307 0B48  
                     l11331 03B1                       l10293 0A0B                       l10285 09F2  
                     l10533 0D1C                       l10525 0D04                       l10517 0CE2  
                     l10509 0CCD                       l10541 0C0A                       l10621 0B94  
                     l10613 0B7B                       l10701 0E6A                       l11325 0B74  
                     l11317 0B69                       l11309 0B49                       l11341 03CA  
                     l11333 03B7                       l11191 0AC7                       l10295 0A0E  
                     l10287 09F4                       l10527 0D06                       l10519 0CE7  
                     l10551 0C2D                       l10543 0C0F                       l10535 0BF7  
                     l10615 0B90                       l10623 0BA5                       l10631 09C6  
                     l10703 0E89                       l10711 0063                       l11327 0B75  
                     l11319 0B6B                       l11351 03E2                       l11343 03CB  
                     l11335 03BD                       l11193 0AC8                       l10289 09FD  
                     l10297 0C40                       l10529 0D0D                       l10545 0C15  
                     l10537 0BFF                       l10553 0C35                       l10561 06A6  
                     l10625 0BA9                       l10617 0B92                       l10633 09CA  
                     l10641 09B5                       l10721 00C3                       l10713 006D  
                     l10705 0015                       l10801 05C0                       l11329 0B76  
                     l11361 03FA                       l11353 03E6                       l11345 03D0  
                     l11337 03BF                       l11195 0ACA                       l11187 0ABC  
                     l10299 0C43                       l10555 0C3C                       l10547 0C1F  
                     l10539 0C03                       l10571 06C1                       l10563 06AA  
                     l10627 0BB2                       l10619 0B93                       l10635 09CE  
                     l10643 09B7                       l10651 097D                       l10731 0154  
                     l10723 00FD                       l10715 0076                       l10707 0020  
                     l10803 05C5                       l10811 0A90                       l11363 0400  
                     l11355 03EC                       l11347 03D5                       l11339 03C6  
                     l11371 0413                       l11197 0ACB                       l11189 0ABF  
                     l10549 0C26                       l10581 06E4                       l10573 06C6  
                     l10565 06B0                       l10557 0696                       l10637 09D2  
                     l10629 09C3                       l10645 09B8                       l10653 097E  
                     l10661 0D26                       l10741 01E4                       l10733 015D  
                     l10725 0107                       l10717 00B0                       l10709 0029  
                     l10805 0966                       l10813 0A91                       l10821 0A3D  
                     l10901 034A                       l11381 045F                       l11373 0427  
                     l11365 0404                       l11357 03F0                       l11349 03DC  
                     l11199 0ACE                       l10575 06CC                       l10567 06B6  
                     l10583 06EC                       l10559 069D                       l10639 09B2  
                     l10647 0978                       l10655 0947                       l10671 0D40  
                     l10663 0D2D                       l10743 01EE                       l10735 0197  
                     l10727 0110                       l10719 00BA                       l10751 04D4  
                     l10807 07F7                       l10815 0AA1                       l10831 0A4B  
                     l10823 0A40                       l10911 038F                       l10903 035B  
                     l11391 049D                       l11383 046B                       l11375 042D  
                     l11367 040F                       l11359 03F6                       l10497 0A64  
                     l10585 06F0                       l10577 06D6                       l10569 06BA  
                     l10649 097B                       l10681 0D68                       l10673 0D5D  
                     l10665 0D34                       l10657 0D1D                       l10745 01F7  
                     l10737 01A1                       l10729 014A                       l10761 0504  
                     l10753 04DB                       l10809 07F8                       l10817 0AAA  
                     l10833 0A51                       l10825 0A41                       l10841 09D9  
                     l10913 03A2                       l10905 0366                       l10921 07B3  
                     l11393 04A4                       l11385 047A                       l11377 043A  
                     l11369 0412                       l10499 0A69                       l10587 06F6  
                     l10579 06DD                       l10683 0D69                       l10675 0D63  
                     l10667 0D37                       l10659 0D21                       l10691 0EF6  
                     l10739 01AA                       l10771 0519                       l10763 0508  
                     l10755 04E6                       l10747 04C9                       l10835 0A57  
                     l10827 0A44                       l10819 0A39                       l10843 09E7  
                     l10907 0378                       l10915 03A3                       l10923 07B4  
                     l10931 0D6D                       l11387 0485                       l11379 0450  
                     l11395 04A5                       l10589 06FD                       l10677 0D66  
                     l10669 0D38                       l10693 0F15                       l10685 0EDC  
                     l10781 0542                       l10773 0520                       l10765 050C  
                     l10757 04E7                       l10749 04CE                       l10837 0A5D  
                     l10829 0A45                       l10845 09EE                       l10909 0384  
                     l10925 07C1                       l10917 079F                       l10941 0D8F  
                     l10933 0D72                       l11389 0490                       l11397 04BB  
                     l10679 0D67                       l10687 0EE0                       l10695 0E54  
                     l10791 0560                       l10783 0549                       l10775 0521  
                     l10767 0510                       l10759 04FC                       l10839 0938  
                     l10871 0238                       l10927 07C7                       l10919 07A5  
                     l10951 0DB1                       l10943 0D9B                       l10935 0D7F  
                     l10689 0EF0                       l10697 0E5C                       l10793 0594  
                     l10785 054F                       l10777 053D                       l10769 0516  
                     l10881 028E                       l10873 0251                       l10929 07D5  
                     l10953 0DB4                       l10945 0D9F                       l10937 0D83  
                     l10961 0C84                       l10699 0E64                       l10795 059B  
                     l10787 0556                       l10779 053E                       l10891 02E0  
                     l10883 029D                       l10875 0257                       l10955 0DB8  
                     l10947 0DA9                       l10939 0D84                       l10971 0CA7  
                     l10963 0C8C                       l10797 05A0                       l10789 055B  
                     l10893 030B                       l10885 02B0                       l10877 0277  
                     l10957 0DBA                       l10949 0DAD                       l10973 0CAD  
                     l10981 0CB7                       l10965 0C93                       l10799 05AC  
                     l10895 0311                       l10887 02C3                       l10879 0288  
                     l10959 0DBB                       l10975 0CB0                       l10967 0C97  
                     l10991 0DEE                       l10983 0DD1                       l10897 0333  
                     l10889 02C9                       l10977 0CB4                       l10969 0C98  
                     l10993 0DEF                       l10985 0DD7                       l10899 0344  
                     l10979 0CB6                       l10995 0DF4                       l10987 0DDC  
                     l10997 0E00                       l10989 0DE0        __size_of_calibrateIR 0064  
                     l10999 0E0D                       ?_isr1 0072                       ?_main 0072  
                     ?_init 0072                       _EEADR 010D                       STR_10 078B  
                     STR_11 079B                       STR_12 078F                       STR_13 072A  
                     STR_14 072A                       STR_15 0783                       STR_16 0777  
                     STR_17 0787                       STR_18 071A                       STR_19 0739  
           __end_of___awmod 06FE                       _CARRY 0018             __end_of___lwdiv 0D1D  
           __end_of___lwmod 0C3D                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074             __end_of_scan360 0E54                       _total 00CA  
            __pbitbssCOMMON 0380                       pclath 000A                 _turnlowByte 00DF  
           ?_lcd_write_data 0072           ?_adc_read_channel 0072                       status 0003  
                     wtemp0 007E             __end_of_sprintf 05C6            __end_of_Debounce 1000  
        __size_ofi1___lwmod 0044          ??_adc_read_channel 0026            ?_readAvgDistance 0072  
              __end_of_Menu 0C84  __size_of_lcd_write_control 0014            _shortMenuStrings 00E6  
              __end_of_isr1 0696                __end_of_main 04C6                __end_of_init 0B78  
           rotate@direction 0025                      ??_Menu 0020               ?_readDistance 0028  
    readAvgDistance@fullval 0030                      ??_isr1 0078                      ??_main 0062  
                    ??_init 0023         __end_of_ReadButtons 0B48                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
          __end_of_adc_read 0A39                 ?_ChargeMode 0072                      i1l2200 064F  
                    i1l2201 05EB                      i1l2202 0604                      i1l2203 061D  
                    i1l2204 063C                      i1l2205 064E                      i1l2206 0664  
                    i1l2207 068A                      i1l2208 0689                      i1l2209 068A  
                    i1l5230 0FA4                      i1l5231 0FBE                      i1l5240 0FFF  
                    i1l5232 0FBD                      i1l5233 0FC2                      i1l5225 0F82  
                    i1l5234 0FDC                      i1l5226 0F81                      i1l5235 0FDB  
                    i1l5227 0F86                      i1l5243 0B25                      i1l5236 0FE0  
                    i1l5228 0FA0                      i1l5244 0B47                      i1l5237 0FFA  
                    i1l5229 0F9F                      i1l5245 0B2D                      i1l5238 0FF9  
                    i1l5246 0B35                      i1l5239 0FFF                      i1l5247 0B3D  
                    i1l5248 0B45                      i1l7470 0BF6                      i1l7463 0BEF  
                    i1l7464 0BC9                      i1l7465 0BBD                      i1l7466 0BCE  
                    i1l7467 0BCF                      i1l7468 0BE0                      i1l7469 0BEE  
                    u460_20 0602                      u460_21 0601                      u461_20 061B  
                    u461_21 061A                      u470_20 0B31                      u462_20 0634  
                    u470_21 0B30                      u462_21 0633                 _DistLowByte 00D0  
                    u471_20 0B39                      u463_20 0643                      u471_21 0B38  
                    u463_21 0642                      u480_20 0F98                      u472_20 0B41  
                    u464_20 0653                      u480_21 0F97                      u472_21 0B40  
                    u464_21 0652                      u481_20 0F9C                      u465_20 0669  
                    u481_21 0F9B                      u465_21 0668                      u490_20 0FF6  
                    u482_20 0FAA                      u466_20 066F                      u458_20 05CA  
                    u490_21 0FF5                      u482_21 0FA9                      u466_21 066E  
                    u458_21 05C9                      u483_20 0FB6                      u491_20 0BB9  
                    u467_20 0685                      u459_20 05E9                      u483_21 0FB5  
                    u491_21 0BB8                      u467_21 0684                      u459_21 05E8  
                    u484_20 0FBA                      u476_20 0F6E                      u468_20 0B21  
                    u484_21 0FB9                      u476_21 0F6D                      u468_21 0B20  
                    u492_25 0BBE                      u485_20 0FC8                      u477_20 0F7A  
                    u493_20 0BCD                      u469_20 0B29                      u485_21 0FC7  
                    u477_21 0F79                      u493_21 0BCC                      u469_21 0B28  
                    u486_20 0FD4                      u478_20 0F7E                      u494_20 0BD9  
                    u486_21 0FD3                      u478_21 0F7D                      u494_21 0BD8  
                    u494_25 0BD5                      u487_20 0FD8                      u479_20 0F8C  
                    u487_21 0FD7                      u479_21 0F8B                      u495_25 0BE1  
                    u488_20 0FE6                      u496_20 0BED                      u488_21 0FE5  
                    u496_21 0BEC                      u489_20 0FF2                      u489_21 0FF1  
                    _TMR0IE 005D                      _TMR0IF 005A                scan360@steps 0060  
                    _SSPCON 0014                      _SSPBUF 0013                  _UpReleased 038E  
          __end_of_lcd_init 0A64                      _adcVal 006A             _UpDebounceCount 00D5  
                    ___wmul 0A64                   ??___awmod 0024                _turnhighByte 00DE  
              ??_ADCconvert 002E                   ??___lwdiv 002A                   ??___lwmod 0032  
          __end_of_init_adc 09D9              ??_readDistance 002A             ___awmod@divisor 0020  
  __end_of_lcd_write_string 0ABC             ___awmod@counter 0025                      _rotate 0D1D  
                    _rxfifo 00A0                      clrloop 0940                      _txfifo 00B0  
                    _rxiptr 00DA                      _rxoptr 00DB                      _txiptr 006D  
                 ??_scan360 005C                      _txoptr 006E            __end_of_ser_init 0AEA  
         __end_ofi1___lwmod 0BF7                      saved_w 007E               main@shortwall 0065  
               _LeftPressed 0384                   ??_sprintf 0039                 _DownPressed 0382  
         lcd_write_string@s 0027          __end_of_ADCconvert 0238              __pcstackCOMMON 0072  
              __pidataBANK1 0954                 _ReadButtons 0B18         __size_of_ChargeMode 0049  
          ??_lcd_set_cursor 0023                   ?_Debounce 0072               _buttonPressed 006C  
                __pbssBANK0 0068                  __pbssBANK1 00A0                  __pbssBANK3 0190  
         _DownDebounceCount 00D1          _RightDebounceCount 00D3                  __pmaintext 03B1  
         robotTurn@distance 0022                     ?___wmul 0020                  __pintentry 0004  
              _DistHighByte 00CF       __end_of_UpdateDisplay 03B1                  __ptext1211 0DD1  
                __ptext1220 0A90                  __ptext1212 0C84                  __ptext1221 07F4  
                __ptext1213 0D6D                  __ptext1230 09AF                  __ptext1222 0963  
                __ptext1214 079F                  __ptext1231 09C3                  __ptext1223 04C6  
                __ptext1215 0238                  __ptext1240 0ABC                  __ptext1232 0B78  
                __ptext1224 0015                  __ptext1216 0B48                  __ptext1241 0A10  
                __ptext1233 0696                  __ptext1225 0E54                  __ptext1217 09D9  
                __ptext1242 05C6                  __ptext1234 0BF7                  __ptext1226 0EDC  
                __ptext1218 0938                  __ptext1243 0B18                  __ptext1235 0CCD  
                __ptext1227 0D1D                  __ptext1219 0A39                  __ptext1244 0BB3  
                __ptext1236 0A64                  __ptext1228 0947                  __ptext1245 0F68  
                __ptext1237 099B                  __ptext1229 0975                  __ptext1246 0000  
                __ptext1238 0C3D                  __ptext1239 09EF                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 0021          __size_of_robo_init 000D  
                   i1l11101 05CB                     i1l11111 0602                     i1l11103 05D3  
                   i1l11121 0635                     i1l11113 0604                     i1l11105 05D4  
                   i1l11131 0653                     i1l11123 0639                     i1l11115 061B  
                   i1l11107 05E9                     i1l11301 0BE7                     i1l11141 0677  
                   i1l11133 0654                     i1l11125 063C                     i1l11117 061D  
                   i1l11109 05EB          __size_of_robotMove 008C                     i1l11303 0BEF  
                   i1l11151 0B1D                     i1l11143 067B                     i1l11135 0664  
                   i1l11127 0643                     i1l11119 0634                     i1l11305 0BF6  
                   i1l11161 0B2A                     i1l11153 0B21                     i1l11145 067F  
                   i1l11137 0669                     i1l11129 064F                     i1l11251 0F7E  
                   i1l11243 0F68                     i1l11171 0B39                     i1l11163 0B2C  
                   i1l11155 0B22                     i1l11147 0685                     i1l11139 066F  
                   i1l11261 0FAA                     i1l11253 0F8C                     i1l11245 0F6E  
                   i1l11181 0B44                     i1l11173 0B3A                     i1l11165 0B31  
                   i1l11157 0B24                     i1l11149 0B18                     i1l11271 0FCE  
                   i1l11263 0FB0                     i1l11255 0F92                     i1l11247 0F74  
                   i1l11183 0B45                     i1l11175 0B3C                     i1l11167 0B32  
                   i1l11159 0B29                     i1l11281 0FF2                     i1l11273 0FD4  
                   i1l11265 0FB6                     i1l11257 0F98                     i1l11249 0F7A  
                   i1l11185 0B47                     i1l11177 0B41                     i1l11169 0B34  
                   i1l11097 05C6                     i1l11283 0FF6                     i1l11275 0FD8  
                   i1l11267 0FBA                     i1l11259 0F9C                     i1l11291 0BC4  
                   i1l11179 0B42                     i1l11099 05CA                     i1l11277 0FE6  
                   i1l11269 0FC8                     i1l11293 0BC9                     i1l11285 0BB3  
                   i1l11279 0FEC                     i1l11295 0BCF                     i1l11287 0BB9  
                   i1l11297 0BD9                     i1l11289 0BBD                     i1l11299 0BE0  
        __size_of_robotTurn 0088                  ??_Debounce 0072            ??_lcd_write_data 0020  
                 ?_lcd_init 0072                     _SSPSTAT 0094        __end_of_readDistance 09EF  
                 ?_init_adc 0072                   ?_ser_init 0072               ??_calibrateIR 005A  
                   ___awmod 0696             __size_of___wmul 002C                     ___lwdiv 0CCD  
                   ___lwmod 0BF7   __size_of_adc_read_channel 003B                  ??_adc_read 0022  
           __size_of_rotate 0050                     _scan360 0DD1                     _dpowers 0710  
          ___awmod@dividend 0022                     _lowByte 00D9                     _ser_tmp 00DC  
                   _sprintf 04C6                  ??_lcd_init 0023        end_of_initialization 0B14  
              ??_ChargeMode 005A                   _SCAN_FLAG 00D4                     init_ram 098C  
                ??_init_adc 0020           __end_of_ser_putch 0A10           __end_of_robo_init 0954  
         __end_of_robotMove 0F68                _LeftReleased 0385           __end_of_robotTurn 0EDC  
                ??_ser_init 0020                     rotate@i 0028                _DownReleased 0383  
             _RightReleased 038B    __size_of_readAvgDistance 0055                  _robot_read 0963  
         ?_lcd_write_string 0027          __end_of_ChargeMode 0CCD         __end_of_calibrateIR 0DD1  
        ??_lcd_write_string 0029                 AT25256A@CS0 0038                 AT25256A@CS1 0039  
         adc_read@adc_value 0024                   i1___lwmod 0BB3     __size_of_robot_distance 0007  
                _totalSteps 00CC                  main@choice 0067               ?_spi_transfer 0072  
                 Menu@input 0020               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 0A90           i1___lwmod@divisor 0072               __pbitbssBANK0 0378  
         i1___lwmod@counter 0077              __end_of_rotate 0D6D         start_initialization 0AEA  
     __size_of_readDistance 0016           __size_of_Debounce 0098                  ?i1___lwmod 0072  
            ??_spi_transfer 0020       lcd_set_cursor@address 0023                   _UpPressed 038D  
            _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 0D6D                 __pdataBANK1 00E0  
          _adc_read_channel 0B78                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 09D9           __size_of_adc_read 0029           ??_readAvgDistance 0030  
             __pcstackBANK0 0020           __size_of_lcd_init 002B                 sprintf@_val 003F  
               sprintf@flag 003D           robotMove@distance 0022                 sprintf@prec 003E  
              _current_step 00EE            readAvgDistance@i 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                    ?___awmod 0020           __size_of_ser_init 002E  
                  ?___lwdiv 0026                    ?___lwmod 002E                   __pstrings 0700  
                 _dist_high 00C0                    ?_scan360 005A         readDistance@fullval 002C  
          ___lwdiv@quotient 002B              _robot_distance 0938                 ??i1___lwmod 0076  
                  ?_sprintf 0034     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 0179              ___wmul@product 0024         __size_of_robot_read 0012  
                ser_putch@c 0021                   _ser_putch 09EF                   _robo_init 0947  
                 _robotMove 0EDC                   _robotTurn 0E54                _RightPressed 038A  
      __size_of_ReadButtons 0030        __end_of_spi_transfer 09AF                 __stringbase 070F  
         ___wmul@multiplier 0020      UpdateDisplay@adcOutput 004A            spi_transfer@data 0022  
          spi_transfer@temp 0021                    _Debounce 0F68      __end_of_robot_distance 093F  
         _LeftDebounceCount 00D2   __size_of_lcd_write_string 002C          scan360@lowestSteps 005E  
   __size_of_lcd_write_data 0013                  ?_ser_putch 0072     adc_read_channel@channel 0027  
             _RTC_FLAG_10MS 0386               _RTC_FLAG_50MS 0389                  ?_robo_init 0072  
                 init_fetch 0988                  ?_robotMove 0022                  ?_robotTurn 0022  
                _ADCconvert 0015            __size_of___awmod 0068            __size_of___lwdiv 0050  
          __size_of___lwmod 0046               _UpdateDisplay 0238                    _adc_read 0A10  
               _currentMenu 00D6            __size_of_scan360 0083             ?_robot_distance 0072  
           ___lwdiv@divisor 0026             ___lwdiv@counter 002D                 _menuStrings 00E0  
                  _highByte 00D8                    _lcd_init 0A39                    _distance 00C4  
                  _dist_low 00C2            __size_of_sprintf 0100    __end_of_adc_read_channel 0BB3  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 09C3  
             __size_of_isr1 00D0               __size_of_main 0115               __size_of_init 0030  
          robot_read@packet 0022                    clear_ram 093F                    _ser_init 0ABC  
           _readAvgDistance 079F                ?_calibrateIR 0072              ?_UpdateDisplay 0072  
              ??_robot_read 0022         _CenterDebounceCount 00CE                _RTC_FLAG_1MS 0378  
        UpdateDisplay@F1230 0190                    intlevel1 0000              _lcd_set_cursor 07F4  
                 sprintf@ap 003C                   sprintf@sp 0043            ___lwmod@dividend 0030  
               _SER_RC_FLAG 038C          __end_of_robot_read 0975                   stringcode 070A  
               _serialInput 00DD                 ??_ser_putch 0020               _distTravelled 00EC  
               ??_robo_init 0022       __size_of_spi_transfer 0014                 ??_robotMove 0024  
               ??_robotTurn 0024                 ?_ADCconvert 0072           _lcd_write_control 09AF  
          scan360@lowestVal 005C          ?_lcd_write_control 0072                  _OPTION_REG 0081  
                  sprintf@c 0044                    sprintf@f 0034             ___lwmod@divisor 002E  
           ___lwmod@counter 0033                    stringdir 070A                    stringtab 0700  
       ??_lcd_write_control 0020      __end_of_lcd_set_cursor 07FF            _lcd_write_string 0A90  
              _spi_transfer 099B           _current_direction 00D7                 _RTC_Counter 0068  
   __end_of_readAvgDistance 07F4              _lcd_write_data 0975  
