

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 04 15:52:56 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 51 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 51 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMoveSpeed
    55                           	FNCALL	_main,_robotTurn
    56                           	FNCALL	_main,___awtoft
    57                           	FNCALL	_main,___ftmul
    58                           	FNCALL	_main,___fttol
    59                           	FNCALL	_main,_ChargeMode
    60                           	FNCALL	_ChargeMode,_ser_putch
    61                           	FNCALL	_ChargeMode,_UpdateDisplay
    62                           	FNCALL	_robotMoveSpeed,_RobotDrive
    63                           	FNCALL	_robotMoveSpeed,_robot_read
    64                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    65                           	FNCALL	_robotMoveSpeed,_abs
    66                           	FNCALL	_scan360,_readAvgDistance
    67                           	FNCALL	_scan360,_rotate
    68                           	FNCALL	_scan360,_UpdateDisplay
    69                           	FNCALL	_calibrateIR,_rotate
    70                           	FNCALL	_calibrateIR,_UpdateDisplay
    71                           	FNCALL	_UpdateDisplay,_lcd_write_control
    72                           	FNCALL	_UpdateDisplay,_sprintf
    73                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    74                           	FNCALL	_UpdateDisplay,_lcd_write_string
    75                           	FNCALL	_UpdateDisplay,___awmod
    76                           	FNCALL	_readAvgDistance,_readDistance
    77                           	FNCALL	_readAvgDistance,___lwdiv
    78                           	FNCALL	_readAvgDistance,_ADCconvert
    79                           	FNCALL	_init,_ser_init
    80                           	FNCALL	_init,_init_adc
    81                           	FNCALL	_init,_lcd_init
    82                           	FNCALL	_init,_robo_init
    83                           	FNCALL	_readDistance,_adc_read_channel
    84                           	FNCALL	_robot_read,_ser_putch
    85                           	FNCALL	_robot_read,_ser_getch
    86                           	FNCALL	_lcd_init,_lcd_write_control
    87                           	FNCALL	_lcd_write_string,_lcd_write_data
    88                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    89                           	FNCALL	___awtoft,___ftpack
    90                           	FNCALL	___ftmul,___ftpack
    91                           	FNCALL	_abs,___wmul
    92                           	FNCALL	_RobotDrive,_ser_putch
    93                           	FNCALL	_ser_getch,_ser_isrx
    94                           	FNCALL	_sprintf,___lwdiv
    95                           	FNCALL	_sprintf,___lwmod
    96                           	FNCALL	_ADCconvert,___wmul
    97                           	FNCALL	_ADCconvert,___lwdiv
    98                           	FNCALL	_robotTurn,_ser_putch
    99                           	FNCALL	_rotate,_spi_transfer
   100                           	FNCALL	_robo_init,_ser_putch
   101                           	FNCALL	_adc_read_channel,_adc_read
   102                           	FNROOT	_main
   103                           	FNCALL	_isr1,i1___lwmod
   104                           	FNCALL	_isr1,_ReadButtons
   105                           	FNCALL	_ReadButtons,_Debounce
   106                           	FNCALL	intlevel1,_isr1
   107                           	global	intlevel1
   108                           	FNROOT	intlevel1
   109                           	global	_menuStrings
   110                           	global	_shortMenuStrings
   111                           	global	_current_step
   112                           psect	idataBANK1,class=CODE,space=0,delta=2
   113                           global __pidataBANK1
   114  07F2                     __pidataBANK1:
   115                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   116                           	line	32
   117                           
   118                           ;initializer for _menuStrings
   119  07F2  3453               	retlw	(STR_1-__stringbase)&0ffh
   120  07F3  344A               	retlw	(STR_2-__stringbase)&0ffh
   121  07F4  3465               	retlw	(STR_3-__stringbase)&0ffh
   122  07F5  346E               	retlw	(STR_4-__stringbase)&0ffh
   123  07F6  345C               	retlw	(STR_5-__stringbase)&0ffh
   124  07F7  3441               	retlw	(STR_6-__stringbase)&0ffh
   125                           	line	33
   126                           
   127                           ;initializer for _shortMenuStrings
   128  07F8  3492               	retlw	(STR_7-__stringbase)&0ffh
   129  07F9  3496               	retlw	(STR_8-__stringbase)&0ffh
   130  07FA  347E               	retlw	(STR_9-__stringbase)&0ffh
   131  07FB  348A               	retlw	(STR_10-__stringbase)&0ffh
   132  07FC  349A               	retlw	(STR_11-__stringbase)&0ffh
   133  07FD  348E               	retlw	(STR_12-__stringbase)&0ffh
   134                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   135                           	line	30
   136                           
   137                           ;initializer for _current_step
   138  07FE  343C               	retlw	03Ch
   139                           	global	_dpowers
   140                           psect	strings,class=STRING,delta=2
   141                           global __pstrings
   142  0800                     __pstrings:
   143                           ;	global	stringdir,stringtab,__stringbase
   144  0800                     stringtab:
   145                           ;	String table - string pointers are 1 byte each
   146  0800  1BFF               	btfsc	(btemp+1),7
   147  0801  280A               	ljmp	stringcode
   148  0802  1383               	bcf	status,7
   149  0803  187F               	btfsc	(btemp+1),0
   150  0804  1783               	bsf	status,7
   151  0805  0800               	movf	indf,w
   152  0806  0A84               	incf fsr
   153  0807  1903               skipnz
   154  0808  0AFF               incf btemp+1
   155  0809  0008               	return
   156  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   157  080A  3008               movlw high(stringdir)
   158  080B  008A               movwf pclath
   159  080C  0804               movf fsr,w
   160  080D  0A84               incf fsr
   161  080E  0782               	addwf pc
   162  080F                     __stringbase:
   163  080F  3400               	retlw	0
   164                           psect	strings
   165                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   166                           	line	350
   167  0810                     _dpowers:
   168  0810  3401               	retlw	01h
   169  0811  3400               	retlw	0
   170                           
   171  0812  340A               	retlw	0Ah
   172  0813  3400               	retlw	0
   173                           
   174  0814  3464               	retlw	064h
   175  0815  3400               	retlw	0
   176                           
   177  0816  34E8               	retlw	0E8h
   178  0817  3403               	retlw	03h
   179                           
   180  0818  3410               	retlw	010h
   181  0819  3427               	retlw	027h
   182                           
   183                           	global	_dpowers
   184                           	global	UpdateDisplay@F1235
   185                           	global	_txfifo
   186                           	global	_buttonPressed
   187                           	global	_CenterPressed
   188                           	global	_CenterReleased
   189                           	global	_DownPressed
   190                           	global	_DownReleased
   191                           	global	_LeftPressed
   192                           	global	_LeftReleased
   193                           	global	_RTC_FLAG_1MS
   194                           	global	_RTC_FLAG_250MS
   195                           	global	_RTC_FLAG_500MS
   196                           	global	_RightPressed
   197                           	global	_RightReleased
   198                           	global	_UpPressed
   199                           	global	_UpReleased
   200                           	global	_rxfifo
   201                           	global	_IRdistance
   202                           	global	_RTC_Counter
   203                           	global	_TotalDistTravelled
   204                           	global	_adcVal
   205                           	global	_distTravelled
   206                           	global	_dist_high
   207                           	global	_dist_low
   208                           	global	_pos
   209                           	global	_total
   210                           	global	_totalSteps
   211                           	global	_BumpSensors
   212                           	global	_CenterDebounceCount
   213                           	global	_DistHighByte
   214                           	global	_DistLowByte
   215                           	global	_DownDebounceCount
   216                           	global	_LeftDebounceCount
   217                           	global	_ROBOTerror
   218                           	global	_RightDebounceCount
   219                           	global	_UpDebounceCount
   220                           	global	_currentMenu
   221                           	global	_highByte
   222                           	global	_lowByte
   223                           	global	_rxiptr
   224                           	global	_rxoptr
   225                           	global	_ser_tmp
   226                           	global	_turnhighByte
   227                           	global	_turnlowByte
   228                           	global	_txiptr
   229                           	global	_txoptr
   230                           	global	_ADCON0
   231  001F                     _ADCON0	set	31
   232                           	global	_ADRESH
   233  001E                     _ADRESH	set	30
   234                           	global	_PORTA
   235  0005                     _PORTA	set	5
   236                           	global	_PORTC
   237  0007                     _PORTC	set	7
   238                           	global	_PORTD
   239  0008                     _PORTD	set	8
   240                           	global	_PORTE
   241  0009                     _PORTE	set	9
   242                           	global	_RCREG
   243  001A                     _RCREG	set	26
   244                           	global	_SSPBUF
   245  0013                     _SSPBUF	set	19
   246                           	global	_SSPCON
   247  0014                     _SSPCON	set	20
   248                           	global	_TMR0
   249  0001                     _TMR0	set	1
   250                           	global	_TXREG
   251  0019                     _TXREG	set	25
   252                           	global	AT25256A@CS0
   253  0038                     AT25256A@CS0	set	56
   254                           	global	AT25256A@CS1
   255  0039                     AT25256A@CS1	set	57
   256                           	global	_CARRY
   257  0018                     _CARRY	set	24
   258                           	global	_CHS0
   259  00FB                     _CHS0	set	251
   260                           	global	_CHS1
   261  00FC                     _CHS1	set	252
   262                           	global	_CHS2
   263  00FD                     _CHS2	set	253
   264                           	global	_CREN
   265  00C4                     _CREN	set	196
   266                           	global	_GIE
   267  005F                     _GIE	set	95
   268                           	global	_GO
   269  00FA                     _GO	set	250
   270                           	global	_OERR
   271  00C1                     _OERR	set	193
   272                           	global	_PEIE
   273  005E                     _PEIE	set	94
   274                           	global	_RB0
   275  0030                     _RB0	set	48
   276                           	global	_RB2
   277  0032                     _RB2	set	50
   278                           	global	_RB3
   279  0033                     _RB3	set	51
   280                           	global	_RB4
   281  0034                     _RB4	set	52
   282                           	global	_RB5
   283  0035                     _RB5	set	53
   284                           	global	_RB6
   285  0036                     _RB6	set	54
   286                           	global	_RC0
   287  0038                     _RC0	set	56
   288                           	global	_RC1
   289  0039                     _RC1	set	57
   290                           	global	_RC2
   291  003A                     _RC2	set	58
   292                           	global	_RCIF
   293  0065                     _RCIF	set	101
   294                           	global	_RE0
   295  0048                     _RE0	set	72
   296                           	global	_RE1
   297  0049                     _RE1	set	73
   298                           	global	_RE2
   299  004A                     _RE2	set	74
   300                           	global	_RX9
   301  00C6                     _RX9	set	198
   302                           	global	_SPEN
   303  00C7                     _SPEN	set	199
   304                           	global	_SSPIF
   305  0063                     _SSPIF	set	99
   306                           	global	_TMR0IE
   307  005D                     _TMR0IE	set	93
   308                           	global	_TMR0IF
   309  005A                     _TMR0IF	set	90
   310                           	global	_TXIF
   311  0064                     _TXIF	set	100
   312                           	global	_ADCON1
   313  009F                     _ADCON1	set	159
   314                           	global	_ADRESL
   315  009E                     _ADRESL	set	158
   316                           	global	_OPTION_REG
   317  0081                     _OPTION_REG	set	129
   318                           	global	_SPBRG
   319  0099                     _SPBRG	set	153
   320                           	global	_SSPSTAT
   321  0094                     _SSPSTAT	set	148
   322                           	global	_TRISA
   323  0085                     _TRISA	set	133
   324                           	global	_TRISB
   325  0086                     _TRISB	set	134
   326                           	global	_TRISC
   327  0087                     _TRISC	set	135
   328                           	global	_TRISD
   329  0088                     _TRISD	set	136
   330                           	global	_TRISE
   331  0089                     _TRISE	set	137
   332                           	global	_BRGH
   333  04C2                     _BRGH	set	1218
   334                           	global	_RCIE
   335  0465                     _RCIE	set	1125
   336                           	global	_SYNC
   337  04C4                     _SYNC	set	1220
   338                           	global	_TX9
   339  04C6                     _TX9	set	1222
   340                           	global	_TXEN
   341  04C5                     _TXEN	set	1221
   342                           	global	_TXIE
   343  0464                     _TXIE	set	1124
   344                           	global	_EEADR
   345  010D                     _EEADR	set	269
   346                           	global	_EEDATA
   347  010C                     _EEDATA	set	268
   348                           	global	_EECON1
   349  018C                     _EECON1	set	396
   350                           	global	_EECON2
   351  018D                     _EECON2	set	397
   352                           	global	_RD
   353  0C60                     _RD	set	3168
   354                           	global	_WR
   355  0C61                     _WR	set	3169
   356                           	global	_WREN
   357  0C62                     _WREN	set	3170
   358                           	
   359  081A                     STR_18:	
   360  081A  3420               	retlw	32	;' '
   361  081B  3443               	retlw	67	;'C'
   362  081C  3468               	retlw	104	;'h'
   363  081D  3461               	retlw	97	;'a'
   364  081E  3472               	retlw	114	;'r'
   365  081F  3467               	retlw	103	;'g'
   366  0820  3469               	retlw	105	;'i'
   367  0821  346E               	retlw	110	;'n'
   368  0822  3467               	retlw	103	;'g'
   369  0823  3420               	retlw	32	;' '
   370  0824  344D               	retlw	77	;'M'
   371  0825  346F               	retlw	111	;'o'
   372  0826  3464               	retlw	100	;'d'
   373  0827  3465               	retlw	101	;'e'
   374  0828  3420               	retlw	32	;' '
   375  0829  3400               	retlw	0
   376                           psect	strings
   377                           	
   378  082A                     STR_14:	
   379  082A  345A               	retlw	90	;'Z'
   380  082B  3465               	retlw	101	;'e'
   381  082C  3472               	retlw	114	;'r'
   382  082D  346F               	retlw	111	;'o'
   383  082E  3420               	retlw	32	;' '
   384  082F  3453               	retlw	83	;'S'
   385  0830  3474               	retlw	116	;'t'
   386  0831  3465               	retlw	101	;'e'
   387  0832  3470               	retlw	112	;'p'
   388  0833  345F               	retlw	95	;'_'
   389  0834  344D               	retlw	77	;'M'
   390  0835  346F               	retlw	111	;'o'
   391  0836  3474               	retlw	116	;'t'
   392  0837  346F               	retlw	111	;'o'
   393  0838  3472               	retlw	114	;'r'
   394  0839  3400               	retlw	0
   395                           psect	strings
   396                           	
   397  083A                     STR_13:	
   398  083A  3449               	retlw	73	;'I'
   399  083B  3452               	retlw	82	;'R'
   400  083C  343A               	retlw	58	;':'
   401  083D  3425               	retlw	37	;'%'
   402  083E  3464               	retlw	100	;'d'
   403  083F  3463               	retlw	99	;'c'
   404  0840  346D               	retlw	109	;'m'
   405  0841  3420               	retlw	32	;' '
   406  0842  3444               	retlw	68	;'D'
   407  0843  343A               	retlw	58	;':'
   408  0844  3425               	retlw	37	;'%'
   409  0845  3464               	retlw	100	;'d'
   410  0846  3400               	retlw	0
   411                           psect	strings
   412                           	
   413  0847                     STR_19:	
   414  0847  3420               	retlw	32	;' '
   415  0848  3420               	retlw	32	;' '
   416  0849  3445               	retlw	69	;'E'
   417  084A  3458               	retlw	88	;'X'
   418  084B  3449               	retlw	73	;'I'
   419  084C  3454               	retlw	84	;'T'
   420  084D  3420               	retlw	32	;' '
   421  084E  3420               	retlw	32	;' '
   422  084F  3400               	retlw	0
   423                           psect	strings
   424                           	
   425  0850                     STR_6:	
   426  0850  3420               	retlw	32	;' '
   427  0851  3443               	retlw	67	;'C'
   428  0852  3468               	retlw	104	;'h'
   429  0853  3461               	retlw	97	;'a'
   430  0854  3472               	retlw	114	;'r'
   431  0855  3467               	retlw	103	;'g'
   432  0856  3465               	retlw	101	;'e'
   433  0857  3420               	retlw	32	;' '
   434  0858  3400               	retlw	0
   435                           psect	strings
   436                           	
   437  0859                     STR_2:	
   438  0859  3453               	retlw	83	;'S'
   439  085A  3463               	retlw	99	;'c'
   440  085B  3461               	retlw	97	;'a'
   441  085C  346E               	retlw	110	;'n'
   442  085D  345F               	retlw	95	;'_'
   443  085E  3433               	retlw	51	;'3'
   444  085F  3436               	retlw	54	;'6'
   445  0860  3430               	retlw	48	;'0'
   446  0861  3400               	retlw	0
   447                           psect	strings
   448                           	
   449  0862                     STR_1:	
   450  0862  3443               	retlw	67	;'C'
   451  0863  3461               	retlw	97	;'a'
   452  0864  346C               	retlw	108	;'l'
   453  0865  3469               	retlw	105	;'i'
   454  0866  3462               	retlw	98	;'b'
   455  0867  345F               	retlw	95	;'_'
   456  0868  3449               	retlw	73	;'I'
   457  0869  3452               	retlw	82	;'R'
   458  086A  3400               	retlw	0
   459                           psect	strings
   460                           	
   461  086B                     STR_5:	
   462  086B  3446               	retlw	70	;'F'
   463  086C  346C               	retlw	108	;'l'
   464  086D  3477               	retlw	119	;'w'
   465  086E  345F               	retlw	95	;'_'
   466  086F  3457               	retlw	87	;'W'
   467  0870  3461               	retlw	97	;'a'
   468  0871  346C               	retlw	108	;'l'
   469  0872  346C               	retlw	108	;'l'
   470  0873  3400               	retlw	0
   471                           psect	strings
   472                           	
   473  0874                     STR_3:	
   474  0874  3444               	retlw	68	;'D'
   475  0875  3472               	retlw	114	;'r'
   476  0876  3469               	retlw	105	;'i'
   477  0877  3476               	retlw	118	;'v'
   478  0878  3465               	retlw	101	;'e'
   479  0879  345F               	retlw	95	;'_'
   480  087A  3432               	retlw	50	;'2'
   481  087B  346D               	retlw	109	;'m'
   482  087C  3400               	retlw	0
   483                           psect	strings
   484                           	
   485  087D                     STR_4:	
   486  087D  3444               	retlw	68	;'D'
   487  087E  3472               	retlw	114	;'r'
   488  087F  3469               	retlw	105	;'i'
   489  0880  3476               	retlw	118	;'v'
   490  0881  3465               	retlw	101	;'e'
   491  0882  345F               	retlw	95	;'_'
   492  0883  344C               	retlw	76	;'L'
   493  0884  3400               	retlw	0
   494                           psect	strings
   495                           	
   496  0885                     STR_16:	
   497  0885  3443               	retlw	67	;'C'
   498  0886  344F               	retlw	79	;'O'
   499  0887  344E               	retlw	78	;'N'
   500  0888  3446               	retlw	70	;'F'
   501  0889  3449               	retlw	73	;'I'
   502  088A  3452               	retlw	82	;'R'
   503  088B  344D               	retlw	77	;'M'
   504  088C  3400               	retlw	0
   505                           psect	strings
   506                           	
   507  088D                     STR_9:	
   508  088D  3444               	retlw	68	;'D'
   509  088E  3472               	retlw	114	;'r'
   510  088F  3432               	retlw	50	;'2'
   511  0890  3400               	retlw	0
   512                           psect	strings
   513                           	
   514  0891                     STR_15:	
   515  0891  343C               	retlw	60	;'<'
   516  0892  343C               	retlw	60	;'<'
   517  0893  343C               	retlw	60	;'<'
   518  0894  3400               	retlw	0
   519                           psect	strings
   520                           	
   521  0895                     STR_17:	
   522  0895  343E               	retlw	62	;'>'
   523  0896  343E               	retlw	62	;'>'
   524  0897  343E               	retlw	62	;'>'
   525  0898  3400               	retlw	0
   526                           psect	strings
   527                           	
   528  0899                     STR_10:	
   529  0899  3444               	retlw	68	;'D'
   530  089A  3472               	retlw	114	;'r'
   531  089B  344C               	retlw	76	;'L'
   532  089C  3400               	retlw	0
   533                           psect	strings
   534                           	
   535  089D                     STR_12:	
   536  089D  3443               	retlw	67	;'C'
   537  089E  3468               	retlw	104	;'h'
   538  089F  3467               	retlw	103	;'g'
   539  08A0  3400               	retlw	0
   540                           psect	strings
   541                           	
   542  08A1                     STR_7:	
   543  08A1  3443               	retlw	67	;'C'
   544  08A2  3461               	retlw	97	;'a'
   545  08A3  346C               	retlw	108	;'l'
   546  08A4  3400               	retlw	0
   547                           psect	strings
   548                           	
   549  08A5                     STR_8:	
   550  08A5  3453               	retlw	83	;'S'
   551  08A6  3463               	retlw	99	;'c'
   552  08A7  346E               	retlw	110	;'n'
   553  08A8  3400               	retlw	0
   554                           psect	strings
   555                           	
   556  08A9                     STR_11:	
   557  08A9  3446               	retlw	70	;'F'
   558  08AA  346C               	retlw	108	;'l'
   559  08AB  3477               	retlw	119	;'w'
   560  08AC  3400               	retlw	0
   561                           psect	strings
   562                           	file	"Assignment3_AldnoahZero.as"
   563                           	line	#
   564                           psect cinit,class=CODE,delta=2
   565                           global start_initialization
   566  08AE                     start_initialization:
   567                           
   568                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   569                           global __pbitbssCOMMON
   570  0380                     __pbitbssCOMMON:
   571  0380                     _CenterPressed:
   572  0380                            ds      1
   573                           
   574  0381                     _CenterReleased:
   575  0381                            ds      1
   576                           
   577  0382                     _DownPressed:
   578  0382                            ds      1
   579                           
   580  0383                     _DownReleased:
   581  0383                            ds      1
   582                           
   583  0384                     _LeftPressed:
   584  0384                            ds      1
   585                           
   586  0385                     _LeftReleased:
   587  0385                            ds      1
   588                           
   589  0386                     _RTC_FLAG_1MS:
   590  0386                            ds      1
   591                           
   592  0387                     _RTC_FLAG_250MS:
   593  0387                            ds      1
   594                           
   595  0388                     _RTC_FLAG_500MS:
   596  0388                            ds      1
   597                           
   598  0389                     _RightPressed:
   599  0389                            ds      1
   600                           
   601  038A                     _RightReleased:
   602  038A                            ds      1
   603                           
   604  038B                     _UpPressed:
   605  038B                            ds      1
   606                           
   607  038C                     _UpReleased:
   608  038C                            ds      1
   609                           
   610                           psect	bssCOMMON,class=COMMON,space=1
   611                           global __pbssCOMMON
   612  007D                     __pbssCOMMON:
   613  007D                     _buttonPressed:
   614  007D                            ds      1
   615                           
   616                           psect	bssBANK1,class=BANK1,space=1
   617                           global __pbssBANK1
   618  00A0                     __pbssBANK1:
   619  00A0                     _rxfifo:
   620  00A0                            ds      16
   621                           
   622  00B0                     _IRdistance:
   623  00B0                            ds      2
   624                           
   625  00B2                     _RTC_Counter:
   626  00B2                            ds      2
   627                           
   628  00B4                     _TotalDistTravelled:
   629  00B4                            ds      2
   630                           
   631  00B6                     _adcVal:
   632  00B6                            ds      2
   633                           
   634  00B8                     _distTravelled:
   635  00B8                            ds      2
   636                           
   637  00BA                     _dist_high:
   638  00BA                            ds      2
   639                           
   640  00BC                     _dist_low:
   641  00BC                            ds      2
   642                           
   643  00BE                     _pos:
   644  00BE                            ds      2
   645                           
   646  00C0                     _total:
   647  00C0                            ds      2
   648                           
   649  00C2                     _totalSteps:
   650  00C2                            ds      2
   651                           
   652  00C4                     _BumpSensors:
   653  00C4                            ds      1
   654                           
   655  00C5                     _CenterDebounceCount:
   656  00C5                            ds      1
   657                           
   658  00C6                     _DistHighByte:
   659  00C6                            ds      1
   660                           
   661  00C7                     _DistLowByte:
   662  00C7                            ds      1
   663                           
   664  00C8                     _DownDebounceCount:
   665  00C8                            ds      1
   666                           
   667  00C9                     _LeftDebounceCount:
   668  00C9                            ds      1
   669                           
   670  00CA                     _ROBOTerror:
   671  00CA                            ds      1
   672                           
   673  00CB                     _RightDebounceCount:
   674  00CB                            ds      1
   675                           
   676  00CC                     _UpDebounceCount:
   677  00CC                            ds      1
   678                           
   679  00CD                     _currentMenu:
   680  00CD                            ds      1
   681                           
   682  00CE                     _highByte:
   683  00CE                            ds      1
   684                           
   685  00CF                     _lowByte:
   686  00CF                            ds      1
   687                           
   688  00D0                     _rxiptr:
   689  00D0                            ds      1
   690                           
   691  00D1                     _rxoptr:
   692  00D1                            ds      1
   693                           
   694  00D2                     _ser_tmp:
   695  00D2                            ds      1
   696                           
   697  00D3                     _turnhighByte:
   698  00D3                            ds      1
   699                           
   700  00D4                     _turnlowByte:
   701  00D4                            ds      1
   702                           
   703  00D5                     _txiptr:
   704  00D5                            ds      1
   705                           
   706  00D6                     _txoptr:
   707  00D6                            ds      1
   708                           
   709                           psect	dataBANK1,class=BANK1,space=1
   710                           global __pdataBANK1
   711  00D7                     __pdataBANK1:
   712                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   713                           	line	32
   714  00D7                     _menuStrings:
   715  00D7                            ds      6
   716                           
   717                           psect	dataBANK1
   718                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   719                           	line	33
   720  00DD                     _shortMenuStrings:
   721  00DD                            ds      6
   722                           
   723                           psect	dataBANK1
   724                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   725                           	line	30
   726  00E3                     _current_step:
   727  00E3                            ds      1
   728                           
   729                           psect	bssBANK3,class=BANK3,space=1
   730                           global __pbssBANK3
   731  0190                     __pbssBANK3:
   732  0190                     UpdateDisplay@F1235:
   733  0190                            ds      16
   734                           
   735  01A0                     _txfifo:
   736  01A0                            ds      16
   737                           
   738                           psect clrtext,class=CODE,delta=2
   739                           global clear_ram
   740                           ;	Called with FSR containing the base address, and
   741                           ;	W with the last address+1
   742  1460                     clear_ram:
   743  1460  0064               	clrwdt			;clear the watchdog before getting into this loop
   744  1461                     clrloop:
   745  1461  0180               	clrf	indf		;clear RAM location pointed to by FSR
   746  1462  0A84               	incf	fsr,f		;increment pointer
   747  1463  0604               	xorwf	fsr,w		;XOR with final address
   748  1464  1903               	btfsc	status,2	;have we reached the end yet?
   749  1465  3400               	retlw	0		;all done for this memory range, return
   750  1466  0604               	xorwf	fsr,w		;XOR again to restore value
   751  1467  2C61               	goto	clrloop		;do the next byte
   752                           
   753                           ; Clear objects allocated to BITCOMMON
   754                           psect cinit,class=CODE,delta=2
   755  08AE  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   756  08AF  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   757                           ; Clear objects allocated to COMMON
   758                           psect cinit,class=CODE,delta=2
   759  08B0  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   760                           ; Clear objects allocated to BANK1
   761                           psect cinit,class=CODE,delta=2
   762  08B1  1383               	bcf	status, 7	;select IRP bank0
   763  08B2  30A0               	movlw	low(__pbssBANK1)
   764  08B3  0084               	movwf	fsr
   765  08B4  30D7               	movlw	low((__pbssBANK1)+037h)
   766  08B5  160A  118A  2460   	fcall	clear_ram
              120A  158A         
   767                           ; Clear objects allocated to BANK3
   768                           psect cinit,class=CODE,delta=2
   769  08BA  1783               	bsf	status, 7	;select IRP bank2
   770  08BB  3090               	movlw	low(__pbssBANK3)
   771  08BC  0084               	movwf	fsr
   772  08BD  30B0               	movlw	low((__pbssBANK3)+020h)
   773  08BE  160A  118A  2460   	fcall	clear_ram
              120A  158A         
   774                           global btemp
   775                           psect inittext,class=CODE,delta=2
   776                           global init_fetch,btemp
   777                           ;	Called with low address in FSR and high address in W
   778  1486                     init_fetch:
   779  1486  087E               	movf btemp,w
   780  1487  008A               	movwf pclath
   781  1488  087F               	movf btemp+1,w
   782  1489  0082               	movwf pc
   783                           global init_ram
   784                           ;Called with:
   785                           ;	high address of idata address in btemp 
   786                           ;	low address of idata address in btemp+1 
   787                           ;	low address of data in FSR
   788                           ;	high address + 1 of data in btemp-1
   789  148A                     init_ram:
   790  148A  160A  118A  2486   	fcall init_fetch
              160A  118A         
   791  148F  0080               	movwf indf,f
   792  1490  0A84               	incf fsr,f
   793  1491  0804               	movf fsr,w
   794  1492  067D               	xorwf btemp-1,w
   795  1493  1903               	btfsc status,2
   796  1494  3400               	retlw 0
   797  1495  0AFF               	incf btemp+1,f
   798  1496  1903               	btfsc status,2
   799  1497  0AFE               	incf btemp,f
   800  1498  2C8A               	goto init_ram
   801                           ; Initialize objects allocated to BANK1
   802                           psect cinit,class=CODE,delta=2
   803                           global init_ram, __pidataBANK1
   804  08C3  1383               	bcf	status, 7	;select IRP bank0
   805  08C4  30E4               	movlw low(__pdataBANK1+13)
   806  08C5  00FD               	movwf btemp-1,f
   807  08C6  3007               	movlw high(__pidataBANK1)
   808  08C7  00FE               	movwf btemp,f
   809  08C8  30F2               	movlw low(__pidataBANK1)
   810  08C9  00FF               	movwf btemp+1,f
   811  08CA  30D7               	movlw low(__pdataBANK1)
   812  08CB  0084               	movwf fsr,f
   813  08CC  160A  118A  248A   	fcall init_ram
              120A  158A         
   814                           psect cinit,class=CODE,delta=2
   815                           global end_of_initialization
   816                           
   817                           ;End of C runtime variable initialization code
   818                           
   819  08D1                     end_of_initialization:
   820  08D1  0183               clrf status
   821  08D2  120A  118A  2815   ljmp _main	;jump to C main() function
   822                           psect	cstackCOMMON,class=COMMON,space=1
   823                           global __pcstackCOMMON
   824  0072                     __pcstackCOMMON:
   825                           	global	?_ser_init
   826  0072                     ?_ser_init:	; 0 bytes @ 0x0
   827                           	global	?_robo_init
   828  0072                     ?_robo_init:	; 0 bytes @ 0x0
   829                           	global	?_robot_read
   830  0072                     ?_robot_read:	; 0 bytes @ 0x0
   831                           	global	?_readAvgDistance
   832  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   833                           	global	?_UpdateDisplay
   834  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   835                           	global	?_calibrateIR
   836  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   837                           	global	?_ChargeMode
   838  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   839                           	global	?_ser_putch
   840  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   841                           	global	?_ADCconvert
   842  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   843                           	global	?_init_adc
   844  0072                     ?_init_adc:	; 0 bytes @ 0x0
   845                           	global	?_lcd_write_control
   846  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   847                           	global	?_lcd_write_data
   848  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   849                           	global	?_lcd_set_cursor
   850  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   851                           	global	?_lcd_init
   852  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   853                           	global	?_isr1
   854  0072                     ?_isr1:	; 0 bytes @ 0x0
   855                           	global	?_init
   856  0072                     ?_init:	; 0 bytes @ 0x0
   857                           	global	?_main
   858  0072                     ?_main:	; 0 bytes @ 0x0
   859                           	global	?_Debounce
   860  0072                     ?_Debounce:	; 0 bytes @ 0x0
   861                           	global	??_Debounce
   862  0072                     ??_Debounce:	; 0 bytes @ 0x0
   863                           	global	?_ser_isrx
   864  0072                     ?_ser_isrx:	; 1 bit 
   865                           	global	?_ReadButtons
   866  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   867                           	global	?_Menu
   868  0072                     ?_Menu:	; 1 bytes @ 0x0
   869                           	global	?_ser_getch
   870  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   871                           	global	?_adc_read_channel
   872  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   873                           	global	?_spi_transfer
   874  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   875                           	global	?i1___lwmod
   876  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   877                           	global	i1___lwmod@divisor
   878  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   879  0072                     	ds	1
   880                           	global	??_ReadButtons
   881  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   882  0073                     	ds	1
   883                           	global	i1___lwmod@dividend
   884  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   885  0074                     	ds	2
   886                           	global	??i1___lwmod
   887  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   888  0076                     	ds	1
   889                           	global	i1___lwmod@counter
   890  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   891  0077                     	ds	1
   892                           	global	??_isr1
   893  0078                     ??_isr1:	; 0 bytes @ 0x6
   894  0078                     	ds	5
   895                           psect	cstackBANK0,class=BANK0,space=1
   896                           global __pcstackBANK0
   897  0020                     __pcstackBANK0:
   898                           	global	??_ser_init
   899  0020                     ??_ser_init:	; 0 bytes @ 0x0
   900                           	global	??_Menu
   901  0020                     ??_Menu:	; 0 bytes @ 0x0
   902                           	global	??_ser_putch
   903  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   904                           	global	??_ser_getch
   905  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   906                           	global	??_init_adc
   907  0020                     ??_init_adc:	; 0 bytes @ 0x0
   908                           	global	??_lcd_write_control
   909  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   910                           	global	??_lcd_write_data
   911  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   912                           	global	??_spi_transfer
   913  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   914                           	global	??_ser_isrx
   915  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   916                           	global	?_adc_read
   917  0020                     ?_adc_read:	; 2 bytes @ 0x0
   918                           	global	?___wmul
   919  0020                     ?___wmul:	; 2 bytes @ 0x0
   920                           	global	?___awmod
   921  0020                     ?___awmod:	; 2 bytes @ 0x0
   922                           	global	?___ftpack
   923  0020                     ?___ftpack:	; 3 bytes @ 0x0
   924                           	global	Menu@BTN_input
   925  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   926                           	global	___wmul@multiplier
   927  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   928                           	global	___awmod@divisor
   929  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   930                           	global	___ftpack@arg
   931  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
   932  0020                     	ds	1
   933                           	global	spi_transfer@temp
   934  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   935                           	global	ser_getch@c
   936  0021                     ser_getch@c:	; 1 bytes @ 0x1
   937                           	global	ser_putch@c
   938  0021                     ser_putch@c:	; 1 bytes @ 0x1
   939  0021                     	ds	1
   940                           	global	??_adc_read
   941  0022                     ??_adc_read:	; 0 bytes @ 0x2
   942                           	global	??_robo_init
   943  0022                     ??_robo_init:	; 0 bytes @ 0x2
   944                           	global	??_robot_read
   945  0022                     ??_robot_read:	; 0 bytes @ 0x2
   946                           	global	?_robotTurn
   947  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   948                           	global	?_RobotDrive
   949  0022                     ?_RobotDrive:	; 0 bytes @ 0x2
   950                           	global	lcd_write_control@databyte
   951  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   952                           	global	lcd_write_data@databyte
   953  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   954                           	global	spi_transfer@data
   955  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   956                           	global	RobotDrive@speed
   957  0022                     RobotDrive@speed:	; 2 bytes @ 0x2
   958                           	global	robotTurn@degrees
   959  0022                     robotTurn@degrees:	; 2 bytes @ 0x2
   960                           	global	___wmul@multiplicand
   961  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   962                           	global	___awmod@dividend
   963  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   964  0022                     	ds	1
   965                           	global	?_rotate
   966  0023                     ?_rotate:	; 0 bytes @ 0x3
   967                           	global	??_lcd_set_cursor
   968  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   969                           	global	??_lcd_init
   970  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   971                           	global	??_init
   972  0023                     ??_init:	; 0 bytes @ 0x3
   973                           	global	lcd_set_cursor@address
   974  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   975                           	global	___ftpack@exp
   976  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
   977                           	global	rotate@numsteps
   978  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   979  0023                     	ds	1
   980                           	global	??_robotTurn
   981  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   982                           	global	??_RobotDrive
   983  0024                     ??_RobotDrive:	; 0 bytes @ 0x4
   984                           	global	??___wmul
   985  0024                     ??___wmul:	; 0 bytes @ 0x4
   986                           	global	??___awmod
   987  0024                     ??___awmod:	; 0 bytes @ 0x4
   988                           	global	___ftpack@sign
   989  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
   990                           	global	adc_read@adc_value
   991  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   992                           	global	___wmul@product
   993  0024                     ___wmul@product:	; 2 bytes @ 0x4
   994  0024                     	ds	1
   995                           	global	??___ftpack
   996  0025                     ??___ftpack:	; 0 bytes @ 0x5
   997                           	global	rotate@direction
   998  0025                     rotate@direction:	; 1 bytes @ 0x5
   999                           	global	RobotDrive@speedlowByte
  1000  0025                     RobotDrive@speedlowByte:	; 1 bytes @ 0x5
  1001                           	global	___awmod@counter
  1002  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1003  0025                     	ds	1
  1004                           	global	??_rotate
  1005  0026                     ??_rotate:	; 0 bytes @ 0x6
  1006                           	global	??_adc_read_channel
  1007  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1008                           	global	?_abs
  1009  0026                     ?_abs:	; 2 bytes @ 0x6
  1010                           	global	?___lwdiv
  1011  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1012                           	global	RobotDrive@speedhighByte
  1013  0026                     RobotDrive@speedhighByte:	; 1 bytes @ 0x6
  1014                           	global	___awmod@sign
  1015  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1016                           	global	abs@v
  1017  0026                     abs@v:	; 2 bytes @ 0x6
  1018                           	global	___lwdiv@divisor
  1019  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1020  0026                     	ds	1
  1021                           	global	?_lcd_write_string
  1022  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1023                           	global	adc_read_channel@channel
  1024  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1025                           	global	lcd_write_string@s
  1026  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1027  0027                     	ds	1
  1028                           	global	??_abs
  1029  0028                     ??_abs:	; 0 bytes @ 0x8
  1030                           	global	?_readDistance
  1031  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1032                           	global	?___fttol
  1033  0028                     ?___fttol:	; 4 bytes @ 0x8
  1034                           	global	rotate@i
  1035  0028                     rotate@i:	; 2 bytes @ 0x8
  1036                           	global	___lwdiv@dividend
  1037  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1038                           	global	___fttol@f1
  1039  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1040  0028                     	ds	1
  1041                           	global	??_lcd_write_string
  1042  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1043  0029                     	ds	1
  1044                           	global	??_readDistance
  1045  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1046                           	global	??___lwdiv
  1047  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1048  002A                     	ds	1
  1049                           	global	___lwdiv@quotient
  1050  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1051  002B                     	ds	1
  1052                           	global	??___fttol
  1053  002C                     ??___fttol:	; 0 bytes @ 0xC
  1054                           	global	readDistance@readVal
  1055  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1056  002C                     	ds	1
  1057                           	global	___lwdiv@counter
  1058  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1059  002D                     	ds	1
  1060                           	global	??_ADCconvert
  1061  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1062                           	global	?___lwmod
  1063  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1064                           	global	___lwmod@divisor
  1065  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1066  002E                     	ds	2
  1067                           	global	??_readAvgDistance
  1068  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1069                           	global	___fttol@sign1
  1070  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1071                           	global	readAvgDistance@fullval
  1072  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1073                           	global	___lwmod@dividend
  1074  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1075  0030                     	ds	1
  1076                           	global	___fttol@lval
  1077  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1078  0031                     	ds	1
  1079                           	global	??___lwmod
  1080  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1081                           	global	readAvgDistance@j
  1082  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1083  0032                     	ds	1
  1084                           	global	___lwmod@counter
  1085  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1086  0033                     	ds	1
  1087                           	global	?_sprintf
  1088  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1089                           	global	sprintf@f
  1090  0034                     sprintf@f:	; 1 bytes @ 0x14
  1091                           	global	readAvgDistance@tempIR
  1092  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1093  0034                     	ds	1
  1094                           	global	___fttol@exp1
  1095  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1096  0035                     	ds	1
  1097                           	global	?___awtoft
  1098  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1099                           	global	readAvgDistance@i
  1100  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1101                           	global	___awtoft@c
  1102  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1103  0036                     	ds	3
  1104                           	global	??_sprintf
  1105  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1106                           	global	??___awtoft
  1107  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1108  0039                     	ds	2
  1109                           	global	___awtoft@sign
  1110  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1111  003B                     	ds	1
  1112                           	global	?___ftmul
  1113  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  1114                           	global	sprintf@ap
  1115  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1116                           	global	___ftmul@f1
  1117  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  1118  003C                     	ds	1
  1119                           	global	sprintf@flag
  1120  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1121  003D                     	ds	1
  1122                           	global	sprintf@prec
  1123  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1124  003E                     	ds	1
  1125                           	global	___ftmul@f2
  1126  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  1127                           	global	sprintf@_val
  1128  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1129  003F                     	ds	3
  1130                           	global	??___ftmul
  1131  0042                     ??___ftmul:	; 0 bytes @ 0x22
  1132  0042                     	ds	1
  1133                           	global	sprintf@sp
  1134  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1135  0043                     	ds	1
  1136                           	global	sprintf@c
  1137  0044                     sprintf@c:	; 1 bytes @ 0x24
  1138  0044                     	ds	1
  1139                           	global	??_UpdateDisplay
  1140  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1141  0045                     	ds	1
  1142                           	global	___ftmul@exp
  1143  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  1144  0046                     	ds	1
  1145                           	global	___ftmul@f3_as_product
  1146  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  1147  0047                     	ds	2
  1148                           	global	UpdateDisplay@adcOutput
  1149  0049                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x29
  1150  0049                     	ds	1
  1151                           	global	___ftmul@cntr
  1152  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  1153  004A                     	ds	1
  1154                           	global	___ftmul@sign
  1155  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  1156  004B                     	ds	14
  1157                           	global	??_calibrateIR
  1158  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1159                           	global	?_robotMoveSpeed
  1160  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1161                           	global	??_ChargeMode
  1162  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1163                           	global	?_scan360
  1164  0059                     ?_scan360:	; 2 bytes @ 0x39
  1165                           	global	robotMoveSpeed@distance
  1166  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1167  0059                     	ds	2
  1168                           	global	??_scan360
  1169  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1170                           	global	scan360@lowestVal
  1171  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1172                           	global	robotMoveSpeed@speed
  1173  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1174  005B                     	ds	2
  1175                           	global	??_robotMoveSpeed
  1176  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1177                           	global	scan360@lowestSteps
  1178  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1179  005D                     	ds	2
  1180                           	global	scan360@steps
  1181  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1182  005F                     	ds	1
  1183                           	global	robotMoveSpeed@temp1
  1184  0060                     robotMoveSpeed@temp1:	; 2 bytes @ 0x40
  1185  0060                     	ds	2
  1186                           	global	??_main
  1187  0062                     ??_main:	; 0 bytes @ 0x42
  1188  0062                     	ds	3
  1189                           	global	main@direction1
  1190  0065                     main@direction1:	; 2 bytes @ 0x45
  1191  0065                     	ds	2
  1192                           	global	main@RT2A
  1193  0067                     main@RT2A:	; 2 bytes @ 0x47
  1194  0067                     	ds	2
  1195                           	global	main@shortwall
  1196  0069                     main@shortwall:	; 2 bytes @ 0x49
  1197  0069                     	ds	2
  1198                           	global	main@choice
  1199  006B                     main@choice:	; 1 bytes @ 0x4B
  1200  006B                     	ds	1
  1201                           	global	main@shortwall_3011
  1202  006C                     main@shortwall_3011:	; 2 bytes @ 0x4C
  1203  006C                     	ds	2
  1204                           	global	main@RT2P
  1205  006E                     main@RT2P:	; 2 bytes @ 0x4E
  1206  006E                     	ds	2
  1207 ;;Data sizes: Strings 147, constant 10, data 13, bss 88, persistent 0 stack 0
  1208 ;;Auto spaces:   Size  Autos    Used
  1209 ;; COMMON          14     11      14
  1210 ;; BANK0           80     80      80
  1211 ;; BANK1           80      0      68
  1212 ;; BANK3           96      0      32
  1213 ;; BANK2           96      0       0
  1214                           
  1215 ;;
  1216 ;; Pointer list with targets:
  1217                           
  1218 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1219 ;;
  1220 ;; ?___ftpack	float  size(1) Largest target is 2
  1221 ;;		 -> FollowWall@RT2P(COMMON[2]), main@RT2P(BANK0[2]), 
  1222 ;;
  1223 ;; ?_abs	int  size(1) Largest target is 0
  1224 ;;
  1225 ;; ?___awmod	int  size(1) Largest target is 0
  1226 ;;
  1227 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1228 ;;
  1229 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1230 ;;
  1231 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1232 ;;
  1233 ;; ?_scan360	int  size(1) Largest target is 0
  1234 ;;
  1235 ;; ?___fttol	long  size(1) Largest target is 0
  1236 ;;
  1237 ;; ?___ftmul	float  size(1) Largest target is 0
  1238 ;;
  1239 ;; ?___awtoft	float  size(1) Largest target is 0
  1240 ;;
  1241 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1242 ;;
  1243 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1244 ;;
  1245 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1246 ;;		 -> STR_13(CODE[13]), 
  1247 ;;
  1248 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1249 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1250 ;;
  1251 ;; ?_sprintf	int  size(1) Largest target is 0
  1252 ;;
  1253 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1254 ;;		 -> ?_sprintf(BANK0[2]), 
  1255 ;;
  1256 ;; S8182$_cp	PTR const unsigned char  size(1) Largest target is 0
  1257 ;;
  1258 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1259 ;;
  1260 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1261 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1262 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1263 ;;
  1264 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1265 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1266 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1267 ;;
  1268 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1269 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1270 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@adcOutput(BANK0[16]), STR_12(CODE[4]), 
  1271 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1272 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1273 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1274 ;;
  1275                           
  1276                           
  1277 ;;
  1278 ;; Critical Paths under _main in COMMON
  1279 ;;
  1280 ;;   None.
  1281 ;;
  1282 ;; Critical Paths under _isr1 in COMMON
  1283 ;;
  1284 ;;   _isr1->i1___lwmod
  1285 ;;   _ReadButtons->_Debounce
  1286 ;;
  1287 ;; Critical Paths under _main in BANK0
  1288 ;;
  1289 ;;   _main->_robotMoveSpeed
  1290 ;;   _ChargeMode->_UpdateDisplay
  1291 ;;   _robotMoveSpeed->_UpdateDisplay
  1292 ;;   _scan360->_UpdateDisplay
  1293 ;;   _calibrateIR->_UpdateDisplay
  1294 ;;   _UpdateDisplay->_sprintf
  1295 ;;   _readAvgDistance->_ADCconvert
  1296 ;;   _readDistance->_adc_read_channel
  1297 ;;   _robot_read->_ser_putch
  1298 ;;   _robot_read->_ser_getch
  1299 ;;   _lcd_init->_lcd_write_control
  1300 ;;   _lcd_write_string->___awmod
  1301 ;;   _lcd_set_cursor->_lcd_write_control
  1302 ;;   ___awtoft->___fttol
  1303 ;;   ___ftmul->___awtoft
  1304 ;;   _abs->___wmul
  1305 ;;   _RobotDrive->_ser_putch
  1306 ;;   _sprintf->___lwmod
  1307 ;;   _ADCconvert->___lwdiv
  1308 ;;   _robotTurn->_ser_putch
  1309 ;;   _rotate->_spi_transfer
  1310 ;;   _robo_init->_ser_putch
  1311 ;;   _adc_read_channel->_adc_read
  1312 ;;   ___fttol->___ftpack
  1313 ;;   ___lwmod->___lwdiv
  1314 ;;   ___lwdiv->___wmul
  1315 ;;
  1316 ;; Critical Paths under _isr1 in BANK0
  1317 ;;
  1318 ;;   None.
  1319 ;;
  1320 ;; Critical Paths under _main in BANK1
  1321 ;;
  1322 ;;   None.
  1323 ;;
  1324 ;; Critical Paths under _isr1 in BANK1
  1325 ;;
  1326 ;;   None.
  1327 ;;
  1328 ;; Critical Paths under _main in BANK3
  1329 ;;
  1330 ;;   None.
  1331 ;;
  1332 ;; Critical Paths under _isr1 in BANK3
  1333 ;;
  1334 ;;   None.
  1335 ;;
  1336 ;; Critical Paths under _main in BANK2
  1337 ;;
  1338 ;;   None.
  1339 ;;
  1340 ;; Critical Paths under _isr1 in BANK2
  1341 ;;
  1342 ;;   None.
  1343                           
  1344 ;;
  1345 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1346 ;;
  1347                           
  1348 ;;
  1349 ;;Call Graph Tables:
  1350 ;;
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1353 ;; ---------------------------------------------------------------------------------
  1354 ;; (0) _main                                                14    14      0   10335
  1355 ;;                                             66 BANK0     14    14      0
  1356 ;;                               _init
  1357 ;;                         _robot_read
  1358 ;;                    _readAvgDistance
  1359 ;;                      _UpdateDisplay
  1360 ;;                               _Menu
  1361 ;;                        _calibrateIR
  1362 ;;                            _scan360
  1363 ;;                             _rotate
  1364 ;;                     _robotMoveSpeed
  1365 ;;                          _robotTurn
  1366 ;;                           ___awtoft
  1367 ;;                            ___ftmul
  1368 ;;                            ___fttol
  1369 ;;                         _ChargeMode
  1370 ;; ---------------------------------------------------------------------------------
  1371 ;; (1) _ChargeMode                                           1     1      0    1305
  1372 ;;                                             57 BANK0      1     1      0
  1373 ;;                          _ser_putch
  1374 ;;                      _UpdateDisplay
  1375 ;; ---------------------------------------------------------------------------------
  1376 ;; (1) _robotMoveSpeed                                       9     5      4    1711
  1377 ;;                                             57 BANK0      9     5      4
  1378 ;;                         _RobotDrive
  1379 ;;                         _robot_read
  1380 ;;                      _UpdateDisplay
  1381 ;;                                _abs
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; (1) _scan360                                              8     6      2    2122
  1384 ;;                                             57 BANK0      8     6      2
  1385 ;;                    _readAvgDistance
  1386 ;;                             _rotate
  1387 ;;                      _UpdateDisplay
  1388 ;; ---------------------------------------------------------------------------------
  1389 ;; (1) _calibrateIR                                          0     0      0    1381
  1390 ;;                             _rotate
  1391 ;;                      _UpdateDisplay
  1392 ;; ---------------------------------------------------------------------------------
  1393 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1394 ;;                                             37 BANK0     20    20      0
  1395 ;;                  _lcd_write_control
  1396 ;;                            _sprintf
  1397 ;;                     _lcd_set_cursor
  1398 ;;                   _lcd_write_string
  1399 ;;                            ___awmod
  1400 ;; ---------------------------------------------------------------------------------
  1401 ;; (2) _readAvgDistance                                      8     8      0     625
  1402 ;;                                             16 BANK0      8     8      0
  1403 ;;                       _readDistance
  1404 ;;                            ___lwdiv
  1405 ;;                         _ADCconvert
  1406 ;; ---------------------------------------------------------------------------------
  1407 ;; (1) _init                                                 1     1      0      44
  1408 ;;                                              3 BANK0      1     1      0
  1409 ;;                           _ser_init
  1410 ;;                           _init_adc
  1411 ;;                           _lcd_init
  1412 ;;                          _robo_init
  1413 ;; ---------------------------------------------------------------------------------
  1414 ;; (3) _readDistance                                         6     4      2      69
  1415 ;;                                              8 BANK0      6     4      2
  1416 ;;                   _adc_read_channel
  1417 ;; ---------------------------------------------------------------------------------
  1418 ;; (2) _robot_read                                           2     2      0      45
  1419 ;;                                              2 BANK0      2     2      0
  1420 ;;                          _ser_putch
  1421 ;;                          _ser_getch
  1422 ;; ---------------------------------------------------------------------------------
  1423 ;; (2) _lcd_init                                             0     0      0      22
  1424 ;;                  _lcd_write_control
  1425 ;; ---------------------------------------------------------------------------------
  1426 ;; (3) _lcd_write_string                                     2     0      2      67
  1427 ;;                                              7 BANK0      2     0      2
  1428 ;;                     _lcd_write_data
  1429 ;;                            ___awmod (ARG)
  1430 ;; ---------------------------------------------------------------------------------
  1431 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1432 ;;                                              3 BANK0      1     1      0
  1433 ;;                  _lcd_write_control
  1434 ;; ---------------------------------------------------------------------------------
  1435 ;; (1) ___awtoft                                             6     3      3     300
  1436 ;;                                             22 BANK0      6     3      3
  1437 ;;                           ___ftpack
  1438 ;;                            ___fttol (ARG)
  1439 ;; ---------------------------------------------------------------------------------
  1440 ;; (1) ___ftmul                                             16    10      6     535
  1441 ;;                                             28 BANK0     16    10      6
  1442 ;;                           ___ftpack
  1443 ;;                           ___awtoft (ARG)
  1444 ;;                            ___fttol (ARG)
  1445 ;; ---------------------------------------------------------------------------------
  1446 ;; (2) _abs                                                  4     2      2     158
  1447 ;;                                              6 BANK0      4     2      2
  1448 ;;                             ___wmul
  1449 ;; ---------------------------------------------------------------------------------
  1450 ;; (2) _RobotDrive                                           5     3      2     112
  1451 ;;                                              2 BANK0      5     3      2
  1452 ;;                          _ser_putch
  1453 ;; ---------------------------------------------------------------------------------
  1454 ;; (3) _ser_getch                                            2     2      0      23
  1455 ;;                                              0 BANK0      2     2      0
  1456 ;;                           _ser_isrx
  1457 ;; ---------------------------------------------------------------------------------
  1458 ;; (3) _sprintf                                             17    12      5     798
  1459 ;;                                             20 BANK0     17    12      5
  1460 ;;                            ___lwdiv
  1461 ;;                            ___lwmod
  1462 ;; ---------------------------------------------------------------------------------
  1463 ;; (3) _ADCconvert                                           2     2      0     254
  1464 ;;                                             14 BANK0      2     2      0
  1465 ;;                             ___wmul
  1466 ;;                            ___lwdiv
  1467 ;; ---------------------------------------------------------------------------------
  1468 ;; (1) _robotTurn                                            3     1      2      88
  1469 ;;                                              2 BANK0      3     1      2
  1470 ;;                          _ser_putch
  1471 ;; ---------------------------------------------------------------------------------
  1472 ;; (1) _rotate                                               7     4      3      98
  1473 ;;                                              3 BANK0      7     4      3
  1474 ;;                       _spi_transfer
  1475 ;; ---------------------------------------------------------------------------------
  1476 ;; (2) _robo_init                                            0     0      0      22
  1477 ;;                          _ser_putch
  1478 ;; ---------------------------------------------------------------------------------
  1479 ;; (4) _lcd_write_data                                       3     3      0      22
  1480 ;;                                              0 BANK0      3     3      0
  1481 ;; ---------------------------------------------------------------------------------
  1482 ;; (4) _lcd_write_control                                    3     3      0      22
  1483 ;;                                              0 BANK0      3     3      0
  1484 ;; ---------------------------------------------------------------------------------
  1485 ;; (2) _init_adc                                             1     1      0       0
  1486 ;;                                              0 BANK0      1     1      0
  1487 ;; ---------------------------------------------------------------------------------
  1488 ;; (4) _adc_read_channel                                     2     2      0      46
  1489 ;;                                              6 BANK0      2     2      0
  1490 ;;                           _adc_read
  1491 ;; ---------------------------------------------------------------------------------
  1492 ;; (3) ___awmod                                              7     3      4     296
  1493 ;;                                              0 BANK0      7     3      4
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (1) ___fttol                                             14    10      4     252
  1496 ;;                                              8 BANK0     14    10      4
  1497 ;;                           ___ftpack (ARG)
  1498 ;; ---------------------------------------------------------------------------------
  1499 ;; (2) ___ftpack                                             8     3      5     209
  1500 ;;                                              0 BANK0      8     3      5
  1501 ;; ---------------------------------------------------------------------------------
  1502 ;; (4) ___lwmod                                              6     2      4     159
  1503 ;;                                             14 BANK0      6     2      4
  1504 ;;                            ___lwdiv (ARG)
  1505 ;; ---------------------------------------------------------------------------------
  1506 ;; (4) ___lwdiv                                              8     4      4     162
  1507 ;;                                              6 BANK0      8     4      4
  1508 ;;                             ___wmul (ARG)
  1509 ;; ---------------------------------------------------------------------------------
  1510 ;; (3) ___wmul                                               6     2      4      92
  1511 ;;                                              0 BANK0      6     2      4
  1512 ;; ---------------------------------------------------------------------------------
  1513 ;; (4) _ser_isrx                                             0     0      0       0
  1514 ;; ---------------------------------------------------------------------------------
  1515 ;; (2) _spi_transfer                                         3     3      0      30
  1516 ;;                                              0 BANK0      3     3      0
  1517 ;; ---------------------------------------------------------------------------------
  1518 ;; (2) _ser_putch                                            2     2      0      22
  1519 ;;                                              0 BANK0      2     2      0
  1520 ;; ---------------------------------------------------------------------------------
  1521 ;; (1) _Menu                                                 1     1      0      22
  1522 ;;                                              0 BANK0      1     1      0
  1523 ;; ---------------------------------------------------------------------------------
  1524 ;; (2) _ser_init                                             1     1      0       0
  1525 ;;                                              0 BANK0      1     1      0
  1526 ;; ---------------------------------------------------------------------------------
  1527 ;; (5) _adc_read                                             6     4      2      24
  1528 ;;                                              0 BANK0      6     4      2
  1529 ;; ---------------------------------------------------------------------------------
  1530 ;; Estimated maximum stack depth 5
  1531 ;; ---------------------------------------------------------------------------------
  1532 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1533 ;; ---------------------------------------------------------------------------------
  1534 ;; (6) _isr1                                                 5     5      0     521
  1535 ;;                                              6 COMMON     5     5      0
  1536 ;;                          i1___lwmod
  1537 ;;                        _ReadButtons
  1538 ;; ---------------------------------------------------------------------------------
  1539 ;; (7) _ReadButtons                                          0     0      0       0
  1540 ;;                           _Debounce
  1541 ;; ---------------------------------------------------------------------------------
  1542 ;; (7) i1___lwmod                                            6     2      4     521
  1543 ;;                                              0 COMMON     6     2      4
  1544 ;; ---------------------------------------------------------------------------------
  1545 ;; (8) _Debounce                                             1     1      0       0
  1546 ;;                                              0 COMMON     1     1      0
  1547 ;; ---------------------------------------------------------------------------------
  1548 ;; Estimated maximum stack depth 8
  1549 ;; ---------------------------------------------------------------------------------
  1550                           
  1551 ;; Call Graph Graphs:
  1552                           
  1553 ;; _main (ROOT)
  1554 ;;   _init
  1555 ;;     _ser_init
  1556 ;;     _init_adc
  1557 ;;     _lcd_init
  1558 ;;       _lcd_write_control
  1559 ;;     _robo_init
  1560 ;;       _ser_putch
  1561 ;;   _robot_read
  1562 ;;     _ser_putch
  1563 ;;     _ser_getch
  1564 ;;       _ser_isrx
  1565 ;;   _readAvgDistance
  1566 ;;     _readDistance
  1567 ;;       _adc_read_channel
  1568 ;;         _adc_read
  1569 ;;     ___lwdiv
  1570 ;;       ___wmul (ARG)
  1571 ;;     _ADCconvert
  1572 ;;       ___wmul
  1573 ;;       ___lwdiv
  1574 ;;         ___wmul (ARG)
  1575 ;;   _UpdateDisplay
  1576 ;;     _lcd_write_control
  1577 ;;     _sprintf
  1578 ;;       ___lwdiv
  1579 ;;         ___wmul (ARG)
  1580 ;;       ___lwmod
  1581 ;;         ___lwdiv (ARG)
  1582 ;;           ___wmul (ARG)
  1583 ;;     _lcd_set_cursor
  1584 ;;       _lcd_write_control
  1585 ;;     _lcd_write_string
  1586 ;;       _lcd_write_data
  1587 ;;       ___awmod (ARG)
  1588 ;;     ___awmod
  1589 ;;   _Menu
  1590 ;;   _calibrateIR
  1591 ;;     _rotate
  1592 ;;       _spi_transfer
  1593 ;;     _UpdateDisplay
  1594 ;;       _lcd_write_control
  1595 ;;       _sprintf
  1596 ;;         ___lwdiv
  1597 ;;           ___wmul (ARG)
  1598 ;;         ___lwmod
  1599 ;;           ___lwdiv (ARG)
  1600 ;;             ___wmul (ARG)
  1601 ;;       _lcd_set_cursor
  1602 ;;         _lcd_write_control
  1603 ;;       _lcd_write_string
  1604 ;;         _lcd_write_data
  1605 ;;         ___awmod (ARG)
  1606 ;;       ___awmod
  1607 ;;   _scan360
  1608 ;;     _readAvgDistance
  1609 ;;       _readDistance
  1610 ;;         _adc_read_channel
  1611 ;;           _adc_read
  1612 ;;       ___lwdiv
  1613 ;;         ___wmul (ARG)
  1614 ;;       _ADCconvert
  1615 ;;         ___wmul
  1616 ;;         ___lwdiv
  1617 ;;           ___wmul (ARG)
  1618 ;;     _rotate
  1619 ;;       _spi_transfer
  1620 ;;     _UpdateDisplay
  1621 ;;       _lcd_write_control
  1622 ;;       _sprintf
  1623 ;;         ___lwdiv
  1624 ;;           ___wmul (ARG)
  1625 ;;         ___lwmod
  1626 ;;           ___lwdiv (ARG)
  1627 ;;             ___wmul (ARG)
  1628 ;;       _lcd_set_cursor
  1629 ;;         _lcd_write_control
  1630 ;;       _lcd_write_string
  1631 ;;         _lcd_write_data
  1632 ;;         ___awmod (ARG)
  1633 ;;       ___awmod
  1634 ;;   _rotate
  1635 ;;     _spi_transfer
  1636 ;;   _robotMoveSpeed
  1637 ;;     _RobotDrive
  1638 ;;       _ser_putch
  1639 ;;     _robot_read
  1640 ;;       _ser_putch
  1641 ;;       _ser_getch
  1642 ;;         _ser_isrx
  1643 ;;     _UpdateDisplay
  1644 ;;       _lcd_write_control
  1645 ;;       _sprintf
  1646 ;;         ___lwdiv
  1647 ;;           ___wmul (ARG)
  1648 ;;         ___lwmod
  1649 ;;           ___lwdiv (ARG)
  1650 ;;             ___wmul (ARG)
  1651 ;;       _lcd_set_cursor
  1652 ;;         _lcd_write_control
  1653 ;;       _lcd_write_string
  1654 ;;         _lcd_write_data
  1655 ;;         ___awmod (ARG)
  1656 ;;       ___awmod
  1657 ;;     _abs
  1658 ;;       ___wmul
  1659 ;;   _robotTurn
  1660 ;;     _ser_putch
  1661 ;;   ___awtoft
  1662 ;;     ___ftpack
  1663 ;;     ___fttol (ARG)
  1664 ;;       ___ftpack (ARG)
  1665 ;;   ___ftmul
  1666 ;;     ___ftpack
  1667 ;;     ___awtoft (ARG)
  1668 ;;       ___ftpack
  1669 ;;       ___fttol (ARG)
  1670 ;;         ___ftpack (ARG)
  1671 ;;     ___fttol (ARG)
  1672 ;;       ___ftpack (ARG)
  1673 ;;   ___fttol
  1674 ;;     ___ftpack (ARG)
  1675 ;;   _ChargeMode
  1676 ;;     _ser_putch
  1677 ;;     _UpdateDisplay
  1678 ;;       _lcd_write_control
  1679 ;;       _sprintf
  1680 ;;         ___lwdiv
  1681 ;;           ___wmul (ARG)
  1682 ;;         ___lwmod
  1683 ;;           ___lwdiv (ARG)
  1684 ;;             ___wmul (ARG)
  1685 ;;       _lcd_set_cursor
  1686 ;;         _lcd_write_control
  1687 ;;       _lcd_write_string
  1688 ;;         _lcd_write_data
  1689 ;;         ___awmod (ARG)
  1690 ;;       ___awmod
  1691 ;;
  1692 ;; _isr1 (ROOT)
  1693 ;;   i1___lwmod
  1694 ;;   _ReadButtons
  1695 ;;     _Debounce
  1696 ;;
  1697                           
  1698 ;; Address spaces:
  1699                           
  1700 ;;Name               Size   Autos  Total    Cost      Usage
  1701 ;;BANK3               60      0      20       9       33.3%
  1702 ;;BITBANK3            60      0       0       8        0.0%
  1703 ;;SFR3                 0      0       0       4        0.0%
  1704 ;;BITSFR3              0      0       0       4        0.0%
  1705 ;;BANK2               60      0       0      11        0.0%
  1706 ;;BITBANK2            60      0       0      10        0.0%
  1707 ;;SFR2                 0      0       0       5        0.0%
  1708 ;;BITSFR2              0      0       0       5        0.0%
  1709 ;;SFR1                 0      0       0       2        0.0%
  1710 ;;BITSFR1              0      0       0       2        0.0%
  1711 ;;BANK1               50      0      44       7       85.0%
  1712 ;;BITBANK1            50      0       0       6        0.0%
  1713 ;;CODE                 0      0       0       0        0.0%
  1714 ;;DATA                 0      0      CD      12        0.0%
  1715 ;;ABS                  0      0      C2       3        0.0%
  1716 ;;NULL                 0      0       0       0        0.0%
  1717 ;;STACK                0      0       B       2        0.0%
  1718 ;;BANK0               50     50      50       5      100.0%
  1719 ;;BITBANK0            50      0       0       4        0.0%
  1720 ;;SFR0                 0      0       0       1        0.0%
  1721 ;;BITSFR0              0      0       0       1        0.0%
  1722 ;;COMMON               E      B       E       1      100.0%
  1723 ;;BITCOMMON            E      0       2       0       14.3%
  1724 ;;EEDATA             100      0       0       0        0.0%
  1725                           
  1726                           	global	_main
  1727                           psect	maintext,global,class=CODE,delta=2
  1728                           global __pmaintext
  1729  0015                     __pmaintext:
  1730                           
  1731 ;; *************** function _main *****************
  1732 ;; Defined at:
  1733 ;;		line 170 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  RT2P            2   78[BANK0 ] int 
  1738 ;;  shortwall       2   76[BANK0 ] int 
  1739 ;;  RT2A            2   71[BANK0 ] int 
  1740 ;;  direction1      2   69[BANK0 ] int 
  1741 ;;  shortwall       2   73[BANK0 ] int 
  1742 ;;  choice          1   75[BANK0 ] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;		None               void
  1745 ;; Registers used:
  1746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 17F/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         0      11       0       0       0
  1754 ;;      Temps:          0       3       0       0       0
  1755 ;;      Totals:         0      14       0       0       0
  1756 ;;Total ram usage:       14 bytes
  1757 ;; Hardware stack levels required when called:    8
  1758 ;; This function calls:
  1759 ;;		_init
  1760 ;;		_robot_read
  1761 ;;		_readAvgDistance
  1762 ;;		_UpdateDisplay
  1763 ;;		_Menu
  1764 ;;		_calibrateIR
  1765 ;;		_scan360
  1766 ;;		_rotate
  1767 ;;		_robotMoveSpeed
  1768 ;;		_robotTurn
  1769 ;;		___awtoft
  1770 ;;		___ftmul
  1771 ;;		___fttol
  1772 ;;		_ChargeMode
  1773 ;; This function is called by:
  1774 ;;		Startup code after reset
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           psect	maintext
  1778                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1779                           	line	170
  1780                           	global	__size_of_main
  1781  0293                     	__size_of_main	equ	__end_of_main-_main
  1782                           	
  1783  0015                     _main:	
  1784                           	opt	stack 0
  1785                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1786                           	line	171
  1787                           	
  1788  0015                     l11773:	
  1789                           ;Main.c: 171: unsigned char choice = 255;
  1790  0015  30FF               	movlw	(0FFh)
  1791  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  1792  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  1793  0018  00E2               	movwf	(??_main+0)+0
  1794  0019  0862               	movf	(??_main+0)+0,w
  1795  001A  00EB               	movwf	(main@choice)
  1796                           	line	172
  1797                           	
  1798  001B                     l11775:	
  1799                           ;Main.c: 172: int shortwall = 0;
  1800  001B  01E9               	clrf	(main@shortwall)
  1801  001C  01EA               	clrf	(main@shortwall+1)
  1802                           	line	176
  1803                           	
  1804  001D                     l11777:	
  1805                           ;Main.c: 176: init();
  1806  001D  160A  118A  26A7   	fcall	_init
              120A  118A         
  1807  0022  2823               	goto	l11779
  1808                           	line	181
  1809                           ;Main.c: 181: while(1)
  1810                           	
  1811  0023                     l2220:	
  1812                           	line	185
  1813                           	
  1814  0023                     l11779:	
  1815                           ;Main.c: 182: {
  1816                           ;Main.c: 185: if (RTC_FLAG_250MS == 1)
  1817  0023  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1818  0024  2826               	goto	u5781
  1819  0025  2827               	goto	u5780
  1820  0026                     u5781:
  1821  0026  2838               	goto	l11789
  1822  0027                     u5780:
  1823                           	line	187
  1824                           	
  1825  0027                     l11781:	
  1826                           ;Main.c: 186: {
  1827                           ;Main.c: 187: RTC_FLAG_250MS = 0;
  1828  0027  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1829                           	line	188
  1830                           	
  1831  0028                     l11783:	
  1832                           ;Main.c: 188: robot_read();
  1833  0028  120A  158A  2202   	fcall	_robot_read
              120A  118A         
  1834                           	line	189
  1835                           	
  1836  002D                     l11785:	
  1837                           ;Main.c: 189: readAvgDistance();
  1838  002D  120A  158A  231B   	fcall	_readAvgDistance
              120A  118A         
  1839                           	line	190
  1840                           	
  1841  0032                     l11787:	
  1842                           ;Main.c: 190: UpdateDisplay();
  1843  0032  120A  118A  250B   	fcall	_UpdateDisplay
              120A  118A         
  1844  0037  2838               	goto	l11789
  1845                           	line	191
  1846                           	
  1847  0038                     l2221:	
  1848                           	line	192
  1849                           	
  1850  0038                     l11789:	
  1851                           ;Main.c: 191: }
  1852                           ;Main.c: 192: if (buttonPressed)
  1853  0038  087D               	movf	(_buttonPressed),w	;volatile
  1854  0039  1D03               	skipz
  1855  003A  283C               	goto	u5790
  1856  003B  2A87               	goto	l11893
  1857  003C                     u5790:
  1858                           	line	195
  1859                           	
  1860  003C                     l11791:	
  1861                           ;Main.c: 194: {
  1862                           ;Main.c: 195: choice = Menu(buttonPressed);
  1863  003C  087D               	movf	(_buttonPressed),w	;volatile
  1864  003D  120A  158A  211B   	fcall	_Menu
              120A  118A         
  1865  0042  1283               	bcf	status, 5	;RP0=0, select bank0
  1866  0043  1303               	bcf	status, 6	;RP1=0, select bank0
  1867  0044  00E2               	movwf	(??_main+0)+0
  1868  0045  0862               	movf	(??_main+0)+0,w
  1869  0046  00EB               	movwf	(main@choice)
  1870                           	line	196
  1871                           	
  1872  0047                     l11793:	
  1873                           ;Main.c: 196: buttonPressed = 0;
  1874  0047  01FD               	clrf	(_buttonPressed)	;volatile
  1875  0048  2A87               	goto	l11893
  1876                           	line	197
  1877                           	
  1878  0049                     l2222:	
  1879                           	line	201
  1880                           ;Main.c: 197: }
  1881                           ;Main.c: 201: switch (choice)
  1882  0049  2A87               	goto	l11893
  1883                           	line	203
  1884                           ;Main.c: 202: {
  1885                           ;Main.c: 203: case 0:
  1886                           	
  1887  004A                     l2224:	
  1888                           	line	204
  1889                           	
  1890  004A                     l11795:	
  1891                           ;Main.c: 204: calibrateIR();
  1892  004A  120A  158A  2255   	fcall	_calibrateIR
              120A  118A         
  1893                           	line	205
  1894                           ;Main.c: 205: break;
  1895  004F  2A9D               	goto	l11895
  1896                           	line	206
  1897                           ;Main.c: 206: case 1:
  1898                           	
  1899  0050                     l2226:	
  1900                           	line	207
  1901                           	
  1902  0050                     l11797:	
  1903                           ;Main.c: 207: shortwall = scan360() - 13;
  1904  0050  120A  158A  2391   	fcall	_scan360
              120A  118A         
  1905  0055  1283               	bcf	status, 5	;RP0=0, select bank0
  1906  0056  1303               	bcf	status, 6	;RP1=0, select bank0
  1907  0057  0859               	movf	(0+(?_scan360)),w
  1908  0058  3EF3               	addlw	low(-13)
  1909  0059  00E9               	movwf	(main@shortwall)
  1910  005A  085A               	movf	(1+(?_scan360)),w
  1911  005B  1803               	skipnc
  1912  005C  3E01               	addlw	1
  1913  005D  3EFF               	addlw	high(-13)
  1914  005E  00EA               	movwf	1+(main@shortwall)
  1915                           	line	208
  1916                           	
  1917  005F                     l11799:	
  1918                           ;Main.c: 208: rotate((400 - shortwall), 0);
  1919  005F  0969               	comf	(main@shortwall),w
  1920  0060  00E2               	movwf	(??_main+0)+0
  1921  0061  096A               	comf	(main@shortwall+1),w
  1922  0062  00E3               	movwf	((??_main+0)+0+1)
  1923  0063  0AE2               	incf	(??_main+0)+0,f
  1924  0064  1903               	skipnz
  1925  0065  0AE3               	incf	((??_main+0)+0+1),f
  1926  0066  0862               	movf	0+(??_main+0)+0,w
  1927  0067  3E90               	addlw	low(0190h)
  1928  0068  00A3               	movwf	(?_rotate)
  1929  0069  0863               	movf	1+(??_main+0)+0,w
  1930  006A  1803               	skipnc
  1931  006B  3E01               	addlw	1
  1932  006C  3E01               	addlw	high(0190h)
  1933  006D  00A4               	movwf	1+(?_rotate)
  1934  006E  01A5               	clrf	0+(?_rotate)+02h
  1935  006F  120A  158A  21B2   	fcall	_rotate
              120A  118A         
  1936                           	line	209
  1937                           ;Main.c: 209: break;
  1938  0074  2A9D               	goto	l11895
  1939                           	line	210
  1940                           ;Main.c: 210: case 2:
  1941                           	
  1942  0075                     l2227:	
  1943                           	line	211
  1944                           	
  1945  0075                     l11801:	
  1946                           ;Main.c: 211: TotalDistTravelled = 0;
  1947  0075  1683               	bsf	status, 5	;RP0=1, select bank1
  1948  0076  1303               	bcf	status, 6	;RP1=0, select bank1
  1949  0077  01B4               	clrf	(_TotalDistTravelled)^080h
  1950  0078  01B5               	clrf	(_TotalDistTravelled+1)^080h
  1951                           	line	212
  1952                           	
  1953  0079                     l11803:	
  1954                           ;Main.c: 212: _delay((unsigned long)((100)*(20000000/4000.0)));
  1955                           	opt asmopt_off
  1956  0079  3003               movlw  3
  1957  007A  1283               	bcf	status, 5	;RP0=0, select bank0
  1958  007B  1303               	bcf	status, 6	;RP1=0, select bank0
  1959  007C  00E4               movwf	((??_main+0)+0+2),f
  1960  007D  308A               movlw	138
  1961  007E  00E3               movwf	((??_main+0)+0+1),f
  1962  007F  3056               	movlw	86
  1963  0080  00E2               movwf	((??_main+0)+0),f
  1964  0081                     u5917:
  1965  0081  0BE2               	decfsz	((??_main+0)+0),f
  1966  0082  2881               	goto	u5917
  1967  0083  0BE3               	decfsz	((??_main+0)+0+1),f
  1968  0084  2881               	goto	u5917
  1969  0085  0BE4               	decfsz	((??_main+0)+0+2),f
  1970  0086  2881               	goto	u5917
  1971  0087  2888               	nop2
  1972                           opt asmopt_on
  1973                           
  1974                           	line	213
  1975                           	
  1976  0088                     l11805:	
  1977                           ;Main.c: 213: robotMoveSpeed(2000, 200);
  1978  0088  30D0               	movlw	low(07D0h)
  1979  0089  1283               	bcf	status, 5	;RP0=0, select bank0
  1980  008A  1303               	bcf	status, 6	;RP1=0, select bank0
  1981  008B  00D9               	movwf	(?_robotMoveSpeed)
  1982  008C  3007               	movlw	high(07D0h)
  1983  008D  00DA               	movwf	((?_robotMoveSpeed))+1
  1984  008E  30C8               	movlw	low(0C8h)
  1985  008F  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  1986  0090  3000               	movlw	high(0C8h)
  1987  0091  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  1988  0092  120A  158A  2520   	fcall	_robotMoveSpeed
              120A  118A         
  1989                           	line	216
  1990                           ;Main.c: 216: break;
  1991  0097  2A9D               	goto	l11895
  1992                           	line	217
  1993                           ;Main.c: 217: case 3:
  1994                           	
  1995  0098                     l2228:	
  1996                           	line	218
  1997                           	
  1998  0098                     l11807:	
  1999                           ;Main.c: 218: TotalDistTravelled = 0;
  2000  0098  1683               	bsf	status, 5	;RP0=1, select bank1
  2001  0099  1303               	bcf	status, 6	;RP1=0, select bank1
  2002  009A  01B4               	clrf	(_TotalDistTravelled)^080h
  2003  009B  01B5               	clrf	(_TotalDistTravelled+1)^080h
  2004                           	line	219
  2005                           	
  2006  009C                     l11809:	
  2007                           ;Main.c: 219: _delay((unsigned long)((100)*(20000000/4000.0)));
  2008                           	opt asmopt_off
  2009  009C  3003               movlw  3
  2010  009D  1283               	bcf	status, 5	;RP0=0, select bank0
  2011  009E  1303               	bcf	status, 6	;RP1=0, select bank0
  2012  009F  00E4               movwf	((??_main+0)+0+2),f
  2013  00A0  308A               movlw	138
  2014  00A1  00E3               movwf	((??_main+0)+0+1),f
  2015  00A2  3056               	movlw	86
  2016  00A3  00E2               movwf	((??_main+0)+0),f
  2017  00A4                     u5927:
  2018  00A4  0BE2               	decfsz	((??_main+0)+0),f
  2019  00A5  28A4               	goto	u5927
  2020  00A6  0BE3               	decfsz	((??_main+0)+0+1),f
  2021  00A7  28A4               	goto	u5927
  2022  00A8  0BE4               	decfsz	((??_main+0)+0+2),f
  2023  00A9  28A4               	goto	u5927
  2024  00AA  28AB               	nop2
  2025                           opt asmopt_on
  2026                           
  2027                           	line	220
  2028                           	
  2029  00AB                     l11811:	
  2030                           ;Main.c: 220: robotMoveSpeed(1000, 200);
  2031  00AB  30E8               	movlw	low(03E8h)
  2032  00AC  1283               	bcf	status, 5	;RP0=0, select bank0
  2033  00AD  1303               	bcf	status, 6	;RP1=0, select bank0
  2034  00AE  00D9               	movwf	(?_robotMoveSpeed)
  2035  00AF  3003               	movlw	high(03E8h)
  2036  00B0  00DA               	movwf	((?_robotMoveSpeed))+1
  2037  00B1  30C8               	movlw	low(0C8h)
  2038  00B2  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2039  00B3  3000               	movlw	high(0C8h)
  2040  00B4  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2041  00B5  120A  158A  2520   	fcall	_robotMoveSpeed
              120A  118A         
  2042                           	line	221
  2043                           	
  2044  00BA                     l11813:	
  2045                           ;Main.c: 221: _delay((unsigned long)((100)*(20000000/4000.0)));
  2046                           	opt asmopt_off
  2047  00BA  3003               movlw  3
  2048  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2049  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2050  00BD  00E4               movwf	((??_main+0)+0+2),f
  2051  00BE  308A               movlw	138
  2052  00BF  00E3               movwf	((??_main+0)+0+1),f
  2053  00C0  3056               	movlw	86
  2054  00C1  00E2               movwf	((??_main+0)+0),f
  2055  00C2                     u5937:
  2056  00C2  0BE2               	decfsz	((??_main+0)+0),f
  2057  00C3  28C2               	goto	u5937
  2058  00C4  0BE3               	decfsz	((??_main+0)+0+1),f
  2059  00C5  28C2               	goto	u5937
  2060  00C6  0BE4               	decfsz	((??_main+0)+0+2),f
  2061  00C7  28C2               	goto	u5937
  2062  00C8  28C9               	nop2
  2063                           opt asmopt_on
  2064                           
  2065                           	line	222
  2066                           	
  2067  00C9                     l11815:	
  2068                           ;Main.c: 222: robotTurn(-90);
  2069  00C9  30A6               	movlw	low(-90)
  2070  00CA  1283               	bcf	status, 5	;RP0=0, select bank0
  2071  00CB  1303               	bcf	status, 6	;RP1=0, select bank0
  2072  00CC  00A2               	movwf	(?_robotTurn)
  2073  00CD  30FF               	movlw	high(-90)
  2074  00CE  00A3               	movwf	((?_robotTurn))+1
  2075  00CF  120A  118A  276A   	fcall	_robotTurn
              120A  118A         
  2076                           	line	223
  2077                           	
  2078  00D4                     l11817:	
  2079                           ;Main.c: 223: _delay((unsigned long)((100)*(20000000/4000.0)));
  2080                           	opt asmopt_off
  2081  00D4  3003               movlw  3
  2082  00D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2083  00D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2084  00D7  00E4               movwf	((??_main+0)+0+2),f
  2085  00D8  308A               movlw	138
  2086  00D9  00E3               movwf	((??_main+0)+0+1),f
  2087  00DA  3056               	movlw	86
  2088  00DB  00E2               movwf	((??_main+0)+0),f
  2089  00DC                     u5947:
  2090  00DC  0BE2               	decfsz	((??_main+0)+0),f
  2091  00DD  28DC               	goto	u5947
  2092  00DE  0BE3               	decfsz	((??_main+0)+0+1),f
  2093  00DF  28DC               	goto	u5947
  2094  00E0  0BE4               	decfsz	((??_main+0)+0+2),f
  2095  00E1  28DC               	goto	u5947
  2096  00E2  28E3               	nop2
  2097                           opt asmopt_on
  2098                           
  2099                           	line	224
  2100                           	
  2101  00E3                     l11819:	
  2102                           ;Main.c: 224: robotMoveSpeed(1000, 200);
  2103  00E3  30E8               	movlw	low(03E8h)
  2104  00E4  1283               	bcf	status, 5	;RP0=0, select bank0
  2105  00E5  1303               	bcf	status, 6	;RP1=0, select bank0
  2106  00E6  00D9               	movwf	(?_robotMoveSpeed)
  2107  00E7  3003               	movlw	high(03E8h)
  2108  00E8  00DA               	movwf	((?_robotMoveSpeed))+1
  2109  00E9  30C8               	movlw	low(0C8h)
  2110  00EA  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2111  00EB  3000               	movlw	high(0C8h)
  2112  00EC  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2113  00ED  120A  158A  2520   	fcall	_robotMoveSpeed
              120A  118A         
  2114                           	line	225
  2115                           ;Main.c: 225: break;
  2116  00F2  2A9D               	goto	l11895
  2117                           	line	226
  2118                           ;Main.c: 226: case 4:
  2119                           	
  2120  00F3                     l2229:	
  2121                           	line	227
  2122                           	
  2123  00F3                     l11821:	
  2124                           ;Main.c: 227: TotalDistTravelled = 0;
  2125  00F3  1683               	bsf	status, 5	;RP0=1, select bank1
  2126  00F4  1303               	bcf	status, 6	;RP1=0, select bank1
  2127  00F5  01B4               	clrf	(_TotalDistTravelled)^080h
  2128  00F6  01B5               	clrf	(_TotalDistTravelled+1)^080h
  2129                           	line	228
  2130                           ;Main.c: 228: while(!ROBOTerror)
  2131  00F7  2A77               	goto	l11887
  2132                           	
  2133  00F8                     l2231:	
  2134                           	line	230
  2135                           	
  2136  00F8                     l11823:	
  2137                           ;Main.c: 229: {
  2138                           ;Main.c: 230: int shortwall = scan360();
  2139  00F8  120A  158A  2391   	fcall	_scan360
              120A  118A         
  2140  00FD  1283               	bcf	status, 5	;RP0=0, select bank0
  2141  00FE  1303               	bcf	status, 6	;RP1=0, select bank0
  2142  00FF  085A               	movf	(1+(?_scan360)),w
  2143  0100  01ED               	clrf	(main@shortwall_3011+1)
  2144  0101  07ED               	addwf	(main@shortwall_3011+1)
  2145  0102  0859               	movf	(0+(?_scan360)),w
  2146  0103  01EC               	clrf	(main@shortwall_3011)
  2147  0104  07EC               	addwf	(main@shortwall_3011)
  2148                           
  2149                           	line	231
  2150                           	
  2151  0105                     l11825:	
  2152                           ;Main.c: 231: int RT2P = 0;
  2153  0105  01EE               	clrf	(main@RT2P)
  2154  0106  01EF               	clrf	(main@RT2P+1)
  2155                           	line	232
  2156                           	
  2157  0107                     l11827:	
  2158                           ;Main.c: 232: int direction1 = 0;
  2159  0107  01E5               	clrf	(main@direction1)
  2160  0108  01E6               	clrf	(main@direction1+1)
  2161                           	line	233
  2162                           	
  2163  0109                     l11829:	
  2164                           ;Main.c: 233: if (shortwall > 200)
  2165  0109  086D               	movf	(main@shortwall_3011+1),w
  2166  010A  3A80               	xorlw	80h
  2167  010B  00FF               	movwf	btemp+1
  2168  010C  3080               	movlw	(high(0C9h))^80h
  2169  010D  027F               	subwf	btemp+1,w
  2170  010E  1D03               	skipz
  2171  010F  2912               	goto	u5805
  2172  0110  30C9               	movlw	low(0C9h)
  2173  0111  026C               	subwf	(main@shortwall_3011),w
  2174  0112                     u5805:
  2175                           
  2176  0112  1C03               	skipc
  2177  0113  2915               	goto	u5801
  2178  0114  2916               	goto	u5800
  2179  0115                     u5801:
  2180  0115  2921               	goto	l11833
  2181  0116                     u5800:
  2182                           	line	234
  2183                           	
  2184  0116                     l11831:	
  2185                           ;Main.c: 234: RT2P = shortwall + 100;
  2186  0116  1283               	bcf	status, 5	;RP0=0, select bank0
  2187  0117  1303               	bcf	status, 6	;RP1=0, select bank0
  2188  0118  086C               	movf	(main@shortwall_3011),w
  2189  0119  3E64               	addlw	low(064h)
  2190  011A  00EE               	movwf	(main@RT2P)
  2191  011B  086D               	movf	(main@shortwall_3011+1),w
  2192  011C  1803               	skipnc
  2193  011D  3E01               	addlw	1
  2194  011E  3E00               	addlw	high(064h)
  2195  011F  00EF               	movwf	1+(main@RT2P)
  2196  0120  2921               	goto	l11833
  2197                           	
  2198  0121                     l2232:	
  2199                           	line	235
  2200                           	
  2201  0121                     l11833:	
  2202                           ;Main.c: 235: if (shortwall < 200)
  2203  0121  1283               	bcf	status, 5	;RP0=0, select bank0
  2204  0122  1303               	bcf	status, 6	;RP1=0, select bank0
  2205  0123  086D               	movf	(main@shortwall_3011+1),w
  2206  0124  3A80               	xorlw	80h
  2207  0125  00FF               	movwf	btemp+1
  2208  0126  3080               	movlw	(high(0C8h))^80h
  2209  0127  027F               	subwf	btemp+1,w
  2210  0128  1D03               	skipz
  2211  0129  292C               	goto	u5815
  2212  012A  30C8               	movlw	low(0C8h)
  2213  012B  026C               	subwf	(main@shortwall_3011),w
  2214  012C                     u5815:
  2215                           
  2216  012C  1803               	skipnc
  2217  012D  292F               	goto	u5811
  2218  012E  2930               	goto	u5810
  2219  012F                     u5811:
  2220  012F  293B               	goto	l11837
  2221  0130                     u5810:
  2222                           	line	236
  2223                           	
  2224  0130                     l11835:	
  2225                           ;Main.c: 236: RT2P = shortwall - 100;
  2226  0130  1283               	bcf	status, 5	;RP0=0, select bank0
  2227  0131  1303               	bcf	status, 6	;RP1=0, select bank0
  2228  0132  086C               	movf	(main@shortwall_3011),w
  2229  0133  3E9C               	addlw	low(-100)
  2230  0134  00EE               	movwf	(main@RT2P)
  2231  0135  086D               	movf	(main@shortwall_3011+1),w
  2232  0136  1803               	skipnc
  2233  0137  3E01               	addlw	1
  2234  0138  3EFF               	addlw	high(-100)
  2235  0139  00EF               	movwf	1+(main@RT2P)
  2236  013A  293B               	goto	l11837
  2237                           	
  2238  013B                     l2233:	
  2239                           	line	239
  2240                           	
  2241  013B                     l11837:	
  2242                           ;Main.c: 239: if (RT2P >= 400 && RT2P < 500 )
  2243  013B  1283               	bcf	status, 5	;RP0=0, select bank0
  2244  013C  1303               	bcf	status, 6	;RP1=0, select bank0
  2245  013D  086F               	movf	(main@RT2P+1),w
  2246  013E  3A80               	xorlw	80h
  2247  013F  00FF               	movwf	btemp+1
  2248  0140  3081               	movlw	(high(0190h))^80h
  2249  0141  027F               	subwf	btemp+1,w
  2250  0142  1D03               	skipz
  2251  0143  2946               	goto	u5825
  2252  0144  3090               	movlw	low(0190h)
  2253  0145  026E               	subwf	(main@RT2P),w
  2254  0146                     u5825:
  2255                           
  2256  0146  1C03               	skipc
  2257  0147  2949               	goto	u5821
  2258  0148  294A               	goto	u5820
  2259  0149                     u5821:
  2260  0149  2968               	goto	l11845
  2261  014A                     u5820:
  2262                           	
  2263  014A                     l11839:	
  2264  014A  1283               	bcf	status, 5	;RP0=0, select bank0
  2265  014B  1303               	bcf	status, 6	;RP1=0, select bank0
  2266  014C  086F               	movf	(main@RT2P+1),w
  2267  014D  3A80               	xorlw	80h
  2268  014E  00FF               	movwf	btemp+1
  2269  014F  3081               	movlw	(high(01F4h))^80h
  2270  0150  027F               	subwf	btemp+1,w
  2271  0151  1D03               	skipz
  2272  0152  2955               	goto	u5835
  2273  0153  30F4               	movlw	low(01F4h)
  2274  0154  026E               	subwf	(main@RT2P),w
  2275  0155                     u5835:
  2276                           
  2277  0155  1803               	skipnc
  2278  0156  2958               	goto	u5831
  2279  0157  2959               	goto	u5830
  2280  0158                     u5831:
  2281  0158  2968               	goto	l11845
  2282  0159                     u5830:
  2283                           	line	241
  2284                           	
  2285  0159                     l11841:	
  2286                           ;Main.c: 240: {
  2287                           ;Main.c: 241: RT2P = RT2P - 400;
  2288  0159  1283               	bcf	status, 5	;RP0=0, select bank0
  2289  015A  1303               	bcf	status, 6	;RP1=0, select bank0
  2290  015B  086E               	movf	(main@RT2P),w
  2291  015C  3E70               	addlw	low(-400)
  2292  015D  00EE               	movwf	(main@RT2P)
  2293  015E  086F               	movf	(main@RT2P+1),w
  2294  015F  1803               	skipnc
  2295  0160  3E01               	addlw	1
  2296  0161  3EFE               	addlw	high(-400)
  2297  0162  00EF               	movwf	1+(main@RT2P)
  2298                           	line	242
  2299                           	
  2300  0163                     l11843:	
  2301                           ;Main.c: 242: direction1 = 1;
  2302  0163  3001               	movlw	low(01h)
  2303  0164  00E5               	movwf	(main@direction1)
  2304  0165  3000               	movlw	high(01h)
  2305  0166  00E6               	movwf	((main@direction1))+1
  2306  0167  2968               	goto	l11845
  2307                           	line	243
  2308                           	
  2309  0168                     l2234:	
  2310                           	line	244
  2311                           	
  2312  0168                     l11845:	
  2313                           ;Main.c: 243: }
  2314                           ;Main.c: 244: if (RT2P >= 200 && RT2P < 400)
  2315  0168  1283               	bcf	status, 5	;RP0=0, select bank0
  2316  0169  1303               	bcf	status, 6	;RP1=0, select bank0
  2317  016A  086F               	movf	(main@RT2P+1),w
  2318  016B  3A80               	xorlw	80h
  2319  016C  00FF               	movwf	btemp+1
  2320  016D  3080               	movlw	(high(0C8h))^80h
  2321  016E  027F               	subwf	btemp+1,w
  2322  016F  1D03               	skipz
  2323  0170  2973               	goto	u5845
  2324  0171  30C8               	movlw	low(0C8h)
  2325  0172  026E               	subwf	(main@RT2P),w
  2326  0173                     u5845:
  2327                           
  2328  0173  1C03               	skipc
  2329  0174  2976               	goto	u5841
  2330  0175  2977               	goto	u5840
  2331  0176                     u5841:
  2332  0176  299F               	goto	l11855
  2333  0177                     u5840:
  2334                           	
  2335  0177                     l11847:	
  2336  0177  1283               	bcf	status, 5	;RP0=0, select bank0
  2337  0178  1303               	bcf	status, 6	;RP1=0, select bank0
  2338  0179  086F               	movf	(main@RT2P+1),w
  2339  017A  3A80               	xorlw	80h
  2340  017B  00FF               	movwf	btemp+1
  2341  017C  3081               	movlw	(high(0190h))^80h
  2342  017D  027F               	subwf	btemp+1,w
  2343  017E  1D03               	skipz
  2344  017F  2982               	goto	u5855
  2345  0180  3090               	movlw	low(0190h)
  2346  0181  026E               	subwf	(main@RT2P),w
  2347  0182                     u5855:
  2348                           
  2349  0182  1803               	skipnc
  2350  0183  2985               	goto	u5851
  2351  0184  2986               	goto	u5850
  2352  0185                     u5851:
  2353  0185  299F               	goto	l11855
  2354  0186                     u5850:
  2355                           	line	246
  2356                           	
  2357  0186                     l11849:	
  2358                           ;Main.c: 245: {
  2359                           ;Main.c: 246: RT2P = 400 - RT2P;
  2360  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  2361  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  2362  0188  096E               	comf	(main@RT2P),w
  2363  0189  00E2               	movwf	(??_main+0)+0
  2364  018A  096F               	comf	(main@RT2P+1),w
  2365  018B  00E3               	movwf	((??_main+0)+0+1)
  2366  018C  0AE2               	incf	(??_main+0)+0,f
  2367  018D  1903               	skipnz
  2368  018E  0AE3               	incf	((??_main+0)+0+1),f
  2369  018F  0862               	movf	0+(??_main+0)+0,w
  2370  0190  3E90               	addlw	low(0190h)
  2371  0191  00EE               	movwf	(main@RT2P)
  2372  0192  0863               	movf	1+(??_main+0)+0,w
  2373  0193  1803               	skipnc
  2374  0194  3E01               	addlw	1
  2375  0195  3E01               	addlw	high(0190h)
  2376  0196  00EF               	movwf	1+(main@RT2P)
  2377                           	line	247
  2378                           	
  2379  0197                     l11851:	
  2380                           ;Main.c: 247: RT2P = RT2P * -1;
  2381  0197  09EE               	comf	(main@RT2P),f
  2382  0198  09EF               	comf	(main@RT2P+1),f
  2383  0199  0AEE               	incf	(main@RT2P),f
  2384  019A  1903               	skipnz
  2385  019B  0AEF               	incf	(main@RT2P+1),f
  2386                           	line	248
  2387                           	
  2388  019C                     l11853:	
  2389                           ;Main.c: 248: direction1 = 0;
  2390  019C  01E5               	clrf	(main@direction1)
  2391  019D  01E6               	clrf	(main@direction1+1)
  2392  019E  299F               	goto	l11855
  2393                           	line	249
  2394                           	
  2395  019F                     l2235:	
  2396                           	line	250
  2397                           	
  2398  019F                     l11855:	
  2399                           ;Main.c: 249: }
  2400                           ;Main.c: 250: if (RT2P < 200 && RT2P >= 0)
  2401  019F  1283               	bcf	status, 5	;RP0=0, select bank0
  2402  01A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2403  01A1  086F               	movf	(main@RT2P+1),w
  2404  01A2  3A80               	xorlw	80h
  2405  01A3  00FF               	movwf	btemp+1
  2406  01A4  3080               	movlw	(high(0C8h))^80h
  2407  01A5  027F               	subwf	btemp+1,w
  2408  01A6  1D03               	skipz
  2409  01A7  29AA               	goto	u5865
  2410  01A8  30C8               	movlw	low(0C8h)
  2411  01A9  026E               	subwf	(main@RT2P),w
  2412  01AA                     u5865:
  2413                           
  2414  01AA  1803               	skipnc
  2415  01AB  29AD               	goto	u5861
  2416  01AC  29AE               	goto	u5860
  2417  01AD                     u5861:
  2418  01AD  29B9               	goto	l11861
  2419  01AE                     u5860:
  2420                           	
  2421  01AE                     l11857:	
  2422  01AE  1283               	bcf	status, 5	;RP0=0, select bank0
  2423  01AF  1303               	bcf	status, 6	;RP1=0, select bank0
  2424  01B0  1BEF               	btfsc	(main@RT2P+1),7
  2425  01B1  29B3               	goto	u5871
  2426  01B2  29B4               	goto	u5870
  2427  01B3                     u5871:
  2428  01B3  29B9               	goto	l11861
  2429  01B4                     u5870:
  2430                           	line	252
  2431                           	
  2432  01B4                     l11859:	
  2433                           ;Main.c: 251: {
  2434                           ;Main.c: 252: direction1 = 1;
  2435  01B4  3001               	movlw	low(01h)
  2436  01B5  00E5               	movwf	(main@direction1)
  2437  01B6  3000               	movlw	high(01h)
  2438  01B7  00E6               	movwf	((main@direction1))+1
  2439  01B8  29B9               	goto	l11861
  2440                           	line	253
  2441                           	
  2442  01B9                     l2236:	
  2443                           	line	254
  2444                           	
  2445  01B9                     l11861:	
  2446                           ;Main.c: 253: }
  2447                           ;Main.c: 254: if (RT2P < 0 && RT2P >= -200)
  2448  01B9  1283               	bcf	status, 5	;RP0=0, select bank0
  2449  01BA  1303               	bcf	status, 6	;RP1=0, select bank0
  2450  01BB  1FEF               	btfss	(main@RT2P+1),7
  2451  01BC  29BE               	goto	u5881
  2452  01BD  29BF               	goto	u5880
  2453  01BE                     u5881:
  2454  01BE  29D5               	goto	l11871
  2455  01BF                     u5880:
  2456                           	
  2457  01BF                     l11863:	
  2458  01BF  086F               	movf	(main@RT2P+1),w
  2459  01C0  3A80               	xorlw	80h
  2460  01C1  00FF               	movwf	btemp+1
  2461  01C2  307F               	movlw	(high(-200))^80h
  2462  01C3  027F               	subwf	btemp+1,w
  2463  01C4  1D03               	skipz
  2464  01C5  29C8               	goto	u5895
  2465  01C6  3038               	movlw	low(-200)
  2466  01C7  026E               	subwf	(main@RT2P),w
  2467  01C8                     u5895:
  2468                           
  2469  01C8  1C03               	skipc
  2470  01C9  29CB               	goto	u5891
  2471  01CA  29CC               	goto	u5890
  2472  01CB                     u5891:
  2473  01CB  29D5               	goto	l11871
  2474  01CC                     u5890:
  2475                           	line	257
  2476                           	
  2477  01CC                     l11865:	
  2478                           ;Main.c: 255: {
  2479                           ;Main.c: 257: direction1 = 0;
  2480  01CC  1283               	bcf	status, 5	;RP0=0, select bank0
  2481  01CD  1303               	bcf	status, 6	;RP1=0, select bank0
  2482  01CE  01E5               	clrf	(main@direction1)
  2483  01CF  01E6               	clrf	(main@direction1+1)
  2484  01D0  29D5               	goto	l11871
  2485                           	line	258
  2486                           	
  2487  01D1                     l2237:	
  2488  01D1  29D5               	goto	l11871
  2489                           	line	259
  2490                           	
  2491  01D2                     l11867:	
  2492  01D2  29D5               	goto	l11871
  2493                           	
  2494  01D3                     l11869:	
  2495  01D3  29D5               	goto	l11871
  2496                           	
  2497  01D4                     l2240:	
  2498  01D4  29D5               	goto	l11871
  2499                           	line	262
  2500                           ;Main.c: 260: {
  2501                           	
  2502  01D5                     l2238:	
  2503                           	line	264
  2504                           	
  2505  01D5                     l11871:	
  2506                           ;Main.c: 262: }
  2507                           ;Main.c: 264: rotate((400 - shortwall ), 0);
  2508  01D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2509  01D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2510  01D7  096C               	comf	(main@shortwall_3011),w
  2511  01D8  00E2               	movwf	(??_main+0)+0
  2512  01D9  096D               	comf	(main@shortwall_3011+1),w
  2513  01DA  00E3               	movwf	((??_main+0)+0+1)
  2514  01DB  0AE2               	incf	(??_main+0)+0,f
  2515  01DC  1903               	skipnz
  2516  01DD  0AE3               	incf	((??_main+0)+0+1),f
  2517  01DE  0862               	movf	0+(??_main+0)+0,w
  2518  01DF  3E90               	addlw	low(0190h)
  2519  01E0  00A3               	movwf	(?_rotate)
  2520  01E1  0863               	movf	1+(??_main+0)+0,w
  2521  01E2  1803               	skipnc
  2522  01E3  3E01               	addlw	1
  2523  01E4  3E01               	addlw	high(0190h)
  2524  01E5  00A4               	movwf	1+(?_rotate)
  2525  01E6  01A5               	clrf	0+(?_rotate)+02h
  2526  01E7  120A  158A  21B2   	fcall	_rotate
              120A  118A         
  2527                           	line	265
  2528                           	
  2529  01EC                     l11873:	
  2530                           ;Main.c: 265: _delay((unsigned long)((100)*(20000000/4000.0)));
  2531                           	opt asmopt_off
  2532  01EC  3003               movlw  3
  2533  01ED  1283               	bcf	status, 5	;RP0=0, select bank0
  2534  01EE  1303               	bcf	status, 6	;RP1=0, select bank0
  2535  01EF  00E4               movwf	((??_main+0)+0+2),f
  2536  01F0  308A               movlw	138
  2537  01F1  00E3               movwf	((??_main+0)+0+1),f
  2538  01F2  3056               	movlw	86
  2539  01F3  00E2               movwf	((??_main+0)+0),f
  2540  01F4                     u5957:
  2541  01F4  0BE2               	decfsz	((??_main+0)+0),f
  2542  01F5  29F4               	goto	u5957
  2543  01F6  0BE3               	decfsz	((??_main+0)+0+1),f
  2544  01F7  29F4               	goto	u5957
  2545  01F8  0BE4               	decfsz	((??_main+0)+0+2),f
  2546  01F9  29F4               	goto	u5957
  2547  01FA  29FB               	nop2
  2548                           opt asmopt_on
  2549                           
  2550                           	line	268
  2551                           	
  2552  01FB                     l11875:	
  2553                           ;Main.c: 268: int RT2A= RT2P * (36.0/40.0);
  2554  01FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2555  01FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2556  01FD  086F               	movf	(main@RT2P+1),w
  2557  01FE  01B7               	clrf	(?___awtoft+1)
  2558  01FF  07B7               	addwf	(?___awtoft+1)
  2559  0200  086E               	movf	(main@RT2P),w
  2560  0201  01B6               	clrf	(?___awtoft)
  2561  0202  07B6               	addwf	(?___awtoft)
  2562                           
  2563  0203  160A  118A  25F5   	fcall	___awtoft
              120A  118A         
  2564  0208  1283               	bcf	status, 5	;RP0=0, select bank0
  2565  0209  1303               	bcf	status, 6	;RP1=0, select bank0
  2566  020A  0836               	movf	(0+(?___awtoft)),w
  2567  020B  00BF               	movwf	0+(?___ftmul)+03h
  2568  020C  0837               	movf	(1+(?___awtoft)),w
  2569  020D  00C0               	movwf	1+(?___ftmul)+03h
  2570  020E  0838               	movf	(2+(?___awtoft)),w
  2571  020F  00C1               	movwf	2+(?___ftmul)+03h
  2572  0210  3066               	movlw	0x66
  2573  0211  00BC               	movwf	(?___ftmul)
  2574  0212  3066               	movlw	0x66
  2575  0213  00BD               	movwf	(?___ftmul+1)
  2576  0214  303F               	movlw	0x3f
  2577  0215  00BE               	movwf	(?___ftmul+2)
  2578  0216  120A  158A  2712   	fcall	___ftmul
              120A  118A         
  2579  021B  1283               	bcf	status, 5	;RP0=0, select bank0
  2580  021C  1303               	bcf	status, 6	;RP1=0, select bank0
  2581  021D  083C               	movf	(0+(?___ftmul)),w
  2582  021E  00A8               	movwf	(?___fttol)
  2583  021F  083D               	movf	(1+(?___ftmul)),w
  2584  0220  00A9               	movwf	(?___fttol+1)
  2585  0221  083E               	movf	(2+(?___ftmul)),w
  2586  0222  00AA               	movwf	(?___fttol+2)
  2587  0223  120A  158A  25C5   	fcall	___fttol
              120A  118A         
  2588  0228  1283               	bcf	status, 5	;RP0=0, select bank0
  2589  0229  1303               	bcf	status, 6	;RP1=0, select bank0
  2590  022A  0829               	movf	1+(((0+(?___fttol)))),w
  2591  022B  01E8               	clrf	(main@RT2A+1)
  2592  022C  07E8               	addwf	(main@RT2A+1)
  2593  022D  0828               	movf	0+(((0+(?___fttol)))),w
  2594  022E  01E7               	clrf	(main@RT2A)
  2595  022F  07E7               	addwf	(main@RT2A)
  2596                           
  2597                           	line	269
  2598                           	
  2599  0230                     l11877:	
  2600                           ;Main.c: 269: robotTurn(RT2A);
  2601  0230  0868               	movf	(main@RT2A+1),w
  2602  0231  01A3               	clrf	(?_robotTurn+1)
  2603  0232  07A3               	addwf	(?_robotTurn+1)
  2604  0233  0867               	movf	(main@RT2A),w
  2605  0234  01A2               	clrf	(?_robotTurn)
  2606  0235  07A2               	addwf	(?_robotTurn)
  2607                           
  2608  0236  120A  118A  276A   	fcall	_robotTurn
              120A  118A         
  2609                           	line	270
  2610                           	
  2611  023B                     l11879:	
  2612                           ;Main.c: 270: _delay((unsigned long)((100)*(20000000/4000.0)));
  2613                           	opt asmopt_off
  2614  023B  3003               movlw  3
  2615  023C  1283               	bcf	status, 5	;RP0=0, select bank0
  2616  023D  1303               	bcf	status, 6	;RP1=0, select bank0
  2617  023E  00E4               movwf	((??_main+0)+0+2),f
  2618  023F  308A               movlw	138
  2619  0240  00E3               movwf	((??_main+0)+0+1),f
  2620  0241  3056               	movlw	86
  2621  0242  00E2               movwf	((??_main+0)+0),f
  2622  0243                     u5967:
  2623  0243  0BE2               	decfsz	((??_main+0)+0),f
  2624  0244  2A43               	goto	u5967
  2625  0245  0BE3               	decfsz	((??_main+0)+0+1),f
  2626  0246  2A43               	goto	u5967
  2627  0247  0BE4               	decfsz	((??_main+0)+0+2),f
  2628  0248  2A43               	goto	u5967
  2629  0249  2A4A               	nop2
  2630                           opt asmopt_on
  2631                           
  2632                           	line	271
  2633                           	
  2634  024A                     l11881:	
  2635                           ;Main.c: 271: rotate(shortwall,0);
  2636  024A  1283               	bcf	status, 5	;RP0=0, select bank0
  2637  024B  1303               	bcf	status, 6	;RP1=0, select bank0
  2638  024C  086D               	movf	(main@shortwall_3011+1),w
  2639  024D  01A4               	clrf	(?_rotate+1)
  2640  024E  07A4               	addwf	(?_rotate+1)
  2641  024F  086C               	movf	(main@shortwall_3011),w
  2642  0250  01A3               	clrf	(?_rotate)
  2643  0251  07A3               	addwf	(?_rotate)
  2644                           
  2645  0252  01A5               	clrf	0+(?_rotate)+02h
  2646  0253  120A  158A  21B2   	fcall	_rotate
              120A  118A         
  2647                           	line	272
  2648                           	
  2649  0258                     l11883:	
  2650                           ;Main.c: 272: _delay((unsigned long)((100)*(20000000/4000.0)));
  2651                           	opt asmopt_off
  2652  0258  3003               movlw  3
  2653  0259  1283               	bcf	status, 5	;RP0=0, select bank0
  2654  025A  1303               	bcf	status, 6	;RP1=0, select bank0
  2655  025B  00E4               movwf	((??_main+0)+0+2),f
  2656  025C  308A               movlw	138
  2657  025D  00E3               movwf	((??_main+0)+0+1),f
  2658  025E  3056               	movlw	86
  2659  025F  00E2               movwf	((??_main+0)+0),f
  2660  0260                     u5977:
  2661  0260  0BE2               	decfsz	((??_main+0)+0),f
  2662  0261  2A60               	goto	u5977
  2663  0262  0BE3               	decfsz	((??_main+0)+0+1),f
  2664  0263  2A60               	goto	u5977
  2665  0264  0BE4               	decfsz	((??_main+0)+0+2),f
  2666  0265  2A60               	goto	u5977
  2667  0266  2A67               	nop2
  2668                           opt asmopt_on
  2669                           
  2670                           	line	273
  2671                           	
  2672  0267                     l11885:	
  2673                           ;Main.c: 273: robotMoveSpeed(500, 200);
  2674  0267  30F4               	movlw	low(01F4h)
  2675  0268  1283               	bcf	status, 5	;RP0=0, select bank0
  2676  0269  1303               	bcf	status, 6	;RP1=0, select bank0
  2677  026A  00D9               	movwf	(?_robotMoveSpeed)
  2678  026B  3001               	movlw	high(01F4h)
  2679  026C  00DA               	movwf	((?_robotMoveSpeed))+1
  2680  026D  30C8               	movlw	low(0C8h)
  2681  026E  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2682  026F  3000               	movlw	high(0C8h)
  2683  0270  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2684  0271  120A  158A  2520   	fcall	_robotMoveSpeed
              120A  118A         
  2685  0276  2A77               	goto	l11887
  2686                           	line	274
  2687                           	
  2688  0277                     l2230:	
  2689                           	line	228
  2690                           	
  2691  0277                     l11887:	
  2692  0277  1683               	bsf	status, 5	;RP0=1, select bank1
  2693  0278  1303               	bcf	status, 6	;RP1=0, select bank1
  2694  0279  084A               	movf	(_ROBOTerror)^080h,w
  2695  027A  1D03               	skipz
  2696  027B  2A7D               	goto	u5900
  2697  027C  28F8               	goto	l11823
  2698  027D                     u5900:
  2699  027D  2A9D               	goto	l11895
  2700                           	
  2701  027E                     l2241:	
  2702                           	line	277
  2703                           ;Main.c: 274: }
  2704                           ;Main.c: 277: break;
  2705  027E  2A9D               	goto	l11895
  2706                           	line	279
  2707                           ;Main.c: 279: case 5:
  2708                           	
  2709  027F                     l2242:	
  2710                           	line	280
  2711                           	
  2712  027F                     l11889:	
  2713                           ;Main.c: 280: ChargeMode();
  2714  027F  120A  158A  20D5   	fcall	_ChargeMode
              120A  118A         
  2715                           	line	281
  2716                           ;Main.c: 281: break;
  2717  0284  2A9D               	goto	l11895
  2718                           	line	282
  2719                           ;Main.c: 282: default:
  2720                           	
  2721  0285                     l2243:	
  2722                           	line	284
  2723                           ;Main.c: 284: break;
  2724  0285  2A9D               	goto	l11895
  2725                           	line	285
  2726                           	
  2727  0286                     l11891:	
  2728                           ;Main.c: 285: }
  2729  0286  2A9D               	goto	l11895
  2730                           	line	201
  2731                           	
  2732  0287                     l2223:	
  2733                           	
  2734  0287                     l11893:	
  2735  0287  1283               	bcf	status, 5	;RP0=0, select bank0
  2736  0288  1303               	bcf	status, 6	;RP1=0, select bank0
  2737  0289  086B               	movf	(main@choice),w
  2738                           	; Switch size 1, requested type "space"
  2739                           ; Number of cases is 6, Range of values is 0 to 5
  2740                           ; switch strategies available:
  2741                           ; Name         Instructions Cycles
  2742                           ; simple_byte           19    10 (average)
  2743                           ; direct_byte           26     8 (fixed)
  2744                           ; jumptable            260     6 (fixed)
  2745                           ; rangetable            10     6 (fixed)
  2746                           ; spacedrange           18     9 (fixed)
  2747                           ; locatedrange           6     3 (fixed)
  2748                           ;	Chosen strategy is simple_byte
  2749                           
  2750                           	opt asmopt_off
  2751  028A  3A00               	xorlw	0^0	; case 0
  2752  028B  1903               	skipnz
  2753  028C  284A               	goto	l11795
  2754  028D  3A01               	xorlw	1^0	; case 1
  2755  028E  1903               	skipnz
  2756  028F  2850               	goto	l11797
  2757  0290  3A03               	xorlw	2^1	; case 2
  2758  0291  1903               	skipnz
  2759  0292  2875               	goto	l11801
  2760  0293  3A01               	xorlw	3^2	; case 3
  2761  0294  1903               	skipnz
  2762  0295  2898               	goto	l11807
  2763  0296  3A07               	xorlw	4^3	; case 4
  2764  0297  1903               	skipnz
  2765  0298  28F3               	goto	l11821
  2766  0299  3A01               	xorlw	5^4	; case 5
  2767  029A  1903               	skipnz
  2768  029B  2A7F               	goto	l11889
  2769  029C  2A9D               	goto	l11895
  2770                           	opt asmopt_on
  2771                           
  2772                           	line	285
  2773                           	
  2774  029D                     l2225:	
  2775                           	line	286
  2776                           	
  2777  029D                     l11895:	
  2778                           ;Main.c: 286: choice = 255;
  2779  029D  30FF               	movlw	(0FFh)
  2780  029E  1283               	bcf	status, 5	;RP0=0, select bank0
  2781  029F  1303               	bcf	status, 6	;RP1=0, select bank0
  2782  02A0  00E2               	movwf	(??_main+0)+0
  2783  02A1  0862               	movf	(??_main+0)+0,w
  2784  02A2  00EB               	movwf	(main@choice)
  2785  02A3  2823               	goto	l11779
  2786                           	line	287
  2787                           	
  2788  02A4                     l2244:	
  2789                           	line	181
  2790  02A4  2823               	goto	l11779
  2791                           	
  2792  02A5                     l2245:	
  2793                           	line	288
  2794                           	
  2795  02A5                     l2246:	
  2796                           	global	start
  2797  02A5  120A  118A  2812   	ljmp	start
  2798                           	opt stack 0
  2799                           GLOBAL	__end_of_main
  2800  02A8                     	__end_of_main:
  2801 ;; =============== function _main ends ============
  2802                           
  2803                           	signat	_main,88
  2804                           	global	_ChargeMode
  2805                           psect	text1059,local,class=CODE,delta=2
  2806                           global __ptext1059
  2807  08D5                     __ptext1059:
  2808                           
  2809 ;; *************** function _ChargeMode *****************
  2810 ;; Defined at:
  2811 ;;		line 402 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;		None               void
  2818 ;; Registers used:
  2819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0
  2827 ;;      Temps:          0       1       0       0       0
  2828 ;;      Totals:         0       1       0       0       0
  2829 ;;Total ram usage:        1 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    6
  2832 ;; This function calls:
  2833 ;;		_ser_putch
  2834 ;;		_UpdateDisplay
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           psect	text1059
  2840                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2841                           	line	402
  2842                           	global	__size_of_ChargeMode
  2843  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2844                           	
  2845  08D5                     _ChargeMode:	
  2846                           	opt	stack 1
  2847                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2848                           	line	404
  2849                           	
  2850  08D5                     l11751:	
  2851                           ;Main.c: 404: currentMenu = 2;
  2852  08D5  3002               	movlw	(02h)
  2853  08D6  1283               	bcf	status, 5	;RP0=0, select bank0
  2854  08D7  1303               	bcf	status, 6	;RP1=0, select bank0
  2855  08D8  00D9               	movwf	(??_ChargeMode+0)+0
  2856  08D9  0859               	movf	(??_ChargeMode+0)+0,w
  2857  08DA  1683               	bsf	status, 5	;RP0=1, select bank1
  2858  08DB  1303               	bcf	status, 6	;RP1=0, select bank1
  2859  08DC  00CD               	movwf	(_currentMenu)^080h	;volatile
  2860                           	line	405
  2861                           	
  2862  08DD                     l11753:	
  2863                           ;Main.c: 405: ser_putch(128);
  2864  08DD  3080               	movlw	(080h)
  2865  08DE  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  2866  08E3  28E4               	goto	l11755
  2867                           	line	407
  2868                           ;Main.c: 407: while (1)
  2869                           	
  2870  08E4                     l2283:	
  2871                           	line	409
  2872                           	
  2873  08E4                     l11755:	
  2874                           ;Main.c: 408: {
  2875                           ;Main.c: 409: if (RTC_FLAG_250MS == 1)
  2876  08E4  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2877  08E5  28E7               	goto	u5771
  2878  08E6  28E8               	goto	u5770
  2879  08E7                     u5771:
  2880  08E7  2907               	goto	l11771
  2881  08E8                     u5770:
  2882                           	line	411
  2883                           	
  2884  08E8                     l11757:	
  2885                           ;Main.c: 410: {
  2886                           ;Main.c: 411: RTC_FLAG_250MS = 0;
  2887  08E8  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2888                           	line	412
  2889                           	
  2890  08E9                     l11759:	
  2891                           ;Main.c: 412: UpdateDisplay();
  2892  08E9  120A  118A  250B   	fcall	_UpdateDisplay
              120A  158A         
  2893  08EE  2907               	goto	l11771
  2894                           	line	413
  2895                           	
  2896  08EF                     l2284:	
  2897                           	line	414
  2898                           ;Main.c: 413: }
  2899                           ;Main.c: 414: switch (buttonPressed)
  2900  08EF  2907               	goto	l11771
  2901                           	line	416
  2902                           ;Main.c: 415: {
  2903                           ;Main.c: 416: case 1:
  2904                           	
  2905  08F0                     l2286:	
  2906                           	line	419
  2907                           ;Main.c: 419: buttonPressed = 0;
  2908  08F0  01FD               	clrf	(_buttonPressed)	;volatile
  2909                           	line	421
  2910                           ;Main.c: 421: break;
  2911  08F1  28E4               	goto	l11755
  2912                           	line	422
  2913                           ;Main.c: 422: case 2:
  2914                           	
  2915  08F2                     l2288:	
  2916                           	line	425
  2917                           ;Main.c: 425: buttonPressed = 0;
  2918  08F2  01FD               	clrf	(_buttonPressed)	;volatile
  2919                           	line	427
  2920                           ;Main.c: 427: break;
  2921  08F3  28E4               	goto	l11755
  2922                           	line	428
  2923                           ;Main.c: 428: case 3:
  2924                           	
  2925  08F4                     l2289:	
  2926                           	line	431
  2927                           ;Main.c: 431: buttonPressed = 0;
  2928  08F4  01FD               	clrf	(_buttonPressed)	;volatile
  2929                           	line	433
  2930                           ;Main.c: 433: break;
  2931  08F5  28E4               	goto	l11755
  2932                           	line	434
  2933                           ;Main.c: 434: case 4:
  2934                           	
  2935  08F6                     l2290:	
  2936                           	line	437
  2937                           ;Main.c: 437: buttonPressed = 0;
  2938  08F6  01FD               	clrf	(_buttonPressed)	;volatile
  2939                           	line	439
  2940                           ;Main.c: 439: break;
  2941  08F7  28E4               	goto	l11755
  2942                           	line	440
  2943                           ;Main.c: 440: case 5:
  2944                           	
  2945  08F8                     l2291:	
  2946                           	line	441
  2947                           	
  2948  08F8                     l11761:	
  2949                           ;Main.c: 441: ser_putch(132);
  2950  08F8  3084               	movlw	(084h)
  2951  08F9  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  2952                           	line	443
  2953                           	
  2954  08FE                     l11763:	
  2955                           ;Main.c: 443: buttonPressed = 0;
  2956  08FE  01FD               	clrf	(_buttonPressed)	;volatile
  2957                           	line	444
  2958                           	
  2959  08FF                     l11765:	
  2960                           ;Main.c: 444: currentMenu = 0;
  2961  08FF  1683               	bsf	status, 5	;RP0=1, select bank1
  2962  0900  1303               	bcf	status, 6	;RP1=0, select bank1
  2963  0901  01CD               	clrf	(_currentMenu)^080h	;volatile
  2964  0902  291A               	goto	l2292
  2965                           	line	445
  2966                           	
  2967  0903                     l11767:	
  2968                           ;Main.c: 445: return;
  2969  0903  291A               	goto	l2292
  2970                           	line	447
  2971                           ;Main.c: 447: default:
  2972                           	
  2973  0904                     l2293:	
  2974                           	line	448
  2975                           ;Main.c: 448: buttonPressed = 0;
  2976  0904  01FD               	clrf	(_buttonPressed)	;volatile
  2977                           	line	449
  2978                           ;Main.c: 449: break;
  2979  0905  28E4               	goto	l11755
  2980                           	line	450
  2981                           	
  2982  0906                     l11769:	
  2983                           ;Main.c: 450: }
  2984  0906  28E4               	goto	l11755
  2985                           	line	414
  2986                           	
  2987  0907                     l2285:	
  2988                           	
  2989  0907                     l11771:	
  2990  0907  087D               	movf	(_buttonPressed),w	;volatile
  2991                           	; Switch size 1, requested type "space"
  2992                           ; Number of cases is 5, Range of values is 1 to 5
  2993                           ; switch strategies available:
  2994                           ; Name         Instructions Cycles
  2995                           ; simple_byte           16     9 (average)
  2996                           ; direct_byte           26    11 (fixed)
  2997                           ; jumptable            263     9 (fixed)
  2998                           ;	Chosen strategy is simple_byte
  2999                           
  3000                           	opt asmopt_off
  3001  0908  3A01               	xorlw	1^0	; case 1
  3002  0909  1903               	skipnz
  3003  090A  28F0               	goto	l2286
  3004  090B  3A03               	xorlw	2^1	; case 2
  3005  090C  1903               	skipnz
  3006  090D  28F2               	goto	l2288
  3007  090E  3A01               	xorlw	3^2	; case 3
  3008  090F  1903               	skipnz
  3009  0910  28F4               	goto	l2289
  3010  0911  3A07               	xorlw	4^3	; case 4
  3011  0912  1903               	skipnz
  3012  0913  28F6               	goto	l2290
  3013  0914  3A01               	xorlw	5^4	; case 5
  3014  0915  1903               	skipnz
  3015  0916  28F8               	goto	l11761
  3016  0917  2904               	goto	l2293
  3017                           	opt asmopt_on
  3018                           
  3019                           	line	450
  3020                           	
  3021  0918                     l2287:	
  3022  0918  28E4               	goto	l11755
  3023                           	line	451
  3024                           	
  3025  0919                     l2294:	
  3026                           	line	407
  3027  0919  28E4               	goto	l11755
  3028                           	
  3029  091A                     l2295:	
  3030                           	line	452
  3031                           	
  3032  091A                     l2292:	
  3033  091A  0008               	return
  3034                           	opt stack 0
  3035                           GLOBAL	__end_of_ChargeMode
  3036  091B                     	__end_of_ChargeMode:
  3037 ;; =============== function _ChargeMode ends ============
  3038                           
  3039                           	signat	_ChargeMode,88
  3040                           	global	_robotMoveSpeed
  3041                           psect	text1060,local,class=CODE,delta=2
  3042                           global __ptext1060
  3043  0D20                     __ptext1060:
  3044                           
  3045 ;; *************** function _robotMoveSpeed *****************
  3046 ;; Defined at:
  3047 ;;		line 54 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  distance        2   57[BANK0 ] int 
  3050 ;;  speed           2   59[BANK0 ] int 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  temp1           2   64[BANK0 ] int 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;		None               void
  3055 ;; Registers used:
  3056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3062 ;;      Params:         0       4       0       0       0
  3063 ;;      Locals:         0       2       0       0       0
  3064 ;;      Temps:          0       3       0       0       0
  3065 ;;      Totals:         0       9       0       0       0
  3066 ;;Total ram usage:        9 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    6
  3069 ;; This function calls:
  3070 ;;		_RobotDrive
  3071 ;;		_robot_read
  3072 ;;		_UpdateDisplay
  3073 ;;		_abs
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;;		_FollowWall
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           psect	text1060
  3080                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3081                           	line	54
  3082                           	global	__size_of_robotMoveSpeed
  3083  00A5                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  3084                           	
  3085  0D20                     _robotMoveSpeed:	
  3086                           	opt	stack 1
  3087                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3088                           	line	55
  3089                           	
  3090  0D20                     l11725:	
  3091                           ;robot.c: 55: distTravelled = 0;
  3092  0D20  1683               	bsf	status, 5	;RP0=1, select bank1
  3093  0D21  1303               	bcf	status, 6	;RP1=0, select bank1
  3094  0D22  01B8               	clrf	(_distTravelled)^080h
  3095  0D23  01B9               	clrf	(_distTravelled+1)^080h
  3096                           	line	57
  3097                           	
  3098  0D24                     l11727:	
  3099                           ;robot.c: 56: int temp1;
  3100                           ;robot.c: 57: RobotDrive(speed);
  3101  0D24  1283               	bcf	status, 5	;RP0=0, select bank0
  3102  0D25  1303               	bcf	status, 6	;RP1=0, select bank0
  3103  0D26  085C               	movf	(robotMoveSpeed@speed+1),w
  3104  0D27  01A3               	clrf	(?_RobotDrive+1)
  3105  0D28  07A3               	addwf	(?_RobotDrive+1)
  3106  0D29  085B               	movf	(robotMoveSpeed@speed),w
  3107  0D2A  01A2               	clrf	(?_RobotDrive)
  3108  0D2B  07A2               	addwf	(?_RobotDrive)
  3109                           
  3110  0D2C  160A  118A  267A   	fcall	_RobotDrive
              120A  158A         
  3111                           	line	59
  3112                           ;robot.c: 59: while (abs(distTravelled) <= abs(distance))
  3113  0D31  2D82               	goto	l11747
  3114                           	
  3115  0D32                     l6044:	
  3116                           	line	61
  3117                           	
  3118  0D32                     l11729:	
  3119                           ;robot.c: 60: {
  3120                           ;robot.c: 61: robot_read();
  3121  0D32  120A  158A  2202   	fcall	_robot_read
              120A  158A         
  3122                           	line	62
  3123                           	
  3124  0D37                     l11731:	
  3125                           ;robot.c: 62: if (BumpSensors)
  3126  0D37  1683               	bsf	status, 5	;RP0=1, select bank1
  3127  0D38  1303               	bcf	status, 6	;RP1=0, select bank1
  3128  0D39  0844               	movf	(_BumpSensors)^080h,w	;volatile
  3129  0D3A  1D03               	skipz
  3130  0D3B  2D3D               	goto	u5750
  3131  0D3C  2D41               	goto	l11735
  3132  0D3D                     u5750:
  3133                           	line	64
  3134                           	
  3135  0D3D                     l11733:	
  3136                           ;robot.c: 63: {
  3137                           ;robot.c: 64: ROBOTerror = 1;
  3138  0D3D  01CA               	clrf	(_ROBOTerror)^080h
  3139  0D3E  1403               	bsf	status,0
  3140  0D3F  0DCA               	rlf	(_ROBOTerror)^080h,f
  3141                           	line	65
  3142                           ;robot.c: 65: break;
  3143  0D40  2DB9               	goto	l11749
  3144                           	line	66
  3145                           	
  3146  0D41                     l6045:	
  3147                           	line	67
  3148                           	
  3149  0D41                     l11735:	
  3150                           ;robot.c: 66: }
  3151                           ;robot.c: 67: temp1 = DistHighByte;
  3152  0D41  0846               	movf	(_DistHighByte)^080h,w	;volatile
  3153  0D42  1283               	bcf	status, 5	;RP0=0, select bank0
  3154  0D43  1303               	bcf	status, 6	;RP1=0, select bank0
  3155  0D44  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3156  0D45  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3157  0D46  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3158  0D47  00E0               	movwf	(robotMoveSpeed@temp1)
  3159  0D48  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3160  0D49  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3161                           	line	68
  3162                           	
  3163  0D4A                     l11737:	
  3164                           ;robot.c: 68: temp1 = temp1 << 8;
  3165  0D4A  0861               	movf	(robotMoveSpeed@temp1+1),w
  3166  0D4B  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  3167  0D4C  0860               	movf	(robotMoveSpeed@temp1),w
  3168  0D4D  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3169  0D4E  085D               	movf	(??_robotMoveSpeed+0)+0,w
  3170  0D4F  00DE               	movwf	(??_robotMoveSpeed+0)+1
  3171  0D50  01DD               	clrf	(??_robotMoveSpeed+0)+0
  3172  0D51  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3173  0D52  00E0               	movwf	(robotMoveSpeed@temp1)
  3174  0D53  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3175  0D54  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3176                           	line	69
  3177                           	
  3178  0D55                     l11739:	
  3179                           ;robot.c: 69: temp1 += DistLowByte;
  3180  0D55  1683               	bsf	status, 5	;RP0=1, select bank1
  3181  0D56  1303               	bcf	status, 6	;RP1=0, select bank1
  3182  0D57  0847               	movf	(_DistLowByte)^080h,w	;volatile
  3183  0D58  1283               	bcf	status, 5	;RP0=0, select bank0
  3184  0D59  1303               	bcf	status, 6	;RP1=0, select bank0
  3185  0D5A  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3186  0D5B  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3187  0D5C  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3188  0D5D  07E0               	addwf	(robotMoveSpeed@temp1),f
  3189  0D5E  1803               	skipnc
  3190  0D5F  0AE1               	incf	(robotMoveSpeed@temp1+1),f
  3191  0D60  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3192  0D61  07E1               	addwf	(robotMoveSpeed@temp1+1),f
  3193                           	line	70
  3194                           	
  3195  0D62                     l11741:	
  3196                           ;robot.c: 70: distTravelled += temp1;
  3197  0D62  0860               	movf	(robotMoveSpeed@temp1),w
  3198  0D63  1683               	bsf	status, 5	;RP0=1, select bank1
  3199  0D64  1303               	bcf	status, 6	;RP1=0, select bank1
  3200  0D65  07B8               	addwf	(_distTravelled)^080h,f
  3201  0D66  1803               	skipnc
  3202  0D67  0AB9               	incf	(_distTravelled+1)^080h,f
  3203  0D68  1283               	bcf	status, 5	;RP0=0, select bank0
  3204  0D69  1303               	bcf	status, 6	;RP1=0, select bank0
  3205  0D6A  0861               	movf	(robotMoveSpeed@temp1+1),w
  3206  0D6B  1683               	bsf	status, 5	;RP0=1, select bank1
  3207  0D6C  1303               	bcf	status, 6	;RP1=0, select bank1
  3208  0D6D  07B9               	addwf	(_distTravelled+1)^080h,f
  3209                           	line	71
  3210                           	
  3211  0D6E                     l11743:	
  3212                           ;robot.c: 71: TotalDistTravelled += temp1;
  3213  0D6E  1283               	bcf	status, 5	;RP0=0, select bank0
  3214  0D6F  1303               	bcf	status, 6	;RP1=0, select bank0
  3215  0D70  0860               	movf	(robotMoveSpeed@temp1),w
  3216  0D71  1683               	bsf	status, 5	;RP0=1, select bank1
  3217  0D72  1303               	bcf	status, 6	;RP1=0, select bank1
  3218  0D73  07B4               	addwf	(_TotalDistTravelled)^080h,f
  3219  0D74  1803               	skipnc
  3220  0D75  0AB5               	incf	(_TotalDistTravelled+1)^080h,f
  3221  0D76  1283               	bcf	status, 5	;RP0=0, select bank0
  3222  0D77  1303               	bcf	status, 6	;RP1=0, select bank0
  3223  0D78  0861               	movf	(robotMoveSpeed@temp1+1),w
  3224  0D79  1683               	bsf	status, 5	;RP0=1, select bank1
  3225  0D7A  1303               	bcf	status, 6	;RP1=0, select bank1
  3226  0D7B  07B5               	addwf	(_TotalDistTravelled+1)^080h,f
  3227                           	line	72
  3228                           	
  3229  0D7C                     l11745:	
  3230                           ;robot.c: 72: UpdateDisplay();
  3231  0D7C  120A  118A  250B   	fcall	_UpdateDisplay
              120A  158A         
  3232  0D81  2D82               	goto	l11747
  3233                           	line	73
  3234                           	
  3235  0D82                     l6043:	
  3236                           	line	59
  3237                           	
  3238  0D82                     l11747:	
  3239  0D82  1283               	bcf	status, 5	;RP0=0, select bank0
  3240  0D83  1303               	bcf	status, 6	;RP1=0, select bank0
  3241  0D84  085A               	movf	(robotMoveSpeed@distance+1),w
  3242  0D85  01A7               	clrf	(?_abs+1)
  3243  0D86  07A7               	addwf	(?_abs+1)
  3244  0D87  0859               	movf	(robotMoveSpeed@distance),w
  3245  0D88  01A6               	clrf	(?_abs)
  3246  0D89  07A6               	addwf	(?_abs)
  3247                           
  3248  0D8A  160A  118A  2706   	fcall	_abs
              120A  158A         
  3249  0D8F  1283               	bcf	status, 5	;RP0=0, select bank0
  3250  0D90  1303               	bcf	status, 6	;RP1=0, select bank0
  3251  0D91  0826               	movf	(0+?_abs),w
  3252  0D92  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3253  0D93  0827               	movf	(1+?_abs),w
  3254  0D94  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  3255  0D95  1683               	bsf	status, 5	;RP0=1, select bank1
  3256  0D96  1303               	bcf	status, 6	;RP1=0, select bank1
  3257  0D97  0839               	movf	(_distTravelled+1)^080h,w
  3258  0D98  1283               	bcf	status, 5	;RP0=0, select bank0
  3259  0D99  1303               	bcf	status, 6	;RP1=0, select bank0
  3260  0D9A  01A7               	clrf	(?_abs+1)
  3261  0D9B  07A7               	addwf	(?_abs+1)
  3262  0D9C  1683               	bsf	status, 5	;RP0=1, select bank1
  3263  0D9D  1303               	bcf	status, 6	;RP1=0, select bank1
  3264  0D9E  0838               	movf	(_distTravelled)^080h,w
  3265  0D9F  1283               	bcf	status, 5	;RP0=0, select bank0
  3266  0DA0  1303               	bcf	status, 6	;RP1=0, select bank0
  3267  0DA1  01A6               	clrf	(?_abs)
  3268  0DA2  07A6               	addwf	(?_abs)
  3269                           
  3270  0DA3  160A  118A  2706   	fcall	_abs
              120A  158A         
  3271  0DA8  1283               	bcf	status, 5	;RP0=0, select bank0
  3272  0DA9  1303               	bcf	status, 6	;RP1=0, select bank0
  3273  0DAA  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3274  0DAB  3A80               	xorlw	80h
  3275  0DAC  00DF               	movwf	(??_robotMoveSpeed+2)+0
  3276  0DAD  0827               	movf	(1+(?_abs)),w
  3277  0DAE  3A80               	xorlw	80h
  3278  0DAF  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  3279  0DB0  1D03               	skipz
  3280  0DB1  2DB4               	goto	u5765
  3281  0DB2  0826               	movf	(0+(?_abs)),w
  3282  0DB3  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  3283  0DB4                     u5765:
  3284                           
  3285  0DB4  1803               	skipnc
  3286  0DB5  2DB7               	goto	u5761
  3287  0DB6  2DB8               	goto	u5760
  3288  0DB7                     u5761:
  3289  0DB7  2D32               	goto	l11729
  3290  0DB8                     u5760:
  3291  0DB8  2DB9               	goto	l11749
  3292                           	
  3293  0DB9                     l6046:	
  3294                           	line	75
  3295                           	
  3296  0DB9                     l11749:	
  3297                           ;robot.c: 73: }
  3298                           ;robot.c: 75: RobotDrive(0);
  3299  0DB9  3000               	movlw	low(0)
  3300  0DBA  1283               	bcf	status, 5	;RP0=0, select bank0
  3301  0DBB  1303               	bcf	status, 6	;RP1=0, select bank0
  3302  0DBC  00A2               	movwf	(?_RobotDrive)
  3303  0DBD  3000               	movlw	high(0)
  3304  0DBE  00A3               	movwf	((?_RobotDrive))+1
  3305  0DBF  160A  118A  267A   	fcall	_RobotDrive
              120A  158A         
  3306                           	line	77
  3307                           	
  3308  0DC4                     l6047:	
  3309  0DC4  0008               	return
  3310                           	opt stack 0
  3311                           GLOBAL	__end_of_robotMoveSpeed
  3312  0DC5                     	__end_of_robotMoveSpeed:
  3313 ;; =============== function _robotMoveSpeed ends ============
  3314                           
  3315                           	signat	_robotMoveSpeed,8312
  3316                           	global	_scan360
  3317                           psect	text1061,local,class=CODE,delta=2
  3318                           global __ptext1061
  3319  0B91                     __ptext1061:
  3320                           
  3321 ;; *************** function _scan360 *****************
  3322 ;; Defined at:
  3323 ;;		line 456 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  steps           2   63[BANK0 ] int 
  3328 ;;  lowestSteps     2   61[BANK0 ] int 
  3329 ;;  lowestVal       2   59[BANK0 ] int 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  2   57[BANK0 ] int 
  3332 ;; Registers used:
  3333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3339 ;;      Params:         0       2       0       0       0
  3340 ;;      Locals:         0       6       0       0       0
  3341 ;;      Temps:          0       0       0       0       0
  3342 ;;      Totals:         0       8       0       0       0
  3343 ;;Total ram usage:        8 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    7
  3346 ;; This function calls:
  3347 ;;		_readAvgDistance
  3348 ;;		_rotate
  3349 ;;		_UpdateDisplay
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;;		_FollowWall
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           psect	text1061
  3356                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3357                           	line	456
  3358                           	global	__size_of_scan360
  3359  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  3360                           	
  3361  0B91                     _scan360:	
  3362                           	opt	stack 0
  3363                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3364                           	line	457
  3365                           	
  3366  0B91                     l11697:	
  3367                           ;Main.c: 457: int lowestVal = 0, lowestSteps = 0;
  3368  0B91  1283               	bcf	status, 5	;RP0=0, select bank0
  3369  0B92  1303               	bcf	status, 6	;RP1=0, select bank0
  3370  0B93  01DB               	clrf	(scan360@lowestVal)
  3371  0B94  01DC               	clrf	(scan360@lowestVal+1)
  3372  0B95  01DD               	clrf	(scan360@lowestSteps)
  3373  0B96  01DE               	clrf	(scan360@lowestSteps+1)
  3374                           	line	459
  3375                           ;Main.c: 459: for (int steps = 0; steps < 400; steps++)
  3376  0B97  01DF               	clrf	(scan360@steps)
  3377  0B98  01E0               	clrf	(scan360@steps+1)
  3378                           	
  3379  0B99                     l11699:	
  3380  0B99  0860               	movf	(scan360@steps+1),w
  3381  0B9A  3A80               	xorlw	80h
  3382  0B9B  00FF               	movwf	btemp+1
  3383  0B9C  3081               	movlw	(high(0190h))^80h
  3384  0B9D  027F               	subwf	btemp+1,w
  3385  0B9E  1D03               	skipz
  3386  0B9F  2BA2               	goto	u5715
  3387  0BA0  3090               	movlw	low(0190h)
  3388  0BA1  025F               	subwf	(scan360@steps),w
  3389  0BA2                     u5715:
  3390                           
  3391  0BA2  1C03               	skipc
  3392  0BA3  2BA5               	goto	u5711
  3393  0BA4  2BA6               	goto	u5710
  3394  0BA5                     u5711:
  3395  0BA5  2BA8               	goto	l11703
  3396  0BA6                     u5710:
  3397  0BA6  2C01               	goto	l11721
  3398                           	
  3399  0BA7                     l11701:	
  3400  0BA7  2C01               	goto	l11721
  3401                           	line	460
  3402                           	
  3403  0BA8                     l2298:	
  3404                           	line	461
  3405                           	
  3406  0BA8                     l11703:	
  3407                           ;Main.c: 460: {
  3408                           ;Main.c: 461: readAvgDistance();
  3409  0BA8  120A  158A  231B   	fcall	_readAvgDistance
              120A  158A         
  3410                           	line	462
  3411                           	
  3412  0BAD                     l11705:	
  3413                           ;Main.c: 462: if (adcVal > lowestVal)
  3414  0BAD  1683               	bsf	status, 5	;RP0=1, select bank1
  3415  0BAE  1303               	bcf	status, 6	;RP1=0, select bank1
  3416  0BAF  0837               	movf	(_adcVal+1)^080h,w	;volatile
  3417  0BB0  1283               	bcf	status, 5	;RP0=0, select bank0
  3418  0BB1  1303               	bcf	status, 6	;RP1=0, select bank0
  3419  0BB2  025C               	subwf	(scan360@lowestVal+1),w
  3420  0BB3  1D03               	skipz
  3421  0BB4  2BBB               	goto	u5725
  3422  0BB5  1683               	bsf	status, 5	;RP0=1, select bank1
  3423  0BB6  1303               	bcf	status, 6	;RP1=0, select bank1
  3424  0BB7  0836               	movf	(_adcVal)^080h,w	;volatile
  3425  0BB8  1283               	bcf	status, 5	;RP0=0, select bank0
  3426  0BB9  1303               	bcf	status, 6	;RP1=0, select bank0
  3427  0BBA  025B               	subwf	(scan360@lowestVal),w
  3428  0BBB                     u5725:
  3429  0BBB  1803               	skipnc
  3430  0BBC  2BBE               	goto	u5721
  3431  0BBD  2BBF               	goto	u5720
  3432  0BBE                     u5721:
  3433  0BBE  2BD4               	goto	l11709
  3434  0BBF                     u5720:
  3435                           	line	464
  3436                           	
  3437  0BBF                     l11707:	
  3438                           ;Main.c: 463: {
  3439                           ;Main.c: 464: lowestVal = adcVal;
  3440  0BBF  1683               	bsf	status, 5	;RP0=1, select bank1
  3441  0BC0  1303               	bcf	status, 6	;RP1=0, select bank1
  3442  0BC1  0837               	movf	(_adcVal+1)^080h,w	;volatile
  3443  0BC2  1283               	bcf	status, 5	;RP0=0, select bank0
  3444  0BC3  1303               	bcf	status, 6	;RP1=0, select bank0
  3445  0BC4  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  3446  0BC5  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  3447  0BC6  1683               	bsf	status, 5	;RP0=1, select bank1
  3448  0BC7  1303               	bcf	status, 6	;RP1=0, select bank1
  3449  0BC8  0836               	movf	(_adcVal)^080h,w	;volatile
  3450  0BC9  1283               	bcf	status, 5	;RP0=0, select bank0
  3451  0BCA  1303               	bcf	status, 6	;RP1=0, select bank0
  3452  0BCB  01DB               	clrf	(scan360@lowestVal)	;volatile
  3453  0BCC  07DB               	addwf	(scan360@lowestVal)	;volatile
  3454                           
  3455                           	line	465
  3456                           ;Main.c: 465: lowestSteps = steps;
  3457  0BCD  0860               	movf	(scan360@steps+1),w
  3458  0BCE  01DE               	clrf	(scan360@lowestSteps+1)
  3459  0BCF  07DE               	addwf	(scan360@lowestSteps+1)
  3460  0BD0  085F               	movf	(scan360@steps),w
  3461  0BD1  01DD               	clrf	(scan360@lowestSteps)
  3462  0BD2  07DD               	addwf	(scan360@lowestSteps)
  3463                           
  3464  0BD3  2BD4               	goto	l11709
  3465                           	line	467
  3466                           	
  3467  0BD4                     l2300:	
  3468                           	line	468
  3469                           	
  3470  0BD4                     l11709:	
  3471                           ;Main.c: 467: }
  3472                           ;Main.c: 468: rotate(1, 1);
  3473  0BD4  3001               	movlw	low(01h)
  3474  0BD5  00A3               	movwf	(?_rotate)
  3475  0BD6  3000               	movlw	high(01h)
  3476  0BD7  00A4               	movwf	((?_rotate))+1
  3477  0BD8  01A5               	clrf	0+(?_rotate)+02h
  3478  0BD9  1403               	bsf	status,0
  3479  0BDA  0DA5               	rlf	0+(?_rotate)+02h,f
  3480  0BDB  120A  158A  21B2   	fcall	_rotate
              120A  158A         
  3481                           	line	470
  3482                           	
  3483  0BE0                     l11711:	
  3484                           ;Main.c: 470: if (RTC_FLAG_250MS == 1)
  3485  0BE0  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3486  0BE1  2BE3               	goto	u5731
  3487  0BE2  2BE4               	goto	u5730
  3488  0BE3                     u5731:
  3489  0BE3  2BEB               	goto	l11717
  3490  0BE4                     u5730:
  3491                           	line	472
  3492                           	
  3493  0BE4                     l11713:	
  3494                           ;Main.c: 471: {
  3495                           ;Main.c: 472: RTC_FLAG_250MS = 0;
  3496  0BE4  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3497                           	line	473
  3498                           	
  3499  0BE5                     l11715:	
  3500                           ;Main.c: 473: UpdateDisplay();
  3501  0BE5  120A  118A  250B   	fcall	_UpdateDisplay
              120A  158A         
  3502  0BEA  2BEB               	goto	l11717
  3503                           	line	474
  3504                           	
  3505  0BEB                     l2301:	
  3506                           	line	459
  3507                           	
  3508  0BEB                     l11717:	
  3509  0BEB  3001               	movlw	low(01h)
  3510  0BEC  1283               	bcf	status, 5	;RP0=0, select bank0
  3511  0BED  1303               	bcf	status, 6	;RP1=0, select bank0
  3512  0BEE  07DF               	addwf	(scan360@steps),f
  3513  0BEF  1803               	skipnc
  3514  0BF0  0AE0               	incf	(scan360@steps+1),f
  3515  0BF1  3000               	movlw	high(01h)
  3516  0BF2  07E0               	addwf	(scan360@steps+1),f
  3517                           	
  3518  0BF3                     l11719:	
  3519  0BF3  0860               	movf	(scan360@steps+1),w
  3520  0BF4  3A80               	xorlw	80h
  3521  0BF5  00FF               	movwf	btemp+1
  3522  0BF6  3081               	movlw	(high(0190h))^80h
  3523  0BF7  027F               	subwf	btemp+1,w
  3524  0BF8  1D03               	skipz
  3525  0BF9  2BFC               	goto	u5745
  3526  0BFA  3090               	movlw	low(0190h)
  3527  0BFB  025F               	subwf	(scan360@steps),w
  3528  0BFC                     u5745:
  3529                           
  3530  0BFC  1C03               	skipc
  3531  0BFD  2BFF               	goto	u5741
  3532  0BFE  2C00               	goto	u5740
  3533  0BFF                     u5741:
  3534  0BFF  2BA8               	goto	l11703
  3535  0C00                     u5740:
  3536  0C00  2C01               	goto	l11721
  3537                           	
  3538  0C01                     l2299:	
  3539                           	line	478
  3540                           	
  3541  0C01                     l11721:	
  3542                           ;Main.c: 474: }
  3543                           ;Main.c: 476: }
  3544                           ;Main.c: 478: return lowestSteps;
  3545  0C01  1283               	bcf	status, 5	;RP0=0, select bank0
  3546  0C02  1303               	bcf	status, 6	;RP1=0, select bank0
  3547  0C03  085E               	movf	(scan360@lowestSteps+1),w
  3548  0C04  01DA               	clrf	(?_scan360+1)
  3549  0C05  07DA               	addwf	(?_scan360+1)
  3550  0C06  085D               	movf	(scan360@lowestSteps),w
  3551  0C07  01D9               	clrf	(?_scan360)
  3552  0C08  07D9               	addwf	(?_scan360)
  3553                           
  3554  0C09  2C0A               	goto	l2302
  3555                           	
  3556  0C0A                     l11723:	
  3557                           	line	479
  3558                           	
  3559  0C0A                     l2302:	
  3560  0C0A  0008               	return
  3561                           	opt stack 0
  3562                           GLOBAL	__end_of_scan360
  3563  0C0B                     	__end_of_scan360:
  3564 ;; =============== function _scan360 ends ============
  3565                           
  3566                           	signat	_scan360,90
  3567                           	global	_calibrateIR
  3568                           psect	text1062,local,class=CODE,delta=2
  3569                           global __ptext1062
  3570  0A55                     __ptext1062:
  3571                           
  3572 ;; *************** function _calibrateIR *****************
  3573 ;; Defined at:
  3574 ;;		line 349 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;		None               void
  3581 ;; Registers used:
  3582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0
  3591 ;;      Totals:         0       0       0       0       0
  3592 ;;Total ram usage:        0 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    6
  3595 ;; This function calls:
  3596 ;;		_rotate
  3597 ;;		_UpdateDisplay
  3598 ;; This function is called by:
  3599 ;;		_main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           psect	text1062
  3603                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3604                           	line	349
  3605                           	global	__size_of_calibrateIR
  3606  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  3607                           	
  3608  0A55                     _calibrateIR:	
  3609                           	opt	stack 1
  3610                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3611                           	line	351
  3612                           	
  3613  0A55                     l11667:	
  3614                           ;Main.c: 351: currentMenu = 1;
  3615  0A55  1683               	bsf	status, 5	;RP0=1, select bank1
  3616  0A56  1303               	bcf	status, 6	;RP1=0, select bank1
  3617  0A57  01CD               	clrf	(_currentMenu)^080h	;volatile
  3618  0A58  1403               	bsf	status,0
  3619  0A59  0DCD               	rlf	(_currentMenu)^080h,f	;volatile
  3620                           	line	352
  3621                           	
  3622  0A5A                     l11669:	
  3623                           ;Main.c: 352: rotate(8, 0);
  3624  0A5A  3008               	movlw	low(08h)
  3625  0A5B  1283               	bcf	status, 5	;RP0=0, select bank0
  3626  0A5C  1303               	bcf	status, 6	;RP1=0, select bank0
  3627  0A5D  00A3               	movwf	(?_rotate)
  3628  0A5E  3000               	movlw	high(08h)
  3629  0A5F  00A4               	movwf	((?_rotate))+1
  3630  0A60  01A5               	clrf	0+(?_rotate)+02h
  3631  0A61  120A  158A  21B2   	fcall	_rotate
              120A  158A         
  3632  0A66  2A67               	goto	l11671
  3633                           	line	353
  3634                           ;Main.c: 353: while (1)
  3635                           	
  3636  0A67                     l2268:	
  3637                           	line	355
  3638                           	
  3639  0A67                     l11671:	
  3640                           ;Main.c: 354: {
  3641                           ;Main.c: 355: if (RTC_FLAG_250MS == 1)
  3642  0A67  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3643  0A68  2A6A               	goto	u5701
  3644  0A69  2A6B               	goto	u5700
  3645  0A6A                     u5701:
  3646  0A6A  2A9F               	goto	l11695
  3647  0A6B                     u5700:
  3648                           	line	357
  3649                           	
  3650  0A6B                     l11673:	
  3651                           ;Main.c: 356: {
  3652                           ;Main.c: 357: RTC_FLAG_250MS = 0;
  3653  0A6B  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3654                           	line	358
  3655                           	
  3656  0A6C                     l11675:	
  3657                           ;Main.c: 358: UpdateDisplay();
  3658  0A6C  120A  118A  250B   	fcall	_UpdateDisplay
              120A  158A         
  3659  0A71  2A9F               	goto	l11695
  3660                           	line	359
  3661                           	
  3662  0A72                     l2269:	
  3663                           	line	360
  3664                           ;Main.c: 359: }
  3665                           ;Main.c: 360: switch (buttonPressed)
  3666  0A72  2A9F               	goto	l11695
  3667                           	line	362
  3668                           ;Main.c: 361: {
  3669                           ;Main.c: 362: case 1:
  3670                           	
  3671  0A73                     l2271:	
  3672                           	line	365
  3673                           ;Main.c: 365: buttonPressed = 0;
  3674  0A73  01FD               	clrf	(_buttonPressed)	;volatile
  3675                           	line	367
  3676                           ;Main.c: 367: break;
  3677  0A74  2A67               	goto	l11671
  3678                           	line	368
  3679                           ;Main.c: 368: case 2:
  3680                           	
  3681  0A75                     l2273:	
  3682                           	line	371
  3683                           ;Main.c: 371: buttonPressed = 0;
  3684  0A75  01FD               	clrf	(_buttonPressed)	;volatile
  3685                           	line	373
  3686                           ;Main.c: 373: break;
  3687  0A76  2A67               	goto	l11671
  3688                           	line	374
  3689                           ;Main.c: 374: case 3:
  3690                           	
  3691  0A77                     l2274:	
  3692                           	line	375
  3693                           	
  3694  0A77                     l11677:	
  3695                           ;Main.c: 375: rotate(1, 1);
  3696  0A77  3001               	movlw	low(01h)
  3697  0A78  1283               	bcf	status, 5	;RP0=0, select bank0
  3698  0A79  1303               	bcf	status, 6	;RP1=0, select bank0
  3699  0A7A  00A3               	movwf	(?_rotate)
  3700  0A7B  3000               	movlw	high(01h)
  3701  0A7C  00A4               	movwf	((?_rotate))+1
  3702  0A7D  01A5               	clrf	0+(?_rotate)+02h
  3703  0A7E  1403               	bsf	status,0
  3704  0A7F  0DA5               	rlf	0+(?_rotate)+02h,f
  3705  0A80  120A  158A  21B2   	fcall	_rotate
              120A  158A         
  3706                           	line	377
  3707                           	
  3708  0A85                     l11679:	
  3709                           ;Main.c: 377: buttonPressed = 0;
  3710  0A85  01FD               	clrf	(_buttonPressed)	;volatile
  3711                           	line	379
  3712                           ;Main.c: 379: break;
  3713  0A86  2A67               	goto	l11671
  3714                           	line	380
  3715                           ;Main.c: 380: case 4:
  3716                           	
  3717  0A87                     l2275:	
  3718                           	line	381
  3719                           	
  3720  0A87                     l11681:	
  3721                           ;Main.c: 381: rotate(1, 0);
  3722  0A87  3001               	movlw	low(01h)
  3723  0A88  1283               	bcf	status, 5	;RP0=0, select bank0
  3724  0A89  1303               	bcf	status, 6	;RP1=0, select bank0
  3725  0A8A  00A3               	movwf	(?_rotate)
  3726  0A8B  3000               	movlw	high(01h)
  3727  0A8C  00A4               	movwf	((?_rotate))+1
  3728  0A8D  01A5               	clrf	0+(?_rotate)+02h
  3729  0A8E  120A  158A  21B2   	fcall	_rotate
              120A  158A         
  3730                           	line	383
  3731                           	
  3732  0A93                     l11683:	
  3733                           ;Main.c: 383: buttonPressed = 0;
  3734  0A93  01FD               	clrf	(_buttonPressed)	;volatile
  3735                           	line	385
  3736                           ;Main.c: 385: break;
  3737  0A94  2A67               	goto	l11671
  3738                           	line	386
  3739                           ;Main.c: 386: case 5:
  3740                           	
  3741  0A95                     l2276:	
  3742                           	line	387
  3743                           	
  3744  0A95                     l11685:	
  3745                           ;Main.c: 387: totalSteps = 0;
  3746  0A95  1683               	bsf	status, 5	;RP0=1, select bank1
  3747  0A96  1303               	bcf	status, 6	;RP1=0, select bank1
  3748  0A97  01C2               	clrf	(_totalSteps)^080h
  3749  0A98  01C3               	clrf	(_totalSteps+1)^080h
  3750                           	line	389
  3751                           	
  3752  0A99                     l11687:	
  3753                           ;Main.c: 389: buttonPressed = 0;
  3754  0A99  01FD               	clrf	(_buttonPressed)	;volatile
  3755                           	line	390
  3756                           	
  3757  0A9A                     l11689:	
  3758                           ;Main.c: 390: currentMenu = 0;
  3759  0A9A  01CD               	clrf	(_currentMenu)^080h	;volatile
  3760  0A9B  2AB2               	goto	l2277
  3761                           	line	391
  3762                           	
  3763  0A9C                     l11691:	
  3764                           ;Main.c: 391: return;
  3765  0A9C  2AB2               	goto	l2277
  3766                           	line	393
  3767                           ;Main.c: 393: default:
  3768                           	
  3769  0A9D                     l2278:	
  3770                           	line	395
  3771                           ;Main.c: 395: break;
  3772  0A9D  2A67               	goto	l11671
  3773                           	line	396
  3774                           	
  3775  0A9E                     l11693:	
  3776                           ;Main.c: 396: }
  3777  0A9E  2A67               	goto	l11671
  3778                           	line	360
  3779                           	
  3780  0A9F                     l2270:	
  3781                           	
  3782  0A9F                     l11695:	
  3783  0A9F  087D               	movf	(_buttonPressed),w	;volatile
  3784                           	; Switch size 1, requested type "space"
  3785                           ; Number of cases is 5, Range of values is 1 to 5
  3786                           ; switch strategies available:
  3787                           ; Name         Instructions Cycles
  3788                           ; simple_byte           16     9 (average)
  3789                           ; direct_byte           26    11 (fixed)
  3790                           ; jumptable            263     9 (fixed)
  3791                           ;	Chosen strategy is simple_byte
  3792                           
  3793                           	opt asmopt_off
  3794  0AA0  3A01               	xorlw	1^0	; case 1
  3795  0AA1  1903               	skipnz
  3796  0AA2  2A73               	goto	l2271
  3797  0AA3  3A03               	xorlw	2^1	; case 2
  3798  0AA4  1903               	skipnz
  3799  0AA5  2A75               	goto	l2273
  3800  0AA6  3A01               	xorlw	3^2	; case 3
  3801  0AA7  1903               	skipnz
  3802  0AA8  2A77               	goto	l11677
  3803  0AA9  3A07               	xorlw	4^3	; case 4
  3804  0AAA  1903               	skipnz
  3805  0AAB  2A87               	goto	l11681
  3806  0AAC  3A01               	xorlw	5^4	; case 5
  3807  0AAD  1903               	skipnz
  3808  0AAE  2A95               	goto	l11685
  3809  0AAF  2A67               	goto	l11671
  3810                           	opt asmopt_on
  3811                           
  3812                           	line	396
  3813                           	
  3814  0AB0                     l2272:	
  3815  0AB0  2A67               	goto	l11671
  3816                           	line	397
  3817                           	
  3818  0AB1                     l2279:	
  3819                           	line	353
  3820  0AB1  2A67               	goto	l11671
  3821                           	
  3822  0AB2                     l2280:	
  3823                           	line	398
  3824                           	
  3825  0AB2                     l2277:	
  3826  0AB2  0008               	return
  3827                           	opt stack 0
  3828                           GLOBAL	__end_of_calibrateIR
  3829  0AB3                     	__end_of_calibrateIR:
  3830 ;; =============== function _calibrateIR ends ============
  3831                           
  3832                           	signat	_calibrateIR,88
  3833                           	global	_UpdateDisplay
  3834                           psect	text1063,local,class=CODE,delta=2
  3835                           global __ptext1063
  3836  050B                     __ptext1063:
  3837                           
  3838 ;; *************** function _UpdateDisplay *****************
  3839 ;; Defined at:
  3840 ;;		line 216 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  adcOutput      16   41[BANK0 ] unsigned char [16]
  3845 ;; Return value:  Size  Location     Type
  3846 ;;		None               void
  3847 ;; Registers used:
  3848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3854 ;;      Params:         0       0       0       0       0
  3855 ;;      Locals:         0      16       0       0       0
  3856 ;;      Temps:          0       4       0       0       0
  3857 ;;      Totals:         0      20       0       0       0
  3858 ;;Total ram usage:       20 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; Hardware stack levels required when called:    5
  3861 ;; This function calls:
  3862 ;;		_lcd_write_control
  3863 ;;		_sprintf
  3864 ;;		_lcd_set_cursor
  3865 ;;		_lcd_write_string
  3866 ;;		___awmod
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;;		_calibrateIR
  3870 ;;		_ChargeMode
  3871 ;;		_scan360
  3872 ;;		_robotMoveSpeed
  3873 ;;		_robotMove
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           psect	text1063
  3877                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  3878                           	line	216
  3879                           	global	__size_of_UpdateDisplay
  3880  015F                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  3881                           	
  3882  050B                     _UpdateDisplay:	
  3883                           	opt	stack 1
  3884                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3885                           	line	217
  3886                           	
  3887  050B                     l11623:	
  3888                           ;HMI.c: 217: char adcOutput[16] = "";
  3889  050B  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3890  050C  0084               	movwf	fsr0
  3891  050D  3090               	movlw	low(UpdateDisplay@F1235)
  3892  050E  1283               	bcf	status, 5	;RP0=0, select bank0
  3893  050F  1303               	bcf	status, 6	;RP1=0, select bank0
  3894  0510  00C5               	movwf	(??_UpdateDisplay+0)+0
  3895  0511  0804               	movf	fsr0,w
  3896  0512  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  3897  0513  3010               	movlw	16
  3898  0514  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  3899  0515                     u5680:
  3900  0515  0845               	movf	(??_UpdateDisplay+0)+0,w
  3901  0516  0084               	movwf	fsr0
  3902  0517  1783               	bsf	status, 7	;select IRP bank3
  3903                           	
  3904  0518  0800               	movf	indf,w
  3905  0519  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  3906  051A  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  3907  051B  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  3908  051C  0084               	movwf	fsr0
  3909  051D  1383               	bcf	status, 7	;select IRP bank0
  3910                           	
  3911  051E  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  3912  051F  0080               	movwf	indf
  3913  0520  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  3914  0521  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  3915  0522  2D15               	goto	u5680
  3916                           	line	218
  3917                           ;HMI.c: 218: switch (currentMenu)
  3918  0523  2E5C               	goto	l11665
  3919                           	line	221
  3920                           ;HMI.c: 219: {
  3921                           ;HMI.c: 221: case 0:
  3922                           	
  3923  0524                     l4565:	
  3924                           	line	224
  3925                           	
  3926  0524                     l11625:	
  3927                           ;HMI.c: 224: lcd_write_control(0b00000001);
  3928  0524  3001               	movlw	(01h)
  3929  0525  160A  118A  24AD   	fcall	_lcd_write_control
              120A  118A         
  3930                           	line	226
  3931                           	
  3932  052A                     l11627:	
  3933                           ;HMI.c: 226: sprintf(adcOutput,"IR:%dcm D:%d",IRdistance, TotalDistTravelled);
  3934  052A  302B               	movlw	((STR_13-__stringbase))&0ffh
  3935  052B  1283               	bcf	status, 5	;RP0=0, select bank0
  3936  052C  1303               	bcf	status, 6	;RP1=0, select bank0
  3937  052D  00C5               	movwf	(??_UpdateDisplay+0)+0
  3938  052E  0845               	movf	(??_UpdateDisplay+0)+0,w
  3939  052F  00B4               	movwf	(?_sprintf)
  3940  0530  1683               	bsf	status, 5	;RP0=1, select bank1
  3941  0531  1303               	bcf	status, 6	;RP1=0, select bank1
  3942  0532  0831               	movf	(_IRdistance+1)^080h,w	;volatile
  3943  0533  1283               	bcf	status, 5	;RP0=0, select bank0
  3944  0534  1303               	bcf	status, 6	;RP1=0, select bank0
  3945  0535  01B6               	clrf	1+(?_sprintf)+01h
  3946  0536  07B6               	addwf	1+(?_sprintf)+01h
  3947  0537  1683               	bsf	status, 5	;RP0=1, select bank1
  3948  0538  1303               	bcf	status, 6	;RP1=0, select bank1
  3949  0539  0830               	movf	(_IRdistance)^080h,w	;volatile
  3950  053A  1283               	bcf	status, 5	;RP0=0, select bank0
  3951  053B  1303               	bcf	status, 6	;RP1=0, select bank0
  3952  053C  01B5               	clrf	0+(?_sprintf)+01h
  3953  053D  07B5               	addwf	0+(?_sprintf)+01h
  3954                           
  3955  053E  1683               	bsf	status, 5	;RP0=1, select bank1
  3956  053F  1303               	bcf	status, 6	;RP1=0, select bank1
  3957  0540  0835               	movf	(_TotalDistTravelled+1)^080h,w
  3958  0541  1283               	bcf	status, 5	;RP0=0, select bank0
  3959  0542  1303               	bcf	status, 6	;RP1=0, select bank0
  3960  0543  01B8               	clrf	1+(?_sprintf)+03h
  3961  0544  07B8               	addwf	1+(?_sprintf)+03h
  3962  0545  1683               	bsf	status, 5	;RP0=1, select bank1
  3963  0546  1303               	bcf	status, 6	;RP1=0, select bank1
  3964  0547  0834               	movf	(_TotalDistTravelled)^080h,w
  3965  0548  1283               	bcf	status, 5	;RP0=0, select bank0
  3966  0549  1303               	bcf	status, 6	;RP1=0, select bank0
  3967  054A  01B7               	clrf	0+(?_sprintf)+03h
  3968  054B  07B7               	addwf	0+(?_sprintf)+03h
  3969                           
  3970  054C  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3971  054D  120A  118A  266A   	fcall	_sprintf
              120A  118A         
  3972                           	line	229
  3973                           	
  3974  0552                     l11629:	
  3975                           ;HMI.c: 229: lcd_set_cursor(0x00);
  3976  0552  3000               	movlw	(0)
  3977  0553  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  3978                           	line	230
  3979                           ;HMI.c: 230: lcd_write_string(adcOutput);
  3980  0558  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3981  0559  1283               	bcf	status, 5	;RP0=0, select bank0
  3982  055A  1303               	bcf	status, 6	;RP1=0, select bank0
  3983  055B  00A7               	movwf	(?_lcd_write_string)
  3984  055C  3000               	movlw	(0x0/2)
  3985  055D  00A8               	movwf	(?_lcd_write_string+1)
  3986  055E  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  3987                           	line	232
  3988                           	
  3989  0563                     l11631:	
  3990                           ;HMI.c: 232: lcd_set_cursor(0x40);
  3991  0563  3040               	movlw	(040h)
  3992  0564  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  3993                           	line	233
  3994                           	
  3995  0569                     l11633:	
  3996                           ;HMI.c: 233: if (pos > 0)
  3997  0569  1683               	bsf	status, 5	;RP0=1, select bank1
  3998  056A  1303               	bcf	status, 6	;RP1=0, select bank1
  3999  056B  083F               	movf	(_pos+1)^080h,w
  4000  056C  3A80               	xorlw	80h
  4001  056D  00FF               	movwf	btemp+1
  4002  056E  3080               	movlw	(high(01h))^80h
  4003  056F  027F               	subwf	btemp+1,w
  4004  0570  1D03               	skipz
  4005  0571  2D74               	goto	u5695
  4006  0572  3001               	movlw	low(01h)
  4007  0573  023E               	subwf	(_pos)^080h,w
  4008  0574                     u5695:
  4009                           
  4010  0574  1C03               	skipc
  4011  0575  2D77               	goto	u5691
  4012  0576  2D78               	goto	u5690
  4013  0577                     u5691:
  4014  0577  2D8B               	goto	l11637
  4015  0578                     u5690:
  4016                           	line	234
  4017                           	
  4018  0578                     l11635:	
  4019                           ;HMI.c: 234: lcd_write_string(shortMenuStrings[pos - 1]);
  4020  0578  1683               	bsf	status, 5	;RP0=1, select bank1
  4021  0579  1303               	bcf	status, 6	;RP1=0, select bank1
  4022  057A  083E               	movf	(_pos)^080h,w
  4023  057B  3EFF               	addlw	0FFh
  4024  057C  3EDD               	addlw	_shortMenuStrings&0ffh
  4025  057D  0084               	movwf	fsr0
  4026  057E  1383               	bcf	status, 7	;select IRP bank1
  4027  057F  0800               	movf	indf,w
  4028  0580  1283               	bcf	status, 5	;RP0=0, select bank0
  4029  0581  1303               	bcf	status, 6	;RP1=0, select bank0
  4030  0582  00A7               	movwf	(?_lcd_write_string)
  4031  0583  3080               	movlw	80h
  4032  0584  00A8               	movwf	(?_lcd_write_string+1)
  4033  0585  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4034  058A  2D9E               	goto	l11639
  4035                           	line	235
  4036                           	
  4037  058B                     l4566:	
  4038                           	line	236
  4039                           	
  4040  058B                     l11637:	
  4041                           ;HMI.c: 235: else
  4042                           ;HMI.c: 236: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4043  058B  1683               	bsf	status, 5	;RP0=1, select bank1
  4044  058C  1303               	bcf	status, 6	;RP1=0, select bank1
  4045  058D  083E               	movf	(_pos)^080h,w
  4046  058E  3E05               	addlw	05h
  4047  058F  3EDD               	addlw	_shortMenuStrings&0ffh
  4048  0590  0084               	movwf	fsr0
  4049  0591  1383               	bcf	status, 7	;select IRP bank1
  4050  0592  0800               	movf	indf,w
  4051  0593  1283               	bcf	status, 5	;RP0=0, select bank0
  4052  0594  1303               	bcf	status, 6	;RP1=0, select bank0
  4053  0595  00A7               	movwf	(?_lcd_write_string)
  4054  0596  3080               	movlw	80h
  4055  0597  00A8               	movwf	(?_lcd_write_string+1)
  4056  0598  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4057  059D  2D9E               	goto	l11639
  4058                           	
  4059  059E                     l4567:	
  4060                           	line	237
  4061                           	
  4062  059E                     l11639:	
  4063                           ;HMI.c: 237: lcd_set_cursor(0x44);
  4064  059E  3044               	movlw	(044h)
  4065  059F  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  4066                           	line	238
  4067                           	
  4068  05A4                     l11641:	
  4069                           ;HMI.c: 238: lcd_write_string(menuStrings[pos]);
  4070  05A4  1683               	bsf	status, 5	;RP0=1, select bank1
  4071  05A5  1303               	bcf	status, 6	;RP1=0, select bank1
  4072  05A6  083E               	movf	(_pos)^080h,w
  4073  05A7  3ED7               	addlw	_menuStrings&0ffh
  4074  05A8  0084               	movwf	fsr0
  4075  05A9  1383               	bcf	status, 7	;select IRP bank1
  4076  05AA  0800               	movf	indf,w
  4077  05AB  1283               	bcf	status, 5	;RP0=0, select bank0
  4078  05AC  1303               	bcf	status, 6	;RP1=0, select bank0
  4079  05AD  00A7               	movwf	(?_lcd_write_string)
  4080  05AE  3080               	movlw	80h
  4081  05AF  00A8               	movwf	(?_lcd_write_string+1)
  4082  05B0  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4083                           	line	239
  4084                           ;HMI.c: 239: lcd_set_cursor(0x4D);
  4085  05B5  304D               	movlw	(04Dh)
  4086  05B6  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  4087                           	line	240
  4088                           	
  4089  05BB                     l11643:	
  4090                           ;HMI.c: 240: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4091  05BB  3006               	movlw	low(06h)
  4092  05BC  1283               	bcf	status, 5	;RP0=0, select bank0
  4093  05BD  1303               	bcf	status, 6	;RP1=0, select bank0
  4094  05BE  00A0               	movwf	(?___awmod)
  4095  05BF  3000               	movlw	high(06h)
  4096  05C0  00A1               	movwf	((?___awmod))+1
  4097  05C1  1683               	bsf	status, 5	;RP0=1, select bank1
  4098  05C2  1303               	bcf	status, 6	;RP1=0, select bank1
  4099  05C3  083E               	movf	(_pos)^080h,w
  4100  05C4  3E01               	addlw	low(01h)
  4101  05C5  1283               	bcf	status, 5	;RP0=0, select bank0
  4102  05C6  1303               	bcf	status, 6	;RP1=0, select bank0
  4103  05C7  00A2               	movwf	0+(?___awmod)+02h
  4104  05C8  1683               	bsf	status, 5	;RP0=1, select bank1
  4105  05C9  1303               	bcf	status, 6	;RP1=0, select bank1
  4106  05CA  083F               	movf	(_pos+1)^080h,w
  4107  05CB  1803               	skipnc
  4108  05CC  3E01               	addlw	1
  4109  05CD  3E00               	addlw	high(01h)
  4110  05CE  1283               	bcf	status, 5	;RP0=0, select bank0
  4111  05CF  1303               	bcf	status, 6	;RP1=0, select bank0
  4112  05D0  00A3               	movwf	1+0+(?___awmod)+02h
  4113  05D1  120A  158A  22B3   	fcall	___awmod
              120A  118A         
  4114  05D6  1283               	bcf	status, 5	;RP0=0, select bank0
  4115  05D7  1303               	bcf	status, 6	;RP1=0, select bank0
  4116  05D8  0820               	movf	(0+(?___awmod)),w
  4117  05D9  3EDD               	addlw	_shortMenuStrings&0ffh
  4118  05DA  0084               	movwf	fsr0
  4119  05DB  1383               	bcf	status, 7	;select IRP bank1
  4120  05DC  0800               	movf	indf,w
  4121  05DD  00A7               	movwf	(?_lcd_write_string)
  4122  05DE  3080               	movlw	80h
  4123  05DF  00A8               	movwf	(?_lcd_write_string+1)
  4124  05E0  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4125                           	line	241
  4126                           ;HMI.c: 241: break;
  4127  05E5  2E69               	goto	l4572
  4128                           	line	242
  4129                           ;HMI.c: 242: case 1:
  4130                           	
  4131  05E6                     l4569:	
  4132                           	line	243
  4133                           	
  4134  05E6                     l11645:	
  4135                           ;HMI.c: 243: lcd_write_control(0b00000001);
  4136  05E6  3001               	movlw	(01h)
  4137  05E7  160A  118A  24AD   	fcall	_lcd_write_control
              120A  118A         
  4138                           	line	245
  4139                           ;HMI.c: 245: lcd_set_cursor(0x00);
  4140  05EC  3000               	movlw	(0)
  4141  05ED  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  4142                           	line	246
  4143                           	
  4144  05F2                     l11647:	
  4145                           ;HMI.c: 246: lcd_write_string("Zero Step_Motor");
  4146  05F2  301B               	movlw	low((STR_14-__stringbase))
  4147  05F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4148  05F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4149  05F5  00A7               	movwf	(?_lcd_write_string)
  4150  05F6  3080               	movlw	80h
  4151  05F7  00A8               	movwf	(?_lcd_write_string+1)
  4152  05F8  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4153                           	line	251
  4154                           	
  4155  05FD                     l11649:	
  4156                           ;HMI.c: 251: lcd_set_cursor(0x40);
  4157  05FD  3040               	movlw	(040h)
  4158  05FE  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  4159                           	line	253
  4160                           ;HMI.c: 253: lcd_write_string("<<<");
  4161  0603  3082               	movlw	low((STR_15-__stringbase))
  4162  0604  1283               	bcf	status, 5	;RP0=0, select bank0
  4163  0605  1303               	bcf	status, 6	;RP1=0, select bank0
  4164  0606  00A7               	movwf	(?_lcd_write_string)
  4165  0607  3080               	movlw	80h
  4166  0608  00A8               	movwf	(?_lcd_write_string+1)
  4167  0609  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4168                           	line	256
  4169                           	
  4170  060E                     l11651:	
  4171                           ;HMI.c: 256: lcd_set_cursor(0x44);
  4172  060E  3044               	movlw	(044h)
  4173  060F  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  4174                           	line	257
  4175                           	
  4176  0614                     l11653:	
  4177                           ;HMI.c: 257: lcd_write_string("CONFIRM");
  4178  0614  3076               	movlw	low((STR_16-__stringbase))
  4179  0615  1283               	bcf	status, 5	;RP0=0, select bank0
  4180  0616  1303               	bcf	status, 6	;RP1=0, select bank0
  4181  0617  00A7               	movwf	(?_lcd_write_string)
  4182  0618  3080               	movlw	80h
  4183  0619  00A8               	movwf	(?_lcd_write_string+1)
  4184  061A  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4185                           	line	258
  4186                           ;HMI.c: 258: lcd_set_cursor(0x4D);
  4187  061F  304D               	movlw	(04Dh)
  4188  0620  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  4189                           	line	259
  4190                           	
  4191  0625                     l11655:	
  4192                           ;HMI.c: 259: lcd_write_string(">>>");
  4193  0625  3086               	movlw	low((STR_17-__stringbase))
  4194  0626  1283               	bcf	status, 5	;RP0=0, select bank0
  4195  0627  1303               	bcf	status, 6	;RP1=0, select bank0
  4196  0628  00A7               	movwf	(?_lcd_write_string)
  4197  0629  3080               	movlw	80h
  4198  062A  00A8               	movwf	(?_lcd_write_string+1)
  4199  062B  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4200                           	line	260
  4201                           ;HMI.c: 260: break;
  4202  0630  2E69               	goto	l4572
  4203                           	line	261
  4204                           ;HMI.c: 261: case 2:
  4205                           	
  4206  0631                     l4570:	
  4207                           	line	262
  4208                           	
  4209  0631                     l11657:	
  4210                           ;HMI.c: 262: lcd_write_control(0b00000001);
  4211  0631  3001               	movlw	(01h)
  4212  0632  160A  118A  24AD   	fcall	_lcd_write_control
              120A  118A         
  4213                           	line	264
  4214                           ;HMI.c: 264: lcd_set_cursor(0x00);
  4215  0637  3000               	movlw	(0)
  4216  0638  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  4217                           	line	265
  4218                           	
  4219  063D                     l11659:	
  4220                           ;HMI.c: 265: lcd_write_string(" Charging Mode ");
  4221  063D  300B               	movlw	low((STR_18-__stringbase))
  4222  063E  1283               	bcf	status, 5	;RP0=0, select bank0
  4223  063F  1303               	bcf	status, 6	;RP1=0, select bank0
  4224  0640  00A7               	movwf	(?_lcd_write_string)
  4225  0641  3080               	movlw	80h
  4226  0642  00A8               	movwf	(?_lcd_write_string+1)
  4227  0643  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4228                           	line	269
  4229                           	
  4230  0648                     l11661:	
  4231                           ;HMI.c: 269: lcd_set_cursor(0x44);
  4232  0648  3044               	movlw	(044h)
  4233  0649  160A  118A  2468   	fcall	_lcd_set_cursor
              120A  118A         
  4234                           	line	270
  4235                           ;HMI.c: 270: lcd_write_string("  EXIT  ");
  4236  064E  3038               	movlw	low((STR_19-__stringbase))
  4237  064F  1283               	bcf	status, 5	;RP0=0, select bank0
  4238  0650  1303               	bcf	status, 6	;RP1=0, select bank0
  4239  0651  00A7               	movwf	(?_lcd_write_string)
  4240  0652  3080               	movlw	80h
  4241  0653  00A8               	movwf	(?_lcd_write_string+1)
  4242  0654  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4243                           	line	272
  4244                           ;HMI.c: 272: break;
  4245  0659  2E69               	goto	l4572
  4246                           	line	274
  4247                           ;HMI.c: 274: default:
  4248                           	
  4249  065A                     l4571:	
  4250                           	line	276
  4251                           ;HMI.c: 276: break;
  4252  065A  2E69               	goto	l4572
  4253                           	line	279
  4254                           	
  4255  065B                     l11663:	
  4256                           ;HMI.c: 279: }
  4257  065B  2E69               	goto	l4572
  4258                           	line	218
  4259                           	
  4260  065C                     l4564:	
  4261                           	
  4262  065C                     l11665:	
  4263  065C  1683               	bsf	status, 5	;RP0=1, select bank1
  4264  065D  1303               	bcf	status, 6	;RP1=0, select bank1
  4265  065E  084D               	movf	(_currentMenu)^080h,w	;volatile
  4266                           	; Switch size 1, requested type "space"
  4267                           ; Number of cases is 3, Range of values is 0 to 2
  4268                           ; switch strategies available:
  4269                           ; Name         Instructions Cycles
  4270                           ; simple_byte           10     6 (average)
  4271                           ; direct_byte           17     8 (fixed)
  4272                           ; jumptable            260     6 (fixed)
  4273                           ; rangetable             7     6 (fixed)
  4274                           ; spacedrange           12     9 (fixed)
  4275                           ; locatedrange           3     3 (fixed)
  4276                           ;	Chosen strategy is simple_byte
  4277                           
  4278                           	opt asmopt_off
  4279  065F  3A00               	xorlw	0^0	; case 0
  4280  0660  1903               	skipnz
  4281  0661  2D24               	goto	l11625
  4282  0662  3A01               	xorlw	1^0	; case 1
  4283  0663  1903               	skipnz
  4284  0664  2DE6               	goto	l11645
  4285  0665  3A03               	xorlw	2^1	; case 2
  4286  0666  1903               	skipnz
  4287  0667  2E31               	goto	l11657
  4288  0668  2E69               	goto	l4572
  4289                           	opt asmopt_on
  4290                           
  4291                           	line	279
  4292                           	
  4293  0669                     l4568:	
  4294                           	line	280
  4295                           	
  4296  0669                     l4572:	
  4297  0669  0008               	return
  4298                           	opt stack 0
  4299                           GLOBAL	__end_of_UpdateDisplay
  4300  066A                     	__end_of_UpdateDisplay:
  4301 ;; =============== function _UpdateDisplay ends ============
  4302                           
  4303                           	signat	_UpdateDisplay,88
  4304                           	global	_readAvgDistance
  4305                           psect	text1064,local,class=CODE,delta=2
  4306                           global __ptext1064
  4307  0B1B                     __ptext1064:
  4308                           
  4309 ;; *************** function _readAvgDistance *****************
  4310 ;; Defined at:
  4311 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  i               2   22[BANK0 ] int 
  4316 ;;  tempIR          2   20[BANK0 ] unsigned int 
  4317 ;;  j               2   18[BANK0 ] int 
  4318 ;;  fullval         2   16[BANK0 ] unsigned int 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;		None               void
  4321 ;; Registers used:
  4322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4328 ;;      Params:         0       0       0       0       0
  4329 ;;      Locals:         0       8       0       0       0
  4330 ;;      Temps:          0       0       0       0       0
  4331 ;;      Totals:         0       8       0       0       0
  4332 ;;Total ram usage:        8 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    6
  4335 ;; This function calls:
  4336 ;;		_readDistance
  4337 ;;		___lwdiv
  4338 ;;		_ADCconvert
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;;		_scan360
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           psect	text1064
  4345                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4346                           	line	10
  4347                           	global	__size_of_readAvgDistance
  4348  0076                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4349                           	
  4350  0B1B                     _readAvgDistance:	
  4351                           	opt	stack 0
  4352                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4353                           	line	11
  4354                           	
  4355  0B1B                     l11607:	
  4356                           ;infrared.c: 11: unsigned int fullval = 0, tempIR = 0;
  4357  0B1B  1283               	bcf	status, 5	;RP0=0, select bank0
  4358  0B1C  1303               	bcf	status, 6	;RP1=0, select bank0
  4359  0B1D  01B0               	clrf	(readAvgDistance@fullval)
  4360  0B1E  01B1               	clrf	(readAvgDistance@fullval+1)
  4361  0B1F  01B4               	clrf	(readAvgDistance@tempIR)
  4362  0B20  01B5               	clrf	(readAvgDistance@tempIR+1)
  4363                           	line	12
  4364                           ;infrared.c: 12: int j = 0;
  4365  0B21  01B2               	clrf	(readAvgDistance@j)
  4366  0B22  01B3               	clrf	(readAvgDistance@j+1)
  4367                           	line	14
  4368                           ;infrared.c: 14: for (int i = 0; i < 8; i++)
  4369  0B23  01B6               	clrf	(readAvgDistance@i)
  4370  0B24  01B7               	clrf	(readAvgDistance@i+1)
  4371                           	
  4372  0B25                     l11609:	
  4373  0B25  0837               	movf	(readAvgDistance@i+1),w
  4374  0B26  3A80               	xorlw	80h
  4375  0B27  00FF               	movwf	btemp+1
  4376  0B28  3080               	movlw	(high(08h))^80h
  4377  0B29  027F               	subwf	btemp+1,w
  4378  0B2A  1D03               	skipz
  4379  0B2B  2B2E               	goto	u5655
  4380  0B2C  3008               	movlw	low(08h)
  4381  0B2D  0236               	subwf	(readAvgDistance@i),w
  4382  0B2E                     u5655:
  4383                           
  4384  0B2E  1C03               	skipc
  4385  0B2F  2B31               	goto	u5651
  4386  0B30  2B32               	goto	u5650
  4387  0B31                     u5651:
  4388  0B31  2B34               	goto	l11613
  4389  0B32                     u5650:
  4390  0B32  2B6A               	goto	l11621
  4391                           	
  4392  0B33                     l11611:	
  4393  0B33  2B6A               	goto	l11621
  4394                           	line	15
  4395                           	
  4396  0B34                     l3003:	
  4397                           	line	16
  4398                           	
  4399  0B34                     l11613:	
  4400                           ;infrared.c: 15: {
  4401                           ;infrared.c: 16: tempIR = readDistance();
  4402  0B34  160A  118A  24D7   	fcall	_readDistance
              120A  158A         
  4403  0B39  1283               	bcf	status, 5	;RP0=0, select bank0
  4404  0B3A  1303               	bcf	status, 6	;RP1=0, select bank0
  4405  0B3B  0829               	movf	(1+(?_readDistance)),w
  4406  0B3C  01B5               	clrf	(readAvgDistance@tempIR+1)
  4407  0B3D  07B5               	addwf	(readAvgDistance@tempIR+1)
  4408  0B3E  0828               	movf	(0+(?_readDistance)),w
  4409  0B3F  01B4               	clrf	(readAvgDistance@tempIR)
  4410  0B40  07B4               	addwf	(readAvgDistance@tempIR)
  4411                           
  4412                           	line	17
  4413                           	
  4414  0B41                     l11615:	
  4415                           ;infrared.c: 17: if (tempIR <= 1000)
  4416  0B41  3003               	movlw	high(03E9h)
  4417  0B42  0235               	subwf	(readAvgDistance@tempIR+1),w
  4418  0B43  30E9               	movlw	low(03E9h)
  4419  0B44  1903               	skipnz
  4420  0B45  0234               	subwf	(readAvgDistance@tempIR),w
  4421  0B46  1803               	skipnc
  4422  0B47  2B49               	goto	u5661
  4423  0B48  2B4A               	goto	u5660
  4424  0B49                     u5661:
  4425  0B49  2B56               	goto	l3005
  4426  0B4A                     u5660:
  4427                           	line	19
  4428                           	
  4429  0B4A                     l11617:	
  4430                           ;infrared.c: 18: {
  4431                           ;infrared.c: 19: fullval += tempIR;
  4432  0B4A  0834               	movf	(readAvgDistance@tempIR),w
  4433  0B4B  07B0               	addwf	(readAvgDistance@fullval),f
  4434  0B4C  1803               	skipnc
  4435  0B4D  0AB1               	incf	(readAvgDistance@fullval+1),f
  4436  0B4E  0835               	movf	(readAvgDistance@tempIR+1),w
  4437  0B4F  07B1               	addwf	(readAvgDistance@fullval+1),f
  4438                           	line	20
  4439                           ;infrared.c: 20: j++;
  4440  0B50  3001               	movlw	low(01h)
  4441  0B51  07B2               	addwf	(readAvgDistance@j),f
  4442  0B52  1803               	skipnc
  4443  0B53  0AB3               	incf	(readAvgDistance@j+1),f
  4444  0B54  3000               	movlw	high(01h)
  4445  0B55  07B3               	addwf	(readAvgDistance@j+1),f
  4446                           	line	21
  4447                           	
  4448  0B56                     l3005:	
  4449                           	line	14
  4450  0B56  3001               	movlw	low(01h)
  4451  0B57  07B6               	addwf	(readAvgDistance@i),f
  4452  0B58  1803               	skipnc
  4453  0B59  0AB7               	incf	(readAvgDistance@i+1),f
  4454  0B5A  3000               	movlw	high(01h)
  4455  0B5B  07B7               	addwf	(readAvgDistance@i+1),f
  4456                           	
  4457  0B5C                     l11619:	
  4458  0B5C  0837               	movf	(readAvgDistance@i+1),w
  4459  0B5D  3A80               	xorlw	80h
  4460  0B5E  00FF               	movwf	btemp+1
  4461  0B5F  3080               	movlw	(high(08h))^80h
  4462  0B60  027F               	subwf	btemp+1,w
  4463  0B61  1D03               	skipz
  4464  0B62  2B65               	goto	u5675
  4465  0B63  3008               	movlw	low(08h)
  4466  0B64  0236               	subwf	(readAvgDistance@i),w
  4467  0B65                     u5675:
  4468                           
  4469  0B65  1C03               	skipc
  4470  0B66  2B68               	goto	u5671
  4471  0B67  2B69               	goto	u5670
  4472  0B68                     u5671:
  4473  0B68  2B34               	goto	l11613
  4474  0B69                     u5670:
  4475  0B69  2B6A               	goto	l11621
  4476                           	
  4477  0B6A                     l3004:	
  4478                           	line	23
  4479                           	
  4480  0B6A                     l11621:	
  4481                           ;infrared.c: 21: }
  4482                           ;infrared.c: 22: }
  4483                           ;infrared.c: 23: adcVal = fullval / j;
  4484  0B6A  1283               	bcf	status, 5	;RP0=0, select bank0
  4485  0B6B  1303               	bcf	status, 6	;RP1=0, select bank0
  4486  0B6C  0833               	movf	(readAvgDistance@j+1),w
  4487  0B6D  01A7               	clrf	(?___lwdiv+1)
  4488  0B6E  07A7               	addwf	(?___lwdiv+1)
  4489  0B6F  0832               	movf	(readAvgDistance@j),w
  4490  0B70  01A6               	clrf	(?___lwdiv)
  4491  0B71  07A6               	addwf	(?___lwdiv)
  4492                           
  4493  0B72  0831               	movf	(readAvgDistance@fullval+1),w
  4494  0B73  01A9               	clrf	1+(?___lwdiv)+02h
  4495  0B74  07A9               	addwf	1+(?___lwdiv)+02h
  4496  0B75  0830               	movf	(readAvgDistance@fullval),w
  4497  0B76  01A8               	clrf	0+(?___lwdiv)+02h
  4498  0B77  07A8               	addwf	0+(?___lwdiv)+02h
  4499                           
  4500  0B78  120A  158A  2162   	fcall	___lwdiv
              120A  158A         
  4501  0B7D  1283               	bcf	status, 5	;RP0=0, select bank0
  4502  0B7E  1303               	bcf	status, 6	;RP1=0, select bank0
  4503  0B7F  0827               	movf	(1+(?___lwdiv)),w
  4504  0B80  1683               	bsf	status, 5	;RP0=1, select bank1
  4505  0B81  1303               	bcf	status, 6	;RP1=0, select bank1
  4506  0B82  01B7               	clrf	(_adcVal+1)^080h	;volatile
  4507  0B83  07B7               	addwf	(_adcVal+1)^080h	;volatile
  4508  0B84  1283               	bcf	status, 5	;RP0=0, select bank0
  4509  0B85  1303               	bcf	status, 6	;RP1=0, select bank0
  4510  0B86  0826               	movf	(0+(?___lwdiv)),w
  4511  0B87  1683               	bsf	status, 5	;RP0=1, select bank1
  4512  0B88  1303               	bcf	status, 6	;RP1=0, select bank1
  4513  0B89  01B6               	clrf	(_adcVal)^080h	;volatile
  4514  0B8A  07B6               	addwf	(_adcVal)^080h	;volatile
  4515                           
  4516                           	line	24
  4517                           ;infrared.c: 24: ADCconvert();
  4518  0B8B  120A  118A  22A8   	fcall	_ADCconvert
              120A  158A         
  4519                           	line	25
  4520                           	
  4521  0B90                     l3006:	
  4522  0B90  0008               	return
  4523                           	opt stack 0
  4524                           GLOBAL	__end_of_readAvgDistance
  4525  0B91                     	__end_of_readAvgDistance:
  4526 ;; =============== function _readAvgDistance ends ============
  4527                           
  4528                           	signat	_readAvgDistance,88
  4529                           	global	_init
  4530                           psect	text1065,local,class=CODE,delta=2
  4531                           global __ptext1065
  4532  16A7                     __ptext1065:
  4533                           
  4534 ;; *************** function _init *****************
  4535 ;; Defined at:
  4536 ;;		line 136 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;		None               void
  4543 ;; Registers used:
  4544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4550 ;;      Params:         0       0       0       0       0
  4551 ;;      Locals:         0       0       0       0       0
  4552 ;;      Temps:          0       1       0       0       0
  4553 ;;      Totals:         0       1       0       0       0
  4554 ;;Total ram usage:        1 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    5
  4557 ;; This function calls:
  4558 ;;		_ser_init
  4559 ;;		_init_adc
  4560 ;;		_lcd_init
  4561 ;;		_robo_init
  4562 ;; This function is called by:
  4563 ;;		_main
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           psect	text1065
  4567                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4568                           	line	136
  4569                           	global	__size_of_init
  4570  002F                     	__size_of_init	equ	__end_of_init-_init
  4571                           	
  4572  16A7                     _init:	
  4573                           	opt	stack 2
  4574                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4575                           	line	137
  4576                           	
  4577  16A7                     l11581:	
  4578                           ;Main.c: 137: buttonPressed = 0;
  4579  16A7  01FD               	clrf	(_buttonPressed)	;volatile
  4580                           	line	140
  4581                           	
  4582  16A8                     l11583:	
  4583                           ;Main.c: 140: TRISB = 0b11111100;
  4584  16A8  30FC               	movlw	(0FCh)
  4585  16A9  1683               	bsf	status, 5	;RP0=1, select bank1
  4586  16AA  1303               	bcf	status, 6	;RP1=0, select bank1
  4587  16AB  0086               	movwf	(134)^080h	;volatile
  4588                           	line	141
  4589                           	
  4590  16AC                     l11585:	
  4591                           ;Main.c: 141: TRISC &= 0b10010000;
  4592  16AC  3090               	movlw	(090h)
  4593  16AD  1283               	bcf	status, 5	;RP0=0, select bank0
  4594  16AE  1303               	bcf	status, 6	;RP1=0, select bank0
  4595  16AF  00A3               	movwf	(??_init+0)+0
  4596  16B0  0823               	movf	(??_init+0)+0,w
  4597  16B1  1683               	bsf	status, 5	;RP0=1, select bank1
  4598  16B2  1303               	bcf	status, 6	;RP1=0, select bank1
  4599  16B3  0587               	andwf	(135)^080h,f	;volatile
  4600                           	line	144
  4601                           	
  4602  16B4                     l11587:	
  4603                           ;Main.c: 144: SSPSTAT = 0b01000000;
  4604  16B4  3040               	movlw	(040h)
  4605  16B5  0094               	movwf	(148)^080h	;volatile
  4606                           	line	145
  4607                           	
  4608  16B6                     l11589:	
  4609                           ;Main.c: 145: SSPCON = 0b10100001;
  4610  16B6  30A1               	movlw	(0A1h)
  4611  16B7  1283               	bcf	status, 5	;RP0=0, select bank0
  4612  16B8  1303               	bcf	status, 6	;RP1=0, select bank0
  4613  16B9  0094               	movwf	(20)	;volatile
  4614                           	line	148
  4615                           	
  4616  16BA                     l11591:	
  4617                           ;Main.c: 148: OPTION_REG = 0b00000100;
  4618  16BA  3004               	movlw	(04h)
  4619  16BB  1683               	bsf	status, 5	;RP0=1, select bank1
  4620  16BC  1303               	bcf	status, 6	;RP1=0, select bank1
  4621  16BD  0081               	movwf	(129)^080h	;volatile
  4622                           	line	151
  4623                           	
  4624  16BE                     l11593:	
  4625                           ;Main.c: 151: ser_init();
  4626  16BE  160A  118A  2548   	fcall	_ser_init
              160A  118A         
  4627                           	line	152
  4628                           	
  4629  16C3                     l11595:	
  4630                           ;Main.c: 152: init_adc();
  4631  16C3  160A  118A  24C1   	fcall	_init_adc
              160A  118A         
  4632                           	line	153
  4633                           	
  4634  16C8                     l11597:	
  4635                           ;Main.c: 153: lcd_init();
  4636  16C8  160A  118A  2572   	fcall	_lcd_init
              160A  118A         
  4637                           	line	154
  4638                           	
  4639  16CD                     l11599:	
  4640                           ;Main.c: 154: robo_init();
  4641  16CD  160A  118A  2506   	fcall	_robo_init
              160A  118A         
  4642                           	line	158
  4643                           	
  4644  16D2                     l11601:	
  4645                           ;Main.c: 158: TMR0IE = 1;
  4646  16D2  168B               	bsf	(93/8),(93)&7
  4647                           	line	160
  4648                           	
  4649  16D3                     l11603:	
  4650                           ;Main.c: 160: PEIE=1;
  4651  16D3  170B               	bsf	(94/8),(94)&7
  4652                           	line	162
  4653                           	
  4654  16D4                     l11605:	
  4655                           ;Main.c: 162: (GIE = 1);
  4656  16D4  178B               	bsf	(95/8),(95)&7
  4657                           	line	163
  4658                           	
  4659  16D5                     l2217:	
  4660  16D5  0008               	return
  4661                           	opt stack 0
  4662                           GLOBAL	__end_of_init
  4663  16D6                     	__end_of_init:
  4664 ;; =============== function _init ends ============
  4665                           
  4666                           	signat	_init,88
  4667                           	global	_readDistance
  4668                           psect	text1066,local,class=CODE,delta=2
  4669                           global __ptext1066
  4670  14D7                     __ptext1066:
  4671                           
  4672 ;; *************** function _readDistance *****************
  4673 ;; Defined at:
  4674 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  readVal         2   12[BANK0 ] unsigned int 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  2    8[BANK0 ] unsigned int 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       2       0       0       0
  4689 ;;      Locals:         0       2       0       0       0
  4690 ;;      Temps:          0       2       0       0       0
  4691 ;;      Totals:         0       6       0       0       0
  4692 ;;Total ram usage:        6 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    5
  4695 ;; This function calls:
  4696 ;;		_adc_read_channel
  4697 ;; This function is called by:
  4698 ;;		_readAvgDistance
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           psect	text1066
  4702                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4703                           	line	28
  4704                           	global	__size_of_readDistance
  4705  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  4706                           	
  4707  14D7                     _readDistance:	
  4708                           	opt	stack 0
  4709                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4710                           	line	31
  4711                           	
  4712  14D7                     l11575:	
  4713                           ;infrared.c: 29: unsigned int readVal ;
  4714                           ;infrared.c: 31: readVal = adc_read_channel(0);
  4715  14D7  3000               	movlw	(0)
  4716  14D8  160A  118A  273B   	fcall	_adc_read_channel
              160A  118A         
  4717  14DD  1283               	bcf	status, 5	;RP0=0, select bank0
  4718  14DE  1303               	bcf	status, 6	;RP1=0, select bank0
  4719  14DF  00AA               	movwf	(??_readDistance+0)+0
  4720  14E0  01AB               	clrf	(??_readDistance+0)+0+1
  4721  14E1  082A               	movf	0+(??_readDistance+0)+0,w
  4722  14E2  00AC               	movwf	(readDistance@readVal)
  4723  14E3  082B               	movf	1+(??_readDistance+0)+0,w
  4724  14E4  00AD               	movwf	(readDistance@readVal+1)
  4725                           	line	33
  4726                           	
  4727  14E5                     l11577:	
  4728                           ;infrared.c: 33: return readVal;
  4729  14E5  082D               	movf	(readDistance@readVal+1),w
  4730  14E6  01A9               	clrf	(?_readDistance+1)
  4731  14E7  07A9               	addwf	(?_readDistance+1)
  4732  14E8  082C               	movf	(readDistance@readVal),w
  4733  14E9  01A8               	clrf	(?_readDistance)
  4734  14EA  07A8               	addwf	(?_readDistance)
  4735                           
  4736  14EB  2CEC               	goto	l3009
  4737                           	
  4738  14EC                     l11579:	
  4739                           	line	34
  4740                           	
  4741  14EC                     l3009:	
  4742  14EC  0008               	return
  4743                           	opt stack 0
  4744                           GLOBAL	__end_of_readDistance
  4745  14ED                     	__end_of_readDistance:
  4746 ;; =============== function _readDistance ends ============
  4747                           
  4748                           	signat	_readDistance,90
  4749                           	global	_robot_read
  4750                           psect	text1067,local,class=CODE,delta=2
  4751                           global __ptext1067
  4752  0A02                     __ptext1067:
  4753                           
  4754 ;; *************** function _robot_read *****************
  4755 ;; Defined at:
  4756 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;		None               void
  4763 ;; Registers used:
  4764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4770 ;;      Params:         0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0
  4772 ;;      Temps:          0       2       0       0       0
  4773 ;;      Totals:         0       2       0       0       0
  4774 ;;Total ram usage:        2 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    5
  4777 ;; This function calls:
  4778 ;;		_ser_putch
  4779 ;;		_ser_getch
  4780 ;; This function is called by:
  4781 ;;		_main
  4782 ;;		_robotMoveSpeed
  4783 ;;		_robotMove
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           psect	text1067
  4787                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4788                           	line	18
  4789                           	global	__size_of_robot_read
  4790  0053                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  4791                           	
  4792  0A02                     _robot_read:	
  4793                           	opt	stack 1
  4794                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4795                           	line	23
  4796                           	
  4797  0A02                     l11561:	
  4798                           ;robot.c: 23: ser_putch (142);
  4799  0A02  308E               	movlw	(08Eh)
  4800  0A03  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  4801                           	line	24
  4802                           ;robot.c: 24: ser_putch (7);
  4803  0A08  3007               	movlw	(07h)
  4804  0A09  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  4805                           	line	25
  4806                           	
  4807  0A0E                     l11563:	
  4808                           ;robot.c: 25: _delay((unsigned long)((5)*(20000000/4000.0)));
  4809                           	opt asmopt_off
  4810  0A0E  3021               movlw	33
  4811  0A0F  1283               	bcf	status, 5	;RP0=0, select bank0
  4812  0A10  1303               	bcf	status, 6	;RP1=0, select bank0
  4813  0A11  00A3               movwf	((??_robot_read+0)+0+1),f
  4814  0A12  3076               	movlw	118
  4815  0A13  00A2               movwf	((??_robot_read+0)+0),f
  4816  0A14                     u5987:
  4817  0A14  0BA2               	decfsz	((??_robot_read+0)+0),f
  4818  0A15  2A14               	goto	u5987
  4819  0A16  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4820  0A17  2A14               	goto	u5987
  4821  0A18  0064               	clrwdt
  4822                           opt asmopt_on
  4823                           
  4824                           	line	26
  4825                           	
  4826  0A19                     l11565:	
  4827                           ;robot.c: 26: BumpSensors = ser_getch();
  4828  0A19  160A  118A  25C9   	fcall	_ser_getch
              120A  158A         
  4829  0A1E  1283               	bcf	status, 5	;RP0=0, select bank0
  4830  0A1F  1303               	bcf	status, 6	;RP1=0, select bank0
  4831  0A20  00A2               	movwf	(??_robot_read+0)+0
  4832  0A21  0822               	movf	(??_robot_read+0)+0,w
  4833  0A22  1683               	bsf	status, 5	;RP0=1, select bank1
  4834  0A23  1303               	bcf	status, 6	;RP1=0, select bank1
  4835  0A24  00C4               	movwf	(_BumpSensors)^080h	;volatile
  4836                           	line	27
  4837                           	
  4838  0A25                     l11567:	
  4839                           ;robot.c: 27: ser_putch (142);
  4840  0A25  308E               	movlw	(08Eh)
  4841  0A26  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  4842                           	line	28
  4843                           	
  4844  0A2B                     l11569:	
  4845                           ;robot.c: 28: ser_putch (19);
  4846  0A2B  3013               	movlw	(013h)
  4847  0A2C  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  4848                           	line	29
  4849                           ;robot.c: 29: _delay((unsigned long)((5)*(20000000/4000.0)));
  4850                           	opt asmopt_off
  4851  0A31  3021               movlw	33
  4852  0A32  1283               	bcf	status, 5	;RP0=0, select bank0
  4853  0A33  1303               	bcf	status, 6	;RP1=0, select bank0
  4854  0A34  00A3               movwf	((??_robot_read+0)+0+1),f
  4855  0A35  3076               	movlw	118
  4856  0A36  00A2               movwf	((??_robot_read+0)+0),f
  4857  0A37                     u5997:
  4858  0A37  0BA2               	decfsz	((??_robot_read+0)+0),f
  4859  0A38  2A37               	goto	u5997
  4860  0A39  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4861  0A3A  2A37               	goto	u5997
  4862  0A3B  0064               	clrwdt
  4863                           opt asmopt_on
  4864                           
  4865                           	line	30
  4866                           	
  4867  0A3C                     l11571:	
  4868                           ;robot.c: 30: DistHighByte = ser_getch();
  4869  0A3C  160A  118A  25C9   	fcall	_ser_getch
              120A  158A         
  4870  0A41  1283               	bcf	status, 5	;RP0=0, select bank0
  4871  0A42  1303               	bcf	status, 6	;RP1=0, select bank0
  4872  0A43  00A2               	movwf	(??_robot_read+0)+0
  4873  0A44  0822               	movf	(??_robot_read+0)+0,w
  4874  0A45  1683               	bsf	status, 5	;RP0=1, select bank1
  4875  0A46  1303               	bcf	status, 6	;RP1=0, select bank1
  4876  0A47  00C6               	movwf	(_DistHighByte)^080h	;volatile
  4877                           	line	31
  4878                           	
  4879  0A48                     l11573:	
  4880                           ;robot.c: 31: DistLowByte = ser_getch();
  4881  0A48  160A  118A  25C9   	fcall	_ser_getch
              120A  158A         
  4882  0A4D  1283               	bcf	status, 5	;RP0=0, select bank0
  4883  0A4E  1303               	bcf	status, 6	;RP1=0, select bank0
  4884  0A4F  00A2               	movwf	(??_robot_read+0)+0
  4885  0A50  0822               	movf	(??_robot_read+0)+0,w
  4886  0A51  1683               	bsf	status, 5	;RP0=1, select bank1
  4887  0A52  1303               	bcf	status, 6	;RP1=0, select bank1
  4888  0A53  00C7               	movwf	(_DistLowByte)^080h	;volatile
  4889                           	line	33
  4890                           	
  4891  0A54                     l6037:	
  4892  0A54  0008               	return
  4893                           	opt stack 0
  4894                           GLOBAL	__end_of_robot_read
  4895  0A55                     	__end_of_robot_read:
  4896 ;; =============== function _robot_read ends ============
  4897                           
  4898                           	signat	_robot_read,88
  4899                           	global	_lcd_init
  4900                           psect	text1068,local,class=CODE,delta=2
  4901                           global __ptext1068
  4902  1572                     __ptext1068:
  4903                           
  4904 ;; *************** function _lcd_init *****************
  4905 ;; Defined at:
  4906 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;		None               void
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0, pclath, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4920 ;;      Params:         0       0       0       0       0
  4921 ;;      Locals:         0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0
  4923 ;;      Totals:         0       0       0       0       0
  4924 ;;Total ram usage:        0 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    4
  4927 ;; This function calls:
  4928 ;;		_lcd_write_control
  4929 ;; This function is called by:
  4930 ;;		_init
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           psect	text1068
  4934                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4935                           	line	101
  4936                           	global	__size_of_lcd_init
  4937  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4938                           	
  4939  1572                     _lcd_init:	
  4940                           	opt	stack 2
  4941                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4942                           	line	105
  4943                           	
  4944  1572                     l11541:	
  4945                           ;lcd.c: 105: ADCON1 = 0b00000010;
  4946  1572  3002               	movlw	(02h)
  4947  1573  1683               	bsf	status, 5	;RP0=1, select bank1
  4948  1574  1303               	bcf	status, 6	;RP1=0, select bank1
  4949  1575  009F               	movwf	(159)^080h	;volatile
  4950                           	line	108
  4951                           	
  4952  1576                     l11543:	
  4953                           ;lcd.c: 108: PORTD = 0;
  4954  1576  1283               	bcf	status, 5	;RP0=0, select bank0
  4955  1577  1303               	bcf	status, 6	;RP1=0, select bank0
  4956  1578  0188               	clrf	(8)	;volatile
  4957                           	line	109
  4958                           	
  4959  1579                     l11545:	
  4960                           ;lcd.c: 109: PORTE = 0;
  4961  1579  0189               	clrf	(9)	;volatile
  4962                           	line	111
  4963                           	
  4964  157A                     l11547:	
  4965                           ;lcd.c: 111: TRISD = 0b00000000;
  4966  157A  1683               	bsf	status, 5	;RP0=1, select bank1
  4967  157B  1303               	bcf	status, 6	;RP1=0, select bank1
  4968  157C  0188               	clrf	(136)^080h	;volatile
  4969                           	line	112
  4970                           	
  4971  157D                     l11549:	
  4972                           ;lcd.c: 112: TRISE = 0b00000000;
  4973  157D  0189               	clrf	(137)^080h	;volatile
  4974                           	line	115
  4975                           	
  4976  157E                     l11551:	
  4977                           ;lcd.c: 115: lcd_write_control(0b00000001);
  4978  157E  3001               	movlw	(01h)
  4979  157F  160A  118A  24AD   	fcall	_lcd_write_control
              160A  118A         
  4980                           	line	116
  4981                           	
  4982  1584                     l11553:	
  4983                           ;lcd.c: 116: lcd_write_control(0b00111000);
  4984  1584  3038               	movlw	(038h)
  4985  1585  160A  118A  24AD   	fcall	_lcd_write_control
              160A  118A         
  4986                           	line	117
  4987                           	
  4988  158A                     l11555:	
  4989                           ;lcd.c: 117: lcd_write_control(0b00001100);
  4990  158A  300C               	movlw	(0Ch)
  4991  158B  160A  118A  24AD   	fcall	_lcd_write_control
              160A  118A         
  4992                           	line	118
  4993                           	
  4994  1590                     l11557:	
  4995                           ;lcd.c: 118: lcd_write_control(0b00000110);
  4996  1590  3006               	movlw	(06h)
  4997  1591  160A  118A  24AD   	fcall	_lcd_write_control
              160A  118A         
  4998                           	line	119
  4999                           	
  5000  1596                     l11559:	
  5001                           ;lcd.c: 119: lcd_write_control(0b00000010);
  5002  1596  3002               	movlw	(02h)
  5003  1597  160A  118A  24AD   	fcall	_lcd_write_control
              160A  118A         
  5004                           	line	121
  5005                           	
  5006  159C                     l1429:	
  5007  159C  0008               	return
  5008                           	opt stack 0
  5009                           GLOBAL	__end_of_lcd_init
  5010  159D                     	__end_of_lcd_init:
  5011 ;; =============== function _lcd_init ends ============
  5012                           
  5013                           	signat	_lcd_init,88
  5014                           	global	_lcd_write_string
  5015                           psect	text1069,local,class=CODE,delta=2
  5016                           global __ptext1069
  5017  1621                     __ptext1069:
  5018                           
  5019 ;; *************** function _lcd_write_string *****************
  5020 ;; Defined at:
  5021 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  s               2    7[BANK0 ] PTR unsigned char 
  5024 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  5025 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@adcOutput(16), STR_12(4), 
  5026 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  5027 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  5028 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;		None               void
  5033 ;; Registers used:
  5034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5040 ;;      Params:         0       2       0       0       0
  5041 ;;      Locals:         0       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0
  5043 ;;      Totals:         0       2       0       0       0
  5044 ;;Total ram usage:        2 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:    4
  5047 ;; This function calls:
  5048 ;;		_lcd_write_data
  5049 ;; This function is called by:
  5050 ;;		_UpdateDisplay
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           psect	text1069
  5054                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5055                           	line	48
  5056                           	global	__size_of_lcd_write_string
  5057  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5058                           	
  5059  1621                     _lcd_write_string:	
  5060                           	opt	stack 1
  5061                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5062                           	line	50
  5063                           	
  5064  1621                     l11533:	
  5065                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5066  1621  2E3B               	goto	l11539
  5067                           	
  5068  1622                     l1409:	
  5069                           	
  5070  1622                     l11535:	
  5071  1622  1283               	bcf	status, 5	;RP0=0, select bank0
  5072  1623  1303               	bcf	status, 6	;RP1=0, select bank0
  5073  1624  0828               	movf	(lcd_write_string@s+1),w
  5074  1625  00FF               	movwf	btemp+1
  5075  1626  0827               	movf	(lcd_write_string@s),w
  5076  1627  0084               	movwf	fsr0
  5077  1628  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5078  162D  160A  118A  2473   	fcall	_lcd_write_data
              160A  118A         
  5079                           	
  5080  1632                     l11537:	
  5081  1632  3001               	movlw	low(01h)
  5082  1633  1283               	bcf	status, 5	;RP0=0, select bank0
  5083  1634  1303               	bcf	status, 6	;RP1=0, select bank0
  5084  1635  07A7               	addwf	(lcd_write_string@s),f
  5085  1636  1803               	skipnc
  5086  1637  0AA8               	incf	(lcd_write_string@s+1),f
  5087  1638  3000               	movlw	high(01h)
  5088  1639  07A8               	addwf	(lcd_write_string@s+1),f
  5089  163A  2E3B               	goto	l11539
  5090                           	
  5091  163B                     l1408:	
  5092                           	
  5093  163B                     l11539:	
  5094  163B  1283               	bcf	status, 5	;RP0=0, select bank0
  5095  163C  1303               	bcf	status, 6	;RP1=0, select bank0
  5096  163D  0828               	movf	(lcd_write_string@s+1),w
  5097  163E  00FF               	movwf	btemp+1
  5098  163F  0827               	movf	(lcd_write_string@s),w
  5099  1640  0084               	movwf	fsr0
  5100  1641  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5101  1646  3800               	iorlw	0
  5102  1647  1D03               	skipz
  5103  1648  2E4A               	goto	u5641
  5104  1649  2E4B               	goto	u5640
  5105  164A                     u5641:
  5106  164A  2E22               	goto	l11535
  5107  164B                     u5640:
  5108  164B  2E4C               	goto	l1411
  5109                           	
  5110  164C                     l1410:	
  5111                           	line	51
  5112                           	
  5113  164C                     l1411:	
  5114  164C  0008               	return
  5115                           	opt stack 0
  5116                           GLOBAL	__end_of_lcd_write_string
  5117  164D                     	__end_of_lcd_write_string:
  5118 ;; =============== function _lcd_write_string ends ============
  5119                           
  5120                           	signat	_lcd_write_string,4216
  5121                           	global	_lcd_set_cursor
  5122                           psect	text1070,local,class=CODE,delta=2
  5123                           global __ptext1070
  5124  1468                     __ptext1070:
  5125                           
  5126 ;; *************** function _lcd_set_cursor *****************
  5127 ;; Defined at:
  5128 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  address         1    wreg     unsigned char 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  address         1    3[BANK0 ] unsigned char 
  5133 ;; Return value:  Size  Location     Type
  5134 ;;		None               void
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0, pclath, cstack
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5142 ;;      Params:         0       0       0       0       0
  5143 ;;      Locals:         0       1       0       0       0
  5144 ;;      Temps:          0       0       0       0       0
  5145 ;;      Totals:         0       1       0       0       0
  5146 ;;Total ram usage:        1 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; Hardware stack levels required when called:    4
  5149 ;; This function calls:
  5150 ;;		_lcd_write_control
  5151 ;; This function is called by:
  5152 ;;		_UpdateDisplay
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           psect	text1070
  5156                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5157                           	line	42
  5158                           	global	__size_of_lcd_set_cursor
  5159  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5160                           	
  5161  1468                     _lcd_set_cursor:	
  5162                           	opt	stack 1
  5163                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5164                           ;lcd_set_cursor@address stored from wreg
  5165  1468  1283               	bcf	status, 5	;RP0=0, select bank0
  5166  1469  1303               	bcf	status, 6	;RP1=0, select bank0
  5167  146A  00A3               	movwf	(lcd_set_cursor@address)
  5168                           	line	43
  5169                           	
  5170  146B                     l11529:	
  5171                           ;lcd.c: 43: address |= 0b10000000;
  5172  146B  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5173                           	line	44
  5174                           	
  5175  146C                     l11531:	
  5176                           ;lcd.c: 44: lcd_write_control(address);
  5177  146C  0823               	movf	(lcd_set_cursor@address),w
  5178  146D  160A  118A  24AD   	fcall	_lcd_write_control
              160A  118A         
  5179                           	line	45
  5180                           	
  5181  1472                     l1405:	
  5182  1472  0008               	return
  5183                           	opt stack 0
  5184                           GLOBAL	__end_of_lcd_set_cursor
  5185  1473                     	__end_of_lcd_set_cursor:
  5186 ;; =============== function _lcd_set_cursor ends ============
  5187                           
  5188                           	signat	_lcd_set_cursor,4216
  5189                           	global	___awtoft
  5190                           psect	text1071,local,class=CODE,delta=2
  5191                           global __ptext1071
  5192  15F5                     __ptext1071:
  5193                           
  5194 ;; *************** function ___awtoft *****************
  5195 ;; Defined at:
  5196 ;;		line 33 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  c               2   22[BANK0 ] int 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  sign            1   27[BANK0 ] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  3   22[BANK0 ] float 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, pclath, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5210 ;;      Params:         0       3       0       0       0
  5211 ;;      Locals:         0       1       0       0       0
  5212 ;;      Temps:          0       2       0       0       0
  5213 ;;      Totals:         0       6       0       0       0
  5214 ;;Total ram usage:        6 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    4
  5217 ;; This function calls:
  5218 ;;		___ftpack
  5219 ;; This function is called by:
  5220 ;;		_main
  5221 ;;		_FollowWall
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           psect	text1071
  5225                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5226                           	line	33
  5227                           	global	__size_of___awtoft
  5228  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  5229                           	
  5230  15F5                     ___awtoft:	
  5231                           	opt	stack 3
  5232                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5233                           	line	36
  5234                           	
  5235  15F5                     l11521:	
  5236  15F5  1283               	bcf	status, 5	;RP0=0, select bank0
  5237  15F6  1303               	bcf	status, 6	;RP1=0, select bank0
  5238  15F7  01BB               	clrf	(___awtoft@sign)
  5239                           	line	37
  5240  15F8  1FB7               	btfss	(___awtoft@c+1),7
  5241  15F9  2DFB               	goto	u5631
  5242  15FA  2DFC               	goto	u5630
  5243  15FB                     u5631:
  5244  15FB  2E05               	goto	l11525
  5245  15FC                     u5630:
  5246                           	line	38
  5247                           	
  5248  15FC                     l11523:	
  5249  15FC  09B6               	comf	(___awtoft@c),f
  5250  15FD  09B7               	comf	(___awtoft@c+1),f
  5251  15FE  0AB6               	incf	(___awtoft@c),f
  5252  15FF  1903               	skipnz
  5253  1600  0AB7               	incf	(___awtoft@c+1),f
  5254                           	line	39
  5255  1601  01BB               	clrf	(___awtoft@sign)
  5256  1602  1403               	bsf	status,0
  5257  1603  0DBB               	rlf	(___awtoft@sign),f
  5258  1604  2E05               	goto	l11525
  5259                           	line	40
  5260                           	
  5261  1605                     l7645:	
  5262                           	line	41
  5263                           	
  5264  1605                     l11525:	
  5265  1605  0836               	movf	(___awtoft@c),w
  5266  1606  00A0               	movwf	(?___ftpack)
  5267  1607  0837               	movf	(___awtoft@c+1),w
  5268  1608  00A1               	movwf	(?___ftpack+1)
  5269  1609  01A2               	clrf	(?___ftpack+2)
  5270  160A  308E               	movlw	(08Eh)
  5271  160B  00B9               	movwf	(??___awtoft+0)+0
  5272  160C  0839               	movf	(??___awtoft+0)+0,w
  5273  160D  00A3               	movwf	0+(?___ftpack)+03h
  5274  160E  083B               	movf	(___awtoft@sign),w
  5275  160F  00BA               	movwf	(??___awtoft+1)+0
  5276  1610  083A               	movf	(??___awtoft+1)+0,w
  5277  1611  00A4               	movwf	0+(?___ftpack)+04h
  5278  1612  120A  158A  240B   	fcall	___ftpack
              160A  118A         
  5279  1617  1283               	bcf	status, 5	;RP0=0, select bank0
  5280  1618  1303               	bcf	status, 6	;RP1=0, select bank0
  5281  1619  0820               	movf	(0+(?___ftpack)),w
  5282  161A  00B6               	movwf	(?___awtoft)
  5283  161B  0821               	movf	(1+(?___ftpack)),w
  5284  161C  00B7               	movwf	(?___awtoft+1)
  5285  161D  0822               	movf	(2+(?___ftpack)),w
  5286  161E  00B8               	movwf	(?___awtoft+2)
  5287  161F  2E20               	goto	l7646
  5288                           	
  5289  1620                     l11527:	
  5290                           	line	42
  5291                           	
  5292  1620                     l7646:	
  5293  1620  0008               	return
  5294                           	opt stack 0
  5295                           GLOBAL	__end_of___awtoft
  5296  1621                     	__end_of___awtoft:
  5297 ;; =============== function ___awtoft ends ============
  5298                           
  5299                           	signat	___awtoft,4219
  5300                           	global	___ftmul
  5301                           psect	text1072,local,class=CODE,delta=2
  5302                           global __ptext1072
  5303  0F12                     __ptext1072:
  5304                           
  5305 ;; *************** function ___ftmul *****************
  5306 ;; Defined at:
  5307 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  f1              3   28[BANK0 ] float 
  5310 ;;  f2              3   31[BANK0 ] float 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  5313 ;;  sign            1   43[BANK0 ] unsigned char 
  5314 ;;  cntr            1   42[BANK0 ] unsigned char 
  5315 ;;  exp             1   38[BANK0 ] unsigned char 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  3   28[BANK0 ] float 
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0, pclath, cstack
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5325 ;;      Params:         0       6       0       0       0
  5326 ;;      Locals:         0       6       0       0       0
  5327 ;;      Temps:          0       4       0       0       0
  5328 ;;      Totals:         0      16       0       0       0
  5329 ;;Total ram usage:       16 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    4
  5332 ;; This function calls:
  5333 ;;		___ftpack
  5334 ;; This function is called by:
  5335 ;;		_main
  5336 ;;		_FollowWall
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           psect	text1072
  5340                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5341                           	line	52
  5342                           	global	__size_of___ftmul
  5343  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5344                           	
  5345  0F12                     ___ftmul:	
  5346                           	opt	stack 3
  5347                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5348                           	line	56
  5349                           	
  5350  0F12                     l11471:	
  5351  0F12  1283               	bcf	status, 5	;RP0=0, select bank0
  5352  0F13  1303               	bcf	status, 6	;RP1=0, select bank0
  5353  0F14  083C               	movf	(___ftmul@f1),w
  5354  0F15  00C2               	movwf	((??___ftmul+0)+0)
  5355  0F16  083D               	movf	(___ftmul@f1+1),w
  5356  0F17  00C3               	movwf	((??___ftmul+0)+0+1)
  5357  0F18  083E               	movf	(___ftmul@f1+2),w
  5358  0F19  00C4               	movwf	((??___ftmul+0)+0+2)
  5359  0F1A  1003               	clrc
  5360  0F1B  0D43               	rlf	(??___ftmul+0)+1,w
  5361  0F1C  0D44               	rlf	(??___ftmul+0)+2,w
  5362  0F1D  00C5               	movwf	(??___ftmul+3)+0
  5363  0F1E  0845               	movf	(??___ftmul+3)+0,w
  5364  0F1F  00C6               	movwf	(___ftmul@exp)
  5365  0F20  08C6               	movf	((___ftmul@exp)),f
  5366  0F21  1D03               	skipz
  5367  0F22  2F24               	goto	u5491
  5368  0F23  2F25               	goto	u5490
  5369  0F24                     u5491:
  5370  0F24  2F2D               	goto	l11477
  5371  0F25                     u5490:
  5372                           	line	57
  5373                           	
  5374  0F25                     l11473:	
  5375  0F25  3000               	movlw	0x0
  5376  0F26  00BC               	movwf	(?___ftmul)
  5377  0F27  3000               	movlw	0x0
  5378  0F28  00BD               	movwf	(?___ftmul+1)
  5379  0F29  3000               	movlw	0x0
  5380  0F2A  00BE               	movwf	(?___ftmul+2)
  5381  0F2B  2FFF               	goto	l7608
  5382                           	
  5383  0F2C                     l11475:	
  5384  0F2C  2FFF               	goto	l7608
  5385                           	
  5386  0F2D                     l7607:	
  5387                           	line	58
  5388                           	
  5389  0F2D                     l11477:	
  5390  0F2D  083F               	movf	(___ftmul@f2),w
  5391  0F2E  00C2               	movwf	((??___ftmul+0)+0)
  5392  0F2F  0840               	movf	(___ftmul@f2+1),w
  5393  0F30  00C3               	movwf	((??___ftmul+0)+0+1)
  5394  0F31  0841               	movf	(___ftmul@f2+2),w
  5395  0F32  00C4               	movwf	((??___ftmul+0)+0+2)
  5396  0F33  1003               	clrc
  5397  0F34  0D43               	rlf	(??___ftmul+0)+1,w
  5398  0F35  0D44               	rlf	(??___ftmul+0)+2,w
  5399  0F36  00C5               	movwf	(??___ftmul+3)+0
  5400  0F37  0845               	movf	(??___ftmul+3)+0,w
  5401  0F38  00CB               	movwf	(___ftmul@sign)
  5402  0F39  08CB               	movf	((___ftmul@sign)),f
  5403  0F3A  1D03               	skipz
  5404  0F3B  2F3D               	goto	u5501
  5405  0F3C  2F3E               	goto	u5500
  5406  0F3D                     u5501:
  5407  0F3D  2F46               	goto	l11483
  5408  0F3E                     u5500:
  5409                           	line	59
  5410                           	
  5411  0F3E                     l11479:	
  5412  0F3E  3000               	movlw	0x0
  5413  0F3F  00BC               	movwf	(?___ftmul)
  5414  0F40  3000               	movlw	0x0
  5415  0F41  00BD               	movwf	(?___ftmul+1)
  5416  0F42  3000               	movlw	0x0
  5417  0F43  00BE               	movwf	(?___ftmul+2)
  5418  0F44  2FFF               	goto	l7608
  5419                           	
  5420  0F45                     l11481:	
  5421  0F45  2FFF               	goto	l7608
  5422                           	
  5423  0F46                     l7609:	
  5424                           	line	60
  5425                           	
  5426  0F46                     l11483:	
  5427  0F46  084B               	movf	(___ftmul@sign),w
  5428  0F47  3E7B               	addlw	07Bh
  5429  0F48  00C2               	movwf	(??___ftmul+0)+0
  5430  0F49  0842               	movf	(??___ftmul+0)+0,w
  5431  0F4A  07C6               	addwf	(___ftmul@exp),f
  5432                           	line	61
  5433  0F4B  083C               	movf	(___ftmul@f1),w
  5434  0F4C  00C2               	movwf	((??___ftmul+0)+0)
  5435  0F4D  083D               	movf	(___ftmul@f1+1),w
  5436  0F4E  00C3               	movwf	((??___ftmul+0)+0+1)
  5437  0F4F  083E               	movf	(___ftmul@f1+2),w
  5438  0F50  00C4               	movwf	((??___ftmul+0)+0+2)
  5439  0F51  3010               	movlw	010h
  5440  0F52                     u5515:
  5441  0F52  1003               	clrc
  5442  0F53  0CC4               	rrf	(??___ftmul+0)+2,f
  5443  0F54  0CC3               	rrf	(??___ftmul+0)+1,f
  5444  0F55  0CC2               	rrf	(??___ftmul+0)+0,f
  5445  0F56                     u5510:
  5446  0F56  3EFF               	addlw	-1
  5447  0F57  1D03               	skipz
  5448  0F58  2F52               	goto	u5515
  5449  0F59  0842               	movf	0+(??___ftmul+0)+0,w
  5450  0F5A  00C5               	movwf	(??___ftmul+3)+0
  5451  0F5B  0845               	movf	(??___ftmul+3)+0,w
  5452  0F5C  00CB               	movwf	(___ftmul@sign)
  5453                           	line	62
  5454  0F5D  083F               	movf	(___ftmul@f2),w
  5455  0F5E  00C2               	movwf	((??___ftmul+0)+0)
  5456  0F5F  0840               	movf	(___ftmul@f2+1),w
  5457  0F60  00C3               	movwf	((??___ftmul+0)+0+1)
  5458  0F61  0841               	movf	(___ftmul@f2+2),w
  5459  0F62  00C4               	movwf	((??___ftmul+0)+0+2)
  5460  0F63  3010               	movlw	010h
  5461  0F64                     u5525:
  5462  0F64  1003               	clrc
  5463  0F65  0CC4               	rrf	(??___ftmul+0)+2,f
  5464  0F66  0CC3               	rrf	(??___ftmul+0)+1,f
  5465  0F67  0CC2               	rrf	(??___ftmul+0)+0,f
  5466  0F68                     u5520:
  5467  0F68  3EFF               	addlw	-1
  5468  0F69  1D03               	skipz
  5469  0F6A  2F64               	goto	u5525
  5470  0F6B  0842               	movf	0+(??___ftmul+0)+0,w
  5471  0F6C  00C5               	movwf	(??___ftmul+3)+0
  5472  0F6D  0845               	movf	(??___ftmul+3)+0,w
  5473  0F6E  06CB               	xorwf	(___ftmul@sign),f
  5474                           	line	63
  5475  0F6F  3080               	movlw	(080h)
  5476  0F70  00C2               	movwf	(??___ftmul+0)+0
  5477  0F71  0842               	movf	(??___ftmul+0)+0,w
  5478  0F72  05CB               	andwf	(___ftmul@sign),f
  5479                           	line	64
  5480                           	
  5481  0F73                     l11485:	
  5482  0F73  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5483                           	line	66
  5484                           	
  5485  0F74                     l11487:	
  5486  0F74  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5487                           	line	67
  5488                           	
  5489  0F75                     l11489:	
  5490  0F75  30FF               	movlw	0FFh
  5491  0F76  05BF               	andwf	(___ftmul@f2),f
  5492  0F77  30FF               	movlw	0FFh
  5493  0F78  05C0               	andwf	(___ftmul@f2+1),f
  5494  0F79  3000               	movlw	0
  5495  0F7A  05C1               	andwf	(___ftmul@f2+2),f
  5496                           	line	68
  5497                           	
  5498  0F7B                     l11491:	
  5499  0F7B  3000               	movlw	0
  5500  0F7C  00C7               	movwf	(___ftmul@f3_as_product)
  5501  0F7D  3000               	movlw	0
  5502  0F7E  00C8               	movwf	(___ftmul@f3_as_product+1)
  5503  0F7F  3000               	movlw	0
  5504  0F80  00C9               	movwf	(___ftmul@f3_as_product+2)
  5505                           	line	69
  5506                           	
  5507  0F81                     l11493:	
  5508  0F81  3007               	movlw	(07h)
  5509  0F82  00C2               	movwf	(??___ftmul+0)+0
  5510  0F83  0842               	movf	(??___ftmul+0)+0,w
  5511  0F84  00CA               	movwf	(___ftmul@cntr)
  5512  0F85  2F86               	goto	l11495
  5513                           	line	70
  5514                           	
  5515  0F86                     l7610:	
  5516                           	line	71
  5517                           	
  5518  0F86                     l11495:	
  5519  0F86  1C3C               	btfss	(___ftmul@f1),(0)&7
  5520  0F87  2F89               	goto	u5531
  5521  0F88  2F8A               	goto	u5530
  5522  0F89                     u5531:
  5523  0F89  2F9B               	goto	l11499
  5524  0F8A                     u5530:
  5525                           	line	72
  5526                           	
  5527  0F8A                     l11497:	
  5528  0F8A  083F               	movf	(___ftmul@f2),w
  5529  0F8B  07C7               	addwf	(___ftmul@f3_as_product),f
  5530  0F8C  0840               	movf	(___ftmul@f2+1),w
  5531  0F8D  1103               	clrz
  5532  0F8E  1803               	skipnc
  5533  0F8F  0A40               	incf	(___ftmul@f2+1),w
  5534  0F90  1903               	skipnz
  5535  0F91  2F93               	goto	u5541
  5536  0F92  07C8               	addwf	(___ftmul@f3_as_product+1),f
  5537  0F93                     u5541:
  5538  0F93  0841               	movf	(___ftmul@f2+2),w
  5539  0F94  1103               	clrz
  5540  0F95  1803               	skipnc
  5541  0F96  0A41               	incf	(___ftmul@f2+2),w
  5542  0F97  1903               	skipnz
  5543  0F98  2F9A               	goto	u5542
  5544  0F99  07C9               	addwf	(___ftmul@f3_as_product+2),f
  5545  0F9A                     u5542:
  5546                           
  5547  0F9A  2F9B               	goto	l11499
  5548                           	
  5549  0F9B                     l7611:	
  5550                           	line	73
  5551                           	
  5552  0F9B                     l11499:	
  5553  0F9B  3001               	movlw	01h
  5554  0F9C                     u5555:
  5555  0F9C  1003               	clrc
  5556  0F9D  0CBE               	rrf	(___ftmul@f1+2),f
  5557  0F9E  0CBD               	rrf	(___ftmul@f1+1),f
  5558  0F9F  0CBC               	rrf	(___ftmul@f1),f
  5559  0FA0  3EFF               	addlw	-1
  5560  0FA1  1D03               	skipz
  5561  0FA2  2F9C               	goto	u5555
  5562                           
  5563                           	line	74
  5564                           	
  5565  0FA3                     l11501:	
  5566  0FA3  3001               	movlw	01h
  5567  0FA4                     u5565:
  5568  0FA4  1003               	clrc
  5569  0FA5  0DBF               	rlf	(___ftmul@f2),f
  5570  0FA6  0DC0               	rlf	(___ftmul@f2+1),f
  5571  0FA7  0DC1               	rlf	(___ftmul@f2+2),f
  5572  0FA8  3EFF               	addlw	-1
  5573  0FA9  1D03               	skipz
  5574  0FAA  2FA4               	goto	u5565
  5575                           	line	75
  5576                           	
  5577  0FAB                     l11503:	
  5578  0FAB  3001               	movlw	low(01h)
  5579  0FAC  02CA               	subwf	(___ftmul@cntr),f
  5580  0FAD  1D03               	btfss	status,2
  5581  0FAE  2FB0               	goto	u5571
  5582  0FAF  2FB1               	goto	u5570
  5583  0FB0                     u5571:
  5584  0FB0  2F86               	goto	l11495
  5585  0FB1                     u5570:
  5586  0FB1  2FB2               	goto	l11505
  5587                           	
  5588  0FB2                     l7612:	
  5589                           	line	76
  5590                           	
  5591  0FB2                     l11505:	
  5592  0FB2  3009               	movlw	(09h)
  5593  0FB3  00C2               	movwf	(??___ftmul+0)+0
  5594  0FB4  0842               	movf	(??___ftmul+0)+0,w
  5595  0FB5  00CA               	movwf	(___ftmul@cntr)
  5596  0FB6  2FB7               	goto	l11507
  5597                           	line	77
  5598                           	
  5599  0FB7                     l7613:	
  5600                           	line	78
  5601                           	
  5602  0FB7                     l11507:	
  5603  0FB7  1C3C               	btfss	(___ftmul@f1),(0)&7
  5604  0FB8  2FBA               	goto	u5581
  5605  0FB9  2FBB               	goto	u5580
  5606  0FBA                     u5581:
  5607  0FBA  2FCC               	goto	l11511
  5608  0FBB                     u5580:
  5609                           	line	79
  5610                           	
  5611  0FBB                     l11509:	
  5612  0FBB  083F               	movf	(___ftmul@f2),w
  5613  0FBC  07C7               	addwf	(___ftmul@f3_as_product),f
  5614  0FBD  0840               	movf	(___ftmul@f2+1),w
  5615  0FBE  1103               	clrz
  5616  0FBF  1803               	skipnc
  5617  0FC0  0A40               	incf	(___ftmul@f2+1),w
  5618  0FC1  1903               	skipnz
  5619  0FC2  2FC4               	goto	u5591
  5620  0FC3  07C8               	addwf	(___ftmul@f3_as_product+1),f
  5621  0FC4                     u5591:
  5622  0FC4  0841               	movf	(___ftmul@f2+2),w
  5623  0FC5  1103               	clrz
  5624  0FC6  1803               	skipnc
  5625  0FC7  0A41               	incf	(___ftmul@f2+2),w
  5626  0FC8  1903               	skipnz
  5627  0FC9  2FCB               	goto	u5592
  5628  0FCA  07C9               	addwf	(___ftmul@f3_as_product+2),f
  5629  0FCB                     u5592:
  5630                           
  5631  0FCB  2FCC               	goto	l11511
  5632                           	
  5633  0FCC                     l7614:	
  5634                           	line	80
  5635                           	
  5636  0FCC                     l11511:	
  5637  0FCC  3001               	movlw	01h
  5638  0FCD                     u5605:
  5639  0FCD  1003               	clrc
  5640  0FCE  0CBE               	rrf	(___ftmul@f1+2),f
  5641  0FCF  0CBD               	rrf	(___ftmul@f1+1),f
  5642  0FD0  0CBC               	rrf	(___ftmul@f1),f
  5643  0FD1  3EFF               	addlw	-1
  5644  0FD2  1D03               	skipz
  5645  0FD3  2FCD               	goto	u5605
  5646                           
  5647                           	line	81
  5648                           	
  5649  0FD4                     l11513:	
  5650  0FD4  3001               	movlw	01h
  5651  0FD5                     u5615:
  5652  0FD5  1003               	clrc
  5653  0FD6  0CC9               	rrf	(___ftmul@f3_as_product+2),f
  5654  0FD7  0CC8               	rrf	(___ftmul@f3_as_product+1),f
  5655  0FD8  0CC7               	rrf	(___ftmul@f3_as_product),f
  5656  0FD9  3EFF               	addlw	-1
  5657  0FDA  1D03               	skipz
  5658  0FDB  2FD5               	goto	u5615
  5659                           
  5660                           	line	82
  5661                           	
  5662  0FDC                     l11515:	
  5663  0FDC  3001               	movlw	low(01h)
  5664  0FDD  02CA               	subwf	(___ftmul@cntr),f
  5665  0FDE  1D03               	btfss	status,2
  5666  0FDF  2FE1               	goto	u5621
  5667  0FE0  2FE2               	goto	u5620
  5668  0FE1                     u5621:
  5669  0FE1  2FB7               	goto	l11507
  5670  0FE2                     u5620:
  5671  0FE2  2FE3               	goto	l11517
  5672                           	
  5673  0FE3                     l7615:	
  5674                           	line	83
  5675                           	
  5676  0FE3                     l11517:	
  5677  0FE3  0847               	movf	(___ftmul@f3_as_product),w
  5678  0FE4  00A0               	movwf	(?___ftpack)
  5679  0FE5  0848               	movf	(___ftmul@f3_as_product+1),w
  5680  0FE6  00A1               	movwf	(?___ftpack+1)
  5681  0FE7  0849               	movf	(___ftmul@f3_as_product+2),w
  5682  0FE8  00A2               	movwf	(?___ftpack+2)
  5683  0FE9  0846               	movf	(___ftmul@exp),w
  5684  0FEA  00C2               	movwf	(??___ftmul+0)+0
  5685  0FEB  0842               	movf	(??___ftmul+0)+0,w
  5686  0FEC  00A3               	movwf	0+(?___ftpack)+03h
  5687  0FED  084B               	movf	(___ftmul@sign),w
  5688  0FEE  00C3               	movwf	(??___ftmul+1)+0
  5689  0FEF  0843               	movf	(??___ftmul+1)+0,w
  5690  0FF0  00A4               	movwf	0+(?___ftpack)+04h
  5691  0FF1  120A  158A  240B   	fcall	___ftpack
              120A  158A         
  5692  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  5693  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  5694  0FF8  0820               	movf	(0+(?___ftpack)),w
  5695  0FF9  00BC               	movwf	(?___ftmul)
  5696  0FFA  0821               	movf	(1+(?___ftpack)),w
  5697  0FFB  00BD               	movwf	(?___ftmul+1)
  5698  0FFC  0822               	movf	(2+(?___ftpack)),w
  5699  0FFD  00BE               	movwf	(?___ftmul+2)
  5700  0FFE  2FFF               	goto	l7608
  5701                           	
  5702  0FFF                     l11519:	
  5703                           	line	84
  5704                           	
  5705  0FFF                     l7608:	
  5706  0FFF  0008               	return
  5707                           	opt stack 0
  5708                           GLOBAL	__end_of___ftmul
  5709  1000                     	__end_of___ftmul:
  5710 ;; =============== function ___ftmul ends ============
  5711                           
  5712                           	signat	___ftmul,8315
  5713                           	global	_abs
  5714                           psect	text1073,local,class=CODE,delta=2
  5715                           global __ptext1073
  5716  1706                     __ptext1073:
  5717                           
  5718 ;; *************** function _abs *****************
  5719 ;; Defined at:
  5720 ;;		line 183 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  v               2    6[BANK0 ] int 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  2    6[BANK0 ] int 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5734 ;;      Params:         0       2       0       0       0
  5735 ;;      Locals:         0       0       0       0       0
  5736 ;;      Temps:          0       2       0       0       0
  5737 ;;      Totals:         0       4       0       0       0
  5738 ;;Total ram usage:        4 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    4
  5741 ;; This function calls:
  5742 ;;		___wmul
  5743 ;; This function is called by:
  5744 ;;		_robotMoveSpeed
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           psect	text1073
  5748                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5749                           	line	183
  5750                           	global	__size_of_abs
  5751  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  5752                           	
  5753  1706                     _abs:	
  5754                           	opt	stack 2
  5755                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5756                           	line	184
  5757                           	
  5758  1706                     l11467:	
  5759                           ;robot.c: 184: return (v * ((v>0) - (v<0)));
  5760  1706  3000               	movlw	0
  5761  1707  1283               	bcf	status, 5	;RP0=0, select bank0
  5762  1708  1303               	bcf	status, 6	;RP1=0, select bank0
  5763  1709  1BA7               	btfsc	(abs@v+1),7
  5764  170A  3001               	movlw	1
  5765  170B  00A8               	movwf	(??_abs+0)+0
  5766  170C  01A9               	clrf	(??_abs+0)+0+1
  5767  170D  09A8               	comf	(??_abs+0)+0,f
  5768  170E  09A9               	comf	(??_abs+0)+1,f
  5769  170F  0AA8               	incf	(??_abs+0)+0,f
  5770  1710  1903               	skipnz
  5771  1711  0AA9               	incf	(??_abs+0)+1,f
  5772  1712  0827               	movf	(abs@v+1),w
  5773  1713  3A80               	xorlw	80h
  5774  1714  00FF               	movwf	btemp+1
  5775  1715  3080               	movlw	(high(01h))^80h
  5776  1716  027F               	subwf	btemp+1,w
  5777  1717  1D03               	skipz
  5778  1718  2F1B               	goto	u5485
  5779  1719  3001               	movlw	low(01h)
  5780  171A  0226               	subwf	(abs@v),w
  5781  171B                     u5485:
  5782                           
  5783  171B  3000               	movlw	0
  5784  171C  1803               	skipnc
  5785  171D  3001               	movlw	1
  5786  171E  1283               	bcf	status, 5	;RP0=0, select bank0
  5787  171F  1303               	bcf	status, 6	;RP1=0, select bank0
  5788  1720  0728               	addwf	0+(??_abs+0)+0,w
  5789  1721  00A0               	movwf	(?___wmul)
  5790  1722  0829               	movf	1+(??_abs+0)+0,w
  5791  1723  1803               	skipnc
  5792  1724  0A29               	incf	1+(??_abs+0)+0,w
  5793  1725  00A1               	movwf	((?___wmul))+1
  5794  1726  0827               	movf	(abs@v+1),w
  5795  1727  01A3               	clrf	1+(?___wmul)+02h
  5796  1728  07A3               	addwf	1+(?___wmul)+02h
  5797  1729  0826               	movf	(abs@v),w
  5798  172A  01A2               	clrf	0+(?___wmul)+02h
  5799  172B  07A2               	addwf	0+(?___wmul)+02h
  5800                           
  5801  172C  160A  118A  259D   	fcall	___wmul
              160A  118A         
  5802  1731  1283               	bcf	status, 5	;RP0=0, select bank0
  5803  1732  1303               	bcf	status, 6	;RP1=0, select bank0
  5804  1733  0821               	movf	(1+(?___wmul)),w
  5805  1734  01A7               	clrf	(?_abs+1)
  5806  1735  07A7               	addwf	(?_abs+1)
  5807  1736  0820               	movf	(0+(?___wmul)),w
  5808  1737  01A6               	clrf	(?_abs)
  5809  1738  07A6               	addwf	(?_abs)
  5810                           
  5811  1739  2F3A               	goto	l6064
  5812                           	
  5813  173A                     l11469:	
  5814                           	line	185
  5815                           	
  5816  173A                     l6064:	
  5817  173A  0008               	return
  5818                           	opt stack 0
  5819                           GLOBAL	__end_of_abs
  5820  173B                     	__end_of_abs:
  5821 ;; =============== function _abs ends ============
  5822                           
  5823                           	signat	_abs,4218
  5824                           	global	_RobotDrive
  5825                           psect	text1074,local,class=CODE,delta=2
  5826                           global __ptext1074
  5827  167A                     __ptext1074:
  5828                           
  5829 ;; *************** function _RobotDrive *****************
  5830 ;; Defined at:
  5831 ;;		line 36 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  speed           2    2[BANK0 ] int 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  speedhighByt    1    6[BANK0 ] unsigned char 
  5836 ;;  speedlowByte    1    5[BANK0 ] unsigned char 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;		None               void
  5839 ;; Registers used:
  5840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5846 ;;      Params:         0       2       0       0       0
  5847 ;;      Locals:         0       2       0       0       0
  5848 ;;      Temps:          0       1       0       0       0
  5849 ;;      Totals:         0       5       0       0       0
  5850 ;;Total ram usage:        5 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:    4
  5853 ;; This function calls:
  5854 ;;		_ser_putch
  5855 ;; This function is called by:
  5856 ;;		_robotMoveSpeed
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           psect	text1074
  5860                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5861                           	line	36
  5862                           	global	__size_of_RobotDrive
  5863  002D                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  5864                           	
  5865  167A                     _RobotDrive:	
  5866                           	opt	stack 2
  5867                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5868                           	line	37
  5869                           	
  5870  167A                     l11453:	
  5871                           ;robot.c: 37: unsigned char speedlowByte = (unsigned char) (speed) ;
  5872  167A  1283               	bcf	status, 5	;RP0=0, select bank0
  5873  167B  1303               	bcf	status, 6	;RP1=0, select bank0
  5874  167C  0822               	movf	(RobotDrive@speed),w
  5875  167D  00A4               	movwf	(??_RobotDrive+0)+0
  5876  167E  0824               	movf	(??_RobotDrive+0)+0,w
  5877  167F  00A5               	movwf	(RobotDrive@speedlowByte)
  5878                           	line	38
  5879                           	
  5880  1680                     l11455:	
  5881                           ;robot.c: 38: unsigned char speedhighByte = (unsigned char) (speed >> 8);
  5882  1680  0823               	movf	(RobotDrive@speed+1),w
  5883  1681  00A4               	movwf	(??_RobotDrive+0)+0
  5884  1682  0824               	movf	(??_RobotDrive+0)+0,w
  5885  1683  00A6               	movwf	(RobotDrive@speedhighByte)
  5886                           	line	40
  5887                           	
  5888  1684                     l11457:	
  5889                           ;robot.c: 40: ser_putch(137);
  5890  1684  3089               	movlw	(089h)
  5891  1685  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5892                           	line	42
  5893                           	
  5894  168A                     l11459:	
  5895                           ;robot.c: 42: ser_putch(speedhighByte);
  5896  168A  1283               	bcf	status, 5	;RP0=0, select bank0
  5897  168B  1303               	bcf	status, 6	;RP1=0, select bank0
  5898  168C  0826               	movf	(RobotDrive@speedhighByte),w
  5899  168D  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5900                           	line	44
  5901                           	
  5902  1692                     l11461:	
  5903                           ;robot.c: 44: ser_putch(speedlowByte);
  5904  1692  1283               	bcf	status, 5	;RP0=0, select bank0
  5905  1693  1303               	bcf	status, 6	;RP1=0, select bank0
  5906  1694  0825               	movf	(RobotDrive@speedlowByte),w
  5907  1695  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5908                           	line	46
  5909                           	
  5910  169A                     l11463:	
  5911                           ;robot.c: 46: ser_putch(128);
  5912  169A  3080               	movlw	(080h)
  5913  169B  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5914                           	line	48
  5915                           	
  5916  16A0                     l11465:	
  5917                           ;robot.c: 48: ser_putch(0);
  5918  16A0  3000               	movlw	(0)
  5919  16A1  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5920                           	line	49
  5921                           	
  5922  16A6                     l6040:	
  5923  16A6  0008               	return
  5924                           	opt stack 0
  5925                           GLOBAL	__end_of_RobotDrive
  5926  16A7                     	__end_of_RobotDrive:
  5927 ;; =============== function _RobotDrive ends ============
  5928                           
  5929                           	signat	_RobotDrive,4216
  5930                           	global	_ser_getch
  5931                           psect	text1075,local,class=CODE,delta=2
  5932                           global __ptext1075
  5933  15C9                     __ptext1075:
  5934                           
  5935 ;; *************** function _ser_getch *****************
  5936 ;; Defined at:
  5937 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;		None
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  c               1    1[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      unsigned char 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         0       0       0       0       0
  5952 ;;      Locals:         0       1       0       0       0
  5953 ;;      Temps:          0       1       0       0       0
  5954 ;;      Totals:         0       2       0       0       0
  5955 ;;Total ram usage:        2 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    4
  5958 ;; This function calls:
  5959 ;;		_ser_isrx
  5960 ;; This function is called by:
  5961 ;;		_robot_read
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           psect	text1075
  5965                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  5966                           	line	55
  5967                           	global	__size_of_ser_getch
  5968  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  5969                           	
  5970  15C9                     _ser_getch:	
  5971                           	opt	stack 1
  5972                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5973                           	line	58
  5974                           	
  5975  15C9                     l11437:	
  5976                           ;ser.c: 56: unsigned char c;
  5977                           ;ser.c: 58: while (ser_isrx()==0)
  5978  15C9  2DCB               	goto	l11439
  5979                           	
  5980  15CA                     l6768:	
  5981                           	line	59
  5982                           ;ser.c: 59: continue;
  5983  15CA  2DCB               	goto	l11439
  5984                           	
  5985  15CB                     l6767:	
  5986                           	line	58
  5987                           	
  5988  15CB                     l11439:	
  5989  15CB  160A  118A  24ED   	fcall	_ser_isrx
              160A  118A         
  5990  15D0  1C03               	btfss	status,0
  5991  15D1  2DD3               	goto	u5471
  5992  15D2  2DD4               	goto	u5470
  5993  15D3                     u5471:
  5994  15D3  2DCB               	goto	l11439
  5995  15D4                     u5470:
  5996                           	
  5997  15D4                     l6769:	
  5998                           	line	61
  5999                           ;ser.c: 61: GIE=0;
  6000  15D4  138B               	bcf	(95/8),(95)&7
  6001                           	line	62
  6002                           	
  6003  15D5                     l11441:	
  6004                           ;ser.c: 62: c=rxfifo[rxoptr];
  6005  15D5  1683               	bsf	status, 5	;RP0=1, select bank1
  6006  15D6  1303               	bcf	status, 6	;RP1=0, select bank1
  6007  15D7  0851               	movf	(_rxoptr)^080h,w
  6008  15D8  3EA0               	addlw	_rxfifo&0ffh
  6009  15D9  0084               	movwf	fsr0
  6010  15DA  1383               	bcf	status, 7	;select IRP bank1
  6011  15DB  0800               	movf	indf,w
  6012  15DC  1283               	bcf	status, 5	;RP0=0, select bank0
  6013  15DD  1303               	bcf	status, 6	;RP1=0, select bank0
  6014  15DE  00A0               	movwf	(??_ser_getch+0)+0
  6015  15DF  0820               	movf	(??_ser_getch+0)+0,w
  6016  15E0  00A1               	movwf	(ser_getch@c)
  6017                           	line	63
  6018                           	
  6019  15E1                     l11443:	
  6020                           ;ser.c: 63: ++rxoptr;
  6021  15E1  3001               	movlw	(01h)
  6022  15E2  00A0               	movwf	(??_ser_getch+0)+0
  6023  15E3  0820               	movf	(??_ser_getch+0)+0,w
  6024  15E4  1683               	bsf	status, 5	;RP0=1, select bank1
  6025  15E5  1303               	bcf	status, 6	;RP1=0, select bank1
  6026  15E6  07D1               	addwf	(_rxoptr)^080h,f	;volatile
  6027                           	line	64
  6028                           	
  6029  15E7                     l11445:	
  6030                           ;ser.c: 64: rxoptr &= (16-1);
  6031  15E7  300F               	movlw	(0Fh)
  6032  15E8  1283               	bcf	status, 5	;RP0=0, select bank0
  6033  15E9  1303               	bcf	status, 6	;RP1=0, select bank0
  6034  15EA  00A0               	movwf	(??_ser_getch+0)+0
  6035  15EB  0820               	movf	(??_ser_getch+0)+0,w
  6036  15EC  1683               	bsf	status, 5	;RP0=1, select bank1
  6037  15ED  1303               	bcf	status, 6	;RP1=0, select bank1
  6038  15EE  05D1               	andwf	(_rxoptr)^080h,f	;volatile
  6039                           	line	65
  6040                           	
  6041  15EF                     l11447:	
  6042                           ;ser.c: 65: GIE=1;
  6043  15EF  178B               	bsf	(95/8),(95)&7
  6044                           	line	66
  6045                           	
  6046  15F0                     l11449:	
  6047                           ;ser.c: 66: return c;
  6048  15F0  1283               	bcf	status, 5	;RP0=0, select bank0
  6049  15F1  1303               	bcf	status, 6	;RP1=0, select bank0
  6050  15F2  0821               	movf	(ser_getch@c),w
  6051  15F3  2DF4               	goto	l6770
  6052                           	
  6053  15F4                     l11451:	
  6054                           	line	67
  6055                           	
  6056  15F4                     l6770:	
  6057  15F4  0008               	return
  6058                           	opt stack 0
  6059                           GLOBAL	__end_of_ser_getch
  6060  15F5                     	__end_of_ser_getch:
  6061 ;; =============== function _ser_getch ends ============
  6062                           
  6063                           	signat	_ser_getch,89
  6064                           	global	_sprintf
  6065                           psect	text1076,local,class=CODE,delta=2
  6066                           global __ptext1076
  6067  066A                     __ptext1076:
  6068                           
  6069 ;; *************** function _sprintf *****************
  6070 ;; Defined at:
  6071 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  sp              1    wreg     PTR unsigned char 
  6074 ;;		 -> UpdateDisplay@adcOutput(16), 
  6075 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  6076 ;;		 -> STR_13(13), 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  6079 ;;		 -> UpdateDisplay@adcOutput(16), 
  6080 ;;  _val            4   31[BANK0 ] struct .
  6081 ;;  c               1   36[BANK0 ] char 
  6082 ;;  prec            1   30[BANK0 ] char 
  6083 ;;  flag            1   29[BANK0 ] unsigned char 
  6084 ;;  ap              1   28[BANK0 ] PTR void [1]
  6085 ;;		 -> ?_sprintf(2), 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  2   20[BANK0 ] int 
  6088 ;; Registers used:
  6089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6095 ;;      Params:         0       5       0       0       0
  6096 ;;      Locals:         0       9       0       0       0
  6097 ;;      Temps:          0       3       0       0       0
  6098 ;;      Totals:         0      17       0       0       0
  6099 ;;Total ram usage:       17 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    4
  6102 ;; This function calls:
  6103 ;;		___lwdiv
  6104 ;;		___lwmod
  6105 ;; This function is called by:
  6106 ;;		_UpdateDisplay
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           psect	text1076
  6110                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  6111                           	line	488
  6112                           	global	__size_of_sprintf
  6113  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  6114                           	
  6115  066A                     _sprintf:	
  6116                           	opt	stack 1
  6117                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6118                           ;sprintf@sp stored from wreg
  6119                           	line	537
  6120  066A  1283               	bcf	status, 5	;RP0=0, select bank0
  6121  066B  1303               	bcf	status, 6	;RP1=0, select bank0
  6122  066C  00C3               	movwf	(sprintf@sp)
  6123                           	
  6124  066D                     l11379:	
  6125  066D  3035               	movlw	(?_sprintf+01h)&0ffh
  6126  066E  00B9               	movwf	(??_sprintf+0)+0
  6127  066F  0839               	movf	(??_sprintf+0)+0,w
  6128  0670  00BC               	movwf	(sprintf@ap)
  6129                           	line	540
  6130  0671  2F50               	goto	l11431
  6131                           	
  6132  0672                     l6808:	
  6133                           	line	542
  6134                           	
  6135  0672                     l11381:	
  6136  0672  0844               	movf	(sprintf@c),w
  6137  0673  3A25               	xorlw	025h
  6138  0674  1903               	skipnz
  6139  0675  2E77               	goto	u5391
  6140  0676  2E78               	goto	u5390
  6141  0677                     u5391:
  6142  0677  2E84               	goto	l6809
  6143  0678                     u5390:
  6144                           	line	545
  6145                           	
  6146  0678                     l11383:	
  6147  0678  0844               	movf	(sprintf@c),w
  6148  0679  00B9               	movwf	(??_sprintf+0)+0
  6149  067A  0843               	movf	(sprintf@sp),w
  6150  067B  0084               	movwf	fsr0
  6151  067C  0839               	movf	(??_sprintf+0)+0,w
  6152  067D  1383               	bcf	status, 7	;select IRP bank0
  6153  067E  0080               	movwf	indf
  6154                           	
  6155  067F                     l11385:	
  6156  067F  3001               	movlw	(01h)
  6157  0680  00B9               	movwf	(??_sprintf+0)+0
  6158  0681  0839               	movf	(??_sprintf+0)+0,w
  6159  0682  07C3               	addwf	(sprintf@sp),f
  6160                           	line	546
  6161  0683  2F50               	goto	l11431
  6162                           	line	547
  6163                           	
  6164  0684                     l6809:	
  6165                           	line	552
  6166  0684  01BD               	clrf	(sprintf@flag)
  6167                           	line	638
  6168  0685  2E8B               	goto	l11389
  6169                           	line	640
  6170                           	
  6171  0686                     l6811:	
  6172                           	line	641
  6173  0686  2F64               	goto	l11433
  6174                           	line	700
  6175                           	
  6176  0687                     l6813:	
  6177  0687  2EA0               	goto	l11391
  6178                           	line	701
  6179                           	
  6180  0688                     l6814:	
  6181                           	line	702
  6182  0688  2EA0               	goto	l11391
  6183                           	line	805
  6184                           	
  6185  0689                     l6816:	
  6186                           	line	816
  6187  0689  2F50               	goto	l11431
  6188                           	line	825
  6189                           	
  6190  068A                     l11387:	
  6191  068A  2EA0               	goto	l11391
  6192                           	line	638
  6193                           	
  6194  068B                     l6810:	
  6195                           	
  6196  068B                     l11389:	
  6197  068B  3001               	movlw	01h
  6198  068C  07B4               	addwf	(sprintf@f),f
  6199  068D  30FF               	movlw	-01h
  6200  068E  0734               	addwf	(sprintf@f),w
  6201  068F  0084               	movwf	fsr0
  6202  0690  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6203  0695  00C4               	movwf	(sprintf@c)
  6204                           	; Switch size 1, requested type "space"
  6205                           ; Number of cases is 3, Range of values is 0 to 105
  6206                           ; switch strategies available:
  6207                           ; Name         Instructions Cycles
  6208                           ; simple_byte           10     6 (average)
  6209                           ; jumptable            260     6 (fixed)
  6210                           ; rangetable           110     6 (fixed)
  6211                           ; spacedrange          218     9 (fixed)
  6212                           ; locatedrange         106     3 (fixed)
  6213                           ;	Chosen strategy is simple_byte
  6214                           
  6215                           	opt asmopt_off
  6216  0696  3A00               	xorlw	0^0	; case 0
  6217  0697  1903               	skipnz
  6218  0698  2F64               	goto	l11433
  6219  0699  3A64               	xorlw	100^0	; case 100
  6220  069A  1903               	skipnz
  6221  069B  2EA0               	goto	l11391
  6222  069C  3A0D               	xorlw	105^100	; case 105
  6223  069D  1903               	skipnz
  6224  069E  2EA0               	goto	l11391
  6225  069F  2F50               	goto	l11431
  6226                           	opt asmopt_on
  6227                           
  6228                           	line	825
  6229                           	
  6230  06A0                     l6815:	
  6231                           	line	1254
  6232                           	
  6233  06A0                     l11391:	
  6234  06A0  083C               	movf	(sprintf@ap),w
  6235  06A1  0084               	movwf	fsr0
  6236  06A2  1383               	bcf	status, 7	;select IRP bank0
  6237  06A3  0800               	movf	indf,w
  6238  06A4  00BF               	movwf	(sprintf@_val)
  6239  06A5  0A84               	incf	fsr0,f
  6240  06A6  0800               	movf	indf,w
  6241  06A7  00C0               	movwf	(sprintf@_val+1)
  6242                           	
  6243  06A8                     l11393:	
  6244  06A8  3002               	movlw	(02h)
  6245  06A9  00B9               	movwf	(??_sprintf+0)+0
  6246  06AA  0839               	movf	(??_sprintf+0)+0,w
  6247  06AB  07BC               	addwf	(sprintf@ap),f
  6248                           	line	1256
  6249                           	
  6250  06AC                     l11395:	
  6251  06AC  1FC0               	btfss	(sprintf@_val+1),7
  6252  06AD  2EAF               	goto	u5401
  6253  06AE  2EB0               	goto	u5400
  6254  06AF                     u5401:
  6255  06AF  2EBA               	goto	l11401
  6256  06B0                     u5400:
  6257                           	line	1257
  6258                           	
  6259  06B0                     l11397:	
  6260  06B0  3003               	movlw	(03h)
  6261  06B1  00B9               	movwf	(??_sprintf+0)+0
  6262  06B2  0839               	movf	(??_sprintf+0)+0,w
  6263  06B3  04BD               	iorwf	(sprintf@flag),f
  6264                           	line	1258
  6265                           	
  6266  06B4                     l11399:	
  6267  06B4  09BF               	comf	(sprintf@_val),f
  6268  06B5  09C0               	comf	(sprintf@_val+1),f
  6269  06B6  0ABF               	incf	(sprintf@_val),f
  6270  06B7  1903               	skipnz
  6271  06B8  0AC0               	incf	(sprintf@_val+1),f
  6272  06B9  2EBA               	goto	l11401
  6273                           	line	1259
  6274                           	
  6275  06BA                     l6817:	
  6276                           	line	1300
  6277                           	
  6278  06BA                     l11401:	
  6279  06BA  01C4               	clrf	(sprintf@c)
  6280  06BB  1403               	bsf	status,0
  6281  06BC  0DC4               	rlf	(sprintf@c),f
  6282                           	
  6283  06BD                     l11403:	
  6284  06BD  0844               	movf	(sprintf@c),w
  6285  06BE  3A05               	xorlw	05h
  6286  06BF  1D03               	skipz
  6287  06C0  2EC2               	goto	u5411
  6288  06C1  2EC3               	goto	u5410
  6289  06C2                     u5411:
  6290  06C2  2EC5               	goto	l11407
  6291  06C3                     u5410:
  6292  06C3  2EED               	goto	l11415
  6293                           	
  6294  06C4                     l11405:	
  6295  06C4  2EED               	goto	l11415
  6296                           	line	1301
  6297                           	
  6298  06C5                     l6818:	
  6299                           	
  6300  06C5                     l11407:	
  6301  06C5  0844               	movf	(sprintf@c),w
  6302  06C6  00B9               	movwf	(??_sprintf+0)+0
  6303  06C7  0739               	addwf	(??_sprintf+0)+0,w
  6304  06C8  3E01               	addlw	low((_dpowers-__stringbase))
  6305  06C9  0084               	movwf	fsr0
  6306  06CA  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6307  06CF  00BA               	movwf	(??_sprintf+1)+0
  6308  06D0  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6309  06D5  00BB               	movwf	(??_sprintf+1)+0+1
  6310  06D6  083B               	movf	1+(??_sprintf+1)+0,w
  6311  06D7  0240               	subwf	(sprintf@_val+1),w
  6312  06D8  1D03               	skipz
  6313  06D9  2EDC               	goto	u5425
  6314  06DA  083A               	movf	0+(??_sprintf+1)+0,w
  6315  06DB  023F               	subwf	(sprintf@_val),w
  6316  06DC                     u5425:
  6317  06DC  1803               	skipnc
  6318  06DD  2EDF               	goto	u5421
  6319  06DE  2EE0               	goto	u5420
  6320  06DF                     u5421:
  6321  06DF  2EE2               	goto	l11411
  6322  06E0                     u5420:
  6323  06E0  2EED               	goto	l11415
  6324                           	line	1302
  6325                           	
  6326  06E1                     l11409:	
  6327  06E1  2EED               	goto	l11415
  6328                           	
  6329  06E2                     l6820:	
  6330                           	line	1300
  6331                           	
  6332  06E2                     l11411:	
  6333  06E2  3001               	movlw	(01h)
  6334  06E3  00B9               	movwf	(??_sprintf+0)+0
  6335  06E4  0839               	movf	(??_sprintf+0)+0,w
  6336  06E5  07C4               	addwf	(sprintf@c),f
  6337                           	
  6338  06E6                     l11413:	
  6339  06E6  0844               	movf	(sprintf@c),w
  6340  06E7  3A05               	xorlw	05h
  6341  06E8  1D03               	skipz
  6342  06E9  2EEB               	goto	u5431
  6343  06EA  2EEC               	goto	u5430
  6344  06EB                     u5431:
  6345  06EB  2EC5               	goto	l11407
  6346  06EC                     u5430:
  6347  06EC  2EED               	goto	l11415
  6348                           	
  6349  06ED                     l6819:	
  6350                           	line	1433
  6351                           	
  6352  06ED                     l11415:	
  6353  06ED  083D               	movf	(sprintf@flag),w
  6354  06EE  3903               	andlw	03h
  6355  06EF  1903               	btfsc	status,2
  6356  06F0  2EF2               	goto	u5441
  6357  06F1  2EF3               	goto	u5440
  6358  06F2                     u5441:
  6359  06F2  2EFF               	goto	l11421
  6360  06F3                     u5440:
  6361                           	line	1434
  6362                           	
  6363  06F3                     l11417:	
  6364  06F3  302D               	movlw	(02Dh)
  6365  06F4  00B9               	movwf	(??_sprintf+0)+0
  6366  06F5  0843               	movf	(sprintf@sp),w
  6367  06F6  0084               	movwf	fsr0
  6368  06F7  0839               	movf	(??_sprintf+0)+0,w
  6369  06F8  1383               	bcf	status, 7	;select IRP bank0
  6370  06F9  0080               	movwf	indf
  6371                           	
  6372  06FA                     l11419:	
  6373  06FA  3001               	movlw	(01h)
  6374  06FB  00B9               	movwf	(??_sprintf+0)+0
  6375  06FC  0839               	movf	(??_sprintf+0)+0,w
  6376  06FD  07C3               	addwf	(sprintf@sp),f
  6377  06FE  2EFF               	goto	l11421
  6378                           	
  6379  06FF                     l6821:	
  6380                           	line	1467
  6381                           	
  6382  06FF                     l11421:	
  6383  06FF  0844               	movf	(sprintf@c),w
  6384  0700  00B9               	movwf	(??_sprintf+0)+0
  6385  0701  0839               	movf	(??_sprintf+0)+0,w
  6386  0702  00BE               	movwf	(sprintf@prec)
  6387                           	line	1469
  6388  0703  2F44               	goto	l11429
  6389                           	
  6390  0704                     l6823:	
  6391                           	line	1484
  6392                           	
  6393  0704                     l11423:	
  6394  0704  300A               	movlw	low(0Ah)
  6395  0705  00AE               	movwf	(?___lwmod)
  6396  0706  3000               	movlw	high(0Ah)
  6397  0707  00AF               	movwf	((?___lwmod))+1
  6398  0708  083E               	movf	(sprintf@prec),w
  6399  0709  00B9               	movwf	(??_sprintf+0)+0
  6400  070A  0739               	addwf	(??_sprintf+0)+0,w
  6401  070B  3E01               	addlw	low((_dpowers-__stringbase))
  6402  070C  0084               	movwf	fsr0
  6403  070D  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6404  0712  00A6               	movwf	(?___lwdiv)
  6405  0713  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6406  0718  00A7               	movwf	(?___lwdiv+1)
  6407  0719  0840               	movf	(sprintf@_val+1),w
  6408  071A  01A9               	clrf	1+(?___lwdiv)+02h
  6409  071B  07A9               	addwf	1+(?___lwdiv)+02h
  6410  071C  083F               	movf	(sprintf@_val),w
  6411  071D  01A8               	clrf	0+(?___lwdiv)+02h
  6412  071E  07A8               	addwf	0+(?___lwdiv)+02h
  6413                           
  6414  071F  120A  158A  2162   	fcall	___lwdiv
              120A  118A         
  6415  0724  1283               	bcf	status, 5	;RP0=0, select bank0
  6416  0725  1303               	bcf	status, 6	;RP1=0, select bank0
  6417  0726  0827               	movf	(1+(?___lwdiv)),w
  6418  0727  01B1               	clrf	1+(?___lwmod)+02h
  6419  0728  07B1               	addwf	1+(?___lwmod)+02h
  6420  0729  0826               	movf	(0+(?___lwdiv)),w
  6421  072A  01B0               	clrf	0+(?___lwmod)+02h
  6422  072B  07B0               	addwf	0+(?___lwmod)+02h
  6423                           
  6424  072C  160A  118A  27BA   	fcall	___lwmod
              120A  118A         
  6425  0731  1283               	bcf	status, 5	;RP0=0, select bank0
  6426  0732  1303               	bcf	status, 6	;RP1=0, select bank0
  6427  0733  082E               	movf	(0+(?___lwmod)),w
  6428  0734  3E30               	addlw	030h
  6429  0735  00BA               	movwf	(??_sprintf+1)+0
  6430  0736  083A               	movf	(??_sprintf+1)+0,w
  6431  0737  00C4               	movwf	(sprintf@c)
  6432                           	line	1516
  6433                           	
  6434  0738                     l11425:	
  6435  0738  0844               	movf	(sprintf@c),w
  6436  0739  00B9               	movwf	(??_sprintf+0)+0
  6437  073A  0843               	movf	(sprintf@sp),w
  6438  073B  0084               	movwf	fsr0
  6439  073C  0839               	movf	(??_sprintf+0)+0,w
  6440  073D  1383               	bcf	status, 7	;select IRP bank0
  6441  073E  0080               	movwf	indf
  6442                           	
  6443  073F                     l11427:	
  6444  073F  3001               	movlw	(01h)
  6445  0740  00B9               	movwf	(??_sprintf+0)+0
  6446  0741  0839               	movf	(??_sprintf+0)+0,w
  6447  0742  07C3               	addwf	(sprintf@sp),f
  6448  0743  2F44               	goto	l11429
  6449                           	line	1517
  6450                           	
  6451  0744                     l6822:	
  6452                           	line	1469
  6453                           	
  6454  0744                     l11429:	
  6455  0744  30FF               	movlw	(-1)
  6456  0745  00B9               	movwf	(??_sprintf+0)+0
  6457  0746  0839               	movf	(??_sprintf+0)+0,w
  6458  0747  07BE               	addwf	(sprintf@prec),f
  6459  0748  083E               	movf	((sprintf@prec)),w
  6460  0749  3AFF               	xorlw	-1
  6461  074A  1D03               	skipz
  6462  074B  2F4D               	goto	u5451
  6463  074C  2F4E               	goto	u5450
  6464  074D                     u5451:
  6465  074D  2F04               	goto	l11423
  6466  074E                     u5450:
  6467  074E  2F50               	goto	l11431
  6468                           	
  6469  074F                     l6824:	
  6470  074F  2F50               	goto	l11431
  6471                           	line	1525
  6472                           	
  6473  0750                     l6807:	
  6474                           	line	540
  6475                           	
  6476  0750                     l11431:	
  6477  0750  3001               	movlw	01h
  6478  0751  07B4               	addwf	(sprintf@f),f
  6479  0752  30FF               	movlw	-01h
  6480  0753  0734               	addwf	(sprintf@f),w
  6481  0754  0084               	movwf	fsr0
  6482  0755  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6483  075A  00B9               	movwf	(??_sprintf+0)+0
  6484  075B  0839               	movf	(??_sprintf+0)+0,w
  6485  075C  00C4               	movwf	(sprintf@c)
  6486  075D  08C4               	movf	((sprintf@c)),f
  6487  075E  1D03               	skipz
  6488  075F  2F61               	goto	u5461
  6489  0760  2F62               	goto	u5460
  6490  0761                     u5461:
  6491  0761  2E72               	goto	l11381
  6492  0762                     u5460:
  6493  0762  2F64               	goto	l11433
  6494                           	
  6495  0763                     l6825:	
  6496  0763  2F64               	goto	l11433
  6497                           	line	1527
  6498                           	
  6499  0764                     l6812:	
  6500                           	line	1530
  6501                           	
  6502  0764                     l11433:	
  6503  0764  0843               	movf	(sprintf@sp),w
  6504  0765  0084               	movwf	fsr0
  6505  0766  1383               	bcf	status, 7	;select IRP bank0
  6506  0767  0180               	clrf	indf
  6507  0768  2F69               	goto	l6826
  6508                           	line	1532
  6509                           	
  6510  0769                     l11435:	
  6511                           	line	1533
  6512                           ;	Return value of _sprintf is never used
  6513                           	
  6514  0769                     l6826:	
  6515  0769  0008               	return
  6516                           	opt stack 0
  6517                           GLOBAL	__end_of_sprintf
  6518  076A                     	__end_of_sprintf:
  6519 ;; =============== function _sprintf ends ============
  6520                           
  6521                           	signat	_sprintf,4698
  6522                           	global	_ADCconvert
  6523                           psect	text1077,local,class=CODE,delta=2
  6524                           global __ptext1077
  6525  02A8                     __ptext1077:
  6526                           
  6527 ;; *************** function _ADCconvert *****************
  6528 ;; Defined at:
  6529 ;;		line 37 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;		None
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;		None
  6534 ;; Return value:  Size  Location     Type
  6535 ;;		None               void
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0, pclath, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6543 ;;      Params:         0       0       0       0       0
  6544 ;;      Locals:         0       0       0       0       0
  6545 ;;      Temps:          0       2       0       0       0
  6546 ;;      Totals:         0       2       0       0       0
  6547 ;;Total ram usage:        2 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    4
  6550 ;; This function calls:
  6551 ;;		___wmul
  6552 ;;		___lwdiv
  6553 ;; This function is called by:
  6554 ;;		_readAvgDistance
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           psect	text1077
  6558                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  6559                           	line	37
  6560                           	global	__size_of_ADCconvert
  6561  0263                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  6562                           	
  6563  02A8                     _ADCconvert:	
  6564                           	opt	stack 1
  6565                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  6566                           	line	43
  6567                           	
  6568  02A8                     l11337:	
  6569                           ;infrared.c: 43: if (adcVal >= 213 && adcVal < 234)
  6570  02A8  3000               	movlw	high(0D5h)
  6571  02A9  1683               	bsf	status, 5	;RP0=1, select bank1
  6572  02AA  1303               	bcf	status, 6	;RP1=0, select bank1
  6573  02AB  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6574  02AC  30D5               	movlw	low(0D5h)
  6575  02AD  1903               	skipnz
  6576  02AE  0236               	subwf	(_adcVal)^080h,w	;volatile
  6577  02AF  1C03               	skipc
  6578  02B0  2AB2               	goto	u5251
  6579  02B1  2AB3               	goto	u5250
  6580  02B2                     u5251:
  6581  02B2  2B00               	goto	l11343
  6582  02B3                     u5250:
  6583                           	
  6584  02B3                     l11339:	
  6585  02B3  3000               	movlw	high(0EAh)
  6586  02B4  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6587  02B5  30EA               	movlw	low(0EAh)
  6588  02B6  1903               	skipnz
  6589  02B7  0236               	subwf	(_adcVal)^080h,w	;volatile
  6590  02B8  1803               	skipnc
  6591  02B9  2ABB               	goto	u5261
  6592  02BA  2ABC               	goto	u5260
  6593  02BB                     u5261:
  6594  02BB  2B00               	goto	l11343
  6595  02BC                     u5260:
  6596                           	line	45
  6597                           	
  6598  02BC                     l11341:	
  6599                           ;infrared.c: 44: {
  6600                           ;infrared.c: 45: IRdistance = 15 + ((20-15)*(234-adcVal))/(234-213);
  6601  02BC  3015               	movlw	low(015h)
  6602  02BD  1283               	bcf	status, 5	;RP0=0, select bank0
  6603  02BE  1303               	bcf	status, 6	;RP1=0, select bank0
  6604  02BF  00A6               	movwf	(?___lwdiv)
  6605  02C0  3000               	movlw	high(015h)
  6606  02C1  00A7               	movwf	((?___lwdiv))+1
  6607  02C2  1683               	bsf	status, 5	;RP0=1, select bank1
  6608  02C3  1303               	bcf	status, 6	;RP1=0, select bank1
  6609  02C4  0936               	comf	(_adcVal)^080h,w	;volatile
  6610  02C5  1283               	bcf	status, 5	;RP0=0, select bank0
  6611  02C6  1303               	bcf	status, 6	;RP1=0, select bank0
  6612  02C7  00AE               	movwf	(??_ADCconvert+0)+0
  6613  02C8  1683               	bsf	status, 5	;RP0=1, select bank1
  6614  02C9  1303               	bcf	status, 6	;RP1=0, select bank1
  6615  02CA  0937               	comf	(_adcVal+1)^080h,w	;volatile
  6616  02CB  1283               	bcf	status, 5	;RP0=0, select bank0
  6617  02CC  1303               	bcf	status, 6	;RP1=0, select bank0
  6618  02CD  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6619  02CE  0AAE               	incf	(??_ADCconvert+0)+0,f
  6620  02CF  1903               	skipnz
  6621  02D0  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6622  02D1  082E               	movf	0+(??_ADCconvert+0)+0,w
  6623  02D2  3EEA               	addlw	low(0EAh)
  6624  02D3  00A0               	movwf	(?___wmul)
  6625  02D4  082F               	movf	1+(??_ADCconvert+0)+0,w
  6626  02D5  1803               	skipnc
  6627  02D6  3E01               	addlw	1
  6628  02D7  3E00               	addlw	high(0EAh)
  6629  02D8  00A1               	movwf	1+(?___wmul)
  6630  02D9  3005               	movlw	low(05h)
  6631  02DA  00A2               	movwf	0+(?___wmul)+02h
  6632  02DB  3000               	movlw	high(05h)
  6633  02DC  00A3               	movwf	(0+(?___wmul)+02h)+1
  6634  02DD  160A  118A  259D   	fcall	___wmul
              120A  118A         
  6635  02E2  1283               	bcf	status, 5	;RP0=0, select bank0
  6636  02E3  1303               	bcf	status, 6	;RP1=0, select bank0
  6637  02E4  0821               	movf	(1+(?___wmul)),w
  6638  02E5  01A9               	clrf	1+(?___lwdiv)+02h
  6639  02E6  07A9               	addwf	1+(?___lwdiv)+02h
  6640  02E7  0820               	movf	(0+(?___wmul)),w
  6641  02E8  01A8               	clrf	0+(?___lwdiv)+02h
  6642  02E9  07A8               	addwf	0+(?___lwdiv)+02h
  6643                           
  6644  02EA  120A  158A  2162   	fcall	___lwdiv
              120A  118A         
  6645  02EF  1283               	bcf	status, 5	;RP0=0, select bank0
  6646  02F0  1303               	bcf	status, 6	;RP1=0, select bank0
  6647  02F1  0826               	movf	(0+(?___lwdiv)),w
  6648  02F2  3E0F               	addlw	low(0Fh)
  6649  02F3  1683               	bsf	status, 5	;RP0=1, select bank1
  6650  02F4  1303               	bcf	status, 6	;RP1=0, select bank1
  6651  02F5  00B0               	movwf	(_IRdistance)^080h	;volatile
  6652  02F6  1283               	bcf	status, 5	;RP0=0, select bank0
  6653  02F7  1303               	bcf	status, 6	;RP1=0, select bank0
  6654  02F8  0827               	movf	(1+(?___lwdiv)),w
  6655  02F9  1803               	skipnc
  6656  02FA  3E01               	addlw	1
  6657  02FB  3E00               	addlw	high(0Fh)
  6658  02FC  1683               	bsf	status, 5	;RP0=1, select bank1
  6659  02FD  1303               	bcf	status, 6	;RP1=0, select bank1
  6660  02FE  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  6661                           	line	46
  6662                           ;infrared.c: 46: }
  6663  02FF  2D0A               	goto	l3025
  6664                           	line	47
  6665                           	
  6666  0300                     l3012:	
  6667                           	
  6668  0300                     l11343:	
  6669                           ;infrared.c: 47: else if (adcVal >= 170 && adcVal < 213)
  6670  0300  3000               	movlw	high(0AAh)
  6671  0301  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6672  0302  30AA               	movlw	low(0AAh)
  6673  0303  1903               	skipnz
  6674  0304  0236               	subwf	(_adcVal)^080h,w	;volatile
  6675  0305  1C03               	skipc
  6676  0306  2B08               	goto	u5271
  6677  0307  2B09               	goto	u5270
  6678  0308                     u5271:
  6679  0308  2B56               	goto	l11349
  6680  0309                     u5270:
  6681                           	
  6682  0309                     l11345:	
  6683  0309  3000               	movlw	high(0D5h)
  6684  030A  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6685  030B  30D5               	movlw	low(0D5h)
  6686  030C  1903               	skipnz
  6687  030D  0236               	subwf	(_adcVal)^080h,w	;volatile
  6688  030E  1803               	skipnc
  6689  030F  2B11               	goto	u5281
  6690  0310  2B12               	goto	u5280
  6691  0311                     u5281:
  6692  0311  2B56               	goto	l11349
  6693  0312                     u5280:
  6694                           	line	49
  6695                           	
  6696  0312                     l11347:	
  6697                           ;infrared.c: 48: {
  6698                           ;infrared.c: 49: IRdistance = 20 + ((30-20)*(213-adcVal))/(213-170);
  6699  0312  302B               	movlw	low(02Bh)
  6700  0313  1283               	bcf	status, 5	;RP0=0, select bank0
  6701  0314  1303               	bcf	status, 6	;RP1=0, select bank0
  6702  0315  00A6               	movwf	(?___lwdiv)
  6703  0316  3000               	movlw	high(02Bh)
  6704  0317  00A7               	movwf	((?___lwdiv))+1
  6705  0318  1683               	bsf	status, 5	;RP0=1, select bank1
  6706  0319  1303               	bcf	status, 6	;RP1=0, select bank1
  6707  031A  0936               	comf	(_adcVal)^080h,w	;volatile
  6708  031B  1283               	bcf	status, 5	;RP0=0, select bank0
  6709  031C  1303               	bcf	status, 6	;RP1=0, select bank0
  6710  031D  00AE               	movwf	(??_ADCconvert+0)+0
  6711  031E  1683               	bsf	status, 5	;RP0=1, select bank1
  6712  031F  1303               	bcf	status, 6	;RP1=0, select bank1
  6713  0320  0937               	comf	(_adcVal+1)^080h,w	;volatile
  6714  0321  1283               	bcf	status, 5	;RP0=0, select bank0
  6715  0322  1303               	bcf	status, 6	;RP1=0, select bank0
  6716  0323  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6717  0324  0AAE               	incf	(??_ADCconvert+0)+0,f
  6718  0325  1903               	skipnz
  6719  0326  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6720  0327  082E               	movf	0+(??_ADCconvert+0)+0,w
  6721  0328  3ED5               	addlw	low(0D5h)
  6722  0329  00A0               	movwf	(?___wmul)
  6723  032A  082F               	movf	1+(??_ADCconvert+0)+0,w
  6724  032B  1803               	skipnc
  6725  032C  3E01               	addlw	1
  6726  032D  3E00               	addlw	high(0D5h)
  6727  032E  00A1               	movwf	1+(?___wmul)
  6728  032F  300A               	movlw	low(0Ah)
  6729  0330  00A2               	movwf	0+(?___wmul)+02h
  6730  0331  3000               	movlw	high(0Ah)
  6731  0332  00A3               	movwf	(0+(?___wmul)+02h)+1
  6732  0333  160A  118A  259D   	fcall	___wmul
              120A  118A         
  6733  0338  1283               	bcf	status, 5	;RP0=0, select bank0
  6734  0339  1303               	bcf	status, 6	;RP1=0, select bank0
  6735  033A  0821               	movf	(1+(?___wmul)),w
  6736  033B  01A9               	clrf	1+(?___lwdiv)+02h
  6737  033C  07A9               	addwf	1+(?___lwdiv)+02h
  6738  033D  0820               	movf	(0+(?___wmul)),w
  6739  033E  01A8               	clrf	0+(?___lwdiv)+02h
  6740  033F  07A8               	addwf	0+(?___lwdiv)+02h
  6741                           
  6742  0340  120A  158A  2162   	fcall	___lwdiv
              120A  118A         
  6743  0345  1283               	bcf	status, 5	;RP0=0, select bank0
  6744  0346  1303               	bcf	status, 6	;RP1=0, select bank0
  6745  0347  0826               	movf	(0+(?___lwdiv)),w
  6746  0348  3E14               	addlw	low(014h)
  6747  0349  1683               	bsf	status, 5	;RP0=1, select bank1
  6748  034A  1303               	bcf	status, 6	;RP1=0, select bank1
  6749  034B  00B0               	movwf	(_IRdistance)^080h	;volatile
  6750  034C  1283               	bcf	status, 5	;RP0=0, select bank0
  6751  034D  1303               	bcf	status, 6	;RP1=0, select bank0
  6752  034E  0827               	movf	(1+(?___lwdiv)),w
  6753  034F  1803               	skipnc
  6754  0350  3E01               	addlw	1
  6755  0351  3E00               	addlw	high(014h)
  6756  0352  1683               	bsf	status, 5	;RP0=1, select bank1
  6757  0353  1303               	bcf	status, 6	;RP1=0, select bank1
  6758  0354  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  6759                           	line	50
  6760                           ;infrared.c: 50: }
  6761  0355  2D0A               	goto	l3025
  6762                           	line	51
  6763                           	
  6764  0356                     l3014:	
  6765                           	
  6766  0356                     l11349:	
  6767                           ;infrared.c: 51: else if (adcVal >= 128 && adcVal < 170)
  6768  0356  3000               	movlw	high(080h)
  6769  0357  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6770  0358  3080               	movlw	low(080h)
  6771  0359  1903               	skipnz
  6772  035A  0236               	subwf	(_adcVal)^080h,w	;volatile
  6773  035B  1C03               	skipc
  6774  035C  2B5E               	goto	u5291
  6775  035D  2B5F               	goto	u5290
  6776  035E                     u5291:
  6777  035E  2BAC               	goto	l11355
  6778  035F                     u5290:
  6779                           	
  6780  035F                     l11351:	
  6781  035F  3000               	movlw	high(0AAh)
  6782  0360  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6783  0361  30AA               	movlw	low(0AAh)
  6784  0362  1903               	skipnz
  6785  0363  0236               	subwf	(_adcVal)^080h,w	;volatile
  6786  0364  1803               	skipnc
  6787  0365  2B67               	goto	u5301
  6788  0366  2B68               	goto	u5300
  6789  0367                     u5301:
  6790  0367  2BAC               	goto	l11355
  6791  0368                     u5300:
  6792                           	line	53
  6793                           	
  6794  0368                     l11353:	
  6795                           ;infrared.c: 52: {
  6796                           ;infrared.c: 53: IRdistance = 30 + ((40-30)*(170-adcVal))/(170-128);
  6797  0368  302A               	movlw	low(02Ah)
  6798  0369  1283               	bcf	status, 5	;RP0=0, select bank0
  6799  036A  1303               	bcf	status, 6	;RP1=0, select bank0
  6800  036B  00A6               	movwf	(?___lwdiv)
  6801  036C  3000               	movlw	high(02Ah)
  6802  036D  00A7               	movwf	((?___lwdiv))+1
  6803  036E  1683               	bsf	status, 5	;RP0=1, select bank1
  6804  036F  1303               	bcf	status, 6	;RP1=0, select bank1
  6805  0370  0936               	comf	(_adcVal)^080h,w	;volatile
  6806  0371  1283               	bcf	status, 5	;RP0=0, select bank0
  6807  0372  1303               	bcf	status, 6	;RP1=0, select bank0
  6808  0373  00AE               	movwf	(??_ADCconvert+0)+0
  6809  0374  1683               	bsf	status, 5	;RP0=1, select bank1
  6810  0375  1303               	bcf	status, 6	;RP1=0, select bank1
  6811  0376  0937               	comf	(_adcVal+1)^080h,w	;volatile
  6812  0377  1283               	bcf	status, 5	;RP0=0, select bank0
  6813  0378  1303               	bcf	status, 6	;RP1=0, select bank0
  6814  0379  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6815  037A  0AAE               	incf	(??_ADCconvert+0)+0,f
  6816  037B  1903               	skipnz
  6817  037C  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6818  037D  082E               	movf	0+(??_ADCconvert+0)+0,w
  6819  037E  3EAA               	addlw	low(0AAh)
  6820  037F  00A0               	movwf	(?___wmul)
  6821  0380  082F               	movf	1+(??_ADCconvert+0)+0,w
  6822  0381  1803               	skipnc
  6823  0382  3E01               	addlw	1
  6824  0383  3E00               	addlw	high(0AAh)
  6825  0384  00A1               	movwf	1+(?___wmul)
  6826  0385  300A               	movlw	low(0Ah)
  6827  0386  00A2               	movwf	0+(?___wmul)+02h
  6828  0387  3000               	movlw	high(0Ah)
  6829  0388  00A3               	movwf	(0+(?___wmul)+02h)+1
  6830  0389  160A  118A  259D   	fcall	___wmul
              120A  118A         
  6831  038E  1283               	bcf	status, 5	;RP0=0, select bank0
  6832  038F  1303               	bcf	status, 6	;RP1=0, select bank0
  6833  0390  0821               	movf	(1+(?___wmul)),w
  6834  0391  01A9               	clrf	1+(?___lwdiv)+02h
  6835  0392  07A9               	addwf	1+(?___lwdiv)+02h
  6836  0393  0820               	movf	(0+(?___wmul)),w
  6837  0394  01A8               	clrf	0+(?___lwdiv)+02h
  6838  0395  07A8               	addwf	0+(?___lwdiv)+02h
  6839                           
  6840  0396  120A  158A  2162   	fcall	___lwdiv
              120A  118A         
  6841  039B  1283               	bcf	status, 5	;RP0=0, select bank0
  6842  039C  1303               	bcf	status, 6	;RP1=0, select bank0
  6843  039D  0826               	movf	(0+(?___lwdiv)),w
  6844  039E  3E1E               	addlw	low(01Eh)
  6845  039F  1683               	bsf	status, 5	;RP0=1, select bank1
  6846  03A0  1303               	bcf	status, 6	;RP1=0, select bank1
  6847  03A1  00B0               	movwf	(_IRdistance)^080h	;volatile
  6848  03A2  1283               	bcf	status, 5	;RP0=0, select bank0
  6849  03A3  1303               	bcf	status, 6	;RP1=0, select bank0
  6850  03A4  0827               	movf	(1+(?___lwdiv)),w
  6851  03A5  1803               	skipnc
  6852  03A6  3E01               	addlw	1
  6853  03A7  3E00               	addlw	high(01Eh)
  6854  03A8  1683               	bsf	status, 5	;RP0=1, select bank1
  6855  03A9  1303               	bcf	status, 6	;RP1=0, select bank1
  6856  03AA  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  6857                           	line	54
  6858                           ;infrared.c: 54: }
  6859  03AB  2D0A               	goto	l3025
  6860                           	line	55
  6861                           	
  6862  03AC                     l3016:	
  6863                           	
  6864  03AC                     l11355:	
  6865                           ;infrared.c: 55: else if (adcVal >= 107 && adcVal < 128)
  6866  03AC  3000               	movlw	high(06Bh)
  6867  03AD  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6868  03AE  306B               	movlw	low(06Bh)
  6869  03AF  1903               	skipnz
  6870  03B0  0236               	subwf	(_adcVal)^080h,w	;volatile
  6871  03B1  1C03               	skipc
  6872  03B2  2BB4               	goto	u5311
  6873  03B3  2BB5               	goto	u5310
  6874  03B4                     u5311:
  6875  03B4  2C02               	goto	l11361
  6876  03B5                     u5310:
  6877                           	
  6878  03B5                     l11357:	
  6879  03B5  3000               	movlw	high(080h)
  6880  03B6  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6881  03B7  3080               	movlw	low(080h)
  6882  03B8  1903               	skipnz
  6883  03B9  0236               	subwf	(_adcVal)^080h,w	;volatile
  6884  03BA  1803               	skipnc
  6885  03BB  2BBD               	goto	u5321
  6886  03BC  2BBE               	goto	u5320
  6887  03BD                     u5321:
  6888  03BD  2C02               	goto	l11361
  6889  03BE                     u5320:
  6890                           	line	57
  6891                           	
  6892  03BE                     l11359:	
  6893                           ;infrared.c: 56: {
  6894                           ;infrared.c: 57: IRdistance = 40 + ((50-40)*(128-adcVal))/(128-107);
  6895  03BE  3015               	movlw	low(015h)
  6896  03BF  1283               	bcf	status, 5	;RP0=0, select bank0
  6897  03C0  1303               	bcf	status, 6	;RP1=0, select bank0
  6898  03C1  00A6               	movwf	(?___lwdiv)
  6899  03C2  3000               	movlw	high(015h)
  6900  03C3  00A7               	movwf	((?___lwdiv))+1
  6901  03C4  1683               	bsf	status, 5	;RP0=1, select bank1
  6902  03C5  1303               	bcf	status, 6	;RP1=0, select bank1
  6903  03C6  0936               	comf	(_adcVal)^080h,w	;volatile
  6904  03C7  1283               	bcf	status, 5	;RP0=0, select bank0
  6905  03C8  1303               	bcf	status, 6	;RP1=0, select bank0
  6906  03C9  00AE               	movwf	(??_ADCconvert+0)+0
  6907  03CA  1683               	bsf	status, 5	;RP0=1, select bank1
  6908  03CB  1303               	bcf	status, 6	;RP1=0, select bank1
  6909  03CC  0937               	comf	(_adcVal+1)^080h,w	;volatile
  6910  03CD  1283               	bcf	status, 5	;RP0=0, select bank0
  6911  03CE  1303               	bcf	status, 6	;RP1=0, select bank0
  6912  03CF  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6913  03D0  0AAE               	incf	(??_ADCconvert+0)+0,f
  6914  03D1  1903               	skipnz
  6915  03D2  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6916  03D3  082E               	movf	0+(??_ADCconvert+0)+0,w
  6917  03D4  3E80               	addlw	low(080h)
  6918  03D5  00A0               	movwf	(?___wmul)
  6919  03D6  082F               	movf	1+(??_ADCconvert+0)+0,w
  6920  03D7  1803               	skipnc
  6921  03D8  3E01               	addlw	1
  6922  03D9  3E00               	addlw	high(080h)
  6923  03DA  00A1               	movwf	1+(?___wmul)
  6924  03DB  300A               	movlw	low(0Ah)
  6925  03DC  00A2               	movwf	0+(?___wmul)+02h
  6926  03DD  3000               	movlw	high(0Ah)
  6927  03DE  00A3               	movwf	(0+(?___wmul)+02h)+1
  6928  03DF  160A  118A  259D   	fcall	___wmul
              120A  118A         
  6929  03E4  1283               	bcf	status, 5	;RP0=0, select bank0
  6930  03E5  1303               	bcf	status, 6	;RP1=0, select bank0
  6931  03E6  0821               	movf	(1+(?___wmul)),w
  6932  03E7  01A9               	clrf	1+(?___lwdiv)+02h
  6933  03E8  07A9               	addwf	1+(?___lwdiv)+02h
  6934  03E9  0820               	movf	(0+(?___wmul)),w
  6935  03EA  01A8               	clrf	0+(?___lwdiv)+02h
  6936  03EB  07A8               	addwf	0+(?___lwdiv)+02h
  6937                           
  6938  03EC  120A  158A  2162   	fcall	___lwdiv
              120A  118A         
  6939  03F1  1283               	bcf	status, 5	;RP0=0, select bank0
  6940  03F2  1303               	bcf	status, 6	;RP1=0, select bank0
  6941  03F3  0826               	movf	(0+(?___lwdiv)),w
  6942  03F4  3E28               	addlw	low(028h)
  6943  03F5  1683               	bsf	status, 5	;RP0=1, select bank1
  6944  03F6  1303               	bcf	status, 6	;RP1=0, select bank1
  6945  03F7  00B0               	movwf	(_IRdistance)^080h	;volatile
  6946  03F8  1283               	bcf	status, 5	;RP0=0, select bank0
  6947  03F9  1303               	bcf	status, 6	;RP1=0, select bank0
  6948  03FA  0827               	movf	(1+(?___lwdiv)),w
  6949  03FB  1803               	skipnc
  6950  03FC  3E01               	addlw	1
  6951  03FD  3E00               	addlw	high(028h)
  6952  03FE  1683               	bsf	status, 5	;RP0=1, select bank1
  6953  03FF  1303               	bcf	status, 6	;RP1=0, select bank1
  6954  0400  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  6955                           	line	58
  6956                           ;infrared.c: 58: }
  6957  0401  2D0A               	goto	l3025
  6958                           	line	59
  6959                           	
  6960  0402                     l3018:	
  6961                           	
  6962  0402                     l11361:	
  6963                           ;infrared.c: 59: else if (adcVal >= 77 && adcVal < 107)
  6964  0402  3000               	movlw	high(04Dh)
  6965  0403  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6966  0404  304D               	movlw	low(04Dh)
  6967  0405  1903               	skipnz
  6968  0406  0236               	subwf	(_adcVal)^080h,w	;volatile
  6969  0407  1C03               	skipc
  6970  0408  2C0A               	goto	u5331
  6971  0409  2C0B               	goto	u5330
  6972  040A                     u5331:
  6973  040A  2C58               	goto	l11367
  6974  040B                     u5330:
  6975                           	
  6976  040B                     l11363:	
  6977  040B  3000               	movlw	high(06Bh)
  6978  040C  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6979  040D  306B               	movlw	low(06Bh)
  6980  040E  1903               	skipnz
  6981  040F  0236               	subwf	(_adcVal)^080h,w	;volatile
  6982  0410  1803               	skipnc
  6983  0411  2C13               	goto	u5341
  6984  0412  2C14               	goto	u5340
  6985  0413                     u5341:
  6986  0413  2C58               	goto	l11367
  6987  0414                     u5340:
  6988                           	line	61
  6989                           	
  6990  0414                     l11365:	
  6991                           ;infrared.c: 60: {
  6992                           ;infrared.c: 61: IRdistance = 50 + ((60-50)*(107-adcVal))/(107-77);
  6993  0414  301E               	movlw	low(01Eh)
  6994  0415  1283               	bcf	status, 5	;RP0=0, select bank0
  6995  0416  1303               	bcf	status, 6	;RP1=0, select bank0
  6996  0417  00A6               	movwf	(?___lwdiv)
  6997  0418  3000               	movlw	high(01Eh)
  6998  0419  00A7               	movwf	((?___lwdiv))+1
  6999  041A  1683               	bsf	status, 5	;RP0=1, select bank1
  7000  041B  1303               	bcf	status, 6	;RP1=0, select bank1
  7001  041C  0936               	comf	(_adcVal)^080h,w	;volatile
  7002  041D  1283               	bcf	status, 5	;RP0=0, select bank0
  7003  041E  1303               	bcf	status, 6	;RP1=0, select bank0
  7004  041F  00AE               	movwf	(??_ADCconvert+0)+0
  7005  0420  1683               	bsf	status, 5	;RP0=1, select bank1
  7006  0421  1303               	bcf	status, 6	;RP1=0, select bank1
  7007  0422  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7008  0423  1283               	bcf	status, 5	;RP0=0, select bank0
  7009  0424  1303               	bcf	status, 6	;RP1=0, select bank0
  7010  0425  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7011  0426  0AAE               	incf	(??_ADCconvert+0)+0,f
  7012  0427  1903               	skipnz
  7013  0428  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7014  0429  082E               	movf	0+(??_ADCconvert+0)+0,w
  7015  042A  3E6B               	addlw	low(06Bh)
  7016  042B  00A0               	movwf	(?___wmul)
  7017  042C  082F               	movf	1+(??_ADCconvert+0)+0,w
  7018  042D  1803               	skipnc
  7019  042E  3E01               	addlw	1
  7020  042F  3E00               	addlw	high(06Bh)
  7021  0430  00A1               	movwf	1+(?___wmul)
  7022  0431  300A               	movlw	low(0Ah)
  7023  0432  00A2               	movwf	0+(?___wmul)+02h
  7024  0433  3000               	movlw	high(0Ah)
  7025  0434  00A3               	movwf	(0+(?___wmul)+02h)+1
  7026  0435  160A  118A  259D   	fcall	___wmul
              120A  118A         
  7027  043A  1283               	bcf	status, 5	;RP0=0, select bank0
  7028  043B  1303               	bcf	status, 6	;RP1=0, select bank0
  7029  043C  0821               	movf	(1+(?___wmul)),w
  7030  043D  01A9               	clrf	1+(?___lwdiv)+02h
  7031  043E  07A9               	addwf	1+(?___lwdiv)+02h
  7032  043F  0820               	movf	(0+(?___wmul)),w
  7033  0440  01A8               	clrf	0+(?___lwdiv)+02h
  7034  0441  07A8               	addwf	0+(?___lwdiv)+02h
  7035                           
  7036  0442  120A  158A  2162   	fcall	___lwdiv
              120A  118A         
  7037  0447  1283               	bcf	status, 5	;RP0=0, select bank0
  7038  0448  1303               	bcf	status, 6	;RP1=0, select bank0
  7039  0449  0826               	movf	(0+(?___lwdiv)),w
  7040  044A  3E32               	addlw	low(032h)
  7041  044B  1683               	bsf	status, 5	;RP0=1, select bank1
  7042  044C  1303               	bcf	status, 6	;RP1=0, select bank1
  7043  044D  00B0               	movwf	(_IRdistance)^080h	;volatile
  7044  044E  1283               	bcf	status, 5	;RP0=0, select bank0
  7045  044F  1303               	bcf	status, 6	;RP1=0, select bank0
  7046  0450  0827               	movf	(1+(?___lwdiv)),w
  7047  0451  1803               	skipnc
  7048  0452  3E01               	addlw	1
  7049  0453  3E00               	addlw	high(032h)
  7050  0454  1683               	bsf	status, 5	;RP0=1, select bank1
  7051  0455  1303               	bcf	status, 6	;RP1=0, select bank1
  7052  0456  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7053                           	line	62
  7054                           ;infrared.c: 62: }
  7055  0457  2D0A               	goto	l3025
  7056                           	line	63
  7057                           	
  7058  0458                     l3020:	
  7059                           	
  7060  0458                     l11367:	
  7061                           ;infrared.c: 63: else if (adcVal >= 56 && adcVal < 77)
  7062  0458  3000               	movlw	high(038h)
  7063  0459  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7064  045A  3038               	movlw	low(038h)
  7065  045B  1903               	skipnz
  7066  045C  0236               	subwf	(_adcVal)^080h,w	;volatile
  7067  045D  1C03               	skipc
  7068  045E  2C60               	goto	u5351
  7069  045F  2C61               	goto	u5350
  7070  0460                     u5351:
  7071  0460  2CAE               	goto	l11373
  7072  0461                     u5350:
  7073                           	
  7074  0461                     l11369:	
  7075  0461  3000               	movlw	high(04Dh)
  7076  0462  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7077  0463  304D               	movlw	low(04Dh)
  7078  0464  1903               	skipnz
  7079  0465  0236               	subwf	(_adcVal)^080h,w	;volatile
  7080  0466  1803               	skipnc
  7081  0467  2C69               	goto	u5361
  7082  0468  2C6A               	goto	u5360
  7083  0469                     u5361:
  7084  0469  2CAE               	goto	l11373
  7085  046A                     u5360:
  7086                           	line	65
  7087                           	
  7088  046A                     l11371:	
  7089                           ;infrared.c: 64: {
  7090                           ;infrared.c: 65: IRdistance = 60 + ((70-60)*(77-adcVal))/(77-56);
  7091  046A  3015               	movlw	low(015h)
  7092  046B  1283               	bcf	status, 5	;RP0=0, select bank0
  7093  046C  1303               	bcf	status, 6	;RP1=0, select bank0
  7094  046D  00A6               	movwf	(?___lwdiv)
  7095  046E  3000               	movlw	high(015h)
  7096  046F  00A7               	movwf	((?___lwdiv))+1
  7097  0470  1683               	bsf	status, 5	;RP0=1, select bank1
  7098  0471  1303               	bcf	status, 6	;RP1=0, select bank1
  7099  0472  0936               	comf	(_adcVal)^080h,w	;volatile
  7100  0473  1283               	bcf	status, 5	;RP0=0, select bank0
  7101  0474  1303               	bcf	status, 6	;RP1=0, select bank0
  7102  0475  00AE               	movwf	(??_ADCconvert+0)+0
  7103  0476  1683               	bsf	status, 5	;RP0=1, select bank1
  7104  0477  1303               	bcf	status, 6	;RP1=0, select bank1
  7105  0478  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7106  0479  1283               	bcf	status, 5	;RP0=0, select bank0
  7107  047A  1303               	bcf	status, 6	;RP1=0, select bank0
  7108  047B  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7109  047C  0AAE               	incf	(??_ADCconvert+0)+0,f
  7110  047D  1903               	skipnz
  7111  047E  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7112  047F  082E               	movf	0+(??_ADCconvert+0)+0,w
  7113  0480  3E4D               	addlw	low(04Dh)
  7114  0481  00A0               	movwf	(?___wmul)
  7115  0482  082F               	movf	1+(??_ADCconvert+0)+0,w
  7116  0483  1803               	skipnc
  7117  0484  3E01               	addlw	1
  7118  0485  3E00               	addlw	high(04Dh)
  7119  0486  00A1               	movwf	1+(?___wmul)
  7120  0487  300A               	movlw	low(0Ah)
  7121  0488  00A2               	movwf	0+(?___wmul)+02h
  7122  0489  3000               	movlw	high(0Ah)
  7123  048A  00A3               	movwf	(0+(?___wmul)+02h)+1
  7124  048B  160A  118A  259D   	fcall	___wmul
              120A  118A         
  7125  0490  1283               	bcf	status, 5	;RP0=0, select bank0
  7126  0491  1303               	bcf	status, 6	;RP1=0, select bank0
  7127  0492  0821               	movf	(1+(?___wmul)),w
  7128  0493  01A9               	clrf	1+(?___lwdiv)+02h
  7129  0494  07A9               	addwf	1+(?___lwdiv)+02h
  7130  0495  0820               	movf	(0+(?___wmul)),w
  7131  0496  01A8               	clrf	0+(?___lwdiv)+02h
  7132  0497  07A8               	addwf	0+(?___lwdiv)+02h
  7133                           
  7134  0498  120A  158A  2162   	fcall	___lwdiv
              120A  118A         
  7135  049D  1283               	bcf	status, 5	;RP0=0, select bank0
  7136  049E  1303               	bcf	status, 6	;RP1=0, select bank0
  7137  049F  0826               	movf	(0+(?___lwdiv)),w
  7138  04A0  3E3C               	addlw	low(03Ch)
  7139  04A1  1683               	bsf	status, 5	;RP0=1, select bank1
  7140  04A2  1303               	bcf	status, 6	;RP1=0, select bank1
  7141  04A3  00B0               	movwf	(_IRdistance)^080h	;volatile
  7142  04A4  1283               	bcf	status, 5	;RP0=0, select bank0
  7143  04A5  1303               	bcf	status, 6	;RP1=0, select bank0
  7144  04A6  0827               	movf	(1+(?___lwdiv)),w
  7145  04A7  1803               	skipnc
  7146  04A8  3E01               	addlw	1
  7147  04A9  3E00               	addlw	high(03Ch)
  7148  04AA  1683               	bsf	status, 5	;RP0=1, select bank1
  7149  04AB  1303               	bcf	status, 6	;RP1=0, select bank1
  7150  04AC  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7151                           	line	66
  7152                           ;infrared.c: 66: }
  7153  04AD  2D0A               	goto	l3025
  7154                           	line	67
  7155                           	
  7156  04AE                     l3022:	
  7157                           	
  7158  04AE                     l11373:	
  7159                           ;infrared.c: 67: else if (adcVal >= 43 && adcVal < 56)
  7160  04AE  3000               	movlw	high(02Bh)
  7161  04AF  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7162  04B0  302B               	movlw	low(02Bh)
  7163  04B1  1903               	skipnz
  7164  04B2  0236               	subwf	(_adcVal)^080h,w	;volatile
  7165  04B3  1C03               	skipc
  7166  04B4  2CB6               	goto	u5371
  7167  04B5  2CB7               	goto	u5370
  7168  04B6                     u5371:
  7169  04B6  2D0A               	goto	l3025
  7170  04B7                     u5370:
  7171                           	
  7172  04B7                     l11375:	
  7173  04B7  3000               	movlw	high(038h)
  7174  04B8  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7175  04B9  3038               	movlw	low(038h)
  7176  04BA  1903               	skipnz
  7177  04BB  0236               	subwf	(_adcVal)^080h,w	;volatile
  7178  04BC  1803               	skipnc
  7179  04BD  2CBF               	goto	u5381
  7180  04BE  2CC0               	goto	u5380
  7181  04BF                     u5381:
  7182  04BF  2D0A               	goto	l3025
  7183  04C0                     u5380:
  7184                           	line	69
  7185                           	
  7186  04C0                     l11377:	
  7187                           ;infrared.c: 68: {
  7188                           ;infrared.c: 69: IRdistance = 70 + ((80-70)*(56-adcVal))/(56-43);
  7189  04C0  300D               	movlw	low(0Dh)
  7190  04C1  1283               	bcf	status, 5	;RP0=0, select bank0
  7191  04C2  1303               	bcf	status, 6	;RP1=0, select bank0
  7192  04C3  00A6               	movwf	(?___lwdiv)
  7193  04C4  3000               	movlw	high(0Dh)
  7194  04C5  00A7               	movwf	((?___lwdiv))+1
  7195  04C6  1683               	bsf	status, 5	;RP0=1, select bank1
  7196  04C7  1303               	bcf	status, 6	;RP1=0, select bank1
  7197  04C8  0936               	comf	(_adcVal)^080h,w	;volatile
  7198  04C9  1283               	bcf	status, 5	;RP0=0, select bank0
  7199  04CA  1303               	bcf	status, 6	;RP1=0, select bank0
  7200  04CB  00AE               	movwf	(??_ADCconvert+0)+0
  7201  04CC  1683               	bsf	status, 5	;RP0=1, select bank1
  7202  04CD  1303               	bcf	status, 6	;RP1=0, select bank1
  7203  04CE  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7204  04CF  1283               	bcf	status, 5	;RP0=0, select bank0
  7205  04D0  1303               	bcf	status, 6	;RP1=0, select bank0
  7206  04D1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7207  04D2  0AAE               	incf	(??_ADCconvert+0)+0,f
  7208  04D3  1903               	skipnz
  7209  04D4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7210  04D5  082E               	movf	0+(??_ADCconvert+0)+0,w
  7211  04D6  3E38               	addlw	low(038h)
  7212  04D7  00A0               	movwf	(?___wmul)
  7213  04D8  082F               	movf	1+(??_ADCconvert+0)+0,w
  7214  04D9  1803               	skipnc
  7215  04DA  3E01               	addlw	1
  7216  04DB  3E00               	addlw	high(038h)
  7217  04DC  00A1               	movwf	1+(?___wmul)
  7218  04DD  300A               	movlw	low(0Ah)
  7219  04DE  00A2               	movwf	0+(?___wmul)+02h
  7220  04DF  3000               	movlw	high(0Ah)
  7221  04E0  00A3               	movwf	(0+(?___wmul)+02h)+1
  7222  04E1  160A  118A  259D   	fcall	___wmul
              120A  118A         
  7223  04E6  1283               	bcf	status, 5	;RP0=0, select bank0
  7224  04E7  1303               	bcf	status, 6	;RP1=0, select bank0
  7225  04E8  0821               	movf	(1+(?___wmul)),w
  7226  04E9  01A9               	clrf	1+(?___lwdiv)+02h
  7227  04EA  07A9               	addwf	1+(?___lwdiv)+02h
  7228  04EB  0820               	movf	(0+(?___wmul)),w
  7229  04EC  01A8               	clrf	0+(?___lwdiv)+02h
  7230  04ED  07A8               	addwf	0+(?___lwdiv)+02h
  7231                           
  7232  04EE  120A  158A  2162   	fcall	___lwdiv
              120A  118A         
  7233  04F3  1283               	bcf	status, 5	;RP0=0, select bank0
  7234  04F4  1303               	bcf	status, 6	;RP1=0, select bank0
  7235  04F5  0826               	movf	(0+(?___lwdiv)),w
  7236  04F6  3E46               	addlw	low(046h)
  7237  04F7  1683               	bsf	status, 5	;RP0=1, select bank1
  7238  04F8  1303               	bcf	status, 6	;RP1=0, select bank1
  7239  04F9  00B0               	movwf	(_IRdistance)^080h	;volatile
  7240  04FA  1283               	bcf	status, 5	;RP0=0, select bank0
  7241  04FB  1303               	bcf	status, 6	;RP1=0, select bank0
  7242  04FC  0827               	movf	(1+(?___lwdiv)),w
  7243  04FD  1803               	skipnc
  7244  04FE  3E01               	addlw	1
  7245  04FF  3E00               	addlw	high(046h)
  7246  0500  1683               	bsf	status, 5	;RP0=1, select bank1
  7247  0501  1303               	bcf	status, 6	;RP1=0, select bank1
  7248  0502  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7249  0503  2D0A               	goto	l3025
  7250                           	line	70
  7251                           	
  7252  0504                     l3024:	
  7253  0504  2D0A               	goto	l3025
  7254                           	line	71
  7255                           	
  7256  0505                     l3023:	
  7257  0505  2D0A               	goto	l3025
  7258                           	
  7259  0506                     l3021:	
  7260  0506  2D0A               	goto	l3025
  7261                           	
  7262  0507                     l3019:	
  7263  0507  2D0A               	goto	l3025
  7264                           	
  7265  0508                     l3017:	
  7266  0508  2D0A               	goto	l3025
  7267                           	
  7268  0509                     l3015:	
  7269  0509  2D0A               	goto	l3025
  7270                           	
  7271  050A                     l3013:	
  7272                           	
  7273  050A                     l3025:	
  7274  050A  0008               	return
  7275                           	opt stack 0
  7276                           GLOBAL	__end_of_ADCconvert
  7277  050B                     	__end_of_ADCconvert:
  7278 ;; =============== function _ADCconvert ends ============
  7279                           
  7280                           	signat	_ADCconvert,88
  7281                           	global	_robotTurn
  7282                           psect	text1078,local,class=CODE,delta=2
  7283                           global __ptext1078
  7284  076A                     __ptext1078:
  7285                           
  7286 ;; *************** function _robotTurn *****************
  7287 ;; Defined at:
  7288 ;;		line 136 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  degrees         2    2[BANK0 ] int 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;		None               void
  7295 ;; Registers used:
  7296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7302 ;;      Params:         0       2       0       0       0
  7303 ;;      Locals:         0       0       0       0       0
  7304 ;;      Temps:          0       1       0       0       0
  7305 ;;      Totals:         0       3       0       0       0
  7306 ;;Total ram usage:        3 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    4
  7309 ;; This function calls:
  7310 ;;		_ser_putch
  7311 ;; This function is called by:
  7312 ;;		_main
  7313 ;;		_FollowWall
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           psect	text1078
  7317                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7318                           	line	136
  7319                           	global	__size_of_robotTurn
  7320  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  7321                           	
  7322  076A                     _robotTurn:	
  7323                           	opt	stack 3
  7324                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7325                           	line	139
  7326                           	
  7327  076A                     l11327:	
  7328                           ;robot.c: 139: turnlowByte = (unsigned char) (degrees) ;
  7329  076A  1283               	bcf	status, 5	;RP0=0, select bank0
  7330  076B  1303               	bcf	status, 6	;RP1=0, select bank0
  7331  076C  0822               	movf	(robotTurn@degrees),w
  7332  076D  00A4               	movwf	(??_robotTurn+0)+0
  7333  076E  0824               	movf	(??_robotTurn+0)+0,w
  7334  076F  1683               	bsf	status, 5	;RP0=1, select bank1
  7335  0770  1303               	bcf	status, 6	;RP1=0, select bank1
  7336  0771  00D4               	movwf	(_turnlowByte)^080h
  7337                           	line	140
  7338                           	
  7339  0772                     l11329:	
  7340                           ;robot.c: 140: turnhighByte = (unsigned char) (degrees >> 8);
  7341  0772  1283               	bcf	status, 5	;RP0=0, select bank0
  7342  0773  1303               	bcf	status, 6	;RP1=0, select bank0
  7343  0774  0823               	movf	(robotTurn@degrees+1),w
  7344  0775  00A4               	movwf	(??_robotTurn+0)+0
  7345  0776  0824               	movf	(??_robotTurn+0)+0,w
  7346  0777  1683               	bsf	status, 5	;RP0=1, select bank1
  7347  0778  1303               	bcf	status, 6	;RP1=0, select bank1
  7348  0779  00D3               	movwf	(_turnhighByte)^080h
  7349                           	line	141
  7350                           	
  7351  077A                     l11331:	
  7352                           ;robot.c: 141: if (degrees >= 0)
  7353  077A  1283               	bcf	status, 5	;RP0=0, select bank0
  7354  077B  1303               	bcf	status, 6	;RP1=0, select bank0
  7355  077C  1BA3               	btfsc	(robotTurn@degrees+1),7
  7356  077D  2F7F               	goto	u5241
  7357  077E  2F80               	goto	u5240
  7358  077F                     u5241:
  7359  077F  2F9F               	goto	l11335
  7360  0780                     u5240:
  7361                           	line	143
  7362                           	
  7363  0780                     l11333:	
  7364                           ;robot.c: 142: {
  7365                           ;robot.c: 143: ser_putch(137);
  7366  0780  3089               	movlw	(089h)
  7367  0781  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7368                           	line	145
  7369                           ;robot.c: 145: ser_putch(0);
  7370  0786  3000               	movlw	(0)
  7371  0787  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7372                           	line	147
  7373                           ;robot.c: 147: ser_putch(50);
  7374  078C  3032               	movlw	(032h)
  7375  078D  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7376                           	line	149
  7377                           ;robot.c: 149: ser_putch(0);
  7378  0792  3000               	movlw	(0)
  7379  0793  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7380                           	line	151
  7381                           ;robot.c: 151: ser_putch(1);
  7382  0798  3001               	movlw	(01h)
  7383  0799  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7384                           	line	152
  7385                           ;robot.c: 152: }
  7386  079E  2FBD               	goto	l6060
  7387                           	line	153
  7388                           	
  7389  079F                     l6059:	
  7390                           	line	155
  7391                           	
  7392  079F                     l11335:	
  7393                           ;robot.c: 153: else
  7394                           ;robot.c: 154: {
  7395                           ;robot.c: 155: ser_putch(137);
  7396  079F  3089               	movlw	(089h)
  7397  07A0  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7398                           	line	157
  7399                           ;robot.c: 157: ser_putch(0);
  7400  07A5  3000               	movlw	(0)
  7401  07A6  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7402                           	line	159
  7403                           ;robot.c: 159: ser_putch(50);
  7404  07AB  3032               	movlw	(032h)
  7405  07AC  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7406                           	line	161
  7407                           ;robot.c: 161: ser_putch(255);
  7408  07B1  30FF               	movlw	(0FFh)
  7409  07B2  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7410                           	line	163
  7411                           ;robot.c: 163: ser_putch(255);
  7412  07B7  30FF               	movlw	(0FFh)
  7413  07B8  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7414                           	line	164
  7415                           	
  7416  07BD                     l6060:	
  7417                           	line	165
  7418                           ;robot.c: 164: }
  7419                           ;robot.c: 165: ser_putch(157);
  7420  07BD  309D               	movlw	(09Dh)
  7421  07BE  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7422                           	line	167
  7423                           ;robot.c: 167: ser_putch(turnhighByte);
  7424  07C3  1683               	bsf	status, 5	;RP0=1, select bank1
  7425  07C4  1303               	bcf	status, 6	;RP1=0, select bank1
  7426  07C5  0853               	movf	(_turnhighByte)^080h,w
  7427  07C6  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7428                           	line	169
  7429                           ;robot.c: 169: ser_putch(turnlowByte);
  7430  07CB  1683               	bsf	status, 5	;RP0=1, select bank1
  7431  07CC  1303               	bcf	status, 6	;RP1=0, select bank1
  7432  07CD  0854               	movf	(_turnlowByte)^080h,w
  7433  07CE  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7434                           	line	171
  7435                           ;robot.c: 171: ser_putch(137);
  7436  07D3  3089               	movlw	(089h)
  7437  07D4  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7438                           	line	173
  7439                           ;robot.c: 173: ser_putch(0);
  7440  07D9  3000               	movlw	(0)
  7441  07DA  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7442                           	line	175
  7443                           ;robot.c: 175: ser_putch(0);
  7444  07DF  3000               	movlw	(0)
  7445  07E0  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7446                           	line	177
  7447                           ;robot.c: 177: ser_putch(0);
  7448  07E5  3000               	movlw	(0)
  7449  07E6  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7450                           	line	179
  7451                           ;robot.c: 179: ser_putch(0);
  7452  07EB  3000               	movlw	(0)
  7453  07EC  160A  118A  264D   	fcall	_ser_putch
              120A  118A         
  7454                           	line	180
  7455                           	
  7456  07F1                     l6061:	
  7457  07F1  0008               	return
  7458                           	opt stack 0
  7459                           GLOBAL	__end_of_robotTurn
  7460  07F2                     	__end_of_robotTurn:
  7461 ;; =============== function _robotTurn ends ============
  7462                           
  7463                           	signat	_robotTurn,4216
  7464                           	global	_rotate
  7465                           psect	text1079,local,class=CODE,delta=2
  7466                           global __ptext1079
  7467  09B2                     __ptext1079:
  7468                           
  7469 ;; *************** function _rotate *****************
  7470 ;; Defined at:
  7471 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  numsteps        2    3[BANK0 ] unsigned int 
  7474 ;;  direction       1    5[BANK0 ] unsigned char 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  i               2    8[BANK0 ] unsigned int 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;		None               void
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0, pclath, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7486 ;;      Params:         0       3       0       0       0
  7487 ;;      Locals:         0       2       0       0       0
  7488 ;;      Temps:          0       2       0       0       0
  7489 ;;      Totals:         0       7       0       0       0
  7490 ;;Total ram usage:        7 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    4
  7493 ;; This function calls:
  7494 ;;		_spi_transfer
  7495 ;; This function is called by:
  7496 ;;		_main
  7497 ;;		_calibrateIR
  7498 ;;		_scan360
  7499 ;;		_FollowWall
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           psect	text1079
  7503                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7504                           	line	48
  7505                           	global	__size_of_rotate
  7506  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  7507                           	
  7508  09B2                     _rotate:	
  7509                           	opt	stack 3
  7510                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  7511                           	line	50
  7512                           	
  7513  09B2                     l11299:	
  7514                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  7515  09B2  1283               	bcf	status, 5	;RP0=0, select bank0
  7516  09B3  1303               	bcf	status, 6	;RP1=0, select bank0
  7517  09B4  1407               	bsf	(56/8),(56)&7
  7518  09B5  1487               	bsf	(57/8),(57)&7
  7519                           	line	51
  7520                           	
  7521  09B6                     l11301:	
  7522                           ;steppermotor.c: 51: if (direction == 0)
  7523  09B6  08A5               	movf	(rotate@direction),f
  7524  09B7  1D03               	skipz
  7525  09B8  29BA               	goto	u5221
  7526  09B9  29BB               	goto	u5220
  7527  09BA                     u5221:
  7528  09BA  29C2               	goto	l11305
  7529  09BB                     u5220:
  7530                           	line	52
  7531                           	
  7532  09BB                     l11303:	
  7533                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  7534  09BB  300F               	movlw	(0Fh)
  7535  09BC  160A  118A  2499   	fcall	_spi_transfer
              120A  158A         
  7536  09C1  29C9               	goto	l11307
  7537                           	line	53
  7538                           	
  7539  09C2                     l3726:	
  7540                           	line	54
  7541                           	
  7542  09C2                     l11305:	
  7543                           ;steppermotor.c: 53: else
  7544                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  7545  09C2  300D               	movlw	(0Dh)
  7546  09C3  160A  118A  2499   	fcall	_spi_transfer
              120A  158A         
  7547  09C8  29C9               	goto	l11307
  7548                           	
  7549  09C9                     l3727:	
  7550                           	line	55
  7551                           	
  7552  09C9                     l11307:	
  7553                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  7554  09C9  1283               	bcf	status, 5	;RP0=0, select bank0
  7555  09CA  1303               	bcf	status, 6	;RP1=0, select bank0
  7556  09CB  1007               	bcf	(56/8),(56)&7
  7557                           	
  7558  09CC                     l11309:	
  7559  09CC  1087               	bcf	(57/8),(57)&7
  7560                           	line	56
  7561                           	
  7562  09CD                     l11311:	
  7563                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  7564  09CD  01A8               	clrf	(rotate@i)
  7565  09CE  01A9               	clrf	(rotate@i+1)
  7566  09CF  29E6               	goto	l3728
  7567                           	line	57
  7568                           	
  7569  09D0                     l3729:	
  7570                           	line	58
  7571                           ;steppermotor.c: 57: {
  7572                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  7573  09D0  1507               	bsf	(58/8),(58)&7
  7574  09D1  0000               	nop
  7575  09D2  1283               	bcf	status, 5	;RP0=0, select bank0
  7576  09D3  1303               	bcf	status, 6	;RP1=0, select bank0
  7577  09D4  1107               	bcf	(58/8),(58)&7
  7578                           	line	59
  7579                           	
  7580  09D5                     l11313:	
  7581                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  7582                           	opt asmopt_off
  7583  09D5  3062               movlw	98
  7584  09D6  00A7               movwf	((??_rotate+0)+0+1),f
  7585  09D7  3065               	movlw	101
  7586  09D8  00A6               movwf	((??_rotate+0)+0),f
  7587  09D9                     u6007:
  7588  09D9  0BA6               	decfsz	((??_rotate+0)+0),f
  7589  09DA  29D9               	goto	u6007
  7590  09DB  0BA7               	decfsz	((??_rotate+0)+0+1),f
  7591  09DC  29D9               	goto	u6007
  7592  09DD  29DE               	nop2
  7593                           opt asmopt_on
  7594                           
  7595                           	line	56
  7596  09DE  3001               	movlw	low(01h)
  7597  09DF  1283               	bcf	status, 5	;RP0=0, select bank0
  7598  09E0  1303               	bcf	status, 6	;RP1=0, select bank0
  7599  09E1  07A8               	addwf	(rotate@i),f
  7600  09E2  1803               	skipnc
  7601  09E3  0AA9               	incf	(rotate@i+1),f
  7602  09E4  3000               	movlw	high(01h)
  7603  09E5  07A9               	addwf	(rotate@i+1),f
  7604                           	
  7605  09E6                     l3728:	
  7606  09E6  0824               	movf	(rotate@numsteps+1),w
  7607  09E7  0229               	subwf	(rotate@i+1),w
  7608  09E8  1D03               	skipz
  7609  09E9  29EC               	goto	u5235
  7610  09EA  0823               	movf	(rotate@numsteps),w
  7611  09EB  0228               	subwf	(rotate@i),w
  7612  09EC                     u5235:
  7613  09EC  1C03               	skipc
  7614  09ED  29EF               	goto	u5231
  7615  09EE  29F0               	goto	u5230
  7616  09EF                     u5231:
  7617  09EF  29D0               	goto	l3729
  7618  09F0                     u5230:
  7619                           	
  7620  09F0                     l3730:	
  7621                           	line	61
  7622                           ;steppermotor.c: 60: }
  7623                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  7624  09F0  1407               	bsf	(56/8),(56)&7
  7625  09F1  1487               	bsf	(57/8),(57)&7
  7626                           	line	62
  7627                           	
  7628  09F2                     l11315:	
  7629                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  7630  09F2  3000               	movlw	(0)
  7631  09F3  160A  118A  2499   	fcall	_spi_transfer
              120A  158A         
  7632                           	line	63
  7633                           	
  7634  09F8                     l11317:	
  7635                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  7636  09F8  1283               	bcf	status, 5	;RP0=0, select bank0
  7637  09F9  1303               	bcf	status, 6	;RP1=0, select bank0
  7638  09FA  1007               	bcf	(56/8),(56)&7
  7639                           	
  7640  09FB                     l11319:	
  7641  09FB  1087               	bcf	(57/8),(57)&7
  7642                           	line	64
  7643                           	
  7644  09FC                     l11321:	
  7645                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  7646  09FC  1507               	bsf	(58/8),(58)&7
  7647                           	
  7648  09FD                     l11323:	
  7649  09FD  0000               	nop
  7650                           	
  7651  09FE                     l11325:	
  7652  09FE  1283               	bcf	status, 5	;RP0=0, select bank0
  7653  09FF  1303               	bcf	status, 6	;RP1=0, select bank0
  7654  0A00  1107               	bcf	(58/8),(58)&7
  7655                           	line	65
  7656                           	
  7657  0A01                     l3731:	
  7658  0A01  0008               	return
  7659                           	opt stack 0
  7660                           GLOBAL	__end_of_rotate
  7661  0A02                     	__end_of_rotate:
  7662 ;; =============== function _rotate ends ============
  7663                           
  7664                           	signat	_rotate,8312
  7665                           	global	_robo_init
  7666                           psect	text1080,local,class=CODE,delta=2
  7667                           global __ptext1080
  7668  1506                     __ptext1080:
  7669                           
  7670 ;; *************** function _robo_init *****************
  7671 ;; Defined at:
  7672 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;		None               void
  7679 ;; Registers used:
  7680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7686 ;;      Params:         0       0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0
  7689 ;;      Totals:         0       0       0       0       0
  7690 ;;Total ram usage:        0 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    4
  7693 ;; This function calls:
  7694 ;;		_ser_putch
  7695 ;; This function is called by:
  7696 ;;		_init
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           psect	text1080
  7700                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7701                           	line	10
  7702                           	global	__size_of_robo_init
  7703  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  7704                           	
  7705  1506                     _robo_init:	
  7706                           	opt	stack 2
  7707                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7708                           	line	11
  7709                           	
  7710  1506                     l11297:	
  7711                           ;robot.c: 11: ser_putch(128);
  7712  1506  3080               	movlw	(080h)
  7713  1507  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  7714                           	line	12
  7715                           ;robot.c: 12: ser_putch(132);
  7716  150C  3084               	movlw	(084h)
  7717  150D  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  7718                           	line	13
  7719                           ;robot.c: 13: ser_putch(150);
  7720  1512  3096               	movlw	(096h)
  7721  1513  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  7722                           	line	14
  7723                           ;robot.c: 14: ser_putch(0);
  7724  1518  3000               	movlw	(0)
  7725  1519  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  7726                           	line	15
  7727                           	
  7728  151E                     l6034:	
  7729  151E  0008               	return
  7730                           	opt stack 0
  7731                           GLOBAL	__end_of_robo_init
  7732  151F                     	__end_of_robo_init:
  7733 ;; =============== function _robo_init ends ============
  7734                           
  7735                           	signat	_robo_init,88
  7736                           	global	_lcd_write_data
  7737                           psect	text1081,local,class=CODE,delta=2
  7738                           global __ptext1081
  7739  1473                     __ptext1081:
  7740                           
  7741 ;; *************** function _lcd_write_data *****************
  7742 ;; Defined at:
  7743 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  databyte        1    wreg     unsigned char 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  databyte        1    2[BANK0 ] unsigned char 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;		None               void
  7750 ;; Registers used:
  7751 ;;		wreg
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7757 ;;      Params:         0       0       0       0       0
  7758 ;;      Locals:         0       1       0       0       0
  7759 ;;      Temps:          0       2       0       0       0
  7760 ;;      Totals:         0       3       0       0       0
  7761 ;;Total ram usage:        3 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    3
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_lcd_write_string
  7768 ;;		_lcd_write_2_digit_bcd
  7769 ;;		_lcd_write_3_digit_bcd
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           psect	text1081
  7773                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7774                           	line	30
  7775                           	global	__size_of_lcd_write_data
  7776  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  7777                           	
  7778  1473                     _lcd_write_data:	
  7779                           	opt	stack 1
  7780                           ; Regs used in _lcd_write_data: [wreg]
  7781                           ;lcd_write_data@databyte stored from wreg
  7782  1473  1283               	bcf	status, 5	;RP0=0, select bank0
  7783  1474  1303               	bcf	status, 6	;RP1=0, select bank0
  7784  1475  00A2               	movwf	(lcd_write_data@databyte)
  7785                           	line	31
  7786                           	
  7787  1476                     l11289:	
  7788                           ;lcd.c: 31: RE2 = 0;
  7789  1476  1109               	bcf	(74/8),(74)&7
  7790                           	line	32
  7791                           ;lcd.c: 32: RE1 = 0;
  7792  1477  1089               	bcf	(73/8),(73)&7
  7793                           	line	33
  7794                           ;lcd.c: 33: RE0 = 1;
  7795  1478  1409               	bsf	(72/8),(72)&7
  7796                           	line	34
  7797                           	
  7798  1479                     l11291:	
  7799                           ;lcd.c: 34: PORTD = databyte;
  7800  1479  0822               	movf	(lcd_write_data@databyte),w
  7801  147A  0088               	movwf	(8)	;volatile
  7802                           	line	35
  7803                           	
  7804  147B                     l11293:	
  7805                           ;lcd.c: 35: RE2 = 1;
  7806  147B  1509               	bsf	(74/8),(74)&7
  7807                           	line	36
  7808                           	
  7809  147C                     l11295:	
  7810                           ;lcd.c: 36: RE2 = 0;
  7811  147C  1109               	bcf	(74/8),(74)&7
  7812                           	line	37
  7813                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  7814                           	opt asmopt_off
  7815  147D  3007               movlw	7
  7816  147E  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  7817  147F  307D               	movlw	125
  7818  1480  00A0               movwf	((??_lcd_write_data+0)+0),f
  7819  1481                     u6017:
  7820  1481  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  7821  1482  2C81               	goto	u6017
  7822  1483  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  7823  1484  2C81               	goto	u6017
  7824                           opt asmopt_on
  7825                           
  7826                           	line	38
  7827                           	
  7828  1485                     l1402:	
  7829  1485  0008               	return
  7830                           	opt stack 0
  7831                           GLOBAL	__end_of_lcd_write_data
  7832  1486                     	__end_of_lcd_write_data:
  7833 ;; =============== function _lcd_write_data ends ============
  7834                           
  7835                           	signat	_lcd_write_data,4216
  7836                           	global	_lcd_write_control
  7837                           psect	text1082,local,class=CODE,delta=2
  7838                           global __ptext1082
  7839  14AD                     __ptext1082:
  7840                           
  7841 ;; *************** function _lcd_write_control *****************
  7842 ;; Defined at:
  7843 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  databyte        1    wreg     unsigned char 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  databyte        1    2[BANK0 ] unsigned char 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;		None               void
  7850 ;; Registers used:
  7851 ;;		wreg
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7857 ;;      Params:         0       0       0       0       0
  7858 ;;      Locals:         0       1       0       0       0
  7859 ;;      Temps:          0       2       0       0       0
  7860 ;;      Totals:         0       3       0       0       0
  7861 ;;Total ram usage:        3 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    3
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		_lcd_set_cursor
  7868 ;;		_lcd_init
  7869 ;;		_UpdateDisplay
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           psect	text1082
  7873                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7874                           	line	18
  7875                           	global	__size_of_lcd_write_control
  7876  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  7877                           	
  7878  14AD                     _lcd_write_control:	
  7879                           	opt	stack 1
  7880                           ; Regs used in _lcd_write_control: [wreg]
  7881                           ;lcd_write_control@databyte stored from wreg
  7882  14AD  1283               	bcf	status, 5	;RP0=0, select bank0
  7883  14AE  1303               	bcf	status, 6	;RP1=0, select bank0
  7884  14AF  00A2               	movwf	(lcd_write_control@databyte)
  7885                           	line	19
  7886                           	
  7887  14B0                     l11281:	
  7888                           ;lcd.c: 19: RE2 = 0;
  7889  14B0  1109               	bcf	(74/8),(74)&7
  7890                           	line	20
  7891                           ;lcd.c: 20: RE1 = 0;
  7892  14B1  1089               	bcf	(73/8),(73)&7
  7893                           	line	21
  7894                           ;lcd.c: 21: RE0 = 0;
  7895  14B2  1009               	bcf	(72/8),(72)&7
  7896                           	line	22
  7897                           	
  7898  14B3                     l11283:	
  7899                           ;lcd.c: 22: PORTD = databyte;
  7900  14B3  0822               	movf	(lcd_write_control@databyte),w
  7901  14B4  0088               	movwf	(8)	;volatile
  7902                           	line	23
  7903                           	
  7904  14B5                     l11285:	
  7905                           ;lcd.c: 23: RE2 = 1;
  7906  14B5  1509               	bsf	(74/8),(74)&7
  7907                           	line	24
  7908                           	
  7909  14B6                     l11287:	
  7910                           ;lcd.c: 24: RE2 = 0;
  7911  14B6  1109               	bcf	(74/8),(74)&7
  7912                           	line	25
  7913                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  7914                           	opt asmopt_off
  7915  14B7  300D               movlw	13
  7916  14B8  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  7917  14B9  30FB               	movlw	251
  7918  14BA  00A0               movwf	((??_lcd_write_control+0)+0),f
  7919  14BB                     u6027:
  7920  14BB  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  7921  14BC  2CBB               	goto	u6027
  7922  14BD  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  7923  14BE  2CBB               	goto	u6027
  7924  14BF  2CC0               	nop2
  7925                           opt asmopt_on
  7926                           
  7927                           	line	26
  7928                           	
  7929  14C0                     l1399:	
  7930  14C0  0008               	return
  7931                           	opt stack 0
  7932                           GLOBAL	__end_of_lcd_write_control
  7933  14C1                     	__end_of_lcd_write_control:
  7934 ;; =============== function _lcd_write_control ends ============
  7935                           
  7936                           	signat	_lcd_write_control,4216
  7937                           	global	_init_adc
  7938                           psect	text1083,local,class=CODE,delta=2
  7939                           global __ptext1083
  7940  14C1                     __ptext1083:
  7941                           
  7942 ;; *************** function _init_adc *****************
  7943 ;; Defined at:
  7944 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;		None
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;		None               void
  7951 ;; Registers used:
  7952 ;;		wreg, status,2
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7958 ;;      Params:         0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0
  7960 ;;      Temps:          0       1       0       0       0
  7961 ;;      Totals:         0       1       0       0       0
  7962 ;;Total ram usage:        1 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    3
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_init
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           psect	text1083
  7972                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7973                           	line	46
  7974                           	global	__size_of_init_adc
  7975  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  7976                           	
  7977  14C1                     _init_adc:	
  7978                           	opt	stack 3
  7979                           ; Regs used in _init_adc: [wreg+status,2]
  7980                           	line	48
  7981                           	
  7982  14C1                     l11271:	
  7983                           ;adc.c: 48: PORTA = 0;
  7984  14C1  1283               	bcf	status, 5	;RP0=0, select bank0
  7985  14C2  1303               	bcf	status, 6	;RP1=0, select bank0
  7986  14C3  0185               	clrf	(5)	;volatile
  7987                           	line	49
  7988                           	
  7989  14C4                     l11273:	
  7990                           ;adc.c: 49: TRISA = 0b00111111;
  7991  14C4  303F               	movlw	(03Fh)
  7992  14C5  1683               	bsf	status, 5	;RP0=1, select bank1
  7993  14C6  1303               	bcf	status, 6	;RP1=0, select bank1
  7994  14C7  0085               	movwf	(133)^080h	;volatile
  7995                           	line	52
  7996                           	
  7997  14C8                     l11275:	
  7998                           ;adc.c: 52: ADCON0 = 0b10100001;
  7999  14C8  30A1               	movlw	(0A1h)
  8000  14C9  1283               	bcf	status, 5	;RP0=0, select bank0
  8001  14CA  1303               	bcf	status, 6	;RP1=0, select bank0
  8002  14CB  009F               	movwf	(31)	;volatile
  8003                           	line	53
  8004                           	
  8005  14CC                     l11277:	
  8006                           ;adc.c: 53: ADCON1 = 0b0000010;
  8007  14CC  3002               	movlw	(02h)
  8008  14CD  1683               	bsf	status, 5	;RP0=1, select bank1
  8009  14CE  1303               	bcf	status, 6	;RP1=0, select bank1
  8010  14CF  009F               	movwf	(159)^080h	;volatile
  8011                           	line	55
  8012                           	
  8013  14D0                     l11279:	
  8014                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8015                           	opt asmopt_off
  8016  14D0  3053               movlw	83
  8017  14D1  1283               	bcf	status, 5	;RP0=0, select bank0
  8018  14D2  1303               	bcf	status, 6	;RP1=0, select bank0
  8019  14D3  00A0               movwf	(??_init_adc+0)+0,f
  8020  14D4                     u6037:
  8021  14D4  0BA0               decfsz	(??_init_adc+0)+0,f
  8022  14D5  2CD4               	goto	u6037
  8023                           opt asmopt_on
  8024                           
  8025                           	line	57
  8026                           	
  8027  14D6                     l700:	
  8028  14D6  0008               	return
  8029                           	opt stack 0
  8030                           GLOBAL	__end_of_init_adc
  8031  14D7                     	__end_of_init_adc:
  8032 ;; =============== function _init_adc ends ============
  8033                           
  8034                           	signat	_init_adc,88
  8035                           	global	_adc_read_channel
  8036                           psect	text1084,local,class=CODE,delta=2
  8037                           global __ptext1084
  8038  173B                     __ptext1084:
  8039                           
  8040 ;; *************** function _adc_read_channel *****************
  8041 ;; Defined at:
  8042 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  channel         1    wreg     unsigned char 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  channel         1    7[BANK0 ] unsigned char 
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      unsigned char 
  8049 ;; Registers used:
  8050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8056 ;;      Params:         0       0       0       0       0
  8057 ;;      Locals:         0       1       0       0       0
  8058 ;;      Temps:          0       1       0       0       0
  8059 ;;      Totals:         0       2       0       0       0
  8060 ;;Total ram usage:        2 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    4
  8063 ;; This function calls:
  8064 ;;		_adc_read
  8065 ;; This function is called by:
  8066 ;;		_readDistance
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           psect	text1084
  8070                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8071                           	line	5
  8072                           	global	__size_of_adc_read_channel
  8073  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  8074                           	
  8075  173B                     _adc_read_channel:	
  8076                           	opt	stack 0
  8077                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8078                           ;adc_read_channel@channel stored from wreg
  8079  173B  1283               	bcf	status, 5	;RP0=0, select bank0
  8080  173C  1303               	bcf	status, 6	;RP1=0, select bank0
  8081  173D  00A7               	movwf	(adc_read_channel@channel)
  8082                           	line	6
  8083                           	
  8084  173E                     l11255:	
  8085                           ;adc.c: 6: switch(channel)
  8086  173E  2F57               	goto	l11263
  8087                           	line	8
  8088                           ;adc.c: 7: {
  8089                           ;adc.c: 8: case 0:
  8090                           	
  8091  173F                     l690:	
  8092                           	line	9
  8093                           ;adc.c: 9: CHS0 = 0;
  8094  173F  119F               	bcf	(251/8),(251)&7
  8095                           	line	10
  8096                           ;adc.c: 10: CHS1 = 0;
  8097  1740  121F               	bcf	(252/8),(252)&7
  8098                           	line	11
  8099                           ;adc.c: 11: CHS2 = 0;
  8100  1741  129F               	bcf	(253/8),(253)&7
  8101                           	line	12
  8102                           ;adc.c: 12: break;
  8103  1742  2F68               	goto	l11265
  8104                           	line	13
  8105                           ;adc.c: 13: case 1:
  8106                           	
  8107  1743                     l692:	
  8108                           	line	14
  8109                           ;adc.c: 14: CHS0 = 1;
  8110  1743  159F               	bsf	(251/8),(251)&7
  8111                           	line	15
  8112                           ;adc.c: 15: CHS1 = 0;
  8113  1744  121F               	bcf	(252/8),(252)&7
  8114                           	line	16
  8115                           ;adc.c: 16: CHS2 = 0;
  8116  1745  129F               	bcf	(253/8),(253)&7
  8117                           	line	17
  8118                           ;adc.c: 17: break;
  8119  1746  2F68               	goto	l11265
  8120                           	line	18
  8121                           ;adc.c: 18: case 2:
  8122                           	
  8123  1747                     l693:	
  8124                           	line	19
  8125                           ;adc.c: 19: CHS0 = 0;
  8126  1747  119F               	bcf	(251/8),(251)&7
  8127                           	line	20
  8128                           ;adc.c: 20: CHS1 = 1;
  8129  1748  161F               	bsf	(252/8),(252)&7
  8130                           	line	21
  8131                           ;adc.c: 21: CHS2 = 0;
  8132  1749  129F               	bcf	(253/8),(253)&7
  8133                           	line	22
  8134                           ;adc.c: 22: break;
  8135  174A  2F68               	goto	l11265
  8136                           	line	23
  8137                           ;adc.c: 23: case 3:
  8138                           	
  8139  174B                     l694:	
  8140                           	line	24
  8141                           ;adc.c: 24: CHS0 = 1;
  8142  174B  159F               	bsf	(251/8),(251)&7
  8143                           	line	25
  8144                           ;adc.c: 25: CHS1 = 1;
  8145  174C  161F               	bsf	(252/8),(252)&7
  8146                           	line	26
  8147                           ;adc.c: 26: CHS2 = 0;
  8148  174D  129F               	bcf	(253/8),(253)&7
  8149                           	line	27
  8150                           ;adc.c: 27: break;
  8151  174E  2F68               	goto	l11265
  8152                           	line	28
  8153                           ;adc.c: 28: case 4:
  8154                           	
  8155  174F                     l695:	
  8156                           	line	29
  8157                           ;adc.c: 29: CHS0 = 0;
  8158  174F  119F               	bcf	(251/8),(251)&7
  8159                           	line	30
  8160                           ;adc.c: 30: CHS1 = 0;
  8161  1750  121F               	bcf	(252/8),(252)&7
  8162                           	line	31
  8163                           ;adc.c: 31: CHS2 = 1;
  8164  1751  169F               	bsf	(253/8),(253)&7
  8165                           	line	32
  8166                           ;adc.c: 32: break;
  8167  1752  2F68               	goto	l11265
  8168                           	line	35
  8169                           ;adc.c: 35: default:
  8170                           	
  8171  1753                     l696:	
  8172                           	line	36
  8173                           	
  8174  1753                     l11257:	
  8175                           ;adc.c: 36: return 0;
  8176  1753  3000               	movlw	(0)
  8177  1754  2F75               	goto	l697
  8178                           	
  8179  1755                     l11259:	
  8180  1755  2F75               	goto	l697
  8181                           	line	37
  8182                           	
  8183  1756                     l11261:	
  8184                           ;adc.c: 37: }
  8185  1756  2F68               	goto	l11265
  8186                           	line	6
  8187                           	
  8188  1757                     l689:	
  8189                           	
  8190  1757                     l11263:	
  8191  1757  0827               	movf	(adc_read_channel@channel),w
  8192                           	; Switch size 1, requested type "space"
  8193                           ; Number of cases is 5, Range of values is 0 to 4
  8194                           ; switch strategies available:
  8195                           ; Name         Instructions Cycles
  8196                           ; simple_byte           16     9 (average)
  8197                           ; direct_byte           23     8 (fixed)
  8198                           ; jumptable            260     6 (fixed)
  8199                           ; rangetable             9     6 (fixed)
  8200                           ; spacedrange           16     9 (fixed)
  8201                           ; locatedrange           5     3 (fixed)
  8202                           ;	Chosen strategy is simple_byte
  8203                           
  8204                           	opt asmopt_off
  8205  1758  3A00               	xorlw	0^0	; case 0
  8206  1759  1903               	skipnz
  8207  175A  2F3F               	goto	l690
  8208  175B  3A01               	xorlw	1^0	; case 1
  8209  175C  1903               	skipnz
  8210  175D  2F43               	goto	l692
  8211  175E  3A03               	xorlw	2^1	; case 2
  8212  175F  1903               	skipnz
  8213  1760  2F47               	goto	l693
  8214  1761  3A01               	xorlw	3^2	; case 3
  8215  1762  1903               	skipnz
  8216  1763  2F4B               	goto	l694
  8217  1764  3A07               	xorlw	4^3	; case 4
  8218  1765  1903               	skipnz
  8219  1766  2F4F               	goto	l695
  8220  1767  2F53               	goto	l11257
  8221                           	opt asmopt_on
  8222                           
  8223                           	line	37
  8224                           	
  8225  1768                     l691:	
  8226                           	line	39
  8227                           	
  8228  1768                     l11265:	
  8229                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8230                           	opt asmopt_off
  8231  1768  3053               movlw	83
  8232  1769  00A6               movwf	(??_adc_read_channel+0)+0,f
  8233  176A                     u6047:
  8234  176A  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  8235  176B  2F6A               	goto	u6047
  8236                           opt asmopt_on
  8237                           
  8238                           	line	41
  8239                           	
  8240  176C                     l11267:	
  8241                           ;adc.c: 41: return adc_read();
  8242  176C  160A  118A  251F   	fcall	_adc_read
              160A  118A         
  8243  1771  1283               	bcf	status, 5	;RP0=0, select bank0
  8244  1772  1303               	bcf	status, 6	;RP1=0, select bank0
  8245  1773  0820               	movf	(0+(?_adc_read)),w
  8246  1774  2F75               	goto	l697
  8247                           	
  8248  1775                     l11269:	
  8249                           	line	43
  8250                           	
  8251  1775                     l697:	
  8252  1775  0008               	return
  8253                           	opt stack 0
  8254                           GLOBAL	__end_of_adc_read_channel
  8255  1776                     	__end_of_adc_read_channel:
  8256 ;; =============== function _adc_read_channel ends ============
  8257                           
  8258                           	signat	_adc_read_channel,4217
  8259                           	global	___awmod
  8260                           psect	text1085,local,class=CODE,delta=2
  8261                           global __ptext1085
  8262  0AB3                     __ptext1085:
  8263                           
  8264 ;; *************** function ___awmod *****************
  8265 ;; Defined at:
  8266 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  divisor         2    0[BANK0 ] int 
  8269 ;;  dividend        2    2[BANK0 ] int 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  sign            1    6[BANK0 ] unsigned char 
  8272 ;;  counter         1    5[BANK0 ] unsigned char 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  2    0[BANK0 ] int 
  8275 ;; Registers used:
  8276 ;;		wreg, status,2, status,0
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8282 ;;      Params:         0       4       0       0       0
  8283 ;;      Locals:         0       2       0       0       0
  8284 ;;      Temps:          0       1       0       0       0
  8285 ;;      Totals:         0       7       0       0       0
  8286 ;;Total ram usage:        7 bytes
  8287 ;; Hardware stack levels used:    1
  8288 ;; Hardware stack levels required when called:    3
  8289 ;; This function calls:
  8290 ;;		Nothing
  8291 ;; This function is called by:
  8292 ;;		_UpdateDisplay
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           psect	text1085
  8296                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8297                           	line	5
  8298                           	global	__size_of___awmod
  8299  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  8300                           	
  8301  0AB3                     ___awmod:	
  8302                           	opt	stack 2
  8303                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8304                           	line	8
  8305                           	
  8306  0AB3                     l11153:	
  8307  0AB3  1283               	bcf	status, 5	;RP0=0, select bank0
  8308  0AB4  1303               	bcf	status, 6	;RP1=0, select bank0
  8309  0AB5  01A6               	clrf	(___awmod@sign)
  8310                           	line	9
  8311  0AB6  1FA3               	btfss	(___awmod@dividend+1),7
  8312  0AB7  2AB9               	goto	u5011
  8313  0AB8  2ABA               	goto	u5010
  8314  0AB9                     u5011:
  8315  0AB9  2AC3               	goto	l11157
  8316  0ABA                     u5010:
  8317                           	line	10
  8318                           	
  8319  0ABA                     l11155:	
  8320  0ABA  09A2               	comf	(___awmod@dividend),f
  8321  0ABB  09A3               	comf	(___awmod@dividend+1),f
  8322  0ABC  0AA2               	incf	(___awmod@dividend),f
  8323  0ABD  1903               	skipnz
  8324  0ABE  0AA3               	incf	(___awmod@dividend+1),f
  8325                           	line	11
  8326  0ABF  01A6               	clrf	(___awmod@sign)
  8327  0AC0  1403               	bsf	status,0
  8328  0AC1  0DA6               	rlf	(___awmod@sign),f
  8329  0AC2  2AC3               	goto	l11157
  8330                           	line	12
  8331                           	
  8332  0AC3                     l7717:	
  8333                           	line	13
  8334                           	
  8335  0AC3                     l11157:	
  8336  0AC3  1FA1               	btfss	(___awmod@divisor+1),7
  8337  0AC4  2AC6               	goto	u5021
  8338  0AC5  2AC7               	goto	u5020
  8339  0AC6                     u5021:
  8340  0AC6  2ACD               	goto	l11161
  8341  0AC7                     u5020:
  8342                           	line	14
  8343                           	
  8344  0AC7                     l11159:	
  8345  0AC7  09A0               	comf	(___awmod@divisor),f
  8346  0AC8  09A1               	comf	(___awmod@divisor+1),f
  8347  0AC9  0AA0               	incf	(___awmod@divisor),f
  8348  0ACA  1903               	skipnz
  8349  0ACB  0AA1               	incf	(___awmod@divisor+1),f
  8350  0ACC  2ACD               	goto	l11161
  8351                           	
  8352  0ACD                     l7718:	
  8353                           	line	15
  8354                           	
  8355  0ACD                     l11161:	
  8356  0ACD  0821               	movf	(___awmod@divisor+1),w
  8357  0ACE  0420               	iorwf	(___awmod@divisor),w
  8358  0ACF  1903               	skipnz
  8359  0AD0  2AD2               	goto	u5031
  8360  0AD1  2AD3               	goto	u5030
  8361  0AD2                     u5031:
  8362  0AD2  2B09               	goto	l11179
  8363  0AD3                     u5030:
  8364                           	line	16
  8365                           	
  8366  0AD3                     l11163:	
  8367  0AD3  01A5               	clrf	(___awmod@counter)
  8368  0AD4  1403               	bsf	status,0
  8369  0AD5  0DA5               	rlf	(___awmod@counter),f
  8370                           	line	17
  8371  0AD6  2AE3               	goto	l11169
  8372                           	
  8373  0AD7                     l7721:	
  8374                           	line	18
  8375                           	
  8376  0AD7                     l11165:	
  8377  0AD7  3001               	movlw	01h
  8378                           	
  8379  0AD8                     u5045:
  8380  0AD8  1003               	clrc
  8381  0AD9  0DA0               	rlf	(___awmod@divisor),f
  8382  0ADA  0DA1               	rlf	(___awmod@divisor+1),f
  8383  0ADB  3EFF               	addlw	-1
  8384  0ADC  1D03               	skipz
  8385  0ADD  2AD8               	goto	u5045
  8386                           	line	19
  8387                           	
  8388  0ADE                     l11167:	
  8389  0ADE  3001               	movlw	(01h)
  8390  0ADF  00A4               	movwf	(??___awmod+0)+0
  8391  0AE0  0824               	movf	(??___awmod+0)+0,w
  8392  0AE1  07A5               	addwf	(___awmod@counter),f
  8393  0AE2  2AE3               	goto	l11169
  8394                           	line	20
  8395                           	
  8396  0AE3                     l7720:	
  8397                           	line	17
  8398                           	
  8399  0AE3                     l11169:	
  8400  0AE3  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  8401  0AE4  2AE6               	goto	u5051
  8402  0AE5  2AE7               	goto	u5050
  8403  0AE6                     u5051:
  8404  0AE6  2AD7               	goto	l11165
  8405  0AE7                     u5050:
  8406  0AE7  2AE9               	goto	l11171
  8407                           	
  8408  0AE8                     l7722:	
  8409  0AE8  2AE9               	goto	l11171
  8410                           	line	21
  8411                           	
  8412  0AE9                     l7723:	
  8413                           	line	22
  8414                           	
  8415  0AE9                     l11171:	
  8416  0AE9  0821               	movf	(___awmod@divisor+1),w
  8417  0AEA  0223               	subwf	(___awmod@dividend+1),w
  8418  0AEB  1D03               	skipz
  8419  0AEC  2AEF               	goto	u5065
  8420  0AED  0820               	movf	(___awmod@divisor),w
  8421  0AEE  0222               	subwf	(___awmod@dividend),w
  8422  0AEF                     u5065:
  8423  0AEF  1C03               	skipc
  8424  0AF0  2AF2               	goto	u5061
  8425  0AF1  2AF3               	goto	u5060
  8426  0AF2                     u5061:
  8427  0AF2  2AFA               	goto	l11175
  8428  0AF3                     u5060:
  8429                           	line	23
  8430                           	
  8431  0AF3                     l11173:	
  8432  0AF3  0820               	movf	(___awmod@divisor),w
  8433  0AF4  02A2               	subwf	(___awmod@dividend),f
  8434  0AF5  0821               	movf	(___awmod@divisor+1),w
  8435  0AF6  1C03               	skipc
  8436  0AF7  03A3               	decf	(___awmod@dividend+1),f
  8437  0AF8  02A3               	subwf	(___awmod@dividend+1),f
  8438  0AF9  2AFA               	goto	l11175
  8439                           	
  8440  0AFA                     l7724:	
  8441                           	line	24
  8442                           	
  8443  0AFA                     l11175:	
  8444  0AFA  3001               	movlw	01h
  8445                           	
  8446  0AFB                     u5075:
  8447  0AFB  1003               	clrc
  8448  0AFC  0CA1               	rrf	(___awmod@divisor+1),f
  8449  0AFD  0CA0               	rrf	(___awmod@divisor),f
  8450  0AFE  3EFF               	addlw	-1
  8451  0AFF  1D03               	skipz
  8452  0B00  2AFB               	goto	u5075
  8453                           	line	25
  8454                           	
  8455  0B01                     l11177:	
  8456  0B01  3001               	movlw	low(01h)
  8457  0B02  02A5               	subwf	(___awmod@counter),f
  8458  0B03  1D03               	btfss	status,2
  8459  0B04  2B06               	goto	u5081
  8460  0B05  2B07               	goto	u5080
  8461  0B06                     u5081:
  8462  0B06  2AE9               	goto	l11171
  8463  0B07                     u5080:
  8464  0B07  2B09               	goto	l11179
  8465                           	
  8466  0B08                     l7725:	
  8467  0B08  2B09               	goto	l11179
  8468                           	line	26
  8469                           	
  8470  0B09                     l7719:	
  8471                           	line	27
  8472                           	
  8473  0B09                     l11179:	
  8474  0B09  0826               	movf	(___awmod@sign),w
  8475  0B0A  1D03               	skipz
  8476  0B0B  2B0D               	goto	u5090
  8477  0B0C  2B13               	goto	l11183
  8478  0B0D                     u5090:
  8479                           	line	28
  8480                           	
  8481  0B0D                     l11181:	
  8482  0B0D  09A2               	comf	(___awmod@dividend),f
  8483  0B0E  09A3               	comf	(___awmod@dividend+1),f
  8484  0B0F  0AA2               	incf	(___awmod@dividend),f
  8485  0B10  1903               	skipnz
  8486  0B11  0AA3               	incf	(___awmod@dividend+1),f
  8487  0B12  2B13               	goto	l11183
  8488                           	
  8489  0B13                     l7726:	
  8490                           	line	29
  8491                           	
  8492  0B13                     l11183:	
  8493  0B13  0823               	movf	(___awmod@dividend+1),w
  8494  0B14  01A1               	clrf	(?___awmod+1)
  8495  0B15  07A1               	addwf	(?___awmod+1)
  8496  0B16  0822               	movf	(___awmod@dividend),w
  8497  0B17  01A0               	clrf	(?___awmod)
  8498  0B18  07A0               	addwf	(?___awmod)
  8499                           
  8500  0B19  2B1A               	goto	l7727
  8501                           	
  8502  0B1A                     l11185:	
  8503                           	line	30
  8504                           	
  8505  0B1A                     l7727:	
  8506  0B1A  0008               	return
  8507                           	opt stack 0
  8508                           GLOBAL	__end_of___awmod
  8509  0B1B                     	__end_of___awmod:
  8510 ;; =============== function ___awmod ends ============
  8511                           
  8512                           	signat	___awmod,8314
  8513                           	global	___fttol
  8514                           psect	text1086,local,class=CODE,delta=2
  8515                           global __ptext1086
  8516  0DC5                     __ptext1086:
  8517                           
  8518 ;; *************** function ___fttol *****************
  8519 ;; Defined at:
  8520 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  f1              3    8[BANK0 ] float 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  lval            4   17[BANK0 ] unsigned long 
  8525 ;;  exp1            1   21[BANK0 ] unsigned char 
  8526 ;;  sign1           1   16[BANK0 ] unsigned char 
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  4    8[BANK0 ] long 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8536 ;;      Params:         0       4       0       0       0
  8537 ;;      Locals:         0       6       0       0       0
  8538 ;;      Temps:          0       4       0       0       0
  8539 ;;      Totals:         0      14       0       0       0
  8540 ;;Total ram usage:       14 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; Hardware stack levels required when called:    3
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_main
  8547 ;;		_FollowWall
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           psect	text1086
  8551                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8552                           	line	45
  8553                           	global	__size_of___fttol
  8554  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  8555                           	
  8556  0DC5                     ___fttol:	
  8557                           	opt	stack 4
  8558                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8559                           	line	49
  8560                           	
  8561  0DC5                     l11097:	
  8562  0DC5  1283               	bcf	status, 5	;RP0=0, select bank0
  8563  0DC6  1303               	bcf	status, 6	;RP1=0, select bank0
  8564  0DC7  0828               	movf	(___fttol@f1),w
  8565  0DC8  00AC               	movwf	((??___fttol+0)+0)
  8566  0DC9  0829               	movf	(___fttol@f1+1),w
  8567  0DCA  00AD               	movwf	((??___fttol+0)+0+1)
  8568  0DCB  082A               	movf	(___fttol@f1+2),w
  8569  0DCC  00AE               	movwf	((??___fttol+0)+0+2)
  8570  0DCD  1003               	clrc
  8571  0DCE  0D2D               	rlf	(??___fttol+0)+1,w
  8572  0DCF  0D2E               	rlf	(??___fttol+0)+2,w
  8573  0DD0  00AF               	movwf	(??___fttol+3)+0
  8574  0DD1  082F               	movf	(??___fttol+3)+0,w
  8575  0DD2  00B5               	movwf	(___fttol@exp1)
  8576  0DD3  08B5               	movf	((___fttol@exp1)),f
  8577  0DD4  1D03               	skipz
  8578  0DD5  2DD7               	goto	u4901
  8579  0DD6  2DD8               	goto	u4900
  8580  0DD7                     u4901:
  8581  0DD7  2DE2               	goto	l11103
  8582  0DD8                     u4900:
  8583                           	line	50
  8584                           	
  8585  0DD8                     l11099:	
  8586  0DD8  3000               	movlw	0
  8587  0DD9  00AB               	movwf	(?___fttol+3)
  8588  0DDA  3000               	movlw	0
  8589  0DDB  00AA               	movwf	(?___fttol+2)
  8590  0DDC  3000               	movlw	0
  8591  0DDD  00A9               	movwf	(?___fttol+1)
  8592  0DDE  3000               	movlw	0
  8593  0DDF  00A8               	movwf	(?___fttol)
  8594                           
  8595  0DE0  2E6A               	goto	l7619
  8596                           	
  8597  0DE1                     l11101:	
  8598  0DE1  2E6A               	goto	l7619
  8599                           	
  8600  0DE2                     l7618:	
  8601                           	line	51
  8602                           	
  8603  0DE2                     l11103:	
  8604  0DE2  0828               	movf	(___fttol@f1),w
  8605  0DE3  00AC               	movwf	((??___fttol+0)+0)
  8606  0DE4  0829               	movf	(___fttol@f1+1),w
  8607  0DE5  00AD               	movwf	((??___fttol+0)+0+1)
  8608  0DE6  082A               	movf	(___fttol@f1+2),w
  8609  0DE7  00AE               	movwf	((??___fttol+0)+0+2)
  8610  0DE8  3017               	movlw	017h
  8611  0DE9                     u4915:
  8612  0DE9  1003               	clrc
  8613  0DEA  0CAE               	rrf	(??___fttol+0)+2,f
  8614  0DEB  0CAD               	rrf	(??___fttol+0)+1,f
  8615  0DEC  0CAC               	rrf	(??___fttol+0)+0,f
  8616  0DED                     u4910:
  8617  0DED  3EFF               	addlw	-1
  8618  0DEE  1D03               	skipz
  8619  0DEF  2DE9               	goto	u4915
  8620  0DF0  082C               	movf	0+(??___fttol+0)+0,w
  8621  0DF1  00AF               	movwf	(??___fttol+3)+0
  8622  0DF2  082F               	movf	(??___fttol+3)+0,w
  8623  0DF3  00B0               	movwf	(___fttol@sign1)
  8624                           	line	52
  8625                           	
  8626  0DF4                     l11105:	
  8627  0DF4  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
  8628                           	line	53
  8629                           	
  8630  0DF5                     l11107:	
  8631  0DF5  30FF               	movlw	0FFh
  8632  0DF6  05A8               	andwf	(___fttol@f1),f
  8633  0DF7  30FF               	movlw	0FFh
  8634  0DF8  05A9               	andwf	(___fttol@f1+1),f
  8635  0DF9  3000               	movlw	0
  8636  0DFA  05AA               	andwf	(___fttol@f1+2),f
  8637                           	line	54
  8638                           	
  8639  0DFB                     l11109:	
  8640  0DFB  0828               	movf	(___fttol@f1),w
  8641  0DFC  00B1               	movwf	(___fttol@lval)
  8642  0DFD  0829               	movf	(___fttol@f1+1),w
  8643  0DFE  00B2               	movwf	((___fttol@lval))+1
  8644  0DFF  082A               	movf	(___fttol@f1+2),w
  8645  0E00  00B3               	movwf	((___fttol@lval))+2
  8646  0E01  01B4               	clrf	((___fttol@lval))+3
  8647                           	line	55
  8648                           	
  8649  0E02                     l11111:	
  8650  0E02  308E               	movlw	low(08Eh)
  8651  0E03  02B5               	subwf	(___fttol@exp1),f
  8652                           	line	56
  8653                           	
  8654  0E04                     l11113:	
  8655  0E04  1FB5               	btfss	(___fttol@exp1),7
  8656  0E05  2E07               	goto	u4921
  8657  0E06  2E08               	goto	u4920
  8658  0E07                     u4921:
  8659  0E07  2E2D               	goto	l11123
  8660  0E08                     u4920:
  8661                           	line	57
  8662                           	
  8663  0E08                     l11115:	
  8664  0E08  0835               	movf	(___fttol@exp1),w
  8665  0E09  3A80               	xorlw	80h
  8666  0E0A  3E8F               	addlw	-((-15)^80h)
  8667  0E0B  1803               	skipnc
  8668  0E0C  2E0E               	goto	u4931
  8669  0E0D  2E0F               	goto	u4930
  8670  0E0E                     u4931:
  8671  0E0E  2E1A               	goto	l11121
  8672  0E0F                     u4930:
  8673                           	line	58
  8674                           	
  8675  0E0F                     l11117:	
  8676  0E0F  3000               	movlw	0
  8677  0E10  00AB               	movwf	(?___fttol+3)
  8678  0E11  3000               	movlw	0
  8679  0E12  00AA               	movwf	(?___fttol+2)
  8680  0E13  3000               	movlw	0
  8681  0E14  00A9               	movwf	(?___fttol+1)
  8682  0E15  3000               	movlw	0
  8683  0E16  00A8               	movwf	(?___fttol)
  8684                           
  8685  0E17  2E6A               	goto	l7619
  8686                           	
  8687  0E18                     l11119:	
  8688  0E18  2E6A               	goto	l7619
  8689                           	
  8690  0E19                     l7621:	
  8691  0E19  2E1A               	goto	l11121
  8692                           	line	59
  8693                           	
  8694  0E1A                     l7622:	
  8695                           	line	60
  8696                           	
  8697  0E1A                     l11121:	
  8698  0E1A  3001               	movlw	01h
  8699  0E1B                     u4945:
  8700  0E1B  1003               	clrc
  8701  0E1C  0CB4               	rrf	(___fttol@lval+3),f
  8702  0E1D  0CB3               	rrf	(___fttol@lval+2),f
  8703  0E1E  0CB2               	rrf	(___fttol@lval+1),f
  8704  0E1F  0CB1               	rrf	(___fttol@lval),f
  8705  0E20  3EFF               	addlw	-1
  8706  0E21  1D03               	skipz
  8707  0E22  2E1B               	goto	u4945
  8708                           
  8709                           	line	61
  8710  0E23  3001               	movlw	(01h)
  8711  0E24  00AC               	movwf	(??___fttol+0)+0
  8712  0E25  082C               	movf	(??___fttol+0)+0,w
  8713  0E26  07B5               	addwf	(___fttol@exp1),f
  8714  0E27  1D03               	btfss	status,2
  8715  0E28  2E2A               	goto	u4951
  8716  0E29  2E2B               	goto	u4950
  8717  0E2A                     u4951:
  8718  0E2A  2E1A               	goto	l11121
  8719  0E2B                     u4950:
  8720  0E2B  2E51               	goto	l11133
  8721                           	
  8722  0E2C                     l7623:	
  8723                           	line	62
  8724  0E2C  2E51               	goto	l11133
  8725                           	
  8726  0E2D                     l7620:	
  8727                           	line	63
  8728                           	
  8729  0E2D                     l11123:	
  8730  0E2D  3018               	movlw	(018h)
  8731  0E2E  0235               	subwf	(___fttol@exp1),w
  8732  0E2F  1C03               	skipc
  8733  0E30  2E32               	goto	u4961
  8734  0E31  2E33               	goto	u4960
  8735  0E32                     u4961:
  8736  0E32  2E4A               	goto	l11131
  8737  0E33                     u4960:
  8738                           	line	64
  8739                           	
  8740  0E33                     l11125:	
  8741  0E33  3000               	movlw	0
  8742  0E34  00AB               	movwf	(?___fttol+3)
  8743  0E35  3000               	movlw	0
  8744  0E36  00AA               	movwf	(?___fttol+2)
  8745  0E37  3000               	movlw	0
  8746  0E38  00A9               	movwf	(?___fttol+1)
  8747  0E39  3000               	movlw	0
  8748  0E3A  00A8               	movwf	(?___fttol)
  8749                           
  8750  0E3B  2E6A               	goto	l7619
  8751                           	
  8752  0E3C                     l11127:	
  8753  0E3C  2E6A               	goto	l7619
  8754                           	
  8755  0E3D                     l7625:	
  8756                           	line	65
  8757  0E3D  2E4A               	goto	l11131
  8758                           	
  8759  0E3E                     l7627:	
  8760                           	line	66
  8761                           	
  8762  0E3E                     l11129:	
  8763  0E3E  3001               	movlw	01h
  8764  0E3F  00AC               	movwf	(??___fttol+0)+0
  8765  0E40                     u4975:
  8766  0E40  1003               	clrc
  8767  0E41  0DB1               	rlf	(___fttol@lval),f
  8768  0E42  0DB2               	rlf	(___fttol@lval+1),f
  8769  0E43  0DB3               	rlf	(___fttol@lval+2),f
  8770  0E44  0DB4               	rlf	(___fttol@lval+3),f
  8771  0E45  0BAC               	decfsz	(??___fttol+0)+0
  8772  0E46  2E40               	goto	u4975
  8773                           	line	67
  8774  0E47  3001               	movlw	low(01h)
  8775  0E48  02B5               	subwf	(___fttol@exp1),f
  8776  0E49  2E4A               	goto	l11131
  8777                           	line	68
  8778                           	
  8779  0E4A                     l7626:	
  8780                           	line	65
  8781                           	
  8782  0E4A                     l11131:	
  8783  0E4A  08B5               	movf	(___fttol@exp1),f
  8784  0E4B  1D03               	skipz
  8785  0E4C  2E4E               	goto	u4981
  8786  0E4D  2E4F               	goto	u4980
  8787  0E4E                     u4981:
  8788  0E4E  2E3E               	goto	l11129
  8789  0E4F                     u4980:
  8790  0E4F  2E51               	goto	l11133
  8791                           	
  8792  0E50                     l7628:	
  8793  0E50  2E51               	goto	l11133
  8794                           	line	69
  8795                           	
  8796  0E51                     l7624:	
  8797                           	line	70
  8798                           	
  8799  0E51                     l11133:	
  8800  0E51  0830               	movf	(___fttol@sign1),w
  8801  0E52  1D03               	skipz
  8802  0E53  2E55               	goto	u4990
  8803  0E54  2E61               	goto	l11137
  8804  0E55                     u4990:
  8805                           	line	71
  8806                           	
  8807  0E55                     l11135:	
  8808  0E55  09B1               	comf	(___fttol@lval),f
  8809  0E56  09B2               	comf	(___fttol@lval+1),f
  8810  0E57  09B3               	comf	(___fttol@lval+2),f
  8811  0E58  09B4               	comf	(___fttol@lval+3),f
  8812  0E59  0AB1               	incf	(___fttol@lval),f
  8813  0E5A  1903               	skipnz
  8814  0E5B  0AB2               	incf	(___fttol@lval+1),f
  8815  0E5C  1903               	skipnz
  8816  0E5D  0AB3               	incf	(___fttol@lval+2),f
  8817  0E5E  1903               	skipnz
  8818  0E5F  0AB4               	incf	(___fttol@lval+3),f
  8819  0E60  2E61               	goto	l11137
  8820                           	
  8821  0E61                     l7629:	
  8822                           	line	72
  8823                           	
  8824  0E61                     l11137:	
  8825  0E61  0834               	movf	(___fttol@lval+3),w
  8826  0E62  00AB               	movwf	(?___fttol+3)
  8827  0E63  0833               	movf	(___fttol@lval+2),w
  8828  0E64  00AA               	movwf	(?___fttol+2)
  8829  0E65  0832               	movf	(___fttol@lval+1),w
  8830  0E66  00A9               	movwf	(?___fttol+1)
  8831  0E67  0831               	movf	(___fttol@lval),w
  8832  0E68  00A8               	movwf	(?___fttol)
  8833                           
  8834  0E69  2E6A               	goto	l7619
  8835                           	
  8836  0E6A                     l11139:	
  8837                           	line	73
  8838                           	
  8839  0E6A                     l7619:	
  8840  0E6A  0008               	return
  8841                           	opt stack 0
  8842                           GLOBAL	__end_of___fttol
  8843  0E6B                     	__end_of___fttol:
  8844 ;; =============== function ___fttol ends ============
  8845                           
  8846                           	signat	___fttol,4220
  8847                           	global	___ftpack
  8848                           psect	text1087,local,class=CODE,delta=2
  8849                           global __ptext1087
  8850  0C0B                     __ptext1087:
  8851                           
  8852 ;; *************** function ___ftpack *****************
  8853 ;; Defined at:
  8854 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  arg             3    0[BANK0 ] unsigned um
  8857 ;;  exp             1    3[BANK0 ] unsigned char 
  8858 ;;  sign            1    4[BANK0 ] unsigned char 
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;		None
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  3    0[BANK0 ] float 
  8863 ;; Registers used:
  8864 ;;		wreg, status,2, status,0
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8870 ;;      Params:         0       5       0       0       0
  8871 ;;      Locals:         0       0       0       0       0
  8872 ;;      Temps:          0       3       0       0       0
  8873 ;;      Totals:         0       8       0       0       0
  8874 ;;Total ram usage:        8 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    3
  8877 ;; This function calls:
  8878 ;;		Nothing
  8879 ;; This function is called by:
  8880 ;;		___ftmul
  8881 ;;		___awtoft
  8882 ;;		___ftadd
  8883 ;;		___ftdiv
  8884 ;;		___lbtoft
  8885 ;;		___abtoft
  8886 ;;		___lwtoft
  8887 ;;		___altoft
  8888 ;;		___lltoft
  8889 ;;		___attoft
  8890 ;;		___lttoft
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           psect	text1087
  8894                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  8895                           	line	63
  8896                           	global	__size_of___ftpack
  8897  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  8898                           	
  8899  0C0B                     ___ftpack:	
  8900                           	opt	stack 3
  8901                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8902                           	line	64
  8903                           	
  8904  0C0B                     l11023:	
  8905  0C0B  1283               	bcf	status, 5	;RP0=0, select bank0
  8906  0C0C  1303               	bcf	status, 6	;RP1=0, select bank0
  8907  0C0D  0823               	movf	(___ftpack@exp),w
  8908  0C0E  1D03               	skipz
  8909  0C0F  2C11               	goto	u4710
  8910  0C10  2C19               	goto	l11027
  8911  0C11                     u4710:
  8912                           	
  8913  0C11                     l11025:	
  8914  0C11  0822               	movf	(___ftpack@arg+2),w
  8915  0C12  0421               	iorwf	(___ftpack@arg+1),w
  8916  0C13  0420               	iorwf	(___ftpack@arg),w
  8917  0C14  1D03               	skipz
  8918  0C15  2C17               	goto	u4721
  8919  0C16  2C18               	goto	u4720
  8920  0C17                     u4721:
  8921  0C17  2C2F               	goto	l11033
  8922  0C18                     u4720:
  8923  0C18  2C19               	goto	l11027
  8924                           	
  8925  0C19                     l7843:	
  8926                           	line	65
  8927                           	
  8928  0C19                     l11027:	
  8929  0C19  3000               	movlw	0x0
  8930  0C1A  00A0               	movwf	(?___ftpack)
  8931  0C1B  3000               	movlw	0x0
  8932  0C1C  00A1               	movwf	(?___ftpack+1)
  8933  0C1D  3000               	movlw	0x0
  8934  0C1E  00A2               	movwf	(?___ftpack+2)
  8935  0C1F  2C87               	goto	l7844
  8936                           	
  8937  0C20                     l11029:	
  8938  0C20  2C87               	goto	l7844
  8939                           	
  8940  0C21                     l7841:	
  8941                           	line	66
  8942  0C21  2C2F               	goto	l11033
  8943                           	
  8944  0C22                     l7846:	
  8945                           	line	67
  8946                           	
  8947  0C22                     l11031:	
  8948  0C22  3001               	movlw	(01h)
  8949  0C23  00A5               	movwf	(??___ftpack+0)+0
  8950  0C24  0825               	movf	(??___ftpack+0)+0,w
  8951  0C25  07A3               	addwf	(___ftpack@exp),f
  8952                           	line	68
  8953  0C26  3001               	movlw	01h
  8954  0C27                     u4735:
  8955  0C27  1003               	clrc
  8956  0C28  0CA2               	rrf	(___ftpack@arg+2),f
  8957  0C29  0CA1               	rrf	(___ftpack@arg+1),f
  8958  0C2A  0CA0               	rrf	(___ftpack@arg),f
  8959  0C2B  3EFF               	addlw	-1
  8960  0C2C  1D03               	skipz
  8961  0C2D  2C27               	goto	u4735
  8962                           
  8963  0C2E  2C2F               	goto	l11033
  8964                           	line	69
  8965                           	
  8966  0C2F                     l7845:	
  8967                           	line	66
  8968                           	
  8969  0C2F                     l11033:	
  8970  0C2F  30FE               	movlw	low highword(0FE0000h)
  8971  0C30  0522               	andwf	(___ftpack@arg+2),w
  8972  0C31  1D03               	btfss	status,2
  8973  0C32  2C34               	goto	u4741
  8974  0C33  2C35               	goto	u4740
  8975  0C34                     u4741:
  8976  0C34  2C22               	goto	l11031
  8977  0C35                     u4740:
  8978  0C35  2C4D               	goto	l7848
  8979                           	
  8980  0C36                     l7847:	
  8981                           	line	70
  8982  0C36  2C4D               	goto	l7848
  8983                           	
  8984  0C37                     l7849:	
  8985                           	line	71
  8986                           	
  8987  0C37                     l11035:	
  8988  0C37  3001               	movlw	(01h)
  8989  0C38  00A5               	movwf	(??___ftpack+0)+0
  8990  0C39  0825               	movf	(??___ftpack+0)+0,w
  8991  0C3A  07A3               	addwf	(___ftpack@exp),f
  8992                           	line	72
  8993                           	
  8994  0C3B                     l11037:	
  8995  0C3B  3001               	movlw	01h
  8996  0C3C  07A0               	addwf	(___ftpack@arg),f
  8997  0C3D  3000               	movlw	0
  8998  0C3E  1803               	skipnc
  8999  0C3F  3001               movlw 1
  9000  0C40  07A1               	addwf	(___ftpack@arg+1),f
  9001  0C41  3000               	movlw	0
  9002  0C42  1803               	skipnc
  9003  0C43  3001               movlw 1
  9004  0C44  07A2               	addwf	(___ftpack@arg+2),f
  9005                           	line	73
  9006                           	
  9007  0C45                     l11039:	
  9008  0C45  3001               	movlw	01h
  9009  0C46                     u4755:
  9010  0C46  1003               	clrc
  9011  0C47  0CA2               	rrf	(___ftpack@arg+2),f
  9012  0C48  0CA1               	rrf	(___ftpack@arg+1),f
  9013  0C49  0CA0               	rrf	(___ftpack@arg),f
  9014  0C4A  3EFF               	addlw	-1
  9015  0C4B  1D03               	skipz
  9016  0C4C  2C46               	goto	u4755
  9017                           
  9018                           	line	74
  9019                           	
  9020  0C4D                     l7848:	
  9021                           	line	70
  9022  0C4D  30FF               	movlw	low highword(0FF0000h)
  9023  0C4E  0522               	andwf	(___ftpack@arg+2),w
  9024  0C4F  1D03               	btfss	status,2
  9025  0C50  2C52               	goto	u4761
  9026  0C51  2C53               	goto	u4760
  9027  0C52                     u4761:
  9028  0C52  2C37               	goto	l11035
  9029  0C53                     u4760:
  9030  0C53  2C60               	goto	l11043
  9031                           	
  9032  0C54                     l7850:	
  9033                           	line	75
  9034  0C54  2C60               	goto	l11043
  9035                           	
  9036  0C55                     l7852:	
  9037                           	line	76
  9038                           	
  9039  0C55                     l11041:	
  9040  0C55  3001               	movlw	low(01h)
  9041  0C56  02A3               	subwf	(___ftpack@exp),f
  9042                           	line	77
  9043  0C57  3001               	movlw	01h
  9044  0C58                     u4775:
  9045  0C58  1003               	clrc
  9046  0C59  0DA0               	rlf	(___ftpack@arg),f
  9047  0C5A  0DA1               	rlf	(___ftpack@arg+1),f
  9048  0C5B  0DA2               	rlf	(___ftpack@arg+2),f
  9049  0C5C  3EFF               	addlw	-1
  9050  0C5D  1D03               	skipz
  9051  0C5E  2C58               	goto	u4775
  9052  0C5F  2C60               	goto	l11043
  9053                           	line	78
  9054                           	
  9055  0C60                     l7851:	
  9056                           	line	75
  9057                           	
  9058  0C60                     l11043:	
  9059  0C60  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  9060  0C61  2C63               	goto	u4781
  9061  0C62  2C64               	goto	u4780
  9062  0C63                     u4781:
  9063  0C63  2C55               	goto	l11041
  9064  0C64                     u4780:
  9065                           	
  9066  0C64                     l7853:	
  9067                           	line	79
  9068  0C64  1823               	btfsc	(___ftpack@exp),(0)&7
  9069  0C65  2C67               	goto	u4791
  9070  0C66  2C68               	goto	u4790
  9071  0C67                     u4791:
  9072  0C67  2C6E               	goto	l7854
  9073  0C68                     u4790:
  9074                           	line	80
  9075                           	
  9076  0C68                     l11045:	
  9077  0C68  30FF               	movlw	0FFh
  9078  0C69  05A0               	andwf	(___ftpack@arg),f
  9079  0C6A  307F               	movlw	07Fh
  9080  0C6B  05A1               	andwf	(___ftpack@arg+1),f
  9081  0C6C  30FF               	movlw	0FFh
  9082  0C6D  05A2               	andwf	(___ftpack@arg+2),f
  9083                           	
  9084  0C6E                     l7854:	
  9085                           	line	81
  9086  0C6E  1003               	clrc
  9087  0C6F  0CA3               	rrf	(___ftpack@exp),f
  9088                           
  9089                           	line	82
  9090                           	
  9091  0C70                     l11047:	
  9092  0C70  0823               	movf	(___ftpack@exp),w
  9093  0C71  00A5               	movwf	((??___ftpack+0)+0)
  9094  0C72  01A6               	clrf	((??___ftpack+0)+0+1)
  9095  0C73  01A7               	clrf	((??___ftpack+0)+0+2)
  9096  0C74  3010               	movlw	010h
  9097  0C75                     u4805:
  9098  0C75  1003               	clrc
  9099  0C76  0DA5               	rlf	(??___ftpack+0)+0,f
  9100  0C77  0DA6               	rlf	(??___ftpack+0)+1,f
  9101  0C78  0DA7               	rlf	(??___ftpack+0)+2,f
  9102  0C79                     u4800:
  9103  0C79  3EFF               	addlw	-1
  9104  0C7A  1D03               	skipz
  9105  0C7B  2C75               	goto	u4805
  9106  0C7C  0825               	movf	0+(??___ftpack+0)+0,w
  9107  0C7D  04A0               	iorwf	(___ftpack@arg),f
  9108  0C7E  0826               	movf	1+(??___ftpack+0)+0,w
  9109  0C7F  04A1               	iorwf	(___ftpack@arg+1),f
  9110  0C80  0827               	movf	2+(??___ftpack+0)+0,w
  9111  0C81  04A2               	iorwf	(___ftpack@arg+2),f
  9112                           	line	83
  9113                           	
  9114  0C82                     l11049:	
  9115  0C82  0824               	movf	(___ftpack@sign),w
  9116  0C83  1D03               	skipz
  9117  0C84  2C86               	goto	u4810
  9118  0C85  2C87               	goto	l7855
  9119  0C86                     u4810:
  9120                           	line	84
  9121                           	
  9122  0C86                     l11051:	
  9123  0C86  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  9124                           	
  9125  0C87                     l7855:	
  9126                           	line	85
  9127                           	line	86
  9128                           	
  9129  0C87                     l7844:	
  9130  0C87  0008               	return
  9131                           	opt stack 0
  9132                           GLOBAL	__end_of___ftpack
  9133  0C88                     	__end_of___ftpack:
  9134 ;; =============== function ___ftpack ends ============
  9135                           
  9136                           	signat	___ftpack,12411
  9137                           	global	___lwmod
  9138                           psect	text1088,local,class=CODE,delta=2
  9139                           global __ptext1088
  9140  17BA                     __ptext1088:
  9141                           
  9142 ;; *************** function ___lwmod *****************
  9143 ;; Defined at:
  9144 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  divisor         2   14[BANK0 ] unsigned int 
  9147 ;;  dividend        2   16[BANK0 ] unsigned int 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  counter         1   19[BANK0 ] unsigned char 
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  2   14[BANK0 ] unsigned int 
  9152 ;; Registers used:
  9153 ;;		wreg, status,2, status,0
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9159 ;;      Params:         0       4       0       0       0
  9160 ;;      Locals:         0       1       0       0       0
  9161 ;;      Temps:          0       1       0       0       0
  9162 ;;      Totals:         0       6       0       0       0
  9163 ;;Total ram usage:        6 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:    3
  9166 ;; This function calls:
  9167 ;;		Nothing
  9168 ;; This function is called by:
  9169 ;;		_sprintf
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           psect	text1088
  9173                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9174                           	line	5
  9175                           	global	__size_of___lwmod
  9176  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  9177                           	
  9178  17BA                     ___lwmod:	
  9179                           	opt	stack 1
  9180                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9181                           	line	8
  9182                           	
  9183  17BA                     l10931:	
  9184  17BA  1283               	bcf	status, 5	;RP0=0, select bank0
  9185  17BB  1303               	bcf	status, 6	;RP1=0, select bank0
  9186  17BC  082F               	movf	(___lwmod@divisor+1),w
  9187  17BD  042E               	iorwf	(___lwmod@divisor),w
  9188  17BE  1903               	skipnz
  9189  17BF  2FC1               	goto	u4411
  9190  17C0  2FC2               	goto	u4410
  9191  17C1                     u4411:
  9192  17C1  2FF8               	goto	l10949
  9193  17C2                     u4410:
  9194                           	line	9
  9195                           	
  9196  17C2                     l10933:	
  9197  17C2  01B3               	clrf	(___lwmod@counter)
  9198  17C3  1403               	bsf	status,0
  9199  17C4  0DB3               	rlf	(___lwmod@counter),f
  9200                           	line	10
  9201  17C5  2FD2               	goto	l10939
  9202                           	
  9203  17C6                     l7527:	
  9204                           	line	11
  9205                           	
  9206  17C6                     l10935:	
  9207  17C6  3001               	movlw	01h
  9208                           	
  9209  17C7                     u4425:
  9210  17C7  1003               	clrc
  9211  17C8  0DAE               	rlf	(___lwmod@divisor),f
  9212  17C9  0DAF               	rlf	(___lwmod@divisor+1),f
  9213  17CA  3EFF               	addlw	-1
  9214  17CB  1D03               	skipz
  9215  17CC  2FC7               	goto	u4425
  9216                           	line	12
  9217                           	
  9218  17CD                     l10937:	
  9219  17CD  3001               	movlw	(01h)
  9220  17CE  00B2               	movwf	(??___lwmod+0)+0
  9221  17CF  0832               	movf	(??___lwmod+0)+0,w
  9222  17D0  07B3               	addwf	(___lwmod@counter),f
  9223  17D1  2FD2               	goto	l10939
  9224                           	line	13
  9225                           	
  9226  17D2                     l7526:	
  9227                           	line	10
  9228                           	
  9229  17D2                     l10939:	
  9230  17D2  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  9231  17D3  2FD5               	goto	u4431
  9232  17D4  2FD6               	goto	u4430
  9233  17D5                     u4431:
  9234  17D5  2FC6               	goto	l10935
  9235  17D6                     u4430:
  9236  17D6  2FD8               	goto	l10941
  9237                           	
  9238  17D7                     l7528:	
  9239  17D7  2FD8               	goto	l10941
  9240                           	line	14
  9241                           	
  9242  17D8                     l7529:	
  9243                           	line	15
  9244                           	
  9245  17D8                     l10941:	
  9246  17D8  082F               	movf	(___lwmod@divisor+1),w
  9247  17D9  0231               	subwf	(___lwmod@dividend+1),w
  9248  17DA  1D03               	skipz
  9249  17DB  2FDE               	goto	u4445
  9250  17DC  082E               	movf	(___lwmod@divisor),w
  9251  17DD  0230               	subwf	(___lwmod@dividend),w
  9252  17DE                     u4445:
  9253  17DE  1C03               	skipc
  9254  17DF  2FE1               	goto	u4441
  9255  17E0  2FE2               	goto	u4440
  9256  17E1                     u4441:
  9257  17E1  2FE9               	goto	l10945
  9258  17E2                     u4440:
  9259                           	line	16
  9260                           	
  9261  17E2                     l10943:	
  9262  17E2  082E               	movf	(___lwmod@divisor),w
  9263  17E3  02B0               	subwf	(___lwmod@dividend),f
  9264  17E4  082F               	movf	(___lwmod@divisor+1),w
  9265  17E5  1C03               	skipc
  9266  17E6  03B1               	decf	(___lwmod@dividend+1),f
  9267  17E7  02B1               	subwf	(___lwmod@dividend+1),f
  9268  17E8  2FE9               	goto	l10945
  9269                           	
  9270  17E9                     l7530:	
  9271                           	line	17
  9272                           	
  9273  17E9                     l10945:	
  9274  17E9  3001               	movlw	01h
  9275                           	
  9276  17EA                     u4455:
  9277  17EA  1003               	clrc
  9278  17EB  0CAF               	rrf	(___lwmod@divisor+1),f
  9279  17EC  0CAE               	rrf	(___lwmod@divisor),f
  9280  17ED  3EFF               	addlw	-1
  9281  17EE  1D03               	skipz
  9282  17EF  2FEA               	goto	u4455
  9283                           	line	18
  9284                           	
  9285  17F0                     l10947:	
  9286  17F0  3001               	movlw	low(01h)
  9287  17F1  02B3               	subwf	(___lwmod@counter),f
  9288  17F2  1D03               	btfss	status,2
  9289  17F3  2FF5               	goto	u4461
  9290  17F4  2FF6               	goto	u4460
  9291  17F5                     u4461:
  9292  17F5  2FD8               	goto	l10941
  9293  17F6                     u4460:
  9294  17F6  2FF8               	goto	l10949
  9295                           	
  9296  17F7                     l7531:	
  9297  17F7  2FF8               	goto	l10949
  9298                           	line	19
  9299                           	
  9300  17F8                     l7525:	
  9301                           	line	20
  9302                           	
  9303  17F8                     l10949:	
  9304  17F8  0831               	movf	(___lwmod@dividend+1),w
  9305  17F9  01AF               	clrf	(?___lwmod+1)
  9306  17FA  07AF               	addwf	(?___lwmod+1)
  9307  17FB  0830               	movf	(___lwmod@dividend),w
  9308  17FC  01AE               	clrf	(?___lwmod)
  9309  17FD  07AE               	addwf	(?___lwmod)
  9310                           
  9311  17FE  2FFF               	goto	l7532
  9312                           	
  9313  17FF                     l10951:	
  9314                           	line	21
  9315                           	
  9316  17FF                     l7532:	
  9317  17FF  0008               	return
  9318                           	opt stack 0
  9319                           GLOBAL	__end_of___lwmod
  9320  1800                     	__end_of___lwmod:
  9321 ;; =============== function ___lwmod ends ============
  9322                           
  9323                           	signat	___lwmod,8314
  9324                           	global	___lwdiv
  9325                           psect	text1089,local,class=CODE,delta=2
  9326                           global __ptext1089
  9327  0962                     __ptext1089:
  9328                           
  9329 ;; *************** function ___lwdiv *****************
  9330 ;; Defined at:
  9331 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  divisor         2    6[BANK0 ] unsigned int 
  9334 ;;  dividend        2    8[BANK0 ] unsigned int 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  quotient        2   11[BANK0 ] unsigned int 
  9337 ;;  counter         1   13[BANK0 ] unsigned char 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  2    6[BANK0 ] unsigned int 
  9340 ;; Registers used:
  9341 ;;		wreg, status,2, status,0
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9347 ;;      Params:         0       4       0       0       0
  9348 ;;      Locals:         0       3       0       0       0
  9349 ;;      Temps:          0       1       0       0       0
  9350 ;;      Totals:         0       8       0       0       0
  9351 ;;Total ram usage:        8 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    3
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_readAvgDistance
  9358 ;;		_ADCconvert
  9359 ;;		_sprintf
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           psect	text1089
  9363                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9364                           	line	5
  9365                           	global	__size_of___lwdiv
  9366  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  9367                           	
  9368  0962                     ___lwdiv:	
  9369                           	opt	stack 1
  9370                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9371                           	line	9
  9372                           	
  9373  0962                     l10905:	
  9374  0962  1283               	bcf	status, 5	;RP0=0, select bank0
  9375  0963  1303               	bcf	status, 6	;RP1=0, select bank0
  9376  0964  01AB               	clrf	(___lwdiv@quotient)
  9377  0965  01AC               	clrf	(___lwdiv@quotient+1)
  9378                           	line	10
  9379                           	
  9380  0966                     l10907:	
  9381  0966  0827               	movf	(___lwdiv@divisor+1),w
  9382  0967  0426               	iorwf	(___lwdiv@divisor),w
  9383  0968  1903               	skipnz
  9384  0969  296B               	goto	u4341
  9385  096A  296C               	goto	u4340
  9386  096B                     u4341:
  9387  096B  29AA               	goto	l10927
  9388  096C                     u4340:
  9389                           	line	11
  9390                           	
  9391  096C                     l10909:	
  9392  096C  01AD               	clrf	(___lwdiv@counter)
  9393  096D  1403               	bsf	status,0
  9394  096E  0DAD               	rlf	(___lwdiv@counter),f
  9395                           	line	12
  9396  096F  297C               	goto	l10915
  9397                           	
  9398  0970                     l7517:	
  9399                           	line	13
  9400                           	
  9401  0970                     l10911:	
  9402  0970  3001               	movlw	01h
  9403                           	
  9404  0971                     u4355:
  9405  0971  1003               	clrc
  9406  0972  0DA6               	rlf	(___lwdiv@divisor),f
  9407  0973  0DA7               	rlf	(___lwdiv@divisor+1),f
  9408  0974  3EFF               	addlw	-1
  9409  0975  1D03               	skipz
  9410  0976  2971               	goto	u4355
  9411                           	line	14
  9412                           	
  9413  0977                     l10913:	
  9414  0977  3001               	movlw	(01h)
  9415  0978  00AA               	movwf	(??___lwdiv+0)+0
  9416  0979  082A               	movf	(??___lwdiv+0)+0,w
  9417  097A  07AD               	addwf	(___lwdiv@counter),f
  9418  097B  297C               	goto	l10915
  9419                           	line	15
  9420                           	
  9421  097C                     l7516:	
  9422                           	line	12
  9423                           	
  9424  097C                     l10915:	
  9425  097C  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  9426  097D  297F               	goto	u4361
  9427  097E  2980               	goto	u4360
  9428  097F                     u4361:
  9429  097F  2970               	goto	l10911
  9430  0980                     u4360:
  9431  0980  2982               	goto	l10917
  9432                           	
  9433  0981                     l7518:	
  9434  0981  2982               	goto	l10917
  9435                           	line	16
  9436                           	
  9437  0982                     l7519:	
  9438                           	line	17
  9439                           	
  9440  0982                     l10917:	
  9441  0982  3001               	movlw	01h
  9442                           	
  9443  0983                     u4375:
  9444  0983  1003               	clrc
  9445  0984  0DAB               	rlf	(___lwdiv@quotient),f
  9446  0985  0DAC               	rlf	(___lwdiv@quotient+1),f
  9447  0986  3EFF               	addlw	-1
  9448  0987  1D03               	skipz
  9449  0988  2983               	goto	u4375
  9450                           	line	18
  9451  0989  0827               	movf	(___lwdiv@divisor+1),w
  9452  098A  0229               	subwf	(___lwdiv@dividend+1),w
  9453  098B  1D03               	skipz
  9454  098C  298F               	goto	u4385
  9455  098D  0826               	movf	(___lwdiv@divisor),w
  9456  098E  0228               	subwf	(___lwdiv@dividend),w
  9457  098F                     u4385:
  9458  098F  1C03               	skipc
  9459  0990  2992               	goto	u4381
  9460  0991  2993               	goto	u4380
  9461  0992                     u4381:
  9462  0992  299B               	goto	l10923
  9463  0993                     u4380:
  9464                           	line	19
  9465                           	
  9466  0993                     l10919:	
  9467  0993  0826               	movf	(___lwdiv@divisor),w
  9468  0994  02A8               	subwf	(___lwdiv@dividend),f
  9469  0995  0827               	movf	(___lwdiv@divisor+1),w
  9470  0996  1C03               	skipc
  9471  0997  03A9               	decf	(___lwdiv@dividend+1),f
  9472  0998  02A9               	subwf	(___lwdiv@dividend+1),f
  9473                           	line	20
  9474                           	
  9475  0999                     l10921:	
  9476  0999  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  9477  099A  299B               	goto	l10923
  9478                           	line	21
  9479                           	
  9480  099B                     l7520:	
  9481                           	line	22
  9482                           	
  9483  099B                     l10923:	
  9484  099B  3001               	movlw	01h
  9485                           	
  9486  099C                     u4395:
  9487  099C  1003               	clrc
  9488  099D  0CA7               	rrf	(___lwdiv@divisor+1),f
  9489  099E  0CA6               	rrf	(___lwdiv@divisor),f
  9490  099F  3EFF               	addlw	-1
  9491  09A0  1D03               	skipz
  9492  09A1  299C               	goto	u4395
  9493                           	line	23
  9494                           	
  9495  09A2                     l10925:	
  9496  09A2  3001               	movlw	low(01h)
  9497  09A3  02AD               	subwf	(___lwdiv@counter),f
  9498  09A4  1D03               	btfss	status,2
  9499  09A5  29A7               	goto	u4401
  9500  09A6  29A8               	goto	u4400
  9501  09A7                     u4401:
  9502  09A7  2982               	goto	l10917
  9503  09A8                     u4400:
  9504  09A8  29AA               	goto	l10927
  9505                           	
  9506  09A9                     l7521:	
  9507  09A9  29AA               	goto	l10927
  9508                           	line	24
  9509                           	
  9510  09AA                     l7515:	
  9511                           	line	25
  9512                           	
  9513  09AA                     l10927:	
  9514  09AA  082C               	movf	(___lwdiv@quotient+1),w
  9515  09AB  01A7               	clrf	(?___lwdiv+1)
  9516  09AC  07A7               	addwf	(?___lwdiv+1)
  9517  09AD  082B               	movf	(___lwdiv@quotient),w
  9518  09AE  01A6               	clrf	(?___lwdiv)
  9519  09AF  07A6               	addwf	(?___lwdiv)
  9520                           
  9521  09B0  29B1               	goto	l7522
  9522                           	
  9523  09B1                     l10929:	
  9524                           	line	26
  9525                           	
  9526  09B1                     l7522:	
  9527  09B1  0008               	return
  9528                           	opt stack 0
  9529                           GLOBAL	__end_of___lwdiv
  9530  09B2                     	__end_of___lwdiv:
  9531 ;; =============== function ___lwdiv ends ============
  9532                           
  9533                           	signat	___lwdiv,8314
  9534                           	global	___wmul
  9535                           psect	text1090,local,class=CODE,delta=2
  9536                           global __ptext1090
  9537  159D                     __ptext1090:
  9538                           
  9539 ;; *************** function ___wmul *****************
  9540 ;; Defined at:
  9541 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9544 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;  product         2    4[BANK0 ] unsigned int 
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  2    0[BANK0 ] unsigned int 
  9549 ;; Registers used:
  9550 ;;		wreg, status,2, status,0
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9556 ;;      Params:         0       4       0       0       0
  9557 ;;      Locals:         0       2       0       0       0
  9558 ;;      Temps:          0       0       0       0       0
  9559 ;;      Totals:         0       6       0       0       0
  9560 ;;Total ram usage:        6 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; Hardware stack levels required when called:    3
  9563 ;; This function calls:
  9564 ;;		Nothing
  9565 ;; This function is called by:
  9566 ;;		_ADCconvert
  9567 ;;		_abs
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           psect	text1090
  9571                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  9572                           	line	3
  9573                           	global	__size_of___wmul
  9574  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  9575                           	
  9576  159D                     ___wmul:	
  9577                           	opt	stack 2
  9578                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9579                           	line	4
  9580                           	
  9581  159D                     l10893:	
  9582  159D  1283               	bcf	status, 5	;RP0=0, select bank0
  9583  159E  1303               	bcf	status, 6	;RP1=0, select bank0
  9584  159F  01A4               	clrf	(___wmul@product)
  9585  15A0  01A5               	clrf	(___wmul@product+1)
  9586  15A1  2DA2               	goto	l10895
  9587                           	line	6
  9588                           	
  9589  15A2                     l7509:	
  9590                           	line	7
  9591                           	
  9592  15A2                     l10895:	
  9593  15A2  1C20               	btfss	(___wmul@multiplier),(0)&7
  9594  15A3  2DA5               	goto	u4301
  9595  15A4  2DA6               	goto	u4300
  9596  15A5                     u4301:
  9597  15A5  2DAC               	goto	l7510
  9598  15A6                     u4300:
  9599                           	line	8
  9600                           	
  9601  15A6                     l10897:	
  9602  15A6  0822               	movf	(___wmul@multiplicand),w
  9603  15A7  07A4               	addwf	(___wmul@product),f
  9604  15A8  1803               	skipnc
  9605  15A9  0AA5               	incf	(___wmul@product+1),f
  9606  15AA  0823               	movf	(___wmul@multiplicand+1),w
  9607  15AB  07A5               	addwf	(___wmul@product+1),f
  9608                           	
  9609  15AC                     l7510:	
  9610                           	line	9
  9611  15AC  3001               	movlw	01h
  9612                           	
  9613  15AD                     u4315:
  9614  15AD  1003               	clrc
  9615  15AE  0DA2               	rlf	(___wmul@multiplicand),f
  9616  15AF  0DA3               	rlf	(___wmul@multiplicand+1),f
  9617  15B0  3EFF               	addlw	-1
  9618  15B1  1D03               	skipz
  9619  15B2  2DAD               	goto	u4315
  9620                           	line	10
  9621                           	
  9622  15B3                     l10899:	
  9623  15B3  3001               	movlw	01h
  9624                           	
  9625  15B4                     u4325:
  9626  15B4  1003               	clrc
  9627  15B5  0CA1               	rrf	(___wmul@multiplier+1),f
  9628  15B6  0CA0               	rrf	(___wmul@multiplier),f
  9629  15B7  3EFF               	addlw	-1
  9630  15B8  1D03               	skipz
  9631  15B9  2DB4               	goto	u4325
  9632                           	line	11
  9633  15BA  0821               	movf	((___wmul@multiplier+1)),w
  9634  15BB  0420               	iorwf	((___wmul@multiplier)),w
  9635  15BC  1D03               	skipz
  9636  15BD  2DBF               	goto	u4331
  9637  15BE  2DC0               	goto	u4330
  9638  15BF                     u4331:
  9639  15BF  2DA2               	goto	l10895
  9640  15C0                     u4330:
  9641  15C0  2DC1               	goto	l10901
  9642                           	
  9643  15C1                     l7511:	
  9644                           	line	12
  9645                           	
  9646  15C1                     l10901:	
  9647  15C1  0825               	movf	(___wmul@product+1),w
  9648  15C2  01A1               	clrf	(?___wmul+1)
  9649  15C3  07A1               	addwf	(?___wmul+1)
  9650  15C4  0824               	movf	(___wmul@product),w
  9651  15C5  01A0               	clrf	(?___wmul)
  9652  15C6  07A0               	addwf	(?___wmul)
  9653                           
  9654  15C7  2DC8               	goto	l7512
  9655                           	
  9656  15C8                     l10903:	
  9657                           	line	13
  9658                           	
  9659  15C8                     l7512:	
  9660  15C8  0008               	return
  9661                           	opt stack 0
  9662                           GLOBAL	__end_of___wmul
  9663  15C9                     	__end_of___wmul:
  9664 ;; =============== function ___wmul ends ============
  9665                           
  9666                           	signat	___wmul,8314
  9667                           	global	_ser_isrx
  9668                           psect	text1091,local,class=CODE,delta=2
  9669                           global __ptext1091
  9670  14ED                     __ptext1091:
  9671                           
  9672 ;; *************** function _ser_isrx *****************
  9673 ;; Defined at:
  9674 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;		None
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;		None
  9679 ;; Return value:  Size  Location     Type
  9680 ;;		None               void
  9681 ;; Registers used:
  9682 ;;		wreg, status,2, status,0
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9688 ;;      Params:         0       0       0       0       0
  9689 ;;      Locals:         0       0       0       0       0
  9690 ;;      Temps:          0       0       0       0       0
  9691 ;;      Totals:         0       0       0       0       0
  9692 ;;Total ram usage:        0 bytes
  9693 ;; Hardware stack levels used:    1
  9694 ;; Hardware stack levels required when called:    3
  9695 ;; This function calls:
  9696 ;;		Nothing
  9697 ;; This function is called by:
  9698 ;;		_ser_getch
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           psect	text1091
  9702                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  9703                           	line	45
  9704                           	global	__size_of_ser_isrx
  9705  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  9706                           	
  9707  14ED                     _ser_isrx:	
  9708                           	opt	stack 1
  9709                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  9710                           	line	46
  9711                           	
  9712  14ED                     l10845:	
  9713                           ;ser.c: 46: if(OERR) {
  9714  14ED  1283               	bcf	status, 5	;RP0=0, select bank0
  9715  14EE  1303               	bcf	status, 6	;RP1=0, select bank0
  9716  14EF  1C98               	btfss	(193/8),(193)&7
  9717  14F0  2CF2               	goto	u4231
  9718  14F1  2CF3               	goto	u4230
  9719  14F2                     u4231:
  9720  14F2  2CF8               	goto	l10853
  9721  14F3                     u4230:
  9722                           	line	47
  9723                           	
  9724  14F3                     l10847:	
  9725                           ;ser.c: 47: CREN = 0;
  9726  14F3  1218               	bcf	(196/8),(196)&7
  9727                           	line	48
  9728                           ;ser.c: 48: CREN = 1;
  9729  14F4  1618               	bsf	(196/8),(196)&7
  9730                           	line	49
  9731                           	
  9732  14F5                     l10849:	
  9733                           ;ser.c: 49: return 0;
  9734  14F5  1003               	clrc
  9735                           	
  9736  14F6  2D05               	goto	l6764
  9737                           	
  9738  14F7                     l10851:	
  9739  14F7  2D05               	goto	l6764
  9740                           	line	50
  9741                           	
  9742  14F8                     l6763:	
  9743                           	line	51
  9744                           	
  9745  14F8                     l10853:	
  9746                           ;ser.c: 50: }
  9747                           ;ser.c: 51: return (rxiptr!=rxoptr);
  9748  14F8  1683               	bsf	status, 5	;RP0=1, select bank1
  9749  14F9  1303               	bcf	status, 6	;RP1=0, select bank1
  9750  14FA  0850               	movf	(_rxiptr)^080h,w	;volatile
  9751  14FB  0651               	xorwf	(_rxoptr)^080h,w	;volatile
  9752  14FC  1D03               	skipz
  9753  14FD  2CFF               	goto	u4241
  9754  14FE  2D00               	goto	u4240
  9755  14FF                     u4241:
  9756  14FF  2D02               	goto	l10857
  9757  1500                     u4240:
  9758                           	
  9759  1500                     l10855:	
  9760  1500  1003               	clrc
  9761                           	
  9762  1501  2D05               	goto	l6764
  9763                           	
  9764  1502                     l10455:	
  9765                           	
  9766  1502                     l10857:	
  9767  1502  1403               	setc
  9768                           	
  9769  1503  2D05               	goto	l6764
  9770                           	
  9771  1504                     l10457:	
  9772  1504  2D05               	goto	l6764
  9773                           	
  9774  1505                     l10859:	
  9775                           	line	52
  9776                           	
  9777  1505                     l6764:	
  9778  1505  0008               	return
  9779                           	opt stack 0
  9780                           GLOBAL	__end_of_ser_isrx
  9781  1506                     	__end_of_ser_isrx:
  9782 ;; =============== function _ser_isrx ends ============
  9783                           
  9784                           	signat	_ser_isrx,88
  9785                           	global	_spi_transfer
  9786                           psect	text1092,local,class=CODE,delta=2
  9787                           global __ptext1092
  9788  1499                     __ptext1092:
  9789                           
  9790 ;; *************** function _spi_transfer *****************
  9791 ;; Defined at:
  9792 ;;		line 34 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  data            1    wreg     unsigned char 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  data            1    2[BANK0 ] unsigned char 
  9797 ;;  temp            1    1[BANK0 ] unsigned char 
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  1    wreg      unsigned char 
  9800 ;; Registers used:
  9801 ;;		wreg
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9807 ;;      Params:         0       0       0       0       0
  9808 ;;      Locals:         0       2       0       0       0
  9809 ;;      Temps:          0       1       0       0       0
  9810 ;;      Totals:         0       3       0       0       0
  9811 ;;Total ram usage:        3 bytes
  9812 ;; Hardware stack levels used:    1
  9813 ;; Hardware stack levels required when called:    3
  9814 ;; This function calls:
  9815 ;;		Nothing
  9816 ;; This function is called by:
  9817 ;;		_rotate
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           psect	text1092
  9821                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9822                           	line	34
  9823                           	global	__size_of_spi_transfer
  9824  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  9825                           	
  9826  1499                     _spi_transfer:	
  9827                           	opt	stack 3
  9828                           ; Regs used in _spi_transfer: [wreg]
  9829                           ;spi_transfer@data stored from wreg
  9830  1499  1283               	bcf	status, 5	;RP0=0, select bank0
  9831  149A  1303               	bcf	status, 6	;RP1=0, select bank0
  9832  149B  00A2               	movwf	(spi_transfer@data)
  9833                           	line	35
  9834                           	
  9835  149C                     l10709:	
  9836                           ;steppermotor.c: 35: unsigned char temp = 0;
  9837  149C  01A1               	clrf	(spi_transfer@temp)
  9838                           	line	37
  9839                           ;steppermotor.c: 37: SSPIF = 0;
  9840  149D  118C               	bcf	(99/8),(99)&7
  9841                           	line	38
  9842                           	
  9843  149E                     l10711:	
  9844                           ;steppermotor.c: 38: SSPBUF = data;
  9845  149E  0822               	movf	(spi_transfer@data),w
  9846  149F  0093               	movwf	(19)	;volatile
  9847                           	line	40
  9848                           ;steppermotor.c: 40: while (SSPIF == 0);
  9849  14A0  2CA1               	goto	l3720
  9850                           	
  9851  14A1                     l3721:	
  9852                           	
  9853  14A1                     l3720:	
  9854  14A1  1D8C               	btfss	(99/8),(99)&7
  9855  14A2  2CA4               	goto	u4001
  9856  14A3  2CA5               	goto	u4000
  9857  14A4                     u4001:
  9858  14A4  2CA1               	goto	l3720
  9859  14A5                     u4000:
  9860  14A5  2CA6               	goto	l10713
  9861                           	
  9862  14A6                     l3722:	
  9863                           	line	41
  9864                           	
  9865  14A6                     l10713:	
  9866                           ;steppermotor.c: 41: temp = SSPBUF;
  9867  14A6  0813               	movf	(19),w	;volatile
  9868  14A7  00A0               	movwf	(??_spi_transfer+0)+0
  9869  14A8  0820               	movf	(??_spi_transfer+0)+0,w
  9870  14A9  00A1               	movwf	(spi_transfer@temp)
  9871                           	line	42
  9872                           	
  9873  14AA                     l10715:	
  9874                           ;steppermotor.c: 42: SSPIF = 0;
  9875  14AA  118C               	bcf	(99/8),(99)&7
  9876  14AB  2CAC               	goto	l3723
  9877                           	line	44
  9878                           	
  9879  14AC                     l10717:	
  9880                           	line	45
  9881                           ;steppermotor.c: 44: return temp;
  9882                           ;	Return value of _spi_transfer is never used
  9883                           	
  9884  14AC                     l3723:	
  9885  14AC  0008               	return
  9886                           	opt stack 0
  9887                           GLOBAL	__end_of_spi_transfer
  9888  14AD                     	__end_of_spi_transfer:
  9889 ;; =============== function _spi_transfer ends ============
  9890                           
  9891                           	signat	_spi_transfer,4217
  9892                           	global	_ser_putch
  9893                           psect	text1093,local,class=CODE,delta=2
  9894                           global __ptext1093
  9895  164D                     __ptext1093:
  9896                           
  9897 ;; *************** function _ser_putch *****************
  9898 ;; Defined at:
  9899 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;  c               1    wreg     unsigned char 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;  c               1    1[BANK0 ] unsigned char 
  9904 ;; Return value:  Size  Location     Type
  9905 ;;		None               void
  9906 ;; Registers used:
  9907 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9913 ;;      Params:         0       0       0       0       0
  9914 ;;      Locals:         0       1       0       0       0
  9915 ;;      Temps:          0       1       0       0       0
  9916 ;;      Totals:         0       2       0       0       0
  9917 ;;Total ram usage:        2 bytes
  9918 ;; Hardware stack levels used:    1
  9919 ;; Hardware stack levels required when called:    3
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_ChargeMode
  9924 ;;		_robo_init
  9925 ;;		_robot_read
  9926 ;;		_RobotDrive
  9927 ;;		_robotTurn
  9928 ;;		_robotMove
  9929 ;;		_ser_puts
  9930 ;;		_ser_puts2
  9931 ;;		_ser_puthex
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           psect	text1093
  9935                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  9936                           	line	70
  9937                           	global	__size_of_ser_putch
  9938  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  9939                           	
  9940  164D                     _ser_putch:	
  9941                           	opt	stack 3
  9942                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  9943                           ;ser_putch@c stored from wreg
  9944  164D  1283               	bcf	status, 5	;RP0=0, select bank0
  9945  164E  1303               	bcf	status, 6	;RP1=0, select bank0
  9946  164F  00A1               	movwf	(ser_putch@c)
  9947                           	line	71
  9948                           	
  9949  1650                     l10697:	
  9950                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  9951  1650  2E52               	goto	l10699
  9952                           	
  9953  1651                     l6774:	
  9954                           	line	72
  9955                           ;ser.c: 72: continue;
  9956  1651  2E52               	goto	l10699
  9957                           	
  9958  1652                     l6773:	
  9959                           	line	71
  9960                           	
  9961  1652                     l10699:	
  9962  1652  1683               	bsf	status, 5	;RP0=1, select bank1
  9963  1653  1303               	bcf	status, 6	;RP1=0, select bank1
  9964  1654  0855               	movf	(_txiptr)^080h,w	;volatile
  9965  1655  3E01               	addlw	01h
  9966  1656  390F               	andlw	0Fh
  9967  1657  0656               	xorwf	(_txoptr)^080h,w	;volatile
  9968  1658  1903               	skipnz
  9969  1659  2E5B               	goto	u3991
  9970  165A  2E5C               	goto	u3990
  9971  165B                     u3991:
  9972  165B  2E52               	goto	l10699
  9973  165C                     u3990:
  9974                           	
  9975  165C                     l6775:	
  9976                           	line	73
  9977                           ;ser.c: 73: GIE=0;
  9978  165C  138B               	bcf	(95/8),(95)&7
  9979                           	line	74
  9980                           	
  9981  165D                     l10701:	
  9982                           ;ser.c: 74: txfifo[txiptr] = c;
  9983  165D  1283               	bcf	status, 5	;RP0=0, select bank0
  9984  165E  1303               	bcf	status, 6	;RP1=0, select bank0
  9985  165F  0821               	movf	(ser_putch@c),w
  9986  1660  00A0               	movwf	(??_ser_putch+0)+0
  9987  1661  1683               	bsf	status, 5	;RP0=1, select bank1
  9988  1662  1303               	bcf	status, 6	;RP1=0, select bank1
  9989  1663  0855               	movf	(_txiptr)^080h,w
  9990  1664  3EA0               	addlw	_txfifo&0ffh
  9991  1665  0084               	movwf	fsr0
  9992  1666  1283               	bcf	status, 5	;RP0=0, select bank0
  9993  1667  1303               	bcf	status, 6	;RP1=0, select bank0
  9994  1668  0820               	movf	(??_ser_putch+0)+0,w
  9995  1669  1783               	bsf	status, 7	;select IRP bank3
  9996  166A  0080               	movwf	indf
  9997                           	line	75
  9998                           	
  9999  166B                     l10703:	
 10000                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 10001  166B  1683               	bsf	status, 5	;RP0=1, select bank1
 10002  166C  1303               	bcf	status, 6	;RP1=0, select bank1
 10003  166D  0855               	movf	(_txiptr)^080h,w	;volatile
 10004  166E  3E01               	addlw	01h
 10005  166F  390F               	andlw	0Fh
 10006  1670  1283               	bcf	status, 5	;RP0=0, select bank0
 10007  1671  1303               	bcf	status, 6	;RP1=0, select bank0
 10008  1672  00A0               	movwf	(??_ser_putch+0)+0
 10009  1673  0820               	movf	(??_ser_putch+0)+0,w
 10010  1674  1683               	bsf	status, 5	;RP0=1, select bank1
 10011  1675  1303               	bcf	status, 6	;RP1=0, select bank1
 10012  1676  00D5               	movwf	(_txiptr)^080h	;volatile
 10013                           	line	76
 10014                           	
 10015  1677                     l10705:	
 10016                           ;ser.c: 76: TXIE=1;
 10017  1677  160C               	bsf	(1124/8)^080h,(1124)&7
 10018                           	line	77
 10019                           	
 10020  1678                     l10707:	
 10021                           ;ser.c: 77: GIE=1;
 10022  1678  178B               	bsf	(95/8),(95)&7
 10023                           	line	78
 10024                           	
 10025  1679                     l6776:	
 10026  1679  0008               	return
 10027                           	opt stack 0
 10028                           GLOBAL	__end_of_ser_putch
 10029  167A                     	__end_of_ser_putch:
 10030 ;; =============== function _ser_putch ends ============
 10031                           
 10032                           	signat	_ser_putch,4216
 10033                           	global	_Menu
 10034                           psect	text1094,local,class=CODE,delta=2
 10035                           global __ptext1094
 10036  091B                     __ptext1094:
 10037                           
 10038 ;; *************** function _Menu *****************
 10039 ;; Defined at:
 10040 ;;		line 181 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;  BTN_input       1    wreg     unsigned char 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      unsigned char 
 10047 ;; Registers used:
 10048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10054 ;;      Params:         0       0       0       0       0
 10055 ;;      Locals:         0       1       0       0       0
 10056 ;;      Temps:          0       0       0       0       0
 10057 ;;      Totals:         0       1       0       0       0
 10058 ;;Total ram usage:        1 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; Hardware stack levels required when called:    3
 10061 ;; This function calls:
 10062 ;;		Nothing
 10063 ;; This function is called by:
 10064 ;;		_main
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           psect	text1094
 10068                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10069                           	line	181
 10070                           	global	__size_of_Menu
 10071  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 10072                           	
 10073  091B                     _Menu:	
 10074                           	opt	stack 4
 10075                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 10076                           ;Menu@BTN_input stored from wreg
 10077  091B  1283               	bcf	status, 5	;RP0=0, select bank0
 10078  091C  1303               	bcf	status, 6	;RP1=0, select bank0
 10079  091D  00A0               	movwf	(Menu@BTN_input)
 10080                           	line	182
 10081                           	
 10082  091E                     l10609:	
 10083                           ;HMI.c: 182: switch (BTN_input)
 10084  091E  294D               	goto	l10627
 10085                           	line	184
 10086                           ;HMI.c: 183: {
 10087                           ;HMI.c: 184: case 1:
 10088                           	
 10089  091F                     l4550:	
 10090                           	line	186
 10091                           ;HMI.c: 186: break;
 10092  091F  295F               	goto	l10629
 10093                           	line	187
 10094                           ;HMI.c: 187: case 2:
 10095                           	
 10096  0920                     l4552:	
 10097                           	line	189
 10098                           ;HMI.c: 189: break;
 10099  0920  295F               	goto	l10629
 10100                           	line	190
 10101                           ;HMI.c: 190: case 3:
 10102                           	
 10103  0921                     l4553:	
 10104                           	line	191
 10105                           	
 10106  0921                     l10611:	
 10107                           ;HMI.c: 191: pos--;
 10108  0921  30FF               	movlw	low(-1)
 10109  0922  1683               	bsf	status, 5	;RP0=1, select bank1
 10110  0923  1303               	bcf	status, 6	;RP1=0, select bank1
 10111  0924  07BE               	addwf	(_pos)^080h,f
 10112  0925  1803               	skipnc
 10113  0926  0ABF               	incf	(_pos+1)^080h,f
 10114  0927  30FF               	movlw	high(-1)
 10115  0928  07BF               	addwf	(_pos+1)^080h,f
 10116                           	line	192
 10117                           	
 10118  0929                     l10613:	
 10119                           ;HMI.c: 192: if (pos < 0)
 10120  0929  1FBF               	btfss	(_pos+1)^080h,7
 10121  092A  292C               	goto	u3841
 10122  092B  292D               	goto	u3840
 10123  092C                     u3841:
 10124  092C  295F               	goto	l10629
 10125  092D                     u3840:
 10126                           	line	193
 10127                           	
 10128  092D                     l10615:	
 10129                           ;HMI.c: 193: pos = 6 - 1;
 10130  092D  3005               	movlw	low(05h)
 10131  092E  00BE               	movwf	(_pos)^080h
 10132  092F  3000               	movlw	high(05h)
 10133  0930  00BF               	movwf	((_pos)^080h)+1
 10134  0931  295F               	goto	l10629
 10135                           	
 10136  0932                     l4554:	
 10137                           	line	195
 10138                           ;HMI.c: 195: break;
 10139  0932  295F               	goto	l10629
 10140                           	line	196
 10141                           ;HMI.c: 196: case 4:
 10142                           	
 10143  0933                     l4555:	
 10144                           	line	197
 10145                           	
 10146  0933                     l10617:	
 10147                           ;HMI.c: 197: pos++;
 10148  0933  3001               	movlw	low(01h)
 10149  0934  1683               	bsf	status, 5	;RP0=1, select bank1
 10150  0935  1303               	bcf	status, 6	;RP1=0, select bank1
 10151  0936  07BE               	addwf	(_pos)^080h,f
 10152  0937  1803               	skipnc
 10153  0938  0ABF               	incf	(_pos+1)^080h,f
 10154  0939  3000               	movlw	high(01h)
 10155  093A  07BF               	addwf	(_pos+1)^080h,f
 10156                           	line	198
 10157                           ;HMI.c: 198: if (pos == 6)
 10158  093B  3006               	movlw	06h
 10159  093C  063E               	xorwf	(_pos)^080h,w
 10160  093D  043F               	iorwf	(_pos+1)^080h,w
 10161  093E  1D03               	skipz
 10162  093F  2941               	goto	u3851
 10163  0940  2942               	goto	u3850
 10164  0941                     u3851:
 10165  0941  295F               	goto	l10629
 10166  0942                     u3850:
 10167                           	line	199
 10168                           	
 10169  0942                     l10619:	
 10170                           ;HMI.c: 199: pos = 0;
 10171  0942  01BE               	clrf	(_pos)^080h
 10172  0943  01BF               	clrf	(_pos+1)^080h
 10173  0944  295F               	goto	l10629
 10174                           	
 10175  0945                     l4556:	
 10176                           	line	201
 10177                           ;HMI.c: 201: break;
 10178  0945  295F               	goto	l10629
 10179                           	line	202
 10180                           ;HMI.c: 202: case 5:
 10181                           	
 10182  0946                     l4557:	
 10183                           	line	203
 10184                           	
 10185  0946                     l10621:	
 10186                           ;HMI.c: 203: return pos;
 10187  0946  1683               	bsf	status, 5	;RP0=1, select bank1
 10188  0947  1303               	bcf	status, 6	;RP1=0, select bank1
 10189  0948  083E               	movf	(_pos)^080h,w
 10190  0949  2961               	goto	l4558
 10191                           	
 10192  094A                     l10623:	
 10193  094A  2961               	goto	l4558
 10194                           	line	206
 10195                           ;HMI.c: 206: default:
 10196                           	
 10197  094B                     l4559:	
 10198                           	line	208
 10199                           ;HMI.c: 208: break;
 10200  094B  295F               	goto	l10629
 10201                           	line	209
 10202                           	
 10203  094C                     l10625:	
 10204                           ;HMI.c: 209: }
 10205  094C  295F               	goto	l10629
 10206                           	line	182
 10207                           	
 10208  094D                     l4549:	
 10209                           	
 10210  094D                     l10627:	
 10211  094D  1283               	bcf	status, 5	;RP0=0, select bank0
 10212  094E  0820               	movf	(Menu@BTN_input),w
 10213                           	; Switch size 1, requested type "space"
 10214                           ; Number of cases is 5, Range of values is 1 to 5
 10215                           ; switch strategies available:
 10216                           ; Name         Instructions Cycles
 10217                           ; simple_byte           16     9 (average)
 10218                           ; direct_byte           26    11 (fixed)
 10219                           ; jumptable            263     9 (fixed)
 10220                           ;	Chosen strategy is simple_byte
 10221                           
 10222                           	opt asmopt_off
 10223  094F  3A01               	xorlw	1^0	; case 1
 10224  0950  1903               	skipnz
 10225  0951  295F               	goto	l10629
 10226  0952  3A03               	xorlw	2^1	; case 2
 10227  0953  1903               	skipnz
 10228  0954  295F               	goto	l10629
 10229  0955  3A01               	xorlw	3^2	; case 3
 10230  0956  1903               	skipnz
 10231  0957  2921               	goto	l10611
 10232  0958  3A07               	xorlw	4^3	; case 4
 10233  0959  1903               	skipnz
 10234  095A  2933               	goto	l10617
 10235  095B  3A01               	xorlw	5^4	; case 5
 10236  095C  1903               	skipnz
 10237  095D  2946               	goto	l10621
 10238  095E  295F               	goto	l10629
 10239                           	opt asmopt_on
 10240                           
 10241                           	line	209
 10242                           	
 10243  095F                     l4551:	
 10244                           	line	210
 10245                           	
 10246  095F                     l10629:	
 10247                           ;HMI.c: 210: return 255;
 10248  095F  30FF               	movlw	(0FFh)
 10249  0960  2961               	goto	l4558
 10250                           	
 10251  0961                     l10631:	
 10252                           	line	211
 10253                           	
 10254  0961                     l4558:	
 10255  0961  0008               	return
 10256                           	opt stack 0
 10257                           GLOBAL	__end_of_Menu
 10258  0962                     	__end_of_Menu:
 10259 ;; =============== function _Menu ends ============
 10260                           
 10261                           	signat	_Menu,4217
 10262                           	global	_ser_init
 10263                           psect	text1095,local,class=CODE,delta=2
 10264                           global __ptext1095
 10265  1548                     __ptext1095:
 10266                           
 10267 ;; *************** function _ser_init *****************
 10268 ;; Defined at:
 10269 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;		None
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;		None               void
 10276 ;; Registers used:
 10277 ;;		wreg, status,2, status,0
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10283 ;;      Params:         0       0       0       0       0
 10284 ;;      Locals:         0       0       0       0       0
 10285 ;;      Temps:          0       1       0       0       0
 10286 ;;      Totals:         0       1       0       0       0
 10287 ;;Total ram usage:        1 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; Hardware stack levels required when called:    3
 10290 ;; This function calls:
 10291 ;;		Nothing
 10292 ;; This function is called by:
 10293 ;;		_init
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           psect	text1095
 10297                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 10298                           	line	113
 10299                           	global	__size_of_ser_init
 10300  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 10301                           	
 10302  1548                     _ser_init:	
 10303                           	opt	stack 3
 10304                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 10305                           	line	114
 10306                           	
 10307  1548                     l10583:	
 10308                           ;ser.c: 114: TRISC |= 0b10000000;
 10309  1548  1683               	bsf	status, 5	;RP0=1, select bank1
 10310  1549  1303               	bcf	status, 6	;RP1=0, select bank1
 10311  154A  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 10312                           	line	115
 10313                           	
 10314  154B                     l10585:	
 10315                           ;ser.c: 115: TRISC &= 0b10111111;
 10316  154B  30BF               	movlw	(0BFh)
 10317  154C  1283               	bcf	status, 5	;RP0=0, select bank0
 10318  154D  1303               	bcf	status, 6	;RP1=0, select bank0
 10319  154E  00A0               	movwf	(??_ser_init+0)+0
 10320  154F  0820               	movf	(??_ser_init+0)+0,w
 10321  1550  1683               	bsf	status, 5	;RP0=1, select bank1
 10322  1551  1303               	bcf	status, 6	;RP1=0, select bank1
 10323  1552  0587               	andwf	(135)^080h,f	;volatile
 10324                           	line	116
 10325                           	
 10326  1553                     l10587:	
 10327                           ;ser.c: 116: BRGH=1;
 10328  1553  1518               	bsf	(1218/8)^080h,(1218)&7
 10329                           	line	118
 10330                           	
 10331  1554                     l10589:	
 10332                           ;ser.c: 118: SPBRG=20;
 10333  1554  3014               	movlw	(014h)
 10334  1555  0099               	movwf	(153)^080h	;volatile
 10335                           	line	121
 10336                           	
 10337  1556                     l10591:	
 10338                           ;ser.c: 121: TX9=0;
 10339  1556  1318               	bcf	(1222/8)^080h,(1222)&7
 10340                           	line	122
 10341                           	
 10342  1557                     l10593:	
 10343                           ;ser.c: 122: RX9=0;
 10344  1557  1283               	bcf	status, 5	;RP0=0, select bank0
 10345  1558  1303               	bcf	status, 6	;RP1=0, select bank0
 10346  1559  1318               	bcf	(198/8),(198)&7
 10347                           	line	124
 10348                           	
 10349  155A                     l10595:	
 10350                           ;ser.c: 124: SYNC=0;
 10351  155A  1683               	bsf	status, 5	;RP0=1, select bank1
 10352  155B  1303               	bcf	status, 6	;RP1=0, select bank1
 10353  155C  1218               	bcf	(1220/8)^080h,(1220)&7
 10354                           	line	125
 10355                           	
 10356  155D                     l10597:	
 10357                           ;ser.c: 125: SPEN=1;
 10358  155D  1283               	bcf	status, 5	;RP0=0, select bank0
 10359  155E  1303               	bcf	status, 6	;RP1=0, select bank0
 10360  155F  1798               	bsf	(199/8),(199)&7
 10361                           	line	126
 10362                           	
 10363  1560                     l10599:	
 10364                           ;ser.c: 126: CREN=1;
 10365  1560  1618               	bsf	(196/8),(196)&7
 10366                           	line	127
 10367                           	
 10368  1561                     l10601:	
 10369                           ;ser.c: 127: TXIE=0;
 10370  1561  1683               	bsf	status, 5	;RP0=1, select bank1
 10371  1562  1303               	bcf	status, 6	;RP1=0, select bank1
 10372  1563  120C               	bcf	(1124/8)^080h,(1124)&7
 10373                           	line	128
 10374                           	
 10375  1564                     l10603:	
 10376                           ;ser.c: 128: RCIE=1;
 10377  1564  168C               	bsf	(1125/8)^080h,(1125)&7
 10378                           	line	129
 10379                           	
 10380  1565                     l10605:	
 10381                           ;ser.c: 129: TXEN=1;
 10382  1565  1698               	bsf	(1221/8)^080h,(1221)&7
 10383                           	line	132
 10384                           	
 10385  1566                     l10607:	
 10386                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 10387  1566  3000               	movlw	(0)
 10388  1567  00D6               	movwf	(_txoptr)^080h	;volatile
 10389  1568  00D5               	movwf	(_txiptr)^080h	;volatile
 10390  1569  00D1               	movwf	(_rxoptr)^080h	;volatile
 10391  156A  1283               	bcf	status, 5	;RP0=0, select bank0
 10392  156B  1303               	bcf	status, 6	;RP1=0, select bank0
 10393  156C  00A0               	movwf	(??_ser_init+0)+0
 10394  156D  0820               	movf	(??_ser_init+0)+0,w
 10395  156E  1683               	bsf	status, 5	;RP0=1, select bank1
 10396  156F  1303               	bcf	status, 6	;RP1=0, select bank1
 10397  1570  00D0               	movwf	(_rxiptr)^080h	;volatile
 10398                           	line	133
 10399                           	
 10400  1571                     l6798:	
 10401  1571  0008               	return
 10402                           	opt stack 0
 10403                           GLOBAL	__end_of_ser_init
 10404  1572                     	__end_of_ser_init:
 10405 ;; =============== function _ser_init ends ============
 10406                           
 10407                           	signat	_ser_init,88
 10408                           	global	_adc_read
 10409                           psect	text1096,local,class=CODE,delta=2
 10410                           global __ptext1096
 10411  151F                     __ptext1096:
 10412                           
 10413 ;; *************** function _adc_read *****************
 10414 ;; Defined at:
 10415 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  2    0[BANK0 ] unsigned int 
 10422 ;; Registers used:
 10423 ;;		wreg, status,2, status,0
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10429 ;;      Params:         0       2       0       0       0
 10430 ;;      Locals:         0       2       0       0       0
 10431 ;;      Temps:          0       2       0       0       0
 10432 ;;      Totals:         0       6       0       0       0
 10433 ;;Total ram usage:        6 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; Hardware stack levels required when called:    3
 10436 ;; This function calls:
 10437 ;;		Nothing
 10438 ;; This function is called by:
 10439 ;;		_adc_read_channel
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           psect	text1096
 10443                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10444                           	line	61
 10445                           	global	__size_of_adc_read
 10446  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 10447                           	
 10448  151F                     _adc_read:	
 10449                           	opt	stack 0
 10450                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 10451                           	line	64
 10452                           	
 10453  151F                     l10463:	
 10454                           ;adc.c: 62: volatile unsigned int adc_value;
 10455                           ;adc.c: 64: ADRESH = 0;
 10456  151F  1283               	bcf	status, 5	;RP0=0, select bank0
 10457  1520  1303               	bcf	status, 6	;RP1=0, select bank0
 10458  1521  019E               	clrf	(30)	;volatile
 10459                           	line	66
 10460                           	
 10461  1522                     l10465:	
 10462                           ;adc.c: 66: GO = 1;
 10463  1522  151F               	bsf	(250/8),(250)&7
 10464                           	line	67
 10465                           ;adc.c: 67: while(GO) continue;
 10466  1523  2D24               	goto	l703
 10467                           	
 10468  1524                     l704:	
 10469                           	
 10470  1524                     l703:	
 10471  1524  191F               	btfsc	(250/8),(250)&7
 10472  1525  2D27               	goto	u3651
 10473  1526  2D28               	goto	u3650
 10474  1527                     u3651:
 10475  1527  2D24               	goto	l703
 10476  1528                     u3650:
 10477                           	
 10478  1528                     l705:	
 10479                           	line	68
 10480                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10481  1528  0000               nop ;#
 10482                           	line	69
 10483                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10484  1529  0000               nop ;#
 10485                           	line	70
 10486                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10487  152A  0000               nop ;#
 10488                           psect	text1096
 10489                           	line	73
 10490                           	
 10491  152B                     l10467:	
 10492                           ;adc.c: 73: adc_value = ADRESH;
 10493  152B  1283               	bcf	status, 5	;RP0=0, select bank0
 10494  152C  1303               	bcf	status, 6	;RP1=0, select bank0
 10495  152D  081E               	movf	(30),w	;volatile
 10496  152E  00A2               	movwf	(??_adc_read+0)+0
 10497  152F  01A3               	clrf	(??_adc_read+0)+0+1
 10498  1530  0822               	movf	0+(??_adc_read+0)+0,w
 10499  1531  00A4               	movwf	(adc_read@adc_value)	;volatile
 10500  1532  0823               	movf	1+(??_adc_read+0)+0,w
 10501  1533  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 10502                           	line	74
 10503                           ;adc.c: 74: adc_value <<= 1;
 10504  1534  3001               	movlw	01h
 10505                           	
 10506  1535                     u3665:
 10507  1535  1003               	clrc
 10508  1536  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 10509  1537  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 10510  1538  3EFF               	addlw	-1
 10511  1539  1D03               	skipz
 10512  153A  2D35               	goto	u3665
 10513                           	line	75
 10514                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
 10515  153B  1683               	bsf	status, 5	;RP0=1, select bank1
 10516  153C  1303               	bcf	status, 6	;RP1=0, select bank1
 10517  153D  081E               	movf	(158)^080h,w	;volatile
 10518                           	line	78
 10519                           	
 10520  153E                     l10469:	
 10521                           ;adc.c: 78: return (adc_value);
 10522  153E  1283               	bcf	status, 5	;RP0=0, select bank0
 10523  153F  1303               	bcf	status, 6	;RP1=0, select bank0
 10524  1540  0825               	movf	(adc_read@adc_value+1),w	;volatile
 10525  1541  01A1               	clrf	(?_adc_read+1)
 10526  1542  07A1               	addwf	(?_adc_read+1)
 10527  1543  0824               	movf	(adc_read@adc_value),w	;volatile
 10528  1544  01A0               	clrf	(?_adc_read)
 10529  1545  07A0               	addwf	(?_adc_read)
 10530                           
 10531  1546  2D47               	goto	l706
 10532                           	
 10533  1547                     l10471:	
 10534                           	line	79
 10535                           	
 10536  1547                     l706:	
 10537  1547  0008               	return
 10538                           	opt stack 0
 10539                           GLOBAL	__end_of_adc_read
 10540  1548                     	__end_of_adc_read:
 10541 ;; =============== function _adc_read ends ============
 10542                           
 10543                           	signat	_adc_read,90
 10544                           	global	_isr1
 10545                           psect	text1097,local,class=CODE,delta=2
 10546                           global __ptext1097
 10547  0E6B                     __ptext1097:
 10548                           
 10549 ;; *************** function _isr1 *****************
 10550 ;; Defined at:
 10551 ;;		line 102 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;		None
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;		None
 10556 ;; Return value:  Size  Location     Type
 10557 ;;		None               void
 10558 ;; Registers used:
 10559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10565 ;;      Params:         0       0       0       0       0
 10566 ;;      Locals:         0       0       0       0       0
 10567 ;;      Temps:          5       0       0       0       0
 10568 ;;      Totals:         5       0       0       0       0
 10569 ;;Total ram usage:        5 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:    2
 10572 ;; This function calls:
 10573 ;;		i1___lwmod
 10574 ;;		_ReadButtons
 10575 ;; This function is called by:
 10576 ;;		Interrupt level 1
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           psect	text1097
 10580                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 10581                           	line	102
 10582                           	global	__size_of_isr1
 10583  00A7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 10584                           	
 10585  0E6B                     _isr1:	
 10586                           	opt	stack 0
 10587                           ; Regs used in _isr1: [allreg]
 10588                           psect	intentry,class=CODE,delta=2
 10589                           global __pintentry
 10590  0004                     __pintentry:
 10591                           global interrupt_function
 10592  0004                     interrupt_function:
 10593                           	global saved_w
 10594  007E                     	saved_w	set	btemp+0
 10595  0004  00FE               	movwf	saved_w
 10596  0005  0E03               	swapf	status,w
 10597  0006  00F9               	movwf	(??_isr1+1)
 10598  0007  0804               	movf	fsr0,w
 10599  0008  00FA               	movwf	(??_isr1+2)
 10600  0009  080A               	movf	pclath,w
 10601  000A  00FB               	movwf	(??_isr1+3)
 10602  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 10603  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 10604  000D  087F               	movf	btemp+1,w
 10605  000E  00FC               	movwf	(??_isr1+4)
 10606  000F  120A  158A  2E6B   	ljmp	_isr1
 10607                           psect	text1097
 10608                           	line	105
 10609                           	
 10610  0E6B                     i1l10499:	
 10611                           ;Main.c: 105: if(TMR0IF)
 10612  0E6B  1D0B               	btfss	(90/8),(90)&7
 10613  0E6C  2E6E               	goto	u370_21
 10614  0E6D  2E6F               	goto	u370_20
 10615  0E6E                     u370_21:
 10616  0E6E  2EBE               	goto	i1l10521
 10617  0E6F                     u370_20:
 10618                           	line	107
 10619                           	
 10620  0E6F                     i1l10501:	
 10621                           ;Main.c: 106: {
 10622                           ;Main.c: 107: TMR0IF = 0;
 10623  0E6F  110B               	bcf	(90/8),(90)&7
 10624                           	line	108
 10625                           	
 10626  0E70                     i1l10503:	
 10627                           ;Main.c: 108: TMR0 = 100;
 10628  0E70  3064               	movlw	(064h)
 10629  0E71  0081               	movwf	(1)	;volatile
 10630                           	line	110
 10631                           ;Main.c: 110: RTC_Counter++;
 10632  0E72  3001               	movlw	low(01h)
 10633  0E73  1683               	bsf	status, 5	;RP0=1, select bank1
 10634  0E74  1303               	bcf	status, 6	;RP1=0, select bank1
 10635  0E75  07B2               	addwf	(_RTC_Counter)^080h,f	;volatile
 10636  0E76  1803               	skipnc
 10637  0E77  0AB3               	incf	(_RTC_Counter+1)^080h,f	;volatile
 10638  0E78  3000               	movlw	high(01h)
 10639  0E79  07B3               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 10640                           	line	112
 10641                           	
 10642  0E7A                     i1l10505:	
 10643                           ;Main.c: 112: RTC_FLAG_1MS = 1;
 10644  0E7A  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 10645                           	line	113
 10646                           	
 10647  0E7B                     i1l10507:	
 10648                           ;Main.c: 113: if(RTC_Counter % 250 == 0)
 10649  0E7B  30FA               	movlw	low(0FAh)
 10650  0E7C  00F2               	movwf	(?i1___lwmod)
 10651  0E7D  3000               	movlw	high(0FAh)
 10652  0E7E  00F3               	movwf	((?i1___lwmod))+1
 10653  0E7F  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10654  0E80  01F5               	clrf	1+(?i1___lwmod)+02h
 10655  0E81  07F5               	addwf	1+(?i1___lwmod)+02h
 10656  0E82  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 10657  0E83  01F4               	clrf	0+(?i1___lwmod)+02h
 10658  0E84  07F4               	addwf	0+(?i1___lwmod)+02h
 10659                           
 10660  0E85  160A  118A  2776   	fcall	i1___lwmod
              120A  158A         
 10661  0E8A  0873               	movf	((1+(?i1___lwmod))),w
 10662  0E8B  0472               	iorwf	((0+(?i1___lwmod))),w
 10663  0E8C  1D03               	skipz
 10664  0E8D  2E8F               	goto	u371_21
 10665  0E8E  2E90               	goto	u371_20
 10666  0E8F                     u371_21:
 10667  0E8F  2E92               	goto	i1l10511
 10668  0E90                     u371_20:
 10669                           	line	116
 10670                           	
 10671  0E90                     i1l10509:	
 10672                           ;Main.c: 114: {
 10673                           ;Main.c: 116: RTC_FLAG_250MS = 1;
 10674  0E90  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 10675  0E91  2E92               	goto	i1l10511
 10676                           	line	118
 10677                           	
 10678  0E92                     i1l2207:	
 10679                           	line	119
 10680                           	
 10681  0E92                     i1l10511:	
 10682                           ;Main.c: 118: }
 10683                           ;Main.c: 119: if(RTC_Counter % 500 == 0)
 10684  0E92  30F4               	movlw	low(01F4h)
 10685  0E93  00F2               	movwf	(?i1___lwmod)
 10686  0E94  3001               	movlw	high(01F4h)
 10687  0E95  00F3               	movwf	((?i1___lwmod))+1
 10688  0E96  1683               	bsf	status, 5	;RP0=1, select bank1
 10689  0E97  1303               	bcf	status, 6	;RP1=0, select bank1
 10690  0E98  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10691  0E99  01F5               	clrf	1+(?i1___lwmod)+02h
 10692  0E9A  07F5               	addwf	1+(?i1___lwmod)+02h
 10693  0E9B  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 10694  0E9C  01F4               	clrf	0+(?i1___lwmod)+02h
 10695  0E9D  07F4               	addwf	0+(?i1___lwmod)+02h
 10696                           
 10697  0E9E  160A  118A  2776   	fcall	i1___lwmod
              120A  158A         
 10698  0EA3  0873               	movf	((1+(?i1___lwmod))),w
 10699  0EA4  0472               	iorwf	((0+(?i1___lwmod))),w
 10700  0EA5  1D03               	skipz
 10701  0EA6  2EA8               	goto	u372_21
 10702  0EA7  2EA9               	goto	u372_20
 10703  0EA8                     u372_21:
 10704  0EA8  2EAF               	goto	i1l10517
 10705  0EA9                     u372_20:
 10706                           	line	121
 10707                           	
 10708  0EA9                     i1l10513:	
 10709                           ;Main.c: 120: {
 10710                           ;Main.c: 121: RTC_FLAG_500MS = 1;
 10711  0EA9  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 10712                           	line	122
 10713                           	
 10714  0EAA                     i1l10515:	
 10715                           ;Main.c: 122: RB0 ^= 0x01;
 10716  0EAA  1283               	bcf	status, 5	;RP0=0, select bank0
 10717  0EAB  1303               	bcf	status, 6	;RP1=0, select bank0
 10718  0EAC  3001               	movlw	1<<((48)&7)
 10719  0EAD  0686               	xorwf	((48)/8),f
 10720  0EAE  2EAF               	goto	i1l10517
 10721                           	line	124
 10722                           	
 10723  0EAF                     i1l2208:	
 10724                           	line	125
 10725                           	
 10726  0EAF                     i1l10517:	
 10727                           ;Main.c: 124: }
 10728                           ;Main.c: 125: if (buttonPressed == 0)
 10729  0EAF  08FD               	movf	(_buttonPressed),f
 10730  0EB0  1D03               	skipz	;volatile
 10731  0EB1  2EB3               	goto	u373_21
 10732  0EB2  2EB4               	goto	u373_20
 10733  0EB3                     u373_21:
 10734  0EB3  2EBE               	goto	i1l10521
 10735  0EB4                     u373_20:
 10736                           	line	127
 10737                           	
 10738  0EB4                     i1l10519:	
 10739                           ;Main.c: 126: {
 10740                           ;Main.c: 127: buttonPressed = ReadButtons();
 10741  0EB4  160A  118A  26D6   	fcall	_ReadButtons
              120A  158A         
 10742  0EB9  00F8               	movwf	(??_isr1+0)+0
 10743  0EBA  0878               	movf	(??_isr1+0)+0,w
 10744  0EBB  00FD               	movwf	(_buttonPressed)	;volatile
 10745  0EBC  2EBE               	goto	i1l10521
 10746                           	line	128
 10747                           	
 10748  0EBD                     i1l2209:	
 10749  0EBD  2EBE               	goto	i1l10521
 10750                           	line	129
 10751                           	
 10752  0EBE                     i1l2206:	
 10753                           	line	130
 10754                           	
 10755  0EBE                     i1l10521:	
 10756                           ;Main.c: 128: }
 10757                           ;Main.c: 129: }
 10758                           ;Main.c: 130: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 10759  0EBE  1283               	bcf	status, 5	;RP0=0, select bank0
 10760  0EBF  1303               	bcf	status, 6	;RP1=0, select bank0
 10761  0EC0  1E8C               	btfss	(101/8),(101)&7
 10762  0EC1  2EC3               	goto	u374_21
 10763  0EC2  2EC4               	goto	u374_20
 10764  0EC3                     u374_21:
 10765  0EC3  2EE0               	goto	i1l10531
 10766  0EC4                     u374_20:
 10767                           	
 10768  0EC4                     i1l10523:	
 10769  0EC4  081A               	movf	(26),w	;volatile
 10770  0EC5  00F8               	movwf	(??_isr1+0)+0
 10771  0EC6  1683               	bsf	status, 5	;RP0=1, select bank1
 10772  0EC7  1303               	bcf	status, 6	;RP1=0, select bank1
 10773  0EC8  0850               	movf	(_rxiptr)^080h,w
 10774  0EC9  3EA0               	addlw	_rxfifo&0ffh
 10775  0ECA  0084               	movwf	fsr0
 10776  0ECB  0878               	movf	(??_isr1+0)+0,w
 10777  0ECC  1383               	bcf	status, 7	;select IRP bank1
 10778  0ECD  0080               	movwf	indf
 10779                           	
 10780  0ECE                     i1l10525:	
 10781  0ECE  0850               	movf	(_rxiptr)^080h,w	;volatile
 10782  0ECF  3E01               	addlw	01h
 10783  0ED0  390F               	andlw	0Fh
 10784  0ED1  00F8               	movwf	(??_isr1+0)+0
 10785  0ED2  0878               	movf	(??_isr1+0)+0,w
 10786  0ED3  00D2               	movwf	(_ser_tmp)^080h
 10787                           	
 10788  0ED4                     i1l10527:	
 10789  0ED4  0852               	movf	(_ser_tmp)^080h,w
 10790  0ED5  0651               	xorwf	(_rxoptr)^080h,w	;volatile
 10791  0ED6  1903               	skipnz
 10792  0ED7  2ED9               	goto	u375_21
 10793  0ED8  2EDA               	goto	u375_20
 10794  0ED9                     u375_21:
 10795  0ED9  2EE0               	goto	i1l10531
 10796  0EDA                     u375_20:
 10797                           	
 10798  0EDA                     i1l10529:	
 10799  0EDA  0852               	movf	(_ser_tmp)^080h,w
 10800  0EDB  00F8               	movwf	(??_isr1+0)+0
 10801  0EDC  0878               	movf	(??_isr1+0)+0,w
 10802  0EDD  00D0               	movwf	(_rxiptr)^080h	;volatile
 10803  0EDE  2EE0               	goto	i1l10531
 10804                           	
 10805  0EDF                     i1l2211:	
 10806  0EDF  2EE0               	goto	i1l10531
 10807                           	
 10808  0EE0                     i1l2210:	
 10809                           	
 10810  0EE0                     i1l10531:	
 10811  0EE0  1283               	bcf	status, 5	;RP0=0, select bank0
 10812  0EE1  1E0C               	btfss	(100/8),(100)&7
 10813  0EE2  2EE4               	goto	u376_21
 10814  0EE3  2EE5               	goto	u376_20
 10815  0EE4                     u376_21:
 10816  0EE4  2F06               	goto	i1l2214
 10817  0EE5                     u376_20:
 10818                           	
 10819  0EE5                     i1l10533:	
 10820  0EE5  1683               	bsf	status, 5	;RP0=1, select bank1
 10821  0EE6  1303               	bcf	status, 6	;RP1=0, select bank1
 10822  0EE7  1E0C               	btfss	(1124/8)^080h,(1124)&7
 10823  0EE8  2EEA               	goto	u377_21
 10824  0EE9  2EEB               	goto	u377_20
 10825  0EEA                     u377_21:
 10826  0EEA  2F06               	goto	i1l2214
 10827  0EEB                     u377_20:
 10828                           	
 10829  0EEB                     i1l10535:	
 10830  0EEB  0856               	movf	(_txoptr)^080h,w
 10831  0EEC  3EA0               	addlw	_txfifo&0ffh
 10832  0EED  0084               	movwf	fsr0
 10833  0EEE  1783               	bsf	status, 7	;select IRP bank3
 10834  0EEF  0800               	movf	indf,w
 10835  0EF0  1283               	bcf	status, 5	;RP0=0, select bank0
 10836  0EF1  1303               	bcf	status, 6	;RP1=0, select bank0
 10837  0EF2  0099               	movwf	(25)	;volatile
 10838                           	
 10839  0EF3                     i1l10537:	
 10840  0EF3  3001               	movlw	(01h)
 10841  0EF4  00F8               	movwf	(??_isr1+0)+0
 10842  0EF5  0878               	movf	(??_isr1+0)+0,w
 10843  0EF6  1683               	bsf	status, 5	;RP0=1, select bank1
 10844  0EF7  1303               	bcf	status, 6	;RP1=0, select bank1
 10845  0EF8  07D6               	addwf	(_txoptr)^080h,f	;volatile
 10846                           	
 10847  0EF9                     i1l10539:	
 10848  0EF9  300F               	movlw	(0Fh)
 10849  0EFA  00F8               	movwf	(??_isr1+0)+0
 10850  0EFB  0878               	movf	(??_isr1+0)+0,w
 10851  0EFC  05D6               	andwf	(_txoptr)^080h,f	;volatile
 10852                           	
 10853  0EFD                     i1l10541:	
 10854  0EFD  0856               	movf	(_txoptr)^080h,w	;volatile
 10855  0EFE  0655               	xorwf	(_txiptr)^080h,w	;volatile
 10856  0EFF  1D03               	skipz
 10857  0F00  2F02               	goto	u378_21
 10858  0F01  2F03               	goto	u378_20
 10859  0F02                     u378_21:
 10860  0F02  2F06               	goto	i1l2214
 10861  0F03                     u378_20:
 10862                           	
 10863  0F03                     i1l10543:	
 10864  0F03  120C               	bcf	(1124/8)^080h,(1124)&7
 10865  0F04  2F06               	goto	i1l2214
 10866                           	
 10867  0F05                     i1l2213:	
 10868  0F05  2F06               	goto	i1l2214
 10869                           	
 10870  0F06                     i1l2212:	
 10871                           	line	131
 10872                           	
 10873  0F06                     i1l2214:	
 10874  0F06  087C               	movf	(??_isr1+4),w
 10875  0F07  1283               	bcf	status, 5	;RP0=0, select bank0
 10876  0F08  00FF               	movwf	btemp+1
 10877  0F09  087B               	movf	(??_isr1+3),w
 10878  0F0A  008A               	movwf	pclath
 10879  0F0B  087A               	movf	(??_isr1+2),w
 10880  0F0C  0084               	movwf	fsr0
 10881  0F0D  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 10882  0F0E  0083               	movwf	status
 10883  0F0F  0EFE               	swapf	saved_w,f
 10884  0F10  0E7E               	swapf	saved_w,w
 10885  0F11  0009               	retfie
 10886                           	opt stack 0
 10887                           GLOBAL	__end_of_isr1
 10888  0F12                     	__end_of_isr1:
 10889 ;; =============== function _isr1 ends ============
 10890                           
 10891                           	signat	_isr1,88
 10892                           	global	_ReadButtons
 10893                           psect	text1098,local,class=CODE,delta=2
 10894                           global __ptext1098
 10895  16D6                     __ptext1098:
 10896                           
 10897 ;; *************** function _ReadButtons *****************
 10898 ;; Defined at:
 10899 ;;		line 141 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;		None
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  1    wreg      unsigned char 
 10906 ;; Registers used:
 10907 ;;		wreg, status,2, status,0, pclath, cstack
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10913 ;;      Params:         0       0       0       0       0
 10914 ;;      Locals:         0       0       0       0       0
 10915 ;;      Temps:          0       0       0       0       0
 10916 ;;      Totals:         0       0       0       0       0
 10917 ;;Total ram usage:        0 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:    1
 10920 ;; This function calls:
 10921 ;;		_Debounce
 10922 ;; This function is called by:
 10923 ;;		_isr1
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           psect	text1098
 10927                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10928                           	line	141
 10929                           	global	__size_of_ReadButtons
 10930  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 10931                           	
 10932  16D6                     _ReadButtons:	
 10933                           	opt	stack 0
 10934                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 10935                           	line	143
 10936                           	
 10937  16D6                     i1l10545:	
 10938                           ;HMI.c: 143: Debounce();
 10939  16D6  120A  158A  2488   	fcall	_Debounce
              160A  118A         
 10940                           	line	145
 10941                           	
 10942  16DB                     i1l10547:	
 10943                           ;HMI.c: 145: if(UpPressed)
 10944  16DB  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 10945  16DC  2EDE               	goto	u379_21
 10946  16DD  2EDF               	goto	u379_20
 10947  16DE                     u379_21:
 10948  16DE  2EE3               	goto	i1l4541
 10949  16DF                     u379_20:
 10950                           	line	147
 10951                           	
 10952  16DF                     i1l10549:	
 10953                           ;HMI.c: 146: {
 10954                           ;HMI.c: 147: UpPressed = 0;
 10955  16DF  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 10956                           	line	148
 10957                           	
 10958  16E0                     i1l10551:	
 10959                           ;HMI.c: 148: return 1;
 10960  16E0  3001               	movlw	(01h)
 10961  16E1  2F05               	goto	i1l4542
 10962                           	
 10963  16E2                     i1l10553:	
 10964  16E2  2F05               	goto	i1l4542
 10965                           	line	150
 10966                           	
 10967  16E3                     i1l4541:	
 10968                           	line	152
 10969                           ;HMI.c: 150: }
 10970                           ;HMI.c: 152: if(DownPressed)
 10971  16E3  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 10972  16E4  2EE6               	goto	u380_21
 10973  16E5  2EE7               	goto	u380_20
 10974  16E6                     u380_21:
 10975  16E6  2EEB               	goto	i1l4543
 10976  16E7                     u380_20:
 10977                           	line	154
 10978                           	
 10979  16E7                     i1l10555:	
 10980                           ;HMI.c: 153: {
 10981                           ;HMI.c: 154: DownPressed = 0;
 10982  16E7  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 10983                           	line	155
 10984                           	
 10985  16E8                     i1l10557:	
 10986                           ;HMI.c: 155: return 2;
 10987  16E8  3002               	movlw	(02h)
 10988  16E9  2F05               	goto	i1l4542
 10989                           	
 10990  16EA                     i1l10559:	
 10991  16EA  2F05               	goto	i1l4542
 10992                           	line	157
 10993                           	
 10994  16EB                     i1l4543:	
 10995                           	line	158
 10996                           ;HMI.c: 157: }
 10997                           ;HMI.c: 158: if(LeftPressed)
 10998  16EB  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 10999  16EC  2EEE               	goto	u381_21
 11000  16ED  2EEF               	goto	u381_20
 11001  16EE                     u381_21:
 11002  16EE  2EF3               	goto	i1l4544
 11003  16EF                     u381_20:
 11004                           	line	160
 11005                           	
 11006  16EF                     i1l10561:	
 11007                           ;HMI.c: 159: {
 11008                           ;HMI.c: 160: LeftPressed = 0;
 11009  16EF  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 11010                           	line	161
 11011                           	
 11012  16F0                     i1l10563:	
 11013                           ;HMI.c: 161: return 3;
 11014  16F0  3003               	movlw	(03h)
 11015  16F1  2F05               	goto	i1l4542
 11016                           	
 11017  16F2                     i1l10565:	
 11018  16F2  2F05               	goto	i1l4542
 11019                           	line	163
 11020                           	
 11021  16F3                     i1l4544:	
 11022                           	line	164
 11023                           ;HMI.c: 163: }
 11024                           ;HMI.c: 164: if(RightPressed)
 11025  16F3  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 11026  16F4  2EF6               	goto	u382_21
 11027  16F5  2EF7               	goto	u382_20
 11028  16F6                     u382_21:
 11029  16F6  2EFB               	goto	i1l4545
 11030  16F7                     u382_20:
 11031                           	line	166
 11032                           	
 11033  16F7                     i1l10567:	
 11034                           ;HMI.c: 165: {
 11035                           ;HMI.c: 166: RightPressed = 0;
 11036  16F7  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 11037                           	line	167
 11038                           	
 11039  16F8                     i1l10569:	
 11040                           ;HMI.c: 167: return 4;
 11041  16F8  3004               	movlw	(04h)
 11042  16F9  2F05               	goto	i1l4542
 11043                           	
 11044  16FA                     i1l10571:	
 11045  16FA  2F05               	goto	i1l4542
 11046                           	line	169
 11047                           	
 11048  16FB                     i1l4545:	
 11049                           	line	171
 11050                           ;HMI.c: 169: }
 11051                           ;HMI.c: 171: if(CenterPressed)
 11052  16FB  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 11053  16FC  2EFE               	goto	u383_21
 11054  16FD  2EFF               	goto	u383_20
 11055  16FE                     u383_21:
 11056  16FE  2F03               	goto	i1l10579
 11057  16FF                     u383_20:
 11058                           	line	173
 11059                           	
 11060  16FF                     i1l10573:	
 11061                           ;HMI.c: 172: {
 11062                           ;HMI.c: 173: CenterPressed = 0;
 11063  16FF  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 11064                           	line	174
 11065                           	
 11066  1700                     i1l10575:	
 11067                           ;HMI.c: 174: return 5;
 11068  1700  3005               	movlw	(05h)
 11069  1701  2F05               	goto	i1l4542
 11070                           	
 11071  1702                     i1l10577:	
 11072  1702  2F05               	goto	i1l4542
 11073                           	line	176
 11074                           	
 11075  1703                     i1l4546:	
 11076                           	line	177
 11077                           	
 11078  1703                     i1l10579:	
 11079                           ;HMI.c: 176: }
 11080                           ;HMI.c: 177: return 0;
 11081  1703  3000               	movlw	(0)
 11082  1704  2F05               	goto	i1l4542
 11083                           	
 11084  1705                     i1l10581:	
 11085                           	line	178
 11086                           	
 11087  1705                     i1l4542:	
 11088  1705  0008               	return
 11089                           	opt stack 0
 11090                           GLOBAL	__end_of_ReadButtons
 11091  1706                     	__end_of_ReadButtons:
 11092 ;; =============== function _ReadButtons ends ============
 11093                           
 11094                           	signat	_ReadButtons,89
 11095                           	global	i1___lwmod
 11096                           psect	text1099,local,class=CODE,delta=2
 11097                           global __ptext1099
 11098  1776                     __ptext1099:
 11099                           
 11100 ;; *************** function i1___lwmod *****************
 11101 ;; Defined at:
 11102 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  __lwmod         2    0[COMMON] unsigned int 
 11105 ;;  __lwmod         2    2[COMMON] unsigned int 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  __lwmod         1    5[COMMON] unsigned char 
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  2    0[COMMON] unsigned int 
 11110 ;; Registers used:
 11111 ;;		wreg, status,2, status,0
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11117 ;;      Params:         4       0       0       0       0
 11118 ;;      Locals:         1       0       0       0       0
 11119 ;;      Temps:          1       0       0       0       0
 11120 ;;      Totals:         6       0       0       0       0
 11121 ;;Total ram usage:        6 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; This function calls:
 11124 ;;		Nothing
 11125 ;; This function is called by:
 11126 ;;		_isr1
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           psect	text1099
 11130                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11131                           	line	5
 11132                           	global	__size_ofi1___lwmod
 11133  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 11134                           	
 11135  1776                     i1___lwmod:	
 11136                           	opt	stack 1
 11137                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 11138                           	line	8
 11139                           	
 11140  1776                     i1l11233:	
 11141  1776  0873               	movf	(i1___lwmod@divisor+1),w
 11142  1777  0472               	iorwf	(i1___lwmod@divisor),w
 11143  1778  1903               	skipnz
 11144  1779  2F7B               	goto	u516_21
 11145  177A  2F7C               	goto	u516_20
 11146  177B                     u516_21:
 11147  177B  2FB2               	goto	i1l11251
 11148  177C                     u516_20:
 11149                           	line	9
 11150                           	
 11151  177C                     i1l11235:	
 11152  177C  01F7               	clrf	(i1___lwmod@counter)
 11153  177D  1403               	bsf	status,0
 11154  177E  0DF7               	rlf	(i1___lwmod@counter),f
 11155                           	line	10
 11156  177F  2F8C               	goto	i1l11241
 11157                           	
 11158  1780                     i1l7527:	
 11159                           	line	11
 11160                           	
 11161  1780                     i1l11237:	
 11162  1780  3001               	movlw	01h
 11163                           	
 11164  1781                     u517_25:
 11165  1781  1003               	clrc
 11166  1782  0DF2               	rlf	(i1___lwmod@divisor),f
 11167  1783  0DF3               	rlf	(i1___lwmod@divisor+1),f
 11168  1784  3EFF               	addlw	-1
 11169  1785  1D03               	skipz
 11170  1786  2F81               	goto	u517_25
 11171                           	line	12
 11172                           	
 11173  1787                     i1l11239:	
 11174  1787  3001               	movlw	(01h)
 11175  1788  00F6               	movwf	(??i1___lwmod+0)+0
 11176  1789  0876               	movf	(??i1___lwmod+0)+0,w
 11177  178A  07F7               	addwf	(i1___lwmod@counter),f
 11178  178B  2F8C               	goto	i1l11241
 11179                           	line	13
 11180                           	
 11181  178C                     i1l7526:	
 11182                           	line	10
 11183                           	
 11184  178C                     i1l11241:	
 11185  178C  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 11186  178D  2F8F               	goto	u518_21
 11187  178E  2F90               	goto	u518_20
 11188  178F                     u518_21:
 11189  178F  2F80               	goto	i1l11237
 11190  1790                     u518_20:
 11191  1790  2F92               	goto	i1l11243
 11192                           	
 11193  1791                     i1l7528:	
 11194  1791  2F92               	goto	i1l11243
 11195                           	line	14
 11196                           	
 11197  1792                     i1l7529:	
 11198                           	line	15
 11199                           	
 11200  1792                     i1l11243:	
 11201  1792  0873               	movf	(i1___lwmod@divisor+1),w
 11202  1793  0275               	subwf	(i1___lwmod@dividend+1),w
 11203  1794  1D03               	skipz
 11204  1795  2F98               	goto	u519_25
 11205  1796  0872               	movf	(i1___lwmod@divisor),w
 11206  1797  0274               	subwf	(i1___lwmod@dividend),w
 11207  1798                     u519_25:
 11208  1798  1C03               	skipc
 11209  1799  2F9B               	goto	u519_21
 11210  179A  2F9C               	goto	u519_20
 11211  179B                     u519_21:
 11212  179B  2FA3               	goto	i1l11247
 11213  179C                     u519_20:
 11214                           	line	16
 11215                           	
 11216  179C                     i1l11245:	
 11217  179C  0872               	movf	(i1___lwmod@divisor),w
 11218  179D  02F4               	subwf	(i1___lwmod@dividend),f
 11219  179E  0873               	movf	(i1___lwmod@divisor+1),w
 11220  179F  1C03               	skipc
 11221  17A0  03F5               	decf	(i1___lwmod@dividend+1),f
 11222  17A1  02F5               	subwf	(i1___lwmod@dividend+1),f
 11223  17A2  2FA3               	goto	i1l11247
 11224                           	
 11225  17A3                     i1l7530:	
 11226                           	line	17
 11227                           	
 11228  17A3                     i1l11247:	
 11229  17A3  3001               	movlw	01h
 11230                           	
 11231  17A4                     u520_25:
 11232  17A4  1003               	clrc
 11233  17A5  0CF3               	rrf	(i1___lwmod@divisor+1),f
 11234  17A6  0CF2               	rrf	(i1___lwmod@divisor),f
 11235  17A7  3EFF               	addlw	-1
 11236  17A8  1D03               	skipz
 11237  17A9  2FA4               	goto	u520_25
 11238                           	line	18
 11239                           	
 11240  17AA                     i1l11249:	
 11241  17AA  3001               	movlw	low(01h)
 11242  17AB  02F7               	subwf	(i1___lwmod@counter),f
 11243  17AC  1D03               	btfss	status,2
 11244  17AD  2FAF               	goto	u521_21
 11245  17AE  2FB0               	goto	u521_20
 11246  17AF                     u521_21:
 11247  17AF  2F92               	goto	i1l11243
 11248  17B0                     u521_20:
 11249  17B0  2FB2               	goto	i1l11251
 11250                           	
 11251  17B1                     i1l7531:	
 11252  17B1  2FB2               	goto	i1l11251
 11253                           	line	19
 11254                           	
 11255  17B2                     i1l7525:	
 11256                           	line	20
 11257                           	
 11258  17B2                     i1l11251:	
 11259  17B2  0875               	movf	(i1___lwmod@dividend+1),w
 11260  17B3  01F3               	clrf	(?i1___lwmod+1)
 11261  17B4  07F3               	addwf	(?i1___lwmod+1)
 11262  17B5  0874               	movf	(i1___lwmod@dividend),w
 11263  17B6  01F2               	clrf	(?i1___lwmod)
 11264  17B7  07F2               	addwf	(?i1___lwmod)
 11265                           
 11266  17B8  2FB9               	goto	i1l7532
 11267                           	
 11268  17B9                     i1l11253:	
 11269                           	line	21
 11270                           	
 11271  17B9                     i1l7532:	
 11272  17B9  0008               	return
 11273                           	opt stack 0
 11274                           GLOBAL	__end_ofi1___lwmod
 11275  17BA                     	__end_ofi1___lwmod:
 11276 ;; =============== function i1___lwmod ends ============
 11277                           
 11278                           	signat	i1___lwmod,90
 11279                           	global	_Debounce
 11280                           psect	text1100,local,class=CODE,delta=2
 11281                           global __ptext1100
 11282  0C88                     __ptext1100:
 11283                           
 11284 ;; *************** function _Debounce *****************
 11285 ;; Defined at:
 11286 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;		None
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;		None
 11291 ;; Return value:  Size  Location     Type
 11292 ;;		None               void
 11293 ;; Registers used:
 11294 ;;		wreg, status,2, status,0
 11295 ;; Tracked objects:
 11296 ;;		On entry : 0/0
 11297 ;;		On exit  : 0/0
 11298 ;;		Unchanged: 0/0
 11299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11300 ;;      Params:         0       0       0       0       0
 11301 ;;      Locals:         0       0       0       0       0
 11302 ;;      Temps:          1       0       0       0       0
 11303 ;;      Totals:         1       0       0       0       0
 11304 ;;Total ram usage:        1 bytes
 11305 ;; Hardware stack levels used:    1
 11306 ;; This function calls:
 11307 ;;		Nothing
 11308 ;; This function is called by:
 11309 ;;		_ReadButtons
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           psect	text1100
 11313                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11314                           	line	61
 11315                           	global	__size_of_Debounce
 11316  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 11317                           	
 11318  0C88                     _Debounce:	
 11319                           	opt	stack 0
 11320                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 11321                           	line	63
 11322                           	
 11323  0C88                     i1l10781:	
 11324                           ;HMI.c: 63: if(!RB2)
 11325  0C88  1283               	bcf	status, 5	;RP0=0, select bank0
 11326  0C89  1303               	bcf	status, 6	;RP1=0, select bank0
 11327  0C8A  1906               	btfsc	(50/8),(50)&7
 11328  0C8B  2C8D               	goto	u405_21
 11329  0C8C  2C8E               	goto	u405_20
 11330  0C8D                     u405_21:
 11331  0C8D  2CA2               	goto	i1l4523
 11332  0C8E                     u405_20:
 11333                           	line	65
 11334                           	
 11335  0C8E                     i1l10783:	
 11336                           ;HMI.c: 64: {
 11337                           ;HMI.c: 65: UpDebounceCount++;
 11338  0C8E  3001               	movlw	(01h)
 11339  0C8F  00F2               	movwf	(??_Debounce+0)+0
 11340  0C90  0872               	movf	(??_Debounce+0)+0,w
 11341  0C91  1683               	bsf	status, 5	;RP0=1, select bank1
 11342  0C92  1303               	bcf	status, 6	;RP1=0, select bank1
 11343  0C93  07CC               	addwf	(_UpDebounceCount)^080h,f	;volatile
 11344                           	line	66
 11345                           	
 11346  0C94                     i1l10785:	
 11347                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
 11348  0C94  300A               	movlw	(0Ah)
 11349  0C95  024C               	subwf	(_UpDebounceCount)^080h,w	;volatile
 11350  0C96  1C03               	skipc
 11351  0C97  2C99               	goto	u406_21
 11352  0C98  2C9A               	goto	u406_20
 11353  0C99                     u406_21:
 11354  0C99  2CA6               	goto	i1l4525
 11355  0C9A                     u406_20:
 11356                           	
 11357  0C9A                     i1l10787:	
 11358  0C9A  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 11359  0C9B  2C9D               	goto	u407_21
 11360  0C9C  2C9E               	goto	u407_20
 11361  0C9D                     u407_21:
 11362  0C9D  2CA6               	goto	i1l4525
 11363  0C9E                     u407_20:
 11364                           	line	68
 11365                           	
 11366  0C9E                     i1l10789:	
 11367                           ;HMI.c: 67: {
 11368                           ;HMI.c: 68: UpPressed = 1;
 11369  0C9E  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 11370                           	line	69
 11371                           ;HMI.c: 69: UpReleased = 0;
 11372  0C9F  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 11373  0CA0  2CA6               	goto	i1l4525
 11374                           	line	70
 11375                           	
 11376  0CA1                     i1l4524:	
 11377                           	line	71
 11378                           ;HMI.c: 70: }
 11379                           ;HMI.c: 71: }
 11380  0CA1  2CA6               	goto	i1l4525
 11381                           	line	72
 11382                           	
 11383  0CA2                     i1l4523:	
 11384                           	line	74
 11385                           ;HMI.c: 72: else
 11386                           ;HMI.c: 73: {
 11387                           ;HMI.c: 74: UpDebounceCount = 0;
 11388  0CA2  1683               	bsf	status, 5	;RP0=1, select bank1
 11389  0CA3  1303               	bcf	status, 6	;RP1=0, select bank1
 11390  0CA4  01CC               	clrf	(_UpDebounceCount)^080h	;volatile
 11391                           	line	75
 11392                           ;HMI.c: 75: UpReleased = 1;
 11393  0CA5  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 11394                           	line	76
 11395                           	
 11396  0CA6                     i1l4525:	
 11397                           	line	79
 11398                           ;HMI.c: 76: }
 11399                           ;HMI.c: 79: if(!RB3)
 11400  0CA6  1283               	bcf	status, 5	;RP0=0, select bank0
 11401  0CA7  1303               	bcf	status, 6	;RP1=0, select bank0
 11402  0CA8  1986               	btfsc	(51/8),(51)&7
 11403  0CA9  2CAB               	goto	u408_21
 11404  0CAA  2CAC               	goto	u408_20
 11405  0CAB                     u408_21:
 11406  0CAB  2CC0               	goto	i1l4526
 11407  0CAC                     u408_20:
 11408                           	line	81
 11409                           	
 11410  0CAC                     i1l10791:	
 11411                           ;HMI.c: 80: {
 11412                           ;HMI.c: 81: DownDebounceCount++;
 11413  0CAC  3001               	movlw	(01h)
 11414  0CAD  00F2               	movwf	(??_Debounce+0)+0
 11415  0CAE  0872               	movf	(??_Debounce+0)+0,w
 11416  0CAF  1683               	bsf	status, 5	;RP0=1, select bank1
 11417  0CB0  1303               	bcf	status, 6	;RP1=0, select bank1
 11418  0CB1  07C8               	addwf	(_DownDebounceCount)^080h,f	;volatile
 11419                           	line	82
 11420                           	
 11421  0CB2                     i1l10793:	
 11422                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
 11423  0CB2  300A               	movlw	(0Ah)
 11424  0CB3  0248               	subwf	(_DownDebounceCount)^080h,w	;volatile
 11425  0CB4  1C03               	skipc
 11426  0CB5  2CB7               	goto	u409_21
 11427  0CB6  2CB8               	goto	u409_20
 11428  0CB7                     u409_21:
 11429  0CB7  2CC4               	goto	i1l4528
 11430  0CB8                     u409_20:
 11431                           	
 11432  0CB8                     i1l10795:	
 11433  0CB8  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 11434  0CB9  2CBB               	goto	u410_21
 11435  0CBA  2CBC               	goto	u410_20
 11436  0CBB                     u410_21:
 11437  0CBB  2CC4               	goto	i1l4528
 11438  0CBC                     u410_20:
 11439                           	line	84
 11440                           	
 11441  0CBC                     i1l10797:	
 11442                           ;HMI.c: 83: {
 11443                           ;HMI.c: 84: DownPressed = 1;
 11444  0CBC  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 11445                           	line	85
 11446                           ;HMI.c: 85: DownReleased = 0;
 11447  0CBD  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 11448  0CBE  2CC4               	goto	i1l4528
 11449                           	line	86
 11450                           	
 11451  0CBF                     i1l4527:	
 11452                           	line	87
 11453                           ;HMI.c: 86: }
 11454                           ;HMI.c: 87: }
 11455  0CBF  2CC4               	goto	i1l4528
 11456                           	line	88
 11457                           	
 11458  0CC0                     i1l4526:	
 11459                           	line	90
 11460                           ;HMI.c: 88: else
 11461                           ;HMI.c: 89: {
 11462                           ;HMI.c: 90: DownDebounceCount = 0;
 11463  0CC0  1683               	bsf	status, 5	;RP0=1, select bank1
 11464  0CC1  1303               	bcf	status, 6	;RP1=0, select bank1
 11465  0CC2  01C8               	clrf	(_DownDebounceCount)^080h	;volatile
 11466                           	line	91
 11467                           ;HMI.c: 91: DownReleased = 1;
 11468  0CC3  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 11469                           	line	92
 11470                           	
 11471  0CC4                     i1l4528:	
 11472                           	line	94
 11473                           ;HMI.c: 92: }
 11474                           ;HMI.c: 94: if(!RB4)
 11475  0CC4  1283               	bcf	status, 5	;RP0=0, select bank0
 11476  0CC5  1303               	bcf	status, 6	;RP1=0, select bank0
 11477  0CC6  1A06               	btfsc	(52/8),(52)&7
 11478  0CC7  2CC9               	goto	u411_21
 11479  0CC8  2CCA               	goto	u411_20
 11480  0CC9                     u411_21:
 11481  0CC9  2CDE               	goto	i1l4529
 11482  0CCA                     u411_20:
 11483                           	line	96
 11484                           	
 11485  0CCA                     i1l10799:	
 11486                           ;HMI.c: 95: {
 11487                           ;HMI.c: 96: LeftDebounceCount++;
 11488  0CCA  3001               	movlw	(01h)
 11489  0CCB  00F2               	movwf	(??_Debounce+0)+0
 11490  0CCC  0872               	movf	(??_Debounce+0)+0,w
 11491  0CCD  1683               	bsf	status, 5	;RP0=1, select bank1
 11492  0CCE  1303               	bcf	status, 6	;RP1=0, select bank1
 11493  0CCF  07C9               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 11494                           	line	97
 11495                           	
 11496  0CD0                     i1l10801:	
 11497                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
 11498  0CD0  300A               	movlw	(0Ah)
 11499  0CD1  0249               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 11500  0CD2  1C03               	skipc
 11501  0CD3  2CD5               	goto	u412_21
 11502  0CD4  2CD6               	goto	u412_20
 11503  0CD5                     u412_21:
 11504  0CD5  2CE2               	goto	i1l4531
 11505  0CD6                     u412_20:
 11506                           	
 11507  0CD6                     i1l10803:	
 11508  0CD6  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 11509  0CD7  2CD9               	goto	u413_21
 11510  0CD8  2CDA               	goto	u413_20
 11511  0CD9                     u413_21:
 11512  0CD9  2CE2               	goto	i1l4531
 11513  0CDA                     u413_20:
 11514                           	line	99
 11515                           	
 11516  0CDA                     i1l10805:	
 11517                           ;HMI.c: 98: {
 11518                           ;HMI.c: 99: LeftPressed = 1;
 11519  0CDA  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 11520                           	line	100
 11521                           ;HMI.c: 100: LeftReleased = 0;
 11522  0CDB  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 11523  0CDC  2CE2               	goto	i1l4531
 11524                           	line	101
 11525                           	
 11526  0CDD                     i1l4530:	
 11527                           	line	102
 11528                           ;HMI.c: 101: }
 11529                           ;HMI.c: 102: }
 11530  0CDD  2CE2               	goto	i1l4531
 11531                           	line	103
 11532                           	
 11533  0CDE                     i1l4529:	
 11534                           	line	105
 11535                           ;HMI.c: 103: else
 11536                           ;HMI.c: 104: {
 11537                           ;HMI.c: 105: LeftDebounceCount = 0;
 11538  0CDE  1683               	bsf	status, 5	;RP0=1, select bank1
 11539  0CDF  1303               	bcf	status, 6	;RP1=0, select bank1
 11540  0CE0  01C9               	clrf	(_LeftDebounceCount)^080h	;volatile
 11541                           	line	106
 11542                           ;HMI.c: 106: LeftReleased = 1;
 11543  0CE1  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 11544                           	line	107
 11545                           	
 11546  0CE2                     i1l4531:	
 11547                           	line	109
 11548                           ;HMI.c: 107: }
 11549                           ;HMI.c: 109: if(!RB5)
 11550  0CE2  1283               	bcf	status, 5	;RP0=0, select bank0
 11551  0CE3  1303               	bcf	status, 6	;RP1=0, select bank0
 11552  0CE4  1A86               	btfsc	(53/8),(53)&7
 11553  0CE5  2CE7               	goto	u414_21
 11554  0CE6  2CE8               	goto	u414_20
 11555  0CE7                     u414_21:
 11556  0CE7  2CFC               	goto	i1l4532
 11557  0CE8                     u414_20:
 11558                           	line	111
 11559                           	
 11560  0CE8                     i1l10807:	
 11561                           ;HMI.c: 110: {
 11562                           ;HMI.c: 111: RightDebounceCount++;
 11563  0CE8  3001               	movlw	(01h)
 11564  0CE9  00F2               	movwf	(??_Debounce+0)+0
 11565  0CEA  0872               	movf	(??_Debounce+0)+0,w
 11566  0CEB  1683               	bsf	status, 5	;RP0=1, select bank1
 11567  0CEC  1303               	bcf	status, 6	;RP1=0, select bank1
 11568  0CED  07CB               	addwf	(_RightDebounceCount)^080h,f	;volatile
 11569                           	line	112
 11570                           	
 11571  0CEE                     i1l10809:	
 11572                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
 11573  0CEE  300A               	movlw	(0Ah)
 11574  0CEF  024B               	subwf	(_RightDebounceCount)^080h,w	;volatile
 11575  0CF0  1C03               	skipc
 11576  0CF1  2CF3               	goto	u415_21
 11577  0CF2  2CF4               	goto	u415_20
 11578  0CF3                     u415_21:
 11579  0CF3  2D00               	goto	i1l4534
 11580  0CF4                     u415_20:
 11581                           	
 11582  0CF4                     i1l10811:	
 11583  0CF4  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 11584  0CF5  2CF7               	goto	u416_21
 11585  0CF6  2CF8               	goto	u416_20
 11586  0CF7                     u416_21:
 11587  0CF7  2D00               	goto	i1l4534
 11588  0CF8                     u416_20:
 11589                           	line	114
 11590                           	
 11591  0CF8                     i1l10813:	
 11592                           ;HMI.c: 113: {
 11593                           ;HMI.c: 114: RightPressed = 1;
 11594  0CF8  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 11595                           	line	115
 11596                           ;HMI.c: 115: RightReleased = 0;
 11597  0CF9  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 11598  0CFA  2D00               	goto	i1l4534
 11599                           	line	116
 11600                           	
 11601  0CFB                     i1l4533:	
 11602                           	line	117
 11603                           ;HMI.c: 116: }
 11604                           ;HMI.c: 117: }
 11605  0CFB  2D00               	goto	i1l4534
 11606                           	line	118
 11607                           	
 11608  0CFC                     i1l4532:	
 11609                           	line	120
 11610                           ;HMI.c: 118: else
 11611                           ;HMI.c: 119: {
 11612                           ;HMI.c: 120: RightDebounceCount = 0;
 11613  0CFC  1683               	bsf	status, 5	;RP0=1, select bank1
 11614  0CFD  1303               	bcf	status, 6	;RP1=0, select bank1
 11615  0CFE  01CB               	clrf	(_RightDebounceCount)^080h	;volatile
 11616                           	line	121
 11617                           ;HMI.c: 121: RightReleased = 1;
 11618  0CFF  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 11619                           	line	122
 11620                           	
 11621  0D00                     i1l4534:	
 11622                           	line	124
 11623                           ;HMI.c: 122: }
 11624                           ;HMI.c: 124: if(!RB6)
 11625  0D00  1283               	bcf	status, 5	;RP0=0, select bank0
 11626  0D01  1303               	bcf	status, 6	;RP1=0, select bank0
 11627  0D02  1B06               	btfsc	(54/8),(54)&7
 11628  0D03  2D05               	goto	u417_21
 11629  0D04  2D06               	goto	u417_20
 11630  0D05                     u417_21:
 11631  0D05  2D1A               	goto	i1l4535
 11632  0D06                     u417_20:
 11633                           	line	126
 11634                           	
 11635  0D06                     i1l10815:	
 11636                           ;HMI.c: 125: {
 11637                           ;HMI.c: 126: CenterDebounceCount++;
 11638  0D06  3001               	movlw	(01h)
 11639  0D07  00F2               	movwf	(??_Debounce+0)+0
 11640  0D08  0872               	movf	(??_Debounce+0)+0,w
 11641  0D09  1683               	bsf	status, 5	;RP0=1, select bank1
 11642  0D0A  1303               	bcf	status, 6	;RP1=0, select bank1
 11643  0D0B  07C5               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 11644                           	line	127
 11645                           	
 11646  0D0C                     i1l10817:	
 11647                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
 11648  0D0C  300A               	movlw	(0Ah)
 11649  0D0D  0245               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 11650  0D0E  1C03               	skipc
 11651  0D0F  2D11               	goto	u418_21
 11652  0D10  2D12               	goto	u418_20
 11653  0D11                     u418_21:
 11654  0D11  2D1F               	goto	i1l4538
 11655  0D12                     u418_20:
 11656                           	
 11657  0D12                     i1l10819:	
 11658  0D12  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 11659  0D13  2D15               	goto	u419_21
 11660  0D14  2D16               	goto	u419_20
 11661  0D15                     u419_21:
 11662  0D15  2D1F               	goto	i1l4538
 11663  0D16                     u419_20:
 11664                           	line	129
 11665                           	
 11666  0D16                     i1l10821:	
 11667                           ;HMI.c: 128: {
 11668                           ;HMI.c: 129: CenterPressed = 1;
 11669  0D16  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 11670                           	line	130
 11671                           ;HMI.c: 130: CenterReleased = 0;
 11672  0D17  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 11673  0D18  2D1F               	goto	i1l4538
 11674                           	line	131
 11675                           	
 11676  0D19                     i1l4536:	
 11677                           	line	132
 11678                           ;HMI.c: 131: }
 11679                           ;HMI.c: 132: }
 11680  0D19  2D1F               	goto	i1l4538
 11681                           	line	133
 11682                           	
 11683  0D1A                     i1l4535:	
 11684                           	line	135
 11685                           ;HMI.c: 133: else
 11686                           ;HMI.c: 134: {
 11687                           ;HMI.c: 135: CenterDebounceCount = 0;
 11688  0D1A  1683               	bsf	status, 5	;RP0=1, select bank1
 11689  0D1B  1303               	bcf	status, 6	;RP1=0, select bank1
 11690  0D1C  01C5               	clrf	(_CenterDebounceCount)^080h	;volatile
 11691                           	line	136
 11692                           ;HMI.c: 136: CenterReleased = 1;
 11693  0D1D  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 11694  0D1E  2D1F               	goto	i1l4538
 11695                           	line	137
 11696                           	
 11697  0D1F                     i1l4537:	
 11698                           	line	138
 11699                           	
 11700  0D1F                     i1l4538:	
 11701  0D1F  0008               	return
 11702                           	opt stack 0
 11703                           GLOBAL	__end_of_Debounce
 11704  0D20                     	__end_of_Debounce:
 11705 ;; =============== function _Debounce ends ============
 11706                           
 11707                           	signat	_Debounce,88
 11708                           psect	text1101,local,class=CODE,delta=2
 11709                           global __ptext1101
 11710  0000                     __ptext1101:
 11711                           	global	btemp
 11712  007E                     	btemp set 07Eh
 11713                           
 11714                           	DABS	1,126,2	;btemp
 11715                           	global	wtemp0
 11716  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 04 15:52:56 2015

 __end_of_lcd_write_control 14C1             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                _IRdistance 00B0                          fsr 0004         ___wmul@multiplicand 0022  
                       l700 14D6                         l703 1524                         l704 1524  
                       l705 1528                         l706 1547                         l690 173F  
                       l691 1768                         l692 1743                         l693 1747  
                       l694 174B                         l695 174F                         l696 1753  
                       l689 1757                         l697 1775                         _GIE 005F  
                       _RB0 0030                         _RC0 0038                         _RB2 0032  
                       _RC1 0039                         _RB3 0033                         _RC2 003A  
                       _RB4 0034                         _RB5 0035                         _RE0 0048  
                       _RB6 0036                         _RE1 0049                         _RE2 004A  
                       _RX9 00C6                         _TX9 04C6                         _abs 1706  
                       _pos 00BE                         fsr0 0004                         indf 0000  
              ___awmod@sign 0026            ??_robotMoveSpeed 005D             ?_lcd_set_cursor 0072  
                      ?_abs 0026                        l1402 1485                        l1410 164C  
                      l1411 164C                        l3003 0B34                        l3020 0458  
                      l3012 0300                        l3004 0B6A                        l2300 0BD4  
                      l2220 0023                        l3013 050A                        l3021 0506  
                      l1405 1472                        l3005 0B56                        l2301 0BEB  
                      l2221 0038                        l3022 04AE                        l3014 0356  
                      l3006 0B90                        l2302 0C0A                        l2230 0277  
                      l2222 0049                        l3015 0509                        l3023 0505  
                      l2223 0287                        l2231 00F8                        l3024 0504  
                      l3016 03AC                        l1408 163B                        l2240 01D4  
                      l2232 0121                        l2224 004A                        l3017 0508  
                      l3025 050A                        l1409 1622                        l3009 14EC  
                      l2217 16D5                        l2225 029D                        l2241 027E  
                      l2233 013B                        l3018 0402                        l2242 027F  
                      l2234 0168                        l2226 0050                        l3019 0507  
                      l2243 0285                        l2235 019F                        l2227 0075  
                      l2244 02A4                        l2236 01B9                        l2228 0098  
                      l1429 159C                        l2245 02A5                        l2237 01D1  
                      l2229 00F3                        l2270 0A9F                        l2246 02A5  
                      l2238 01D5                        l2271 0A73                        l2280 0AB2  
                      l2272 0AB0                        l2273 0A75                        l2274 0A77  
                      l2290 08F6                        l2275 0A87                        l2291 08F8  
                      l2283 08E4                        l2276 0A95                        l2268 0A67  
                      l2292 091A                        l2284 08EF                        l2277 0AB2  
                      l2269 0A72                        l2285 0907                        l2293 0904  
                      l2278 0A9D                        l2294 0919                        l2286 08F0  
                      l1399 14C0                        l2279 0AB1                        l2295 091A  
                      l2287 0918                        l2288 08F2                        l2289 08F4  
                      l2298 0BA8                        l2299 0C01                        l3720 14A1  
                      l6040 16A6                        l3721 14A1                        l3722 14A6  
                      l6034 151E                        l3730 09F0                        l3723 14AC  
                      l3731 0A01                        l6043 0D82                        l6060 07BD  
                      l6044 0D32                        l6061 07F1                        l6037 0A54  
                      l6045 0D41                        l4550 091F                        l3726 09C2  
                      l6046 0DB9                        l4551 095F                        l3727 09C9  
                      l6047 0DC4                        l4552 0920                        l3728 09E6  
                      l6064 173A                        l4553 0921                        l3729 09D0  
                      l4554 0932                        l4570 0631                        l4555 0933  
                      l6059 079F                        l4571 065A                        l4556 0945  
                      l4564 065C                        l4572 0669                        l4549 094D  
                      l4557 0946                        l4565 0524                        l4558 0961  
                      l4566 058B                        l4559 094B                        l4567 059E  
                      l4568 0669                        l4569 05E6                        l7510 15AC  
                      l7511 15C1                        l7512 15C8                        l7520 099B  
                      l7521 09A9                        l7522 09B1                        l7530 17E9  
                      l6810 068B                        l7610 0F86                        l7515 09AA  
                      l7531 17F7                        l6811 0686                        l7611 0F9B  
                      l7516 097C                        l7532 17FF                        l7620 0E2D  
                      l6812 0764                        l6820 06E2                        l7612 0FB2  
                      l7509 15A2                        l7517 0970                        l7525 17F8  
                      l7621 0E19                        l6821 06FF                        l6813 0687  
                      l7613 0FB7                        l7518 0981                        l7526 17D2  
                      l7622 0E1A                        l6822 0744                        l6814 0688  
                      l7614 0FCC                        l7519 0982                        l7527 17C6  
                      l7623 0E2C                        l6807 0750                        l6823 0704  
                      l6815 06A0                        l7615 0FE3                        l7607 0F2D  
                      l7528 17D7                        l7624 0E51                        l7720 0AE3  
                      l6824 074F                        l6816 0689                        l6808 0672  
                      l7608 0FFF                        l7529 17D8                        l7625 0E3D  
                      l7721 0AD7                        l6825 0763                        l6817 06BA  
                      l6809 0684                        l7609 0F46                        l7626 0E4A  
                      l7618 0DE2                        l7722 0AE8                        l6826 0769  
                      l6818 06C5                        l6770 15F4                        l6763 14F8  
                      l7627 0E3E                        l7619 0E6A                        l7723 0AE9  
                      l6819 06ED                        l6764 1505                        l7628 0E50  
                      l7724 0AFA                        l6773 1652                        l7629 0E61  
                      l7725 0B08                        l7717 0AC3                        l7645 1605  
                      l6774 1651                        l7726 0B13                        l7718 0ACD  
                      l7646 1620                        l6775 165C                        l7727 0B1A  
                      l7719 0B09                        l6767 15CB                        l6776 1679  
                      l6768 15CA                        l7841 0C21                        l6769 15D4  
                      l7850 0C54                        l7851 0C60                        l7843 0C19  
                      l7852 0C55                        l7844 0C87                        l7853 0C64  
                      l7845 0C2F                        l6798 1571                        l7854 0C6E  
                      l7846 0C22                        l7855 0C87                        l7847 0C36  
                      l7848 0C4D                        l7849 0C37                        _CHS0 00FB  
                      _CHS1 00FC                        _CHS2 00FD                        STR_1 0862  
                      STR_2 0859                        STR_3 0874                        STR_4 087D  
                      STR_5 086B                        STR_6 0850                        STR_7 08A1  
                      STR_8 08A5                        STR_9 088D                        _BRGH 04C2  
                      _CREN 00C4                        u4000 14A5                        u4001 14A4  
                      u5010 0ABA                        u5011 0AB9                        u4300 15A6  
                      u5020 0AC7                        u4301 15A5                        u5021 0AC6  
                      u4230 14F3                        u5030 0AD3                        u4231 14F2  
                      u5031 0AD2                        u4240 1500                        u4400 09A8  
                      u4241 14FF                        u4401 09A7                        u4330 15C0  
                      u4410 17C2                        u5050 0AE7                        u4331 15BF  
                      u4315 15AD                        u4411 17C1                        u5051 0AE6  
                      u4340 096C                        u5060 0AF3                        u5220 09BB  
                      u5300 0368                        u4325 15B4                        u4341 096B  
                      u5061 0AF2                        u5045 0AD8                        u5221 09BA  
                      u5301 0367                        u4430 17D6                        u5230 09F0  
                      u5310 03B5                        u4431 17D5                        u5231 09EF  
                      u6007 09D9                        u5311 03B4                        u4360 0980  
                      u4440 17E2                        u5080 0B07                        u5240 0780  
                      u5320 03BE                        u5400 06B0                        u4361 097F  
                      u4441 17E1                        u4425 17C7                        u5081 0B06  
                      u5065 0AEF                        u6017 1481                        u5241 077F  
                      u5321 03BD                        u5401 06AF                        u3650 1528  
                      u5090 0B0D                        u5330 040B                        u5250 02B3  
                      u5410 06C3                        u3651 1527                        u4355 0971  
                      u5075 0AFB                        u6027 14BB                        u5235 09EC  
                      u5331 040A                        u5251 02B2                        u5411 06C2  
                      _PEIE 005E                        u4380 0993                        u4460 17F6  
                      u5340 0414                        u5260 02BC                        u5420 06E0  
                      u5500 0F3E                        u4381 0992                        u4461 17F5  
                      u4445 17DE                        u6037 14D4                        u5341 0413  
                      u5261 02BB                        u5421 06DF                        u5501 0F3D  
                      u4710 0C11                        u5350 0461                        u5270 0309  
                      u5430 06EC                        u5510 0F56                        u4375 0983  
                      u4455 17EA                        u6047 176A                        u5351 0460  
                      u5271 0308                        u5431 06EB                        u3840 092D  
                      u4800 0C79                        u4720 0C18                        u5360 046A  
                      u5280 0312                        u5440 06F3                        u5520 0F68  
                      u3665 1535                        u3841 092C                        u4385 098F  
                      u4721 0C17                        u5361 0469                        u5281 0311  
                      u5441 06F2                        u5425 06DC                        u3850 0942  
                      u4810 0C86                        u5370 04B7                        u5290 035F  
                      u5450 074E                        u5530 0F8A                        u3851 0941  
                      u4395 099C                        u5371 04B6                        u5291 035E  
                      u5451 074D                        u5531 0F89                        u5515 0F52  
                      _RCIE 0465                        u4740 0C35                        u4900 0DD8  
                      u5380 04C0                        u5460 0762                        u5620 0FE2  
                      u5700 0A6B                        _RCIF 0065                        u4805 0C75  
                      u4741 0C34                        u4901 0DD7                        u5381 04BF  
                      u5461 0761                        u5621 0FE1                        u5605 0FCD  
                      u5541 0F93                        u5525 0F64                        u5701 0A6A  
                      u4910 0DED                        u5390 0678                        u5470 15D4  
                      u5542 0F9A                        u5630 15FC                        u5710 0BA6  
                      u4735 0C27                        u5391 0677                        u5471 15D3  
                      u5615 0FD5                        u5631 15FB                        u5711 0BA5  
                      u4760 0C53                        u4920 0E08                        u5640 164B  
                      u5720 0BBF                        u5800 0116                        u4761 0C52  
                      u4921 0E07                        u5641 164A                        u5721 0BBE  
                      u5801 0115                        u4930 0E0F                        u5570 0FB1  
                      u5490 0F25                        u5650 0B32                        u5730 0BE4  
                      u5810 0130                        u4755 0C46                        u4931 0E0E  
                      u4915 0DE9                        u5571 0FB0                        u5555 0F9C  
                      u5491 0F24                        u5651 0B31                        u5731 0BE3  
                      u5715 0BA2                        u5811 012F                        u4780 0C64  
                      u5580 0FBB                        u5660 0B4A                        u5740 0C00  
                      u5900 027D                        u5820 014A                        u4781 0C63  
                      u5485 171B                        u5581 0FBA                        u5565 0FA4  
                      u5661 0B49                        u5741 0BFF                        u5725 0BBB  
                      u5821 0149                        u5805 0112                        u3990 165C  
                      u4790 0C68                        u4950 0E2B                        u5670 0B69  
                      u5750 0D3D                        u5830 0159                        u3991 165B  
                      u4791 0C67                        u4775 0C58                        u4951 0E2A  
                      u5591 0FC4                        u5671 0B68                        u5655 0B2E  
                      u5831 0158                        u5815 012C                        u4960 0E33  
                      u5592 0FCB                        u5680 0515                        u5760 0DB8  
                      u5840 0177                        u4961 0E32                        u4945 0E1B  
                      u5745 0BFC                        u5761 0DB7                        u5841 0176  
                      u5825 0146                        u5690 0578                        u5770 08E8  
                      u5850 0186                        _OERR 00C1                        u5675 0B65  
                      u5691 0577                        u5771 08E7                        u5851 0185  
                      u5835 0155                        u4980 0E4F                        u5860 01AE  
                      u5780 0027                        u4981 0E4E                        u5765 0DB4  
                      u5861 01AD                        u5845 0173                        u5917 0081  
                      u5781 0026                        u4990 0E55                        u5870 01B4  
                      u5790 003C                        u4975 0E40                        u5695 0574  
                      u5871 01B3                        u5855 0182                        u5927 00A4  
                      u5880 01BF                        u5881 01BE                        u5865 01AA  
                      u5937 00C2                        u5890 01CC                        u5891 01CB  
                      u5947 00DC                        u5957 01F4                        u5967 0243  
                      u5895 01C8                        u5977 0260                        u5987 0A14  
                      u5997 0A37                        _TMR0 0001                  _ChargeMode 08D5  
                      _SPEN 00C7                        _TXIE 0464                        _WREN 0C62  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
       __size_of_ADCconvert 0263                        _Menu 091B      __end_of_lcd_write_data 1486  
                      abs@v 0026                        _isr1 0E6B                        _main 0015  
              ___ftpack@arg 0020                        _init 16A7                ___ftpack@exp 0023  
                      btemp 007E              _CenterReleased 0381                        start 0012  
              ___ftmul@cntr 004A                ___ftmul@sign 004B               ??_ReadButtons 0073  
              ___fttol@exp1 0035                       ??_abs 0028                ___fttol@lval 0031  
     readAvgDistance@tempIR 0034                       ?_Menu 0072                       l11101 0DE1  
                     l11031 0C22                       l11023 0C0B                       l11111 0E02  
                     l11103 0DE2                       l11041 0C55                       l11033 0C2F  
                     l11025 0C11                       l11121 0E1A                       l11113 0E04  
                     l11105 0DF4                       l11051 0C86                       l11043 0C60  
                     l11035 0C37                       l11027 0C19                       l11131 0E4A  
                     l11115 0E08                       l11123 0E2D                       l11107 0DF5  
                     l11045 0C68                       l11037 0C3B                       l11029 0C20  
                     l11125 0E33                       l11133 0E51                       l11117 0E0F  
                     l11109 0DFB                       l11301 09B6                       l11047 0C70  
                     l11039 0C45                       l11135 0E55                       l11127 0E3C  
                     l11119 0E18                       l11311 09CD                       l11303 09BB  
                     l10601 1561                       l11049 0C82                       l11137 0E61  
                     l11129 0E3E                       l11161 0ACD                       l11153 0AB3  
                     l11321 09FC                       l11313 09D5                       l11305 09C2  
                     l11401 06BA                       l10603 1564                       l10611 0921  
                     l11139 0E6A                       l11171 0AE9                       l11163 0AD3  
                     l11155 0ABA                       l11323 09FD                       l11315 09F2  
                     l11307 09C9                       l11331 077A                       l11411 06E2  
                     l11403 06BD                       l10605 1565                       l10621 0946  
                     l10613 0929                       l10701 165D                       l11181 0B0D  
                     l11173 0AF3                       l11165 0AD7                       l11157 0AC3  
                     l11261 1756                       l11325 09FE                       l11317 09F8  
                     l11309 09CC                       l11333 0780                       l11341 02BC  
                     l11421 06FF                       l11413 06E6                       l11405 06C4  
                     l11501 0FA3                       l10471 1547                       l10463 151F  
                     l10607 1566                       l10631 0961                       l10623 094A  
                     l10615 092D                       l10703 166B                       l10711 149E  
                     l10455 1502                       l11183 0B13                       l11175 0AFA  
                     l11167 0ADE                       l11159 0AC7                       l11263 1757  
                     l11255 173E                       l11271 14C1                       l11319 09FB  
                     l11335 079F                       l11327 076A                       l11351 035F  
                     l11343 0300                       l11423 0704                       l11415 06ED  
                     l11407 06C5                       l11431 0750                       l11511 0FCC  
                     l11503 0FAB                       l10465 1522                       l10625 094C  
                     l10617 0933                       l10609 091E                       l10705 1677  
                     l10713 14A6                       l10457 1504                       l11097 0DC5  
                     l11185 0B1A                       l11177 0B01                       l11169 0AE3  
                     l11257 1753                       l11265 1768                       l11273 14C4  
                     l11281 14B0                       l11329 0772                       l11361 0402  
                     l11353 0368                       l11345 0309                       l11337 02A8  
                     l11425 0738                       l11417 06F3                       l11409 06E1  
                     l11433 0764                       l11441 15D5                       l11513 0FD4  
                     l11505 0FB2                       l11521 15F5                       l11601 16D2  
                     l10467 152B                       l10619 0942                       l10627 094D  
                     l10707 1678                       l10715 14AA                       l11099 0DD8  
                     l11179 0B09                       l11267 176C                       l11259 1755  
                     l11275 14C8                       l11283 14B3                       l11291 1479  
                     l11371 046A                       l11363 040B                       l11355 03AC  
                     l11347 0312                       l11339 02B3                       l11435 0769  
                     l11427 073F                       l11419 06FA                       l11451 15F4  
                     l11443 15E1                       l11515 0FDC                       l11507 0FB7  
                     l11523 15FC                       l11531 146C                       l11603 16D3  
                     l11611 0B33                       l10469 153E                       l10629 095F  
                     l10717 14AC                       l10709 149C                       l10901 15C1  
                     l11269 1775                       l11277 14CC                       l11285 14B5  
                     l11293 147B                       l11373 04AE                       l11365 0414  
                     l11357 03B5                       l11349 0356                       l11429 0744  
                     l11381 0672                       l11445 15E7                       l11437 15C9  
                     l11461 1692                       l11453 167A                       l11517 0FE3  
                     l11509 0FBB                       l11525 1605                       l11533 1621  
                     l11541 1572                       l11605 16D4                       l11621 0B6A  
                     l11613 0B34                       l11701 0BA7                       l10591 1556  
                     l10583 1548                       l10903 15C8                       l10911 0970  
                     l11279 14D0                       l11287 14B6                       l11295 147C  
                     l11375 04B7                       l11367 0458                       l11359 03BE  
                     l11391 06A0                       l11383 0678                       l11447 15EF  
                     l11439 15CB                       l11463 169A                       l11455 1680  
                     l11519 0FFF                       l11471 0F12                       l11527 1620  
                     l11535 1622                       l11551 157E                       l11543 1576  
                     l11615 0B41                       l11607 0B1B                       l11631 0563  
                     l11623 050B                       l11711 0BE0                       l11703 0BA8  
                     l10593 1557                       l10585 154B                       l10921 0999  
                     l10913 0977                       l10905 0962                       l11289 1476  
                     l11297 1506                       l11377 04C0                       l11369 0461  
                     l11393 06A8                       l11385 067F                       l11449 15F0  
                     l11465 16A0                       l11457 1684                       l11481 0F45  
                     l11473 0F25                       l11529 146B                       l11537 1632  
                     l11553 1584                       l11545 1579                       l11561 0A02  
                     l11617 0B4A                       l11609 0B25                       l11641 05A4  
                     l11633 0569                       l11625 0524                       l11713 0BE4  
                     l11705 0BAD                       l11721 0C01                       l11801 0075  
                     l10595 155A                       l10587 1553                       l10851 14F7  
                     l10923 099B                       l10915 097C                       l10907 0966  
                     l10931 17BA                       l11299 09B2                       l11395 06AC  
                     l11387 068A                       l11379 066D                       l11459 168A  
                     l11467 1706                       l11491 0F7B                       l11483 0F46  
                     l11475 0F2C                       l11539 163B                       l11555 158A  
                     l11547 157A                       l11571 0A3C                       l11563 0A0E  
                     l11619 0B5C                       l11651 060E                       l11643 05BB  
                     l11635 0578                       l11627 052A                       l11723 0C0A  
                     l11715 0BE5                       l11707 0BBF                       l11731 0D37  
                     l11811 00AB                       l11803 0079                       l10597 155D  
                     l10589 1554                       l10853 14F8                       l10845 14ED  
                     l10925 09A2                       l10917 0982                       l10909 096C  
                     l10941 17D8                       l10933 17C2                       l11397 06B0  
                     l11389 068B                       l11469 173A                       l11493 0F81  
                     l11485 0F73                       l11477 0F2D                       l11557 1590  
                     l11549 157D                       l11573 0A48                       l11565 0A19  
                     l11581 16A7                       l11661 0648                       l11653 0614  
                     l11645 05E6                       l11637 058B                       l11629 0552  
                     l11717 0BEB                       l11709 0BD4                       l11741 0D62  
                     l11733 0D3D                       l11725 0D20                       l11821 00F3  
                     l11813 00BA                       l11805 0088                       l10599 1560  
                     l10855 1500                       l10847 14F3                       l10919 0993  
                     l10927 09AA                       l10951 17FF                       l10943 17E2  
                     l10935 17C6                       l11399 06B4                       l11495 0F86  
                     l11487 0F74                       l11479 0F3E                       l11559 1596  
                     l11567 0A25                       l11575 14D7                       l11591 16BA  
                     l11583 16A8                       l11663 065B                       l11655 0625  
                     l11647 05F2                       l11639 059E                       l11671 0A67  
                     l11719 0BF3                       l11743 0D6E                       l11735 0D41  
                     l11727 0D24                       l11751 08D5                       l11831 0116  
                     l11823 00F8                       l11815 00C9                       l11807 0098  
                     l10697 1650                       l10857 1502                       l10849 14F5  
                     l10929 09B1                       l10945 17E9                       l10937 17CD  
                     l11497 0F8A                       l11489 0F75                       l11569 0A2B  
                     l11577 14E5                       l11593 16BE                       l11585 16AC  
                     l11657 0631                       l11649 05FD                       l11665 065C  
                     l11681 0A87                       l11673 0A6B                       l11745 0D7C  
                     l11737 0D4A                       l11729 0D32                       l11761 08F8  
                     l11753 08DD                       l11841 0159                       l11833 0121  
                     l11825 0105                       l11817 00D4                       l11809 009C  
                     l10699 1652                       l10859 1505                       l10947 17F0  
                     l10939 17D2                       l11499 0F9B                       l11579 14EC  
                     l11595 16C3                       l11587 16B4                       l11659 063D  
                     l11691 0A9C                       l11683 0A93                       l11675 0A6C  
                     l11667 0A55                       l11739 0D55                       l11747 0D82  
                     l11763 08FE                       l11771 0907                       l11755 08E4  
                     l11851 0197                       l11843 0163                       l11835 0130  
                     l11827 0107                       l11819 00E3                       l10893 159D  
                     l10949 17F8                       l11597 16C8                       l11589 16B6  
                     l11693 0A9E                       l11685 0A95                       l11677 0A77  
                     l11669 0A5A                       l11749 0DB9                       l11765 08FF  
                     l11757 08E8                       l11861 01B9                       l11853 019C  
                     l11845 0168                       l11837 013B                       l11829 0109  
                     l11781 0027                       l11773 0015                       l10895 15A2  
                     l11599 16CD                       l11687 0A99                       l11679 0A85  
                     l11695 0A9F                       l11767 0903                       l11759 08E9  
                     l11863 01BF                       l11871 01D5                       l11847 0177  
                     l11855 019F                       l11839 014A                       l11791 003C  
                     l11783 0028                       l11775 001B                       l10897 15A6  
                     l11689 0A9A                       l11697 0B91                       l11769 0906  
                     l11881 024A                       l11873 01EC                       l11865 01CC  
                     l11857 01AE                       l11849 0186                       l11793 0047  
                     l11785 002D                       l11777 001D                       l10899 15B3  
                     l11699 0B99                       l11891 0286                       l11883 0258  
                     l11875 01FB                       l11867 01D2                       l11859 01B4  
                     l11795 004A                       l11787 0032                       l11779 0023  
                     l11885 0267                       l11877 0230                       l11869 01D3  
                     l11797 0050                       l11893 0287                       l11789 0038  
      __size_of_calibrateIR 005E                       l11879 023B                       l11887 0277  
                     l11799 005F                       l11895 029D                       l11889 027F  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
                     _EEADR 010D                       STR_10 0899                       STR_11 08A9  
                     STR_12 089D                       STR_13 083A                       STR_14 082A  
                     STR_15 0891                       STR_16 0885                       STR_17 0895  
                     STR_18 081A                       STR_19 0847             __end_of___awmod 0B1B  
                     _CARRY 0018             __end_of___ftmul 1000             __end_of___fttol 0E6B  
           __end_of___lwdiv 09B2             __end_of___lwmod 1800                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
    lcd_write_data@databyte 0022          i1___lwmod@dividend 0074             __end_of_scan360 0C0B  
             ___awtoft@sign 003B               ___ftpack@sign 0024                       _total 00C0  
            __pbitbssCOMMON 0380                       pclath 000A                 _turnlowByte 00D4  
           ?_lcd_write_data 0072           ?_adc_read_channel 0072                       status 0003  
                     wtemp0 007E             __end_of_sprintf 076A            __end_of_Debounce 0D20  
        __size_ofi1___lwmod 0044          ??_adc_read_channel 0026            ?_readAvgDistance 0072  
              __end_of_Menu 0962  __size_of_lcd_write_control 0014            _shortMenuStrings 00DD  
              __end_of_isr1 0F12                __end_of_main 02A8                __end_of_init 16D6  
           rotate@direction 0025                      ??_Menu 0020               ?_readDistance 0028  
    readAvgDistance@fullval 0030                      ??_isr1 0078                      ??_main 0062  
             ___fttol@sign1 0030                      ??_init 0023         __end_of_ReadButtons 1706  
             Menu@BTN_input 0020                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D            __end_of___awtoft 1621  
          __end_of___ftpack 0C88            __end_of_adc_read 1548                 ?_ChargeMode 0072  
                    i1l2210 0EE0                      i1l2211 0EDF                      i1l2212 0F06  
                    i1l2213 0F05                      i1l2214 0F06                      i1l2206 0EBE  
                    i1l2207 0E92                      i1l2208 0EAF                      i1l2209 0EBD  
                    i1l4530 0CDD                      i1l4531 0CE2                      i1l4523 0CA2  
                    i1l4532 0CFC                      i1l4524 0CA1                      i1l4533 0CFB  
                    i1l4525 0CA6                      i1l4541 16E3                      i1l4534 0D00  
                    i1l4526 0CC0                      i1l4542 1705                      i1l4535 0D1A  
                    i1l4527 0CBF                      i1l4543 16EB                      i1l4536 0D19  
                    i1l4528 0CC4                      i1l4544 16F3                      i1l4537 0D1F  
                    i1l4529 0CDE                      i1l4545 16FB                      i1l4538 0D1F  
                    i1l4546 1703                      i1l7530 17A3                      i1l7531 17B1  
                    i1l7532 17B9                      i1l7525 17B2                      i1l7526 178C  
                    i1l7527 1780                      i1l7528 1791                      i1l7529 1792  
                    u410_20 0CBC                      u410_21 0CBB                      u411_20 0CCA  
                    u411_21 0CC9                      u412_20 0CD6                      u412_21 0CD5  
                    u413_20 0CDA                      u405_20 0C8E                      u413_21 0CD9  
                    u405_21 0C8D                      u414_20 0CE8                      u406_20 0C9A  
                    u414_21 0CE7                      u406_21 0C99                      u415_20 0CF4  
                    u407_20 0C9E                      u415_21 0CF3                      u407_21 0C9D  
                    u416_20 0CF8                      u408_20 0CAC                      u416_21 0CF7  
                    u408_21 0CAB                      u520_25 17A4                      u417_20 0D06  
                    u409_20 0CB8                      u521_20 17B0                      u417_21 0D05  
                    u409_21 0CB7                      u521_21 17AF                      u418_20 0D12  
                    u370_20 0E6F                      u418_21 0D11                      u370_21 0E6E  
                    u419_20 0D16                      u371_20 0E90                      u419_21 0D15  
                    u371_21 0E8F                      u516_20 177C                      u380_20 16E7  
                    u372_20 0EA9                      u516_21 177B                      u380_21 16E6  
                    u372_21 0EA8                      u381_20 16EF                      u373_20 0EB4  
                    u381_21 16EE                      u373_21 0EB3                      u517_25 1781  
                    u518_20 1790                      u382_20 16F7                      u374_20 0EC4  
                    u518_21 178F                      u382_21 16F6                      u374_21 0EC3  
               _DistLowByte 00C7                      u519_20 179C                      u383_20 16FF  
                    u375_20 0EDA                      u519_21 179B                      u383_21 16FE  
                    u375_21 0ED9                      u519_25 1798                      u376_20 0EE5  
                    u376_21 0EE4                      u377_20 0EEB                      u377_21 0EEA  
                    u378_20 0F03                      u378_21 0F02                      u379_20 16DF  
                    u379_21 16DE                      _TMR0IE 005D                      _TMR0IF 005A  
              scan360@steps 005F                      _SSPCON 0014                      _SSPBUF 0013  
                _UpReleased 038C            __end_of_lcd_init 159D                      _adcVal 00B6  
           _UpDebounceCount 00CC             RobotDrive@speed 0022                  _RobotDrive 167A  
                    ___wmul 159D                   ??___awmod 0024                _turnhighByte 00D3  
                 ??___ftmul 0042                ??_ADCconvert 002E                   ??___fttol 002C  
                 ??___lwdiv 002A                   ??___lwmod 0032            __end_of_init_adc 14D7  
            ??_readDistance 002A             ___awmod@divisor 0020    __end_of_lcd_write_string 164D  
           ___awmod@counter 0025                      _rotate 09B2                      _rxfifo 00A0  
                    clrloop 1461                      _txfifo 01A0                      _rxiptr 00D0  
                    _rxoptr 00D1                 _BumpSensors 00C4                      _txiptr 00D5  
                 ??_scan360 005B       ___ftmul@f3_as_product 0047                      _txoptr 00D6  
          __end_of_ser_init 1572            __end_of_ser_isrx 1506           __end_ofi1___lwmod 17BA  
                    saved_w 007E               main@shortwall 0069                 _LeftPressed 0384  
    RobotDrive@speedlowByte 0025                   ??_sprintf 0039                 _DownPressed 0382  
         lcd_write_string@s 0027          __end_of_ADCconvert 050B                  ___awtoft@c 0036  
                ___ftmul@f1 003C                  ___ftmul@f2 003F                  ___fttol@f1 0028  
            __pcstackCOMMON 0072                __pidataBANK1 07F2                 _ReadButtons 16D6  
       __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023                   ?_Debounce 0072  
             _buttonPressed 007D                  __pbssBANK1 00A0                  __pbssBANK3 0190  
         _DownDebounceCount 00C8              main@direction1 0065          _RightDebounceCount 00CB  
                __pmaintext 0015                 ?_RobotDrive 0022                     ?___wmul 0020  
                __pintentry 0004                _DistHighByte 00C6                  __ptext1100 0C88  
                __ptext1101 0000       __end_of_UpdateDisplay 066A                  __ptext1060 0D20  
                __ptext1061 0B91                  __ptext1070 1468                  __ptext1062 0A55  
                __ptext1071 15F5                  __ptext1063 050B                  __ptext1080 1506  
                __ptext1072 0F12                  __ptext1064 0B1B                  __ptext1081 1473  
                __ptext1073 1706                  __ptext1065 16A7                  __ptext1090 159D  
                __ptext1082 14AD                  __ptext1074 167A                  __ptext1066 14D7  
                __ptext1091 14ED                  __ptext1083 14C1                  __ptext1075 15C9  
                __ptext1067 0A02                  __ptext1059 08D5                  __ptext1092 1499  
                __ptext1084 173B                  __ptext1076 066A                  __ptext1068 1572  
                __ptext1093 164D                  __ptext1085 0AB3                  __ptext1077 02A8  
                __ptext1069 1621                  __ptext1094 091B                  __ptext1086 0DC5  
                __ptext1078 076A                  __ptext1095 1548                  __ptext1087 0C0B  
                __ptext1079 09B2                  __ptext1096 151F                  __ptext1088 17BA  
                __ptext1097 0E6B                  __ptext1089 0962                  __ptext1098 16D6  
                __ptext1099 1776          __size_of_ser_getch 002C                   ?___awtoft 0036  
                 ?___ftpack 0020                   ?_adc_read 0020                     ?_rotate 0023  
        __size_of_ser_putch 002D          __size_of_robo_init 0019                     i1l10501 0E6F  
                   i1l10511 0E92                     i1l10503 0E70                     i1l11241 178C  
                   i1l11233 1776                     i1l10513 0EA9                     i1l10505 0E7A  
                   i1l10521 0EBE                     i1l11243 1792                     i1l11235 177C  
                   i1l11251 17B2                     i1l10523 0EC4                     i1l10531 0EE0  
                   i1l10515 0EAA                     i1l10507 0E7B                     i1l11253 17B9  
                   i1l11245 179C                     i1l11237 1780                     i1l10541 0EFD  
                   i1l10533 0EE5                     i1l10525 0ECE                     i1l10517 0EAF  
                   i1l10509 0E90                     i1l11247 17A3                     i1l11239 1787  
                   i1l10551 16E0                     i1l10543 0F03                     i1l10535 0EEB  
                   i1l10527 0ED4                     i1l10519 0EB4                     i1l10801 0CD0  
                   i1l11249 17AA                     i1l10561 16EF                     i1l10553 16E2  
                   i1l10545 16D6                     i1l10537 0EF3                     i1l10529 0EDA  
                   i1l10811 0CF4                     i1l10803 0CD6                     i1l10571 16FA  
                   i1l10563 16F0                     i1l10555 16E7                     i1l10547 16DB  
                   i1l10539 0EF9                     i1l10821 0D16                     i1l10813 0CF8  
                   i1l10805 0CDA                     i1l10581 1705                     i1l10573 16FF  
                   i1l10565 16F2                     i1l10557 16E8                     i1l10549 16DF  
                   i1l10815 0D06                     i1l10807 0CE8                     i1l10575 1700  
                   i1l10567 16F7                     i1l10559 16EA                     i1l10817 0D0C  
                   i1l10809 0CEE                     i1l10577 1702                     i1l10569 16F8  
                   i1l10819 0D12                     i1l10579 1703                     i1l10499 0E6B  
                   i1l10781 0C88                     i1l10791 0CAC                     i1l10783 0C8E  
                   i1l10793 0CB2                     i1l10785 0C94                     i1l10795 0CB8  
                   i1l10787 0C9A                     i1l10797 0CBC                     i1l10789 0C9E  
                   i1l10799 0CCA          __size_of_robotTurn 0088                  ??_Debounce 0072  
          ??_lcd_write_data 0020                   ?_lcd_init 0072                     _SSPSTAT 0094  
      __end_of_readDistance 14ED                   ?_init_adc 0072          main@shortwall_3011 006C  
                 ?_ser_init 0072                   ?_ser_isrx 0072               ??_calibrateIR 0059  
                   ___awmod 0AB3             __size_of___wmul 002C                     ___ftmul 0F12  
                   ___fttol 0DC5                     ___lwdiv 0962                     ___lwmod 17BA  
 __size_of_adc_read_channel 003B                  ??___awtoft 0039                  ??___ftpack 0025  
                ??_adc_read 0022             __size_of_rotate 0050                     _scan360 0B91  
                   _dpowers 0810                __size_of_abs 0035            ___awmod@dividend 0022  
                   _lowByte 00CF                     _ser_tmp 00D2                     _sprintf 066A  
                ??_lcd_init 0023         __size_of_RobotDrive 002D        end_of_initialization 08D1  
              ??_ChargeMode 0059           __end_of_ser_getch 15F5                     init_ram 148A  
                ??_init_adc 0020     __size_of_robotMoveSpeed 00A5           __end_of_ser_putch 167A  
   RobotDrive@speedhighByte 0026           __end_of_robo_init 151F                _LeftReleased 0385  
         __end_of_robotTurn 07F2                  ??_ser_init 0020                  ??_ser_isrx 0020  
                   rotate@i 0028                _DownReleased 0383               _RightReleased 038A  
  __size_of_readAvgDistance 0076                  _robot_read 0A02           ?_lcd_write_string 0027  
        __end_of_ChargeMode 091B         __end_of_calibrateIR 0AB3          ??_lcd_write_string 0029  
               AT25256A@CS0 0038                 AT25256A@CS1 0039           adc_read@adc_value 0024  
                 i1___lwmod 1776                  _totalSteps 00C2                  main@choice 006B  
             ?_spi_transfer 0072                 ___ftmul@exp 0046               _CenterPressed 0380  
              ?_ReadButtons 0072              __end_of___wmul 15C9           i1___lwmod@divisor 0072  
         i1___lwmod@counter 0077              __end_of_rotate 0A02         start_initialization 08AE  
               __end_of_abs 173B       __size_of_readDistance 0016           __size_of_Debounce 0098  
                ?i1___lwmod 0072          _TotalDistTravelled 00B4              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038B                ??_RobotDrive 0024  
            _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 0A55                 __pdataBANK1 00D7  
          _adc_read_channel 173B                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 14D7           __size_of___awtoft 002C           __size_of___ftpack 007D  
         __size_of_adc_read 0029                 __pbssCOMMON 007D           ??_readAvgDistance 0030  
             __pcstackBANK0 0020      robotMoveSpeed@distance 0059          __end_of_RobotDrive 16A7  
         __size_of_lcd_init 002B              _robotMoveSpeed 0D20                 sprintf@_val 003F  
               sprintf@flag 003D                 sprintf@prec 003E                _current_step 00E3  
          readAvgDistance@i 0036            readAvgDistance@j 0032           __size_of_init_adc 0016  
          robotTurn@degrees 0022            ___lwdiv@dividend 0028                    ?___awmod 0020  
                  ?___ftmul 003C           __size_of_ser_init 002A                    ?___fttol 0028  
         __size_of_ser_isrx 0019                    ?___lwdiv 0026                    ?___lwmod 002E  
                 __pstrings 0800                   _dist_high 00BA                    ?_scan360 0059  
       readDistance@readVal 002C                  ser_getch@c 0021            ___lwdiv@quotient 002B  
               ??i1___lwmod 0076                    ?_sprintf 0034      __end_of_robotMoveSpeed 0DC5  
   __size_of_lcd_set_cursor 000B           interrupt_function 0004      __size_of_UpdateDisplay 015F  
            ___wmul@product 0024         __size_of_robot_read 0053                  ser_putch@c 0021  
                 _ser_getch 15C9                   _ser_putch 164D                   _robo_init 1506  
                 _robotTurn 076A                _RightPressed 0389        __size_of_ReadButtons 0030  
      __end_of_spi_transfer 14AD                 __stringbase 080F           ___wmul@multiplier 0020  
    UpdateDisplay@adcOutput 0049            spi_transfer@data 0022            spi_transfer@temp 0021  
                  _Debounce 0C88           _LeftDebounceCount 00C9             ?_robotMoveSpeed 0059  
 __size_of_lcd_write_string 002C          scan360@lowestSteps 005D     __size_of_lcd_write_data 0013  
                ?_ser_getch 0072                  ?_ser_putch 0072     adc_read_channel@channel 0027  
                ?_robo_init 0072                   init_fetch 1486                  ?_robotTurn 0022  
                _ADCconvert 02A8            __size_of___awmod 0068            __size_of___ftmul 00EE  
          __size_of___fttol 00A6            __size_of___lwdiv 0050            __size_of___lwmod 0046  
                  ___awtoft 15F5                    ___ftpack 0C0B               _UpdateDisplay 050B  
                  _adc_read 151F                 _currentMenu 00CD            __size_of_scan360 007A  
           ___lwdiv@divisor 0026             ___lwdiv@counter 002D                 _menuStrings 00D7  
                  _highByte 00CE                    _lcd_init 1572                    _dist_low 00BC  
          __size_of_sprintf 0100    __end_of_adc_read_channel 1776   lcd_write_control@databyte 0022  
             __size_of_Menu 0047                    _init_adc 14C1               __size_of_isr1 00A7  
             __size_of_main 0293               __size_of_init 002F                    clear_ram 1460  
                  _ser_init 1548                    _ser_isrx 14ED                    main@RT2A 0067  
                  main@RT2P 006E             _readAvgDistance 0B1B                ?_calibrateIR 0072  
            ?_UpdateDisplay 0072                ??_robot_read 0022         _CenterDebounceCount 00C5  
              _RTC_FLAG_1MS 0386          UpdateDisplay@F1235 0190                    intlevel1 0000  
            _lcd_set_cursor 1468                   sprintf@ap 003C                   sprintf@sp 0043  
          ___lwmod@dividend 0030          __end_of_robot_read 0A55                   stringcode 080A  
               ??_ser_getch 0020                 ??_ser_putch 0020               _distTravelled 00B8  
               ??_robo_init 0022       __size_of_spi_transfer 0014                 ??_robotTurn 0024  
               ?_ADCconvert 0072           _lcd_write_control 14AD            scan360@lowestVal 005B  
        ?_lcd_write_control 0072                  _OPTION_REG 0081                    sprintf@c 0044  
                  sprintf@f 0034         robotMoveSpeed@temp1 0060         robotMoveSpeed@speed 005B  
           ___lwmod@divisor 002E                  _ROBOTerror 00CA             ___lwmod@counter 0033  
                  stringdir 080A                    stringtab 0800         ??_lcd_write_control 0020  
    __end_of_lcd_set_cursor 1473            _lcd_write_string 1621                _spi_transfer 1499  
               _RTC_Counter 00B2     __end_of_readAvgDistance 0B91              _lcd_write_data 1473  
