

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 11 15:15:51 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMoveSpeed
    55                           	FNCALL	_main,_robotTurnSpeed
    56                           	FNCALL	_main,___awtoft
    57                           	FNCALL	_main,___ftmul
    58                           	FNCALL	_main,___fttol
    59                           	FNCALL	_main,_robotTurn
    60                           	FNCALL	_main,_ChargeMode
    61                           	FNCALL	_ChargeMode,_ser_putch
    62                           	FNCALL	_ChargeMode,_UpdateDisplay
    63                           	FNCALL	_robotTurnSpeed,_robotTurn
    64                           	FNCALL	_robotTurnSpeed,_robot_read
    65                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    66                           	FNCALL	_robotTurnSpeed,_abs
    67                           	FNCALL	_robotMoveSpeed,_RobotDrive
    68                           	FNCALL	_robotMoveSpeed,_robot_read
    69                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    70                           	FNCALL	_robotMoveSpeed,_abs
    71                           	FNCALL	_scan360,_readAvgDistance
    72                           	FNCALL	_scan360,_rotate
    73                           	FNCALL	_scan360,_UpdateDisplay
    74                           	FNCALL	_calibrateIR,_rotate
    75                           	FNCALL	_calibrateIR,_UpdateDisplay
    76                           	FNCALL	_UpdateDisplay,_lcd_write_control
    77                           	FNCALL	_UpdateDisplay,_sprintf
    78                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    79                           	FNCALL	_UpdateDisplay,_lcd_write_string
    80                           	FNCALL	_UpdateDisplay,___awmod
    81                           	FNCALL	_readAvgDistance,_readDistance
    82                           	FNCALL	_readAvgDistance,___lwdiv
    83                           	FNCALL	_readAvgDistance,_ADCconvert
    84                           	FNCALL	_init,_ser_init
    85                           	FNCALL	_init,_init_adc
    86                           	FNCALL	_init,_lcd_init
    87                           	FNCALL	_init,_robo_init
    88                           	FNCALL	_readDistance,_adc_read_channel
    89                           	FNCALL	_robot_read,_ser_putch
    90                           	FNCALL	_robot_read,_ser_getch
    91                           	FNCALL	_lcd_init,_lcd_write_control
    92                           	FNCALL	_lcd_write_string,_lcd_write_data
    93                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    94                           	FNCALL	___awtoft,___ftpack
    95                           	FNCALL	___ftmul,___ftpack
    96                           	FNCALL	_abs,___wmul
    97                           	FNCALL	_RobotDrive,_ser_putch
    98                           	FNCALL	_ser_getch,_ser_isrx
    99                           	FNCALL	_sprintf,___lwdiv
   100                           	FNCALL	_sprintf,___lwmod
   101                           	FNCALL	_ADCconvert,___wmul
   102                           	FNCALL	_ADCconvert,___lwdiv
   103                           	FNCALL	_robotTurn,_ser_putch
   104                           	FNCALL	_rotate,_spi_transfer
   105                           	FNCALL	_robo_init,_ser_putch
   106                           	FNCALL	_adc_read_channel,_adc_read
   107                           	FNROOT	_main
   108                           	FNCALL	_isr1,i1___lwmod
   109                           	FNCALL	_isr1,_ReadButtons
   110                           	FNCALL	_ReadButtons,_Debounce
   111                           	FNCALL	intlevel1,_isr1
   112                           	global	intlevel1
   113                           	FNROOT	intlevel1
   114                           	global	_menuStrings
   115                           	global	_shortMenuStrings
   116                           	global	_current_step
   117                           psect	idataBANK1,class=CODE,space=0,delta=2
   118                           global __pidataBANK1
   119  1347                     __pidataBANK1:
   120                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   121                           	line	49
   122                           
   123                           ;initializer for _menuStrings
   124  1347  3453               	retlw	(STR_1-__stringbase)&0ffh
   125  1348  344A               	retlw	(STR_2-__stringbase)&0ffh
   126  1349  3465               	retlw	(STR_3-__stringbase)&0ffh
   127  134A  346E               	retlw	(STR_4-__stringbase)&0ffh
   128  134B  345C               	retlw	(STR_5-__stringbase)&0ffh
   129  134C  3441               	retlw	(STR_6-__stringbase)&0ffh
   130                           	line	50
   131                           
   132                           ;initializer for _shortMenuStrings
   133  134D  3492               	retlw	(STR_7-__stringbase)&0ffh
   134  134E  3496               	retlw	(STR_8-__stringbase)&0ffh
   135  134F  347E               	retlw	(STR_9-__stringbase)&0ffh
   136  1350  348A               	retlw	(STR_10-__stringbase)&0ffh
   137  1351  349A               	retlw	(STR_11-__stringbase)&0ffh
   138  1352  348E               	retlw	(STR_12-__stringbase)&0ffh
   139                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   140                           	line	45
   141                           
   142                           ;initializer for _current_step
   143  1353  343C               	retlw	03Ch
   144                           	global	_dpowers
   145                           psect	strings,class=STRING,delta=2
   146                           global __pstrings
   147  0749                     __pstrings:
   148                           ;	global	stringdir,stringtab,__stringbase
   149  0749                     stringtab:
   150                           ;	String table - string pointers are 1 byte each
   151  0749  1BFF               	btfsc	(btemp+1),7
   152  074A  2F53               	ljmp	stringcode
   153  074B  1383               	bcf	status,7
   154  074C  187F               	btfsc	(btemp+1),0
   155  074D  1783               	bsf	status,7
   156  074E  0800               	movf	indf,w
   157  074F  0A84               	incf fsr
   158  0750  1903               skipnz
   159  0751  0AFF               incf btemp+1
   160  0752  0008               	return
   161  0753                     stringcode:stringdir:
      + 0753                     stringdir:	
   162  0753  3007               movlw high(stringdir)
   163  0754  008A               movwf pclath
   164  0755  0804               movf fsr,w
   165  0756  0A84               incf fsr
   166  0757  0782               	addwf pc
   167  0758                     __stringbase:
   168  0758  3400               	retlw	0
   169                           psect	strings
   170                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   171                           	line	350
   172  0759                     _dpowers:
   173  0759  3401               	retlw	01h
   174  075A  3400               	retlw	0
   175                           
   176  075B  340A               	retlw	0Ah
   177  075C  3400               	retlw	0
   178                           
   179  075D  3464               	retlw	064h
   180  075E  3400               	retlw	0
   181                           
   182  075F  34E8               	retlw	0E8h
   183  0760  3403               	retlw	03h
   184                           
   185  0761  3410               	retlw	010h
   186  0762  3427               	retlw	027h
   187                           
   188                           	global	_dpowers
   189                           	global	UpdateDisplay@F1242
   190                           	global	_txfifo
   191                           	global	_buttonPressed
   192                           	global	_CenterPressed
   193                           	global	_CenterReleased
   194                           	global	_DownPressed
   195                           	global	_DownReleased
   196                           	global	_LeftPressed
   197                           	global	_LeftReleased
   198                           	global	_RTC_FLAG_1MS
   199                           	global	_RTC_FLAG_250MS
   200                           	global	_RTC_FLAG_500MS
   201                           	global	_RightPressed
   202                           	global	_RightReleased
   203                           	global	_UpPressed
   204                           	global	_UpReleased
   205                           	global	_rxfifo
   206                           	global	_IRdistance
   207                           	global	_RTC_Counter
   208                           	global	_TotalDistTravelled
   209                           	global	_adcVal
   210                           	global	_angleTurned
   211                           	global	_distTravelled
   212                           	global	_dist_high
   213                           	global	_dist_low
   214                           	global	_pos
   215                           	global	_total
   216                           	global	_totalSteps
   217                           	global	_AngleHighByte
   218                           	global	_AngleLowByte
   219                           	global	_BumpSensors
   220                           	global	_CenterDebounceCount
   221                           	global	_DistHighByte
   222                           	global	_DistLowByte
   223                           	global	_DownDebounceCount
   224                           	global	_LeftDebounceCount
   225                           	global	_ROBOTerror
   226                           	global	_RightDebounceCount
   227                           	global	_UpDebounceCount
   228                           	global	_VwallSensor
   229                           	global	_currentMenu
   230                           	global	_highByte
   231                           	global	_lowByte
   232                           	global	_rxiptr
   233                           	global	_rxoptr
   234                           	global	_ser_tmp
   235                           	global	_turnhighByte
   236                           	global	_turnlowByte
   237                           	global	_txiptr
   238                           	global	_txoptr
   239                           	global	_ADCON0
   240  001F                     _ADCON0	set	31
   241                           	global	_ADRESH
   242  001E                     _ADRESH	set	30
   243                           	global	_PORTA
   244  0005                     _PORTA	set	5
   245                           	global	_PORTD
   246  0008                     _PORTD	set	8
   247                           	global	_PORTE
   248  0009                     _PORTE	set	9
   249                           	global	_RCREG
   250  001A                     _RCREG	set	26
   251                           	global	_SSPBUF
   252  0013                     _SSPBUF	set	19
   253                           	global	_SSPCON
   254  0014                     _SSPCON	set	20
   255                           	global	_TMR0
   256  0001                     _TMR0	set	1
   257                           	global	_TXREG
   258  0019                     _TXREG	set	25
   259                           	global	AT25256A@CS0
   260  0038                     AT25256A@CS0	set	56
   261                           	global	AT25256A@CS1
   262  0039                     AT25256A@CS1	set	57
   263                           	global	_CARRY
   264  0018                     _CARRY	set	24
   265                           	global	_CHS0
   266  00FB                     _CHS0	set	251
   267                           	global	_CHS1
   268  00FC                     _CHS1	set	252
   269                           	global	_CHS2
   270  00FD                     _CHS2	set	253
   271                           	global	_CREN
   272  00C4                     _CREN	set	196
   273                           	global	_GIE
   274  005F                     _GIE	set	95
   275                           	global	_GO
   276  00FA                     _GO	set	250
   277                           	global	_OERR
   278  00C1                     _OERR	set	193
   279                           	global	_PEIE
   280  005E                     _PEIE	set	94
   281                           	global	_RB0
   282  0030                     _RB0	set	48
   283                           	global	_RB2
   284  0032                     _RB2	set	50
   285                           	global	_RB3
   286  0033                     _RB3	set	51
   287                           	global	_RB4
   288  0034                     _RB4	set	52
   289                           	global	_RB5
   290  0035                     _RB5	set	53
   291                           	global	_RB6
   292  0036                     _RB6	set	54
   293                           	global	_RC0
   294  0038                     _RC0	set	56
   295                           	global	_RC1
   296  0039                     _RC1	set	57
   297                           	global	_RC2
   298  003A                     _RC2	set	58
   299                           	global	_RCIF
   300  0065                     _RCIF	set	101
   301                           	global	_RE0
   302  0048                     _RE0	set	72
   303                           	global	_RE1
   304  0049                     _RE1	set	73
   305                           	global	_RE2
   306  004A                     _RE2	set	74
   307                           	global	_RX9
   308  00C6                     _RX9	set	198
   309                           	global	_SPEN
   310  00C7                     _SPEN	set	199
   311                           	global	_SSPIF
   312  0063                     _SSPIF	set	99
   313                           	global	_TMR0IE
   314  005D                     _TMR0IE	set	93
   315                           	global	_TMR0IF
   316  005A                     _TMR0IF	set	90
   317                           	global	_TXIF
   318  0064                     _TXIF	set	100
   319                           	global	_ADCON1
   320  009F                     _ADCON1	set	159
   321                           	global	_ADRESL
   322  009E                     _ADRESL	set	158
   323                           	global	_OPTION_REG
   324  0081                     _OPTION_REG	set	129
   325                           	global	_SPBRG
   326  0099                     _SPBRG	set	153
   327                           	global	_SSPSTAT
   328  0094                     _SSPSTAT	set	148
   329                           	global	_TRISA
   330  0085                     _TRISA	set	133
   331                           	global	_TRISB
   332  0086                     _TRISB	set	134
   333                           	global	_TRISC
   334  0087                     _TRISC	set	135
   335                           	global	_TRISD
   336  0088                     _TRISD	set	136
   337                           	global	_TRISE
   338  0089                     _TRISE	set	137
   339                           	global	_BRGH
   340  04C2                     _BRGH	set	1218
   341                           	global	_RCIE
   342  0465                     _RCIE	set	1125
   343                           	global	_SYNC
   344  04C4                     _SYNC	set	1220
   345                           	global	_TX9
   346  04C6                     _TX9	set	1222
   347                           	global	_TXEN
   348  04C5                     _TXEN	set	1221
   349                           	global	_TXIE
   350  0464                     _TXIE	set	1124
   351                           	global	_EEADR
   352  010D                     _EEADR	set	269
   353                           	global	_EEDATA
   354  010C                     _EEDATA	set	268
   355                           	global	_EECON1
   356  018C                     _EECON1	set	396
   357                           	global	_EECON2
   358  018D                     _EECON2	set	397
   359                           	global	_RD
   360  0C60                     _RD	set	3168
   361                           	global	_WR
   362  0C61                     _WR	set	3169
   363                           	global	_WREN
   364  0C62                     _WREN	set	3170
   365                           	
   366  0763                     STR_18:	
   367  0763  3420               	retlw	32	;' '
   368  0764  3443               	retlw	67	;'C'
   369  0765  3468               	retlw	104	;'h'
   370  0766  3461               	retlw	97	;'a'
   371  0767  3472               	retlw	114	;'r'
   372  0768  3467               	retlw	103	;'g'
   373  0769  3469               	retlw	105	;'i'
   374  076A  346E               	retlw	110	;'n'
   375  076B  3467               	retlw	103	;'g'
   376  076C  3420               	retlw	32	;' '
   377  076D  344D               	retlw	77	;'M'
   378  076E  346F               	retlw	111	;'o'
   379  076F  3464               	retlw	100	;'d'
   380  0770  3465               	retlw	101	;'e'
   381  0771  3420               	retlw	32	;' '
   382  0772  3400               	retlw	0
   383                           psect	strings
   384                           	
   385  0773                     STR_14:	
   386  0773  345A               	retlw	90	;'Z'
   387  0774  3465               	retlw	101	;'e'
   388  0775  3472               	retlw	114	;'r'
   389  0776  346F               	retlw	111	;'o'
   390  0777  3420               	retlw	32	;' '
   391  0778  3453               	retlw	83	;'S'
   392  0779  3474               	retlw	116	;'t'
   393  077A  3465               	retlw	101	;'e'
   394  077B  3470               	retlw	112	;'p'
   395  077C  345F               	retlw	95	;'_'
   396  077D  344D               	retlw	77	;'M'
   397  077E  346F               	retlw	111	;'o'
   398  077F  3474               	retlw	116	;'t'
   399  0780  346F               	retlw	111	;'o'
   400  0781  3472               	retlw	114	;'r'
   401  0782  3400               	retlw	0
   402                           psect	strings
   403                           	
   404  0783                     STR_13:	
   405  0783  3449               	retlw	73	;'I'
   406  0784  3452               	retlw	82	;'R'
   407  0785  343A               	retlw	58	;':'
   408  0786  3425               	retlw	37	;'%'
   409  0787  3464               	retlw	100	;'d'
   410  0788  3463               	retlw	99	;'c'
   411  0789  346D               	retlw	109	;'m'
   412  078A  3420               	retlw	32	;' '
   413  078B  3444               	retlw	68	;'D'
   414  078C  343A               	retlw	58	;':'
   415  078D  3425               	retlw	37	;'%'
   416  078E  3464               	retlw	100	;'d'
   417  078F  3400               	retlw	0
   418                           psect	strings
   419                           	
   420  0790                     STR_19:	
   421  0790  3420               	retlw	32	;' '
   422  0791  3420               	retlw	32	;' '
   423  0792  3445               	retlw	69	;'E'
   424  0793  3458               	retlw	88	;'X'
   425  0794  3449               	retlw	73	;'I'
   426  0795  3454               	retlw	84	;'T'
   427  0796  3420               	retlw	32	;' '
   428  0797  3420               	retlw	32	;' '
   429  0798  3400               	retlw	0
   430                           psect	strings
   431                           	
   432  0799                     STR_6:	
   433  0799  3420               	retlw	32	;' '
   434  079A  3443               	retlw	67	;'C'
   435  079B  3468               	retlw	104	;'h'
   436  079C  3461               	retlw	97	;'a'
   437  079D  3472               	retlw	114	;'r'
   438  079E  3467               	retlw	103	;'g'
   439  079F  3465               	retlw	101	;'e'
   440  07A0  3420               	retlw	32	;' '
   441  07A1  3400               	retlw	0
   442                           psect	strings
   443                           	
   444  07A2                     STR_2:	
   445  07A2  3453               	retlw	83	;'S'
   446  07A3  3463               	retlw	99	;'c'
   447  07A4  3461               	retlw	97	;'a'
   448  07A5  346E               	retlw	110	;'n'
   449  07A6  345F               	retlw	95	;'_'
   450  07A7  3433               	retlw	51	;'3'
   451  07A8  3436               	retlw	54	;'6'
   452  07A9  3430               	retlw	48	;'0'
   453  07AA  3400               	retlw	0
   454                           psect	strings
   455                           	
   456  07AB                     STR_1:	
   457  07AB  3443               	retlw	67	;'C'
   458  07AC  3461               	retlw	97	;'a'
   459  07AD  346C               	retlw	108	;'l'
   460  07AE  3469               	retlw	105	;'i'
   461  07AF  3462               	retlw	98	;'b'
   462  07B0  345F               	retlw	95	;'_'
   463  07B1  3449               	retlw	73	;'I'
   464  07B2  3452               	retlw	82	;'R'
   465  07B3  3400               	retlw	0
   466                           psect	strings
   467                           	
   468  07B4                     STR_5:	
   469  07B4  3446               	retlw	70	;'F'
   470  07B5  346C               	retlw	108	;'l'
   471  07B6  3477               	retlw	119	;'w'
   472  07B7  345F               	retlw	95	;'_'
   473  07B8  3457               	retlw	87	;'W'
   474  07B9  3461               	retlw	97	;'a'
   475  07BA  346C               	retlw	108	;'l'
   476  07BB  346C               	retlw	108	;'l'
   477  07BC  3400               	retlw	0
   478                           psect	strings
   479                           	
   480  07BD                     STR_3:	
   481  07BD  3444               	retlw	68	;'D'
   482  07BE  3472               	retlw	114	;'r'
   483  07BF  3469               	retlw	105	;'i'
   484  07C0  3476               	retlw	118	;'v'
   485  07C1  3465               	retlw	101	;'e'
   486  07C2  345F               	retlw	95	;'_'
   487  07C3  3432               	retlw	50	;'2'
   488  07C4  346D               	retlw	109	;'m'
   489  07C5  3400               	retlw	0
   490                           psect	strings
   491                           	
   492  07C6                     STR_4:	
   493  07C6  3444               	retlw	68	;'D'
   494  07C7  3472               	retlw	114	;'r'
   495  07C8  3469               	retlw	105	;'i'
   496  07C9  3476               	retlw	118	;'v'
   497  07CA  3465               	retlw	101	;'e'
   498  07CB  345F               	retlw	95	;'_'
   499  07CC  344C               	retlw	76	;'L'
   500  07CD  3400               	retlw	0
   501                           psect	strings
   502                           	
   503  07CE                     STR_16:	
   504  07CE  3443               	retlw	67	;'C'
   505  07CF  344F               	retlw	79	;'O'
   506  07D0  344E               	retlw	78	;'N'
   507  07D1  3446               	retlw	70	;'F'
   508  07D2  3449               	retlw	73	;'I'
   509  07D3  3452               	retlw	82	;'R'
   510  07D4  344D               	retlw	77	;'M'
   511  07D5  3400               	retlw	0
   512                           psect	strings
   513                           	
   514  07D6                     STR_9:	
   515  07D6  3444               	retlw	68	;'D'
   516  07D7  3472               	retlw	114	;'r'
   517  07D8  3432               	retlw	50	;'2'
   518  07D9  3400               	retlw	0
   519                           psect	strings
   520                           	
   521  07DA                     STR_15:	
   522  07DA  343C               	retlw	60	;'<'
   523  07DB  343C               	retlw	60	;'<'
   524  07DC  343C               	retlw	60	;'<'
   525  07DD  3400               	retlw	0
   526                           psect	strings
   527                           	
   528  07DE                     STR_17:	
   529  07DE  343E               	retlw	62	;'>'
   530  07DF  343E               	retlw	62	;'>'
   531  07E0  343E               	retlw	62	;'>'
   532  07E1  3400               	retlw	0
   533                           psect	strings
   534                           	
   535  07E2                     STR_10:	
   536  07E2  3444               	retlw	68	;'D'
   537  07E3  3472               	retlw	114	;'r'
   538  07E4  344C               	retlw	76	;'L'
   539  07E5  3400               	retlw	0
   540                           psect	strings
   541                           	
   542  07E6                     STR_12:	
   543  07E6  3443               	retlw	67	;'C'
   544  07E7  3468               	retlw	104	;'h'
   545  07E8  3467               	retlw	103	;'g'
   546  07E9  3400               	retlw	0
   547                           psect	strings
   548                           	
   549  07EA                     STR_7:	
   550  07EA  3443               	retlw	67	;'C'
   551  07EB  3461               	retlw	97	;'a'
   552  07EC  346C               	retlw	108	;'l'
   553  07ED  3400               	retlw	0
   554                           psect	strings
   555                           	
   556  07EE                     STR_8:	
   557  07EE  3453               	retlw	83	;'S'
   558  07EF  3463               	retlw	99	;'c'
   559  07F0  346E               	retlw	110	;'n'
   560  07F1  3400               	retlw	0
   561                           psect	strings
   562                           	
   563  07F2                     STR_11:	
   564  07F2  3446               	retlw	70	;'F'
   565  07F3  346C               	retlw	108	;'l'
   566  07F4  3477               	retlw	119	;'w'
   567  07F5  3400               	retlw	0
   568                           psect	strings
   569                           	file	"Assignment3_AldnoahZero.as"
   570                           	line	#
   571                           psect cinit,class=CODE,delta=2
   572                           global start_initialization
   573  1400                     start_initialization:
   574                           
   575                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   576                           global __pbitbssCOMMON
   577  0380                     __pbitbssCOMMON:
   578  0380                     _CenterPressed:
   579  0380                            ds      1
   580                           
   581  0381                     _CenterReleased:
   582  0381                            ds      1
   583                           
   584  0382                     _DownPressed:
   585  0382                            ds      1
   586                           
   587  0383                     _DownReleased:
   588  0383                            ds      1
   589                           
   590  0384                     _LeftPressed:
   591  0384                            ds      1
   592                           
   593  0385                     _LeftReleased:
   594  0385                            ds      1
   595                           
   596  0386                     _RTC_FLAG_1MS:
   597  0386                            ds      1
   598                           
   599  0387                     _RTC_FLAG_250MS:
   600  0387                            ds      1
   601                           
   602  0388                     _RTC_FLAG_500MS:
   603  0388                            ds      1
   604                           
   605  0389                     _RightPressed:
   606  0389                            ds      1
   607                           
   608  038A                     _RightReleased:
   609  038A                            ds      1
   610                           
   611  038B                     _UpPressed:
   612  038B                            ds      1
   613                           
   614  038C                     _UpReleased:
   615  038C                            ds      1
   616                           
   617                           psect	bssCOMMON,class=COMMON,space=1
   618                           global __pbssCOMMON
   619  007D                     __pbssCOMMON:
   620  007D                     _buttonPressed:
   621  007D                            ds      1
   622                           
   623                           psect	bssBANK1,class=BANK1,space=1
   624                           global __pbssBANK1
   625  00A0                     __pbssBANK1:
   626  00A0                     _rxfifo:
   627  00A0                            ds      16
   628                           
   629  00B0                     _IRdistance:
   630  00B0                            ds      2
   631                           
   632  00B2                     _RTC_Counter:
   633  00B2                            ds      2
   634                           
   635  00B4                     _TotalDistTravelled:
   636  00B4                            ds      2
   637                           
   638  00B6                     _adcVal:
   639  00B6                            ds      2
   640                           
   641  00B8                     _angleTurned:
   642  00B8                            ds      2
   643                           
   644  00BA                     _distTravelled:
   645  00BA                            ds      2
   646                           
   647  00BC                     _dist_high:
   648  00BC                            ds      2
   649                           
   650  00BE                     _dist_low:
   651  00BE                            ds      2
   652                           
   653  00C0                     _pos:
   654  00C0                            ds      2
   655                           
   656  00C2                     _total:
   657  00C2                            ds      2
   658                           
   659  00C4                     _totalSteps:
   660  00C4                            ds      2
   661                           
   662  00C6                     _AngleHighByte:
   663  00C6                            ds      1
   664                           
   665  00C7                     _AngleLowByte:
   666  00C7                            ds      1
   667                           
   668  00C8                     _BumpSensors:
   669  00C8                            ds      1
   670                           
   671  00C9                     _CenterDebounceCount:
   672  00C9                            ds      1
   673                           
   674  00CA                     _DistHighByte:
   675  00CA                            ds      1
   676                           
   677  00CB                     _DistLowByte:
   678  00CB                            ds      1
   679                           
   680  00CC                     _DownDebounceCount:
   681  00CC                            ds      1
   682                           
   683  00CD                     _LeftDebounceCount:
   684  00CD                            ds      1
   685                           
   686  00CE                     _ROBOTerror:
   687  00CE                            ds      1
   688                           
   689  00CF                     _RightDebounceCount:
   690  00CF                            ds      1
   691                           
   692  00D0                     _UpDebounceCount:
   693  00D0                            ds      1
   694                           
   695  00D1                     _VwallSensor:
   696  00D1                            ds      1
   697                           
   698  00D2                     _currentMenu:
   699  00D2                            ds      1
   700                           
   701  00D3                     _highByte:
   702  00D3                            ds      1
   703                           
   704  00D4                     _lowByte:
   705  00D4                            ds      1
   706                           
   707  00D5                     _rxiptr:
   708  00D5                            ds      1
   709                           
   710  00D6                     _rxoptr:
   711  00D6                            ds      1
   712                           
   713  00D7                     _ser_tmp:
   714  00D7                            ds      1
   715                           
   716  00D8                     _turnhighByte:
   717  00D8                            ds      1
   718                           
   719  00D9                     _turnlowByte:
   720  00D9                            ds      1
   721                           
   722  00DA                     _txiptr:
   723  00DA                            ds      1
   724                           
   725  00DB                     _txoptr:
   726  00DB                            ds      1
   727                           
   728                           psect	dataBANK1,class=BANK1,space=1
   729                           global __pdataBANK1
   730  00DC                     __pdataBANK1:
   731                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   732                           	line	49
   733  00DC                     _menuStrings:
   734  00DC                            ds      6
   735                           
   736                           psect	dataBANK1
   737                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   738                           	line	50
   739  00E2                     _shortMenuStrings:
   740  00E2                            ds      6
   741                           
   742                           psect	dataBANK1
   743                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   744                           	line	45
   745  00E8                     _current_step:
   746  00E8                            ds      1
   747                           
   748                           psect	bssBANK3,class=BANK3,space=1
   749                           global __pbssBANK3
   750  0190                     __pbssBANK3:
   751  0190                     UpdateDisplay@F1242:
   752  0190                            ds      16
   753                           
   754  01A0                     _txfifo:
   755  01A0                            ds      16
   756                           
   757                           psect clrtext,class=CODE,delta=2
   758                           global clear_ram
   759                           ;	Called with FSR containing the base address, and
   760                           ;	W with the last address+1
   761  07F6                     clear_ram:
   762  07F6  0064               	clrwdt			;clear the watchdog before getting into this loop
   763  07F7                     clrloop:
   764  07F7  0180               	clrf	indf		;clear RAM location pointed to by FSR
   765  07F8  0A84               	incf	fsr,f		;increment pointer
   766  07F9  0604               	xorwf	fsr,w		;XOR with final address
   767  07FA  1903               	btfsc	status,2	;have we reached the end yet?
   768  07FB  3400               	retlw	0		;all done for this memory range, return
   769  07FC  0604               	xorwf	fsr,w		;XOR again to restore value
   770  07FD  2FF7               	goto	clrloop		;do the next byte
   771                           
   772                           ; Clear objects allocated to BITCOMMON
   773                           psect cinit,class=CODE,delta=2
   774  1400  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   775  1401  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   776                           ; Clear objects allocated to COMMON
   777                           psect cinit,class=CODE,delta=2
   778  1402  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   779                           ; Clear objects allocated to BANK1
   780                           psect cinit,class=CODE,delta=2
   781  1403  1383               	bcf	status, 7	;select IRP bank0
   782  1404  30A0               	movlw	low(__pbssBANK1)
   783  1405  0084               	movwf	fsr
   784  1406  30DC               	movlw	low((__pbssBANK1)+03Ch)
   785  1407  120A  118A  27F6   	fcall	clear_ram
              160A  118A         
   786                           ; Clear objects allocated to BANK3
   787                           psect cinit,class=CODE,delta=2
   788  140C  1783               	bsf	status, 7	;select IRP bank2
   789  140D  3090               	movlw	low(__pbssBANK3)
   790  140E  0084               	movwf	fsr
   791  140F  30B0               	movlw	low((__pbssBANK3)+020h)
   792  1410  120A  118A  27F6   	fcall	clear_ram
              160A  118A         
   793                           global btemp
   794                           psect inittext,class=CODE,delta=2
   795                           global init_fetch,btemp
   796                           ;	Called with low address in FSR and high address in W
   797  1367                     init_fetch:
   798  1367  087E               	movf btemp,w
   799  1368  008A               	movwf pclath
   800  1369  087F               	movf btemp+1,w
   801  136A  0082               	movwf pc
   802                           global init_ram
   803                           ;Called with:
   804                           ;	high address of idata address in btemp 
   805                           ;	low address of idata address in btemp+1 
   806                           ;	low address of data in FSR
   807                           ;	high address + 1 of data in btemp-1
   808  136B                     init_ram:
   809  136B  160A  118A  2367   	fcall init_fetch
              160A  118A         
   810  1370  0080               	movwf indf,f
   811  1371  0A84               	incf fsr,f
   812  1372  0804               	movf fsr,w
   813  1373  067D               	xorwf btemp-1,w
   814  1374  1903               	btfsc status,2
   815  1375  3400               	retlw 0
   816  1376  0AFF               	incf btemp+1,f
   817  1377  1903               	btfsc status,2
   818  1378  0AFE               	incf btemp,f
   819  1379  2B6B               	goto init_ram
   820                           ; Initialize objects allocated to BANK1
   821                           psect cinit,class=CODE,delta=2
   822                           global init_ram, __pidataBANK1
   823  1415  1383               	bcf	status, 7	;select IRP bank0
   824  1416  30E9               	movlw low(__pdataBANK1+13)
   825  1417  00FD               	movwf btemp-1,f
   826  1418  3013               	movlw high(__pidataBANK1)
   827  1419  00FE               	movwf btemp,f
   828  141A  3047               	movlw low(__pidataBANK1)
   829  141B  00FF               	movwf btemp+1,f
   830  141C  30DC               	movlw low(__pdataBANK1)
   831  141D  0084               	movwf fsr,f
   832  141E  160A  118A  236B   	fcall init_ram
              160A  118A         
   833                           psect cinit,class=CODE,delta=2
   834                           global end_of_initialization
   835                           
   836                           ;End of C runtime variable initialization code
   837                           
   838  1423                     end_of_initialization:
   839  1423  0183               clrf status
   840  1424  120A  118A  2A78   ljmp _main	;jump to C main() function
   841                           psect	cstackCOMMON,class=COMMON,space=1
   842                           global __pcstackCOMMON
   843  0072                     __pcstackCOMMON:
   844                           	global	?_ser_init
   845  0072                     ?_ser_init:	; 0 bytes @ 0x0
   846                           	global	?_robo_init
   847  0072                     ?_robo_init:	; 0 bytes @ 0x0
   848                           	global	?_robot_read
   849  0072                     ?_robot_read:	; 0 bytes @ 0x0
   850                           	global	?_readAvgDistance
   851  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   852                           	global	?_UpdateDisplay
   853  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   854                           	global	?_calibrateIR
   855  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   856                           	global	?_ChargeMode
   857  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   858                           	global	?_ser_putch
   859  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   860                           	global	?_ADCconvert
   861  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   862                           	global	?_init_adc
   863  0072                     ?_init_adc:	; 0 bytes @ 0x0
   864                           	global	?_lcd_write_control
   865  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   866                           	global	?_lcd_write_data
   867  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   868                           	global	?_lcd_set_cursor
   869  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   870                           	global	?_lcd_init
   871  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   872                           	global	?_isr1
   873  0072                     ?_isr1:	; 0 bytes @ 0x0
   874                           	global	?_init
   875  0072                     ?_init:	; 0 bytes @ 0x0
   876                           	global	?_main
   877  0072                     ?_main:	; 0 bytes @ 0x0
   878                           	global	?_Debounce
   879  0072                     ?_Debounce:	; 0 bytes @ 0x0
   880                           	global	??_Debounce
   881  0072                     ??_Debounce:	; 0 bytes @ 0x0
   882                           	global	?_ser_isrx
   883  0072                     ?_ser_isrx:	; 1 bit 
   884                           	global	?_ReadButtons
   885  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   886                           	global	?_Menu
   887  0072                     ?_Menu:	; 1 bytes @ 0x0
   888                           	global	?_ser_getch
   889  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   890                           	global	?_adc_read_channel
   891  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   892                           	global	?_spi_transfer
   893  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   894                           	global	?i1___lwmod
   895  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   896                           	global	i1___lwmod@divisor
   897  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   898  0072                     	ds	1
   899                           	global	??_ReadButtons
   900  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   901  0073                     	ds	1
   902                           	global	i1___lwmod@dividend
   903  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   904  0074                     	ds	2
   905                           	global	??i1___lwmod
   906  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   907  0076                     	ds	1
   908                           	global	i1___lwmod@counter
   909  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   910  0077                     	ds	1
   911                           	global	??_isr1
   912  0078                     ??_isr1:	; 0 bytes @ 0x6
   913  0078                     	ds	5
   914                           psect	cstackBANK0,class=BANK0,space=1
   915                           global __pcstackBANK0
   916  0020                     __pcstackBANK0:
   917                           	global	??_ser_init
   918  0020                     ??_ser_init:	; 0 bytes @ 0x0
   919                           	global	??_Menu
   920  0020                     ??_Menu:	; 0 bytes @ 0x0
   921                           	global	??_ser_putch
   922  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   923                           	global	??_ser_getch
   924  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   925                           	global	??_init_adc
   926  0020                     ??_init_adc:	; 0 bytes @ 0x0
   927                           	global	??_lcd_write_control
   928  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   929                           	global	??_lcd_write_data
   930  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   931                           	global	??_spi_transfer
   932  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   933                           	global	??_ser_isrx
   934  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   935                           	global	?_adc_read
   936  0020                     ?_adc_read:	; 2 bytes @ 0x0
   937                           	global	?___wmul
   938  0020                     ?___wmul:	; 2 bytes @ 0x0
   939                           	global	?___awmod
   940  0020                     ?___awmod:	; 2 bytes @ 0x0
   941                           	global	?___ftpack
   942  0020                     ?___ftpack:	; 3 bytes @ 0x0
   943                           	global	Menu@BTN_input
   944  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   945                           	global	___wmul@multiplier
   946  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   947                           	global	___awmod@divisor
   948  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   949                           	global	___ftpack@arg
   950  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
   951  0020                     	ds	1
   952                           	global	spi_transfer@temp
   953  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   954                           	global	ser_getch@c
   955  0021                     ser_getch@c:	; 1 bytes @ 0x1
   956                           	global	ser_putch@c
   957  0021                     ser_putch@c:	; 1 bytes @ 0x1
   958  0021                     	ds	1
   959                           	global	??_adc_read
   960  0022                     ??_adc_read:	; 0 bytes @ 0x2
   961                           	global	??_robo_init
   962  0022                     ??_robo_init:	; 0 bytes @ 0x2
   963                           	global	??_robot_read
   964  0022                     ??_robot_read:	; 0 bytes @ 0x2
   965                           	global	?_robotTurn
   966  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   967                           	global	?_RobotDrive
   968  0022                     ?_RobotDrive:	; 0 bytes @ 0x2
   969                           	global	lcd_write_control@databyte
   970  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   971                           	global	lcd_write_data@databyte
   972  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   973                           	global	spi_transfer@data
   974  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   975                           	global	RobotDrive@speed
   976  0022                     RobotDrive@speed:	; 2 bytes @ 0x2
   977                           	global	robotTurn@angle
   978  0022                     robotTurn@angle:	; 2 bytes @ 0x2
   979                           	global	___wmul@multiplicand
   980  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   981                           	global	___awmod@dividend
   982  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   983  0022                     	ds	1
   984                           	global	?_rotate
   985  0023                     ?_rotate:	; 0 bytes @ 0x3
   986                           	global	??_lcd_set_cursor
   987  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   988                           	global	??_lcd_init
   989  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   990                           	global	??_init
   991  0023                     ??_init:	; 0 bytes @ 0x3
   992                           	global	lcd_set_cursor@address
   993  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   994                           	global	___ftpack@exp
   995  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
   996                           	global	rotate@numsteps
   997  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   998  0023                     	ds	1
   999                           	global	??_robotTurn
  1000  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1001                           	global	??_RobotDrive
  1002  0024                     ??_RobotDrive:	; 0 bytes @ 0x4
  1003                           	global	??___wmul
  1004  0024                     ??___wmul:	; 0 bytes @ 0x4
  1005                           	global	??___awmod
  1006  0024                     ??___awmod:	; 0 bytes @ 0x4
  1007                           	global	robot_read@readType
  1008  0024                     robot_read@readType:	; 1 bytes @ 0x4
  1009                           	global	___ftpack@sign
  1010  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1011                           	global	adc_read@adc_value
  1012  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1013                           	global	___wmul@product
  1014  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1015  0024                     	ds	1
  1016                           	global	??___ftpack
  1017  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1018                           	global	rotate@direction
  1019  0025                     rotate@direction:	; 1 bytes @ 0x5
  1020                           	global	RobotDrive@speedlowByte
  1021  0025                     RobotDrive@speedlowByte:	; 1 bytes @ 0x5
  1022                           	global	___awmod@counter
  1023  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1024  0025                     	ds	1
  1025                           	global	??_rotate
  1026  0026                     ??_rotate:	; 0 bytes @ 0x6
  1027                           	global	??_adc_read_channel
  1028  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1029                           	global	?_abs
  1030  0026                     ?_abs:	; 2 bytes @ 0x6
  1031                           	global	?___lwdiv
  1032  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1033                           	global	RobotDrive@speedhighByte
  1034  0026                     RobotDrive@speedhighByte:	; 1 bytes @ 0x6
  1035                           	global	___awmod@sign
  1036  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1037                           	global	abs@v
  1038  0026                     abs@v:	; 2 bytes @ 0x6
  1039                           	global	___lwdiv@divisor
  1040  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1041  0026                     	ds	1
  1042                           	global	?_lcd_write_string
  1043  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1044                           	global	adc_read_channel@channel
  1045  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1046                           	global	lcd_write_string@s
  1047  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1048  0027                     	ds	1
  1049                           	global	??_abs
  1050  0028                     ??_abs:	; 0 bytes @ 0x8
  1051                           	global	?_readDistance
  1052  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1053                           	global	?___fttol
  1054  0028                     ?___fttol:	; 4 bytes @ 0x8
  1055                           	global	rotate@i
  1056  0028                     rotate@i:	; 2 bytes @ 0x8
  1057                           	global	___lwdiv@dividend
  1058  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1059                           	global	___fttol@f1
  1060  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1061  0028                     	ds	1
  1062                           	global	??_lcd_write_string
  1063  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1064  0029                     	ds	1
  1065                           	global	??_readDistance
  1066  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1067                           	global	??___lwdiv
  1068  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1069  002A                     	ds	1
  1070                           	global	___lwdiv@quotient
  1071  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1072  002B                     	ds	1
  1073                           	global	??___fttol
  1074  002C                     ??___fttol:	; 0 bytes @ 0xC
  1075                           	global	readDistance@readVal
  1076  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1077  002C                     	ds	1
  1078                           	global	___lwdiv@counter
  1079  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1080  002D                     	ds	1
  1081                           	global	??_ADCconvert
  1082  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1083                           	global	?___lwmod
  1084  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1085                           	global	___lwmod@divisor
  1086  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1087  002E                     	ds	2
  1088                           	global	??_readAvgDistance
  1089  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1090                           	global	___fttol@sign1
  1091  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1092                           	global	readAvgDistance@fullval
  1093  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1094                           	global	___lwmod@dividend
  1095  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1096  0030                     	ds	1
  1097                           	global	___fttol@lval
  1098  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1099  0031                     	ds	1
  1100                           	global	??___lwmod
  1101  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1102                           	global	readAvgDistance@j
  1103  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1104  0032                     	ds	1
  1105                           	global	___lwmod@counter
  1106  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1107  0033                     	ds	1
  1108                           	global	?_sprintf
  1109  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1110                           	global	sprintf@f
  1111  0034                     sprintf@f:	; 1 bytes @ 0x14
  1112                           	global	readAvgDistance@tempIR
  1113  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1114  0034                     	ds	1
  1115                           	global	___fttol@exp1
  1116  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1117  0035                     	ds	1
  1118                           	global	?___awtoft
  1119  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1120                           	global	readAvgDistance@i
  1121  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1122                           	global	___awtoft@c
  1123  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1124  0036                     	ds	3
  1125                           	global	??_sprintf
  1126  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1127                           	global	??___awtoft
  1128  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1129  0039                     	ds	2
  1130                           	global	___awtoft@sign
  1131  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1132  003B                     	ds	1
  1133                           	global	?___ftmul
  1134  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  1135                           	global	sprintf@ap
  1136  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1137                           	global	___ftmul@f1
  1138  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  1139  003C                     	ds	1
  1140                           	global	sprintf@flag
  1141  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1142  003D                     	ds	1
  1143                           	global	sprintf@prec
  1144  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1145  003E                     	ds	1
  1146                           	global	___ftmul@f2
  1147  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  1148                           	global	sprintf@_val
  1149  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1150  003F                     	ds	3
  1151                           	global	??___ftmul
  1152  0042                     ??___ftmul:	; 0 bytes @ 0x22
  1153  0042                     	ds	1
  1154                           	global	sprintf@sp
  1155  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1156  0043                     	ds	1
  1157                           	global	sprintf@c
  1158  0044                     sprintf@c:	; 1 bytes @ 0x24
  1159  0044                     	ds	1
  1160                           	global	??_UpdateDisplay
  1161  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1162  0045                     	ds	1
  1163                           	global	___ftmul@exp
  1164  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  1165  0046                     	ds	1
  1166                           	global	___ftmul@f3_as_product
  1167  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  1168  0047                     	ds	2
  1169                           	global	UpdateDisplay@LCDOutput
  1170  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1171  0049                     	ds	1
  1172                           	global	___ftmul@cntr
  1173  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  1174  004A                     	ds	1
  1175                           	global	___ftmul@sign
  1176  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  1177  004B                     	ds	14
  1178                           	global	??_calibrateIR
  1179  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1180                           	global	?_robotMoveSpeed
  1181  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1182                           	global	?_robotTurnSpeed
  1183  0059                     ?_robotTurnSpeed:	; 0 bytes @ 0x39
  1184                           	global	??_ChargeMode
  1185  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1186                           	global	?_scan360
  1187  0059                     ?_scan360:	; 2 bytes @ 0x39
  1188                           	global	robotMoveSpeed@distance
  1189  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1190                           	global	robotTurnSpeed@angle
  1191  0059                     robotTurnSpeed@angle:	; 2 bytes @ 0x39
  1192  0059                     	ds	2
  1193                           	global	??_scan360
  1194  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1195                           	global	scan360@lowestVal
  1196  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1197                           	global	robotMoveSpeed@speed
  1198  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1199                           	global	robotTurnSpeed@speed
  1200  005B                     robotTurnSpeed@speed:	; 2 bytes @ 0x3B
  1201  005B                     	ds	2
  1202                           	global	??_robotMoveSpeed
  1203  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1204                           	global	??_robotTurnSpeed
  1205  005D                     ??_robotTurnSpeed:	; 0 bytes @ 0x3D
  1206                           	global	scan360@lowestSteps
  1207  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1208  005D                     	ds	2
  1209                           	global	scan360@steps
  1210  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1211  005F                     	ds	1
  1212                           	global	robotMoveSpeed@temp1
  1213  0060                     robotMoveSpeed@temp1:	; 2 bytes @ 0x40
  1214                           	global	robotTurnSpeed@temp1
  1215  0060                     robotTurnSpeed@temp1:	; 2 bytes @ 0x40
  1216  0060                     	ds	2
  1217                           	global	??_main
  1218  0062                     ??_main:	; 0 bytes @ 0x42
  1219  0062                     	ds	3
  1220                           	global	main@direction1
  1221  0065                     main@direction1:	; 2 bytes @ 0x45
  1222  0065                     	ds	2
  1223                           	global	main@RT2A
  1224  0067                     main@RT2A:	; 2 bytes @ 0x47
  1225  0067                     	ds	2
  1226                           	global	main@shortwall
  1227  0069                     main@shortwall:	; 2 bytes @ 0x49
  1228  0069                     	ds	2
  1229                           	global	main@choice
  1230  006B                     main@choice:	; 1 bytes @ 0x4B
  1231  006B                     	ds	1
  1232                           	global	main@shortwall_3022
  1233  006C                     main@shortwall_3022:	; 2 bytes @ 0x4C
  1234  006C                     	ds	2
  1235                           	global	main@RT2P
  1236  006E                     main@RT2P:	; 2 bytes @ 0x4E
  1237  006E                     	ds	2
  1238 ;;Data sizes: Strings 147, constant 10, data 13, bss 93, persistent 0 stack 0
  1239 ;;Auto spaces:   Size  Autos    Used
  1240 ;; COMMON          14     11      14
  1241 ;; BANK0           80     80      80
  1242 ;; BANK1           80      0      73
  1243 ;; BANK3           96      0      32
  1244 ;; BANK2           96      0       0
  1245                           
  1246 ;;
  1247 ;; Pointer list with targets:
  1248                           
  1249 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1250 ;;
  1251 ;; ?___ftpack	float  size(1) Largest target is 2
  1252 ;;		 -> main@RT2P(BANK0[2]), 
  1253 ;;
  1254 ;; ?_abs	int  size(1) Largest target is 0
  1255 ;;
  1256 ;; ?___awmod	int  size(1) Largest target is 0
  1257 ;;
  1258 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1259 ;;
  1260 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1261 ;;
  1262 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1263 ;;
  1264 ;; ?_scan360	int  size(1) Largest target is 0
  1265 ;;
  1266 ;; ?___fttol	long  size(1) Largest target is 0
  1267 ;;
  1268 ;; ?___ftmul	float  size(1) Largest target is 0
  1269 ;;
  1270 ;; ?___awtoft	float  size(1) Largest target is 0
  1271 ;;
  1272 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1273 ;;
  1274 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1275 ;;
  1276 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1277 ;;		 -> STR_13(CODE[13]), 
  1278 ;;
  1279 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1280 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1281 ;;
  1282 ;; ?_sprintf	int  size(1) Largest target is 0
  1283 ;;
  1284 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1285 ;;		 -> ?_sprintf(BANK0[2]), 
  1286 ;;
  1287 ;; S8195$_cp	PTR const unsigned char  size(1) Largest target is 0
  1288 ;;
  1289 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1290 ;;
  1291 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1292 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1293 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1294 ;;
  1295 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1296 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1297 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1298 ;;
  1299 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1300 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1301 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), 
  1302 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1303 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1304 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1305 ;;
  1306                           
  1307                           
  1308 ;;
  1309 ;; Critical Paths under _main in COMMON
  1310 ;;
  1311 ;;   None.
  1312 ;;
  1313 ;; Critical Paths under _isr1 in COMMON
  1314 ;;
  1315 ;;   _isr1->i1___lwmod
  1316 ;;   _ReadButtons->_Debounce
  1317 ;;
  1318 ;; Critical Paths under _main in BANK0
  1319 ;;
  1320 ;;   _main->_robotMoveSpeed
  1321 ;;   _main->_robotTurnSpeed
  1322 ;;   _ChargeMode->_UpdateDisplay
  1323 ;;   _robotTurnSpeed->_UpdateDisplay
  1324 ;;   _robotMoveSpeed->_UpdateDisplay
  1325 ;;   _scan360->_UpdateDisplay
  1326 ;;   _calibrateIR->_UpdateDisplay
  1327 ;;   _UpdateDisplay->_sprintf
  1328 ;;   _readAvgDistance->_ADCconvert
  1329 ;;   _readDistance->_adc_read_channel
  1330 ;;   _robot_read->_ser_putch
  1331 ;;   _robot_read->_ser_getch
  1332 ;;   _lcd_init->_lcd_write_control
  1333 ;;   _lcd_write_string->___awmod
  1334 ;;   _lcd_set_cursor->_lcd_write_control
  1335 ;;   ___awtoft->___fttol
  1336 ;;   ___ftmul->___awtoft
  1337 ;;   _abs->___wmul
  1338 ;;   _RobotDrive->_ser_putch
  1339 ;;   _sprintf->___lwmod
  1340 ;;   _ADCconvert->___lwdiv
  1341 ;;   _robotTurn->_ser_putch
  1342 ;;   _rotate->_spi_transfer
  1343 ;;   _robo_init->_ser_putch
  1344 ;;   _adc_read_channel->_adc_read
  1345 ;;   ___fttol->___ftpack
  1346 ;;   ___lwmod->___lwdiv
  1347 ;;   ___lwdiv->___wmul
  1348 ;;
  1349 ;; Critical Paths under _isr1 in BANK0
  1350 ;;
  1351 ;;   None.
  1352 ;;
  1353 ;; Critical Paths under _main in BANK1
  1354 ;;
  1355 ;;   None.
  1356 ;;
  1357 ;; Critical Paths under _isr1 in BANK1
  1358 ;;
  1359 ;;   None.
  1360 ;;
  1361 ;; Critical Paths under _main in BANK3
  1362 ;;
  1363 ;;   None.
  1364 ;;
  1365 ;; Critical Paths under _isr1 in BANK3
  1366 ;;
  1367 ;;   None.
  1368 ;;
  1369 ;; Critical Paths under _main in BANK2
  1370 ;;
  1371 ;;   None.
  1372 ;;
  1373 ;; Critical Paths under _isr1 in BANK2
  1374 ;;
  1375 ;;   None.
  1376                           
  1377 ;;
  1378 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1379 ;;
  1380                           
  1381 ;;
  1382 ;;Call Graph Tables:
  1383 ;;
  1384 ;; ---------------------------------------------------------------------------------
  1385 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1386 ;; ---------------------------------------------------------------------------------
  1387 ;; (0) _main                                                14    14      0   12155
  1388 ;;                                             66 BANK0     14    14      0
  1389 ;;                               _init
  1390 ;;                         _robot_read
  1391 ;;                    _readAvgDistance
  1392 ;;                      _UpdateDisplay
  1393 ;;                               _Menu
  1394 ;;                        _calibrateIR
  1395 ;;                            _scan360
  1396 ;;                             _rotate
  1397 ;;                     _robotMoveSpeed
  1398 ;;                     _robotTurnSpeed
  1399 ;;                           ___awtoft
  1400 ;;                            ___ftmul
  1401 ;;                            ___fttol
  1402 ;;                          _robotTurn
  1403 ;;                         _ChargeMode
  1404 ;; ---------------------------------------------------------------------------------
  1405 ;; (1) _ChargeMode                                           1     1      0    1305
  1406 ;;                                             57 BANK0      1     1      0
  1407 ;;                          _ser_putch
  1408 ;;                      _UpdateDisplay
  1409 ;; ---------------------------------------------------------------------------------
  1410 ;; (1) _robotTurnSpeed                                       9     5      4    1710
  1411 ;;                                             57 BANK0      9     5      4
  1412 ;;                          _robotTurn
  1413 ;;                         _robot_read
  1414 ;;                      _UpdateDisplay
  1415 ;;                                _abs
  1416 ;; ---------------------------------------------------------------------------------
  1417 ;; (1) _robotMoveSpeed                                       9     5      4    1777
  1418 ;;                                             57 BANK0      9     5      4
  1419 ;;                         _RobotDrive
  1420 ;;                         _robot_read
  1421 ;;                      _UpdateDisplay
  1422 ;;                                _abs
  1423 ;; ---------------------------------------------------------------------------------
  1424 ;; (1) _scan360                                              8     6      2    2122
  1425 ;;                                             57 BANK0      8     6      2
  1426 ;;                    _readAvgDistance
  1427 ;;                             _rotate
  1428 ;;                      _UpdateDisplay
  1429 ;; ---------------------------------------------------------------------------------
  1430 ;; (1) _calibrateIR                                          0     0      0    1381
  1431 ;;                             _rotate
  1432 ;;                      _UpdateDisplay
  1433 ;; ---------------------------------------------------------------------------------
  1434 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1435 ;;                                             37 BANK0     20    20      0
  1436 ;;                  _lcd_write_control
  1437 ;;                            _sprintf
  1438 ;;                     _lcd_set_cursor
  1439 ;;                   _lcd_write_string
  1440 ;;                            ___awmod
  1441 ;; ---------------------------------------------------------------------------------
  1442 ;; (2) _readAvgDistance                                      8     8      0     625
  1443 ;;                                             16 BANK0      8     8      0
  1444 ;;                       _readDistance
  1445 ;;                            ___lwdiv
  1446 ;;                         _ADCconvert
  1447 ;; ---------------------------------------------------------------------------------
  1448 ;; (1) _init                                                 1     1      0      44
  1449 ;;                                              3 BANK0      1     1      0
  1450 ;;                           _ser_init
  1451 ;;                           _init_adc
  1452 ;;                           _lcd_init
  1453 ;;                          _robo_init
  1454 ;; ---------------------------------------------------------------------------------
  1455 ;; (3) _readDistance                                         6     4      2      69
  1456 ;;                                              8 BANK0      6     4      2
  1457 ;;                   _adc_read_channel
  1458 ;; ---------------------------------------------------------------------------------
  1459 ;; (2) _robot_read                                           3     3      0     111
  1460 ;;                                              2 BANK0      3     3      0
  1461 ;;                          _ser_putch
  1462 ;;                          _ser_getch
  1463 ;; ---------------------------------------------------------------------------------
  1464 ;; (2) _lcd_init                                             0     0      0      22
  1465 ;;                  _lcd_write_control
  1466 ;; ---------------------------------------------------------------------------------
  1467 ;; (3) _lcd_write_string                                     2     0      2      67
  1468 ;;                                              7 BANK0      2     0      2
  1469 ;;                     _lcd_write_data
  1470 ;;                            ___awmod (ARG)
  1471 ;; ---------------------------------------------------------------------------------
  1472 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1473 ;;                                              3 BANK0      1     1      0
  1474 ;;                  _lcd_write_control
  1475 ;; ---------------------------------------------------------------------------------
  1476 ;; (1) ___awtoft                                             6     3      3     300
  1477 ;;                                             22 BANK0      6     3      3
  1478 ;;                           ___ftpack
  1479 ;;                            ___fttol (ARG)
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (1) ___ftmul                                             16    10      6     535
  1482 ;;                                             28 BANK0     16    10      6
  1483 ;;                           ___ftpack
  1484 ;;                           ___awtoft (ARG)
  1485 ;;                            ___fttol (ARG)
  1486 ;; ---------------------------------------------------------------------------------
  1487 ;; (2) _abs                                                  4     2      2     158
  1488 ;;                                              6 BANK0      4     2      2
  1489 ;;                             ___wmul
  1490 ;; ---------------------------------------------------------------------------------
  1491 ;; (2) _RobotDrive                                           5     3      2     112
  1492 ;;                                              2 BANK0      5     3      2
  1493 ;;                          _ser_putch
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (3) _ser_getch                                            2     2      0      23
  1496 ;;                                              0 BANK0      2     2      0
  1497 ;;                           _ser_isrx
  1498 ;; ---------------------------------------------------------------------------------
  1499 ;; (3) _sprintf                                             17    12      5     798
  1500 ;;                                             20 BANK0     17    12      5
  1501 ;;                            ___lwdiv
  1502 ;;                            ___lwmod
  1503 ;; ---------------------------------------------------------------------------------
  1504 ;; (3) _ADCconvert                                           2     2      0     254
  1505 ;;                                             14 BANK0      2     2      0
  1506 ;;                             ___wmul
  1507 ;;                            ___lwdiv
  1508 ;; ---------------------------------------------------------------------------------
  1509 ;; (1) _robotTurn                                            2     0      2      66
  1510 ;;                                              2 BANK0      2     0      2
  1511 ;;                          _ser_putch
  1512 ;; ---------------------------------------------------------------------------------
  1513 ;; (1) _rotate                                               7     4      3      98
  1514 ;;                                              3 BANK0      7     4      3
  1515 ;;                       _spi_transfer
  1516 ;; ---------------------------------------------------------------------------------
  1517 ;; (2) _robo_init                                            0     0      0      22
  1518 ;;                          _ser_putch
  1519 ;; ---------------------------------------------------------------------------------
  1520 ;; (4) _lcd_write_data                                       3     3      0      22
  1521 ;;                                              0 BANK0      3     3      0
  1522 ;; ---------------------------------------------------------------------------------
  1523 ;; (4) _lcd_write_control                                    3     3      0      22
  1524 ;;                                              0 BANK0      3     3      0
  1525 ;; ---------------------------------------------------------------------------------
  1526 ;; (2) _init_adc                                             1     1      0       0
  1527 ;;                                              0 BANK0      1     1      0
  1528 ;; ---------------------------------------------------------------------------------
  1529 ;; (4) _adc_read_channel                                     2     2      0      46
  1530 ;;                                              6 BANK0      2     2      0
  1531 ;;                           _adc_read
  1532 ;; ---------------------------------------------------------------------------------
  1533 ;; (3) ___awmod                                              7     3      4     296
  1534 ;;                                              0 BANK0      7     3      4
  1535 ;; ---------------------------------------------------------------------------------
  1536 ;; (1) ___fttol                                             14    10      4     252
  1537 ;;                                              8 BANK0     14    10      4
  1538 ;;                           ___ftpack (ARG)
  1539 ;; ---------------------------------------------------------------------------------
  1540 ;; (2) ___ftpack                                             8     3      5     209
  1541 ;;                                              0 BANK0      8     3      5
  1542 ;; ---------------------------------------------------------------------------------
  1543 ;; (4) ___lwmod                                              6     2      4     159
  1544 ;;                                             14 BANK0      6     2      4
  1545 ;;                            ___lwdiv (ARG)
  1546 ;; ---------------------------------------------------------------------------------
  1547 ;; (4) ___lwdiv                                              8     4      4     162
  1548 ;;                                              6 BANK0      8     4      4
  1549 ;;                             ___wmul (ARG)
  1550 ;; ---------------------------------------------------------------------------------
  1551 ;; (3) ___wmul                                               6     2      4      92
  1552 ;;                                              0 BANK0      6     2      4
  1553 ;; ---------------------------------------------------------------------------------
  1554 ;; (4) _ser_isrx                                             0     0      0       0
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (2) _spi_transfer                                         3     3      0      30
  1557 ;;                                              0 BANK0      3     3      0
  1558 ;; ---------------------------------------------------------------------------------
  1559 ;; (2) _ser_putch                                            2     2      0      22
  1560 ;;                                              0 BANK0      2     2      0
  1561 ;; ---------------------------------------------------------------------------------
  1562 ;; (1) _Menu                                                 1     1      0      22
  1563 ;;                                              0 BANK0      1     1      0
  1564 ;; ---------------------------------------------------------------------------------
  1565 ;; (2) _ser_init                                             1     1      0       0
  1566 ;;                                              0 BANK0      1     1      0
  1567 ;; ---------------------------------------------------------------------------------
  1568 ;; (5) _adc_read                                             6     4      2      24
  1569 ;;                                              0 BANK0      6     4      2
  1570 ;; ---------------------------------------------------------------------------------
  1571 ;; Estimated maximum stack depth 5
  1572 ;; ---------------------------------------------------------------------------------
  1573 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1574 ;; ---------------------------------------------------------------------------------
  1575 ;; (6) _isr1                                                 5     5      0     521
  1576 ;;                                              6 COMMON     5     5      0
  1577 ;;                          i1___lwmod
  1578 ;;                        _ReadButtons
  1579 ;; ---------------------------------------------------------------------------------
  1580 ;; (7) _ReadButtons                                          0     0      0       0
  1581 ;;                           _Debounce
  1582 ;; ---------------------------------------------------------------------------------
  1583 ;; (7) i1___lwmod                                            6     2      4     521
  1584 ;;                                              0 COMMON     6     2      4
  1585 ;; ---------------------------------------------------------------------------------
  1586 ;; (8) _Debounce                                             1     1      0       0
  1587 ;;                                              0 COMMON     1     1      0
  1588 ;; ---------------------------------------------------------------------------------
  1589 ;; Estimated maximum stack depth 8
  1590 ;; ---------------------------------------------------------------------------------
  1591                           
  1592 ;; Call Graph Graphs:
  1593                           
  1594 ;; _main (ROOT)
  1595 ;;   _init
  1596 ;;     _ser_init
  1597 ;;     _init_adc
  1598 ;;     _lcd_init
  1599 ;;       _lcd_write_control
  1600 ;;     _robo_init
  1601 ;;       _ser_putch
  1602 ;;   _robot_read
  1603 ;;     _ser_putch
  1604 ;;     _ser_getch
  1605 ;;       _ser_isrx
  1606 ;;   _readAvgDistance
  1607 ;;     _readDistance
  1608 ;;       _adc_read_channel
  1609 ;;         _adc_read
  1610 ;;     ___lwdiv
  1611 ;;       ___wmul (ARG)
  1612 ;;     _ADCconvert
  1613 ;;       ___wmul
  1614 ;;       ___lwdiv
  1615 ;;         ___wmul (ARG)
  1616 ;;   _UpdateDisplay
  1617 ;;     _lcd_write_control
  1618 ;;     _sprintf
  1619 ;;       ___lwdiv
  1620 ;;         ___wmul (ARG)
  1621 ;;       ___lwmod
  1622 ;;         ___lwdiv (ARG)
  1623 ;;           ___wmul (ARG)
  1624 ;;     _lcd_set_cursor
  1625 ;;       _lcd_write_control
  1626 ;;     _lcd_write_string
  1627 ;;       _lcd_write_data
  1628 ;;       ___awmod (ARG)
  1629 ;;     ___awmod
  1630 ;;   _Menu
  1631 ;;   _calibrateIR
  1632 ;;     _rotate
  1633 ;;       _spi_transfer
  1634 ;;     _UpdateDisplay
  1635 ;;       _lcd_write_control
  1636 ;;       _sprintf
  1637 ;;         ___lwdiv
  1638 ;;           ___wmul (ARG)
  1639 ;;         ___lwmod
  1640 ;;           ___lwdiv (ARG)
  1641 ;;             ___wmul (ARG)
  1642 ;;       _lcd_set_cursor
  1643 ;;         _lcd_write_control
  1644 ;;       _lcd_write_string
  1645 ;;         _lcd_write_data
  1646 ;;         ___awmod (ARG)
  1647 ;;       ___awmod
  1648 ;;   _scan360
  1649 ;;     _readAvgDistance
  1650 ;;       _readDistance
  1651 ;;         _adc_read_channel
  1652 ;;           _adc_read
  1653 ;;       ___lwdiv
  1654 ;;         ___wmul (ARG)
  1655 ;;       _ADCconvert
  1656 ;;         ___wmul
  1657 ;;         ___lwdiv
  1658 ;;           ___wmul (ARG)
  1659 ;;     _rotate
  1660 ;;       _spi_transfer
  1661 ;;     _UpdateDisplay
  1662 ;;       _lcd_write_control
  1663 ;;       _sprintf
  1664 ;;         ___lwdiv
  1665 ;;           ___wmul (ARG)
  1666 ;;         ___lwmod
  1667 ;;           ___lwdiv (ARG)
  1668 ;;             ___wmul (ARG)
  1669 ;;       _lcd_set_cursor
  1670 ;;         _lcd_write_control
  1671 ;;       _lcd_write_string
  1672 ;;         _lcd_write_data
  1673 ;;         ___awmod (ARG)
  1674 ;;       ___awmod
  1675 ;;   _rotate
  1676 ;;     _spi_transfer
  1677 ;;   _robotMoveSpeed
  1678 ;;     _RobotDrive
  1679 ;;       _ser_putch
  1680 ;;     _robot_read
  1681 ;;       _ser_putch
  1682 ;;       _ser_getch
  1683 ;;         _ser_isrx
  1684 ;;     _UpdateDisplay
  1685 ;;       _lcd_write_control
  1686 ;;       _sprintf
  1687 ;;         ___lwdiv
  1688 ;;           ___wmul (ARG)
  1689 ;;         ___lwmod
  1690 ;;           ___lwdiv (ARG)
  1691 ;;             ___wmul (ARG)
  1692 ;;       _lcd_set_cursor
  1693 ;;         _lcd_write_control
  1694 ;;       _lcd_write_string
  1695 ;;         _lcd_write_data
  1696 ;;         ___awmod (ARG)
  1697 ;;       ___awmod
  1698 ;;     _abs
  1699 ;;       ___wmul
  1700 ;;   _robotTurnSpeed
  1701 ;;     _robotTurn
  1702 ;;       _ser_putch
  1703 ;;     _robot_read
  1704 ;;       _ser_putch
  1705 ;;       _ser_getch
  1706 ;;         _ser_isrx
  1707 ;;     _UpdateDisplay
  1708 ;;       _lcd_write_control
  1709 ;;       _sprintf
  1710 ;;         ___lwdiv
  1711 ;;           ___wmul (ARG)
  1712 ;;         ___lwmod
  1713 ;;           ___lwdiv (ARG)
  1714 ;;             ___wmul (ARG)
  1715 ;;       _lcd_set_cursor
  1716 ;;         _lcd_write_control
  1717 ;;       _lcd_write_string
  1718 ;;         _lcd_write_data
  1719 ;;         ___awmod (ARG)
  1720 ;;       ___awmod
  1721 ;;     _abs
  1722 ;;       ___wmul
  1723 ;;   ___awtoft
  1724 ;;     ___ftpack
  1725 ;;     ___fttol (ARG)
  1726 ;;       ___ftpack (ARG)
  1727 ;;   ___ftmul
  1728 ;;     ___ftpack
  1729 ;;     ___awtoft (ARG)
  1730 ;;       ___ftpack
  1731 ;;       ___fttol (ARG)
  1732 ;;         ___ftpack (ARG)
  1733 ;;     ___fttol (ARG)
  1734 ;;       ___ftpack (ARG)
  1735 ;;   ___fttol
  1736 ;;     ___ftpack (ARG)
  1737 ;;   _robotTurn
  1738 ;;     _ser_putch
  1739 ;;   _ChargeMode
  1740 ;;     _ser_putch
  1741 ;;     _UpdateDisplay
  1742 ;;       _lcd_write_control
  1743 ;;       _sprintf
  1744 ;;         ___lwdiv
  1745 ;;           ___wmul (ARG)
  1746 ;;         ___lwmod
  1747 ;;           ___lwdiv (ARG)
  1748 ;;             ___wmul (ARG)
  1749 ;;       _lcd_set_cursor
  1750 ;;         _lcd_write_control
  1751 ;;       _lcd_write_string
  1752 ;;         _lcd_write_data
  1753 ;;         ___awmod (ARG)
  1754 ;;       ___awmod
  1755 ;;
  1756 ;; _isr1 (ROOT)
  1757 ;;   i1___lwmod
  1758 ;;   _ReadButtons
  1759 ;;     _Debounce
  1760 ;;
  1761                           
  1762 ;; Address spaces:
  1763                           
  1764 ;;Name               Size   Autos  Total    Cost      Usage
  1765 ;;BANK3               60      0      20       9       33.3%
  1766 ;;BITBANK3            60      0       0       8        0.0%
  1767 ;;SFR3                 0      0       0       4        0.0%
  1768 ;;BITSFR3              0      0       0       4        0.0%
  1769 ;;BANK2               60      0       0      11        0.0%
  1770 ;;BITBANK2            60      0       0      10        0.0%
  1771 ;;SFR2                 0      0       0       5        0.0%
  1772 ;;BITSFR2              0      0       0       5        0.0%
  1773 ;;SFR1                 0      0       0       2        0.0%
  1774 ;;BITSFR1              0      0       0       2        0.0%
  1775 ;;BANK1               50      0      49       7       91.3%
  1776 ;;BITBANK1            50      0       0       6        0.0%
  1777 ;;CODE                 0      0       0       0        0.0%
  1778 ;;DATA                 0      0      D2      12        0.0%
  1779 ;;ABS                  0      0      C7       3        0.0%
  1780 ;;NULL                 0      0       0       0        0.0%
  1781 ;;STACK                0      0       B       2        0.0%
  1782 ;;BANK0               50     50      50       5      100.0%
  1783 ;;BITBANK0            50      0       0       4        0.0%
  1784 ;;SFR0                 0      0       0       1        0.0%
  1785 ;;BITSFR0              0      0       0       1        0.0%
  1786 ;;COMMON               E      B       E       1      100.0%
  1787 ;;BITCOMMON            E      0       2       0       14.3%
  1788 ;;EEDATA             100      0       0       0        0.0%
  1789                           
  1790                           	global	_main
  1791                           psect	maintext,global,class=CODE,delta=2
  1792                           global __pmaintext
  1793  0278                     __pmaintext:
  1794                           
  1795 ;; *************** function _main *****************
  1796 ;; Defined at:
  1797 ;;		line 172 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  RT2P            2   78[BANK0 ] int 
  1802 ;;  shortwall       2   76[BANK0 ] int 
  1803 ;;  RT2A            2   71[BANK0 ] int 
  1804 ;;  direction1      2   69[BANK0 ] int 
  1805 ;;  shortwall       2   73[BANK0 ] int 
  1806 ;;  choice          1   75[BANK0 ] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;		None               void
  1809 ;; Registers used:
  1810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 17F/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       0       0       0       0
  1817 ;;      Locals:         0      11       0       0       0
  1818 ;;      Temps:          0       3       0       0       0
  1819 ;;      Totals:         0      14       0       0       0
  1820 ;;Total ram usage:       14 bytes
  1821 ;; Hardware stack levels required when called:    8
  1822 ;; This function calls:
  1823 ;;		_init
  1824 ;;		_robot_read
  1825 ;;		_readAvgDistance
  1826 ;;		_UpdateDisplay
  1827 ;;		_Menu
  1828 ;;		_calibrateIR
  1829 ;;		_scan360
  1830 ;;		_rotate
  1831 ;;		_robotMoveSpeed
  1832 ;;		_robotTurnSpeed
  1833 ;;		___awtoft
  1834 ;;		___ftmul
  1835 ;;		___fttol
  1836 ;;		_robotTurn
  1837 ;;		_ChargeMode
  1838 ;; This function is called by:
  1839 ;;		Startup code after reset
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           psect	maintext
  1843                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1844                           	line	172
  1845                           	global	__size_of_main
  1846  0252                     	__size_of_main	equ	__end_of_main-_main
  1847                           	
  1848  0278                     _main:	
  1849                           	opt	stack 0
  1850                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1851                           	line	173
  1852                           	
  1853  0278                     l11522:	
  1854                           ;Main.c: 173: unsigned char choice = 255;
  1855  0278  30FF               	movlw	(0FFh)
  1856  0279  1283               	bcf	status, 5	;RP0=0, select bank0
  1857  027A  1303               	bcf	status, 6	;RP1=0, select bank0
  1858  027B  00E2               	movwf	(??_main+0)+0
  1859  027C  0862               	movf	(??_main+0)+0,w
  1860  027D  00EB               	movwf	(main@choice)
  1861                           	line	174
  1862                           	
  1863  027E                     l11524:	
  1864                           ;Main.c: 174: int shortwall = 0;
  1865  027E  01E9               	clrf	(main@shortwall)
  1866  027F  01EA               	clrf	(main@shortwall+1)
  1867                           	line	177
  1868                           	
  1869  0280                     l11526:	
  1870                           ;Main.c: 177: init();
  1871  0280  160A  118A  25AF   	fcall	_init
              120A  118A         
  1872  0285  2A86               	goto	l11528
  1873                           	line	180
  1874                           ;Main.c: 180: while(1)
  1875                           	
  1876  0286                     l2230:	
  1877                           	line	182
  1878                           	
  1879  0286                     l11528:	
  1880                           ;Main.c: 181: {
  1881                           ;Main.c: 182: if (RTC_FLAG_250MS == 1)
  1882  0286  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1883  0287  2A89               	goto	u5561
  1884  0288  2A8A               	goto	u5560
  1885  0289                     u5561:
  1886  0289  2A9C               	goto	l11538
  1887  028A                     u5560:
  1888                           	line	184
  1889                           	
  1890  028A                     l11530:	
  1891                           ;Main.c: 183: {
  1892                           ;Main.c: 184: RTC_FLAG_250MS = 0;
  1893  028A  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1894                           	line	185
  1895                           	
  1896  028B                     l11532:	
  1897                           ;Main.c: 185: robot_read(2);
  1898  028B  3002               	movlw	(02h)
  1899  028C  120A  118A  2629   	fcall	_robot_read
              120A  118A         
  1900                           	line	186
  1901                           	
  1902  0291                     l11534:	
  1903                           ;Main.c: 186: readAvgDistance();
  1904  0291  120A  158A  2174   	fcall	_readAvgDistance
              120A  118A         
  1905                           	line	187
  1906                           	
  1907  0296                     l11536:	
  1908                           ;Main.c: 187: UpdateDisplay();
  1909  0296  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  118A         
  1910  029B  2A9C               	goto	l11538
  1911                           	line	188
  1912                           	
  1913  029C                     l2231:	
  1914                           	line	189
  1915                           	
  1916  029C                     l11538:	
  1917                           ;Main.c: 188: }
  1918                           ;Main.c: 189: if (buttonPressed)
  1919  029C  087D               	movf	(_buttonPressed),w	;volatile
  1920  029D  1D03               	skipz
  1921  029E  2AA0               	goto	u5570
  1922  029F  2CA9               	goto	l11626
  1923  02A0                     u5570:
  1924                           	line	192
  1925                           	
  1926  02A0                     l11540:	
  1927                           ;Main.c: 191: {
  1928                           ;Main.c: 192: choice = Menu(buttonPressed);
  1929  02A0  087D               	movf	(_buttonPressed),w	;volatile
  1930  02A1  160A  118A  2719   	fcall	_Menu
              120A  118A         
  1931  02A6  1283               	bcf	status, 5	;RP0=0, select bank0
  1932  02A7  1303               	bcf	status, 6	;RP1=0, select bank0
  1933  02A8  00E2               	movwf	(??_main+0)+0
  1934  02A9  0862               	movf	(??_main+0)+0,w
  1935  02AA  00EB               	movwf	(main@choice)
  1936                           	line	193
  1937                           	
  1938  02AB                     l11542:	
  1939                           ;Main.c: 193: buttonPressed = 0;
  1940  02AB  01FD               	clrf	(_buttonPressed)	;volatile
  1941  02AC  2CA9               	goto	l11626
  1942                           	line	194
  1943                           	
  1944  02AD                     l2232:	
  1945                           	line	198
  1946                           ;Main.c: 194: }
  1947                           ;Main.c: 198: switch (choice)
  1948  02AD  2CA9               	goto	l11626
  1949                           	line	200
  1950                           ;Main.c: 199: {
  1951                           ;Main.c: 200: case 0:
  1952                           	
  1953  02AE                     l2234:	
  1954                           	line	201
  1955                           	
  1956  02AE                     l11544:	
  1957                           ;Main.c: 201: calibrateIR();
  1958  02AE  120A  158A  203A   	fcall	_calibrateIR
              120A  118A         
  1959                           	line	202
  1960                           ;Main.c: 202: break;
  1961  02B3  2CBF               	goto	l11628
  1962                           	line	203
  1963                           ;Main.c: 203: case 1:
  1964                           	
  1965  02B4                     l2236:	
  1966                           	line	204
  1967                           	
  1968  02B4                     l11546:	
  1969                           ;Main.c: 204: shortwall = scan360() - 13;
  1970  02B4  120A  158A  21EA   	fcall	_scan360
              120A  118A         
  1971  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1972  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1973  02BB  0859               	movf	(0+(?_scan360)),w
  1974  02BC  3EF3               	addlw	low(-13)
  1975  02BD  00E9               	movwf	(main@shortwall)
  1976  02BE  085A               	movf	(1+(?_scan360)),w
  1977  02BF  1803               	skipnc
  1978  02C0  3E01               	addlw	1
  1979  02C1  3EFF               	addlw	high(-13)
  1980  02C2  00EA               	movwf	1+(main@shortwall)
  1981                           	line	205
  1982                           	
  1983  02C3                     l11548:	
  1984                           ;Main.c: 205: rotate((200 - shortwall), 0);
  1985  02C3  0969               	comf	(main@shortwall),w
  1986  02C4  00E2               	movwf	(??_main+0)+0
  1987  02C5  096A               	comf	(main@shortwall+1),w
  1988  02C6  00E3               	movwf	((??_main+0)+0+1)
  1989  02C7  0AE2               	incf	(??_main+0)+0,f
  1990  02C8  1903               	skipnz
  1991  02C9  0AE3               	incf	((??_main+0)+0+1),f
  1992  02CA  0862               	movf	0+(??_main+0)+0,w
  1993  02CB  3EC8               	addlw	low(0C8h)
  1994  02CC  00A3               	movwf	(?_rotate)
  1995  02CD  0863               	movf	1+(??_main+0)+0,w
  1996  02CE  1803               	skipnc
  1997  02CF  3E01               	addlw	1
  1998  02D0  3E00               	addlw	high(0C8h)
  1999  02D1  00A4               	movwf	1+(?_rotate)
  2000  02D2  01A5               	clrf	0+(?_rotate)+02h
  2001  02D3  160A  118A  27B0   	fcall	_rotate
              120A  118A         
  2002                           	line	206
  2003                           ;Main.c: 206: break;
  2004  02D8  2CBF               	goto	l11628
  2005                           	line	207
  2006                           ;Main.c: 207: case 2:
  2007                           	
  2008  02D9                     l2237:	
  2009                           	line	209
  2010                           	
  2011  02D9                     l11550:	
  2012                           ;Main.c: 209: robotMoveSpeed(500, 200);
  2013  02D9  30F4               	movlw	low(01F4h)
  2014  02DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2015  02DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2016  02DC  00D9               	movwf	(?_robotMoveSpeed)
  2017  02DD  3001               	movlw	high(01F4h)
  2018  02DE  00DA               	movwf	((?_robotMoveSpeed))+1
  2019  02DF  30C8               	movlw	low(0C8h)
  2020  02E0  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2021  02E1  3000               	movlw	high(0C8h)
  2022  02E2  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2023  02E3  120A  158A  2566   	fcall	_robotMoveSpeed
              120A  118A         
  2024                           	line	210
  2025                           ;Main.c: 210: break;
  2026  02E8  2CBF               	goto	l11628
  2027                           	line	211
  2028                           ;Main.c: 211: case 3:
  2029                           	
  2030  02E9                     l2238:	
  2031                           	line	212
  2032                           	
  2033  02E9                     l11552:	
  2034                           ;Main.c: 212: robotTurnSpeed(90, 1);
  2035  02E9  305A               	movlw	low(05Ah)
  2036  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2037  02EB  1303               	bcf	status, 6	;RP1=0, select bank0
  2038  02EC  00D9               	movwf	(?_robotTurnSpeed)
  2039  02ED  3000               	movlw	high(05Ah)
  2040  02EE  00DA               	movwf	((?_robotTurnSpeed))+1
  2041  02EF  3001               	movlw	low(01h)
  2042  02F0  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2043  02F1  3000               	movlw	high(01h)
  2044  02F2  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2045  02F3  120A  158A  2379   	fcall	_robotTurnSpeed
              120A  118A         
  2046                           	line	213
  2047                           ;Main.c: 213: break;
  2048  02F8  2CBF               	goto	l11628
  2049                           	line	214
  2050                           ;Main.c: 214: case 4:
  2051                           	
  2052  02F9                     l2239:	
  2053                           	line	215
  2054                           	
  2055  02F9                     l11554:	
  2056                           ;Main.c: 215: TotalDistTravelled = 0;
  2057  02F9  1683               	bsf	status, 5	;RP0=1, select bank1
  2058  02FA  1303               	bcf	status, 6	;RP1=0, select bank1
  2059  02FB  01B4               	clrf	(_TotalDistTravelled)^080h
  2060  02FC  01B5               	clrf	(_TotalDistTravelled+1)^080h
  2061                           	line	216
  2062                           ;Main.c: 216: while(!ROBOTerror)
  2063  02FD  2C99               	goto	l11620
  2064                           	
  2065  02FE                     l2241:	
  2066                           	line	218
  2067                           	
  2068  02FE                     l11556:	
  2069                           ;Main.c: 217: {
  2070                           ;Main.c: 218: int shortwall = scan360();
  2071  02FE  120A  158A  21EA   	fcall	_scan360
              120A  118A         
  2072  0303  1283               	bcf	status, 5	;RP0=0, select bank0
  2073  0304  1303               	bcf	status, 6	;RP1=0, select bank0
  2074  0305  085A               	movf	(1+(?_scan360)),w
  2075  0306  01ED               	clrf	(main@shortwall_3022+1)
  2076  0307  07ED               	addwf	(main@shortwall_3022+1)
  2077  0308  0859               	movf	(0+(?_scan360)),w
  2078  0309  01EC               	clrf	(main@shortwall_3022)
  2079  030A  07EC               	addwf	(main@shortwall_3022)
  2080                           
  2081                           	line	219
  2082                           	
  2083  030B                     l11558:	
  2084                           ;Main.c: 219: int RT2P = 0;
  2085  030B  01EE               	clrf	(main@RT2P)
  2086  030C  01EF               	clrf	(main@RT2P+1)
  2087                           	line	220
  2088                           	
  2089  030D                     l11560:	
  2090                           ;Main.c: 220: int direction1 = 0;
  2091  030D  01E5               	clrf	(main@direction1)
  2092  030E  01E6               	clrf	(main@direction1+1)
  2093                           	line	221
  2094                           	
  2095  030F                     l11562:	
  2096                           ;Main.c: 221: if (shortwall > 200)
  2097  030F  086D               	movf	(main@shortwall_3022+1),w
  2098  0310  3A80               	xorlw	80h
  2099  0311  00FF               	movwf	btemp+1
  2100  0312  3080               	movlw	(high(0C9h))^80h
  2101  0313  027F               	subwf	btemp+1,w
  2102  0314  1D03               	skipz
  2103  0315  2B18               	goto	u5585
  2104  0316  30C9               	movlw	low(0C9h)
  2105  0317  026C               	subwf	(main@shortwall_3022),w
  2106  0318                     u5585:
  2107                           
  2108  0318  1C03               	skipc
  2109  0319  2B1B               	goto	u5581
  2110  031A  2B1C               	goto	u5580
  2111  031B                     u5581:
  2112  031B  2B27               	goto	l11566
  2113  031C                     u5580:
  2114                           	line	222
  2115                           	
  2116  031C                     l11564:	
  2117                           ;Main.c: 222: RT2P = shortwall + 100;
  2118  031C  1283               	bcf	status, 5	;RP0=0, select bank0
  2119  031D  1303               	bcf	status, 6	;RP1=0, select bank0
  2120  031E  086C               	movf	(main@shortwall_3022),w
  2121  031F  3E64               	addlw	low(064h)
  2122  0320  00EE               	movwf	(main@RT2P)
  2123  0321  086D               	movf	(main@shortwall_3022+1),w
  2124  0322  1803               	skipnc
  2125  0323  3E01               	addlw	1
  2126  0324  3E00               	addlw	high(064h)
  2127  0325  00EF               	movwf	1+(main@RT2P)
  2128  0326  2B27               	goto	l11566
  2129                           	
  2130  0327                     l2242:	
  2131                           	line	223
  2132                           	
  2133  0327                     l11566:	
  2134                           ;Main.c: 223: if (shortwall < 200)
  2135  0327  1283               	bcf	status, 5	;RP0=0, select bank0
  2136  0328  1303               	bcf	status, 6	;RP1=0, select bank0
  2137  0329  086D               	movf	(main@shortwall_3022+1),w
  2138  032A  3A80               	xorlw	80h
  2139  032B  00FF               	movwf	btemp+1
  2140  032C  3080               	movlw	(high(0C8h))^80h
  2141  032D  027F               	subwf	btemp+1,w
  2142  032E  1D03               	skipz
  2143  032F  2B32               	goto	u5595
  2144  0330  30C8               	movlw	low(0C8h)
  2145  0331  026C               	subwf	(main@shortwall_3022),w
  2146  0332                     u5595:
  2147                           
  2148  0332  1803               	skipnc
  2149  0333  2B35               	goto	u5591
  2150  0334  2B36               	goto	u5590
  2151  0335                     u5591:
  2152  0335  2B41               	goto	l11570
  2153  0336                     u5590:
  2154                           	line	224
  2155                           	
  2156  0336                     l11568:	
  2157                           ;Main.c: 224: RT2P = shortwall - 100;
  2158  0336  1283               	bcf	status, 5	;RP0=0, select bank0
  2159  0337  1303               	bcf	status, 6	;RP1=0, select bank0
  2160  0338  086C               	movf	(main@shortwall_3022),w
  2161  0339  3E9C               	addlw	low(-100)
  2162  033A  00EE               	movwf	(main@RT2P)
  2163  033B  086D               	movf	(main@shortwall_3022+1),w
  2164  033C  1803               	skipnc
  2165  033D  3E01               	addlw	1
  2166  033E  3EFF               	addlw	high(-100)
  2167  033F  00EF               	movwf	1+(main@RT2P)
  2168  0340  2B41               	goto	l11570
  2169                           	
  2170  0341                     l2243:	
  2171                           	line	226
  2172                           	
  2173  0341                     l11570:	
  2174                           ;Main.c: 226: if (RT2P >= 400 && RT2P < 500 )
  2175  0341  1283               	bcf	status, 5	;RP0=0, select bank0
  2176  0342  1303               	bcf	status, 6	;RP1=0, select bank0
  2177  0343  086F               	movf	(main@RT2P+1),w
  2178  0344  3A80               	xorlw	80h
  2179  0345  00FF               	movwf	btemp+1
  2180  0346  3081               	movlw	(high(0190h))^80h
  2181  0347  027F               	subwf	btemp+1,w
  2182  0348  1D03               	skipz
  2183  0349  2B4C               	goto	u5605
  2184  034A  3090               	movlw	low(0190h)
  2185  034B  026E               	subwf	(main@RT2P),w
  2186  034C                     u5605:
  2187                           
  2188  034C  1C03               	skipc
  2189  034D  2B4F               	goto	u5601
  2190  034E  2B50               	goto	u5600
  2191  034F                     u5601:
  2192  034F  2B6E               	goto	l11578
  2193  0350                     u5600:
  2194                           	
  2195  0350                     l11572:	
  2196  0350  1283               	bcf	status, 5	;RP0=0, select bank0
  2197  0351  1303               	bcf	status, 6	;RP1=0, select bank0
  2198  0352  086F               	movf	(main@RT2P+1),w
  2199  0353  3A80               	xorlw	80h
  2200  0354  00FF               	movwf	btemp+1
  2201  0355  3081               	movlw	(high(01F4h))^80h
  2202  0356  027F               	subwf	btemp+1,w
  2203  0357  1D03               	skipz
  2204  0358  2B5B               	goto	u5615
  2205  0359  30F4               	movlw	low(01F4h)
  2206  035A  026E               	subwf	(main@RT2P),w
  2207  035B                     u5615:
  2208                           
  2209  035B  1803               	skipnc
  2210  035C  2B5E               	goto	u5611
  2211  035D  2B5F               	goto	u5610
  2212  035E                     u5611:
  2213  035E  2B6E               	goto	l11578
  2214  035F                     u5610:
  2215                           	line	228
  2216                           	
  2217  035F                     l11574:	
  2218                           ;Main.c: 227: {
  2219                           ;Main.c: 228: RT2P = RT2P - 400;
  2220  035F  1283               	bcf	status, 5	;RP0=0, select bank0
  2221  0360  1303               	bcf	status, 6	;RP1=0, select bank0
  2222  0361  086E               	movf	(main@RT2P),w
  2223  0362  3E70               	addlw	low(-400)
  2224  0363  00EE               	movwf	(main@RT2P)
  2225  0364  086F               	movf	(main@RT2P+1),w
  2226  0365  1803               	skipnc
  2227  0366  3E01               	addlw	1
  2228  0367  3EFE               	addlw	high(-400)
  2229  0368  00EF               	movwf	1+(main@RT2P)
  2230                           	line	229
  2231                           	
  2232  0369                     l11576:	
  2233                           ;Main.c: 229: direction1 = 1;
  2234  0369  3001               	movlw	low(01h)
  2235  036A  00E5               	movwf	(main@direction1)
  2236  036B  3000               	movlw	high(01h)
  2237  036C  00E6               	movwf	((main@direction1))+1
  2238  036D  2B6E               	goto	l11578
  2239                           	line	230
  2240                           	
  2241  036E                     l2244:	
  2242                           	line	231
  2243                           	
  2244  036E                     l11578:	
  2245                           ;Main.c: 230: }
  2246                           ;Main.c: 231: if (RT2P >= 200 && RT2P < 400)
  2247  036E  1283               	bcf	status, 5	;RP0=0, select bank0
  2248  036F  1303               	bcf	status, 6	;RP1=0, select bank0
  2249  0370  086F               	movf	(main@RT2P+1),w
  2250  0371  3A80               	xorlw	80h
  2251  0372  00FF               	movwf	btemp+1
  2252  0373  3080               	movlw	(high(0C8h))^80h
  2253  0374  027F               	subwf	btemp+1,w
  2254  0375  1D03               	skipz
  2255  0376  2B79               	goto	u5625
  2256  0377  30C8               	movlw	low(0C8h)
  2257  0378  026E               	subwf	(main@RT2P),w
  2258  0379                     u5625:
  2259                           
  2260  0379  1C03               	skipc
  2261  037A  2B7C               	goto	u5621
  2262  037B  2B7D               	goto	u5620
  2263  037C                     u5621:
  2264  037C  2BA5               	goto	l11588
  2265  037D                     u5620:
  2266                           	
  2267  037D                     l11580:	
  2268  037D  1283               	bcf	status, 5	;RP0=0, select bank0
  2269  037E  1303               	bcf	status, 6	;RP1=0, select bank0
  2270  037F  086F               	movf	(main@RT2P+1),w
  2271  0380  3A80               	xorlw	80h
  2272  0381  00FF               	movwf	btemp+1
  2273  0382  3081               	movlw	(high(0190h))^80h
  2274  0383  027F               	subwf	btemp+1,w
  2275  0384  1D03               	skipz
  2276  0385  2B88               	goto	u5635
  2277  0386  3090               	movlw	low(0190h)
  2278  0387  026E               	subwf	(main@RT2P),w
  2279  0388                     u5635:
  2280                           
  2281  0388  1803               	skipnc
  2282  0389  2B8B               	goto	u5631
  2283  038A  2B8C               	goto	u5630
  2284  038B                     u5631:
  2285  038B  2BA5               	goto	l11588
  2286  038C                     u5630:
  2287                           	line	233
  2288                           	
  2289  038C                     l11582:	
  2290                           ;Main.c: 232: {
  2291                           ;Main.c: 233: RT2P = 400 - RT2P;
  2292  038C  1283               	bcf	status, 5	;RP0=0, select bank0
  2293  038D  1303               	bcf	status, 6	;RP1=0, select bank0
  2294  038E  096E               	comf	(main@RT2P),w
  2295  038F  00E2               	movwf	(??_main+0)+0
  2296  0390  096F               	comf	(main@RT2P+1),w
  2297  0391  00E3               	movwf	((??_main+0)+0+1)
  2298  0392  0AE2               	incf	(??_main+0)+0,f
  2299  0393  1903               	skipnz
  2300  0394  0AE3               	incf	((??_main+0)+0+1),f
  2301  0395  0862               	movf	0+(??_main+0)+0,w
  2302  0396  3E90               	addlw	low(0190h)
  2303  0397  00EE               	movwf	(main@RT2P)
  2304  0398  0863               	movf	1+(??_main+0)+0,w
  2305  0399  1803               	skipnc
  2306  039A  3E01               	addlw	1
  2307  039B  3E01               	addlw	high(0190h)
  2308  039C  00EF               	movwf	1+(main@RT2P)
  2309                           	line	234
  2310                           	
  2311  039D                     l11584:	
  2312                           ;Main.c: 234: RT2P = RT2P * -1;
  2313  039D  09EE               	comf	(main@RT2P),f
  2314  039E  09EF               	comf	(main@RT2P+1),f
  2315  039F  0AEE               	incf	(main@RT2P),f
  2316  03A0  1903               	skipnz
  2317  03A1  0AEF               	incf	(main@RT2P+1),f
  2318                           	line	235
  2319                           	
  2320  03A2                     l11586:	
  2321                           ;Main.c: 235: direction1 = 0;
  2322  03A2  01E5               	clrf	(main@direction1)
  2323  03A3  01E6               	clrf	(main@direction1+1)
  2324  03A4  2BA5               	goto	l11588
  2325                           	line	236
  2326                           	
  2327  03A5                     l2245:	
  2328                           	line	237
  2329                           	
  2330  03A5                     l11588:	
  2331                           ;Main.c: 236: }
  2332                           ;Main.c: 237: if (RT2P < 200 && RT2P >= 0)
  2333  03A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2334  03A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2335  03A7  086F               	movf	(main@RT2P+1),w
  2336  03A8  3A80               	xorlw	80h
  2337  03A9  00FF               	movwf	btemp+1
  2338  03AA  3080               	movlw	(high(0C8h))^80h
  2339  03AB  027F               	subwf	btemp+1,w
  2340  03AC  1D03               	skipz
  2341  03AD  2BB0               	goto	u5645
  2342  03AE  30C8               	movlw	low(0C8h)
  2343  03AF  026E               	subwf	(main@RT2P),w
  2344  03B0                     u5645:
  2345                           
  2346  03B0  1803               	skipnc
  2347  03B1  2BB3               	goto	u5641
  2348  03B2  2BB4               	goto	u5640
  2349  03B3                     u5641:
  2350  03B3  2BBF               	goto	l11594
  2351  03B4                     u5640:
  2352                           	
  2353  03B4                     l11590:	
  2354  03B4  1283               	bcf	status, 5	;RP0=0, select bank0
  2355  03B5  1303               	bcf	status, 6	;RP1=0, select bank0
  2356  03B6  1BEF               	btfsc	(main@RT2P+1),7
  2357  03B7  2BB9               	goto	u5651
  2358  03B8  2BBA               	goto	u5650
  2359  03B9                     u5651:
  2360  03B9  2BBF               	goto	l11594
  2361  03BA                     u5650:
  2362                           	line	239
  2363                           	
  2364  03BA                     l11592:	
  2365                           ;Main.c: 238: {
  2366                           ;Main.c: 239: direction1 = 1;
  2367  03BA  3001               	movlw	low(01h)
  2368  03BB  00E5               	movwf	(main@direction1)
  2369  03BC  3000               	movlw	high(01h)
  2370  03BD  00E6               	movwf	((main@direction1))+1
  2371  03BE  2BBF               	goto	l11594
  2372                           	line	240
  2373                           	
  2374  03BF                     l2246:	
  2375                           	line	241
  2376                           	
  2377  03BF                     l11594:	
  2378                           ;Main.c: 240: }
  2379                           ;Main.c: 241: if (RT2P < 0 && RT2P >= -200)
  2380  03BF  1283               	bcf	status, 5	;RP0=0, select bank0
  2381  03C0  1303               	bcf	status, 6	;RP1=0, select bank0
  2382  03C1  1FEF               	btfss	(main@RT2P+1),7
  2383  03C2  2BC4               	goto	u5661
  2384  03C3  2BC5               	goto	u5660
  2385  03C4                     u5661:
  2386  03C4  2BD7               	goto	l11600
  2387  03C5                     u5660:
  2388                           	
  2389  03C5                     l11596:	
  2390  03C5  086F               	movf	(main@RT2P+1),w
  2391  03C6  3A80               	xorlw	80h
  2392  03C7  00FF               	movwf	btemp+1
  2393  03C8  307F               	movlw	(high(-200))^80h
  2394  03C9  027F               	subwf	btemp+1,w
  2395  03CA  1D03               	skipz
  2396  03CB  2BCE               	goto	u5675
  2397  03CC  3038               	movlw	low(-200)
  2398  03CD  026E               	subwf	(main@RT2P),w
  2399  03CE                     u5675:
  2400                           
  2401  03CE  1C03               	skipc
  2402  03CF  2BD1               	goto	u5671
  2403  03D0  2BD2               	goto	u5670
  2404  03D1                     u5671:
  2405  03D1  2BD7               	goto	l11600
  2406  03D2                     u5670:
  2407                           	line	243
  2408                           	
  2409  03D2                     l11598:	
  2410                           ;Main.c: 242: {
  2411                           ;Main.c: 243: direction1 = 0;
  2412  03D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2413  03D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2414  03D4  01E5               	clrf	(main@direction1)
  2415  03D5  01E6               	clrf	(main@direction1+1)
  2416  03D6  2BD7               	goto	l11600
  2417                           	line	244
  2418                           	
  2419  03D7                     l2247:	
  2420                           	line	245
  2421                           	
  2422  03D7                     l11600:	
  2423                           ;Main.c: 244: }
  2424                           ;Main.c: 245: if(RT2P < -200 || RT2P >500)
  2425  03D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2426  03D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2427  03D9  086F               	movf	(main@RT2P+1),w
  2428  03DA  3A80               	xorlw	80h
  2429  03DB  00FF               	movwf	btemp+1
  2430  03DC  307F               	movlw	(high(-200))^80h
  2431  03DD  027F               	subwf	btemp+1,w
  2432  03DE  1D03               	skipz
  2433  03DF  2BE2               	goto	u5685
  2434  03E0  3038               	movlw	low(-200)
  2435  03E1  026E               	subwf	(main@RT2P),w
  2436  03E2                     u5685:
  2437                           
  2438  03E2  1C03               	skipc
  2439  03E3  2BE5               	goto	u5681
  2440  03E4  2BE6               	goto	u5680
  2441  03E5                     u5681:
  2442  03E5  2CBF               	goto	l11628
  2443  03E6                     u5680:
  2444                           	
  2445  03E6                     l11602:	
  2446  03E6  1283               	bcf	status, 5	;RP0=0, select bank0
  2447  03E7  1303               	bcf	status, 6	;RP1=0, select bank0
  2448  03E8  086F               	movf	(main@RT2P+1),w
  2449  03E9  3A80               	xorlw	80h
  2450  03EA  00FF               	movwf	btemp+1
  2451  03EB  3081               	movlw	(high(01F5h))^80h
  2452  03EC  027F               	subwf	btemp+1,w
  2453  03ED  1D03               	skipz
  2454  03EE  2BF1               	goto	u5695
  2455  03EF  30F5               	movlw	low(01F5h)
  2456  03F0  026E               	subwf	(main@RT2P),w
  2457  03F1                     u5695:
  2458                           
  2459  03F1  1C03               	skipc
  2460  03F2  2BF4               	goto	u5691
  2461  03F3  2BF5               	goto	u5690
  2462  03F4                     u5691:
  2463  03F4  2BF7               	goto	l11604
  2464  03F5                     u5690:
  2465  03F5  2CBF               	goto	l11628
  2466                           	
  2467  03F6                     l2250:	
  2468                           	line	247
  2469                           ;Main.c: 246: {
  2470                           ;Main.c: 247: break;
  2471  03F6  2CBF               	goto	l11628
  2472                           	line	248
  2473                           	
  2474  03F7                     l2248:	
  2475                           	line	250
  2476                           	
  2477  03F7                     l11604:	
  2478                           ;Main.c: 248: }
  2479                           ;Main.c: 250: rotate((400 - shortwall ), 0);
  2480  03F7  1283               	bcf	status, 5	;RP0=0, select bank0
  2481  03F8  1303               	bcf	status, 6	;RP1=0, select bank0
  2482  03F9  096C               	comf	(main@shortwall_3022),w
  2483  03FA  00E2               	movwf	(??_main+0)+0
  2484  03FB  096D               	comf	(main@shortwall_3022+1),w
  2485  03FC  00E3               	movwf	((??_main+0)+0+1)
  2486  03FD  0AE2               	incf	(??_main+0)+0,f
  2487  03FE  1903               	skipnz
  2488  03FF  0AE3               	incf	((??_main+0)+0+1),f
  2489  0400  0862               	movf	0+(??_main+0)+0,w
  2490  0401  3E90               	addlw	low(0190h)
  2491  0402  00A3               	movwf	(?_rotate)
  2492  0403  0863               	movf	1+(??_main+0)+0,w
  2493  0404  1803               	skipnc
  2494  0405  3E01               	addlw	1
  2495  0406  3E01               	addlw	high(0190h)
  2496  0407  00A4               	movwf	1+(?_rotate)
  2497  0408  01A5               	clrf	0+(?_rotate)+02h
  2498  0409  160A  118A  27B0   	fcall	_rotate
              120A  118A         
  2499                           	line	251
  2500                           	
  2501  040E                     l11606:	
  2502                           ;Main.c: 251: _delay((unsigned long)((100)*(20000000/4000.0)));
  2503                           	opt asmopt_off
  2504  040E  3003               movlw  3
  2505  040F  1283               	bcf	status, 5	;RP0=0, select bank0
  2506  0410  1303               	bcf	status, 6	;RP1=0, select bank0
  2507  0411  00E4               movwf	((??_main+0)+0+2),f
  2508  0412  308A               movlw	138
  2509  0413  00E3               movwf	((??_main+0)+0+1),f
  2510  0414  3056               	movlw	86
  2511  0415  00E2               movwf	((??_main+0)+0),f
  2512  0416                     u5717:
  2513  0416  0BE2               	decfsz	((??_main+0)+0),f
  2514  0417  2C16               	goto	u5717
  2515  0418  0BE3               	decfsz	((??_main+0)+0+1),f
  2516  0419  2C16               	goto	u5717
  2517  041A  0BE4               	decfsz	((??_main+0)+0+2),f
  2518  041B  2C16               	goto	u5717
  2519  041C  2C1D               	nop2
  2520                           opt asmopt_on
  2521                           
  2522                           	line	254
  2523                           	
  2524  041D                     l11608:	
  2525                           ;Main.c: 254: int RT2A= RT2P * (36.0/40.0);
  2526  041D  1283               	bcf	status, 5	;RP0=0, select bank0
  2527  041E  1303               	bcf	status, 6	;RP1=0, select bank0
  2528  041F  086F               	movf	(main@RT2P+1),w
  2529  0420  01B7               	clrf	(?___awtoft+1)
  2530  0421  07B7               	addwf	(?___awtoft+1)
  2531  0422  086E               	movf	(main@RT2P),w
  2532  0423  01B6               	clrf	(?___awtoft)
  2533  0424  07B6               	addwf	(?___awtoft)
  2534                           
  2535  0425  160A  118A  24FD   	fcall	___awtoft
              120A  118A         
  2536  042A  1283               	bcf	status, 5	;RP0=0, select bank0
  2537  042B  1303               	bcf	status, 6	;RP1=0, select bank0
  2538  042C  0836               	movf	(0+(?___awtoft)),w
  2539  042D  00BF               	movwf	0+(?___ftmul)+03h
  2540  042E  0837               	movf	(1+(?___awtoft)),w
  2541  042F  00C0               	movwf	1+(?___ftmul)+03h
  2542  0430  0838               	movf	(2+(?___awtoft)),w
  2543  0431  00C1               	movwf	2+(?___ftmul)+03h
  2544  0432  3066               	movlw	0x66
  2545  0433  00BC               	movwf	(?___ftmul)
  2546  0434  3066               	movlw	0x66
  2547  0435  00BD               	movwf	(?___ftmul+1)
  2548  0436  303F               	movlw	0x3f
  2549  0437  00BE               	movwf	(?___ftmul+2)
  2550  0438  120A  158A  2612   	fcall	___ftmul
              120A  118A         
  2551  043D  1283               	bcf	status, 5	;RP0=0, select bank0
  2552  043E  1303               	bcf	status, 6	;RP1=0, select bank0
  2553  043F  083C               	movf	(0+(?___ftmul)),w
  2554  0440  00A8               	movwf	(?___fttol)
  2555  0441  083D               	movf	(1+(?___ftmul)),w
  2556  0442  00A9               	movwf	(?___fttol+1)
  2557  0443  083E               	movf	(2+(?___ftmul)),w
  2558  0444  00AA               	movwf	(?___fttol+2)
  2559  0445  120A  158A  2419   	fcall	___fttol
              120A  118A         
  2560  044A  1283               	bcf	status, 5	;RP0=0, select bank0
  2561  044B  1303               	bcf	status, 6	;RP1=0, select bank0
  2562  044C  0829               	movf	1+(((0+(?___fttol)))),w
  2563  044D  01E8               	clrf	(main@RT2A+1)
  2564  044E  07E8               	addwf	(main@RT2A+1)
  2565  044F  0828               	movf	0+(((0+(?___fttol)))),w
  2566  0450  01E7               	clrf	(main@RT2A)
  2567  0451  07E7               	addwf	(main@RT2A)
  2568                           
  2569                           	line	255
  2570                           	
  2571  0452                     l11610:	
  2572                           ;Main.c: 255: robotTurn(RT2A);
  2573  0452  0868               	movf	(main@RT2A+1),w
  2574  0453  01A3               	clrf	(?_robotTurn+1)
  2575  0454  07A3               	addwf	(?_robotTurn+1)
  2576  0455  0867               	movf	(main@RT2A),w
  2577  0456  01A2               	clrf	(?_robotTurn)
  2578  0457  07A2               	addwf	(?_robotTurn)
  2579                           
  2580  0458  120A  158A  2100   	fcall	_robotTurn
              120A  118A         
  2581                           	line	256
  2582                           	
  2583  045D                     l11612:	
  2584                           ;Main.c: 256: _delay((unsigned long)((100)*(20000000/4000.0)));
  2585                           	opt asmopt_off
  2586  045D  3003               movlw  3
  2587  045E  1283               	bcf	status, 5	;RP0=0, select bank0
  2588  045F  1303               	bcf	status, 6	;RP1=0, select bank0
  2589  0460  00E4               movwf	((??_main+0)+0+2),f
  2590  0461  308A               movlw	138
  2591  0462  00E3               movwf	((??_main+0)+0+1),f
  2592  0463  3056               	movlw	86
  2593  0464  00E2               movwf	((??_main+0)+0),f
  2594  0465                     u5727:
  2595  0465  0BE2               	decfsz	((??_main+0)+0),f
  2596  0466  2C65               	goto	u5727
  2597  0467  0BE3               	decfsz	((??_main+0)+0+1),f
  2598  0468  2C65               	goto	u5727
  2599  0469  0BE4               	decfsz	((??_main+0)+0+2),f
  2600  046A  2C65               	goto	u5727
  2601  046B  2C6C               	nop2
  2602                           opt asmopt_on
  2603                           
  2604                           	line	257
  2605                           	
  2606  046C                     l11614:	
  2607                           ;Main.c: 257: rotate(shortwall,0);
  2608  046C  1283               	bcf	status, 5	;RP0=0, select bank0
  2609  046D  1303               	bcf	status, 6	;RP1=0, select bank0
  2610  046E  086D               	movf	(main@shortwall_3022+1),w
  2611  046F  01A4               	clrf	(?_rotate+1)
  2612  0470  07A4               	addwf	(?_rotate+1)
  2613  0471  086C               	movf	(main@shortwall_3022),w
  2614  0472  01A3               	clrf	(?_rotate)
  2615  0473  07A3               	addwf	(?_rotate)
  2616                           
  2617  0474  01A5               	clrf	0+(?_rotate)+02h
  2618  0475  160A  118A  27B0   	fcall	_rotate
              120A  118A         
  2619                           	line	258
  2620                           	
  2621  047A                     l11616:	
  2622                           ;Main.c: 258: _delay((unsigned long)((100)*(20000000/4000.0)));
  2623                           	opt asmopt_off
  2624  047A  3003               movlw  3
  2625  047B  1283               	bcf	status, 5	;RP0=0, select bank0
  2626  047C  1303               	bcf	status, 6	;RP1=0, select bank0
  2627  047D  00E4               movwf	((??_main+0)+0+2),f
  2628  047E  308A               movlw	138
  2629  047F  00E3               movwf	((??_main+0)+0+1),f
  2630  0480  3056               	movlw	86
  2631  0481  00E2               movwf	((??_main+0)+0),f
  2632  0482                     u5737:
  2633  0482  0BE2               	decfsz	((??_main+0)+0),f
  2634  0483  2C82               	goto	u5737
  2635  0484  0BE3               	decfsz	((??_main+0)+0+1),f
  2636  0485  2C82               	goto	u5737
  2637  0486  0BE4               	decfsz	((??_main+0)+0+2),f
  2638  0487  2C82               	goto	u5737
  2639  0488  2C89               	nop2
  2640                           opt asmopt_on
  2641                           
  2642                           	line	259
  2643                           	
  2644  0489                     l11618:	
  2645                           ;Main.c: 259: robotMoveSpeed(500, 200);
  2646  0489  30F4               	movlw	low(01F4h)
  2647  048A  1283               	bcf	status, 5	;RP0=0, select bank0
  2648  048B  1303               	bcf	status, 6	;RP1=0, select bank0
  2649  048C  00D9               	movwf	(?_robotMoveSpeed)
  2650  048D  3001               	movlw	high(01F4h)
  2651  048E  00DA               	movwf	((?_robotMoveSpeed))+1
  2652  048F  30C8               	movlw	low(0C8h)
  2653  0490  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2654  0491  3000               	movlw	high(0C8h)
  2655  0492  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2656  0493  120A  158A  2566   	fcall	_robotMoveSpeed
              120A  118A         
  2657  0498  2C99               	goto	l11620
  2658                           	line	260
  2659                           	
  2660  0499                     l2240:	
  2661                           	line	216
  2662                           	
  2663  0499                     l11620:	
  2664  0499  1683               	bsf	status, 5	;RP0=1, select bank1
  2665  049A  1303               	bcf	status, 6	;RP1=0, select bank1
  2666  049B  084E               	movf	(_ROBOTerror)^080h,w
  2667  049C  1D03               	skipz
  2668  049D  2C9F               	goto	u5700
  2669  049E  2AFE               	goto	l11556
  2670  049F                     u5700:
  2671  049F  2CBF               	goto	l11628
  2672                           	
  2673  04A0                     l2251:	
  2674                           	line	262
  2675                           ;Main.c: 260: }
  2676                           ;Main.c: 262: break;
  2677  04A0  2CBF               	goto	l11628
  2678                           	line	264
  2679                           ;Main.c: 264: case 5:
  2680                           	
  2681  04A1                     l2252:	
  2682                           	line	265
  2683                           	
  2684  04A1                     l11622:	
  2685                           ;Main.c: 265: ChargeMode();
  2686  04A1  160A  118A  26D3   	fcall	_ChargeMode
              120A  118A         
  2687                           	line	266
  2688                           ;Main.c: 266: break;
  2689  04A6  2CBF               	goto	l11628
  2690                           	line	267
  2691                           ;Main.c: 267: default:
  2692                           	
  2693  04A7                     l2253:	
  2694                           	line	269
  2695                           ;Main.c: 269: break;
  2696  04A7  2CBF               	goto	l11628
  2697                           	line	270
  2698                           	
  2699  04A8                     l11624:	
  2700                           ;Main.c: 270: }
  2701  04A8  2CBF               	goto	l11628
  2702                           	line	198
  2703                           	
  2704  04A9                     l2233:	
  2705                           	
  2706  04A9                     l11626:	
  2707  04A9  1283               	bcf	status, 5	;RP0=0, select bank0
  2708  04AA  1303               	bcf	status, 6	;RP1=0, select bank0
  2709  04AB  086B               	movf	(main@choice),w
  2710                           	; Switch size 1, requested type "space"
  2711                           ; Number of cases is 6, Range of values is 0 to 5
  2712                           ; switch strategies available:
  2713                           ; Name         Instructions Cycles
  2714                           ; simple_byte           19    10 (average)
  2715                           ; direct_byte           26     8 (fixed)
  2716                           ; jumptable            260     6 (fixed)
  2717                           ; rangetable            10     6 (fixed)
  2718                           ; spacedrange           18     9 (fixed)
  2719                           ; locatedrange           6     3 (fixed)
  2720                           ;	Chosen strategy is simple_byte
  2721                           
  2722                           	opt asmopt_off
  2723  04AC  3A00               	xorlw	0^0	; case 0
  2724  04AD  1903               	skipnz
  2725  04AE  2AAE               	goto	l11544
  2726  04AF  3A01               	xorlw	1^0	; case 1
  2727  04B0  1903               	skipnz
  2728  04B1  2AB4               	goto	l11546
  2729  04B2  3A03               	xorlw	2^1	; case 2
  2730  04B3  1903               	skipnz
  2731  04B4  2AD9               	goto	l11550
  2732  04B5  3A01               	xorlw	3^2	; case 3
  2733  04B6  1903               	skipnz
  2734  04B7  2AE9               	goto	l11552
  2735  04B8  3A07               	xorlw	4^3	; case 4
  2736  04B9  1903               	skipnz
  2737  04BA  2AF9               	goto	l11554
  2738  04BB  3A01               	xorlw	5^4	; case 5
  2739  04BC  1903               	skipnz
  2740  04BD  2CA1               	goto	l11622
  2741  04BE  2CBF               	goto	l11628
  2742                           	opt asmopt_on
  2743                           
  2744                           	line	270
  2745                           	
  2746  04BF                     l2235:	
  2747                           	line	271
  2748                           	
  2749  04BF                     l11628:	
  2750                           ;Main.c: 271: choice = 255;
  2751  04BF  30FF               	movlw	(0FFh)
  2752  04C0  1283               	bcf	status, 5	;RP0=0, select bank0
  2753  04C1  1303               	bcf	status, 6	;RP1=0, select bank0
  2754  04C2  00E2               	movwf	(??_main+0)+0
  2755  04C3  0862               	movf	(??_main+0)+0,w
  2756  04C4  00EB               	movwf	(main@choice)
  2757  04C5  2A86               	goto	l11528
  2758                           	line	272
  2759                           	
  2760  04C6                     l2254:	
  2761                           	line	180
  2762  04C6  2A86               	goto	l11528
  2763                           	
  2764  04C7                     l2255:	
  2765                           	line	273
  2766                           	
  2767  04C7                     l2256:	
  2768                           	global	start
  2769  04C7  120A  118A  2812   	ljmp	start
  2770                           	opt stack 0
  2771                           GLOBAL	__end_of_main
  2772  04CA                     	__end_of_main:
  2773 ;; =============== function _main ends ============
  2774                           
  2775                           	signat	_main,88
  2776                           	global	_ChargeMode
  2777                           psect	text1072,local,class=CODE,delta=2
  2778                           global __ptext1072
  2779  16D3                     __ptext1072:
  2780                           
  2781 ;; *************** function _ChargeMode *****************
  2782 ;; Defined at:
  2783 ;;		line 319 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;		None               void
  2790 ;; Registers used:
  2791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2797 ;;      Params:         0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0
  2799 ;;      Temps:          0       1       0       0       0
  2800 ;;      Totals:         0       1       0       0       0
  2801 ;;Total ram usage:        1 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    6
  2804 ;; This function calls:
  2805 ;;		_ser_putch
  2806 ;;		_UpdateDisplay
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           psect	text1072
  2812                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2813                           	line	319
  2814                           	global	__size_of_ChargeMode
  2815  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2816                           	
  2817  16D3                     _ChargeMode:	
  2818                           	opt	stack 1
  2819                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2820                           	line	321
  2821                           	
  2822  16D3                     l11500:	
  2823                           ;Main.c: 321: currentMenu = 2;
  2824  16D3  3002               	movlw	(02h)
  2825  16D4  1283               	bcf	status, 5	;RP0=0, select bank0
  2826  16D5  1303               	bcf	status, 6	;RP1=0, select bank0
  2827  16D6  00D9               	movwf	(??_ChargeMode+0)+0
  2828  16D7  0859               	movf	(??_ChargeMode+0)+0,w
  2829  16D8  1683               	bsf	status, 5	;RP0=1, select bank1
  2830  16D9  1303               	bcf	status, 6	;RP1=0, select bank1
  2831  16DA  00D2               	movwf	(_currentMenu)^080h	;volatile
  2832                           	line	322
  2833                           	
  2834  16DB                     l11502:	
  2835                           ;Main.c: 322: ser_putch(128);
  2836  16DB  3080               	movlw	(080h)
  2837  16DC  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  2838  16E1  2EE2               	goto	l11504
  2839                           	line	324
  2840                           ;Main.c: 324: while (1)
  2841                           	
  2842  16E2                     l2274:	
  2843                           	line	326
  2844                           	
  2845  16E2                     l11504:	
  2846                           ;Main.c: 325: {
  2847                           ;Main.c: 326: if (RTC_FLAG_250MS == 1)
  2848  16E2  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2849  16E3  2EE5               	goto	u5551
  2850  16E4  2EE6               	goto	u5550
  2851  16E5                     u5551:
  2852  16E5  2F05               	goto	l11520
  2853  16E6                     u5550:
  2854                           	line	328
  2855                           	
  2856  16E6                     l11506:	
  2857                           ;Main.c: 327: {
  2858                           ;Main.c: 328: RTC_FLAG_250MS = 0;
  2859  16E6  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2860                           	line	329
  2861                           	
  2862  16E7                     l11508:	
  2863                           ;Main.c: 329: UpdateDisplay();
  2864  16E7  120A  118A  24CA   	fcall	_UpdateDisplay
              160A  118A         
  2865  16EC  2F05               	goto	l11520
  2866                           	line	330
  2867                           	
  2868  16ED                     l2275:	
  2869                           	line	331
  2870                           ;Main.c: 330: }
  2871                           ;Main.c: 331: switch (buttonPressed)
  2872  16ED  2F05               	goto	l11520
  2873                           	line	333
  2874                           ;Main.c: 332: {
  2875                           ;Main.c: 333: case 1:
  2876                           	
  2877  16EE                     l2277:	
  2878                           	line	334
  2879                           ;Main.c: 334: buttonPressed = 0;
  2880  16EE  01FD               	clrf	(_buttonPressed)	;volatile
  2881                           	line	335
  2882                           ;Main.c: 335: break;
  2883  16EF  2EE2               	goto	l11504
  2884                           	line	336
  2885                           ;Main.c: 336: case 2:
  2886                           	
  2887  16F0                     l2279:	
  2888                           	line	337
  2889                           ;Main.c: 337: buttonPressed = 0;
  2890  16F0  01FD               	clrf	(_buttonPressed)	;volatile
  2891                           	line	338
  2892                           ;Main.c: 338: break;
  2893  16F1  2EE2               	goto	l11504
  2894                           	line	339
  2895                           ;Main.c: 339: case 3:
  2896                           	
  2897  16F2                     l2280:	
  2898                           	line	340
  2899                           ;Main.c: 340: buttonPressed = 0;
  2900  16F2  01FD               	clrf	(_buttonPressed)	;volatile
  2901                           	line	341
  2902                           ;Main.c: 341: break;
  2903  16F3  2EE2               	goto	l11504
  2904                           	line	342
  2905                           ;Main.c: 342: case 4:
  2906                           	
  2907  16F4                     l2281:	
  2908                           	line	343
  2909                           ;Main.c: 343: buttonPressed = 0;
  2910  16F4  01FD               	clrf	(_buttonPressed)	;volatile
  2911                           	line	344
  2912                           ;Main.c: 344: break;
  2913  16F5  2EE2               	goto	l11504
  2914                           	line	345
  2915                           ;Main.c: 345: case 5:
  2916                           	
  2917  16F6                     l2282:	
  2918                           	line	346
  2919                           	
  2920  16F6                     l11510:	
  2921                           ;Main.c: 346: ser_putch(132);
  2922  16F6  3084               	movlw	(084h)
  2923  16F7  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  2924                           	line	347
  2925                           	
  2926  16FC                     l11512:	
  2927                           ;Main.c: 347: buttonPressed = 0;
  2928  16FC  01FD               	clrf	(_buttonPressed)	;volatile
  2929                           	line	348
  2930                           	
  2931  16FD                     l11514:	
  2932                           ;Main.c: 348: currentMenu = 0;
  2933  16FD  1683               	bsf	status, 5	;RP0=1, select bank1
  2934  16FE  1303               	bcf	status, 6	;RP1=0, select bank1
  2935  16FF  01D2               	clrf	(_currentMenu)^080h	;volatile
  2936  1700  2F18               	goto	l2283
  2937                           	line	349
  2938                           	
  2939  1701                     l11516:	
  2940                           ;Main.c: 349: return;
  2941  1701  2F18               	goto	l2283
  2942                           	line	350
  2943                           ;Main.c: 350: default:
  2944                           	
  2945  1702                     l2284:	
  2946                           	line	351
  2947                           ;Main.c: 351: buttonPressed = 0;
  2948  1702  01FD               	clrf	(_buttonPressed)	;volatile
  2949                           	line	352
  2950                           ;Main.c: 352: break;
  2951  1703  2EE2               	goto	l11504
  2952                           	line	353
  2953                           	
  2954  1704                     l11518:	
  2955                           ;Main.c: 353: }
  2956  1704  2EE2               	goto	l11504
  2957                           	line	331
  2958                           	
  2959  1705                     l2276:	
  2960                           	
  2961  1705                     l11520:	
  2962  1705  087D               	movf	(_buttonPressed),w	;volatile
  2963                           	; Switch size 1, requested type "space"
  2964                           ; Number of cases is 5, Range of values is 1 to 5
  2965                           ; switch strategies available:
  2966                           ; Name         Instructions Cycles
  2967                           ; simple_byte           16     9 (average)
  2968                           ; direct_byte           26    11 (fixed)
  2969                           ; jumptable            263     9 (fixed)
  2970                           ;	Chosen strategy is simple_byte
  2971                           
  2972                           	opt asmopt_off
  2973  1706  3A01               	xorlw	1^0	; case 1
  2974  1707  1903               	skipnz
  2975  1708  2EEE               	goto	l2277
  2976  1709  3A03               	xorlw	2^1	; case 2
  2977  170A  1903               	skipnz
  2978  170B  2EF0               	goto	l2279
  2979  170C  3A01               	xorlw	3^2	; case 3
  2980  170D  1903               	skipnz
  2981  170E  2EF2               	goto	l2280
  2982  170F  3A07               	xorlw	4^3	; case 4
  2983  1710  1903               	skipnz
  2984  1711  2EF4               	goto	l2281
  2985  1712  3A01               	xorlw	5^4	; case 5
  2986  1713  1903               	skipnz
  2987  1714  2EF6               	goto	l11510
  2988  1715  2F02               	goto	l2284
  2989                           	opt asmopt_on
  2990                           
  2991                           	line	353
  2992                           	
  2993  1716                     l2278:	
  2994  1716  2EE2               	goto	l11504
  2995                           	line	354
  2996                           	
  2997  1717                     l2285:	
  2998                           	line	324
  2999  1717  2EE2               	goto	l11504
  3000                           	
  3001  1718                     l2286:	
  3002                           	line	355
  3003                           	
  3004  1718                     l2283:	
  3005  1718  0008               	return
  3006                           	opt stack 0
  3007                           GLOBAL	__end_of_ChargeMode
  3008  1719                     	__end_of_ChargeMode:
  3009 ;; =============== function _ChargeMode ends ============
  3010                           
  3011                           	signat	_ChargeMode,88
  3012                           	global	_robotTurnSpeed
  3013                           psect	text1073,local,class=CODE,delta=2
  3014                           global __ptext1073
  3015  0B79                     __ptext1073:
  3016                           
  3017 ;; *************** function _robotTurnSpeed *****************
  3018 ;; Defined at:
  3019 ;;		line 178 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  angle           2   57[BANK0 ] int 
  3022 ;;  speed           2   59[BANK0 ] int 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  temp1           2   64[BANK0 ] int 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;		None               void
  3027 ;; Registers used:
  3028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3034 ;;      Params:         0       4       0       0       0
  3035 ;;      Locals:         0       2       0       0       0
  3036 ;;      Temps:          0       3       0       0       0
  3037 ;;      Totals:         0       9       0       0       0
  3038 ;;Total ram usage:        9 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    6
  3041 ;; This function calls:
  3042 ;;		_robotTurn
  3043 ;;		_robot_read
  3044 ;;		_UpdateDisplay
  3045 ;;		_abs
  3046 ;; This function is called by:
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           psect	text1073
  3051                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3052                           	line	178
  3053                           	global	__size_of_robotTurnSpeed
  3054  00A0                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  3055                           	
  3056  0B79                     _robotTurnSpeed:	
  3057                           	opt	stack 1
  3058                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3059                           	line	179
  3060                           	
  3061  0B79                     l11474:	
  3062                           ;robot.c: 179: angleTurned = 0;
  3063  0B79  1683               	bsf	status, 5	;RP0=1, select bank1
  3064  0B7A  1303               	bcf	status, 6	;RP1=0, select bank1
  3065  0B7B  01B8               	clrf	(_angleTurned)^080h
  3066  0B7C  01B9               	clrf	(_angleTurned+1)^080h
  3067                           	line	180
  3068                           ;robot.c: 180: int temp1 = 0;
  3069  0B7D  1283               	bcf	status, 5	;RP0=0, select bank0
  3070  0B7E  1303               	bcf	status, 6	;RP1=0, select bank0
  3071  0B7F  01E0               	clrf	(robotTurnSpeed@temp1)
  3072  0B80  01E1               	clrf	(robotTurnSpeed@temp1+1)
  3073                           	line	182
  3074                           	
  3075  0B81                     l11476:	
  3076                           ;robot.c: 182: robotTurn(angle);
  3077  0B81  085A               	movf	(robotTurnSpeed@angle+1),w
  3078  0B82  01A3               	clrf	(?_robotTurn+1)
  3079  0B83  07A3               	addwf	(?_robotTurn+1)
  3080  0B84  0859               	movf	(robotTurnSpeed@angle),w
  3081  0B85  01A2               	clrf	(?_robotTurn)
  3082  0B86  07A2               	addwf	(?_robotTurn)
  3083                           
  3084  0B87  120A  158A  2100   	fcall	_robotTurn
              120A  158A         
  3085                           	line	185
  3086                           ;robot.c: 185: while (abs(angleTurned) <= abs(angle))
  3087  0B8C  2BD6               	goto	l11496
  3088                           	
  3089  0B8D                     l6041:	
  3090                           	line	187
  3091                           	
  3092  0B8D                     l11478:	
  3093                           ;robot.c: 186: {
  3094                           ;robot.c: 187: robot_read(1);
  3095  0B8D  3001               	movlw	(01h)
  3096  0B8E  120A  118A  2629   	fcall	_robot_read
              120A  158A         
  3097                           	line	188
  3098                           	
  3099  0B93                     l11480:	
  3100                           ;robot.c: 188: if (BumpSensors || VwallSensor)
  3101  0B93  1683               	bsf	status, 5	;RP0=1, select bank1
  3102  0B94  1303               	bcf	status, 6	;RP1=0, select bank1
  3103  0B95  08C8               	movf	(_BumpSensors)^080h,f
  3104  0B96  1D03               	skipz	;volatile
  3105  0B97  2B99               	goto	u5521
  3106  0B98  2B9A               	goto	u5520
  3107  0B99                     u5521:
  3108  0B99  2B9F               	goto	l11484
  3109  0B9A                     u5520:
  3110                           	
  3111  0B9A                     l11482:	
  3112  0B9A  0851               	movf	(_VwallSensor)^080h,w	;volatile
  3113  0B9B  1D03               	skipz
  3114  0B9C  2B9E               	goto	u5530
  3115  0B9D  2BA3               	goto	l11486
  3116  0B9E                     u5530:
  3117  0B9E  2B9F               	goto	l11484
  3118                           	
  3119  0B9F                     l6044:	
  3120                           	line	190
  3121                           	
  3122  0B9F                     l11484:	
  3123                           ;robot.c: 189: {
  3124                           ;robot.c: 190: ROBOTerror = 1;
  3125  0B9F  01CE               	clrf	(_ROBOTerror)^080h
  3126  0BA0  1403               	bsf	status,0
  3127  0BA1  0DCE               	rlf	(_ROBOTerror)^080h,f
  3128                           	line	191
  3129                           ;robot.c: 191: break;
  3130  0BA2  2C0D               	goto	l11498
  3131                           	line	192
  3132                           	
  3133  0BA3                     l6042:	
  3134                           	line	193
  3135                           	
  3136  0BA3                     l11486:	
  3137                           ;robot.c: 192: }
  3138                           ;robot.c: 193: temp1 = AngleHighByte;
  3139  0BA3  0846               	movf	(_AngleHighByte)^080h,w	;volatile
  3140  0BA4  1283               	bcf	status, 5	;RP0=0, select bank0
  3141  0BA5  1303               	bcf	status, 6	;RP1=0, select bank0
  3142  0BA6  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3143  0BA7  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  3144  0BA8  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3145  0BA9  00E0               	movwf	(robotTurnSpeed@temp1)
  3146  0BAA  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3147  0BAB  00E1               	movwf	(robotTurnSpeed@temp1+1)
  3148                           	line	194
  3149                           	
  3150  0BAC                     l11488:	
  3151                           ;robot.c: 194: temp1 = temp1 << 8;
  3152  0BAC  0861               	movf	(robotTurnSpeed@temp1+1),w
  3153  0BAD  00DE               	movwf	(??_robotTurnSpeed+0)+0+1
  3154  0BAE  0860               	movf	(robotTurnSpeed@temp1),w
  3155  0BAF  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3156  0BB0  085D               	movf	(??_robotTurnSpeed+0)+0,w
  3157  0BB1  00DE               	movwf	(??_robotTurnSpeed+0)+1
  3158  0BB2  01DD               	clrf	(??_robotTurnSpeed+0)+0
  3159  0BB3  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3160  0BB4  00E0               	movwf	(robotTurnSpeed@temp1)
  3161  0BB5  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3162  0BB6  00E1               	movwf	(robotTurnSpeed@temp1+1)
  3163                           	line	195
  3164                           	
  3165  0BB7                     l11490:	
  3166                           ;robot.c: 195: temp1 += AngleLowByte;
  3167  0BB7  1683               	bsf	status, 5	;RP0=1, select bank1
  3168  0BB8  1303               	bcf	status, 6	;RP1=0, select bank1
  3169  0BB9  0847               	movf	(_AngleLowByte)^080h,w	;volatile
  3170  0BBA  1283               	bcf	status, 5	;RP0=0, select bank0
  3171  0BBB  1303               	bcf	status, 6	;RP1=0, select bank0
  3172  0BBC  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3173  0BBD  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  3174  0BBE  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  3175  0BBF  07E0               	addwf	(robotTurnSpeed@temp1),f
  3176  0BC0  1803               	skipnc
  3177  0BC1  0AE1               	incf	(robotTurnSpeed@temp1+1),f
  3178  0BC2  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3179  0BC3  07E1               	addwf	(robotTurnSpeed@temp1+1),f
  3180                           	line	196
  3181                           	
  3182  0BC4                     l11492:	
  3183                           ;robot.c: 196: angleTurned += temp1;
  3184  0BC4  0860               	movf	(robotTurnSpeed@temp1),w
  3185  0BC5  1683               	bsf	status, 5	;RP0=1, select bank1
  3186  0BC6  1303               	bcf	status, 6	;RP1=0, select bank1
  3187  0BC7  07B8               	addwf	(_angleTurned)^080h,f
  3188  0BC8  1803               	skipnc
  3189  0BC9  0AB9               	incf	(_angleTurned+1)^080h,f
  3190  0BCA  1283               	bcf	status, 5	;RP0=0, select bank0
  3191  0BCB  1303               	bcf	status, 6	;RP1=0, select bank0
  3192  0BCC  0861               	movf	(robotTurnSpeed@temp1+1),w
  3193  0BCD  1683               	bsf	status, 5	;RP0=1, select bank1
  3194  0BCE  1303               	bcf	status, 6	;RP1=0, select bank1
  3195  0BCF  07B9               	addwf	(_angleTurned+1)^080h,f
  3196                           	line	197
  3197                           	
  3198  0BD0                     l11494:	
  3199                           ;robot.c: 197: UpdateDisplay();
  3200  0BD0  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  158A         
  3201  0BD5  2BD6               	goto	l11496
  3202                           	line	198
  3203                           	
  3204  0BD6                     l6040:	
  3205                           	line	185
  3206                           	
  3207  0BD6                     l11496:	
  3208  0BD6  1283               	bcf	status, 5	;RP0=0, select bank0
  3209  0BD7  1303               	bcf	status, 6	;RP1=0, select bank0
  3210  0BD8  085A               	movf	(robotTurnSpeed@angle+1),w
  3211  0BD9  01A7               	clrf	(?_abs+1)
  3212  0BDA  07A7               	addwf	(?_abs+1)
  3213  0BDB  0859               	movf	(robotTurnSpeed@angle),w
  3214  0BDC  01A6               	clrf	(?_abs)
  3215  0BDD  07A6               	addwf	(?_abs)
  3216                           
  3217  0BDE  120A  158A  2005   	fcall	_abs
              120A  158A         
  3218  0BE3  1283               	bcf	status, 5	;RP0=0, select bank0
  3219  0BE4  1303               	bcf	status, 6	;RP1=0, select bank0
  3220  0BE5  0826               	movf	(0+?_abs),w
  3221  0BE6  00DD               	movwf	(??_robotTurnSpeed+0)+0
  3222  0BE7  0827               	movf	(1+?_abs),w
  3223  0BE8  00DE               	movwf	((??_robotTurnSpeed+0)+0+1)
  3224  0BE9  1683               	bsf	status, 5	;RP0=1, select bank1
  3225  0BEA  1303               	bcf	status, 6	;RP1=0, select bank1
  3226  0BEB  0839               	movf	(_angleTurned+1)^080h,w
  3227  0BEC  1283               	bcf	status, 5	;RP0=0, select bank0
  3228  0BED  1303               	bcf	status, 6	;RP1=0, select bank0
  3229  0BEE  01A7               	clrf	(?_abs+1)
  3230  0BEF  07A7               	addwf	(?_abs+1)
  3231  0BF0  1683               	bsf	status, 5	;RP0=1, select bank1
  3232  0BF1  1303               	bcf	status, 6	;RP1=0, select bank1
  3233  0BF2  0838               	movf	(_angleTurned)^080h,w
  3234  0BF3  1283               	bcf	status, 5	;RP0=0, select bank0
  3235  0BF4  1303               	bcf	status, 6	;RP1=0, select bank0
  3236  0BF5  01A6               	clrf	(?_abs)
  3237  0BF6  07A6               	addwf	(?_abs)
  3238                           
  3239  0BF7  120A  158A  2005   	fcall	_abs
              120A  158A         
  3240  0BFC  1283               	bcf	status, 5	;RP0=0, select bank0
  3241  0BFD  1303               	bcf	status, 6	;RP1=0, select bank0
  3242  0BFE  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  3243  0BFF  3A80               	xorlw	80h
  3244  0C00  00DF               	movwf	(??_robotTurnSpeed+2)+0
  3245  0C01  0827               	movf	(1+(?_abs)),w
  3246  0C02  3A80               	xorlw	80h
  3247  0C03  025F               	subwf	(??_robotTurnSpeed+2)+0,w
  3248  0C04  1D03               	skipz
  3249  0C05  2C08               	goto	u5545
  3250  0C06  0826               	movf	(0+(?_abs)),w
  3251  0C07  025D               	subwf	0+(??_robotTurnSpeed+0)+0,w
  3252  0C08                     u5545:
  3253                           
  3254  0C08  1803               	skipnc
  3255  0C09  2C0B               	goto	u5541
  3256  0C0A  2C0C               	goto	u5540
  3257  0C0B                     u5541:
  3258  0C0B  2B8D               	goto	l11478
  3259  0C0C                     u5540:
  3260  0C0C  2C0D               	goto	l11498
  3261                           	
  3262  0C0D                     l6045:	
  3263                           	line	200
  3264                           	
  3265  0C0D                     l11498:	
  3266                           ;robot.c: 198: }
  3267                           ;robot.c: 200: robotTurn(0);
  3268  0C0D  3000               	movlw	low(0)
  3269  0C0E  1283               	bcf	status, 5	;RP0=0, select bank0
  3270  0C0F  1303               	bcf	status, 6	;RP1=0, select bank0
  3271  0C10  00A2               	movwf	(?_robotTurn)
  3272  0C11  3000               	movlw	high(0)
  3273  0C12  00A3               	movwf	((?_robotTurn))+1
  3274  0C13  120A  158A  2100   	fcall	_robotTurn
              120A  158A         
  3275                           	line	201
  3276                           	
  3277  0C18                     l6046:	
  3278  0C18  0008               	return
  3279                           	opt stack 0
  3280                           GLOBAL	__end_of_robotTurnSpeed
  3281  0C19                     	__end_of_robotTurnSpeed:
  3282 ;; =============== function _robotTurnSpeed ends ============
  3283                           
  3284                           	signat	_robotTurnSpeed,8312
  3285                           	global	_robotMoveSpeed
  3286                           psect	text1074,local,class=CODE,delta=2
  3287                           global __ptext1074
  3288  0D66                     __ptext1074:
  3289                           
  3290 ;; *************** function _robotMoveSpeed *****************
  3291 ;; Defined at:
  3292 ;;		line 147 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  distance        2   57[BANK0 ] int 
  3295 ;;  speed           2   59[BANK0 ] int 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  temp1           2   64[BANK0 ] int 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;		None               void
  3300 ;; Registers used:
  3301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3307 ;;      Params:         0       4       0       0       0
  3308 ;;      Locals:         0       2       0       0       0
  3309 ;;      Temps:          0       3       0       0       0
  3310 ;;      Totals:         0       9       0       0       0
  3311 ;;Total ram usage:        9 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    6
  3314 ;; This function calls:
  3315 ;;		_RobotDrive
  3316 ;;		_robot_read
  3317 ;;		_UpdateDisplay
  3318 ;;		_abs
  3319 ;; This function is called by:
  3320 ;;		_main
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           psect	text1074
  3324                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3325                           	line	147
  3326                           	global	__size_of_robotMoveSpeed
  3327  00AC                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  3328                           	
  3329  0D66                     _robotMoveSpeed:	
  3330                           	opt	stack 1
  3331                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3332                           	line	148
  3333                           	
  3334  0D66                     l11446:	
  3335                           ;robot.c: 148: distTravelled = 0;
  3336  0D66  1683               	bsf	status, 5	;RP0=1, select bank1
  3337  0D67  1303               	bcf	status, 6	;RP1=0, select bank1
  3338  0D68  01BA               	clrf	(_distTravelled)^080h
  3339  0D69  01BB               	clrf	(_distTravelled+1)^080h
  3340                           	line	150
  3341                           	
  3342  0D6A                     l11448:	
  3343                           ;robot.c: 149: int temp1;
  3344                           ;robot.c: 150: RobotDrive(speed);
  3345  0D6A  1283               	bcf	status, 5	;RP0=0, select bank0
  3346  0D6B  1303               	bcf	status, 6	;RP1=0, select bank0
  3347  0D6C  085C               	movf	(robotMoveSpeed@speed+1),w
  3348  0D6D  01A3               	clrf	(?_RobotDrive+1)
  3349  0D6E  07A3               	addwf	(?_RobotDrive+1)
  3350  0D6F  085B               	movf	(robotMoveSpeed@speed),w
  3351  0D70  01A2               	clrf	(?_RobotDrive)
  3352  0D71  07A2               	addwf	(?_RobotDrive)
  3353                           
  3354  0D72  160A  118A  2582   	fcall	_RobotDrive
              120A  158A         
  3355                           	line	153
  3356                           ;robot.c: 153: while (abs(distTravelled) <= abs(distance))
  3357  0D77  2DCF               	goto	l11470
  3358                           	
  3359  0D78                     l6032:	
  3360                           	line	155
  3361                           	
  3362  0D78                     l11450:	
  3363                           ;robot.c: 154: {
  3364                           ;robot.c: 155: robot_read(0);
  3365  0D78  3000               	movlw	(0)
  3366  0D79  120A  118A  2629   	fcall	_robot_read
              120A  158A         
  3367                           	line	156
  3368                           	
  3369  0D7E                     l11452:	
  3370                           ;robot.c: 156: if (BumpSensors || VwallSensor)
  3371  0D7E  1683               	bsf	status, 5	;RP0=1, select bank1
  3372  0D7F  1303               	bcf	status, 6	;RP1=0, select bank1
  3373  0D80  08C8               	movf	(_BumpSensors)^080h,f
  3374  0D81  1D03               	skipz	;volatile
  3375  0D82  2D84               	goto	u5491
  3376  0D83  2D85               	goto	u5490
  3377  0D84                     u5491:
  3378  0D84  2D8A               	goto	l11456
  3379  0D85                     u5490:
  3380                           	
  3381  0D85                     l11454:	
  3382  0D85  0851               	movf	(_VwallSensor)^080h,w	;volatile
  3383  0D86  1D03               	skipz
  3384  0D87  2D89               	goto	u5500
  3385  0D88  2D8E               	goto	l11458
  3386  0D89                     u5500:
  3387  0D89  2D8A               	goto	l11456
  3388                           	
  3389  0D8A                     l6035:	
  3390                           	line	158
  3391                           	
  3392  0D8A                     l11456:	
  3393                           ;robot.c: 157: {
  3394                           ;robot.c: 158: ROBOTerror = 1;
  3395  0D8A  01CE               	clrf	(_ROBOTerror)^080h
  3396  0D8B  1403               	bsf	status,0
  3397  0D8C  0DCE               	rlf	(_ROBOTerror)^080h,f
  3398                           	line	159
  3399                           ;robot.c: 159: break;
  3400  0D8D  2E06               	goto	l11472
  3401                           	line	160
  3402                           	
  3403  0D8E                     l6033:	
  3404                           	line	161
  3405                           	
  3406  0D8E                     l11458:	
  3407                           ;robot.c: 160: }
  3408                           ;robot.c: 161: temp1 = DistHighByte;
  3409  0D8E  084A               	movf	(_DistHighByte)^080h,w	;volatile
  3410  0D8F  1283               	bcf	status, 5	;RP0=0, select bank0
  3411  0D90  1303               	bcf	status, 6	;RP1=0, select bank0
  3412  0D91  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3413  0D92  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3414  0D93  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3415  0D94  00E0               	movwf	(robotMoveSpeed@temp1)
  3416  0D95  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3417  0D96  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3418                           	line	162
  3419                           	
  3420  0D97                     l11460:	
  3421                           ;robot.c: 162: temp1 = temp1 << 8;
  3422  0D97  0861               	movf	(robotMoveSpeed@temp1+1),w
  3423  0D98  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  3424  0D99  0860               	movf	(robotMoveSpeed@temp1),w
  3425  0D9A  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3426  0D9B  085D               	movf	(??_robotMoveSpeed+0)+0,w
  3427  0D9C  00DE               	movwf	(??_robotMoveSpeed+0)+1
  3428  0D9D  01DD               	clrf	(??_robotMoveSpeed+0)+0
  3429  0D9E  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3430  0D9F  00E0               	movwf	(robotMoveSpeed@temp1)
  3431  0DA0  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3432  0DA1  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3433                           	line	163
  3434                           	
  3435  0DA2                     l11462:	
  3436                           ;robot.c: 163: temp1 += DistLowByte;
  3437  0DA2  1683               	bsf	status, 5	;RP0=1, select bank1
  3438  0DA3  1303               	bcf	status, 6	;RP1=0, select bank1
  3439  0DA4  084B               	movf	(_DistLowByte)^080h,w	;volatile
  3440  0DA5  1283               	bcf	status, 5	;RP0=0, select bank0
  3441  0DA6  1303               	bcf	status, 6	;RP1=0, select bank0
  3442  0DA7  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3443  0DA8  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3444  0DA9  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3445  0DAA  07E0               	addwf	(robotMoveSpeed@temp1),f
  3446  0DAB  1803               	skipnc
  3447  0DAC  0AE1               	incf	(robotMoveSpeed@temp1+1),f
  3448  0DAD  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3449  0DAE  07E1               	addwf	(robotMoveSpeed@temp1+1),f
  3450                           	line	164
  3451                           	
  3452  0DAF                     l11464:	
  3453                           ;robot.c: 164: distTravelled += temp1;
  3454  0DAF  0860               	movf	(robotMoveSpeed@temp1),w
  3455  0DB0  1683               	bsf	status, 5	;RP0=1, select bank1
  3456  0DB1  1303               	bcf	status, 6	;RP1=0, select bank1
  3457  0DB2  07BA               	addwf	(_distTravelled)^080h,f
  3458  0DB3  1803               	skipnc
  3459  0DB4  0ABB               	incf	(_distTravelled+1)^080h,f
  3460  0DB5  1283               	bcf	status, 5	;RP0=0, select bank0
  3461  0DB6  1303               	bcf	status, 6	;RP1=0, select bank0
  3462  0DB7  0861               	movf	(robotMoveSpeed@temp1+1),w
  3463  0DB8  1683               	bsf	status, 5	;RP0=1, select bank1
  3464  0DB9  1303               	bcf	status, 6	;RP1=0, select bank1
  3465  0DBA  07BB               	addwf	(_distTravelled+1)^080h,f
  3466                           	line	165
  3467                           	
  3468  0DBB                     l11466:	
  3469                           ;robot.c: 165: TotalDistTravelled += temp1;
  3470  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  3471  0DBC  1303               	bcf	status, 6	;RP1=0, select bank0
  3472  0DBD  0860               	movf	(robotMoveSpeed@temp1),w
  3473  0DBE  1683               	bsf	status, 5	;RP0=1, select bank1
  3474  0DBF  1303               	bcf	status, 6	;RP1=0, select bank1
  3475  0DC0  07B4               	addwf	(_TotalDistTravelled)^080h,f
  3476  0DC1  1803               	skipnc
  3477  0DC2  0AB5               	incf	(_TotalDistTravelled+1)^080h,f
  3478  0DC3  1283               	bcf	status, 5	;RP0=0, select bank0
  3479  0DC4  1303               	bcf	status, 6	;RP1=0, select bank0
  3480  0DC5  0861               	movf	(robotMoveSpeed@temp1+1),w
  3481  0DC6  1683               	bsf	status, 5	;RP0=1, select bank1
  3482  0DC7  1303               	bcf	status, 6	;RP1=0, select bank1
  3483  0DC8  07B5               	addwf	(_TotalDistTravelled+1)^080h,f
  3484                           	line	166
  3485                           	
  3486  0DC9                     l11468:	
  3487                           ;robot.c: 166: UpdateDisplay();
  3488  0DC9  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  158A         
  3489  0DCE  2DCF               	goto	l11470
  3490                           	line	167
  3491                           	
  3492  0DCF                     l6031:	
  3493                           	line	153
  3494                           	
  3495  0DCF                     l11470:	
  3496  0DCF  1283               	bcf	status, 5	;RP0=0, select bank0
  3497  0DD0  1303               	bcf	status, 6	;RP1=0, select bank0
  3498  0DD1  085A               	movf	(robotMoveSpeed@distance+1),w
  3499  0DD2  01A7               	clrf	(?_abs+1)
  3500  0DD3  07A7               	addwf	(?_abs+1)
  3501  0DD4  0859               	movf	(robotMoveSpeed@distance),w
  3502  0DD5  01A6               	clrf	(?_abs)
  3503  0DD6  07A6               	addwf	(?_abs)
  3504                           
  3505  0DD7  120A  158A  2005   	fcall	_abs
              120A  158A         
  3506  0DDC  1283               	bcf	status, 5	;RP0=0, select bank0
  3507  0DDD  1303               	bcf	status, 6	;RP1=0, select bank0
  3508  0DDE  0826               	movf	(0+?_abs),w
  3509  0DDF  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3510  0DE0  0827               	movf	(1+?_abs),w
  3511  0DE1  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  3512  0DE2  1683               	bsf	status, 5	;RP0=1, select bank1
  3513  0DE3  1303               	bcf	status, 6	;RP1=0, select bank1
  3514  0DE4  083B               	movf	(_distTravelled+1)^080h,w
  3515  0DE5  1283               	bcf	status, 5	;RP0=0, select bank0
  3516  0DE6  1303               	bcf	status, 6	;RP1=0, select bank0
  3517  0DE7  01A7               	clrf	(?_abs+1)
  3518  0DE8  07A7               	addwf	(?_abs+1)
  3519  0DE9  1683               	bsf	status, 5	;RP0=1, select bank1
  3520  0DEA  1303               	bcf	status, 6	;RP1=0, select bank1
  3521  0DEB  083A               	movf	(_distTravelled)^080h,w
  3522  0DEC  1283               	bcf	status, 5	;RP0=0, select bank0
  3523  0DED  1303               	bcf	status, 6	;RP1=0, select bank0
  3524  0DEE  01A6               	clrf	(?_abs)
  3525  0DEF  07A6               	addwf	(?_abs)
  3526                           
  3527  0DF0  120A  158A  2005   	fcall	_abs
              120A  158A         
  3528  0DF5  1283               	bcf	status, 5	;RP0=0, select bank0
  3529  0DF6  1303               	bcf	status, 6	;RP1=0, select bank0
  3530  0DF7  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3531  0DF8  3A80               	xorlw	80h
  3532  0DF9  00DF               	movwf	(??_robotMoveSpeed+2)+0
  3533  0DFA  0827               	movf	(1+(?_abs)),w
  3534  0DFB  3A80               	xorlw	80h
  3535  0DFC  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  3536  0DFD  1D03               	skipz
  3537  0DFE  2E01               	goto	u5515
  3538  0DFF  0826               	movf	(0+(?_abs)),w
  3539  0E00  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  3540  0E01                     u5515:
  3541                           
  3542  0E01  1803               	skipnc
  3543  0E02  2E04               	goto	u5511
  3544  0E03  2E05               	goto	u5510
  3545  0E04                     u5511:
  3546  0E04  2D78               	goto	l11450
  3547  0E05                     u5510:
  3548  0E05  2E06               	goto	l11472
  3549                           	
  3550  0E06                     l6036:	
  3551                           	line	169
  3552                           	
  3553  0E06                     l11472:	
  3554                           ;robot.c: 167: }
  3555                           ;robot.c: 169: RobotDrive(0);
  3556  0E06  3000               	movlw	low(0)
  3557  0E07  1283               	bcf	status, 5	;RP0=0, select bank0
  3558  0E08  1303               	bcf	status, 6	;RP1=0, select bank0
  3559  0E09  00A2               	movwf	(?_RobotDrive)
  3560  0E0A  3000               	movlw	high(0)
  3561  0E0B  00A3               	movwf	((?_RobotDrive))+1
  3562  0E0C  160A  118A  2582   	fcall	_RobotDrive
              120A  158A         
  3563                           	line	171
  3564                           	
  3565  0E11                     l6037:	
  3566  0E11  0008               	return
  3567                           	opt stack 0
  3568                           GLOBAL	__end_of_robotMoveSpeed
  3569  0E12                     	__end_of_robotMoveSpeed:
  3570 ;; =============== function _robotMoveSpeed ends ============
  3571                           
  3572                           	signat	_robotMoveSpeed,8312
  3573                           	global	_scan360
  3574                           psect	text1075,local,class=CODE,delta=2
  3575                           global __ptext1075
  3576  09EA                     __ptext1075:
  3577                           
  3578 ;; *************** function _scan360 *****************
  3579 ;; Defined at:
  3580 ;;		line 360 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  steps           2   63[BANK0 ] int 
  3585 ;;  lowestSteps     2   61[BANK0 ] int 
  3586 ;;  lowestVal       2   59[BANK0 ] int 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  2   57[BANK0 ] int 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       2       0       0       0
  3597 ;;      Locals:         0       6       0       0       0
  3598 ;;      Temps:          0       0       0       0       0
  3599 ;;      Totals:         0       8       0       0       0
  3600 ;;Total ram usage:        8 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    7
  3603 ;; This function calls:
  3604 ;;		_readAvgDistance
  3605 ;;		_rotate
  3606 ;;		_UpdateDisplay
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           psect	text1075
  3612                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3613                           	line	360
  3614                           	global	__size_of_scan360
  3615  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  3616                           	
  3617  09EA                     _scan360:	
  3618                           	opt	stack 0
  3619                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3620                           	line	361
  3621                           	
  3622  09EA                     l11418:	
  3623                           ;Main.c: 361: int lowestVal = 0, lowestSteps = 0;
  3624  09EA  1283               	bcf	status, 5	;RP0=0, select bank0
  3625  09EB  1303               	bcf	status, 6	;RP1=0, select bank0
  3626  09EC  01DB               	clrf	(scan360@lowestVal)
  3627  09ED  01DC               	clrf	(scan360@lowestVal+1)
  3628  09EE  01DD               	clrf	(scan360@lowestSteps)
  3629  09EF  01DE               	clrf	(scan360@lowestSteps+1)
  3630                           	line	363
  3631                           ;Main.c: 363: for (int steps = 0; steps < 200; steps+= 2)
  3632  09F0  01DF               	clrf	(scan360@steps)
  3633  09F1  01E0               	clrf	(scan360@steps+1)
  3634                           	
  3635  09F2                     l11420:	
  3636  09F2  0860               	movf	(scan360@steps+1),w
  3637  09F3  3A80               	xorlw	80h
  3638  09F4  00FF               	movwf	btemp+1
  3639  09F5  3080               	movlw	(high(0C8h))^80h
  3640  09F6  027F               	subwf	btemp+1,w
  3641  09F7  1D03               	skipz
  3642  09F8  29FB               	goto	u5455
  3643  09F9  30C8               	movlw	low(0C8h)
  3644  09FA  025F               	subwf	(scan360@steps),w
  3645  09FB                     u5455:
  3646                           
  3647  09FB  1C03               	skipc
  3648  09FC  29FE               	goto	u5451
  3649  09FD  29FF               	goto	u5450
  3650  09FE                     u5451:
  3651  09FE  2A01               	goto	l11424
  3652  09FF                     u5450:
  3653  09FF  2A5A               	goto	l11442
  3654                           	
  3655  0A00                     l11422:	
  3656  0A00  2A5A               	goto	l11442
  3657                           	line	364
  3658                           	
  3659  0A01                     l2289:	
  3660                           	line	365
  3661                           	
  3662  0A01                     l11424:	
  3663                           ;Main.c: 364: {
  3664                           ;Main.c: 365: readAvgDistance();
  3665  0A01  120A  158A  2174   	fcall	_readAvgDistance
              120A  158A         
  3666                           	line	366
  3667                           	
  3668  0A06                     l11426:	
  3669                           ;Main.c: 366: if (adcVal > lowestVal)
  3670  0A06  1683               	bsf	status, 5	;RP0=1, select bank1
  3671  0A07  1303               	bcf	status, 6	;RP1=0, select bank1
  3672  0A08  0837               	movf	(_adcVal+1)^080h,w	;volatile
  3673  0A09  1283               	bcf	status, 5	;RP0=0, select bank0
  3674  0A0A  1303               	bcf	status, 6	;RP1=0, select bank0
  3675  0A0B  025C               	subwf	(scan360@lowestVal+1),w
  3676  0A0C  1D03               	skipz
  3677  0A0D  2A14               	goto	u5465
  3678  0A0E  1683               	bsf	status, 5	;RP0=1, select bank1
  3679  0A0F  1303               	bcf	status, 6	;RP1=0, select bank1
  3680  0A10  0836               	movf	(_adcVal)^080h,w	;volatile
  3681  0A11  1283               	bcf	status, 5	;RP0=0, select bank0
  3682  0A12  1303               	bcf	status, 6	;RP1=0, select bank0
  3683  0A13  025B               	subwf	(scan360@lowestVal),w
  3684  0A14                     u5465:
  3685  0A14  1803               	skipnc
  3686  0A15  2A17               	goto	u5461
  3687  0A16  2A18               	goto	u5460
  3688  0A17                     u5461:
  3689  0A17  2A2D               	goto	l11430
  3690  0A18                     u5460:
  3691                           	line	368
  3692                           	
  3693  0A18                     l11428:	
  3694                           ;Main.c: 367: {
  3695                           ;Main.c: 368: lowestVal = adcVal;
  3696  0A18  1683               	bsf	status, 5	;RP0=1, select bank1
  3697  0A19  1303               	bcf	status, 6	;RP1=0, select bank1
  3698  0A1A  0837               	movf	(_adcVal+1)^080h,w	;volatile
  3699  0A1B  1283               	bcf	status, 5	;RP0=0, select bank0
  3700  0A1C  1303               	bcf	status, 6	;RP1=0, select bank0
  3701  0A1D  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  3702  0A1E  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  3703  0A1F  1683               	bsf	status, 5	;RP0=1, select bank1
  3704  0A20  1303               	bcf	status, 6	;RP1=0, select bank1
  3705  0A21  0836               	movf	(_adcVal)^080h,w	;volatile
  3706  0A22  1283               	bcf	status, 5	;RP0=0, select bank0
  3707  0A23  1303               	bcf	status, 6	;RP1=0, select bank0
  3708  0A24  01DB               	clrf	(scan360@lowestVal)	;volatile
  3709  0A25  07DB               	addwf	(scan360@lowestVal)	;volatile
  3710                           
  3711                           	line	369
  3712                           ;Main.c: 369: lowestSteps = steps;
  3713  0A26  0860               	movf	(scan360@steps+1),w
  3714  0A27  01DE               	clrf	(scan360@lowestSteps+1)
  3715  0A28  07DE               	addwf	(scan360@lowestSteps+1)
  3716  0A29  085F               	movf	(scan360@steps),w
  3717  0A2A  01DD               	clrf	(scan360@lowestSteps)
  3718  0A2B  07DD               	addwf	(scan360@lowestSteps)
  3719                           
  3720  0A2C  2A2D               	goto	l11430
  3721                           	line	371
  3722                           	
  3723  0A2D                     l2291:	
  3724                           	line	372
  3725                           	
  3726  0A2D                     l11430:	
  3727                           ;Main.c: 371: }
  3728                           ;Main.c: 372: rotate(2, 1);
  3729  0A2D  3002               	movlw	low(02h)
  3730  0A2E  00A3               	movwf	(?_rotate)
  3731  0A2F  3000               	movlw	high(02h)
  3732  0A30  00A4               	movwf	((?_rotate))+1
  3733  0A31  01A5               	clrf	0+(?_rotate)+02h
  3734  0A32  1403               	bsf	status,0
  3735  0A33  0DA5               	rlf	0+(?_rotate)+02h,f
  3736  0A34  160A  118A  27B0   	fcall	_rotate
              120A  158A         
  3737                           	line	374
  3738                           	
  3739  0A39                     l11432:	
  3740                           ;Main.c: 374: if (RTC_FLAG_250MS == 1)
  3741  0A39  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3742  0A3A  2A3C               	goto	u5471
  3743  0A3B  2A3D               	goto	u5470
  3744  0A3C                     u5471:
  3745  0A3C  2A44               	goto	l11438
  3746  0A3D                     u5470:
  3747                           	line	376
  3748                           	
  3749  0A3D                     l11434:	
  3750                           ;Main.c: 375: {
  3751                           ;Main.c: 376: RTC_FLAG_250MS = 0;
  3752  0A3D  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3753                           	line	377
  3754                           	
  3755  0A3E                     l11436:	
  3756                           ;Main.c: 377: UpdateDisplay();
  3757  0A3E  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  158A         
  3758  0A43  2A44               	goto	l11438
  3759                           	line	378
  3760                           	
  3761  0A44                     l2292:	
  3762                           	line	363
  3763                           	
  3764  0A44                     l11438:	
  3765  0A44  3002               	movlw	low(02h)
  3766  0A45  1283               	bcf	status, 5	;RP0=0, select bank0
  3767  0A46  1303               	bcf	status, 6	;RP1=0, select bank0
  3768  0A47  07DF               	addwf	(scan360@steps),f
  3769  0A48  1803               	skipnc
  3770  0A49  0AE0               	incf	(scan360@steps+1),f
  3771  0A4A  3000               	movlw	high(02h)
  3772  0A4B  07E0               	addwf	(scan360@steps+1),f
  3773                           	
  3774  0A4C                     l11440:	
  3775  0A4C  0860               	movf	(scan360@steps+1),w
  3776  0A4D  3A80               	xorlw	80h
  3777  0A4E  00FF               	movwf	btemp+1
  3778  0A4F  3080               	movlw	(high(0C8h))^80h
  3779  0A50  027F               	subwf	btemp+1,w
  3780  0A51  1D03               	skipz
  3781  0A52  2A55               	goto	u5485
  3782  0A53  30C8               	movlw	low(0C8h)
  3783  0A54  025F               	subwf	(scan360@steps),w
  3784  0A55                     u5485:
  3785                           
  3786  0A55  1C03               	skipc
  3787  0A56  2A58               	goto	u5481
  3788  0A57  2A59               	goto	u5480
  3789  0A58                     u5481:
  3790  0A58  2A01               	goto	l11424
  3791  0A59                     u5480:
  3792  0A59  2A5A               	goto	l11442
  3793                           	
  3794  0A5A                     l2290:	
  3795                           	line	381
  3796                           	
  3797  0A5A                     l11442:	
  3798                           ;Main.c: 378: }
  3799                           ;Main.c: 379: }
  3800                           ;Main.c: 381: return lowestSteps;
  3801  0A5A  1283               	bcf	status, 5	;RP0=0, select bank0
  3802  0A5B  1303               	bcf	status, 6	;RP1=0, select bank0
  3803  0A5C  085E               	movf	(scan360@lowestSteps+1),w
  3804  0A5D  01DA               	clrf	(?_scan360+1)
  3805  0A5E  07DA               	addwf	(?_scan360+1)
  3806  0A5F  085D               	movf	(scan360@lowestSteps),w
  3807  0A60  01D9               	clrf	(?_scan360)
  3808  0A61  07D9               	addwf	(?_scan360)
  3809                           
  3810  0A62  2A63               	goto	l2293
  3811                           	
  3812  0A63                     l11444:	
  3813                           	line	382
  3814                           	
  3815  0A63                     l2293:	
  3816  0A63  0008               	return
  3817                           	opt stack 0
  3818                           GLOBAL	__end_of_scan360
  3819  0A64                     	__end_of_scan360:
  3820 ;; =============== function _scan360 ends ============
  3821                           
  3822                           	signat	_scan360,90
  3823                           	global	_calibrateIR
  3824                           psect	text1076,local,class=CODE,delta=2
  3825                           global __ptext1076
  3826  083A                     __ptext1076:
  3827                           
  3828 ;; *************** function _calibrateIR *****************
  3829 ;; Defined at:
  3830 ;;		line 279 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;		None               void
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    6
  3851 ;; This function calls:
  3852 ;;		_rotate
  3853 ;;		_UpdateDisplay
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           psect	text1076
  3859                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3860                           	line	279
  3861                           	global	__size_of_calibrateIR
  3862  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  3863                           	
  3864  083A                     _calibrateIR:	
  3865                           	opt	stack 1
  3866                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3867                           	line	280
  3868                           	
  3869  083A                     l11388:	
  3870                           ;Main.c: 280: currentMenu = 1;
  3871  083A  1683               	bsf	status, 5	;RP0=1, select bank1
  3872  083B  1303               	bcf	status, 6	;RP1=0, select bank1
  3873  083C  01D2               	clrf	(_currentMenu)^080h	;volatile
  3874  083D  1403               	bsf	status,0
  3875  083E  0DD2               	rlf	(_currentMenu)^080h,f	;volatile
  3876                           	line	281
  3877                           	
  3878  083F                     l11390:	
  3879                           ;Main.c: 281: rotate(8, 0);
  3880  083F  3008               	movlw	low(08h)
  3881  0840  1283               	bcf	status, 5	;RP0=0, select bank0
  3882  0841  1303               	bcf	status, 6	;RP1=0, select bank0
  3883  0842  00A3               	movwf	(?_rotate)
  3884  0843  3000               	movlw	high(08h)
  3885  0844  00A4               	movwf	((?_rotate))+1
  3886  0845  01A5               	clrf	0+(?_rotate)+02h
  3887  0846  160A  118A  27B0   	fcall	_rotate
              120A  158A         
  3888  084B  284C               	goto	l11392
  3889                           	line	282
  3890                           ;Main.c: 282: while (1)
  3891                           	
  3892  084C                     l2259:	
  3893                           	line	284
  3894                           	
  3895  084C                     l11392:	
  3896                           ;Main.c: 283: {
  3897                           ;Main.c: 284: if (RTC_FLAG_250MS == 1)
  3898  084C  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3899  084D  284F               	goto	u5441
  3900  084E  2850               	goto	u5440
  3901  084F                     u5441:
  3902  084F  2884               	goto	l11416
  3903  0850                     u5440:
  3904                           	line	286
  3905                           	
  3906  0850                     l11394:	
  3907                           ;Main.c: 285: {
  3908                           ;Main.c: 286: RTC_FLAG_250MS = 0;
  3909  0850  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3910                           	line	287
  3911                           	
  3912  0851                     l11396:	
  3913                           ;Main.c: 287: UpdateDisplay();
  3914  0851  120A  118A  24CA   	fcall	_UpdateDisplay
              120A  158A         
  3915  0856  2884               	goto	l11416
  3916                           	line	288
  3917                           	
  3918  0857                     l2260:	
  3919                           	line	289
  3920                           ;Main.c: 288: }
  3921                           ;Main.c: 289: switch (buttonPressed)
  3922  0857  2884               	goto	l11416
  3923                           	line	291
  3924                           ;Main.c: 290: {
  3925                           ;Main.c: 291: case 1:
  3926                           	
  3927  0858                     l2262:	
  3928                           	line	292
  3929                           ;Main.c: 292: buttonPressed = 0;
  3930  0858  01FD               	clrf	(_buttonPressed)	;volatile
  3931                           	line	293
  3932                           ;Main.c: 293: break;
  3933  0859  284C               	goto	l11392
  3934                           	line	294
  3935                           ;Main.c: 294: case 2:
  3936                           	
  3937  085A                     l2264:	
  3938                           	line	295
  3939                           ;Main.c: 295: buttonPressed = 0;
  3940  085A  01FD               	clrf	(_buttonPressed)	;volatile
  3941                           	line	296
  3942                           ;Main.c: 296: break;
  3943  085B  284C               	goto	l11392
  3944                           	line	297
  3945                           ;Main.c: 297: case 3:
  3946                           	
  3947  085C                     l2265:	
  3948                           	line	298
  3949                           	
  3950  085C                     l11398:	
  3951                           ;Main.c: 298: rotate(1, 1);
  3952  085C  3001               	movlw	low(01h)
  3953  085D  1283               	bcf	status, 5	;RP0=0, select bank0
  3954  085E  1303               	bcf	status, 6	;RP1=0, select bank0
  3955  085F  00A3               	movwf	(?_rotate)
  3956  0860  3000               	movlw	high(01h)
  3957  0861  00A4               	movwf	((?_rotate))+1
  3958  0862  01A5               	clrf	0+(?_rotate)+02h
  3959  0863  1403               	bsf	status,0
  3960  0864  0DA5               	rlf	0+(?_rotate)+02h,f
  3961  0865  160A  118A  27B0   	fcall	_rotate
              120A  158A         
  3962                           	line	299
  3963                           	
  3964  086A                     l11400:	
  3965                           ;Main.c: 299: buttonPressed = 0;
  3966  086A  01FD               	clrf	(_buttonPressed)	;volatile
  3967                           	line	300
  3968                           ;Main.c: 300: break;
  3969  086B  284C               	goto	l11392
  3970                           	line	301
  3971                           ;Main.c: 301: case 4:
  3972                           	
  3973  086C                     l2266:	
  3974                           	line	302
  3975                           	
  3976  086C                     l11402:	
  3977                           ;Main.c: 302: rotate(1, 0);
  3978  086C  3001               	movlw	low(01h)
  3979  086D  1283               	bcf	status, 5	;RP0=0, select bank0
  3980  086E  1303               	bcf	status, 6	;RP1=0, select bank0
  3981  086F  00A3               	movwf	(?_rotate)
  3982  0870  3000               	movlw	high(01h)
  3983  0871  00A4               	movwf	((?_rotate))+1
  3984  0872  01A5               	clrf	0+(?_rotate)+02h
  3985  0873  160A  118A  27B0   	fcall	_rotate
              120A  158A         
  3986                           	line	303
  3987                           	
  3988  0878                     l11404:	
  3989                           ;Main.c: 303: buttonPressed = 0;
  3990  0878  01FD               	clrf	(_buttonPressed)	;volatile
  3991                           	line	304
  3992                           ;Main.c: 304: break;
  3993  0879  284C               	goto	l11392
  3994                           	line	305
  3995                           ;Main.c: 305: case 5:
  3996                           	
  3997  087A                     l2267:	
  3998                           	line	306
  3999                           	
  4000  087A                     l11406:	
  4001                           ;Main.c: 306: totalSteps = 0;
  4002  087A  1683               	bsf	status, 5	;RP0=1, select bank1
  4003  087B  1303               	bcf	status, 6	;RP1=0, select bank1
  4004  087C  01C4               	clrf	(_totalSteps)^080h
  4005  087D  01C5               	clrf	(_totalSteps+1)^080h
  4006                           	line	307
  4007                           	
  4008  087E                     l11408:	
  4009                           ;Main.c: 307: buttonPressed = 0;
  4010  087E  01FD               	clrf	(_buttonPressed)	;volatile
  4011                           	line	308
  4012                           	
  4013  087F                     l11410:	
  4014                           ;Main.c: 308: currentMenu = 0;
  4015  087F  01D2               	clrf	(_currentMenu)^080h	;volatile
  4016  0880  2897               	goto	l2268
  4017                           	line	309
  4018                           	
  4019  0881                     l11412:	
  4020                           ;Main.c: 309: return;
  4021  0881  2897               	goto	l2268
  4022                           	line	310
  4023                           ;Main.c: 310: default:
  4024                           	
  4025  0882                     l2269:	
  4026                           	line	311
  4027                           ;Main.c: 311: break;
  4028  0882  284C               	goto	l11392
  4029                           	line	312
  4030                           	
  4031  0883                     l11414:	
  4032                           ;Main.c: 312: }
  4033  0883  284C               	goto	l11392
  4034                           	line	289
  4035                           	
  4036  0884                     l2261:	
  4037                           	
  4038  0884                     l11416:	
  4039  0884  087D               	movf	(_buttonPressed),w	;volatile
  4040                           	; Switch size 1, requested type "space"
  4041                           ; Number of cases is 5, Range of values is 1 to 5
  4042                           ; switch strategies available:
  4043                           ; Name         Instructions Cycles
  4044                           ; simple_byte           16     9 (average)
  4045                           ; direct_byte           26    11 (fixed)
  4046                           ; jumptable            263     9 (fixed)
  4047                           ;	Chosen strategy is simple_byte
  4048                           
  4049                           	opt asmopt_off
  4050  0885  3A01               	xorlw	1^0	; case 1
  4051  0886  1903               	skipnz
  4052  0887  2858               	goto	l2262
  4053  0888  3A03               	xorlw	2^1	; case 2
  4054  0889  1903               	skipnz
  4055  088A  285A               	goto	l2264
  4056  088B  3A01               	xorlw	3^2	; case 3
  4057  088C  1903               	skipnz
  4058  088D  285C               	goto	l11398
  4059  088E  3A07               	xorlw	4^3	; case 4
  4060  088F  1903               	skipnz
  4061  0890  286C               	goto	l11402
  4062  0891  3A01               	xorlw	5^4	; case 5
  4063  0892  1903               	skipnz
  4064  0893  287A               	goto	l11406
  4065  0894  284C               	goto	l11392
  4066                           	opt asmopt_on
  4067                           
  4068                           	line	312
  4069                           	
  4070  0895                     l2263:	
  4071  0895  284C               	goto	l11392
  4072                           	line	313
  4073                           	
  4074  0896                     l2270:	
  4075                           	line	282
  4076  0896  284C               	goto	l11392
  4077                           	
  4078  0897                     l2271:	
  4079                           	line	314
  4080                           	
  4081  0897                     l2268:	
  4082  0897  0008               	return
  4083                           	opt stack 0
  4084                           GLOBAL	__end_of_calibrateIR
  4085  0898                     	__end_of_calibrateIR:
  4086 ;; =============== function _calibrateIR ends ============
  4087                           
  4088                           	signat	_calibrateIR,88
  4089                           	global	_UpdateDisplay
  4090                           psect	text1077,local,class=CODE,delta=2
  4091                           global __ptext1077
  4092  04CA                     __ptext1077:
  4093                           
  4094 ;; *************** function _UpdateDisplay *****************
  4095 ;; Defined at:
  4096 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  4101 ;; Return value:  Size  Location     Type
  4102 ;;		None               void
  4103 ;; Registers used:
  4104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4110 ;;      Params:         0       0       0       0       0
  4111 ;;      Locals:         0      16       0       0       0
  4112 ;;      Temps:          0       4       0       0       0
  4113 ;;      Totals:         0      20       0       0       0
  4114 ;;Total ram usage:       20 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    5
  4117 ;; This function calls:
  4118 ;;		_lcd_write_control
  4119 ;;		_sprintf
  4120 ;;		_lcd_set_cursor
  4121 ;;		_lcd_write_string
  4122 ;;		___awmod
  4123 ;; This function is called by:
  4124 ;;		_main
  4125 ;;		_calibrateIR
  4126 ;;		_ChargeMode
  4127 ;;		_scan360
  4128 ;;		_robotMoveSpeed
  4129 ;;		_robotTurnSpeed
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           psect	text1077
  4133                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  4134                           	line	236
  4135                           	global	__size_of_UpdateDisplay
  4136  015F                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4137                           	
  4138  04CA                     _UpdateDisplay:	
  4139                           	opt	stack 1
  4140                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4141                           	line	237
  4142                           	
  4143  04CA                     l11344:	
  4144                           ;HMI.c: 237: char LCDOutput[16] = "";
  4145  04CA  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4146  04CB  0084               	movwf	fsr0
  4147  04CC  3090               	movlw	low(UpdateDisplay@F1242)
  4148  04CD  1283               	bcf	status, 5	;RP0=0, select bank0
  4149  04CE  1303               	bcf	status, 6	;RP1=0, select bank0
  4150  04CF  00C5               	movwf	(??_UpdateDisplay+0)+0
  4151  04D0  0804               	movf	fsr0,w
  4152  04D1  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  4153  04D2  3010               	movlw	16
  4154  04D3  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  4155  04D4                     u5420:
  4156  04D4  0845               	movf	(??_UpdateDisplay+0)+0,w
  4157  04D5  0084               	movwf	fsr0
  4158  04D6  1783               	bsf	status, 7	;select IRP bank3
  4159                           	
  4160  04D7  0800               	movf	indf,w
  4161  04D8  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  4162  04D9  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  4163  04DA  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  4164  04DB  0084               	movwf	fsr0
  4165  04DC  1383               	bcf	status, 7	;select IRP bank0
  4166                           	
  4167  04DD  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  4168  04DE  0080               	movwf	indf
  4169  04DF  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  4170  04E0  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4171  04E1  2CD4               	goto	u5420
  4172                           	line	238
  4173                           ;HMI.c: 238: switch (currentMenu)
  4174  04E2  2E1B               	goto	l11386
  4175                           	line	240
  4176                           ;HMI.c: 239: {
  4177                           ;HMI.c: 240: case 0:
  4178                           	
  4179  04E3                     l4533:	
  4180                           	line	241
  4181                           	
  4182  04E3                     l11346:	
  4183                           ;HMI.c: 241: lcd_write_control(0b00000001);
  4184  04E3  3001               	movlw	(01h)
  4185  04E4  160A  118A  238E   	fcall	_lcd_write_control
              120A  118A         
  4186                           	line	242
  4187                           	
  4188  04E9                     l11348:	
  4189                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",IRdistance, angleTurned);
  4190  04E9  302B               	movlw	((STR_13-__stringbase))&0ffh
  4191  04EA  1283               	bcf	status, 5	;RP0=0, select bank0
  4192  04EB  1303               	bcf	status, 6	;RP1=0, select bank0
  4193  04EC  00C5               	movwf	(??_UpdateDisplay+0)+0
  4194  04ED  0845               	movf	(??_UpdateDisplay+0)+0,w
  4195  04EE  00B4               	movwf	(?_sprintf)
  4196  04EF  1683               	bsf	status, 5	;RP0=1, select bank1
  4197  04F0  1303               	bcf	status, 6	;RP1=0, select bank1
  4198  04F1  0831               	movf	(_IRdistance+1)^080h,w	;volatile
  4199  04F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4200  04F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4201  04F4  01B6               	clrf	1+(?_sprintf)+01h
  4202  04F5  07B6               	addwf	1+(?_sprintf)+01h
  4203  04F6  1683               	bsf	status, 5	;RP0=1, select bank1
  4204  04F7  1303               	bcf	status, 6	;RP1=0, select bank1
  4205  04F8  0830               	movf	(_IRdistance)^080h,w	;volatile
  4206  04F9  1283               	bcf	status, 5	;RP0=0, select bank0
  4207  04FA  1303               	bcf	status, 6	;RP1=0, select bank0
  4208  04FB  01B5               	clrf	0+(?_sprintf)+01h
  4209  04FC  07B5               	addwf	0+(?_sprintf)+01h
  4210                           
  4211  04FD  1683               	bsf	status, 5	;RP0=1, select bank1
  4212  04FE  1303               	bcf	status, 6	;RP1=0, select bank1
  4213  04FF  0839               	movf	(_angleTurned+1)^080h,w
  4214  0500  1283               	bcf	status, 5	;RP0=0, select bank0
  4215  0501  1303               	bcf	status, 6	;RP1=0, select bank0
  4216  0502  01B8               	clrf	1+(?_sprintf)+03h
  4217  0503  07B8               	addwf	1+(?_sprintf)+03h
  4218  0504  1683               	bsf	status, 5	;RP0=1, select bank1
  4219  0505  1303               	bcf	status, 6	;RP1=0, select bank1
  4220  0506  0838               	movf	(_angleTurned)^080h,w
  4221  0507  1283               	bcf	status, 5	;RP0=0, select bank0
  4222  0508  1303               	bcf	status, 6	;RP1=0, select bank0
  4223  0509  01B7               	clrf	0+(?_sprintf)+03h
  4224  050A  07B7               	addwf	0+(?_sprintf)+03h
  4225                           
  4226  050B  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4227  050C  120A  158A  2700   	fcall	_sprintf
              120A  118A         
  4228                           	line	243
  4229                           	
  4230  0511                     l11350:	
  4231                           ;HMI.c: 243: lcd_set_cursor(0x00);
  4232  0511  3000               	movlw	(0)
  4233  0512  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4234                           	line	244
  4235                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  4236  0517  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  4237  0518  1283               	bcf	status, 5	;RP0=0, select bank0
  4238  0519  1303               	bcf	status, 6	;RP1=0, select bank0
  4239  051A  00A7               	movwf	(?_lcd_write_string)
  4240  051B  3000               	movlw	(0x0/2)
  4241  051C  00A8               	movwf	(?_lcd_write_string+1)
  4242  051D  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4243                           	line	245
  4244                           	
  4245  0522                     l11352:	
  4246                           ;HMI.c: 245: lcd_set_cursor(0x40);
  4247  0522  3040               	movlw	(040h)
  4248  0523  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4249                           	line	246
  4250                           	
  4251  0528                     l11354:	
  4252                           ;HMI.c: 246: if (pos > 0)
  4253  0528  1683               	bsf	status, 5	;RP0=1, select bank1
  4254  0529  1303               	bcf	status, 6	;RP1=0, select bank1
  4255  052A  0841               	movf	(_pos+1)^080h,w
  4256  052B  3A80               	xorlw	80h
  4257  052C  00FF               	movwf	btemp+1
  4258  052D  3080               	movlw	(high(01h))^80h
  4259  052E  027F               	subwf	btemp+1,w
  4260  052F  1D03               	skipz
  4261  0530  2D33               	goto	u5435
  4262  0531  3001               	movlw	low(01h)
  4263  0532  0240               	subwf	(_pos)^080h,w
  4264  0533                     u5435:
  4265                           
  4266  0533  1C03               	skipc
  4267  0534  2D36               	goto	u5431
  4268  0535  2D37               	goto	u5430
  4269  0536                     u5431:
  4270  0536  2D4A               	goto	l11358
  4271  0537                     u5430:
  4272                           	line	247
  4273                           	
  4274  0537                     l11356:	
  4275                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  4276  0537  1683               	bsf	status, 5	;RP0=1, select bank1
  4277  0538  1303               	bcf	status, 6	;RP1=0, select bank1
  4278  0539  0840               	movf	(_pos)^080h,w
  4279  053A  3EFF               	addlw	0FFh
  4280  053B  3EE2               	addlw	_shortMenuStrings&0ffh
  4281  053C  0084               	movwf	fsr0
  4282  053D  1383               	bcf	status, 7	;select IRP bank1
  4283  053E  0800               	movf	indf,w
  4284  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  4285  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  4286  0541  00A7               	movwf	(?_lcd_write_string)
  4287  0542  3080               	movlw	80h
  4288  0543  00A8               	movwf	(?_lcd_write_string+1)
  4289  0544  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4290  0549  2D5D               	goto	l11360
  4291                           	line	248
  4292                           	
  4293  054A                     l4534:	
  4294                           	line	249
  4295                           	
  4296  054A                     l11358:	
  4297                           ;HMI.c: 248: else
  4298                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4299  054A  1683               	bsf	status, 5	;RP0=1, select bank1
  4300  054B  1303               	bcf	status, 6	;RP1=0, select bank1
  4301  054C  0840               	movf	(_pos)^080h,w
  4302  054D  3E05               	addlw	05h
  4303  054E  3EE2               	addlw	_shortMenuStrings&0ffh
  4304  054F  0084               	movwf	fsr0
  4305  0550  1383               	bcf	status, 7	;select IRP bank1
  4306  0551  0800               	movf	indf,w
  4307  0552  1283               	bcf	status, 5	;RP0=0, select bank0
  4308  0553  1303               	bcf	status, 6	;RP1=0, select bank0
  4309  0554  00A7               	movwf	(?_lcd_write_string)
  4310  0555  3080               	movlw	80h
  4311  0556  00A8               	movwf	(?_lcd_write_string+1)
  4312  0557  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4313  055C  2D5D               	goto	l11360
  4314                           	
  4315  055D                     l4535:	
  4316                           	line	250
  4317                           	
  4318  055D                     l11360:	
  4319                           ;HMI.c: 250: lcd_set_cursor(0x44);
  4320  055D  3044               	movlw	(044h)
  4321  055E  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4322                           	line	251
  4323                           	
  4324  0563                     l11362:	
  4325                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  4326  0563  1683               	bsf	status, 5	;RP0=1, select bank1
  4327  0564  1303               	bcf	status, 6	;RP1=0, select bank1
  4328  0565  0840               	movf	(_pos)^080h,w
  4329  0566  3EDC               	addlw	_menuStrings&0ffh
  4330  0567  0084               	movwf	fsr0
  4331  0568  1383               	bcf	status, 7	;select IRP bank1
  4332  0569  0800               	movf	indf,w
  4333  056A  1283               	bcf	status, 5	;RP0=0, select bank0
  4334  056B  1303               	bcf	status, 6	;RP1=0, select bank0
  4335  056C  00A7               	movwf	(?_lcd_write_string)
  4336  056D  3080               	movlw	80h
  4337  056E  00A8               	movwf	(?_lcd_write_string+1)
  4338  056F  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4339                           	line	252
  4340                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  4341  0574  304D               	movlw	(04Dh)
  4342  0575  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4343                           	line	253
  4344                           	
  4345  057A                     l11364:	
  4346                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4347  057A  3006               	movlw	low(06h)
  4348  057B  1283               	bcf	status, 5	;RP0=0, select bank0
  4349  057C  1303               	bcf	status, 6	;RP1=0, select bank0
  4350  057D  00A0               	movwf	(?___awmod)
  4351  057E  3000               	movlw	high(06h)
  4352  057F  00A1               	movwf	((?___awmod))+1
  4353  0580  1683               	bsf	status, 5	;RP0=1, select bank1
  4354  0581  1303               	bcf	status, 6	;RP1=0, select bank1
  4355  0582  0840               	movf	(_pos)^080h,w
  4356  0583  3E01               	addlw	low(01h)
  4357  0584  1283               	bcf	status, 5	;RP0=0, select bank0
  4358  0585  1303               	bcf	status, 6	;RP1=0, select bank0
  4359  0586  00A2               	movwf	0+(?___awmod)+02h
  4360  0587  1683               	bsf	status, 5	;RP0=1, select bank1
  4361  0588  1303               	bcf	status, 6	;RP1=0, select bank1
  4362  0589  0841               	movf	(_pos+1)^080h,w
  4363  058A  1803               	skipnc
  4364  058B  3E01               	addlw	1
  4365  058C  3E00               	addlw	high(01h)
  4366  058D  1283               	bcf	status, 5	;RP0=0, select bank0
  4367  058E  1303               	bcf	status, 6	;RP1=0, select bank0
  4368  058F  00A3               	movwf	1+0+(?___awmod)+02h
  4369  0590  120A  158A  2098   	fcall	___awmod
              120A  118A         
  4370  0595  1283               	bcf	status, 5	;RP0=0, select bank0
  4371  0596  1303               	bcf	status, 6	;RP1=0, select bank0
  4372  0597  0820               	movf	(0+(?___awmod)),w
  4373  0598  3EE2               	addlw	_shortMenuStrings&0ffh
  4374  0599  0084               	movwf	fsr0
  4375  059A  1383               	bcf	status, 7	;select IRP bank1
  4376  059B  0800               	movf	indf,w
  4377  059C  00A7               	movwf	(?_lcd_write_string)
  4378  059D  3080               	movlw	80h
  4379  059E  00A8               	movwf	(?_lcd_write_string+1)
  4380  059F  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4381                           	line	254
  4382                           ;HMI.c: 254: break;
  4383  05A4  2E28               	goto	l4540
  4384                           	line	255
  4385                           ;HMI.c: 255: case 1:
  4386                           	
  4387  05A5                     l4537:	
  4388                           	line	256
  4389                           	
  4390  05A5                     l11366:	
  4391                           ;HMI.c: 256: lcd_write_control(0b00000001);
  4392  05A5  3001               	movlw	(01h)
  4393  05A6  160A  118A  238E   	fcall	_lcd_write_control
              120A  118A         
  4394                           	line	257
  4395                           ;HMI.c: 257: lcd_set_cursor(0x00);
  4396  05AB  3000               	movlw	(0)
  4397  05AC  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4398                           	line	258
  4399                           	
  4400  05B1                     l11368:	
  4401                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  4402  05B1  301B               	movlw	low((STR_14-__stringbase))
  4403  05B2  1283               	bcf	status, 5	;RP0=0, select bank0
  4404  05B3  1303               	bcf	status, 6	;RP1=0, select bank0
  4405  05B4  00A7               	movwf	(?_lcd_write_string)
  4406  05B5  3080               	movlw	80h
  4407  05B6  00A8               	movwf	(?_lcd_write_string+1)
  4408  05B7  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4409                           	line	259
  4410                           	
  4411  05BC                     l11370:	
  4412                           ;HMI.c: 259: lcd_set_cursor(0x40);
  4413  05BC  3040               	movlw	(040h)
  4414  05BD  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4415                           	line	260
  4416                           ;HMI.c: 260: lcd_write_string("<<<");
  4417  05C2  3082               	movlw	low((STR_15-__stringbase))
  4418  05C3  1283               	bcf	status, 5	;RP0=0, select bank0
  4419  05C4  1303               	bcf	status, 6	;RP1=0, select bank0
  4420  05C5  00A7               	movwf	(?_lcd_write_string)
  4421  05C6  3080               	movlw	80h
  4422  05C7  00A8               	movwf	(?_lcd_write_string+1)
  4423  05C8  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4424                           	line	261
  4425                           	
  4426  05CD                     l11372:	
  4427                           ;HMI.c: 261: lcd_set_cursor(0x44);
  4428  05CD  3044               	movlw	(044h)
  4429  05CE  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4430                           	line	262
  4431                           	
  4432  05D3                     l11374:	
  4433                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  4434  05D3  3076               	movlw	low((STR_16-__stringbase))
  4435  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  4436  05D5  1303               	bcf	status, 6	;RP1=0, select bank0
  4437  05D6  00A7               	movwf	(?_lcd_write_string)
  4438  05D7  3080               	movlw	80h
  4439  05D8  00A8               	movwf	(?_lcd_write_string+1)
  4440  05D9  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4441                           	line	263
  4442                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  4443  05DE  304D               	movlw	(04Dh)
  4444  05DF  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4445                           	line	264
  4446                           	
  4447  05E4                     l11376:	
  4448                           ;HMI.c: 264: lcd_write_string(">>>");
  4449  05E4  3086               	movlw	low((STR_17-__stringbase))
  4450  05E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4451  05E6  1303               	bcf	status, 6	;RP1=0, select bank0
  4452  05E7  00A7               	movwf	(?_lcd_write_string)
  4453  05E8  3080               	movlw	80h
  4454  05E9  00A8               	movwf	(?_lcd_write_string+1)
  4455  05EA  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4456                           	line	265
  4457                           ;HMI.c: 265: break;
  4458  05EF  2E28               	goto	l4540
  4459                           	line	266
  4460                           ;HMI.c: 266: case 2:
  4461                           	
  4462  05F0                     l4538:	
  4463                           	line	267
  4464                           	
  4465  05F0                     l11378:	
  4466                           ;HMI.c: 267: lcd_write_control(0b00000001);
  4467  05F0  3001               	movlw	(01h)
  4468  05F1  160A  118A  238E   	fcall	_lcd_write_control
              120A  118A         
  4469                           	line	268
  4470                           ;HMI.c: 268: lcd_set_cursor(0x00);
  4471  05F6  3000               	movlw	(0)
  4472  05F7  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4473                           	line	269
  4474                           	
  4475  05FC                     l11380:	
  4476                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  4477  05FC  300B               	movlw	low((STR_18-__stringbase))
  4478  05FD  1283               	bcf	status, 5	;RP0=0, select bank0
  4479  05FE  1303               	bcf	status, 6	;RP1=0, select bank0
  4480  05FF  00A7               	movwf	(?_lcd_write_string)
  4481  0600  3080               	movlw	80h
  4482  0601  00A8               	movwf	(?_lcd_write_string+1)
  4483  0602  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4484                           	line	270
  4485                           	
  4486  0607                     l11382:	
  4487                           ;HMI.c: 270: lcd_set_cursor(0x44);
  4488  0607  3044               	movlw	(044h)
  4489  0608  160A  118A  233C   	fcall	_lcd_set_cursor
              120A  118A         
  4490                           	line	271
  4491                           ;HMI.c: 271: lcd_write_string("  EXIT  ");
  4492  060D  3038               	movlw	low((STR_19-__stringbase))
  4493  060E  1283               	bcf	status, 5	;RP0=0, select bank0
  4494  060F  1303               	bcf	status, 6	;RP1=0, select bank0
  4495  0610  00A7               	movwf	(?_lcd_write_string)
  4496  0611  3080               	movlw	80h
  4497  0612  00A8               	movwf	(?_lcd_write_string+1)
  4498  0613  160A  118A  2529   	fcall	_lcd_write_string
              120A  118A         
  4499                           	line	272
  4500                           ;HMI.c: 272: break;
  4501  0618  2E28               	goto	l4540
  4502                           	line	273
  4503                           ;HMI.c: 273: default:
  4504                           	
  4505  0619                     l4539:	
  4506                           	line	274
  4507                           ;HMI.c: 274: break;
  4508  0619  2E28               	goto	l4540
  4509                           	line	275
  4510                           	
  4511  061A                     l11384:	
  4512                           ;HMI.c: 275: }
  4513  061A  2E28               	goto	l4540
  4514                           	line	238
  4515                           	
  4516  061B                     l4532:	
  4517                           	
  4518  061B                     l11386:	
  4519  061B  1683               	bsf	status, 5	;RP0=1, select bank1
  4520  061C  1303               	bcf	status, 6	;RP1=0, select bank1
  4521  061D  0852               	movf	(_currentMenu)^080h,w	;volatile
  4522                           	; Switch size 1, requested type "space"
  4523                           ; Number of cases is 3, Range of values is 0 to 2
  4524                           ; switch strategies available:
  4525                           ; Name         Instructions Cycles
  4526                           ; simple_byte           10     6 (average)
  4527                           ; direct_byte           17     8 (fixed)
  4528                           ; jumptable            260     6 (fixed)
  4529                           ; rangetable             7     6 (fixed)
  4530                           ; spacedrange           12     9 (fixed)
  4531                           ; locatedrange           3     3 (fixed)
  4532                           ;	Chosen strategy is simple_byte
  4533                           
  4534                           	opt asmopt_off
  4535  061E  3A00               	xorlw	0^0	; case 0
  4536  061F  1903               	skipnz
  4537  0620  2CE3               	goto	l11346
  4538  0621  3A01               	xorlw	1^0	; case 1
  4539  0622  1903               	skipnz
  4540  0623  2DA5               	goto	l11366
  4541  0624  3A03               	xorlw	2^1	; case 2
  4542  0625  1903               	skipnz
  4543  0626  2DF0               	goto	l11378
  4544  0627  2E28               	goto	l4540
  4545                           	opt asmopt_on
  4546                           
  4547                           	line	275
  4548                           	
  4549  0628                     l4536:	
  4550                           	line	276
  4551                           	
  4552  0628                     l4540:	
  4553  0628  0008               	return
  4554                           	opt stack 0
  4555                           GLOBAL	__end_of_UpdateDisplay
  4556  0629                     	__end_of_UpdateDisplay:
  4557 ;; =============== function _UpdateDisplay ends ============
  4558                           
  4559                           	signat	_UpdateDisplay,88
  4560                           	global	_readAvgDistance
  4561                           psect	text1078,local,class=CODE,delta=2
  4562                           global __ptext1078
  4563  0974                     __ptext1078:
  4564                           
  4565 ;; *************** function _readAvgDistance *****************
  4566 ;; Defined at:
  4567 ;;		line 27 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  i               2   22[BANK0 ] int 
  4572 ;;  tempIR          2   20[BANK0 ] unsigned int 
  4573 ;;  j               2   18[BANK0 ] int 
  4574 ;;  fullval         2   16[BANK0 ] unsigned int 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;		None               void
  4577 ;; Registers used:
  4578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4584 ;;      Params:         0       0       0       0       0
  4585 ;;      Locals:         0       8       0       0       0
  4586 ;;      Temps:          0       0       0       0       0
  4587 ;;      Totals:         0       8       0       0       0
  4588 ;;Total ram usage:        8 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    6
  4591 ;; This function calls:
  4592 ;;		_readDistance
  4593 ;;		___lwdiv
  4594 ;;		_ADCconvert
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;;		_scan360
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           psect	text1078
  4601                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4602                           	line	27
  4603                           	global	__size_of_readAvgDistance
  4604  0076                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4605                           	
  4606  0974                     _readAvgDistance:	
  4607                           	opt	stack 0
  4608                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4609                           	line	28
  4610                           	
  4611  0974                     l11328:	
  4612                           ;infrared.c: 28: unsigned int fullval = 0, tempIR = 0;
  4613  0974  1283               	bcf	status, 5	;RP0=0, select bank0
  4614  0975  1303               	bcf	status, 6	;RP1=0, select bank0
  4615  0976  01B0               	clrf	(readAvgDistance@fullval)
  4616  0977  01B1               	clrf	(readAvgDistance@fullval+1)
  4617  0978  01B4               	clrf	(readAvgDistance@tempIR)
  4618  0979  01B5               	clrf	(readAvgDistance@tempIR+1)
  4619                           	line	29
  4620                           ;infrared.c: 29: int j = 0;
  4621  097A  01B2               	clrf	(readAvgDistance@j)
  4622  097B  01B3               	clrf	(readAvgDistance@j+1)
  4623                           	line	31
  4624                           ;infrared.c: 31: for (int i = 0; i < 8; i++)
  4625  097C  01B6               	clrf	(readAvgDistance@i)
  4626  097D  01B7               	clrf	(readAvgDistance@i+1)
  4627                           	
  4628  097E                     l11330:	
  4629  097E  0837               	movf	(readAvgDistance@i+1),w
  4630  097F  3A80               	xorlw	80h
  4631  0980  00FF               	movwf	btemp+1
  4632  0981  3080               	movlw	(high(08h))^80h
  4633  0982  027F               	subwf	btemp+1,w
  4634  0983  1D03               	skipz
  4635  0984  2987               	goto	u5395
  4636  0985  3008               	movlw	low(08h)
  4637  0986  0236               	subwf	(readAvgDistance@i),w
  4638  0987                     u5395:
  4639                           
  4640  0987  1C03               	skipc
  4641  0988  298A               	goto	u5391
  4642  0989  298B               	goto	u5390
  4643  098A                     u5391:
  4644  098A  298D               	goto	l11334
  4645  098B                     u5390:
  4646  098B  29C3               	goto	l11342
  4647                           	
  4648  098C                     l11332:	
  4649  098C  29C3               	goto	l11342
  4650                           	line	32
  4651                           	
  4652  098D                     l2994:	
  4653                           	line	33
  4654                           	
  4655  098D                     l11334:	
  4656                           ;infrared.c: 32: {
  4657                           ;infrared.c: 33: tempIR = readDistance();
  4658  098D  160A  118A  23B8   	fcall	_readDistance
              120A  158A         
  4659  0992  1283               	bcf	status, 5	;RP0=0, select bank0
  4660  0993  1303               	bcf	status, 6	;RP1=0, select bank0
  4661  0994  0829               	movf	(1+(?_readDistance)),w
  4662  0995  01B5               	clrf	(readAvgDistance@tempIR+1)
  4663  0996  07B5               	addwf	(readAvgDistance@tempIR+1)
  4664  0997  0828               	movf	(0+(?_readDistance)),w
  4665  0998  01B4               	clrf	(readAvgDistance@tempIR)
  4666  0999  07B4               	addwf	(readAvgDistance@tempIR)
  4667                           
  4668                           	line	34
  4669                           	
  4670  099A                     l11336:	
  4671                           ;infrared.c: 34: if (tempIR <= 1000)
  4672  099A  3003               	movlw	high(03E9h)
  4673  099B  0235               	subwf	(readAvgDistance@tempIR+1),w
  4674  099C  30E9               	movlw	low(03E9h)
  4675  099D  1903               	skipnz
  4676  099E  0234               	subwf	(readAvgDistance@tempIR),w
  4677  099F  1803               	skipnc
  4678  09A0  29A2               	goto	u5401
  4679  09A1  29A3               	goto	u5400
  4680  09A2                     u5401:
  4681  09A2  29AF               	goto	l2996
  4682  09A3                     u5400:
  4683                           	line	36
  4684                           	
  4685  09A3                     l11338:	
  4686                           ;infrared.c: 35: {
  4687                           ;infrared.c: 36: fullval += tempIR;
  4688  09A3  0834               	movf	(readAvgDistance@tempIR),w
  4689  09A4  07B0               	addwf	(readAvgDistance@fullval),f
  4690  09A5  1803               	skipnc
  4691  09A6  0AB1               	incf	(readAvgDistance@fullval+1),f
  4692  09A7  0835               	movf	(readAvgDistance@tempIR+1),w
  4693  09A8  07B1               	addwf	(readAvgDistance@fullval+1),f
  4694                           	line	37
  4695                           ;infrared.c: 37: j++;
  4696  09A9  3001               	movlw	low(01h)
  4697  09AA  07B2               	addwf	(readAvgDistance@j),f
  4698  09AB  1803               	skipnc
  4699  09AC  0AB3               	incf	(readAvgDistance@j+1),f
  4700  09AD  3000               	movlw	high(01h)
  4701  09AE  07B3               	addwf	(readAvgDistance@j+1),f
  4702                           	line	38
  4703                           	
  4704  09AF                     l2996:	
  4705                           	line	31
  4706  09AF  3001               	movlw	low(01h)
  4707  09B0  07B6               	addwf	(readAvgDistance@i),f
  4708  09B1  1803               	skipnc
  4709  09B2  0AB7               	incf	(readAvgDistance@i+1),f
  4710  09B3  3000               	movlw	high(01h)
  4711  09B4  07B7               	addwf	(readAvgDistance@i+1),f
  4712                           	
  4713  09B5                     l11340:	
  4714  09B5  0837               	movf	(readAvgDistance@i+1),w
  4715  09B6  3A80               	xorlw	80h
  4716  09B7  00FF               	movwf	btemp+1
  4717  09B8  3080               	movlw	(high(08h))^80h
  4718  09B9  027F               	subwf	btemp+1,w
  4719  09BA  1D03               	skipz
  4720  09BB  29BE               	goto	u5415
  4721  09BC  3008               	movlw	low(08h)
  4722  09BD  0236               	subwf	(readAvgDistance@i),w
  4723  09BE                     u5415:
  4724                           
  4725  09BE  1C03               	skipc
  4726  09BF  29C1               	goto	u5411
  4727  09C0  29C2               	goto	u5410
  4728  09C1                     u5411:
  4729  09C1  298D               	goto	l11334
  4730  09C2                     u5410:
  4731  09C2  29C3               	goto	l11342
  4732                           	
  4733  09C3                     l2995:	
  4734                           	line	40
  4735                           	
  4736  09C3                     l11342:	
  4737                           ;infrared.c: 38: }
  4738                           ;infrared.c: 39: }
  4739                           ;infrared.c: 40: adcVal = fullval / j;
  4740  09C3  1283               	bcf	status, 5	;RP0=0, select bank0
  4741  09C4  1303               	bcf	status, 6	;RP1=0, select bank0
  4742  09C5  0833               	movf	(readAvgDistance@j+1),w
  4743  09C6  01A7               	clrf	(?___lwdiv+1)
  4744  09C7  07A7               	addwf	(?___lwdiv+1)
  4745  09C8  0832               	movf	(readAvgDistance@j),w
  4746  09C9  01A6               	clrf	(?___lwdiv)
  4747  09CA  07A6               	addwf	(?___lwdiv)
  4748                           
  4749  09CB  0831               	movf	(readAvgDistance@fullval+1),w
  4750  09CC  01A9               	clrf	1+(?___lwdiv)+02h
  4751  09CD  07A9               	addwf	1+(?___lwdiv)+02h
  4752  09CE  0830               	movf	(readAvgDistance@fullval),w
  4753  09CF  01A8               	clrf	0+(?___lwdiv)+02h
  4754  09D0  07A8               	addwf	0+(?___lwdiv)+02h
  4755                           
  4756  09D1  160A  118A  2760   	fcall	___lwdiv
              120A  158A         
  4757  09D6  1283               	bcf	status, 5	;RP0=0, select bank0
  4758  09D7  1303               	bcf	status, 6	;RP1=0, select bank0
  4759  09D8  0827               	movf	(1+(?___lwdiv)),w
  4760  09D9  1683               	bsf	status, 5	;RP0=1, select bank1
  4761  09DA  1303               	bcf	status, 6	;RP1=0, select bank1
  4762  09DB  01B7               	clrf	(_adcVal+1)^080h	;volatile
  4763  09DC  07B7               	addwf	(_adcVal+1)^080h	;volatile
  4764  09DD  1283               	bcf	status, 5	;RP0=0, select bank0
  4765  09DE  1303               	bcf	status, 6	;RP1=0, select bank0
  4766  09DF  0826               	movf	(0+(?___lwdiv)),w
  4767  09E0  1683               	bsf	status, 5	;RP0=1, select bank1
  4768  09E1  1303               	bcf	status, 6	;RP1=0, select bank1
  4769  09E2  01B6               	clrf	(_adcVal)^080h	;volatile
  4770  09E3  07B6               	addwf	(_adcVal)^080h	;volatile
  4771                           
  4772                           	line	41
  4773                           ;infrared.c: 41: ADCconvert();
  4774  09E4  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  4775                           	line	42
  4776                           	
  4777  09E9                     l2997:	
  4778  09E9  0008               	return
  4779                           	opt stack 0
  4780                           GLOBAL	__end_of_readAvgDistance
  4781  09EA                     	__end_of_readAvgDistance:
  4782 ;; =============== function _readAvgDistance ends ============
  4783                           
  4784                           	signat	_readAvgDistance,88
  4785                           	global	_init
  4786                           psect	text1079,local,class=CODE,delta=2
  4787                           global __ptext1079
  4788  15AF                     __ptext1079:
  4789                           
  4790 ;; *************** function _init *****************
  4791 ;; Defined at:
  4792 ;;		line 139 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;		None               void
  4799 ;; Registers used:
  4800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0
  4808 ;;      Temps:          0       1       0       0       0
  4809 ;;      Totals:         0       1       0       0       0
  4810 ;;Total ram usage:        1 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    5
  4813 ;; This function calls:
  4814 ;;		_ser_init
  4815 ;;		_init_adc
  4816 ;;		_lcd_init
  4817 ;;		_robo_init
  4818 ;; This function is called by:
  4819 ;;		_main
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           psect	text1079
  4823                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4824                           	line	139
  4825                           	global	__size_of_init
  4826  002F                     	__size_of_init	equ	__end_of_init-_init
  4827                           	
  4828  15AF                     _init:	
  4829                           	opt	stack 2
  4830                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4831                           	line	140
  4832                           	
  4833  15AF                     l11302:	
  4834                           ;Main.c: 140: buttonPressed = 0;
  4835  15AF  01FD               	clrf	(_buttonPressed)	;volatile
  4836                           	line	142
  4837                           	
  4838  15B0                     l11304:	
  4839                           ;Main.c: 142: TRISB = 0b11111100;
  4840  15B0  30FC               	movlw	(0FCh)
  4841  15B1  1683               	bsf	status, 5	;RP0=1, select bank1
  4842  15B2  1303               	bcf	status, 6	;RP1=0, select bank1
  4843  15B3  0086               	movwf	(134)^080h	;volatile
  4844                           	line	143
  4845                           	
  4846  15B4                     l11306:	
  4847                           ;Main.c: 143: TRISC &= 0b10010000;
  4848  15B4  3090               	movlw	(090h)
  4849  15B5  1283               	bcf	status, 5	;RP0=0, select bank0
  4850  15B6  1303               	bcf	status, 6	;RP1=0, select bank0
  4851  15B7  00A3               	movwf	(??_init+0)+0
  4852  15B8  0823               	movf	(??_init+0)+0,w
  4853  15B9  1683               	bsf	status, 5	;RP0=1, select bank1
  4854  15BA  1303               	bcf	status, 6	;RP1=0, select bank1
  4855  15BB  0587               	andwf	(135)^080h,f	;volatile
  4856                           	line	146
  4857                           	
  4858  15BC                     l11308:	
  4859                           ;Main.c: 146: SSPSTAT = 0b01000000;
  4860  15BC  3040               	movlw	(040h)
  4861  15BD  0094               	movwf	(148)^080h	;volatile
  4862                           	line	147
  4863                           	
  4864  15BE                     l11310:	
  4865                           ;Main.c: 147: SSPCON = 0b10100001;
  4866  15BE  30A1               	movlw	(0A1h)
  4867  15BF  1283               	bcf	status, 5	;RP0=0, select bank0
  4868  15C0  1303               	bcf	status, 6	;RP1=0, select bank0
  4869  15C1  0094               	movwf	(20)	;volatile
  4870                           	line	150
  4871                           	
  4872  15C2                     l11312:	
  4873                           ;Main.c: 150: OPTION_REG = 0b00000100;
  4874  15C2  3004               	movlw	(04h)
  4875  15C3  1683               	bsf	status, 5	;RP0=1, select bank1
  4876  15C4  1303               	bcf	status, 6	;RP1=0, select bank1
  4877  15C5  0081               	movwf	(129)^080h	;volatile
  4878                           	line	153
  4879                           	
  4880  15C6                     l11314:	
  4881                           ;Main.c: 153: ser_init();
  4882  15C6  160A  118A  2450   	fcall	_ser_init
              160A  118A         
  4883                           	line	154
  4884                           	
  4885  15CB                     l11316:	
  4886                           ;Main.c: 154: init_adc();
  4887  15CB  160A  118A  23A2   	fcall	_init_adc
              160A  118A         
  4888                           	line	155
  4889                           	
  4890  15D0                     l11318:	
  4891                           ;Main.c: 155: lcd_init();
  4892  15D0  160A  118A  247A   	fcall	_lcd_init
              160A  118A         
  4893                           	line	156
  4894                           	
  4895  15D5                     l11320:	
  4896                           ;Main.c: 156: robo_init();
  4897  15D5  160A  118A  23E7   	fcall	_robo_init
              160A  118A         
  4898                           	line	160
  4899                           	
  4900  15DA                     l11322:	
  4901                           ;Main.c: 160: TMR0IE = 1;
  4902  15DA  168B               	bsf	(93/8),(93)&7
  4903                           	line	162
  4904                           	
  4905  15DB                     l11324:	
  4906                           ;Main.c: 162: PEIE=1;
  4907  15DB  170B               	bsf	(94/8),(94)&7
  4908                           	line	164
  4909                           	
  4910  15DC                     l11326:	
  4911                           ;Main.c: 164: (GIE = 1);
  4912  15DC  178B               	bsf	(95/8),(95)&7
  4913                           	line	165
  4914                           	
  4915  15DD                     l2227:	
  4916  15DD  0008               	return
  4917                           	opt stack 0
  4918                           GLOBAL	__end_of_init
  4919  15DE                     	__end_of_init:
  4920 ;; =============== function _init ends ============
  4921                           
  4922                           	signat	_init,88
  4923                           	global	_readDistance
  4924                           psect	text1080,local,class=CODE,delta=2
  4925                           global __ptext1080
  4926  13B8                     __ptext1080:
  4927                           
  4928 ;; *************** function _readDistance *****************
  4929 ;; Defined at:
  4930 ;;		line 47 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  readVal         2   12[BANK0 ] unsigned int 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  2    8[BANK0 ] unsigned int 
  4937 ;; Registers used:
  4938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4944 ;;      Params:         0       2       0       0       0
  4945 ;;      Locals:         0       2       0       0       0
  4946 ;;      Temps:          0       2       0       0       0
  4947 ;;      Totals:         0       6       0       0       0
  4948 ;;Total ram usage:        6 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    5
  4951 ;; This function calls:
  4952 ;;		_adc_read_channel
  4953 ;; This function is called by:
  4954 ;;		_readAvgDistance
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           psect	text1080
  4958                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4959                           	line	47
  4960                           	global	__size_of_readDistance
  4961  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  4962                           	
  4963  13B8                     _readDistance:	
  4964                           	opt	stack 0
  4965                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4966                           	line	50
  4967                           	
  4968  13B8                     l11296:	
  4969                           ;infrared.c: 48: unsigned int readVal;
  4970                           ;infrared.c: 50: readVal = adc_read_channel(0);
  4971  13B8  3000               	movlw	(0)
  4972  13B9  160A  118A  260E   	fcall	_adc_read_channel
              160A  118A         
  4973  13BE  1283               	bcf	status, 5	;RP0=0, select bank0
  4974  13BF  1303               	bcf	status, 6	;RP1=0, select bank0
  4975  13C0  00AA               	movwf	(??_readDistance+0)+0
  4976  13C1  01AB               	clrf	(??_readDistance+0)+0+1
  4977  13C2  082A               	movf	0+(??_readDistance+0)+0,w
  4978  13C3  00AC               	movwf	(readDistance@readVal)
  4979  13C4  082B               	movf	1+(??_readDistance+0)+0,w
  4980  13C5  00AD               	movwf	(readDistance@readVal+1)
  4981                           	line	52
  4982                           	
  4983  13C6                     l11298:	
  4984                           ;infrared.c: 52: return readVal;
  4985  13C6  082D               	movf	(readDistance@readVal+1),w
  4986  13C7  01A9               	clrf	(?_readDistance+1)
  4987  13C8  07A9               	addwf	(?_readDistance+1)
  4988  13C9  082C               	movf	(readDistance@readVal),w
  4989  13CA  01A8               	clrf	(?_readDistance)
  4990  13CB  07A8               	addwf	(?_readDistance)
  4991                           
  4992  13CC  2BCD               	goto	l3000
  4993                           	
  4994  13CD                     l11300:	
  4995                           	line	53
  4996                           	
  4997  13CD                     l3000:	
  4998  13CD  0008               	return
  4999                           	opt stack 0
  5000                           GLOBAL	__end_of_readDistance
  5001  13CE                     	__end_of_readDistance:
  5002 ;; =============== function _readDistance ends ============
  5003                           
  5004                           	signat	_readDistance,90
  5005                           	global	_robot_read
  5006                           psect	text1081,local,class=CODE,delta=2
  5007                           global __ptext1081
  5008  0629                     __ptext1081:
  5009                           
  5010 ;; *************** function _robot_read *****************
  5011 ;; Defined at:
  5012 ;;		line 41 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  readType        1    wreg     unsigned char 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  readType        1    4[BANK0 ] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;		None               void
  5019 ;; Registers used:
  5020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5026 ;;      Params:         0       0       0       0       0
  5027 ;;      Locals:         0       1       0       0       0
  5028 ;;      Temps:          0       2       0       0       0
  5029 ;;      Totals:         0       3       0       0       0
  5030 ;;Total ram usage:        3 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    5
  5033 ;; This function calls:
  5034 ;;		_ser_putch
  5035 ;;		_ser_getch
  5036 ;; This function is called by:
  5037 ;;		_main
  5038 ;;		_robotMoveSpeed
  5039 ;;		_robotTurnSpeed
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           psect	text1081
  5043                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5044                           	line	41
  5045                           	global	__size_of_robot_read
  5046  0120                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  5047                           	
  5048  0629                     _robot_read:	
  5049                           	opt	stack 1
  5050                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5051                           ;robot_read@readType stored from wreg
  5052  0629  1283               	bcf	status, 5	;RP0=0, select bank0
  5053  062A  1303               	bcf	status, 6	;RP1=0, select bank0
  5054  062B  00A4               	movwf	(robot_read@readType)
  5055                           	line	42
  5056                           	
  5057  062C                     l11248:	
  5058                           ;robot.c: 42: ser_putch(142);
  5059  062C  308E               	movlw	(08Eh)
  5060  062D  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5061                           	line	43
  5062                           ;robot.c: 43: ser_putch(7);
  5063  0632  3007               	movlw	(07h)
  5064  0633  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5065                           	line	44
  5066                           	
  5067  0638                     l11250:	
  5068                           ;robot.c: 44: _delay((unsigned long)((5)*(20000000/4000.0)));
  5069                           	opt asmopt_off
  5070  0638  3021               movlw	33
  5071  0639  1283               	bcf	status, 5	;RP0=0, select bank0
  5072  063A  1303               	bcf	status, 6	;RP1=0, select bank0
  5073  063B  00A3               movwf	((??_robot_read+0)+0+1),f
  5074  063C  3076               	movlw	118
  5075  063D  00A2               movwf	((??_robot_read+0)+0),f
  5076  063E                     u5747:
  5077  063E  0BA2               	decfsz	((??_robot_read+0)+0),f
  5078  063F  2E3E               	goto	u5747
  5079  0640  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5080  0641  2E3E               	goto	u5747
  5081  0642  0064               	clrwdt
  5082                           opt asmopt_on
  5083                           
  5084                           	line	45
  5085                           	
  5086  0643                     l11252:	
  5087                           ;robot.c: 45: BumpSensors = ser_getch();
  5088  0643  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5089  0648  1283               	bcf	status, 5	;RP0=0, select bank0
  5090  0649  1303               	bcf	status, 6	;RP1=0, select bank0
  5091  064A  00A2               	movwf	(??_robot_read+0)+0
  5092  064B  0822               	movf	(??_robot_read+0)+0,w
  5093  064C  1683               	bsf	status, 5	;RP0=1, select bank1
  5094  064D  1303               	bcf	status, 6	;RP1=0, select bank1
  5095  064E  00C8               	movwf	(_BumpSensors)^080h	;volatile
  5096                           	line	46
  5097                           	
  5098  064F                     l11254:	
  5099                           ;robot.c: 46: ser_putch(142);
  5100  064F  308E               	movlw	(08Eh)
  5101  0650  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5102                           	line	47
  5103                           	
  5104  0655                     l11256:	
  5105                           ;robot.c: 47: ser_putch(13);
  5106  0655  300D               	movlw	(0Dh)
  5107  0656  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5108                           	line	48
  5109                           ;robot.c: 48: _delay((unsigned long)((5)*(20000000/4000.0)));
  5110                           	opt asmopt_off
  5111  065B  3021               movlw	33
  5112  065C  1283               	bcf	status, 5	;RP0=0, select bank0
  5113  065D  1303               	bcf	status, 6	;RP1=0, select bank0
  5114  065E  00A3               movwf	((??_robot_read+0)+0+1),f
  5115  065F  3076               	movlw	118
  5116  0660  00A2               movwf	((??_robot_read+0)+0),f
  5117  0661                     u5757:
  5118  0661  0BA2               	decfsz	((??_robot_read+0)+0),f
  5119  0662  2E61               	goto	u5757
  5120  0663  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5121  0664  2E61               	goto	u5757
  5122  0665  0064               	clrwdt
  5123                           opt asmopt_on
  5124                           
  5125                           	line	49
  5126                           	
  5127  0666                     l11258:	
  5128                           ;robot.c: 49: VwallSensor = ser_getch();
  5129  0666  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5130  066B  1283               	bcf	status, 5	;RP0=0, select bank0
  5131  066C  1303               	bcf	status, 6	;RP1=0, select bank0
  5132  066D  00A2               	movwf	(??_robot_read+0)+0
  5133  066E  0822               	movf	(??_robot_read+0)+0,w
  5134  066F  1683               	bsf	status, 5	;RP0=1, select bank1
  5135  0670  1303               	bcf	status, 6	;RP1=0, select bank1
  5136  0671  00D1               	movwf	(_VwallSensor)^080h	;volatile
  5137                           	line	51
  5138                           	
  5139  0672                     l11260:	
  5140                           ;robot.c: 51: if (readType == 0)
  5141  0672  1283               	bcf	status, 5	;RP0=0, select bank0
  5142  0673  1303               	bcf	status, 6	;RP1=0, select bank0
  5143  0674  08A4               	movf	(robot_read@readType),f
  5144  0675  1D03               	skipz
  5145  0676  2E78               	goto	u5361
  5146  0677  2E79               	goto	u5360
  5147  0678                     u5361:
  5148  0678  2EA9               	goto	l11270
  5149  0679                     u5360:
  5150                           	line	53
  5151                           	
  5152  0679                     l11262:	
  5153                           ;robot.c: 52: {
  5154                           ;robot.c: 53: ser_putch(142);
  5155  0679  308E               	movlw	(08Eh)
  5156  067A  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5157                           	line	54
  5158                           ;robot.c: 54: ser_putch(19);
  5159  067F  3013               	movlw	(013h)
  5160  0680  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5161                           	line	55
  5162                           	
  5163  0685                     l11264:	
  5164                           ;robot.c: 55: _delay((unsigned long)((5)*(20000000/4000.0)));
  5165                           	opt asmopt_off
  5166  0685  3021               movlw	33
  5167  0686  1283               	bcf	status, 5	;RP0=0, select bank0
  5168  0687  1303               	bcf	status, 6	;RP1=0, select bank0
  5169  0688  00A3               movwf	((??_robot_read+0)+0+1),f
  5170  0689  3076               	movlw	118
  5171  068A  00A2               movwf	((??_robot_read+0)+0),f
  5172  068B                     u5767:
  5173  068B  0BA2               	decfsz	((??_robot_read+0)+0),f
  5174  068C  2E8B               	goto	u5767
  5175  068D  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5176  068E  2E8B               	goto	u5767
  5177  068F  0064               	clrwdt
  5178                           opt asmopt_on
  5179                           
  5180                           	line	56
  5181                           	
  5182  0690                     l11266:	
  5183                           ;robot.c: 56: DistHighByte = ser_getch();
  5184  0690  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5185  0695  1283               	bcf	status, 5	;RP0=0, select bank0
  5186  0696  1303               	bcf	status, 6	;RP1=0, select bank0
  5187  0697  00A2               	movwf	(??_robot_read+0)+0
  5188  0698  0822               	movf	(??_robot_read+0)+0,w
  5189  0699  1683               	bsf	status, 5	;RP0=1, select bank1
  5190  069A  1303               	bcf	status, 6	;RP1=0, select bank1
  5191  069B  00CA               	movwf	(_DistHighByte)^080h	;volatile
  5192                           	line	57
  5193                           	
  5194  069C                     l11268:	
  5195                           ;robot.c: 57: DistLowByte = ser_getch();
  5196  069C  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5197  06A1  1283               	bcf	status, 5	;RP0=0, select bank0
  5198  06A2  1303               	bcf	status, 6	;RP1=0, select bank0
  5199  06A3  00A2               	movwf	(??_robot_read+0)+0
  5200  06A4  0822               	movf	(??_robot_read+0)+0,w
  5201  06A5  1683               	bsf	status, 5	;RP0=1, select bank1
  5202  06A6  1303               	bcf	status, 6	;RP1=0, select bank1
  5203  06A7  00CB               	movwf	(_DistLowByte)^080h	;volatile
  5204                           	line	58
  5205                           ;robot.c: 58: }
  5206  06A8  2F48               	goto	l6018
  5207                           	line	59
  5208                           	
  5209  06A9                     l6013:	
  5210                           	
  5211  06A9                     l11270:	
  5212                           ;robot.c: 59: else if (readType == 1)
  5213  06A9  1283               	bcf	status, 5	;RP0=0, select bank0
  5214  06AA  0824               	movf	(robot_read@readType),w
  5215  06AB  3A01               	xorlw	01h
  5216  06AC  1D03               	skipz
  5217  06AD  2EAF               	goto	u5371
  5218  06AE  2EB0               	goto	u5370
  5219  06AF                     u5371:
  5220  06AF  2EE0               	goto	l11280
  5221  06B0                     u5370:
  5222                           	line	61
  5223                           	
  5224  06B0                     l11272:	
  5225                           ;robot.c: 60: {
  5226                           ;robot.c: 61: ser_putch(142);
  5227  06B0  308E               	movlw	(08Eh)
  5228  06B1  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5229                           	line	62
  5230                           ;robot.c: 62: ser_putch(20);
  5231  06B6  3014               	movlw	(014h)
  5232  06B7  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5233                           	line	63
  5234                           	
  5235  06BC                     l11274:	
  5236                           ;robot.c: 63: _delay((unsigned long)((5)*(20000000/4000.0)));
  5237                           	opt asmopt_off
  5238  06BC  3021               movlw	33
  5239  06BD  1283               	bcf	status, 5	;RP0=0, select bank0
  5240  06BE  1303               	bcf	status, 6	;RP1=0, select bank0
  5241  06BF  00A3               movwf	((??_robot_read+0)+0+1),f
  5242  06C0  3076               	movlw	118
  5243  06C1  00A2               movwf	((??_robot_read+0)+0),f
  5244  06C2                     u5777:
  5245  06C2  0BA2               	decfsz	((??_robot_read+0)+0),f
  5246  06C3  2EC2               	goto	u5777
  5247  06C4  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5248  06C5  2EC2               	goto	u5777
  5249  06C6  0064               	clrwdt
  5250                           opt asmopt_on
  5251                           
  5252                           	line	64
  5253                           	
  5254  06C7                     l11276:	
  5255                           ;robot.c: 64: AngleHighByte = ser_getch();
  5256  06C7  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5257  06CC  1283               	bcf	status, 5	;RP0=0, select bank0
  5258  06CD  1303               	bcf	status, 6	;RP1=0, select bank0
  5259  06CE  00A2               	movwf	(??_robot_read+0)+0
  5260  06CF  0822               	movf	(??_robot_read+0)+0,w
  5261  06D0  1683               	bsf	status, 5	;RP0=1, select bank1
  5262  06D1  1303               	bcf	status, 6	;RP1=0, select bank1
  5263  06D2  00C6               	movwf	(_AngleHighByte)^080h	;volatile
  5264                           	line	65
  5265                           	
  5266  06D3                     l11278:	
  5267                           ;robot.c: 65: AngleLowByte = ser_getch();
  5268  06D3  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5269  06D8  1283               	bcf	status, 5	;RP0=0, select bank0
  5270  06D9  1303               	bcf	status, 6	;RP1=0, select bank0
  5271  06DA  00A2               	movwf	(??_robot_read+0)+0
  5272  06DB  0822               	movf	(??_robot_read+0)+0,w
  5273  06DC  1683               	bsf	status, 5	;RP0=1, select bank1
  5274  06DD  1303               	bcf	status, 6	;RP1=0, select bank1
  5275  06DE  00C7               	movwf	(_AngleLowByte)^080h	;volatile
  5276                           	line	66
  5277                           ;robot.c: 66: }
  5278  06DF  2F48               	goto	l6018
  5279                           	line	67
  5280                           	
  5281  06E0                     l6015:	
  5282                           	
  5283  06E0                     l11280:	
  5284                           ;robot.c: 67: else if (readType == 2)
  5285  06E0  1283               	bcf	status, 5	;RP0=0, select bank0
  5286  06E1  0824               	movf	(robot_read@readType),w
  5287  06E2  3A02               	xorlw	02h
  5288  06E3  1D03               	skipz
  5289  06E4  2EE6               	goto	u5381
  5290  06E5  2EE7               	goto	u5380
  5291  06E6                     u5381:
  5292  06E6  2F48               	goto	l6018
  5293  06E7                     u5380:
  5294                           	line	70
  5295                           	
  5296  06E7                     l11282:	
  5297                           ;robot.c: 68: {
  5298                           ;robot.c: 70: ser_putch(142);
  5299  06E7  308E               	movlw	(08Eh)
  5300  06E8  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5301                           	line	71
  5302                           ;robot.c: 71: ser_putch(19);
  5303  06ED  3013               	movlw	(013h)
  5304  06EE  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5305                           	line	72
  5306                           	
  5307  06F3                     l11284:	
  5308                           ;robot.c: 72: _delay((unsigned long)((5)*(20000000/4000.0)));
  5309                           	opt asmopt_off
  5310  06F3  3021               movlw	33
  5311  06F4  1283               	bcf	status, 5	;RP0=0, select bank0
  5312  06F5  1303               	bcf	status, 6	;RP1=0, select bank0
  5313  06F6  00A3               movwf	((??_robot_read+0)+0+1),f
  5314  06F7  3076               	movlw	118
  5315  06F8  00A2               movwf	((??_robot_read+0)+0),f
  5316  06F9                     u5787:
  5317  06F9  0BA2               	decfsz	((??_robot_read+0)+0),f
  5318  06FA  2EF9               	goto	u5787
  5319  06FB  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5320  06FC  2EF9               	goto	u5787
  5321  06FD  0064               	clrwdt
  5322                           opt asmopt_on
  5323                           
  5324                           	line	73
  5325                           	
  5326  06FE                     l11286:	
  5327                           ;robot.c: 73: DistHighByte = ser_getch();
  5328  06FE  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5329  0703  1283               	bcf	status, 5	;RP0=0, select bank0
  5330  0704  1303               	bcf	status, 6	;RP1=0, select bank0
  5331  0705  00A2               	movwf	(??_robot_read+0)+0
  5332  0706  0822               	movf	(??_robot_read+0)+0,w
  5333  0707  1683               	bsf	status, 5	;RP0=1, select bank1
  5334  0708  1303               	bcf	status, 6	;RP1=0, select bank1
  5335  0709  00CA               	movwf	(_DistHighByte)^080h	;volatile
  5336                           	line	74
  5337                           	
  5338  070A                     l11288:	
  5339                           ;robot.c: 74: DistLowByte = ser_getch();
  5340  070A  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5341  070F  1283               	bcf	status, 5	;RP0=0, select bank0
  5342  0710  1303               	bcf	status, 6	;RP1=0, select bank0
  5343  0711  00A2               	movwf	(??_robot_read+0)+0
  5344  0712  0822               	movf	(??_robot_read+0)+0,w
  5345  0713  1683               	bsf	status, 5	;RP0=1, select bank1
  5346  0714  1303               	bcf	status, 6	;RP1=0, select bank1
  5347  0715  00CB               	movwf	(_DistLowByte)^080h	;volatile
  5348                           	line	75
  5349                           	
  5350  0716                     l11290:	
  5351                           ;robot.c: 75: ser_putch(142);
  5352  0716  308E               	movlw	(08Eh)
  5353  0717  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5354                           	line	76
  5355                           	
  5356  071C                     l11292:	
  5357                           ;robot.c: 76: ser_putch(20);
  5358  071C  3014               	movlw	(014h)
  5359  071D  160A  118A  2555   	fcall	_ser_putch
              120A  118A         
  5360                           	line	77
  5361                           	
  5362  0722                     l11294:	
  5363                           ;robot.c: 77: _delay((unsigned long)((5)*(20000000/4000.0)));
  5364                           	opt asmopt_off
  5365  0722  3021               movlw	33
  5366  0723  1283               	bcf	status, 5	;RP0=0, select bank0
  5367  0724  1303               	bcf	status, 6	;RP1=0, select bank0
  5368  0725  00A3               movwf	((??_robot_read+0)+0+1),f
  5369  0726  3076               	movlw	118
  5370  0727  00A2               movwf	((??_robot_read+0)+0),f
  5371  0728                     u5797:
  5372  0728  0BA2               	decfsz	((??_robot_read+0)+0),f
  5373  0729  2F28               	goto	u5797
  5374  072A  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5375  072B  2F28               	goto	u5797
  5376  072C  0064               	clrwdt
  5377                           opt asmopt_on
  5378                           
  5379                           	line	78
  5380                           ;robot.c: 78: AngleHighByte = ser_getch();
  5381  072D  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5382  0732  1283               	bcf	status, 5	;RP0=0, select bank0
  5383  0733  1303               	bcf	status, 6	;RP1=0, select bank0
  5384  0734  00A2               	movwf	(??_robot_read+0)+0
  5385  0735  0822               	movf	(??_robot_read+0)+0,w
  5386  0736  1683               	bsf	status, 5	;RP0=1, select bank1
  5387  0737  1303               	bcf	status, 6	;RP1=0, select bank1
  5388  0738  00C6               	movwf	(_AngleHighByte)^080h	;volatile
  5389                           	line	79
  5390                           ;robot.c: 79: AngleLowByte = ser_getch();
  5391  0739  160A  118A  24D1   	fcall	_ser_getch
              120A  118A         
  5392  073E  1283               	bcf	status, 5	;RP0=0, select bank0
  5393  073F  1303               	bcf	status, 6	;RP1=0, select bank0
  5394  0740  00A2               	movwf	(??_robot_read+0)+0
  5395  0741  0822               	movf	(??_robot_read+0)+0,w
  5396  0742  1683               	bsf	status, 5	;RP0=1, select bank1
  5397  0743  1303               	bcf	status, 6	;RP1=0, select bank1
  5398  0744  00C7               	movwf	(_AngleLowByte)^080h	;volatile
  5399  0745  2F48               	goto	l6018
  5400                           	line	80
  5401                           	
  5402  0746                     l6017:	
  5403  0746  2F48               	goto	l6018
  5404                           	line	81
  5405                           	
  5406  0747                     l6016:	
  5407  0747  2F48               	goto	l6018
  5408                           	
  5409  0748                     l6014:	
  5410                           	
  5411  0748                     l6018:	
  5412  0748  0008               	return
  5413                           	opt stack 0
  5414                           GLOBAL	__end_of_robot_read
  5415  0749                     	__end_of_robot_read:
  5416 ;; =============== function _robot_read ends ============
  5417                           
  5418                           	signat	_robot_read,4216
  5419                           	global	_lcd_init
  5420                           psect	text1082,local,class=CODE,delta=2
  5421                           global __ptext1082
  5422  147A                     __ptext1082:
  5423                           
  5424 ;; *************** function _lcd_init *****************
  5425 ;; Defined at:
  5426 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;		None
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;		None               void
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0, pclath, cstack
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5440 ;;      Params:         0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0
  5443 ;;      Totals:         0       0       0       0       0
  5444 ;;Total ram usage:        0 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    4
  5447 ;; This function calls:
  5448 ;;		_lcd_write_control
  5449 ;; This function is called by:
  5450 ;;		_init
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           psect	text1082
  5454                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5455                           	line	101
  5456                           	global	__size_of_lcd_init
  5457  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5458                           	
  5459  147A                     _lcd_init:	
  5460                           	opt	stack 2
  5461                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5462                           	line	105
  5463                           	
  5464  147A                     l11228:	
  5465                           ;lcd.c: 105: ADCON1 = 0b00000010;
  5466  147A  3002               	movlw	(02h)
  5467  147B  1683               	bsf	status, 5	;RP0=1, select bank1
  5468  147C  1303               	bcf	status, 6	;RP1=0, select bank1
  5469  147D  009F               	movwf	(159)^080h	;volatile
  5470                           	line	108
  5471                           	
  5472  147E                     l11230:	
  5473                           ;lcd.c: 108: PORTD = 0;
  5474  147E  1283               	bcf	status, 5	;RP0=0, select bank0
  5475  147F  1303               	bcf	status, 6	;RP1=0, select bank0
  5476  1480  0188               	clrf	(8)	;volatile
  5477                           	line	109
  5478                           	
  5479  1481                     l11232:	
  5480                           ;lcd.c: 109: PORTE = 0;
  5481  1481  0189               	clrf	(9)	;volatile
  5482                           	line	111
  5483                           	
  5484  1482                     l11234:	
  5485                           ;lcd.c: 111: TRISD = 0b00000000;
  5486  1482  1683               	bsf	status, 5	;RP0=1, select bank1
  5487  1483  1303               	bcf	status, 6	;RP1=0, select bank1
  5488  1484  0188               	clrf	(136)^080h	;volatile
  5489                           	line	112
  5490                           	
  5491  1485                     l11236:	
  5492                           ;lcd.c: 112: TRISE = 0b00000000;
  5493  1485  0189               	clrf	(137)^080h	;volatile
  5494                           	line	115
  5495                           	
  5496  1486                     l11238:	
  5497                           ;lcd.c: 115: lcd_write_control(0b00000001);
  5498  1486  3001               	movlw	(01h)
  5499  1487  160A  118A  238E   	fcall	_lcd_write_control
              160A  118A         
  5500                           	line	116
  5501                           	
  5502  148C                     l11240:	
  5503                           ;lcd.c: 116: lcd_write_control(0b00111000);
  5504  148C  3038               	movlw	(038h)
  5505  148D  160A  118A  238E   	fcall	_lcd_write_control
              160A  118A         
  5506                           	line	117
  5507                           	
  5508  1492                     l11242:	
  5509                           ;lcd.c: 117: lcd_write_control(0b00001100);
  5510  1492  300C               	movlw	(0Ch)
  5511  1493  160A  118A  238E   	fcall	_lcd_write_control
              160A  118A         
  5512                           	line	118
  5513                           	
  5514  1498                     l11244:	
  5515                           ;lcd.c: 118: lcd_write_control(0b00000110);
  5516  1498  3006               	movlw	(06h)
  5517  1499  160A  118A  238E   	fcall	_lcd_write_control
              160A  118A         
  5518                           	line	119
  5519                           	
  5520  149E                     l11246:	
  5521                           ;lcd.c: 119: lcd_write_control(0b00000010);
  5522  149E  3002               	movlw	(02h)
  5523  149F  160A  118A  238E   	fcall	_lcd_write_control
              160A  118A         
  5524                           	line	121
  5525                           	
  5526  14A4                     l1429:	
  5527  14A4  0008               	return
  5528                           	opt stack 0
  5529                           GLOBAL	__end_of_lcd_init
  5530  14A5                     	__end_of_lcd_init:
  5531 ;; =============== function _lcd_init ends ============
  5532                           
  5533                           	signat	_lcd_init,88
  5534                           	global	_lcd_write_string
  5535                           psect	text1083,local,class=CODE,delta=2
  5536                           global __ptext1083
  5537  1529                     __ptext1083:
  5538                           
  5539 ;; *************** function _lcd_write_string *****************
  5540 ;; Defined at:
  5541 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  s               2    7[BANK0 ] PTR unsigned char 
  5544 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  5545 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@LCDOutput(16), STR_12(4), 
  5546 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  5547 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  5548 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;		None
  5551 ;; Return value:  Size  Location     Type
  5552 ;;		None               void
  5553 ;; Registers used:
  5554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5560 ;;      Params:         0       2       0       0       0
  5561 ;;      Locals:         0       0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0
  5563 ;;      Totals:         0       2       0       0       0
  5564 ;;Total ram usage:        2 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    4
  5567 ;; This function calls:
  5568 ;;		_lcd_write_data
  5569 ;; This function is called by:
  5570 ;;		_UpdateDisplay
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           psect	text1083
  5574                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5575                           	line	48
  5576                           	global	__size_of_lcd_write_string
  5577  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5578                           	
  5579  1529                     _lcd_write_string:	
  5580                           	opt	stack 1
  5581                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5582                           	line	50
  5583                           	
  5584  1529                     l11220:	
  5585                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5586  1529  2D43               	goto	l11226
  5587                           	
  5588  152A                     l1409:	
  5589                           	
  5590  152A                     l11222:	
  5591  152A  1283               	bcf	status, 5	;RP0=0, select bank0
  5592  152B  1303               	bcf	status, 6	;RP1=0, select bank0
  5593  152C  0828               	movf	(lcd_write_string@s+1),w
  5594  152D  00FF               	movwf	btemp+1
  5595  152E  0827               	movf	(lcd_write_string@s),w
  5596  152F  0084               	movwf	fsr0
  5597  1530  120A  118A  2749   	fcall	stringtab
              160A  118A         
  5598  1535  160A  118A  2354   	fcall	_lcd_write_data
              160A  118A         
  5599                           	
  5600  153A                     l11224:	
  5601  153A  3001               	movlw	low(01h)
  5602  153B  1283               	bcf	status, 5	;RP0=0, select bank0
  5603  153C  1303               	bcf	status, 6	;RP1=0, select bank0
  5604  153D  07A7               	addwf	(lcd_write_string@s),f
  5605  153E  1803               	skipnc
  5606  153F  0AA8               	incf	(lcd_write_string@s+1),f
  5607  1540  3000               	movlw	high(01h)
  5608  1541  07A8               	addwf	(lcd_write_string@s+1),f
  5609  1542  2D43               	goto	l11226
  5610                           	
  5611  1543                     l1408:	
  5612                           	
  5613  1543                     l11226:	
  5614  1543  1283               	bcf	status, 5	;RP0=0, select bank0
  5615  1544  1303               	bcf	status, 6	;RP1=0, select bank0
  5616  1545  0828               	movf	(lcd_write_string@s+1),w
  5617  1546  00FF               	movwf	btemp+1
  5618  1547  0827               	movf	(lcd_write_string@s),w
  5619  1548  0084               	movwf	fsr0
  5620  1549  120A  118A  2749   	fcall	stringtab
              160A  118A         
  5621  154E  3800               	iorlw	0
  5622  154F  1D03               	skipz
  5623  1550  2D52               	goto	u5351
  5624  1551  2D53               	goto	u5350
  5625  1552                     u5351:
  5626  1552  2D2A               	goto	l11222
  5627  1553                     u5350:
  5628  1553  2D54               	goto	l1411
  5629                           	
  5630  1554                     l1410:	
  5631                           	line	51
  5632                           	
  5633  1554                     l1411:	
  5634  1554  0008               	return
  5635                           	opt stack 0
  5636                           GLOBAL	__end_of_lcd_write_string
  5637  1555                     	__end_of_lcd_write_string:
  5638 ;; =============== function _lcd_write_string ends ============
  5639                           
  5640                           	signat	_lcd_write_string,4216
  5641                           	global	_lcd_set_cursor
  5642                           psect	text1084,local,class=CODE,delta=2
  5643                           global __ptext1084
  5644  133C                     __ptext1084:
  5645                           
  5646 ;; *************** function _lcd_set_cursor *****************
  5647 ;; Defined at:
  5648 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  address         1    wreg     unsigned char 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  address         1    3[BANK0 ] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;		None               void
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0, pclath, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5662 ;;      Params:         0       0       0       0       0
  5663 ;;      Locals:         0       1       0       0       0
  5664 ;;      Temps:          0       0       0       0       0
  5665 ;;      Totals:         0       1       0       0       0
  5666 ;;Total ram usage:        1 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    4
  5669 ;; This function calls:
  5670 ;;		_lcd_write_control
  5671 ;; This function is called by:
  5672 ;;		_UpdateDisplay
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           psect	text1084
  5676                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5677                           	line	42
  5678                           	global	__size_of_lcd_set_cursor
  5679  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5680                           	
  5681  133C                     _lcd_set_cursor:	
  5682                           	opt	stack 1
  5683                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5684                           ;lcd_set_cursor@address stored from wreg
  5685  133C  1283               	bcf	status, 5	;RP0=0, select bank0
  5686  133D  1303               	bcf	status, 6	;RP1=0, select bank0
  5687  133E  00A3               	movwf	(lcd_set_cursor@address)
  5688                           	line	43
  5689                           	
  5690  133F                     l11216:	
  5691                           ;lcd.c: 43: address |= 0b10000000;
  5692  133F  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5693                           	line	44
  5694                           	
  5695  1340                     l11218:	
  5696                           ;lcd.c: 44: lcd_write_control(address);
  5697  1340  0823               	movf	(lcd_set_cursor@address),w
  5698  1341  160A  118A  238E   	fcall	_lcd_write_control
              160A  118A         
  5699                           	line	45
  5700                           	
  5701  1346                     l1405:	
  5702  1346  0008               	return
  5703                           	opt stack 0
  5704                           GLOBAL	__end_of_lcd_set_cursor
  5705  1347                     	__end_of_lcd_set_cursor:
  5706 ;; =============== function _lcd_set_cursor ends ============
  5707                           
  5708                           	signat	_lcd_set_cursor,4216
  5709                           	global	___awtoft
  5710                           psect	text1085,local,class=CODE,delta=2
  5711                           global __ptext1085
  5712  14FD                     __ptext1085:
  5713                           
  5714 ;; *************** function ___awtoft *****************
  5715 ;; Defined at:
  5716 ;;		line 33 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  c               2   22[BANK0 ] int 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  sign            1   27[BANK0 ] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  3   22[BANK0 ] float 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0, pclath, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5730 ;;      Params:         0       3       0       0       0
  5731 ;;      Locals:         0       1       0       0       0
  5732 ;;      Temps:          0       2       0       0       0
  5733 ;;      Totals:         0       6       0       0       0
  5734 ;;Total ram usage:        6 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    4
  5737 ;; This function calls:
  5738 ;;		___ftpack
  5739 ;; This function is called by:
  5740 ;;		_main
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           psect	text1085
  5744                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5745                           	line	33
  5746                           	global	__size_of___awtoft
  5747  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  5748                           	
  5749  14FD                     ___awtoft:	
  5750                           	opt	stack 3
  5751                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5752                           	line	36
  5753                           	
  5754  14FD                     l11208:	
  5755  14FD  1283               	bcf	status, 5	;RP0=0, select bank0
  5756  14FE  1303               	bcf	status, 6	;RP1=0, select bank0
  5757  14FF  01BB               	clrf	(___awtoft@sign)
  5758                           	line	37
  5759  1500  1FB7               	btfss	(___awtoft@c+1),7
  5760  1501  2D03               	goto	u5341
  5761  1502  2D04               	goto	u5340
  5762  1503                     u5341:
  5763  1503  2D0D               	goto	l11212
  5764  1504                     u5340:
  5765                           	line	38
  5766                           	
  5767  1504                     l11210:	
  5768  1504  09B6               	comf	(___awtoft@c),f
  5769  1505  09B7               	comf	(___awtoft@c+1),f
  5770  1506  0AB6               	incf	(___awtoft@c),f
  5771  1507  1903               	skipnz
  5772  1508  0AB7               	incf	(___awtoft@c+1),f
  5773                           	line	39
  5774  1509  01BB               	clrf	(___awtoft@sign)
  5775  150A  1403               	bsf	status,0
  5776  150B  0DBB               	rlf	(___awtoft@sign),f
  5777  150C  2D0D               	goto	l11212
  5778                           	line	40
  5779                           	
  5780  150D                     l7630:	
  5781                           	line	41
  5782                           	
  5783  150D                     l11212:	
  5784  150D  0836               	movf	(___awtoft@c),w
  5785  150E  00A0               	movwf	(?___ftpack)
  5786  150F  0837               	movf	(___awtoft@c+1),w
  5787  1510  00A1               	movwf	(?___ftpack+1)
  5788  1511  01A2               	clrf	(?___ftpack+2)
  5789  1512  308E               	movlw	(08Eh)
  5790  1513  00B9               	movwf	(??___awtoft+0)+0
  5791  1514  0839               	movf	(??___awtoft+0)+0,w
  5792  1515  00A3               	movwf	0+(?___ftpack)+03h
  5793  1516  083B               	movf	(___awtoft@sign),w
  5794  1517  00BA               	movwf	(??___awtoft+1)+0
  5795  1518  083A               	movf	(??___awtoft+1)+0,w
  5796  1519  00A4               	movwf	0+(?___ftpack)+04h
  5797  151A  120A  158A  2264   	fcall	___ftpack
              160A  118A         
  5798  151F  1283               	bcf	status, 5	;RP0=0, select bank0
  5799  1520  1303               	bcf	status, 6	;RP1=0, select bank0
  5800  1521  0820               	movf	(0+(?___ftpack)),w
  5801  1522  00B6               	movwf	(?___awtoft)
  5802  1523  0821               	movf	(1+(?___ftpack)),w
  5803  1524  00B7               	movwf	(?___awtoft+1)
  5804  1525  0822               	movf	(2+(?___ftpack)),w
  5805  1526  00B8               	movwf	(?___awtoft+2)
  5806  1527  2D28               	goto	l7631
  5807                           	
  5808  1528                     l11214:	
  5809                           	line	42
  5810                           	
  5811  1528                     l7631:	
  5812  1528  0008               	return
  5813                           	opt stack 0
  5814                           GLOBAL	__end_of___awtoft
  5815  1529                     	__end_of___awtoft:
  5816 ;; =============== function ___awtoft ends ============
  5817                           
  5818                           	signat	___awtoft,4219
  5819                           	global	___ftmul
  5820                           psect	text1086,local,class=CODE,delta=2
  5821                           global __ptext1086
  5822  0E12                     __ptext1086:
  5823                           
  5824 ;; *************** function ___ftmul *****************
  5825 ;; Defined at:
  5826 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  f1              3   28[BANK0 ] float 
  5829 ;;  f2              3   31[BANK0 ] float 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  5832 ;;  sign            1   43[BANK0 ] unsigned char 
  5833 ;;  cntr            1   42[BANK0 ] unsigned char 
  5834 ;;  exp             1   38[BANK0 ] unsigned char 
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  3   28[BANK0 ] float 
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0, pclath, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5844 ;;      Params:         0       6       0       0       0
  5845 ;;      Locals:         0       6       0       0       0
  5846 ;;      Temps:          0       4       0       0       0
  5847 ;;      Totals:         0      16       0       0       0
  5848 ;;Total ram usage:       16 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    4
  5851 ;; This function calls:
  5852 ;;		___ftpack
  5853 ;; This function is called by:
  5854 ;;		_main
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           psect	text1086
  5858                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5859                           	line	52
  5860                           	global	__size_of___ftmul
  5861  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5862                           	
  5863  0E12                     ___ftmul:	
  5864                           	opt	stack 3
  5865                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5866                           	line	56
  5867                           	
  5868  0E12                     l11158:	
  5869  0E12  1283               	bcf	status, 5	;RP0=0, select bank0
  5870  0E13  1303               	bcf	status, 6	;RP1=0, select bank0
  5871  0E14  083C               	movf	(___ftmul@f1),w
  5872  0E15  00C2               	movwf	((??___ftmul+0)+0)
  5873  0E16  083D               	movf	(___ftmul@f1+1),w
  5874  0E17  00C3               	movwf	((??___ftmul+0)+0+1)
  5875  0E18  083E               	movf	(___ftmul@f1+2),w
  5876  0E19  00C4               	movwf	((??___ftmul+0)+0+2)
  5877  0E1A  1003               	clrc
  5878  0E1B  0D43               	rlf	(??___ftmul+0)+1,w
  5879  0E1C  0D44               	rlf	(??___ftmul+0)+2,w
  5880  0E1D  00C5               	movwf	(??___ftmul+3)+0
  5881  0E1E  0845               	movf	(??___ftmul+3)+0,w
  5882  0E1F  00C6               	movwf	(___ftmul@exp)
  5883  0E20  08C6               	movf	((___ftmul@exp)),f
  5884  0E21  1D03               	skipz
  5885  0E22  2E24               	goto	u5201
  5886  0E23  2E25               	goto	u5200
  5887  0E24                     u5201:
  5888  0E24  2E2D               	goto	l11164
  5889  0E25                     u5200:
  5890                           	line	57
  5891                           	
  5892  0E25                     l11160:	
  5893  0E25  3000               	movlw	0x0
  5894  0E26  00BC               	movwf	(?___ftmul)
  5895  0E27  3000               	movlw	0x0
  5896  0E28  00BD               	movwf	(?___ftmul+1)
  5897  0E29  3000               	movlw	0x0
  5898  0E2A  00BE               	movwf	(?___ftmul+2)
  5899  0E2B  2EFF               	goto	l7593
  5900                           	
  5901  0E2C                     l11162:	
  5902  0E2C  2EFF               	goto	l7593
  5903                           	
  5904  0E2D                     l7592:	
  5905                           	line	58
  5906                           	
  5907  0E2D                     l11164:	
  5908  0E2D  083F               	movf	(___ftmul@f2),w
  5909  0E2E  00C2               	movwf	((??___ftmul+0)+0)
  5910  0E2F  0840               	movf	(___ftmul@f2+1),w
  5911  0E30  00C3               	movwf	((??___ftmul+0)+0+1)
  5912  0E31  0841               	movf	(___ftmul@f2+2),w
  5913  0E32  00C4               	movwf	((??___ftmul+0)+0+2)
  5914  0E33  1003               	clrc
  5915  0E34  0D43               	rlf	(??___ftmul+0)+1,w
  5916  0E35  0D44               	rlf	(??___ftmul+0)+2,w
  5917  0E36  00C5               	movwf	(??___ftmul+3)+0
  5918  0E37  0845               	movf	(??___ftmul+3)+0,w
  5919  0E38  00CB               	movwf	(___ftmul@sign)
  5920  0E39  08CB               	movf	((___ftmul@sign)),f
  5921  0E3A  1D03               	skipz
  5922  0E3B  2E3D               	goto	u5211
  5923  0E3C  2E3E               	goto	u5210
  5924  0E3D                     u5211:
  5925  0E3D  2E46               	goto	l11170
  5926  0E3E                     u5210:
  5927                           	line	59
  5928                           	
  5929  0E3E                     l11166:	
  5930  0E3E  3000               	movlw	0x0
  5931  0E3F  00BC               	movwf	(?___ftmul)
  5932  0E40  3000               	movlw	0x0
  5933  0E41  00BD               	movwf	(?___ftmul+1)
  5934  0E42  3000               	movlw	0x0
  5935  0E43  00BE               	movwf	(?___ftmul+2)
  5936  0E44  2EFF               	goto	l7593
  5937                           	
  5938  0E45                     l11168:	
  5939  0E45  2EFF               	goto	l7593
  5940                           	
  5941  0E46                     l7594:	
  5942                           	line	60
  5943                           	
  5944  0E46                     l11170:	
  5945  0E46  084B               	movf	(___ftmul@sign),w
  5946  0E47  3E7B               	addlw	07Bh
  5947  0E48  00C2               	movwf	(??___ftmul+0)+0
  5948  0E49  0842               	movf	(??___ftmul+0)+0,w
  5949  0E4A  07C6               	addwf	(___ftmul@exp),f
  5950                           	line	61
  5951  0E4B  083C               	movf	(___ftmul@f1),w
  5952  0E4C  00C2               	movwf	((??___ftmul+0)+0)
  5953  0E4D  083D               	movf	(___ftmul@f1+1),w
  5954  0E4E  00C3               	movwf	((??___ftmul+0)+0+1)
  5955  0E4F  083E               	movf	(___ftmul@f1+2),w
  5956  0E50  00C4               	movwf	((??___ftmul+0)+0+2)
  5957  0E51  3010               	movlw	010h
  5958  0E52                     u5225:
  5959  0E52  1003               	clrc
  5960  0E53  0CC4               	rrf	(??___ftmul+0)+2,f
  5961  0E54  0CC3               	rrf	(??___ftmul+0)+1,f
  5962  0E55  0CC2               	rrf	(??___ftmul+0)+0,f
  5963  0E56                     u5220:
  5964  0E56  3EFF               	addlw	-1
  5965  0E57  1D03               	skipz
  5966  0E58  2E52               	goto	u5225
  5967  0E59  0842               	movf	0+(??___ftmul+0)+0,w
  5968  0E5A  00C5               	movwf	(??___ftmul+3)+0
  5969  0E5B  0845               	movf	(??___ftmul+3)+0,w
  5970  0E5C  00CB               	movwf	(___ftmul@sign)
  5971                           	line	62
  5972  0E5D  083F               	movf	(___ftmul@f2),w
  5973  0E5E  00C2               	movwf	((??___ftmul+0)+0)
  5974  0E5F  0840               	movf	(___ftmul@f2+1),w
  5975  0E60  00C3               	movwf	((??___ftmul+0)+0+1)
  5976  0E61  0841               	movf	(___ftmul@f2+2),w
  5977  0E62  00C4               	movwf	((??___ftmul+0)+0+2)
  5978  0E63  3010               	movlw	010h
  5979  0E64                     u5235:
  5980  0E64  1003               	clrc
  5981  0E65  0CC4               	rrf	(??___ftmul+0)+2,f
  5982  0E66  0CC3               	rrf	(??___ftmul+0)+1,f
  5983  0E67  0CC2               	rrf	(??___ftmul+0)+0,f
  5984  0E68                     u5230:
  5985  0E68  3EFF               	addlw	-1
  5986  0E69  1D03               	skipz
  5987  0E6A  2E64               	goto	u5235
  5988  0E6B  0842               	movf	0+(??___ftmul+0)+0,w
  5989  0E6C  00C5               	movwf	(??___ftmul+3)+0
  5990  0E6D  0845               	movf	(??___ftmul+3)+0,w
  5991  0E6E  06CB               	xorwf	(___ftmul@sign),f
  5992                           	line	63
  5993  0E6F  3080               	movlw	(080h)
  5994  0E70  00C2               	movwf	(??___ftmul+0)+0
  5995  0E71  0842               	movf	(??___ftmul+0)+0,w
  5996  0E72  05CB               	andwf	(___ftmul@sign),f
  5997                           	line	64
  5998                           	
  5999  0E73                     l11172:	
  6000  0E73  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
  6001                           	line	66
  6002                           	
  6003  0E74                     l11174:	
  6004  0E74  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
  6005                           	line	67
  6006                           	
  6007  0E75                     l11176:	
  6008  0E75  30FF               	movlw	0FFh
  6009  0E76  05BF               	andwf	(___ftmul@f2),f
  6010  0E77  30FF               	movlw	0FFh
  6011  0E78  05C0               	andwf	(___ftmul@f2+1),f
  6012  0E79  3000               	movlw	0
  6013  0E7A  05C1               	andwf	(___ftmul@f2+2),f
  6014                           	line	68
  6015                           	
  6016  0E7B                     l11178:	
  6017  0E7B  3000               	movlw	0
  6018  0E7C  00C7               	movwf	(___ftmul@f3_as_product)
  6019  0E7D  3000               	movlw	0
  6020  0E7E  00C8               	movwf	(___ftmul@f3_as_product+1)
  6021  0E7F  3000               	movlw	0
  6022  0E80  00C9               	movwf	(___ftmul@f3_as_product+2)
  6023                           	line	69
  6024                           	
  6025  0E81                     l11180:	
  6026  0E81  3007               	movlw	(07h)
  6027  0E82  00C2               	movwf	(??___ftmul+0)+0
  6028  0E83  0842               	movf	(??___ftmul+0)+0,w
  6029  0E84  00CA               	movwf	(___ftmul@cntr)
  6030  0E85  2E86               	goto	l11182
  6031                           	line	70
  6032                           	
  6033  0E86                     l7595:	
  6034                           	line	71
  6035                           	
  6036  0E86                     l11182:	
  6037  0E86  1C3C               	btfss	(___ftmul@f1),(0)&7
  6038  0E87  2E89               	goto	u5241
  6039  0E88  2E8A               	goto	u5240
  6040  0E89                     u5241:
  6041  0E89  2E9B               	goto	l11186
  6042  0E8A                     u5240:
  6043                           	line	72
  6044                           	
  6045  0E8A                     l11184:	
  6046  0E8A  083F               	movf	(___ftmul@f2),w
  6047  0E8B  07C7               	addwf	(___ftmul@f3_as_product),f
  6048  0E8C  0840               	movf	(___ftmul@f2+1),w
  6049  0E8D  1103               	clrz
  6050  0E8E  1803               	skipnc
  6051  0E8F  0A40               	incf	(___ftmul@f2+1),w
  6052  0E90  1903               	skipnz
  6053  0E91  2E93               	goto	u5251
  6054  0E92  07C8               	addwf	(___ftmul@f3_as_product+1),f
  6055  0E93                     u5251:
  6056  0E93  0841               	movf	(___ftmul@f2+2),w
  6057  0E94  1103               	clrz
  6058  0E95  1803               	skipnc
  6059  0E96  0A41               	incf	(___ftmul@f2+2),w
  6060  0E97  1903               	skipnz
  6061  0E98  2E9A               	goto	u5252
  6062  0E99  07C9               	addwf	(___ftmul@f3_as_product+2),f
  6063  0E9A                     u5252:
  6064                           
  6065  0E9A  2E9B               	goto	l11186
  6066                           	
  6067  0E9B                     l7596:	
  6068                           	line	73
  6069                           	
  6070  0E9B                     l11186:	
  6071  0E9B  3001               	movlw	01h
  6072  0E9C                     u5265:
  6073  0E9C  1003               	clrc
  6074  0E9D  0CBE               	rrf	(___ftmul@f1+2),f
  6075  0E9E  0CBD               	rrf	(___ftmul@f1+1),f
  6076  0E9F  0CBC               	rrf	(___ftmul@f1),f
  6077  0EA0  3EFF               	addlw	-1
  6078  0EA1  1D03               	skipz
  6079  0EA2  2E9C               	goto	u5265
  6080                           
  6081                           	line	74
  6082                           	
  6083  0EA3                     l11188:	
  6084  0EA3  3001               	movlw	01h
  6085  0EA4                     u5275:
  6086  0EA4  1003               	clrc
  6087  0EA5  0DBF               	rlf	(___ftmul@f2),f
  6088  0EA6  0DC0               	rlf	(___ftmul@f2+1),f
  6089  0EA7  0DC1               	rlf	(___ftmul@f2+2),f
  6090  0EA8  3EFF               	addlw	-1
  6091  0EA9  1D03               	skipz
  6092  0EAA  2EA4               	goto	u5275
  6093                           	line	75
  6094                           	
  6095  0EAB                     l11190:	
  6096  0EAB  3001               	movlw	low(01h)
  6097  0EAC  02CA               	subwf	(___ftmul@cntr),f
  6098  0EAD  1D03               	btfss	status,2
  6099  0EAE  2EB0               	goto	u5281
  6100  0EAF  2EB1               	goto	u5280
  6101  0EB0                     u5281:
  6102  0EB0  2E86               	goto	l11182
  6103  0EB1                     u5280:
  6104  0EB1  2EB2               	goto	l11192
  6105                           	
  6106  0EB2                     l7597:	
  6107                           	line	76
  6108                           	
  6109  0EB2                     l11192:	
  6110  0EB2  3009               	movlw	(09h)
  6111  0EB3  00C2               	movwf	(??___ftmul+0)+0
  6112  0EB4  0842               	movf	(??___ftmul+0)+0,w
  6113  0EB5  00CA               	movwf	(___ftmul@cntr)
  6114  0EB6  2EB7               	goto	l11194
  6115                           	line	77
  6116                           	
  6117  0EB7                     l7598:	
  6118                           	line	78
  6119                           	
  6120  0EB7                     l11194:	
  6121  0EB7  1C3C               	btfss	(___ftmul@f1),(0)&7
  6122  0EB8  2EBA               	goto	u5291
  6123  0EB9  2EBB               	goto	u5290
  6124  0EBA                     u5291:
  6125  0EBA  2ECC               	goto	l11198
  6126  0EBB                     u5290:
  6127                           	line	79
  6128                           	
  6129  0EBB                     l11196:	
  6130  0EBB  083F               	movf	(___ftmul@f2),w
  6131  0EBC  07C7               	addwf	(___ftmul@f3_as_product),f
  6132  0EBD  0840               	movf	(___ftmul@f2+1),w
  6133  0EBE  1103               	clrz
  6134  0EBF  1803               	skipnc
  6135  0EC0  0A40               	incf	(___ftmul@f2+1),w
  6136  0EC1  1903               	skipnz
  6137  0EC2  2EC4               	goto	u5301
  6138  0EC3  07C8               	addwf	(___ftmul@f3_as_product+1),f
  6139  0EC4                     u5301:
  6140  0EC4  0841               	movf	(___ftmul@f2+2),w
  6141  0EC5  1103               	clrz
  6142  0EC6  1803               	skipnc
  6143  0EC7  0A41               	incf	(___ftmul@f2+2),w
  6144  0EC8  1903               	skipnz
  6145  0EC9  2ECB               	goto	u5302
  6146  0ECA  07C9               	addwf	(___ftmul@f3_as_product+2),f
  6147  0ECB                     u5302:
  6148                           
  6149  0ECB  2ECC               	goto	l11198
  6150                           	
  6151  0ECC                     l7599:	
  6152                           	line	80
  6153                           	
  6154  0ECC                     l11198:	
  6155  0ECC  3001               	movlw	01h
  6156  0ECD                     u5315:
  6157  0ECD  1003               	clrc
  6158  0ECE  0CBE               	rrf	(___ftmul@f1+2),f
  6159  0ECF  0CBD               	rrf	(___ftmul@f1+1),f
  6160  0ED0  0CBC               	rrf	(___ftmul@f1),f
  6161  0ED1  3EFF               	addlw	-1
  6162  0ED2  1D03               	skipz
  6163  0ED3  2ECD               	goto	u5315
  6164                           
  6165                           	line	81
  6166                           	
  6167  0ED4                     l11200:	
  6168  0ED4  3001               	movlw	01h
  6169  0ED5                     u5325:
  6170  0ED5  1003               	clrc
  6171  0ED6  0CC9               	rrf	(___ftmul@f3_as_product+2),f
  6172  0ED7  0CC8               	rrf	(___ftmul@f3_as_product+1),f
  6173  0ED8  0CC7               	rrf	(___ftmul@f3_as_product),f
  6174  0ED9  3EFF               	addlw	-1
  6175  0EDA  1D03               	skipz
  6176  0EDB  2ED5               	goto	u5325
  6177                           
  6178                           	line	82
  6179                           	
  6180  0EDC                     l11202:	
  6181  0EDC  3001               	movlw	low(01h)
  6182  0EDD  02CA               	subwf	(___ftmul@cntr),f
  6183  0EDE  1D03               	btfss	status,2
  6184  0EDF  2EE1               	goto	u5331
  6185  0EE0  2EE2               	goto	u5330
  6186  0EE1                     u5331:
  6187  0EE1  2EB7               	goto	l11194
  6188  0EE2                     u5330:
  6189  0EE2  2EE3               	goto	l11204
  6190                           	
  6191  0EE3                     l7600:	
  6192                           	line	83
  6193                           	
  6194  0EE3                     l11204:	
  6195  0EE3  0847               	movf	(___ftmul@f3_as_product),w
  6196  0EE4  00A0               	movwf	(?___ftpack)
  6197  0EE5  0848               	movf	(___ftmul@f3_as_product+1),w
  6198  0EE6  00A1               	movwf	(?___ftpack+1)
  6199  0EE7  0849               	movf	(___ftmul@f3_as_product+2),w
  6200  0EE8  00A2               	movwf	(?___ftpack+2)
  6201  0EE9  0846               	movf	(___ftmul@exp),w
  6202  0EEA  00C2               	movwf	(??___ftmul+0)+0
  6203  0EEB  0842               	movf	(??___ftmul+0)+0,w
  6204  0EEC  00A3               	movwf	0+(?___ftpack)+03h
  6205  0EED  084B               	movf	(___ftmul@sign),w
  6206  0EEE  00C3               	movwf	(??___ftmul+1)+0
  6207  0EEF  0843               	movf	(??___ftmul+1)+0,w
  6208  0EF0  00A4               	movwf	0+(?___ftpack)+04h
  6209  0EF1  120A  158A  2264   	fcall	___ftpack
              120A  158A         
  6210  0EF6  1283               	bcf	status, 5	;RP0=0, select bank0
  6211  0EF7  1303               	bcf	status, 6	;RP1=0, select bank0
  6212  0EF8  0820               	movf	(0+(?___ftpack)),w
  6213  0EF9  00BC               	movwf	(?___ftmul)
  6214  0EFA  0821               	movf	(1+(?___ftpack)),w
  6215  0EFB  00BD               	movwf	(?___ftmul+1)
  6216  0EFC  0822               	movf	(2+(?___ftpack)),w
  6217  0EFD  00BE               	movwf	(?___ftmul+2)
  6218  0EFE  2EFF               	goto	l7593
  6219                           	
  6220  0EFF                     l11206:	
  6221                           	line	84
  6222                           	
  6223  0EFF                     l7593:	
  6224  0EFF  0008               	return
  6225                           	opt stack 0
  6226                           GLOBAL	__end_of___ftmul
  6227  0F00                     	__end_of___ftmul:
  6228 ;; =============== function ___ftmul ends ============
  6229                           
  6230                           	signat	___ftmul,8315
  6231                           	global	_abs
  6232                           psect	text1087,local,class=CODE,delta=2
  6233                           global __ptext1087
  6234  0805                     __ptext1087:
  6235                           
  6236 ;; *************** function _abs *****************
  6237 ;; Defined at:
  6238 ;;		line 206 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  v               2    6[BANK0 ] int 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;		None
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  2    6[BANK0 ] int 
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6252 ;;      Params:         0       2       0       0       0
  6253 ;;      Locals:         0       0       0       0       0
  6254 ;;      Temps:          0       2       0       0       0
  6255 ;;      Totals:         0       4       0       0       0
  6256 ;;Total ram usage:        4 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    4
  6259 ;; This function calls:
  6260 ;;		___wmul
  6261 ;; This function is called by:
  6262 ;;		_robotMoveSpeed
  6263 ;;		_robotTurnSpeed
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           psect	text1087
  6267                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6268                           	line	206
  6269                           	global	__size_of_abs
  6270  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  6271                           	
  6272  0805                     _abs:	
  6273                           	opt	stack 2
  6274                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6275                           	line	207
  6276                           	
  6277  0805                     l11154:	
  6278                           ;robot.c: 207: return (v * ((v > 0) - (v < 0)));
  6279  0805  3000               	movlw	0
  6280  0806  1283               	bcf	status, 5	;RP0=0, select bank0
  6281  0807  1303               	bcf	status, 6	;RP1=0, select bank0
  6282  0808  1BA7               	btfsc	(abs@v+1),7
  6283  0809  3001               	movlw	1
  6284  080A  00A8               	movwf	(??_abs+0)+0
  6285  080B  01A9               	clrf	(??_abs+0)+0+1
  6286  080C  09A8               	comf	(??_abs+0)+0,f
  6287  080D  09A9               	comf	(??_abs+0)+1,f
  6288  080E  0AA8               	incf	(??_abs+0)+0,f
  6289  080F  1903               	skipnz
  6290  0810  0AA9               	incf	(??_abs+0)+1,f
  6291  0811  0827               	movf	(abs@v+1),w
  6292  0812  3A80               	xorlw	80h
  6293  0813  00FF               	movwf	btemp+1
  6294  0814  3080               	movlw	(high(01h))^80h
  6295  0815  027F               	subwf	btemp+1,w
  6296  0816  1D03               	skipz
  6297  0817  281A               	goto	u5195
  6298  0818  3001               	movlw	low(01h)
  6299  0819  0226               	subwf	(abs@v),w
  6300  081A                     u5195:
  6301                           
  6302  081A  3000               	movlw	0
  6303  081B  1803               	skipnc
  6304  081C  3001               	movlw	1
  6305  081D  1283               	bcf	status, 5	;RP0=0, select bank0
  6306  081E  1303               	bcf	status, 6	;RP1=0, select bank0
  6307  081F  0728               	addwf	0+(??_abs+0)+0,w
  6308  0820  00A0               	movwf	(?___wmul)
  6309  0821  0829               	movf	1+(??_abs+0)+0,w
  6310  0822  1803               	skipnc
  6311  0823  0A29               	incf	1+(??_abs+0)+0,w
  6312  0824  00A1               	movwf	((?___wmul))+1
  6313  0825  0827               	movf	(abs@v+1),w
  6314  0826  01A3               	clrf	1+(?___wmul)+02h
  6315  0827  07A3               	addwf	1+(?___wmul)+02h
  6316  0828  0826               	movf	(abs@v),w
  6317  0829  01A2               	clrf	0+(?___wmul)+02h
  6318  082A  07A2               	addwf	0+(?___wmul)+02h
  6319                           
  6320  082B  160A  118A  24A5   	fcall	___wmul
              120A  158A         
  6321  0830  1283               	bcf	status, 5	;RP0=0, select bank0
  6322  0831  1303               	bcf	status, 6	;RP1=0, select bank0
  6323  0832  0821               	movf	(1+(?___wmul)),w
  6324  0833  01A7               	clrf	(?_abs+1)
  6325  0834  07A7               	addwf	(?_abs+1)
  6326  0835  0820               	movf	(0+(?___wmul)),w
  6327  0836  01A6               	clrf	(?_abs)
  6328  0837  07A6               	addwf	(?_abs)
  6329                           
  6330  0838  2839               	goto	l6049
  6331                           	
  6332  0839                     l11156:	
  6333                           	line	208
  6334                           	
  6335  0839                     l6049:	
  6336  0839  0008               	return
  6337                           	opt stack 0
  6338                           GLOBAL	__end_of_abs
  6339  083A                     	__end_of_abs:
  6340 ;; =============== function _abs ends ============
  6341                           
  6342                           	signat	_abs,4218
  6343                           	global	_RobotDrive
  6344                           psect	text1088,local,class=CODE,delta=2
  6345                           global __ptext1088
  6346  1582                     __ptext1088:
  6347                           
  6348 ;; *************** function _RobotDrive *****************
  6349 ;; Defined at:
  6350 ;;		line 86 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  speed           2    2[BANK0 ] int 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  speedhighByt    1    6[BANK0 ] unsigned char 
  6355 ;;  speedlowByte    1    5[BANK0 ] unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;		None               void
  6358 ;; Registers used:
  6359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6365 ;;      Params:         0       2       0       0       0
  6366 ;;      Locals:         0       2       0       0       0
  6367 ;;      Temps:          0       1       0       0       0
  6368 ;;      Totals:         0       5       0       0       0
  6369 ;;Total ram usage:        5 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:    4
  6372 ;; This function calls:
  6373 ;;		_ser_putch
  6374 ;; This function is called by:
  6375 ;;		_robotMoveSpeed
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           psect	text1088
  6379                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6380                           	line	86
  6381                           	global	__size_of_RobotDrive
  6382  002D                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  6383                           	
  6384  1582                     _RobotDrive:	
  6385                           	opt	stack 2
  6386                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6387                           	line	88
  6388                           	
  6389  1582                     l11140:	
  6390                           ;robot.c: 88: unsigned char speedlowByte = (unsigned char)(speed);
  6391  1582  1283               	bcf	status, 5	;RP0=0, select bank0
  6392  1583  1303               	bcf	status, 6	;RP1=0, select bank0
  6393  1584  0822               	movf	(RobotDrive@speed),w
  6394  1585  00A4               	movwf	(??_RobotDrive+0)+0
  6395  1586  0824               	movf	(??_RobotDrive+0)+0,w
  6396  1587  00A5               	movwf	(RobotDrive@speedlowByte)
  6397                           	line	89
  6398                           	
  6399  1588                     l11142:	
  6400                           ;robot.c: 89: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  6401  1588  0823               	movf	(RobotDrive@speed+1),w
  6402  1589  00A4               	movwf	(??_RobotDrive+0)+0
  6403  158A  0824               	movf	(??_RobotDrive+0)+0,w
  6404  158B  00A6               	movwf	(RobotDrive@speedhighByte)
  6405                           	line	91
  6406                           	
  6407  158C                     l11144:	
  6408                           ;robot.c: 91: ser_putch(137);
  6409  158C  3089               	movlw	(089h)
  6410  158D  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  6411                           	line	93
  6412                           	
  6413  1592                     l11146:	
  6414                           ;robot.c: 93: ser_putch(speedhighByte);
  6415  1592  1283               	bcf	status, 5	;RP0=0, select bank0
  6416  1593  1303               	bcf	status, 6	;RP1=0, select bank0
  6417  1594  0826               	movf	(RobotDrive@speedhighByte),w
  6418  1595  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  6419                           	line	95
  6420                           	
  6421  159A                     l11148:	
  6422                           ;robot.c: 95: ser_putch(speedlowByte);
  6423  159A  1283               	bcf	status, 5	;RP0=0, select bank0
  6424  159B  1303               	bcf	status, 6	;RP1=0, select bank0
  6425  159C  0825               	movf	(RobotDrive@speedlowByte),w
  6426  159D  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  6427                           	line	97
  6428                           	
  6429  15A2                     l11150:	
  6430                           ;robot.c: 97: ser_putch(128);
  6431  15A2  3080               	movlw	(080h)
  6432  15A3  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  6433                           	line	99
  6434                           	
  6435  15A8                     l11152:	
  6436                           ;robot.c: 99: ser_putch(0);
  6437  15A8  3000               	movlw	(0)
  6438  15A9  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  6439                           	line	100
  6440                           	
  6441  15AE                     l6021:	
  6442  15AE  0008               	return
  6443                           	opt stack 0
  6444                           GLOBAL	__end_of_RobotDrive
  6445  15AF                     	__end_of_RobotDrive:
  6446 ;; =============== function _RobotDrive ends ============
  6447                           
  6448                           	signat	_RobotDrive,4216
  6449                           	global	_ser_getch
  6450                           psect	text1089,local,class=CODE,delta=2
  6451                           global __ptext1089
  6452  14D1                     __ptext1089:
  6453                           
  6454 ;; *************** function _ser_getch *****************
  6455 ;; Defined at:
  6456 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;		None
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  c               1    1[BANK0 ] unsigned char 
  6461 ;; Return value:  Size  Location     Type
  6462 ;;                  1    wreg      unsigned char 
  6463 ;; Registers used:
  6464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6465 ;; Tracked objects:
  6466 ;;		On entry : 0/0
  6467 ;;		On exit  : 0/0
  6468 ;;		Unchanged: 0/0
  6469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6470 ;;      Params:         0       0       0       0       0
  6471 ;;      Locals:         0       1       0       0       0
  6472 ;;      Temps:          0       1       0       0       0
  6473 ;;      Totals:         0       2       0       0       0
  6474 ;;Total ram usage:        2 bytes
  6475 ;; Hardware stack levels used:    1
  6476 ;; Hardware stack levels required when called:    4
  6477 ;; This function calls:
  6478 ;;		_ser_isrx
  6479 ;; This function is called by:
  6480 ;;		_robot_read
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           psect	text1089
  6484                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  6485                           	line	55
  6486                           	global	__size_of_ser_getch
  6487  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  6488                           	
  6489  14D1                     _ser_getch:	
  6490                           	opt	stack 1
  6491                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6492                           	line	58
  6493                           	
  6494  14D1                     l11124:	
  6495                           ;ser.c: 56: unsigned char c;
  6496                           ;ser.c: 58: while (ser_isrx()==0)
  6497  14D1  2CD3               	goto	l11126
  6498                           	
  6499  14D2                     l6753:	
  6500                           	line	59
  6501                           ;ser.c: 59: continue;
  6502  14D2  2CD3               	goto	l11126
  6503                           	
  6504  14D3                     l6752:	
  6505                           	line	58
  6506                           	
  6507  14D3                     l11126:	
  6508  14D3  160A  118A  23CE   	fcall	_ser_isrx
              160A  118A         
  6509  14D8  1C03               	btfss	status,0
  6510  14D9  2CDB               	goto	u5181
  6511  14DA  2CDC               	goto	u5180
  6512  14DB                     u5181:
  6513  14DB  2CD3               	goto	l11126
  6514  14DC                     u5180:
  6515                           	
  6516  14DC                     l6754:	
  6517                           	line	61
  6518                           ;ser.c: 61: GIE=0;
  6519  14DC  138B               	bcf	(95/8),(95)&7
  6520                           	line	62
  6521                           	
  6522  14DD                     l11128:	
  6523                           ;ser.c: 62: c=rxfifo[rxoptr];
  6524  14DD  1683               	bsf	status, 5	;RP0=1, select bank1
  6525  14DE  1303               	bcf	status, 6	;RP1=0, select bank1
  6526  14DF  0856               	movf	(_rxoptr)^080h,w
  6527  14E0  3EA0               	addlw	_rxfifo&0ffh
  6528  14E1  0084               	movwf	fsr0
  6529  14E2  1383               	bcf	status, 7	;select IRP bank1
  6530  14E3  0800               	movf	indf,w
  6531  14E4  1283               	bcf	status, 5	;RP0=0, select bank0
  6532  14E5  1303               	bcf	status, 6	;RP1=0, select bank0
  6533  14E6  00A0               	movwf	(??_ser_getch+0)+0
  6534  14E7  0820               	movf	(??_ser_getch+0)+0,w
  6535  14E8  00A1               	movwf	(ser_getch@c)
  6536                           	line	63
  6537                           	
  6538  14E9                     l11130:	
  6539                           ;ser.c: 63: ++rxoptr;
  6540  14E9  3001               	movlw	(01h)
  6541  14EA  00A0               	movwf	(??_ser_getch+0)+0
  6542  14EB  0820               	movf	(??_ser_getch+0)+0,w
  6543  14EC  1683               	bsf	status, 5	;RP0=1, select bank1
  6544  14ED  1303               	bcf	status, 6	;RP1=0, select bank1
  6545  14EE  07D6               	addwf	(_rxoptr)^080h,f	;volatile
  6546                           	line	64
  6547                           	
  6548  14EF                     l11132:	
  6549                           ;ser.c: 64: rxoptr &= (16-1);
  6550  14EF  300F               	movlw	(0Fh)
  6551  14F0  1283               	bcf	status, 5	;RP0=0, select bank0
  6552  14F1  1303               	bcf	status, 6	;RP1=0, select bank0
  6553  14F2  00A0               	movwf	(??_ser_getch+0)+0
  6554  14F3  0820               	movf	(??_ser_getch+0)+0,w
  6555  14F4  1683               	bsf	status, 5	;RP0=1, select bank1
  6556  14F5  1303               	bcf	status, 6	;RP1=0, select bank1
  6557  14F6  05D6               	andwf	(_rxoptr)^080h,f	;volatile
  6558                           	line	65
  6559                           	
  6560  14F7                     l11134:	
  6561                           ;ser.c: 65: GIE=1;
  6562  14F7  178B               	bsf	(95/8),(95)&7
  6563                           	line	66
  6564                           	
  6565  14F8                     l11136:	
  6566                           ;ser.c: 66: return c;
  6567  14F8  1283               	bcf	status, 5	;RP0=0, select bank0
  6568  14F9  1303               	bcf	status, 6	;RP1=0, select bank0
  6569  14FA  0821               	movf	(ser_getch@c),w
  6570  14FB  2CFC               	goto	l6755
  6571                           	
  6572  14FC                     l11138:	
  6573                           	line	67
  6574                           	
  6575  14FC                     l6755:	
  6576  14FC  0008               	return
  6577                           	opt stack 0
  6578                           GLOBAL	__end_of_ser_getch
  6579  14FD                     	__end_of_ser_getch:
  6580 ;; =============== function _ser_getch ends ============
  6581                           
  6582                           	signat	_ser_getch,89
  6583                           	global	_sprintf
  6584                           psect	text1090,local,class=CODE,delta=2
  6585                           global __ptext1090
  6586  0F00                     __ptext1090:
  6587                           
  6588 ;; *************** function _sprintf *****************
  6589 ;; Defined at:
  6590 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  sp              1    wreg     PTR unsigned char 
  6593 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6594 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  6595 ;;		 -> STR_13(13), 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  6598 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6599 ;;  _val            4   31[BANK0 ] struct .
  6600 ;;  c               1   36[BANK0 ] char 
  6601 ;;  prec            1   30[BANK0 ] char 
  6602 ;;  flag            1   29[BANK0 ] unsigned char 
  6603 ;;  ap              1   28[BANK0 ] PTR void [1]
  6604 ;;		 -> ?_sprintf(2), 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  2   20[BANK0 ] int 
  6607 ;; Registers used:
  6608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6614 ;;      Params:         0       5       0       0       0
  6615 ;;      Locals:         0       9       0       0       0
  6616 ;;      Temps:          0       3       0       0       0
  6617 ;;      Totals:         0      17       0       0       0
  6618 ;;Total ram usage:       17 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    4
  6621 ;; This function calls:
  6622 ;;		___lwdiv
  6623 ;;		___lwmod
  6624 ;; This function is called by:
  6625 ;;		_UpdateDisplay
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           psect	text1090
  6629                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  6630                           	line	488
  6631                           	global	__size_of_sprintf
  6632  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  6633                           	
  6634  0F00                     _sprintf:	
  6635                           	opt	stack 1
  6636                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6637                           ;sprintf@sp stored from wreg
  6638                           	line	537
  6639  0F00  1283               	bcf	status, 5	;RP0=0, select bank0
  6640  0F01  1303               	bcf	status, 6	;RP1=0, select bank0
  6641  0F02  00C3               	movwf	(sprintf@sp)
  6642                           	
  6643  0F03                     l11066:	
  6644  0F03  3035               	movlw	(?_sprintf+01h)&0ffh
  6645  0F04  00B9               	movwf	(??_sprintf+0)+0
  6646  0F05  0839               	movf	(??_sprintf+0)+0,w
  6647  0F06  00BC               	movwf	(sprintf@ap)
  6648                           	line	540
  6649  0F07  2FE6               	goto	l11118
  6650                           	
  6651  0F08                     l6793:	
  6652                           	line	542
  6653                           	
  6654  0F08                     l11068:	
  6655  0F08  0844               	movf	(sprintf@c),w
  6656  0F09  3A25               	xorlw	025h
  6657  0F0A  1903               	skipnz
  6658  0F0B  2F0D               	goto	u5101
  6659  0F0C  2F0E               	goto	u5100
  6660  0F0D                     u5101:
  6661  0F0D  2F1A               	goto	l6794
  6662  0F0E                     u5100:
  6663                           	line	545
  6664                           	
  6665  0F0E                     l11070:	
  6666  0F0E  0844               	movf	(sprintf@c),w
  6667  0F0F  00B9               	movwf	(??_sprintf+0)+0
  6668  0F10  0843               	movf	(sprintf@sp),w
  6669  0F11  0084               	movwf	fsr0
  6670  0F12  0839               	movf	(??_sprintf+0)+0,w
  6671  0F13  1383               	bcf	status, 7	;select IRP bank0
  6672  0F14  0080               	movwf	indf
  6673                           	
  6674  0F15                     l11072:	
  6675  0F15  3001               	movlw	(01h)
  6676  0F16  00B9               	movwf	(??_sprintf+0)+0
  6677  0F17  0839               	movf	(??_sprintf+0)+0,w
  6678  0F18  07C3               	addwf	(sprintf@sp),f
  6679                           	line	546
  6680  0F19  2FE6               	goto	l11118
  6681                           	line	547
  6682                           	
  6683  0F1A                     l6794:	
  6684                           	line	552
  6685  0F1A  01BD               	clrf	(sprintf@flag)
  6686                           	line	638
  6687  0F1B  2F21               	goto	l11076
  6688                           	line	640
  6689                           	
  6690  0F1C                     l6796:	
  6691                           	line	641
  6692  0F1C  2FFA               	goto	l11120
  6693                           	line	700
  6694                           	
  6695  0F1D                     l6798:	
  6696  0F1D  2F36               	goto	l11078
  6697                           	line	701
  6698                           	
  6699  0F1E                     l6799:	
  6700                           	line	702
  6701  0F1E  2F36               	goto	l11078
  6702                           	line	805
  6703                           	
  6704  0F1F                     l6801:	
  6705                           	line	816
  6706  0F1F  2FE6               	goto	l11118
  6707                           	line	825
  6708                           	
  6709  0F20                     l11074:	
  6710  0F20  2F36               	goto	l11078
  6711                           	line	638
  6712                           	
  6713  0F21                     l6795:	
  6714                           	
  6715  0F21                     l11076:	
  6716  0F21  3001               	movlw	01h
  6717  0F22  07B4               	addwf	(sprintf@f),f
  6718  0F23  30FF               	movlw	-01h
  6719  0F24  0734               	addwf	(sprintf@f),w
  6720  0F25  0084               	movwf	fsr0
  6721  0F26  120A  118A  2753   	fcall	stringdir
              120A  158A         
  6722  0F2B  00C4               	movwf	(sprintf@c)
  6723                           	; Switch size 1, requested type "space"
  6724                           ; Number of cases is 3, Range of values is 0 to 105
  6725                           ; switch strategies available:
  6726                           ; Name         Instructions Cycles
  6727                           ; simple_byte           10     6 (average)
  6728                           ; jumptable            260     6 (fixed)
  6729                           ; rangetable           110     6 (fixed)
  6730                           ; spacedrange          218     9 (fixed)
  6731                           ; locatedrange         106     3 (fixed)
  6732                           ;	Chosen strategy is simple_byte
  6733                           
  6734                           	opt asmopt_off
  6735  0F2C  3A00               	xorlw	0^0	; case 0
  6736  0F2D  1903               	skipnz
  6737  0F2E  2FFA               	goto	l11120
  6738  0F2F  3A64               	xorlw	100^0	; case 100
  6739  0F30  1903               	skipnz
  6740  0F31  2F36               	goto	l11078
  6741  0F32  3A0D               	xorlw	105^100	; case 105
  6742  0F33  1903               	skipnz
  6743  0F34  2F36               	goto	l11078
  6744  0F35  2FE6               	goto	l11118
  6745                           	opt asmopt_on
  6746                           
  6747                           	line	825
  6748                           	
  6749  0F36                     l6800:	
  6750                           	line	1254
  6751                           	
  6752  0F36                     l11078:	
  6753  0F36  083C               	movf	(sprintf@ap),w
  6754  0F37  0084               	movwf	fsr0
  6755  0F38  1383               	bcf	status, 7	;select IRP bank0
  6756  0F39  0800               	movf	indf,w
  6757  0F3A  00BF               	movwf	(sprintf@_val)
  6758  0F3B  0A84               	incf	fsr0,f
  6759  0F3C  0800               	movf	indf,w
  6760  0F3D  00C0               	movwf	(sprintf@_val+1)
  6761                           	
  6762  0F3E                     l11080:	
  6763  0F3E  3002               	movlw	(02h)
  6764  0F3F  00B9               	movwf	(??_sprintf+0)+0
  6765  0F40  0839               	movf	(??_sprintf+0)+0,w
  6766  0F41  07BC               	addwf	(sprintf@ap),f
  6767                           	line	1256
  6768                           	
  6769  0F42                     l11082:	
  6770  0F42  1FC0               	btfss	(sprintf@_val+1),7
  6771  0F43  2F45               	goto	u5111
  6772  0F44  2F46               	goto	u5110
  6773  0F45                     u5111:
  6774  0F45  2F50               	goto	l11088
  6775  0F46                     u5110:
  6776                           	line	1257
  6777                           	
  6778  0F46                     l11084:	
  6779  0F46  3003               	movlw	(03h)
  6780  0F47  00B9               	movwf	(??_sprintf+0)+0
  6781  0F48  0839               	movf	(??_sprintf+0)+0,w
  6782  0F49  04BD               	iorwf	(sprintf@flag),f
  6783                           	line	1258
  6784                           	
  6785  0F4A                     l11086:	
  6786  0F4A  09BF               	comf	(sprintf@_val),f
  6787  0F4B  09C0               	comf	(sprintf@_val+1),f
  6788  0F4C  0ABF               	incf	(sprintf@_val),f
  6789  0F4D  1903               	skipnz
  6790  0F4E  0AC0               	incf	(sprintf@_val+1),f
  6791  0F4F  2F50               	goto	l11088
  6792                           	line	1259
  6793                           	
  6794  0F50                     l6802:	
  6795                           	line	1300
  6796                           	
  6797  0F50                     l11088:	
  6798  0F50  01C4               	clrf	(sprintf@c)
  6799  0F51  1403               	bsf	status,0
  6800  0F52  0DC4               	rlf	(sprintf@c),f
  6801                           	
  6802  0F53                     l11090:	
  6803  0F53  0844               	movf	(sprintf@c),w
  6804  0F54  3A05               	xorlw	05h
  6805  0F55  1D03               	skipz
  6806  0F56  2F58               	goto	u5121
  6807  0F57  2F59               	goto	u5120
  6808  0F58                     u5121:
  6809  0F58  2F5B               	goto	l11094
  6810  0F59                     u5120:
  6811  0F59  2F83               	goto	l11102
  6812                           	
  6813  0F5A                     l11092:	
  6814  0F5A  2F83               	goto	l11102
  6815                           	line	1301
  6816                           	
  6817  0F5B                     l6803:	
  6818                           	
  6819  0F5B                     l11094:	
  6820  0F5B  0844               	movf	(sprintf@c),w
  6821  0F5C  00B9               	movwf	(??_sprintf+0)+0
  6822  0F5D  0739               	addwf	(??_sprintf+0)+0,w
  6823  0F5E  3E01               	addlw	low((_dpowers-__stringbase))
  6824  0F5F  0084               	movwf	fsr0
  6825  0F60  120A  118A  2753   	fcall	stringdir
              120A  158A         
  6826  0F65  00BA               	movwf	(??_sprintf+1)+0
  6827  0F66  120A  118A  2753   	fcall	stringdir
              120A  158A         
  6828  0F6B  00BB               	movwf	(??_sprintf+1)+0+1
  6829  0F6C  083B               	movf	1+(??_sprintf+1)+0,w
  6830  0F6D  0240               	subwf	(sprintf@_val+1),w
  6831  0F6E  1D03               	skipz
  6832  0F6F  2F72               	goto	u5135
  6833  0F70  083A               	movf	0+(??_sprintf+1)+0,w
  6834  0F71  023F               	subwf	(sprintf@_val),w
  6835  0F72                     u5135:
  6836  0F72  1803               	skipnc
  6837  0F73  2F75               	goto	u5131
  6838  0F74  2F76               	goto	u5130
  6839  0F75                     u5131:
  6840  0F75  2F78               	goto	l11098
  6841  0F76                     u5130:
  6842  0F76  2F83               	goto	l11102
  6843                           	line	1302
  6844                           	
  6845  0F77                     l11096:	
  6846  0F77  2F83               	goto	l11102
  6847                           	
  6848  0F78                     l6805:	
  6849                           	line	1300
  6850                           	
  6851  0F78                     l11098:	
  6852  0F78  3001               	movlw	(01h)
  6853  0F79  00B9               	movwf	(??_sprintf+0)+0
  6854  0F7A  0839               	movf	(??_sprintf+0)+0,w
  6855  0F7B  07C4               	addwf	(sprintf@c),f
  6856                           	
  6857  0F7C                     l11100:	
  6858  0F7C  0844               	movf	(sprintf@c),w
  6859  0F7D  3A05               	xorlw	05h
  6860  0F7E  1D03               	skipz
  6861  0F7F  2F81               	goto	u5141
  6862  0F80  2F82               	goto	u5140
  6863  0F81                     u5141:
  6864  0F81  2F5B               	goto	l11094
  6865  0F82                     u5140:
  6866  0F82  2F83               	goto	l11102
  6867                           	
  6868  0F83                     l6804:	
  6869                           	line	1433
  6870                           	
  6871  0F83                     l11102:	
  6872  0F83  083D               	movf	(sprintf@flag),w
  6873  0F84  3903               	andlw	03h
  6874  0F85  1903               	btfsc	status,2
  6875  0F86  2F88               	goto	u5151
  6876  0F87  2F89               	goto	u5150
  6877  0F88                     u5151:
  6878  0F88  2F95               	goto	l11108
  6879  0F89                     u5150:
  6880                           	line	1434
  6881                           	
  6882  0F89                     l11104:	
  6883  0F89  302D               	movlw	(02Dh)
  6884  0F8A  00B9               	movwf	(??_sprintf+0)+0
  6885  0F8B  0843               	movf	(sprintf@sp),w
  6886  0F8C  0084               	movwf	fsr0
  6887  0F8D  0839               	movf	(??_sprintf+0)+0,w
  6888  0F8E  1383               	bcf	status, 7	;select IRP bank0
  6889  0F8F  0080               	movwf	indf
  6890                           	
  6891  0F90                     l11106:	
  6892  0F90  3001               	movlw	(01h)
  6893  0F91  00B9               	movwf	(??_sprintf+0)+0
  6894  0F92  0839               	movf	(??_sprintf+0)+0,w
  6895  0F93  07C3               	addwf	(sprintf@sp),f
  6896  0F94  2F95               	goto	l11108
  6897                           	
  6898  0F95                     l6806:	
  6899                           	line	1467
  6900                           	
  6901  0F95                     l11108:	
  6902  0F95  0844               	movf	(sprintf@c),w
  6903  0F96  00B9               	movwf	(??_sprintf+0)+0
  6904  0F97  0839               	movf	(??_sprintf+0)+0,w
  6905  0F98  00BE               	movwf	(sprintf@prec)
  6906                           	line	1469
  6907  0F99  2FDA               	goto	l11116
  6908                           	
  6909  0F9A                     l6808:	
  6910                           	line	1484
  6911                           	
  6912  0F9A                     l11110:	
  6913  0F9A  300A               	movlw	low(0Ah)
  6914  0F9B  00AE               	movwf	(?___lwmod)
  6915  0F9C  3000               	movlw	high(0Ah)
  6916  0F9D  00AF               	movwf	((?___lwmod))+1
  6917  0F9E  083E               	movf	(sprintf@prec),w
  6918  0F9F  00B9               	movwf	(??_sprintf+0)+0
  6919  0FA0  0739               	addwf	(??_sprintf+0)+0,w
  6920  0FA1  3E01               	addlw	low((_dpowers-__stringbase))
  6921  0FA2  0084               	movwf	fsr0
  6922  0FA3  120A  118A  2753   	fcall	stringdir
              120A  158A         
  6923  0FA8  00A6               	movwf	(?___lwdiv)
  6924  0FA9  120A  118A  2753   	fcall	stringdir
              120A  158A         
  6925  0FAE  00A7               	movwf	(?___lwdiv+1)
  6926  0FAF  0840               	movf	(sprintf@_val+1),w
  6927  0FB0  01A9               	clrf	1+(?___lwdiv)+02h
  6928  0FB1  07A9               	addwf	1+(?___lwdiv)+02h
  6929  0FB2  083F               	movf	(sprintf@_val),w
  6930  0FB3  01A8               	clrf	0+(?___lwdiv)+02h
  6931  0FB4  07A8               	addwf	0+(?___lwdiv)+02h
  6932                           
  6933  0FB5  160A  118A  2760   	fcall	___lwdiv
              120A  158A         
  6934  0FBA  1283               	bcf	status, 5	;RP0=0, select bank0
  6935  0FBB  1303               	bcf	status, 6	;RP1=0, select bank0
  6936  0FBC  0827               	movf	(1+(?___lwdiv)),w
  6937  0FBD  01B1               	clrf	1+(?___lwmod)+02h
  6938  0FBE  07B1               	addwf	1+(?___lwmod)+02h
  6939  0FBF  0826               	movf	(0+(?___lwdiv)),w
  6940  0FC0  01B0               	clrf	0+(?___lwmod)+02h
  6941  0FC1  07B0               	addwf	0+(?___lwmod)+02h
  6942                           
  6943  0FC2  160A  118A  268D   	fcall	___lwmod
              120A  158A         
  6944  0FC7  1283               	bcf	status, 5	;RP0=0, select bank0
  6945  0FC8  1303               	bcf	status, 6	;RP1=0, select bank0
  6946  0FC9  082E               	movf	(0+(?___lwmod)),w
  6947  0FCA  3E30               	addlw	030h
  6948  0FCB  00BA               	movwf	(??_sprintf+1)+0
  6949  0FCC  083A               	movf	(??_sprintf+1)+0,w
  6950  0FCD  00C4               	movwf	(sprintf@c)
  6951                           	line	1516
  6952                           	
  6953  0FCE                     l11112:	
  6954  0FCE  0844               	movf	(sprintf@c),w
  6955  0FCF  00B9               	movwf	(??_sprintf+0)+0
  6956  0FD0  0843               	movf	(sprintf@sp),w
  6957  0FD1  0084               	movwf	fsr0
  6958  0FD2  0839               	movf	(??_sprintf+0)+0,w
  6959  0FD3  1383               	bcf	status, 7	;select IRP bank0
  6960  0FD4  0080               	movwf	indf
  6961                           	
  6962  0FD5                     l11114:	
  6963  0FD5  3001               	movlw	(01h)
  6964  0FD6  00B9               	movwf	(??_sprintf+0)+0
  6965  0FD7  0839               	movf	(??_sprintf+0)+0,w
  6966  0FD8  07C3               	addwf	(sprintf@sp),f
  6967  0FD9  2FDA               	goto	l11116
  6968                           	line	1517
  6969                           	
  6970  0FDA                     l6807:	
  6971                           	line	1469
  6972                           	
  6973  0FDA                     l11116:	
  6974  0FDA  30FF               	movlw	(-1)
  6975  0FDB  00B9               	movwf	(??_sprintf+0)+0
  6976  0FDC  0839               	movf	(??_sprintf+0)+0,w
  6977  0FDD  07BE               	addwf	(sprintf@prec),f
  6978  0FDE  083E               	movf	((sprintf@prec)),w
  6979  0FDF  3AFF               	xorlw	-1
  6980  0FE0  1D03               	skipz
  6981  0FE1  2FE3               	goto	u5161
  6982  0FE2  2FE4               	goto	u5160
  6983  0FE3                     u5161:
  6984  0FE3  2F9A               	goto	l11110
  6985  0FE4                     u5160:
  6986  0FE4  2FE6               	goto	l11118
  6987                           	
  6988  0FE5                     l6809:	
  6989  0FE5  2FE6               	goto	l11118
  6990                           	line	1525
  6991                           	
  6992  0FE6                     l6792:	
  6993                           	line	540
  6994                           	
  6995  0FE6                     l11118:	
  6996  0FE6  3001               	movlw	01h
  6997  0FE7  07B4               	addwf	(sprintf@f),f
  6998  0FE8  30FF               	movlw	-01h
  6999  0FE9  0734               	addwf	(sprintf@f),w
  7000  0FEA  0084               	movwf	fsr0
  7001  0FEB  120A  118A  2753   	fcall	stringdir
              120A  158A         
  7002  0FF0  00B9               	movwf	(??_sprintf+0)+0
  7003  0FF1  0839               	movf	(??_sprintf+0)+0,w
  7004  0FF2  00C4               	movwf	(sprintf@c)
  7005  0FF3  08C4               	movf	((sprintf@c)),f
  7006  0FF4  1D03               	skipz
  7007  0FF5  2FF7               	goto	u5171
  7008  0FF6  2FF8               	goto	u5170
  7009  0FF7                     u5171:
  7010  0FF7  2F08               	goto	l11068
  7011  0FF8                     u5170:
  7012  0FF8  2FFA               	goto	l11120
  7013                           	
  7014  0FF9                     l6810:	
  7015  0FF9  2FFA               	goto	l11120
  7016                           	line	1527
  7017                           	
  7018  0FFA                     l6797:	
  7019                           	line	1530
  7020                           	
  7021  0FFA                     l11120:	
  7022  0FFA  0843               	movf	(sprintf@sp),w
  7023  0FFB  0084               	movwf	fsr0
  7024  0FFC  1383               	bcf	status, 7	;select IRP bank0
  7025  0FFD  0180               	clrf	indf
  7026  0FFE  2FFF               	goto	l6811
  7027                           	line	1532
  7028                           	
  7029  0FFF                     l11122:	
  7030                           	line	1533
  7031                           ;	Return value of _sprintf is never used
  7032                           	
  7033  0FFF                     l6811:	
  7034  0FFF  0008               	return
  7035                           	opt stack 0
  7036                           GLOBAL	__end_of_sprintf
  7037  1000                     	__end_of_sprintf:
  7038 ;; =============== function _sprintf ends ============
  7039                           
  7040                           	signat	_sprintf,4698
  7041                           	global	_ADCconvert
  7042                           psect	text1091,local,class=CODE,delta=2
  7043                           global __ptext1091
  7044  0015                     __ptext1091:
  7045                           
  7046 ;; *************** function _ADCconvert *****************
  7047 ;; Defined at:
  7048 ;;		line 58 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;		None               void
  7055 ;; Registers used:
  7056 ;;		wreg, status,2, status,0, pclath, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7062 ;;      Params:         0       0       0       0       0
  7063 ;;      Locals:         0       0       0       0       0
  7064 ;;      Temps:          0       2       0       0       0
  7065 ;;      Totals:         0       2       0       0       0
  7066 ;;Total ram usage:        2 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    4
  7069 ;; This function calls:
  7070 ;;		___wmul
  7071 ;;		___lwdiv
  7072 ;; This function is called by:
  7073 ;;		_readAvgDistance
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           psect	text1091
  7077                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  7078                           	line	58
  7079                           	global	__size_of_ADCconvert
  7080  0263                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  7081                           	
  7082  0015                     _ADCconvert:	
  7083                           	opt	stack 1
  7084                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  7085                           	line	64
  7086                           	
  7087  0015                     l11024:	
  7088                           ;infrared.c: 64: if (adcVal >= 213 && adcVal < 234)
  7089  0015  3000               	movlw	high(0D5h)
  7090  0016  1683               	bsf	status, 5	;RP0=1, select bank1
  7091  0017  1303               	bcf	status, 6	;RP1=0, select bank1
  7092  0018  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7093  0019  30D5               	movlw	low(0D5h)
  7094  001A  1903               	skipnz
  7095  001B  0236               	subwf	(_adcVal)^080h,w	;volatile
  7096  001C  1C03               	skipc
  7097  001D  281F               	goto	u4961
  7098  001E  2820               	goto	u4960
  7099  001F                     u4961:
  7100  001F  286D               	goto	l11030
  7101  0020                     u4960:
  7102                           	
  7103  0020                     l11026:	
  7104  0020  3000               	movlw	high(0EAh)
  7105  0021  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7106  0022  30EA               	movlw	low(0EAh)
  7107  0023  1903               	skipnz
  7108  0024  0236               	subwf	(_adcVal)^080h,w	;volatile
  7109  0025  1803               	skipnc
  7110  0026  2828               	goto	u4971
  7111  0027  2829               	goto	u4970
  7112  0028                     u4971:
  7113  0028  286D               	goto	l11030
  7114  0029                     u4970:
  7115                           	line	66
  7116                           	
  7117  0029                     l11028:	
  7118                           ;infrared.c: 65: {
  7119                           ;infrared.c: 66: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  7120  0029  3015               	movlw	low(015h)
  7121  002A  1283               	bcf	status, 5	;RP0=0, select bank0
  7122  002B  1303               	bcf	status, 6	;RP1=0, select bank0
  7123  002C  00A6               	movwf	(?___lwdiv)
  7124  002D  3000               	movlw	high(015h)
  7125  002E  00A7               	movwf	((?___lwdiv))+1
  7126  002F  1683               	bsf	status, 5	;RP0=1, select bank1
  7127  0030  1303               	bcf	status, 6	;RP1=0, select bank1
  7128  0031  0936               	comf	(_adcVal)^080h,w	;volatile
  7129  0032  1283               	bcf	status, 5	;RP0=0, select bank0
  7130  0033  1303               	bcf	status, 6	;RP1=0, select bank0
  7131  0034  00AE               	movwf	(??_ADCconvert+0)+0
  7132  0035  1683               	bsf	status, 5	;RP0=1, select bank1
  7133  0036  1303               	bcf	status, 6	;RP1=0, select bank1
  7134  0037  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7135  0038  1283               	bcf	status, 5	;RP0=0, select bank0
  7136  0039  1303               	bcf	status, 6	;RP1=0, select bank0
  7137  003A  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7138  003B  0AAE               	incf	(??_ADCconvert+0)+0,f
  7139  003C  1903               	skipnz
  7140  003D  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7141  003E  082E               	movf	0+(??_ADCconvert+0)+0,w
  7142  003F  3EEA               	addlw	low(0EAh)
  7143  0040  00A0               	movwf	(?___wmul)
  7144  0041  082F               	movf	1+(??_ADCconvert+0)+0,w
  7145  0042  1803               	skipnc
  7146  0043  3E01               	addlw	1
  7147  0044  3E00               	addlw	high(0EAh)
  7148  0045  00A1               	movwf	1+(?___wmul)
  7149  0046  3005               	movlw	low(05h)
  7150  0047  00A2               	movwf	0+(?___wmul)+02h
  7151  0048  3000               	movlw	high(05h)
  7152  0049  00A3               	movwf	(0+(?___wmul)+02h)+1
  7153  004A  160A  118A  24A5   	fcall	___wmul
              120A  118A         
  7154  004F  1283               	bcf	status, 5	;RP0=0, select bank0
  7155  0050  1303               	bcf	status, 6	;RP1=0, select bank0
  7156  0051  0821               	movf	(1+(?___wmul)),w
  7157  0052  01A9               	clrf	1+(?___lwdiv)+02h
  7158  0053  07A9               	addwf	1+(?___lwdiv)+02h
  7159  0054  0820               	movf	(0+(?___wmul)),w
  7160  0055  01A8               	clrf	0+(?___lwdiv)+02h
  7161  0056  07A8               	addwf	0+(?___lwdiv)+02h
  7162                           
  7163  0057  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7164  005C  1283               	bcf	status, 5	;RP0=0, select bank0
  7165  005D  1303               	bcf	status, 6	;RP1=0, select bank0
  7166  005E  0826               	movf	(0+(?___lwdiv)),w
  7167  005F  3E0F               	addlw	low(0Fh)
  7168  0060  1683               	bsf	status, 5	;RP0=1, select bank1
  7169  0061  1303               	bcf	status, 6	;RP1=0, select bank1
  7170  0062  00B0               	movwf	(_IRdistance)^080h	;volatile
  7171  0063  1283               	bcf	status, 5	;RP0=0, select bank0
  7172  0064  1303               	bcf	status, 6	;RP1=0, select bank0
  7173  0065  0827               	movf	(1+(?___lwdiv)),w
  7174  0066  1803               	skipnc
  7175  0067  3E01               	addlw	1
  7176  0068  3E00               	addlw	high(0Fh)
  7177  0069  1683               	bsf	status, 5	;RP0=1, select bank1
  7178  006A  1303               	bcf	status, 6	;RP1=0, select bank1
  7179  006B  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7180                           	line	67
  7181                           ;infrared.c: 67: }
  7182  006C  2A77               	goto	l3016
  7183                           	line	68
  7184                           	
  7185  006D                     l3003:	
  7186                           	
  7187  006D                     l11030:	
  7188                           ;infrared.c: 68: else if (adcVal >= 170 && adcVal < 213)
  7189  006D  3000               	movlw	high(0AAh)
  7190  006E  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7191  006F  30AA               	movlw	low(0AAh)
  7192  0070  1903               	skipnz
  7193  0071  0236               	subwf	(_adcVal)^080h,w	;volatile
  7194  0072  1C03               	skipc
  7195  0073  2875               	goto	u4981
  7196  0074  2876               	goto	u4980
  7197  0075                     u4981:
  7198  0075  28C3               	goto	l11036
  7199  0076                     u4980:
  7200                           	
  7201  0076                     l11032:	
  7202  0076  3000               	movlw	high(0D5h)
  7203  0077  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7204  0078  30D5               	movlw	low(0D5h)
  7205  0079  1903               	skipnz
  7206  007A  0236               	subwf	(_adcVal)^080h,w	;volatile
  7207  007B  1803               	skipnc
  7208  007C  287E               	goto	u4991
  7209  007D  287F               	goto	u4990
  7210  007E                     u4991:
  7211  007E  28C3               	goto	l11036
  7212  007F                     u4990:
  7213                           	line	70
  7214                           	
  7215  007F                     l11034:	
  7216                           ;infrared.c: 69: {
  7217                           ;infrared.c: 70: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  7218  007F  302B               	movlw	low(02Bh)
  7219  0080  1283               	bcf	status, 5	;RP0=0, select bank0
  7220  0081  1303               	bcf	status, 6	;RP1=0, select bank0
  7221  0082  00A6               	movwf	(?___lwdiv)
  7222  0083  3000               	movlw	high(02Bh)
  7223  0084  00A7               	movwf	((?___lwdiv))+1
  7224  0085  1683               	bsf	status, 5	;RP0=1, select bank1
  7225  0086  1303               	bcf	status, 6	;RP1=0, select bank1
  7226  0087  0936               	comf	(_adcVal)^080h,w	;volatile
  7227  0088  1283               	bcf	status, 5	;RP0=0, select bank0
  7228  0089  1303               	bcf	status, 6	;RP1=0, select bank0
  7229  008A  00AE               	movwf	(??_ADCconvert+0)+0
  7230  008B  1683               	bsf	status, 5	;RP0=1, select bank1
  7231  008C  1303               	bcf	status, 6	;RP1=0, select bank1
  7232  008D  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7233  008E  1283               	bcf	status, 5	;RP0=0, select bank0
  7234  008F  1303               	bcf	status, 6	;RP1=0, select bank0
  7235  0090  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7236  0091  0AAE               	incf	(??_ADCconvert+0)+0,f
  7237  0092  1903               	skipnz
  7238  0093  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7239  0094  082E               	movf	0+(??_ADCconvert+0)+0,w
  7240  0095  3ED5               	addlw	low(0D5h)
  7241  0096  00A0               	movwf	(?___wmul)
  7242  0097  082F               	movf	1+(??_ADCconvert+0)+0,w
  7243  0098  1803               	skipnc
  7244  0099  3E01               	addlw	1
  7245  009A  3E00               	addlw	high(0D5h)
  7246  009B  00A1               	movwf	1+(?___wmul)
  7247  009C  300A               	movlw	low(0Ah)
  7248  009D  00A2               	movwf	0+(?___wmul)+02h
  7249  009E  3000               	movlw	high(0Ah)
  7250  009F  00A3               	movwf	(0+(?___wmul)+02h)+1
  7251  00A0  160A  118A  24A5   	fcall	___wmul
              120A  118A         
  7252  00A5  1283               	bcf	status, 5	;RP0=0, select bank0
  7253  00A6  1303               	bcf	status, 6	;RP1=0, select bank0
  7254  00A7  0821               	movf	(1+(?___wmul)),w
  7255  00A8  01A9               	clrf	1+(?___lwdiv)+02h
  7256  00A9  07A9               	addwf	1+(?___lwdiv)+02h
  7257  00AA  0820               	movf	(0+(?___wmul)),w
  7258  00AB  01A8               	clrf	0+(?___lwdiv)+02h
  7259  00AC  07A8               	addwf	0+(?___lwdiv)+02h
  7260                           
  7261  00AD  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7262  00B2  1283               	bcf	status, 5	;RP0=0, select bank0
  7263  00B3  1303               	bcf	status, 6	;RP1=0, select bank0
  7264  00B4  0826               	movf	(0+(?___lwdiv)),w
  7265  00B5  3E14               	addlw	low(014h)
  7266  00B6  1683               	bsf	status, 5	;RP0=1, select bank1
  7267  00B7  1303               	bcf	status, 6	;RP1=0, select bank1
  7268  00B8  00B0               	movwf	(_IRdistance)^080h	;volatile
  7269  00B9  1283               	bcf	status, 5	;RP0=0, select bank0
  7270  00BA  1303               	bcf	status, 6	;RP1=0, select bank0
  7271  00BB  0827               	movf	(1+(?___lwdiv)),w
  7272  00BC  1803               	skipnc
  7273  00BD  3E01               	addlw	1
  7274  00BE  3E00               	addlw	high(014h)
  7275  00BF  1683               	bsf	status, 5	;RP0=1, select bank1
  7276  00C0  1303               	bcf	status, 6	;RP1=0, select bank1
  7277  00C1  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7278                           	line	71
  7279                           ;infrared.c: 71: }
  7280  00C2  2A77               	goto	l3016
  7281                           	line	72
  7282                           	
  7283  00C3                     l3005:	
  7284                           	
  7285  00C3                     l11036:	
  7286                           ;infrared.c: 72: else if (adcVal >= 128 && adcVal < 170)
  7287  00C3  3000               	movlw	high(080h)
  7288  00C4  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7289  00C5  3080               	movlw	low(080h)
  7290  00C6  1903               	skipnz
  7291  00C7  0236               	subwf	(_adcVal)^080h,w	;volatile
  7292  00C8  1C03               	skipc
  7293  00C9  28CB               	goto	u5001
  7294  00CA  28CC               	goto	u5000
  7295  00CB                     u5001:
  7296  00CB  2919               	goto	l11042
  7297  00CC                     u5000:
  7298                           	
  7299  00CC                     l11038:	
  7300  00CC  3000               	movlw	high(0AAh)
  7301  00CD  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7302  00CE  30AA               	movlw	low(0AAh)
  7303  00CF  1903               	skipnz
  7304  00D0  0236               	subwf	(_adcVal)^080h,w	;volatile
  7305  00D1  1803               	skipnc
  7306  00D2  28D4               	goto	u5011
  7307  00D3  28D5               	goto	u5010
  7308  00D4                     u5011:
  7309  00D4  2919               	goto	l11042
  7310  00D5                     u5010:
  7311                           	line	74
  7312                           	
  7313  00D5                     l11040:	
  7314                           ;infrared.c: 73: {
  7315                           ;infrared.c: 74: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  7316  00D5  302A               	movlw	low(02Ah)
  7317  00D6  1283               	bcf	status, 5	;RP0=0, select bank0
  7318  00D7  1303               	bcf	status, 6	;RP1=0, select bank0
  7319  00D8  00A6               	movwf	(?___lwdiv)
  7320  00D9  3000               	movlw	high(02Ah)
  7321  00DA  00A7               	movwf	((?___lwdiv))+1
  7322  00DB  1683               	bsf	status, 5	;RP0=1, select bank1
  7323  00DC  1303               	bcf	status, 6	;RP1=0, select bank1
  7324  00DD  0936               	comf	(_adcVal)^080h,w	;volatile
  7325  00DE  1283               	bcf	status, 5	;RP0=0, select bank0
  7326  00DF  1303               	bcf	status, 6	;RP1=0, select bank0
  7327  00E0  00AE               	movwf	(??_ADCconvert+0)+0
  7328  00E1  1683               	bsf	status, 5	;RP0=1, select bank1
  7329  00E2  1303               	bcf	status, 6	;RP1=0, select bank1
  7330  00E3  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7331  00E4  1283               	bcf	status, 5	;RP0=0, select bank0
  7332  00E5  1303               	bcf	status, 6	;RP1=0, select bank0
  7333  00E6  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7334  00E7  0AAE               	incf	(??_ADCconvert+0)+0,f
  7335  00E8  1903               	skipnz
  7336  00E9  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7337  00EA  082E               	movf	0+(??_ADCconvert+0)+0,w
  7338  00EB  3EAA               	addlw	low(0AAh)
  7339  00EC  00A0               	movwf	(?___wmul)
  7340  00ED  082F               	movf	1+(??_ADCconvert+0)+0,w
  7341  00EE  1803               	skipnc
  7342  00EF  3E01               	addlw	1
  7343  00F0  3E00               	addlw	high(0AAh)
  7344  00F1  00A1               	movwf	1+(?___wmul)
  7345  00F2  300A               	movlw	low(0Ah)
  7346  00F3  00A2               	movwf	0+(?___wmul)+02h
  7347  00F4  3000               	movlw	high(0Ah)
  7348  00F5  00A3               	movwf	(0+(?___wmul)+02h)+1
  7349  00F6  160A  118A  24A5   	fcall	___wmul
              120A  118A         
  7350  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
  7351  00FC  1303               	bcf	status, 6	;RP1=0, select bank0
  7352  00FD  0821               	movf	(1+(?___wmul)),w
  7353  00FE  01A9               	clrf	1+(?___lwdiv)+02h
  7354  00FF  07A9               	addwf	1+(?___lwdiv)+02h
  7355  0100  0820               	movf	(0+(?___wmul)),w
  7356  0101  01A8               	clrf	0+(?___lwdiv)+02h
  7357  0102  07A8               	addwf	0+(?___lwdiv)+02h
  7358                           
  7359  0103  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7360  0108  1283               	bcf	status, 5	;RP0=0, select bank0
  7361  0109  1303               	bcf	status, 6	;RP1=0, select bank0
  7362  010A  0826               	movf	(0+(?___lwdiv)),w
  7363  010B  3E1E               	addlw	low(01Eh)
  7364  010C  1683               	bsf	status, 5	;RP0=1, select bank1
  7365  010D  1303               	bcf	status, 6	;RP1=0, select bank1
  7366  010E  00B0               	movwf	(_IRdistance)^080h	;volatile
  7367  010F  1283               	bcf	status, 5	;RP0=0, select bank0
  7368  0110  1303               	bcf	status, 6	;RP1=0, select bank0
  7369  0111  0827               	movf	(1+(?___lwdiv)),w
  7370  0112  1803               	skipnc
  7371  0113  3E01               	addlw	1
  7372  0114  3E00               	addlw	high(01Eh)
  7373  0115  1683               	bsf	status, 5	;RP0=1, select bank1
  7374  0116  1303               	bcf	status, 6	;RP1=0, select bank1
  7375  0117  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7376                           	line	75
  7377                           ;infrared.c: 75: }
  7378  0118  2A77               	goto	l3016
  7379                           	line	76
  7380                           	
  7381  0119                     l3007:	
  7382                           	
  7383  0119                     l11042:	
  7384                           ;infrared.c: 76: else if (adcVal >= 107 && adcVal < 128)
  7385  0119  3000               	movlw	high(06Bh)
  7386  011A  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7387  011B  306B               	movlw	low(06Bh)
  7388  011C  1903               	skipnz
  7389  011D  0236               	subwf	(_adcVal)^080h,w	;volatile
  7390  011E  1C03               	skipc
  7391  011F  2921               	goto	u5021
  7392  0120  2922               	goto	u5020
  7393  0121                     u5021:
  7394  0121  296F               	goto	l11048
  7395  0122                     u5020:
  7396                           	
  7397  0122                     l11044:	
  7398  0122  3000               	movlw	high(080h)
  7399  0123  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7400  0124  3080               	movlw	low(080h)
  7401  0125  1903               	skipnz
  7402  0126  0236               	subwf	(_adcVal)^080h,w	;volatile
  7403  0127  1803               	skipnc
  7404  0128  292A               	goto	u5031
  7405  0129  292B               	goto	u5030
  7406  012A                     u5031:
  7407  012A  296F               	goto	l11048
  7408  012B                     u5030:
  7409                           	line	78
  7410                           	
  7411  012B                     l11046:	
  7412                           ;infrared.c: 77: {
  7413                           ;infrared.c: 78: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  7414  012B  3015               	movlw	low(015h)
  7415  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  7416  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  7417  012E  00A6               	movwf	(?___lwdiv)
  7418  012F  3000               	movlw	high(015h)
  7419  0130  00A7               	movwf	((?___lwdiv))+1
  7420  0131  1683               	bsf	status, 5	;RP0=1, select bank1
  7421  0132  1303               	bcf	status, 6	;RP1=0, select bank1
  7422  0133  0936               	comf	(_adcVal)^080h,w	;volatile
  7423  0134  1283               	bcf	status, 5	;RP0=0, select bank0
  7424  0135  1303               	bcf	status, 6	;RP1=0, select bank0
  7425  0136  00AE               	movwf	(??_ADCconvert+0)+0
  7426  0137  1683               	bsf	status, 5	;RP0=1, select bank1
  7427  0138  1303               	bcf	status, 6	;RP1=0, select bank1
  7428  0139  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7429  013A  1283               	bcf	status, 5	;RP0=0, select bank0
  7430  013B  1303               	bcf	status, 6	;RP1=0, select bank0
  7431  013C  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7432  013D  0AAE               	incf	(??_ADCconvert+0)+0,f
  7433  013E  1903               	skipnz
  7434  013F  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7435  0140  082E               	movf	0+(??_ADCconvert+0)+0,w
  7436  0141  3E80               	addlw	low(080h)
  7437  0142  00A0               	movwf	(?___wmul)
  7438  0143  082F               	movf	1+(??_ADCconvert+0)+0,w
  7439  0144  1803               	skipnc
  7440  0145  3E01               	addlw	1
  7441  0146  3E00               	addlw	high(080h)
  7442  0147  00A1               	movwf	1+(?___wmul)
  7443  0148  300A               	movlw	low(0Ah)
  7444  0149  00A2               	movwf	0+(?___wmul)+02h
  7445  014A  3000               	movlw	high(0Ah)
  7446  014B  00A3               	movwf	(0+(?___wmul)+02h)+1
  7447  014C  160A  118A  24A5   	fcall	___wmul
              120A  118A         
  7448  0151  1283               	bcf	status, 5	;RP0=0, select bank0
  7449  0152  1303               	bcf	status, 6	;RP1=0, select bank0
  7450  0153  0821               	movf	(1+(?___wmul)),w
  7451  0154  01A9               	clrf	1+(?___lwdiv)+02h
  7452  0155  07A9               	addwf	1+(?___lwdiv)+02h
  7453  0156  0820               	movf	(0+(?___wmul)),w
  7454  0157  01A8               	clrf	0+(?___lwdiv)+02h
  7455  0158  07A8               	addwf	0+(?___lwdiv)+02h
  7456                           
  7457  0159  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7458  015E  1283               	bcf	status, 5	;RP0=0, select bank0
  7459  015F  1303               	bcf	status, 6	;RP1=0, select bank0
  7460  0160  0826               	movf	(0+(?___lwdiv)),w
  7461  0161  3E28               	addlw	low(028h)
  7462  0162  1683               	bsf	status, 5	;RP0=1, select bank1
  7463  0163  1303               	bcf	status, 6	;RP1=0, select bank1
  7464  0164  00B0               	movwf	(_IRdistance)^080h	;volatile
  7465  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  7466  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  7467  0167  0827               	movf	(1+(?___lwdiv)),w
  7468  0168  1803               	skipnc
  7469  0169  3E01               	addlw	1
  7470  016A  3E00               	addlw	high(028h)
  7471  016B  1683               	bsf	status, 5	;RP0=1, select bank1
  7472  016C  1303               	bcf	status, 6	;RP1=0, select bank1
  7473  016D  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7474                           	line	79
  7475                           ;infrared.c: 79: }
  7476  016E  2A77               	goto	l3016
  7477                           	line	80
  7478                           	
  7479  016F                     l3009:	
  7480                           	
  7481  016F                     l11048:	
  7482                           ;infrared.c: 80: else if (adcVal >= 77 && adcVal < 107)
  7483  016F  3000               	movlw	high(04Dh)
  7484  0170  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7485  0171  304D               	movlw	low(04Dh)
  7486  0172  1903               	skipnz
  7487  0173  0236               	subwf	(_adcVal)^080h,w	;volatile
  7488  0174  1C03               	skipc
  7489  0175  2977               	goto	u5041
  7490  0176  2978               	goto	u5040
  7491  0177                     u5041:
  7492  0177  29C5               	goto	l11054
  7493  0178                     u5040:
  7494                           	
  7495  0178                     l11050:	
  7496  0178  3000               	movlw	high(06Bh)
  7497  0179  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7498  017A  306B               	movlw	low(06Bh)
  7499  017B  1903               	skipnz
  7500  017C  0236               	subwf	(_adcVal)^080h,w	;volatile
  7501  017D  1803               	skipnc
  7502  017E  2980               	goto	u5051
  7503  017F  2981               	goto	u5050
  7504  0180                     u5051:
  7505  0180  29C5               	goto	l11054
  7506  0181                     u5050:
  7507                           	line	82
  7508                           	
  7509  0181                     l11052:	
  7510                           ;infrared.c: 81: {
  7511                           ;infrared.c: 82: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  7512  0181  301E               	movlw	low(01Eh)
  7513  0182  1283               	bcf	status, 5	;RP0=0, select bank0
  7514  0183  1303               	bcf	status, 6	;RP1=0, select bank0
  7515  0184  00A6               	movwf	(?___lwdiv)
  7516  0185  3000               	movlw	high(01Eh)
  7517  0186  00A7               	movwf	((?___lwdiv))+1
  7518  0187  1683               	bsf	status, 5	;RP0=1, select bank1
  7519  0188  1303               	bcf	status, 6	;RP1=0, select bank1
  7520  0189  0936               	comf	(_adcVal)^080h,w	;volatile
  7521  018A  1283               	bcf	status, 5	;RP0=0, select bank0
  7522  018B  1303               	bcf	status, 6	;RP1=0, select bank0
  7523  018C  00AE               	movwf	(??_ADCconvert+0)+0
  7524  018D  1683               	bsf	status, 5	;RP0=1, select bank1
  7525  018E  1303               	bcf	status, 6	;RP1=0, select bank1
  7526  018F  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7527  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  7528  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  7529  0192  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7530  0193  0AAE               	incf	(??_ADCconvert+0)+0,f
  7531  0194  1903               	skipnz
  7532  0195  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7533  0196  082E               	movf	0+(??_ADCconvert+0)+0,w
  7534  0197  3E6B               	addlw	low(06Bh)
  7535  0198  00A0               	movwf	(?___wmul)
  7536  0199  082F               	movf	1+(??_ADCconvert+0)+0,w
  7537  019A  1803               	skipnc
  7538  019B  3E01               	addlw	1
  7539  019C  3E00               	addlw	high(06Bh)
  7540  019D  00A1               	movwf	1+(?___wmul)
  7541  019E  300A               	movlw	low(0Ah)
  7542  019F  00A2               	movwf	0+(?___wmul)+02h
  7543  01A0  3000               	movlw	high(0Ah)
  7544  01A1  00A3               	movwf	(0+(?___wmul)+02h)+1
  7545  01A2  160A  118A  24A5   	fcall	___wmul
              120A  118A         
  7546  01A7  1283               	bcf	status, 5	;RP0=0, select bank0
  7547  01A8  1303               	bcf	status, 6	;RP1=0, select bank0
  7548  01A9  0821               	movf	(1+(?___wmul)),w
  7549  01AA  01A9               	clrf	1+(?___lwdiv)+02h
  7550  01AB  07A9               	addwf	1+(?___lwdiv)+02h
  7551  01AC  0820               	movf	(0+(?___wmul)),w
  7552  01AD  01A8               	clrf	0+(?___lwdiv)+02h
  7553  01AE  07A8               	addwf	0+(?___lwdiv)+02h
  7554                           
  7555  01AF  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7556  01B4  1283               	bcf	status, 5	;RP0=0, select bank0
  7557  01B5  1303               	bcf	status, 6	;RP1=0, select bank0
  7558  01B6  0826               	movf	(0+(?___lwdiv)),w
  7559  01B7  3E32               	addlw	low(032h)
  7560  01B8  1683               	bsf	status, 5	;RP0=1, select bank1
  7561  01B9  1303               	bcf	status, 6	;RP1=0, select bank1
  7562  01BA  00B0               	movwf	(_IRdistance)^080h	;volatile
  7563  01BB  1283               	bcf	status, 5	;RP0=0, select bank0
  7564  01BC  1303               	bcf	status, 6	;RP1=0, select bank0
  7565  01BD  0827               	movf	(1+(?___lwdiv)),w
  7566  01BE  1803               	skipnc
  7567  01BF  3E01               	addlw	1
  7568  01C0  3E00               	addlw	high(032h)
  7569  01C1  1683               	bsf	status, 5	;RP0=1, select bank1
  7570  01C2  1303               	bcf	status, 6	;RP1=0, select bank1
  7571  01C3  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7572                           	line	83
  7573                           ;infrared.c: 83: }
  7574  01C4  2A77               	goto	l3016
  7575                           	line	84
  7576                           	
  7577  01C5                     l3011:	
  7578                           	
  7579  01C5                     l11054:	
  7580                           ;infrared.c: 84: else if (adcVal >= 56 && adcVal < 77)
  7581  01C5  3000               	movlw	high(038h)
  7582  01C6  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7583  01C7  3038               	movlw	low(038h)
  7584  01C8  1903               	skipnz
  7585  01C9  0236               	subwf	(_adcVal)^080h,w	;volatile
  7586  01CA  1C03               	skipc
  7587  01CB  29CD               	goto	u5061
  7588  01CC  29CE               	goto	u5060
  7589  01CD                     u5061:
  7590  01CD  2A1B               	goto	l11060
  7591  01CE                     u5060:
  7592                           	
  7593  01CE                     l11056:	
  7594  01CE  3000               	movlw	high(04Dh)
  7595  01CF  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7596  01D0  304D               	movlw	low(04Dh)
  7597  01D1  1903               	skipnz
  7598  01D2  0236               	subwf	(_adcVal)^080h,w	;volatile
  7599  01D3  1803               	skipnc
  7600  01D4  29D6               	goto	u5071
  7601  01D5  29D7               	goto	u5070
  7602  01D6                     u5071:
  7603  01D6  2A1B               	goto	l11060
  7604  01D7                     u5070:
  7605                           	line	86
  7606                           	
  7607  01D7                     l11058:	
  7608                           ;infrared.c: 85: {
  7609                           ;infrared.c: 86: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  7610  01D7  3015               	movlw	low(015h)
  7611  01D8  1283               	bcf	status, 5	;RP0=0, select bank0
  7612  01D9  1303               	bcf	status, 6	;RP1=0, select bank0
  7613  01DA  00A6               	movwf	(?___lwdiv)
  7614  01DB  3000               	movlw	high(015h)
  7615  01DC  00A7               	movwf	((?___lwdiv))+1
  7616  01DD  1683               	bsf	status, 5	;RP0=1, select bank1
  7617  01DE  1303               	bcf	status, 6	;RP1=0, select bank1
  7618  01DF  0936               	comf	(_adcVal)^080h,w	;volatile
  7619  01E0  1283               	bcf	status, 5	;RP0=0, select bank0
  7620  01E1  1303               	bcf	status, 6	;RP1=0, select bank0
  7621  01E2  00AE               	movwf	(??_ADCconvert+0)+0
  7622  01E3  1683               	bsf	status, 5	;RP0=1, select bank1
  7623  01E4  1303               	bcf	status, 6	;RP1=0, select bank1
  7624  01E5  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7625  01E6  1283               	bcf	status, 5	;RP0=0, select bank0
  7626  01E7  1303               	bcf	status, 6	;RP1=0, select bank0
  7627  01E8  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7628  01E9  0AAE               	incf	(??_ADCconvert+0)+0,f
  7629  01EA  1903               	skipnz
  7630  01EB  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7631  01EC  082E               	movf	0+(??_ADCconvert+0)+0,w
  7632  01ED  3E4D               	addlw	low(04Dh)
  7633  01EE  00A0               	movwf	(?___wmul)
  7634  01EF  082F               	movf	1+(??_ADCconvert+0)+0,w
  7635  01F0  1803               	skipnc
  7636  01F1  3E01               	addlw	1
  7637  01F2  3E00               	addlw	high(04Dh)
  7638  01F3  00A1               	movwf	1+(?___wmul)
  7639  01F4  300A               	movlw	low(0Ah)
  7640  01F5  00A2               	movwf	0+(?___wmul)+02h
  7641  01F6  3000               	movlw	high(0Ah)
  7642  01F7  00A3               	movwf	(0+(?___wmul)+02h)+1
  7643  01F8  160A  118A  24A5   	fcall	___wmul
              120A  118A         
  7644  01FD  1283               	bcf	status, 5	;RP0=0, select bank0
  7645  01FE  1303               	bcf	status, 6	;RP1=0, select bank0
  7646  01FF  0821               	movf	(1+(?___wmul)),w
  7647  0200  01A9               	clrf	1+(?___lwdiv)+02h
  7648  0201  07A9               	addwf	1+(?___lwdiv)+02h
  7649  0202  0820               	movf	(0+(?___wmul)),w
  7650  0203  01A8               	clrf	0+(?___lwdiv)+02h
  7651  0204  07A8               	addwf	0+(?___lwdiv)+02h
  7652                           
  7653  0205  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7654  020A  1283               	bcf	status, 5	;RP0=0, select bank0
  7655  020B  1303               	bcf	status, 6	;RP1=0, select bank0
  7656  020C  0826               	movf	(0+(?___lwdiv)),w
  7657  020D  3E3C               	addlw	low(03Ch)
  7658  020E  1683               	bsf	status, 5	;RP0=1, select bank1
  7659  020F  1303               	bcf	status, 6	;RP1=0, select bank1
  7660  0210  00B0               	movwf	(_IRdistance)^080h	;volatile
  7661  0211  1283               	bcf	status, 5	;RP0=0, select bank0
  7662  0212  1303               	bcf	status, 6	;RP1=0, select bank0
  7663  0213  0827               	movf	(1+(?___lwdiv)),w
  7664  0214  1803               	skipnc
  7665  0215  3E01               	addlw	1
  7666  0216  3E00               	addlw	high(03Ch)
  7667  0217  1683               	bsf	status, 5	;RP0=1, select bank1
  7668  0218  1303               	bcf	status, 6	;RP1=0, select bank1
  7669  0219  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7670                           	line	87
  7671                           ;infrared.c: 87: }
  7672  021A  2A77               	goto	l3016
  7673                           	line	88
  7674                           	
  7675  021B                     l3013:	
  7676                           	
  7677  021B                     l11060:	
  7678                           ;infrared.c: 88: else if (adcVal >= 43 && adcVal < 56)
  7679  021B  3000               	movlw	high(02Bh)
  7680  021C  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7681  021D  302B               	movlw	low(02Bh)
  7682  021E  1903               	skipnz
  7683  021F  0236               	subwf	(_adcVal)^080h,w	;volatile
  7684  0220  1C03               	skipc
  7685  0221  2A23               	goto	u5081
  7686  0222  2A24               	goto	u5080
  7687  0223                     u5081:
  7688  0223  2A77               	goto	l3016
  7689  0224                     u5080:
  7690                           	
  7691  0224                     l11062:	
  7692  0224  3000               	movlw	high(038h)
  7693  0225  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7694  0226  3038               	movlw	low(038h)
  7695  0227  1903               	skipnz
  7696  0228  0236               	subwf	(_adcVal)^080h,w	;volatile
  7697  0229  1803               	skipnc
  7698  022A  2A2C               	goto	u5091
  7699  022B  2A2D               	goto	u5090
  7700  022C                     u5091:
  7701  022C  2A77               	goto	l3016
  7702  022D                     u5090:
  7703                           	line	90
  7704                           	
  7705  022D                     l11064:	
  7706                           ;infrared.c: 89: {
  7707                           ;infrared.c: 90: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  7708  022D  300D               	movlw	low(0Dh)
  7709  022E  1283               	bcf	status, 5	;RP0=0, select bank0
  7710  022F  1303               	bcf	status, 6	;RP1=0, select bank0
  7711  0230  00A6               	movwf	(?___lwdiv)
  7712  0231  3000               	movlw	high(0Dh)
  7713  0232  00A7               	movwf	((?___lwdiv))+1
  7714  0233  1683               	bsf	status, 5	;RP0=1, select bank1
  7715  0234  1303               	bcf	status, 6	;RP1=0, select bank1
  7716  0235  0936               	comf	(_adcVal)^080h,w	;volatile
  7717  0236  1283               	bcf	status, 5	;RP0=0, select bank0
  7718  0237  1303               	bcf	status, 6	;RP1=0, select bank0
  7719  0238  00AE               	movwf	(??_ADCconvert+0)+0
  7720  0239  1683               	bsf	status, 5	;RP0=1, select bank1
  7721  023A  1303               	bcf	status, 6	;RP1=0, select bank1
  7722  023B  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7723  023C  1283               	bcf	status, 5	;RP0=0, select bank0
  7724  023D  1303               	bcf	status, 6	;RP1=0, select bank0
  7725  023E  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7726  023F  0AAE               	incf	(??_ADCconvert+0)+0,f
  7727  0240  1903               	skipnz
  7728  0241  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7729  0242  082E               	movf	0+(??_ADCconvert+0)+0,w
  7730  0243  3E38               	addlw	low(038h)
  7731  0244  00A0               	movwf	(?___wmul)
  7732  0245  082F               	movf	1+(??_ADCconvert+0)+0,w
  7733  0246  1803               	skipnc
  7734  0247  3E01               	addlw	1
  7735  0248  3E00               	addlw	high(038h)
  7736  0249  00A1               	movwf	1+(?___wmul)
  7737  024A  300A               	movlw	low(0Ah)
  7738  024B  00A2               	movwf	0+(?___wmul)+02h
  7739  024C  3000               	movlw	high(0Ah)
  7740  024D  00A3               	movwf	(0+(?___wmul)+02h)+1
  7741  024E  160A  118A  24A5   	fcall	___wmul
              120A  118A         
  7742  0253  1283               	bcf	status, 5	;RP0=0, select bank0
  7743  0254  1303               	bcf	status, 6	;RP1=0, select bank0
  7744  0255  0821               	movf	(1+(?___wmul)),w
  7745  0256  01A9               	clrf	1+(?___lwdiv)+02h
  7746  0257  07A9               	addwf	1+(?___lwdiv)+02h
  7747  0258  0820               	movf	(0+(?___wmul)),w
  7748  0259  01A8               	clrf	0+(?___lwdiv)+02h
  7749  025A  07A8               	addwf	0+(?___lwdiv)+02h
  7750                           
  7751  025B  160A  118A  2760   	fcall	___lwdiv
              120A  118A         
  7752  0260  1283               	bcf	status, 5	;RP0=0, select bank0
  7753  0261  1303               	bcf	status, 6	;RP1=0, select bank0
  7754  0262  0826               	movf	(0+(?___lwdiv)),w
  7755  0263  3E46               	addlw	low(046h)
  7756  0264  1683               	bsf	status, 5	;RP0=1, select bank1
  7757  0265  1303               	bcf	status, 6	;RP1=0, select bank1
  7758  0266  00B0               	movwf	(_IRdistance)^080h	;volatile
  7759  0267  1283               	bcf	status, 5	;RP0=0, select bank0
  7760  0268  1303               	bcf	status, 6	;RP1=0, select bank0
  7761  0269  0827               	movf	(1+(?___lwdiv)),w
  7762  026A  1803               	skipnc
  7763  026B  3E01               	addlw	1
  7764  026C  3E00               	addlw	high(046h)
  7765  026D  1683               	bsf	status, 5	;RP0=1, select bank1
  7766  026E  1303               	bcf	status, 6	;RP1=0, select bank1
  7767  026F  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7768  0270  2A77               	goto	l3016
  7769                           	line	91
  7770                           	
  7771  0271                     l3015:	
  7772  0271  2A77               	goto	l3016
  7773                           	line	92
  7774                           	
  7775  0272                     l3014:	
  7776  0272  2A77               	goto	l3016
  7777                           	
  7778  0273                     l3012:	
  7779  0273  2A77               	goto	l3016
  7780                           	
  7781  0274                     l3010:	
  7782  0274  2A77               	goto	l3016
  7783                           	
  7784  0275                     l3008:	
  7785  0275  2A77               	goto	l3016
  7786                           	
  7787  0276                     l3006:	
  7788  0276  2A77               	goto	l3016
  7789                           	
  7790  0277                     l3004:	
  7791                           	
  7792  0277                     l3016:	
  7793  0277  0008               	return
  7794                           	opt stack 0
  7795                           GLOBAL	__end_of_ADCconvert
  7796  0278                     	__end_of_ADCconvert:
  7797 ;; =============== function _ADCconvert ends ============
  7798                           
  7799                           	signat	_ADCconvert,88
  7800                           	global	_robotTurn
  7801                           psect	text1092,local,class=CODE,delta=2
  7802                           global __ptext1092
  7803  0900                     __ptext1092:
  7804                           
  7805 ;; *************** function _robotTurn *****************
  7806 ;; Defined at:
  7807 ;;		line 104 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  angle           2    2[BANK0 ] int 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;		None               void
  7814 ;; Registers used:
  7815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7821 ;;      Params:         0       2       0       0       0
  7822 ;;      Locals:         0       0       0       0       0
  7823 ;;      Temps:          0       0       0       0       0
  7824 ;;      Totals:         0       2       0       0       0
  7825 ;;Total ram usage:        2 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    4
  7828 ;; This function calls:
  7829 ;;		_ser_putch
  7830 ;; This function is called by:
  7831 ;;		_main
  7832 ;;		_robotTurnSpeed
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           psect	text1092
  7836                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7837                           	line	104
  7838                           	global	__size_of_robotTurn
  7839  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  7840                           	
  7841  0900                     _robotTurn:	
  7842                           	opt	stack 3
  7843                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7844                           	line	106
  7845                           	
  7846  0900                     l11016:	
  7847                           ;robot.c: 106: if (angle > 0)
  7848  0900  1283               	bcf	status, 5	;RP0=0, select bank0
  7849  0901  1303               	bcf	status, 6	;RP1=0, select bank0
  7850  0902  0823               	movf	(robotTurn@angle+1),w
  7851  0903  3A80               	xorlw	80h
  7852  0904  00FF               	movwf	btemp+1
  7853  0905  3080               	movlw	(high(01h))^80h
  7854  0906  027F               	subwf	btemp+1,w
  7855  0907  1D03               	skipz
  7856  0908  290B               	goto	u4945
  7857  0909  3001               	movlw	low(01h)
  7858  090A  0222               	subwf	(robotTurn@angle),w
  7859  090B                     u4945:
  7860                           
  7861  090B  1C03               	skipc
  7862  090C  290E               	goto	u4941
  7863  090D  290F               	goto	u4940
  7864  090E                     u4941:
  7865  090E  292E               	goto	l6024
  7866  090F                     u4940:
  7867                           	line	108
  7868                           	
  7869  090F                     l11018:	
  7870                           ;robot.c: 107: {
  7871                           ;robot.c: 108: ser_putch(137);
  7872  090F  3089               	movlw	(089h)
  7873  0910  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7874                           	line	110
  7875                           ;robot.c: 110: ser_putch(0);
  7876  0915  3000               	movlw	(0)
  7877  0916  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7878                           	line	112
  7879                           ;robot.c: 112: ser_putch(50);
  7880  091B  3032               	movlw	(032h)
  7881  091C  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7882                           	line	114
  7883                           ;robot.c: 114: ser_putch(0);
  7884  0921  3000               	movlw	(0)
  7885  0922  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7886                           	line	116
  7887                           ;robot.c: 116: ser_putch(1);
  7888  0927  3001               	movlw	(01h)
  7889  0928  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7890                           	line	117
  7891                           ;robot.c: 117: }
  7892  092D  2973               	goto	l6028
  7893                           	line	118
  7894                           	
  7895  092E                     l6024:	
  7896                           ;robot.c: 118: else if (angle < 0)
  7897  092E  1283               	bcf	status, 5	;RP0=0, select bank0
  7898  092F  1303               	bcf	status, 6	;RP1=0, select bank0
  7899  0930  1FA3               	btfss	(robotTurn@angle+1),7
  7900  0931  2933               	goto	u4951
  7901  0932  2934               	goto	u4950
  7902  0933                     u4951:
  7903  0933  2953               	goto	l11022
  7904  0934                     u4950:
  7905                           	line	120
  7906                           	
  7907  0934                     l11020:	
  7908                           ;robot.c: 119: {
  7909                           ;robot.c: 120: ser_putch(137);
  7910  0934  3089               	movlw	(089h)
  7911  0935  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7912                           	line	122
  7913                           ;robot.c: 122: ser_putch(0);
  7914  093A  3000               	movlw	(0)
  7915  093B  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7916                           	line	124
  7917                           ;robot.c: 124: ser_putch(50);
  7918  0940  3032               	movlw	(032h)
  7919  0941  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7920                           	line	126
  7921                           ;robot.c: 126: ser_putch(255);
  7922  0946  30FF               	movlw	(0FFh)
  7923  0947  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7924                           	line	128
  7925                           ;robot.c: 128: ser_putch(255);
  7926  094C  30FF               	movlw	(0FFh)
  7927  094D  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7928                           	line	129
  7929                           ;robot.c: 129: }
  7930  0952  2973               	goto	l6028
  7931                           	line	130
  7932                           	
  7933  0953                     l6026:	
  7934                           	line	132
  7935                           	
  7936  0953                     l11022:	
  7937                           ;robot.c: 130: else
  7938                           ;robot.c: 131: {
  7939                           ;robot.c: 132: ser_putch(137);
  7940  0953  3089               	movlw	(089h)
  7941  0954  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7942                           	line	134
  7943                           ;robot.c: 134: ser_putch(0);
  7944  0959  3000               	movlw	(0)
  7945  095A  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7946                           	line	136
  7947                           ;robot.c: 136: ser_putch(0);
  7948  095F  3000               	movlw	(0)
  7949  0960  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7950                           	line	138
  7951                           ;robot.c: 138: ser_putch(0);
  7952  0965  3000               	movlw	(0)
  7953  0966  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7954                           	line	140
  7955                           ;robot.c: 140: ser_putch(0);
  7956  096B  3000               	movlw	(0)
  7957  096C  160A  118A  2555   	fcall	_ser_putch
              120A  158A         
  7958  0971  2973               	goto	l6028
  7959                           	line	141
  7960                           	
  7961  0972                     l6027:	
  7962  0972  2973               	goto	l6028
  7963                           	
  7964  0973                     l6025:	
  7965                           	line	142
  7966                           	
  7967  0973                     l6028:	
  7968  0973  0008               	return
  7969                           	opt stack 0
  7970                           GLOBAL	__end_of_robotTurn
  7971  0974                     	__end_of_robotTurn:
  7972 ;; =============== function _robotTurn ends ============
  7973                           
  7974                           	signat	_robotTurn,4216
  7975                           	global	_rotate
  7976                           psect	text1093,local,class=CODE,delta=2
  7977                           global __ptext1093
  7978  17B0                     __ptext1093:
  7979                           
  7980 ;; *************** function _rotate *****************
  7981 ;; Defined at:
  7982 ;;		line 66 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  numsteps        2    3[BANK0 ] unsigned int 
  7985 ;;  direction       1    5[BANK0 ] unsigned char 
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;  i               2    8[BANK0 ] unsigned int 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;		None               void
  7990 ;; Registers used:
  7991 ;;		wreg, status,2, status,0, pclath, cstack
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7997 ;;      Params:         0       3       0       0       0
  7998 ;;      Locals:         0       2       0       0       0
  7999 ;;      Temps:          0       2       0       0       0
  8000 ;;      Totals:         0       7       0       0       0
  8001 ;;Total ram usage:        7 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    4
  8004 ;; This function calls:
  8005 ;;		_spi_transfer
  8006 ;; This function is called by:
  8007 ;;		_main
  8008 ;;		_calibrateIR
  8009 ;;		_scan360
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           psect	text1093
  8013                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  8014                           	line	66
  8015                           	global	__size_of_rotate
  8016  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  8017                           	
  8018  17B0                     _rotate:	
  8019                           	opt	stack 3
  8020                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  8021                           	line	68
  8022                           	
  8023  17B0                     l10988:	
  8024                           ;steppermotor.c: 68: RC0 = 1; RC1 = 1;;
  8025  17B0  1283               	bcf	status, 5	;RP0=0, select bank0
  8026  17B1  1303               	bcf	status, 6	;RP1=0, select bank0
  8027  17B2  1407               	bsf	(56/8),(56)&7
  8028  17B3  1487               	bsf	(57/8),(57)&7
  8029                           	line	69
  8030                           	
  8031  17B4                     l10990:	
  8032                           ;steppermotor.c: 69: if (direction == 0)
  8033  17B4  08A5               	movf	(rotate@direction),f
  8034  17B5  1D03               	skipz
  8035  17B6  2FB8               	goto	u4921
  8036  17B7  2FB9               	goto	u4920
  8037  17B8                     u4921:
  8038  17B8  2FC0               	goto	l10994
  8039  17B9                     u4920:
  8040                           	line	70
  8041                           	
  8042  17B9                     l10992:	
  8043                           ;steppermotor.c: 70: spi_transfer(0b00001011);
  8044  17B9  300B               	movlw	(0Bh)
  8045  17BA  160A  118A  237A   	fcall	_spi_transfer
              160A  118A         
  8046  17BF  2FC7               	goto	l10996
  8047                           	line	71
  8048                           	
  8049  17C0                     l3717:	
  8050                           	line	72
  8051                           	
  8052  17C0                     l10994:	
  8053                           ;steppermotor.c: 71: else
  8054                           ;steppermotor.c: 72: spi_transfer(0b00001001);
  8055  17C0  3009               	movlw	(09h)
  8056  17C1  160A  118A  237A   	fcall	_spi_transfer
              160A  118A         
  8057  17C6  2FC7               	goto	l10996
  8058                           	
  8059  17C7                     l3718:	
  8060                           	line	73
  8061                           	
  8062  17C7                     l10996:	
  8063                           ;steppermotor.c: 73: RC0 = 0; RC1 = 0;;
  8064  17C7  1283               	bcf	status, 5	;RP0=0, select bank0
  8065  17C8  1303               	bcf	status, 6	;RP1=0, select bank0
  8066  17C9  1007               	bcf	(56/8),(56)&7
  8067                           	
  8068  17CA                     l10998:	
  8069  17CA  1087               	bcf	(57/8),(57)&7
  8070                           	line	74
  8071                           	
  8072  17CB                     l11000:	
  8073                           ;steppermotor.c: 74: for (unsigned int i = 0; i < numsteps; i++)
  8074  17CB  01A8               	clrf	(rotate@i)
  8075  17CC  01A9               	clrf	(rotate@i+1)
  8076  17CD  2FE4               	goto	l3719
  8077                           	line	75
  8078                           	
  8079  17CE                     l3720:	
  8080                           	line	76
  8081                           ;steppermotor.c: 75: {
  8082                           ;steppermotor.c: 76: RC2 = 1; _nop(); RC2 = 0;;
  8083  17CE  1507               	bsf	(58/8),(58)&7
  8084  17CF  0000               	nop
  8085  17D0  1283               	bcf	status, 5	;RP0=0, select bank0
  8086  17D1  1303               	bcf	status, 6	;RP1=0, select bank0
  8087  17D2  1107               	bcf	(58/8),(58)&7
  8088                           	line	77
  8089                           	
  8090  17D3                     l11002:	
  8091                           ;steppermotor.c: 77: _delay((unsigned long)((15)*(20000000/4000.0)));
  8092                           	opt asmopt_off
  8093  17D3  3062               movlw	98
  8094  17D4  00A7               movwf	((??_rotate+0)+0+1),f
  8095  17D5  3065               	movlw	101
  8096  17D6  00A6               movwf	((??_rotate+0)+0),f
  8097  17D7                     u5807:
  8098  17D7  0BA6               	decfsz	((??_rotate+0)+0),f
  8099  17D8  2FD7               	goto	u5807
  8100  17D9  0BA7               	decfsz	((??_rotate+0)+0+1),f
  8101  17DA  2FD7               	goto	u5807
  8102  17DB  2FDC               	nop2
  8103                           opt asmopt_on
  8104                           
  8105                           	line	74
  8106  17DC  3001               	movlw	low(01h)
  8107  17DD  1283               	bcf	status, 5	;RP0=0, select bank0
  8108  17DE  1303               	bcf	status, 6	;RP1=0, select bank0
  8109  17DF  07A8               	addwf	(rotate@i),f
  8110  17E0  1803               	skipnc
  8111  17E1  0AA9               	incf	(rotate@i+1),f
  8112  17E2  3000               	movlw	high(01h)
  8113  17E3  07A9               	addwf	(rotate@i+1),f
  8114                           	
  8115  17E4                     l3719:	
  8116  17E4  0824               	movf	(rotate@numsteps+1),w
  8117  17E5  0229               	subwf	(rotate@i+1),w
  8118  17E6  1D03               	skipz
  8119  17E7  2FEA               	goto	u4935
  8120  17E8  0823               	movf	(rotate@numsteps),w
  8121  17E9  0228               	subwf	(rotate@i),w
  8122  17EA                     u4935:
  8123  17EA  1C03               	skipc
  8124  17EB  2FED               	goto	u4931
  8125  17EC  2FEE               	goto	u4930
  8126  17ED                     u4931:
  8127  17ED  2FCE               	goto	l3720
  8128  17EE                     u4930:
  8129                           	
  8130  17EE                     l3721:	
  8131                           	line	79
  8132                           ;steppermotor.c: 78: }
  8133                           ;steppermotor.c: 79: RC0 = 1; RC1 = 1;;
  8134  17EE  1407               	bsf	(56/8),(56)&7
  8135  17EF  1487               	bsf	(57/8),(57)&7
  8136                           	line	80
  8137                           	
  8138  17F0                     l11004:	
  8139                           ;steppermotor.c: 80: spi_transfer(0b00000000);
  8140  17F0  3000               	movlw	(0)
  8141  17F1  160A  118A  237A   	fcall	_spi_transfer
              160A  118A         
  8142                           	line	81
  8143                           	
  8144  17F6                     l11006:	
  8145                           ;steppermotor.c: 81: RC0 = 0; RC1 = 0;;
  8146  17F6  1283               	bcf	status, 5	;RP0=0, select bank0
  8147  17F7  1303               	bcf	status, 6	;RP1=0, select bank0
  8148  17F8  1007               	bcf	(56/8),(56)&7
  8149                           	
  8150  17F9                     l11008:	
  8151  17F9  1087               	bcf	(57/8),(57)&7
  8152                           	line	82
  8153                           	
  8154  17FA                     l11010:	
  8155                           ;steppermotor.c: 82: RC2 = 1; _nop(); RC2 = 0;;
  8156  17FA  1507               	bsf	(58/8),(58)&7
  8157                           	
  8158  17FB                     l11012:	
  8159  17FB  0000               	nop
  8160                           	
  8161  17FC                     l11014:	
  8162  17FC  1283               	bcf	status, 5	;RP0=0, select bank0
  8163  17FD  1303               	bcf	status, 6	;RP1=0, select bank0
  8164  17FE  1107               	bcf	(58/8),(58)&7
  8165                           	line	83
  8166                           	
  8167  17FF                     l3722:	
  8168  17FF  0008               	return
  8169                           	opt stack 0
  8170                           GLOBAL	__end_of_rotate
  8171  1800                     	__end_of_rotate:
  8172 ;; =============== function _rotate ends ============
  8173                           
  8174                           	signat	_rotate,8312
  8175                           	global	_robo_init
  8176                           psect	text1094,local,class=CODE,delta=2
  8177                           global __ptext1094
  8178  13E7                     __ptext1094:
  8179                           
  8180 ;; *************** function _robo_init *****************
  8181 ;; Defined at:
  8182 ;;		line 31 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;		None
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;		None
  8187 ;; Return value:  Size  Location     Type
  8188 ;;		None               void
  8189 ;; Registers used:
  8190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8196 ;;      Params:         0       0       0       0       0
  8197 ;;      Locals:         0       0       0       0       0
  8198 ;;      Temps:          0       0       0       0       0
  8199 ;;      Totals:         0       0       0       0       0
  8200 ;;Total ram usage:        0 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    4
  8203 ;; This function calls:
  8204 ;;		_ser_putch
  8205 ;; This function is called by:
  8206 ;;		_init
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           psect	text1094
  8210                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  8211                           	line	31
  8212                           	global	__size_of_robo_init
  8213  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  8214                           	
  8215  13E7                     _robo_init:	
  8216                           	opt	stack 2
  8217                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8218                           	line	32
  8219                           	
  8220  13E7                     l10986:	
  8221                           ;robot.c: 32: ser_putch(128);
  8222  13E7  3080               	movlw	(080h)
  8223  13E8  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  8224                           	line	33
  8225                           ;robot.c: 33: ser_putch(132);
  8226  13ED  3084               	movlw	(084h)
  8227  13EE  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  8228                           	line	34
  8229                           ;robot.c: 34: ser_putch(150);
  8230  13F3  3096               	movlw	(096h)
  8231  13F4  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  8232                           	line	35
  8233                           ;robot.c: 35: ser_putch(0);
  8234  13F9  3000               	movlw	(0)
  8235  13FA  160A  118A  2555   	fcall	_ser_putch
              160A  118A         
  8236                           	line	36
  8237                           	
  8238  13FF                     l6010:	
  8239  13FF  0008               	return
  8240                           	opt stack 0
  8241                           GLOBAL	__end_of_robo_init
  8242  1400                     	__end_of_robo_init:
  8243 ;; =============== function _robo_init ends ============
  8244                           
  8245                           	signat	_robo_init,88
  8246                           	global	_lcd_write_data
  8247                           psect	text1095,local,class=CODE,delta=2
  8248                           global __ptext1095
  8249  1354                     __ptext1095:
  8250                           
  8251 ;; *************** function _lcd_write_data *****************
  8252 ;; Defined at:
  8253 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  databyte        1    wreg     unsigned char 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  databyte        1    2[BANK0 ] unsigned char 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;		None               void
  8260 ;; Registers used:
  8261 ;;		wreg
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8267 ;;      Params:         0       0       0       0       0
  8268 ;;      Locals:         0       1       0       0       0
  8269 ;;      Temps:          0       2       0       0       0
  8270 ;;      Totals:         0       3       0       0       0
  8271 ;;Total ram usage:        3 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; Hardware stack levels required when called:    3
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_lcd_write_string
  8278 ;;		_lcd_write_2_digit_bcd
  8279 ;;		_lcd_write_3_digit_bcd
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           psect	text1095
  8283                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8284                           	line	30
  8285                           	global	__size_of_lcd_write_data
  8286  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  8287                           	
  8288  1354                     _lcd_write_data:	
  8289                           	opt	stack 1
  8290                           ; Regs used in _lcd_write_data: [wreg]
  8291                           ;lcd_write_data@databyte stored from wreg
  8292  1354  1283               	bcf	status, 5	;RP0=0, select bank0
  8293  1355  1303               	bcf	status, 6	;RP1=0, select bank0
  8294  1356  00A2               	movwf	(lcd_write_data@databyte)
  8295                           	line	31
  8296                           	
  8297  1357                     l10978:	
  8298                           ;lcd.c: 31: RE2 = 0;
  8299  1357  1109               	bcf	(74/8),(74)&7
  8300                           	line	32
  8301                           ;lcd.c: 32: RE1 = 0;
  8302  1358  1089               	bcf	(73/8),(73)&7
  8303                           	line	33
  8304                           ;lcd.c: 33: RE0 = 1;
  8305  1359  1409               	bsf	(72/8),(72)&7
  8306                           	line	34
  8307                           	
  8308  135A                     l10980:	
  8309                           ;lcd.c: 34: PORTD = databyte;
  8310  135A  0822               	movf	(lcd_write_data@databyte),w
  8311  135B  0088               	movwf	(8)	;volatile
  8312                           	line	35
  8313                           	
  8314  135C                     l10982:	
  8315                           ;lcd.c: 35: RE2 = 1;
  8316  135C  1509               	bsf	(74/8),(74)&7
  8317                           	line	36
  8318                           	
  8319  135D                     l10984:	
  8320                           ;lcd.c: 36: RE2 = 0;
  8321  135D  1109               	bcf	(74/8),(74)&7
  8322                           	line	37
  8323                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  8324                           	opt asmopt_off
  8325  135E  3007               movlw	7
  8326  135F  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  8327  1360  307D               	movlw	125
  8328  1361  00A0               movwf	((??_lcd_write_data+0)+0),f
  8329  1362                     u5817:
  8330  1362  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  8331  1363  2B62               	goto	u5817
  8332  1364  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  8333  1365  2B62               	goto	u5817
  8334                           opt asmopt_on
  8335                           
  8336                           	line	38
  8337                           	
  8338  1366                     l1402:	
  8339  1366  0008               	return
  8340                           	opt stack 0
  8341                           GLOBAL	__end_of_lcd_write_data
  8342  1367                     	__end_of_lcd_write_data:
  8343 ;; =============== function _lcd_write_data ends ============
  8344                           
  8345                           	signat	_lcd_write_data,4216
  8346                           	global	_lcd_write_control
  8347                           psect	text1096,local,class=CODE,delta=2
  8348                           global __ptext1096
  8349  138E                     __ptext1096:
  8350                           
  8351 ;; *************** function _lcd_write_control *****************
  8352 ;; Defined at:
  8353 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  databyte        1    wreg     unsigned char 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;  databyte        1    2[BANK0 ] unsigned char 
  8358 ;; Return value:  Size  Location     Type
  8359 ;;		None               void
  8360 ;; Registers used:
  8361 ;;		wreg
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8367 ;;      Params:         0       0       0       0       0
  8368 ;;      Locals:         0       1       0       0       0
  8369 ;;      Temps:          0       2       0       0       0
  8370 ;;      Totals:         0       3       0       0       0
  8371 ;;Total ram usage:        3 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; Hardware stack levels required when called:    3
  8374 ;; This function calls:
  8375 ;;		Nothing
  8376 ;; This function is called by:
  8377 ;;		_lcd_set_cursor
  8378 ;;		_lcd_init
  8379 ;;		_UpdateDisplay
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           psect	text1096
  8383                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8384                           	line	18
  8385                           	global	__size_of_lcd_write_control
  8386  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  8387                           	
  8388  138E                     _lcd_write_control:	
  8389                           	opt	stack 1
  8390                           ; Regs used in _lcd_write_control: [wreg]
  8391                           ;lcd_write_control@databyte stored from wreg
  8392  138E  1283               	bcf	status, 5	;RP0=0, select bank0
  8393  138F  1303               	bcf	status, 6	;RP1=0, select bank0
  8394  1390  00A2               	movwf	(lcd_write_control@databyte)
  8395                           	line	19
  8396                           	
  8397  1391                     l10970:	
  8398                           ;lcd.c: 19: RE2 = 0;
  8399  1391  1109               	bcf	(74/8),(74)&7
  8400                           	line	20
  8401                           ;lcd.c: 20: RE1 = 0;
  8402  1392  1089               	bcf	(73/8),(73)&7
  8403                           	line	21
  8404                           ;lcd.c: 21: RE0 = 0;
  8405  1393  1009               	bcf	(72/8),(72)&7
  8406                           	line	22
  8407                           	
  8408  1394                     l10972:	
  8409                           ;lcd.c: 22: PORTD = databyte;
  8410  1394  0822               	movf	(lcd_write_control@databyte),w
  8411  1395  0088               	movwf	(8)	;volatile
  8412                           	line	23
  8413                           	
  8414  1396                     l10974:	
  8415                           ;lcd.c: 23: RE2 = 1;
  8416  1396  1509               	bsf	(74/8),(74)&7
  8417                           	line	24
  8418                           	
  8419  1397                     l10976:	
  8420                           ;lcd.c: 24: RE2 = 0;
  8421  1397  1109               	bcf	(74/8),(74)&7
  8422                           	line	25
  8423                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  8424                           	opt asmopt_off
  8425  1398  300D               movlw	13
  8426  1399  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  8427  139A  30FB               	movlw	251
  8428  139B  00A0               movwf	((??_lcd_write_control+0)+0),f
  8429  139C                     u5827:
  8430  139C  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  8431  139D  2B9C               	goto	u5827
  8432  139E  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  8433  139F  2B9C               	goto	u5827
  8434  13A0  2BA1               	nop2
  8435                           opt asmopt_on
  8436                           
  8437                           	line	26
  8438                           	
  8439  13A1                     l1399:	
  8440  13A1  0008               	return
  8441                           	opt stack 0
  8442                           GLOBAL	__end_of_lcd_write_control
  8443  13A2                     	__end_of_lcd_write_control:
  8444 ;; =============== function _lcd_write_control ends ============
  8445                           
  8446                           	signat	_lcd_write_control,4216
  8447                           	global	_init_adc
  8448                           psect	text1097,local,class=CODE,delta=2
  8449                           global __ptext1097
  8450  13A2                     __ptext1097:
  8451                           
  8452 ;; *************** function _init_adc *****************
  8453 ;; Defined at:
  8454 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;		None
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;		None               void
  8461 ;; Registers used:
  8462 ;;		wreg, status,2
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8468 ;;      Params:         0       0       0       0       0
  8469 ;;      Locals:         0       0       0       0       0
  8470 ;;      Temps:          0       1       0       0       0
  8471 ;;      Totals:         0       1       0       0       0
  8472 ;;Total ram usage:        1 bytes
  8473 ;; Hardware stack levels used:    1
  8474 ;; Hardware stack levels required when called:    3
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_init
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           psect	text1097
  8482                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8483                           	line	61
  8484                           	global	__size_of_init_adc
  8485  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  8486                           	
  8487  13A2                     _init_adc:	
  8488                           	opt	stack 3
  8489                           ; Regs used in _init_adc: [wreg+status,2]
  8490                           	line	63
  8491                           	
  8492  13A2                     l10960:	
  8493                           ;adc.c: 63: PORTA = 0;
  8494  13A2  1283               	bcf	status, 5	;RP0=0, select bank0
  8495  13A3  1303               	bcf	status, 6	;RP1=0, select bank0
  8496  13A4  0185               	clrf	(5)	;volatile
  8497                           	line	64
  8498                           	
  8499  13A5                     l10962:	
  8500                           ;adc.c: 64: TRISA = 0b00111111;
  8501  13A5  303F               	movlw	(03Fh)
  8502  13A6  1683               	bsf	status, 5	;RP0=1, select bank1
  8503  13A7  1303               	bcf	status, 6	;RP1=0, select bank1
  8504  13A8  0085               	movwf	(133)^080h	;volatile
  8505                           	line	67
  8506                           	
  8507  13A9                     l10964:	
  8508                           ;adc.c: 67: ADCON0 = 0b10100001;
  8509  13A9  30A1               	movlw	(0A1h)
  8510  13AA  1283               	bcf	status, 5	;RP0=0, select bank0
  8511  13AB  1303               	bcf	status, 6	;RP1=0, select bank0
  8512  13AC  009F               	movwf	(31)	;volatile
  8513                           	line	68
  8514                           	
  8515  13AD                     l10966:	
  8516                           ;adc.c: 68: ADCON1 = 0b0000010;
  8517  13AD  3002               	movlw	(02h)
  8518  13AE  1683               	bsf	status, 5	;RP0=1, select bank1
  8519  13AF  1303               	bcf	status, 6	;RP1=0, select bank1
  8520  13B0  009F               	movwf	(159)^080h	;volatile
  8521                           	line	70
  8522                           	
  8523  13B1                     l10968:	
  8524                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8525                           	opt asmopt_off
  8526  13B1  3053               movlw	83
  8527  13B2  1283               	bcf	status, 5	;RP0=0, select bank0
  8528  13B3  1303               	bcf	status, 6	;RP1=0, select bank0
  8529  13B4  00A0               movwf	(??_init_adc+0)+0,f
  8530  13B5                     u5837:
  8531  13B5  0BA0               decfsz	(??_init_adc+0)+0,f
  8532  13B6  2BB5               	goto	u5837
  8533                           opt asmopt_on
  8534                           
  8535                           	line	72
  8536                           	
  8537  13B7                     l700:	
  8538  13B7  0008               	return
  8539                           	opt stack 0
  8540                           GLOBAL	__end_of_init_adc
  8541  13B8                     	__end_of_init_adc:
  8542 ;; =============== function _init_adc ends ============
  8543                           
  8544                           	signat	_init_adc,88
  8545                           	global	_adc_read_channel
  8546                           psect	text1098,local,class=CODE,delta=2
  8547                           global __ptext1098
  8548  160E                     __ptext1098:
  8549                           
  8550 ;; *************** function _adc_read_channel *****************
  8551 ;; Defined at:
  8552 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;  channel         1    wreg     unsigned char 
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;  channel         1    7[BANK0 ] unsigned char 
  8557 ;; Return value:  Size  Location     Type
  8558 ;;                  1    wreg      unsigned char 
  8559 ;; Registers used:
  8560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8566 ;;      Params:         0       0       0       0       0
  8567 ;;      Locals:         0       1       0       0       0
  8568 ;;      Temps:          0       1       0       0       0
  8569 ;;      Totals:         0       2       0       0       0
  8570 ;;Total ram usage:        2 bytes
  8571 ;; Hardware stack levels used:    1
  8572 ;; Hardware stack levels required when called:    4
  8573 ;; This function calls:
  8574 ;;		_adc_read
  8575 ;; This function is called by:
  8576 ;;		_readDistance
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           psect	text1098
  8580                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8581                           	line	20
  8582                           	global	__size_of_adc_read_channel
  8583  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  8584                           	
  8585  160E                     _adc_read_channel:	
  8586                           	opt	stack 0
  8587                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8588                           ;adc_read_channel@channel stored from wreg
  8589  160E  1283               	bcf	status, 5	;RP0=0, select bank0
  8590  160F  1303               	bcf	status, 6	;RP1=0, select bank0
  8591  1610  00A7               	movwf	(adc_read_channel@channel)
  8592                           	line	21
  8593                           	
  8594  1611                     l10944:	
  8595                           ;adc.c: 21: switch(channel)
  8596  1611  2E2A               	goto	l10952
  8597                           	line	23
  8598                           ;adc.c: 22: {
  8599                           ;adc.c: 23: case 0:
  8600                           	
  8601  1612                     l690:	
  8602                           	line	24
  8603                           ;adc.c: 24: CHS0 = 0;
  8604  1612  119F               	bcf	(251/8),(251)&7
  8605                           	line	25
  8606                           ;adc.c: 25: CHS1 = 0;
  8607  1613  121F               	bcf	(252/8),(252)&7
  8608                           	line	26
  8609                           ;adc.c: 26: CHS2 = 0;
  8610  1614  129F               	bcf	(253/8),(253)&7
  8611                           	line	27
  8612                           ;adc.c: 27: break;
  8613  1615  2E3B               	goto	l10954
  8614                           	line	28
  8615                           ;adc.c: 28: case 1:
  8616                           	
  8617  1616                     l692:	
  8618                           	line	29
  8619                           ;adc.c: 29: CHS0 = 1;
  8620  1616  159F               	bsf	(251/8),(251)&7
  8621                           	line	30
  8622                           ;adc.c: 30: CHS1 = 0;
  8623  1617  121F               	bcf	(252/8),(252)&7
  8624                           	line	31
  8625                           ;adc.c: 31: CHS2 = 0;
  8626  1618  129F               	bcf	(253/8),(253)&7
  8627                           	line	32
  8628                           ;adc.c: 32: break;
  8629  1619  2E3B               	goto	l10954
  8630                           	line	33
  8631                           ;adc.c: 33: case 2:
  8632                           	
  8633  161A                     l693:	
  8634                           	line	34
  8635                           ;adc.c: 34: CHS0 = 0;
  8636  161A  119F               	bcf	(251/8),(251)&7
  8637                           	line	35
  8638                           ;adc.c: 35: CHS1 = 1;
  8639  161B  161F               	bsf	(252/8),(252)&7
  8640                           	line	36
  8641                           ;adc.c: 36: CHS2 = 0;
  8642  161C  129F               	bcf	(253/8),(253)&7
  8643                           	line	37
  8644                           ;adc.c: 37: break;
  8645  161D  2E3B               	goto	l10954
  8646                           	line	38
  8647                           ;adc.c: 38: case 3:
  8648                           	
  8649  161E                     l694:	
  8650                           	line	39
  8651                           ;adc.c: 39: CHS0 = 1;
  8652  161E  159F               	bsf	(251/8),(251)&7
  8653                           	line	40
  8654                           ;adc.c: 40: CHS1 = 1;
  8655  161F  161F               	bsf	(252/8),(252)&7
  8656                           	line	41
  8657                           ;adc.c: 41: CHS2 = 0;
  8658  1620  129F               	bcf	(253/8),(253)&7
  8659                           	line	42
  8660                           ;adc.c: 42: break;
  8661  1621  2E3B               	goto	l10954
  8662                           	line	43
  8663                           ;adc.c: 43: case 4:
  8664                           	
  8665  1622                     l695:	
  8666                           	line	44
  8667                           ;adc.c: 44: CHS0 = 0;
  8668  1622  119F               	bcf	(251/8),(251)&7
  8669                           	line	45
  8670                           ;adc.c: 45: CHS1 = 0;
  8671  1623  121F               	bcf	(252/8),(252)&7
  8672                           	line	46
  8673                           ;adc.c: 46: CHS2 = 1;
  8674  1624  169F               	bsf	(253/8),(253)&7
  8675                           	line	47
  8676                           ;adc.c: 47: break;
  8677  1625  2E3B               	goto	l10954
  8678                           	line	50
  8679                           ;adc.c: 50: default:
  8680                           	
  8681  1626                     l696:	
  8682                           	line	51
  8683                           	
  8684  1626                     l10946:	
  8685                           ;adc.c: 51: return 0;
  8686  1626  3000               	movlw	(0)
  8687  1627  2E48               	goto	l697
  8688                           	
  8689  1628                     l10948:	
  8690  1628  2E48               	goto	l697
  8691                           	line	52
  8692                           	
  8693  1629                     l10950:	
  8694                           ;adc.c: 52: }
  8695  1629  2E3B               	goto	l10954
  8696                           	line	21
  8697                           	
  8698  162A                     l689:	
  8699                           	
  8700  162A                     l10952:	
  8701  162A  0827               	movf	(adc_read_channel@channel),w
  8702                           	; Switch size 1, requested type "space"
  8703                           ; Number of cases is 5, Range of values is 0 to 4
  8704                           ; switch strategies available:
  8705                           ; Name         Instructions Cycles
  8706                           ; simple_byte           16     9 (average)
  8707                           ; direct_byte           23     8 (fixed)
  8708                           ; jumptable            260     6 (fixed)
  8709                           ; rangetable             9     6 (fixed)
  8710                           ; spacedrange           16     9 (fixed)
  8711                           ; locatedrange           5     3 (fixed)
  8712                           ;	Chosen strategy is simple_byte
  8713                           
  8714                           	opt asmopt_off
  8715  162B  3A00               	xorlw	0^0	; case 0
  8716  162C  1903               	skipnz
  8717  162D  2E12               	goto	l690
  8718  162E  3A01               	xorlw	1^0	; case 1
  8719  162F  1903               	skipnz
  8720  1630  2E16               	goto	l692
  8721  1631  3A03               	xorlw	2^1	; case 2
  8722  1632  1903               	skipnz
  8723  1633  2E1A               	goto	l693
  8724  1634  3A01               	xorlw	3^2	; case 3
  8725  1635  1903               	skipnz
  8726  1636  2E1E               	goto	l694
  8727  1637  3A07               	xorlw	4^3	; case 4
  8728  1638  1903               	skipnz
  8729  1639  2E22               	goto	l695
  8730  163A  2E26               	goto	l10946
  8731                           	opt asmopt_on
  8732                           
  8733                           	line	52
  8734                           	
  8735  163B                     l691:	
  8736                           	line	54
  8737                           	
  8738  163B                     l10954:	
  8739                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8740                           	opt asmopt_off
  8741  163B  3053               movlw	83
  8742  163C  00A6               movwf	(??_adc_read_channel+0)+0,f
  8743  163D                     u5847:
  8744  163D  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  8745  163E  2E3D               	goto	u5847
  8746                           opt asmopt_on
  8747                           
  8748                           	line	56
  8749                           	
  8750  163F                     l10956:	
  8751                           ;adc.c: 56: return adc_read();
  8752  163F  160A  118A  2427   	fcall	_adc_read
              160A  118A         
  8753  1644  1283               	bcf	status, 5	;RP0=0, select bank0
  8754  1645  1303               	bcf	status, 6	;RP1=0, select bank0
  8755  1646  0820               	movf	(0+(?_adc_read)),w
  8756  1647  2E48               	goto	l697
  8757                           	
  8758  1648                     l10958:	
  8759                           	line	58
  8760                           	
  8761  1648                     l697:	
  8762  1648  0008               	return
  8763                           	opt stack 0
  8764                           GLOBAL	__end_of_adc_read_channel
  8765  1649                     	__end_of_adc_read_channel:
  8766 ;; =============== function _adc_read_channel ends ============
  8767                           
  8768                           	signat	_adc_read_channel,4217
  8769                           	global	___awmod
  8770                           psect	text1099,local,class=CODE,delta=2
  8771                           global __ptext1099
  8772  0898                     __ptext1099:
  8773                           
  8774 ;; *************** function ___awmod *****************
  8775 ;; Defined at:
  8776 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  divisor         2    0[BANK0 ] int 
  8779 ;;  dividend        2    2[BANK0 ] int 
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;  sign            1    6[BANK0 ] unsigned char 
  8782 ;;  counter         1    5[BANK0 ] unsigned char 
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  2    0[BANK0 ] int 
  8785 ;; Registers used:
  8786 ;;		wreg, status,2, status,0
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8792 ;;      Params:         0       4       0       0       0
  8793 ;;      Locals:         0       2       0       0       0
  8794 ;;      Temps:          0       1       0       0       0
  8795 ;;      Totals:         0       7       0       0       0
  8796 ;;Total ram usage:        7 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:    3
  8799 ;; This function calls:
  8800 ;;		Nothing
  8801 ;; This function is called by:
  8802 ;;		_UpdateDisplay
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           psect	text1099
  8806                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8807                           	line	5
  8808                           	global	__size_of___awmod
  8809  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  8810                           	
  8811  0898                     ___awmod:	
  8812                           	opt	stack 2
  8813                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8814                           	line	8
  8815                           	
  8816  0898                     l10842:	
  8817  0898  1283               	bcf	status, 5	;RP0=0, select bank0
  8818  0899  1303               	bcf	status, 6	;RP1=0, select bank0
  8819  089A  01A6               	clrf	(___awmod@sign)
  8820                           	line	9
  8821  089B  1FA3               	btfss	(___awmod@dividend+1),7
  8822  089C  289E               	goto	u4711
  8823  089D  289F               	goto	u4710
  8824  089E                     u4711:
  8825  089E  28A8               	goto	l10846
  8826  089F                     u4710:
  8827                           	line	10
  8828                           	
  8829  089F                     l10844:	
  8830  089F  09A2               	comf	(___awmod@dividend),f
  8831  08A0  09A3               	comf	(___awmod@dividend+1),f
  8832  08A1  0AA2               	incf	(___awmod@dividend),f
  8833  08A2  1903               	skipnz
  8834  08A3  0AA3               	incf	(___awmod@dividend+1),f
  8835                           	line	11
  8836  08A4  01A6               	clrf	(___awmod@sign)
  8837  08A5  1403               	bsf	status,0
  8838  08A6  0DA6               	rlf	(___awmod@sign),f
  8839  08A7  28A8               	goto	l10846
  8840                           	line	12
  8841                           	
  8842  08A8                     l7702:	
  8843                           	line	13
  8844                           	
  8845  08A8                     l10846:	
  8846  08A8  1FA1               	btfss	(___awmod@divisor+1),7
  8847  08A9  28AB               	goto	u4721
  8848  08AA  28AC               	goto	u4720
  8849  08AB                     u4721:
  8850  08AB  28B2               	goto	l10850
  8851  08AC                     u4720:
  8852                           	line	14
  8853                           	
  8854  08AC                     l10848:	
  8855  08AC  09A0               	comf	(___awmod@divisor),f
  8856  08AD  09A1               	comf	(___awmod@divisor+1),f
  8857  08AE  0AA0               	incf	(___awmod@divisor),f
  8858  08AF  1903               	skipnz
  8859  08B0  0AA1               	incf	(___awmod@divisor+1),f
  8860  08B1  28B2               	goto	l10850
  8861                           	
  8862  08B2                     l7703:	
  8863                           	line	15
  8864                           	
  8865  08B2                     l10850:	
  8866  08B2  0821               	movf	(___awmod@divisor+1),w
  8867  08B3  0420               	iorwf	(___awmod@divisor),w
  8868  08B4  1903               	skipnz
  8869  08B5  28B7               	goto	u4731
  8870  08B6  28B8               	goto	u4730
  8871  08B7                     u4731:
  8872  08B7  28EE               	goto	l10868
  8873  08B8                     u4730:
  8874                           	line	16
  8875                           	
  8876  08B8                     l10852:	
  8877  08B8  01A5               	clrf	(___awmod@counter)
  8878  08B9  1403               	bsf	status,0
  8879  08BA  0DA5               	rlf	(___awmod@counter),f
  8880                           	line	17
  8881  08BB  28C8               	goto	l10858
  8882                           	
  8883  08BC                     l7706:	
  8884                           	line	18
  8885                           	
  8886  08BC                     l10854:	
  8887  08BC  3001               	movlw	01h
  8888                           	
  8889  08BD                     u4745:
  8890  08BD  1003               	clrc
  8891  08BE  0DA0               	rlf	(___awmod@divisor),f
  8892  08BF  0DA1               	rlf	(___awmod@divisor+1),f
  8893  08C0  3EFF               	addlw	-1
  8894  08C1  1D03               	skipz
  8895  08C2  28BD               	goto	u4745
  8896                           	line	19
  8897                           	
  8898  08C3                     l10856:	
  8899  08C3  3001               	movlw	(01h)
  8900  08C4  00A4               	movwf	(??___awmod+0)+0
  8901  08C5  0824               	movf	(??___awmod+0)+0,w
  8902  08C6  07A5               	addwf	(___awmod@counter),f
  8903  08C7  28C8               	goto	l10858
  8904                           	line	20
  8905                           	
  8906  08C8                     l7705:	
  8907                           	line	17
  8908                           	
  8909  08C8                     l10858:	
  8910  08C8  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  8911  08C9  28CB               	goto	u4751
  8912  08CA  28CC               	goto	u4750
  8913  08CB                     u4751:
  8914  08CB  28BC               	goto	l10854
  8915  08CC                     u4750:
  8916  08CC  28CE               	goto	l10860
  8917                           	
  8918  08CD                     l7707:	
  8919  08CD  28CE               	goto	l10860
  8920                           	line	21
  8921                           	
  8922  08CE                     l7708:	
  8923                           	line	22
  8924                           	
  8925  08CE                     l10860:	
  8926  08CE  0821               	movf	(___awmod@divisor+1),w
  8927  08CF  0223               	subwf	(___awmod@dividend+1),w
  8928  08D0  1D03               	skipz
  8929  08D1  28D4               	goto	u4765
  8930  08D2  0820               	movf	(___awmod@divisor),w
  8931  08D3  0222               	subwf	(___awmod@dividend),w
  8932  08D4                     u4765:
  8933  08D4  1C03               	skipc
  8934  08D5  28D7               	goto	u4761
  8935  08D6  28D8               	goto	u4760
  8936  08D7                     u4761:
  8937  08D7  28DF               	goto	l10864
  8938  08D8                     u4760:
  8939                           	line	23
  8940                           	
  8941  08D8                     l10862:	
  8942  08D8  0820               	movf	(___awmod@divisor),w
  8943  08D9  02A2               	subwf	(___awmod@dividend),f
  8944  08DA  0821               	movf	(___awmod@divisor+1),w
  8945  08DB  1C03               	skipc
  8946  08DC  03A3               	decf	(___awmod@dividend+1),f
  8947  08DD  02A3               	subwf	(___awmod@dividend+1),f
  8948  08DE  28DF               	goto	l10864
  8949                           	
  8950  08DF                     l7709:	
  8951                           	line	24
  8952                           	
  8953  08DF                     l10864:	
  8954  08DF  3001               	movlw	01h
  8955                           	
  8956  08E0                     u4775:
  8957  08E0  1003               	clrc
  8958  08E1  0CA1               	rrf	(___awmod@divisor+1),f
  8959  08E2  0CA0               	rrf	(___awmod@divisor),f
  8960  08E3  3EFF               	addlw	-1
  8961  08E4  1D03               	skipz
  8962  08E5  28E0               	goto	u4775
  8963                           	line	25
  8964                           	
  8965  08E6                     l10866:	
  8966  08E6  3001               	movlw	low(01h)
  8967  08E7  02A5               	subwf	(___awmod@counter),f
  8968  08E8  1D03               	btfss	status,2
  8969  08E9  28EB               	goto	u4781
  8970  08EA  28EC               	goto	u4780
  8971  08EB                     u4781:
  8972  08EB  28CE               	goto	l10860
  8973  08EC                     u4780:
  8974  08EC  28EE               	goto	l10868
  8975                           	
  8976  08ED                     l7710:	
  8977  08ED  28EE               	goto	l10868
  8978                           	line	26
  8979                           	
  8980  08EE                     l7704:	
  8981                           	line	27
  8982                           	
  8983  08EE                     l10868:	
  8984  08EE  0826               	movf	(___awmod@sign),w
  8985  08EF  1D03               	skipz
  8986  08F0  28F2               	goto	u4790
  8987  08F1  28F8               	goto	l10872
  8988  08F2                     u4790:
  8989                           	line	28
  8990                           	
  8991  08F2                     l10870:	
  8992  08F2  09A2               	comf	(___awmod@dividend),f
  8993  08F3  09A3               	comf	(___awmod@dividend+1),f
  8994  08F4  0AA2               	incf	(___awmod@dividend),f
  8995  08F5  1903               	skipnz
  8996  08F6  0AA3               	incf	(___awmod@dividend+1),f
  8997  08F7  28F8               	goto	l10872
  8998                           	
  8999  08F8                     l7711:	
  9000                           	line	29
  9001                           	
  9002  08F8                     l10872:	
  9003  08F8  0823               	movf	(___awmod@dividend+1),w
  9004  08F9  01A1               	clrf	(?___awmod+1)
  9005  08FA  07A1               	addwf	(?___awmod+1)
  9006  08FB  0822               	movf	(___awmod@dividend),w
  9007  08FC  01A0               	clrf	(?___awmod)
  9008  08FD  07A0               	addwf	(?___awmod)
  9009                           
  9010  08FE  28FF               	goto	l7712
  9011                           	
  9012  08FF                     l10874:	
  9013                           	line	30
  9014                           	
  9015  08FF                     l7712:	
  9016  08FF  0008               	return
  9017                           	opt stack 0
  9018                           GLOBAL	__end_of___awmod
  9019  0900                     	__end_of___awmod:
  9020 ;; =============== function ___awmod ends ============
  9021                           
  9022                           	signat	___awmod,8314
  9023                           	global	___fttol
  9024                           psect	text1100,local,class=CODE,delta=2
  9025                           global __ptext1100
  9026  0C19                     __ptext1100:
  9027                           
  9028 ;; *************** function ___fttol *****************
  9029 ;; Defined at:
  9030 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;  f1              3    8[BANK0 ] float 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  lval            4   17[BANK0 ] unsigned long 
  9035 ;;  exp1            1   21[BANK0 ] unsigned char 
  9036 ;;  sign1           1   16[BANK0 ] unsigned char 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  4    8[BANK0 ] long 
  9039 ;; Registers used:
  9040 ;;		wreg, status,2, status,0
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9046 ;;      Params:         0       4       0       0       0
  9047 ;;      Locals:         0       6       0       0       0
  9048 ;;      Temps:          0       4       0       0       0
  9049 ;;      Totals:         0      14       0       0       0
  9050 ;;Total ram usage:       14 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    3
  9053 ;; This function calls:
  9054 ;;		Nothing
  9055 ;; This function is called by:
  9056 ;;		_main
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           psect	text1100
  9060                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  9061                           	line	45
  9062                           	global	__size_of___fttol
  9063  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  9064                           	
  9065  0C19                     ___fttol:	
  9066                           	opt	stack 4
  9067                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9068                           	line	49
  9069                           	
  9070  0C19                     l10786:	
  9071  0C19  1283               	bcf	status, 5	;RP0=0, select bank0
  9072  0C1A  1303               	bcf	status, 6	;RP1=0, select bank0
  9073  0C1B  0828               	movf	(___fttol@f1),w
  9074  0C1C  00AC               	movwf	((??___fttol+0)+0)
  9075  0C1D  0829               	movf	(___fttol@f1+1),w
  9076  0C1E  00AD               	movwf	((??___fttol+0)+0+1)
  9077  0C1F  082A               	movf	(___fttol@f1+2),w
  9078  0C20  00AE               	movwf	((??___fttol+0)+0+2)
  9079  0C21  1003               	clrc
  9080  0C22  0D2D               	rlf	(??___fttol+0)+1,w
  9081  0C23  0D2E               	rlf	(??___fttol+0)+2,w
  9082  0C24  00AF               	movwf	(??___fttol+3)+0
  9083  0C25  082F               	movf	(??___fttol+3)+0,w
  9084  0C26  00B5               	movwf	(___fttol@exp1)
  9085  0C27  08B5               	movf	((___fttol@exp1)),f
  9086  0C28  1D03               	skipz
  9087  0C29  2C2B               	goto	u4601
  9088  0C2A  2C2C               	goto	u4600
  9089  0C2B                     u4601:
  9090  0C2B  2C36               	goto	l10792
  9091  0C2C                     u4600:
  9092                           	line	50
  9093                           	
  9094  0C2C                     l10788:	
  9095  0C2C  3000               	movlw	0
  9096  0C2D  00AB               	movwf	(?___fttol+3)
  9097  0C2E  3000               	movlw	0
  9098  0C2F  00AA               	movwf	(?___fttol+2)
  9099  0C30  3000               	movlw	0
  9100  0C31  00A9               	movwf	(?___fttol+1)
  9101  0C32  3000               	movlw	0
  9102  0C33  00A8               	movwf	(?___fttol)
  9103                           
  9104  0C34  2CBE               	goto	l7604
  9105                           	
  9106  0C35                     l10790:	
  9107  0C35  2CBE               	goto	l7604
  9108                           	
  9109  0C36                     l7603:	
  9110                           	line	51
  9111                           	
  9112  0C36                     l10792:	
  9113  0C36  0828               	movf	(___fttol@f1),w
  9114  0C37  00AC               	movwf	((??___fttol+0)+0)
  9115  0C38  0829               	movf	(___fttol@f1+1),w
  9116  0C39  00AD               	movwf	((??___fttol+0)+0+1)
  9117  0C3A  082A               	movf	(___fttol@f1+2),w
  9118  0C3B  00AE               	movwf	((??___fttol+0)+0+2)
  9119  0C3C  3017               	movlw	017h
  9120  0C3D                     u4615:
  9121  0C3D  1003               	clrc
  9122  0C3E  0CAE               	rrf	(??___fttol+0)+2,f
  9123  0C3F  0CAD               	rrf	(??___fttol+0)+1,f
  9124  0C40  0CAC               	rrf	(??___fttol+0)+0,f
  9125  0C41                     u4610:
  9126  0C41  3EFF               	addlw	-1
  9127  0C42  1D03               	skipz
  9128  0C43  2C3D               	goto	u4615
  9129  0C44  082C               	movf	0+(??___fttol+0)+0,w
  9130  0C45  00AF               	movwf	(??___fttol+3)+0
  9131  0C46  082F               	movf	(??___fttol+3)+0,w
  9132  0C47  00B0               	movwf	(___fttol@sign1)
  9133                           	line	52
  9134                           	
  9135  0C48                     l10794:	
  9136  0C48  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
  9137                           	line	53
  9138                           	
  9139  0C49                     l10796:	
  9140  0C49  30FF               	movlw	0FFh
  9141  0C4A  05A8               	andwf	(___fttol@f1),f
  9142  0C4B  30FF               	movlw	0FFh
  9143  0C4C  05A9               	andwf	(___fttol@f1+1),f
  9144  0C4D  3000               	movlw	0
  9145  0C4E  05AA               	andwf	(___fttol@f1+2),f
  9146                           	line	54
  9147                           	
  9148  0C4F                     l10798:	
  9149  0C4F  0828               	movf	(___fttol@f1),w
  9150  0C50  00B1               	movwf	(___fttol@lval)
  9151  0C51  0829               	movf	(___fttol@f1+1),w
  9152  0C52  00B2               	movwf	((___fttol@lval))+1
  9153  0C53  082A               	movf	(___fttol@f1+2),w
  9154  0C54  00B3               	movwf	((___fttol@lval))+2
  9155  0C55  01B4               	clrf	((___fttol@lval))+3
  9156                           	line	55
  9157                           	
  9158  0C56                     l10800:	
  9159  0C56  308E               	movlw	low(08Eh)
  9160  0C57  02B5               	subwf	(___fttol@exp1),f
  9161                           	line	56
  9162                           	
  9163  0C58                     l10802:	
  9164  0C58  1FB5               	btfss	(___fttol@exp1),7
  9165  0C59  2C5B               	goto	u4621
  9166  0C5A  2C5C               	goto	u4620
  9167  0C5B                     u4621:
  9168  0C5B  2C81               	goto	l10812
  9169  0C5C                     u4620:
  9170                           	line	57
  9171                           	
  9172  0C5C                     l10804:	
  9173  0C5C  0835               	movf	(___fttol@exp1),w
  9174  0C5D  3A80               	xorlw	80h
  9175  0C5E  3E8F               	addlw	-((-15)^80h)
  9176  0C5F  1803               	skipnc
  9177  0C60  2C62               	goto	u4631
  9178  0C61  2C63               	goto	u4630
  9179  0C62                     u4631:
  9180  0C62  2C6E               	goto	l10810
  9181  0C63                     u4630:
  9182                           	line	58
  9183                           	
  9184  0C63                     l10806:	
  9185  0C63  3000               	movlw	0
  9186  0C64  00AB               	movwf	(?___fttol+3)
  9187  0C65  3000               	movlw	0
  9188  0C66  00AA               	movwf	(?___fttol+2)
  9189  0C67  3000               	movlw	0
  9190  0C68  00A9               	movwf	(?___fttol+1)
  9191  0C69  3000               	movlw	0
  9192  0C6A  00A8               	movwf	(?___fttol)
  9193                           
  9194  0C6B  2CBE               	goto	l7604
  9195                           	
  9196  0C6C                     l10808:	
  9197  0C6C  2CBE               	goto	l7604
  9198                           	
  9199  0C6D                     l7606:	
  9200  0C6D  2C6E               	goto	l10810
  9201                           	line	59
  9202                           	
  9203  0C6E                     l7607:	
  9204                           	line	60
  9205                           	
  9206  0C6E                     l10810:	
  9207  0C6E  3001               	movlw	01h
  9208  0C6F                     u4645:
  9209  0C6F  1003               	clrc
  9210  0C70  0CB4               	rrf	(___fttol@lval+3),f
  9211  0C71  0CB3               	rrf	(___fttol@lval+2),f
  9212  0C72  0CB2               	rrf	(___fttol@lval+1),f
  9213  0C73  0CB1               	rrf	(___fttol@lval),f
  9214  0C74  3EFF               	addlw	-1
  9215  0C75  1D03               	skipz
  9216  0C76  2C6F               	goto	u4645
  9217                           
  9218                           	line	61
  9219  0C77  3001               	movlw	(01h)
  9220  0C78  00AC               	movwf	(??___fttol+0)+0
  9221  0C79  082C               	movf	(??___fttol+0)+0,w
  9222  0C7A  07B5               	addwf	(___fttol@exp1),f
  9223  0C7B  1D03               	btfss	status,2
  9224  0C7C  2C7E               	goto	u4651
  9225  0C7D  2C7F               	goto	u4650
  9226  0C7E                     u4651:
  9227  0C7E  2C6E               	goto	l10810
  9228  0C7F                     u4650:
  9229  0C7F  2CA5               	goto	l10822
  9230                           	
  9231  0C80                     l7608:	
  9232                           	line	62
  9233  0C80  2CA5               	goto	l10822
  9234                           	
  9235  0C81                     l7605:	
  9236                           	line	63
  9237                           	
  9238  0C81                     l10812:	
  9239  0C81  3018               	movlw	(018h)
  9240  0C82  0235               	subwf	(___fttol@exp1),w
  9241  0C83  1C03               	skipc
  9242  0C84  2C86               	goto	u4661
  9243  0C85  2C87               	goto	u4660
  9244  0C86                     u4661:
  9245  0C86  2C9E               	goto	l10820
  9246  0C87                     u4660:
  9247                           	line	64
  9248                           	
  9249  0C87                     l10814:	
  9250  0C87  3000               	movlw	0
  9251  0C88  00AB               	movwf	(?___fttol+3)
  9252  0C89  3000               	movlw	0
  9253  0C8A  00AA               	movwf	(?___fttol+2)
  9254  0C8B  3000               	movlw	0
  9255  0C8C  00A9               	movwf	(?___fttol+1)
  9256  0C8D  3000               	movlw	0
  9257  0C8E  00A8               	movwf	(?___fttol)
  9258                           
  9259  0C8F  2CBE               	goto	l7604
  9260                           	
  9261  0C90                     l10816:	
  9262  0C90  2CBE               	goto	l7604
  9263                           	
  9264  0C91                     l7610:	
  9265                           	line	65
  9266  0C91  2C9E               	goto	l10820
  9267                           	
  9268  0C92                     l7612:	
  9269                           	line	66
  9270                           	
  9271  0C92                     l10818:	
  9272  0C92  3001               	movlw	01h
  9273  0C93  00AC               	movwf	(??___fttol+0)+0
  9274  0C94                     u4675:
  9275  0C94  1003               	clrc
  9276  0C95  0DB1               	rlf	(___fttol@lval),f
  9277  0C96  0DB2               	rlf	(___fttol@lval+1),f
  9278  0C97  0DB3               	rlf	(___fttol@lval+2),f
  9279  0C98  0DB4               	rlf	(___fttol@lval+3),f
  9280  0C99  0BAC               	decfsz	(??___fttol+0)+0
  9281  0C9A  2C94               	goto	u4675
  9282                           	line	67
  9283  0C9B  3001               	movlw	low(01h)
  9284  0C9C  02B5               	subwf	(___fttol@exp1),f
  9285  0C9D  2C9E               	goto	l10820
  9286                           	line	68
  9287                           	
  9288  0C9E                     l7611:	
  9289                           	line	65
  9290                           	
  9291  0C9E                     l10820:	
  9292  0C9E  08B5               	movf	(___fttol@exp1),f
  9293  0C9F  1D03               	skipz
  9294  0CA0  2CA2               	goto	u4681
  9295  0CA1  2CA3               	goto	u4680
  9296  0CA2                     u4681:
  9297  0CA2  2C92               	goto	l10818
  9298  0CA3                     u4680:
  9299  0CA3  2CA5               	goto	l10822
  9300                           	
  9301  0CA4                     l7613:	
  9302  0CA4  2CA5               	goto	l10822
  9303                           	line	69
  9304                           	
  9305  0CA5                     l7609:	
  9306                           	line	70
  9307                           	
  9308  0CA5                     l10822:	
  9309  0CA5  0830               	movf	(___fttol@sign1),w
  9310  0CA6  1D03               	skipz
  9311  0CA7  2CA9               	goto	u4690
  9312  0CA8  2CB5               	goto	l10826
  9313  0CA9                     u4690:
  9314                           	line	71
  9315                           	
  9316  0CA9                     l10824:	
  9317  0CA9  09B1               	comf	(___fttol@lval),f
  9318  0CAA  09B2               	comf	(___fttol@lval+1),f
  9319  0CAB  09B3               	comf	(___fttol@lval+2),f
  9320  0CAC  09B4               	comf	(___fttol@lval+3),f
  9321  0CAD  0AB1               	incf	(___fttol@lval),f
  9322  0CAE  1903               	skipnz
  9323  0CAF  0AB2               	incf	(___fttol@lval+1),f
  9324  0CB0  1903               	skipnz
  9325  0CB1  0AB3               	incf	(___fttol@lval+2),f
  9326  0CB2  1903               	skipnz
  9327  0CB3  0AB4               	incf	(___fttol@lval+3),f
  9328  0CB4  2CB5               	goto	l10826
  9329                           	
  9330  0CB5                     l7614:	
  9331                           	line	72
  9332                           	
  9333  0CB5                     l10826:	
  9334  0CB5  0834               	movf	(___fttol@lval+3),w
  9335  0CB6  00AB               	movwf	(?___fttol+3)
  9336  0CB7  0833               	movf	(___fttol@lval+2),w
  9337  0CB8  00AA               	movwf	(?___fttol+2)
  9338  0CB9  0832               	movf	(___fttol@lval+1),w
  9339  0CBA  00A9               	movwf	(?___fttol+1)
  9340  0CBB  0831               	movf	(___fttol@lval),w
  9341  0CBC  00A8               	movwf	(?___fttol)
  9342                           
  9343  0CBD  2CBE               	goto	l7604
  9344                           	
  9345  0CBE                     l10828:	
  9346                           	line	73
  9347                           	
  9348  0CBE                     l7604:	
  9349  0CBE  0008               	return
  9350                           	opt stack 0
  9351                           GLOBAL	__end_of___fttol
  9352  0CBF                     	__end_of___fttol:
  9353 ;; =============== function ___fttol ends ============
  9354                           
  9355                           	signat	___fttol,4220
  9356                           	global	___ftpack
  9357                           psect	text1101,local,class=CODE,delta=2
  9358                           global __ptext1101
  9359  0A64                     __ptext1101:
  9360                           
  9361 ;; *************** function ___ftpack *****************
  9362 ;; Defined at:
  9363 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;  arg             3    0[BANK0 ] unsigned um
  9366 ;;  exp             1    3[BANK0 ] unsigned char 
  9367 ;;  sign            1    4[BANK0 ] unsigned char 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;		None
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  3    0[BANK0 ] float 
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9379 ;;      Params:         0       5       0       0       0
  9380 ;;      Locals:         0       0       0       0       0
  9381 ;;      Temps:          0       3       0       0       0
  9382 ;;      Totals:         0       8       0       0       0
  9383 ;;Total ram usage:        8 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; Hardware stack levels required when called:    3
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		___ftmul
  9390 ;;		___awtoft
  9391 ;;		___ftadd
  9392 ;;		___ftdiv
  9393 ;;		___lbtoft
  9394 ;;		___abtoft
  9395 ;;		___lwtoft
  9396 ;;		___altoft
  9397 ;;		___lltoft
  9398 ;;		___attoft
  9399 ;;		___lttoft
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           psect	text1101
  9403                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  9404                           	line	63
  9405                           	global	__size_of___ftpack
  9406  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  9407                           	
  9408  0A64                     ___ftpack:	
  9409                           	opt	stack 3
  9410                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9411                           	line	64
  9412                           	
  9413  0A64                     l10712:	
  9414  0A64  1283               	bcf	status, 5	;RP0=0, select bank0
  9415  0A65  1303               	bcf	status, 6	;RP1=0, select bank0
  9416  0A66  0823               	movf	(___ftpack@exp),w
  9417  0A67  1D03               	skipz
  9418  0A68  2A6A               	goto	u4410
  9419  0A69  2A72               	goto	l10716
  9420  0A6A                     u4410:
  9421                           	
  9422  0A6A                     l10714:	
  9423  0A6A  0822               	movf	(___ftpack@arg+2),w
  9424  0A6B  0421               	iorwf	(___ftpack@arg+1),w
  9425  0A6C  0420               	iorwf	(___ftpack@arg),w
  9426  0A6D  1D03               	skipz
  9427  0A6E  2A70               	goto	u4421
  9428  0A6F  2A71               	goto	u4420
  9429  0A70                     u4421:
  9430  0A70  2A88               	goto	l10722
  9431  0A71                     u4420:
  9432  0A71  2A72               	goto	l10716
  9433                           	
  9434  0A72                     l7828:	
  9435                           	line	65
  9436                           	
  9437  0A72                     l10716:	
  9438  0A72  3000               	movlw	0x0
  9439  0A73  00A0               	movwf	(?___ftpack)
  9440  0A74  3000               	movlw	0x0
  9441  0A75  00A1               	movwf	(?___ftpack+1)
  9442  0A76  3000               	movlw	0x0
  9443  0A77  00A2               	movwf	(?___ftpack+2)
  9444  0A78  2AE0               	goto	l7829
  9445                           	
  9446  0A79                     l10718:	
  9447  0A79  2AE0               	goto	l7829
  9448                           	
  9449  0A7A                     l7826:	
  9450                           	line	66
  9451  0A7A  2A88               	goto	l10722
  9452                           	
  9453  0A7B                     l7831:	
  9454                           	line	67
  9455                           	
  9456  0A7B                     l10720:	
  9457  0A7B  3001               	movlw	(01h)
  9458  0A7C  00A5               	movwf	(??___ftpack+0)+0
  9459  0A7D  0825               	movf	(??___ftpack+0)+0,w
  9460  0A7E  07A3               	addwf	(___ftpack@exp),f
  9461                           	line	68
  9462  0A7F  3001               	movlw	01h
  9463  0A80                     u4435:
  9464  0A80  1003               	clrc
  9465  0A81  0CA2               	rrf	(___ftpack@arg+2),f
  9466  0A82  0CA1               	rrf	(___ftpack@arg+1),f
  9467  0A83  0CA0               	rrf	(___ftpack@arg),f
  9468  0A84  3EFF               	addlw	-1
  9469  0A85  1D03               	skipz
  9470  0A86  2A80               	goto	u4435
  9471                           
  9472  0A87  2A88               	goto	l10722
  9473                           	line	69
  9474                           	
  9475  0A88                     l7830:	
  9476                           	line	66
  9477                           	
  9478  0A88                     l10722:	
  9479  0A88  30FE               	movlw	low highword(0FE0000h)
  9480  0A89  0522               	andwf	(___ftpack@arg+2),w
  9481  0A8A  1D03               	btfss	status,2
  9482  0A8B  2A8D               	goto	u4441
  9483  0A8C  2A8E               	goto	u4440
  9484  0A8D                     u4441:
  9485  0A8D  2A7B               	goto	l10720
  9486  0A8E                     u4440:
  9487  0A8E  2AA6               	goto	l7833
  9488                           	
  9489  0A8F                     l7832:	
  9490                           	line	70
  9491  0A8F  2AA6               	goto	l7833
  9492                           	
  9493  0A90                     l7834:	
  9494                           	line	71
  9495                           	
  9496  0A90                     l10724:	
  9497  0A90  3001               	movlw	(01h)
  9498  0A91  00A5               	movwf	(??___ftpack+0)+0
  9499  0A92  0825               	movf	(??___ftpack+0)+0,w
  9500  0A93  07A3               	addwf	(___ftpack@exp),f
  9501                           	line	72
  9502                           	
  9503  0A94                     l10726:	
  9504  0A94  3001               	movlw	01h
  9505  0A95  07A0               	addwf	(___ftpack@arg),f
  9506  0A96  3000               	movlw	0
  9507  0A97  1803               	skipnc
  9508  0A98  3001               movlw 1
  9509  0A99  07A1               	addwf	(___ftpack@arg+1),f
  9510  0A9A  3000               	movlw	0
  9511  0A9B  1803               	skipnc
  9512  0A9C  3001               movlw 1
  9513  0A9D  07A2               	addwf	(___ftpack@arg+2),f
  9514                           	line	73
  9515                           	
  9516  0A9E                     l10728:	
  9517  0A9E  3001               	movlw	01h
  9518  0A9F                     u4455:
  9519  0A9F  1003               	clrc
  9520  0AA0  0CA2               	rrf	(___ftpack@arg+2),f
  9521  0AA1  0CA1               	rrf	(___ftpack@arg+1),f
  9522  0AA2  0CA0               	rrf	(___ftpack@arg),f
  9523  0AA3  3EFF               	addlw	-1
  9524  0AA4  1D03               	skipz
  9525  0AA5  2A9F               	goto	u4455
  9526                           
  9527                           	line	74
  9528                           	
  9529  0AA6                     l7833:	
  9530                           	line	70
  9531  0AA6  30FF               	movlw	low highword(0FF0000h)
  9532  0AA7  0522               	andwf	(___ftpack@arg+2),w
  9533  0AA8  1D03               	btfss	status,2
  9534  0AA9  2AAB               	goto	u4461
  9535  0AAA  2AAC               	goto	u4460
  9536  0AAB                     u4461:
  9537  0AAB  2A90               	goto	l10724
  9538  0AAC                     u4460:
  9539  0AAC  2AB9               	goto	l10732
  9540                           	
  9541  0AAD                     l7835:	
  9542                           	line	75
  9543  0AAD  2AB9               	goto	l10732
  9544                           	
  9545  0AAE                     l7837:	
  9546                           	line	76
  9547                           	
  9548  0AAE                     l10730:	
  9549  0AAE  3001               	movlw	low(01h)
  9550  0AAF  02A3               	subwf	(___ftpack@exp),f
  9551                           	line	77
  9552  0AB0  3001               	movlw	01h
  9553  0AB1                     u4475:
  9554  0AB1  1003               	clrc
  9555  0AB2  0DA0               	rlf	(___ftpack@arg),f
  9556  0AB3  0DA1               	rlf	(___ftpack@arg+1),f
  9557  0AB4  0DA2               	rlf	(___ftpack@arg+2),f
  9558  0AB5  3EFF               	addlw	-1
  9559  0AB6  1D03               	skipz
  9560  0AB7  2AB1               	goto	u4475
  9561  0AB8  2AB9               	goto	l10732
  9562                           	line	78
  9563                           	
  9564  0AB9                     l7836:	
  9565                           	line	75
  9566                           	
  9567  0AB9                     l10732:	
  9568  0AB9  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  9569  0ABA  2ABC               	goto	u4481
  9570  0ABB  2ABD               	goto	u4480
  9571  0ABC                     u4481:
  9572  0ABC  2AAE               	goto	l10730
  9573  0ABD                     u4480:
  9574                           	
  9575  0ABD                     l7838:	
  9576                           	line	79
  9577  0ABD  1823               	btfsc	(___ftpack@exp),(0)&7
  9578  0ABE  2AC0               	goto	u4491
  9579  0ABF  2AC1               	goto	u4490
  9580  0AC0                     u4491:
  9581  0AC0  2AC7               	goto	l7839
  9582  0AC1                     u4490:
  9583                           	line	80
  9584                           	
  9585  0AC1                     l10734:	
  9586  0AC1  30FF               	movlw	0FFh
  9587  0AC2  05A0               	andwf	(___ftpack@arg),f
  9588  0AC3  307F               	movlw	07Fh
  9589  0AC4  05A1               	andwf	(___ftpack@arg+1),f
  9590  0AC5  30FF               	movlw	0FFh
  9591  0AC6  05A2               	andwf	(___ftpack@arg+2),f
  9592                           	
  9593  0AC7                     l7839:	
  9594                           	line	81
  9595  0AC7  1003               	clrc
  9596  0AC8  0CA3               	rrf	(___ftpack@exp),f
  9597                           
  9598                           	line	82
  9599                           	
  9600  0AC9                     l10736:	
  9601  0AC9  0823               	movf	(___ftpack@exp),w
  9602  0ACA  00A5               	movwf	((??___ftpack+0)+0)
  9603  0ACB  01A6               	clrf	((??___ftpack+0)+0+1)
  9604  0ACC  01A7               	clrf	((??___ftpack+0)+0+2)
  9605  0ACD  3010               	movlw	010h
  9606  0ACE                     u4505:
  9607  0ACE  1003               	clrc
  9608  0ACF  0DA5               	rlf	(??___ftpack+0)+0,f
  9609  0AD0  0DA6               	rlf	(??___ftpack+0)+1,f
  9610  0AD1  0DA7               	rlf	(??___ftpack+0)+2,f
  9611  0AD2                     u4500:
  9612  0AD2  3EFF               	addlw	-1
  9613  0AD3  1D03               	skipz
  9614  0AD4  2ACE               	goto	u4505
  9615  0AD5  0825               	movf	0+(??___ftpack+0)+0,w
  9616  0AD6  04A0               	iorwf	(___ftpack@arg),f
  9617  0AD7  0826               	movf	1+(??___ftpack+0)+0,w
  9618  0AD8  04A1               	iorwf	(___ftpack@arg+1),f
  9619  0AD9  0827               	movf	2+(??___ftpack+0)+0,w
  9620  0ADA  04A2               	iorwf	(___ftpack@arg+2),f
  9621                           	line	83
  9622                           	
  9623  0ADB                     l10738:	
  9624  0ADB  0824               	movf	(___ftpack@sign),w
  9625  0ADC  1D03               	skipz
  9626  0ADD  2ADF               	goto	u4510
  9627  0ADE  2AE0               	goto	l7840
  9628  0ADF                     u4510:
  9629                           	line	84
  9630                           	
  9631  0ADF                     l10740:	
  9632  0ADF  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  9633                           	
  9634  0AE0                     l7840:	
  9635                           	line	85
  9636                           	line	86
  9637                           	
  9638  0AE0                     l7829:	
  9639  0AE0  0008               	return
  9640                           	opt stack 0
  9641                           GLOBAL	__end_of___ftpack
  9642  0AE1                     	__end_of___ftpack:
  9643 ;; =============== function ___ftpack ends ============
  9644                           
  9645                           	signat	___ftpack,12411
  9646                           	global	___lwmod
  9647                           psect	text1102,local,class=CODE,delta=2
  9648                           global __ptext1102
  9649  168D                     __ptext1102:
  9650                           
  9651 ;; *************** function ___lwmod *****************
  9652 ;; Defined at:
  9653 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  divisor         2   14[BANK0 ] unsigned int 
  9656 ;;  dividend        2   16[BANK0 ] unsigned int 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  counter         1   19[BANK0 ] unsigned char 
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  2   14[BANK0 ] unsigned int 
  9661 ;; Registers used:
  9662 ;;		wreg, status,2, status,0
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9668 ;;      Params:         0       4       0       0       0
  9669 ;;      Locals:         0       1       0       0       0
  9670 ;;      Temps:          0       1       0       0       0
  9671 ;;      Totals:         0       6       0       0       0
  9672 ;;Total ram usage:        6 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; Hardware stack levels required when called:    3
  9675 ;; This function calls:
  9676 ;;		Nothing
  9677 ;; This function is called by:
  9678 ;;		_sprintf
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           psect	text1102
  9682                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9683                           	line	5
  9684                           	global	__size_of___lwmod
  9685  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  9686                           	
  9687  168D                     ___lwmod:	
  9688                           	opt	stack 1
  9689                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9690                           	line	8
  9691                           	
  9692  168D                     l10620:	
  9693  168D  1283               	bcf	status, 5	;RP0=0, select bank0
  9694  168E  1303               	bcf	status, 6	;RP1=0, select bank0
  9695  168F  082F               	movf	(___lwmod@divisor+1),w
  9696  1690  042E               	iorwf	(___lwmod@divisor),w
  9697  1691  1903               	skipnz
  9698  1692  2E94               	goto	u4111
  9699  1693  2E95               	goto	u4110
  9700  1694                     u4111:
  9701  1694  2ECB               	goto	l10638
  9702  1695                     u4110:
  9703                           	line	9
  9704                           	
  9705  1695                     l10622:	
  9706  1695  01B3               	clrf	(___lwmod@counter)
  9707  1696  1403               	bsf	status,0
  9708  1697  0DB3               	rlf	(___lwmod@counter),f
  9709                           	line	10
  9710  1698  2EA5               	goto	l10628
  9711                           	
  9712  1699                     l7512:	
  9713                           	line	11
  9714                           	
  9715  1699                     l10624:	
  9716  1699  3001               	movlw	01h
  9717                           	
  9718  169A                     u4125:
  9719  169A  1003               	clrc
  9720  169B  0DAE               	rlf	(___lwmod@divisor),f
  9721  169C  0DAF               	rlf	(___lwmod@divisor+1),f
  9722  169D  3EFF               	addlw	-1
  9723  169E  1D03               	skipz
  9724  169F  2E9A               	goto	u4125
  9725                           	line	12
  9726                           	
  9727  16A0                     l10626:	
  9728  16A0  3001               	movlw	(01h)
  9729  16A1  00B2               	movwf	(??___lwmod+0)+0
  9730  16A2  0832               	movf	(??___lwmod+0)+0,w
  9731  16A3  07B3               	addwf	(___lwmod@counter),f
  9732  16A4  2EA5               	goto	l10628
  9733                           	line	13
  9734                           	
  9735  16A5                     l7511:	
  9736                           	line	10
  9737                           	
  9738  16A5                     l10628:	
  9739  16A5  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  9740  16A6  2EA8               	goto	u4131
  9741  16A7  2EA9               	goto	u4130
  9742  16A8                     u4131:
  9743  16A8  2E99               	goto	l10624
  9744  16A9                     u4130:
  9745  16A9  2EAB               	goto	l10630
  9746                           	
  9747  16AA                     l7513:	
  9748  16AA  2EAB               	goto	l10630
  9749                           	line	14
  9750                           	
  9751  16AB                     l7514:	
  9752                           	line	15
  9753                           	
  9754  16AB                     l10630:	
  9755  16AB  082F               	movf	(___lwmod@divisor+1),w
  9756  16AC  0231               	subwf	(___lwmod@dividend+1),w
  9757  16AD  1D03               	skipz
  9758  16AE  2EB1               	goto	u4145
  9759  16AF  082E               	movf	(___lwmod@divisor),w
  9760  16B0  0230               	subwf	(___lwmod@dividend),w
  9761  16B1                     u4145:
  9762  16B1  1C03               	skipc
  9763  16B2  2EB4               	goto	u4141
  9764  16B3  2EB5               	goto	u4140
  9765  16B4                     u4141:
  9766  16B4  2EBC               	goto	l10634
  9767  16B5                     u4140:
  9768                           	line	16
  9769                           	
  9770  16B5                     l10632:	
  9771  16B5  082E               	movf	(___lwmod@divisor),w
  9772  16B6  02B0               	subwf	(___lwmod@dividend),f
  9773  16B7  082F               	movf	(___lwmod@divisor+1),w
  9774  16B8  1C03               	skipc
  9775  16B9  03B1               	decf	(___lwmod@dividend+1),f
  9776  16BA  02B1               	subwf	(___lwmod@dividend+1),f
  9777  16BB  2EBC               	goto	l10634
  9778                           	
  9779  16BC                     l7515:	
  9780                           	line	17
  9781                           	
  9782  16BC                     l10634:	
  9783  16BC  3001               	movlw	01h
  9784                           	
  9785  16BD                     u4155:
  9786  16BD  1003               	clrc
  9787  16BE  0CAF               	rrf	(___lwmod@divisor+1),f
  9788  16BF  0CAE               	rrf	(___lwmod@divisor),f
  9789  16C0  3EFF               	addlw	-1
  9790  16C1  1D03               	skipz
  9791  16C2  2EBD               	goto	u4155
  9792                           	line	18
  9793                           	
  9794  16C3                     l10636:	
  9795  16C3  3001               	movlw	low(01h)
  9796  16C4  02B3               	subwf	(___lwmod@counter),f
  9797  16C5  1D03               	btfss	status,2
  9798  16C6  2EC8               	goto	u4161
  9799  16C7  2EC9               	goto	u4160
  9800  16C8                     u4161:
  9801  16C8  2EAB               	goto	l10630
  9802  16C9                     u4160:
  9803  16C9  2ECB               	goto	l10638
  9804                           	
  9805  16CA                     l7516:	
  9806  16CA  2ECB               	goto	l10638
  9807                           	line	19
  9808                           	
  9809  16CB                     l7510:	
  9810                           	line	20
  9811                           	
  9812  16CB                     l10638:	
  9813  16CB  0831               	movf	(___lwmod@dividend+1),w
  9814  16CC  01AF               	clrf	(?___lwmod+1)
  9815  16CD  07AF               	addwf	(?___lwmod+1)
  9816  16CE  0830               	movf	(___lwmod@dividend),w
  9817  16CF  01AE               	clrf	(?___lwmod)
  9818  16D0  07AE               	addwf	(?___lwmod)
  9819                           
  9820  16D1  2ED2               	goto	l7517
  9821                           	
  9822  16D2                     l10640:	
  9823                           	line	21
  9824                           	
  9825  16D2                     l7517:	
  9826  16D2  0008               	return
  9827                           	opt stack 0
  9828                           GLOBAL	__end_of___lwmod
  9829  16D3                     	__end_of___lwmod:
  9830 ;; =============== function ___lwmod ends ============
  9831                           
  9832                           	signat	___lwmod,8314
  9833                           	global	___lwdiv
  9834                           psect	text1103,local,class=CODE,delta=2
  9835                           global __ptext1103
  9836  1760                     __ptext1103:
  9837                           
  9838 ;; *************** function ___lwdiv *****************
  9839 ;; Defined at:
  9840 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  divisor         2    6[BANK0 ] unsigned int 
  9843 ;;  dividend        2    8[BANK0 ] unsigned int 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  quotient        2   11[BANK0 ] unsigned int 
  9846 ;;  counter         1   13[BANK0 ] unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2    6[BANK0 ] unsigned int 
  9849 ;; Registers used:
  9850 ;;		wreg, status,2, status,0
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9856 ;;      Params:         0       4       0       0       0
  9857 ;;      Locals:         0       3       0       0       0
  9858 ;;      Temps:          0       1       0       0       0
  9859 ;;      Totals:         0       8       0       0       0
  9860 ;;Total ram usage:        8 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    3
  9863 ;; This function calls:
  9864 ;;		Nothing
  9865 ;; This function is called by:
  9866 ;;		_readAvgDistance
  9867 ;;		_ADCconvert
  9868 ;;		_sprintf
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           psect	text1103
  9872                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9873                           	line	5
  9874                           	global	__size_of___lwdiv
  9875  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  9876                           	
  9877  1760                     ___lwdiv:	
  9878                           	opt	stack 1
  9879                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9880                           	line	9
  9881                           	
  9882  1760                     l10594:	
  9883  1760  1283               	bcf	status, 5	;RP0=0, select bank0
  9884  1761  1303               	bcf	status, 6	;RP1=0, select bank0
  9885  1762  01AB               	clrf	(___lwdiv@quotient)
  9886  1763  01AC               	clrf	(___lwdiv@quotient+1)
  9887                           	line	10
  9888                           	
  9889  1764                     l10596:	
  9890  1764  0827               	movf	(___lwdiv@divisor+1),w
  9891  1765  0426               	iorwf	(___lwdiv@divisor),w
  9892  1766  1903               	skipnz
  9893  1767  2F69               	goto	u4041
  9894  1768  2F6A               	goto	u4040
  9895  1769                     u4041:
  9896  1769  2FA8               	goto	l10616
  9897  176A                     u4040:
  9898                           	line	11
  9899                           	
  9900  176A                     l10598:	
  9901  176A  01AD               	clrf	(___lwdiv@counter)
  9902  176B  1403               	bsf	status,0
  9903  176C  0DAD               	rlf	(___lwdiv@counter),f
  9904                           	line	12
  9905  176D  2F7A               	goto	l10604
  9906                           	
  9907  176E                     l7502:	
  9908                           	line	13
  9909                           	
  9910  176E                     l10600:	
  9911  176E  3001               	movlw	01h
  9912                           	
  9913  176F                     u4055:
  9914  176F  1003               	clrc
  9915  1770  0DA6               	rlf	(___lwdiv@divisor),f
  9916  1771  0DA7               	rlf	(___lwdiv@divisor+1),f
  9917  1772  3EFF               	addlw	-1
  9918  1773  1D03               	skipz
  9919  1774  2F6F               	goto	u4055
  9920                           	line	14
  9921                           	
  9922  1775                     l10602:	
  9923  1775  3001               	movlw	(01h)
  9924  1776  00AA               	movwf	(??___lwdiv+0)+0
  9925  1777  082A               	movf	(??___lwdiv+0)+0,w
  9926  1778  07AD               	addwf	(___lwdiv@counter),f
  9927  1779  2F7A               	goto	l10604
  9928                           	line	15
  9929                           	
  9930  177A                     l7501:	
  9931                           	line	12
  9932                           	
  9933  177A                     l10604:	
  9934  177A  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  9935  177B  2F7D               	goto	u4061
  9936  177C  2F7E               	goto	u4060
  9937  177D                     u4061:
  9938  177D  2F6E               	goto	l10600
  9939  177E                     u4060:
  9940  177E  2F80               	goto	l10606
  9941                           	
  9942  177F                     l7503:	
  9943  177F  2F80               	goto	l10606
  9944                           	line	16
  9945                           	
  9946  1780                     l7504:	
  9947                           	line	17
  9948                           	
  9949  1780                     l10606:	
  9950  1780  3001               	movlw	01h
  9951                           	
  9952  1781                     u4075:
  9953  1781  1003               	clrc
  9954  1782  0DAB               	rlf	(___lwdiv@quotient),f
  9955  1783  0DAC               	rlf	(___lwdiv@quotient+1),f
  9956  1784  3EFF               	addlw	-1
  9957  1785  1D03               	skipz
  9958  1786  2F81               	goto	u4075
  9959                           	line	18
  9960  1787  0827               	movf	(___lwdiv@divisor+1),w
  9961  1788  0229               	subwf	(___lwdiv@dividend+1),w
  9962  1789  1D03               	skipz
  9963  178A  2F8D               	goto	u4085
  9964  178B  0826               	movf	(___lwdiv@divisor),w
  9965  178C  0228               	subwf	(___lwdiv@dividend),w
  9966  178D                     u4085:
  9967  178D  1C03               	skipc
  9968  178E  2F90               	goto	u4081
  9969  178F  2F91               	goto	u4080
  9970  1790                     u4081:
  9971  1790  2F99               	goto	l10612
  9972  1791                     u4080:
  9973                           	line	19
  9974                           	
  9975  1791                     l10608:	
  9976  1791  0826               	movf	(___lwdiv@divisor),w
  9977  1792  02A8               	subwf	(___lwdiv@dividend),f
  9978  1793  0827               	movf	(___lwdiv@divisor+1),w
  9979  1794  1C03               	skipc
  9980  1795  03A9               	decf	(___lwdiv@dividend+1),f
  9981  1796  02A9               	subwf	(___lwdiv@dividend+1),f
  9982                           	line	20
  9983                           	
  9984  1797                     l10610:	
  9985  1797  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  9986  1798  2F99               	goto	l10612
  9987                           	line	21
  9988                           	
  9989  1799                     l7505:	
  9990                           	line	22
  9991                           	
  9992  1799                     l10612:	
  9993  1799  3001               	movlw	01h
  9994                           	
  9995  179A                     u4095:
  9996  179A  1003               	clrc
  9997  179B  0CA7               	rrf	(___lwdiv@divisor+1),f
  9998  179C  0CA6               	rrf	(___lwdiv@divisor),f
  9999  179D  3EFF               	addlw	-1
 10000  179E  1D03               	skipz
 10001  179F  2F9A               	goto	u4095
 10002                           	line	23
 10003                           	
 10004  17A0                     l10614:	
 10005  17A0  3001               	movlw	low(01h)
 10006  17A1  02AD               	subwf	(___lwdiv@counter),f
 10007  17A2  1D03               	btfss	status,2
 10008  17A3  2FA5               	goto	u4101
 10009  17A4  2FA6               	goto	u4100
 10010  17A5                     u4101:
 10011  17A5  2F80               	goto	l10606
 10012  17A6                     u4100:
 10013  17A6  2FA8               	goto	l10616
 10014                           	
 10015  17A7                     l7506:	
 10016  17A7  2FA8               	goto	l10616
 10017                           	line	24
 10018                           	
 10019  17A8                     l7500:	
 10020                           	line	25
 10021                           	
 10022  17A8                     l10616:	
 10023  17A8  082C               	movf	(___lwdiv@quotient+1),w
 10024  17A9  01A7               	clrf	(?___lwdiv+1)
 10025  17AA  07A7               	addwf	(?___lwdiv+1)
 10026  17AB  082B               	movf	(___lwdiv@quotient),w
 10027  17AC  01A6               	clrf	(?___lwdiv)
 10028  17AD  07A6               	addwf	(?___lwdiv)
 10029                           
 10030  17AE  2FAF               	goto	l7507
 10031                           	
 10032  17AF                     l10618:	
 10033                           	line	26
 10034                           	
 10035  17AF                     l7507:	
 10036  17AF  0008               	return
 10037                           	opt stack 0
 10038                           GLOBAL	__end_of___lwdiv
 10039  17B0                     	__end_of___lwdiv:
 10040 ;; =============== function ___lwdiv ends ============
 10041                           
 10042                           	signat	___lwdiv,8314
 10043                           	global	___wmul
 10044                           psect	text1104,local,class=CODE,delta=2
 10045                           global __ptext1104
 10046  14A5                     __ptext1104:
 10047                           
 10048 ;; *************** function ___wmul *****************
 10049 ;; Defined at:
 10050 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10053 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;  product         2    4[BANK0 ] unsigned int 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  2    0[BANK0 ] unsigned int 
 10058 ;; Registers used:
 10059 ;;		wreg, status,2, status,0
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10065 ;;      Params:         0       4       0       0       0
 10066 ;;      Locals:         0       2       0       0       0
 10067 ;;      Temps:          0       0       0       0       0
 10068 ;;      Totals:         0       6       0       0       0
 10069 ;;Total ram usage:        6 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; Hardware stack levels required when called:    3
 10072 ;; This function calls:
 10073 ;;		Nothing
 10074 ;; This function is called by:
 10075 ;;		_ADCconvert
 10076 ;;		_abs
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           psect	text1104
 10080                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10081                           	line	3
 10082                           	global	__size_of___wmul
 10083  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 10084                           	
 10085  14A5                     ___wmul:	
 10086                           	opt	stack 2
 10087                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10088                           	line	4
 10089                           	
 10090  14A5                     l10582:	
 10091  14A5  1283               	bcf	status, 5	;RP0=0, select bank0
 10092  14A6  1303               	bcf	status, 6	;RP1=0, select bank0
 10093  14A7  01A4               	clrf	(___wmul@product)
 10094  14A8  01A5               	clrf	(___wmul@product+1)
 10095  14A9  2CAA               	goto	l10584
 10096                           	line	6
 10097                           	
 10098  14AA                     l7494:	
 10099                           	line	7
 10100                           	
 10101  14AA                     l10584:	
 10102  14AA  1C20               	btfss	(___wmul@multiplier),(0)&7
 10103  14AB  2CAD               	goto	u4001
 10104  14AC  2CAE               	goto	u4000
 10105  14AD                     u4001:
 10106  14AD  2CB4               	goto	l7495
 10107  14AE                     u4000:
 10108                           	line	8
 10109                           	
 10110  14AE                     l10586:	
 10111  14AE  0822               	movf	(___wmul@multiplicand),w
 10112  14AF  07A4               	addwf	(___wmul@product),f
 10113  14B0  1803               	skipnc
 10114  14B1  0AA5               	incf	(___wmul@product+1),f
 10115  14B2  0823               	movf	(___wmul@multiplicand+1),w
 10116  14B3  07A5               	addwf	(___wmul@product+1),f
 10117                           	
 10118  14B4                     l7495:	
 10119                           	line	9
 10120  14B4  3001               	movlw	01h
 10121                           	
 10122  14B5                     u4015:
 10123  14B5  1003               	clrc
 10124  14B6  0DA2               	rlf	(___wmul@multiplicand),f
 10125  14B7  0DA3               	rlf	(___wmul@multiplicand+1),f
 10126  14B8  3EFF               	addlw	-1
 10127  14B9  1D03               	skipz
 10128  14BA  2CB5               	goto	u4015
 10129                           	line	10
 10130                           	
 10131  14BB                     l10588:	
 10132  14BB  3001               	movlw	01h
 10133                           	
 10134  14BC                     u4025:
 10135  14BC  1003               	clrc
 10136  14BD  0CA1               	rrf	(___wmul@multiplier+1),f
 10137  14BE  0CA0               	rrf	(___wmul@multiplier),f
 10138  14BF  3EFF               	addlw	-1
 10139  14C0  1D03               	skipz
 10140  14C1  2CBC               	goto	u4025
 10141                           	line	11
 10142  14C2  0821               	movf	((___wmul@multiplier+1)),w
 10143  14C3  0420               	iorwf	((___wmul@multiplier)),w
 10144  14C4  1D03               	skipz
 10145  14C5  2CC7               	goto	u4031
 10146  14C6  2CC8               	goto	u4030
 10147  14C7                     u4031:
 10148  14C7  2CAA               	goto	l10584
 10149  14C8                     u4030:
 10150  14C8  2CC9               	goto	l10590
 10151                           	
 10152  14C9                     l7496:	
 10153                           	line	12
 10154                           	
 10155  14C9                     l10590:	
 10156  14C9  0825               	movf	(___wmul@product+1),w
 10157  14CA  01A1               	clrf	(?___wmul+1)
 10158  14CB  07A1               	addwf	(?___wmul+1)
 10159  14CC  0824               	movf	(___wmul@product),w
 10160  14CD  01A0               	clrf	(?___wmul)
 10161  14CE  07A0               	addwf	(?___wmul)
 10162                           
 10163  14CF  2CD0               	goto	l7497
 10164                           	
 10165  14D0                     l10592:	
 10166                           	line	13
 10167                           	
 10168  14D0                     l7497:	
 10169  14D0  0008               	return
 10170                           	opt stack 0
 10171                           GLOBAL	__end_of___wmul
 10172  14D1                     	__end_of___wmul:
 10173 ;; =============== function ___wmul ends ============
 10174                           
 10175                           	signat	___wmul,8314
 10176                           	global	_ser_isrx
 10177                           psect	text1105,local,class=CODE,delta=2
 10178                           global __ptext1105
 10179  13CE                     __ptext1105:
 10180                           
 10181 ;; *************** function _ser_isrx *****************
 10182 ;; Defined at:
 10183 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;		None
 10186 ;; Auto vars:     Size  Location     Type
 10187 ;;		None
 10188 ;; Return value:  Size  Location     Type
 10189 ;;		None               void
 10190 ;; Registers used:
 10191 ;;		wreg, status,2, status,0
 10192 ;; Tracked objects:
 10193 ;;		On entry : 0/0
 10194 ;;		On exit  : 0/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10197 ;;      Params:         0       0       0       0       0
 10198 ;;      Locals:         0       0       0       0       0
 10199 ;;      Temps:          0       0       0       0       0
 10200 ;;      Totals:         0       0       0       0       0
 10201 ;;Total ram usage:        0 bytes
 10202 ;; Hardware stack levels used:    1
 10203 ;; Hardware stack levels required when called:    3
 10204 ;; This function calls:
 10205 ;;		Nothing
 10206 ;; This function is called by:
 10207 ;;		_ser_getch
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           psect	text1105
 10211                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 10212                           	line	45
 10213                           	global	__size_of_ser_isrx
 10214  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 10215                           	
 10216  13CE                     _ser_isrx:	
 10217                           	opt	stack 1
 10218                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 10219                           	line	46
 10220                           	
 10221  13CE                     l10534:	
 10222                           ;ser.c: 46: if(OERR) {
 10223  13CE  1283               	bcf	status, 5	;RP0=0, select bank0
 10224  13CF  1303               	bcf	status, 6	;RP1=0, select bank0
 10225  13D0  1C98               	btfss	(193/8),(193)&7
 10226  13D1  2BD3               	goto	u3931
 10227  13D2  2BD4               	goto	u3930
 10228  13D3                     u3931:
 10229  13D3  2BD9               	goto	l10542
 10230  13D4                     u3930:
 10231                           	line	47
 10232                           	
 10233  13D4                     l10536:	
 10234                           ;ser.c: 47: CREN = 0;
 10235  13D4  1218               	bcf	(196/8),(196)&7
 10236                           	line	48
 10237                           ;ser.c: 48: CREN = 1;
 10238  13D5  1618               	bsf	(196/8),(196)&7
 10239                           	line	49
 10240                           	
 10241  13D6                     l10538:	
 10242                           ;ser.c: 49: return 0;
 10243  13D6  1003               	clrc
 10244                           	
 10245  13D7  2BE6               	goto	l6749
 10246                           	
 10247  13D8                     l10540:	
 10248  13D8  2BE6               	goto	l6749
 10249                           	line	50
 10250                           	
 10251  13D9                     l6748:	
 10252                           	line	51
 10253                           	
 10254  13D9                     l10542:	
 10255                           ;ser.c: 50: }
 10256                           ;ser.c: 51: return (rxiptr!=rxoptr);
 10257  13D9  1683               	bsf	status, 5	;RP0=1, select bank1
 10258  13DA  1303               	bcf	status, 6	;RP1=0, select bank1
 10259  13DB  0855               	movf	(_rxiptr)^080h,w	;volatile
 10260  13DC  0656               	xorwf	(_rxoptr)^080h,w	;volatile
 10261  13DD  1D03               	skipz
 10262  13DE  2BE0               	goto	u3941
 10263  13DF  2BE1               	goto	u3940
 10264  13E0                     u3941:
 10265  13E0  2BE3               	goto	l10546
 10266  13E1                     u3940:
 10267                           	
 10268  13E1                     l10544:	
 10269  13E1  1003               	clrc
 10270                           	
 10271  13E2  2BE6               	goto	l6749
 10272                           	
 10273  13E3                     l10292:	
 10274                           	
 10275  13E3                     l10546:	
 10276  13E3  1403               	setc
 10277                           	
 10278  13E4  2BE6               	goto	l6749
 10279                           	
 10280  13E5                     l10294:	
 10281  13E5  2BE6               	goto	l6749
 10282                           	
 10283  13E6                     l10548:	
 10284                           	line	52
 10285                           	
 10286  13E6                     l6749:	
 10287  13E6  0008               	return
 10288                           	opt stack 0
 10289                           GLOBAL	__end_of_ser_isrx
 10290  13E7                     	__end_of_ser_isrx:
 10291 ;; =============== function _ser_isrx ends ============
 10292                           
 10293                           	signat	_ser_isrx,88
 10294                           	global	_spi_transfer
 10295                           psect	text1106,local,class=CODE,delta=2
 10296                           global __ptext1106
 10297  137A                     __ptext1106:
 10298                           
 10299 ;; *************** function _spi_transfer *****************
 10300 ;; Defined at:
 10301 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  data            1    wreg     unsigned char 
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;  data            1    2[BANK0 ] unsigned char 
 10306 ;;  temp            1    1[BANK0 ] unsigned char 
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1    wreg      unsigned char 
 10309 ;; Registers used:
 10310 ;;		wreg
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10316 ;;      Params:         0       0       0       0       0
 10317 ;;      Locals:         0       2       0       0       0
 10318 ;;      Temps:          0       1       0       0       0
 10319 ;;      Totals:         0       3       0       0       0
 10320 ;;Total ram usage:        3 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; Hardware stack levels required when called:    3
 10323 ;; This function calls:
 10324 ;;		Nothing
 10325 ;; This function is called by:
 10326 ;;		_rotate
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           psect	text1106
 10330                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 10331                           	line	50
 10332                           	global	__size_of_spi_transfer
 10333  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 10334                           	
 10335  137A                     _spi_transfer:	
 10336                           	opt	stack 3
 10337                           ; Regs used in _spi_transfer: [wreg]
 10338                           ;spi_transfer@data stored from wreg
 10339  137A  1283               	bcf	status, 5	;RP0=0, select bank0
 10340  137B  1303               	bcf	status, 6	;RP1=0, select bank0
 10341  137C  00A2               	movwf	(spi_transfer@data)
 10342                           	line	51
 10343                           	
 10344  137D                     l10482:	
 10345                           ;steppermotor.c: 51: unsigned char temp = 0;
 10346  137D  01A1               	clrf	(spi_transfer@temp)
 10347                           	line	53
 10348                           ;steppermotor.c: 53: SSPIF = 0;
 10349  137E  118C               	bcf	(99/8),(99)&7
 10350                           	line	54
 10351                           	
 10352  137F                     l10484:	
 10353                           ;steppermotor.c: 54: SSPBUF = data;
 10354  137F  0822               	movf	(spi_transfer@data),w
 10355  1380  0093               	movwf	(19)	;volatile
 10356                           	line	56
 10357                           ;steppermotor.c: 56: while (SSPIF == 0);
 10358  1381  2B82               	goto	l3711
 10359                           	
 10360  1382                     l3712:	
 10361                           	
 10362  1382                     l3711:	
 10363  1382  1D8C               	btfss	(99/8),(99)&7
 10364  1383  2B85               	goto	u3771
 10365  1384  2B86               	goto	u3770
 10366  1385                     u3771:
 10367  1385  2B82               	goto	l3711
 10368  1386                     u3770:
 10369  1386  2B87               	goto	l10486
 10370                           	
 10371  1387                     l3713:	
 10372                           	line	57
 10373                           	
 10374  1387                     l10486:	
 10375                           ;steppermotor.c: 57: temp = SSPBUF;
 10376  1387  0813               	movf	(19),w	;volatile
 10377  1388  00A0               	movwf	(??_spi_transfer+0)+0
 10378  1389  0820               	movf	(??_spi_transfer+0)+0,w
 10379  138A  00A1               	movwf	(spi_transfer@temp)
 10380                           	line	58
 10381                           	
 10382  138B                     l10488:	
 10383                           ;steppermotor.c: 58: SSPIF = 0;
 10384  138B  118C               	bcf	(99/8),(99)&7
 10385  138C  2B8D               	goto	l3714
 10386                           	line	60
 10387                           	
 10388  138D                     l10490:	
 10389                           	line	61
 10390                           ;steppermotor.c: 60: return temp;
 10391                           ;	Return value of _spi_transfer is never used
 10392                           	
 10393  138D                     l3714:	
 10394  138D  0008               	return
 10395                           	opt stack 0
 10396                           GLOBAL	__end_of_spi_transfer
 10397  138E                     	__end_of_spi_transfer:
 10398 ;; =============== function _spi_transfer ends ============
 10399                           
 10400                           	signat	_spi_transfer,4217
 10401                           	global	_ser_putch
 10402                           psect	text1107,local,class=CODE,delta=2
 10403                           global __ptext1107
 10404  1555                     __ptext1107:
 10405                           
 10406 ;; *************** function _ser_putch *****************
 10407 ;; Defined at:
 10408 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;  c               1    wreg     unsigned char 
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;  c               1    1[BANK0 ] unsigned char 
 10413 ;; Return value:  Size  Location     Type
 10414 ;;		None               void
 10415 ;; Registers used:
 10416 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10422 ;;      Params:         0       0       0       0       0
 10423 ;;      Locals:         0       1       0       0       0
 10424 ;;      Temps:          0       1       0       0       0
 10425 ;;      Totals:         0       2       0       0       0
 10426 ;;Total ram usage:        2 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; Hardware stack levels required when called:    3
 10429 ;; This function calls:
 10430 ;;		Nothing
 10431 ;; This function is called by:
 10432 ;;		_ChargeMode
 10433 ;;		_robo_init
 10434 ;;		_robot_read
 10435 ;;		_RobotDrive
 10436 ;;		_robotTurn
 10437 ;;		_ser_puts
 10438 ;;		_ser_puts2
 10439 ;;		_ser_puthex
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           psect	text1107
 10443                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 10444                           	line	70
 10445                           	global	__size_of_ser_putch
 10446  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 10447                           	
 10448  1555                     _ser_putch:	
 10449                           	opt	stack 3
 10450                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 10451                           ;ser_putch@c stored from wreg
 10452  1555  1283               	bcf	status, 5	;RP0=0, select bank0
 10453  1556  1303               	bcf	status, 6	;RP1=0, select bank0
 10454  1557  00A1               	movwf	(ser_putch@c)
 10455                           	line	71
 10456                           	
 10457  1558                     l10470:	
 10458                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 10459  1558  2D5A               	goto	l10472
 10460                           	
 10461  1559                     l6759:	
 10462                           	line	72
 10463                           ;ser.c: 72: continue;
 10464  1559  2D5A               	goto	l10472
 10465                           	
 10466  155A                     l6758:	
 10467                           	line	71
 10468                           	
 10469  155A                     l10472:	
 10470  155A  1683               	bsf	status, 5	;RP0=1, select bank1
 10471  155B  1303               	bcf	status, 6	;RP1=0, select bank1
 10472  155C  085A               	movf	(_txiptr)^080h,w	;volatile
 10473  155D  3E01               	addlw	01h
 10474  155E  390F               	andlw	0Fh
 10475  155F  065B               	xorwf	(_txoptr)^080h,w	;volatile
 10476  1560  1903               	skipnz
 10477  1561  2D63               	goto	u3761
 10478  1562  2D64               	goto	u3760
 10479  1563                     u3761:
 10480  1563  2D5A               	goto	l10472
 10481  1564                     u3760:
 10482                           	
 10483  1564                     l6760:	
 10484                           	line	73
 10485                           ;ser.c: 73: GIE=0;
 10486  1564  138B               	bcf	(95/8),(95)&7
 10487                           	line	74
 10488                           	
 10489  1565                     l10474:	
 10490                           ;ser.c: 74: txfifo[txiptr] = c;
 10491  1565  1283               	bcf	status, 5	;RP0=0, select bank0
 10492  1566  1303               	bcf	status, 6	;RP1=0, select bank0
 10493  1567  0821               	movf	(ser_putch@c),w
 10494  1568  00A0               	movwf	(??_ser_putch+0)+0
 10495  1569  1683               	bsf	status, 5	;RP0=1, select bank1
 10496  156A  1303               	bcf	status, 6	;RP1=0, select bank1
 10497  156B  085A               	movf	(_txiptr)^080h,w
 10498  156C  3EA0               	addlw	_txfifo&0ffh
 10499  156D  0084               	movwf	fsr0
 10500  156E  1283               	bcf	status, 5	;RP0=0, select bank0
 10501  156F  1303               	bcf	status, 6	;RP1=0, select bank0
 10502  1570  0820               	movf	(??_ser_putch+0)+0,w
 10503  1571  1783               	bsf	status, 7	;select IRP bank3
 10504  1572  0080               	movwf	indf
 10505                           	line	75
 10506                           	
 10507  1573                     l10476:	
 10508                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 10509  1573  1683               	bsf	status, 5	;RP0=1, select bank1
 10510  1574  1303               	bcf	status, 6	;RP1=0, select bank1
 10511  1575  085A               	movf	(_txiptr)^080h,w	;volatile
 10512  1576  3E01               	addlw	01h
 10513  1577  390F               	andlw	0Fh
 10514  1578  1283               	bcf	status, 5	;RP0=0, select bank0
 10515  1579  1303               	bcf	status, 6	;RP1=0, select bank0
 10516  157A  00A0               	movwf	(??_ser_putch+0)+0
 10517  157B  0820               	movf	(??_ser_putch+0)+0,w
 10518  157C  1683               	bsf	status, 5	;RP0=1, select bank1
 10519  157D  1303               	bcf	status, 6	;RP1=0, select bank1
 10520  157E  00DA               	movwf	(_txiptr)^080h	;volatile
 10521                           	line	76
 10522                           	
 10523  157F                     l10478:	
 10524                           ;ser.c: 76: TXIE=1;
 10525  157F  160C               	bsf	(1124/8)^080h,(1124)&7
 10526                           	line	77
 10527                           	
 10528  1580                     l10480:	
 10529                           ;ser.c: 77: GIE=1;
 10530  1580  178B               	bsf	(95/8),(95)&7
 10531                           	line	78
 10532                           	
 10533  1581                     l6761:	
 10534  1581  0008               	return
 10535                           	opt stack 0
 10536                           GLOBAL	__end_of_ser_putch
 10537  1582                     	__end_of_ser_putch:
 10538 ;; =============== function _ser_putch ends ============
 10539                           
 10540                           	signat	_ser_putch,4216
 10541                           	global	_Menu
 10542                           psect	text1108,local,class=CODE,delta=2
 10543                           global __ptext1108
 10544  1719                     __ptext1108:
 10545                           
 10546 ;; *************** function _Menu *****************
 10547 ;; Defined at:
 10548 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;  BTN_input       1    wreg     unsigned char 
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  1    wreg      unsigned char 
 10555 ;; Registers used:
 10556 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10562 ;;      Params:         0       0       0       0       0
 10563 ;;      Locals:         0       1       0       0       0
 10564 ;;      Temps:          0       0       0       0       0
 10565 ;;      Totals:         0       1       0       0       0
 10566 ;;Total ram usage:        1 bytes
 10567 ;; Hardware stack levels used:    1
 10568 ;; Hardware stack levels required when called:    3
 10569 ;; This function calls:
 10570 ;;		Nothing
 10571 ;; This function is called by:
 10572 ;;		_main
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           psect	text1108
 10576                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10577                           	line	201
 10578                           	global	__size_of_Menu
 10579  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 10580                           	
 10581  1719                     _Menu:	
 10582                           	opt	stack 4
 10583                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 10584                           ;Menu@BTN_input stored from wreg
 10585  1719  1283               	bcf	status, 5	;RP0=0, select bank0
 10586  171A  1303               	bcf	status, 6	;RP1=0, select bank0
 10587  171B  00A0               	movwf	(Menu@BTN_input)
 10588                           	line	202
 10589                           	
 10590  171C                     l10446:	
 10591                           ;HMI.c: 202: switch (BTN_input)
 10592  171C  2F4B               	goto	l10464
 10593                           	line	204
 10594                           ;HMI.c: 203: {
 10595                           ;HMI.c: 204: case 1:
 10596                           	
 10597  171D                     l4518:	
 10598                           	line	206
 10599                           ;HMI.c: 206: break;
 10600  171D  2F5D               	goto	l10466
 10601                           	line	207
 10602                           ;HMI.c: 207: case 2:
 10603                           	
 10604  171E                     l4520:	
 10605                           	line	209
 10606                           ;HMI.c: 209: break;
 10607  171E  2F5D               	goto	l10466
 10608                           	line	210
 10609                           ;HMI.c: 210: case 3:
 10610                           	
 10611  171F                     l4521:	
 10612                           	line	211
 10613                           	
 10614  171F                     l10448:	
 10615                           ;HMI.c: 211: pos--;
 10616  171F  30FF               	movlw	low(-1)
 10617  1720  1683               	bsf	status, 5	;RP0=1, select bank1
 10618  1721  1303               	bcf	status, 6	;RP1=0, select bank1
 10619  1722  07C0               	addwf	(_pos)^080h,f
 10620  1723  1803               	skipnc
 10621  1724  0AC1               	incf	(_pos+1)^080h,f
 10622  1725  30FF               	movlw	high(-1)
 10623  1726  07C1               	addwf	(_pos+1)^080h,f
 10624                           	line	212
 10625                           	
 10626  1727                     l10450:	
 10627                           ;HMI.c: 212: if (pos < 0)
 10628  1727  1FC1               	btfss	(_pos+1)^080h,7
 10629  1728  2F2A               	goto	u3741
 10630  1729  2F2B               	goto	u3740
 10631  172A                     u3741:
 10632  172A  2F5D               	goto	l10466
 10633  172B                     u3740:
 10634                           	line	213
 10635                           	
 10636  172B                     l10452:	
 10637                           ;HMI.c: 213: pos = 6 - 1;
 10638  172B  3005               	movlw	low(05h)
 10639  172C  00C0               	movwf	(_pos)^080h
 10640  172D  3000               	movlw	high(05h)
 10641  172E  00C1               	movwf	((_pos)^080h)+1
 10642  172F  2F5D               	goto	l10466
 10643                           	
 10644  1730                     l4522:	
 10645                           	line	215
 10646                           ;HMI.c: 215: break;
 10647  1730  2F5D               	goto	l10466
 10648                           	line	216
 10649                           ;HMI.c: 216: case 4:
 10650                           	
 10651  1731                     l4523:	
 10652                           	line	217
 10653                           	
 10654  1731                     l10454:	
 10655                           ;HMI.c: 217: pos++;
 10656  1731  3001               	movlw	low(01h)
 10657  1732  1683               	bsf	status, 5	;RP0=1, select bank1
 10658  1733  1303               	bcf	status, 6	;RP1=0, select bank1
 10659  1734  07C0               	addwf	(_pos)^080h,f
 10660  1735  1803               	skipnc
 10661  1736  0AC1               	incf	(_pos+1)^080h,f
 10662  1737  3000               	movlw	high(01h)
 10663  1738  07C1               	addwf	(_pos+1)^080h,f
 10664                           	line	218
 10665                           ;HMI.c: 218: if (pos == 6)
 10666  1739  3006               	movlw	06h
 10667  173A  0640               	xorwf	(_pos)^080h,w
 10668  173B  0441               	iorwf	(_pos+1)^080h,w
 10669  173C  1D03               	skipz
 10670  173D  2F3F               	goto	u3751
 10671  173E  2F40               	goto	u3750
 10672  173F                     u3751:
 10673  173F  2F5D               	goto	l10466
 10674  1740                     u3750:
 10675                           	line	219
 10676                           	
 10677  1740                     l10456:	
 10678                           ;HMI.c: 219: pos = 0;
 10679  1740  01C0               	clrf	(_pos)^080h
 10680  1741  01C1               	clrf	(_pos+1)^080h
 10681  1742  2F5D               	goto	l10466
 10682                           	
 10683  1743                     l4524:	
 10684                           	line	221
 10685                           ;HMI.c: 221: break;
 10686  1743  2F5D               	goto	l10466
 10687                           	line	222
 10688                           ;HMI.c: 222: case 5:
 10689                           	
 10690  1744                     l4525:	
 10691                           	line	223
 10692                           	
 10693  1744                     l10458:	
 10694                           ;HMI.c: 223: return pos;
 10695  1744  1683               	bsf	status, 5	;RP0=1, select bank1
 10696  1745  1303               	bcf	status, 6	;RP1=0, select bank1
 10697  1746  0840               	movf	(_pos)^080h,w
 10698  1747  2F5F               	goto	l4526
 10699                           	
 10700  1748                     l10460:	
 10701  1748  2F5F               	goto	l4526
 10702                           	line	226
 10703                           ;HMI.c: 226: default:
 10704                           	
 10705  1749                     l4527:	
 10706                           	line	228
 10707                           ;HMI.c: 228: break;
 10708  1749  2F5D               	goto	l10466
 10709                           	line	229
 10710                           	
 10711  174A                     l10462:	
 10712                           ;HMI.c: 229: }
 10713  174A  2F5D               	goto	l10466
 10714                           	line	202
 10715                           	
 10716  174B                     l4517:	
 10717                           	
 10718  174B                     l10464:	
 10719  174B  1283               	bcf	status, 5	;RP0=0, select bank0
 10720  174C  0820               	movf	(Menu@BTN_input),w
 10721                           	; Switch size 1, requested type "space"
 10722                           ; Number of cases is 5, Range of values is 1 to 5
 10723                           ; switch strategies available:
 10724                           ; Name         Instructions Cycles
 10725                           ; simple_byte           16     9 (average)
 10726                           ; direct_byte           26    11 (fixed)
 10727                           ; jumptable            263     9 (fixed)
 10728                           ;	Chosen strategy is simple_byte
 10729                           
 10730                           	opt asmopt_off
 10731  174D  3A01               	xorlw	1^0	; case 1
 10732  174E  1903               	skipnz
 10733  174F  2F5D               	goto	l10466
 10734  1750  3A03               	xorlw	2^1	; case 2
 10735  1751  1903               	skipnz
 10736  1752  2F5D               	goto	l10466
 10737  1753  3A01               	xorlw	3^2	; case 3
 10738  1754  1903               	skipnz
 10739  1755  2F1F               	goto	l10448
 10740  1756  3A07               	xorlw	4^3	; case 4
 10741  1757  1903               	skipnz
 10742  1758  2F31               	goto	l10454
 10743  1759  3A01               	xorlw	5^4	; case 5
 10744  175A  1903               	skipnz
 10745  175B  2F44               	goto	l10458
 10746  175C  2F5D               	goto	l10466
 10747                           	opt asmopt_on
 10748                           
 10749                           	line	229
 10750                           	
 10751  175D                     l4519:	
 10752                           	line	230
 10753                           	
 10754  175D                     l10466:	
 10755                           ;HMI.c: 230: return 255;
 10756  175D  30FF               	movlw	(0FFh)
 10757  175E  2F5F               	goto	l4526
 10758                           	
 10759  175F                     l10468:	
 10760                           	line	231
 10761                           	
 10762  175F                     l4526:	
 10763  175F  0008               	return
 10764                           	opt stack 0
 10765                           GLOBAL	__end_of_Menu
 10766  1760                     	__end_of_Menu:
 10767 ;; =============== function _Menu ends ============
 10768                           
 10769                           	signat	_Menu,4217
 10770                           	global	_ser_init
 10771                           psect	text1109,local,class=CODE,delta=2
 10772                           global __ptext1109
 10773  1450                     __ptext1109:
 10774                           
 10775 ;; *************** function _ser_init *****************
 10776 ;; Defined at:
 10777 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;		None
 10782 ;; Return value:  Size  Location     Type
 10783 ;;		None               void
 10784 ;; Registers used:
 10785 ;;		wreg, status,2, status,0
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10791 ;;      Params:         0       0       0       0       0
 10792 ;;      Locals:         0       0       0       0       0
 10793 ;;      Temps:          0       1       0       0       0
 10794 ;;      Totals:         0       1       0       0       0
 10795 ;;Total ram usage:        1 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    3
 10798 ;; This function calls:
 10799 ;;		Nothing
 10800 ;; This function is called by:
 10801 ;;		_init
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           psect	text1109
 10805                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 10806                           	line	113
 10807                           	global	__size_of_ser_init
 10808  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 10809                           	
 10810  1450                     _ser_init:	
 10811                           	opt	stack 3
 10812                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 10813                           	line	114
 10814                           	
 10815  1450                     l10420:	
 10816                           ;ser.c: 114: TRISC |= 0b10000000;
 10817  1450  1683               	bsf	status, 5	;RP0=1, select bank1
 10818  1451  1303               	bcf	status, 6	;RP1=0, select bank1
 10819  1452  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 10820                           	line	115
 10821                           	
 10822  1453                     l10422:	
 10823                           ;ser.c: 115: TRISC &= 0b10111111;
 10824  1453  30BF               	movlw	(0BFh)
 10825  1454  1283               	bcf	status, 5	;RP0=0, select bank0
 10826  1455  1303               	bcf	status, 6	;RP1=0, select bank0
 10827  1456  00A0               	movwf	(??_ser_init+0)+0
 10828  1457  0820               	movf	(??_ser_init+0)+0,w
 10829  1458  1683               	bsf	status, 5	;RP0=1, select bank1
 10830  1459  1303               	bcf	status, 6	;RP1=0, select bank1
 10831  145A  0587               	andwf	(135)^080h,f	;volatile
 10832                           	line	116
 10833                           	
 10834  145B                     l10424:	
 10835                           ;ser.c: 116: BRGH=1;
 10836  145B  1518               	bsf	(1218/8)^080h,(1218)&7
 10837                           	line	118
 10838                           	
 10839  145C                     l10426:	
 10840                           ;ser.c: 118: SPBRG=20;
 10841  145C  3014               	movlw	(014h)
 10842  145D  0099               	movwf	(153)^080h	;volatile
 10843                           	line	121
 10844                           	
 10845  145E                     l10428:	
 10846                           ;ser.c: 121: TX9=0;
 10847  145E  1318               	bcf	(1222/8)^080h,(1222)&7
 10848                           	line	122
 10849                           	
 10850  145F                     l10430:	
 10851                           ;ser.c: 122: RX9=0;
 10852  145F  1283               	bcf	status, 5	;RP0=0, select bank0
 10853  1460  1303               	bcf	status, 6	;RP1=0, select bank0
 10854  1461  1318               	bcf	(198/8),(198)&7
 10855                           	line	124
 10856                           	
 10857  1462                     l10432:	
 10858                           ;ser.c: 124: SYNC=0;
 10859  1462  1683               	bsf	status, 5	;RP0=1, select bank1
 10860  1463  1303               	bcf	status, 6	;RP1=0, select bank1
 10861  1464  1218               	bcf	(1220/8)^080h,(1220)&7
 10862                           	line	125
 10863                           	
 10864  1465                     l10434:	
 10865                           ;ser.c: 125: SPEN=1;
 10866  1465  1283               	bcf	status, 5	;RP0=0, select bank0
 10867  1466  1303               	bcf	status, 6	;RP1=0, select bank0
 10868  1467  1798               	bsf	(199/8),(199)&7
 10869                           	line	126
 10870                           	
 10871  1468                     l10436:	
 10872                           ;ser.c: 126: CREN=1;
 10873  1468  1618               	bsf	(196/8),(196)&7
 10874                           	line	127
 10875                           	
 10876  1469                     l10438:	
 10877                           ;ser.c: 127: TXIE=0;
 10878  1469  1683               	bsf	status, 5	;RP0=1, select bank1
 10879  146A  1303               	bcf	status, 6	;RP1=0, select bank1
 10880  146B  120C               	bcf	(1124/8)^080h,(1124)&7
 10881                           	line	128
 10882                           	
 10883  146C                     l10440:	
 10884                           ;ser.c: 128: RCIE=1;
 10885  146C  168C               	bsf	(1125/8)^080h,(1125)&7
 10886                           	line	129
 10887                           	
 10888  146D                     l10442:	
 10889                           ;ser.c: 129: TXEN=1;
 10890  146D  1698               	bsf	(1221/8)^080h,(1221)&7
 10891                           	line	132
 10892                           	
 10893  146E                     l10444:	
 10894                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 10895  146E  3000               	movlw	(0)
 10896  146F  00DB               	movwf	(_txoptr)^080h	;volatile
 10897  1470  00DA               	movwf	(_txiptr)^080h	;volatile
 10898  1471  00D6               	movwf	(_rxoptr)^080h	;volatile
 10899  1472  1283               	bcf	status, 5	;RP0=0, select bank0
 10900  1473  1303               	bcf	status, 6	;RP1=0, select bank0
 10901  1474  00A0               	movwf	(??_ser_init+0)+0
 10902  1475  0820               	movf	(??_ser_init+0)+0,w
 10903  1476  1683               	bsf	status, 5	;RP0=1, select bank1
 10904  1477  1303               	bcf	status, 6	;RP1=0, select bank1
 10905  1478  00D5               	movwf	(_rxiptr)^080h	;volatile
 10906                           	line	133
 10907                           	
 10908  1479                     l6783:	
 10909  1479  0008               	return
 10910                           	opt stack 0
 10911                           GLOBAL	__end_of_ser_init
 10912  147A                     	__end_of_ser_init:
 10913 ;; =============== function _ser_init ends ============
 10914                           
 10915                           	signat	_ser_init,88
 10916                           	global	_adc_read
 10917                           psect	text1110,local,class=CODE,delta=2
 10918                           global __ptext1110
 10919  1427                     __ptext1110:
 10920                           
 10921 ;; *************** function _adc_read *****************
 10922 ;; Defined at:
 10923 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;		None
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  2    0[BANK0 ] unsigned int 
 10930 ;; Registers used:
 10931 ;;		wreg, status,2, status,0
 10932 ;; Tracked objects:
 10933 ;;		On entry : 0/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10937 ;;      Params:         0       2       0       0       0
 10938 ;;      Locals:         0       2       0       0       0
 10939 ;;      Temps:          0       2       0       0       0
 10940 ;;      Totals:         0       6       0       0       0
 10941 ;;Total ram usage:        6 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; Hardware stack levels required when called:    3
 10944 ;; This function calls:
 10945 ;;		Nothing
 10946 ;; This function is called by:
 10947 ;;		_adc_read_channel
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           psect	text1110
 10951                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10952                           	line	76
 10953                           	global	__size_of_adc_read
 10954  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 10955                           	
 10956  1427                     _adc_read:	
 10957                           	opt	stack 0
 10958                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 10959                           	line	79
 10960                           	
 10961  1427                     l10300:	
 10962                           ;adc.c: 77: volatile unsigned int adc_value;
 10963                           ;adc.c: 79: ADRESH = 0;
 10964  1427  1283               	bcf	status, 5	;RP0=0, select bank0
 10965  1428  1303               	bcf	status, 6	;RP1=0, select bank0
 10966  1429  019E               	clrf	(30)	;volatile
 10967                           	line	81
 10968                           	
 10969  142A                     l10302:	
 10970                           ;adc.c: 81: GO = 1;
 10971  142A  151F               	bsf	(250/8),(250)&7
 10972                           	line	82
 10973                           ;adc.c: 82: while(GO) continue;
 10974  142B  2C2C               	goto	l703
 10975                           	
 10976  142C                     l704:	
 10977                           	
 10978  142C                     l703:	
 10979  142C  191F               	btfsc	(250/8),(250)&7
 10980  142D  2C2F               	goto	u3551
 10981  142E  2C30               	goto	u3550
 10982  142F                     u3551:
 10983  142F  2C2C               	goto	l703
 10984  1430                     u3550:
 10985                           	
 10986  1430                     l705:	
 10987                           	line	83
 10988                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10989  1430  0000               nop ;#
 10990                           	line	84
 10991                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10992  1431  0000               nop ;#
 10993                           	line	85
 10994                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10995  1432  0000               nop ;#
 10996                           psect	text1110
 10997                           	line	88
 10998                           	
 10999  1433                     l10304:	
 11000                           ;adc.c: 88: adc_value = ADRESH;
 11001  1433  1283               	bcf	status, 5	;RP0=0, select bank0
 11002  1434  1303               	bcf	status, 6	;RP1=0, select bank0
 11003  1435  081E               	movf	(30),w	;volatile
 11004  1436  00A2               	movwf	(??_adc_read+0)+0
 11005  1437  01A3               	clrf	(??_adc_read+0)+0+1
 11006  1438  0822               	movf	0+(??_adc_read+0)+0,w
 11007  1439  00A4               	movwf	(adc_read@adc_value)	;volatile
 11008  143A  0823               	movf	1+(??_adc_read+0)+0,w
 11009  143B  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 11010                           	line	89
 11011                           ;adc.c: 89: adc_value <<= 1;
 11012  143C  3001               	movlw	01h
 11013                           	
 11014  143D                     u3565:
 11015  143D  1003               	clrc
 11016  143E  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 11017  143F  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 11018  1440  3EFF               	addlw	-1
 11019  1441  1D03               	skipz
 11020  1442  2C3D               	goto	u3565
 11021                           	line	90
 11022                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 11023  1443  1683               	bsf	status, 5	;RP0=1, select bank1
 11024  1444  1303               	bcf	status, 6	;RP1=0, select bank1
 11025  1445  081E               	movf	(158)^080h,w	;volatile
 11026                           	line	93
 11027                           	
 11028  1446                     l10306:	
 11029                           ;adc.c: 93: return (adc_value);
 11030  1446  1283               	bcf	status, 5	;RP0=0, select bank0
 11031  1447  1303               	bcf	status, 6	;RP1=0, select bank0
 11032  1448  0825               	movf	(adc_read@adc_value+1),w	;volatile
 11033  1449  01A1               	clrf	(?_adc_read+1)
 11034  144A  07A1               	addwf	(?_adc_read+1)
 11035  144B  0824               	movf	(adc_read@adc_value),w	;volatile
 11036  144C  01A0               	clrf	(?_adc_read)
 11037  144D  07A0               	addwf	(?_adc_read)
 11038                           
 11039  144E  2C4F               	goto	l706
 11040                           	
 11041  144F                     l10308:	
 11042                           	line	94
 11043                           	
 11044  144F                     l706:	
 11045  144F  0008               	return
 11046                           	opt stack 0
 11047                           GLOBAL	__end_of_adc_read
 11048  1450                     	__end_of_adc_read:
 11049 ;; =============== function _adc_read ends ============
 11050                           
 11051                           	signat	_adc_read,90
 11052                           	global	_isr1
 11053                           psect	text1111,local,class=CODE,delta=2
 11054                           global __ptext1111
 11055  0CBF                     __ptext1111:
 11056                           
 11057 ;; *************** function _isr1 *****************
 11058 ;; Defined at:
 11059 ;;		line 109 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;		None
 11062 ;; Auto vars:     Size  Location     Type
 11063 ;;		None
 11064 ;; Return value:  Size  Location     Type
 11065 ;;		None               void
 11066 ;; Registers used:
 11067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11068 ;; Tracked objects:
 11069 ;;		On entry : 0/0
 11070 ;;		On exit  : 0/0
 11071 ;;		Unchanged: 0/0
 11072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11073 ;;      Params:         0       0       0       0       0
 11074 ;;      Locals:         0       0       0       0       0
 11075 ;;      Temps:          5       0       0       0       0
 11076 ;;      Totals:         5       0       0       0       0
 11077 ;;Total ram usage:        5 bytes
 11078 ;; Hardware stack levels used:    1
 11079 ;; Hardware stack levels required when called:    2
 11080 ;; This function calls:
 11081 ;;		i1___lwmod
 11082 ;;		_ReadButtons
 11083 ;; This function is called by:
 11084 ;;		Interrupt level 1
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           psect	text1111
 11088                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 11089                           	line	109
 11090                           	global	__size_of_isr1
 11091  00A7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 11092                           	
 11093  0CBF                     _isr1:	
 11094                           	opt	stack 0
 11095                           ; Regs used in _isr1: [allreg]
 11096                           psect	intentry,class=CODE,delta=2
 11097                           global __pintentry
 11098  0004                     __pintentry:
 11099                           global interrupt_function
 11100  0004                     interrupt_function:
 11101                           	global saved_w
 11102  007E                     	saved_w	set	btemp+0
 11103  0004  00FE               	movwf	saved_w
 11104  0005  0E03               	swapf	status,w
 11105  0006  00F9               	movwf	(??_isr1+1)
 11106  0007  0804               	movf	fsr0,w
 11107  0008  00FA               	movwf	(??_isr1+2)
 11108  0009  080A               	movf	pclath,w
 11109  000A  00FB               	movwf	(??_isr1+3)
 11110  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 11111  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 11112  000D  087F               	movf	btemp+1,w
 11113  000E  00FC               	movwf	(??_isr1+4)
 11114  000F  120A  158A  2CBF   	ljmp	_isr1
 11115                           psect	text1111
 11116                           	line	110
 11117                           	
 11118  0CBF                     i1l10336:	
 11119                           ;Main.c: 110: if(TMR0IF)
 11120  0CBF  1D0B               	btfss	(90/8),(90)&7
 11121  0CC0  2CC2               	goto	u360_21
 11122  0CC1  2CC3               	goto	u360_20
 11123  0CC2                     u360_21:
 11124  0CC2  2D12               	goto	i1l10358
 11125  0CC3                     u360_20:
 11126                           	line	112
 11127                           	
 11128  0CC3                     i1l10338:	
 11129                           ;Main.c: 111: {
 11130                           ;Main.c: 112: TMR0IF = 0;
 11131  0CC3  110B               	bcf	(90/8),(90)&7
 11132                           	line	113
 11133                           	
 11134  0CC4                     i1l10340:	
 11135                           ;Main.c: 113: TMR0 = 100;
 11136  0CC4  3064               	movlw	(064h)
 11137  0CC5  0081               	movwf	(1)	;volatile
 11138                           	line	115
 11139                           ;Main.c: 115: RTC_Counter++;
 11140  0CC6  3001               	movlw	low(01h)
 11141  0CC7  1683               	bsf	status, 5	;RP0=1, select bank1
 11142  0CC8  1303               	bcf	status, 6	;RP1=0, select bank1
 11143  0CC9  07B2               	addwf	(_RTC_Counter)^080h,f	;volatile
 11144  0CCA  1803               	skipnc
 11145  0CCB  0AB3               	incf	(_RTC_Counter+1)^080h,f	;volatile
 11146  0CCC  3000               	movlw	high(01h)
 11147  0CCD  07B3               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 11148                           	line	118
 11149                           	
 11150  0CCE                     i1l10342:	
 11151                           ;Main.c: 118: RTC_FLAG_1MS = 1;
 11152  0CCE  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 11153                           	line	119
 11154                           	
 11155  0CCF                     i1l10344:	
 11156                           ;Main.c: 119: if(RTC_Counter % 250 == 0)
 11157  0CCF  30FA               	movlw	low(0FAh)
 11158  0CD0  00F2               	movwf	(?i1___lwmod)
 11159  0CD1  3000               	movlw	high(0FAh)
 11160  0CD2  00F3               	movwf	((?i1___lwmod))+1
 11161  0CD3  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11162  0CD4  01F5               	clrf	1+(?i1___lwmod)+02h
 11163  0CD5  07F5               	addwf	1+(?i1___lwmod)+02h
 11164  0CD6  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 11165  0CD7  01F4               	clrf	0+(?i1___lwmod)+02h
 11166  0CD8  07F4               	addwf	0+(?i1___lwmod)+02h
 11167                           
 11168  0CD9  160A  118A  2649   	fcall	i1___lwmod
              120A  158A         
 11169  0CDE  0873               	movf	((1+(?i1___lwmod))),w
 11170  0CDF  0472               	iorwf	((0+(?i1___lwmod))),w
 11171  0CE0  1D03               	skipz
 11172  0CE1  2CE3               	goto	u361_21
 11173  0CE2  2CE4               	goto	u361_20
 11174  0CE3                     u361_21:
 11175  0CE3  2CE6               	goto	i1l10348
 11176  0CE4                     u361_20:
 11177                           	line	121
 11178                           	
 11179  0CE4                     i1l10346:	
 11180                           ;Main.c: 120: {
 11181                           ;Main.c: 121: RTC_FLAG_250MS = 1;
 11182  0CE4  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 11183  0CE5  2CE6               	goto	i1l10348
 11184                           	line	122
 11185                           	
 11186  0CE6                     i1l2217:	
 11187                           	line	123
 11188                           	
 11189  0CE6                     i1l10348:	
 11190                           ;Main.c: 122: }
 11191                           ;Main.c: 123: if(RTC_Counter % 500 == 0)
 11192  0CE6  30F4               	movlw	low(01F4h)
 11193  0CE7  00F2               	movwf	(?i1___lwmod)
 11194  0CE8  3001               	movlw	high(01F4h)
 11195  0CE9  00F3               	movwf	((?i1___lwmod))+1
 11196  0CEA  1683               	bsf	status, 5	;RP0=1, select bank1
 11197  0CEB  1303               	bcf	status, 6	;RP1=0, select bank1
 11198  0CEC  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11199  0CED  01F5               	clrf	1+(?i1___lwmod)+02h
 11200  0CEE  07F5               	addwf	1+(?i1___lwmod)+02h
 11201  0CEF  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 11202  0CF0  01F4               	clrf	0+(?i1___lwmod)+02h
 11203  0CF1  07F4               	addwf	0+(?i1___lwmod)+02h
 11204                           
 11205  0CF2  160A  118A  2649   	fcall	i1___lwmod
              120A  158A         
 11206  0CF7  0873               	movf	((1+(?i1___lwmod))),w
 11207  0CF8  0472               	iorwf	((0+(?i1___lwmod))),w
 11208  0CF9  1D03               	skipz
 11209  0CFA  2CFC               	goto	u362_21
 11210  0CFB  2CFD               	goto	u362_20
 11211  0CFC                     u362_21:
 11212  0CFC  2D03               	goto	i1l10354
 11213  0CFD                     u362_20:
 11214                           	line	125
 11215                           	
 11216  0CFD                     i1l10350:	
 11217                           ;Main.c: 124: {
 11218                           ;Main.c: 125: RTC_FLAG_500MS = 1;
 11219  0CFD  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 11220                           	line	126
 11221                           	
 11222  0CFE                     i1l10352:	
 11223                           ;Main.c: 126: RB0 ^= 0x01;
 11224  0CFE  1283               	bcf	status, 5	;RP0=0, select bank0
 11225  0CFF  1303               	bcf	status, 6	;RP1=0, select bank0
 11226  0D00  3001               	movlw	1<<((48)&7)
 11227  0D01  0686               	xorwf	((48)/8),f
 11228  0D02  2D03               	goto	i1l10354
 11229                           	line	127
 11230                           	
 11231  0D03                     i1l2218:	
 11232                           	line	128
 11233                           	
 11234  0D03                     i1l10354:	
 11235                           ;Main.c: 127: }
 11236                           ;Main.c: 128: if (buttonPressed == 0)
 11237  0D03  08FD               	movf	(_buttonPressed),f
 11238  0D04  1D03               	skipz	;volatile
 11239  0D05  2D07               	goto	u363_21
 11240  0D06  2D08               	goto	u363_20
 11241  0D07                     u363_21:
 11242  0D07  2D12               	goto	i1l10358
 11243  0D08                     u363_20:
 11244                           	line	130
 11245                           	
 11246  0D08                     i1l10356:	
 11247                           ;Main.c: 129: {
 11248                           ;Main.c: 130: buttonPressed = ReadButtons();
 11249  0D08  160A  118A  25DE   	fcall	_ReadButtons
              120A  158A         
 11250  0D0D  00F8               	movwf	(??_isr1+0)+0
 11251  0D0E  0878               	movf	(??_isr1+0)+0,w
 11252  0D0F  00FD               	movwf	(_buttonPressed)	;volatile
 11253  0D10  2D12               	goto	i1l10358
 11254                           	line	131
 11255                           	
 11256  0D11                     i1l2219:	
 11257  0D11  2D12               	goto	i1l10358
 11258                           	line	132
 11259                           	
 11260  0D12                     i1l2216:	
 11261                           	line	133
 11262                           	
 11263  0D12                     i1l10358:	
 11264                           ;Main.c: 131: }
 11265                           ;Main.c: 132: }
 11266                           ;Main.c: 133: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 11267  0D12  1283               	bcf	status, 5	;RP0=0, select bank0
 11268  0D13  1303               	bcf	status, 6	;RP1=0, select bank0
 11269  0D14  1E8C               	btfss	(101/8),(101)&7
 11270  0D15  2D17               	goto	u364_21
 11271  0D16  2D18               	goto	u364_20
 11272  0D17                     u364_21:
 11273  0D17  2D34               	goto	i1l10368
 11274  0D18                     u364_20:
 11275                           	
 11276  0D18                     i1l10360:	
 11277  0D18  081A               	movf	(26),w	;volatile
 11278  0D19  00F8               	movwf	(??_isr1+0)+0
 11279  0D1A  1683               	bsf	status, 5	;RP0=1, select bank1
 11280  0D1B  1303               	bcf	status, 6	;RP1=0, select bank1
 11281  0D1C  0855               	movf	(_rxiptr)^080h,w
 11282  0D1D  3EA0               	addlw	_rxfifo&0ffh
 11283  0D1E  0084               	movwf	fsr0
 11284  0D1F  0878               	movf	(??_isr1+0)+0,w
 11285  0D20  1383               	bcf	status, 7	;select IRP bank1
 11286  0D21  0080               	movwf	indf
 11287                           	
 11288  0D22                     i1l10362:	
 11289  0D22  0855               	movf	(_rxiptr)^080h,w	;volatile
 11290  0D23  3E01               	addlw	01h
 11291  0D24  390F               	andlw	0Fh
 11292  0D25  00F8               	movwf	(??_isr1+0)+0
 11293  0D26  0878               	movf	(??_isr1+0)+0,w
 11294  0D27  00D7               	movwf	(_ser_tmp)^080h
 11295                           	
 11296  0D28                     i1l10364:	
 11297  0D28  0857               	movf	(_ser_tmp)^080h,w
 11298  0D29  0656               	xorwf	(_rxoptr)^080h,w	;volatile
 11299  0D2A  1903               	skipnz
 11300  0D2B  2D2D               	goto	u365_21
 11301  0D2C  2D2E               	goto	u365_20
 11302  0D2D                     u365_21:
 11303  0D2D  2D34               	goto	i1l10368
 11304  0D2E                     u365_20:
 11305                           	
 11306  0D2E                     i1l10366:	
 11307  0D2E  0857               	movf	(_ser_tmp)^080h,w
 11308  0D2F  00F8               	movwf	(??_isr1+0)+0
 11309  0D30  0878               	movf	(??_isr1+0)+0,w
 11310  0D31  00D5               	movwf	(_rxiptr)^080h	;volatile
 11311  0D32  2D34               	goto	i1l10368
 11312                           	
 11313  0D33                     i1l2221:	
 11314  0D33  2D34               	goto	i1l10368
 11315                           	
 11316  0D34                     i1l2220:	
 11317                           	
 11318  0D34                     i1l10368:	
 11319  0D34  1283               	bcf	status, 5	;RP0=0, select bank0
 11320  0D35  1E0C               	btfss	(100/8),(100)&7
 11321  0D36  2D38               	goto	u366_21
 11322  0D37  2D39               	goto	u366_20
 11323  0D38                     u366_21:
 11324  0D38  2D5A               	goto	i1l2224
 11325  0D39                     u366_20:
 11326                           	
 11327  0D39                     i1l10370:	
 11328  0D39  1683               	bsf	status, 5	;RP0=1, select bank1
 11329  0D3A  1303               	bcf	status, 6	;RP1=0, select bank1
 11330  0D3B  1E0C               	btfss	(1124/8)^080h,(1124)&7
 11331  0D3C  2D3E               	goto	u367_21
 11332  0D3D  2D3F               	goto	u367_20
 11333  0D3E                     u367_21:
 11334  0D3E  2D5A               	goto	i1l2224
 11335  0D3F                     u367_20:
 11336                           	
 11337  0D3F                     i1l10372:	
 11338  0D3F  085B               	movf	(_txoptr)^080h,w
 11339  0D40  3EA0               	addlw	_txfifo&0ffh
 11340  0D41  0084               	movwf	fsr0
 11341  0D42  1783               	bsf	status, 7	;select IRP bank3
 11342  0D43  0800               	movf	indf,w
 11343  0D44  1283               	bcf	status, 5	;RP0=0, select bank0
 11344  0D45  1303               	bcf	status, 6	;RP1=0, select bank0
 11345  0D46  0099               	movwf	(25)	;volatile
 11346                           	
 11347  0D47                     i1l10374:	
 11348  0D47  3001               	movlw	(01h)
 11349  0D48  00F8               	movwf	(??_isr1+0)+0
 11350  0D49  0878               	movf	(??_isr1+0)+0,w
 11351  0D4A  1683               	bsf	status, 5	;RP0=1, select bank1
 11352  0D4B  1303               	bcf	status, 6	;RP1=0, select bank1
 11353  0D4C  07DB               	addwf	(_txoptr)^080h,f	;volatile
 11354                           	
 11355  0D4D                     i1l10376:	
 11356  0D4D  300F               	movlw	(0Fh)
 11357  0D4E  00F8               	movwf	(??_isr1+0)+0
 11358  0D4F  0878               	movf	(??_isr1+0)+0,w
 11359  0D50  05DB               	andwf	(_txoptr)^080h,f	;volatile
 11360                           	
 11361  0D51                     i1l10378:	
 11362  0D51  085B               	movf	(_txoptr)^080h,w	;volatile
 11363  0D52  065A               	xorwf	(_txiptr)^080h,w	;volatile
 11364  0D53  1D03               	skipz
 11365  0D54  2D56               	goto	u368_21
 11366  0D55  2D57               	goto	u368_20
 11367  0D56                     u368_21:
 11368  0D56  2D5A               	goto	i1l2224
 11369  0D57                     u368_20:
 11370                           	
 11371  0D57                     i1l10380:	
 11372  0D57  120C               	bcf	(1124/8)^080h,(1124)&7
 11373  0D58  2D5A               	goto	i1l2224
 11374                           	
 11375  0D59                     i1l2223:	
 11376  0D59  2D5A               	goto	i1l2224
 11377                           	
 11378  0D5A                     i1l2222:	
 11379                           	line	134
 11380                           	
 11381  0D5A                     i1l2224:	
 11382  0D5A  087C               	movf	(??_isr1+4),w
 11383  0D5B  1283               	bcf	status, 5	;RP0=0, select bank0
 11384  0D5C  00FF               	movwf	btemp+1
 11385  0D5D  087B               	movf	(??_isr1+3),w
 11386  0D5E  008A               	movwf	pclath
 11387  0D5F  087A               	movf	(??_isr1+2),w
 11388  0D60  0084               	movwf	fsr0
 11389  0D61  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 11390  0D62  0083               	movwf	status
 11391  0D63  0EFE               	swapf	saved_w,f
 11392  0D64  0E7E               	swapf	saved_w,w
 11393  0D65  0009               	retfie
 11394                           	opt stack 0
 11395                           GLOBAL	__end_of_isr1
 11396  0D66                     	__end_of_isr1:
 11397 ;; =============== function _isr1 ends ============
 11398                           
 11399                           	signat	_isr1,88
 11400                           	global	_ReadButtons
 11401                           psect	text1112,local,class=CODE,delta=2
 11402                           global __ptext1112
 11403  15DE                     __ptext1112:
 11404                           
 11405 ;; *************** function _ReadButtons *****************
 11406 ;; Defined at:
 11407 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11408 ;; Parameters:    Size  Location     Type
 11409 ;;		None
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;		None
 11412 ;; Return value:  Size  Location     Type
 11413 ;;                  1    wreg      unsigned char 
 11414 ;; Registers used:
 11415 ;;		wreg, status,2, status,0, pclath, cstack
 11416 ;; Tracked objects:
 11417 ;;		On entry : 0/0
 11418 ;;		On exit  : 0/0
 11419 ;;		Unchanged: 0/0
 11420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11421 ;;      Params:         0       0       0       0       0
 11422 ;;      Locals:         0       0       0       0       0
 11423 ;;      Temps:          0       0       0       0       0
 11424 ;;      Totals:         0       0       0       0       0
 11425 ;;Total ram usage:        0 bytes
 11426 ;; Hardware stack levels used:    1
 11427 ;; Hardware stack levels required when called:    1
 11428 ;; This function calls:
 11429 ;;		_Debounce
 11430 ;; This function is called by:
 11431 ;;		_isr1
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           psect	text1112
 11435                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11436                           	line	159
 11437                           	global	__size_of_ReadButtons
 11438  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 11439                           	
 11440  15DE                     _ReadButtons:	
 11441                           	opt	stack 0
 11442                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 11443                           	line	161
 11444                           	
 11445  15DE                     i1l10382:	
 11446                           ;HMI.c: 161: Debounce();
 11447  15DE  120A  158A  22E1   	fcall	_Debounce
              160A  118A         
 11448                           	line	163
 11449                           	
 11450  15E3                     i1l10384:	
 11451                           ;HMI.c: 163: if(UpPressed)
 11452  15E3  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 11453  15E4  2DE6               	goto	u369_21
 11454  15E5  2DE7               	goto	u369_20
 11455  15E6                     u369_21:
 11456  15E6  2DEB               	goto	i1l4509
 11457  15E7                     u369_20:
 11458                           	line	165
 11459                           	
 11460  15E7                     i1l10386:	
 11461                           ;HMI.c: 164: {
 11462                           ;HMI.c: 165: UpPressed = 0;
 11463  15E7  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 11464                           	line	166
 11465                           	
 11466  15E8                     i1l10388:	
 11467                           ;HMI.c: 166: return 1;
 11468  15E8  3001               	movlw	(01h)
 11469  15E9  2E0D               	goto	i1l4510
 11470                           	
 11471  15EA                     i1l10390:	
 11472  15EA  2E0D               	goto	i1l4510
 11473                           	line	168
 11474                           	
 11475  15EB                     i1l4509:	
 11476                           	line	170
 11477                           ;HMI.c: 168: }
 11478                           ;HMI.c: 170: if(DownPressed)
 11479  15EB  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 11480  15EC  2DEE               	goto	u370_21
 11481  15ED  2DEF               	goto	u370_20
 11482  15EE                     u370_21:
 11483  15EE  2DF3               	goto	i1l4511
 11484  15EF                     u370_20:
 11485                           	line	172
 11486                           	
 11487  15EF                     i1l10392:	
 11488                           ;HMI.c: 171: {
 11489                           ;HMI.c: 172: DownPressed = 0;
 11490  15EF  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 11491                           	line	173
 11492                           	
 11493  15F0                     i1l10394:	
 11494                           ;HMI.c: 173: return 2;
 11495  15F0  3002               	movlw	(02h)
 11496  15F1  2E0D               	goto	i1l4510
 11497                           	
 11498  15F2                     i1l10396:	
 11499  15F2  2E0D               	goto	i1l4510
 11500                           	line	175
 11501                           	
 11502  15F3                     i1l4511:	
 11503                           	line	176
 11504                           ;HMI.c: 175: }
 11505                           ;HMI.c: 176: if(LeftPressed)
 11506  15F3  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 11507  15F4  2DF6               	goto	u371_21
 11508  15F5  2DF7               	goto	u371_20
 11509  15F6                     u371_21:
 11510  15F6  2DFB               	goto	i1l4512
 11511  15F7                     u371_20:
 11512                           	line	178
 11513                           	
 11514  15F7                     i1l10398:	
 11515                           ;HMI.c: 177: {
 11516                           ;HMI.c: 178: LeftPressed = 0;
 11517  15F7  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 11518                           	line	179
 11519                           	
 11520  15F8                     i1l10400:	
 11521                           ;HMI.c: 179: return 3;
 11522  15F8  3003               	movlw	(03h)
 11523  15F9  2E0D               	goto	i1l4510
 11524                           	
 11525  15FA                     i1l10402:	
 11526  15FA  2E0D               	goto	i1l4510
 11527                           	line	181
 11528                           	
 11529  15FB                     i1l4512:	
 11530                           	line	182
 11531                           ;HMI.c: 181: }
 11532                           ;HMI.c: 182: if(RightPressed)
 11533  15FB  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 11534  15FC  2DFE               	goto	u372_21
 11535  15FD  2DFF               	goto	u372_20
 11536  15FE                     u372_21:
 11537  15FE  2E03               	goto	i1l4513
 11538  15FF                     u372_20:
 11539                           	line	184
 11540                           	
 11541  15FF                     i1l10404:	
 11542                           ;HMI.c: 183: {
 11543                           ;HMI.c: 184: RightPressed = 0;
 11544  15FF  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 11545                           	line	185
 11546                           	
 11547  1600                     i1l10406:	
 11548                           ;HMI.c: 185: return 4;
 11549  1600  3004               	movlw	(04h)
 11550  1601  2E0D               	goto	i1l4510
 11551                           	
 11552  1602                     i1l10408:	
 11553  1602  2E0D               	goto	i1l4510
 11554                           	line	187
 11555                           	
 11556  1603                     i1l4513:	
 11557                           	line	189
 11558                           ;HMI.c: 187: }
 11559                           ;HMI.c: 189: if(CenterPressed)
 11560  1603  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 11561  1604  2E06               	goto	u373_21
 11562  1605  2E07               	goto	u373_20
 11563  1606                     u373_21:
 11564  1606  2E0B               	goto	i1l10416
 11565  1607                     u373_20:
 11566                           	line	191
 11567                           	
 11568  1607                     i1l10410:	
 11569                           ;HMI.c: 190: {
 11570                           ;HMI.c: 191: CenterPressed = 0;
 11571  1607  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 11572                           	line	192
 11573                           	
 11574  1608                     i1l10412:	
 11575                           ;HMI.c: 192: return 5;
 11576  1608  3005               	movlw	(05h)
 11577  1609  2E0D               	goto	i1l4510
 11578                           	
 11579  160A                     i1l10414:	
 11580  160A  2E0D               	goto	i1l4510
 11581                           	line	194
 11582                           	
 11583  160B                     i1l4514:	
 11584                           	line	195
 11585                           	
 11586  160B                     i1l10416:	
 11587                           ;HMI.c: 194: }
 11588                           ;HMI.c: 195: return 0;
 11589  160B  3000               	movlw	(0)
 11590  160C  2E0D               	goto	i1l4510
 11591                           	
 11592  160D                     i1l10418:	
 11593                           	line	196
 11594                           	
 11595  160D                     i1l4510:	
 11596  160D  0008               	return
 11597                           	opt stack 0
 11598                           GLOBAL	__end_of_ReadButtons
 11599  160E                     	__end_of_ReadButtons:
 11600 ;; =============== function _ReadButtons ends ============
 11601                           
 11602                           	signat	_ReadButtons,89
 11603                           	global	i1___lwmod
 11604                           psect	text1113,local,class=CODE,delta=2
 11605                           global __ptext1113
 11606  1649                     __ptext1113:
 11607                           
 11608 ;; *************** function i1___lwmod *****************
 11609 ;; Defined at:
 11610 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11611 ;; Parameters:    Size  Location     Type
 11612 ;;  __lwmod         2    0[COMMON] unsigned int 
 11613 ;;  __lwmod         2    2[COMMON] unsigned int 
 11614 ;; Auto vars:     Size  Location     Type
 11615 ;;  __lwmod         1    5[COMMON] unsigned char 
 11616 ;; Return value:  Size  Location     Type
 11617 ;;                  2    0[COMMON] unsigned int 
 11618 ;; Registers used:
 11619 ;;		wreg, status,2, status,0
 11620 ;; Tracked objects:
 11621 ;;		On entry : 0/0
 11622 ;;		On exit  : 0/0
 11623 ;;		Unchanged: 0/0
 11624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11625 ;;      Params:         4       0       0       0       0
 11626 ;;      Locals:         1       0       0       0       0
 11627 ;;      Temps:          1       0       0       0       0
 11628 ;;      Totals:         6       0       0       0       0
 11629 ;;Total ram usage:        6 bytes
 11630 ;; Hardware stack levels used:    1
 11631 ;; This function calls:
 11632 ;;		Nothing
 11633 ;; This function is called by:
 11634 ;;		_isr1
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           psect	text1113
 11638                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11639                           	line	5
 11640                           	global	__size_ofi1___lwmod
 11641  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 11642                           	
 11643  1649                     i1___lwmod:	
 11644                           	opt	stack 1
 11645                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 11646                           	line	8
 11647                           	
 11648  1649                     i1l10922:	
 11649  1649  0873               	movf	(i1___lwmod@divisor+1),w
 11650  164A  0472               	iorwf	(i1___lwmod@divisor),w
 11651  164B  1903               	skipnz
 11652  164C  2E4E               	goto	u486_21
 11653  164D  2E4F               	goto	u486_20
 11654  164E                     u486_21:
 11655  164E  2E85               	goto	i1l10940
 11656  164F                     u486_20:
 11657                           	line	9
 11658                           	
 11659  164F                     i1l10924:	
 11660  164F  01F7               	clrf	(i1___lwmod@counter)
 11661  1650  1403               	bsf	status,0
 11662  1651  0DF7               	rlf	(i1___lwmod@counter),f
 11663                           	line	10
 11664  1652  2E5F               	goto	i1l10930
 11665                           	
 11666  1653                     i1l7512:	
 11667                           	line	11
 11668                           	
 11669  1653                     i1l10926:	
 11670  1653  3001               	movlw	01h
 11671                           	
 11672  1654                     u487_25:
 11673  1654  1003               	clrc
 11674  1655  0DF2               	rlf	(i1___lwmod@divisor),f
 11675  1656  0DF3               	rlf	(i1___lwmod@divisor+1),f
 11676  1657  3EFF               	addlw	-1
 11677  1658  1D03               	skipz
 11678  1659  2E54               	goto	u487_25
 11679                           	line	12
 11680                           	
 11681  165A                     i1l10928:	
 11682  165A  3001               	movlw	(01h)
 11683  165B  00F6               	movwf	(??i1___lwmod+0)+0
 11684  165C  0876               	movf	(??i1___lwmod+0)+0,w
 11685  165D  07F7               	addwf	(i1___lwmod@counter),f
 11686  165E  2E5F               	goto	i1l10930
 11687                           	line	13
 11688                           	
 11689  165F                     i1l7511:	
 11690                           	line	10
 11691                           	
 11692  165F                     i1l10930:	
 11693  165F  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 11694  1660  2E62               	goto	u488_21
 11695  1661  2E63               	goto	u488_20
 11696  1662                     u488_21:
 11697  1662  2E53               	goto	i1l10926
 11698  1663                     u488_20:
 11699  1663  2E65               	goto	i1l10932
 11700                           	
 11701  1664                     i1l7513:	
 11702  1664  2E65               	goto	i1l10932
 11703                           	line	14
 11704                           	
 11705  1665                     i1l7514:	
 11706                           	line	15
 11707                           	
 11708  1665                     i1l10932:	
 11709  1665  0873               	movf	(i1___lwmod@divisor+1),w
 11710  1666  0275               	subwf	(i1___lwmod@dividend+1),w
 11711  1667  1D03               	skipz
 11712  1668  2E6B               	goto	u489_25
 11713  1669  0872               	movf	(i1___lwmod@divisor),w
 11714  166A  0274               	subwf	(i1___lwmod@dividend),w
 11715  166B                     u489_25:
 11716  166B  1C03               	skipc
 11717  166C  2E6E               	goto	u489_21
 11718  166D  2E6F               	goto	u489_20
 11719  166E                     u489_21:
 11720  166E  2E76               	goto	i1l10936
 11721  166F                     u489_20:
 11722                           	line	16
 11723                           	
 11724  166F                     i1l10934:	
 11725  166F  0872               	movf	(i1___lwmod@divisor),w
 11726  1670  02F4               	subwf	(i1___lwmod@dividend),f
 11727  1671  0873               	movf	(i1___lwmod@divisor+1),w
 11728  1672  1C03               	skipc
 11729  1673  03F5               	decf	(i1___lwmod@dividend+1),f
 11730  1674  02F5               	subwf	(i1___lwmod@dividend+1),f
 11731  1675  2E76               	goto	i1l10936
 11732                           	
 11733  1676                     i1l7515:	
 11734                           	line	17
 11735                           	
 11736  1676                     i1l10936:	
 11737  1676  3001               	movlw	01h
 11738                           	
 11739  1677                     u490_25:
 11740  1677  1003               	clrc
 11741  1678  0CF3               	rrf	(i1___lwmod@divisor+1),f
 11742  1679  0CF2               	rrf	(i1___lwmod@divisor),f
 11743  167A  3EFF               	addlw	-1
 11744  167B  1D03               	skipz
 11745  167C  2E77               	goto	u490_25
 11746                           	line	18
 11747                           	
 11748  167D                     i1l10938:	
 11749  167D  3001               	movlw	low(01h)
 11750  167E  02F7               	subwf	(i1___lwmod@counter),f
 11751  167F  1D03               	btfss	status,2
 11752  1680  2E82               	goto	u491_21
 11753  1681  2E83               	goto	u491_20
 11754  1682                     u491_21:
 11755  1682  2E65               	goto	i1l10932
 11756  1683                     u491_20:
 11757  1683  2E85               	goto	i1l10940
 11758                           	
 11759  1684                     i1l7516:	
 11760  1684  2E85               	goto	i1l10940
 11761                           	line	19
 11762                           	
 11763  1685                     i1l7510:	
 11764                           	line	20
 11765                           	
 11766  1685                     i1l10940:	
 11767  1685  0875               	movf	(i1___lwmod@dividend+1),w
 11768  1686  01F3               	clrf	(?i1___lwmod+1)
 11769  1687  07F3               	addwf	(?i1___lwmod+1)
 11770  1688  0874               	movf	(i1___lwmod@dividend),w
 11771  1689  01F2               	clrf	(?i1___lwmod)
 11772  168A  07F2               	addwf	(?i1___lwmod)
 11773                           
 11774  168B  2E8C               	goto	i1l7517
 11775                           	
 11776  168C                     i1l10942:	
 11777                           	line	21
 11778                           	
 11779  168C                     i1l7517:	
 11780  168C  0008               	return
 11781                           	opt stack 0
 11782                           GLOBAL	__end_ofi1___lwmod
 11783  168D                     	__end_ofi1___lwmod:
 11784 ;; =============== function i1___lwmod ends ============
 11785                           
 11786                           	signat	i1___lwmod,90
 11787                           	global	_Debounce
 11788                           psect	text1114,local,class=CODE,delta=2
 11789                           global __ptext1114
 11790  0AE1                     __ptext1114:
 11791                           
 11792 ;; *************** function _Debounce *****************
 11793 ;; Defined at:
 11794 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11795 ;; Parameters:    Size  Location     Type
 11796 ;;		None
 11797 ;; Auto vars:     Size  Location     Type
 11798 ;;		None
 11799 ;; Return value:  Size  Location     Type
 11800 ;;		None               void
 11801 ;; Registers used:
 11802 ;;		wreg, status,2, status,0
 11803 ;; Tracked objects:
 11804 ;;		On entry : 0/0
 11805 ;;		On exit  : 0/0
 11806 ;;		Unchanged: 0/0
 11807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11808 ;;      Params:         0       0       0       0       0
 11809 ;;      Locals:         0       0       0       0       0
 11810 ;;      Temps:          1       0       0       0       0
 11811 ;;      Totals:         1       0       0       0       0
 11812 ;;Total ram usage:        1 bytes
 11813 ;; Hardware stack levels used:    1
 11814 ;; This function calls:
 11815 ;;		Nothing
 11816 ;; This function is called by:
 11817 ;;		_ReadButtons
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           psect	text1114
 11821                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11822                           	line	77
 11823                           	global	__size_of_Debounce
 11824  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 11825                           	
 11826  0AE1                     _Debounce:	
 11827                           	opt	stack 0
 11828                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 11829                           	line	79
 11830                           	
 11831  0AE1                     i1l10492:	
 11832                           ;HMI.c: 79: if(!RB2)
 11833  0AE1  1283               	bcf	status, 5	;RP0=0, select bank0
 11834  0AE2  1303               	bcf	status, 6	;RP1=0, select bank0
 11835  0AE3  1906               	btfsc	(50/8),(50)&7
 11836  0AE4  2AE6               	goto	u378_21
 11837  0AE5  2AE7               	goto	u378_20
 11838  0AE6                     u378_21:
 11839  0AE6  2AFB               	goto	i1l4491
 11840  0AE7                     u378_20:
 11841                           	line	81
 11842                           	
 11843  0AE7                     i1l10494:	
 11844                           ;HMI.c: 80: {
 11845                           ;HMI.c: 81: UpDebounceCount++;
 11846  0AE7  3001               	movlw	(01h)
 11847  0AE8  00F2               	movwf	(??_Debounce+0)+0
 11848  0AE9  0872               	movf	(??_Debounce+0)+0,w
 11849  0AEA  1683               	bsf	status, 5	;RP0=1, select bank1
 11850  0AEB  1303               	bcf	status, 6	;RP1=0, select bank1
 11851  0AEC  07D0               	addwf	(_UpDebounceCount)^080h,f	;volatile
 11852                           	line	82
 11853                           	
 11854  0AED                     i1l10496:	
 11855                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 11856  0AED  300A               	movlw	(0Ah)
 11857  0AEE  0250               	subwf	(_UpDebounceCount)^080h,w	;volatile
 11858  0AEF  1C03               	skipc
 11859  0AF0  2AF2               	goto	u379_21
 11860  0AF1  2AF3               	goto	u379_20
 11861  0AF2                     u379_21:
 11862  0AF2  2AFF               	goto	i1l4493
 11863  0AF3                     u379_20:
 11864                           	
 11865  0AF3                     i1l10498:	
 11866  0AF3  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 11867  0AF4  2AF6               	goto	u380_21
 11868  0AF5  2AF7               	goto	u380_20
 11869  0AF6                     u380_21:
 11870  0AF6  2AFF               	goto	i1l4493
 11871  0AF7                     u380_20:
 11872                           	line	84
 11873                           	
 11874  0AF7                     i1l10500:	
 11875                           ;HMI.c: 83: {
 11876                           ;HMI.c: 84: UpPressed = 1;
 11877  0AF7  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 11878                           	line	85
 11879                           ;HMI.c: 85: UpReleased = 0;
 11880  0AF8  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 11881  0AF9  2AFF               	goto	i1l4493
 11882                           	line	86
 11883                           	
 11884  0AFA                     i1l4492:	
 11885                           	line	87
 11886                           ;HMI.c: 86: }
 11887                           ;HMI.c: 87: }
 11888  0AFA  2AFF               	goto	i1l4493
 11889                           	line	88
 11890                           	
 11891  0AFB                     i1l4491:	
 11892                           	line	90
 11893                           ;HMI.c: 88: else
 11894                           ;HMI.c: 89: {
 11895                           ;HMI.c: 90: UpDebounceCount = 0;
 11896  0AFB  1683               	bsf	status, 5	;RP0=1, select bank1
 11897  0AFC  1303               	bcf	status, 6	;RP1=0, select bank1
 11898  0AFD  01D0               	clrf	(_UpDebounceCount)^080h	;volatile
 11899                           	line	91
 11900                           ;HMI.c: 91: UpReleased = 1;
 11901  0AFE  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 11902                           	line	92
 11903                           	
 11904  0AFF                     i1l4493:	
 11905                           	line	95
 11906                           ;HMI.c: 92: }
 11907                           ;HMI.c: 95: if(!RB3)
 11908  0AFF  1283               	bcf	status, 5	;RP0=0, select bank0
 11909  0B00  1303               	bcf	status, 6	;RP1=0, select bank0
 11910  0B01  1986               	btfsc	(51/8),(51)&7
 11911  0B02  2B04               	goto	u381_21
 11912  0B03  2B05               	goto	u381_20
 11913  0B04                     u381_21:
 11914  0B04  2B19               	goto	i1l4494
 11915  0B05                     u381_20:
 11916                           	line	97
 11917                           	
 11918  0B05                     i1l10502:	
 11919                           ;HMI.c: 96: {
 11920                           ;HMI.c: 97: DownDebounceCount++;
 11921  0B05  3001               	movlw	(01h)
 11922  0B06  00F2               	movwf	(??_Debounce+0)+0
 11923  0B07  0872               	movf	(??_Debounce+0)+0,w
 11924  0B08  1683               	bsf	status, 5	;RP0=1, select bank1
 11925  0B09  1303               	bcf	status, 6	;RP1=0, select bank1
 11926  0B0A  07CC               	addwf	(_DownDebounceCount)^080h,f	;volatile
 11927                           	line	98
 11928                           	
 11929  0B0B                     i1l10504:	
 11930                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 11931  0B0B  300A               	movlw	(0Ah)
 11932  0B0C  024C               	subwf	(_DownDebounceCount)^080h,w	;volatile
 11933  0B0D  1C03               	skipc
 11934  0B0E  2B10               	goto	u382_21
 11935  0B0F  2B11               	goto	u382_20
 11936  0B10                     u382_21:
 11937  0B10  2B1D               	goto	i1l4496
 11938  0B11                     u382_20:
 11939                           	
 11940  0B11                     i1l10506:	
 11941  0B11  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 11942  0B12  2B14               	goto	u383_21
 11943  0B13  2B15               	goto	u383_20
 11944  0B14                     u383_21:
 11945  0B14  2B1D               	goto	i1l4496
 11946  0B15                     u383_20:
 11947                           	line	100
 11948                           	
 11949  0B15                     i1l10508:	
 11950                           ;HMI.c: 99: {
 11951                           ;HMI.c: 100: DownPressed = 1;
 11952  0B15  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 11953                           	line	101
 11954                           ;HMI.c: 101: DownReleased = 0;
 11955  0B16  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 11956  0B17  2B1D               	goto	i1l4496
 11957                           	line	102
 11958                           	
 11959  0B18                     i1l4495:	
 11960                           	line	103
 11961                           ;HMI.c: 102: }
 11962                           ;HMI.c: 103: }
 11963  0B18  2B1D               	goto	i1l4496
 11964                           	line	104
 11965                           	
 11966  0B19                     i1l4494:	
 11967                           	line	106
 11968                           ;HMI.c: 104: else
 11969                           ;HMI.c: 105: {
 11970                           ;HMI.c: 106: DownDebounceCount = 0;
 11971  0B19  1683               	bsf	status, 5	;RP0=1, select bank1
 11972  0B1A  1303               	bcf	status, 6	;RP1=0, select bank1
 11973  0B1B  01CC               	clrf	(_DownDebounceCount)^080h	;volatile
 11974                           	line	107
 11975                           ;HMI.c: 107: DownReleased = 1;
 11976  0B1C  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 11977                           	line	108
 11978                           	
 11979  0B1D                     i1l4496:	
 11980                           	line	110
 11981                           ;HMI.c: 108: }
 11982                           ;HMI.c: 110: if(!RB4)
 11983  0B1D  1283               	bcf	status, 5	;RP0=0, select bank0
 11984  0B1E  1303               	bcf	status, 6	;RP1=0, select bank0
 11985  0B1F  1A06               	btfsc	(52/8),(52)&7
 11986  0B20  2B22               	goto	u384_21
 11987  0B21  2B23               	goto	u384_20
 11988  0B22                     u384_21:
 11989  0B22  2B37               	goto	i1l4497
 11990  0B23                     u384_20:
 11991                           	line	112
 11992                           	
 11993  0B23                     i1l10510:	
 11994                           ;HMI.c: 111: {
 11995                           ;HMI.c: 112: LeftDebounceCount++;
 11996  0B23  3001               	movlw	(01h)
 11997  0B24  00F2               	movwf	(??_Debounce+0)+0
 11998  0B25  0872               	movf	(??_Debounce+0)+0,w
 11999  0B26  1683               	bsf	status, 5	;RP0=1, select bank1
 12000  0B27  1303               	bcf	status, 6	;RP1=0, select bank1
 12001  0B28  07CD               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 12002                           	line	113
 12003                           	
 12004  0B29                     i1l10512:	
 12005                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 12006  0B29  300A               	movlw	(0Ah)
 12007  0B2A  024D               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 12008  0B2B  1C03               	skipc
 12009  0B2C  2B2E               	goto	u385_21
 12010  0B2D  2B2F               	goto	u385_20
 12011  0B2E                     u385_21:
 12012  0B2E  2B3B               	goto	i1l4499
 12013  0B2F                     u385_20:
 12014                           	
 12015  0B2F                     i1l10514:	
 12016  0B2F  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 12017  0B30  2B32               	goto	u386_21
 12018  0B31  2B33               	goto	u386_20
 12019  0B32                     u386_21:
 12020  0B32  2B3B               	goto	i1l4499
 12021  0B33                     u386_20:
 12022                           	line	115
 12023                           	
 12024  0B33                     i1l10516:	
 12025                           ;HMI.c: 114: {
 12026                           ;HMI.c: 115: LeftPressed = 1;
 12027  0B33  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 12028                           	line	116
 12029                           ;HMI.c: 116: LeftReleased = 0;
 12030  0B34  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 12031  0B35  2B3B               	goto	i1l4499
 12032                           	line	117
 12033                           	
 12034  0B36                     i1l4498:	
 12035                           	line	118
 12036                           ;HMI.c: 117: }
 12037                           ;HMI.c: 118: }
 12038  0B36  2B3B               	goto	i1l4499
 12039                           	line	119
 12040                           	
 12041  0B37                     i1l4497:	
 12042                           	line	121
 12043                           ;HMI.c: 119: else
 12044                           ;HMI.c: 120: {
 12045                           ;HMI.c: 121: LeftDebounceCount = 0;
 12046  0B37  1683               	bsf	status, 5	;RP0=1, select bank1
 12047  0B38  1303               	bcf	status, 6	;RP1=0, select bank1
 12048  0B39  01CD               	clrf	(_LeftDebounceCount)^080h	;volatile
 12049                           	line	122
 12050                           ;HMI.c: 122: LeftReleased = 1;
 12051  0B3A  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 12052                           	line	123
 12053                           	
 12054  0B3B                     i1l4499:	
 12055                           	line	125
 12056                           ;HMI.c: 123: }
 12057                           ;HMI.c: 125: if(!RB5)
 12058  0B3B  1283               	bcf	status, 5	;RP0=0, select bank0
 12059  0B3C  1303               	bcf	status, 6	;RP1=0, select bank0
 12060  0B3D  1A86               	btfsc	(53/8),(53)&7
 12061  0B3E  2B40               	goto	u387_21
 12062  0B3F  2B41               	goto	u387_20
 12063  0B40                     u387_21:
 12064  0B40  2B55               	goto	i1l4500
 12065  0B41                     u387_20:
 12066                           	line	127
 12067                           	
 12068  0B41                     i1l10518:	
 12069                           ;HMI.c: 126: {
 12070                           ;HMI.c: 127: RightDebounceCount++;
 12071  0B41  3001               	movlw	(01h)
 12072  0B42  00F2               	movwf	(??_Debounce+0)+0
 12073  0B43  0872               	movf	(??_Debounce+0)+0,w
 12074  0B44  1683               	bsf	status, 5	;RP0=1, select bank1
 12075  0B45  1303               	bcf	status, 6	;RP1=0, select bank1
 12076  0B46  07CF               	addwf	(_RightDebounceCount)^080h,f	;volatile
 12077                           	line	128
 12078                           	
 12079  0B47                     i1l10520:	
 12080                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 12081  0B47  300A               	movlw	(0Ah)
 12082  0B48  024F               	subwf	(_RightDebounceCount)^080h,w	;volatile
 12083  0B49  1C03               	skipc
 12084  0B4A  2B4C               	goto	u388_21
 12085  0B4B  2B4D               	goto	u388_20
 12086  0B4C                     u388_21:
 12087  0B4C  2B59               	goto	i1l4502
 12088  0B4D                     u388_20:
 12089                           	
 12090  0B4D                     i1l10522:	
 12091  0B4D  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 12092  0B4E  2B50               	goto	u389_21
 12093  0B4F  2B51               	goto	u389_20
 12094  0B50                     u389_21:
 12095  0B50  2B59               	goto	i1l4502
 12096  0B51                     u389_20:
 12097                           	line	130
 12098                           	
 12099  0B51                     i1l10524:	
 12100                           ;HMI.c: 129: {
 12101                           ;HMI.c: 130: RightPressed = 1;
 12102  0B51  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 12103                           	line	131
 12104                           ;HMI.c: 131: RightReleased = 0;
 12105  0B52  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 12106  0B53  2B59               	goto	i1l4502
 12107                           	line	132
 12108                           	
 12109  0B54                     i1l4501:	
 12110                           	line	133
 12111                           ;HMI.c: 132: }
 12112                           ;HMI.c: 133: }
 12113  0B54  2B59               	goto	i1l4502
 12114                           	line	134
 12115                           	
 12116  0B55                     i1l4500:	
 12117                           	line	136
 12118                           ;HMI.c: 134: else
 12119                           ;HMI.c: 135: {
 12120                           ;HMI.c: 136: RightDebounceCount = 0;
 12121  0B55  1683               	bsf	status, 5	;RP0=1, select bank1
 12122  0B56  1303               	bcf	status, 6	;RP1=0, select bank1
 12123  0B57  01CF               	clrf	(_RightDebounceCount)^080h	;volatile
 12124                           	line	137
 12125                           ;HMI.c: 137: RightReleased = 1;
 12126  0B58  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 12127                           	line	138
 12128                           	
 12129  0B59                     i1l4502:	
 12130                           	line	140
 12131                           ;HMI.c: 138: }
 12132                           ;HMI.c: 140: if(!RB6)
 12133  0B59  1283               	bcf	status, 5	;RP0=0, select bank0
 12134  0B5A  1303               	bcf	status, 6	;RP1=0, select bank0
 12135  0B5B  1B06               	btfsc	(54/8),(54)&7
 12136  0B5C  2B5E               	goto	u390_21
 12137  0B5D  2B5F               	goto	u390_20
 12138  0B5E                     u390_21:
 12139  0B5E  2B73               	goto	i1l4503
 12140  0B5F                     u390_20:
 12141                           	line	142
 12142                           	
 12143  0B5F                     i1l10526:	
 12144                           ;HMI.c: 141: {
 12145                           ;HMI.c: 142: CenterDebounceCount++;
 12146  0B5F  3001               	movlw	(01h)
 12147  0B60  00F2               	movwf	(??_Debounce+0)+0
 12148  0B61  0872               	movf	(??_Debounce+0)+0,w
 12149  0B62  1683               	bsf	status, 5	;RP0=1, select bank1
 12150  0B63  1303               	bcf	status, 6	;RP1=0, select bank1
 12151  0B64  07C9               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 12152                           	line	143
 12153                           	
 12154  0B65                     i1l10528:	
 12155                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 12156  0B65  300A               	movlw	(0Ah)
 12157  0B66  0249               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 12158  0B67  1C03               	skipc
 12159  0B68  2B6A               	goto	u391_21
 12160  0B69  2B6B               	goto	u391_20
 12161  0B6A                     u391_21:
 12162  0B6A  2B78               	goto	i1l4506
 12163  0B6B                     u391_20:
 12164                           	
 12165  0B6B                     i1l10530:	
 12166  0B6B  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 12167  0B6C  2B6E               	goto	u392_21
 12168  0B6D  2B6F               	goto	u392_20
 12169  0B6E                     u392_21:
 12170  0B6E  2B78               	goto	i1l4506
 12171  0B6F                     u392_20:
 12172                           	line	145
 12173                           	
 12174  0B6F                     i1l10532:	
 12175                           ;HMI.c: 144: {
 12176                           ;HMI.c: 145: CenterPressed = 1;
 12177  0B6F  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 12178                           	line	146
 12179                           ;HMI.c: 146: CenterReleased = 0;
 12180  0B70  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 12181  0B71  2B78               	goto	i1l4506
 12182                           	line	147
 12183                           	
 12184  0B72                     i1l4504:	
 12185                           	line	148
 12186                           ;HMI.c: 147: }
 12187                           ;HMI.c: 148: }
 12188  0B72  2B78               	goto	i1l4506
 12189                           	line	149
 12190                           	
 12191  0B73                     i1l4503:	
 12192                           	line	151
 12193                           ;HMI.c: 149: else
 12194                           ;HMI.c: 150: {
 12195                           ;HMI.c: 151: CenterDebounceCount = 0;
 12196  0B73  1683               	bsf	status, 5	;RP0=1, select bank1
 12197  0B74  1303               	bcf	status, 6	;RP1=0, select bank1
 12198  0B75  01C9               	clrf	(_CenterDebounceCount)^080h	;volatile
 12199                           	line	152
 12200                           ;HMI.c: 152: CenterReleased = 1;
 12201  0B76  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 12202  0B77  2B78               	goto	i1l4506
 12203                           	line	153
 12204                           	
 12205  0B78                     i1l4505:	
 12206                           	line	154
 12207                           	
 12208  0B78                     i1l4506:	
 12209  0B78  0008               	return
 12210                           	opt stack 0
 12211                           GLOBAL	__end_of_Debounce
 12212  0B79                     	__end_of_Debounce:
 12213 ;; =============== function _Debounce ends ============
 12214                           
 12215                           	signat	_Debounce,88
 12216                           psect	text1115,local,class=CODE,delta=2
 12217                           global __ptext1115
 12218  0000                     __ptext1115:
 12219                           	global	btemp
 12220  007E                     	btemp set 07Eh
 12221                           
 12222                           	DABS	1,126,2	;btemp
 12223                           	global	wtemp0
 12224  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 11 15:15:51 2015

 __end_of_lcd_write_control 13A2             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                _IRdistance 00B0                          fsr 0004         ___wmul@multiplicand 0022  
                       l700 13B7                         l703 142C                         l704 142C  
                       l705 1430                         l706 144F                         l690 1612  
                       l691 163B                         l692 1616                         l693 161A  
                       l694 161E                         l695 1622                         l696 1626  
                       l689 162A                         l697 1648                         _GIE 005F  
                       _RB0 0030                         _RC0 0038                         _RB2 0032  
                       _RC1 0039                         _RB3 0033                         _RC2 003A  
                       _RB4 0034                         _RB5 0035                         _RE0 0048  
                       _RB6 0036                         _RE1 0049                         _RE2 004A  
                       _RX9 00C6                         _TX9 04C6                         _abs 0805  
                       _pos 00C0                         fsr0 0004                         indf 0000  
              ___awmod@sign 0026            ??_robotMoveSpeed 005D             ?_lcd_set_cursor 0072  
                      ?_abs 0026                        l3000 13CD                        l1402 1366  
                      l3010 0274                        l1410 1554                        l3011 01C5  
                      l3003 006D                        l1411 1554                        l3004 0277  
                      l3012 0273                        l3013 021B                        l3005 00C3  
                      l1405 1346                        l3006 0276                        l3014 0272  
                      l2230 0286                        l3015 0271                        l3007 0119  
                      l2231 029C                        l3008 0275                        l3016 0277  
                      l1408 1543                        l2240 0499                        l2232 02AD  
                      l3009 016F                        l1409 152A                        l2233 04A9  
                      l2241 02FE                        l2250 03F6                        l2242 0327  
                      l2234 02AE                        l2227 15DD                        l2235 04BF  
                      l2251 04A0                        l2243 0341                        l2260 0857  
                      l2252 04A1                        l2244 036E                        l2236 02B4  
                      l1429 14A4                        l2261 0884                        l2253 04A7  
                      l2245 03A5                        l2237 02D9                        l2270 0896  
                      l2262 0858                        l2254 04C6                        l2246 03BF  
                      l2238 02E9                        l2271 0897                        l2263 0895  
                      l2255 04C7                        l2247 03D7                        l2239 02F9  
                      l2264 085A                        l2280 16F2                        l2256 04C7  
                      l2248 03F7                        l2265 085C                        l2281 16F4  
                      l2266 086C                        l2290 0A5A                        l2282 16F6  
                      l2274 16E2                        l2267 087A                        l2259 084C  
                      l2291 0A2D                        l2283 1718                        l2275 16ED  
                      l2268 0897                        l2292 0A44                        l2276 1705  
                      l2284 1702                        l2269 0882                        l2293 0A63  
                      l2285 1717                        l2277 16EE                        l2286 1718  
                      l2278 1716                        l1399 13A1                        l2279 16F0  
                      l2289 0A01                        l6010 13FF                        l6021 15AE  
                      l6013 06A9                        l6014 0748                        l3711 1382  
                      l6015 06E0                        l6031 0DCF                        l4520 171E  
                      l3712 1382                        l3720 17CE                        l6024 092E  
                      l6016 0747                        l6032 0D78                        l6040 0BD6  
                      l4521 171F                        l3713 1387                        l3721 17EE  
                      l6025 0973                        l6017 0746                        l6033 0D8E  
                      l6041 0B8D                        l4522 1730                        l3714 138D  
                      l3722 17FF                        l6026 0953                        l6018 0748  
                      l6042 0BA3                        l4523 1731                        l6027 0972  
                      l6035 0D8A                        l4524 1743                        l6028 0973  
                      l4532 061B                        l4540 0628                        l6036 0E06  
                      l6044 0B9F                        l4517 174B                        l4525 1744  
                      l3717 17C0                        l4533 04E3                        l6037 0E11  
                      l6045 0C0D                        l4526 175F                        l4518 171D  
                      l3718 17C7                        l4534 054A                        l6046 0C18  
                      l4519 175D                        l4527 1749                        l3719 17E4  
                      l4535 055D                        l4536 0628                        l6049 0839  
                      l4537 05A5                        l4538 05F0                        l4539 0619  
                      l2994 098D                        l2995 09C3                        l7500 17A8  
                      l2996 09AF                        l7501 177A                        l2997 09E9  
                      l7502 176E                        l7510 16CB                        l7503 177F  
                      l7511 16A5                        l7504 1780                        l7512 1699  
                      l6800 0F36                        l7600 0EE3                        l7505 1799  
                      l7513 16AA                        l6801 0F1F                        l7506 17A7  
                      l7514 16AB                        l7610 0C91                        l6810 0FF9  
                      l6802 0F50                        l7507 17AF                        l7515 16BC  
                      l7611 0C9E                        l7603 0C36                        l6811 0FFF  
                      l6803 0F5B                        l7516 16CA                        l7612 0C92  
                      l7604 0CBE                        l6804 0F83                        l7517 16D2  
                      l7613 0CA4                        l7605 0C81                        l6805 0F78  
                      l7614 0CB5                        l7606 0C6D                        l7710 08ED  
                      l7702 08A8                        l6806 0F95                        l7630 150D  
                      l7607 0C6E                        l7711 08F8                        l7703 08B2  
                      l6807 0FDA                        l7631 1528                        l6760 1564  
                      l7608 0C80                        l7712 08FF                        l7704 08EE  
                      l6808 0F9A                        l6752 14D3                        l6761 1581  
                      l7609 0CA5                        l7705 08C8                        l6809 0FE5  
                      l6753 14D2                        l7706 08BC                        l6754 14DC  
                      l7707 08CD                        l6755 14FC                        l6748 13D9  
                      l7708 08CE                        l6749 13E6                        l7709 08DF  
                      l6758 155A                        l7494 14AA                        l7830 0A88  
                      l6783 1479                        l6759 1559                        l7495 14B4  
                      l7831 0A7B                        l7496 14C9                        l7840 0AE0  
                      l7832 0A8F                        l6792 0FE6                        l7592 0E2D  
                      l7497 14D0                        l7833 0AA6                        l6793 0F08  
                      l7593 0EFF                        l7834 0A90                        l7826 0A7A  
                      l6794 0F1A                        l7594 0E46                        l7835 0AAD  
                      l6795 0F21                        l7595 0E86                        l7836 0AB9  
                      l7828 0A72                        l6796 0F1C                        l7596 0E9B  
                      l7837 0AAE                        l7829 0AE0                        l6797 0FFA  
                      l7597 0EB2                        l7838 0ABD                        l6798 0F1D  
                      l7598 0EB7                        l7839 0AC7                        l6799 0F1E  
                      l7599 0ECC                        _CHS0 00FB                        _CHS1 00FC  
                      _CHS2 00FD                        STR_1 07AB                        STR_2 07A2  
                      STR_3 07BD                        STR_4 07C6                        STR_5 07B4  
                      STR_6 0799                        STR_7 07EA                        STR_8 07EE  
                      STR_9 07D6                        _BRGH 04C2                        _CREN 00C4  
                      u4000 14AE                        u4001 14AD                        u4100 17A6  
                      u4101 17A5                        u4030 14C8                        u4110 1695  
                      u4031 14C7                        u4015 14B5                        u4111 1694  
                      u4040 176A                        u5000 00CC                        u4025 14BC  
                      u4041 1769                        u5001 00CB                        u4130 16A9  
                      u5010 00D5                        u4131 16A8                        u5011 00D4  
                      u4060 177E                        u4140 16B5                        u5020 0122  
                      u5100 0F0E                        u4061 177D                        u4141 16B4  
                      u4125 169A                        u5021 0121                        u5101 0F0D  
                      u5030 012B                        u5110 0F46                        u4055 176F  
                      u5031 012A                        u5111 0F45                        u4080 1791  
                      u4160 16C9                        u5040 0178                        u5120 0F59  
                      u5200 0E25                        u4081 1790                        u4161 16C8  
                      u4145 16B1                        u5041 0177                        u5121 0F58  
                      u5201 0E24                        u4410 0A6A                        u5050 0181  
                      u5130 0F76                        u5210 0E3E                        u4075 1781  
                      u4155 16BD                        u5051 0180                        u5131 0F75  
                      u5211 0E3D                        u4500 0AD2                        u4420 0A71  
                      u5060 01CE                        u5140 0F82                        u5220 0E56  
                      u4085 178D                        u4421 0A70                        u5061 01CD  
                      u5141 0F81                        u5301 0EC4                        u3550 1430  
                      u4510 0ADF                        u5070 01D7                        u5150 0F89  
                      u5302 0ECB                        u5230 0E68                        u3551 142F  
                      u4095 179A                        u5071 01D6                        u5151 0F88  
                      u5135 0F72                        u4440 0A8E                        u4600 0C2C  
                      u5080 0224                        u5160 0FE4                        u5240 0E8A  
                      u5400 09A3                        u4505 0ACE                        u4441 0A8D  
                      u4601 0C2B                        u5081 0223                        u5161 0FE3  
                      u5241 0E89                        u5225 0E52                        u5401 09A2  
                      u4610 0C41                        u5090 022D                        u5170 0FF8  
                      u5330 0EE2                        u5410 09C2                        u4435 0A80  
                      u5091 022C                        u5171 0FF7                        u5331 0EE1  
                      u5315 0ECD                        u5251 0E93                        u5235 0E64  
                      u5411 09C1                        _PEIE 005E                        u3740 172B  
                      u4460 0AAC                        u4620 0C5C                        u5180 14DC  
                      u5252 0E9A                        u5340 1504                        u5420 04D4  
                      u5500 0D89                        u3565 143D                        u3741 172A  
                      u4461 0AAB                        u4621 0C5B                        u5181 14DB  
                      u5325 0ED5                        u5341 1503                        u3750 1740  
                      u4630 0C63                        u4710 089F                        u5350 1553  
                      u5430 0537                        u5510 0E05                        u3751 173F  
                      u4455 0A9F                        u4631 0C62                        u4615 0C3D  
                      u4711 089E                        u5351 1552                        u5415 09BE  
                      u5431 0536                        u5511 0E04                        u3760 1564  
                      u4480 0ABD                        u4720 08AC                        u5280 0EB1  
                      u5360 0679                        u5440 0850                        u5520 0B9A  
                      u5600 0350                        u3761 1563                        u4481 0ABC  
                      u4721 08AB                        u5281 0EB0                        u5265 0E9C  
                      u5361 0678                        u5441 084F                        u5521 0B99  
                      u5601 034F                        u3770 1386                        u3930 13D4  
                      u4490 0AC1                        u4650 0C7F                        u4730 08B8  
                      u5290 0EBB                        u5370 06B0                        u5450 09FF  
                      u5530 0B9E                        u5610 035F                        u3771 1385  
                      u3931 13D3                        u4491 0AC0                        u4475 0AB1  
                      u4651 0C7E                        u4731 08B7                        u5195 081A  
                      u5291 0EBA                        u5275 0EA4                        u5371 06AF  
                      u5435 0533                        u5451 09FE                        u5515 0E01  
                      u5611 035E                        _RCIE 0465                        u3940 13E1  
                      u4660 0C87                        u5380 06E7                        u5460 0A18  
                      u5540 0C0C                        u5700 049F                        u5620 037D  
                      _RCIF 0065                        u3941 13E0                        u4661 0C86  
                      u4645 0C6F                        u5381 06E6                        u5461 0A17  
                      u5541 0C0B                        u5621 037C                        u5605 034C  
                      u4750 08CC                        u5390 098B                        u5470 0A3D  
                      u5550 16E6                        u5630 038C                        u4751 08CB  
                      u5391 098A                        u5471 0A3C                        u5455 09FB  
                      u5551 16E5                        u5631 038B                        u5615 035B  
                      u4680 0CA3                        u4760 08D8                        u4920 17B9  
                      u5480 0A59                        u5640 03B4                        u5560 028A  
                      u4681 0CA2                        u4761 08D7                        u4745 08BD  
                      u4921 17B8                        u5481 0A58                        u5465 0A14  
                      u5545 0C08                        u5641 03B3                        u5625 0379  
                      u5561 0289                        u4690 0CA9                        u4930 17EE  
                      u5490 0D85                        u5650 03BA                        u5570 02A0  
                      u4675 0C94                        u4931 17ED                        u5395 0987  
                      u5491 0D84                        u5651 03B9                        u5635 0388  
                      u4780 08EC                        u4940 090F                        u5660 03C5  
                      u5580 031C                        u4781 08EB                        u4765 08D4  
                      u4941 090E                        u5485 0A55                        u5717 0416  
                      u5661 03C4                        u5645 03B0                        u5581 031B  
                      u4790 08F2                        u4950 0934                        u5670 03D2  
                      u5590 0336                        u4775 08E0                        u4935 17EA  
                      u5807 17D7                        u4951 0933                        u5727 0465  
                      u5671 03D1                        u5591 0335                        u4960 0020  
                      u5680 03E6                        u5817 1362                        u4945 090B  
                      u4961 001F                        u5737 0482                        u5681 03E5  
                      u5585 0318                        u4970 0029                        u5690 03F5  
                      _OERR 00C1                        u5827 139C                        u4971 0028  
                      u5747 063E                        u5691 03F4                        u5675 03CE  
                      u5595 0332                        u4980 0076                        u5837 13B5  
                      u4981 0075                        u5757 0661                        u5685 03E2  
                      u4990 007F                        u5847 163D                        u4991 007E  
                      u5767 068B                        u5695 03F1                        u5777 06C2  
                      u5787 06F9                        u5797 0728                        _TMR0 0001  
                _ChargeMode 16D3                        _SPEN 00C7                        _TXIE 0464  
                      _WREN 0C62                        _TXEN 04C5                        _TXIF 0064  
                      _SYNC 04C4         __size_of_ADCconvert 0263                        _Menu 1719  
    __end_of_lcd_write_data 1367                        abs@v 0026                        _isr1 0CBF  
                      _main 0278                ___ftpack@arg 0020                        _init 15AF  
              ___ftpack@exp 0023                        btemp 007E              _CenterReleased 0381  
                      start 0012                ___ftmul@cntr 004A                ___ftmul@sign 004B  
             ??_ReadButtons 0073            ??_robotTurnSpeed 005D                ___fttol@exp1 0035  
                     ??_abs 0028                ___fttol@lval 0031       readAvgDistance@tempIR 0034  
                     ?_Menu 0072                       l11000 17CB                       l11010 17FA  
                     l11002 17D3                       l10300 1427                       l11012 17FB  
                     l11004 17F0                       l11020 0934                       l11100 0F7C  
                     l10302 142A                       l11014 17FC                       l11006 17F6  
                     l11022 0953                       l11030 006D                       l11110 0F9A  
                     l11102 0F83                       l10304 1433                       l11008 17F9  
                     l11016 0900                       l11040 00D5                       l11032 0076  
                     l11024 0015                       l11112 0FCE                       l11104 0F89  
                     l11120 0FFA                       l11200 0ED4                       l10306 1446  
                     l11018 090F                       l11050 0178                       l11042 0119  
                     l11034 007F                       l11026 0020                       l11122 0FFF  
                     l11114 0FD5                       l11106 0F90                       l11130 14E9  
                     l11202 0EDC                       l11210 1504                       l10308 144F  
                     l10420 1450                       l11060 021B                       l11052 0181  
                     l11044 0122                       l11036 00C3                       l11028 0029  
                     l11116 0FDA                       l11108 0F95                       l11132 14EF  
                     l11124 14D1                       l11140 1582                       l11204 0EE3  
                     l11212 150D                       l11220 1529                       l11300 13CD  
                     l10430 145F                       l10422 1453                       l11062 0224  
                     l11054 01C5                       l11046 012B                       l11038 00CC  
                     l11070 0F0E                       l11118 0FE6                       l11134 14F7  
                     l11126 14D3                       l11150 15A2                       l11142 1588  
                     l11206 0EFF                       l11214 1528                       l11222 152A  
                     l11230 147E                       l11310 15BE                       l11302 15AF  
                     l10440 146C                       l10432 1462                       l10424 145B  
                     l10600 176E                       l11064 022D                       l11056 01CE  
                     l11048 016F                       l11080 0F3E                       l11072 0F15  
                     l11136 14F8                       l11128 14DD                       l11152 15A8  
                     l11144 158C                       l11160 0E25                       l11208 14FD  
                     l11216 133F                       l11224 153A                       l11240 148C  
                     l11232 1481                       l11320 15D5                       l11312 15C2  
                     l11304 15B0                       l11400 086A                       l10442 146D  
                     l10434 1465                       l10426 145C                       l10450 1727  
                     l10610 1797                       l10602 1775                       l11058 01D7  
                     l11090 0F53                       l11082 0F42                       l11074 0F20  
                     l11066 0F03                       l11138 14FC                       l11146 1592  
                     l11154 0805                       l11170 0E46                       l11162 0E2C  
                     l11218 1340                       l11226 1543                       l11242 1492  
                     l11234 1482                       l11250 0638                       l11322 15DA  
                     l11314 15C6                       l11306 15B4                       l11330 097E  
                     l11410 087F                       l11402 086C                       l10444 146E  
                     l10436 1468                       l10428 145E                       l10460 1748  
                     l10452 172B                       l10292 13E3                       l10540 13D8  
                     l10612 1799                       l10604 177A                       l10620 168D  
                     l11092 0F5A                       l11084 0F46                       l11076 0F21  
                     l11068 0F08                       l11148 159A                       l11156 0839  
                     l11180 0E81                       l11172 0E73                       l11164 0E2D  
                     l11244 1498                       l11236 1485                       l11228 147A  
                     l11260 0672                       l11252 0643                       l11324 15DB  
                     l11316 15CB                       l11308 15BC                       l11340 09B5  
                     l11332 098C                       l11412 0881                       l11404 0878  
                     l11420 09F2                       l11500 16D3                       l10438 1469  
                     l10462 174A                       l10454 1731                       l10446 171C  
                     l10470 1558                       l10294 13E5                       l10542 13D9  
                     l10534 13CE                       l10614 17A0                       l10606 1780  
                     l10630 16AB                       l10622 1695                       l11094 0F5B  
                     l11086 0F4A                       l11078 0F36                       l11190 0EAB  
                     l11182 0E86                       l11174 0E74                       l11166 0E3E  
                     l11158 0E12                       l11246 149E                       l11238 1486  
                     l11262 0679                       l11270 06A9                       l11254 064F  
                     l11326 15DC                       l11318 15D0                       l11342 09C3  
                     l11334 098D                       l11350 0511                       l11414 0883  
                     l11406 087A                       l11430 0A2D                       l11422 0A00  
                     l11510 16F6                       l11502 16DB                       l10456 1740  
                     l10448 171F                       l10464 174B                       l10480 1580  
                     l10472 155A                       l10544 13E1                       l10536 13D4  
                     l10608 1791                       l10616 17A8                       l10640 16D2  
                     l10632 16B5                       l10624 1699                       l10720 0A7B  
                     l10712 0A64                       l10800 0C56                       l11096 0F77  
                     l11088 0F50                       l11192 0EB2                       l11184 0E8A  
                     l11176 0E75                       l11168 0E45                       l11272 06B0  
                     l11280 06E0                       l11264 0685                       l11256 0655  
                     l11248 062C                       l11336 099A                       l11328 0974  
                     l11360 055D                       l11352 0522                       l11344 04CA  
                     l11408 087E                       l11416 0884                       l11440 0A4C  
                     l11432 0A39                       l11424 0A01                       l11512 16FC  
                     l11520 1705                       l11504 16E2                       l11600 03D7  
                     l10458 1744                       l10466 175D                       l10474 1565  
                     l10490 138D                       l10482 137D                       l10546 13E3  
                     l10538 13D6                       l10618 17AF                       l10634 16BC  
                     l10626 16A0                       l10730 0AAE                       l10722 0A88  
                     l10714 0A6A                       l10810 0C6E                       l10802 0C58  
                     l11098 0F78                       l11194 0EB7                       l11186 0E9B  
                     l11178 0E7B                       l11290 0716                       l11282 06E7  
                     l11274 06BC                       l11266 0690                       l11258 0666  
                     l11338 09A3                       l11370 05BC                       l11362 0563  
                     l11354 0528                       l11346 04E3                       l11434 0A3D  
                     l11426 0A06                       l11442 0A5A                       l11418 09EA  
                     l11450 0D78                       l11514 16FD                       l11506 16E6  
                     l11610 0452                       l11602 03E6                       l11530 028A  
                     l11522 0278                       l10468 175F                       l10476 1573  
                     l10484 137F                       l10548 13E6                       l10636 16C3  
                     l10628 16A5                       l10740 0ADF                       l10732 0AB9  
                     l10724 0A90                       l10716 0A72                       l10820 0C9E  
                     l10804 0C5C                       l10812 0C81                       l11196 0EBB  
                     l11188 0EA3                       l11292 071C                       l11284 06F3  
                     l11276 06C7                       l11268 069C                       l11380 05FC  
                     l11372 05CD                       l11364 057A                       l11356 0537  
                     l11348 04E9                       l11444 0A63                       l11436 0A3E  
                     l11428 0A18                       l11460 0D97                       l11452 0D7E  
                     l11516 1701                       l11508 16E7                       l11612 045D  
                     l11604 03F7                       l11620 0499                       l11540 02A0  
                     l11532 028B                       l11524 027E                       l10478 157F  
                     l10486 1387                       l10590 14C9                       l10582 14A5  
                     l10638 16CB                       l10734 0AC1                       l10726 0A94  
                     l10718 0A79                       l10814 0C87                       l10822 0CA5  
                     l10806 0C63                       l11198 0ECC                       l11294 0722  
                     l11286 06FE                       l11278 06D3                       l11382 0607  
                     l11374 05D3                       l11366 05A5                       l11358 054A  
                     l11390 083F                       l11438 0A44                       l11462 0DA2  
                     l11454 0D85                       l11470 0DCF                       l11446 0D66  
                     l11518 1704                       l11622 04A1                       l11614 046C  
                     l11606 040E                       l11550 02D9                       l11542 02AB  
                     l11534 0291                       l11526 0280                       l10488 138B  
                     l10592 14D0                       l10584 14AA                       l10736 0AC9  
                     l10728 0A9E                       l10824 0CA9                       l10816 0C90  
                     l10808 0C6C                       l11288 070A                       l11296 13B8  
                     l11384 061A                       l11376 05E4                       l11368 05B1  
                     l11392 084C                       l11464 0DAF                       l11472 0E06  
                     l11456 0D8A                       l11448 0D6A                       l11480 0B93  
                     l11624 04A8                       l11616 047A                       l11608 041D  
                     l11560 030D                       l11552 02E9                       l11544 02AE  
                     l11536 0296                       l11528 0286                       l10586 14AE  
                     l10594 1760                       l10738 0ADB                       l10826 0CB5  
                     l10818 0C92                       l10850 08B2                       l10842 0898  
                     l11298 13C6                       l11378 05F0                       l11386 061B  
                     l11394 0850                       l11466 0DBB                       l11458 0D8E  
                     l11490 0BB7                       l11482 0B9A                       l11474 0B79  
                     l11618 0489                       l11570 0341                       l11562 030F  
                     l11554 02F9                       l11546 02B4                       l11626 04A9  
                     l11538 029C                       l10588 14BB                       l10596 1764  
                     l10828 0CBE                       l10860 08CE                       l10852 08B8  
                     l10844 089F                       l11396 0851                       l11388 083A  
                     l11468 0DC9                       l11492 0BC4                       l11484 0B9F  
                     l11476 0B81                       l11580 037D                       l11572 0350  
                     l11564 031C                       l11556 02FE                       l11548 02C3  
                     l11628 04BF                       l10598 176A                       l10790 0C35  
                     l10870 08F2                       l10862 08D8                       l10854 08BC  
                     l10846 08A8                       l10950 1629                       l11398 085C  
                     l11494 0BD0                       l11486 0BA3                       l11478 0B8D  
                     l11590 03B4                       l11582 038C                       l11574 035F  
                     l11566 0327                       l11558 030B                       l10792 0C36  
                     l10872 08F8                       l10864 08DF                       l10856 08C3  
                     l10848 08AC                       l10952 162A                       l10944 1611  
                     l10960 13A2                       l11488 0BAC                       l11496 0BD6  
                     l11592 03BA                       l11584 039D                       l11576 0369  
                     l11568 0336                       l10794 0C48                       l10786 0C19  
                     l10874 08FF                       l10866 08E6                       l10858 08C8  
                     l10946 1626                       l10954 163B                       l10962 13A5  
                     l10970 1391                       l11498 0C0D                       l11594 03BF  
                     l11586 03A2                       l11578 036E                       l10796 0C49  
                     l10788 0C2C                       l10868 08EE                       l10956 163F  
                     l10948 1628                       l10964 13A9                       l10972 1394  
                     l10980 135A                       l11596 03C5                       l11588 03A5  
                     l10798 0C4F                       l10958 1648                       l10966 13AD  
                     l10974 1396                       l10982 135C                       l10990 17B4  
                     l11598 03D2                       l10968 13B1                       l10976 1397  
                     l10984 135D                       l10992 17B9                       l10978 1357  
                     l10986 13E7                       l10994 17C0                       l10996 17C7  
                     l10988 17B0                       l10998 17CA        __size_of_calibrateIR 005E  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
                     _EEADR 010D                       STR_10 07E2                       STR_11 07F2  
                     STR_12 07E6                       STR_13 0783                       STR_14 0773  
                     STR_15 07DA                       STR_16 07CE                       STR_17 07DE  
                     STR_18 0763                       STR_19 0790             __end_of___awmod 0900  
                     _CARRY 0018             __end_of___ftmul 0F00             __end_of___fttol 0CBF  
           __end_of___lwdiv 17B0             __end_of___lwmod 16D3                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074             __end_of_scan360 0A64               ___awtoft@sign 003B  
             ___ftpack@sign 0024                       _total 00C2              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00D9             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 1000            __end_of_Debounce 0B79          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072                __end_of_Menu 1760  
__size_of_lcd_write_control 0014            _shortMenuStrings 00E2                __end_of_isr1 0D66  
              __end_of_main 04CA                __end_of_init 15DE             rotate@direction 0025  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
                    ??_isr1 0078                      ??_main 0062               ___fttol@sign1 0030  
                    ??_init 0023         __end_of_ReadButtons 160E               Menu@BTN_input 0020  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of___awtoft 1529            __end_of___ftpack 0AE1  
          __end_of_adc_read 1450                 ?_ChargeMode 0072                      i1l2220 0D34  
                    i1l2221 0D33                      i1l2222 0D5A                      i1l2223 0D59  
                    i1l2224 0D5A                      i1l2216 0D12                      i1l2217 0CE6  
                    i1l2218 0D03                      i1l2219 0D11                      i1l4500 0B55  
                    i1l4501 0B54                      i1l4502 0B59                      i1l4510 160D  
                    i1l4503 0B73                      i1l4511 15F3                      i1l4504 0B72  
                    i1l4512 15FB                      i1l4505 0B78                      i1l4513 1603  
                    i1l4506 0B78                      i1l4514 160B                      i1l4509 15EB  
                    i1l4491 0AFB                      i1l4492 0AFA                      i1l4493 0AFF  
                    i1l4494 0B19                      i1l4495 0B18                      i1l4496 0B1D  
                    i1l4497 0B37                      i1l4498 0B36                      i1l4499 0B3B  
                    i1l7510 1685                      i1l7511 165F                      i1l7512 1653  
                    i1l7513 1664                      i1l7514 1665                      i1l7515 1676  
                    i1l7516 1684                      i1l7517 168C                      u360_20 0CC3  
                    u360_21 0CC2                      u361_20 0CE4                      u361_21 0CE3  
                    u370_20 15EF                      u362_20 0CFD                      u370_21 15EE  
                    u362_21 0CFC                      u371_20 15F7                      u363_20 0D08  
                    u371_21 15F6                      u363_21 0D07                      u380_20 0AF7  
                    u372_20 15FF                      u364_20 0D18                      u380_21 0AF6  
                    u372_21 15FE                      u364_21 0D17                      u381_20 0B05  
                    u373_20 1607                      u365_20 0D2E                      u381_21 0B04  
                    u373_21 1606                      u365_21 0D2D                      u390_20 0B5F  
                    u382_20 0B11                      u366_20 0D39                      u390_21 0B5E  
                    u382_21 0B10                      u366_21 0D38                 _DistLowByte 00CB  
                    u391_20 0B6B                      u383_20 0B15                      u367_20 0D3F  
                    u391_21 0B6A                      u383_21 0B14                      u367_21 0D3E  
                    u392_20 0B6F                      u384_20 0B23                      u368_20 0D57  
                    u392_21 0B6E                      u384_21 0B22                      u368_21 0D56  
                    u385_20 0B2F                      u369_20 15E7                      u385_21 0B2E  
                    u369_21 15E6                      u386_20 0B33                      u378_20 0AE7  
                    u386_21 0B32                      u378_21 0AE6                      u490_25 1677  
                    u387_20 0B41                      u379_20 0AF3                      u491_20 1683  
                    u387_21 0B40                      u379_21 0AF2                      u491_21 1682  
                    u388_20 0B4D                      u388_21 0B4C                      u389_20 0B51  
                    u389_21 0B50                      u486_20 164F                      u486_21 164E  
                    u487_25 1654                      u488_20 1663                      u488_21 1662  
                    u489_20 166F                      u489_21 166E                      u489_25 166B  
                    _TMR0IE 005D                      _TMR0IF 005A                scan360@steps 005F  
                    _SSPCON 0014                      _SSPBUF 0013                  _UpReleased 038C  
          __end_of_lcd_init 14A5                      _adcVal 00B6             _UpDebounceCount 00D0  
           RobotDrive@speed 0022                  _RobotDrive 1582                      ___wmul 14A5  
                 ??___awmod 0024                _turnhighByte 00D8                   ??___ftmul 0042  
              ??_ADCconvert 002E                   ??___fttol 002C                   ??___lwdiv 002A  
                 ??___lwmod 0032            __end_of_init_adc 13B8              ??_readDistance 002A  
           ___awmod@divisor 0020    __end_of_lcd_write_string 1555             ___awmod@counter 0025  
                    _rotate 17B0                      _rxfifo 00A0                      clrloop 07F7  
                    _txfifo 01A0                      _rxiptr 00D5                      _rxoptr 00D6  
               _BumpSensors 00C8                      _txiptr 00DA                   ??_scan360 005B  
     ___ftmul@f3_as_product 0047                      _txoptr 00DB            __end_of_ser_init 147A  
          __end_of_ser_isrx 13E7           __end_ofi1___lwmod 168D                      saved_w 007E  
             main@shortwall 0069                _AngleLowByte 00C7                 _LeftPressed 0384  
    RobotDrive@speedlowByte 0025                   ??_sprintf 0039                 _DownPressed 0382  
         lcd_write_string@s 0027          __end_of_ADCconvert 0278                  ___awtoft@c 0036  
                ___ftmul@f1 003C                  ___ftmul@f2 003F                  ___fttol@f1 0028  
            __pcstackCOMMON 0072                __pidataBANK1 1347                 _ReadButtons 15DE  
       __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023                   ?_Debounce 0072  
             _buttonPressed 007D                  __pbssBANK1 00A0                  __pbssBANK3 0190  
         _DownDebounceCount 00CC              main@direction1 0065          _RightDebounceCount 00CF  
                __pmaintext 0278                 ?_RobotDrive 0022                     ?___wmul 0020  
                __pintentry 0004                _DistHighByte 00CA                  __ptext1100 0C19  
                __ptext1101 0A64                  __ptext1110 1427                  __ptext1102 168D  
                __ptext1111 0CBF                  __ptext1103 1760                  __ptext1112 15DE  
                __ptext1104 14A5                  __ptext1113 1649                  __ptext1105 13CE  
     __end_of_UpdateDisplay 0629                  __ptext1114 0AE1                  __ptext1106 137A  
                __ptext1115 0000                  __ptext1107 1555                  __ptext1108 1719  
                __ptext1109 1450                  __ptext1080 13B8                  __ptext1072 16D3  
                __ptext1081 0629                  __ptext1073 0B79                  __ptext1090 0F00  
                __ptext1082 147A                  __ptext1074 0D66                  __ptext1091 0015  
                __ptext1083 1529                  __ptext1075 09EA                  __ptext1092 0900  
                __ptext1084 133C                  __ptext1076 083A                  __ptext1093 17B0  
                __ptext1085 14FD                  __ptext1077 04CA                  __ptext1094 13E7  
                __ptext1086 0E12                  __ptext1078 0974                  __ptext1095 1354  
                __ptext1087 0805                  __ptext1079 15AF                  __ptext1096 138E  
                __ptext1088 1582                  __ptext1097 13A2                  __ptext1089 14D1  
                __ptext1098 160E                  __ptext1099 0898          __size_of_ser_getch 002C  
                 ?___awtoft 0036                   ?___ftpack 0020                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 002D          __size_of_robo_init 0019  
                   i1l10400 15F8                     i1l10410 1607                     i1l10402 15FA  
                   i1l10500 0AF7                     i1l10412 1608                     i1l10404 15FF  
                   i1l10340 0CC4                     i1l10510 0B23                     i1l10502 0B05  
                   i1l10414 160A                     i1l10406 1600                     i1l10350 0CFD  
                   i1l10342 0CCE                     i1l10520 0B47                     i1l10512 0B29  
                   i1l10504 0B0B                     i1l10416 160B                     i1l10408 1602  
                   i1l10360 0D18                     i1l10352 0CFE                     i1l10344 0CCF  
                   i1l10336 0CBF                     i1l10530 0B6B                     i1l10522 0B4D  
                   i1l10514 0B2F                     i1l10506 0B11                     i1l10418 160D  
                   i1l10370 0D39                     i1l10362 0D22                     i1l10354 0D03  
                   i1l10346 0CE4                     i1l10338 0CC3                     i1l10532 0B6F  
                   i1l10524 0B51                     i1l10516 0B33                     i1l10508 0B15  
                   i1l10380 0D57                     i1l10372 0D3F                     i1l10364 0D28  
                   i1l10356 0D08                     i1l10348 0CE6                     i1l10526 0B5F  
                   i1l10518 0B41                     i1l10390 15EA                     i1l10382 15DE  
                   i1l10374 0D47                     i1l10366 0D2E                     i1l10358 0D12  
                   i1l10528 0B65                     i1l10392 15EF                     i1l10384 15E3  
                   i1l10376 0D4D                     i1l10368 0D34                     i1l10394 15F0  
                   i1l10386 15E7                     i1l10378 0D51                     i1l10492 0AE1  
                   i1l10396 15F2                     i1l10388 15E8                     i1l10494 0AE7  
                   i1l10398 15F7                     i1l10496 0AED                     i1l10498 0AF3  
                   i1l10930 165F                     i1l10922 1649                     i1l10932 1665  
                   i1l10924 164F                     i1l10940 1685                     i1l10942 168C  
                   i1l10934 166F                     i1l10926 1653                     i1l10936 1676  
                   i1l10928 165A                     i1l10938 167D          __size_of_robotTurn 0074  
                ??_Debounce 0072            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094        __end_of_readDistance 13CE                   ?_init_adc 0072  
        main@shortwall_3022 006C                   ?_ser_init 0072                   ?_ser_isrx 0072  
             ??_calibrateIR 0059                     ___awmod 0898             __size_of___wmul 002C  
                   ___ftmul 0E12                     ___fttol 0C19                     ___lwdiv 1760  
                   ___lwmod 168D   __size_of_adc_read_channel 003B                  ??___awtoft 0039  
                ??___ftpack 0025                  ??_adc_read 0022             __size_of_rotate 0050  
                   _scan360 09EA                     _dpowers 0759                __size_of_abs 0035  
          ___awmod@dividend 0022                     _lowByte 00D4                     _ser_tmp 00D7  
                   _sprintf 0F00                  ??_lcd_init 0023         __size_of_RobotDrive 002D  
      end_of_initialization 1423               _AngleHighByte 00C6                ??_ChargeMode 0059  
        robot_read@readType 0024           __end_of_ser_getch 14FD                     init_ram 136B  
                ??_init_adc 0020     __size_of_robotMoveSpeed 00AC           __end_of_ser_putch 1582  
   RobotDrive@speedhighByte 0026           __end_of_robo_init 1400                _LeftReleased 0385  
         __end_of_robotTurn 0974                  ??_ser_init 0020                  ??_ser_isrx 0020  
                   rotate@i 0028                _DownReleased 0383               _RightReleased 038A  
  __size_of_readAvgDistance 0076                  _robot_read 0629           ?_lcd_write_string 0027  
        __end_of_ChargeMode 1719         __end_of_calibrateIR 0898          ??_lcd_write_string 0029  
               AT25256A@CS0 0038                 AT25256A@CS1 0039           adc_read@adc_value 0024  
   __size_of_robotTurnSpeed 00A0                   i1___lwmod 1649                  _totalSteps 00C4  
                main@choice 006B               ?_spi_transfer 0072                 _VwallSensor 00D1  
               ___ftmul@exp 0046               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 14D1           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 1800         start_initialization 1400      UpdateDisplay@LCDOutput 0049  
               __end_of_abs 083A       __size_of_readDistance 0016           __size_of_Debounce 0098  
                ?i1___lwmod 0072          _TotalDistTravelled 00B4              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038B                ??_RobotDrive 0024  
            _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 083A                 __pdataBANK1 00DC  
          _adc_read_channel 160E                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 13B8           __size_of___awtoft 002C           __size_of___ftpack 007D  
         __size_of_adc_read 0029                 __pbssCOMMON 007D           ??_readAvgDistance 0030  
             __pcstackBANK0 0020      robotMoveSpeed@distance 0059          __end_of_RobotDrive 15AF  
         __size_of_lcd_init 002B              _robotMoveSpeed 0D66                 sprintf@_val 003F  
               sprintf@flag 003D                 sprintf@prec 003E                _current_step 00E8  
          readAvgDistance@i 0036            readAvgDistance@j 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                 _angleTurned 00B8                    ?___awmod 0020  
                  ?___ftmul 003C           __size_of_ser_init 002A                    ?___fttol 0028  
         __size_of_ser_isrx 0019                    ?___lwdiv 0026                    ?___lwmod 002E  
                 __pstrings 0749                   _dist_high 00BC                    ?_scan360 0059  
       readDistance@readVal 002C              _robotTurnSpeed 0B79         robotTurnSpeed@angle 0059  
       robotTurnSpeed@temp1 0060         robotTurnSpeed@speed 005B                  ser_getch@c 0021  
          ___lwdiv@quotient 002B                 ??i1___lwmod 0076                    ?_sprintf 0034  
    __end_of_robotMoveSpeed 0E12     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 015F              ___wmul@product 0024         __size_of_robot_read 0120  
                ser_putch@c 0021                   _ser_getch 14D1                   _ser_putch 1555  
                 _robo_init 13E7                   _robotTurn 0900                _RightPressed 0389  
      __size_of_ReadButtons 0030        __end_of_spi_transfer 138E      __end_of_robotTurnSpeed 0C19  
               __stringbase 0758           ___wmul@multiplier 0020            spi_transfer@data 0022  
          spi_transfer@temp 0021                    _Debounce 0AE1           _LeftDebounceCount 00CD  
           ?_robotMoveSpeed 0059   __size_of_lcd_write_string 002C          scan360@lowestSteps 005D  
   __size_of_lcd_write_data 0013                  ?_ser_getch 0072                  ?_ser_putch 0072  
   adc_read_channel@channel 0027                  ?_robo_init 0072                   init_fetch 1367  
                ?_robotTurn 0022                  _ADCconvert 0015            __size_of___awmod 0068  
          __size_of___ftmul 00EE            __size_of___fttol 00A6            __size_of___lwdiv 0050  
          __size_of___lwmod 0046                    ___awtoft 14FD                    ___ftpack 0A64  
             _UpdateDisplay 04CA                    _adc_read 1427             ?_robotTurnSpeed 0059  
               _currentMenu 00D2            __size_of_scan360 007A             ___lwdiv@divisor 0026  
           ___lwdiv@counter 002D                 _menuStrings 00DC                    _highByte 00D3  
                  _lcd_init 147A                    _dist_low 00BE            __size_of_sprintf 0100  
  __end_of_adc_read_channel 1649   lcd_write_control@databyte 0022               __size_of_Menu 0047  
                  _init_adc 13A2               __size_of_isr1 00A7               __size_of_main 0252  
             __size_of_init 002F                    clear_ram 07F6                    _ser_init 1450  
                  _ser_isrx 13CE                    main@RT2A 0067                    main@RT2P 006E  
           _readAvgDistance 0974                ?_calibrateIR 0072              ?_UpdateDisplay 0072  
              ??_robot_read 0022         _CenterDebounceCount 00C9                _RTC_FLAG_1MS 0386  
        UpdateDisplay@F1242 0190                    intlevel1 0000              _lcd_set_cursor 133C  
                 sprintf@ap 003C                   sprintf@sp 0043              robotTurn@angle 0022  
          ___lwmod@dividend 0030          __end_of_robot_read 0749                   stringcode 0753  
               ??_ser_getch 0020                 ??_ser_putch 0020               _distTravelled 00BA  
               ??_robo_init 0022       __size_of_spi_transfer 0014                 ??_robotTurn 0024  
               ?_ADCconvert 0072           _lcd_write_control 138E            scan360@lowestVal 005B  
        ?_lcd_write_control 0072                  _OPTION_REG 0081                    sprintf@c 0044  
                  sprintf@f 0034         robotMoveSpeed@temp1 0060         robotMoveSpeed@speed 005B  
           ___lwmod@divisor 002E                  _ROBOTerror 00CE             ___lwmod@counter 0033  
                  stringdir 0753                    stringtab 0749         ??_lcd_write_control 0020  
    __end_of_lcd_set_cursor 1347            _lcd_write_string 1529                _spi_transfer 137A  
               _RTC_Counter 00B2     __end_of_readAvgDistance 09EA              _lcd_write_data 1354  
