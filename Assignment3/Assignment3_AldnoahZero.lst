

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 11 13:15:39 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMoveSpeed
    55                           	FNCALL	_main,_robotTurn
    56                           	FNCALL	_main,___awtoft
    57                           	FNCALL	_main,___ftmul
    58                           	FNCALL	_main,___fttol
    59                           	FNCALL	_main,_ChargeMode
    60                           	FNCALL	_ChargeMode,_ser_putch
    61                           	FNCALL	_ChargeMode,_UpdateDisplay
    62                           	FNCALL	_robotMoveSpeed,_RobotDrive
    63                           	FNCALL	_robotMoveSpeed,_robot_read
    64                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    65                           	FNCALL	_robotMoveSpeed,_abs
    66                           	FNCALL	_scan360,_readAvgDistance
    67                           	FNCALL	_scan360,_rotate
    68                           	FNCALL	_scan360,_UpdateDisplay
    69                           	FNCALL	_calibrateIR,_rotate
    70                           	FNCALL	_calibrateIR,_UpdateDisplay
    71                           	FNCALL	_UpdateDisplay,_lcd_write_control
    72                           	FNCALL	_UpdateDisplay,_sprintf
    73                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    74                           	FNCALL	_UpdateDisplay,_lcd_write_string
    75                           	FNCALL	_UpdateDisplay,___awmod
    76                           	FNCALL	_readAvgDistance,_readDistance
    77                           	FNCALL	_readAvgDistance,___lwdiv
    78                           	FNCALL	_readAvgDistance,_ADCconvert
    79                           	FNCALL	_init,_ser_init
    80                           	FNCALL	_init,_init_adc
    81                           	FNCALL	_init,_lcd_init
    82                           	FNCALL	_init,_robo_init
    83                           	FNCALL	_readDistance,_adc_read_channel
    84                           	FNCALL	_robot_read,_ser_putch
    85                           	FNCALL	_robot_read,_ser_getch
    86                           	FNCALL	_lcd_init,_lcd_write_control
    87                           	FNCALL	_lcd_write_string,_lcd_write_data
    88                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    89                           	FNCALL	___awtoft,___ftpack
    90                           	FNCALL	___ftmul,___ftpack
    91                           	FNCALL	_abs,___wmul
    92                           	FNCALL	_RobotDrive,_ser_putch
    93                           	FNCALL	_ser_getch,_ser_isrx
    94                           	FNCALL	_sprintf,___lwdiv
    95                           	FNCALL	_sprintf,___lwmod
    96                           	FNCALL	_ADCconvert,___wmul
    97                           	FNCALL	_ADCconvert,___lwdiv
    98                           	FNCALL	_robotTurn,_ser_putch
    99                           	FNCALL	_rotate,_spi_transfer
   100                           	FNCALL	_robo_init,_ser_putch
   101                           	FNCALL	_adc_read_channel,_adc_read
   102                           	FNROOT	_main
   103                           	FNCALL	_isr1,i1___lwmod
   104                           	FNCALL	_isr1,_ReadButtons
   105                           	FNCALL	_ReadButtons,_Debounce
   106                           	FNCALL	intlevel1,_isr1
   107                           	global	intlevel1
   108                           	FNROOT	intlevel1
   109                           	global	_menuStrings
   110                           	global	_shortMenuStrings
   111                           	global	_current_step
   112                           psect	idataBANK1,class=CODE,space=0,delta=2
   113                           global __pidataBANK1
   114  1458                     __pidataBANK1:
   115                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   116                           	line	49
   117                           
   118                           ;initializer for _menuStrings
   119  1458  3453               	retlw	(STR_1-__stringbase)&0ffh
   120  1459  344A               	retlw	(STR_2-__stringbase)&0ffh
   121  145A  3465               	retlw	(STR_3-__stringbase)&0ffh
   122  145B  346E               	retlw	(STR_4-__stringbase)&0ffh
   123  145C  345C               	retlw	(STR_5-__stringbase)&0ffh
   124  145D  3441               	retlw	(STR_6-__stringbase)&0ffh
   125                           	line	50
   126                           
   127                           ;initializer for _shortMenuStrings
   128  145E  3492               	retlw	(STR_7-__stringbase)&0ffh
   129  145F  3496               	retlw	(STR_8-__stringbase)&0ffh
   130  1460  347E               	retlw	(STR_9-__stringbase)&0ffh
   131  1461  348A               	retlw	(STR_10-__stringbase)&0ffh
   132  1462  349A               	retlw	(STR_11-__stringbase)&0ffh
   133  1463  348E               	retlw	(STR_12-__stringbase)&0ffh
   134                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   135                           	line	45
   136                           
   137                           ;initializer for _current_step
   138  1464  343C               	retlw	03Ch
   139                           	global	_dpowers
   140                           psect	strings,class=STRING,delta=2
   141                           global __pstrings
   142  0800                     __pstrings:
   143                           ;	global	stringdir,stringtab,__stringbase
   144  0800                     stringtab:
   145                           ;	String table - string pointers are 1 byte each
   146  0800  1BFF               	btfsc	(btemp+1),7
   147  0801  280A               	ljmp	stringcode
   148  0802  1383               	bcf	status,7
   149  0803  187F               	btfsc	(btemp+1),0
   150  0804  1783               	bsf	status,7
   151  0805  0800               	movf	indf,w
   152  0806  0A84               	incf fsr
   153  0807  1903               skipnz
   154  0808  0AFF               incf btemp+1
   155  0809  0008               	return
   156  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   157  080A  3008               movlw high(stringdir)
   158  080B  008A               movwf pclath
   159  080C  0804               movf fsr,w
   160  080D  0A84               incf fsr
   161  080E  0782               	addwf pc
   162  080F                     __stringbase:
   163  080F  3400               	retlw	0
   164                           psect	strings
   165                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   166                           	line	350
   167  0810                     _dpowers:
   168  0810  3401               	retlw	01h
   169  0811  3400               	retlw	0
   170                           
   171  0812  340A               	retlw	0Ah
   172  0813  3400               	retlw	0
   173                           
   174  0814  3464               	retlw	064h
   175  0815  3400               	retlw	0
   176                           
   177  0816  34E8               	retlw	0E8h
   178  0817  3403               	retlw	03h
   179                           
   180  0818  3410               	retlw	010h
   181  0819  3427               	retlw	027h
   182                           
   183                           	global	_dpowers
   184                           	global	UpdateDisplay@F1235
   185                           	global	_txfifo
   186                           	global	_buttonPressed
   187                           	global	_CenterPressed
   188                           	global	_CenterReleased
   189                           	global	_DownPressed
   190                           	global	_DownReleased
   191                           	global	_LeftPressed
   192                           	global	_LeftReleased
   193                           	global	_RTC_FLAG_1MS
   194                           	global	_RTC_FLAG_250MS
   195                           	global	_RTC_FLAG_500MS
   196                           	global	_RightPressed
   197                           	global	_RightReleased
   198                           	global	_UpPressed
   199                           	global	_UpReleased
   200                           	global	_rxfifo
   201                           	global	_IRdistance
   202                           	global	_RTC_Counter
   203                           	global	_TotalDistTravelled
   204                           	global	_adcVal
   205                           	global	_distTravelled
   206                           	global	_dist_high
   207                           	global	_dist_low
   208                           	global	_pos
   209                           	global	_total
   210                           	global	_totalSteps
   211                           	global	_BumpSensors
   212                           	global	_CenterDebounceCount
   213                           	global	_DistHighByte
   214                           	global	_DistLowByte
   215                           	global	_DownDebounceCount
   216                           	global	_LeftDebounceCount
   217                           	global	_ROBOTerror
   218                           	global	_RightDebounceCount
   219                           	global	_UpDebounceCount
   220                           	global	_currentMenu
   221                           	global	_highByte
   222                           	global	_lowByte
   223                           	global	_rxiptr
   224                           	global	_rxoptr
   225                           	global	_ser_tmp
   226                           	global	_turnhighByte
   227                           	global	_turnlowByte
   228                           	global	_txiptr
   229                           	global	_txoptr
   230                           	global	_ADCON0
   231  001F                     _ADCON0	set	31
   232                           	global	_ADRESH
   233  001E                     _ADRESH	set	30
   234                           	global	_PORTA
   235  0005                     _PORTA	set	5
   236                           	global	_PORTD
   237  0008                     _PORTD	set	8
   238                           	global	_PORTE
   239  0009                     _PORTE	set	9
   240                           	global	_RCREG
   241  001A                     _RCREG	set	26
   242                           	global	_SSPBUF
   243  0013                     _SSPBUF	set	19
   244                           	global	_SSPCON
   245  0014                     _SSPCON	set	20
   246                           	global	_TMR0
   247  0001                     _TMR0	set	1
   248                           	global	_TXREG
   249  0019                     _TXREG	set	25
   250                           	global	AT25256A@CS0
   251  0038                     AT25256A@CS0	set	56
   252                           	global	AT25256A@CS1
   253  0039                     AT25256A@CS1	set	57
   254                           	global	_CARRY
   255  0018                     _CARRY	set	24
   256                           	global	_CHS0
   257  00FB                     _CHS0	set	251
   258                           	global	_CHS1
   259  00FC                     _CHS1	set	252
   260                           	global	_CHS2
   261  00FD                     _CHS2	set	253
   262                           	global	_CREN
   263  00C4                     _CREN	set	196
   264                           	global	_GIE
   265  005F                     _GIE	set	95
   266                           	global	_GO
   267  00FA                     _GO	set	250
   268                           	global	_OERR
   269  00C1                     _OERR	set	193
   270                           	global	_PEIE
   271  005E                     _PEIE	set	94
   272                           	global	_RB0
   273  0030                     _RB0	set	48
   274                           	global	_RB2
   275  0032                     _RB2	set	50
   276                           	global	_RB3
   277  0033                     _RB3	set	51
   278                           	global	_RB4
   279  0034                     _RB4	set	52
   280                           	global	_RB5
   281  0035                     _RB5	set	53
   282                           	global	_RB6
   283  0036                     _RB6	set	54
   284                           	global	_RC0
   285  0038                     _RC0	set	56
   286                           	global	_RC1
   287  0039                     _RC1	set	57
   288                           	global	_RC2
   289  003A                     _RC2	set	58
   290                           	global	_RCIF
   291  0065                     _RCIF	set	101
   292                           	global	_RE0
   293  0048                     _RE0	set	72
   294                           	global	_RE1
   295  0049                     _RE1	set	73
   296                           	global	_RE2
   297  004A                     _RE2	set	74
   298                           	global	_RX9
   299  00C6                     _RX9	set	198
   300                           	global	_SPEN
   301  00C7                     _SPEN	set	199
   302                           	global	_SSPIF
   303  0063                     _SSPIF	set	99
   304                           	global	_TMR0IE
   305  005D                     _TMR0IE	set	93
   306                           	global	_TMR0IF
   307  005A                     _TMR0IF	set	90
   308                           	global	_TXIF
   309  0064                     _TXIF	set	100
   310                           	global	_ADCON1
   311  009F                     _ADCON1	set	159
   312                           	global	_ADRESL
   313  009E                     _ADRESL	set	158
   314                           	global	_OPTION_REG
   315  0081                     _OPTION_REG	set	129
   316                           	global	_SPBRG
   317  0099                     _SPBRG	set	153
   318                           	global	_SSPSTAT
   319  0094                     _SSPSTAT	set	148
   320                           	global	_TRISA
   321  0085                     _TRISA	set	133
   322                           	global	_TRISB
   323  0086                     _TRISB	set	134
   324                           	global	_TRISC
   325  0087                     _TRISC	set	135
   326                           	global	_TRISD
   327  0088                     _TRISD	set	136
   328                           	global	_TRISE
   329  0089                     _TRISE	set	137
   330                           	global	_BRGH
   331  04C2                     _BRGH	set	1218
   332                           	global	_RCIE
   333  0465                     _RCIE	set	1125
   334                           	global	_SYNC
   335  04C4                     _SYNC	set	1220
   336                           	global	_TX9
   337  04C6                     _TX9	set	1222
   338                           	global	_TXEN
   339  04C5                     _TXEN	set	1221
   340                           	global	_TXIE
   341  0464                     _TXIE	set	1124
   342                           	global	_EEADR
   343  010D                     _EEADR	set	269
   344                           	global	_EEDATA
   345  010C                     _EEDATA	set	268
   346                           	global	_EECON1
   347  018C                     _EECON1	set	396
   348                           	global	_EECON2
   349  018D                     _EECON2	set	397
   350                           	global	_RD
   351  0C60                     _RD	set	3168
   352                           	global	_WR
   353  0C61                     _WR	set	3169
   354                           	global	_WREN
   355  0C62                     _WREN	set	3170
   356                           	
   357  081A                     STR_18:	
   358  081A  3420               	retlw	32	;' '
   359  081B  3443               	retlw	67	;'C'
   360  081C  3468               	retlw	104	;'h'
   361  081D  3461               	retlw	97	;'a'
   362  081E  3472               	retlw	114	;'r'
   363  081F  3467               	retlw	103	;'g'
   364  0820  3469               	retlw	105	;'i'
   365  0821  346E               	retlw	110	;'n'
   366  0822  3467               	retlw	103	;'g'
   367  0823  3420               	retlw	32	;' '
   368  0824  344D               	retlw	77	;'M'
   369  0825  346F               	retlw	111	;'o'
   370  0826  3464               	retlw	100	;'d'
   371  0827  3465               	retlw	101	;'e'
   372  0828  3420               	retlw	32	;' '
   373  0829  3400               	retlw	0
   374                           psect	strings
   375                           	
   376  082A                     STR_14:	
   377  082A  345A               	retlw	90	;'Z'
   378  082B  3465               	retlw	101	;'e'
   379  082C  3472               	retlw	114	;'r'
   380  082D  346F               	retlw	111	;'o'
   381  082E  3420               	retlw	32	;' '
   382  082F  3453               	retlw	83	;'S'
   383  0830  3474               	retlw	116	;'t'
   384  0831  3465               	retlw	101	;'e'
   385  0832  3470               	retlw	112	;'p'
   386  0833  345F               	retlw	95	;'_'
   387  0834  344D               	retlw	77	;'M'
   388  0835  346F               	retlw	111	;'o'
   389  0836  3474               	retlw	116	;'t'
   390  0837  346F               	retlw	111	;'o'
   391  0838  3472               	retlw	114	;'r'
   392  0839  3400               	retlw	0
   393                           psect	strings
   394                           	
   395  083A                     STR_13:	
   396  083A  3449               	retlw	73	;'I'
   397  083B  3452               	retlw	82	;'R'
   398  083C  343A               	retlw	58	;':'
   399  083D  3425               	retlw	37	;'%'
   400  083E  3464               	retlw	100	;'d'
   401  083F  3463               	retlw	99	;'c'
   402  0840  346D               	retlw	109	;'m'
   403  0841  3420               	retlw	32	;' '
   404  0842  3444               	retlw	68	;'D'
   405  0843  343A               	retlw	58	;':'
   406  0844  3425               	retlw	37	;'%'
   407  0845  3464               	retlw	100	;'d'
   408  0846  3400               	retlw	0
   409                           psect	strings
   410                           	
   411  0847                     STR_19:	
   412  0847  3420               	retlw	32	;' '
   413  0848  3420               	retlw	32	;' '
   414  0849  3445               	retlw	69	;'E'
   415  084A  3458               	retlw	88	;'X'
   416  084B  3449               	retlw	73	;'I'
   417  084C  3454               	retlw	84	;'T'
   418  084D  3420               	retlw	32	;' '
   419  084E  3420               	retlw	32	;' '
   420  084F  3400               	retlw	0
   421                           psect	strings
   422                           	
   423  0850                     STR_6:	
   424  0850  3420               	retlw	32	;' '
   425  0851  3443               	retlw	67	;'C'
   426  0852  3468               	retlw	104	;'h'
   427  0853  3461               	retlw	97	;'a'
   428  0854  3472               	retlw	114	;'r'
   429  0855  3467               	retlw	103	;'g'
   430  0856  3465               	retlw	101	;'e'
   431  0857  3420               	retlw	32	;' '
   432  0858  3400               	retlw	0
   433                           psect	strings
   434                           	
   435  0859                     STR_2:	
   436  0859  3453               	retlw	83	;'S'
   437  085A  3463               	retlw	99	;'c'
   438  085B  3461               	retlw	97	;'a'
   439  085C  346E               	retlw	110	;'n'
   440  085D  345F               	retlw	95	;'_'
   441  085E  3433               	retlw	51	;'3'
   442  085F  3436               	retlw	54	;'6'
   443  0860  3430               	retlw	48	;'0'
   444  0861  3400               	retlw	0
   445                           psect	strings
   446                           	
   447  0862                     STR_1:	
   448  0862  3443               	retlw	67	;'C'
   449  0863  3461               	retlw	97	;'a'
   450  0864  346C               	retlw	108	;'l'
   451  0865  3469               	retlw	105	;'i'
   452  0866  3462               	retlw	98	;'b'
   453  0867  345F               	retlw	95	;'_'
   454  0868  3449               	retlw	73	;'I'
   455  0869  3452               	retlw	82	;'R'
   456  086A  3400               	retlw	0
   457                           psect	strings
   458                           	
   459  086B                     STR_5:	
   460  086B  3446               	retlw	70	;'F'
   461  086C  346C               	retlw	108	;'l'
   462  086D  3477               	retlw	119	;'w'
   463  086E  345F               	retlw	95	;'_'
   464  086F  3457               	retlw	87	;'W'
   465  0870  3461               	retlw	97	;'a'
   466  0871  346C               	retlw	108	;'l'
   467  0872  346C               	retlw	108	;'l'
   468  0873  3400               	retlw	0
   469                           psect	strings
   470                           	
   471  0874                     STR_3:	
   472  0874  3444               	retlw	68	;'D'
   473  0875  3472               	retlw	114	;'r'
   474  0876  3469               	retlw	105	;'i'
   475  0877  3476               	retlw	118	;'v'
   476  0878  3465               	retlw	101	;'e'
   477  0879  345F               	retlw	95	;'_'
   478  087A  3432               	retlw	50	;'2'
   479  087B  346D               	retlw	109	;'m'
   480  087C  3400               	retlw	0
   481                           psect	strings
   482                           	
   483  087D                     STR_4:	
   484  087D  3444               	retlw	68	;'D'
   485  087E  3472               	retlw	114	;'r'
   486  087F  3469               	retlw	105	;'i'
   487  0880  3476               	retlw	118	;'v'
   488  0881  3465               	retlw	101	;'e'
   489  0882  345F               	retlw	95	;'_'
   490  0883  344C               	retlw	76	;'L'
   491  0884  3400               	retlw	0
   492                           psect	strings
   493                           	
   494  0885                     STR_16:	
   495  0885  3443               	retlw	67	;'C'
   496  0886  344F               	retlw	79	;'O'
   497  0887  344E               	retlw	78	;'N'
   498  0888  3446               	retlw	70	;'F'
   499  0889  3449               	retlw	73	;'I'
   500  088A  3452               	retlw	82	;'R'
   501  088B  344D               	retlw	77	;'M'
   502  088C  3400               	retlw	0
   503                           psect	strings
   504                           	
   505  088D                     STR_9:	
   506  088D  3444               	retlw	68	;'D'
   507  088E  3472               	retlw	114	;'r'
   508  088F  3432               	retlw	50	;'2'
   509  0890  3400               	retlw	0
   510                           psect	strings
   511                           	
   512  0891                     STR_15:	
   513  0891  343C               	retlw	60	;'<'
   514  0892  343C               	retlw	60	;'<'
   515  0893  343C               	retlw	60	;'<'
   516  0894  3400               	retlw	0
   517                           psect	strings
   518                           	
   519  0895                     STR_17:	
   520  0895  343E               	retlw	62	;'>'
   521  0896  343E               	retlw	62	;'>'
   522  0897  343E               	retlw	62	;'>'
   523  0898  3400               	retlw	0
   524                           psect	strings
   525                           	
   526  0899                     STR_10:	
   527  0899  3444               	retlw	68	;'D'
   528  089A  3472               	retlw	114	;'r'
   529  089B  344C               	retlw	76	;'L'
   530  089C  3400               	retlw	0
   531                           psect	strings
   532                           	
   533  089D                     STR_12:	
   534  089D  3443               	retlw	67	;'C'
   535  089E  3468               	retlw	104	;'h'
   536  089F  3467               	retlw	103	;'g'
   537  08A0  3400               	retlw	0
   538                           psect	strings
   539                           	
   540  08A1                     STR_7:	
   541  08A1  3443               	retlw	67	;'C'
   542  08A2  3461               	retlw	97	;'a'
   543  08A3  346C               	retlw	108	;'l'
   544  08A4  3400               	retlw	0
   545                           psect	strings
   546                           	
   547  08A5                     STR_8:	
   548  08A5  3453               	retlw	83	;'S'
   549  08A6  3463               	retlw	99	;'c'
   550  08A7  346E               	retlw	110	;'n'
   551  08A8  3400               	retlw	0
   552                           psect	strings
   553                           	
   554  08A9                     STR_11:	
   555  08A9  3446               	retlw	70	;'F'
   556  08AA  346C               	retlw	108	;'l'
   557  08AB  3477               	retlw	119	;'w'
   558  08AC  3400               	retlw	0
   559                           psect	strings
   560                           	file	"Assignment3_AldnoahZero.as"
   561                           	line	#
   562                           psect cinit,class=CODE,delta=2
   563                           global start_initialization
   564  14F8                     start_initialization:
   565                           
   566                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   567                           global __pbitbssCOMMON
   568  0380                     __pbitbssCOMMON:
   569  0380                     _CenterPressed:
   570  0380                            ds      1
   571                           
   572  0381                     _CenterReleased:
   573  0381                            ds      1
   574                           
   575  0382                     _DownPressed:
   576  0382                            ds      1
   577                           
   578  0383                     _DownReleased:
   579  0383                            ds      1
   580                           
   581  0384                     _LeftPressed:
   582  0384                            ds      1
   583                           
   584  0385                     _LeftReleased:
   585  0385                            ds      1
   586                           
   587  0386                     _RTC_FLAG_1MS:
   588  0386                            ds      1
   589                           
   590  0387                     _RTC_FLAG_250MS:
   591  0387                            ds      1
   592                           
   593  0388                     _RTC_FLAG_500MS:
   594  0388                            ds      1
   595                           
   596  0389                     _RightPressed:
   597  0389                            ds      1
   598                           
   599  038A                     _RightReleased:
   600  038A                            ds      1
   601                           
   602  038B                     _UpPressed:
   603  038B                            ds      1
   604                           
   605  038C                     _UpReleased:
   606  038C                            ds      1
   607                           
   608                           psect	bssCOMMON,class=COMMON,space=1
   609                           global __pbssCOMMON
   610  007D                     __pbssCOMMON:
   611  007D                     _buttonPressed:
   612  007D                            ds      1
   613                           
   614                           psect	bssBANK1,class=BANK1,space=1
   615                           global __pbssBANK1
   616  00A0                     __pbssBANK1:
   617  00A0                     _rxfifo:
   618  00A0                            ds      16
   619                           
   620  00B0                     _IRdistance:
   621  00B0                            ds      2
   622                           
   623  00B2                     _RTC_Counter:
   624  00B2                            ds      2
   625                           
   626  00B4                     _TotalDistTravelled:
   627  00B4                            ds      2
   628                           
   629  00B6                     _adcVal:
   630  00B6                            ds      2
   631                           
   632  00B8                     _distTravelled:
   633  00B8                            ds      2
   634                           
   635  00BA                     _dist_high:
   636  00BA                            ds      2
   637                           
   638  00BC                     _dist_low:
   639  00BC                            ds      2
   640                           
   641  00BE                     _pos:
   642  00BE                            ds      2
   643                           
   644  00C0                     _total:
   645  00C0                            ds      2
   646                           
   647  00C2                     _totalSteps:
   648  00C2                            ds      2
   649                           
   650  00C4                     _BumpSensors:
   651  00C4                            ds      1
   652                           
   653  00C5                     _CenterDebounceCount:
   654  00C5                            ds      1
   655                           
   656  00C6                     _DistHighByte:
   657  00C6                            ds      1
   658                           
   659  00C7                     _DistLowByte:
   660  00C7                            ds      1
   661                           
   662  00C8                     _DownDebounceCount:
   663  00C8                            ds      1
   664                           
   665  00C9                     _LeftDebounceCount:
   666  00C9                            ds      1
   667                           
   668  00CA                     _ROBOTerror:
   669  00CA                            ds      1
   670                           
   671  00CB                     _RightDebounceCount:
   672  00CB                            ds      1
   673                           
   674  00CC                     _UpDebounceCount:
   675  00CC                            ds      1
   676                           
   677  00CD                     _currentMenu:
   678  00CD                            ds      1
   679                           
   680  00CE                     _highByte:
   681  00CE                            ds      1
   682                           
   683  00CF                     _lowByte:
   684  00CF                            ds      1
   685                           
   686  00D0                     _rxiptr:
   687  00D0                            ds      1
   688                           
   689  00D1                     _rxoptr:
   690  00D1                            ds      1
   691                           
   692  00D2                     _ser_tmp:
   693  00D2                            ds      1
   694                           
   695  00D3                     _turnhighByte:
   696  00D3                            ds      1
   697                           
   698  00D4                     _turnlowByte:
   699  00D4                            ds      1
   700                           
   701  00D5                     _txiptr:
   702  00D5                            ds      1
   703                           
   704  00D6                     _txoptr:
   705  00D6                            ds      1
   706                           
   707                           psect	dataBANK1,class=BANK1,space=1
   708                           global __pdataBANK1
   709  00D7                     __pdataBANK1:
   710                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   711                           	line	49
   712  00D7                     _menuStrings:
   713  00D7                            ds      6
   714                           
   715                           psect	dataBANK1
   716                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   717                           	line	50
   718  00DD                     _shortMenuStrings:
   719  00DD                            ds      6
   720                           
   721                           psect	dataBANK1
   722                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   723                           	line	45
   724  00E3                     _current_step:
   725  00E3                            ds      1
   726                           
   727                           psect	bssBANK3,class=BANK3,space=1
   728                           global __pbssBANK3
   729  0190                     __pbssBANK3:
   730  0190                     UpdateDisplay@F1235:
   731  0190                            ds      16
   732                           
   733  01A0                     _txfifo:
   734  01A0                            ds      16
   735                           
   736                           psect clrtext,class=CODE,delta=2
   737                           global clear_ram
   738                           ;	Called with FSR containing the base address, and
   739                           ;	W with the last address+1
   740  1445                     clear_ram:
   741  1445  0064               	clrwdt			;clear the watchdog before getting into this loop
   742  1446                     clrloop:
   743  1446  0180               	clrf	indf		;clear RAM location pointed to by FSR
   744  1447  0A84               	incf	fsr,f		;increment pointer
   745  1448  0604               	xorwf	fsr,w		;XOR with final address
   746  1449  1903               	btfsc	status,2	;have we reached the end yet?
   747  144A  3400               	retlw	0		;all done for this memory range, return
   748  144B  0604               	xorwf	fsr,w		;XOR again to restore value
   749  144C  2C46               	goto	clrloop		;do the next byte
   750                           
   751                           ; Clear objects allocated to BITCOMMON
   752                           psect cinit,class=CODE,delta=2
   753  14F8  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   754  14F9  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   755                           ; Clear objects allocated to COMMON
   756                           psect cinit,class=CODE,delta=2
   757  14FA  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   758                           ; Clear objects allocated to BANK1
   759                           psect cinit,class=CODE,delta=2
   760  14FB  1383               	bcf	status, 7	;select IRP bank0
   761  14FC  30A0               	movlw	low(__pbssBANK1)
   762  14FD  0084               	movwf	fsr
   763  14FE  30D7               	movlw	low((__pbssBANK1)+037h)
   764  14FF  160A  118A  2445   	fcall	clear_ram
              160A  118A         
   765                           ; Clear objects allocated to BANK3
   766                           psect cinit,class=CODE,delta=2
   767  1504  1783               	bsf	status, 7	;select IRP bank2
   768  1505  3090               	movlw	low(__pbssBANK3)
   769  1506  0084               	movwf	fsr
   770  1507  30B0               	movlw	low((__pbssBANK3)+020h)
   771  1508  160A  118A  2445   	fcall	clear_ram
              160A  118A         
   772                           global btemp
   773                           psect inittext,class=CODE,delta=2
   774                           global init_fetch,btemp
   775                           ;	Called with low address in FSR and high address in W
   776  1478                     init_fetch:
   777  1478  087E               	movf btemp,w
   778  1479  008A               	movwf pclath
   779  147A  087F               	movf btemp+1,w
   780  147B  0082               	movwf pc
   781                           global init_ram
   782                           ;Called with:
   783                           ;	high address of idata address in btemp 
   784                           ;	low address of idata address in btemp+1 
   785                           ;	low address of data in FSR
   786                           ;	high address + 1 of data in btemp-1
   787  147C                     init_ram:
   788  147C  160A  118A  2478   	fcall init_fetch
              160A  118A         
   789  1481  0080               	movwf indf,f
   790  1482  0A84               	incf fsr,f
   791  1483  0804               	movf fsr,w
   792  1484  067D               	xorwf btemp-1,w
   793  1485  1903               	btfsc status,2
   794  1486  3400               	retlw 0
   795  1487  0AFF               	incf btemp+1,f
   796  1488  1903               	btfsc status,2
   797  1489  0AFE               	incf btemp,f
   798  148A  2C7C               	goto init_ram
   799                           ; Initialize objects allocated to BANK1
   800                           psect cinit,class=CODE,delta=2
   801                           global init_ram, __pidataBANK1
   802  150D  1383               	bcf	status, 7	;select IRP bank0
   803  150E  30E4               	movlw low(__pdataBANK1+13)
   804  150F  00FD               	movwf btemp-1,f
   805  1510  3014               	movlw high(__pidataBANK1)
   806  1511  00FE               	movwf btemp,f
   807  1512  3058               	movlw low(__pidataBANK1)
   808  1513  00FF               	movwf btemp+1,f
   809  1514  30D7               	movlw low(__pdataBANK1)
   810  1515  0084               	movwf fsr,f
   811  1516  160A  118A  247C   	fcall init_ram
              160A  118A         
   812                           psect cinit,class=CODE,delta=2
   813                           global end_of_initialization
   814                           
   815                           ;End of C runtime variable initialization code
   816                           
   817  151B                     end_of_initialization:
   818  151B  0183               clrf status
   819  151C  120A  118A  2815   ljmp _main	;jump to C main() function
   820                           psect	cstackCOMMON,class=COMMON,space=1
   821                           global __pcstackCOMMON
   822  0072                     __pcstackCOMMON:
   823                           	global	?_ser_init
   824  0072                     ?_ser_init:	; 0 bytes @ 0x0
   825                           	global	?_robo_init
   826  0072                     ?_robo_init:	; 0 bytes @ 0x0
   827                           	global	?_robot_read
   828  0072                     ?_robot_read:	; 0 bytes @ 0x0
   829                           	global	?_readAvgDistance
   830  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   831                           	global	?_UpdateDisplay
   832  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   833                           	global	?_calibrateIR
   834  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   835                           	global	?_ChargeMode
   836  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   837                           	global	?_ser_putch
   838  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   839                           	global	?_ADCconvert
   840  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   841                           	global	?_init_adc
   842  0072                     ?_init_adc:	; 0 bytes @ 0x0
   843                           	global	?_lcd_write_control
   844  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   845                           	global	?_lcd_write_data
   846  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   847                           	global	?_lcd_set_cursor
   848  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   849                           	global	?_lcd_init
   850  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   851                           	global	?_isr1
   852  0072                     ?_isr1:	; 0 bytes @ 0x0
   853                           	global	?_init
   854  0072                     ?_init:	; 0 bytes @ 0x0
   855                           	global	?_main
   856  0072                     ?_main:	; 0 bytes @ 0x0
   857                           	global	?_Debounce
   858  0072                     ?_Debounce:	; 0 bytes @ 0x0
   859                           	global	??_Debounce
   860  0072                     ??_Debounce:	; 0 bytes @ 0x0
   861                           	global	?_ser_isrx
   862  0072                     ?_ser_isrx:	; 1 bit 
   863                           	global	?_ReadButtons
   864  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   865                           	global	?_Menu
   866  0072                     ?_Menu:	; 1 bytes @ 0x0
   867                           	global	?_ser_getch
   868  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   869                           	global	?_adc_read_channel
   870  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   871                           	global	?_spi_transfer
   872  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   873                           	global	?i1___lwmod
   874  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   875                           	global	i1___lwmod@divisor
   876  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   877  0072                     	ds	1
   878                           	global	??_ReadButtons
   879  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   880  0073                     	ds	1
   881                           	global	i1___lwmod@dividend
   882  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   883  0074                     	ds	2
   884                           	global	??i1___lwmod
   885  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   886  0076                     	ds	1
   887                           	global	i1___lwmod@counter
   888  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   889  0077                     	ds	1
   890                           	global	??_isr1
   891  0078                     ??_isr1:	; 0 bytes @ 0x6
   892  0078                     	ds	5
   893                           psect	cstackBANK0,class=BANK0,space=1
   894                           global __pcstackBANK0
   895  0020                     __pcstackBANK0:
   896                           	global	??_ser_init
   897  0020                     ??_ser_init:	; 0 bytes @ 0x0
   898                           	global	??_Menu
   899  0020                     ??_Menu:	; 0 bytes @ 0x0
   900                           	global	??_ser_putch
   901  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   902                           	global	??_ser_getch
   903  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   904                           	global	??_init_adc
   905  0020                     ??_init_adc:	; 0 bytes @ 0x0
   906                           	global	??_lcd_write_control
   907  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   908                           	global	??_lcd_write_data
   909  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   910                           	global	??_spi_transfer
   911  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   912                           	global	??_ser_isrx
   913  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   914                           	global	?_adc_read
   915  0020                     ?_adc_read:	; 2 bytes @ 0x0
   916                           	global	?___wmul
   917  0020                     ?___wmul:	; 2 bytes @ 0x0
   918                           	global	?___awmod
   919  0020                     ?___awmod:	; 2 bytes @ 0x0
   920                           	global	?___ftpack
   921  0020                     ?___ftpack:	; 3 bytes @ 0x0
   922                           	global	Menu@BTN_input
   923  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   924                           	global	___wmul@multiplier
   925  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   926                           	global	___awmod@divisor
   927  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   928                           	global	___ftpack@arg
   929  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
   930  0020                     	ds	1
   931                           	global	spi_transfer@temp
   932  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   933                           	global	ser_getch@c
   934  0021                     ser_getch@c:	; 1 bytes @ 0x1
   935                           	global	ser_putch@c
   936  0021                     ser_putch@c:	; 1 bytes @ 0x1
   937  0021                     	ds	1
   938                           	global	??_adc_read
   939  0022                     ??_adc_read:	; 0 bytes @ 0x2
   940                           	global	??_robo_init
   941  0022                     ??_robo_init:	; 0 bytes @ 0x2
   942                           	global	??_robot_read
   943  0022                     ??_robot_read:	; 0 bytes @ 0x2
   944                           	global	?_robotTurn
   945  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   946                           	global	?_RobotDrive
   947  0022                     ?_RobotDrive:	; 0 bytes @ 0x2
   948                           	global	lcd_write_control@databyte
   949  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   950                           	global	lcd_write_data@databyte
   951  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   952                           	global	spi_transfer@data
   953  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   954                           	global	RobotDrive@speed
   955  0022                     RobotDrive@speed:	; 2 bytes @ 0x2
   956                           	global	robotTurn@degrees
   957  0022                     robotTurn@degrees:	; 2 bytes @ 0x2
   958                           	global	___wmul@multiplicand
   959  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   960                           	global	___awmod@dividend
   961  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   962  0022                     	ds	1
   963                           	global	?_rotate
   964  0023                     ?_rotate:	; 0 bytes @ 0x3
   965                           	global	??_lcd_set_cursor
   966  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   967                           	global	??_lcd_init
   968  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   969                           	global	??_init
   970  0023                     ??_init:	; 0 bytes @ 0x3
   971                           	global	lcd_set_cursor@address
   972  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   973                           	global	___ftpack@exp
   974  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
   975                           	global	rotate@numsteps
   976  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   977  0023                     	ds	1
   978                           	global	??_robotTurn
   979  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   980                           	global	??_RobotDrive
   981  0024                     ??_RobotDrive:	; 0 bytes @ 0x4
   982                           	global	??___wmul
   983  0024                     ??___wmul:	; 0 bytes @ 0x4
   984                           	global	??___awmod
   985  0024                     ??___awmod:	; 0 bytes @ 0x4
   986                           	global	___ftpack@sign
   987  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
   988                           	global	adc_read@adc_value
   989  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   990                           	global	___wmul@product
   991  0024                     ___wmul@product:	; 2 bytes @ 0x4
   992  0024                     	ds	1
   993                           	global	??___ftpack
   994  0025                     ??___ftpack:	; 0 bytes @ 0x5
   995                           	global	rotate@direction
   996  0025                     rotate@direction:	; 1 bytes @ 0x5
   997                           	global	RobotDrive@speedlowByte
   998  0025                     RobotDrive@speedlowByte:	; 1 bytes @ 0x5
   999                           	global	___awmod@counter
  1000  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1001  0025                     	ds	1
  1002                           	global	??_rotate
  1003  0026                     ??_rotate:	; 0 bytes @ 0x6
  1004                           	global	??_adc_read_channel
  1005  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1006                           	global	?_abs
  1007  0026                     ?_abs:	; 2 bytes @ 0x6
  1008                           	global	?___lwdiv
  1009  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1010                           	global	RobotDrive@speedhighByte
  1011  0026                     RobotDrive@speedhighByte:	; 1 bytes @ 0x6
  1012                           	global	___awmod@sign
  1013  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1014                           	global	abs@v
  1015  0026                     abs@v:	; 2 bytes @ 0x6
  1016                           	global	___lwdiv@divisor
  1017  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1018  0026                     	ds	1
  1019                           	global	?_lcd_write_string
  1020  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1021                           	global	adc_read_channel@channel
  1022  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1023                           	global	lcd_write_string@s
  1024  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1025  0027                     	ds	1
  1026                           	global	??_abs
  1027  0028                     ??_abs:	; 0 bytes @ 0x8
  1028                           	global	?_readDistance
  1029  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1030                           	global	?___fttol
  1031  0028                     ?___fttol:	; 4 bytes @ 0x8
  1032                           	global	rotate@i
  1033  0028                     rotate@i:	; 2 bytes @ 0x8
  1034                           	global	___lwdiv@dividend
  1035  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1036                           	global	___fttol@f1
  1037  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1038  0028                     	ds	1
  1039                           	global	??_lcd_write_string
  1040  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1041  0029                     	ds	1
  1042                           	global	??_readDistance
  1043  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1044                           	global	??___lwdiv
  1045  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1046  002A                     	ds	1
  1047                           	global	___lwdiv@quotient
  1048  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1049  002B                     	ds	1
  1050                           	global	??___fttol
  1051  002C                     ??___fttol:	; 0 bytes @ 0xC
  1052                           	global	readDistance@readVal
  1053  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1054  002C                     	ds	1
  1055                           	global	___lwdiv@counter
  1056  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1057  002D                     	ds	1
  1058                           	global	??_ADCconvert
  1059  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1060                           	global	?___lwmod
  1061  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1062                           	global	___lwmod@divisor
  1063  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1064  002E                     	ds	2
  1065                           	global	??_readAvgDistance
  1066  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1067                           	global	___fttol@sign1
  1068  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1069                           	global	readAvgDistance@fullval
  1070  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1071                           	global	___lwmod@dividend
  1072  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1073  0030                     	ds	1
  1074                           	global	___fttol@lval
  1075  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1076  0031                     	ds	1
  1077                           	global	??___lwmod
  1078  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1079                           	global	readAvgDistance@j
  1080  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1081  0032                     	ds	1
  1082                           	global	___lwmod@counter
  1083  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1084  0033                     	ds	1
  1085                           	global	?_sprintf
  1086  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1087                           	global	sprintf@f
  1088  0034                     sprintf@f:	; 1 bytes @ 0x14
  1089                           	global	readAvgDistance@tempIR
  1090  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1091  0034                     	ds	1
  1092                           	global	___fttol@exp1
  1093  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1094  0035                     	ds	1
  1095                           	global	?___awtoft
  1096  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1097                           	global	readAvgDistance@i
  1098  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1099                           	global	___awtoft@c
  1100  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1101  0036                     	ds	3
  1102                           	global	??_sprintf
  1103  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1104                           	global	??___awtoft
  1105  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1106  0039                     	ds	2
  1107                           	global	___awtoft@sign
  1108  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1109  003B                     	ds	1
  1110                           	global	?___ftmul
  1111  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  1112                           	global	sprintf@ap
  1113  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1114                           	global	___ftmul@f1
  1115  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  1116  003C                     	ds	1
  1117                           	global	sprintf@flag
  1118  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1119  003D                     	ds	1
  1120                           	global	sprintf@prec
  1121  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1122  003E                     	ds	1
  1123                           	global	___ftmul@f2
  1124  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  1125                           	global	sprintf@_val
  1126  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1127  003F                     	ds	3
  1128                           	global	??___ftmul
  1129  0042                     ??___ftmul:	; 0 bytes @ 0x22
  1130  0042                     	ds	1
  1131                           	global	sprintf@sp
  1132  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1133  0043                     	ds	1
  1134                           	global	sprintf@c
  1135  0044                     sprintf@c:	; 1 bytes @ 0x24
  1136  0044                     	ds	1
  1137                           	global	??_UpdateDisplay
  1138  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1139  0045                     	ds	1
  1140                           	global	___ftmul@exp
  1141  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  1142  0046                     	ds	1
  1143                           	global	___ftmul@f3_as_product
  1144  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  1145  0047                     	ds	2
  1146                           	global	UpdateDisplay@LCDOutput
  1147  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1148  0049                     	ds	1
  1149                           	global	___ftmul@cntr
  1150  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  1151  004A                     	ds	1
  1152                           	global	___ftmul@sign
  1153  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  1154  004B                     	ds	14
  1155                           	global	??_calibrateIR
  1156  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1157                           	global	?_robotMoveSpeed
  1158  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1159                           	global	??_ChargeMode
  1160  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1161                           	global	?_scan360
  1162  0059                     ?_scan360:	; 2 bytes @ 0x39
  1163                           	global	robotMoveSpeed@distance
  1164  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1165  0059                     	ds	2
  1166                           	global	??_scan360
  1167  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1168                           	global	scan360@lowestVal
  1169  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1170                           	global	robotMoveSpeed@speed
  1171  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1172  005B                     	ds	2
  1173                           	global	??_robotMoveSpeed
  1174  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1175                           	global	scan360@lowestSteps
  1176  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1177  005D                     	ds	2
  1178                           	global	scan360@steps
  1179  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1180  005F                     	ds	1
  1181                           	global	robotMoveSpeed@temp1
  1182  0060                     robotMoveSpeed@temp1:	; 2 bytes @ 0x40
  1183  0060                     	ds	2
  1184                           	global	??_main
  1185  0062                     ??_main:	; 0 bytes @ 0x42
  1186  0062                     	ds	3
  1187                           	global	main@direction1
  1188  0065                     main@direction1:	; 2 bytes @ 0x45
  1189  0065                     	ds	2
  1190                           	global	main@RT2A
  1191  0067                     main@RT2A:	; 2 bytes @ 0x47
  1192  0067                     	ds	2
  1193                           	global	main@shortwall
  1194  0069                     main@shortwall:	; 2 bytes @ 0x49
  1195  0069                     	ds	2
  1196                           	global	main@choice
  1197  006B                     main@choice:	; 1 bytes @ 0x4B
  1198  006B                     	ds	1
  1199                           	global	main@shortwall_3011
  1200  006C                     main@shortwall_3011:	; 2 bytes @ 0x4C
  1201  006C                     	ds	2
  1202                           	global	main@RT2P
  1203  006E                     main@RT2P:	; 2 bytes @ 0x4E
  1204  006E                     	ds	2
  1205 ;;Data sizes: Strings 147, constant 10, data 13, bss 88, persistent 0 stack 0
  1206 ;;Auto spaces:   Size  Autos    Used
  1207 ;; COMMON          14     11      14
  1208 ;; BANK0           80     80      80
  1209 ;; BANK1           80      0      68
  1210 ;; BANK3           96      0      32
  1211 ;; BANK2           96      0       0
  1212                           
  1213 ;;
  1214 ;; Pointer list with targets:
  1215                           
  1216 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1217 ;;
  1218 ;; ?___ftpack	float  size(1) Largest target is 2
  1219 ;;		 -> main@RT2P(BANK0[2]), 
  1220 ;;
  1221 ;; ?_abs	int  size(1) Largest target is 0
  1222 ;;
  1223 ;; ?___awmod	int  size(1) Largest target is 0
  1224 ;;
  1225 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1226 ;;
  1227 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1228 ;;
  1229 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1230 ;;
  1231 ;; ?_scan360	int  size(1) Largest target is 0
  1232 ;;
  1233 ;; ?___fttol	long  size(1) Largest target is 0
  1234 ;;
  1235 ;; ?___ftmul	float  size(1) Largest target is 0
  1236 ;;
  1237 ;; ?___awtoft	float  size(1) Largest target is 0
  1238 ;;
  1239 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1240 ;;
  1241 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1242 ;;
  1243 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1244 ;;		 -> STR_13(CODE[13]), 
  1245 ;;
  1246 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1247 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1248 ;;
  1249 ;; ?_sprintf	int  size(1) Largest target is 0
  1250 ;;
  1251 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1252 ;;		 -> ?_sprintf(BANK0[2]), 
  1253 ;;
  1254 ;; S8173$_cp	PTR const unsigned char  size(1) Largest target is 0
  1255 ;;
  1256 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1257 ;;
  1258 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1259 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1260 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1261 ;;
  1262 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1263 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1264 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1265 ;;
  1266 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1267 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1268 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), 
  1269 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1270 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1271 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1272 ;;
  1273                           
  1274                           
  1275 ;;
  1276 ;; Critical Paths under _main in COMMON
  1277 ;;
  1278 ;;   None.
  1279 ;;
  1280 ;; Critical Paths under _isr1 in COMMON
  1281 ;;
  1282 ;;   _isr1->i1___lwmod
  1283 ;;   _ReadButtons->_Debounce
  1284 ;;
  1285 ;; Critical Paths under _main in BANK0
  1286 ;;
  1287 ;;   _main->_robotMoveSpeed
  1288 ;;   _ChargeMode->_UpdateDisplay
  1289 ;;   _robotMoveSpeed->_UpdateDisplay
  1290 ;;   _scan360->_UpdateDisplay
  1291 ;;   _calibrateIR->_UpdateDisplay
  1292 ;;   _UpdateDisplay->_sprintf
  1293 ;;   _readAvgDistance->_ADCconvert
  1294 ;;   _readDistance->_adc_read_channel
  1295 ;;   _robot_read->_ser_putch
  1296 ;;   _robot_read->_ser_getch
  1297 ;;   _lcd_init->_lcd_write_control
  1298 ;;   _lcd_write_string->___awmod
  1299 ;;   _lcd_set_cursor->_lcd_write_control
  1300 ;;   ___awtoft->___fttol
  1301 ;;   ___ftmul->___awtoft
  1302 ;;   _abs->___wmul
  1303 ;;   _RobotDrive->_ser_putch
  1304 ;;   _sprintf->___lwmod
  1305 ;;   _ADCconvert->___lwdiv
  1306 ;;   _robotTurn->_ser_putch
  1307 ;;   _rotate->_spi_transfer
  1308 ;;   _robo_init->_ser_putch
  1309 ;;   _adc_read_channel->_adc_read
  1310 ;;   ___fttol->___ftpack
  1311 ;;   ___lwmod->___lwdiv
  1312 ;;   ___lwdiv->___wmul
  1313 ;;
  1314 ;; Critical Paths under _isr1 in BANK0
  1315 ;;
  1316 ;;   None.
  1317 ;;
  1318 ;; Critical Paths under _main in BANK1
  1319 ;;
  1320 ;;   None.
  1321 ;;
  1322 ;; Critical Paths under _isr1 in BANK1
  1323 ;;
  1324 ;;   None.
  1325 ;;
  1326 ;; Critical Paths under _main in BANK3
  1327 ;;
  1328 ;;   None.
  1329 ;;
  1330 ;; Critical Paths under _isr1 in BANK3
  1331 ;;
  1332 ;;   None.
  1333 ;;
  1334 ;; Critical Paths under _main in BANK2
  1335 ;;
  1336 ;;   None.
  1337 ;;
  1338 ;; Critical Paths under _isr1 in BANK2
  1339 ;;
  1340 ;;   None.
  1341                           
  1342 ;;
  1343 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1344 ;;
  1345                           
  1346 ;;
  1347 ;;Call Graph Tables:
  1348 ;;
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (0) _main                                                14    14      0   10335
  1353 ;;                                             66 BANK0     14    14      0
  1354 ;;                               _init
  1355 ;;                         _robot_read
  1356 ;;                    _readAvgDistance
  1357 ;;                      _UpdateDisplay
  1358 ;;                               _Menu
  1359 ;;                        _calibrateIR
  1360 ;;                            _scan360
  1361 ;;                             _rotate
  1362 ;;                     _robotMoveSpeed
  1363 ;;                          _robotTurn
  1364 ;;                           ___awtoft
  1365 ;;                            ___ftmul
  1366 ;;                            ___fttol
  1367 ;;                         _ChargeMode
  1368 ;; ---------------------------------------------------------------------------------
  1369 ;; (1) _ChargeMode                                           1     1      0    1305
  1370 ;;                                             57 BANK0      1     1      0
  1371 ;;                          _ser_putch
  1372 ;;                      _UpdateDisplay
  1373 ;; ---------------------------------------------------------------------------------
  1374 ;; (1) _robotMoveSpeed                                       9     5      4    1711
  1375 ;;                                             57 BANK0      9     5      4
  1376 ;;                         _RobotDrive
  1377 ;;                         _robot_read
  1378 ;;                      _UpdateDisplay
  1379 ;;                                _abs
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; (1) _scan360                                              8     6      2    2122
  1382 ;;                                             57 BANK0      8     6      2
  1383 ;;                    _readAvgDistance
  1384 ;;                             _rotate
  1385 ;;                      _UpdateDisplay
  1386 ;; ---------------------------------------------------------------------------------
  1387 ;; (1) _calibrateIR                                          0     0      0    1381
  1388 ;;                             _rotate
  1389 ;;                      _UpdateDisplay
  1390 ;; ---------------------------------------------------------------------------------
  1391 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1392 ;;                                             37 BANK0     20    20      0
  1393 ;;                  _lcd_write_control
  1394 ;;                            _sprintf
  1395 ;;                     _lcd_set_cursor
  1396 ;;                   _lcd_write_string
  1397 ;;                            ___awmod
  1398 ;; ---------------------------------------------------------------------------------
  1399 ;; (2) _readAvgDistance                                      8     8      0     625
  1400 ;;                                             16 BANK0      8     8      0
  1401 ;;                       _readDistance
  1402 ;;                            ___lwdiv
  1403 ;;                         _ADCconvert
  1404 ;; ---------------------------------------------------------------------------------
  1405 ;; (1) _init                                                 1     1      0      44
  1406 ;;                                              3 BANK0      1     1      0
  1407 ;;                           _ser_init
  1408 ;;                           _init_adc
  1409 ;;                           _lcd_init
  1410 ;;                          _robo_init
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (3) _readDistance                                         6     4      2      69
  1413 ;;                                              8 BANK0      6     4      2
  1414 ;;                   _adc_read_channel
  1415 ;; ---------------------------------------------------------------------------------
  1416 ;; (2) _robot_read                                           2     2      0      45
  1417 ;;                                              2 BANK0      2     2      0
  1418 ;;                          _ser_putch
  1419 ;;                          _ser_getch
  1420 ;; ---------------------------------------------------------------------------------
  1421 ;; (2) _lcd_init                                             0     0      0      22
  1422 ;;                  _lcd_write_control
  1423 ;; ---------------------------------------------------------------------------------
  1424 ;; (3) _lcd_write_string                                     2     0      2      67
  1425 ;;                                              7 BANK0      2     0      2
  1426 ;;                     _lcd_write_data
  1427 ;;                            ___awmod (ARG)
  1428 ;; ---------------------------------------------------------------------------------
  1429 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1430 ;;                                              3 BANK0      1     1      0
  1431 ;;                  _lcd_write_control
  1432 ;; ---------------------------------------------------------------------------------
  1433 ;; (1) ___awtoft                                             6     3      3     300
  1434 ;;                                             22 BANK0      6     3      3
  1435 ;;                           ___ftpack
  1436 ;;                            ___fttol (ARG)
  1437 ;; ---------------------------------------------------------------------------------
  1438 ;; (1) ___ftmul                                             16    10      6     535
  1439 ;;                                             28 BANK0     16    10      6
  1440 ;;                           ___ftpack
  1441 ;;                           ___awtoft (ARG)
  1442 ;;                            ___fttol (ARG)
  1443 ;; ---------------------------------------------------------------------------------
  1444 ;; (2) _abs                                                  4     2      2     158
  1445 ;;                                              6 BANK0      4     2      2
  1446 ;;                             ___wmul
  1447 ;; ---------------------------------------------------------------------------------
  1448 ;; (2) _RobotDrive                                           5     3      2     112
  1449 ;;                                              2 BANK0      5     3      2
  1450 ;;                          _ser_putch
  1451 ;; ---------------------------------------------------------------------------------
  1452 ;; (3) _ser_getch                                            2     2      0      23
  1453 ;;                                              0 BANK0      2     2      0
  1454 ;;                           _ser_isrx
  1455 ;; ---------------------------------------------------------------------------------
  1456 ;; (3) _sprintf                                             17    12      5     798
  1457 ;;                                             20 BANK0     17    12      5
  1458 ;;                            ___lwdiv
  1459 ;;                            ___lwmod
  1460 ;; ---------------------------------------------------------------------------------
  1461 ;; (3) _ADCconvert                                           2     2      0     254
  1462 ;;                                             14 BANK0      2     2      0
  1463 ;;                             ___wmul
  1464 ;;                            ___lwdiv
  1465 ;; ---------------------------------------------------------------------------------
  1466 ;; (1) _robotTurn                                            3     1      2      88
  1467 ;;                                              2 BANK0      3     1      2
  1468 ;;                          _ser_putch
  1469 ;; ---------------------------------------------------------------------------------
  1470 ;; (1) _rotate                                               7     4      3      98
  1471 ;;                                              3 BANK0      7     4      3
  1472 ;;                       _spi_transfer
  1473 ;; ---------------------------------------------------------------------------------
  1474 ;; (2) _robo_init                                            0     0      0      22
  1475 ;;                          _ser_putch
  1476 ;; ---------------------------------------------------------------------------------
  1477 ;; (4) _lcd_write_data                                       3     3      0      22
  1478 ;;                                              0 BANK0      3     3      0
  1479 ;; ---------------------------------------------------------------------------------
  1480 ;; (4) _lcd_write_control                                    3     3      0      22
  1481 ;;                                              0 BANK0      3     3      0
  1482 ;; ---------------------------------------------------------------------------------
  1483 ;; (2) _init_adc                                             1     1      0       0
  1484 ;;                                              0 BANK0      1     1      0
  1485 ;; ---------------------------------------------------------------------------------
  1486 ;; (4) _adc_read_channel                                     2     2      0      46
  1487 ;;                                              6 BANK0      2     2      0
  1488 ;;                           _adc_read
  1489 ;; ---------------------------------------------------------------------------------
  1490 ;; (3) ___awmod                                              7     3      4     296
  1491 ;;                                              0 BANK0      7     3      4
  1492 ;; ---------------------------------------------------------------------------------
  1493 ;; (1) ___fttol                                             14    10      4     252
  1494 ;;                                              8 BANK0     14    10      4
  1495 ;;                           ___ftpack (ARG)
  1496 ;; ---------------------------------------------------------------------------------
  1497 ;; (2) ___ftpack                                             8     3      5     209
  1498 ;;                                              0 BANK0      8     3      5
  1499 ;; ---------------------------------------------------------------------------------
  1500 ;; (4) ___lwmod                                              6     2      4     159
  1501 ;;                                             14 BANK0      6     2      4
  1502 ;;                            ___lwdiv (ARG)
  1503 ;; ---------------------------------------------------------------------------------
  1504 ;; (4) ___lwdiv                                              8     4      4     162
  1505 ;;                                              6 BANK0      8     4      4
  1506 ;;                             ___wmul (ARG)
  1507 ;; ---------------------------------------------------------------------------------
  1508 ;; (3) ___wmul                                               6     2      4      92
  1509 ;;                                              0 BANK0      6     2      4
  1510 ;; ---------------------------------------------------------------------------------
  1511 ;; (4) _ser_isrx                                             0     0      0       0
  1512 ;; ---------------------------------------------------------------------------------
  1513 ;; (2) _spi_transfer                                         3     3      0      30
  1514 ;;                                              0 BANK0      3     3      0
  1515 ;; ---------------------------------------------------------------------------------
  1516 ;; (2) _ser_putch                                            2     2      0      22
  1517 ;;                                              0 BANK0      2     2      0
  1518 ;; ---------------------------------------------------------------------------------
  1519 ;; (1) _Menu                                                 1     1      0      22
  1520 ;;                                              0 BANK0      1     1      0
  1521 ;; ---------------------------------------------------------------------------------
  1522 ;; (2) _ser_init                                             1     1      0       0
  1523 ;;                                              0 BANK0      1     1      0
  1524 ;; ---------------------------------------------------------------------------------
  1525 ;; (5) _adc_read                                             6     4      2      24
  1526 ;;                                              0 BANK0      6     4      2
  1527 ;; ---------------------------------------------------------------------------------
  1528 ;; Estimated maximum stack depth 5
  1529 ;; ---------------------------------------------------------------------------------
  1530 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1531 ;; ---------------------------------------------------------------------------------
  1532 ;; (6) _isr1                                                 5     5      0     521
  1533 ;;                                              6 COMMON     5     5      0
  1534 ;;                          i1___lwmod
  1535 ;;                        _ReadButtons
  1536 ;; ---------------------------------------------------------------------------------
  1537 ;; (7) _ReadButtons                                          0     0      0       0
  1538 ;;                           _Debounce
  1539 ;; ---------------------------------------------------------------------------------
  1540 ;; (7) i1___lwmod                                            6     2      4     521
  1541 ;;                                              0 COMMON     6     2      4
  1542 ;; ---------------------------------------------------------------------------------
  1543 ;; (8) _Debounce                                             1     1      0       0
  1544 ;;                                              0 COMMON     1     1      0
  1545 ;; ---------------------------------------------------------------------------------
  1546 ;; Estimated maximum stack depth 8
  1547 ;; ---------------------------------------------------------------------------------
  1548                           
  1549 ;; Call Graph Graphs:
  1550                           
  1551 ;; _main (ROOT)
  1552 ;;   _init
  1553 ;;     _ser_init
  1554 ;;     _init_adc
  1555 ;;     _lcd_init
  1556 ;;       _lcd_write_control
  1557 ;;     _robo_init
  1558 ;;       _ser_putch
  1559 ;;   _robot_read
  1560 ;;     _ser_putch
  1561 ;;     _ser_getch
  1562 ;;       _ser_isrx
  1563 ;;   _readAvgDistance
  1564 ;;     _readDistance
  1565 ;;       _adc_read_channel
  1566 ;;         _adc_read
  1567 ;;     ___lwdiv
  1568 ;;       ___wmul (ARG)
  1569 ;;     _ADCconvert
  1570 ;;       ___wmul
  1571 ;;       ___lwdiv
  1572 ;;         ___wmul (ARG)
  1573 ;;   _UpdateDisplay
  1574 ;;     _lcd_write_control
  1575 ;;     _sprintf
  1576 ;;       ___lwdiv
  1577 ;;         ___wmul (ARG)
  1578 ;;       ___lwmod
  1579 ;;         ___lwdiv (ARG)
  1580 ;;           ___wmul (ARG)
  1581 ;;     _lcd_set_cursor
  1582 ;;       _lcd_write_control
  1583 ;;     _lcd_write_string
  1584 ;;       _lcd_write_data
  1585 ;;       ___awmod (ARG)
  1586 ;;     ___awmod
  1587 ;;   _Menu
  1588 ;;   _calibrateIR
  1589 ;;     _rotate
  1590 ;;       _spi_transfer
  1591 ;;     _UpdateDisplay
  1592 ;;       _lcd_write_control
  1593 ;;       _sprintf
  1594 ;;         ___lwdiv
  1595 ;;           ___wmul (ARG)
  1596 ;;         ___lwmod
  1597 ;;           ___lwdiv (ARG)
  1598 ;;             ___wmul (ARG)
  1599 ;;       _lcd_set_cursor
  1600 ;;         _lcd_write_control
  1601 ;;       _lcd_write_string
  1602 ;;         _lcd_write_data
  1603 ;;         ___awmod (ARG)
  1604 ;;       ___awmod
  1605 ;;   _scan360
  1606 ;;     _readAvgDistance
  1607 ;;       _readDistance
  1608 ;;         _adc_read_channel
  1609 ;;           _adc_read
  1610 ;;       ___lwdiv
  1611 ;;         ___wmul (ARG)
  1612 ;;       _ADCconvert
  1613 ;;         ___wmul
  1614 ;;         ___lwdiv
  1615 ;;           ___wmul (ARG)
  1616 ;;     _rotate
  1617 ;;       _spi_transfer
  1618 ;;     _UpdateDisplay
  1619 ;;       _lcd_write_control
  1620 ;;       _sprintf
  1621 ;;         ___lwdiv
  1622 ;;           ___wmul (ARG)
  1623 ;;         ___lwmod
  1624 ;;           ___lwdiv (ARG)
  1625 ;;             ___wmul (ARG)
  1626 ;;       _lcd_set_cursor
  1627 ;;         _lcd_write_control
  1628 ;;       _lcd_write_string
  1629 ;;         _lcd_write_data
  1630 ;;         ___awmod (ARG)
  1631 ;;       ___awmod
  1632 ;;   _rotate
  1633 ;;     _spi_transfer
  1634 ;;   _robotMoveSpeed
  1635 ;;     _RobotDrive
  1636 ;;       _ser_putch
  1637 ;;     _robot_read
  1638 ;;       _ser_putch
  1639 ;;       _ser_getch
  1640 ;;         _ser_isrx
  1641 ;;     _UpdateDisplay
  1642 ;;       _lcd_write_control
  1643 ;;       _sprintf
  1644 ;;         ___lwdiv
  1645 ;;           ___wmul (ARG)
  1646 ;;         ___lwmod
  1647 ;;           ___lwdiv (ARG)
  1648 ;;             ___wmul (ARG)
  1649 ;;       _lcd_set_cursor
  1650 ;;         _lcd_write_control
  1651 ;;       _lcd_write_string
  1652 ;;         _lcd_write_data
  1653 ;;         ___awmod (ARG)
  1654 ;;       ___awmod
  1655 ;;     _abs
  1656 ;;       ___wmul
  1657 ;;   _robotTurn
  1658 ;;     _ser_putch
  1659 ;;   ___awtoft
  1660 ;;     ___ftpack
  1661 ;;     ___fttol (ARG)
  1662 ;;       ___ftpack (ARG)
  1663 ;;   ___ftmul
  1664 ;;     ___ftpack
  1665 ;;     ___awtoft (ARG)
  1666 ;;       ___ftpack
  1667 ;;       ___fttol (ARG)
  1668 ;;         ___ftpack (ARG)
  1669 ;;     ___fttol (ARG)
  1670 ;;       ___ftpack (ARG)
  1671 ;;   ___fttol
  1672 ;;     ___ftpack (ARG)
  1673 ;;   _ChargeMode
  1674 ;;     _ser_putch
  1675 ;;     _UpdateDisplay
  1676 ;;       _lcd_write_control
  1677 ;;       _sprintf
  1678 ;;         ___lwdiv
  1679 ;;           ___wmul (ARG)
  1680 ;;         ___lwmod
  1681 ;;           ___lwdiv (ARG)
  1682 ;;             ___wmul (ARG)
  1683 ;;       _lcd_set_cursor
  1684 ;;         _lcd_write_control
  1685 ;;       _lcd_write_string
  1686 ;;         _lcd_write_data
  1687 ;;         ___awmod (ARG)
  1688 ;;       ___awmod
  1689 ;;
  1690 ;; _isr1 (ROOT)
  1691 ;;   i1___lwmod
  1692 ;;   _ReadButtons
  1693 ;;     _Debounce
  1694 ;;
  1695                           
  1696 ;; Address spaces:
  1697                           
  1698 ;;Name               Size   Autos  Total    Cost      Usage
  1699 ;;BANK3               60      0      20       9       33.3%
  1700 ;;BITBANK3            60      0       0       8        0.0%
  1701 ;;SFR3                 0      0       0       4        0.0%
  1702 ;;BITSFR3              0      0       0       4        0.0%
  1703 ;;BANK2               60      0       0      11        0.0%
  1704 ;;BITBANK2            60      0       0      10        0.0%
  1705 ;;SFR2                 0      0       0       5        0.0%
  1706 ;;BITSFR2              0      0       0       5        0.0%
  1707 ;;SFR1                 0      0       0       2        0.0%
  1708 ;;BITSFR1              0      0       0       2        0.0%
  1709 ;;BANK1               50      0      44       7       85.0%
  1710 ;;BITBANK1            50      0       0       6        0.0%
  1711 ;;CODE                 0      0       0       0        0.0%
  1712 ;;DATA                 0      0      CD      12        0.0%
  1713 ;;ABS                  0      0      C2       3        0.0%
  1714 ;;NULL                 0      0       0       0        0.0%
  1715 ;;STACK                0      0       B       2        0.0%
  1716 ;;BANK0               50     50      50       5      100.0%
  1717 ;;BITBANK0            50      0       0       4        0.0%
  1718 ;;SFR0                 0      0       0       1        0.0%
  1719 ;;BITSFR0              0      0       0       1        0.0%
  1720 ;;COMMON               E      B       E       1      100.0%
  1721 ;;BITCOMMON            E      0       2       0       14.3%
  1722 ;;EEDATA             100      0       0       0        0.0%
  1723                           
  1724                           	global	_main
  1725                           psect	maintext,global,class=CODE,delta=2
  1726                           global __pmaintext
  1727  0015                     __pmaintext:
  1728                           
  1729 ;; *************** function _main *****************
  1730 ;; Defined at:
  1731 ;;		line 167 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  RT2P            2   78[BANK0 ] int 
  1736 ;;  shortwall       2   76[BANK0 ] int 
  1737 ;;  RT2A            2   71[BANK0 ] int 
  1738 ;;  direction1      2   69[BANK0 ] int 
  1739 ;;  shortwall       2   73[BANK0 ] int 
  1740 ;;  choice          1   75[BANK0 ] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;		None               void
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 17F/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       0       0
  1751 ;;      Locals:         0      11       0       0       0
  1752 ;;      Temps:          0       3       0       0       0
  1753 ;;      Totals:         0      14       0       0       0
  1754 ;;Total ram usage:       14 bytes
  1755 ;; Hardware stack levels required when called:    8
  1756 ;; This function calls:
  1757 ;;		_init
  1758 ;;		_robot_read
  1759 ;;		_readAvgDistance
  1760 ;;		_UpdateDisplay
  1761 ;;		_Menu
  1762 ;;		_calibrateIR
  1763 ;;		_scan360
  1764 ;;		_rotate
  1765 ;;		_robotMoveSpeed
  1766 ;;		_robotTurn
  1767 ;;		___awtoft
  1768 ;;		___ftmul
  1769 ;;		___fttol
  1770 ;;		_ChargeMode
  1771 ;; This function is called by:
  1772 ;;		Startup code after reset
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           psect	maintext
  1776                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1777                           	line	167
  1778                           	global	__size_of_main
  1779  02AF                     	__size_of_main	equ	__end_of_main-_main
  1780                           	
  1781  0015                     _main:	
  1782                           	opt	stack 0
  1783                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1784                           	line	168
  1785                           	
  1786  0015                     l11427:	
  1787                           ;Main.c: 168: unsigned char choice = 255;
  1788  0015  30FF               	movlw	(0FFh)
  1789  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  1790  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  1791  0018  00E2               	movwf	(??_main+0)+0
  1792  0019  0862               	movf	(??_main+0)+0,w
  1793  001A  00EB               	movwf	(main@choice)
  1794                           	line	169
  1795                           	
  1796  001B                     l11429:	
  1797                           ;Main.c: 169: int shortwall = 0;
  1798  001B  01E9               	clrf	(main@shortwall)
  1799  001C  01EA               	clrf	(main@shortwall+1)
  1800                           	line	172
  1801                           	
  1802  001D                     l11431:	
  1803                           ;Main.c: 172: init();
  1804  001D  160A  118A  26A7   	fcall	_init
              120A  118A         
  1805  0022  2823               	goto	l11433
  1806                           	line	175
  1807                           ;Main.c: 175: while(1)
  1808                           	
  1809  0023                     l2220:	
  1810                           	line	177
  1811                           	
  1812  0023                     l11433:	
  1813                           ;Main.c: 176: {
  1814                           ;Main.c: 177: if (RTC_FLAG_250MS == 1)
  1815  0023  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1816  0024  2826               	goto	u5461
  1817  0025  2827               	goto	u5460
  1818  0026                     u5461:
  1819  0026  2838               	goto	l11443
  1820  0027                     u5460:
  1821                           	line	179
  1822                           	
  1823  0027                     l11435:	
  1824                           ;Main.c: 178: {
  1825                           ;Main.c: 179: RTC_FLAG_250MS = 0;
  1826  0027  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1827                           	line	180
  1828                           	
  1829  0028                     l11437:	
  1830                           ;Main.c: 180: robot_read();
  1831  0028  120A  158A  21F4   	fcall	_robot_read
              120A  118A         
  1832                           	line	181
  1833                           	
  1834  002D                     l11439:	
  1835                           ;Main.c: 181: readAvgDistance();
  1836  002D  120A  158A  230D   	fcall	_readAvgDistance
              120A  118A         
  1837                           	line	182
  1838                           	
  1839  0032                     l11441:	
  1840                           ;Main.c: 182: UpdateDisplay();
  1841  0032  120A  118A  2527   	fcall	_UpdateDisplay
              120A  118A         
  1842  0037  2838               	goto	l11443
  1843                           	line	183
  1844                           	
  1845  0038                     l2221:	
  1846                           	line	184
  1847                           	
  1848  0038                     l11443:	
  1849                           ;Main.c: 183: }
  1850                           ;Main.c: 184: if (buttonPressed)
  1851  0038  087D               	movf	(_buttonPressed),w	;volatile
  1852  0039  1D03               	skipz
  1853  003A  283C               	goto	u5470
  1854  003B  2AA3               	goto	l11547
  1855  003C                     u5470:
  1856                           	line	187
  1857                           	
  1858  003C                     l11445:	
  1859                           ;Main.c: 186: {
  1860                           ;Main.c: 187: choice = Menu(buttonPressed);
  1861  003C  087D               	movf	(_buttonPressed),w	;volatile
  1862  003D  120A  158A  210D   	fcall	_Menu
              120A  118A         
  1863  0042  1283               	bcf	status, 5	;RP0=0, select bank0
  1864  0043  1303               	bcf	status, 6	;RP1=0, select bank0
  1865  0044  00E2               	movwf	(??_main+0)+0
  1866  0045  0862               	movf	(??_main+0)+0,w
  1867  0046  00EB               	movwf	(main@choice)
  1868                           	line	188
  1869                           	
  1870  0047                     l11447:	
  1871                           ;Main.c: 188: buttonPressed = 0;
  1872  0047  01FD               	clrf	(_buttonPressed)	;volatile
  1873  0048  2AA3               	goto	l11547
  1874                           	line	189
  1875                           	
  1876  0049                     l2222:	
  1877                           	line	193
  1878                           ;Main.c: 189: }
  1879                           ;Main.c: 193: switch (choice)
  1880  0049  2AA3               	goto	l11547
  1881                           	line	195
  1882                           ;Main.c: 194: {
  1883                           ;Main.c: 195: case 0:
  1884                           	
  1885  004A                     l2224:	
  1886                           	line	196
  1887                           	
  1888  004A                     l11449:	
  1889                           ;Main.c: 196: calibrateIR();
  1890  004A  120A  158A  2247   	fcall	_calibrateIR
              120A  118A         
  1891                           	line	197
  1892                           ;Main.c: 197: break;
  1893  004F  2AB9               	goto	l11549
  1894                           	line	198
  1895                           ;Main.c: 198: case 1:
  1896                           	
  1897  0050                     l2226:	
  1898                           	line	199
  1899                           	
  1900  0050                     l11451:	
  1901                           ;Main.c: 199: shortwall = scan360() - 13;
  1902  0050  120A  118A  2786   	fcall	_scan360
              120A  118A         
  1903  0055  1283               	bcf	status, 5	;RP0=0, select bank0
  1904  0056  1303               	bcf	status, 6	;RP1=0, select bank0
  1905  0057  0859               	movf	(0+(?_scan360)),w
  1906  0058  3EF3               	addlw	low(-13)
  1907  0059  00E9               	movwf	(main@shortwall)
  1908  005A  085A               	movf	(1+(?_scan360)),w
  1909  005B  1803               	skipnc
  1910  005C  3E01               	addlw	1
  1911  005D  3EFF               	addlw	high(-13)
  1912  005E  00EA               	movwf	1+(main@shortwall)
  1913                           	line	200
  1914                           	
  1915  005F                     l11453:	
  1916                           ;Main.c: 200: rotate((200 - shortwall), 0);
  1917  005F  0969               	comf	(main@shortwall),w
  1918  0060  00E2               	movwf	(??_main+0)+0
  1919  0061  096A               	comf	(main@shortwall+1),w
  1920  0062  00E3               	movwf	((??_main+0)+0+1)
  1921  0063  0AE2               	incf	(??_main+0)+0,f
  1922  0064  1903               	skipnz
  1923  0065  0AE3               	incf	((??_main+0)+0+1),f
  1924  0066  0862               	movf	0+(??_main+0)+0,w
  1925  0067  3EC8               	addlw	low(0C8h)
  1926  0068  00A3               	movwf	(?_rotate)
  1927  0069  0863               	movf	1+(??_main+0)+0,w
  1928  006A  1803               	skipnc
  1929  006B  3E01               	addlw	1
  1930  006C  3E00               	addlw	high(0C8h)
  1931  006D  00A4               	movwf	1+(?_rotate)
  1932  006E  01A5               	clrf	0+(?_rotate)+02h
  1933  006F  120A  158A  21A4   	fcall	_rotate
              120A  118A         
  1934                           	line	201
  1935                           ;Main.c: 201: break;
  1936  0074  2AB9               	goto	l11549
  1937                           	line	202
  1938                           ;Main.c: 202: case 2:
  1939                           	
  1940  0075                     l2227:	
  1941                           	line	203
  1942                           	
  1943  0075                     l11455:	
  1944                           ;Main.c: 203: TotalDistTravelled = 0;
  1945  0075  1683               	bsf	status, 5	;RP0=1, select bank1
  1946  0076  1303               	bcf	status, 6	;RP1=0, select bank1
  1947  0077  01B4               	clrf	(_TotalDistTravelled)^080h
  1948  0078  01B5               	clrf	(_TotalDistTravelled+1)^080h
  1949                           	line	204
  1950                           	
  1951  0079                     l11457:	
  1952                           ;Main.c: 204: _delay((unsigned long)((100)*(20000000/4000.0)));
  1953                           	opt asmopt_off
  1954  0079  3003               movlw  3
  1955  007A  1283               	bcf	status, 5	;RP0=0, select bank0
  1956  007B  1303               	bcf	status, 6	;RP1=0, select bank0
  1957  007C  00E4               movwf	((??_main+0)+0+2),f
  1958  007D  308A               movlw	138
  1959  007E  00E3               movwf	((??_main+0)+0+1),f
  1960  007F  3056               	movlw	86
  1961  0080  00E2               movwf	((??_main+0)+0),f
  1962  0081                     u5617:
  1963  0081  0BE2               	decfsz	((??_main+0)+0),f
  1964  0082  2881               	goto	u5617
  1965  0083  0BE3               	decfsz	((??_main+0)+0+1),f
  1966  0084  2881               	goto	u5617
  1967  0085  0BE4               	decfsz	((??_main+0)+0+2),f
  1968  0086  2881               	goto	u5617
  1969  0087  2888               	nop2
  1970                           opt asmopt_on
  1971                           
  1972                           	line	205
  1973                           	
  1974  0088                     l11459:	
  1975                           ;Main.c: 205: robotMoveSpeed(2000, 200);
  1976  0088  30D0               	movlw	low(07D0h)
  1977  0089  1283               	bcf	status, 5	;RP0=0, select bank0
  1978  008A  1303               	bcf	status, 6	;RP1=0, select bank0
  1979  008B  00D9               	movwf	(?_robotMoveSpeed)
  1980  008C  3007               	movlw	high(07D0h)
  1981  008D  00DA               	movwf	((?_robotMoveSpeed))+1
  1982  008E  30C8               	movlw	low(0C8h)
  1983  008F  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  1984  0090  3000               	movlw	high(0C8h)
  1985  0091  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  1986  0092  120A  158A  2520   	fcall	_robotMoveSpeed
              120A  118A         
  1987                           	line	206
  1988                           ;Main.c: 206: break;
  1989  0097  2AB9               	goto	l11549
  1990                           	line	207
  1991                           ;Main.c: 207: case 3:
  1992                           	
  1993  0098                     l2228:	
  1994                           	line	208
  1995                           	
  1996  0098                     l11461:	
  1997                           ;Main.c: 208: TotalDistTravelled = 0;
  1998  0098  1683               	bsf	status, 5	;RP0=1, select bank1
  1999  0099  1303               	bcf	status, 6	;RP1=0, select bank1
  2000  009A  01B4               	clrf	(_TotalDistTravelled)^080h
  2001  009B  01B5               	clrf	(_TotalDistTravelled+1)^080h
  2002                           	line	209
  2003                           	
  2004  009C                     l11463:	
  2005                           ;Main.c: 209: _delay((unsigned long)((100)*(20000000/4000.0)));
  2006                           	opt asmopt_off
  2007  009C  3003               movlw  3
  2008  009D  1283               	bcf	status, 5	;RP0=0, select bank0
  2009  009E  1303               	bcf	status, 6	;RP1=0, select bank0
  2010  009F  00E4               movwf	((??_main+0)+0+2),f
  2011  00A0  308A               movlw	138
  2012  00A1  00E3               movwf	((??_main+0)+0+1),f
  2013  00A2  3056               	movlw	86
  2014  00A3  00E2               movwf	((??_main+0)+0),f
  2015  00A4                     u5627:
  2016  00A4  0BE2               	decfsz	((??_main+0)+0),f
  2017  00A5  28A4               	goto	u5627
  2018  00A6  0BE3               	decfsz	((??_main+0)+0+1),f
  2019  00A7  28A4               	goto	u5627
  2020  00A8  0BE4               	decfsz	((??_main+0)+0+2),f
  2021  00A9  28A4               	goto	u5627
  2022  00AA  28AB               	nop2
  2023                           opt asmopt_on
  2024                           
  2025                           	line	210
  2026                           	
  2027  00AB                     l11465:	
  2028                           ;Main.c: 210: robotMoveSpeed(1000, 200);
  2029  00AB  30E8               	movlw	low(03E8h)
  2030  00AC  1283               	bcf	status, 5	;RP0=0, select bank0
  2031  00AD  1303               	bcf	status, 6	;RP1=0, select bank0
  2032  00AE  00D9               	movwf	(?_robotMoveSpeed)
  2033  00AF  3003               	movlw	high(03E8h)
  2034  00B0  00DA               	movwf	((?_robotMoveSpeed))+1
  2035  00B1  30C8               	movlw	low(0C8h)
  2036  00B2  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2037  00B3  3000               	movlw	high(0C8h)
  2038  00B4  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2039  00B5  120A  158A  2520   	fcall	_robotMoveSpeed
              120A  118A         
  2040                           	line	211
  2041                           	
  2042  00BA                     l11467:	
  2043                           ;Main.c: 211: _delay((unsigned long)((100)*(20000000/4000.0)));
  2044                           	opt asmopt_off
  2045  00BA  3003               movlw  3
  2046  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2047  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2048  00BD  00E4               movwf	((??_main+0)+0+2),f
  2049  00BE  308A               movlw	138
  2050  00BF  00E3               movwf	((??_main+0)+0+1),f
  2051  00C0  3056               	movlw	86
  2052  00C1  00E2               movwf	((??_main+0)+0),f
  2053  00C2                     u5637:
  2054  00C2  0BE2               	decfsz	((??_main+0)+0),f
  2055  00C3  28C2               	goto	u5637
  2056  00C4  0BE3               	decfsz	((??_main+0)+0+1),f
  2057  00C5  28C2               	goto	u5637
  2058  00C6  0BE4               	decfsz	((??_main+0)+0+2),f
  2059  00C7  28C2               	goto	u5637
  2060  00C8  28C9               	nop2
  2061                           opt asmopt_on
  2062                           
  2063                           	line	212
  2064                           	
  2065  00C9                     l11469:	
  2066                           ;Main.c: 212: robotTurn(-90);
  2067  00C9  30A6               	movlw	low(-90)
  2068  00CA  1283               	bcf	status, 5	;RP0=0, select bank0
  2069  00CB  1303               	bcf	status, 6	;RP1=0, select bank0
  2070  00CC  00A2               	movwf	(?_robotTurn)
  2071  00CD  30FF               	movlw	high(-90)
  2072  00CE  00A3               	movwf	((?_robotTurn))+1
  2073  00CF  120A  158A  2400   	fcall	_robotTurn
              120A  118A         
  2074                           	line	213
  2075                           	
  2076  00D4                     l11471:	
  2077                           ;Main.c: 213: _delay((unsigned long)((100)*(20000000/4000.0)));
  2078                           	opt asmopt_off
  2079  00D4  3003               movlw  3
  2080  00D5  1283               	bcf	status, 5	;RP0=0, select bank0
  2081  00D6  1303               	bcf	status, 6	;RP1=0, select bank0
  2082  00D7  00E4               movwf	((??_main+0)+0+2),f
  2083  00D8  308A               movlw	138
  2084  00D9  00E3               movwf	((??_main+0)+0+1),f
  2085  00DA  3056               	movlw	86
  2086  00DB  00E2               movwf	((??_main+0)+0),f
  2087  00DC                     u5647:
  2088  00DC  0BE2               	decfsz	((??_main+0)+0),f
  2089  00DD  28DC               	goto	u5647
  2090  00DE  0BE3               	decfsz	((??_main+0)+0+1),f
  2091  00DF  28DC               	goto	u5647
  2092  00E0  0BE4               	decfsz	((??_main+0)+0+2),f
  2093  00E1  28DC               	goto	u5647
  2094  00E2  28E3               	nop2
  2095                           opt asmopt_on
  2096                           
  2097                           	line	214
  2098                           	
  2099  00E3                     l11473:	
  2100                           ;Main.c: 214: robotMoveSpeed(1000, 200);
  2101  00E3  30E8               	movlw	low(03E8h)
  2102  00E4  1283               	bcf	status, 5	;RP0=0, select bank0
  2103  00E5  1303               	bcf	status, 6	;RP1=0, select bank0
  2104  00E6  00D9               	movwf	(?_robotMoveSpeed)
  2105  00E7  3003               	movlw	high(03E8h)
  2106  00E8  00DA               	movwf	((?_robotMoveSpeed))+1
  2107  00E9  30C8               	movlw	low(0C8h)
  2108  00EA  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2109  00EB  3000               	movlw	high(0C8h)
  2110  00EC  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2111  00ED  120A  158A  2520   	fcall	_robotMoveSpeed
              120A  118A         
  2112                           	line	215
  2113                           ;Main.c: 215: break;
  2114  00F2  2AB9               	goto	l11549
  2115                           	line	216
  2116                           ;Main.c: 216: case 4:
  2117                           	
  2118  00F3                     l2229:	
  2119                           	line	217
  2120                           	
  2121  00F3                     l11475:	
  2122                           ;Main.c: 217: TotalDistTravelled = 0;
  2123  00F3  1683               	bsf	status, 5	;RP0=1, select bank1
  2124  00F4  1303               	bcf	status, 6	;RP1=0, select bank1
  2125  00F5  01B4               	clrf	(_TotalDistTravelled)^080h
  2126  00F6  01B5               	clrf	(_TotalDistTravelled+1)^080h
  2127                           	line	218
  2128                           ;Main.c: 218: while(!ROBOTerror)
  2129  00F7  2A93               	goto	l11541
  2130                           	
  2131  00F8                     l2231:	
  2132                           	line	220
  2133                           	
  2134  00F8                     l11477:	
  2135                           ;Main.c: 219: {
  2136                           ;Main.c: 220: int shortwall = scan360();
  2137  00F8  120A  118A  2786   	fcall	_scan360
              120A  118A         
  2138  00FD  1283               	bcf	status, 5	;RP0=0, select bank0
  2139  00FE  1303               	bcf	status, 6	;RP1=0, select bank0
  2140  00FF  085A               	movf	(1+(?_scan360)),w
  2141  0100  01ED               	clrf	(main@shortwall_3011+1)
  2142  0101  07ED               	addwf	(main@shortwall_3011+1)
  2143  0102  0859               	movf	(0+(?_scan360)),w
  2144  0103  01EC               	clrf	(main@shortwall_3011)
  2145  0104  07EC               	addwf	(main@shortwall_3011)
  2146                           
  2147                           	line	221
  2148                           	
  2149  0105                     l11479:	
  2150                           ;Main.c: 221: int RT2P = 0;
  2151  0105  01EE               	clrf	(main@RT2P)
  2152  0106  01EF               	clrf	(main@RT2P+1)
  2153                           	line	222
  2154                           	
  2155  0107                     l11481:	
  2156                           ;Main.c: 222: int direction1 = 0;
  2157  0107  01E5               	clrf	(main@direction1)
  2158  0108  01E6               	clrf	(main@direction1+1)
  2159                           	line	223
  2160                           	
  2161  0109                     l11483:	
  2162                           ;Main.c: 223: if (shortwall > 200)
  2163  0109  086D               	movf	(main@shortwall_3011+1),w
  2164  010A  3A80               	xorlw	80h
  2165  010B  00FF               	movwf	btemp+1
  2166  010C  3080               	movlw	(high(0C9h))^80h
  2167  010D  027F               	subwf	btemp+1,w
  2168  010E  1D03               	skipz
  2169  010F  2912               	goto	u5485
  2170  0110  30C9               	movlw	low(0C9h)
  2171  0111  026C               	subwf	(main@shortwall_3011),w
  2172  0112                     u5485:
  2173                           
  2174  0112  1C03               	skipc
  2175  0113  2915               	goto	u5481
  2176  0114  2916               	goto	u5480
  2177  0115                     u5481:
  2178  0115  2921               	goto	l11487
  2179  0116                     u5480:
  2180                           	line	224
  2181                           	
  2182  0116                     l11485:	
  2183                           ;Main.c: 224: RT2P = shortwall + 100;
  2184  0116  1283               	bcf	status, 5	;RP0=0, select bank0
  2185  0117  1303               	bcf	status, 6	;RP1=0, select bank0
  2186  0118  086C               	movf	(main@shortwall_3011),w
  2187  0119  3E64               	addlw	low(064h)
  2188  011A  00EE               	movwf	(main@RT2P)
  2189  011B  086D               	movf	(main@shortwall_3011+1),w
  2190  011C  1803               	skipnc
  2191  011D  3E01               	addlw	1
  2192  011E  3E00               	addlw	high(064h)
  2193  011F  00EF               	movwf	1+(main@RT2P)
  2194  0120  2921               	goto	l11487
  2195                           	
  2196  0121                     l2232:	
  2197                           	line	225
  2198                           	
  2199  0121                     l11487:	
  2200                           ;Main.c: 225: if (shortwall < 200)
  2201  0121  1283               	bcf	status, 5	;RP0=0, select bank0
  2202  0122  1303               	bcf	status, 6	;RP1=0, select bank0
  2203  0123  086D               	movf	(main@shortwall_3011+1),w
  2204  0124  3A80               	xorlw	80h
  2205  0125  00FF               	movwf	btemp+1
  2206  0126  3080               	movlw	(high(0C8h))^80h
  2207  0127  027F               	subwf	btemp+1,w
  2208  0128  1D03               	skipz
  2209  0129  292C               	goto	u5495
  2210  012A  30C8               	movlw	low(0C8h)
  2211  012B  026C               	subwf	(main@shortwall_3011),w
  2212  012C                     u5495:
  2213                           
  2214  012C  1803               	skipnc
  2215  012D  292F               	goto	u5491
  2216  012E  2930               	goto	u5490
  2217  012F                     u5491:
  2218  012F  293B               	goto	l11491
  2219  0130                     u5490:
  2220                           	line	226
  2221                           	
  2222  0130                     l11489:	
  2223                           ;Main.c: 226: RT2P = shortwall - 100;
  2224  0130  1283               	bcf	status, 5	;RP0=0, select bank0
  2225  0131  1303               	bcf	status, 6	;RP1=0, select bank0
  2226  0132  086C               	movf	(main@shortwall_3011),w
  2227  0133  3E9C               	addlw	low(-100)
  2228  0134  00EE               	movwf	(main@RT2P)
  2229  0135  086D               	movf	(main@shortwall_3011+1),w
  2230  0136  1803               	skipnc
  2231  0137  3E01               	addlw	1
  2232  0138  3EFF               	addlw	high(-100)
  2233  0139  00EF               	movwf	1+(main@RT2P)
  2234  013A  293B               	goto	l11491
  2235                           	
  2236  013B                     l2233:	
  2237                           	line	228
  2238                           	
  2239  013B                     l11491:	
  2240                           ;Main.c: 228: if (RT2P >= 400 && RT2P < 500 )
  2241  013B  1283               	bcf	status, 5	;RP0=0, select bank0
  2242  013C  1303               	bcf	status, 6	;RP1=0, select bank0
  2243  013D  086F               	movf	(main@RT2P+1),w
  2244  013E  3A80               	xorlw	80h
  2245  013F  00FF               	movwf	btemp+1
  2246  0140  3081               	movlw	(high(0190h))^80h
  2247  0141  027F               	subwf	btemp+1,w
  2248  0142  1D03               	skipz
  2249  0143  2946               	goto	u5505
  2250  0144  3090               	movlw	low(0190h)
  2251  0145  026E               	subwf	(main@RT2P),w
  2252  0146                     u5505:
  2253                           
  2254  0146  1C03               	skipc
  2255  0147  2949               	goto	u5501
  2256  0148  294A               	goto	u5500
  2257  0149                     u5501:
  2258  0149  2968               	goto	l11499
  2259  014A                     u5500:
  2260                           	
  2261  014A                     l11493:	
  2262  014A  1283               	bcf	status, 5	;RP0=0, select bank0
  2263  014B  1303               	bcf	status, 6	;RP1=0, select bank0
  2264  014C  086F               	movf	(main@RT2P+1),w
  2265  014D  3A80               	xorlw	80h
  2266  014E  00FF               	movwf	btemp+1
  2267  014F  3081               	movlw	(high(01F4h))^80h
  2268  0150  027F               	subwf	btemp+1,w
  2269  0151  1D03               	skipz
  2270  0152  2955               	goto	u5515
  2271  0153  30F4               	movlw	low(01F4h)
  2272  0154  026E               	subwf	(main@RT2P),w
  2273  0155                     u5515:
  2274                           
  2275  0155  1803               	skipnc
  2276  0156  2958               	goto	u5511
  2277  0157  2959               	goto	u5510
  2278  0158                     u5511:
  2279  0158  2968               	goto	l11499
  2280  0159                     u5510:
  2281                           	line	230
  2282                           	
  2283  0159                     l11495:	
  2284                           ;Main.c: 229: {
  2285                           ;Main.c: 230: RT2P = RT2P - 400;
  2286  0159  1283               	bcf	status, 5	;RP0=0, select bank0
  2287  015A  1303               	bcf	status, 6	;RP1=0, select bank0
  2288  015B  086E               	movf	(main@RT2P),w
  2289  015C  3E70               	addlw	low(-400)
  2290  015D  00EE               	movwf	(main@RT2P)
  2291  015E  086F               	movf	(main@RT2P+1),w
  2292  015F  1803               	skipnc
  2293  0160  3E01               	addlw	1
  2294  0161  3EFE               	addlw	high(-400)
  2295  0162  00EF               	movwf	1+(main@RT2P)
  2296                           	line	231
  2297                           	
  2298  0163                     l11497:	
  2299                           ;Main.c: 231: direction1 = 1;
  2300  0163  3001               	movlw	low(01h)
  2301  0164  00E5               	movwf	(main@direction1)
  2302  0165  3000               	movlw	high(01h)
  2303  0166  00E6               	movwf	((main@direction1))+1
  2304  0167  2968               	goto	l11499
  2305                           	line	232
  2306                           	
  2307  0168                     l2234:	
  2308                           	line	233
  2309                           	
  2310  0168                     l11499:	
  2311                           ;Main.c: 232: }
  2312                           ;Main.c: 233: if (RT2P >= 200 && RT2P < 400)
  2313  0168  1283               	bcf	status, 5	;RP0=0, select bank0
  2314  0169  1303               	bcf	status, 6	;RP1=0, select bank0
  2315  016A  086F               	movf	(main@RT2P+1),w
  2316  016B  3A80               	xorlw	80h
  2317  016C  00FF               	movwf	btemp+1
  2318  016D  3080               	movlw	(high(0C8h))^80h
  2319  016E  027F               	subwf	btemp+1,w
  2320  016F  1D03               	skipz
  2321  0170  2973               	goto	u5525
  2322  0171  30C8               	movlw	low(0C8h)
  2323  0172  026E               	subwf	(main@RT2P),w
  2324  0173                     u5525:
  2325                           
  2326  0173  1C03               	skipc
  2327  0174  2976               	goto	u5521
  2328  0175  2977               	goto	u5520
  2329  0176                     u5521:
  2330  0176  299F               	goto	l11509
  2331  0177                     u5520:
  2332                           	
  2333  0177                     l11501:	
  2334  0177  1283               	bcf	status, 5	;RP0=0, select bank0
  2335  0178  1303               	bcf	status, 6	;RP1=0, select bank0
  2336  0179  086F               	movf	(main@RT2P+1),w
  2337  017A  3A80               	xorlw	80h
  2338  017B  00FF               	movwf	btemp+1
  2339  017C  3081               	movlw	(high(0190h))^80h
  2340  017D  027F               	subwf	btemp+1,w
  2341  017E  1D03               	skipz
  2342  017F  2982               	goto	u5535
  2343  0180  3090               	movlw	low(0190h)
  2344  0181  026E               	subwf	(main@RT2P),w
  2345  0182                     u5535:
  2346                           
  2347  0182  1803               	skipnc
  2348  0183  2985               	goto	u5531
  2349  0184  2986               	goto	u5530
  2350  0185                     u5531:
  2351  0185  299F               	goto	l11509
  2352  0186                     u5530:
  2353                           	line	235
  2354                           	
  2355  0186                     l11503:	
  2356                           ;Main.c: 234: {
  2357                           ;Main.c: 235: RT2P = 400 - RT2P;
  2358  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  2359  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  2360  0188  096E               	comf	(main@RT2P),w
  2361  0189  00E2               	movwf	(??_main+0)+0
  2362  018A  096F               	comf	(main@RT2P+1),w
  2363  018B  00E3               	movwf	((??_main+0)+0+1)
  2364  018C  0AE2               	incf	(??_main+0)+0,f
  2365  018D  1903               	skipnz
  2366  018E  0AE3               	incf	((??_main+0)+0+1),f
  2367  018F  0862               	movf	0+(??_main+0)+0,w
  2368  0190  3E90               	addlw	low(0190h)
  2369  0191  00EE               	movwf	(main@RT2P)
  2370  0192  0863               	movf	1+(??_main+0)+0,w
  2371  0193  1803               	skipnc
  2372  0194  3E01               	addlw	1
  2373  0195  3E01               	addlw	high(0190h)
  2374  0196  00EF               	movwf	1+(main@RT2P)
  2375                           	line	236
  2376                           	
  2377  0197                     l11505:	
  2378                           ;Main.c: 236: RT2P = RT2P * -1;
  2379  0197  09EE               	comf	(main@RT2P),f
  2380  0198  09EF               	comf	(main@RT2P+1),f
  2381  0199  0AEE               	incf	(main@RT2P),f
  2382  019A  1903               	skipnz
  2383  019B  0AEF               	incf	(main@RT2P+1),f
  2384                           	line	237
  2385                           	
  2386  019C                     l11507:	
  2387                           ;Main.c: 237: direction1 = 0;
  2388  019C  01E5               	clrf	(main@direction1)
  2389  019D  01E6               	clrf	(main@direction1+1)
  2390  019E  299F               	goto	l11509
  2391                           	line	238
  2392                           	
  2393  019F                     l2235:	
  2394                           	line	239
  2395                           	
  2396  019F                     l11509:	
  2397                           ;Main.c: 238: }
  2398                           ;Main.c: 239: if (RT2P < 200 && RT2P >= 0)
  2399  019F  1283               	bcf	status, 5	;RP0=0, select bank0
  2400  01A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2401  01A1  086F               	movf	(main@RT2P+1),w
  2402  01A2  3A80               	xorlw	80h
  2403  01A3  00FF               	movwf	btemp+1
  2404  01A4  3080               	movlw	(high(0C8h))^80h
  2405  01A5  027F               	subwf	btemp+1,w
  2406  01A6  1D03               	skipz
  2407  01A7  29AA               	goto	u5545
  2408  01A8  30C8               	movlw	low(0C8h)
  2409  01A9  026E               	subwf	(main@RT2P),w
  2410  01AA                     u5545:
  2411                           
  2412  01AA  1803               	skipnc
  2413  01AB  29AD               	goto	u5541
  2414  01AC  29AE               	goto	u5540
  2415  01AD                     u5541:
  2416  01AD  29B9               	goto	l11515
  2417  01AE                     u5540:
  2418                           	
  2419  01AE                     l11511:	
  2420  01AE  1283               	bcf	status, 5	;RP0=0, select bank0
  2421  01AF  1303               	bcf	status, 6	;RP1=0, select bank0
  2422  01B0  1BEF               	btfsc	(main@RT2P+1),7
  2423  01B1  29B3               	goto	u5551
  2424  01B2  29B4               	goto	u5550
  2425  01B3                     u5551:
  2426  01B3  29B9               	goto	l11515
  2427  01B4                     u5550:
  2428                           	line	241
  2429                           	
  2430  01B4                     l11513:	
  2431                           ;Main.c: 240: {
  2432                           ;Main.c: 241: direction1 = 1;
  2433  01B4  3001               	movlw	low(01h)
  2434  01B5  00E5               	movwf	(main@direction1)
  2435  01B6  3000               	movlw	high(01h)
  2436  01B7  00E6               	movwf	((main@direction1))+1
  2437  01B8  29B9               	goto	l11515
  2438                           	line	242
  2439                           	
  2440  01B9                     l2236:	
  2441                           	line	243
  2442                           	
  2443  01B9                     l11515:	
  2444                           ;Main.c: 242: }
  2445                           ;Main.c: 243: if (RT2P < 0 && RT2P >= -200)
  2446  01B9  1283               	bcf	status, 5	;RP0=0, select bank0
  2447  01BA  1303               	bcf	status, 6	;RP1=0, select bank0
  2448  01BB  1FEF               	btfss	(main@RT2P+1),7
  2449  01BC  29BE               	goto	u5561
  2450  01BD  29BF               	goto	u5560
  2451  01BE                     u5561:
  2452  01BE  29D1               	goto	l11521
  2453  01BF                     u5560:
  2454                           	
  2455  01BF                     l11517:	
  2456  01BF  086F               	movf	(main@RT2P+1),w
  2457  01C0  3A80               	xorlw	80h
  2458  01C1  00FF               	movwf	btemp+1
  2459  01C2  307F               	movlw	(high(-200))^80h
  2460  01C3  027F               	subwf	btemp+1,w
  2461  01C4  1D03               	skipz
  2462  01C5  29C8               	goto	u5575
  2463  01C6  3038               	movlw	low(-200)
  2464  01C7  026E               	subwf	(main@RT2P),w
  2465  01C8                     u5575:
  2466                           
  2467  01C8  1C03               	skipc
  2468  01C9  29CB               	goto	u5571
  2469  01CA  29CC               	goto	u5570
  2470  01CB                     u5571:
  2471  01CB  29D1               	goto	l11521
  2472  01CC                     u5570:
  2473                           	line	245
  2474                           	
  2475  01CC                     l11519:	
  2476                           ;Main.c: 244: {
  2477                           ;Main.c: 245: direction1 = 0;
  2478  01CC  1283               	bcf	status, 5	;RP0=0, select bank0
  2479  01CD  1303               	bcf	status, 6	;RP1=0, select bank0
  2480  01CE  01E5               	clrf	(main@direction1)
  2481  01CF  01E6               	clrf	(main@direction1+1)
  2482  01D0  29D1               	goto	l11521
  2483                           	line	246
  2484                           	
  2485  01D1                     l2237:	
  2486                           	line	247
  2487                           	
  2488  01D1                     l11521:	
  2489                           ;Main.c: 246: }
  2490                           ;Main.c: 247: if(RT2P < -200 || RT2P >500)
  2491  01D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2492  01D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2493  01D3  086F               	movf	(main@RT2P+1),w
  2494  01D4  3A80               	xorlw	80h
  2495  01D5  00FF               	movwf	btemp+1
  2496  01D6  307F               	movlw	(high(-200))^80h
  2497  01D7  027F               	subwf	btemp+1,w
  2498  01D8  1D03               	skipz
  2499  01D9  29DC               	goto	u5585
  2500  01DA  3038               	movlw	low(-200)
  2501  01DB  026E               	subwf	(main@RT2P),w
  2502  01DC                     u5585:
  2503                           
  2504  01DC  1C03               	skipc
  2505  01DD  29DF               	goto	u5581
  2506  01DE  29E0               	goto	u5580
  2507  01DF                     u5581:
  2508  01DF  2AB9               	goto	l11549
  2509  01E0                     u5580:
  2510                           	
  2511  01E0                     l11523:	
  2512  01E0  1283               	bcf	status, 5	;RP0=0, select bank0
  2513  01E1  1303               	bcf	status, 6	;RP1=0, select bank0
  2514  01E2  086F               	movf	(main@RT2P+1),w
  2515  01E3  3A80               	xorlw	80h
  2516  01E4  00FF               	movwf	btemp+1
  2517  01E5  3081               	movlw	(high(01F5h))^80h
  2518  01E6  027F               	subwf	btemp+1,w
  2519  01E7  1D03               	skipz
  2520  01E8  29EB               	goto	u5595
  2521  01E9  30F5               	movlw	low(01F5h)
  2522  01EA  026E               	subwf	(main@RT2P),w
  2523  01EB                     u5595:
  2524                           
  2525  01EB  1C03               	skipc
  2526  01EC  29EE               	goto	u5591
  2527  01ED  29EF               	goto	u5590
  2528  01EE                     u5591:
  2529  01EE  29F1               	goto	l11525
  2530  01EF                     u5590:
  2531  01EF  2AB9               	goto	l11549
  2532                           	
  2533  01F0                     l2240:	
  2534                           	line	249
  2535                           ;Main.c: 248: {
  2536                           ;Main.c: 249: break;
  2537  01F0  2AB9               	goto	l11549
  2538                           	line	250
  2539                           	
  2540  01F1                     l2238:	
  2541                           	line	252
  2542                           	
  2543  01F1                     l11525:	
  2544                           ;Main.c: 250: }
  2545                           ;Main.c: 252: rotate((400 - shortwall ), 0);
  2546  01F1  1283               	bcf	status, 5	;RP0=0, select bank0
  2547  01F2  1303               	bcf	status, 6	;RP1=0, select bank0
  2548  01F3  096C               	comf	(main@shortwall_3011),w
  2549  01F4  00E2               	movwf	(??_main+0)+0
  2550  01F5  096D               	comf	(main@shortwall_3011+1),w
  2551  01F6  00E3               	movwf	((??_main+0)+0+1)
  2552  01F7  0AE2               	incf	(??_main+0)+0,f
  2553  01F8  1903               	skipnz
  2554  01F9  0AE3               	incf	((??_main+0)+0+1),f
  2555  01FA  0862               	movf	0+(??_main+0)+0,w
  2556  01FB  3E90               	addlw	low(0190h)
  2557  01FC  00A3               	movwf	(?_rotate)
  2558  01FD  0863               	movf	1+(??_main+0)+0,w
  2559  01FE  1803               	skipnc
  2560  01FF  3E01               	addlw	1
  2561  0200  3E01               	addlw	high(0190h)
  2562  0201  00A4               	movwf	1+(?_rotate)
  2563  0202  01A5               	clrf	0+(?_rotate)+02h
  2564  0203  120A  158A  21A4   	fcall	_rotate
              120A  118A         
  2565                           	line	253
  2566                           	
  2567  0208                     l11527:	
  2568                           ;Main.c: 253: _delay((unsigned long)((100)*(20000000/4000.0)));
  2569                           	opt asmopt_off
  2570  0208  3003               movlw  3
  2571  0209  1283               	bcf	status, 5	;RP0=0, select bank0
  2572  020A  1303               	bcf	status, 6	;RP1=0, select bank0
  2573  020B  00E4               movwf	((??_main+0)+0+2),f
  2574  020C  308A               movlw	138
  2575  020D  00E3               movwf	((??_main+0)+0+1),f
  2576  020E  3056               	movlw	86
  2577  020F  00E2               movwf	((??_main+0)+0),f
  2578  0210                     u5657:
  2579  0210  0BE2               	decfsz	((??_main+0)+0),f
  2580  0211  2A10               	goto	u5657
  2581  0212  0BE3               	decfsz	((??_main+0)+0+1),f
  2582  0213  2A10               	goto	u5657
  2583  0214  0BE4               	decfsz	((??_main+0)+0+2),f
  2584  0215  2A10               	goto	u5657
  2585  0216  2A17               	nop2
  2586                           opt asmopt_on
  2587                           
  2588                           	line	256
  2589                           	
  2590  0217                     l11529:	
  2591                           ;Main.c: 256: int RT2A= RT2P * (36.0/40.0);
  2592  0217  1283               	bcf	status, 5	;RP0=0, select bank0
  2593  0218  1303               	bcf	status, 6	;RP1=0, select bank0
  2594  0219  086F               	movf	(main@RT2P+1),w
  2595  021A  01B7               	clrf	(?___awtoft+1)
  2596  021B  07B7               	addwf	(?___awtoft+1)
  2597  021C  086E               	movf	(main@RT2P),w
  2598  021D  01B6               	clrf	(?___awtoft)
  2599  021E  07B6               	addwf	(?___awtoft)
  2600                           
  2601  021F  160A  118A  25F5   	fcall	___awtoft
              120A  118A         
  2602  0224  1283               	bcf	status, 5	;RP0=0, select bank0
  2603  0225  1303               	bcf	status, 6	;RP1=0, select bank0
  2604  0226  0836               	movf	(0+(?___awtoft)),w
  2605  0227  00BF               	movwf	0+(?___ftmul)+03h
  2606  0228  0837               	movf	(1+(?___awtoft)),w
  2607  0229  00C0               	movwf	1+(?___ftmul)+03h
  2608  022A  0838               	movf	(2+(?___awtoft)),w
  2609  022B  00C1               	movwf	2+(?___ftmul)+03h
  2610  022C  3066               	movlw	0x66
  2611  022D  00BC               	movwf	(?___ftmul)
  2612  022E  3066               	movlw	0x66
  2613  022F  00BD               	movwf	(?___ftmul+1)
  2614  0230  303F               	movlw	0x3f
  2615  0231  00BE               	movwf	(?___ftmul+2)
  2616  0232  120A  158A  2712   	fcall	___ftmul
              120A  118A         
  2617  0237  1283               	bcf	status, 5	;RP0=0, select bank0
  2618  0238  1303               	bcf	status, 6	;RP1=0, select bank0
  2619  0239  083C               	movf	(0+(?___ftmul)),w
  2620  023A  00A8               	movwf	(?___fttol)
  2621  023B  083D               	movf	(1+(?___ftmul)),w
  2622  023C  00A9               	movwf	(?___fttol+1)
  2623  023D  083E               	movf	(2+(?___ftmul)),w
  2624  023E  00AA               	movwf	(?___fttol+2)
  2625  023F  120A  158A  25C5   	fcall	___fttol
              120A  118A         
  2626  0244  1283               	bcf	status, 5	;RP0=0, select bank0
  2627  0245  1303               	bcf	status, 6	;RP1=0, select bank0
  2628  0246  0829               	movf	1+(((0+(?___fttol)))),w
  2629  0247  01E8               	clrf	(main@RT2A+1)
  2630  0248  07E8               	addwf	(main@RT2A+1)
  2631  0249  0828               	movf	0+(((0+(?___fttol)))),w
  2632  024A  01E7               	clrf	(main@RT2A)
  2633  024B  07E7               	addwf	(main@RT2A)
  2634                           
  2635                           	line	257
  2636                           	
  2637  024C                     l11531:	
  2638                           ;Main.c: 257: robotTurn(RT2A);
  2639  024C  0868               	movf	(main@RT2A+1),w
  2640  024D  01A3               	clrf	(?_robotTurn+1)
  2641  024E  07A3               	addwf	(?_robotTurn+1)
  2642  024F  0867               	movf	(main@RT2A),w
  2643  0250  01A2               	clrf	(?_robotTurn)
  2644  0251  07A2               	addwf	(?_robotTurn)
  2645                           
  2646  0252  120A  158A  2400   	fcall	_robotTurn
              120A  118A         
  2647                           	line	258
  2648                           	
  2649  0257                     l11533:	
  2650                           ;Main.c: 258: _delay((unsigned long)((100)*(20000000/4000.0)));
  2651                           	opt asmopt_off
  2652  0257  3003               movlw  3
  2653  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  2654  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  2655  025A  00E4               movwf	((??_main+0)+0+2),f
  2656  025B  308A               movlw	138
  2657  025C  00E3               movwf	((??_main+0)+0+1),f
  2658  025D  3056               	movlw	86
  2659  025E  00E2               movwf	((??_main+0)+0),f
  2660  025F                     u5667:
  2661  025F  0BE2               	decfsz	((??_main+0)+0),f
  2662  0260  2A5F               	goto	u5667
  2663  0261  0BE3               	decfsz	((??_main+0)+0+1),f
  2664  0262  2A5F               	goto	u5667
  2665  0263  0BE4               	decfsz	((??_main+0)+0+2),f
  2666  0264  2A5F               	goto	u5667
  2667  0265  2A66               	nop2
  2668                           opt asmopt_on
  2669                           
  2670                           	line	259
  2671                           	
  2672  0266                     l11535:	
  2673                           ;Main.c: 259: rotate(shortwall,0);
  2674  0266  1283               	bcf	status, 5	;RP0=0, select bank0
  2675  0267  1303               	bcf	status, 6	;RP1=0, select bank0
  2676  0268  086D               	movf	(main@shortwall_3011+1),w
  2677  0269  01A4               	clrf	(?_rotate+1)
  2678  026A  07A4               	addwf	(?_rotate+1)
  2679  026B  086C               	movf	(main@shortwall_3011),w
  2680  026C  01A3               	clrf	(?_rotate)
  2681  026D  07A3               	addwf	(?_rotate)
  2682                           
  2683  026E  01A5               	clrf	0+(?_rotate)+02h
  2684  026F  120A  158A  21A4   	fcall	_rotate
              120A  118A         
  2685                           	line	260
  2686                           	
  2687  0274                     l11537:	
  2688                           ;Main.c: 260: _delay((unsigned long)((100)*(20000000/4000.0)));
  2689                           	opt asmopt_off
  2690  0274  3003               movlw  3
  2691  0275  1283               	bcf	status, 5	;RP0=0, select bank0
  2692  0276  1303               	bcf	status, 6	;RP1=0, select bank0
  2693  0277  00E4               movwf	((??_main+0)+0+2),f
  2694  0278  308A               movlw	138
  2695  0279  00E3               movwf	((??_main+0)+0+1),f
  2696  027A  3056               	movlw	86
  2697  027B  00E2               movwf	((??_main+0)+0),f
  2698  027C                     u5677:
  2699  027C  0BE2               	decfsz	((??_main+0)+0),f
  2700  027D  2A7C               	goto	u5677
  2701  027E  0BE3               	decfsz	((??_main+0)+0+1),f
  2702  027F  2A7C               	goto	u5677
  2703  0280  0BE4               	decfsz	((??_main+0)+0+2),f
  2704  0281  2A7C               	goto	u5677
  2705  0282  2A83               	nop2
  2706                           opt asmopt_on
  2707                           
  2708                           	line	261
  2709                           	
  2710  0283                     l11539:	
  2711                           ;Main.c: 261: robotMoveSpeed(500, 200);
  2712  0283  30F4               	movlw	low(01F4h)
  2713  0284  1283               	bcf	status, 5	;RP0=0, select bank0
  2714  0285  1303               	bcf	status, 6	;RP1=0, select bank0
  2715  0286  00D9               	movwf	(?_robotMoveSpeed)
  2716  0287  3001               	movlw	high(01F4h)
  2717  0288  00DA               	movwf	((?_robotMoveSpeed))+1
  2718  0289  30C8               	movlw	low(0C8h)
  2719  028A  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2720  028B  3000               	movlw	high(0C8h)
  2721  028C  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2722  028D  120A  158A  2520   	fcall	_robotMoveSpeed
              120A  118A         
  2723  0292  2A93               	goto	l11541
  2724                           	line	262
  2725                           	
  2726  0293                     l2230:	
  2727                           	line	218
  2728                           	
  2729  0293                     l11541:	
  2730  0293  1683               	bsf	status, 5	;RP0=1, select bank1
  2731  0294  1303               	bcf	status, 6	;RP1=0, select bank1
  2732  0295  084A               	movf	(_ROBOTerror)^080h,w
  2733  0296  1D03               	skipz
  2734  0297  2A99               	goto	u5600
  2735  0298  28F8               	goto	l11477
  2736  0299                     u5600:
  2737  0299  2AB9               	goto	l11549
  2738                           	
  2739  029A                     l2241:	
  2740                           	line	264
  2741                           ;Main.c: 262: }
  2742                           ;Main.c: 264: break;
  2743  029A  2AB9               	goto	l11549
  2744                           	line	266
  2745                           ;Main.c: 266: case 5:
  2746                           	
  2747  029B                     l2242:	
  2748                           	line	267
  2749                           	
  2750  029B                     l11543:	
  2751                           ;Main.c: 267: ChargeMode();
  2752  029B  120A  158A  20C7   	fcall	_ChargeMode
              120A  118A         
  2753                           	line	268
  2754                           ;Main.c: 268: break;
  2755  02A0  2AB9               	goto	l11549
  2756                           	line	269
  2757                           ;Main.c: 269: default:
  2758                           	
  2759  02A1                     l2243:	
  2760                           	line	271
  2761                           ;Main.c: 271: break;
  2762  02A1  2AB9               	goto	l11549
  2763                           	line	272
  2764                           	
  2765  02A2                     l11545:	
  2766                           ;Main.c: 272: }
  2767  02A2  2AB9               	goto	l11549
  2768                           	line	193
  2769                           	
  2770  02A3                     l2223:	
  2771                           	
  2772  02A3                     l11547:	
  2773  02A3  1283               	bcf	status, 5	;RP0=0, select bank0
  2774  02A4  1303               	bcf	status, 6	;RP1=0, select bank0
  2775  02A5  086B               	movf	(main@choice),w
  2776                           	; Switch size 1, requested type "space"
  2777                           ; Number of cases is 6, Range of values is 0 to 5
  2778                           ; switch strategies available:
  2779                           ; Name         Instructions Cycles
  2780                           ; simple_byte           19    10 (average)
  2781                           ; direct_byte           26     8 (fixed)
  2782                           ; jumptable            260     6 (fixed)
  2783                           ; rangetable            10     6 (fixed)
  2784                           ; spacedrange           18     9 (fixed)
  2785                           ; locatedrange           6     3 (fixed)
  2786                           ;	Chosen strategy is simple_byte
  2787                           
  2788                           	opt asmopt_off
  2789  02A6  3A00               	xorlw	0^0	; case 0
  2790  02A7  1903               	skipnz
  2791  02A8  284A               	goto	l11449
  2792  02A9  3A01               	xorlw	1^0	; case 1
  2793  02AA  1903               	skipnz
  2794  02AB  2850               	goto	l11451
  2795  02AC  3A03               	xorlw	2^1	; case 2
  2796  02AD  1903               	skipnz
  2797  02AE  2875               	goto	l11455
  2798  02AF  3A01               	xorlw	3^2	; case 3
  2799  02B0  1903               	skipnz
  2800  02B1  2898               	goto	l11461
  2801  02B2  3A07               	xorlw	4^3	; case 4
  2802  02B3  1903               	skipnz
  2803  02B4  28F3               	goto	l11475
  2804  02B5  3A01               	xorlw	5^4	; case 5
  2805  02B6  1903               	skipnz
  2806  02B7  2A9B               	goto	l11543
  2807  02B8  2AB9               	goto	l11549
  2808                           	opt asmopt_on
  2809                           
  2810                           	line	272
  2811                           	
  2812  02B9                     l2225:	
  2813                           	line	273
  2814                           	
  2815  02B9                     l11549:	
  2816                           ;Main.c: 273: choice = 255;
  2817  02B9  30FF               	movlw	(0FFh)
  2818  02BA  1283               	bcf	status, 5	;RP0=0, select bank0
  2819  02BB  1303               	bcf	status, 6	;RP1=0, select bank0
  2820  02BC  00E2               	movwf	(??_main+0)+0
  2821  02BD  0862               	movf	(??_main+0)+0,w
  2822  02BE  00EB               	movwf	(main@choice)
  2823  02BF  2823               	goto	l11433
  2824                           	line	274
  2825                           	
  2826  02C0                     l2244:	
  2827                           	line	175
  2828  02C0  2823               	goto	l11433
  2829                           	
  2830  02C1                     l2245:	
  2831                           	line	275
  2832                           	
  2833  02C1                     l2246:	
  2834                           	global	start
  2835  02C1  120A  118A  2812   	ljmp	start
  2836                           	opt stack 0
  2837                           GLOBAL	__end_of_main
  2838  02C4                     	__end_of_main:
  2839 ;; =============== function _main ends ============
  2840                           
  2841                           	signat	_main,88
  2842                           	global	_ChargeMode
  2843                           psect	text1051,local,class=CODE,delta=2
  2844                           global __ptext1051
  2845  08C7                     __ptext1051:
  2846                           
  2847 ;; *************** function _ChargeMode *****************
  2848 ;; Defined at:
  2849 ;;		line 321 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;		None               void
  2856 ;; Registers used:
  2857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2863 ;;      Params:         0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0
  2865 ;;      Temps:          0       1       0       0       0
  2866 ;;      Totals:         0       1       0       0       0
  2867 ;;Total ram usage:        1 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    6
  2870 ;; This function calls:
  2871 ;;		_ser_putch
  2872 ;;		_UpdateDisplay
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           psect	text1051
  2878                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2879                           	line	321
  2880                           	global	__size_of_ChargeMode
  2881  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2882                           	
  2883  08C7                     _ChargeMode:	
  2884                           	opt	stack 1
  2885                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2886                           	line	323
  2887                           	
  2888  08C7                     l11405:	
  2889                           ;Main.c: 323: currentMenu = 2;
  2890  08C7  3002               	movlw	(02h)
  2891  08C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2892  08C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2893  08CA  00D9               	movwf	(??_ChargeMode+0)+0
  2894  08CB  0859               	movf	(??_ChargeMode+0)+0,w
  2895  08CC  1683               	bsf	status, 5	;RP0=1, select bank1
  2896  08CD  1303               	bcf	status, 6	;RP1=0, select bank1
  2897  08CE  00CD               	movwf	(_currentMenu)^080h	;volatile
  2898                           	line	324
  2899                           	
  2900  08CF                     l11407:	
  2901                           ;Main.c: 324: ser_putch(128);
  2902  08CF  3080               	movlw	(080h)
  2903  08D0  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  2904  08D5  28D6               	goto	l11409
  2905                           	line	326
  2906                           ;Main.c: 326: while (1)
  2907                           	
  2908  08D6                     l2264:	
  2909                           	line	328
  2910                           	
  2911  08D6                     l11409:	
  2912                           ;Main.c: 327: {
  2913                           ;Main.c: 328: if (RTC_FLAG_250MS == 1)
  2914  08D6  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2915  08D7  28D9               	goto	u5451
  2916  08D8  28DA               	goto	u5450
  2917  08D9                     u5451:
  2918  08D9  28F9               	goto	l11425
  2919  08DA                     u5450:
  2920                           	line	330
  2921                           	
  2922  08DA                     l11411:	
  2923                           ;Main.c: 329: {
  2924                           ;Main.c: 330: RTC_FLAG_250MS = 0;
  2925  08DA  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2926                           	line	331
  2927                           	
  2928  08DB                     l11413:	
  2929                           ;Main.c: 331: UpdateDisplay();
  2930  08DB  120A  118A  2527   	fcall	_UpdateDisplay
              120A  158A         
  2931  08E0  28F9               	goto	l11425
  2932                           	line	332
  2933                           	
  2934  08E1                     l2265:	
  2935                           	line	333
  2936                           ;Main.c: 332: }
  2937                           ;Main.c: 333: switch (buttonPressed)
  2938  08E1  28F9               	goto	l11425
  2939                           	line	335
  2940                           ;Main.c: 334: {
  2941                           ;Main.c: 335: case 1:
  2942                           	
  2943  08E2                     l2267:	
  2944                           	line	336
  2945                           ;Main.c: 336: buttonPressed = 0;
  2946  08E2  01FD               	clrf	(_buttonPressed)	;volatile
  2947                           	line	337
  2948                           ;Main.c: 337: break;
  2949  08E3  28D6               	goto	l11409
  2950                           	line	338
  2951                           ;Main.c: 338: case 2:
  2952                           	
  2953  08E4                     l2269:	
  2954                           	line	339
  2955                           ;Main.c: 339: buttonPressed = 0;
  2956  08E4  01FD               	clrf	(_buttonPressed)	;volatile
  2957                           	line	340
  2958                           ;Main.c: 340: break;
  2959  08E5  28D6               	goto	l11409
  2960                           	line	341
  2961                           ;Main.c: 341: case 3:
  2962                           	
  2963  08E6                     l2270:	
  2964                           	line	342
  2965                           ;Main.c: 342: buttonPressed = 0;
  2966  08E6  01FD               	clrf	(_buttonPressed)	;volatile
  2967                           	line	343
  2968                           ;Main.c: 343: break;
  2969  08E7  28D6               	goto	l11409
  2970                           	line	344
  2971                           ;Main.c: 344: case 4:
  2972                           	
  2973  08E8                     l2271:	
  2974                           	line	345
  2975                           ;Main.c: 345: buttonPressed = 0;
  2976  08E8  01FD               	clrf	(_buttonPressed)	;volatile
  2977                           	line	346
  2978                           ;Main.c: 346: break;
  2979  08E9  28D6               	goto	l11409
  2980                           	line	347
  2981                           ;Main.c: 347: case 5:
  2982                           	
  2983  08EA                     l2272:	
  2984                           	line	348
  2985                           	
  2986  08EA                     l11415:	
  2987                           ;Main.c: 348: ser_putch(132);
  2988  08EA  3084               	movlw	(084h)
  2989  08EB  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  2990                           	line	349
  2991                           	
  2992  08F0                     l11417:	
  2993                           ;Main.c: 349: buttonPressed = 0;
  2994  08F0  01FD               	clrf	(_buttonPressed)	;volatile
  2995                           	line	350
  2996                           	
  2997  08F1                     l11419:	
  2998                           ;Main.c: 350: currentMenu = 0;
  2999  08F1  1683               	bsf	status, 5	;RP0=1, select bank1
  3000  08F2  1303               	bcf	status, 6	;RP1=0, select bank1
  3001  08F3  01CD               	clrf	(_currentMenu)^080h	;volatile
  3002  08F4  290C               	goto	l2273
  3003                           	line	351
  3004                           	
  3005  08F5                     l11421:	
  3006                           ;Main.c: 351: return;
  3007  08F5  290C               	goto	l2273
  3008                           	line	352
  3009                           ;Main.c: 352: default:
  3010                           	
  3011  08F6                     l2274:	
  3012                           	line	353
  3013                           ;Main.c: 353: buttonPressed = 0;
  3014  08F6  01FD               	clrf	(_buttonPressed)	;volatile
  3015                           	line	354
  3016                           ;Main.c: 354: break;
  3017  08F7  28D6               	goto	l11409
  3018                           	line	355
  3019                           	
  3020  08F8                     l11423:	
  3021                           ;Main.c: 355: }
  3022  08F8  28D6               	goto	l11409
  3023                           	line	333
  3024                           	
  3025  08F9                     l2266:	
  3026                           	
  3027  08F9                     l11425:	
  3028  08F9  087D               	movf	(_buttonPressed),w	;volatile
  3029                           	; Switch size 1, requested type "space"
  3030                           ; Number of cases is 5, Range of values is 1 to 5
  3031                           ; switch strategies available:
  3032                           ; Name         Instructions Cycles
  3033                           ; simple_byte           16     9 (average)
  3034                           ; direct_byte           26    11 (fixed)
  3035                           ; jumptable            263     9 (fixed)
  3036                           ;	Chosen strategy is simple_byte
  3037                           
  3038                           	opt asmopt_off
  3039  08FA  3A01               	xorlw	1^0	; case 1
  3040  08FB  1903               	skipnz
  3041  08FC  28E2               	goto	l2267
  3042  08FD  3A03               	xorlw	2^1	; case 2
  3043  08FE  1903               	skipnz
  3044  08FF  28E4               	goto	l2269
  3045  0900  3A01               	xorlw	3^2	; case 3
  3046  0901  1903               	skipnz
  3047  0902  28E6               	goto	l2270
  3048  0903  3A07               	xorlw	4^3	; case 4
  3049  0904  1903               	skipnz
  3050  0905  28E8               	goto	l2271
  3051  0906  3A01               	xorlw	5^4	; case 5
  3052  0907  1903               	skipnz
  3053  0908  28EA               	goto	l11415
  3054  0909  28F6               	goto	l2274
  3055                           	opt asmopt_on
  3056                           
  3057                           	line	355
  3058                           	
  3059  090A                     l2268:	
  3060  090A  28D6               	goto	l11409
  3061                           	line	356
  3062                           	
  3063  090B                     l2275:	
  3064                           	line	326
  3065  090B  28D6               	goto	l11409
  3066                           	
  3067  090C                     l2276:	
  3068                           	line	357
  3069                           	
  3070  090C                     l2273:	
  3071  090C  0008               	return
  3072                           	opt stack 0
  3073                           GLOBAL	__end_of_ChargeMode
  3074  090D                     	__end_of_ChargeMode:
  3075 ;; =============== function _ChargeMode ends ============
  3076                           
  3077                           	signat	_ChargeMode,88
  3078                           	global	_robotMoveSpeed
  3079                           psect	text1052,local,class=CODE,delta=2
  3080                           global __ptext1052
  3081  0D20                     __ptext1052:
  3082                           
  3083 ;; *************** function _robotMoveSpeed *****************
  3084 ;; Defined at:
  3085 ;;		line 71 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  distance        2   57[BANK0 ] int 
  3088 ;;  speed           2   59[BANK0 ] int 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  temp1           2   64[BANK0 ] int 
  3091 ;; Return value:  Size  Location     Type
  3092 ;;		None               void
  3093 ;; Registers used:
  3094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         0       4       0       0       0
  3101 ;;      Locals:         0       2       0       0       0
  3102 ;;      Temps:          0       3       0       0       0
  3103 ;;      Totals:         0       9       0       0       0
  3104 ;;Total ram usage:        9 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    6
  3107 ;; This function calls:
  3108 ;;		_RobotDrive
  3109 ;;		_robot_read
  3110 ;;		_UpdateDisplay
  3111 ;;		_abs
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           psect	text1052
  3117                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3118                           	line	71
  3119                           	global	__size_of_robotMoveSpeed
  3120  00A5                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  3121                           	
  3122  0D20                     _robotMoveSpeed:	
  3123                           	opt	stack 1
  3124                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3125                           	line	72
  3126                           	
  3127  0D20                     l11379:	
  3128                           ;robot.c: 72: distTravelled = 0;
  3129  0D20  1683               	bsf	status, 5	;RP0=1, select bank1
  3130  0D21  1303               	bcf	status, 6	;RP1=0, select bank1
  3131  0D22  01B8               	clrf	(_distTravelled)^080h
  3132  0D23  01B9               	clrf	(_distTravelled+1)^080h
  3133                           	line	74
  3134                           	
  3135  0D24                     l11381:	
  3136                           ;robot.c: 73: int temp1;
  3137                           ;robot.c: 74: RobotDrive(speed);
  3138  0D24  1283               	bcf	status, 5	;RP0=0, select bank0
  3139  0D25  1303               	bcf	status, 6	;RP1=0, select bank0
  3140  0D26  085C               	movf	(robotMoveSpeed@speed+1),w
  3141  0D27  01A3               	clrf	(?_RobotDrive+1)
  3142  0D28  07A3               	addwf	(?_RobotDrive+1)
  3143  0D29  085B               	movf	(robotMoveSpeed@speed),w
  3144  0D2A  01A2               	clrf	(?_RobotDrive)
  3145  0D2B  07A2               	addwf	(?_RobotDrive)
  3146                           
  3147  0D2C  160A  118A  267A   	fcall	_RobotDrive
              120A  158A         
  3148                           	line	77
  3149                           ;robot.c: 77: while (abs(distTravelled) <= abs(distance))
  3150  0D31  2D82               	goto	l11401
  3151                           	
  3152  0D32                     l5994:	
  3153                           	line	79
  3154                           	
  3155  0D32                     l11383:	
  3156                           ;robot.c: 78: {
  3157                           ;robot.c: 79: robot_read();
  3158  0D32  120A  158A  21F4   	fcall	_robot_read
              120A  158A         
  3159                           	line	80
  3160                           	
  3161  0D37                     l11385:	
  3162                           ;robot.c: 80: if (BumpSensors)
  3163  0D37  1683               	bsf	status, 5	;RP0=1, select bank1
  3164  0D38  1303               	bcf	status, 6	;RP1=0, select bank1
  3165  0D39  0844               	movf	(_BumpSensors)^080h,w	;volatile
  3166  0D3A  1D03               	skipz
  3167  0D3B  2D3D               	goto	u5430
  3168  0D3C  2D41               	goto	l11389
  3169  0D3D                     u5430:
  3170                           	line	82
  3171                           	
  3172  0D3D                     l11387:	
  3173                           ;robot.c: 81: {
  3174                           ;robot.c: 82: ROBOTerror = 1;
  3175  0D3D  01CA               	clrf	(_ROBOTerror)^080h
  3176  0D3E  1403               	bsf	status,0
  3177  0D3F  0DCA               	rlf	(_ROBOTerror)^080h,f
  3178                           	line	83
  3179                           ;robot.c: 83: break;
  3180  0D40  2DB9               	goto	l11403
  3181                           	line	84
  3182                           	
  3183  0D41                     l5995:	
  3184                           	line	85
  3185                           	
  3186  0D41                     l11389:	
  3187                           ;robot.c: 84: }
  3188                           ;robot.c: 85: temp1 = DistHighByte;
  3189  0D41  0846               	movf	(_DistHighByte)^080h,w	;volatile
  3190  0D42  1283               	bcf	status, 5	;RP0=0, select bank0
  3191  0D43  1303               	bcf	status, 6	;RP1=0, select bank0
  3192  0D44  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3193  0D45  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3194  0D46  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3195  0D47  00E0               	movwf	(robotMoveSpeed@temp1)
  3196  0D48  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3197  0D49  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3198                           	line	86
  3199                           	
  3200  0D4A                     l11391:	
  3201                           ;robot.c: 86: temp1 = temp1 << 8;
  3202  0D4A  0861               	movf	(robotMoveSpeed@temp1+1),w
  3203  0D4B  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  3204  0D4C  0860               	movf	(robotMoveSpeed@temp1),w
  3205  0D4D  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3206  0D4E  085D               	movf	(??_robotMoveSpeed+0)+0,w
  3207  0D4F  00DE               	movwf	(??_robotMoveSpeed+0)+1
  3208  0D50  01DD               	clrf	(??_robotMoveSpeed+0)+0
  3209  0D51  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3210  0D52  00E0               	movwf	(robotMoveSpeed@temp1)
  3211  0D53  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3212  0D54  00E1               	movwf	(robotMoveSpeed@temp1+1)
  3213                           	line	87
  3214                           	
  3215  0D55                     l11393:	
  3216                           ;robot.c: 87: temp1 += DistLowByte;
  3217  0D55  1683               	bsf	status, 5	;RP0=1, select bank1
  3218  0D56  1303               	bcf	status, 6	;RP1=0, select bank1
  3219  0D57  0847               	movf	(_DistLowByte)^080h,w	;volatile
  3220  0D58  1283               	bcf	status, 5	;RP0=0, select bank0
  3221  0D59  1303               	bcf	status, 6	;RP1=0, select bank0
  3222  0D5A  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3223  0D5B  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  3224  0D5C  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  3225  0D5D  07E0               	addwf	(robotMoveSpeed@temp1),f
  3226  0D5E  1803               	skipnc
  3227  0D5F  0AE1               	incf	(robotMoveSpeed@temp1+1),f
  3228  0D60  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3229  0D61  07E1               	addwf	(robotMoveSpeed@temp1+1),f
  3230                           	line	88
  3231                           	
  3232  0D62                     l11395:	
  3233                           ;robot.c: 88: distTravelled += temp1;
  3234  0D62  0860               	movf	(robotMoveSpeed@temp1),w
  3235  0D63  1683               	bsf	status, 5	;RP0=1, select bank1
  3236  0D64  1303               	bcf	status, 6	;RP1=0, select bank1
  3237  0D65  07B8               	addwf	(_distTravelled)^080h,f
  3238  0D66  1803               	skipnc
  3239  0D67  0AB9               	incf	(_distTravelled+1)^080h,f
  3240  0D68  1283               	bcf	status, 5	;RP0=0, select bank0
  3241  0D69  1303               	bcf	status, 6	;RP1=0, select bank0
  3242  0D6A  0861               	movf	(robotMoveSpeed@temp1+1),w
  3243  0D6B  1683               	bsf	status, 5	;RP0=1, select bank1
  3244  0D6C  1303               	bcf	status, 6	;RP1=0, select bank1
  3245  0D6D  07B9               	addwf	(_distTravelled+1)^080h,f
  3246                           	line	89
  3247                           	
  3248  0D6E                     l11397:	
  3249                           ;robot.c: 89: TotalDistTravelled += temp1;
  3250  0D6E  1283               	bcf	status, 5	;RP0=0, select bank0
  3251  0D6F  1303               	bcf	status, 6	;RP1=0, select bank0
  3252  0D70  0860               	movf	(robotMoveSpeed@temp1),w
  3253  0D71  1683               	bsf	status, 5	;RP0=1, select bank1
  3254  0D72  1303               	bcf	status, 6	;RP1=0, select bank1
  3255  0D73  07B4               	addwf	(_TotalDistTravelled)^080h,f
  3256  0D74  1803               	skipnc
  3257  0D75  0AB5               	incf	(_TotalDistTravelled+1)^080h,f
  3258  0D76  1283               	bcf	status, 5	;RP0=0, select bank0
  3259  0D77  1303               	bcf	status, 6	;RP1=0, select bank0
  3260  0D78  0861               	movf	(robotMoveSpeed@temp1+1),w
  3261  0D79  1683               	bsf	status, 5	;RP0=1, select bank1
  3262  0D7A  1303               	bcf	status, 6	;RP1=0, select bank1
  3263  0D7B  07B5               	addwf	(_TotalDistTravelled+1)^080h,f
  3264                           	line	90
  3265                           	
  3266  0D7C                     l11399:	
  3267                           ;robot.c: 90: UpdateDisplay();
  3268  0D7C  120A  118A  2527   	fcall	_UpdateDisplay
              120A  158A         
  3269  0D81  2D82               	goto	l11401
  3270                           	line	91
  3271                           	
  3272  0D82                     l5993:	
  3273                           	line	77
  3274                           	
  3275  0D82                     l11401:	
  3276  0D82  1283               	bcf	status, 5	;RP0=0, select bank0
  3277  0D83  1303               	bcf	status, 6	;RP1=0, select bank0
  3278  0D84  085A               	movf	(robotMoveSpeed@distance+1),w
  3279  0D85  01A7               	clrf	(?_abs+1)
  3280  0D86  07A7               	addwf	(?_abs+1)
  3281  0D87  0859               	movf	(robotMoveSpeed@distance),w
  3282  0D88  01A6               	clrf	(?_abs)
  3283  0D89  07A6               	addwf	(?_abs)
  3284                           
  3285  0D8A  160A  118A  2706   	fcall	_abs
              120A  158A         
  3286  0D8F  1283               	bcf	status, 5	;RP0=0, select bank0
  3287  0D90  1303               	bcf	status, 6	;RP1=0, select bank0
  3288  0D91  0826               	movf	(0+?_abs),w
  3289  0D92  00DD               	movwf	(??_robotMoveSpeed+0)+0
  3290  0D93  0827               	movf	(1+?_abs),w
  3291  0D94  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  3292  0D95  1683               	bsf	status, 5	;RP0=1, select bank1
  3293  0D96  1303               	bcf	status, 6	;RP1=0, select bank1
  3294  0D97  0839               	movf	(_distTravelled+1)^080h,w
  3295  0D98  1283               	bcf	status, 5	;RP0=0, select bank0
  3296  0D99  1303               	bcf	status, 6	;RP1=0, select bank0
  3297  0D9A  01A7               	clrf	(?_abs+1)
  3298  0D9B  07A7               	addwf	(?_abs+1)
  3299  0D9C  1683               	bsf	status, 5	;RP0=1, select bank1
  3300  0D9D  1303               	bcf	status, 6	;RP1=0, select bank1
  3301  0D9E  0838               	movf	(_distTravelled)^080h,w
  3302  0D9F  1283               	bcf	status, 5	;RP0=0, select bank0
  3303  0DA0  1303               	bcf	status, 6	;RP1=0, select bank0
  3304  0DA1  01A6               	clrf	(?_abs)
  3305  0DA2  07A6               	addwf	(?_abs)
  3306                           
  3307  0DA3  160A  118A  2706   	fcall	_abs
              120A  158A         
  3308  0DA8  1283               	bcf	status, 5	;RP0=0, select bank0
  3309  0DA9  1303               	bcf	status, 6	;RP1=0, select bank0
  3310  0DAA  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  3311  0DAB  3A80               	xorlw	80h
  3312  0DAC  00DF               	movwf	(??_robotMoveSpeed+2)+0
  3313  0DAD  0827               	movf	(1+(?_abs)),w
  3314  0DAE  3A80               	xorlw	80h
  3315  0DAF  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  3316  0DB0  1D03               	skipz
  3317  0DB1  2DB4               	goto	u5445
  3318  0DB2  0826               	movf	(0+(?_abs)),w
  3319  0DB3  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  3320  0DB4                     u5445:
  3321                           
  3322  0DB4  1803               	skipnc
  3323  0DB5  2DB7               	goto	u5441
  3324  0DB6  2DB8               	goto	u5440
  3325  0DB7                     u5441:
  3326  0DB7  2D32               	goto	l11383
  3327  0DB8                     u5440:
  3328  0DB8  2DB9               	goto	l11403
  3329                           	
  3330  0DB9                     l5996:	
  3331                           	line	93
  3332                           	
  3333  0DB9                     l11403:	
  3334                           ;robot.c: 91: }
  3335                           ;robot.c: 93: RobotDrive(0);
  3336  0DB9  3000               	movlw	low(0)
  3337  0DBA  1283               	bcf	status, 5	;RP0=0, select bank0
  3338  0DBB  1303               	bcf	status, 6	;RP1=0, select bank0
  3339  0DBC  00A2               	movwf	(?_RobotDrive)
  3340  0DBD  3000               	movlw	high(0)
  3341  0DBE  00A3               	movwf	((?_RobotDrive))+1
  3342  0DBF  160A  118A  267A   	fcall	_RobotDrive
              120A  158A         
  3343                           	line	95
  3344                           	
  3345  0DC4                     l5997:	
  3346  0DC4  0008               	return
  3347                           	opt stack 0
  3348                           GLOBAL	__end_of_robotMoveSpeed
  3349  0DC5                     	__end_of_robotMoveSpeed:
  3350 ;; =============== function _robotMoveSpeed ends ============
  3351                           
  3352                           	signat	_robotMoveSpeed,8312
  3353                           	global	_scan360
  3354                           psect	text1053,local,class=CODE,delta=2
  3355                           global __ptext1053
  3356  0786                     __ptext1053:
  3357                           
  3358 ;; *************** function _scan360 *****************
  3359 ;; Defined at:
  3360 ;;		line 362 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  steps           2   63[BANK0 ] int 
  3365 ;;  lowestSteps     2   61[BANK0 ] int 
  3366 ;;  lowestVal       2   59[BANK0 ] int 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  2   57[BANK0 ] int 
  3369 ;; Registers used:
  3370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3376 ;;      Params:         0       2       0       0       0
  3377 ;;      Locals:         0       6       0       0       0
  3378 ;;      Temps:          0       0       0       0       0
  3379 ;;      Totals:         0       8       0       0       0
  3380 ;;Total ram usage:        8 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    7
  3383 ;; This function calls:
  3384 ;;		_readAvgDistance
  3385 ;;		_rotate
  3386 ;;		_UpdateDisplay
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           psect	text1053
  3392                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3393                           	line	362
  3394                           	global	__size_of_scan360
  3395  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  3396                           	
  3397  0786                     _scan360:	
  3398                           	opt	stack 0
  3399                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3400                           	line	363
  3401                           	
  3402  0786                     l11351:	
  3403                           ;Main.c: 363: int lowestVal = 0, lowestSteps = 0;
  3404  0786  1283               	bcf	status, 5	;RP0=0, select bank0
  3405  0787  1303               	bcf	status, 6	;RP1=0, select bank0
  3406  0788  01DB               	clrf	(scan360@lowestVal)
  3407  0789  01DC               	clrf	(scan360@lowestVal+1)
  3408  078A  01DD               	clrf	(scan360@lowestSteps)
  3409  078B  01DE               	clrf	(scan360@lowestSteps+1)
  3410                           	line	365
  3411                           ;Main.c: 365: for (int steps = 0; steps < 200; steps+= 2)
  3412  078C  01DF               	clrf	(scan360@steps)
  3413  078D  01E0               	clrf	(scan360@steps+1)
  3414                           	
  3415  078E                     l11353:	
  3416  078E  0860               	movf	(scan360@steps+1),w
  3417  078F  3A80               	xorlw	80h
  3418  0790  00FF               	movwf	btemp+1
  3419  0791  3080               	movlw	(high(0C8h))^80h
  3420  0792  027F               	subwf	btemp+1,w
  3421  0793  1D03               	skipz
  3422  0794  2F97               	goto	u5395
  3423  0795  30C8               	movlw	low(0C8h)
  3424  0796  025F               	subwf	(scan360@steps),w
  3425  0797                     u5395:
  3426                           
  3427  0797  1C03               	skipc
  3428  0798  2F9A               	goto	u5391
  3429  0799  2F9B               	goto	u5390
  3430  079A                     u5391:
  3431  079A  2F9D               	goto	l11357
  3432  079B                     u5390:
  3433  079B  2FF6               	goto	l11375
  3434                           	
  3435  079C                     l11355:	
  3436  079C  2FF6               	goto	l11375
  3437                           	line	366
  3438                           	
  3439  079D                     l2279:	
  3440                           	line	367
  3441                           	
  3442  079D                     l11357:	
  3443                           ;Main.c: 366: {
  3444                           ;Main.c: 367: readAvgDistance();
  3445  079D  120A  158A  230D   	fcall	_readAvgDistance
              120A  118A         
  3446                           	line	368
  3447                           	
  3448  07A2                     l11359:	
  3449                           ;Main.c: 368: if (adcVal > lowestVal)
  3450  07A2  1683               	bsf	status, 5	;RP0=1, select bank1
  3451  07A3  1303               	bcf	status, 6	;RP1=0, select bank1
  3452  07A4  0837               	movf	(_adcVal+1)^080h,w	;volatile
  3453  07A5  1283               	bcf	status, 5	;RP0=0, select bank0
  3454  07A6  1303               	bcf	status, 6	;RP1=0, select bank0
  3455  07A7  025C               	subwf	(scan360@lowestVal+1),w
  3456  07A8  1D03               	skipz
  3457  07A9  2FB0               	goto	u5405
  3458  07AA  1683               	bsf	status, 5	;RP0=1, select bank1
  3459  07AB  1303               	bcf	status, 6	;RP1=0, select bank1
  3460  07AC  0836               	movf	(_adcVal)^080h,w	;volatile
  3461  07AD  1283               	bcf	status, 5	;RP0=0, select bank0
  3462  07AE  1303               	bcf	status, 6	;RP1=0, select bank0
  3463  07AF  025B               	subwf	(scan360@lowestVal),w
  3464  07B0                     u5405:
  3465  07B0  1803               	skipnc
  3466  07B1  2FB3               	goto	u5401
  3467  07B2  2FB4               	goto	u5400
  3468  07B3                     u5401:
  3469  07B3  2FC9               	goto	l11363
  3470  07B4                     u5400:
  3471                           	line	370
  3472                           	
  3473  07B4                     l11361:	
  3474                           ;Main.c: 369: {
  3475                           ;Main.c: 370: lowestVal = adcVal;
  3476  07B4  1683               	bsf	status, 5	;RP0=1, select bank1
  3477  07B5  1303               	bcf	status, 6	;RP1=0, select bank1
  3478  07B6  0837               	movf	(_adcVal+1)^080h,w	;volatile
  3479  07B7  1283               	bcf	status, 5	;RP0=0, select bank0
  3480  07B8  1303               	bcf	status, 6	;RP1=0, select bank0
  3481  07B9  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  3482  07BA  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  3483  07BB  1683               	bsf	status, 5	;RP0=1, select bank1
  3484  07BC  1303               	bcf	status, 6	;RP1=0, select bank1
  3485  07BD  0836               	movf	(_adcVal)^080h,w	;volatile
  3486  07BE  1283               	bcf	status, 5	;RP0=0, select bank0
  3487  07BF  1303               	bcf	status, 6	;RP1=0, select bank0
  3488  07C0  01DB               	clrf	(scan360@lowestVal)	;volatile
  3489  07C1  07DB               	addwf	(scan360@lowestVal)	;volatile
  3490                           
  3491                           	line	371
  3492                           ;Main.c: 371: lowestSteps = steps;
  3493  07C2  0860               	movf	(scan360@steps+1),w
  3494  07C3  01DE               	clrf	(scan360@lowestSteps+1)
  3495  07C4  07DE               	addwf	(scan360@lowestSteps+1)
  3496  07C5  085F               	movf	(scan360@steps),w
  3497  07C6  01DD               	clrf	(scan360@lowestSteps)
  3498  07C7  07DD               	addwf	(scan360@lowestSteps)
  3499                           
  3500  07C8  2FC9               	goto	l11363
  3501                           	line	373
  3502                           	
  3503  07C9                     l2281:	
  3504                           	line	374
  3505                           	
  3506  07C9                     l11363:	
  3507                           ;Main.c: 373: }
  3508                           ;Main.c: 374: rotate(2, 1);
  3509  07C9  3002               	movlw	low(02h)
  3510  07CA  00A3               	movwf	(?_rotate)
  3511  07CB  3000               	movlw	high(02h)
  3512  07CC  00A4               	movwf	((?_rotate))+1
  3513  07CD  01A5               	clrf	0+(?_rotate)+02h
  3514  07CE  1403               	bsf	status,0
  3515  07CF  0DA5               	rlf	0+(?_rotate)+02h,f
  3516  07D0  120A  158A  21A4   	fcall	_rotate
              120A  118A         
  3517                           	line	376
  3518                           	
  3519  07D5                     l11365:	
  3520                           ;Main.c: 376: if (RTC_FLAG_250MS == 1)
  3521  07D5  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3522  07D6  2FD8               	goto	u5411
  3523  07D7  2FD9               	goto	u5410
  3524  07D8                     u5411:
  3525  07D8  2FE0               	goto	l11371
  3526  07D9                     u5410:
  3527                           	line	378
  3528                           	
  3529  07D9                     l11367:	
  3530                           ;Main.c: 377: {
  3531                           ;Main.c: 378: RTC_FLAG_250MS = 0;
  3532  07D9  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3533                           	line	379
  3534                           	
  3535  07DA                     l11369:	
  3536                           ;Main.c: 379: UpdateDisplay();
  3537  07DA  120A  118A  2527   	fcall	_UpdateDisplay
              120A  118A         
  3538  07DF  2FE0               	goto	l11371
  3539                           	line	380
  3540                           	
  3541  07E0                     l2282:	
  3542                           	line	365
  3543                           	
  3544  07E0                     l11371:	
  3545  07E0  3002               	movlw	low(02h)
  3546  07E1  1283               	bcf	status, 5	;RP0=0, select bank0
  3547  07E2  1303               	bcf	status, 6	;RP1=0, select bank0
  3548  07E3  07DF               	addwf	(scan360@steps),f
  3549  07E4  1803               	skipnc
  3550  07E5  0AE0               	incf	(scan360@steps+1),f
  3551  07E6  3000               	movlw	high(02h)
  3552  07E7  07E0               	addwf	(scan360@steps+1),f
  3553                           	
  3554  07E8                     l11373:	
  3555  07E8  0860               	movf	(scan360@steps+1),w
  3556  07E9  3A80               	xorlw	80h
  3557  07EA  00FF               	movwf	btemp+1
  3558  07EB  3080               	movlw	(high(0C8h))^80h
  3559  07EC  027F               	subwf	btemp+1,w
  3560  07ED  1D03               	skipz
  3561  07EE  2FF1               	goto	u5425
  3562  07EF  30C8               	movlw	low(0C8h)
  3563  07F0  025F               	subwf	(scan360@steps),w
  3564  07F1                     u5425:
  3565                           
  3566  07F1  1C03               	skipc
  3567  07F2  2FF4               	goto	u5421
  3568  07F3  2FF5               	goto	u5420
  3569  07F4                     u5421:
  3570  07F4  2F9D               	goto	l11357
  3571  07F5                     u5420:
  3572  07F5  2FF6               	goto	l11375
  3573                           	
  3574  07F6                     l2280:	
  3575                           	line	383
  3576                           	
  3577  07F6                     l11375:	
  3578                           ;Main.c: 380: }
  3579                           ;Main.c: 381: }
  3580                           ;Main.c: 383: return lowestSteps;
  3581  07F6  1283               	bcf	status, 5	;RP0=0, select bank0
  3582  07F7  1303               	bcf	status, 6	;RP1=0, select bank0
  3583  07F8  085E               	movf	(scan360@lowestSteps+1),w
  3584  07F9  01DA               	clrf	(?_scan360+1)
  3585  07FA  07DA               	addwf	(?_scan360+1)
  3586  07FB  085D               	movf	(scan360@lowestSteps),w
  3587  07FC  01D9               	clrf	(?_scan360)
  3588  07FD  07D9               	addwf	(?_scan360)
  3589                           
  3590  07FE  2FFF               	goto	l2283
  3591                           	
  3592  07FF                     l11377:	
  3593                           	line	384
  3594                           	
  3595  07FF                     l2283:	
  3596  07FF  0008               	return
  3597                           	opt stack 0
  3598                           GLOBAL	__end_of_scan360
  3599  0800                     	__end_of_scan360:
  3600 ;; =============== function _scan360 ends ============
  3601                           
  3602                           	signat	_scan360,90
  3603                           	global	_calibrateIR
  3604                           psect	text1054,local,class=CODE,delta=2
  3605                           global __ptext1054
  3606  0A47                     __ptext1054:
  3607                           
  3608 ;; *************** function _calibrateIR *****************
  3609 ;; Defined at:
  3610 ;;		line 281 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;		None               void
  3617 ;; Registers used:
  3618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    6
  3631 ;; This function calls:
  3632 ;;		_rotate
  3633 ;;		_UpdateDisplay
  3634 ;; This function is called by:
  3635 ;;		_main
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           psect	text1054
  3639                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3640                           	line	281
  3641                           	global	__size_of_calibrateIR
  3642  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  3643                           	
  3644  0A47                     _calibrateIR:	
  3645                           	opt	stack 1
  3646                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3647                           	line	282
  3648                           	
  3649  0A47                     l11321:	
  3650                           ;Main.c: 282: currentMenu = 1;
  3651  0A47  1683               	bsf	status, 5	;RP0=1, select bank1
  3652  0A48  1303               	bcf	status, 6	;RP1=0, select bank1
  3653  0A49  01CD               	clrf	(_currentMenu)^080h	;volatile
  3654  0A4A  1403               	bsf	status,0
  3655  0A4B  0DCD               	rlf	(_currentMenu)^080h,f	;volatile
  3656                           	line	283
  3657                           	
  3658  0A4C                     l11323:	
  3659                           ;Main.c: 283: rotate(8, 0);
  3660  0A4C  3008               	movlw	low(08h)
  3661  0A4D  1283               	bcf	status, 5	;RP0=0, select bank0
  3662  0A4E  1303               	bcf	status, 6	;RP1=0, select bank0
  3663  0A4F  00A3               	movwf	(?_rotate)
  3664  0A50  3000               	movlw	high(08h)
  3665  0A51  00A4               	movwf	((?_rotate))+1
  3666  0A52  01A5               	clrf	0+(?_rotate)+02h
  3667  0A53  120A  158A  21A4   	fcall	_rotate
              120A  158A         
  3668  0A58  2A59               	goto	l11325
  3669                           	line	284
  3670                           ;Main.c: 284: while (1)
  3671                           	
  3672  0A59                     l2249:	
  3673                           	line	286
  3674                           	
  3675  0A59                     l11325:	
  3676                           ;Main.c: 285: {
  3677                           ;Main.c: 286: if (RTC_FLAG_250MS == 1)
  3678  0A59  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3679  0A5A  2A5C               	goto	u5381
  3680  0A5B  2A5D               	goto	u5380
  3681  0A5C                     u5381:
  3682  0A5C  2A91               	goto	l11349
  3683  0A5D                     u5380:
  3684                           	line	288
  3685                           	
  3686  0A5D                     l11327:	
  3687                           ;Main.c: 287: {
  3688                           ;Main.c: 288: RTC_FLAG_250MS = 0;
  3689  0A5D  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3690                           	line	289
  3691                           	
  3692  0A5E                     l11329:	
  3693                           ;Main.c: 289: UpdateDisplay();
  3694  0A5E  120A  118A  2527   	fcall	_UpdateDisplay
              120A  158A         
  3695  0A63  2A91               	goto	l11349
  3696                           	line	290
  3697                           	
  3698  0A64                     l2250:	
  3699                           	line	291
  3700                           ;Main.c: 290: }
  3701                           ;Main.c: 291: switch (buttonPressed)
  3702  0A64  2A91               	goto	l11349
  3703                           	line	293
  3704                           ;Main.c: 292: {
  3705                           ;Main.c: 293: case 1:
  3706                           	
  3707  0A65                     l2252:	
  3708                           	line	294
  3709                           ;Main.c: 294: buttonPressed = 0;
  3710  0A65  01FD               	clrf	(_buttonPressed)	;volatile
  3711                           	line	295
  3712                           ;Main.c: 295: break;
  3713  0A66  2A59               	goto	l11325
  3714                           	line	296
  3715                           ;Main.c: 296: case 2:
  3716                           	
  3717  0A67                     l2254:	
  3718                           	line	297
  3719                           ;Main.c: 297: buttonPressed = 0;
  3720  0A67  01FD               	clrf	(_buttonPressed)	;volatile
  3721                           	line	298
  3722                           ;Main.c: 298: break;
  3723  0A68  2A59               	goto	l11325
  3724                           	line	299
  3725                           ;Main.c: 299: case 3:
  3726                           	
  3727  0A69                     l2255:	
  3728                           	line	300
  3729                           	
  3730  0A69                     l11331:	
  3731                           ;Main.c: 300: rotate(1, 1);
  3732  0A69  3001               	movlw	low(01h)
  3733  0A6A  1283               	bcf	status, 5	;RP0=0, select bank0
  3734  0A6B  1303               	bcf	status, 6	;RP1=0, select bank0
  3735  0A6C  00A3               	movwf	(?_rotate)
  3736  0A6D  3000               	movlw	high(01h)
  3737  0A6E  00A4               	movwf	((?_rotate))+1
  3738  0A6F  01A5               	clrf	0+(?_rotate)+02h
  3739  0A70  1403               	bsf	status,0
  3740  0A71  0DA5               	rlf	0+(?_rotate)+02h,f
  3741  0A72  120A  158A  21A4   	fcall	_rotate
              120A  158A         
  3742                           	line	301
  3743                           	
  3744  0A77                     l11333:	
  3745                           ;Main.c: 301: buttonPressed = 0;
  3746  0A77  01FD               	clrf	(_buttonPressed)	;volatile
  3747                           	line	302
  3748                           ;Main.c: 302: break;
  3749  0A78  2A59               	goto	l11325
  3750                           	line	303
  3751                           ;Main.c: 303: case 4:
  3752                           	
  3753  0A79                     l2256:	
  3754                           	line	304
  3755                           	
  3756  0A79                     l11335:	
  3757                           ;Main.c: 304: rotate(1, 0);
  3758  0A79  3001               	movlw	low(01h)
  3759  0A7A  1283               	bcf	status, 5	;RP0=0, select bank0
  3760  0A7B  1303               	bcf	status, 6	;RP1=0, select bank0
  3761  0A7C  00A3               	movwf	(?_rotate)
  3762  0A7D  3000               	movlw	high(01h)
  3763  0A7E  00A4               	movwf	((?_rotate))+1
  3764  0A7F  01A5               	clrf	0+(?_rotate)+02h
  3765  0A80  120A  158A  21A4   	fcall	_rotate
              120A  158A         
  3766                           	line	305
  3767                           	
  3768  0A85                     l11337:	
  3769                           ;Main.c: 305: buttonPressed = 0;
  3770  0A85  01FD               	clrf	(_buttonPressed)	;volatile
  3771                           	line	306
  3772                           ;Main.c: 306: break;
  3773  0A86  2A59               	goto	l11325
  3774                           	line	307
  3775                           ;Main.c: 307: case 5:
  3776                           	
  3777  0A87                     l2257:	
  3778                           	line	308
  3779                           	
  3780  0A87                     l11339:	
  3781                           ;Main.c: 308: totalSteps = 0;
  3782  0A87  1683               	bsf	status, 5	;RP0=1, select bank1
  3783  0A88  1303               	bcf	status, 6	;RP1=0, select bank1
  3784  0A89  01C2               	clrf	(_totalSteps)^080h
  3785  0A8A  01C3               	clrf	(_totalSteps+1)^080h
  3786                           	line	309
  3787                           	
  3788  0A8B                     l11341:	
  3789                           ;Main.c: 309: buttonPressed = 0;
  3790  0A8B  01FD               	clrf	(_buttonPressed)	;volatile
  3791                           	line	310
  3792                           	
  3793  0A8C                     l11343:	
  3794                           ;Main.c: 310: currentMenu = 0;
  3795  0A8C  01CD               	clrf	(_currentMenu)^080h	;volatile
  3796  0A8D  2AA4               	goto	l2258
  3797                           	line	311
  3798                           	
  3799  0A8E                     l11345:	
  3800                           ;Main.c: 311: return;
  3801  0A8E  2AA4               	goto	l2258
  3802                           	line	312
  3803                           ;Main.c: 312: default:
  3804                           	
  3805  0A8F                     l2259:	
  3806                           	line	313
  3807                           ;Main.c: 313: break;
  3808  0A8F  2A59               	goto	l11325
  3809                           	line	314
  3810                           	
  3811  0A90                     l11347:	
  3812                           ;Main.c: 314: }
  3813  0A90  2A59               	goto	l11325
  3814                           	line	291
  3815                           	
  3816  0A91                     l2251:	
  3817                           	
  3818  0A91                     l11349:	
  3819  0A91  087D               	movf	(_buttonPressed),w	;volatile
  3820                           	; Switch size 1, requested type "space"
  3821                           ; Number of cases is 5, Range of values is 1 to 5
  3822                           ; switch strategies available:
  3823                           ; Name         Instructions Cycles
  3824                           ; simple_byte           16     9 (average)
  3825                           ; direct_byte           26    11 (fixed)
  3826                           ; jumptable            263     9 (fixed)
  3827                           ;	Chosen strategy is simple_byte
  3828                           
  3829                           	opt asmopt_off
  3830  0A92  3A01               	xorlw	1^0	; case 1
  3831  0A93  1903               	skipnz
  3832  0A94  2A65               	goto	l2252
  3833  0A95  3A03               	xorlw	2^1	; case 2
  3834  0A96  1903               	skipnz
  3835  0A97  2A67               	goto	l2254
  3836  0A98  3A01               	xorlw	3^2	; case 3
  3837  0A99  1903               	skipnz
  3838  0A9A  2A69               	goto	l11331
  3839  0A9B  3A07               	xorlw	4^3	; case 4
  3840  0A9C  1903               	skipnz
  3841  0A9D  2A79               	goto	l11335
  3842  0A9E  3A01               	xorlw	5^4	; case 5
  3843  0A9F  1903               	skipnz
  3844  0AA0  2A87               	goto	l11339
  3845  0AA1  2A59               	goto	l11325
  3846                           	opt asmopt_on
  3847                           
  3848                           	line	314
  3849                           	
  3850  0AA2                     l2253:	
  3851  0AA2  2A59               	goto	l11325
  3852                           	line	315
  3853                           	
  3854  0AA3                     l2260:	
  3855                           	line	284
  3856  0AA3  2A59               	goto	l11325
  3857                           	
  3858  0AA4                     l2261:	
  3859                           	line	316
  3860                           	
  3861  0AA4                     l2258:	
  3862  0AA4  0008               	return
  3863                           	opt stack 0
  3864                           GLOBAL	__end_of_calibrateIR
  3865  0AA5                     	__end_of_calibrateIR:
  3866 ;; =============== function _calibrateIR ends ============
  3867                           
  3868                           	signat	_calibrateIR,88
  3869                           	global	_UpdateDisplay
  3870                           psect	text1055,local,class=CODE,delta=2
  3871                           global __ptext1055
  3872  0527                     __ptext1055:
  3873                           
  3874 ;; *************** function _UpdateDisplay *****************
  3875 ;; Defined at:
  3876 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  3881 ;; Return value:  Size  Location     Type
  3882 ;;		None               void
  3883 ;; Registers used:
  3884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3890 ;;      Params:         0       0       0       0       0
  3891 ;;      Locals:         0      16       0       0       0
  3892 ;;      Temps:          0       4       0       0       0
  3893 ;;      Totals:         0      20       0       0       0
  3894 ;;Total ram usage:       20 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    5
  3897 ;; This function calls:
  3898 ;;		_lcd_write_control
  3899 ;;		_sprintf
  3900 ;;		_lcd_set_cursor
  3901 ;;		_lcd_write_string
  3902 ;;		___awmod
  3903 ;; This function is called by:
  3904 ;;		_main
  3905 ;;		_calibrateIR
  3906 ;;		_ChargeMode
  3907 ;;		_scan360
  3908 ;;		_robotMoveSpeed
  3909 ;;		_robotMove
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           psect	text1055
  3913                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  3914                           	line	236
  3915                           	global	__size_of_UpdateDisplay
  3916  015F                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  3917                           	
  3918  0527                     _UpdateDisplay:	
  3919                           	opt	stack 1
  3920                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3921                           	line	237
  3922                           	
  3923  0527                     l11277:	
  3924                           ;HMI.c: 237: char LCDOutput[16] = "";
  3925  0527  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  3926  0528  0084               	movwf	fsr0
  3927  0529  3090               	movlw	low(UpdateDisplay@F1235)
  3928  052A  1283               	bcf	status, 5	;RP0=0, select bank0
  3929  052B  1303               	bcf	status, 6	;RP1=0, select bank0
  3930  052C  00C5               	movwf	(??_UpdateDisplay+0)+0
  3931  052D  0804               	movf	fsr0,w
  3932  052E  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  3933  052F  3010               	movlw	16
  3934  0530  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  3935  0531                     u5360:
  3936  0531  0845               	movf	(??_UpdateDisplay+0)+0,w
  3937  0532  0084               	movwf	fsr0
  3938  0533  1783               	bsf	status, 7	;select IRP bank3
  3939                           	
  3940  0534  0800               	movf	indf,w
  3941  0535  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  3942  0536  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  3943  0537  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  3944  0538  0084               	movwf	fsr0
  3945  0539  1383               	bcf	status, 7	;select IRP bank0
  3946                           	
  3947  053A  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  3948  053B  0080               	movwf	indf
  3949  053C  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  3950  053D  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  3951  053E  2D31               	goto	u5360
  3952                           	line	238
  3953                           ;HMI.c: 238: switch (currentMenu)
  3954  053F  2E78               	goto	l11319
  3955                           	line	240
  3956                           ;HMI.c: 239: {
  3957                           ;HMI.c: 240: case 0:
  3958                           	
  3959  0540                     l4515:	
  3960                           	line	241
  3961                           	
  3962  0540                     l11279:	
  3963                           ;HMI.c: 241: lcd_write_control(0b00000001);
  3964  0540  3001               	movlw	(01h)
  3965  0541  160A  118A  249F   	fcall	_lcd_write_control
              120A  118A         
  3966                           	line	242
  3967                           	
  3968  0546                     l11281:	
  3969                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",IRdistance, TotalDistTravelled);
  3970  0546  302B               	movlw	((STR_13-__stringbase))&0ffh
  3971  0547  1283               	bcf	status, 5	;RP0=0, select bank0
  3972  0548  1303               	bcf	status, 6	;RP1=0, select bank0
  3973  0549  00C5               	movwf	(??_UpdateDisplay+0)+0
  3974  054A  0845               	movf	(??_UpdateDisplay+0)+0,w
  3975  054B  00B4               	movwf	(?_sprintf)
  3976  054C  1683               	bsf	status, 5	;RP0=1, select bank1
  3977  054D  1303               	bcf	status, 6	;RP1=0, select bank1
  3978  054E  0831               	movf	(_IRdistance+1)^080h,w	;volatile
  3979  054F  1283               	bcf	status, 5	;RP0=0, select bank0
  3980  0550  1303               	bcf	status, 6	;RP1=0, select bank0
  3981  0551  01B6               	clrf	1+(?_sprintf)+01h
  3982  0552  07B6               	addwf	1+(?_sprintf)+01h
  3983  0553  1683               	bsf	status, 5	;RP0=1, select bank1
  3984  0554  1303               	bcf	status, 6	;RP1=0, select bank1
  3985  0555  0830               	movf	(_IRdistance)^080h,w	;volatile
  3986  0556  1283               	bcf	status, 5	;RP0=0, select bank0
  3987  0557  1303               	bcf	status, 6	;RP1=0, select bank0
  3988  0558  01B5               	clrf	0+(?_sprintf)+01h
  3989  0559  07B5               	addwf	0+(?_sprintf)+01h
  3990                           
  3991  055A  1683               	bsf	status, 5	;RP0=1, select bank1
  3992  055B  1303               	bcf	status, 6	;RP1=0, select bank1
  3993  055C  0835               	movf	(_TotalDistTravelled+1)^080h,w
  3994  055D  1283               	bcf	status, 5	;RP0=0, select bank0
  3995  055E  1303               	bcf	status, 6	;RP1=0, select bank0
  3996  055F  01B8               	clrf	1+(?_sprintf)+03h
  3997  0560  07B8               	addwf	1+(?_sprintf)+03h
  3998  0561  1683               	bsf	status, 5	;RP0=1, select bank1
  3999  0562  1303               	bcf	status, 6	;RP1=0, select bank1
  4000  0563  0834               	movf	(_TotalDistTravelled)^080h,w
  4001  0564  1283               	bcf	status, 5	;RP0=0, select bank0
  4002  0565  1303               	bcf	status, 6	;RP1=0, select bank0
  4003  0566  01B7               	clrf	0+(?_sprintf)+03h
  4004  0567  07B7               	addwf	0+(?_sprintf)+03h
  4005                           
  4006  0568  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4007  0569  120A  118A  2686   	fcall	_sprintf
              120A  118A         
  4008                           	line	243
  4009                           	
  4010  056E                     l11283:	
  4011                           ;HMI.c: 243: lcd_set_cursor(0x00);
  4012  056E  3000               	movlw	(0)
  4013  056F  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4014                           	line	244
  4015                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  4016  0574  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  4017  0575  1283               	bcf	status, 5	;RP0=0, select bank0
  4018  0576  1303               	bcf	status, 6	;RP1=0, select bank0
  4019  0577  00A7               	movwf	(?_lcd_write_string)
  4020  0578  3000               	movlw	(0x0/2)
  4021  0579  00A8               	movwf	(?_lcd_write_string+1)
  4022  057A  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4023                           	line	245
  4024                           	
  4025  057F                     l11285:	
  4026                           ;HMI.c: 245: lcd_set_cursor(0x40);
  4027  057F  3040               	movlw	(040h)
  4028  0580  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4029                           	line	246
  4030                           	
  4031  0585                     l11287:	
  4032                           ;HMI.c: 246: if (pos > 0)
  4033  0585  1683               	bsf	status, 5	;RP0=1, select bank1
  4034  0586  1303               	bcf	status, 6	;RP1=0, select bank1
  4035  0587  083F               	movf	(_pos+1)^080h,w
  4036  0588  3A80               	xorlw	80h
  4037  0589  00FF               	movwf	btemp+1
  4038  058A  3080               	movlw	(high(01h))^80h
  4039  058B  027F               	subwf	btemp+1,w
  4040  058C  1D03               	skipz
  4041  058D  2D90               	goto	u5375
  4042  058E  3001               	movlw	low(01h)
  4043  058F  023E               	subwf	(_pos)^080h,w
  4044  0590                     u5375:
  4045                           
  4046  0590  1C03               	skipc
  4047  0591  2D93               	goto	u5371
  4048  0592  2D94               	goto	u5370
  4049  0593                     u5371:
  4050  0593  2DA7               	goto	l11291
  4051  0594                     u5370:
  4052                           	line	247
  4053                           	
  4054  0594                     l11289:	
  4055                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  4056  0594  1683               	bsf	status, 5	;RP0=1, select bank1
  4057  0595  1303               	bcf	status, 6	;RP1=0, select bank1
  4058  0596  083E               	movf	(_pos)^080h,w
  4059  0597  3EFF               	addlw	0FFh
  4060  0598  3EDD               	addlw	_shortMenuStrings&0ffh
  4061  0599  0084               	movwf	fsr0
  4062  059A  1383               	bcf	status, 7	;select IRP bank1
  4063  059B  0800               	movf	indf,w
  4064  059C  1283               	bcf	status, 5	;RP0=0, select bank0
  4065  059D  1303               	bcf	status, 6	;RP1=0, select bank0
  4066  059E  00A7               	movwf	(?_lcd_write_string)
  4067  059F  3080               	movlw	80h
  4068  05A0  00A8               	movwf	(?_lcd_write_string+1)
  4069  05A1  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4070  05A6  2DBA               	goto	l11293
  4071                           	line	248
  4072                           	
  4073  05A7                     l4516:	
  4074                           	line	249
  4075                           	
  4076  05A7                     l11291:	
  4077                           ;HMI.c: 248: else
  4078                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4079  05A7  1683               	bsf	status, 5	;RP0=1, select bank1
  4080  05A8  1303               	bcf	status, 6	;RP1=0, select bank1
  4081  05A9  083E               	movf	(_pos)^080h,w
  4082  05AA  3E05               	addlw	05h
  4083  05AB  3EDD               	addlw	_shortMenuStrings&0ffh
  4084  05AC  0084               	movwf	fsr0
  4085  05AD  1383               	bcf	status, 7	;select IRP bank1
  4086  05AE  0800               	movf	indf,w
  4087  05AF  1283               	bcf	status, 5	;RP0=0, select bank0
  4088  05B0  1303               	bcf	status, 6	;RP1=0, select bank0
  4089  05B1  00A7               	movwf	(?_lcd_write_string)
  4090  05B2  3080               	movlw	80h
  4091  05B3  00A8               	movwf	(?_lcd_write_string+1)
  4092  05B4  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4093  05B9  2DBA               	goto	l11293
  4094                           	
  4095  05BA                     l4517:	
  4096                           	line	250
  4097                           	
  4098  05BA                     l11293:	
  4099                           ;HMI.c: 250: lcd_set_cursor(0x44);
  4100  05BA  3044               	movlw	(044h)
  4101  05BB  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4102                           	line	251
  4103                           	
  4104  05C0                     l11295:	
  4105                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  4106  05C0  1683               	bsf	status, 5	;RP0=1, select bank1
  4107  05C1  1303               	bcf	status, 6	;RP1=0, select bank1
  4108  05C2  083E               	movf	(_pos)^080h,w
  4109  05C3  3ED7               	addlw	_menuStrings&0ffh
  4110  05C4  0084               	movwf	fsr0
  4111  05C5  1383               	bcf	status, 7	;select IRP bank1
  4112  05C6  0800               	movf	indf,w
  4113  05C7  1283               	bcf	status, 5	;RP0=0, select bank0
  4114  05C8  1303               	bcf	status, 6	;RP1=0, select bank0
  4115  05C9  00A7               	movwf	(?_lcd_write_string)
  4116  05CA  3080               	movlw	80h
  4117  05CB  00A8               	movwf	(?_lcd_write_string+1)
  4118  05CC  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4119                           	line	252
  4120                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  4121  05D1  304D               	movlw	(04Dh)
  4122  05D2  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4123                           	line	253
  4124                           	
  4125  05D7                     l11297:	
  4126                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4127  05D7  3006               	movlw	low(06h)
  4128  05D8  1283               	bcf	status, 5	;RP0=0, select bank0
  4129  05D9  1303               	bcf	status, 6	;RP1=0, select bank0
  4130  05DA  00A0               	movwf	(?___awmod)
  4131  05DB  3000               	movlw	high(06h)
  4132  05DC  00A1               	movwf	((?___awmod))+1
  4133  05DD  1683               	bsf	status, 5	;RP0=1, select bank1
  4134  05DE  1303               	bcf	status, 6	;RP1=0, select bank1
  4135  05DF  083E               	movf	(_pos)^080h,w
  4136  05E0  3E01               	addlw	low(01h)
  4137  05E1  1283               	bcf	status, 5	;RP0=0, select bank0
  4138  05E2  1303               	bcf	status, 6	;RP1=0, select bank0
  4139  05E3  00A2               	movwf	0+(?___awmod)+02h
  4140  05E4  1683               	bsf	status, 5	;RP0=1, select bank1
  4141  05E5  1303               	bcf	status, 6	;RP1=0, select bank1
  4142  05E6  083F               	movf	(_pos+1)^080h,w
  4143  05E7  1803               	skipnc
  4144  05E8  3E01               	addlw	1
  4145  05E9  3E00               	addlw	high(01h)
  4146  05EA  1283               	bcf	status, 5	;RP0=0, select bank0
  4147  05EB  1303               	bcf	status, 6	;RP1=0, select bank0
  4148  05EC  00A3               	movwf	1+0+(?___awmod)+02h
  4149  05ED  120A  158A  22A5   	fcall	___awmod
              120A  118A         
  4150  05F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4151  05F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4152  05F4  0820               	movf	(0+(?___awmod)),w
  4153  05F5  3EDD               	addlw	_shortMenuStrings&0ffh
  4154  05F6  0084               	movwf	fsr0
  4155  05F7  1383               	bcf	status, 7	;select IRP bank1
  4156  05F8  0800               	movf	indf,w
  4157  05F9  00A7               	movwf	(?_lcd_write_string)
  4158  05FA  3080               	movlw	80h
  4159  05FB  00A8               	movwf	(?_lcd_write_string+1)
  4160  05FC  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4161                           	line	254
  4162                           ;HMI.c: 254: break;
  4163  0601  2E85               	goto	l4522
  4164                           	line	255
  4165                           ;HMI.c: 255: case 1:
  4166                           	
  4167  0602                     l4519:	
  4168                           	line	256
  4169                           	
  4170  0602                     l11299:	
  4171                           ;HMI.c: 256: lcd_write_control(0b00000001);
  4172  0602  3001               	movlw	(01h)
  4173  0603  160A  118A  249F   	fcall	_lcd_write_control
              120A  118A         
  4174                           	line	257
  4175                           ;HMI.c: 257: lcd_set_cursor(0x00);
  4176  0608  3000               	movlw	(0)
  4177  0609  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4178                           	line	258
  4179                           	
  4180  060E                     l11301:	
  4181                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  4182  060E  301B               	movlw	low((STR_14-__stringbase))
  4183  060F  1283               	bcf	status, 5	;RP0=0, select bank0
  4184  0610  1303               	bcf	status, 6	;RP1=0, select bank0
  4185  0611  00A7               	movwf	(?_lcd_write_string)
  4186  0612  3080               	movlw	80h
  4187  0613  00A8               	movwf	(?_lcd_write_string+1)
  4188  0614  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4189                           	line	259
  4190                           	
  4191  0619                     l11303:	
  4192                           ;HMI.c: 259: lcd_set_cursor(0x40);
  4193  0619  3040               	movlw	(040h)
  4194  061A  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4195                           	line	260
  4196                           ;HMI.c: 260: lcd_write_string("<<<");
  4197  061F  3082               	movlw	low((STR_15-__stringbase))
  4198  0620  1283               	bcf	status, 5	;RP0=0, select bank0
  4199  0621  1303               	bcf	status, 6	;RP1=0, select bank0
  4200  0622  00A7               	movwf	(?_lcd_write_string)
  4201  0623  3080               	movlw	80h
  4202  0624  00A8               	movwf	(?_lcd_write_string+1)
  4203  0625  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4204                           	line	261
  4205                           	
  4206  062A                     l11305:	
  4207                           ;HMI.c: 261: lcd_set_cursor(0x44);
  4208  062A  3044               	movlw	(044h)
  4209  062B  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4210                           	line	262
  4211                           	
  4212  0630                     l11307:	
  4213                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  4214  0630  3076               	movlw	low((STR_16-__stringbase))
  4215  0631  1283               	bcf	status, 5	;RP0=0, select bank0
  4216  0632  1303               	bcf	status, 6	;RP1=0, select bank0
  4217  0633  00A7               	movwf	(?_lcd_write_string)
  4218  0634  3080               	movlw	80h
  4219  0635  00A8               	movwf	(?_lcd_write_string+1)
  4220  0636  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4221                           	line	263
  4222                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  4223  063B  304D               	movlw	(04Dh)
  4224  063C  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4225                           	line	264
  4226                           	
  4227  0641                     l11309:	
  4228                           ;HMI.c: 264: lcd_write_string(">>>");
  4229  0641  3086               	movlw	low((STR_17-__stringbase))
  4230  0642  1283               	bcf	status, 5	;RP0=0, select bank0
  4231  0643  1303               	bcf	status, 6	;RP1=0, select bank0
  4232  0644  00A7               	movwf	(?_lcd_write_string)
  4233  0645  3080               	movlw	80h
  4234  0646  00A8               	movwf	(?_lcd_write_string+1)
  4235  0647  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4236                           	line	265
  4237                           ;HMI.c: 265: break;
  4238  064C  2E85               	goto	l4522
  4239                           	line	266
  4240                           ;HMI.c: 266: case 2:
  4241                           	
  4242  064D                     l4520:	
  4243                           	line	267
  4244                           	
  4245  064D                     l11311:	
  4246                           ;HMI.c: 267: lcd_write_control(0b00000001);
  4247  064D  3001               	movlw	(01h)
  4248  064E  160A  118A  249F   	fcall	_lcd_write_control
              120A  118A         
  4249                           	line	268
  4250                           ;HMI.c: 268: lcd_set_cursor(0x00);
  4251  0653  3000               	movlw	(0)
  4252  0654  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4253                           	line	269
  4254                           	
  4255  0659                     l11313:	
  4256                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  4257  0659  300B               	movlw	low((STR_18-__stringbase))
  4258  065A  1283               	bcf	status, 5	;RP0=0, select bank0
  4259  065B  1303               	bcf	status, 6	;RP1=0, select bank0
  4260  065C  00A7               	movwf	(?_lcd_write_string)
  4261  065D  3080               	movlw	80h
  4262  065E  00A8               	movwf	(?_lcd_write_string+1)
  4263  065F  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4264                           	line	270
  4265                           	
  4266  0664                     l11315:	
  4267                           ;HMI.c: 270: lcd_set_cursor(0x44);
  4268  0664  3044               	movlw	(044h)
  4269  0665  160A  118A  244D   	fcall	_lcd_set_cursor
              120A  118A         
  4270                           	line	271
  4271                           ;HMI.c: 271: lcd_write_string("  EXIT  ");
  4272  066A  3038               	movlw	low((STR_19-__stringbase))
  4273  066B  1283               	bcf	status, 5	;RP0=0, select bank0
  4274  066C  1303               	bcf	status, 6	;RP1=0, select bank0
  4275  066D  00A7               	movwf	(?_lcd_write_string)
  4276  066E  3080               	movlw	80h
  4277  066F  00A8               	movwf	(?_lcd_write_string+1)
  4278  0670  160A  118A  2621   	fcall	_lcd_write_string
              120A  118A         
  4279                           	line	272
  4280                           ;HMI.c: 272: break;
  4281  0675  2E85               	goto	l4522
  4282                           	line	273
  4283                           ;HMI.c: 273: default:
  4284                           	
  4285  0676                     l4521:	
  4286                           	line	274
  4287                           ;HMI.c: 274: break;
  4288  0676  2E85               	goto	l4522
  4289                           	line	275
  4290                           	
  4291  0677                     l11317:	
  4292                           ;HMI.c: 275: }
  4293  0677  2E85               	goto	l4522
  4294                           	line	238
  4295                           	
  4296  0678                     l4514:	
  4297                           	
  4298  0678                     l11319:	
  4299  0678  1683               	bsf	status, 5	;RP0=1, select bank1
  4300  0679  1303               	bcf	status, 6	;RP1=0, select bank1
  4301  067A  084D               	movf	(_currentMenu)^080h,w	;volatile
  4302                           	; Switch size 1, requested type "space"
  4303                           ; Number of cases is 3, Range of values is 0 to 2
  4304                           ; switch strategies available:
  4305                           ; Name         Instructions Cycles
  4306                           ; simple_byte           10     6 (average)
  4307                           ; direct_byte           17     8 (fixed)
  4308                           ; jumptable            260     6 (fixed)
  4309                           ; rangetable             7     6 (fixed)
  4310                           ; spacedrange           12     9 (fixed)
  4311                           ; locatedrange           3     3 (fixed)
  4312                           ;	Chosen strategy is simple_byte
  4313                           
  4314                           	opt asmopt_off
  4315  067B  3A00               	xorlw	0^0	; case 0
  4316  067C  1903               	skipnz
  4317  067D  2D40               	goto	l11279
  4318  067E  3A01               	xorlw	1^0	; case 1
  4319  067F  1903               	skipnz
  4320  0680  2E02               	goto	l11299
  4321  0681  3A03               	xorlw	2^1	; case 2
  4322  0682  1903               	skipnz
  4323  0683  2E4D               	goto	l11311
  4324  0684  2E85               	goto	l4522
  4325                           	opt asmopt_on
  4326                           
  4327                           	line	275
  4328                           	
  4329  0685                     l4518:	
  4330                           	line	276
  4331                           	
  4332  0685                     l4522:	
  4333  0685  0008               	return
  4334                           	opt stack 0
  4335                           GLOBAL	__end_of_UpdateDisplay
  4336  0686                     	__end_of_UpdateDisplay:
  4337 ;; =============== function _UpdateDisplay ends ============
  4338                           
  4339                           	signat	_UpdateDisplay,88
  4340                           	global	_readAvgDistance
  4341                           psect	text1056,local,class=CODE,delta=2
  4342                           global __ptext1056
  4343  0B0D                     __ptext1056:
  4344                           
  4345 ;; *************** function _readAvgDistance *****************
  4346 ;; Defined at:
  4347 ;;		line 27 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  i               2   22[BANK0 ] int 
  4352 ;;  tempIR          2   20[BANK0 ] unsigned int 
  4353 ;;  j               2   18[BANK0 ] int 
  4354 ;;  fullval         2   16[BANK0 ] unsigned int 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;		None               void
  4357 ;; Registers used:
  4358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4364 ;;      Params:         0       0       0       0       0
  4365 ;;      Locals:         0       8       0       0       0
  4366 ;;      Temps:          0       0       0       0       0
  4367 ;;      Totals:         0       8       0       0       0
  4368 ;;Total ram usage:        8 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    6
  4371 ;; This function calls:
  4372 ;;		_readDistance
  4373 ;;		___lwdiv
  4374 ;;		_ADCconvert
  4375 ;; This function is called by:
  4376 ;;		_main
  4377 ;;		_scan360
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           psect	text1056
  4381                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4382                           	line	27
  4383                           	global	__size_of_readAvgDistance
  4384  0076                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4385                           	
  4386  0B0D                     _readAvgDistance:	
  4387                           	opt	stack 0
  4388                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4389                           	line	28
  4390                           	
  4391  0B0D                     l11261:	
  4392                           ;infrared.c: 28: unsigned int fullval = 0, tempIR = 0;
  4393  0B0D  1283               	bcf	status, 5	;RP0=0, select bank0
  4394  0B0E  1303               	bcf	status, 6	;RP1=0, select bank0
  4395  0B0F  01B0               	clrf	(readAvgDistance@fullval)
  4396  0B10  01B1               	clrf	(readAvgDistance@fullval+1)
  4397  0B11  01B4               	clrf	(readAvgDistance@tempIR)
  4398  0B12  01B5               	clrf	(readAvgDistance@tempIR+1)
  4399                           	line	29
  4400                           ;infrared.c: 29: int j = 0;
  4401  0B13  01B2               	clrf	(readAvgDistance@j)
  4402  0B14  01B3               	clrf	(readAvgDistance@j+1)
  4403                           	line	31
  4404                           ;infrared.c: 31: for (int i = 0; i < 8; i++)
  4405  0B15  01B6               	clrf	(readAvgDistance@i)
  4406  0B16  01B7               	clrf	(readAvgDistance@i+1)
  4407                           	
  4408  0B17                     l11263:	
  4409  0B17  0837               	movf	(readAvgDistance@i+1),w
  4410  0B18  3A80               	xorlw	80h
  4411  0B19  00FF               	movwf	btemp+1
  4412  0B1A  3080               	movlw	(high(08h))^80h
  4413  0B1B  027F               	subwf	btemp+1,w
  4414  0B1C  1D03               	skipz
  4415  0B1D  2B20               	goto	u5335
  4416  0B1E  3008               	movlw	low(08h)
  4417  0B1F  0236               	subwf	(readAvgDistance@i),w
  4418  0B20                     u5335:
  4419                           
  4420  0B20  1C03               	skipc
  4421  0B21  2B23               	goto	u5331
  4422  0B22  2B24               	goto	u5330
  4423  0B23                     u5331:
  4424  0B23  2B26               	goto	l11267
  4425  0B24                     u5330:
  4426  0B24  2B5C               	goto	l11275
  4427                           	
  4428  0B25                     l11265:	
  4429  0B25  2B5C               	goto	l11275
  4430                           	line	32
  4431                           	
  4432  0B26                     l2984:	
  4433                           	line	33
  4434                           	
  4435  0B26                     l11267:	
  4436                           ;infrared.c: 32: {
  4437                           ;infrared.c: 33: tempIR = readDistance();
  4438  0B26  160A  118A  24C9   	fcall	_readDistance
              120A  158A         
  4439  0B2B  1283               	bcf	status, 5	;RP0=0, select bank0
  4440  0B2C  1303               	bcf	status, 6	;RP1=0, select bank0
  4441  0B2D  0829               	movf	(1+(?_readDistance)),w
  4442  0B2E  01B5               	clrf	(readAvgDistance@tempIR+1)
  4443  0B2F  07B5               	addwf	(readAvgDistance@tempIR+1)
  4444  0B30  0828               	movf	(0+(?_readDistance)),w
  4445  0B31  01B4               	clrf	(readAvgDistance@tempIR)
  4446  0B32  07B4               	addwf	(readAvgDistance@tempIR)
  4447                           
  4448                           	line	34
  4449                           	
  4450  0B33                     l11269:	
  4451                           ;infrared.c: 34: if (tempIR <= 1000)
  4452  0B33  3003               	movlw	high(03E9h)
  4453  0B34  0235               	subwf	(readAvgDistance@tempIR+1),w
  4454  0B35  30E9               	movlw	low(03E9h)
  4455  0B36  1903               	skipnz
  4456  0B37  0234               	subwf	(readAvgDistance@tempIR),w
  4457  0B38  1803               	skipnc
  4458  0B39  2B3B               	goto	u5341
  4459  0B3A  2B3C               	goto	u5340
  4460  0B3B                     u5341:
  4461  0B3B  2B48               	goto	l2986
  4462  0B3C                     u5340:
  4463                           	line	36
  4464                           	
  4465  0B3C                     l11271:	
  4466                           ;infrared.c: 35: {
  4467                           ;infrared.c: 36: fullval += tempIR;
  4468  0B3C  0834               	movf	(readAvgDistance@tempIR),w
  4469  0B3D  07B0               	addwf	(readAvgDistance@fullval),f
  4470  0B3E  1803               	skipnc
  4471  0B3F  0AB1               	incf	(readAvgDistance@fullval+1),f
  4472  0B40  0835               	movf	(readAvgDistance@tempIR+1),w
  4473  0B41  07B1               	addwf	(readAvgDistance@fullval+1),f
  4474                           	line	37
  4475                           ;infrared.c: 37: j++;
  4476  0B42  3001               	movlw	low(01h)
  4477  0B43  07B2               	addwf	(readAvgDistance@j),f
  4478  0B44  1803               	skipnc
  4479  0B45  0AB3               	incf	(readAvgDistance@j+1),f
  4480  0B46  3000               	movlw	high(01h)
  4481  0B47  07B3               	addwf	(readAvgDistance@j+1),f
  4482                           	line	38
  4483                           	
  4484  0B48                     l2986:	
  4485                           	line	31
  4486  0B48  3001               	movlw	low(01h)
  4487  0B49  07B6               	addwf	(readAvgDistance@i),f
  4488  0B4A  1803               	skipnc
  4489  0B4B  0AB7               	incf	(readAvgDistance@i+1),f
  4490  0B4C  3000               	movlw	high(01h)
  4491  0B4D  07B7               	addwf	(readAvgDistance@i+1),f
  4492                           	
  4493  0B4E                     l11273:	
  4494  0B4E  0837               	movf	(readAvgDistance@i+1),w
  4495  0B4F  3A80               	xorlw	80h
  4496  0B50  00FF               	movwf	btemp+1
  4497  0B51  3080               	movlw	(high(08h))^80h
  4498  0B52  027F               	subwf	btemp+1,w
  4499  0B53  1D03               	skipz
  4500  0B54  2B57               	goto	u5355
  4501  0B55  3008               	movlw	low(08h)
  4502  0B56  0236               	subwf	(readAvgDistance@i),w
  4503  0B57                     u5355:
  4504                           
  4505  0B57  1C03               	skipc
  4506  0B58  2B5A               	goto	u5351
  4507  0B59  2B5B               	goto	u5350
  4508  0B5A                     u5351:
  4509  0B5A  2B26               	goto	l11267
  4510  0B5B                     u5350:
  4511  0B5B  2B5C               	goto	l11275
  4512                           	
  4513  0B5C                     l2985:	
  4514                           	line	40
  4515                           	
  4516  0B5C                     l11275:	
  4517                           ;infrared.c: 38: }
  4518                           ;infrared.c: 39: }
  4519                           ;infrared.c: 40: adcVal = fullval / j;
  4520  0B5C  1283               	bcf	status, 5	;RP0=0, select bank0
  4521  0B5D  1303               	bcf	status, 6	;RP1=0, select bank0
  4522  0B5E  0833               	movf	(readAvgDistance@j+1),w
  4523  0B5F  01A7               	clrf	(?___lwdiv+1)
  4524  0B60  07A7               	addwf	(?___lwdiv+1)
  4525  0B61  0832               	movf	(readAvgDistance@j),w
  4526  0B62  01A6               	clrf	(?___lwdiv)
  4527  0B63  07A6               	addwf	(?___lwdiv)
  4528                           
  4529  0B64  0831               	movf	(readAvgDistance@fullval+1),w
  4530  0B65  01A9               	clrf	1+(?___lwdiv)+02h
  4531  0B66  07A9               	addwf	1+(?___lwdiv)+02h
  4532  0B67  0830               	movf	(readAvgDistance@fullval),w
  4533  0B68  01A8               	clrf	0+(?___lwdiv)+02h
  4534  0B69  07A8               	addwf	0+(?___lwdiv)+02h
  4535                           
  4536  0B6A  120A  158A  2154   	fcall	___lwdiv
              120A  158A         
  4537  0B6F  1283               	bcf	status, 5	;RP0=0, select bank0
  4538  0B70  1303               	bcf	status, 6	;RP1=0, select bank0
  4539  0B71  0827               	movf	(1+(?___lwdiv)),w
  4540  0B72  1683               	bsf	status, 5	;RP0=1, select bank1
  4541  0B73  1303               	bcf	status, 6	;RP1=0, select bank1
  4542  0B74  01B7               	clrf	(_adcVal+1)^080h	;volatile
  4543  0B75  07B7               	addwf	(_adcVal+1)^080h	;volatile
  4544  0B76  1283               	bcf	status, 5	;RP0=0, select bank0
  4545  0B77  1303               	bcf	status, 6	;RP1=0, select bank0
  4546  0B78  0826               	movf	(0+(?___lwdiv)),w
  4547  0B79  1683               	bsf	status, 5	;RP0=1, select bank1
  4548  0B7A  1303               	bcf	status, 6	;RP1=0, select bank1
  4549  0B7B  01B6               	clrf	(_adcVal)^080h	;volatile
  4550  0B7C  07B6               	addwf	(_adcVal)^080h	;volatile
  4551                           
  4552                           	line	41
  4553                           ;infrared.c: 41: ADCconvert();
  4554  0B7D  120A  118A  22C4   	fcall	_ADCconvert
              120A  158A         
  4555                           	line	42
  4556                           	
  4557  0B82                     l2987:	
  4558  0B82  0008               	return
  4559                           	opt stack 0
  4560                           GLOBAL	__end_of_readAvgDistance
  4561  0B83                     	__end_of_readAvgDistance:
  4562 ;; =============== function _readAvgDistance ends ============
  4563                           
  4564                           	signat	_readAvgDistance,88
  4565                           	global	_init
  4566                           psect	text1057,local,class=CODE,delta=2
  4567                           global __ptext1057
  4568  16A7                     __ptext1057:
  4569                           
  4570 ;; *************** function _init *****************
  4571 ;; Defined at:
  4572 ;;		line 134 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;		None
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;		None
  4577 ;; Return value:  Size  Location     Type
  4578 ;;		None               void
  4579 ;; Registers used:
  4580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4586 ;;      Params:         0       0       0       0       0
  4587 ;;      Locals:         0       0       0       0       0
  4588 ;;      Temps:          0       1       0       0       0
  4589 ;;      Totals:         0       1       0       0       0
  4590 ;;Total ram usage:        1 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    5
  4593 ;; This function calls:
  4594 ;;		_ser_init
  4595 ;;		_init_adc
  4596 ;;		_lcd_init
  4597 ;;		_robo_init
  4598 ;; This function is called by:
  4599 ;;		_main
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           psect	text1057
  4603                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4604                           	line	134
  4605                           	global	__size_of_init
  4606  002F                     	__size_of_init	equ	__end_of_init-_init
  4607                           	
  4608  16A7                     _init:	
  4609                           	opt	stack 2
  4610                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4611                           	line	135
  4612                           	
  4613  16A7                     l11235:	
  4614                           ;Main.c: 135: buttonPressed = 0;
  4615  16A7  01FD               	clrf	(_buttonPressed)	;volatile
  4616                           	line	137
  4617                           	
  4618  16A8                     l11237:	
  4619                           ;Main.c: 137: TRISB = 0b11111100;
  4620  16A8  30FC               	movlw	(0FCh)
  4621  16A9  1683               	bsf	status, 5	;RP0=1, select bank1
  4622  16AA  1303               	bcf	status, 6	;RP1=0, select bank1
  4623  16AB  0086               	movwf	(134)^080h	;volatile
  4624                           	line	138
  4625                           	
  4626  16AC                     l11239:	
  4627                           ;Main.c: 138: TRISC &= 0b10010000;
  4628  16AC  3090               	movlw	(090h)
  4629  16AD  1283               	bcf	status, 5	;RP0=0, select bank0
  4630  16AE  1303               	bcf	status, 6	;RP1=0, select bank0
  4631  16AF  00A3               	movwf	(??_init+0)+0
  4632  16B0  0823               	movf	(??_init+0)+0,w
  4633  16B1  1683               	bsf	status, 5	;RP0=1, select bank1
  4634  16B2  1303               	bcf	status, 6	;RP1=0, select bank1
  4635  16B3  0587               	andwf	(135)^080h,f	;volatile
  4636                           	line	141
  4637                           	
  4638  16B4                     l11241:	
  4639                           ;Main.c: 141: SSPSTAT = 0b01000000;
  4640  16B4  3040               	movlw	(040h)
  4641  16B5  0094               	movwf	(148)^080h	;volatile
  4642                           	line	142
  4643                           	
  4644  16B6                     l11243:	
  4645                           ;Main.c: 142: SSPCON = 0b10100001;
  4646  16B6  30A1               	movlw	(0A1h)
  4647  16B7  1283               	bcf	status, 5	;RP0=0, select bank0
  4648  16B8  1303               	bcf	status, 6	;RP1=0, select bank0
  4649  16B9  0094               	movwf	(20)	;volatile
  4650                           	line	145
  4651                           	
  4652  16BA                     l11245:	
  4653                           ;Main.c: 145: OPTION_REG = 0b00000100;
  4654  16BA  3004               	movlw	(04h)
  4655  16BB  1683               	bsf	status, 5	;RP0=1, select bank1
  4656  16BC  1303               	bcf	status, 6	;RP1=0, select bank1
  4657  16BD  0081               	movwf	(129)^080h	;volatile
  4658                           	line	148
  4659                           	
  4660  16BE                     l11247:	
  4661                           ;Main.c: 148: ser_init();
  4662  16BE  160A  118A  2548   	fcall	_ser_init
              160A  118A         
  4663                           	line	149
  4664                           	
  4665  16C3                     l11249:	
  4666                           ;Main.c: 149: init_adc();
  4667  16C3  160A  118A  24B3   	fcall	_init_adc
              160A  118A         
  4668                           	line	150
  4669                           	
  4670  16C8                     l11251:	
  4671                           ;Main.c: 150: lcd_init();
  4672  16C8  160A  118A  2572   	fcall	_lcd_init
              160A  118A         
  4673                           	line	151
  4674                           	
  4675  16CD                     l11253:	
  4676                           ;Main.c: 151: robo_init();
  4677  16CD  120A  158A  20AE   	fcall	_robo_init
              160A  118A         
  4678                           	line	155
  4679                           	
  4680  16D2                     l11255:	
  4681                           ;Main.c: 155: TMR0IE = 1;
  4682  16D2  168B               	bsf	(93/8),(93)&7
  4683                           	line	157
  4684                           	
  4685  16D3                     l11257:	
  4686                           ;Main.c: 157: PEIE=1;
  4687  16D3  170B               	bsf	(94/8),(94)&7
  4688                           	line	159
  4689                           	
  4690  16D4                     l11259:	
  4691                           ;Main.c: 159: (GIE = 1);
  4692  16D4  178B               	bsf	(95/8),(95)&7
  4693                           	line	160
  4694                           	
  4695  16D5                     l2217:	
  4696  16D5  0008               	return
  4697                           	opt stack 0
  4698                           GLOBAL	__end_of_init
  4699  16D6                     	__end_of_init:
  4700 ;; =============== function _init ends ============
  4701                           
  4702                           	signat	_init,88
  4703                           	global	_readDistance
  4704                           psect	text1058,local,class=CODE,delta=2
  4705                           global __ptext1058
  4706  14C9                     __ptext1058:
  4707                           
  4708 ;; *************** function _readDistance *****************
  4709 ;; Defined at:
  4710 ;;		line 47 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  readVal         2   12[BANK0 ] unsigned int 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  2    8[BANK0 ] unsigned int 
  4717 ;; Registers used:
  4718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4724 ;;      Params:         0       2       0       0       0
  4725 ;;      Locals:         0       2       0       0       0
  4726 ;;      Temps:          0       2       0       0       0
  4727 ;;      Totals:         0       6       0       0       0
  4728 ;;Total ram usage:        6 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    5
  4731 ;; This function calls:
  4732 ;;		_adc_read_channel
  4733 ;; This function is called by:
  4734 ;;		_readAvgDistance
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           psect	text1058
  4738                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4739                           	line	47
  4740                           	global	__size_of_readDistance
  4741  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  4742                           	
  4743  14C9                     _readDistance:	
  4744                           	opt	stack 0
  4745                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4746                           	line	50
  4747                           	
  4748  14C9                     l11229:	
  4749                           ;infrared.c: 48: unsigned int readVal;
  4750                           ;infrared.c: 50: readVal = adc_read_channel(0);
  4751  14C9  3000               	movlw	(0)
  4752  14CA  160A  118A  273B   	fcall	_adc_read_channel
              160A  118A         
  4753  14CF  1283               	bcf	status, 5	;RP0=0, select bank0
  4754  14D0  1303               	bcf	status, 6	;RP1=0, select bank0
  4755  14D1  00AA               	movwf	(??_readDistance+0)+0
  4756  14D2  01AB               	clrf	(??_readDistance+0)+0+1
  4757  14D3  082A               	movf	0+(??_readDistance+0)+0,w
  4758  14D4  00AC               	movwf	(readDistance@readVal)
  4759  14D5  082B               	movf	1+(??_readDistance+0)+0,w
  4760  14D6  00AD               	movwf	(readDistance@readVal+1)
  4761                           	line	52
  4762                           	
  4763  14D7                     l11231:	
  4764                           ;infrared.c: 52: return readVal;
  4765  14D7  082D               	movf	(readDistance@readVal+1),w
  4766  14D8  01A9               	clrf	(?_readDistance+1)
  4767  14D9  07A9               	addwf	(?_readDistance+1)
  4768  14DA  082C               	movf	(readDistance@readVal),w
  4769  14DB  01A8               	clrf	(?_readDistance)
  4770  14DC  07A8               	addwf	(?_readDistance)
  4771                           
  4772  14DD  2CDE               	goto	l2990
  4773                           	
  4774  14DE                     l11233:	
  4775                           	line	53
  4776                           	
  4777  14DE                     l2990:	
  4778  14DE  0008               	return
  4779                           	opt stack 0
  4780                           GLOBAL	__end_of_readDistance
  4781  14DF                     	__end_of_readDistance:
  4782 ;; =============== function _readDistance ends ============
  4783                           
  4784                           	signat	_readDistance,90
  4785                           	global	_robot_read
  4786                           psect	text1059,local,class=CODE,delta=2
  4787                           global __ptext1059
  4788  09F4                     __ptext1059:
  4789                           
  4790 ;; *************** function _robot_read *****************
  4791 ;; Defined at:
  4792 ;;		line 36 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;		None               void
  4799 ;; Registers used:
  4800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0
  4808 ;;      Temps:          0       2       0       0       0
  4809 ;;      Totals:         0       2       0       0       0
  4810 ;;Total ram usage:        2 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    5
  4813 ;; This function calls:
  4814 ;;		_ser_putch
  4815 ;;		_ser_getch
  4816 ;; This function is called by:
  4817 ;;		_main
  4818 ;;		_robotMoveSpeed
  4819 ;;		_robotMove
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           psect	text1059
  4823                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4824                           	line	36
  4825                           	global	__size_of_robot_read
  4826  0053                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  4827                           	
  4828  09F4                     _robot_read:	
  4829                           	opt	stack 1
  4830                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4831                           	line	37
  4832                           	
  4833  09F4                     l11215:	
  4834                           ;robot.c: 37: ser_putch(142);
  4835  09F4  308E               	movlw	(08Eh)
  4836  09F5  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  4837                           	line	38
  4838                           ;robot.c: 38: ser_putch(7);
  4839  09FA  3007               	movlw	(07h)
  4840  09FB  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  4841                           	line	39
  4842                           	
  4843  0A00                     l11217:	
  4844                           ;robot.c: 39: _delay((unsigned long)((5)*(20000000/4000.0)));
  4845                           	opt asmopt_off
  4846  0A00  3021               movlw	33
  4847  0A01  1283               	bcf	status, 5	;RP0=0, select bank0
  4848  0A02  1303               	bcf	status, 6	;RP1=0, select bank0
  4849  0A03  00A3               movwf	((??_robot_read+0)+0+1),f
  4850  0A04  3076               	movlw	118
  4851  0A05  00A2               movwf	((??_robot_read+0)+0),f
  4852  0A06                     u5687:
  4853  0A06  0BA2               	decfsz	((??_robot_read+0)+0),f
  4854  0A07  2A06               	goto	u5687
  4855  0A08  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4856  0A09  2A06               	goto	u5687
  4857  0A0A  0064               	clrwdt
  4858                           opt asmopt_on
  4859                           
  4860                           	line	40
  4861                           	
  4862  0A0B                     l11219:	
  4863                           ;robot.c: 40: BumpSensors = ser_getch();
  4864  0A0B  160A  118A  25C9   	fcall	_ser_getch
              120A  158A         
  4865  0A10  1283               	bcf	status, 5	;RP0=0, select bank0
  4866  0A11  1303               	bcf	status, 6	;RP1=0, select bank0
  4867  0A12  00A2               	movwf	(??_robot_read+0)+0
  4868  0A13  0822               	movf	(??_robot_read+0)+0,w
  4869  0A14  1683               	bsf	status, 5	;RP0=1, select bank1
  4870  0A15  1303               	bcf	status, 6	;RP1=0, select bank1
  4871  0A16  00C4               	movwf	(_BumpSensors)^080h	;volatile
  4872                           	line	41
  4873                           	
  4874  0A17                     l11221:	
  4875                           ;robot.c: 41: ser_putch(142);
  4876  0A17  308E               	movlw	(08Eh)
  4877  0A18  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  4878                           	line	42
  4879                           	
  4880  0A1D                     l11223:	
  4881                           ;robot.c: 42: ser_putch(19);
  4882  0A1D  3013               	movlw	(013h)
  4883  0A1E  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  4884                           	line	43
  4885                           ;robot.c: 43: _delay((unsigned long)((5)*(20000000/4000.0)));
  4886                           	opt asmopt_off
  4887  0A23  3021               movlw	33
  4888  0A24  1283               	bcf	status, 5	;RP0=0, select bank0
  4889  0A25  1303               	bcf	status, 6	;RP1=0, select bank0
  4890  0A26  00A3               movwf	((??_robot_read+0)+0+1),f
  4891  0A27  3076               	movlw	118
  4892  0A28  00A2               movwf	((??_robot_read+0)+0),f
  4893  0A29                     u5697:
  4894  0A29  0BA2               	decfsz	((??_robot_read+0)+0),f
  4895  0A2A  2A29               	goto	u5697
  4896  0A2B  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4897  0A2C  2A29               	goto	u5697
  4898  0A2D  0064               	clrwdt
  4899                           opt asmopt_on
  4900                           
  4901                           	line	44
  4902                           	
  4903  0A2E                     l11225:	
  4904                           ;robot.c: 44: DistHighByte = ser_getch();
  4905  0A2E  160A  118A  25C9   	fcall	_ser_getch
              120A  158A         
  4906  0A33  1283               	bcf	status, 5	;RP0=0, select bank0
  4907  0A34  1303               	bcf	status, 6	;RP1=0, select bank0
  4908  0A35  00A2               	movwf	(??_robot_read+0)+0
  4909  0A36  0822               	movf	(??_robot_read+0)+0,w
  4910  0A37  1683               	bsf	status, 5	;RP0=1, select bank1
  4911  0A38  1303               	bcf	status, 6	;RP1=0, select bank1
  4912  0A39  00C6               	movwf	(_DistHighByte)^080h	;volatile
  4913                           	line	45
  4914                           	
  4915  0A3A                     l11227:	
  4916                           ;robot.c: 45: DistLowByte = ser_getch();
  4917  0A3A  160A  118A  25C9   	fcall	_ser_getch
              120A  158A         
  4918  0A3F  1283               	bcf	status, 5	;RP0=0, select bank0
  4919  0A40  1303               	bcf	status, 6	;RP1=0, select bank0
  4920  0A41  00A2               	movwf	(??_robot_read+0)+0
  4921  0A42  0822               	movf	(??_robot_read+0)+0,w
  4922  0A43  1683               	bsf	status, 5	;RP0=1, select bank1
  4923  0A44  1303               	bcf	status, 6	;RP1=0, select bank1
  4924  0A45  00C7               	movwf	(_DistLowByte)^080h	;volatile
  4925                           	line	47
  4926                           	
  4927  0A46                     l5987:	
  4928  0A46  0008               	return
  4929                           	opt stack 0
  4930                           GLOBAL	__end_of_robot_read
  4931  0A47                     	__end_of_robot_read:
  4932 ;; =============== function _robot_read ends ============
  4933                           
  4934                           	signat	_robot_read,88
  4935                           	global	_lcd_init
  4936                           psect	text1060,local,class=CODE,delta=2
  4937                           global __ptext1060
  4938  1572                     __ptext1060:
  4939                           
  4940 ;; *************** function _lcd_init *****************
  4941 ;; Defined at:
  4942 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;		None               void
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4956 ;;      Params:         0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0
  4959 ;;      Totals:         0       0       0       0       0
  4960 ;;Total ram usage:        0 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    4
  4963 ;; This function calls:
  4964 ;;		_lcd_write_control
  4965 ;; This function is called by:
  4966 ;;		_init
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           psect	text1060
  4970                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4971                           	line	101
  4972                           	global	__size_of_lcd_init
  4973  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4974                           	
  4975  1572                     _lcd_init:	
  4976                           	opt	stack 2
  4977                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4978                           	line	105
  4979                           	
  4980  1572                     l11195:	
  4981                           ;lcd.c: 105: ADCON1 = 0b00000010;
  4982  1572  3002               	movlw	(02h)
  4983  1573  1683               	bsf	status, 5	;RP0=1, select bank1
  4984  1574  1303               	bcf	status, 6	;RP1=0, select bank1
  4985  1575  009F               	movwf	(159)^080h	;volatile
  4986                           	line	108
  4987                           	
  4988  1576                     l11197:	
  4989                           ;lcd.c: 108: PORTD = 0;
  4990  1576  1283               	bcf	status, 5	;RP0=0, select bank0
  4991  1577  1303               	bcf	status, 6	;RP1=0, select bank0
  4992  1578  0188               	clrf	(8)	;volatile
  4993                           	line	109
  4994                           	
  4995  1579                     l11199:	
  4996                           ;lcd.c: 109: PORTE = 0;
  4997  1579  0189               	clrf	(9)	;volatile
  4998                           	line	111
  4999                           	
  5000  157A                     l11201:	
  5001                           ;lcd.c: 111: TRISD = 0b00000000;
  5002  157A  1683               	bsf	status, 5	;RP0=1, select bank1
  5003  157B  1303               	bcf	status, 6	;RP1=0, select bank1
  5004  157C  0188               	clrf	(136)^080h	;volatile
  5005                           	line	112
  5006                           	
  5007  157D                     l11203:	
  5008                           ;lcd.c: 112: TRISE = 0b00000000;
  5009  157D  0189               	clrf	(137)^080h	;volatile
  5010                           	line	115
  5011                           	
  5012  157E                     l11205:	
  5013                           ;lcd.c: 115: lcd_write_control(0b00000001);
  5014  157E  3001               	movlw	(01h)
  5015  157F  160A  118A  249F   	fcall	_lcd_write_control
              160A  118A         
  5016                           	line	116
  5017                           	
  5018  1584                     l11207:	
  5019                           ;lcd.c: 116: lcd_write_control(0b00111000);
  5020  1584  3038               	movlw	(038h)
  5021  1585  160A  118A  249F   	fcall	_lcd_write_control
              160A  118A         
  5022                           	line	117
  5023                           	
  5024  158A                     l11209:	
  5025                           ;lcd.c: 117: lcd_write_control(0b00001100);
  5026  158A  300C               	movlw	(0Ch)
  5027  158B  160A  118A  249F   	fcall	_lcd_write_control
              160A  118A         
  5028                           	line	118
  5029                           	
  5030  1590                     l11211:	
  5031                           ;lcd.c: 118: lcd_write_control(0b00000110);
  5032  1590  3006               	movlw	(06h)
  5033  1591  160A  118A  249F   	fcall	_lcd_write_control
              160A  118A         
  5034                           	line	119
  5035                           	
  5036  1596                     l11213:	
  5037                           ;lcd.c: 119: lcd_write_control(0b00000010);
  5038  1596  3002               	movlw	(02h)
  5039  1597  160A  118A  249F   	fcall	_lcd_write_control
              160A  118A         
  5040                           	line	121
  5041                           	
  5042  159C                     l1429:	
  5043  159C  0008               	return
  5044                           	opt stack 0
  5045                           GLOBAL	__end_of_lcd_init
  5046  159D                     	__end_of_lcd_init:
  5047 ;; =============== function _lcd_init ends ============
  5048                           
  5049                           	signat	_lcd_init,88
  5050                           	global	_lcd_write_string
  5051                           psect	text1061,local,class=CODE,delta=2
  5052                           global __ptext1061
  5053  1621                     __ptext1061:
  5054                           
  5055 ;; *************** function _lcd_write_string *****************
  5056 ;; Defined at:
  5057 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  s               2    7[BANK0 ] PTR unsigned char 
  5060 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  5061 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@LCDOutput(16), STR_12(4), 
  5062 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  5063 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  5064 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;		None               void
  5069 ;; Registers used:
  5070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5076 ;;      Params:         0       2       0       0       0
  5077 ;;      Locals:         0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0
  5079 ;;      Totals:         0       2       0       0       0
  5080 ;;Total ram usage:        2 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    4
  5083 ;; This function calls:
  5084 ;;		_lcd_write_data
  5085 ;; This function is called by:
  5086 ;;		_UpdateDisplay
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           psect	text1061
  5090                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5091                           	line	48
  5092                           	global	__size_of_lcd_write_string
  5093  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5094                           	
  5095  1621                     _lcd_write_string:	
  5096                           	opt	stack 1
  5097                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5098                           	line	50
  5099                           	
  5100  1621                     l11187:	
  5101                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5102  1621  2E3B               	goto	l11193
  5103                           	
  5104  1622                     l1409:	
  5105                           	
  5106  1622                     l11189:	
  5107  1622  1283               	bcf	status, 5	;RP0=0, select bank0
  5108  1623  1303               	bcf	status, 6	;RP1=0, select bank0
  5109  1624  0828               	movf	(lcd_write_string@s+1),w
  5110  1625  00FF               	movwf	btemp+1
  5111  1626  0827               	movf	(lcd_write_string@s),w
  5112  1627  0084               	movwf	fsr0
  5113  1628  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5114  162D  160A  118A  2465   	fcall	_lcd_write_data
              160A  118A         
  5115                           	
  5116  1632                     l11191:	
  5117  1632  3001               	movlw	low(01h)
  5118  1633  1283               	bcf	status, 5	;RP0=0, select bank0
  5119  1634  1303               	bcf	status, 6	;RP1=0, select bank0
  5120  1635  07A7               	addwf	(lcd_write_string@s),f
  5121  1636  1803               	skipnc
  5122  1637  0AA8               	incf	(lcd_write_string@s+1),f
  5123  1638  3000               	movlw	high(01h)
  5124  1639  07A8               	addwf	(lcd_write_string@s+1),f
  5125  163A  2E3B               	goto	l11193
  5126                           	
  5127  163B                     l1408:	
  5128                           	
  5129  163B                     l11193:	
  5130  163B  1283               	bcf	status, 5	;RP0=0, select bank0
  5131  163C  1303               	bcf	status, 6	;RP1=0, select bank0
  5132  163D  0828               	movf	(lcd_write_string@s+1),w
  5133  163E  00FF               	movwf	btemp+1
  5134  163F  0827               	movf	(lcd_write_string@s),w
  5135  1640  0084               	movwf	fsr0
  5136  1641  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5137  1646  3800               	iorlw	0
  5138  1647  1D03               	skipz
  5139  1648  2E4A               	goto	u5321
  5140  1649  2E4B               	goto	u5320
  5141  164A                     u5321:
  5142  164A  2E22               	goto	l11189
  5143  164B                     u5320:
  5144  164B  2E4C               	goto	l1411
  5145                           	
  5146  164C                     l1410:	
  5147                           	line	51
  5148                           	
  5149  164C                     l1411:	
  5150  164C  0008               	return
  5151                           	opt stack 0
  5152                           GLOBAL	__end_of_lcd_write_string
  5153  164D                     	__end_of_lcd_write_string:
  5154 ;; =============== function _lcd_write_string ends ============
  5155                           
  5156                           	signat	_lcd_write_string,4216
  5157                           	global	_lcd_set_cursor
  5158                           psect	text1062,local,class=CODE,delta=2
  5159                           global __ptext1062
  5160  144D                     __ptext1062:
  5161                           
  5162 ;; *************** function _lcd_set_cursor *****************
  5163 ;; Defined at:
  5164 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  address         1    wreg     unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  address         1    3[BANK0 ] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;		None               void
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0, pclath, cstack
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5178 ;;      Params:         0       0       0       0       0
  5179 ;;      Locals:         0       1       0       0       0
  5180 ;;      Temps:          0       0       0       0       0
  5181 ;;      Totals:         0       1       0       0       0
  5182 ;;Total ram usage:        1 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    4
  5185 ;; This function calls:
  5186 ;;		_lcd_write_control
  5187 ;; This function is called by:
  5188 ;;		_UpdateDisplay
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           psect	text1062
  5192                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5193                           	line	42
  5194                           	global	__size_of_lcd_set_cursor
  5195  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5196                           	
  5197  144D                     _lcd_set_cursor:	
  5198                           	opt	stack 1
  5199                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5200                           ;lcd_set_cursor@address stored from wreg
  5201  144D  1283               	bcf	status, 5	;RP0=0, select bank0
  5202  144E  1303               	bcf	status, 6	;RP1=0, select bank0
  5203  144F  00A3               	movwf	(lcd_set_cursor@address)
  5204                           	line	43
  5205                           	
  5206  1450                     l11183:	
  5207                           ;lcd.c: 43: address |= 0b10000000;
  5208  1450  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5209                           	line	44
  5210                           	
  5211  1451                     l11185:	
  5212                           ;lcd.c: 44: lcd_write_control(address);
  5213  1451  0823               	movf	(lcd_set_cursor@address),w
  5214  1452  160A  118A  249F   	fcall	_lcd_write_control
              160A  118A         
  5215                           	line	45
  5216                           	
  5217  1457                     l1405:	
  5218  1457  0008               	return
  5219                           	opt stack 0
  5220                           GLOBAL	__end_of_lcd_set_cursor
  5221  1458                     	__end_of_lcd_set_cursor:
  5222 ;; =============== function _lcd_set_cursor ends ============
  5223                           
  5224                           	signat	_lcd_set_cursor,4216
  5225                           	global	___awtoft
  5226                           psect	text1063,local,class=CODE,delta=2
  5227                           global __ptext1063
  5228  15F5                     __ptext1063:
  5229                           
  5230 ;; *************** function ___awtoft *****************
  5231 ;; Defined at:
  5232 ;;		line 33 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  c               2   22[BANK0 ] int 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  sign            1   27[BANK0 ] unsigned char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  3   22[BANK0 ] float 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0, pclath, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5246 ;;      Params:         0       3       0       0       0
  5247 ;;      Locals:         0       1       0       0       0
  5248 ;;      Temps:          0       2       0       0       0
  5249 ;;      Totals:         0       6       0       0       0
  5250 ;;Total ram usage:        6 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    4
  5253 ;; This function calls:
  5254 ;;		___ftpack
  5255 ;; This function is called by:
  5256 ;;		_main
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           psect	text1063
  5260                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5261                           	line	33
  5262                           	global	__size_of___awtoft
  5263  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  5264                           	
  5265  15F5                     ___awtoft:	
  5266                           	opt	stack 3
  5267                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5268                           	line	36
  5269                           	
  5270  15F5                     l11175:	
  5271  15F5  1283               	bcf	status, 5	;RP0=0, select bank0
  5272  15F6  1303               	bcf	status, 6	;RP1=0, select bank0
  5273  15F7  01BB               	clrf	(___awtoft@sign)
  5274                           	line	37
  5275  15F8  1FB7               	btfss	(___awtoft@c+1),7
  5276  15F9  2DFB               	goto	u5311
  5277  15FA  2DFC               	goto	u5310
  5278  15FB                     u5311:
  5279  15FB  2E05               	goto	l11179
  5280  15FC                     u5310:
  5281                           	line	38
  5282                           	
  5283  15FC                     l11177:	
  5284  15FC  09B6               	comf	(___awtoft@c),f
  5285  15FD  09B7               	comf	(___awtoft@c+1),f
  5286  15FE  0AB6               	incf	(___awtoft@c),f
  5287  15FF  1903               	skipnz
  5288  1600  0AB7               	incf	(___awtoft@c+1),f
  5289                           	line	39
  5290  1601  01BB               	clrf	(___awtoft@sign)
  5291  1602  1403               	bsf	status,0
  5292  1603  0DBB               	rlf	(___awtoft@sign),f
  5293  1604  2E05               	goto	l11179
  5294                           	line	40
  5295                           	
  5296  1605                     l7595:	
  5297                           	line	41
  5298                           	
  5299  1605                     l11179:	
  5300  1605  0836               	movf	(___awtoft@c),w
  5301  1606  00A0               	movwf	(?___ftpack)
  5302  1607  0837               	movf	(___awtoft@c+1),w
  5303  1608  00A1               	movwf	(?___ftpack+1)
  5304  1609  01A2               	clrf	(?___ftpack+2)
  5305  160A  308E               	movlw	(08Eh)
  5306  160B  00B9               	movwf	(??___awtoft+0)+0
  5307  160C  0839               	movf	(??___awtoft+0)+0,w
  5308  160D  00A3               	movwf	0+(?___ftpack)+03h
  5309  160E  083B               	movf	(___awtoft@sign),w
  5310  160F  00BA               	movwf	(??___awtoft+1)+0
  5311  1610  083A               	movf	(??___awtoft+1)+0,w
  5312  1611  00A4               	movwf	0+(?___ftpack)+04h
  5313  1612  120A  158A  2383   	fcall	___ftpack
              160A  118A         
  5314  1617  1283               	bcf	status, 5	;RP0=0, select bank0
  5315  1618  1303               	bcf	status, 6	;RP1=0, select bank0
  5316  1619  0820               	movf	(0+(?___ftpack)),w
  5317  161A  00B6               	movwf	(?___awtoft)
  5318  161B  0821               	movf	(1+(?___ftpack)),w
  5319  161C  00B7               	movwf	(?___awtoft+1)
  5320  161D  0822               	movf	(2+(?___ftpack)),w
  5321  161E  00B8               	movwf	(?___awtoft+2)
  5322  161F  2E20               	goto	l7596
  5323                           	
  5324  1620                     l11181:	
  5325                           	line	42
  5326                           	
  5327  1620                     l7596:	
  5328  1620  0008               	return
  5329                           	opt stack 0
  5330                           GLOBAL	__end_of___awtoft
  5331  1621                     	__end_of___awtoft:
  5332 ;; =============== function ___awtoft ends ============
  5333                           
  5334                           	signat	___awtoft,4219
  5335                           	global	___ftmul
  5336                           psect	text1064,local,class=CODE,delta=2
  5337                           global __ptext1064
  5338  0F12                     __ptext1064:
  5339                           
  5340 ;; *************** function ___ftmul *****************
  5341 ;; Defined at:
  5342 ;;		line 52 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  f1              3   28[BANK0 ] float 
  5345 ;;  f2              3   31[BANK0 ] float 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  5348 ;;  sign            1   43[BANK0 ] unsigned char 
  5349 ;;  cntr            1   42[BANK0 ] unsigned char 
  5350 ;;  exp             1   38[BANK0 ] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  3   28[BANK0 ] float 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5360 ;;      Params:         0       6       0       0       0
  5361 ;;      Locals:         0       6       0       0       0
  5362 ;;      Temps:          0       4       0       0       0
  5363 ;;      Totals:         0      16       0       0       0
  5364 ;;Total ram usage:       16 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    4
  5367 ;; This function calls:
  5368 ;;		___ftpack
  5369 ;; This function is called by:
  5370 ;;		_main
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           psect	text1064
  5374                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5375                           	line	52
  5376                           	global	__size_of___ftmul
  5377  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5378                           	
  5379  0F12                     ___ftmul:	
  5380                           	opt	stack 3
  5381                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5382                           	line	56
  5383                           	
  5384  0F12                     l11125:	
  5385  0F12  1283               	bcf	status, 5	;RP0=0, select bank0
  5386  0F13  1303               	bcf	status, 6	;RP1=0, select bank0
  5387  0F14  083C               	movf	(___ftmul@f1),w
  5388  0F15  00C2               	movwf	((??___ftmul+0)+0)
  5389  0F16  083D               	movf	(___ftmul@f1+1),w
  5390  0F17  00C3               	movwf	((??___ftmul+0)+0+1)
  5391  0F18  083E               	movf	(___ftmul@f1+2),w
  5392  0F19  00C4               	movwf	((??___ftmul+0)+0+2)
  5393  0F1A  1003               	clrc
  5394  0F1B  0D43               	rlf	(??___ftmul+0)+1,w
  5395  0F1C  0D44               	rlf	(??___ftmul+0)+2,w
  5396  0F1D  00C5               	movwf	(??___ftmul+3)+0
  5397  0F1E  0845               	movf	(??___ftmul+3)+0,w
  5398  0F1F  00C6               	movwf	(___ftmul@exp)
  5399  0F20  08C6               	movf	((___ftmul@exp)),f
  5400  0F21  1D03               	skipz
  5401  0F22  2F24               	goto	u5171
  5402  0F23  2F25               	goto	u5170
  5403  0F24                     u5171:
  5404  0F24  2F2D               	goto	l11131
  5405  0F25                     u5170:
  5406                           	line	57
  5407                           	
  5408  0F25                     l11127:	
  5409  0F25  3000               	movlw	0x0
  5410  0F26  00BC               	movwf	(?___ftmul)
  5411  0F27  3000               	movlw	0x0
  5412  0F28  00BD               	movwf	(?___ftmul+1)
  5413  0F29  3000               	movlw	0x0
  5414  0F2A  00BE               	movwf	(?___ftmul+2)
  5415  0F2B  2FFF               	goto	l7558
  5416                           	
  5417  0F2C                     l11129:	
  5418  0F2C  2FFF               	goto	l7558
  5419                           	
  5420  0F2D                     l7557:	
  5421                           	line	58
  5422                           	
  5423  0F2D                     l11131:	
  5424  0F2D  083F               	movf	(___ftmul@f2),w
  5425  0F2E  00C2               	movwf	((??___ftmul+0)+0)
  5426  0F2F  0840               	movf	(___ftmul@f2+1),w
  5427  0F30  00C3               	movwf	((??___ftmul+0)+0+1)
  5428  0F31  0841               	movf	(___ftmul@f2+2),w
  5429  0F32  00C4               	movwf	((??___ftmul+0)+0+2)
  5430  0F33  1003               	clrc
  5431  0F34  0D43               	rlf	(??___ftmul+0)+1,w
  5432  0F35  0D44               	rlf	(??___ftmul+0)+2,w
  5433  0F36  00C5               	movwf	(??___ftmul+3)+0
  5434  0F37  0845               	movf	(??___ftmul+3)+0,w
  5435  0F38  00CB               	movwf	(___ftmul@sign)
  5436  0F39  08CB               	movf	((___ftmul@sign)),f
  5437  0F3A  1D03               	skipz
  5438  0F3B  2F3D               	goto	u5181
  5439  0F3C  2F3E               	goto	u5180
  5440  0F3D                     u5181:
  5441  0F3D  2F46               	goto	l11137
  5442  0F3E                     u5180:
  5443                           	line	59
  5444                           	
  5445  0F3E                     l11133:	
  5446  0F3E  3000               	movlw	0x0
  5447  0F3F  00BC               	movwf	(?___ftmul)
  5448  0F40  3000               	movlw	0x0
  5449  0F41  00BD               	movwf	(?___ftmul+1)
  5450  0F42  3000               	movlw	0x0
  5451  0F43  00BE               	movwf	(?___ftmul+2)
  5452  0F44  2FFF               	goto	l7558
  5453                           	
  5454  0F45                     l11135:	
  5455  0F45  2FFF               	goto	l7558
  5456                           	
  5457  0F46                     l7559:	
  5458                           	line	60
  5459                           	
  5460  0F46                     l11137:	
  5461  0F46  084B               	movf	(___ftmul@sign),w
  5462  0F47  3E7B               	addlw	07Bh
  5463  0F48  00C2               	movwf	(??___ftmul+0)+0
  5464  0F49  0842               	movf	(??___ftmul+0)+0,w
  5465  0F4A  07C6               	addwf	(___ftmul@exp),f
  5466                           	line	61
  5467  0F4B  083C               	movf	(___ftmul@f1),w
  5468  0F4C  00C2               	movwf	((??___ftmul+0)+0)
  5469  0F4D  083D               	movf	(___ftmul@f1+1),w
  5470  0F4E  00C3               	movwf	((??___ftmul+0)+0+1)
  5471  0F4F  083E               	movf	(___ftmul@f1+2),w
  5472  0F50  00C4               	movwf	((??___ftmul+0)+0+2)
  5473  0F51  3010               	movlw	010h
  5474  0F52                     u5195:
  5475  0F52  1003               	clrc
  5476  0F53  0CC4               	rrf	(??___ftmul+0)+2,f
  5477  0F54  0CC3               	rrf	(??___ftmul+0)+1,f
  5478  0F55  0CC2               	rrf	(??___ftmul+0)+0,f
  5479  0F56                     u5190:
  5480  0F56  3EFF               	addlw	-1
  5481  0F57  1D03               	skipz
  5482  0F58  2F52               	goto	u5195
  5483  0F59  0842               	movf	0+(??___ftmul+0)+0,w
  5484  0F5A  00C5               	movwf	(??___ftmul+3)+0
  5485  0F5B  0845               	movf	(??___ftmul+3)+0,w
  5486  0F5C  00CB               	movwf	(___ftmul@sign)
  5487                           	line	62
  5488  0F5D  083F               	movf	(___ftmul@f2),w
  5489  0F5E  00C2               	movwf	((??___ftmul+0)+0)
  5490  0F5F  0840               	movf	(___ftmul@f2+1),w
  5491  0F60  00C3               	movwf	((??___ftmul+0)+0+1)
  5492  0F61  0841               	movf	(___ftmul@f2+2),w
  5493  0F62  00C4               	movwf	((??___ftmul+0)+0+2)
  5494  0F63  3010               	movlw	010h
  5495  0F64                     u5205:
  5496  0F64  1003               	clrc
  5497  0F65  0CC4               	rrf	(??___ftmul+0)+2,f
  5498  0F66  0CC3               	rrf	(??___ftmul+0)+1,f
  5499  0F67  0CC2               	rrf	(??___ftmul+0)+0,f
  5500  0F68                     u5200:
  5501  0F68  3EFF               	addlw	-1
  5502  0F69  1D03               	skipz
  5503  0F6A  2F64               	goto	u5205
  5504  0F6B  0842               	movf	0+(??___ftmul+0)+0,w
  5505  0F6C  00C5               	movwf	(??___ftmul+3)+0
  5506  0F6D  0845               	movf	(??___ftmul+3)+0,w
  5507  0F6E  06CB               	xorwf	(___ftmul@sign),f
  5508                           	line	63
  5509  0F6F  3080               	movlw	(080h)
  5510  0F70  00C2               	movwf	(??___ftmul+0)+0
  5511  0F71  0842               	movf	(??___ftmul+0)+0,w
  5512  0F72  05CB               	andwf	(___ftmul@sign),f
  5513                           	line	64
  5514                           	
  5515  0F73                     l11139:	
  5516  0F73  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5517                           	line	66
  5518                           	
  5519  0F74                     l11141:	
  5520  0F74  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5521                           	line	67
  5522                           	
  5523  0F75                     l11143:	
  5524  0F75  30FF               	movlw	0FFh
  5525  0F76  05BF               	andwf	(___ftmul@f2),f
  5526  0F77  30FF               	movlw	0FFh
  5527  0F78  05C0               	andwf	(___ftmul@f2+1),f
  5528  0F79  3000               	movlw	0
  5529  0F7A  05C1               	andwf	(___ftmul@f2+2),f
  5530                           	line	68
  5531                           	
  5532  0F7B                     l11145:	
  5533  0F7B  3000               	movlw	0
  5534  0F7C  00C7               	movwf	(___ftmul@f3_as_product)
  5535  0F7D  3000               	movlw	0
  5536  0F7E  00C8               	movwf	(___ftmul@f3_as_product+1)
  5537  0F7F  3000               	movlw	0
  5538  0F80  00C9               	movwf	(___ftmul@f3_as_product+2)
  5539                           	line	69
  5540                           	
  5541  0F81                     l11147:	
  5542  0F81  3007               	movlw	(07h)
  5543  0F82  00C2               	movwf	(??___ftmul+0)+0
  5544  0F83  0842               	movf	(??___ftmul+0)+0,w
  5545  0F84  00CA               	movwf	(___ftmul@cntr)
  5546  0F85  2F86               	goto	l11149
  5547                           	line	70
  5548                           	
  5549  0F86                     l7560:	
  5550                           	line	71
  5551                           	
  5552  0F86                     l11149:	
  5553  0F86  1C3C               	btfss	(___ftmul@f1),(0)&7
  5554  0F87  2F89               	goto	u5211
  5555  0F88  2F8A               	goto	u5210
  5556  0F89                     u5211:
  5557  0F89  2F9B               	goto	l11153
  5558  0F8A                     u5210:
  5559                           	line	72
  5560                           	
  5561  0F8A                     l11151:	
  5562  0F8A  083F               	movf	(___ftmul@f2),w
  5563  0F8B  07C7               	addwf	(___ftmul@f3_as_product),f
  5564  0F8C  0840               	movf	(___ftmul@f2+1),w
  5565  0F8D  1103               	clrz
  5566  0F8E  1803               	skipnc
  5567  0F8F  0A40               	incf	(___ftmul@f2+1),w
  5568  0F90  1903               	skipnz
  5569  0F91  2F93               	goto	u5221
  5570  0F92  07C8               	addwf	(___ftmul@f3_as_product+1),f
  5571  0F93                     u5221:
  5572  0F93  0841               	movf	(___ftmul@f2+2),w
  5573  0F94  1103               	clrz
  5574  0F95  1803               	skipnc
  5575  0F96  0A41               	incf	(___ftmul@f2+2),w
  5576  0F97  1903               	skipnz
  5577  0F98  2F9A               	goto	u5222
  5578  0F99  07C9               	addwf	(___ftmul@f3_as_product+2),f
  5579  0F9A                     u5222:
  5580                           
  5581  0F9A  2F9B               	goto	l11153
  5582                           	
  5583  0F9B                     l7561:	
  5584                           	line	73
  5585                           	
  5586  0F9B                     l11153:	
  5587  0F9B  3001               	movlw	01h
  5588  0F9C                     u5235:
  5589  0F9C  1003               	clrc
  5590  0F9D  0CBE               	rrf	(___ftmul@f1+2),f
  5591  0F9E  0CBD               	rrf	(___ftmul@f1+1),f
  5592  0F9F  0CBC               	rrf	(___ftmul@f1),f
  5593  0FA0  3EFF               	addlw	-1
  5594  0FA1  1D03               	skipz
  5595  0FA2  2F9C               	goto	u5235
  5596                           
  5597                           	line	74
  5598                           	
  5599  0FA3                     l11155:	
  5600  0FA3  3001               	movlw	01h
  5601  0FA4                     u5245:
  5602  0FA4  1003               	clrc
  5603  0FA5  0DBF               	rlf	(___ftmul@f2),f
  5604  0FA6  0DC0               	rlf	(___ftmul@f2+1),f
  5605  0FA7  0DC1               	rlf	(___ftmul@f2+2),f
  5606  0FA8  3EFF               	addlw	-1
  5607  0FA9  1D03               	skipz
  5608  0FAA  2FA4               	goto	u5245
  5609                           	line	75
  5610                           	
  5611  0FAB                     l11157:	
  5612  0FAB  3001               	movlw	low(01h)
  5613  0FAC  02CA               	subwf	(___ftmul@cntr),f
  5614  0FAD  1D03               	btfss	status,2
  5615  0FAE  2FB0               	goto	u5251
  5616  0FAF  2FB1               	goto	u5250
  5617  0FB0                     u5251:
  5618  0FB0  2F86               	goto	l11149
  5619  0FB1                     u5250:
  5620  0FB1  2FB2               	goto	l11159
  5621                           	
  5622  0FB2                     l7562:	
  5623                           	line	76
  5624                           	
  5625  0FB2                     l11159:	
  5626  0FB2  3009               	movlw	(09h)
  5627  0FB3  00C2               	movwf	(??___ftmul+0)+0
  5628  0FB4  0842               	movf	(??___ftmul+0)+0,w
  5629  0FB5  00CA               	movwf	(___ftmul@cntr)
  5630  0FB6  2FB7               	goto	l11161
  5631                           	line	77
  5632                           	
  5633  0FB7                     l7563:	
  5634                           	line	78
  5635                           	
  5636  0FB7                     l11161:	
  5637  0FB7  1C3C               	btfss	(___ftmul@f1),(0)&7
  5638  0FB8  2FBA               	goto	u5261
  5639  0FB9  2FBB               	goto	u5260
  5640  0FBA                     u5261:
  5641  0FBA  2FCC               	goto	l11165
  5642  0FBB                     u5260:
  5643                           	line	79
  5644                           	
  5645  0FBB                     l11163:	
  5646  0FBB  083F               	movf	(___ftmul@f2),w
  5647  0FBC  07C7               	addwf	(___ftmul@f3_as_product),f
  5648  0FBD  0840               	movf	(___ftmul@f2+1),w
  5649  0FBE  1103               	clrz
  5650  0FBF  1803               	skipnc
  5651  0FC0  0A40               	incf	(___ftmul@f2+1),w
  5652  0FC1  1903               	skipnz
  5653  0FC2  2FC4               	goto	u5271
  5654  0FC3  07C8               	addwf	(___ftmul@f3_as_product+1),f
  5655  0FC4                     u5271:
  5656  0FC4  0841               	movf	(___ftmul@f2+2),w
  5657  0FC5  1103               	clrz
  5658  0FC6  1803               	skipnc
  5659  0FC7  0A41               	incf	(___ftmul@f2+2),w
  5660  0FC8  1903               	skipnz
  5661  0FC9  2FCB               	goto	u5272
  5662  0FCA  07C9               	addwf	(___ftmul@f3_as_product+2),f
  5663  0FCB                     u5272:
  5664                           
  5665  0FCB  2FCC               	goto	l11165
  5666                           	
  5667  0FCC                     l7564:	
  5668                           	line	80
  5669                           	
  5670  0FCC                     l11165:	
  5671  0FCC  3001               	movlw	01h
  5672  0FCD                     u5285:
  5673  0FCD  1003               	clrc
  5674  0FCE  0CBE               	rrf	(___ftmul@f1+2),f
  5675  0FCF  0CBD               	rrf	(___ftmul@f1+1),f
  5676  0FD0  0CBC               	rrf	(___ftmul@f1),f
  5677  0FD1  3EFF               	addlw	-1
  5678  0FD2  1D03               	skipz
  5679  0FD3  2FCD               	goto	u5285
  5680                           
  5681                           	line	81
  5682                           	
  5683  0FD4                     l11167:	
  5684  0FD4  3001               	movlw	01h
  5685  0FD5                     u5295:
  5686  0FD5  1003               	clrc
  5687  0FD6  0CC9               	rrf	(___ftmul@f3_as_product+2),f
  5688  0FD7  0CC8               	rrf	(___ftmul@f3_as_product+1),f
  5689  0FD8  0CC7               	rrf	(___ftmul@f3_as_product),f
  5690  0FD9  3EFF               	addlw	-1
  5691  0FDA  1D03               	skipz
  5692  0FDB  2FD5               	goto	u5295
  5693                           
  5694                           	line	82
  5695                           	
  5696  0FDC                     l11169:	
  5697  0FDC  3001               	movlw	low(01h)
  5698  0FDD  02CA               	subwf	(___ftmul@cntr),f
  5699  0FDE  1D03               	btfss	status,2
  5700  0FDF  2FE1               	goto	u5301
  5701  0FE0  2FE2               	goto	u5300
  5702  0FE1                     u5301:
  5703  0FE1  2FB7               	goto	l11161
  5704  0FE2                     u5300:
  5705  0FE2  2FE3               	goto	l11171
  5706                           	
  5707  0FE3                     l7565:	
  5708                           	line	83
  5709                           	
  5710  0FE3                     l11171:	
  5711  0FE3  0847               	movf	(___ftmul@f3_as_product),w
  5712  0FE4  00A0               	movwf	(?___ftpack)
  5713  0FE5  0848               	movf	(___ftmul@f3_as_product+1),w
  5714  0FE6  00A1               	movwf	(?___ftpack+1)
  5715  0FE7  0849               	movf	(___ftmul@f3_as_product+2),w
  5716  0FE8  00A2               	movwf	(?___ftpack+2)
  5717  0FE9  0846               	movf	(___ftmul@exp),w
  5718  0FEA  00C2               	movwf	(??___ftmul+0)+0
  5719  0FEB  0842               	movf	(??___ftmul+0)+0,w
  5720  0FEC  00A3               	movwf	0+(?___ftpack)+03h
  5721  0FED  084B               	movf	(___ftmul@sign),w
  5722  0FEE  00C3               	movwf	(??___ftmul+1)+0
  5723  0FEF  0843               	movf	(??___ftmul+1)+0,w
  5724  0FF0  00A4               	movwf	0+(?___ftpack)+04h
  5725  0FF1  120A  158A  2383   	fcall	___ftpack
              120A  158A         
  5726  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  5727  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  5728  0FF8  0820               	movf	(0+(?___ftpack)),w
  5729  0FF9  00BC               	movwf	(?___ftmul)
  5730  0FFA  0821               	movf	(1+(?___ftpack)),w
  5731  0FFB  00BD               	movwf	(?___ftmul+1)
  5732  0FFC  0822               	movf	(2+(?___ftpack)),w
  5733  0FFD  00BE               	movwf	(?___ftmul+2)
  5734  0FFE  2FFF               	goto	l7558
  5735                           	
  5736  0FFF                     l11173:	
  5737                           	line	84
  5738                           	
  5739  0FFF                     l7558:	
  5740  0FFF  0008               	return
  5741                           	opt stack 0
  5742                           GLOBAL	__end_of___ftmul
  5743  1000                     	__end_of___ftmul:
  5744 ;; =============== function ___ftmul ends ============
  5745                           
  5746                           	signat	___ftmul,8315
  5747                           	global	_abs
  5748                           psect	text1065,local,class=CODE,delta=2
  5749                           global __ptext1065
  5750  1706                     __ptext1065:
  5751                           
  5752 ;; *************** function _abs *****************
  5753 ;; Defined at:
  5754 ;;		line 207 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  v               2    6[BANK0 ] int 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  2    6[BANK0 ] int 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5768 ;;      Params:         0       2       0       0       0
  5769 ;;      Locals:         0       0       0       0       0
  5770 ;;      Temps:          0       2       0       0       0
  5771 ;;      Totals:         0       4       0       0       0
  5772 ;;Total ram usage:        4 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    4
  5775 ;; This function calls:
  5776 ;;		___wmul
  5777 ;; This function is called by:
  5778 ;;		_robotMoveSpeed
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           psect	text1065
  5782                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5783                           	line	207
  5784                           	global	__size_of_abs
  5785  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  5786                           	
  5787  1706                     _abs:	
  5788                           	opt	stack 2
  5789                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5790                           	line	208
  5791                           	
  5792  1706                     l11121:	
  5793                           ;robot.c: 208: return (v * ((v > 0) - (v < 0)));
  5794  1706  3000               	movlw	0
  5795  1707  1283               	bcf	status, 5	;RP0=0, select bank0
  5796  1708  1303               	bcf	status, 6	;RP1=0, select bank0
  5797  1709  1BA7               	btfsc	(abs@v+1),7
  5798  170A  3001               	movlw	1
  5799  170B  00A8               	movwf	(??_abs+0)+0
  5800  170C  01A9               	clrf	(??_abs+0)+0+1
  5801  170D  09A8               	comf	(??_abs+0)+0,f
  5802  170E  09A9               	comf	(??_abs+0)+1,f
  5803  170F  0AA8               	incf	(??_abs+0)+0,f
  5804  1710  1903               	skipnz
  5805  1711  0AA9               	incf	(??_abs+0)+1,f
  5806  1712  0827               	movf	(abs@v+1),w
  5807  1713  3A80               	xorlw	80h
  5808  1714  00FF               	movwf	btemp+1
  5809  1715  3080               	movlw	(high(01h))^80h
  5810  1716  027F               	subwf	btemp+1,w
  5811  1717  1D03               	skipz
  5812  1718  2F1B               	goto	u5165
  5813  1719  3001               	movlw	low(01h)
  5814  171A  0226               	subwf	(abs@v),w
  5815  171B                     u5165:
  5816                           
  5817  171B  3000               	movlw	0
  5818  171C  1803               	skipnc
  5819  171D  3001               	movlw	1
  5820  171E  1283               	bcf	status, 5	;RP0=0, select bank0
  5821  171F  1303               	bcf	status, 6	;RP1=0, select bank0
  5822  1720  0728               	addwf	0+(??_abs+0)+0,w
  5823  1721  00A0               	movwf	(?___wmul)
  5824  1722  0829               	movf	1+(??_abs+0)+0,w
  5825  1723  1803               	skipnc
  5826  1724  0A29               	incf	1+(??_abs+0)+0,w
  5827  1725  00A1               	movwf	((?___wmul))+1
  5828  1726  0827               	movf	(abs@v+1),w
  5829  1727  01A3               	clrf	1+(?___wmul)+02h
  5830  1728  07A3               	addwf	1+(?___wmul)+02h
  5831  1729  0826               	movf	(abs@v),w
  5832  172A  01A2               	clrf	0+(?___wmul)+02h
  5833  172B  07A2               	addwf	0+(?___wmul)+02h
  5834                           
  5835  172C  160A  118A  259D   	fcall	___wmul
              160A  118A         
  5836  1731  1283               	bcf	status, 5	;RP0=0, select bank0
  5837  1732  1303               	bcf	status, 6	;RP1=0, select bank0
  5838  1733  0821               	movf	(1+(?___wmul)),w
  5839  1734  01A7               	clrf	(?_abs+1)
  5840  1735  07A7               	addwf	(?_abs+1)
  5841  1736  0820               	movf	(0+(?___wmul)),w
  5842  1737  01A6               	clrf	(?_abs)
  5843  1738  07A6               	addwf	(?_abs)
  5844                           
  5845  1739  2F3A               	goto	l6014
  5846                           	
  5847  173A                     l11123:	
  5848                           	line	209
  5849                           	
  5850  173A                     l6014:	
  5851  173A  0008               	return
  5852                           	opt stack 0
  5853                           GLOBAL	__end_of_abs
  5854  173B                     	__end_of_abs:
  5855 ;; =============== function _abs ends ============
  5856                           
  5857                           	signat	_abs,4218
  5858                           	global	_RobotDrive
  5859                           psect	text1066,local,class=CODE,delta=2
  5860                           global __ptext1066
  5861  167A                     __ptext1066:
  5862                           
  5863 ;; *************** function _RobotDrive *****************
  5864 ;; Defined at:
  5865 ;;		line 52 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  speed           2    2[BANK0 ] int 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  speedhighByt    1    6[BANK0 ] unsigned char 
  5870 ;;  speedlowByte    1    5[BANK0 ] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;		None               void
  5873 ;; Registers used:
  5874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5880 ;;      Params:         0       2       0       0       0
  5881 ;;      Locals:         0       2       0       0       0
  5882 ;;      Temps:          0       1       0       0       0
  5883 ;;      Totals:         0       5       0       0       0
  5884 ;;Total ram usage:        5 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    4
  5887 ;; This function calls:
  5888 ;;		_ser_putch
  5889 ;; This function is called by:
  5890 ;;		_robotMoveSpeed
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           psect	text1066
  5894                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5895                           	line	52
  5896                           	global	__size_of_RobotDrive
  5897  002D                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  5898                           	
  5899  167A                     _RobotDrive:	
  5900                           	opt	stack 2
  5901                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5902                           	line	54
  5903                           	
  5904  167A                     l11107:	
  5905                           ;robot.c: 54: unsigned char speedlowByte = (unsigned char)(speed);
  5906  167A  1283               	bcf	status, 5	;RP0=0, select bank0
  5907  167B  1303               	bcf	status, 6	;RP1=0, select bank0
  5908  167C  0822               	movf	(RobotDrive@speed),w
  5909  167D  00A4               	movwf	(??_RobotDrive+0)+0
  5910  167E  0824               	movf	(??_RobotDrive+0)+0,w
  5911  167F  00A5               	movwf	(RobotDrive@speedlowByte)
  5912                           	line	55
  5913                           	
  5914  1680                     l11109:	
  5915                           ;robot.c: 55: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  5916  1680  0823               	movf	(RobotDrive@speed+1),w
  5917  1681  00A4               	movwf	(??_RobotDrive+0)+0
  5918  1682  0824               	movf	(??_RobotDrive+0)+0,w
  5919  1683  00A6               	movwf	(RobotDrive@speedhighByte)
  5920                           	line	57
  5921                           	
  5922  1684                     l11111:	
  5923                           ;robot.c: 57: ser_putch(137);
  5924  1684  3089               	movlw	(089h)
  5925  1685  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5926                           	line	59
  5927                           	
  5928  168A                     l11113:	
  5929                           ;robot.c: 59: ser_putch(speedhighByte);
  5930  168A  1283               	bcf	status, 5	;RP0=0, select bank0
  5931  168B  1303               	bcf	status, 6	;RP1=0, select bank0
  5932  168C  0826               	movf	(RobotDrive@speedhighByte),w
  5933  168D  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5934                           	line	61
  5935                           	
  5936  1692                     l11115:	
  5937                           ;robot.c: 61: ser_putch(speedlowByte);
  5938  1692  1283               	bcf	status, 5	;RP0=0, select bank0
  5939  1693  1303               	bcf	status, 6	;RP1=0, select bank0
  5940  1694  0825               	movf	(RobotDrive@speedlowByte),w
  5941  1695  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5942                           	line	63
  5943                           	
  5944  169A                     l11117:	
  5945                           ;robot.c: 63: ser_putch(128);
  5946  169A  3080               	movlw	(080h)
  5947  169B  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5948                           	line	65
  5949                           	
  5950  16A0                     l11119:	
  5951                           ;robot.c: 65: ser_putch(0);
  5952  16A0  3000               	movlw	(0)
  5953  16A1  160A  118A  264D   	fcall	_ser_putch
              160A  118A         
  5954                           	line	66
  5955                           	
  5956  16A6                     l5990:	
  5957  16A6  0008               	return
  5958                           	opt stack 0
  5959                           GLOBAL	__end_of_RobotDrive
  5960  16A7                     	__end_of_RobotDrive:
  5961 ;; =============== function _RobotDrive ends ============
  5962                           
  5963                           	signat	_RobotDrive,4216
  5964                           	global	_ser_getch
  5965                           psect	text1067,local,class=CODE,delta=2
  5966                           global __ptext1067
  5967  15C9                     __ptext1067:
  5968                           
  5969 ;; *************** function _ser_getch *****************
  5970 ;; Defined at:
  5971 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  c               1    1[BANK0 ] unsigned char 
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      unsigned char 
  5978 ;; Registers used:
  5979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5985 ;;      Params:         0       0       0       0       0
  5986 ;;      Locals:         0       1       0       0       0
  5987 ;;      Temps:          0       1       0       0       0
  5988 ;;      Totals:         0       2       0       0       0
  5989 ;;Total ram usage:        2 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    4
  5992 ;; This function calls:
  5993 ;;		_ser_isrx
  5994 ;; This function is called by:
  5995 ;;		_robot_read
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           psect	text1067
  5999                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  6000                           	line	55
  6001                           	global	__size_of_ser_getch
  6002  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  6003                           	
  6004  15C9                     _ser_getch:	
  6005                           	opt	stack 1
  6006                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6007                           	line	58
  6008                           	
  6009  15C9                     l11091:	
  6010                           ;ser.c: 56: unsigned char c;
  6011                           ;ser.c: 58: while (ser_isrx()==0)
  6012  15C9  2DCB               	goto	l11093
  6013                           	
  6014  15CA                     l6718:	
  6015                           	line	59
  6016                           ;ser.c: 59: continue;
  6017  15CA  2DCB               	goto	l11093
  6018                           	
  6019  15CB                     l6717:	
  6020                           	line	58
  6021                           	
  6022  15CB                     l11093:	
  6023  15CB  160A  118A  24DF   	fcall	_ser_isrx
              160A  118A         
  6024  15D0  1C03               	btfss	status,0
  6025  15D1  2DD3               	goto	u5151
  6026  15D2  2DD4               	goto	u5150
  6027  15D3                     u5151:
  6028  15D3  2DCB               	goto	l11093
  6029  15D4                     u5150:
  6030                           	
  6031  15D4                     l6719:	
  6032                           	line	61
  6033                           ;ser.c: 61: GIE=0;
  6034  15D4  138B               	bcf	(95/8),(95)&7
  6035                           	line	62
  6036                           	
  6037  15D5                     l11095:	
  6038                           ;ser.c: 62: c=rxfifo[rxoptr];
  6039  15D5  1683               	bsf	status, 5	;RP0=1, select bank1
  6040  15D6  1303               	bcf	status, 6	;RP1=0, select bank1
  6041  15D7  0851               	movf	(_rxoptr)^080h,w
  6042  15D8  3EA0               	addlw	_rxfifo&0ffh
  6043  15D9  0084               	movwf	fsr0
  6044  15DA  1383               	bcf	status, 7	;select IRP bank1
  6045  15DB  0800               	movf	indf,w
  6046  15DC  1283               	bcf	status, 5	;RP0=0, select bank0
  6047  15DD  1303               	bcf	status, 6	;RP1=0, select bank0
  6048  15DE  00A0               	movwf	(??_ser_getch+0)+0
  6049  15DF  0820               	movf	(??_ser_getch+0)+0,w
  6050  15E0  00A1               	movwf	(ser_getch@c)
  6051                           	line	63
  6052                           	
  6053  15E1                     l11097:	
  6054                           ;ser.c: 63: ++rxoptr;
  6055  15E1  3001               	movlw	(01h)
  6056  15E2  00A0               	movwf	(??_ser_getch+0)+0
  6057  15E3  0820               	movf	(??_ser_getch+0)+0,w
  6058  15E4  1683               	bsf	status, 5	;RP0=1, select bank1
  6059  15E5  1303               	bcf	status, 6	;RP1=0, select bank1
  6060  15E6  07D1               	addwf	(_rxoptr)^080h,f	;volatile
  6061                           	line	64
  6062                           	
  6063  15E7                     l11099:	
  6064                           ;ser.c: 64: rxoptr &= (16-1);
  6065  15E7  300F               	movlw	(0Fh)
  6066  15E8  1283               	bcf	status, 5	;RP0=0, select bank0
  6067  15E9  1303               	bcf	status, 6	;RP1=0, select bank0
  6068  15EA  00A0               	movwf	(??_ser_getch+0)+0
  6069  15EB  0820               	movf	(??_ser_getch+0)+0,w
  6070  15EC  1683               	bsf	status, 5	;RP0=1, select bank1
  6071  15ED  1303               	bcf	status, 6	;RP1=0, select bank1
  6072  15EE  05D1               	andwf	(_rxoptr)^080h,f	;volatile
  6073                           	line	65
  6074                           	
  6075  15EF                     l11101:	
  6076                           ;ser.c: 65: GIE=1;
  6077  15EF  178B               	bsf	(95/8),(95)&7
  6078                           	line	66
  6079                           	
  6080  15F0                     l11103:	
  6081                           ;ser.c: 66: return c;
  6082  15F0  1283               	bcf	status, 5	;RP0=0, select bank0
  6083  15F1  1303               	bcf	status, 6	;RP1=0, select bank0
  6084  15F2  0821               	movf	(ser_getch@c),w
  6085  15F3  2DF4               	goto	l6720
  6086                           	
  6087  15F4                     l11105:	
  6088                           	line	67
  6089                           	
  6090  15F4                     l6720:	
  6091  15F4  0008               	return
  6092                           	opt stack 0
  6093                           GLOBAL	__end_of_ser_getch
  6094  15F5                     	__end_of_ser_getch:
  6095 ;; =============== function _ser_getch ends ============
  6096                           
  6097                           	signat	_ser_getch,89
  6098                           	global	_sprintf
  6099                           psect	text1068,local,class=CODE,delta=2
  6100                           global __ptext1068
  6101  0686                     __ptext1068:
  6102                           
  6103 ;; *************** function _sprintf *****************
  6104 ;; Defined at:
  6105 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  sp              1    wreg     PTR unsigned char 
  6108 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6109 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  6110 ;;		 -> STR_13(13), 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  6113 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6114 ;;  _val            4   31[BANK0 ] struct .
  6115 ;;  c               1   36[BANK0 ] char 
  6116 ;;  prec            1   30[BANK0 ] char 
  6117 ;;  flag            1   29[BANK0 ] unsigned char 
  6118 ;;  ap              1   28[BANK0 ] PTR void [1]
  6119 ;;		 -> ?_sprintf(2), 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  2   20[BANK0 ] int 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6129 ;;      Params:         0       5       0       0       0
  6130 ;;      Locals:         0       9       0       0       0
  6131 ;;      Temps:          0       3       0       0       0
  6132 ;;      Totals:         0      17       0       0       0
  6133 ;;Total ram usage:       17 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    4
  6136 ;; This function calls:
  6137 ;;		___lwdiv
  6138 ;;		___lwmod
  6139 ;; This function is called by:
  6140 ;;		_UpdateDisplay
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           psect	text1068
  6144                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  6145                           	line	488
  6146                           	global	__size_of_sprintf
  6147  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  6148                           	
  6149  0686                     _sprintf:	
  6150                           	opt	stack 1
  6151                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6152                           ;sprintf@sp stored from wreg
  6153                           	line	537
  6154  0686  1283               	bcf	status, 5	;RP0=0, select bank0
  6155  0687  1303               	bcf	status, 6	;RP1=0, select bank0
  6156  0688  00C3               	movwf	(sprintf@sp)
  6157                           	
  6158  0689                     l11033:	
  6159  0689  3035               	movlw	(?_sprintf+01h)&0ffh
  6160  068A  00B9               	movwf	(??_sprintf+0)+0
  6161  068B  0839               	movf	(??_sprintf+0)+0,w
  6162  068C  00BC               	movwf	(sprintf@ap)
  6163                           	line	540
  6164  068D  2F6C               	goto	l11085
  6165                           	
  6166  068E                     l6758:	
  6167                           	line	542
  6168                           	
  6169  068E                     l11035:	
  6170  068E  0844               	movf	(sprintf@c),w
  6171  068F  3A25               	xorlw	025h
  6172  0690  1903               	skipnz
  6173  0691  2E93               	goto	u5071
  6174  0692  2E94               	goto	u5070
  6175  0693                     u5071:
  6176  0693  2EA0               	goto	l6759
  6177  0694                     u5070:
  6178                           	line	545
  6179                           	
  6180  0694                     l11037:	
  6181  0694  0844               	movf	(sprintf@c),w
  6182  0695  00B9               	movwf	(??_sprintf+0)+0
  6183  0696  0843               	movf	(sprintf@sp),w
  6184  0697  0084               	movwf	fsr0
  6185  0698  0839               	movf	(??_sprintf+0)+0,w
  6186  0699  1383               	bcf	status, 7	;select IRP bank0
  6187  069A  0080               	movwf	indf
  6188                           	
  6189  069B                     l11039:	
  6190  069B  3001               	movlw	(01h)
  6191  069C  00B9               	movwf	(??_sprintf+0)+0
  6192  069D  0839               	movf	(??_sprintf+0)+0,w
  6193  069E  07C3               	addwf	(sprintf@sp),f
  6194                           	line	546
  6195  069F  2F6C               	goto	l11085
  6196                           	line	547
  6197                           	
  6198  06A0                     l6759:	
  6199                           	line	552
  6200  06A0  01BD               	clrf	(sprintf@flag)
  6201                           	line	638
  6202  06A1  2EA7               	goto	l11043
  6203                           	line	640
  6204                           	
  6205  06A2                     l6761:	
  6206                           	line	641
  6207  06A2  2F80               	goto	l11087
  6208                           	line	700
  6209                           	
  6210  06A3                     l6763:	
  6211  06A3  2EBC               	goto	l11045
  6212                           	line	701
  6213                           	
  6214  06A4                     l6764:	
  6215                           	line	702
  6216  06A4  2EBC               	goto	l11045
  6217                           	line	805
  6218                           	
  6219  06A5                     l6766:	
  6220                           	line	816
  6221  06A5  2F6C               	goto	l11085
  6222                           	line	825
  6223                           	
  6224  06A6                     l11041:	
  6225  06A6  2EBC               	goto	l11045
  6226                           	line	638
  6227                           	
  6228  06A7                     l6760:	
  6229                           	
  6230  06A7                     l11043:	
  6231  06A7  3001               	movlw	01h
  6232  06A8  07B4               	addwf	(sprintf@f),f
  6233  06A9  30FF               	movlw	-01h
  6234  06AA  0734               	addwf	(sprintf@f),w
  6235  06AB  0084               	movwf	fsr0
  6236  06AC  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6237  06B1  00C4               	movwf	(sprintf@c)
  6238                           	; Switch size 1, requested type "space"
  6239                           ; Number of cases is 3, Range of values is 0 to 105
  6240                           ; switch strategies available:
  6241                           ; Name         Instructions Cycles
  6242                           ; simple_byte           10     6 (average)
  6243                           ; jumptable            260     6 (fixed)
  6244                           ; rangetable           110     6 (fixed)
  6245                           ; spacedrange          218     9 (fixed)
  6246                           ; locatedrange         106     3 (fixed)
  6247                           ;	Chosen strategy is simple_byte
  6248                           
  6249                           	opt asmopt_off
  6250  06B2  3A00               	xorlw	0^0	; case 0
  6251  06B3  1903               	skipnz
  6252  06B4  2F80               	goto	l11087
  6253  06B5  3A64               	xorlw	100^0	; case 100
  6254  06B6  1903               	skipnz
  6255  06B7  2EBC               	goto	l11045
  6256  06B8  3A0D               	xorlw	105^100	; case 105
  6257  06B9  1903               	skipnz
  6258  06BA  2EBC               	goto	l11045
  6259  06BB  2F6C               	goto	l11085
  6260                           	opt asmopt_on
  6261                           
  6262                           	line	825
  6263                           	
  6264  06BC                     l6765:	
  6265                           	line	1254
  6266                           	
  6267  06BC                     l11045:	
  6268  06BC  083C               	movf	(sprintf@ap),w
  6269  06BD  0084               	movwf	fsr0
  6270  06BE  1383               	bcf	status, 7	;select IRP bank0
  6271  06BF  0800               	movf	indf,w
  6272  06C0  00BF               	movwf	(sprintf@_val)
  6273  06C1  0A84               	incf	fsr0,f
  6274  06C2  0800               	movf	indf,w
  6275  06C3  00C0               	movwf	(sprintf@_val+1)
  6276                           	
  6277  06C4                     l11047:	
  6278  06C4  3002               	movlw	(02h)
  6279  06C5  00B9               	movwf	(??_sprintf+0)+0
  6280  06C6  0839               	movf	(??_sprintf+0)+0,w
  6281  06C7  07BC               	addwf	(sprintf@ap),f
  6282                           	line	1256
  6283                           	
  6284  06C8                     l11049:	
  6285  06C8  1FC0               	btfss	(sprintf@_val+1),7
  6286  06C9  2ECB               	goto	u5081
  6287  06CA  2ECC               	goto	u5080
  6288  06CB                     u5081:
  6289  06CB  2ED6               	goto	l11055
  6290  06CC                     u5080:
  6291                           	line	1257
  6292                           	
  6293  06CC                     l11051:	
  6294  06CC  3003               	movlw	(03h)
  6295  06CD  00B9               	movwf	(??_sprintf+0)+0
  6296  06CE  0839               	movf	(??_sprintf+0)+0,w
  6297  06CF  04BD               	iorwf	(sprintf@flag),f
  6298                           	line	1258
  6299                           	
  6300  06D0                     l11053:	
  6301  06D0  09BF               	comf	(sprintf@_val),f
  6302  06D1  09C0               	comf	(sprintf@_val+1),f
  6303  06D2  0ABF               	incf	(sprintf@_val),f
  6304  06D3  1903               	skipnz
  6305  06D4  0AC0               	incf	(sprintf@_val+1),f
  6306  06D5  2ED6               	goto	l11055
  6307                           	line	1259
  6308                           	
  6309  06D6                     l6767:	
  6310                           	line	1300
  6311                           	
  6312  06D6                     l11055:	
  6313  06D6  01C4               	clrf	(sprintf@c)
  6314  06D7  1403               	bsf	status,0
  6315  06D8  0DC4               	rlf	(sprintf@c),f
  6316                           	
  6317  06D9                     l11057:	
  6318  06D9  0844               	movf	(sprintf@c),w
  6319  06DA  3A05               	xorlw	05h
  6320  06DB  1D03               	skipz
  6321  06DC  2EDE               	goto	u5091
  6322  06DD  2EDF               	goto	u5090
  6323  06DE                     u5091:
  6324  06DE  2EE1               	goto	l11061
  6325  06DF                     u5090:
  6326  06DF  2F09               	goto	l11069
  6327                           	
  6328  06E0                     l11059:	
  6329  06E0  2F09               	goto	l11069
  6330                           	line	1301
  6331                           	
  6332  06E1                     l6768:	
  6333                           	
  6334  06E1                     l11061:	
  6335  06E1  0844               	movf	(sprintf@c),w
  6336  06E2  00B9               	movwf	(??_sprintf+0)+0
  6337  06E3  0739               	addwf	(??_sprintf+0)+0,w
  6338  06E4  3E01               	addlw	low((_dpowers-__stringbase))
  6339  06E5  0084               	movwf	fsr0
  6340  06E6  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6341  06EB  00BA               	movwf	(??_sprintf+1)+0
  6342  06EC  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6343  06F1  00BB               	movwf	(??_sprintf+1)+0+1
  6344  06F2  083B               	movf	1+(??_sprintf+1)+0,w
  6345  06F3  0240               	subwf	(sprintf@_val+1),w
  6346  06F4  1D03               	skipz
  6347  06F5  2EF8               	goto	u5105
  6348  06F6  083A               	movf	0+(??_sprintf+1)+0,w
  6349  06F7  023F               	subwf	(sprintf@_val),w
  6350  06F8                     u5105:
  6351  06F8  1803               	skipnc
  6352  06F9  2EFB               	goto	u5101
  6353  06FA  2EFC               	goto	u5100
  6354  06FB                     u5101:
  6355  06FB  2EFE               	goto	l11065
  6356  06FC                     u5100:
  6357  06FC  2F09               	goto	l11069
  6358                           	line	1302
  6359                           	
  6360  06FD                     l11063:	
  6361  06FD  2F09               	goto	l11069
  6362                           	
  6363  06FE                     l6770:	
  6364                           	line	1300
  6365                           	
  6366  06FE                     l11065:	
  6367  06FE  3001               	movlw	(01h)
  6368  06FF  00B9               	movwf	(??_sprintf+0)+0
  6369  0700  0839               	movf	(??_sprintf+0)+0,w
  6370  0701  07C4               	addwf	(sprintf@c),f
  6371                           	
  6372  0702                     l11067:	
  6373  0702  0844               	movf	(sprintf@c),w
  6374  0703  3A05               	xorlw	05h
  6375  0704  1D03               	skipz
  6376  0705  2F07               	goto	u5111
  6377  0706  2F08               	goto	u5110
  6378  0707                     u5111:
  6379  0707  2EE1               	goto	l11061
  6380  0708                     u5110:
  6381  0708  2F09               	goto	l11069
  6382                           	
  6383  0709                     l6769:	
  6384                           	line	1433
  6385                           	
  6386  0709                     l11069:	
  6387  0709  083D               	movf	(sprintf@flag),w
  6388  070A  3903               	andlw	03h
  6389  070B  1903               	btfsc	status,2
  6390  070C  2F0E               	goto	u5121
  6391  070D  2F0F               	goto	u5120
  6392  070E                     u5121:
  6393  070E  2F1B               	goto	l11075
  6394  070F                     u5120:
  6395                           	line	1434
  6396                           	
  6397  070F                     l11071:	
  6398  070F  302D               	movlw	(02Dh)
  6399  0710  00B9               	movwf	(??_sprintf+0)+0
  6400  0711  0843               	movf	(sprintf@sp),w
  6401  0712  0084               	movwf	fsr0
  6402  0713  0839               	movf	(??_sprintf+0)+0,w
  6403  0714  1383               	bcf	status, 7	;select IRP bank0
  6404  0715  0080               	movwf	indf
  6405                           	
  6406  0716                     l11073:	
  6407  0716  3001               	movlw	(01h)
  6408  0717  00B9               	movwf	(??_sprintf+0)+0
  6409  0718  0839               	movf	(??_sprintf+0)+0,w
  6410  0719  07C3               	addwf	(sprintf@sp),f
  6411  071A  2F1B               	goto	l11075
  6412                           	
  6413  071B                     l6771:	
  6414                           	line	1467
  6415                           	
  6416  071B                     l11075:	
  6417  071B  0844               	movf	(sprintf@c),w
  6418  071C  00B9               	movwf	(??_sprintf+0)+0
  6419  071D  0839               	movf	(??_sprintf+0)+0,w
  6420  071E  00BE               	movwf	(sprintf@prec)
  6421                           	line	1469
  6422  071F  2F60               	goto	l11083
  6423                           	
  6424  0720                     l6773:	
  6425                           	line	1484
  6426                           	
  6427  0720                     l11077:	
  6428  0720  300A               	movlw	low(0Ah)
  6429  0721  00AE               	movwf	(?___lwmod)
  6430  0722  3000               	movlw	high(0Ah)
  6431  0723  00AF               	movwf	((?___lwmod))+1
  6432  0724  083E               	movf	(sprintf@prec),w
  6433  0725  00B9               	movwf	(??_sprintf+0)+0
  6434  0726  0739               	addwf	(??_sprintf+0)+0,w
  6435  0727  3E01               	addlw	low((_dpowers-__stringbase))
  6436  0728  0084               	movwf	fsr0
  6437  0729  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6438  072E  00A6               	movwf	(?___lwdiv)
  6439  072F  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6440  0734  00A7               	movwf	(?___lwdiv+1)
  6441  0735  0840               	movf	(sprintf@_val+1),w
  6442  0736  01A9               	clrf	1+(?___lwdiv)+02h
  6443  0737  07A9               	addwf	1+(?___lwdiv)+02h
  6444  0738  083F               	movf	(sprintf@_val),w
  6445  0739  01A8               	clrf	0+(?___lwdiv)+02h
  6446  073A  07A8               	addwf	0+(?___lwdiv)+02h
  6447                           
  6448  073B  120A  158A  2154   	fcall	___lwdiv
              120A  118A         
  6449  0740  1283               	bcf	status, 5	;RP0=0, select bank0
  6450  0741  1303               	bcf	status, 6	;RP1=0, select bank0
  6451  0742  0827               	movf	(1+(?___lwdiv)),w
  6452  0743  01B1               	clrf	1+(?___lwmod)+02h
  6453  0744  07B1               	addwf	1+(?___lwmod)+02h
  6454  0745  0826               	movf	(0+(?___lwdiv)),w
  6455  0746  01B0               	clrf	0+(?___lwmod)+02h
  6456  0747  07B0               	addwf	0+(?___lwmod)+02h
  6457                           
  6458  0748  160A  118A  27BA   	fcall	___lwmod
              120A  118A         
  6459  074D  1283               	bcf	status, 5	;RP0=0, select bank0
  6460  074E  1303               	bcf	status, 6	;RP1=0, select bank0
  6461  074F  082E               	movf	(0+(?___lwmod)),w
  6462  0750  3E30               	addlw	030h
  6463  0751  00BA               	movwf	(??_sprintf+1)+0
  6464  0752  083A               	movf	(??_sprintf+1)+0,w
  6465  0753  00C4               	movwf	(sprintf@c)
  6466                           	line	1516
  6467                           	
  6468  0754                     l11079:	
  6469  0754  0844               	movf	(sprintf@c),w
  6470  0755  00B9               	movwf	(??_sprintf+0)+0
  6471  0756  0843               	movf	(sprintf@sp),w
  6472  0757  0084               	movwf	fsr0
  6473  0758  0839               	movf	(??_sprintf+0)+0,w
  6474  0759  1383               	bcf	status, 7	;select IRP bank0
  6475  075A  0080               	movwf	indf
  6476                           	
  6477  075B                     l11081:	
  6478  075B  3001               	movlw	(01h)
  6479  075C  00B9               	movwf	(??_sprintf+0)+0
  6480  075D  0839               	movf	(??_sprintf+0)+0,w
  6481  075E  07C3               	addwf	(sprintf@sp),f
  6482  075F  2F60               	goto	l11083
  6483                           	line	1517
  6484                           	
  6485  0760                     l6772:	
  6486                           	line	1469
  6487                           	
  6488  0760                     l11083:	
  6489  0760  30FF               	movlw	(-1)
  6490  0761  00B9               	movwf	(??_sprintf+0)+0
  6491  0762  0839               	movf	(??_sprintf+0)+0,w
  6492  0763  07BE               	addwf	(sprintf@prec),f
  6493  0764  083E               	movf	((sprintf@prec)),w
  6494  0765  3AFF               	xorlw	-1
  6495  0766  1D03               	skipz
  6496  0767  2F69               	goto	u5131
  6497  0768  2F6A               	goto	u5130
  6498  0769                     u5131:
  6499  0769  2F20               	goto	l11077
  6500  076A                     u5130:
  6501  076A  2F6C               	goto	l11085
  6502                           	
  6503  076B                     l6774:	
  6504  076B  2F6C               	goto	l11085
  6505                           	line	1525
  6506                           	
  6507  076C                     l6757:	
  6508                           	line	540
  6509                           	
  6510  076C                     l11085:	
  6511  076C  3001               	movlw	01h
  6512  076D  07B4               	addwf	(sprintf@f),f
  6513  076E  30FF               	movlw	-01h
  6514  076F  0734               	addwf	(sprintf@f),w
  6515  0770  0084               	movwf	fsr0
  6516  0771  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6517  0776  00B9               	movwf	(??_sprintf+0)+0
  6518  0777  0839               	movf	(??_sprintf+0)+0,w
  6519  0778  00C4               	movwf	(sprintf@c)
  6520  0779  08C4               	movf	((sprintf@c)),f
  6521  077A  1D03               	skipz
  6522  077B  2F7D               	goto	u5141
  6523  077C  2F7E               	goto	u5140
  6524  077D                     u5141:
  6525  077D  2E8E               	goto	l11035
  6526  077E                     u5140:
  6527  077E  2F80               	goto	l11087
  6528                           	
  6529  077F                     l6775:	
  6530  077F  2F80               	goto	l11087
  6531                           	line	1527
  6532                           	
  6533  0780                     l6762:	
  6534                           	line	1530
  6535                           	
  6536  0780                     l11087:	
  6537  0780  0843               	movf	(sprintf@sp),w
  6538  0781  0084               	movwf	fsr0
  6539  0782  1383               	bcf	status, 7	;select IRP bank0
  6540  0783  0180               	clrf	indf
  6541  0784  2F85               	goto	l6776
  6542                           	line	1532
  6543                           	
  6544  0785                     l11089:	
  6545                           	line	1533
  6546                           ;	Return value of _sprintf is never used
  6547                           	
  6548  0785                     l6776:	
  6549  0785  0008               	return
  6550                           	opt stack 0
  6551                           GLOBAL	__end_of_sprintf
  6552  0786                     	__end_of_sprintf:
  6553 ;; =============== function _sprintf ends ============
  6554                           
  6555                           	signat	_sprintf,4698
  6556                           	global	_ADCconvert
  6557                           psect	text1069,local,class=CODE,delta=2
  6558                           global __ptext1069
  6559  02C4                     __ptext1069:
  6560                           
  6561 ;; *************** function _ADCconvert *****************
  6562 ;; Defined at:
  6563 ;;		line 58 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;		None               void
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0, pclath, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6577 ;;      Params:         0       0       0       0       0
  6578 ;;      Locals:         0       0       0       0       0
  6579 ;;      Temps:          0       2       0       0       0
  6580 ;;      Totals:         0       2       0       0       0
  6581 ;;Total ram usage:        2 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    4
  6584 ;; This function calls:
  6585 ;;		___wmul
  6586 ;;		___lwdiv
  6587 ;; This function is called by:
  6588 ;;		_readAvgDistance
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           psect	text1069
  6592                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  6593                           	line	58
  6594                           	global	__size_of_ADCconvert
  6595  0263                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  6596                           	
  6597  02C4                     _ADCconvert:	
  6598                           	opt	stack 1
  6599                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  6600                           	line	64
  6601                           	
  6602  02C4                     l10991:	
  6603                           ;infrared.c: 64: if (adcVal >= 213 && adcVal < 234)
  6604  02C4  3000               	movlw	high(0D5h)
  6605  02C5  1683               	bsf	status, 5	;RP0=1, select bank1
  6606  02C6  1303               	bcf	status, 6	;RP1=0, select bank1
  6607  02C7  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6608  02C8  30D5               	movlw	low(0D5h)
  6609  02C9  1903               	skipnz
  6610  02CA  0236               	subwf	(_adcVal)^080h,w	;volatile
  6611  02CB  1C03               	skipc
  6612  02CC  2ACE               	goto	u4931
  6613  02CD  2ACF               	goto	u4930
  6614  02CE                     u4931:
  6615  02CE  2B1C               	goto	l10997
  6616  02CF                     u4930:
  6617                           	
  6618  02CF                     l10993:	
  6619  02CF  3000               	movlw	high(0EAh)
  6620  02D0  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6621  02D1  30EA               	movlw	low(0EAh)
  6622  02D2  1903               	skipnz
  6623  02D3  0236               	subwf	(_adcVal)^080h,w	;volatile
  6624  02D4  1803               	skipnc
  6625  02D5  2AD7               	goto	u4941
  6626  02D6  2AD8               	goto	u4940
  6627  02D7                     u4941:
  6628  02D7  2B1C               	goto	l10997
  6629  02D8                     u4940:
  6630                           	line	66
  6631                           	
  6632  02D8                     l10995:	
  6633                           ;infrared.c: 65: {
  6634                           ;infrared.c: 66: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  6635  02D8  3015               	movlw	low(015h)
  6636  02D9  1283               	bcf	status, 5	;RP0=0, select bank0
  6637  02DA  1303               	bcf	status, 6	;RP1=0, select bank0
  6638  02DB  00A6               	movwf	(?___lwdiv)
  6639  02DC  3000               	movlw	high(015h)
  6640  02DD  00A7               	movwf	((?___lwdiv))+1
  6641  02DE  1683               	bsf	status, 5	;RP0=1, select bank1
  6642  02DF  1303               	bcf	status, 6	;RP1=0, select bank1
  6643  02E0  0936               	comf	(_adcVal)^080h,w	;volatile
  6644  02E1  1283               	bcf	status, 5	;RP0=0, select bank0
  6645  02E2  1303               	bcf	status, 6	;RP1=0, select bank0
  6646  02E3  00AE               	movwf	(??_ADCconvert+0)+0
  6647  02E4  1683               	bsf	status, 5	;RP0=1, select bank1
  6648  02E5  1303               	bcf	status, 6	;RP1=0, select bank1
  6649  02E6  0937               	comf	(_adcVal+1)^080h,w	;volatile
  6650  02E7  1283               	bcf	status, 5	;RP0=0, select bank0
  6651  02E8  1303               	bcf	status, 6	;RP1=0, select bank0
  6652  02E9  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6653  02EA  0AAE               	incf	(??_ADCconvert+0)+0,f
  6654  02EB  1903               	skipnz
  6655  02EC  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6656  02ED  082E               	movf	0+(??_ADCconvert+0)+0,w
  6657  02EE  3EEA               	addlw	low(0EAh)
  6658  02EF  00A0               	movwf	(?___wmul)
  6659  02F0  082F               	movf	1+(??_ADCconvert+0)+0,w
  6660  02F1  1803               	skipnc
  6661  02F2  3E01               	addlw	1
  6662  02F3  3E00               	addlw	high(0EAh)
  6663  02F4  00A1               	movwf	1+(?___wmul)
  6664  02F5  3005               	movlw	low(05h)
  6665  02F6  00A2               	movwf	0+(?___wmul)+02h
  6666  02F7  3000               	movlw	high(05h)
  6667  02F8  00A3               	movwf	(0+(?___wmul)+02h)+1
  6668  02F9  160A  118A  259D   	fcall	___wmul
              120A  118A         
  6669  02FE  1283               	bcf	status, 5	;RP0=0, select bank0
  6670  02FF  1303               	bcf	status, 6	;RP1=0, select bank0
  6671  0300  0821               	movf	(1+(?___wmul)),w
  6672  0301  01A9               	clrf	1+(?___lwdiv)+02h
  6673  0302  07A9               	addwf	1+(?___lwdiv)+02h
  6674  0303  0820               	movf	(0+(?___wmul)),w
  6675  0304  01A8               	clrf	0+(?___lwdiv)+02h
  6676  0305  07A8               	addwf	0+(?___lwdiv)+02h
  6677                           
  6678  0306  120A  158A  2154   	fcall	___lwdiv
              120A  118A         
  6679  030B  1283               	bcf	status, 5	;RP0=0, select bank0
  6680  030C  1303               	bcf	status, 6	;RP1=0, select bank0
  6681  030D  0826               	movf	(0+(?___lwdiv)),w
  6682  030E  3E0F               	addlw	low(0Fh)
  6683  030F  1683               	bsf	status, 5	;RP0=1, select bank1
  6684  0310  1303               	bcf	status, 6	;RP1=0, select bank1
  6685  0311  00B0               	movwf	(_IRdistance)^080h	;volatile
  6686  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  6687  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  6688  0314  0827               	movf	(1+(?___lwdiv)),w
  6689  0315  1803               	skipnc
  6690  0316  3E01               	addlw	1
  6691  0317  3E00               	addlw	high(0Fh)
  6692  0318  1683               	bsf	status, 5	;RP0=1, select bank1
  6693  0319  1303               	bcf	status, 6	;RP1=0, select bank1
  6694  031A  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  6695                           	line	67
  6696                           ;infrared.c: 67: }
  6697  031B  2D26               	goto	l3006
  6698                           	line	68
  6699                           	
  6700  031C                     l2993:	
  6701                           	
  6702  031C                     l10997:	
  6703                           ;infrared.c: 68: else if (adcVal >= 170 && adcVal < 213)
  6704  031C  3000               	movlw	high(0AAh)
  6705  031D  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6706  031E  30AA               	movlw	low(0AAh)
  6707  031F  1903               	skipnz
  6708  0320  0236               	subwf	(_adcVal)^080h,w	;volatile
  6709  0321  1C03               	skipc
  6710  0322  2B24               	goto	u4951
  6711  0323  2B25               	goto	u4950
  6712  0324                     u4951:
  6713  0324  2B72               	goto	l11003
  6714  0325                     u4950:
  6715                           	
  6716  0325                     l10999:	
  6717  0325  3000               	movlw	high(0D5h)
  6718  0326  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6719  0327  30D5               	movlw	low(0D5h)
  6720  0328  1903               	skipnz
  6721  0329  0236               	subwf	(_adcVal)^080h,w	;volatile
  6722  032A  1803               	skipnc
  6723  032B  2B2D               	goto	u4961
  6724  032C  2B2E               	goto	u4960
  6725  032D                     u4961:
  6726  032D  2B72               	goto	l11003
  6727  032E                     u4960:
  6728                           	line	70
  6729                           	
  6730  032E                     l11001:	
  6731                           ;infrared.c: 69: {
  6732                           ;infrared.c: 70: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  6733  032E  302B               	movlw	low(02Bh)
  6734  032F  1283               	bcf	status, 5	;RP0=0, select bank0
  6735  0330  1303               	bcf	status, 6	;RP1=0, select bank0
  6736  0331  00A6               	movwf	(?___lwdiv)
  6737  0332  3000               	movlw	high(02Bh)
  6738  0333  00A7               	movwf	((?___lwdiv))+1
  6739  0334  1683               	bsf	status, 5	;RP0=1, select bank1
  6740  0335  1303               	bcf	status, 6	;RP1=0, select bank1
  6741  0336  0936               	comf	(_adcVal)^080h,w	;volatile
  6742  0337  1283               	bcf	status, 5	;RP0=0, select bank0
  6743  0338  1303               	bcf	status, 6	;RP1=0, select bank0
  6744  0339  00AE               	movwf	(??_ADCconvert+0)+0
  6745  033A  1683               	bsf	status, 5	;RP0=1, select bank1
  6746  033B  1303               	bcf	status, 6	;RP1=0, select bank1
  6747  033C  0937               	comf	(_adcVal+1)^080h,w	;volatile
  6748  033D  1283               	bcf	status, 5	;RP0=0, select bank0
  6749  033E  1303               	bcf	status, 6	;RP1=0, select bank0
  6750  033F  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6751  0340  0AAE               	incf	(??_ADCconvert+0)+0,f
  6752  0341  1903               	skipnz
  6753  0342  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6754  0343  082E               	movf	0+(??_ADCconvert+0)+0,w
  6755  0344  3ED5               	addlw	low(0D5h)
  6756  0345  00A0               	movwf	(?___wmul)
  6757  0346  082F               	movf	1+(??_ADCconvert+0)+0,w
  6758  0347  1803               	skipnc
  6759  0348  3E01               	addlw	1
  6760  0349  3E00               	addlw	high(0D5h)
  6761  034A  00A1               	movwf	1+(?___wmul)
  6762  034B  300A               	movlw	low(0Ah)
  6763  034C  00A2               	movwf	0+(?___wmul)+02h
  6764  034D  3000               	movlw	high(0Ah)
  6765  034E  00A3               	movwf	(0+(?___wmul)+02h)+1
  6766  034F  160A  118A  259D   	fcall	___wmul
              120A  118A         
  6767  0354  1283               	bcf	status, 5	;RP0=0, select bank0
  6768  0355  1303               	bcf	status, 6	;RP1=0, select bank0
  6769  0356  0821               	movf	(1+(?___wmul)),w
  6770  0357  01A9               	clrf	1+(?___lwdiv)+02h
  6771  0358  07A9               	addwf	1+(?___lwdiv)+02h
  6772  0359  0820               	movf	(0+(?___wmul)),w
  6773  035A  01A8               	clrf	0+(?___lwdiv)+02h
  6774  035B  07A8               	addwf	0+(?___lwdiv)+02h
  6775                           
  6776  035C  120A  158A  2154   	fcall	___lwdiv
              120A  118A         
  6777  0361  1283               	bcf	status, 5	;RP0=0, select bank0
  6778  0362  1303               	bcf	status, 6	;RP1=0, select bank0
  6779  0363  0826               	movf	(0+(?___lwdiv)),w
  6780  0364  3E14               	addlw	low(014h)
  6781  0365  1683               	bsf	status, 5	;RP0=1, select bank1
  6782  0366  1303               	bcf	status, 6	;RP1=0, select bank1
  6783  0367  00B0               	movwf	(_IRdistance)^080h	;volatile
  6784  0368  1283               	bcf	status, 5	;RP0=0, select bank0
  6785  0369  1303               	bcf	status, 6	;RP1=0, select bank0
  6786  036A  0827               	movf	(1+(?___lwdiv)),w
  6787  036B  1803               	skipnc
  6788  036C  3E01               	addlw	1
  6789  036D  3E00               	addlw	high(014h)
  6790  036E  1683               	bsf	status, 5	;RP0=1, select bank1
  6791  036F  1303               	bcf	status, 6	;RP1=0, select bank1
  6792  0370  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  6793                           	line	71
  6794                           ;infrared.c: 71: }
  6795  0371  2D26               	goto	l3006
  6796                           	line	72
  6797                           	
  6798  0372                     l2995:	
  6799                           	
  6800  0372                     l11003:	
  6801                           ;infrared.c: 72: else if (adcVal >= 128 && adcVal < 170)
  6802  0372  3000               	movlw	high(080h)
  6803  0373  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6804  0374  3080               	movlw	low(080h)
  6805  0375  1903               	skipnz
  6806  0376  0236               	subwf	(_adcVal)^080h,w	;volatile
  6807  0377  1C03               	skipc
  6808  0378  2B7A               	goto	u4971
  6809  0379  2B7B               	goto	u4970
  6810  037A                     u4971:
  6811  037A  2BC8               	goto	l11009
  6812  037B                     u4970:
  6813                           	
  6814  037B                     l11005:	
  6815  037B  3000               	movlw	high(0AAh)
  6816  037C  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6817  037D  30AA               	movlw	low(0AAh)
  6818  037E  1903               	skipnz
  6819  037F  0236               	subwf	(_adcVal)^080h,w	;volatile
  6820  0380  1803               	skipnc
  6821  0381  2B83               	goto	u4981
  6822  0382  2B84               	goto	u4980
  6823  0383                     u4981:
  6824  0383  2BC8               	goto	l11009
  6825  0384                     u4980:
  6826                           	line	74
  6827                           	
  6828  0384                     l11007:	
  6829                           ;infrared.c: 73: {
  6830                           ;infrared.c: 74: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  6831  0384  302A               	movlw	low(02Ah)
  6832  0385  1283               	bcf	status, 5	;RP0=0, select bank0
  6833  0386  1303               	bcf	status, 6	;RP1=0, select bank0
  6834  0387  00A6               	movwf	(?___lwdiv)
  6835  0388  3000               	movlw	high(02Ah)
  6836  0389  00A7               	movwf	((?___lwdiv))+1
  6837  038A  1683               	bsf	status, 5	;RP0=1, select bank1
  6838  038B  1303               	bcf	status, 6	;RP1=0, select bank1
  6839  038C  0936               	comf	(_adcVal)^080h,w	;volatile
  6840  038D  1283               	bcf	status, 5	;RP0=0, select bank0
  6841  038E  1303               	bcf	status, 6	;RP1=0, select bank0
  6842  038F  00AE               	movwf	(??_ADCconvert+0)+0
  6843  0390  1683               	bsf	status, 5	;RP0=1, select bank1
  6844  0391  1303               	bcf	status, 6	;RP1=0, select bank1
  6845  0392  0937               	comf	(_adcVal+1)^080h,w	;volatile
  6846  0393  1283               	bcf	status, 5	;RP0=0, select bank0
  6847  0394  1303               	bcf	status, 6	;RP1=0, select bank0
  6848  0395  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6849  0396  0AAE               	incf	(??_ADCconvert+0)+0,f
  6850  0397  1903               	skipnz
  6851  0398  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6852  0399  082E               	movf	0+(??_ADCconvert+0)+0,w
  6853  039A  3EAA               	addlw	low(0AAh)
  6854  039B  00A0               	movwf	(?___wmul)
  6855  039C  082F               	movf	1+(??_ADCconvert+0)+0,w
  6856  039D  1803               	skipnc
  6857  039E  3E01               	addlw	1
  6858  039F  3E00               	addlw	high(0AAh)
  6859  03A0  00A1               	movwf	1+(?___wmul)
  6860  03A1  300A               	movlw	low(0Ah)
  6861  03A2  00A2               	movwf	0+(?___wmul)+02h
  6862  03A3  3000               	movlw	high(0Ah)
  6863  03A4  00A3               	movwf	(0+(?___wmul)+02h)+1
  6864  03A5  160A  118A  259D   	fcall	___wmul
              120A  118A         
  6865  03AA  1283               	bcf	status, 5	;RP0=0, select bank0
  6866  03AB  1303               	bcf	status, 6	;RP1=0, select bank0
  6867  03AC  0821               	movf	(1+(?___wmul)),w
  6868  03AD  01A9               	clrf	1+(?___lwdiv)+02h
  6869  03AE  07A9               	addwf	1+(?___lwdiv)+02h
  6870  03AF  0820               	movf	(0+(?___wmul)),w
  6871  03B0  01A8               	clrf	0+(?___lwdiv)+02h
  6872  03B1  07A8               	addwf	0+(?___lwdiv)+02h
  6873                           
  6874  03B2  120A  158A  2154   	fcall	___lwdiv
              120A  118A         
  6875  03B7  1283               	bcf	status, 5	;RP0=0, select bank0
  6876  03B8  1303               	bcf	status, 6	;RP1=0, select bank0
  6877  03B9  0826               	movf	(0+(?___lwdiv)),w
  6878  03BA  3E1E               	addlw	low(01Eh)
  6879  03BB  1683               	bsf	status, 5	;RP0=1, select bank1
  6880  03BC  1303               	bcf	status, 6	;RP1=0, select bank1
  6881  03BD  00B0               	movwf	(_IRdistance)^080h	;volatile
  6882  03BE  1283               	bcf	status, 5	;RP0=0, select bank0
  6883  03BF  1303               	bcf	status, 6	;RP1=0, select bank0
  6884  03C0  0827               	movf	(1+(?___lwdiv)),w
  6885  03C1  1803               	skipnc
  6886  03C2  3E01               	addlw	1
  6887  03C3  3E00               	addlw	high(01Eh)
  6888  03C4  1683               	bsf	status, 5	;RP0=1, select bank1
  6889  03C5  1303               	bcf	status, 6	;RP1=0, select bank1
  6890  03C6  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  6891                           	line	75
  6892                           ;infrared.c: 75: }
  6893  03C7  2D26               	goto	l3006
  6894                           	line	76
  6895                           	
  6896  03C8                     l2997:	
  6897                           	
  6898  03C8                     l11009:	
  6899                           ;infrared.c: 76: else if (adcVal >= 107 && adcVal < 128)
  6900  03C8  3000               	movlw	high(06Bh)
  6901  03C9  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6902  03CA  306B               	movlw	low(06Bh)
  6903  03CB  1903               	skipnz
  6904  03CC  0236               	subwf	(_adcVal)^080h,w	;volatile
  6905  03CD  1C03               	skipc
  6906  03CE  2BD0               	goto	u4991
  6907  03CF  2BD1               	goto	u4990
  6908  03D0                     u4991:
  6909  03D0  2C1E               	goto	l11015
  6910  03D1                     u4990:
  6911                           	
  6912  03D1                     l11011:	
  6913  03D1  3000               	movlw	high(080h)
  6914  03D2  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  6915  03D3  3080               	movlw	low(080h)
  6916  03D4  1903               	skipnz
  6917  03D5  0236               	subwf	(_adcVal)^080h,w	;volatile
  6918  03D6  1803               	skipnc
  6919  03D7  2BD9               	goto	u5001
  6920  03D8  2BDA               	goto	u5000
  6921  03D9                     u5001:
  6922  03D9  2C1E               	goto	l11015
  6923  03DA                     u5000:
  6924                           	line	78
  6925                           	
  6926  03DA                     l11013:	
  6927                           ;infrared.c: 77: {
  6928                           ;infrared.c: 78: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  6929  03DA  3015               	movlw	low(015h)
  6930  03DB  1283               	bcf	status, 5	;RP0=0, select bank0
  6931  03DC  1303               	bcf	status, 6	;RP1=0, select bank0
  6932  03DD  00A6               	movwf	(?___lwdiv)
  6933  03DE  3000               	movlw	high(015h)
  6934  03DF  00A7               	movwf	((?___lwdiv))+1
  6935  03E0  1683               	bsf	status, 5	;RP0=1, select bank1
  6936  03E1  1303               	bcf	status, 6	;RP1=0, select bank1
  6937  03E2  0936               	comf	(_adcVal)^080h,w	;volatile
  6938  03E3  1283               	bcf	status, 5	;RP0=0, select bank0
  6939  03E4  1303               	bcf	status, 6	;RP1=0, select bank0
  6940  03E5  00AE               	movwf	(??_ADCconvert+0)+0
  6941  03E6  1683               	bsf	status, 5	;RP0=1, select bank1
  6942  03E7  1303               	bcf	status, 6	;RP1=0, select bank1
  6943  03E8  0937               	comf	(_adcVal+1)^080h,w	;volatile
  6944  03E9  1283               	bcf	status, 5	;RP0=0, select bank0
  6945  03EA  1303               	bcf	status, 6	;RP1=0, select bank0
  6946  03EB  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6947  03EC  0AAE               	incf	(??_ADCconvert+0)+0,f
  6948  03ED  1903               	skipnz
  6949  03EE  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6950  03EF  082E               	movf	0+(??_ADCconvert+0)+0,w
  6951  03F0  3E80               	addlw	low(080h)
  6952  03F1  00A0               	movwf	(?___wmul)
  6953  03F2  082F               	movf	1+(??_ADCconvert+0)+0,w
  6954  03F3  1803               	skipnc
  6955  03F4  3E01               	addlw	1
  6956  03F5  3E00               	addlw	high(080h)
  6957  03F6  00A1               	movwf	1+(?___wmul)
  6958  03F7  300A               	movlw	low(0Ah)
  6959  03F8  00A2               	movwf	0+(?___wmul)+02h
  6960  03F9  3000               	movlw	high(0Ah)
  6961  03FA  00A3               	movwf	(0+(?___wmul)+02h)+1
  6962  03FB  160A  118A  259D   	fcall	___wmul
              120A  118A         
  6963  0400  1283               	bcf	status, 5	;RP0=0, select bank0
  6964  0401  1303               	bcf	status, 6	;RP1=0, select bank0
  6965  0402  0821               	movf	(1+(?___wmul)),w
  6966  0403  01A9               	clrf	1+(?___lwdiv)+02h
  6967  0404  07A9               	addwf	1+(?___lwdiv)+02h
  6968  0405  0820               	movf	(0+(?___wmul)),w
  6969  0406  01A8               	clrf	0+(?___lwdiv)+02h
  6970  0407  07A8               	addwf	0+(?___lwdiv)+02h
  6971                           
  6972  0408  120A  158A  2154   	fcall	___lwdiv
              120A  118A         
  6973  040D  1283               	bcf	status, 5	;RP0=0, select bank0
  6974  040E  1303               	bcf	status, 6	;RP1=0, select bank0
  6975  040F  0826               	movf	(0+(?___lwdiv)),w
  6976  0410  3E28               	addlw	low(028h)
  6977  0411  1683               	bsf	status, 5	;RP0=1, select bank1
  6978  0412  1303               	bcf	status, 6	;RP1=0, select bank1
  6979  0413  00B0               	movwf	(_IRdistance)^080h	;volatile
  6980  0414  1283               	bcf	status, 5	;RP0=0, select bank0
  6981  0415  1303               	bcf	status, 6	;RP1=0, select bank0
  6982  0416  0827               	movf	(1+(?___lwdiv)),w
  6983  0417  1803               	skipnc
  6984  0418  3E01               	addlw	1
  6985  0419  3E00               	addlw	high(028h)
  6986  041A  1683               	bsf	status, 5	;RP0=1, select bank1
  6987  041B  1303               	bcf	status, 6	;RP1=0, select bank1
  6988  041C  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  6989                           	line	79
  6990                           ;infrared.c: 79: }
  6991  041D  2D26               	goto	l3006
  6992                           	line	80
  6993                           	
  6994  041E                     l2999:	
  6995                           	
  6996  041E                     l11015:	
  6997                           ;infrared.c: 80: else if (adcVal >= 77 && adcVal < 107)
  6998  041E  3000               	movlw	high(04Dh)
  6999  041F  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7000  0420  304D               	movlw	low(04Dh)
  7001  0421  1903               	skipnz
  7002  0422  0236               	subwf	(_adcVal)^080h,w	;volatile
  7003  0423  1C03               	skipc
  7004  0424  2C26               	goto	u5011
  7005  0425  2C27               	goto	u5010
  7006  0426                     u5011:
  7007  0426  2C74               	goto	l11021
  7008  0427                     u5010:
  7009                           	
  7010  0427                     l11017:	
  7011  0427  3000               	movlw	high(06Bh)
  7012  0428  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7013  0429  306B               	movlw	low(06Bh)
  7014  042A  1903               	skipnz
  7015  042B  0236               	subwf	(_adcVal)^080h,w	;volatile
  7016  042C  1803               	skipnc
  7017  042D  2C2F               	goto	u5021
  7018  042E  2C30               	goto	u5020
  7019  042F                     u5021:
  7020  042F  2C74               	goto	l11021
  7021  0430                     u5020:
  7022                           	line	82
  7023                           	
  7024  0430                     l11019:	
  7025                           ;infrared.c: 81: {
  7026                           ;infrared.c: 82: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  7027  0430  301E               	movlw	low(01Eh)
  7028  0431  1283               	bcf	status, 5	;RP0=0, select bank0
  7029  0432  1303               	bcf	status, 6	;RP1=0, select bank0
  7030  0433  00A6               	movwf	(?___lwdiv)
  7031  0434  3000               	movlw	high(01Eh)
  7032  0435  00A7               	movwf	((?___lwdiv))+1
  7033  0436  1683               	bsf	status, 5	;RP0=1, select bank1
  7034  0437  1303               	bcf	status, 6	;RP1=0, select bank1
  7035  0438  0936               	comf	(_adcVal)^080h,w	;volatile
  7036  0439  1283               	bcf	status, 5	;RP0=0, select bank0
  7037  043A  1303               	bcf	status, 6	;RP1=0, select bank0
  7038  043B  00AE               	movwf	(??_ADCconvert+0)+0
  7039  043C  1683               	bsf	status, 5	;RP0=1, select bank1
  7040  043D  1303               	bcf	status, 6	;RP1=0, select bank1
  7041  043E  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7042  043F  1283               	bcf	status, 5	;RP0=0, select bank0
  7043  0440  1303               	bcf	status, 6	;RP1=0, select bank0
  7044  0441  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7045  0442  0AAE               	incf	(??_ADCconvert+0)+0,f
  7046  0443  1903               	skipnz
  7047  0444  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7048  0445  082E               	movf	0+(??_ADCconvert+0)+0,w
  7049  0446  3E6B               	addlw	low(06Bh)
  7050  0447  00A0               	movwf	(?___wmul)
  7051  0448  082F               	movf	1+(??_ADCconvert+0)+0,w
  7052  0449  1803               	skipnc
  7053  044A  3E01               	addlw	1
  7054  044B  3E00               	addlw	high(06Bh)
  7055  044C  00A1               	movwf	1+(?___wmul)
  7056  044D  300A               	movlw	low(0Ah)
  7057  044E  00A2               	movwf	0+(?___wmul)+02h
  7058  044F  3000               	movlw	high(0Ah)
  7059  0450  00A3               	movwf	(0+(?___wmul)+02h)+1
  7060  0451  160A  118A  259D   	fcall	___wmul
              120A  118A         
  7061  0456  1283               	bcf	status, 5	;RP0=0, select bank0
  7062  0457  1303               	bcf	status, 6	;RP1=0, select bank0
  7063  0458  0821               	movf	(1+(?___wmul)),w
  7064  0459  01A9               	clrf	1+(?___lwdiv)+02h
  7065  045A  07A9               	addwf	1+(?___lwdiv)+02h
  7066  045B  0820               	movf	(0+(?___wmul)),w
  7067  045C  01A8               	clrf	0+(?___lwdiv)+02h
  7068  045D  07A8               	addwf	0+(?___lwdiv)+02h
  7069                           
  7070  045E  120A  158A  2154   	fcall	___lwdiv
              120A  118A         
  7071  0463  1283               	bcf	status, 5	;RP0=0, select bank0
  7072  0464  1303               	bcf	status, 6	;RP1=0, select bank0
  7073  0465  0826               	movf	(0+(?___lwdiv)),w
  7074  0466  3E32               	addlw	low(032h)
  7075  0467  1683               	bsf	status, 5	;RP0=1, select bank1
  7076  0468  1303               	bcf	status, 6	;RP1=0, select bank1
  7077  0469  00B0               	movwf	(_IRdistance)^080h	;volatile
  7078  046A  1283               	bcf	status, 5	;RP0=0, select bank0
  7079  046B  1303               	bcf	status, 6	;RP1=0, select bank0
  7080  046C  0827               	movf	(1+(?___lwdiv)),w
  7081  046D  1803               	skipnc
  7082  046E  3E01               	addlw	1
  7083  046F  3E00               	addlw	high(032h)
  7084  0470  1683               	bsf	status, 5	;RP0=1, select bank1
  7085  0471  1303               	bcf	status, 6	;RP1=0, select bank1
  7086  0472  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7087                           	line	83
  7088                           ;infrared.c: 83: }
  7089  0473  2D26               	goto	l3006
  7090                           	line	84
  7091                           	
  7092  0474                     l3001:	
  7093                           	
  7094  0474                     l11021:	
  7095                           ;infrared.c: 84: else if (adcVal >= 56 && adcVal < 77)
  7096  0474  3000               	movlw	high(038h)
  7097  0475  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7098  0476  3038               	movlw	low(038h)
  7099  0477  1903               	skipnz
  7100  0478  0236               	subwf	(_adcVal)^080h,w	;volatile
  7101  0479  1C03               	skipc
  7102  047A  2C7C               	goto	u5031
  7103  047B  2C7D               	goto	u5030
  7104  047C                     u5031:
  7105  047C  2CCA               	goto	l11027
  7106  047D                     u5030:
  7107                           	
  7108  047D                     l11023:	
  7109  047D  3000               	movlw	high(04Dh)
  7110  047E  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7111  047F  304D               	movlw	low(04Dh)
  7112  0480  1903               	skipnz
  7113  0481  0236               	subwf	(_adcVal)^080h,w	;volatile
  7114  0482  1803               	skipnc
  7115  0483  2C85               	goto	u5041
  7116  0484  2C86               	goto	u5040
  7117  0485                     u5041:
  7118  0485  2CCA               	goto	l11027
  7119  0486                     u5040:
  7120                           	line	86
  7121                           	
  7122  0486                     l11025:	
  7123                           ;infrared.c: 85: {
  7124                           ;infrared.c: 86: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  7125  0486  3015               	movlw	low(015h)
  7126  0487  1283               	bcf	status, 5	;RP0=0, select bank0
  7127  0488  1303               	bcf	status, 6	;RP1=0, select bank0
  7128  0489  00A6               	movwf	(?___lwdiv)
  7129  048A  3000               	movlw	high(015h)
  7130  048B  00A7               	movwf	((?___lwdiv))+1
  7131  048C  1683               	bsf	status, 5	;RP0=1, select bank1
  7132  048D  1303               	bcf	status, 6	;RP1=0, select bank1
  7133  048E  0936               	comf	(_adcVal)^080h,w	;volatile
  7134  048F  1283               	bcf	status, 5	;RP0=0, select bank0
  7135  0490  1303               	bcf	status, 6	;RP1=0, select bank0
  7136  0491  00AE               	movwf	(??_ADCconvert+0)+0
  7137  0492  1683               	bsf	status, 5	;RP0=1, select bank1
  7138  0493  1303               	bcf	status, 6	;RP1=0, select bank1
  7139  0494  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7140  0495  1283               	bcf	status, 5	;RP0=0, select bank0
  7141  0496  1303               	bcf	status, 6	;RP1=0, select bank0
  7142  0497  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7143  0498  0AAE               	incf	(??_ADCconvert+0)+0,f
  7144  0499  1903               	skipnz
  7145  049A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7146  049B  082E               	movf	0+(??_ADCconvert+0)+0,w
  7147  049C  3E4D               	addlw	low(04Dh)
  7148  049D  00A0               	movwf	(?___wmul)
  7149  049E  082F               	movf	1+(??_ADCconvert+0)+0,w
  7150  049F  1803               	skipnc
  7151  04A0  3E01               	addlw	1
  7152  04A1  3E00               	addlw	high(04Dh)
  7153  04A2  00A1               	movwf	1+(?___wmul)
  7154  04A3  300A               	movlw	low(0Ah)
  7155  04A4  00A2               	movwf	0+(?___wmul)+02h
  7156  04A5  3000               	movlw	high(0Ah)
  7157  04A6  00A3               	movwf	(0+(?___wmul)+02h)+1
  7158  04A7  160A  118A  259D   	fcall	___wmul
              120A  118A         
  7159  04AC  1283               	bcf	status, 5	;RP0=0, select bank0
  7160  04AD  1303               	bcf	status, 6	;RP1=0, select bank0
  7161  04AE  0821               	movf	(1+(?___wmul)),w
  7162  04AF  01A9               	clrf	1+(?___lwdiv)+02h
  7163  04B0  07A9               	addwf	1+(?___lwdiv)+02h
  7164  04B1  0820               	movf	(0+(?___wmul)),w
  7165  04B2  01A8               	clrf	0+(?___lwdiv)+02h
  7166  04B3  07A8               	addwf	0+(?___lwdiv)+02h
  7167                           
  7168  04B4  120A  158A  2154   	fcall	___lwdiv
              120A  118A         
  7169  04B9  1283               	bcf	status, 5	;RP0=0, select bank0
  7170  04BA  1303               	bcf	status, 6	;RP1=0, select bank0
  7171  04BB  0826               	movf	(0+(?___lwdiv)),w
  7172  04BC  3E3C               	addlw	low(03Ch)
  7173  04BD  1683               	bsf	status, 5	;RP0=1, select bank1
  7174  04BE  1303               	bcf	status, 6	;RP1=0, select bank1
  7175  04BF  00B0               	movwf	(_IRdistance)^080h	;volatile
  7176  04C0  1283               	bcf	status, 5	;RP0=0, select bank0
  7177  04C1  1303               	bcf	status, 6	;RP1=0, select bank0
  7178  04C2  0827               	movf	(1+(?___lwdiv)),w
  7179  04C3  1803               	skipnc
  7180  04C4  3E01               	addlw	1
  7181  04C5  3E00               	addlw	high(03Ch)
  7182  04C6  1683               	bsf	status, 5	;RP0=1, select bank1
  7183  04C7  1303               	bcf	status, 6	;RP1=0, select bank1
  7184  04C8  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7185                           	line	87
  7186                           ;infrared.c: 87: }
  7187  04C9  2D26               	goto	l3006
  7188                           	line	88
  7189                           	
  7190  04CA                     l3003:	
  7191                           	
  7192  04CA                     l11027:	
  7193                           ;infrared.c: 88: else if (adcVal >= 43 && adcVal < 56)
  7194  04CA  3000               	movlw	high(02Bh)
  7195  04CB  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7196  04CC  302B               	movlw	low(02Bh)
  7197  04CD  1903               	skipnz
  7198  04CE  0236               	subwf	(_adcVal)^080h,w	;volatile
  7199  04CF  1C03               	skipc
  7200  04D0  2CD2               	goto	u5051
  7201  04D1  2CD3               	goto	u5050
  7202  04D2                     u5051:
  7203  04D2  2D26               	goto	l3006
  7204  04D3                     u5050:
  7205                           	
  7206  04D3                     l11029:	
  7207  04D3  3000               	movlw	high(038h)
  7208  04D4  0237               	subwf	(_adcVal+1)^080h,w	;volatile
  7209  04D5  3038               	movlw	low(038h)
  7210  04D6  1903               	skipnz
  7211  04D7  0236               	subwf	(_adcVal)^080h,w	;volatile
  7212  04D8  1803               	skipnc
  7213  04D9  2CDB               	goto	u5061
  7214  04DA  2CDC               	goto	u5060
  7215  04DB                     u5061:
  7216  04DB  2D26               	goto	l3006
  7217  04DC                     u5060:
  7218                           	line	90
  7219                           	
  7220  04DC                     l11031:	
  7221                           ;infrared.c: 89: {
  7222                           ;infrared.c: 90: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  7223  04DC  300D               	movlw	low(0Dh)
  7224  04DD  1283               	bcf	status, 5	;RP0=0, select bank0
  7225  04DE  1303               	bcf	status, 6	;RP1=0, select bank0
  7226  04DF  00A6               	movwf	(?___lwdiv)
  7227  04E0  3000               	movlw	high(0Dh)
  7228  04E1  00A7               	movwf	((?___lwdiv))+1
  7229  04E2  1683               	bsf	status, 5	;RP0=1, select bank1
  7230  04E3  1303               	bcf	status, 6	;RP1=0, select bank1
  7231  04E4  0936               	comf	(_adcVal)^080h,w	;volatile
  7232  04E5  1283               	bcf	status, 5	;RP0=0, select bank0
  7233  04E6  1303               	bcf	status, 6	;RP1=0, select bank0
  7234  04E7  00AE               	movwf	(??_ADCconvert+0)+0
  7235  04E8  1683               	bsf	status, 5	;RP0=1, select bank1
  7236  04E9  1303               	bcf	status, 6	;RP1=0, select bank1
  7237  04EA  0937               	comf	(_adcVal+1)^080h,w	;volatile
  7238  04EB  1283               	bcf	status, 5	;RP0=0, select bank0
  7239  04EC  1303               	bcf	status, 6	;RP1=0, select bank0
  7240  04ED  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7241  04EE  0AAE               	incf	(??_ADCconvert+0)+0,f
  7242  04EF  1903               	skipnz
  7243  04F0  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7244  04F1  082E               	movf	0+(??_ADCconvert+0)+0,w
  7245  04F2  3E38               	addlw	low(038h)
  7246  04F3  00A0               	movwf	(?___wmul)
  7247  04F4  082F               	movf	1+(??_ADCconvert+0)+0,w
  7248  04F5  1803               	skipnc
  7249  04F6  3E01               	addlw	1
  7250  04F7  3E00               	addlw	high(038h)
  7251  04F8  00A1               	movwf	1+(?___wmul)
  7252  04F9  300A               	movlw	low(0Ah)
  7253  04FA  00A2               	movwf	0+(?___wmul)+02h
  7254  04FB  3000               	movlw	high(0Ah)
  7255  04FC  00A3               	movwf	(0+(?___wmul)+02h)+1
  7256  04FD  160A  118A  259D   	fcall	___wmul
              120A  118A         
  7257  0502  1283               	bcf	status, 5	;RP0=0, select bank0
  7258  0503  1303               	bcf	status, 6	;RP1=0, select bank0
  7259  0504  0821               	movf	(1+(?___wmul)),w
  7260  0505  01A9               	clrf	1+(?___lwdiv)+02h
  7261  0506  07A9               	addwf	1+(?___lwdiv)+02h
  7262  0507  0820               	movf	(0+(?___wmul)),w
  7263  0508  01A8               	clrf	0+(?___lwdiv)+02h
  7264  0509  07A8               	addwf	0+(?___lwdiv)+02h
  7265                           
  7266  050A  120A  158A  2154   	fcall	___lwdiv
              120A  118A         
  7267  050F  1283               	bcf	status, 5	;RP0=0, select bank0
  7268  0510  1303               	bcf	status, 6	;RP1=0, select bank0
  7269  0511  0826               	movf	(0+(?___lwdiv)),w
  7270  0512  3E46               	addlw	low(046h)
  7271  0513  1683               	bsf	status, 5	;RP0=1, select bank1
  7272  0514  1303               	bcf	status, 6	;RP1=0, select bank1
  7273  0515  00B0               	movwf	(_IRdistance)^080h	;volatile
  7274  0516  1283               	bcf	status, 5	;RP0=0, select bank0
  7275  0517  1303               	bcf	status, 6	;RP1=0, select bank0
  7276  0518  0827               	movf	(1+(?___lwdiv)),w
  7277  0519  1803               	skipnc
  7278  051A  3E01               	addlw	1
  7279  051B  3E00               	addlw	high(046h)
  7280  051C  1683               	bsf	status, 5	;RP0=1, select bank1
  7281  051D  1303               	bcf	status, 6	;RP1=0, select bank1
  7282  051E  00B1               	movwf	1+(_IRdistance)^080h	;volatile
  7283  051F  2D26               	goto	l3006
  7284                           	line	91
  7285                           	
  7286  0520                     l3005:	
  7287  0520  2D26               	goto	l3006
  7288                           	line	92
  7289                           	
  7290  0521                     l3004:	
  7291  0521  2D26               	goto	l3006
  7292                           	
  7293  0522                     l3002:	
  7294  0522  2D26               	goto	l3006
  7295                           	
  7296  0523                     l3000:	
  7297  0523  2D26               	goto	l3006
  7298                           	
  7299  0524                     l2998:	
  7300  0524  2D26               	goto	l3006
  7301                           	
  7302  0525                     l2996:	
  7303  0525  2D26               	goto	l3006
  7304                           	
  7305  0526                     l2994:	
  7306                           	
  7307  0526                     l3006:	
  7308  0526  0008               	return
  7309                           	opt stack 0
  7310                           GLOBAL	__end_of_ADCconvert
  7311  0527                     	__end_of_ADCconvert:
  7312 ;; =============== function _ADCconvert ends ============
  7313                           
  7314                           	signat	_ADCconvert,88
  7315                           	global	_robotTurn
  7316                           psect	text1070,local,class=CODE,delta=2
  7317                           global __ptext1070
  7318  0C00                     __ptext1070:
  7319                           
  7320 ;; *************** function _robotTurn *****************
  7321 ;; Defined at:
  7322 ;;		line 158 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  degrees         2    2[BANK0 ] int 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;		None
  7327 ;; Return value:  Size  Location     Type
  7328 ;;		None               void
  7329 ;; Registers used:
  7330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7336 ;;      Params:         0       2       0       0       0
  7337 ;;      Locals:         0       0       0       0       0
  7338 ;;      Temps:          0       1       0       0       0
  7339 ;;      Totals:         0       3       0       0       0
  7340 ;;Total ram usage:        3 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    4
  7343 ;; This function calls:
  7344 ;;		_ser_putch
  7345 ;; This function is called by:
  7346 ;;		_main
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           psect	text1070
  7350                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7351                           	line	158
  7352                           	global	__size_of_robotTurn
  7353  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  7354                           	
  7355  0C00                     _robotTurn:	
  7356                           	opt	stack 3
  7357                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7358                           	line	161
  7359                           	
  7360  0C00                     l10981:	
  7361                           ;robot.c: 161: turnlowByte = (unsigned char)(degrees);
  7362  0C00  1283               	bcf	status, 5	;RP0=0, select bank0
  7363  0C01  1303               	bcf	status, 6	;RP1=0, select bank0
  7364  0C02  0822               	movf	(robotTurn@degrees),w
  7365  0C03  00A4               	movwf	(??_robotTurn+0)+0
  7366  0C04  0824               	movf	(??_robotTurn+0)+0,w
  7367  0C05  1683               	bsf	status, 5	;RP0=1, select bank1
  7368  0C06  1303               	bcf	status, 6	;RP1=0, select bank1
  7369  0C07  00D4               	movwf	(_turnlowByte)^080h
  7370                           	line	162
  7371                           	
  7372  0C08                     l10983:	
  7373                           ;robot.c: 162: turnhighByte = (unsigned char)(degrees >> 8);
  7374  0C08  1283               	bcf	status, 5	;RP0=0, select bank0
  7375  0C09  1303               	bcf	status, 6	;RP1=0, select bank0
  7376  0C0A  0823               	movf	(robotTurn@degrees+1),w
  7377  0C0B  00A4               	movwf	(??_robotTurn+0)+0
  7378  0C0C  0824               	movf	(??_robotTurn+0)+0,w
  7379  0C0D  1683               	bsf	status, 5	;RP0=1, select bank1
  7380  0C0E  1303               	bcf	status, 6	;RP1=0, select bank1
  7381  0C0F  00D3               	movwf	(_turnhighByte)^080h
  7382                           	line	163
  7383                           	
  7384  0C10                     l10985:	
  7385                           ;robot.c: 163: if (degrees >= 0)
  7386  0C10  1283               	bcf	status, 5	;RP0=0, select bank0
  7387  0C11  1303               	bcf	status, 6	;RP1=0, select bank0
  7388  0C12  1BA3               	btfsc	(robotTurn@degrees+1),7
  7389  0C13  2C15               	goto	u4921
  7390  0C14  2C16               	goto	u4920
  7391  0C15                     u4921:
  7392  0C15  2C35               	goto	l10989
  7393  0C16                     u4920:
  7394                           	line	165
  7395                           	
  7396  0C16                     l10987:	
  7397                           ;robot.c: 164: {
  7398                           ;robot.c: 165: ser_putch(137);
  7399  0C16  3089               	movlw	(089h)
  7400  0C17  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7401                           	line	167
  7402                           ;robot.c: 167: ser_putch(0);
  7403  0C1C  3000               	movlw	(0)
  7404  0C1D  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7405                           	line	169
  7406                           ;robot.c: 169: ser_putch(50);
  7407  0C22  3032               	movlw	(032h)
  7408  0C23  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7409                           	line	171
  7410                           ;robot.c: 171: ser_putch(0);
  7411  0C28  3000               	movlw	(0)
  7412  0C29  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7413                           	line	173
  7414                           ;robot.c: 173: ser_putch(1);
  7415  0C2E  3001               	movlw	(01h)
  7416  0C2F  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7417                           	line	174
  7418                           ;robot.c: 174: }
  7419  0C34  2C53               	goto	l6010
  7420                           	line	175
  7421                           	
  7422  0C35                     l6009:	
  7423                           	line	177
  7424                           	
  7425  0C35                     l10989:	
  7426                           ;robot.c: 175: else
  7427                           ;robot.c: 176: {
  7428                           ;robot.c: 177: ser_putch(137);
  7429  0C35  3089               	movlw	(089h)
  7430  0C36  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7431                           	line	179
  7432                           ;robot.c: 179: ser_putch(0);
  7433  0C3B  3000               	movlw	(0)
  7434  0C3C  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7435                           	line	181
  7436                           ;robot.c: 181: ser_putch(50);
  7437  0C41  3032               	movlw	(032h)
  7438  0C42  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7439                           	line	183
  7440                           ;robot.c: 183: ser_putch(255);
  7441  0C47  30FF               	movlw	(0FFh)
  7442  0C48  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7443                           	line	185
  7444                           ;robot.c: 185: ser_putch(255);
  7445  0C4D  30FF               	movlw	(0FFh)
  7446  0C4E  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7447                           	line	186
  7448                           	
  7449  0C53                     l6010:	
  7450                           	line	187
  7451                           ;robot.c: 186: }
  7452                           ;robot.c: 187: ser_putch(157);
  7453  0C53  309D               	movlw	(09Dh)
  7454  0C54  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7455                           	line	189
  7456                           ;robot.c: 189: ser_putch(turnhighByte);
  7457  0C59  1683               	bsf	status, 5	;RP0=1, select bank1
  7458  0C5A  1303               	bcf	status, 6	;RP1=0, select bank1
  7459  0C5B  0853               	movf	(_turnhighByte)^080h,w
  7460  0C5C  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7461                           	line	191
  7462                           ;robot.c: 191: ser_putch(turnlowByte);
  7463  0C61  1683               	bsf	status, 5	;RP0=1, select bank1
  7464  0C62  1303               	bcf	status, 6	;RP1=0, select bank1
  7465  0C63  0854               	movf	(_turnlowByte)^080h,w
  7466  0C64  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7467                           	line	193
  7468                           ;robot.c: 193: ser_putch(137);
  7469  0C69  3089               	movlw	(089h)
  7470  0C6A  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7471                           	line	195
  7472                           ;robot.c: 195: ser_putch(0);
  7473  0C6F  3000               	movlw	(0)
  7474  0C70  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7475                           	line	197
  7476                           ;robot.c: 197: ser_putch(0);
  7477  0C75  3000               	movlw	(0)
  7478  0C76  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7479                           	line	199
  7480                           ;robot.c: 199: ser_putch(0);
  7481  0C7B  3000               	movlw	(0)
  7482  0C7C  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7483                           	line	201
  7484                           ;robot.c: 201: ser_putch(0);
  7485  0C81  3000               	movlw	(0)
  7486  0C82  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7487                           	line	202
  7488                           	
  7489  0C87                     l6011:	
  7490  0C87  0008               	return
  7491                           	opt stack 0
  7492                           GLOBAL	__end_of_robotTurn
  7493  0C88                     	__end_of_robotTurn:
  7494 ;; =============== function _robotTurn ends ============
  7495                           
  7496                           	signat	_robotTurn,4216
  7497                           	global	_rotate
  7498                           psect	text1071,local,class=CODE,delta=2
  7499                           global __ptext1071
  7500  09A4                     __ptext1071:
  7501                           
  7502 ;; *************** function _rotate *****************
  7503 ;; Defined at:
  7504 ;;		line 66 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  numsteps        2    3[BANK0 ] unsigned int 
  7507 ;;  direction       1    5[BANK0 ] unsigned char 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  i               2    8[BANK0 ] unsigned int 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;		None               void
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0, pclath, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7519 ;;      Params:         0       3       0       0       0
  7520 ;;      Locals:         0       2       0       0       0
  7521 ;;      Temps:          0       2       0       0       0
  7522 ;;      Totals:         0       7       0       0       0
  7523 ;;Total ram usage:        7 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    4
  7526 ;; This function calls:
  7527 ;;		_spi_transfer
  7528 ;; This function is called by:
  7529 ;;		_main
  7530 ;;		_calibrateIR
  7531 ;;		_scan360
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           psect	text1071
  7535                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7536                           	line	66
  7537                           	global	__size_of_rotate
  7538  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  7539                           	
  7540  09A4                     _rotate:	
  7541                           	opt	stack 3
  7542                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  7543                           	line	68
  7544                           	
  7545  09A4                     l10953:	
  7546                           ;steppermotor.c: 68: RC0 = 1; RC1 = 1;;
  7547  09A4  1283               	bcf	status, 5	;RP0=0, select bank0
  7548  09A5  1303               	bcf	status, 6	;RP1=0, select bank0
  7549  09A6  1407               	bsf	(56/8),(56)&7
  7550  09A7  1487               	bsf	(57/8),(57)&7
  7551                           	line	69
  7552                           	
  7553  09A8                     l10955:	
  7554                           ;steppermotor.c: 69: if (direction == 0)
  7555  09A8  08A5               	movf	(rotate@direction),f
  7556  09A9  1D03               	skipz
  7557  09AA  29AC               	goto	u4901
  7558  09AB  29AD               	goto	u4900
  7559  09AC                     u4901:
  7560  09AC  29B4               	goto	l10959
  7561  09AD                     u4900:
  7562                           	line	70
  7563                           	
  7564  09AD                     l10957:	
  7565                           ;steppermotor.c: 70: spi_transfer(0b00001011);
  7566  09AD  300B               	movlw	(0Bh)
  7567  09AE  160A  118A  248B   	fcall	_spi_transfer
              120A  158A         
  7568  09B3  29BB               	goto	l10961
  7569                           	line	71
  7570                           	
  7571  09B4                     l3707:	
  7572                           	line	72
  7573                           	
  7574  09B4                     l10959:	
  7575                           ;steppermotor.c: 71: else
  7576                           ;steppermotor.c: 72: spi_transfer(0b00001001);
  7577  09B4  3009               	movlw	(09h)
  7578  09B5  160A  118A  248B   	fcall	_spi_transfer
              120A  158A         
  7579  09BA  29BB               	goto	l10961
  7580                           	
  7581  09BB                     l3708:	
  7582                           	line	73
  7583                           	
  7584  09BB                     l10961:	
  7585                           ;steppermotor.c: 73: RC0 = 0; RC1 = 0;;
  7586  09BB  1283               	bcf	status, 5	;RP0=0, select bank0
  7587  09BC  1303               	bcf	status, 6	;RP1=0, select bank0
  7588  09BD  1007               	bcf	(56/8),(56)&7
  7589                           	
  7590  09BE                     l10963:	
  7591  09BE  1087               	bcf	(57/8),(57)&7
  7592                           	line	74
  7593                           	
  7594  09BF                     l10965:	
  7595                           ;steppermotor.c: 74: for (unsigned int i = 0; i < numsteps; i++)
  7596  09BF  01A8               	clrf	(rotate@i)
  7597  09C0  01A9               	clrf	(rotate@i+1)
  7598  09C1  29D8               	goto	l3709
  7599                           	line	75
  7600                           	
  7601  09C2                     l3710:	
  7602                           	line	76
  7603                           ;steppermotor.c: 75: {
  7604                           ;steppermotor.c: 76: RC2 = 1; _nop(); RC2 = 0;;
  7605  09C2  1507               	bsf	(58/8),(58)&7
  7606  09C3  0000               	nop
  7607  09C4  1283               	bcf	status, 5	;RP0=0, select bank0
  7608  09C5  1303               	bcf	status, 6	;RP1=0, select bank0
  7609  09C6  1107               	bcf	(58/8),(58)&7
  7610                           	line	77
  7611                           	
  7612  09C7                     l10967:	
  7613                           ;steppermotor.c: 77: _delay((unsigned long)((15)*(20000000/4000.0)));
  7614                           	opt asmopt_off
  7615  09C7  3062               movlw	98
  7616  09C8  00A7               movwf	((??_rotate+0)+0+1),f
  7617  09C9  3065               	movlw	101
  7618  09CA  00A6               movwf	((??_rotate+0)+0),f
  7619  09CB                     u5707:
  7620  09CB  0BA6               	decfsz	((??_rotate+0)+0),f
  7621  09CC  29CB               	goto	u5707
  7622  09CD  0BA7               	decfsz	((??_rotate+0)+0+1),f
  7623  09CE  29CB               	goto	u5707
  7624  09CF  29D0               	nop2
  7625                           opt asmopt_on
  7626                           
  7627                           	line	74
  7628  09D0  3001               	movlw	low(01h)
  7629  09D1  1283               	bcf	status, 5	;RP0=0, select bank0
  7630  09D2  1303               	bcf	status, 6	;RP1=0, select bank0
  7631  09D3  07A8               	addwf	(rotate@i),f
  7632  09D4  1803               	skipnc
  7633  09D5  0AA9               	incf	(rotate@i+1),f
  7634  09D6  3000               	movlw	high(01h)
  7635  09D7  07A9               	addwf	(rotate@i+1),f
  7636                           	
  7637  09D8                     l3709:	
  7638  09D8  0824               	movf	(rotate@numsteps+1),w
  7639  09D9  0229               	subwf	(rotate@i+1),w
  7640  09DA  1D03               	skipz
  7641  09DB  29DE               	goto	u4915
  7642  09DC  0823               	movf	(rotate@numsteps),w
  7643  09DD  0228               	subwf	(rotate@i),w
  7644  09DE                     u4915:
  7645  09DE  1C03               	skipc
  7646  09DF  29E1               	goto	u4911
  7647  09E0  29E2               	goto	u4910
  7648  09E1                     u4911:
  7649  09E1  29C2               	goto	l3710
  7650  09E2                     u4910:
  7651                           	
  7652  09E2                     l3711:	
  7653                           	line	79
  7654                           ;steppermotor.c: 78: }
  7655                           ;steppermotor.c: 79: RC0 = 1; RC1 = 1;;
  7656  09E2  1407               	bsf	(56/8),(56)&7
  7657  09E3  1487               	bsf	(57/8),(57)&7
  7658                           	line	80
  7659                           	
  7660  09E4                     l10969:	
  7661                           ;steppermotor.c: 80: spi_transfer(0b00000000);
  7662  09E4  3000               	movlw	(0)
  7663  09E5  160A  118A  248B   	fcall	_spi_transfer
              120A  158A         
  7664                           	line	81
  7665                           	
  7666  09EA                     l10971:	
  7667                           ;steppermotor.c: 81: RC0 = 0; RC1 = 0;;
  7668  09EA  1283               	bcf	status, 5	;RP0=0, select bank0
  7669  09EB  1303               	bcf	status, 6	;RP1=0, select bank0
  7670  09EC  1007               	bcf	(56/8),(56)&7
  7671                           	
  7672  09ED                     l10973:	
  7673  09ED  1087               	bcf	(57/8),(57)&7
  7674                           	line	82
  7675                           	
  7676  09EE                     l10975:	
  7677                           ;steppermotor.c: 82: RC2 = 1; _nop(); RC2 = 0;;
  7678  09EE  1507               	bsf	(58/8),(58)&7
  7679                           	
  7680  09EF                     l10977:	
  7681  09EF  0000               	nop
  7682                           	
  7683  09F0                     l10979:	
  7684  09F0  1283               	bcf	status, 5	;RP0=0, select bank0
  7685  09F1  1303               	bcf	status, 6	;RP1=0, select bank0
  7686  09F2  1107               	bcf	(58/8),(58)&7
  7687                           	line	83
  7688                           	
  7689  09F3                     l3712:	
  7690  09F3  0008               	return
  7691                           	opt stack 0
  7692                           GLOBAL	__end_of_rotate
  7693  09F4                     	__end_of_rotate:
  7694 ;; =============== function _rotate ends ============
  7695                           
  7696                           	signat	_rotate,8312
  7697                           	global	_robo_init
  7698                           psect	text1072,local,class=CODE,delta=2
  7699                           global __ptext1072
  7700  08AE                     __ptext1072:
  7701                           
  7702 ;; *************** function _robo_init *****************
  7703 ;; Defined at:
  7704 ;;		line 26 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;		None
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;		None
  7709 ;; Return value:  Size  Location     Type
  7710 ;;		None               void
  7711 ;; Registers used:
  7712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7718 ;;      Params:         0       0       0       0       0
  7719 ;;      Locals:         0       0       0       0       0
  7720 ;;      Temps:          0       0       0       0       0
  7721 ;;      Totals:         0       0       0       0       0
  7722 ;;Total ram usage:        0 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:    4
  7725 ;; This function calls:
  7726 ;;		_ser_putch
  7727 ;; This function is called by:
  7728 ;;		_init
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           psect	text1072
  7732                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7733                           	line	26
  7734                           	global	__size_of_robo_init
  7735  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  7736                           	
  7737  08AE                     _robo_init:	
  7738                           	opt	stack 2
  7739                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7740                           	line	27
  7741                           	
  7742  08AE                     l10951:	
  7743                           ;robot.c: 27: ser_putch(128);
  7744  08AE  3080               	movlw	(080h)
  7745  08AF  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7746                           	line	28
  7747                           ;robot.c: 28: ser_putch(132);
  7748  08B4  3084               	movlw	(084h)
  7749  08B5  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7750                           	line	29
  7751                           ;robot.c: 29: ser_putch(150);
  7752  08BA  3096               	movlw	(096h)
  7753  08BB  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7754                           	line	30
  7755                           ;robot.c: 30: ser_putch(0);
  7756  08C0  3000               	movlw	(0)
  7757  08C1  160A  118A  264D   	fcall	_ser_putch
              120A  158A         
  7758                           	line	31
  7759                           	
  7760  08C6                     l5984:	
  7761  08C6  0008               	return
  7762                           	opt stack 0
  7763                           GLOBAL	__end_of_robo_init
  7764  08C7                     	__end_of_robo_init:
  7765 ;; =============== function _robo_init ends ============
  7766                           
  7767                           	signat	_robo_init,88
  7768                           	global	_lcd_write_data
  7769                           psect	text1073,local,class=CODE,delta=2
  7770                           global __ptext1073
  7771  1465                     __ptext1073:
  7772                           
  7773 ;; *************** function _lcd_write_data *****************
  7774 ;; Defined at:
  7775 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  databyte        1    wreg     unsigned char 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  databyte        1    2[BANK0 ] unsigned char 
  7780 ;; Return value:  Size  Location     Type
  7781 ;;		None               void
  7782 ;; Registers used:
  7783 ;;		wreg
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7789 ;;      Params:         0       0       0       0       0
  7790 ;;      Locals:         0       1       0       0       0
  7791 ;;      Temps:          0       2       0       0       0
  7792 ;;      Totals:         0       3       0       0       0
  7793 ;;Total ram usage:        3 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; Hardware stack levels required when called:    3
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_lcd_write_string
  7800 ;;		_lcd_write_2_digit_bcd
  7801 ;;		_lcd_write_3_digit_bcd
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           psect	text1073
  7805                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7806                           	line	30
  7807                           	global	__size_of_lcd_write_data
  7808  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  7809                           	
  7810  1465                     _lcd_write_data:	
  7811                           	opt	stack 1
  7812                           ; Regs used in _lcd_write_data: [wreg]
  7813                           ;lcd_write_data@databyte stored from wreg
  7814  1465  1283               	bcf	status, 5	;RP0=0, select bank0
  7815  1466  1303               	bcf	status, 6	;RP1=0, select bank0
  7816  1467  00A2               	movwf	(lcd_write_data@databyte)
  7817                           	line	31
  7818                           	
  7819  1468                     l10943:	
  7820                           ;lcd.c: 31: RE2 = 0;
  7821  1468  1109               	bcf	(74/8),(74)&7
  7822                           	line	32
  7823                           ;lcd.c: 32: RE1 = 0;
  7824  1469  1089               	bcf	(73/8),(73)&7
  7825                           	line	33
  7826                           ;lcd.c: 33: RE0 = 1;
  7827  146A  1409               	bsf	(72/8),(72)&7
  7828                           	line	34
  7829                           	
  7830  146B                     l10945:	
  7831                           ;lcd.c: 34: PORTD = databyte;
  7832  146B  0822               	movf	(lcd_write_data@databyte),w
  7833  146C  0088               	movwf	(8)	;volatile
  7834                           	line	35
  7835                           	
  7836  146D                     l10947:	
  7837                           ;lcd.c: 35: RE2 = 1;
  7838  146D  1509               	bsf	(74/8),(74)&7
  7839                           	line	36
  7840                           	
  7841  146E                     l10949:	
  7842                           ;lcd.c: 36: RE2 = 0;
  7843  146E  1109               	bcf	(74/8),(74)&7
  7844                           	line	37
  7845                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  7846                           	opt asmopt_off
  7847  146F  3007               movlw	7
  7848  1470  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  7849  1471  307D               	movlw	125
  7850  1472  00A0               movwf	((??_lcd_write_data+0)+0),f
  7851  1473                     u5717:
  7852  1473  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  7853  1474  2C73               	goto	u5717
  7854  1475  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  7855  1476  2C73               	goto	u5717
  7856                           opt asmopt_on
  7857                           
  7858                           	line	38
  7859                           	
  7860  1477                     l1402:	
  7861  1477  0008               	return
  7862                           	opt stack 0
  7863                           GLOBAL	__end_of_lcd_write_data
  7864  1478                     	__end_of_lcd_write_data:
  7865 ;; =============== function _lcd_write_data ends ============
  7866                           
  7867                           	signat	_lcd_write_data,4216
  7868                           	global	_lcd_write_control
  7869                           psect	text1074,local,class=CODE,delta=2
  7870                           global __ptext1074
  7871  149F                     __ptext1074:
  7872                           
  7873 ;; *************** function _lcd_write_control *****************
  7874 ;; Defined at:
  7875 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  databyte        1    wreg     unsigned char 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;  databyte        1    2[BANK0 ] unsigned char 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;		None               void
  7882 ;; Registers used:
  7883 ;;		wreg
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7889 ;;      Params:         0       0       0       0       0
  7890 ;;      Locals:         0       1       0       0       0
  7891 ;;      Temps:          0       2       0       0       0
  7892 ;;      Totals:         0       3       0       0       0
  7893 ;;Total ram usage:        3 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    3
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_lcd_set_cursor
  7900 ;;		_lcd_init
  7901 ;;		_UpdateDisplay
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           psect	text1074
  7905                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7906                           	line	18
  7907                           	global	__size_of_lcd_write_control
  7908  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  7909                           	
  7910  149F                     _lcd_write_control:	
  7911                           	opt	stack 1
  7912                           ; Regs used in _lcd_write_control: [wreg]
  7913                           ;lcd_write_control@databyte stored from wreg
  7914  149F  1283               	bcf	status, 5	;RP0=0, select bank0
  7915  14A0  1303               	bcf	status, 6	;RP1=0, select bank0
  7916  14A1  00A2               	movwf	(lcd_write_control@databyte)
  7917                           	line	19
  7918                           	
  7919  14A2                     l10935:	
  7920                           ;lcd.c: 19: RE2 = 0;
  7921  14A2  1109               	bcf	(74/8),(74)&7
  7922                           	line	20
  7923                           ;lcd.c: 20: RE1 = 0;
  7924  14A3  1089               	bcf	(73/8),(73)&7
  7925                           	line	21
  7926                           ;lcd.c: 21: RE0 = 0;
  7927  14A4  1009               	bcf	(72/8),(72)&7
  7928                           	line	22
  7929                           	
  7930  14A5                     l10937:	
  7931                           ;lcd.c: 22: PORTD = databyte;
  7932  14A5  0822               	movf	(lcd_write_control@databyte),w
  7933  14A6  0088               	movwf	(8)	;volatile
  7934                           	line	23
  7935                           	
  7936  14A7                     l10939:	
  7937                           ;lcd.c: 23: RE2 = 1;
  7938  14A7  1509               	bsf	(74/8),(74)&7
  7939                           	line	24
  7940                           	
  7941  14A8                     l10941:	
  7942                           ;lcd.c: 24: RE2 = 0;
  7943  14A8  1109               	bcf	(74/8),(74)&7
  7944                           	line	25
  7945                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  7946                           	opt asmopt_off
  7947  14A9  300D               movlw	13
  7948  14AA  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  7949  14AB  30FB               	movlw	251
  7950  14AC  00A0               movwf	((??_lcd_write_control+0)+0),f
  7951  14AD                     u5727:
  7952  14AD  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  7953  14AE  2CAD               	goto	u5727
  7954  14AF  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  7955  14B0  2CAD               	goto	u5727
  7956  14B1  2CB2               	nop2
  7957                           opt asmopt_on
  7958                           
  7959                           	line	26
  7960                           	
  7961  14B2                     l1399:	
  7962  14B2  0008               	return
  7963                           	opt stack 0
  7964                           GLOBAL	__end_of_lcd_write_control
  7965  14B3                     	__end_of_lcd_write_control:
  7966 ;; =============== function _lcd_write_control ends ============
  7967                           
  7968                           	signat	_lcd_write_control,4216
  7969                           	global	_init_adc
  7970                           psect	text1075,local,class=CODE,delta=2
  7971                           global __ptext1075
  7972  14B3                     __ptext1075:
  7973                           
  7974 ;; *************** function _init_adc *****************
  7975 ;; Defined at:
  7976 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;		None
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;		None
  7981 ;; Return value:  Size  Location     Type
  7982 ;;		None               void
  7983 ;; Registers used:
  7984 ;;		wreg, status,2
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7990 ;;      Params:         0       0       0       0       0
  7991 ;;      Locals:         0       0       0       0       0
  7992 ;;      Temps:          0       1       0       0       0
  7993 ;;      Totals:         0       1       0       0       0
  7994 ;;Total ram usage:        1 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; Hardware stack levels required when called:    3
  7997 ;; This function calls:
  7998 ;;		Nothing
  7999 ;; This function is called by:
  8000 ;;		_init
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           psect	text1075
  8004                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8005                           	line	61
  8006                           	global	__size_of_init_adc
  8007  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  8008                           	
  8009  14B3                     _init_adc:	
  8010                           	opt	stack 3
  8011                           ; Regs used in _init_adc: [wreg+status,2]
  8012                           	line	63
  8013                           	
  8014  14B3                     l10925:	
  8015                           ;adc.c: 63: PORTA = 0;
  8016  14B3  1283               	bcf	status, 5	;RP0=0, select bank0
  8017  14B4  1303               	bcf	status, 6	;RP1=0, select bank0
  8018  14B5  0185               	clrf	(5)	;volatile
  8019                           	line	64
  8020                           	
  8021  14B6                     l10927:	
  8022                           ;adc.c: 64: TRISA = 0b00111111;
  8023  14B6  303F               	movlw	(03Fh)
  8024  14B7  1683               	bsf	status, 5	;RP0=1, select bank1
  8025  14B8  1303               	bcf	status, 6	;RP1=0, select bank1
  8026  14B9  0085               	movwf	(133)^080h	;volatile
  8027                           	line	67
  8028                           	
  8029  14BA                     l10929:	
  8030                           ;adc.c: 67: ADCON0 = 0b10100001;
  8031  14BA  30A1               	movlw	(0A1h)
  8032  14BB  1283               	bcf	status, 5	;RP0=0, select bank0
  8033  14BC  1303               	bcf	status, 6	;RP1=0, select bank0
  8034  14BD  009F               	movwf	(31)	;volatile
  8035                           	line	68
  8036                           	
  8037  14BE                     l10931:	
  8038                           ;adc.c: 68: ADCON1 = 0b0000010;
  8039  14BE  3002               	movlw	(02h)
  8040  14BF  1683               	bsf	status, 5	;RP0=1, select bank1
  8041  14C0  1303               	bcf	status, 6	;RP1=0, select bank1
  8042  14C1  009F               	movwf	(159)^080h	;volatile
  8043                           	line	70
  8044                           	
  8045  14C2                     l10933:	
  8046                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8047                           	opt asmopt_off
  8048  14C2  3053               movlw	83
  8049  14C3  1283               	bcf	status, 5	;RP0=0, select bank0
  8050  14C4  1303               	bcf	status, 6	;RP1=0, select bank0
  8051  14C5  00A0               movwf	(??_init_adc+0)+0,f
  8052  14C6                     u5737:
  8053  14C6  0BA0               decfsz	(??_init_adc+0)+0,f
  8054  14C7  2CC6               	goto	u5737
  8055                           opt asmopt_on
  8056                           
  8057                           	line	72
  8058                           	
  8059  14C8                     l700:	
  8060  14C8  0008               	return
  8061                           	opt stack 0
  8062                           GLOBAL	__end_of_init_adc
  8063  14C9                     	__end_of_init_adc:
  8064 ;; =============== function _init_adc ends ============
  8065                           
  8066                           	signat	_init_adc,88
  8067                           	global	_adc_read_channel
  8068                           psect	text1076,local,class=CODE,delta=2
  8069                           global __ptext1076
  8070  173B                     __ptext1076:
  8071                           
  8072 ;; *************** function _adc_read_channel *****************
  8073 ;; Defined at:
  8074 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  channel         1    wreg     unsigned char 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;  channel         1    7[BANK0 ] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      unsigned char 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8088 ;;      Params:         0       0       0       0       0
  8089 ;;      Locals:         0       1       0       0       0
  8090 ;;      Temps:          0       1       0       0       0
  8091 ;;      Totals:         0       2       0       0       0
  8092 ;;Total ram usage:        2 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    4
  8095 ;; This function calls:
  8096 ;;		_adc_read
  8097 ;; This function is called by:
  8098 ;;		_readDistance
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           psect	text1076
  8102                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8103                           	line	20
  8104                           	global	__size_of_adc_read_channel
  8105  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  8106                           	
  8107  173B                     _adc_read_channel:	
  8108                           	opt	stack 0
  8109                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8110                           ;adc_read_channel@channel stored from wreg
  8111  173B  1283               	bcf	status, 5	;RP0=0, select bank0
  8112  173C  1303               	bcf	status, 6	;RP1=0, select bank0
  8113  173D  00A7               	movwf	(adc_read_channel@channel)
  8114                           	line	21
  8115                           	
  8116  173E                     l10909:	
  8117                           ;adc.c: 21: switch(channel)
  8118  173E  2F57               	goto	l10917
  8119                           	line	23
  8120                           ;adc.c: 22: {
  8121                           ;adc.c: 23: case 0:
  8122                           	
  8123  173F                     l690:	
  8124                           	line	24
  8125                           ;adc.c: 24: CHS0 = 0;
  8126  173F  119F               	bcf	(251/8),(251)&7
  8127                           	line	25
  8128                           ;adc.c: 25: CHS1 = 0;
  8129  1740  121F               	bcf	(252/8),(252)&7
  8130                           	line	26
  8131                           ;adc.c: 26: CHS2 = 0;
  8132  1741  129F               	bcf	(253/8),(253)&7
  8133                           	line	27
  8134                           ;adc.c: 27: break;
  8135  1742  2F68               	goto	l10919
  8136                           	line	28
  8137                           ;adc.c: 28: case 1:
  8138                           	
  8139  1743                     l692:	
  8140                           	line	29
  8141                           ;adc.c: 29: CHS0 = 1;
  8142  1743  159F               	bsf	(251/8),(251)&7
  8143                           	line	30
  8144                           ;adc.c: 30: CHS1 = 0;
  8145  1744  121F               	bcf	(252/8),(252)&7
  8146                           	line	31
  8147                           ;adc.c: 31: CHS2 = 0;
  8148  1745  129F               	bcf	(253/8),(253)&7
  8149                           	line	32
  8150                           ;adc.c: 32: break;
  8151  1746  2F68               	goto	l10919
  8152                           	line	33
  8153                           ;adc.c: 33: case 2:
  8154                           	
  8155  1747                     l693:	
  8156                           	line	34
  8157                           ;adc.c: 34: CHS0 = 0;
  8158  1747  119F               	bcf	(251/8),(251)&7
  8159                           	line	35
  8160                           ;adc.c: 35: CHS1 = 1;
  8161  1748  161F               	bsf	(252/8),(252)&7
  8162                           	line	36
  8163                           ;adc.c: 36: CHS2 = 0;
  8164  1749  129F               	bcf	(253/8),(253)&7
  8165                           	line	37
  8166                           ;adc.c: 37: break;
  8167  174A  2F68               	goto	l10919
  8168                           	line	38
  8169                           ;adc.c: 38: case 3:
  8170                           	
  8171  174B                     l694:	
  8172                           	line	39
  8173                           ;adc.c: 39: CHS0 = 1;
  8174  174B  159F               	bsf	(251/8),(251)&7
  8175                           	line	40
  8176                           ;adc.c: 40: CHS1 = 1;
  8177  174C  161F               	bsf	(252/8),(252)&7
  8178                           	line	41
  8179                           ;adc.c: 41: CHS2 = 0;
  8180  174D  129F               	bcf	(253/8),(253)&7
  8181                           	line	42
  8182                           ;adc.c: 42: break;
  8183  174E  2F68               	goto	l10919
  8184                           	line	43
  8185                           ;adc.c: 43: case 4:
  8186                           	
  8187  174F                     l695:	
  8188                           	line	44
  8189                           ;adc.c: 44: CHS0 = 0;
  8190  174F  119F               	bcf	(251/8),(251)&7
  8191                           	line	45
  8192                           ;adc.c: 45: CHS1 = 0;
  8193  1750  121F               	bcf	(252/8),(252)&7
  8194                           	line	46
  8195                           ;adc.c: 46: CHS2 = 1;
  8196  1751  169F               	bsf	(253/8),(253)&7
  8197                           	line	47
  8198                           ;adc.c: 47: break;
  8199  1752  2F68               	goto	l10919
  8200                           	line	50
  8201                           ;adc.c: 50: default:
  8202                           	
  8203  1753                     l696:	
  8204                           	line	51
  8205                           	
  8206  1753                     l10911:	
  8207                           ;adc.c: 51: return 0;
  8208  1753  3000               	movlw	(0)
  8209  1754  2F75               	goto	l697
  8210                           	
  8211  1755                     l10913:	
  8212  1755  2F75               	goto	l697
  8213                           	line	52
  8214                           	
  8215  1756                     l10915:	
  8216                           ;adc.c: 52: }
  8217  1756  2F68               	goto	l10919
  8218                           	line	21
  8219                           	
  8220  1757                     l689:	
  8221                           	
  8222  1757                     l10917:	
  8223  1757  0827               	movf	(adc_read_channel@channel),w
  8224                           	; Switch size 1, requested type "space"
  8225                           ; Number of cases is 5, Range of values is 0 to 4
  8226                           ; switch strategies available:
  8227                           ; Name         Instructions Cycles
  8228                           ; simple_byte           16     9 (average)
  8229                           ; direct_byte           23     8 (fixed)
  8230                           ; jumptable            260     6 (fixed)
  8231                           ; rangetable             9     6 (fixed)
  8232                           ; spacedrange           16     9 (fixed)
  8233                           ; locatedrange           5     3 (fixed)
  8234                           ;	Chosen strategy is simple_byte
  8235                           
  8236                           	opt asmopt_off
  8237  1758  3A00               	xorlw	0^0	; case 0
  8238  1759  1903               	skipnz
  8239  175A  2F3F               	goto	l690
  8240  175B  3A01               	xorlw	1^0	; case 1
  8241  175C  1903               	skipnz
  8242  175D  2F43               	goto	l692
  8243  175E  3A03               	xorlw	2^1	; case 2
  8244  175F  1903               	skipnz
  8245  1760  2F47               	goto	l693
  8246  1761  3A01               	xorlw	3^2	; case 3
  8247  1762  1903               	skipnz
  8248  1763  2F4B               	goto	l694
  8249  1764  3A07               	xorlw	4^3	; case 4
  8250  1765  1903               	skipnz
  8251  1766  2F4F               	goto	l695
  8252  1767  2F53               	goto	l10911
  8253                           	opt asmopt_on
  8254                           
  8255                           	line	52
  8256                           	
  8257  1768                     l691:	
  8258                           	line	54
  8259                           	
  8260  1768                     l10919:	
  8261                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8262                           	opt asmopt_off
  8263  1768  3053               movlw	83
  8264  1769  00A6               movwf	(??_adc_read_channel+0)+0,f
  8265  176A                     u5747:
  8266  176A  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  8267  176B  2F6A               	goto	u5747
  8268                           opt asmopt_on
  8269                           
  8270                           	line	56
  8271                           	
  8272  176C                     l10921:	
  8273                           ;adc.c: 56: return adc_read();
  8274  176C  160A  118A  251F   	fcall	_adc_read
              160A  118A         
  8275  1771  1283               	bcf	status, 5	;RP0=0, select bank0
  8276  1772  1303               	bcf	status, 6	;RP1=0, select bank0
  8277  1773  0820               	movf	(0+(?_adc_read)),w
  8278  1774  2F75               	goto	l697
  8279                           	
  8280  1775                     l10923:	
  8281                           	line	58
  8282                           	
  8283  1775                     l697:	
  8284  1775  0008               	return
  8285                           	opt stack 0
  8286                           GLOBAL	__end_of_adc_read_channel
  8287  1776                     	__end_of_adc_read_channel:
  8288 ;; =============== function _adc_read_channel ends ============
  8289                           
  8290                           	signat	_adc_read_channel,4217
  8291                           	global	___awmod
  8292                           psect	text1077,local,class=CODE,delta=2
  8293                           global __ptext1077
  8294  0AA5                     __ptext1077:
  8295                           
  8296 ;; *************** function ___awmod *****************
  8297 ;; Defined at:
  8298 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;  divisor         2    0[BANK0 ] int 
  8301 ;;  dividend        2    2[BANK0 ] int 
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  sign            1    6[BANK0 ] unsigned char 
  8304 ;;  counter         1    5[BANK0 ] unsigned char 
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  2    0[BANK0 ] int 
  8307 ;; Registers used:
  8308 ;;		wreg, status,2, status,0
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8314 ;;      Params:         0       4       0       0       0
  8315 ;;      Locals:         0       2       0       0       0
  8316 ;;      Temps:          0       1       0       0       0
  8317 ;;      Totals:         0       7       0       0       0
  8318 ;;Total ram usage:        7 bytes
  8319 ;; Hardware stack levels used:    1
  8320 ;; Hardware stack levels required when called:    3
  8321 ;; This function calls:
  8322 ;;		Nothing
  8323 ;; This function is called by:
  8324 ;;		_UpdateDisplay
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           psect	text1077
  8328                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8329                           	line	5
  8330                           	global	__size_of___awmod
  8331  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  8332                           	
  8333  0AA5                     ___awmod:	
  8334                           	opt	stack 2
  8335                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8336                           	line	8
  8337                           	
  8338  0AA5                     l10807:	
  8339  0AA5  1283               	bcf	status, 5	;RP0=0, select bank0
  8340  0AA6  1303               	bcf	status, 6	;RP1=0, select bank0
  8341  0AA7  01A6               	clrf	(___awmod@sign)
  8342                           	line	9
  8343  0AA8  1FA3               	btfss	(___awmod@dividend+1),7
  8344  0AA9  2AAB               	goto	u4691
  8345  0AAA  2AAC               	goto	u4690
  8346  0AAB                     u4691:
  8347  0AAB  2AB5               	goto	l10811
  8348  0AAC                     u4690:
  8349                           	line	10
  8350                           	
  8351  0AAC                     l10809:	
  8352  0AAC  09A2               	comf	(___awmod@dividend),f
  8353  0AAD  09A3               	comf	(___awmod@dividend+1),f
  8354  0AAE  0AA2               	incf	(___awmod@dividend),f
  8355  0AAF  1903               	skipnz
  8356  0AB0  0AA3               	incf	(___awmod@dividend+1),f
  8357                           	line	11
  8358  0AB1  01A6               	clrf	(___awmod@sign)
  8359  0AB2  1403               	bsf	status,0
  8360  0AB3  0DA6               	rlf	(___awmod@sign),f
  8361  0AB4  2AB5               	goto	l10811
  8362                           	line	12
  8363                           	
  8364  0AB5                     l7667:	
  8365                           	line	13
  8366                           	
  8367  0AB5                     l10811:	
  8368  0AB5  1FA1               	btfss	(___awmod@divisor+1),7
  8369  0AB6  2AB8               	goto	u4701
  8370  0AB7  2AB9               	goto	u4700
  8371  0AB8                     u4701:
  8372  0AB8  2ABF               	goto	l10815
  8373  0AB9                     u4700:
  8374                           	line	14
  8375                           	
  8376  0AB9                     l10813:	
  8377  0AB9  09A0               	comf	(___awmod@divisor),f
  8378  0ABA  09A1               	comf	(___awmod@divisor+1),f
  8379  0ABB  0AA0               	incf	(___awmod@divisor),f
  8380  0ABC  1903               	skipnz
  8381  0ABD  0AA1               	incf	(___awmod@divisor+1),f
  8382  0ABE  2ABF               	goto	l10815
  8383                           	
  8384  0ABF                     l7668:	
  8385                           	line	15
  8386                           	
  8387  0ABF                     l10815:	
  8388  0ABF  0821               	movf	(___awmod@divisor+1),w
  8389  0AC0  0420               	iorwf	(___awmod@divisor),w
  8390  0AC1  1903               	skipnz
  8391  0AC2  2AC4               	goto	u4711
  8392  0AC3  2AC5               	goto	u4710
  8393  0AC4                     u4711:
  8394  0AC4  2AFB               	goto	l10833
  8395  0AC5                     u4710:
  8396                           	line	16
  8397                           	
  8398  0AC5                     l10817:	
  8399  0AC5  01A5               	clrf	(___awmod@counter)
  8400  0AC6  1403               	bsf	status,0
  8401  0AC7  0DA5               	rlf	(___awmod@counter),f
  8402                           	line	17
  8403  0AC8  2AD5               	goto	l10823
  8404                           	
  8405  0AC9                     l7671:	
  8406                           	line	18
  8407                           	
  8408  0AC9                     l10819:	
  8409  0AC9  3001               	movlw	01h
  8410                           	
  8411  0ACA                     u4725:
  8412  0ACA  1003               	clrc
  8413  0ACB  0DA0               	rlf	(___awmod@divisor),f
  8414  0ACC  0DA1               	rlf	(___awmod@divisor+1),f
  8415  0ACD  3EFF               	addlw	-1
  8416  0ACE  1D03               	skipz
  8417  0ACF  2ACA               	goto	u4725
  8418                           	line	19
  8419                           	
  8420  0AD0                     l10821:	
  8421  0AD0  3001               	movlw	(01h)
  8422  0AD1  00A4               	movwf	(??___awmod+0)+0
  8423  0AD2  0824               	movf	(??___awmod+0)+0,w
  8424  0AD3  07A5               	addwf	(___awmod@counter),f
  8425  0AD4  2AD5               	goto	l10823
  8426                           	line	20
  8427                           	
  8428  0AD5                     l7670:	
  8429                           	line	17
  8430                           	
  8431  0AD5                     l10823:	
  8432  0AD5  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  8433  0AD6  2AD8               	goto	u4731
  8434  0AD7  2AD9               	goto	u4730
  8435  0AD8                     u4731:
  8436  0AD8  2AC9               	goto	l10819
  8437  0AD9                     u4730:
  8438  0AD9  2ADB               	goto	l10825
  8439                           	
  8440  0ADA                     l7672:	
  8441  0ADA  2ADB               	goto	l10825
  8442                           	line	21
  8443                           	
  8444  0ADB                     l7673:	
  8445                           	line	22
  8446                           	
  8447  0ADB                     l10825:	
  8448  0ADB  0821               	movf	(___awmod@divisor+1),w
  8449  0ADC  0223               	subwf	(___awmod@dividend+1),w
  8450  0ADD  1D03               	skipz
  8451  0ADE  2AE1               	goto	u4745
  8452  0ADF  0820               	movf	(___awmod@divisor),w
  8453  0AE0  0222               	subwf	(___awmod@dividend),w
  8454  0AE1                     u4745:
  8455  0AE1  1C03               	skipc
  8456  0AE2  2AE4               	goto	u4741
  8457  0AE3  2AE5               	goto	u4740
  8458  0AE4                     u4741:
  8459  0AE4  2AEC               	goto	l10829
  8460  0AE5                     u4740:
  8461                           	line	23
  8462                           	
  8463  0AE5                     l10827:	
  8464  0AE5  0820               	movf	(___awmod@divisor),w
  8465  0AE6  02A2               	subwf	(___awmod@dividend),f
  8466  0AE7  0821               	movf	(___awmod@divisor+1),w
  8467  0AE8  1C03               	skipc
  8468  0AE9  03A3               	decf	(___awmod@dividend+1),f
  8469  0AEA  02A3               	subwf	(___awmod@dividend+1),f
  8470  0AEB  2AEC               	goto	l10829
  8471                           	
  8472  0AEC                     l7674:	
  8473                           	line	24
  8474                           	
  8475  0AEC                     l10829:	
  8476  0AEC  3001               	movlw	01h
  8477                           	
  8478  0AED                     u4755:
  8479  0AED  1003               	clrc
  8480  0AEE  0CA1               	rrf	(___awmod@divisor+1),f
  8481  0AEF  0CA0               	rrf	(___awmod@divisor),f
  8482  0AF0  3EFF               	addlw	-1
  8483  0AF1  1D03               	skipz
  8484  0AF2  2AED               	goto	u4755
  8485                           	line	25
  8486                           	
  8487  0AF3                     l10831:	
  8488  0AF3  3001               	movlw	low(01h)
  8489  0AF4  02A5               	subwf	(___awmod@counter),f
  8490  0AF5  1D03               	btfss	status,2
  8491  0AF6  2AF8               	goto	u4761
  8492  0AF7  2AF9               	goto	u4760
  8493  0AF8                     u4761:
  8494  0AF8  2ADB               	goto	l10825
  8495  0AF9                     u4760:
  8496  0AF9  2AFB               	goto	l10833
  8497                           	
  8498  0AFA                     l7675:	
  8499  0AFA  2AFB               	goto	l10833
  8500                           	line	26
  8501                           	
  8502  0AFB                     l7669:	
  8503                           	line	27
  8504                           	
  8505  0AFB                     l10833:	
  8506  0AFB  0826               	movf	(___awmod@sign),w
  8507  0AFC  1D03               	skipz
  8508  0AFD  2AFF               	goto	u4770
  8509  0AFE  2B05               	goto	l10837
  8510  0AFF                     u4770:
  8511                           	line	28
  8512                           	
  8513  0AFF                     l10835:	
  8514  0AFF  09A2               	comf	(___awmod@dividend),f
  8515  0B00  09A3               	comf	(___awmod@dividend+1),f
  8516  0B01  0AA2               	incf	(___awmod@dividend),f
  8517  0B02  1903               	skipnz
  8518  0B03  0AA3               	incf	(___awmod@dividend+1),f
  8519  0B04  2B05               	goto	l10837
  8520                           	
  8521  0B05                     l7676:	
  8522                           	line	29
  8523                           	
  8524  0B05                     l10837:	
  8525  0B05  0823               	movf	(___awmod@dividend+1),w
  8526  0B06  01A1               	clrf	(?___awmod+1)
  8527  0B07  07A1               	addwf	(?___awmod+1)
  8528  0B08  0822               	movf	(___awmod@dividend),w
  8529  0B09  01A0               	clrf	(?___awmod)
  8530  0B0A  07A0               	addwf	(?___awmod)
  8531                           
  8532  0B0B  2B0C               	goto	l7677
  8533                           	
  8534  0B0C                     l10839:	
  8535                           	line	30
  8536                           	
  8537  0B0C                     l7677:	
  8538  0B0C  0008               	return
  8539                           	opt stack 0
  8540                           GLOBAL	__end_of___awmod
  8541  0B0D                     	__end_of___awmod:
  8542 ;; =============== function ___awmod ends ============
  8543                           
  8544                           	signat	___awmod,8314
  8545                           	global	___fttol
  8546                           psect	text1078,local,class=CODE,delta=2
  8547                           global __ptext1078
  8548  0DC5                     __ptext1078:
  8549                           
  8550 ;; *************** function ___fttol *****************
  8551 ;; Defined at:
  8552 ;;		line 45 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;  f1              3    8[BANK0 ] float 
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;  lval            4   17[BANK0 ] unsigned long 
  8557 ;;  exp1            1   21[BANK0 ] unsigned char 
  8558 ;;  sign1           1   16[BANK0 ] unsigned char 
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  4    8[BANK0 ] long 
  8561 ;; Registers used:
  8562 ;;		wreg, status,2, status,0
  8563 ;; Tracked objects:
  8564 ;;		On entry : 0/0
  8565 ;;		On exit  : 0/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8568 ;;      Params:         0       4       0       0       0
  8569 ;;      Locals:         0       6       0       0       0
  8570 ;;      Temps:          0       4       0       0       0
  8571 ;;      Totals:         0      14       0       0       0
  8572 ;;Total ram usage:       14 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; Hardware stack levels required when called:    3
  8575 ;; This function calls:
  8576 ;;		Nothing
  8577 ;; This function is called by:
  8578 ;;		_main
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           psect	text1078
  8582                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8583                           	line	45
  8584                           	global	__size_of___fttol
  8585  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  8586                           	
  8587  0DC5                     ___fttol:	
  8588                           	opt	stack 4
  8589                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8590                           	line	49
  8591                           	
  8592  0DC5                     l10751:	
  8593  0DC5  1283               	bcf	status, 5	;RP0=0, select bank0
  8594  0DC6  1303               	bcf	status, 6	;RP1=0, select bank0
  8595  0DC7  0828               	movf	(___fttol@f1),w
  8596  0DC8  00AC               	movwf	((??___fttol+0)+0)
  8597  0DC9  0829               	movf	(___fttol@f1+1),w
  8598  0DCA  00AD               	movwf	((??___fttol+0)+0+1)
  8599  0DCB  082A               	movf	(___fttol@f1+2),w
  8600  0DCC  00AE               	movwf	((??___fttol+0)+0+2)
  8601  0DCD  1003               	clrc
  8602  0DCE  0D2D               	rlf	(??___fttol+0)+1,w
  8603  0DCF  0D2E               	rlf	(??___fttol+0)+2,w
  8604  0DD0  00AF               	movwf	(??___fttol+3)+0
  8605  0DD1  082F               	movf	(??___fttol+3)+0,w
  8606  0DD2  00B5               	movwf	(___fttol@exp1)
  8607  0DD3  08B5               	movf	((___fttol@exp1)),f
  8608  0DD4  1D03               	skipz
  8609  0DD5  2DD7               	goto	u4581
  8610  0DD6  2DD8               	goto	u4580
  8611  0DD7                     u4581:
  8612  0DD7  2DE2               	goto	l10757
  8613  0DD8                     u4580:
  8614                           	line	50
  8615                           	
  8616  0DD8                     l10753:	
  8617  0DD8  3000               	movlw	0
  8618  0DD9  00AB               	movwf	(?___fttol+3)
  8619  0DDA  3000               	movlw	0
  8620  0DDB  00AA               	movwf	(?___fttol+2)
  8621  0DDC  3000               	movlw	0
  8622  0DDD  00A9               	movwf	(?___fttol+1)
  8623  0DDE  3000               	movlw	0
  8624  0DDF  00A8               	movwf	(?___fttol)
  8625                           
  8626  0DE0  2E6A               	goto	l7569
  8627                           	
  8628  0DE1                     l10755:	
  8629  0DE1  2E6A               	goto	l7569
  8630                           	
  8631  0DE2                     l7568:	
  8632                           	line	51
  8633                           	
  8634  0DE2                     l10757:	
  8635  0DE2  0828               	movf	(___fttol@f1),w
  8636  0DE3  00AC               	movwf	((??___fttol+0)+0)
  8637  0DE4  0829               	movf	(___fttol@f1+1),w
  8638  0DE5  00AD               	movwf	((??___fttol+0)+0+1)
  8639  0DE6  082A               	movf	(___fttol@f1+2),w
  8640  0DE7  00AE               	movwf	((??___fttol+0)+0+2)
  8641  0DE8  3017               	movlw	017h
  8642  0DE9                     u4595:
  8643  0DE9  1003               	clrc
  8644  0DEA  0CAE               	rrf	(??___fttol+0)+2,f
  8645  0DEB  0CAD               	rrf	(??___fttol+0)+1,f
  8646  0DEC  0CAC               	rrf	(??___fttol+0)+0,f
  8647  0DED                     u4590:
  8648  0DED  3EFF               	addlw	-1
  8649  0DEE  1D03               	skipz
  8650  0DEF  2DE9               	goto	u4595
  8651  0DF0  082C               	movf	0+(??___fttol+0)+0,w
  8652  0DF1  00AF               	movwf	(??___fttol+3)+0
  8653  0DF2  082F               	movf	(??___fttol+3)+0,w
  8654  0DF3  00B0               	movwf	(___fttol@sign1)
  8655                           	line	52
  8656                           	
  8657  0DF4                     l10759:	
  8658  0DF4  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
  8659                           	line	53
  8660                           	
  8661  0DF5                     l10761:	
  8662  0DF5  30FF               	movlw	0FFh
  8663  0DF6  05A8               	andwf	(___fttol@f1),f
  8664  0DF7  30FF               	movlw	0FFh
  8665  0DF8  05A9               	andwf	(___fttol@f1+1),f
  8666  0DF9  3000               	movlw	0
  8667  0DFA  05AA               	andwf	(___fttol@f1+2),f
  8668                           	line	54
  8669                           	
  8670  0DFB                     l10763:	
  8671  0DFB  0828               	movf	(___fttol@f1),w
  8672  0DFC  00B1               	movwf	(___fttol@lval)
  8673  0DFD  0829               	movf	(___fttol@f1+1),w
  8674  0DFE  00B2               	movwf	((___fttol@lval))+1
  8675  0DFF  082A               	movf	(___fttol@f1+2),w
  8676  0E00  00B3               	movwf	((___fttol@lval))+2
  8677  0E01  01B4               	clrf	((___fttol@lval))+3
  8678                           	line	55
  8679                           	
  8680  0E02                     l10765:	
  8681  0E02  308E               	movlw	low(08Eh)
  8682  0E03  02B5               	subwf	(___fttol@exp1),f
  8683                           	line	56
  8684                           	
  8685  0E04                     l10767:	
  8686  0E04  1FB5               	btfss	(___fttol@exp1),7
  8687  0E05  2E07               	goto	u4601
  8688  0E06  2E08               	goto	u4600
  8689  0E07                     u4601:
  8690  0E07  2E2D               	goto	l10777
  8691  0E08                     u4600:
  8692                           	line	57
  8693                           	
  8694  0E08                     l10769:	
  8695  0E08  0835               	movf	(___fttol@exp1),w
  8696  0E09  3A80               	xorlw	80h
  8697  0E0A  3E8F               	addlw	-((-15)^80h)
  8698  0E0B  1803               	skipnc
  8699  0E0C  2E0E               	goto	u4611
  8700  0E0D  2E0F               	goto	u4610
  8701  0E0E                     u4611:
  8702  0E0E  2E1A               	goto	l10775
  8703  0E0F                     u4610:
  8704                           	line	58
  8705                           	
  8706  0E0F                     l10771:	
  8707  0E0F  3000               	movlw	0
  8708  0E10  00AB               	movwf	(?___fttol+3)
  8709  0E11  3000               	movlw	0
  8710  0E12  00AA               	movwf	(?___fttol+2)
  8711  0E13  3000               	movlw	0
  8712  0E14  00A9               	movwf	(?___fttol+1)
  8713  0E15  3000               	movlw	0
  8714  0E16  00A8               	movwf	(?___fttol)
  8715                           
  8716  0E17  2E6A               	goto	l7569
  8717                           	
  8718  0E18                     l10773:	
  8719  0E18  2E6A               	goto	l7569
  8720                           	
  8721  0E19                     l7571:	
  8722  0E19  2E1A               	goto	l10775
  8723                           	line	59
  8724                           	
  8725  0E1A                     l7572:	
  8726                           	line	60
  8727                           	
  8728  0E1A                     l10775:	
  8729  0E1A  3001               	movlw	01h
  8730  0E1B                     u4625:
  8731  0E1B  1003               	clrc
  8732  0E1C  0CB4               	rrf	(___fttol@lval+3),f
  8733  0E1D  0CB3               	rrf	(___fttol@lval+2),f
  8734  0E1E  0CB2               	rrf	(___fttol@lval+1),f
  8735  0E1F  0CB1               	rrf	(___fttol@lval),f
  8736  0E20  3EFF               	addlw	-1
  8737  0E21  1D03               	skipz
  8738  0E22  2E1B               	goto	u4625
  8739                           
  8740                           	line	61
  8741  0E23  3001               	movlw	(01h)
  8742  0E24  00AC               	movwf	(??___fttol+0)+0
  8743  0E25  082C               	movf	(??___fttol+0)+0,w
  8744  0E26  07B5               	addwf	(___fttol@exp1),f
  8745  0E27  1D03               	btfss	status,2
  8746  0E28  2E2A               	goto	u4631
  8747  0E29  2E2B               	goto	u4630
  8748  0E2A                     u4631:
  8749  0E2A  2E1A               	goto	l10775
  8750  0E2B                     u4630:
  8751  0E2B  2E51               	goto	l10787
  8752                           	
  8753  0E2C                     l7573:	
  8754                           	line	62
  8755  0E2C  2E51               	goto	l10787
  8756                           	
  8757  0E2D                     l7570:	
  8758                           	line	63
  8759                           	
  8760  0E2D                     l10777:	
  8761  0E2D  3018               	movlw	(018h)
  8762  0E2E  0235               	subwf	(___fttol@exp1),w
  8763  0E2F  1C03               	skipc
  8764  0E30  2E32               	goto	u4641
  8765  0E31  2E33               	goto	u4640
  8766  0E32                     u4641:
  8767  0E32  2E4A               	goto	l10785
  8768  0E33                     u4640:
  8769                           	line	64
  8770                           	
  8771  0E33                     l10779:	
  8772  0E33  3000               	movlw	0
  8773  0E34  00AB               	movwf	(?___fttol+3)
  8774  0E35  3000               	movlw	0
  8775  0E36  00AA               	movwf	(?___fttol+2)
  8776  0E37  3000               	movlw	0
  8777  0E38  00A9               	movwf	(?___fttol+1)
  8778  0E39  3000               	movlw	0
  8779  0E3A  00A8               	movwf	(?___fttol)
  8780                           
  8781  0E3B  2E6A               	goto	l7569
  8782                           	
  8783  0E3C                     l10781:	
  8784  0E3C  2E6A               	goto	l7569
  8785                           	
  8786  0E3D                     l7575:	
  8787                           	line	65
  8788  0E3D  2E4A               	goto	l10785
  8789                           	
  8790  0E3E                     l7577:	
  8791                           	line	66
  8792                           	
  8793  0E3E                     l10783:	
  8794  0E3E  3001               	movlw	01h
  8795  0E3F  00AC               	movwf	(??___fttol+0)+0
  8796  0E40                     u4655:
  8797  0E40  1003               	clrc
  8798  0E41  0DB1               	rlf	(___fttol@lval),f
  8799  0E42  0DB2               	rlf	(___fttol@lval+1),f
  8800  0E43  0DB3               	rlf	(___fttol@lval+2),f
  8801  0E44  0DB4               	rlf	(___fttol@lval+3),f
  8802  0E45  0BAC               	decfsz	(??___fttol+0)+0
  8803  0E46  2E40               	goto	u4655
  8804                           	line	67
  8805  0E47  3001               	movlw	low(01h)
  8806  0E48  02B5               	subwf	(___fttol@exp1),f
  8807  0E49  2E4A               	goto	l10785
  8808                           	line	68
  8809                           	
  8810  0E4A                     l7576:	
  8811                           	line	65
  8812                           	
  8813  0E4A                     l10785:	
  8814  0E4A  08B5               	movf	(___fttol@exp1),f
  8815  0E4B  1D03               	skipz
  8816  0E4C  2E4E               	goto	u4661
  8817  0E4D  2E4F               	goto	u4660
  8818  0E4E                     u4661:
  8819  0E4E  2E3E               	goto	l10783
  8820  0E4F                     u4660:
  8821  0E4F  2E51               	goto	l10787
  8822                           	
  8823  0E50                     l7578:	
  8824  0E50  2E51               	goto	l10787
  8825                           	line	69
  8826                           	
  8827  0E51                     l7574:	
  8828                           	line	70
  8829                           	
  8830  0E51                     l10787:	
  8831  0E51  0830               	movf	(___fttol@sign1),w
  8832  0E52  1D03               	skipz
  8833  0E53  2E55               	goto	u4670
  8834  0E54  2E61               	goto	l10791
  8835  0E55                     u4670:
  8836                           	line	71
  8837                           	
  8838  0E55                     l10789:	
  8839  0E55  09B1               	comf	(___fttol@lval),f
  8840  0E56  09B2               	comf	(___fttol@lval+1),f
  8841  0E57  09B3               	comf	(___fttol@lval+2),f
  8842  0E58  09B4               	comf	(___fttol@lval+3),f
  8843  0E59  0AB1               	incf	(___fttol@lval),f
  8844  0E5A  1903               	skipnz
  8845  0E5B  0AB2               	incf	(___fttol@lval+1),f
  8846  0E5C  1903               	skipnz
  8847  0E5D  0AB3               	incf	(___fttol@lval+2),f
  8848  0E5E  1903               	skipnz
  8849  0E5F  0AB4               	incf	(___fttol@lval+3),f
  8850  0E60  2E61               	goto	l10791
  8851                           	
  8852  0E61                     l7579:	
  8853                           	line	72
  8854                           	
  8855  0E61                     l10791:	
  8856  0E61  0834               	movf	(___fttol@lval+3),w
  8857  0E62  00AB               	movwf	(?___fttol+3)
  8858  0E63  0833               	movf	(___fttol@lval+2),w
  8859  0E64  00AA               	movwf	(?___fttol+2)
  8860  0E65  0832               	movf	(___fttol@lval+1),w
  8861  0E66  00A9               	movwf	(?___fttol+1)
  8862  0E67  0831               	movf	(___fttol@lval),w
  8863  0E68  00A8               	movwf	(?___fttol)
  8864                           
  8865  0E69  2E6A               	goto	l7569
  8866                           	
  8867  0E6A                     l10793:	
  8868                           	line	73
  8869                           	
  8870  0E6A                     l7569:	
  8871  0E6A  0008               	return
  8872                           	opt stack 0
  8873                           GLOBAL	__end_of___fttol
  8874  0E6B                     	__end_of___fttol:
  8875 ;; =============== function ___fttol ends ============
  8876                           
  8877                           	signat	___fttol,4220
  8878                           	global	___ftpack
  8879                           psect	text1079,local,class=CODE,delta=2
  8880                           global __ptext1079
  8881  0B83                     __ptext1079:
  8882                           
  8883 ;; *************** function ___ftpack *****************
  8884 ;; Defined at:
  8885 ;;		line 63 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  arg             3    0[BANK0 ] unsigned um
  8888 ;;  exp             1    3[BANK0 ] unsigned char 
  8889 ;;  sign            1    4[BANK0 ] unsigned char 
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;		None
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  3    0[BANK0 ] float 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8901 ;;      Params:         0       5       0       0       0
  8902 ;;      Locals:         0       0       0       0       0
  8903 ;;      Temps:          0       3       0       0       0
  8904 ;;      Totals:         0       8       0       0       0
  8905 ;;Total ram usage:        8 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    3
  8908 ;; This function calls:
  8909 ;;		Nothing
  8910 ;; This function is called by:
  8911 ;;		___ftmul
  8912 ;;		___awtoft
  8913 ;;		___ftadd
  8914 ;;		___ftdiv
  8915 ;;		___lbtoft
  8916 ;;		___abtoft
  8917 ;;		___lwtoft
  8918 ;;		___altoft
  8919 ;;		___lltoft
  8920 ;;		___attoft
  8921 ;;		___lttoft
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           psect	text1079
  8925                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\float.c"
  8926                           	line	63
  8927                           	global	__size_of___ftpack
  8928  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  8929                           	
  8930  0B83                     ___ftpack:	
  8931                           	opt	stack 3
  8932                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8933                           	line	64
  8934                           	
  8935  0B83                     l10677:	
  8936  0B83  1283               	bcf	status, 5	;RP0=0, select bank0
  8937  0B84  1303               	bcf	status, 6	;RP1=0, select bank0
  8938  0B85  0823               	movf	(___ftpack@exp),w
  8939  0B86  1D03               	skipz
  8940  0B87  2B89               	goto	u4390
  8941  0B88  2B91               	goto	l10681
  8942  0B89                     u4390:
  8943                           	
  8944  0B89                     l10679:	
  8945  0B89  0822               	movf	(___ftpack@arg+2),w
  8946  0B8A  0421               	iorwf	(___ftpack@arg+1),w
  8947  0B8B  0420               	iorwf	(___ftpack@arg),w
  8948  0B8C  1D03               	skipz
  8949  0B8D  2B8F               	goto	u4401
  8950  0B8E  2B90               	goto	u4400
  8951  0B8F                     u4401:
  8952  0B8F  2BA7               	goto	l10687
  8953  0B90                     u4400:
  8954  0B90  2B91               	goto	l10681
  8955                           	
  8956  0B91                     l7793:	
  8957                           	line	65
  8958                           	
  8959  0B91                     l10681:	
  8960  0B91  3000               	movlw	0x0
  8961  0B92  00A0               	movwf	(?___ftpack)
  8962  0B93  3000               	movlw	0x0
  8963  0B94  00A1               	movwf	(?___ftpack+1)
  8964  0B95  3000               	movlw	0x0
  8965  0B96  00A2               	movwf	(?___ftpack+2)
  8966  0B97  2BFF               	goto	l7794
  8967                           	
  8968  0B98                     l10683:	
  8969  0B98  2BFF               	goto	l7794
  8970                           	
  8971  0B99                     l7791:	
  8972                           	line	66
  8973  0B99  2BA7               	goto	l10687
  8974                           	
  8975  0B9A                     l7796:	
  8976                           	line	67
  8977                           	
  8978  0B9A                     l10685:	
  8979  0B9A  3001               	movlw	(01h)
  8980  0B9B  00A5               	movwf	(??___ftpack+0)+0
  8981  0B9C  0825               	movf	(??___ftpack+0)+0,w
  8982  0B9D  07A3               	addwf	(___ftpack@exp),f
  8983                           	line	68
  8984  0B9E  3001               	movlw	01h
  8985  0B9F                     u4415:
  8986  0B9F  1003               	clrc
  8987  0BA0  0CA2               	rrf	(___ftpack@arg+2),f
  8988  0BA1  0CA1               	rrf	(___ftpack@arg+1),f
  8989  0BA2  0CA0               	rrf	(___ftpack@arg),f
  8990  0BA3  3EFF               	addlw	-1
  8991  0BA4  1D03               	skipz
  8992  0BA5  2B9F               	goto	u4415
  8993                           
  8994  0BA6  2BA7               	goto	l10687
  8995                           	line	69
  8996                           	
  8997  0BA7                     l7795:	
  8998                           	line	66
  8999                           	
  9000  0BA7                     l10687:	
  9001  0BA7  30FE               	movlw	low highword(0FE0000h)
  9002  0BA8  0522               	andwf	(___ftpack@arg+2),w
  9003  0BA9  1D03               	btfss	status,2
  9004  0BAA  2BAC               	goto	u4421
  9005  0BAB  2BAD               	goto	u4420
  9006  0BAC                     u4421:
  9007  0BAC  2B9A               	goto	l10685
  9008  0BAD                     u4420:
  9009  0BAD  2BC5               	goto	l7798
  9010                           	
  9011  0BAE                     l7797:	
  9012                           	line	70
  9013  0BAE  2BC5               	goto	l7798
  9014                           	
  9015  0BAF                     l7799:	
  9016                           	line	71
  9017                           	
  9018  0BAF                     l10689:	
  9019  0BAF  3001               	movlw	(01h)
  9020  0BB0  00A5               	movwf	(??___ftpack+0)+0
  9021  0BB1  0825               	movf	(??___ftpack+0)+0,w
  9022  0BB2  07A3               	addwf	(___ftpack@exp),f
  9023                           	line	72
  9024                           	
  9025  0BB3                     l10691:	
  9026  0BB3  3001               	movlw	01h
  9027  0BB4  07A0               	addwf	(___ftpack@arg),f
  9028  0BB5  3000               	movlw	0
  9029  0BB6  1803               	skipnc
  9030  0BB7  3001               movlw 1
  9031  0BB8  07A1               	addwf	(___ftpack@arg+1),f
  9032  0BB9  3000               	movlw	0
  9033  0BBA  1803               	skipnc
  9034  0BBB  3001               movlw 1
  9035  0BBC  07A2               	addwf	(___ftpack@arg+2),f
  9036                           	line	73
  9037                           	
  9038  0BBD                     l10693:	
  9039  0BBD  3001               	movlw	01h
  9040  0BBE                     u4435:
  9041  0BBE  1003               	clrc
  9042  0BBF  0CA2               	rrf	(___ftpack@arg+2),f
  9043  0BC0  0CA1               	rrf	(___ftpack@arg+1),f
  9044  0BC1  0CA0               	rrf	(___ftpack@arg),f
  9045  0BC2  3EFF               	addlw	-1
  9046  0BC3  1D03               	skipz
  9047  0BC4  2BBE               	goto	u4435
  9048                           
  9049                           	line	74
  9050                           	
  9051  0BC5                     l7798:	
  9052                           	line	70
  9053  0BC5  30FF               	movlw	low highword(0FF0000h)
  9054  0BC6  0522               	andwf	(___ftpack@arg+2),w
  9055  0BC7  1D03               	btfss	status,2
  9056  0BC8  2BCA               	goto	u4441
  9057  0BC9  2BCB               	goto	u4440
  9058  0BCA                     u4441:
  9059  0BCA  2BAF               	goto	l10689
  9060  0BCB                     u4440:
  9061  0BCB  2BD8               	goto	l10697
  9062                           	
  9063  0BCC                     l7800:	
  9064                           	line	75
  9065  0BCC  2BD8               	goto	l10697
  9066                           	
  9067  0BCD                     l7802:	
  9068                           	line	76
  9069                           	
  9070  0BCD                     l10695:	
  9071  0BCD  3001               	movlw	low(01h)
  9072  0BCE  02A3               	subwf	(___ftpack@exp),f
  9073                           	line	77
  9074  0BCF  3001               	movlw	01h
  9075  0BD0                     u4455:
  9076  0BD0  1003               	clrc
  9077  0BD1  0DA0               	rlf	(___ftpack@arg),f
  9078  0BD2  0DA1               	rlf	(___ftpack@arg+1),f
  9079  0BD3  0DA2               	rlf	(___ftpack@arg+2),f
  9080  0BD4  3EFF               	addlw	-1
  9081  0BD5  1D03               	skipz
  9082  0BD6  2BD0               	goto	u4455
  9083  0BD7  2BD8               	goto	l10697
  9084                           	line	78
  9085                           	
  9086  0BD8                     l7801:	
  9087                           	line	75
  9088                           	
  9089  0BD8                     l10697:	
  9090  0BD8  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  9091  0BD9  2BDB               	goto	u4461
  9092  0BDA  2BDC               	goto	u4460
  9093  0BDB                     u4461:
  9094  0BDB  2BCD               	goto	l10695
  9095  0BDC                     u4460:
  9096                           	
  9097  0BDC                     l7803:	
  9098                           	line	79
  9099  0BDC  1823               	btfsc	(___ftpack@exp),(0)&7
  9100  0BDD  2BDF               	goto	u4471
  9101  0BDE  2BE0               	goto	u4470
  9102  0BDF                     u4471:
  9103  0BDF  2BE6               	goto	l7804
  9104  0BE0                     u4470:
  9105                           	line	80
  9106                           	
  9107  0BE0                     l10699:	
  9108  0BE0  30FF               	movlw	0FFh
  9109  0BE1  05A0               	andwf	(___ftpack@arg),f
  9110  0BE2  307F               	movlw	07Fh
  9111  0BE3  05A1               	andwf	(___ftpack@arg+1),f
  9112  0BE4  30FF               	movlw	0FFh
  9113  0BE5  05A2               	andwf	(___ftpack@arg+2),f
  9114                           	
  9115  0BE6                     l7804:	
  9116                           	line	81
  9117  0BE6  1003               	clrc
  9118  0BE7  0CA3               	rrf	(___ftpack@exp),f
  9119                           
  9120                           	line	82
  9121                           	
  9122  0BE8                     l10701:	
  9123  0BE8  0823               	movf	(___ftpack@exp),w
  9124  0BE9  00A5               	movwf	((??___ftpack+0)+0)
  9125  0BEA  01A6               	clrf	((??___ftpack+0)+0+1)
  9126  0BEB  01A7               	clrf	((??___ftpack+0)+0+2)
  9127  0BEC  3010               	movlw	010h
  9128  0BED                     u4485:
  9129  0BED  1003               	clrc
  9130  0BEE  0DA5               	rlf	(??___ftpack+0)+0,f
  9131  0BEF  0DA6               	rlf	(??___ftpack+0)+1,f
  9132  0BF0  0DA7               	rlf	(??___ftpack+0)+2,f
  9133  0BF1                     u4480:
  9134  0BF1  3EFF               	addlw	-1
  9135  0BF2  1D03               	skipz
  9136  0BF3  2BED               	goto	u4485
  9137  0BF4  0825               	movf	0+(??___ftpack+0)+0,w
  9138  0BF5  04A0               	iorwf	(___ftpack@arg),f
  9139  0BF6  0826               	movf	1+(??___ftpack+0)+0,w
  9140  0BF7  04A1               	iorwf	(___ftpack@arg+1),f
  9141  0BF8  0827               	movf	2+(??___ftpack+0)+0,w
  9142  0BF9  04A2               	iorwf	(___ftpack@arg+2),f
  9143                           	line	83
  9144                           	
  9145  0BFA                     l10703:	
  9146  0BFA  0824               	movf	(___ftpack@sign),w
  9147  0BFB  1D03               	skipz
  9148  0BFC  2BFE               	goto	u4490
  9149  0BFD  2BFF               	goto	l7805
  9150  0BFE                     u4490:
  9151                           	line	84
  9152                           	
  9153  0BFE                     l10705:	
  9154  0BFE  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  9155                           	
  9156  0BFF                     l7805:	
  9157                           	line	85
  9158                           	line	86
  9159                           	
  9160  0BFF                     l7794:	
  9161  0BFF  0008               	return
  9162                           	opt stack 0
  9163                           GLOBAL	__end_of___ftpack
  9164  0C00                     	__end_of___ftpack:
  9165 ;; =============== function ___ftpack ends ============
  9166                           
  9167                           	signat	___ftpack,12411
  9168                           	global	___lwmod
  9169                           psect	text1080,local,class=CODE,delta=2
  9170                           global __ptext1080
  9171  17BA                     __ptext1080:
  9172                           
  9173 ;; *************** function ___lwmod *****************
  9174 ;; Defined at:
  9175 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  divisor         2   14[BANK0 ] unsigned int 
  9178 ;;  dividend        2   16[BANK0 ] unsigned int 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  counter         1   19[BANK0 ] unsigned char 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  2   14[BANK0 ] unsigned int 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9190 ;;      Params:         0       4       0       0       0
  9191 ;;      Locals:         0       1       0       0       0
  9192 ;;      Temps:          0       1       0       0       0
  9193 ;;      Totals:         0       6       0       0       0
  9194 ;;Total ram usage:        6 bytes
  9195 ;; Hardware stack levels used:    1
  9196 ;; Hardware stack levels required when called:    3
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		_sprintf
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           psect	text1080
  9204                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9205                           	line	5
  9206                           	global	__size_of___lwmod
  9207  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  9208                           	
  9209  17BA                     ___lwmod:	
  9210                           	opt	stack 1
  9211                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9212                           	line	8
  9213                           	
  9214  17BA                     l10585:	
  9215  17BA  1283               	bcf	status, 5	;RP0=0, select bank0
  9216  17BB  1303               	bcf	status, 6	;RP1=0, select bank0
  9217  17BC  082F               	movf	(___lwmod@divisor+1),w
  9218  17BD  042E               	iorwf	(___lwmod@divisor),w
  9219  17BE  1903               	skipnz
  9220  17BF  2FC1               	goto	u4091
  9221  17C0  2FC2               	goto	u4090
  9222  17C1                     u4091:
  9223  17C1  2FF8               	goto	l10603
  9224  17C2                     u4090:
  9225                           	line	9
  9226                           	
  9227  17C2                     l10587:	
  9228  17C2  01B3               	clrf	(___lwmod@counter)
  9229  17C3  1403               	bsf	status,0
  9230  17C4  0DB3               	rlf	(___lwmod@counter),f
  9231                           	line	10
  9232  17C5  2FD2               	goto	l10593
  9233                           	
  9234  17C6                     l7477:	
  9235                           	line	11
  9236                           	
  9237  17C6                     l10589:	
  9238  17C6  3001               	movlw	01h
  9239                           	
  9240  17C7                     u4105:
  9241  17C7  1003               	clrc
  9242  17C8  0DAE               	rlf	(___lwmod@divisor),f
  9243  17C9  0DAF               	rlf	(___lwmod@divisor+1),f
  9244  17CA  3EFF               	addlw	-1
  9245  17CB  1D03               	skipz
  9246  17CC  2FC7               	goto	u4105
  9247                           	line	12
  9248                           	
  9249  17CD                     l10591:	
  9250  17CD  3001               	movlw	(01h)
  9251  17CE  00B2               	movwf	(??___lwmod+0)+0
  9252  17CF  0832               	movf	(??___lwmod+0)+0,w
  9253  17D0  07B3               	addwf	(___lwmod@counter),f
  9254  17D1  2FD2               	goto	l10593
  9255                           	line	13
  9256                           	
  9257  17D2                     l7476:	
  9258                           	line	10
  9259                           	
  9260  17D2                     l10593:	
  9261  17D2  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  9262  17D3  2FD5               	goto	u4111
  9263  17D4  2FD6               	goto	u4110
  9264  17D5                     u4111:
  9265  17D5  2FC6               	goto	l10589
  9266  17D6                     u4110:
  9267  17D6  2FD8               	goto	l10595
  9268                           	
  9269  17D7                     l7478:	
  9270  17D7  2FD8               	goto	l10595
  9271                           	line	14
  9272                           	
  9273  17D8                     l7479:	
  9274                           	line	15
  9275                           	
  9276  17D8                     l10595:	
  9277  17D8  082F               	movf	(___lwmod@divisor+1),w
  9278  17D9  0231               	subwf	(___lwmod@dividend+1),w
  9279  17DA  1D03               	skipz
  9280  17DB  2FDE               	goto	u4125
  9281  17DC  082E               	movf	(___lwmod@divisor),w
  9282  17DD  0230               	subwf	(___lwmod@dividend),w
  9283  17DE                     u4125:
  9284  17DE  1C03               	skipc
  9285  17DF  2FE1               	goto	u4121
  9286  17E0  2FE2               	goto	u4120
  9287  17E1                     u4121:
  9288  17E1  2FE9               	goto	l10599
  9289  17E2                     u4120:
  9290                           	line	16
  9291                           	
  9292  17E2                     l10597:	
  9293  17E2  082E               	movf	(___lwmod@divisor),w
  9294  17E3  02B0               	subwf	(___lwmod@dividend),f
  9295  17E4  082F               	movf	(___lwmod@divisor+1),w
  9296  17E5  1C03               	skipc
  9297  17E6  03B1               	decf	(___lwmod@dividend+1),f
  9298  17E7  02B1               	subwf	(___lwmod@dividend+1),f
  9299  17E8  2FE9               	goto	l10599
  9300                           	
  9301  17E9                     l7480:	
  9302                           	line	17
  9303                           	
  9304  17E9                     l10599:	
  9305  17E9  3001               	movlw	01h
  9306                           	
  9307  17EA                     u4135:
  9308  17EA  1003               	clrc
  9309  17EB  0CAF               	rrf	(___lwmod@divisor+1),f
  9310  17EC  0CAE               	rrf	(___lwmod@divisor),f
  9311  17ED  3EFF               	addlw	-1
  9312  17EE  1D03               	skipz
  9313  17EF  2FEA               	goto	u4135
  9314                           	line	18
  9315                           	
  9316  17F0                     l10601:	
  9317  17F0  3001               	movlw	low(01h)
  9318  17F1  02B3               	subwf	(___lwmod@counter),f
  9319  17F2  1D03               	btfss	status,2
  9320  17F3  2FF5               	goto	u4141
  9321  17F4  2FF6               	goto	u4140
  9322  17F5                     u4141:
  9323  17F5  2FD8               	goto	l10595
  9324  17F6                     u4140:
  9325  17F6  2FF8               	goto	l10603
  9326                           	
  9327  17F7                     l7481:	
  9328  17F7  2FF8               	goto	l10603
  9329                           	line	19
  9330                           	
  9331  17F8                     l7475:	
  9332                           	line	20
  9333                           	
  9334  17F8                     l10603:	
  9335  17F8  0831               	movf	(___lwmod@dividend+1),w
  9336  17F9  01AF               	clrf	(?___lwmod+1)
  9337  17FA  07AF               	addwf	(?___lwmod+1)
  9338  17FB  0830               	movf	(___lwmod@dividend),w
  9339  17FC  01AE               	clrf	(?___lwmod)
  9340  17FD  07AE               	addwf	(?___lwmod)
  9341                           
  9342  17FE  2FFF               	goto	l7482
  9343                           	
  9344  17FF                     l10605:	
  9345                           	line	21
  9346                           	
  9347  17FF                     l7482:	
  9348  17FF  0008               	return
  9349                           	opt stack 0
  9350                           GLOBAL	__end_of___lwmod
  9351  1800                     	__end_of___lwmod:
  9352 ;; =============== function ___lwmod ends ============
  9353                           
  9354                           	signat	___lwmod,8314
  9355                           	global	___lwdiv
  9356                           psect	text1081,local,class=CODE,delta=2
  9357                           global __ptext1081
  9358  0954                     __ptext1081:
  9359                           
  9360 ;; *************** function ___lwdiv *****************
  9361 ;; Defined at:
  9362 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  divisor         2    6[BANK0 ] unsigned int 
  9365 ;;  dividend        2    8[BANK0 ] unsigned int 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  quotient        2   11[BANK0 ] unsigned int 
  9368 ;;  counter         1   13[BANK0 ] unsigned char 
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  2    6[BANK0 ] unsigned int 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9378 ;;      Params:         0       4       0       0       0
  9379 ;;      Locals:         0       3       0       0       0
  9380 ;;      Temps:          0       1       0       0       0
  9381 ;;      Totals:         0       8       0       0       0
  9382 ;;Total ram usage:        8 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; Hardware stack levels required when called:    3
  9385 ;; This function calls:
  9386 ;;		Nothing
  9387 ;; This function is called by:
  9388 ;;		_readAvgDistance
  9389 ;;		_ADCconvert
  9390 ;;		_sprintf
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           psect	text1081
  9394                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9395                           	line	5
  9396                           	global	__size_of___lwdiv
  9397  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  9398                           	
  9399  0954                     ___lwdiv:	
  9400                           	opt	stack 1
  9401                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9402                           	line	9
  9403                           	
  9404  0954                     l10559:	
  9405  0954  1283               	bcf	status, 5	;RP0=0, select bank0
  9406  0955  1303               	bcf	status, 6	;RP1=0, select bank0
  9407  0956  01AB               	clrf	(___lwdiv@quotient)
  9408  0957  01AC               	clrf	(___lwdiv@quotient+1)
  9409                           	line	10
  9410                           	
  9411  0958                     l10561:	
  9412  0958  0827               	movf	(___lwdiv@divisor+1),w
  9413  0959  0426               	iorwf	(___lwdiv@divisor),w
  9414  095A  1903               	skipnz
  9415  095B  295D               	goto	u4021
  9416  095C  295E               	goto	u4020
  9417  095D                     u4021:
  9418  095D  299C               	goto	l10581
  9419  095E                     u4020:
  9420                           	line	11
  9421                           	
  9422  095E                     l10563:	
  9423  095E  01AD               	clrf	(___lwdiv@counter)
  9424  095F  1403               	bsf	status,0
  9425  0960  0DAD               	rlf	(___lwdiv@counter),f
  9426                           	line	12
  9427  0961  296E               	goto	l10569
  9428                           	
  9429  0962                     l7467:	
  9430                           	line	13
  9431                           	
  9432  0962                     l10565:	
  9433  0962  3001               	movlw	01h
  9434                           	
  9435  0963                     u4035:
  9436  0963  1003               	clrc
  9437  0964  0DA6               	rlf	(___lwdiv@divisor),f
  9438  0965  0DA7               	rlf	(___lwdiv@divisor+1),f
  9439  0966  3EFF               	addlw	-1
  9440  0967  1D03               	skipz
  9441  0968  2963               	goto	u4035
  9442                           	line	14
  9443                           	
  9444  0969                     l10567:	
  9445  0969  3001               	movlw	(01h)
  9446  096A  00AA               	movwf	(??___lwdiv+0)+0
  9447  096B  082A               	movf	(??___lwdiv+0)+0,w
  9448  096C  07AD               	addwf	(___lwdiv@counter),f
  9449  096D  296E               	goto	l10569
  9450                           	line	15
  9451                           	
  9452  096E                     l7466:	
  9453                           	line	12
  9454                           	
  9455  096E                     l10569:	
  9456  096E  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  9457  096F  2971               	goto	u4041
  9458  0970  2972               	goto	u4040
  9459  0971                     u4041:
  9460  0971  2962               	goto	l10565
  9461  0972                     u4040:
  9462  0972  2974               	goto	l10571
  9463                           	
  9464  0973                     l7468:	
  9465  0973  2974               	goto	l10571
  9466                           	line	16
  9467                           	
  9468  0974                     l7469:	
  9469                           	line	17
  9470                           	
  9471  0974                     l10571:	
  9472  0974  3001               	movlw	01h
  9473                           	
  9474  0975                     u4055:
  9475  0975  1003               	clrc
  9476  0976  0DAB               	rlf	(___lwdiv@quotient),f
  9477  0977  0DAC               	rlf	(___lwdiv@quotient+1),f
  9478  0978  3EFF               	addlw	-1
  9479  0979  1D03               	skipz
  9480  097A  2975               	goto	u4055
  9481                           	line	18
  9482  097B  0827               	movf	(___lwdiv@divisor+1),w
  9483  097C  0229               	subwf	(___lwdiv@dividend+1),w
  9484  097D  1D03               	skipz
  9485  097E  2981               	goto	u4065
  9486  097F  0826               	movf	(___lwdiv@divisor),w
  9487  0980  0228               	subwf	(___lwdiv@dividend),w
  9488  0981                     u4065:
  9489  0981  1C03               	skipc
  9490  0982  2984               	goto	u4061
  9491  0983  2985               	goto	u4060
  9492  0984                     u4061:
  9493  0984  298D               	goto	l10577
  9494  0985                     u4060:
  9495                           	line	19
  9496                           	
  9497  0985                     l10573:	
  9498  0985  0826               	movf	(___lwdiv@divisor),w
  9499  0986  02A8               	subwf	(___lwdiv@dividend),f
  9500  0987  0827               	movf	(___lwdiv@divisor+1),w
  9501  0988  1C03               	skipc
  9502  0989  03A9               	decf	(___lwdiv@dividend+1),f
  9503  098A  02A9               	subwf	(___lwdiv@dividend+1),f
  9504                           	line	20
  9505                           	
  9506  098B                     l10575:	
  9507  098B  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  9508  098C  298D               	goto	l10577
  9509                           	line	21
  9510                           	
  9511  098D                     l7470:	
  9512                           	line	22
  9513                           	
  9514  098D                     l10577:	
  9515  098D  3001               	movlw	01h
  9516                           	
  9517  098E                     u4075:
  9518  098E  1003               	clrc
  9519  098F  0CA7               	rrf	(___lwdiv@divisor+1),f
  9520  0990  0CA6               	rrf	(___lwdiv@divisor),f
  9521  0991  3EFF               	addlw	-1
  9522  0992  1D03               	skipz
  9523  0993  298E               	goto	u4075
  9524                           	line	23
  9525                           	
  9526  0994                     l10579:	
  9527  0994  3001               	movlw	low(01h)
  9528  0995  02AD               	subwf	(___lwdiv@counter),f
  9529  0996  1D03               	btfss	status,2
  9530  0997  2999               	goto	u4081
  9531  0998  299A               	goto	u4080
  9532  0999                     u4081:
  9533  0999  2974               	goto	l10571
  9534  099A                     u4080:
  9535  099A  299C               	goto	l10581
  9536                           	
  9537  099B                     l7471:	
  9538  099B  299C               	goto	l10581
  9539                           	line	24
  9540                           	
  9541  099C                     l7465:	
  9542                           	line	25
  9543                           	
  9544  099C                     l10581:	
  9545  099C  082C               	movf	(___lwdiv@quotient+1),w
  9546  099D  01A7               	clrf	(?___lwdiv+1)
  9547  099E  07A7               	addwf	(?___lwdiv+1)
  9548  099F  082B               	movf	(___lwdiv@quotient),w
  9549  09A0  01A6               	clrf	(?___lwdiv)
  9550  09A1  07A6               	addwf	(?___lwdiv)
  9551                           
  9552  09A2  29A3               	goto	l7472
  9553                           	
  9554  09A3                     l10583:	
  9555                           	line	26
  9556                           	
  9557  09A3                     l7472:	
  9558  09A3  0008               	return
  9559                           	opt stack 0
  9560                           GLOBAL	__end_of___lwdiv
  9561  09A4                     	__end_of___lwdiv:
  9562 ;; =============== function ___lwdiv ends ============
  9563                           
  9564                           	signat	___lwdiv,8314
  9565                           	global	___wmul
  9566                           psect	text1082,local,class=CODE,delta=2
  9567                           global __ptext1082
  9568  159D                     __ptext1082:
  9569                           
  9570 ;; *************** function ___wmul *****************
  9571 ;; Defined at:
  9572 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9575 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  product         2    4[BANK0 ] unsigned int 
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  2    0[BANK0 ] unsigned int 
  9580 ;; Registers used:
  9581 ;;		wreg, status,2, status,0
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9587 ;;      Params:         0       4       0       0       0
  9588 ;;      Locals:         0       2       0       0       0
  9589 ;;      Temps:          0       0       0       0       0
  9590 ;;      Totals:         0       6       0       0       0
  9591 ;;Total ram usage:        6 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:    3
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_ADCconvert
  9598 ;;		_abs
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           psect	text1082
  9602                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  9603                           	line	3
  9604                           	global	__size_of___wmul
  9605  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  9606                           	
  9607  159D                     ___wmul:	
  9608                           	opt	stack 2
  9609                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9610                           	line	4
  9611                           	
  9612  159D                     l10547:	
  9613  159D  1283               	bcf	status, 5	;RP0=0, select bank0
  9614  159E  1303               	bcf	status, 6	;RP1=0, select bank0
  9615  159F  01A4               	clrf	(___wmul@product)
  9616  15A0  01A5               	clrf	(___wmul@product+1)
  9617  15A1  2DA2               	goto	l10549
  9618                           	line	6
  9619                           	
  9620  15A2                     l7459:	
  9621                           	line	7
  9622                           	
  9623  15A2                     l10549:	
  9624  15A2  1C20               	btfss	(___wmul@multiplier),(0)&7
  9625  15A3  2DA5               	goto	u3981
  9626  15A4  2DA6               	goto	u3980
  9627  15A5                     u3981:
  9628  15A5  2DAC               	goto	l7460
  9629  15A6                     u3980:
  9630                           	line	8
  9631                           	
  9632  15A6                     l10551:	
  9633  15A6  0822               	movf	(___wmul@multiplicand),w
  9634  15A7  07A4               	addwf	(___wmul@product),f
  9635  15A8  1803               	skipnc
  9636  15A9  0AA5               	incf	(___wmul@product+1),f
  9637  15AA  0823               	movf	(___wmul@multiplicand+1),w
  9638  15AB  07A5               	addwf	(___wmul@product+1),f
  9639                           	
  9640  15AC                     l7460:	
  9641                           	line	9
  9642  15AC  3001               	movlw	01h
  9643                           	
  9644  15AD                     u3995:
  9645  15AD  1003               	clrc
  9646  15AE  0DA2               	rlf	(___wmul@multiplicand),f
  9647  15AF  0DA3               	rlf	(___wmul@multiplicand+1),f
  9648  15B0  3EFF               	addlw	-1
  9649  15B1  1D03               	skipz
  9650  15B2  2DAD               	goto	u3995
  9651                           	line	10
  9652                           	
  9653  15B3                     l10553:	
  9654  15B3  3001               	movlw	01h
  9655                           	
  9656  15B4                     u4005:
  9657  15B4  1003               	clrc
  9658  15B5  0CA1               	rrf	(___wmul@multiplier+1),f
  9659  15B6  0CA0               	rrf	(___wmul@multiplier),f
  9660  15B7  3EFF               	addlw	-1
  9661  15B8  1D03               	skipz
  9662  15B9  2DB4               	goto	u4005
  9663                           	line	11
  9664  15BA  0821               	movf	((___wmul@multiplier+1)),w
  9665  15BB  0420               	iorwf	((___wmul@multiplier)),w
  9666  15BC  1D03               	skipz
  9667  15BD  2DBF               	goto	u4011
  9668  15BE  2DC0               	goto	u4010
  9669  15BF                     u4011:
  9670  15BF  2DA2               	goto	l10549
  9671  15C0                     u4010:
  9672  15C0  2DC1               	goto	l10555
  9673                           	
  9674  15C1                     l7461:	
  9675                           	line	12
  9676                           	
  9677  15C1                     l10555:	
  9678  15C1  0825               	movf	(___wmul@product+1),w
  9679  15C2  01A1               	clrf	(?___wmul+1)
  9680  15C3  07A1               	addwf	(?___wmul+1)
  9681  15C4  0824               	movf	(___wmul@product),w
  9682  15C5  01A0               	clrf	(?___wmul)
  9683  15C6  07A0               	addwf	(?___wmul)
  9684                           
  9685  15C7  2DC8               	goto	l7462
  9686                           	
  9687  15C8                     l10557:	
  9688                           	line	13
  9689                           	
  9690  15C8                     l7462:	
  9691  15C8  0008               	return
  9692                           	opt stack 0
  9693                           GLOBAL	__end_of___wmul
  9694  15C9                     	__end_of___wmul:
  9695 ;; =============== function ___wmul ends ============
  9696                           
  9697                           	signat	___wmul,8314
  9698                           	global	_ser_isrx
  9699                           psect	text1083,local,class=CODE,delta=2
  9700                           global __ptext1083
  9701  14DF                     __ptext1083:
  9702                           
  9703 ;; *************** function _ser_isrx *****************
  9704 ;; Defined at:
  9705 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;		None
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;		None
  9710 ;; Return value:  Size  Location     Type
  9711 ;;		None               void
  9712 ;; Registers used:
  9713 ;;		wreg, status,2, status,0
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9719 ;;      Params:         0       0       0       0       0
  9720 ;;      Locals:         0       0       0       0       0
  9721 ;;      Temps:          0       0       0       0       0
  9722 ;;      Totals:         0       0       0       0       0
  9723 ;;Total ram usage:        0 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:    3
  9726 ;; This function calls:
  9727 ;;		Nothing
  9728 ;; This function is called by:
  9729 ;;		_ser_getch
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           psect	text1083
  9733                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  9734                           	line	45
  9735                           	global	__size_of_ser_isrx
  9736  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  9737                           	
  9738  14DF                     _ser_isrx:	
  9739                           	opt	stack 1
  9740                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  9741                           	line	46
  9742                           	
  9743  14DF                     l10499:	
  9744                           ;ser.c: 46: if(OERR) {
  9745  14DF  1283               	bcf	status, 5	;RP0=0, select bank0
  9746  14E0  1303               	bcf	status, 6	;RP1=0, select bank0
  9747  14E1  1C98               	btfss	(193/8),(193)&7
  9748  14E2  2CE4               	goto	u3911
  9749  14E3  2CE5               	goto	u3910
  9750  14E4                     u3911:
  9751  14E4  2CEA               	goto	l10507
  9752  14E5                     u3910:
  9753                           	line	47
  9754                           	
  9755  14E5                     l10501:	
  9756                           ;ser.c: 47: CREN = 0;
  9757  14E5  1218               	bcf	(196/8),(196)&7
  9758                           	line	48
  9759                           ;ser.c: 48: CREN = 1;
  9760  14E6  1618               	bsf	(196/8),(196)&7
  9761                           	line	49
  9762                           	
  9763  14E7                     l10503:	
  9764                           ;ser.c: 49: return 0;
  9765  14E7  1003               	clrc
  9766                           	
  9767  14E8  2CF7               	goto	l6714
  9768                           	
  9769  14E9                     l10505:	
  9770  14E9  2CF7               	goto	l6714
  9771                           	line	50
  9772                           	
  9773  14EA                     l6713:	
  9774                           	line	51
  9775                           	
  9776  14EA                     l10507:	
  9777                           ;ser.c: 50: }
  9778                           ;ser.c: 51: return (rxiptr!=rxoptr);
  9779  14EA  1683               	bsf	status, 5	;RP0=1, select bank1
  9780  14EB  1303               	bcf	status, 6	;RP1=0, select bank1
  9781  14EC  0850               	movf	(_rxiptr)^080h,w	;volatile
  9782  14ED  0651               	xorwf	(_rxoptr)^080h,w	;volatile
  9783  14EE  1D03               	skipz
  9784  14EF  2CF1               	goto	u3921
  9785  14F0  2CF2               	goto	u3920
  9786  14F1                     u3921:
  9787  14F1  2CF4               	goto	l10511
  9788  14F2                     u3920:
  9789                           	
  9790  14F2                     l10509:	
  9791  14F2  1003               	clrc
  9792                           	
  9793  14F3  2CF7               	goto	l6714
  9794                           	
  9795  14F4                     l10235:	
  9796                           	
  9797  14F4                     l10511:	
  9798  14F4  1403               	setc
  9799                           	
  9800  14F5  2CF7               	goto	l6714
  9801                           	
  9802  14F6                     l10237:	
  9803  14F6  2CF7               	goto	l6714
  9804                           	
  9805  14F7                     l10513:	
  9806                           	line	52
  9807                           	
  9808  14F7                     l6714:	
  9809  14F7  0008               	return
  9810                           	opt stack 0
  9811                           GLOBAL	__end_of_ser_isrx
  9812  14F8                     	__end_of_ser_isrx:
  9813 ;; =============== function _ser_isrx ends ============
  9814                           
  9815                           	signat	_ser_isrx,88
  9816                           	global	_spi_transfer
  9817                           psect	text1084,local,class=CODE,delta=2
  9818                           global __ptext1084
  9819  148B                     __ptext1084:
  9820                           
  9821 ;; *************** function _spi_transfer *****************
  9822 ;; Defined at:
  9823 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;  data            1    wreg     unsigned char 
  9826 ;; Auto vars:     Size  Location     Type
  9827 ;;  data            1    2[BANK0 ] unsigned char 
  9828 ;;  temp            1    1[BANK0 ] unsigned char 
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      unsigned char 
  9831 ;; Registers used:
  9832 ;;		wreg
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9838 ;;      Params:         0       0       0       0       0
  9839 ;;      Locals:         0       2       0       0       0
  9840 ;;      Temps:          0       1       0       0       0
  9841 ;;      Totals:         0       3       0       0       0
  9842 ;;Total ram usage:        3 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:    3
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		_rotate
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           psect	text1084
  9852                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9853                           	line	50
  9854                           	global	__size_of_spi_transfer
  9855  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  9856                           	
  9857  148B                     _spi_transfer:	
  9858                           	opt	stack 3
  9859                           ; Regs used in _spi_transfer: [wreg]
  9860                           ;spi_transfer@data stored from wreg
  9861  148B  1283               	bcf	status, 5	;RP0=0, select bank0
  9862  148C  1303               	bcf	status, 6	;RP1=0, select bank0
  9863  148D  00A2               	movwf	(spi_transfer@data)
  9864                           	line	51
  9865                           	
  9866  148E                     l10425:	
  9867                           ;steppermotor.c: 51: unsigned char temp = 0;
  9868  148E  01A1               	clrf	(spi_transfer@temp)
  9869                           	line	53
  9870                           ;steppermotor.c: 53: SSPIF = 0;
  9871  148F  118C               	bcf	(99/8),(99)&7
  9872                           	line	54
  9873                           	
  9874  1490                     l10427:	
  9875                           ;steppermotor.c: 54: SSPBUF = data;
  9876  1490  0822               	movf	(spi_transfer@data),w
  9877  1491  0093               	movwf	(19)	;volatile
  9878                           	line	56
  9879                           ;steppermotor.c: 56: while (SSPIF == 0);
  9880  1492  2C93               	goto	l3701
  9881                           	
  9882  1493                     l3702:	
  9883                           	
  9884  1493                     l3701:	
  9885  1493  1D8C               	btfss	(99/8),(99)&7
  9886  1494  2C96               	goto	u3721
  9887  1495  2C97               	goto	u3720
  9888  1496                     u3721:
  9889  1496  2C93               	goto	l3701
  9890  1497                     u3720:
  9891  1497  2C98               	goto	l10429
  9892                           	
  9893  1498                     l3703:	
  9894                           	line	57
  9895                           	
  9896  1498                     l10429:	
  9897                           ;steppermotor.c: 57: temp = SSPBUF;
  9898  1498  0813               	movf	(19),w	;volatile
  9899  1499  00A0               	movwf	(??_spi_transfer+0)+0
  9900  149A  0820               	movf	(??_spi_transfer+0)+0,w
  9901  149B  00A1               	movwf	(spi_transfer@temp)
  9902                           	line	58
  9903                           	
  9904  149C                     l10431:	
  9905                           ;steppermotor.c: 58: SSPIF = 0;
  9906  149C  118C               	bcf	(99/8),(99)&7
  9907  149D  2C9E               	goto	l3704
  9908                           	line	60
  9909                           	
  9910  149E                     l10433:	
  9911                           	line	61
  9912                           ;steppermotor.c: 60: return temp;
  9913                           ;	Return value of _spi_transfer is never used
  9914                           	
  9915  149E                     l3704:	
  9916  149E  0008               	return
  9917                           	opt stack 0
  9918                           GLOBAL	__end_of_spi_transfer
  9919  149F                     	__end_of_spi_transfer:
  9920 ;; =============== function _spi_transfer ends ============
  9921                           
  9922                           	signat	_spi_transfer,4217
  9923                           	global	_ser_putch
  9924                           psect	text1085,local,class=CODE,delta=2
  9925                           global __ptext1085
  9926  164D                     __ptext1085:
  9927                           
  9928 ;; *************** function _ser_putch *****************
  9929 ;; Defined at:
  9930 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;  c               1    wreg     unsigned char 
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;  c               1    1[BANK0 ] unsigned char 
  9935 ;; Return value:  Size  Location     Type
  9936 ;;		None               void
  9937 ;; Registers used:
  9938 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9944 ;;      Params:         0       0       0       0       0
  9945 ;;      Locals:         0       1       0       0       0
  9946 ;;      Temps:          0       1       0       0       0
  9947 ;;      Totals:         0       2       0       0       0
  9948 ;;Total ram usage:        2 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; Hardware stack levels required when called:    3
  9951 ;; This function calls:
  9952 ;;		Nothing
  9953 ;; This function is called by:
  9954 ;;		_ChargeMode
  9955 ;;		_robo_init
  9956 ;;		_robot_read
  9957 ;;		_RobotDrive
  9958 ;;		_robotTurn
  9959 ;;		_robotMove
  9960 ;;		_ser_puts
  9961 ;;		_ser_puts2
  9962 ;;		_ser_puthex
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           psect	text1085
  9966                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  9967                           	line	70
  9968                           	global	__size_of_ser_putch
  9969  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  9970                           	
  9971  164D                     _ser_putch:	
  9972                           	opt	stack 3
  9973                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  9974                           ;ser_putch@c stored from wreg
  9975  164D  1283               	bcf	status, 5	;RP0=0, select bank0
  9976  164E  1303               	bcf	status, 6	;RP1=0, select bank0
  9977  164F  00A1               	movwf	(ser_putch@c)
  9978                           	line	71
  9979                           	
  9980  1650                     l10413:	
  9981                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  9982  1650  2E52               	goto	l10415
  9983                           	
  9984  1651                     l6724:	
  9985                           	line	72
  9986                           ;ser.c: 72: continue;
  9987  1651  2E52               	goto	l10415
  9988                           	
  9989  1652                     l6723:	
  9990                           	line	71
  9991                           	
  9992  1652                     l10415:	
  9993  1652  1683               	bsf	status, 5	;RP0=1, select bank1
  9994  1653  1303               	bcf	status, 6	;RP1=0, select bank1
  9995  1654  0855               	movf	(_txiptr)^080h,w	;volatile
  9996  1655  3E01               	addlw	01h
  9997  1656  390F               	andlw	0Fh
  9998  1657  0656               	xorwf	(_txoptr)^080h,w	;volatile
  9999  1658  1903               	skipnz
 10000  1659  2E5B               	goto	u3711
 10001  165A  2E5C               	goto	u3710
 10002  165B                     u3711:
 10003  165B  2E52               	goto	l10415
 10004  165C                     u3710:
 10005                           	
 10006  165C                     l6725:	
 10007                           	line	73
 10008                           ;ser.c: 73: GIE=0;
 10009  165C  138B               	bcf	(95/8),(95)&7
 10010                           	line	74
 10011                           	
 10012  165D                     l10417:	
 10013                           ;ser.c: 74: txfifo[txiptr] = c;
 10014  165D  1283               	bcf	status, 5	;RP0=0, select bank0
 10015  165E  1303               	bcf	status, 6	;RP1=0, select bank0
 10016  165F  0821               	movf	(ser_putch@c),w
 10017  1660  00A0               	movwf	(??_ser_putch+0)+0
 10018  1661  1683               	bsf	status, 5	;RP0=1, select bank1
 10019  1662  1303               	bcf	status, 6	;RP1=0, select bank1
 10020  1663  0855               	movf	(_txiptr)^080h,w
 10021  1664  3EA0               	addlw	_txfifo&0ffh
 10022  1665  0084               	movwf	fsr0
 10023  1666  1283               	bcf	status, 5	;RP0=0, select bank0
 10024  1667  1303               	bcf	status, 6	;RP1=0, select bank0
 10025  1668  0820               	movf	(??_ser_putch+0)+0,w
 10026  1669  1783               	bsf	status, 7	;select IRP bank3
 10027  166A  0080               	movwf	indf
 10028                           	line	75
 10029                           	
 10030  166B                     l10419:	
 10031                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 10032  166B  1683               	bsf	status, 5	;RP0=1, select bank1
 10033  166C  1303               	bcf	status, 6	;RP1=0, select bank1
 10034  166D  0855               	movf	(_txiptr)^080h,w	;volatile
 10035  166E  3E01               	addlw	01h
 10036  166F  390F               	andlw	0Fh
 10037  1670  1283               	bcf	status, 5	;RP0=0, select bank0
 10038  1671  1303               	bcf	status, 6	;RP1=0, select bank0
 10039  1672  00A0               	movwf	(??_ser_putch+0)+0
 10040  1673  0820               	movf	(??_ser_putch+0)+0,w
 10041  1674  1683               	bsf	status, 5	;RP0=1, select bank1
 10042  1675  1303               	bcf	status, 6	;RP1=0, select bank1
 10043  1676  00D5               	movwf	(_txiptr)^080h	;volatile
 10044                           	line	76
 10045                           	
 10046  1677                     l10421:	
 10047                           ;ser.c: 76: TXIE=1;
 10048  1677  160C               	bsf	(1124/8)^080h,(1124)&7
 10049                           	line	77
 10050                           	
 10051  1678                     l10423:	
 10052                           ;ser.c: 77: GIE=1;
 10053  1678  178B               	bsf	(95/8),(95)&7
 10054                           	line	78
 10055                           	
 10056  1679                     l6726:	
 10057  1679  0008               	return
 10058                           	opt stack 0
 10059                           GLOBAL	__end_of_ser_putch
 10060  167A                     	__end_of_ser_putch:
 10061 ;; =============== function _ser_putch ends ============
 10062                           
 10063                           	signat	_ser_putch,4216
 10064                           	global	_Menu
 10065                           psect	text1086,local,class=CODE,delta=2
 10066                           global __ptext1086
 10067  090D                     __ptext1086:
 10068                           
 10069 ;; *************** function _Menu *****************
 10070 ;; Defined at:
 10071 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  BTN_input       1    wreg     unsigned char 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      unsigned char 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10085 ;;      Params:         0       0       0       0       0
 10086 ;;      Locals:         0       1       0       0       0
 10087 ;;      Temps:          0       0       0       0       0
 10088 ;;      Totals:         0       1       0       0       0
 10089 ;;Total ram usage:        1 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    3
 10092 ;; This function calls:
 10093 ;;		Nothing
 10094 ;; This function is called by:
 10095 ;;		_main
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           psect	text1086
 10099                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10100                           	line	201
 10101                           	global	__size_of_Menu
 10102  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 10103                           	
 10104  090D                     _Menu:	
 10105                           	opt	stack 4
 10106                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 10107                           ;Menu@BTN_input stored from wreg
 10108  090D  1283               	bcf	status, 5	;RP0=0, select bank0
 10109  090E  1303               	bcf	status, 6	;RP1=0, select bank0
 10110  090F  00A0               	movwf	(Menu@BTN_input)
 10111                           	line	202
 10112                           	
 10113  0910                     l10389:	
 10114                           ;HMI.c: 202: switch (BTN_input)
 10115  0910  293F               	goto	l10407
 10116                           	line	204
 10117                           ;HMI.c: 203: {
 10118                           ;HMI.c: 204: case 1:
 10119                           	
 10120  0911                     l4500:	
 10121                           	line	206
 10122                           ;HMI.c: 206: break;
 10123  0911  2951               	goto	l10409
 10124                           	line	207
 10125                           ;HMI.c: 207: case 2:
 10126                           	
 10127  0912                     l4502:	
 10128                           	line	209
 10129                           ;HMI.c: 209: break;
 10130  0912  2951               	goto	l10409
 10131                           	line	210
 10132                           ;HMI.c: 210: case 3:
 10133                           	
 10134  0913                     l4503:	
 10135                           	line	211
 10136                           	
 10137  0913                     l10391:	
 10138                           ;HMI.c: 211: pos--;
 10139  0913  30FF               	movlw	low(-1)
 10140  0914  1683               	bsf	status, 5	;RP0=1, select bank1
 10141  0915  1303               	bcf	status, 6	;RP1=0, select bank1
 10142  0916  07BE               	addwf	(_pos)^080h,f
 10143  0917  1803               	skipnc
 10144  0918  0ABF               	incf	(_pos+1)^080h,f
 10145  0919  30FF               	movlw	high(-1)
 10146  091A  07BF               	addwf	(_pos+1)^080h,f
 10147                           	line	212
 10148                           	
 10149  091B                     l10393:	
 10150                           ;HMI.c: 212: if (pos < 0)
 10151  091B  1FBF               	btfss	(_pos+1)^080h,7
 10152  091C  291E               	goto	u3691
 10153  091D  291F               	goto	u3690
 10154  091E                     u3691:
 10155  091E  2951               	goto	l10409
 10156  091F                     u3690:
 10157                           	line	213
 10158                           	
 10159  091F                     l10395:	
 10160                           ;HMI.c: 213: pos = 6 - 1;
 10161  091F  3005               	movlw	low(05h)
 10162  0920  00BE               	movwf	(_pos)^080h
 10163  0921  3000               	movlw	high(05h)
 10164  0922  00BF               	movwf	((_pos)^080h)+1
 10165  0923  2951               	goto	l10409
 10166                           	
 10167  0924                     l4504:	
 10168                           	line	215
 10169                           ;HMI.c: 215: break;
 10170  0924  2951               	goto	l10409
 10171                           	line	216
 10172                           ;HMI.c: 216: case 4:
 10173                           	
 10174  0925                     l4505:	
 10175                           	line	217
 10176                           	
 10177  0925                     l10397:	
 10178                           ;HMI.c: 217: pos++;
 10179  0925  3001               	movlw	low(01h)
 10180  0926  1683               	bsf	status, 5	;RP0=1, select bank1
 10181  0927  1303               	bcf	status, 6	;RP1=0, select bank1
 10182  0928  07BE               	addwf	(_pos)^080h,f
 10183  0929  1803               	skipnc
 10184  092A  0ABF               	incf	(_pos+1)^080h,f
 10185  092B  3000               	movlw	high(01h)
 10186  092C  07BF               	addwf	(_pos+1)^080h,f
 10187                           	line	218
 10188                           ;HMI.c: 218: if (pos == 6)
 10189  092D  3006               	movlw	06h
 10190  092E  063E               	xorwf	(_pos)^080h,w
 10191  092F  043F               	iorwf	(_pos+1)^080h,w
 10192  0930  1D03               	skipz
 10193  0931  2933               	goto	u3701
 10194  0932  2934               	goto	u3700
 10195  0933                     u3701:
 10196  0933  2951               	goto	l10409
 10197  0934                     u3700:
 10198                           	line	219
 10199                           	
 10200  0934                     l10399:	
 10201                           ;HMI.c: 219: pos = 0;
 10202  0934  01BE               	clrf	(_pos)^080h
 10203  0935  01BF               	clrf	(_pos+1)^080h
 10204  0936  2951               	goto	l10409
 10205                           	
 10206  0937                     l4506:	
 10207                           	line	221
 10208                           ;HMI.c: 221: break;
 10209  0937  2951               	goto	l10409
 10210                           	line	222
 10211                           ;HMI.c: 222: case 5:
 10212                           	
 10213  0938                     l4507:	
 10214                           	line	223
 10215                           	
 10216  0938                     l10401:	
 10217                           ;HMI.c: 223: return pos;
 10218  0938  1683               	bsf	status, 5	;RP0=1, select bank1
 10219  0939  1303               	bcf	status, 6	;RP1=0, select bank1
 10220  093A  083E               	movf	(_pos)^080h,w
 10221  093B  2953               	goto	l4508
 10222                           	
 10223  093C                     l10403:	
 10224  093C  2953               	goto	l4508
 10225                           	line	226
 10226                           ;HMI.c: 226: default:
 10227                           	
 10228  093D                     l4509:	
 10229                           	line	228
 10230                           ;HMI.c: 228: break;
 10231  093D  2951               	goto	l10409
 10232                           	line	229
 10233                           	
 10234  093E                     l10405:	
 10235                           ;HMI.c: 229: }
 10236  093E  2951               	goto	l10409
 10237                           	line	202
 10238                           	
 10239  093F                     l4499:	
 10240                           	
 10241  093F                     l10407:	
 10242  093F  1283               	bcf	status, 5	;RP0=0, select bank0
 10243  0940  0820               	movf	(Menu@BTN_input),w
 10244                           	; Switch size 1, requested type "space"
 10245                           ; Number of cases is 5, Range of values is 1 to 5
 10246                           ; switch strategies available:
 10247                           ; Name         Instructions Cycles
 10248                           ; simple_byte           16     9 (average)
 10249                           ; direct_byte           26    11 (fixed)
 10250                           ; jumptable            263     9 (fixed)
 10251                           ;	Chosen strategy is simple_byte
 10252                           
 10253                           	opt asmopt_off
 10254  0941  3A01               	xorlw	1^0	; case 1
 10255  0942  1903               	skipnz
 10256  0943  2951               	goto	l10409
 10257  0944  3A03               	xorlw	2^1	; case 2
 10258  0945  1903               	skipnz
 10259  0946  2951               	goto	l10409
 10260  0947  3A01               	xorlw	3^2	; case 3
 10261  0948  1903               	skipnz
 10262  0949  2913               	goto	l10391
 10263  094A  3A07               	xorlw	4^3	; case 4
 10264  094B  1903               	skipnz
 10265  094C  2925               	goto	l10397
 10266  094D  3A01               	xorlw	5^4	; case 5
 10267  094E  1903               	skipnz
 10268  094F  2938               	goto	l10401
 10269  0950  2951               	goto	l10409
 10270                           	opt asmopt_on
 10271                           
 10272                           	line	229
 10273                           	
 10274  0951                     l4501:	
 10275                           	line	230
 10276                           	
 10277  0951                     l10409:	
 10278                           ;HMI.c: 230: return 255;
 10279  0951  30FF               	movlw	(0FFh)
 10280  0952  2953               	goto	l4508
 10281                           	
 10282  0953                     l10411:	
 10283                           	line	231
 10284                           	
 10285  0953                     l4508:	
 10286  0953  0008               	return
 10287                           	opt stack 0
 10288                           GLOBAL	__end_of_Menu
 10289  0954                     	__end_of_Menu:
 10290 ;; =============== function _Menu ends ============
 10291                           
 10292                           	signat	_Menu,4217
 10293                           	global	_ser_init
 10294                           psect	text1087,local,class=CODE,delta=2
 10295                           global __ptext1087
 10296  1548                     __ptext1087:
 10297                           
 10298 ;; *************** function _ser_init *****************
 10299 ;; Defined at:
 10300 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 10301 ;; Parameters:    Size  Location     Type
 10302 ;;		None
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;		None
 10305 ;; Return value:  Size  Location     Type
 10306 ;;		None               void
 10307 ;; Registers used:
 10308 ;;		wreg, status,2, status,0
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10314 ;;      Params:         0       0       0       0       0
 10315 ;;      Locals:         0       0       0       0       0
 10316 ;;      Temps:          0       1       0       0       0
 10317 ;;      Totals:         0       1       0       0       0
 10318 ;;Total ram usage:        1 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; Hardware stack levels required when called:    3
 10321 ;; This function calls:
 10322 ;;		Nothing
 10323 ;; This function is called by:
 10324 ;;		_init
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           psect	text1087
 10328                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 10329                           	line	113
 10330                           	global	__size_of_ser_init
 10331  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 10332                           	
 10333  1548                     _ser_init:	
 10334                           	opt	stack 3
 10335                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 10336                           	line	114
 10337                           	
 10338  1548                     l10363:	
 10339                           ;ser.c: 114: TRISC |= 0b10000000;
 10340  1548  1683               	bsf	status, 5	;RP0=1, select bank1
 10341  1549  1303               	bcf	status, 6	;RP1=0, select bank1
 10342  154A  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 10343                           	line	115
 10344                           	
 10345  154B                     l10365:	
 10346                           ;ser.c: 115: TRISC &= 0b10111111;
 10347  154B  30BF               	movlw	(0BFh)
 10348  154C  1283               	bcf	status, 5	;RP0=0, select bank0
 10349  154D  1303               	bcf	status, 6	;RP1=0, select bank0
 10350  154E  00A0               	movwf	(??_ser_init+0)+0
 10351  154F  0820               	movf	(??_ser_init+0)+0,w
 10352  1550  1683               	bsf	status, 5	;RP0=1, select bank1
 10353  1551  1303               	bcf	status, 6	;RP1=0, select bank1
 10354  1552  0587               	andwf	(135)^080h,f	;volatile
 10355                           	line	116
 10356                           	
 10357  1553                     l10367:	
 10358                           ;ser.c: 116: BRGH=1;
 10359  1553  1518               	bsf	(1218/8)^080h,(1218)&7
 10360                           	line	118
 10361                           	
 10362  1554                     l10369:	
 10363                           ;ser.c: 118: SPBRG=20;
 10364  1554  3014               	movlw	(014h)
 10365  1555  0099               	movwf	(153)^080h	;volatile
 10366                           	line	121
 10367                           	
 10368  1556                     l10371:	
 10369                           ;ser.c: 121: TX9=0;
 10370  1556  1318               	bcf	(1222/8)^080h,(1222)&7
 10371                           	line	122
 10372                           	
 10373  1557                     l10373:	
 10374                           ;ser.c: 122: RX9=0;
 10375  1557  1283               	bcf	status, 5	;RP0=0, select bank0
 10376  1558  1303               	bcf	status, 6	;RP1=0, select bank0
 10377  1559  1318               	bcf	(198/8),(198)&7
 10378                           	line	124
 10379                           	
 10380  155A                     l10375:	
 10381                           ;ser.c: 124: SYNC=0;
 10382  155A  1683               	bsf	status, 5	;RP0=1, select bank1
 10383  155B  1303               	bcf	status, 6	;RP1=0, select bank1
 10384  155C  1218               	bcf	(1220/8)^080h,(1220)&7
 10385                           	line	125
 10386                           	
 10387  155D                     l10377:	
 10388                           ;ser.c: 125: SPEN=1;
 10389  155D  1283               	bcf	status, 5	;RP0=0, select bank0
 10390  155E  1303               	bcf	status, 6	;RP1=0, select bank0
 10391  155F  1798               	bsf	(199/8),(199)&7
 10392                           	line	126
 10393                           	
 10394  1560                     l10379:	
 10395                           ;ser.c: 126: CREN=1;
 10396  1560  1618               	bsf	(196/8),(196)&7
 10397                           	line	127
 10398                           	
 10399  1561                     l10381:	
 10400                           ;ser.c: 127: TXIE=0;
 10401  1561  1683               	bsf	status, 5	;RP0=1, select bank1
 10402  1562  1303               	bcf	status, 6	;RP1=0, select bank1
 10403  1563  120C               	bcf	(1124/8)^080h,(1124)&7
 10404                           	line	128
 10405                           	
 10406  1564                     l10383:	
 10407                           ;ser.c: 128: RCIE=1;
 10408  1564  168C               	bsf	(1125/8)^080h,(1125)&7
 10409                           	line	129
 10410                           	
 10411  1565                     l10385:	
 10412                           ;ser.c: 129: TXEN=1;
 10413  1565  1698               	bsf	(1221/8)^080h,(1221)&7
 10414                           	line	132
 10415                           	
 10416  1566                     l10387:	
 10417                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 10418  1566  3000               	movlw	(0)
 10419  1567  00D6               	movwf	(_txoptr)^080h	;volatile
 10420  1568  00D5               	movwf	(_txiptr)^080h	;volatile
 10421  1569  00D1               	movwf	(_rxoptr)^080h	;volatile
 10422  156A  1283               	bcf	status, 5	;RP0=0, select bank0
 10423  156B  1303               	bcf	status, 6	;RP1=0, select bank0
 10424  156C  00A0               	movwf	(??_ser_init+0)+0
 10425  156D  0820               	movf	(??_ser_init+0)+0,w
 10426  156E  1683               	bsf	status, 5	;RP0=1, select bank1
 10427  156F  1303               	bcf	status, 6	;RP1=0, select bank1
 10428  1570  00D0               	movwf	(_rxiptr)^080h	;volatile
 10429                           	line	133
 10430                           	
 10431  1571                     l6748:	
 10432  1571  0008               	return
 10433                           	opt stack 0
 10434                           GLOBAL	__end_of_ser_init
 10435  1572                     	__end_of_ser_init:
 10436 ;; =============== function _ser_init ends ============
 10437                           
 10438                           	signat	_ser_init,88
 10439                           	global	_adc_read
 10440                           psect	text1088,local,class=CODE,delta=2
 10441                           global __ptext1088
 10442  151F                     __ptext1088:
 10443                           
 10444 ;; *************** function _adc_read *****************
 10445 ;; Defined at:
 10446 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;		None
 10449 ;; Auto vars:     Size  Location     Type
 10450 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;                  2    0[BANK0 ] unsigned int 
 10453 ;; Registers used:
 10454 ;;		wreg, status,2, status,0
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10460 ;;      Params:         0       2       0       0       0
 10461 ;;      Locals:         0       2       0       0       0
 10462 ;;      Temps:          0       2       0       0       0
 10463 ;;      Totals:         0       6       0       0       0
 10464 ;;Total ram usage:        6 bytes
 10465 ;; Hardware stack levels used:    1
 10466 ;; Hardware stack levels required when called:    3
 10467 ;; This function calls:
 10468 ;;		Nothing
 10469 ;; This function is called by:
 10470 ;;		_adc_read_channel
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           psect	text1088
 10474                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10475                           	line	76
 10476                           	global	__size_of_adc_read
 10477  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 10478                           	
 10479  151F                     _adc_read:	
 10480                           	opt	stack 0
 10481                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 10482                           	line	79
 10483                           	
 10484  151F                     l10243:	
 10485                           ;adc.c: 77: volatile unsigned int adc_value;
 10486                           ;adc.c: 79: ADRESH = 0;
 10487  151F  1283               	bcf	status, 5	;RP0=0, select bank0
 10488  1520  1303               	bcf	status, 6	;RP1=0, select bank0
 10489  1521  019E               	clrf	(30)	;volatile
 10490                           	line	81
 10491                           	
 10492  1522                     l10245:	
 10493                           ;adc.c: 81: GO = 1;
 10494  1522  151F               	bsf	(250/8),(250)&7
 10495                           	line	82
 10496                           ;adc.c: 82: while(GO) continue;
 10497  1523  2D24               	goto	l703
 10498                           	
 10499  1524                     l704:	
 10500                           	
 10501  1524                     l703:	
 10502  1524  191F               	btfsc	(250/8),(250)&7
 10503  1525  2D27               	goto	u3501
 10504  1526  2D28               	goto	u3500
 10505  1527                     u3501:
 10506  1527  2D24               	goto	l703
 10507  1528                     u3500:
 10508                           	
 10509  1528                     l705:	
 10510                           	line	83
 10511                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10512  1528  0000               nop ;#
 10513                           	line	84
 10514                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10515  1529  0000               nop ;#
 10516                           	line	85
 10517                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 10518  152A  0000               nop ;#
 10519                           psect	text1088
 10520                           	line	88
 10521                           	
 10522  152B                     l10247:	
 10523                           ;adc.c: 88: adc_value = ADRESH;
 10524  152B  1283               	bcf	status, 5	;RP0=0, select bank0
 10525  152C  1303               	bcf	status, 6	;RP1=0, select bank0
 10526  152D  081E               	movf	(30),w	;volatile
 10527  152E  00A2               	movwf	(??_adc_read+0)+0
 10528  152F  01A3               	clrf	(??_adc_read+0)+0+1
 10529  1530  0822               	movf	0+(??_adc_read+0)+0,w
 10530  1531  00A4               	movwf	(adc_read@adc_value)	;volatile
 10531  1532  0823               	movf	1+(??_adc_read+0)+0,w
 10532  1533  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 10533                           	line	89
 10534                           ;adc.c: 89: adc_value <<= 1;
 10535  1534  3001               	movlw	01h
 10536                           	
 10537  1535                     u3515:
 10538  1535  1003               	clrc
 10539  1536  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 10540  1537  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 10541  1538  3EFF               	addlw	-1
 10542  1539  1D03               	skipz
 10543  153A  2D35               	goto	u3515
 10544                           	line	90
 10545                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 10546  153B  1683               	bsf	status, 5	;RP0=1, select bank1
 10547  153C  1303               	bcf	status, 6	;RP1=0, select bank1
 10548  153D  081E               	movf	(158)^080h,w	;volatile
 10549                           	line	93
 10550                           	
 10551  153E                     l10249:	
 10552                           ;adc.c: 93: return (adc_value);
 10553  153E  1283               	bcf	status, 5	;RP0=0, select bank0
 10554  153F  1303               	bcf	status, 6	;RP1=0, select bank0
 10555  1540  0825               	movf	(adc_read@adc_value+1),w	;volatile
 10556  1541  01A1               	clrf	(?_adc_read+1)
 10557  1542  07A1               	addwf	(?_adc_read+1)
 10558  1543  0824               	movf	(adc_read@adc_value),w	;volatile
 10559  1544  01A0               	clrf	(?_adc_read)
 10560  1545  07A0               	addwf	(?_adc_read)
 10561                           
 10562  1546  2D47               	goto	l706
 10563                           	
 10564  1547                     l10251:	
 10565                           	line	94
 10566                           	
 10567  1547                     l706:	
 10568  1547  0008               	return
 10569                           	opt stack 0
 10570                           GLOBAL	__end_of_adc_read
 10571  1548                     	__end_of_adc_read:
 10572 ;; =============== function _adc_read ends ============
 10573                           
 10574                           	signat	_adc_read,90
 10575                           	global	_isr1
 10576                           psect	text1089,local,class=CODE,delta=2
 10577                           global __ptext1089
 10578  0E6B                     __ptext1089:
 10579                           
 10580 ;; *************** function _isr1 *****************
 10581 ;; Defined at:
 10582 ;;		line 104 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;		None
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;		None
 10587 ;; Return value:  Size  Location     Type
 10588 ;;		None               void
 10589 ;; Registers used:
 10590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10596 ;;      Params:         0       0       0       0       0
 10597 ;;      Locals:         0       0       0       0       0
 10598 ;;      Temps:          5       0       0       0       0
 10599 ;;      Totals:         5       0       0       0       0
 10600 ;;Total ram usage:        5 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:    2
 10603 ;; This function calls:
 10604 ;;		i1___lwmod
 10605 ;;		_ReadButtons
 10606 ;; This function is called by:
 10607 ;;		Interrupt level 1
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           psect	text1089
 10611                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 10612                           	line	104
 10613                           	global	__size_of_isr1
 10614  00A7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 10615                           	
 10616  0E6B                     _isr1:	
 10617                           	opt	stack 0
 10618                           ; Regs used in _isr1: [allreg]
 10619                           psect	intentry,class=CODE,delta=2
 10620                           global __pintentry
 10621  0004                     __pintentry:
 10622                           global interrupt_function
 10623  0004                     interrupt_function:
 10624                           	global saved_w
 10625  007E                     	saved_w	set	btemp+0
 10626  0004  00FE               	movwf	saved_w
 10627  0005  0E03               	swapf	status,w
 10628  0006  00F9               	movwf	(??_isr1+1)
 10629  0007  0804               	movf	fsr0,w
 10630  0008  00FA               	movwf	(??_isr1+2)
 10631  0009  080A               	movf	pclath,w
 10632  000A  00FB               	movwf	(??_isr1+3)
 10633  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 10634  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 10635  000D  087F               	movf	btemp+1,w
 10636  000E  00FC               	movwf	(??_isr1+4)
 10637  000F  120A  158A  2E6B   	ljmp	_isr1
 10638                           psect	text1089
 10639                           	line	105
 10640                           	
 10641  0E6B                     i1l10279:	
 10642                           ;Main.c: 105: if(TMR0IF)
 10643  0E6B  1D0B               	btfss	(90/8),(90)&7
 10644  0E6C  2E6E               	goto	u355_21
 10645  0E6D  2E6F               	goto	u355_20
 10646  0E6E                     u355_21:
 10647  0E6E  2EBE               	goto	i1l10301
 10648  0E6F                     u355_20:
 10649                           	line	107
 10650                           	
 10651  0E6F                     i1l10281:	
 10652                           ;Main.c: 106: {
 10653                           ;Main.c: 107: TMR0IF = 0;
 10654  0E6F  110B               	bcf	(90/8),(90)&7
 10655                           	line	108
 10656                           	
 10657  0E70                     i1l10283:	
 10658                           ;Main.c: 108: TMR0 = 100;
 10659  0E70  3064               	movlw	(064h)
 10660  0E71  0081               	movwf	(1)	;volatile
 10661                           	line	110
 10662                           ;Main.c: 110: RTC_Counter++;
 10663  0E72  3001               	movlw	low(01h)
 10664  0E73  1683               	bsf	status, 5	;RP0=1, select bank1
 10665  0E74  1303               	bcf	status, 6	;RP1=0, select bank1
 10666  0E75  07B2               	addwf	(_RTC_Counter)^080h,f	;volatile
 10667  0E76  1803               	skipnc
 10668  0E77  0AB3               	incf	(_RTC_Counter+1)^080h,f	;volatile
 10669  0E78  3000               	movlw	high(01h)
 10670  0E79  07B3               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 10671                           	line	113
 10672                           	
 10673  0E7A                     i1l10285:	
 10674                           ;Main.c: 113: RTC_FLAG_1MS = 1;
 10675  0E7A  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 10676                           	line	114
 10677                           	
 10678  0E7B                     i1l10287:	
 10679                           ;Main.c: 114: if(RTC_Counter % 250 == 0)
 10680  0E7B  30FA               	movlw	low(0FAh)
 10681  0E7C  00F2               	movwf	(?i1___lwmod)
 10682  0E7D  3000               	movlw	high(0FAh)
 10683  0E7E  00F3               	movwf	((?i1___lwmod))+1
 10684  0E7F  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10685  0E80  01F5               	clrf	1+(?i1___lwmod)+02h
 10686  0E81  07F5               	addwf	1+(?i1___lwmod)+02h
 10687  0E82  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 10688  0E83  01F4               	clrf	0+(?i1___lwmod)+02h
 10689  0E84  07F4               	addwf	0+(?i1___lwmod)+02h
 10690                           
 10691  0E85  160A  118A  2776   	fcall	i1___lwmod
              120A  158A         
 10692  0E8A  0873               	movf	((1+(?i1___lwmod))),w
 10693  0E8B  0472               	iorwf	((0+(?i1___lwmod))),w
 10694  0E8C  1D03               	skipz
 10695  0E8D  2E8F               	goto	u356_21
 10696  0E8E  2E90               	goto	u356_20
 10697  0E8F                     u356_21:
 10698  0E8F  2E92               	goto	i1l10291
 10699  0E90                     u356_20:
 10700                           	line	116
 10701                           	
 10702  0E90                     i1l10289:	
 10703                           ;Main.c: 115: {
 10704                           ;Main.c: 116: RTC_FLAG_250MS = 1;
 10705  0E90  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 10706  0E91  2E92               	goto	i1l10291
 10707                           	line	117
 10708                           	
 10709  0E92                     i1l2207:	
 10710                           	line	118
 10711                           	
 10712  0E92                     i1l10291:	
 10713                           ;Main.c: 117: }
 10714                           ;Main.c: 118: if(RTC_Counter % 500 == 0)
 10715  0E92  30F4               	movlw	low(01F4h)
 10716  0E93  00F2               	movwf	(?i1___lwmod)
 10717  0E94  3001               	movlw	high(01F4h)
 10718  0E95  00F3               	movwf	((?i1___lwmod))+1
 10719  0E96  1683               	bsf	status, 5	;RP0=1, select bank1
 10720  0E97  1303               	bcf	status, 6	;RP1=0, select bank1
 10721  0E98  0833               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10722  0E99  01F5               	clrf	1+(?i1___lwmod)+02h
 10723  0E9A  07F5               	addwf	1+(?i1___lwmod)+02h
 10724  0E9B  0832               	movf	(_RTC_Counter)^080h,w	;volatile
 10725  0E9C  01F4               	clrf	0+(?i1___lwmod)+02h
 10726  0E9D  07F4               	addwf	0+(?i1___lwmod)+02h
 10727                           
 10728  0E9E  160A  118A  2776   	fcall	i1___lwmod
              120A  158A         
 10729  0EA3  0873               	movf	((1+(?i1___lwmod))),w
 10730  0EA4  0472               	iorwf	((0+(?i1___lwmod))),w
 10731  0EA5  1D03               	skipz
 10732  0EA6  2EA8               	goto	u357_21
 10733  0EA7  2EA9               	goto	u357_20
 10734  0EA8                     u357_21:
 10735  0EA8  2EAF               	goto	i1l10297
 10736  0EA9                     u357_20:
 10737                           	line	120
 10738                           	
 10739  0EA9                     i1l10293:	
 10740                           ;Main.c: 119: {
 10741                           ;Main.c: 120: RTC_FLAG_500MS = 1;
 10742  0EA9  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 10743                           	line	121
 10744                           	
 10745  0EAA                     i1l10295:	
 10746                           ;Main.c: 121: RB0 ^= 0x01;
 10747  0EAA  1283               	bcf	status, 5	;RP0=0, select bank0
 10748  0EAB  1303               	bcf	status, 6	;RP1=0, select bank0
 10749  0EAC  3001               	movlw	1<<((48)&7)
 10750  0EAD  0686               	xorwf	((48)/8),f
 10751  0EAE  2EAF               	goto	i1l10297
 10752                           	line	122
 10753                           	
 10754  0EAF                     i1l2208:	
 10755                           	line	123
 10756                           	
 10757  0EAF                     i1l10297:	
 10758                           ;Main.c: 122: }
 10759                           ;Main.c: 123: if (buttonPressed == 0)
 10760  0EAF  08FD               	movf	(_buttonPressed),f
 10761  0EB0  1D03               	skipz	;volatile
 10762  0EB1  2EB3               	goto	u358_21
 10763  0EB2  2EB4               	goto	u358_20
 10764  0EB3                     u358_21:
 10765  0EB3  2EBE               	goto	i1l10301
 10766  0EB4                     u358_20:
 10767                           	line	125
 10768                           	
 10769  0EB4                     i1l10299:	
 10770                           ;Main.c: 124: {
 10771                           ;Main.c: 125: buttonPressed = ReadButtons();
 10772  0EB4  160A  118A  26D6   	fcall	_ReadButtons
              120A  158A         
 10773  0EB9  00F8               	movwf	(??_isr1+0)+0
 10774  0EBA  0878               	movf	(??_isr1+0)+0,w
 10775  0EBB  00FD               	movwf	(_buttonPressed)	;volatile
 10776  0EBC  2EBE               	goto	i1l10301
 10777                           	line	126
 10778                           	
 10779  0EBD                     i1l2209:	
 10780  0EBD  2EBE               	goto	i1l10301
 10781                           	line	127
 10782                           	
 10783  0EBE                     i1l2206:	
 10784                           	line	128
 10785                           	
 10786  0EBE                     i1l10301:	
 10787                           ;Main.c: 126: }
 10788                           ;Main.c: 127: }
 10789                           ;Main.c: 128: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 10790  0EBE  1283               	bcf	status, 5	;RP0=0, select bank0
 10791  0EBF  1303               	bcf	status, 6	;RP1=0, select bank0
 10792  0EC0  1E8C               	btfss	(101/8),(101)&7
 10793  0EC1  2EC3               	goto	u359_21
 10794  0EC2  2EC4               	goto	u359_20
 10795  0EC3                     u359_21:
 10796  0EC3  2EE0               	goto	i1l10311
 10797  0EC4                     u359_20:
 10798                           	
 10799  0EC4                     i1l10303:	
 10800  0EC4  081A               	movf	(26),w	;volatile
 10801  0EC5  00F8               	movwf	(??_isr1+0)+0
 10802  0EC6  1683               	bsf	status, 5	;RP0=1, select bank1
 10803  0EC7  1303               	bcf	status, 6	;RP1=0, select bank1
 10804  0EC8  0850               	movf	(_rxiptr)^080h,w
 10805  0EC9  3EA0               	addlw	_rxfifo&0ffh
 10806  0ECA  0084               	movwf	fsr0
 10807  0ECB  0878               	movf	(??_isr1+0)+0,w
 10808  0ECC  1383               	bcf	status, 7	;select IRP bank1
 10809  0ECD  0080               	movwf	indf
 10810                           	
 10811  0ECE                     i1l10305:	
 10812  0ECE  0850               	movf	(_rxiptr)^080h,w	;volatile
 10813  0ECF  3E01               	addlw	01h
 10814  0ED0  390F               	andlw	0Fh
 10815  0ED1  00F8               	movwf	(??_isr1+0)+0
 10816  0ED2  0878               	movf	(??_isr1+0)+0,w
 10817  0ED3  00D2               	movwf	(_ser_tmp)^080h
 10818                           	
 10819  0ED4                     i1l10307:	
 10820  0ED4  0852               	movf	(_ser_tmp)^080h,w
 10821  0ED5  0651               	xorwf	(_rxoptr)^080h,w	;volatile
 10822  0ED6  1903               	skipnz
 10823  0ED7  2ED9               	goto	u360_21
 10824  0ED8  2EDA               	goto	u360_20
 10825  0ED9                     u360_21:
 10826  0ED9  2EE0               	goto	i1l10311
 10827  0EDA                     u360_20:
 10828                           	
 10829  0EDA                     i1l10309:	
 10830  0EDA  0852               	movf	(_ser_tmp)^080h,w
 10831  0EDB  00F8               	movwf	(??_isr1+0)+0
 10832  0EDC  0878               	movf	(??_isr1+0)+0,w
 10833  0EDD  00D0               	movwf	(_rxiptr)^080h	;volatile
 10834  0EDE  2EE0               	goto	i1l10311
 10835                           	
 10836  0EDF                     i1l2211:	
 10837  0EDF  2EE0               	goto	i1l10311
 10838                           	
 10839  0EE0                     i1l2210:	
 10840                           	
 10841  0EE0                     i1l10311:	
 10842  0EE0  1283               	bcf	status, 5	;RP0=0, select bank0
 10843  0EE1  1E0C               	btfss	(100/8),(100)&7
 10844  0EE2  2EE4               	goto	u361_21
 10845  0EE3  2EE5               	goto	u361_20
 10846  0EE4                     u361_21:
 10847  0EE4  2F06               	goto	i1l2214
 10848  0EE5                     u361_20:
 10849                           	
 10850  0EE5                     i1l10313:	
 10851  0EE5  1683               	bsf	status, 5	;RP0=1, select bank1
 10852  0EE6  1303               	bcf	status, 6	;RP1=0, select bank1
 10853  0EE7  1E0C               	btfss	(1124/8)^080h,(1124)&7
 10854  0EE8  2EEA               	goto	u362_21
 10855  0EE9  2EEB               	goto	u362_20
 10856  0EEA                     u362_21:
 10857  0EEA  2F06               	goto	i1l2214
 10858  0EEB                     u362_20:
 10859                           	
 10860  0EEB                     i1l10315:	
 10861  0EEB  0856               	movf	(_txoptr)^080h,w
 10862  0EEC  3EA0               	addlw	_txfifo&0ffh
 10863  0EED  0084               	movwf	fsr0
 10864  0EEE  1783               	bsf	status, 7	;select IRP bank3
 10865  0EEF  0800               	movf	indf,w
 10866  0EF0  1283               	bcf	status, 5	;RP0=0, select bank0
 10867  0EF1  1303               	bcf	status, 6	;RP1=0, select bank0
 10868  0EF2  0099               	movwf	(25)	;volatile
 10869                           	
 10870  0EF3                     i1l10317:	
 10871  0EF3  3001               	movlw	(01h)
 10872  0EF4  00F8               	movwf	(??_isr1+0)+0
 10873  0EF5  0878               	movf	(??_isr1+0)+0,w
 10874  0EF6  1683               	bsf	status, 5	;RP0=1, select bank1
 10875  0EF7  1303               	bcf	status, 6	;RP1=0, select bank1
 10876  0EF8  07D6               	addwf	(_txoptr)^080h,f	;volatile
 10877                           	
 10878  0EF9                     i1l10319:	
 10879  0EF9  300F               	movlw	(0Fh)
 10880  0EFA  00F8               	movwf	(??_isr1+0)+0
 10881  0EFB  0878               	movf	(??_isr1+0)+0,w
 10882  0EFC  05D6               	andwf	(_txoptr)^080h,f	;volatile
 10883                           	
 10884  0EFD                     i1l10321:	
 10885  0EFD  0856               	movf	(_txoptr)^080h,w	;volatile
 10886  0EFE  0655               	xorwf	(_txiptr)^080h,w	;volatile
 10887  0EFF  1D03               	skipz
 10888  0F00  2F02               	goto	u363_21
 10889  0F01  2F03               	goto	u363_20
 10890  0F02                     u363_21:
 10891  0F02  2F06               	goto	i1l2214
 10892  0F03                     u363_20:
 10893                           	
 10894  0F03                     i1l10323:	
 10895  0F03  120C               	bcf	(1124/8)^080h,(1124)&7
 10896  0F04  2F06               	goto	i1l2214
 10897                           	
 10898  0F05                     i1l2213:	
 10899  0F05  2F06               	goto	i1l2214
 10900                           	
 10901  0F06                     i1l2212:	
 10902                           	line	129
 10903                           	
 10904  0F06                     i1l2214:	
 10905  0F06  087C               	movf	(??_isr1+4),w
 10906  0F07  1283               	bcf	status, 5	;RP0=0, select bank0
 10907  0F08  00FF               	movwf	btemp+1
 10908  0F09  087B               	movf	(??_isr1+3),w
 10909  0F0A  008A               	movwf	pclath
 10910  0F0B  087A               	movf	(??_isr1+2),w
 10911  0F0C  0084               	movwf	fsr0
 10912  0F0D  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 10913  0F0E  0083               	movwf	status
 10914  0F0F  0EFE               	swapf	saved_w,f
 10915  0F10  0E7E               	swapf	saved_w,w
 10916  0F11  0009               	retfie
 10917                           	opt stack 0
 10918                           GLOBAL	__end_of_isr1
 10919  0F12                     	__end_of_isr1:
 10920 ;; =============== function _isr1 ends ============
 10921                           
 10922                           	signat	_isr1,88
 10923                           	global	_ReadButtons
 10924                           psect	text1090,local,class=CODE,delta=2
 10925                           global __ptext1090
 10926  16D6                     __ptext1090:
 10927                           
 10928 ;; *************** function _ReadButtons *****************
 10929 ;; Defined at:
 10930 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;		None
 10933 ;; Auto vars:     Size  Location     Type
 10934 ;;		None
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  1    wreg      unsigned char 
 10937 ;; Registers used:
 10938 ;;		wreg, status,2, status,0, pclath, cstack
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10944 ;;      Params:         0       0       0       0       0
 10945 ;;      Locals:         0       0       0       0       0
 10946 ;;      Temps:          0       0       0       0       0
 10947 ;;      Totals:         0       0       0       0       0
 10948 ;;Total ram usage:        0 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:    1
 10951 ;; This function calls:
 10952 ;;		_Debounce
 10953 ;; This function is called by:
 10954 ;;		_isr1
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           psect	text1090
 10958                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10959                           	line	159
 10960                           	global	__size_of_ReadButtons
 10961  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 10962                           	
 10963  16D6                     _ReadButtons:	
 10964                           	opt	stack 0
 10965                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 10966                           	line	161
 10967                           	
 10968  16D6                     i1l10325:	
 10969                           ;HMI.c: 161: Debounce();
 10970  16D6  120A  158A  2488   	fcall	_Debounce
              160A  118A         
 10971                           	line	163
 10972                           	
 10973  16DB                     i1l10327:	
 10974                           ;HMI.c: 163: if(UpPressed)
 10975  16DB  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 10976  16DC  2EDE               	goto	u364_21
 10977  16DD  2EDF               	goto	u364_20
 10978  16DE                     u364_21:
 10979  16DE  2EE3               	goto	i1l4491
 10980  16DF                     u364_20:
 10981                           	line	165
 10982                           	
 10983  16DF                     i1l10329:	
 10984                           ;HMI.c: 164: {
 10985                           ;HMI.c: 165: UpPressed = 0;
 10986  16DF  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 10987                           	line	166
 10988                           	
 10989  16E0                     i1l10331:	
 10990                           ;HMI.c: 166: return 1;
 10991  16E0  3001               	movlw	(01h)
 10992  16E1  2F05               	goto	i1l4492
 10993                           	
 10994  16E2                     i1l10333:	
 10995  16E2  2F05               	goto	i1l4492
 10996                           	line	168
 10997                           	
 10998  16E3                     i1l4491:	
 10999                           	line	170
 11000                           ;HMI.c: 168: }
 11001                           ;HMI.c: 170: if(DownPressed)
 11002  16E3  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 11003  16E4  2EE6               	goto	u365_21
 11004  16E5  2EE7               	goto	u365_20
 11005  16E6                     u365_21:
 11006  16E6  2EEB               	goto	i1l4493
 11007  16E7                     u365_20:
 11008                           	line	172
 11009                           	
 11010  16E7                     i1l10335:	
 11011                           ;HMI.c: 171: {
 11012                           ;HMI.c: 172: DownPressed = 0;
 11013  16E7  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 11014                           	line	173
 11015                           	
 11016  16E8                     i1l10337:	
 11017                           ;HMI.c: 173: return 2;
 11018  16E8  3002               	movlw	(02h)
 11019  16E9  2F05               	goto	i1l4492
 11020                           	
 11021  16EA                     i1l10339:	
 11022  16EA  2F05               	goto	i1l4492
 11023                           	line	175
 11024                           	
 11025  16EB                     i1l4493:	
 11026                           	line	176
 11027                           ;HMI.c: 175: }
 11028                           ;HMI.c: 176: if(LeftPressed)
 11029  16EB  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 11030  16EC  2EEE               	goto	u366_21
 11031  16ED  2EEF               	goto	u366_20
 11032  16EE                     u366_21:
 11033  16EE  2EF3               	goto	i1l4494
 11034  16EF                     u366_20:
 11035                           	line	178
 11036                           	
 11037  16EF                     i1l10341:	
 11038                           ;HMI.c: 177: {
 11039                           ;HMI.c: 178: LeftPressed = 0;
 11040  16EF  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 11041                           	line	179
 11042                           	
 11043  16F0                     i1l10343:	
 11044                           ;HMI.c: 179: return 3;
 11045  16F0  3003               	movlw	(03h)
 11046  16F1  2F05               	goto	i1l4492
 11047                           	
 11048  16F2                     i1l10345:	
 11049  16F2  2F05               	goto	i1l4492
 11050                           	line	181
 11051                           	
 11052  16F3                     i1l4494:	
 11053                           	line	182
 11054                           ;HMI.c: 181: }
 11055                           ;HMI.c: 182: if(RightPressed)
 11056  16F3  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 11057  16F4  2EF6               	goto	u367_21
 11058  16F5  2EF7               	goto	u367_20
 11059  16F6                     u367_21:
 11060  16F6  2EFB               	goto	i1l4495
 11061  16F7                     u367_20:
 11062                           	line	184
 11063                           	
 11064  16F7                     i1l10347:	
 11065                           ;HMI.c: 183: {
 11066                           ;HMI.c: 184: RightPressed = 0;
 11067  16F7  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 11068                           	line	185
 11069                           	
 11070  16F8                     i1l10349:	
 11071                           ;HMI.c: 185: return 4;
 11072  16F8  3004               	movlw	(04h)
 11073  16F9  2F05               	goto	i1l4492
 11074                           	
 11075  16FA                     i1l10351:	
 11076  16FA  2F05               	goto	i1l4492
 11077                           	line	187
 11078                           	
 11079  16FB                     i1l4495:	
 11080                           	line	189
 11081                           ;HMI.c: 187: }
 11082                           ;HMI.c: 189: if(CenterPressed)
 11083  16FB  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 11084  16FC  2EFE               	goto	u368_21
 11085  16FD  2EFF               	goto	u368_20
 11086  16FE                     u368_21:
 11087  16FE  2F03               	goto	i1l10359
 11088  16FF                     u368_20:
 11089                           	line	191
 11090                           	
 11091  16FF                     i1l10353:	
 11092                           ;HMI.c: 190: {
 11093                           ;HMI.c: 191: CenterPressed = 0;
 11094  16FF  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 11095                           	line	192
 11096                           	
 11097  1700                     i1l10355:	
 11098                           ;HMI.c: 192: return 5;
 11099  1700  3005               	movlw	(05h)
 11100  1701  2F05               	goto	i1l4492
 11101                           	
 11102  1702                     i1l10357:	
 11103  1702  2F05               	goto	i1l4492
 11104                           	line	194
 11105                           	
 11106  1703                     i1l4496:	
 11107                           	line	195
 11108                           	
 11109  1703                     i1l10359:	
 11110                           ;HMI.c: 194: }
 11111                           ;HMI.c: 195: return 0;
 11112  1703  3000               	movlw	(0)
 11113  1704  2F05               	goto	i1l4492
 11114                           	
 11115  1705                     i1l10361:	
 11116                           	line	196
 11117                           	
 11118  1705                     i1l4492:	
 11119  1705  0008               	return
 11120                           	opt stack 0
 11121                           GLOBAL	__end_of_ReadButtons
 11122  1706                     	__end_of_ReadButtons:
 11123 ;; =============== function _ReadButtons ends ============
 11124                           
 11125                           	signat	_ReadButtons,89
 11126                           	global	i1___lwmod
 11127                           psect	text1091,local,class=CODE,delta=2
 11128                           global __ptext1091
 11129  1776                     __ptext1091:
 11130                           
 11131 ;; *************** function i1___lwmod *****************
 11132 ;; Defined at:
 11133 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;  __lwmod         2    0[COMMON] unsigned int 
 11136 ;;  __lwmod         2    2[COMMON] unsigned int 
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;  __lwmod         1    5[COMMON] unsigned char 
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  2    0[COMMON] unsigned int 
 11141 ;; Registers used:
 11142 ;;		wreg, status,2, status,0
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11148 ;;      Params:         4       0       0       0       0
 11149 ;;      Locals:         1       0       0       0       0
 11150 ;;      Temps:          1       0       0       0       0
 11151 ;;      Totals:         6       0       0       0       0
 11152 ;;Total ram usage:        6 bytes
 11153 ;; Hardware stack levels used:    1
 11154 ;; This function calls:
 11155 ;;		Nothing
 11156 ;; This function is called by:
 11157 ;;		_isr1
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           psect	text1091
 11161                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11162                           	line	5
 11163                           	global	__size_ofi1___lwmod
 11164  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 11165                           	
 11166  1776                     i1___lwmod:	
 11167                           	opt	stack 1
 11168                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 11169                           	line	8
 11170                           	
 11171  1776                     i1l10887:	
 11172  1776  0873               	movf	(i1___lwmod@divisor+1),w
 11173  1777  0472               	iorwf	(i1___lwmod@divisor),w
 11174  1778  1903               	skipnz
 11175  1779  2F7B               	goto	u484_21
 11176  177A  2F7C               	goto	u484_20
 11177  177B                     u484_21:
 11178  177B  2FB2               	goto	i1l10905
 11179  177C                     u484_20:
 11180                           	line	9
 11181                           	
 11182  177C                     i1l10889:	
 11183  177C  01F7               	clrf	(i1___lwmod@counter)
 11184  177D  1403               	bsf	status,0
 11185  177E  0DF7               	rlf	(i1___lwmod@counter),f
 11186                           	line	10
 11187  177F  2F8C               	goto	i1l10895
 11188                           	
 11189  1780                     i1l7477:	
 11190                           	line	11
 11191                           	
 11192  1780                     i1l10891:	
 11193  1780  3001               	movlw	01h
 11194                           	
 11195  1781                     u485_25:
 11196  1781  1003               	clrc
 11197  1782  0DF2               	rlf	(i1___lwmod@divisor),f
 11198  1783  0DF3               	rlf	(i1___lwmod@divisor+1),f
 11199  1784  3EFF               	addlw	-1
 11200  1785  1D03               	skipz
 11201  1786  2F81               	goto	u485_25
 11202                           	line	12
 11203                           	
 11204  1787                     i1l10893:	
 11205  1787  3001               	movlw	(01h)
 11206  1788  00F6               	movwf	(??i1___lwmod+0)+0
 11207  1789  0876               	movf	(??i1___lwmod+0)+0,w
 11208  178A  07F7               	addwf	(i1___lwmod@counter),f
 11209  178B  2F8C               	goto	i1l10895
 11210                           	line	13
 11211                           	
 11212  178C                     i1l7476:	
 11213                           	line	10
 11214                           	
 11215  178C                     i1l10895:	
 11216  178C  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 11217  178D  2F8F               	goto	u486_21
 11218  178E  2F90               	goto	u486_20
 11219  178F                     u486_21:
 11220  178F  2F80               	goto	i1l10891
 11221  1790                     u486_20:
 11222  1790  2F92               	goto	i1l10897
 11223                           	
 11224  1791                     i1l7478:	
 11225  1791  2F92               	goto	i1l10897
 11226                           	line	14
 11227                           	
 11228  1792                     i1l7479:	
 11229                           	line	15
 11230                           	
 11231  1792                     i1l10897:	
 11232  1792  0873               	movf	(i1___lwmod@divisor+1),w
 11233  1793  0275               	subwf	(i1___lwmod@dividend+1),w
 11234  1794  1D03               	skipz
 11235  1795  2F98               	goto	u487_25
 11236  1796  0872               	movf	(i1___lwmod@divisor),w
 11237  1797  0274               	subwf	(i1___lwmod@dividend),w
 11238  1798                     u487_25:
 11239  1798  1C03               	skipc
 11240  1799  2F9B               	goto	u487_21
 11241  179A  2F9C               	goto	u487_20
 11242  179B                     u487_21:
 11243  179B  2FA3               	goto	i1l10901
 11244  179C                     u487_20:
 11245                           	line	16
 11246                           	
 11247  179C                     i1l10899:	
 11248  179C  0872               	movf	(i1___lwmod@divisor),w
 11249  179D  02F4               	subwf	(i1___lwmod@dividend),f
 11250  179E  0873               	movf	(i1___lwmod@divisor+1),w
 11251  179F  1C03               	skipc
 11252  17A0  03F5               	decf	(i1___lwmod@dividend+1),f
 11253  17A1  02F5               	subwf	(i1___lwmod@dividend+1),f
 11254  17A2  2FA3               	goto	i1l10901
 11255                           	
 11256  17A3                     i1l7480:	
 11257                           	line	17
 11258                           	
 11259  17A3                     i1l10901:	
 11260  17A3  3001               	movlw	01h
 11261                           	
 11262  17A4                     u488_25:
 11263  17A4  1003               	clrc
 11264  17A5  0CF3               	rrf	(i1___lwmod@divisor+1),f
 11265  17A6  0CF2               	rrf	(i1___lwmod@divisor),f
 11266  17A7  3EFF               	addlw	-1
 11267  17A8  1D03               	skipz
 11268  17A9  2FA4               	goto	u488_25
 11269                           	line	18
 11270                           	
 11271  17AA                     i1l10903:	
 11272  17AA  3001               	movlw	low(01h)
 11273  17AB  02F7               	subwf	(i1___lwmod@counter),f
 11274  17AC  1D03               	btfss	status,2
 11275  17AD  2FAF               	goto	u489_21
 11276  17AE  2FB0               	goto	u489_20
 11277  17AF                     u489_21:
 11278  17AF  2F92               	goto	i1l10897
 11279  17B0                     u489_20:
 11280  17B0  2FB2               	goto	i1l10905
 11281                           	
 11282  17B1                     i1l7481:	
 11283  17B1  2FB2               	goto	i1l10905
 11284                           	line	19
 11285                           	
 11286  17B2                     i1l7475:	
 11287                           	line	20
 11288                           	
 11289  17B2                     i1l10905:	
 11290  17B2  0875               	movf	(i1___lwmod@dividend+1),w
 11291  17B3  01F3               	clrf	(?i1___lwmod+1)
 11292  17B4  07F3               	addwf	(?i1___lwmod+1)
 11293  17B5  0874               	movf	(i1___lwmod@dividend),w
 11294  17B6  01F2               	clrf	(?i1___lwmod)
 11295  17B7  07F2               	addwf	(?i1___lwmod)
 11296                           
 11297  17B8  2FB9               	goto	i1l7482
 11298                           	
 11299  17B9                     i1l10907:	
 11300                           	line	21
 11301                           	
 11302  17B9                     i1l7482:	
 11303  17B9  0008               	return
 11304                           	opt stack 0
 11305                           GLOBAL	__end_ofi1___lwmod
 11306  17BA                     	__end_ofi1___lwmod:
 11307 ;; =============== function i1___lwmod ends ============
 11308                           
 11309                           	signat	i1___lwmod,90
 11310                           	global	_Debounce
 11311                           psect	text1092,local,class=CODE,delta=2
 11312                           global __ptext1092
 11313  0C88                     __ptext1092:
 11314                           
 11315 ;; *************** function _Debounce *****************
 11316 ;; Defined at:
 11317 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;		None
 11320 ;; Auto vars:     Size  Location     Type
 11321 ;;		None
 11322 ;; Return value:  Size  Location     Type
 11323 ;;		None               void
 11324 ;; Registers used:
 11325 ;;		wreg, status,2, status,0
 11326 ;; Tracked objects:
 11327 ;;		On entry : 0/0
 11328 ;;		On exit  : 0/0
 11329 ;;		Unchanged: 0/0
 11330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11331 ;;      Params:         0       0       0       0       0
 11332 ;;      Locals:         0       0       0       0       0
 11333 ;;      Temps:          1       0       0       0       0
 11334 ;;      Totals:         1       0       0       0       0
 11335 ;;Total ram usage:        1 bytes
 11336 ;; Hardware stack levels used:    1
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_ReadButtons
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           psect	text1092
 11344                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 11345                           	line	77
 11346                           	global	__size_of_Debounce
 11347  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 11348                           	
 11349  0C88                     _Debounce:	
 11350                           	opt	stack 0
 11351                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 11352                           	line	79
 11353                           	
 11354  0C88                     i1l10435:	
 11355                           ;HMI.c: 79: if(!RB2)
 11356  0C88  1283               	bcf	status, 5	;RP0=0, select bank0
 11357  0C89  1303               	bcf	status, 6	;RP1=0, select bank0
 11358  0C8A  1906               	btfsc	(50/8),(50)&7
 11359  0C8B  2C8D               	goto	u373_21
 11360  0C8C  2C8E               	goto	u373_20
 11361  0C8D                     u373_21:
 11362  0C8D  2CA2               	goto	i1l4473
 11363  0C8E                     u373_20:
 11364                           	line	81
 11365                           	
 11366  0C8E                     i1l10437:	
 11367                           ;HMI.c: 80: {
 11368                           ;HMI.c: 81: UpDebounceCount++;
 11369  0C8E  3001               	movlw	(01h)
 11370  0C8F  00F2               	movwf	(??_Debounce+0)+0
 11371  0C90  0872               	movf	(??_Debounce+0)+0,w
 11372  0C91  1683               	bsf	status, 5	;RP0=1, select bank1
 11373  0C92  1303               	bcf	status, 6	;RP1=0, select bank1
 11374  0C93  07CC               	addwf	(_UpDebounceCount)^080h,f	;volatile
 11375                           	line	82
 11376                           	
 11377  0C94                     i1l10439:	
 11378                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 11379  0C94  300A               	movlw	(0Ah)
 11380  0C95  024C               	subwf	(_UpDebounceCount)^080h,w	;volatile
 11381  0C96  1C03               	skipc
 11382  0C97  2C99               	goto	u374_21
 11383  0C98  2C9A               	goto	u374_20
 11384  0C99                     u374_21:
 11385  0C99  2CA6               	goto	i1l4475
 11386  0C9A                     u374_20:
 11387                           	
 11388  0C9A                     i1l10441:	
 11389  0C9A  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 11390  0C9B  2C9D               	goto	u375_21
 11391  0C9C  2C9E               	goto	u375_20
 11392  0C9D                     u375_21:
 11393  0C9D  2CA6               	goto	i1l4475
 11394  0C9E                     u375_20:
 11395                           	line	84
 11396                           	
 11397  0C9E                     i1l10443:	
 11398                           ;HMI.c: 83: {
 11399                           ;HMI.c: 84: UpPressed = 1;
 11400  0C9E  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 11401                           	line	85
 11402                           ;HMI.c: 85: UpReleased = 0;
 11403  0C9F  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 11404  0CA0  2CA6               	goto	i1l4475
 11405                           	line	86
 11406                           	
 11407  0CA1                     i1l4474:	
 11408                           	line	87
 11409                           ;HMI.c: 86: }
 11410                           ;HMI.c: 87: }
 11411  0CA1  2CA6               	goto	i1l4475
 11412                           	line	88
 11413                           	
 11414  0CA2                     i1l4473:	
 11415                           	line	90
 11416                           ;HMI.c: 88: else
 11417                           ;HMI.c: 89: {
 11418                           ;HMI.c: 90: UpDebounceCount = 0;
 11419  0CA2  1683               	bsf	status, 5	;RP0=1, select bank1
 11420  0CA3  1303               	bcf	status, 6	;RP1=0, select bank1
 11421  0CA4  01CC               	clrf	(_UpDebounceCount)^080h	;volatile
 11422                           	line	91
 11423                           ;HMI.c: 91: UpReleased = 1;
 11424  0CA5  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 11425                           	line	92
 11426                           	
 11427  0CA6                     i1l4475:	
 11428                           	line	95
 11429                           ;HMI.c: 92: }
 11430                           ;HMI.c: 95: if(!RB3)
 11431  0CA6  1283               	bcf	status, 5	;RP0=0, select bank0
 11432  0CA7  1303               	bcf	status, 6	;RP1=0, select bank0
 11433  0CA8  1986               	btfsc	(51/8),(51)&7
 11434  0CA9  2CAB               	goto	u376_21
 11435  0CAA  2CAC               	goto	u376_20
 11436  0CAB                     u376_21:
 11437  0CAB  2CC0               	goto	i1l4476
 11438  0CAC                     u376_20:
 11439                           	line	97
 11440                           	
 11441  0CAC                     i1l10445:	
 11442                           ;HMI.c: 96: {
 11443                           ;HMI.c: 97: DownDebounceCount++;
 11444  0CAC  3001               	movlw	(01h)
 11445  0CAD  00F2               	movwf	(??_Debounce+0)+0
 11446  0CAE  0872               	movf	(??_Debounce+0)+0,w
 11447  0CAF  1683               	bsf	status, 5	;RP0=1, select bank1
 11448  0CB0  1303               	bcf	status, 6	;RP1=0, select bank1
 11449  0CB1  07C8               	addwf	(_DownDebounceCount)^080h,f	;volatile
 11450                           	line	98
 11451                           	
 11452  0CB2                     i1l10447:	
 11453                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 11454  0CB2  300A               	movlw	(0Ah)
 11455  0CB3  0248               	subwf	(_DownDebounceCount)^080h,w	;volatile
 11456  0CB4  1C03               	skipc
 11457  0CB5  2CB7               	goto	u377_21
 11458  0CB6  2CB8               	goto	u377_20
 11459  0CB7                     u377_21:
 11460  0CB7  2CC4               	goto	i1l4478
 11461  0CB8                     u377_20:
 11462                           	
 11463  0CB8                     i1l10449:	
 11464  0CB8  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 11465  0CB9  2CBB               	goto	u378_21
 11466  0CBA  2CBC               	goto	u378_20
 11467  0CBB                     u378_21:
 11468  0CBB  2CC4               	goto	i1l4478
 11469  0CBC                     u378_20:
 11470                           	line	100
 11471                           	
 11472  0CBC                     i1l10451:	
 11473                           ;HMI.c: 99: {
 11474                           ;HMI.c: 100: DownPressed = 1;
 11475  0CBC  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 11476                           	line	101
 11477                           ;HMI.c: 101: DownReleased = 0;
 11478  0CBD  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 11479  0CBE  2CC4               	goto	i1l4478
 11480                           	line	102
 11481                           	
 11482  0CBF                     i1l4477:	
 11483                           	line	103
 11484                           ;HMI.c: 102: }
 11485                           ;HMI.c: 103: }
 11486  0CBF  2CC4               	goto	i1l4478
 11487                           	line	104
 11488                           	
 11489  0CC0                     i1l4476:	
 11490                           	line	106
 11491                           ;HMI.c: 104: else
 11492                           ;HMI.c: 105: {
 11493                           ;HMI.c: 106: DownDebounceCount = 0;
 11494  0CC0  1683               	bsf	status, 5	;RP0=1, select bank1
 11495  0CC1  1303               	bcf	status, 6	;RP1=0, select bank1
 11496  0CC2  01C8               	clrf	(_DownDebounceCount)^080h	;volatile
 11497                           	line	107
 11498                           ;HMI.c: 107: DownReleased = 1;
 11499  0CC3  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 11500                           	line	108
 11501                           	
 11502  0CC4                     i1l4478:	
 11503                           	line	110
 11504                           ;HMI.c: 108: }
 11505                           ;HMI.c: 110: if(!RB4)
 11506  0CC4  1283               	bcf	status, 5	;RP0=0, select bank0
 11507  0CC5  1303               	bcf	status, 6	;RP1=0, select bank0
 11508  0CC6  1A06               	btfsc	(52/8),(52)&7
 11509  0CC7  2CC9               	goto	u379_21
 11510  0CC8  2CCA               	goto	u379_20
 11511  0CC9                     u379_21:
 11512  0CC9  2CDE               	goto	i1l4479
 11513  0CCA                     u379_20:
 11514                           	line	112
 11515                           	
 11516  0CCA                     i1l10453:	
 11517                           ;HMI.c: 111: {
 11518                           ;HMI.c: 112: LeftDebounceCount++;
 11519  0CCA  3001               	movlw	(01h)
 11520  0CCB  00F2               	movwf	(??_Debounce+0)+0
 11521  0CCC  0872               	movf	(??_Debounce+0)+0,w
 11522  0CCD  1683               	bsf	status, 5	;RP0=1, select bank1
 11523  0CCE  1303               	bcf	status, 6	;RP1=0, select bank1
 11524  0CCF  07C9               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 11525                           	line	113
 11526                           	
 11527  0CD0                     i1l10455:	
 11528                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 11529  0CD0  300A               	movlw	(0Ah)
 11530  0CD1  0249               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 11531  0CD2  1C03               	skipc
 11532  0CD3  2CD5               	goto	u380_21
 11533  0CD4  2CD6               	goto	u380_20
 11534  0CD5                     u380_21:
 11535  0CD5  2CE2               	goto	i1l4481
 11536  0CD6                     u380_20:
 11537                           	
 11538  0CD6                     i1l10457:	
 11539  0CD6  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 11540  0CD7  2CD9               	goto	u381_21
 11541  0CD8  2CDA               	goto	u381_20
 11542  0CD9                     u381_21:
 11543  0CD9  2CE2               	goto	i1l4481
 11544  0CDA                     u381_20:
 11545                           	line	115
 11546                           	
 11547  0CDA                     i1l10459:	
 11548                           ;HMI.c: 114: {
 11549                           ;HMI.c: 115: LeftPressed = 1;
 11550  0CDA  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 11551                           	line	116
 11552                           ;HMI.c: 116: LeftReleased = 0;
 11553  0CDB  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 11554  0CDC  2CE2               	goto	i1l4481
 11555                           	line	117
 11556                           	
 11557  0CDD                     i1l4480:	
 11558                           	line	118
 11559                           ;HMI.c: 117: }
 11560                           ;HMI.c: 118: }
 11561  0CDD  2CE2               	goto	i1l4481
 11562                           	line	119
 11563                           	
 11564  0CDE                     i1l4479:	
 11565                           	line	121
 11566                           ;HMI.c: 119: else
 11567                           ;HMI.c: 120: {
 11568                           ;HMI.c: 121: LeftDebounceCount = 0;
 11569  0CDE  1683               	bsf	status, 5	;RP0=1, select bank1
 11570  0CDF  1303               	bcf	status, 6	;RP1=0, select bank1
 11571  0CE0  01C9               	clrf	(_LeftDebounceCount)^080h	;volatile
 11572                           	line	122
 11573                           ;HMI.c: 122: LeftReleased = 1;
 11574  0CE1  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 11575                           	line	123
 11576                           	
 11577  0CE2                     i1l4481:	
 11578                           	line	125
 11579                           ;HMI.c: 123: }
 11580                           ;HMI.c: 125: if(!RB5)
 11581  0CE2  1283               	bcf	status, 5	;RP0=0, select bank0
 11582  0CE3  1303               	bcf	status, 6	;RP1=0, select bank0
 11583  0CE4  1A86               	btfsc	(53/8),(53)&7
 11584  0CE5  2CE7               	goto	u382_21
 11585  0CE6  2CE8               	goto	u382_20
 11586  0CE7                     u382_21:
 11587  0CE7  2CFC               	goto	i1l4482
 11588  0CE8                     u382_20:
 11589                           	line	127
 11590                           	
 11591  0CE8                     i1l10461:	
 11592                           ;HMI.c: 126: {
 11593                           ;HMI.c: 127: RightDebounceCount++;
 11594  0CE8  3001               	movlw	(01h)
 11595  0CE9  00F2               	movwf	(??_Debounce+0)+0
 11596  0CEA  0872               	movf	(??_Debounce+0)+0,w
 11597  0CEB  1683               	bsf	status, 5	;RP0=1, select bank1
 11598  0CEC  1303               	bcf	status, 6	;RP1=0, select bank1
 11599  0CED  07CB               	addwf	(_RightDebounceCount)^080h,f	;volatile
 11600                           	line	128
 11601                           	
 11602  0CEE                     i1l10463:	
 11603                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 11604  0CEE  300A               	movlw	(0Ah)
 11605  0CEF  024B               	subwf	(_RightDebounceCount)^080h,w	;volatile
 11606  0CF0  1C03               	skipc
 11607  0CF1  2CF3               	goto	u383_21
 11608  0CF2  2CF4               	goto	u383_20
 11609  0CF3                     u383_21:
 11610  0CF3  2D00               	goto	i1l4484
 11611  0CF4                     u383_20:
 11612                           	
 11613  0CF4                     i1l10465:	
 11614  0CF4  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 11615  0CF5  2CF7               	goto	u384_21
 11616  0CF6  2CF8               	goto	u384_20
 11617  0CF7                     u384_21:
 11618  0CF7  2D00               	goto	i1l4484
 11619  0CF8                     u384_20:
 11620                           	line	130
 11621                           	
 11622  0CF8                     i1l10467:	
 11623                           ;HMI.c: 129: {
 11624                           ;HMI.c: 130: RightPressed = 1;
 11625  0CF8  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 11626                           	line	131
 11627                           ;HMI.c: 131: RightReleased = 0;
 11628  0CF9  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 11629  0CFA  2D00               	goto	i1l4484
 11630                           	line	132
 11631                           	
 11632  0CFB                     i1l4483:	
 11633                           	line	133
 11634                           ;HMI.c: 132: }
 11635                           ;HMI.c: 133: }
 11636  0CFB  2D00               	goto	i1l4484
 11637                           	line	134
 11638                           	
 11639  0CFC                     i1l4482:	
 11640                           	line	136
 11641                           ;HMI.c: 134: else
 11642                           ;HMI.c: 135: {
 11643                           ;HMI.c: 136: RightDebounceCount = 0;
 11644  0CFC  1683               	bsf	status, 5	;RP0=1, select bank1
 11645  0CFD  1303               	bcf	status, 6	;RP1=0, select bank1
 11646  0CFE  01CB               	clrf	(_RightDebounceCount)^080h	;volatile
 11647                           	line	137
 11648                           ;HMI.c: 137: RightReleased = 1;
 11649  0CFF  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 11650                           	line	138
 11651                           	
 11652  0D00                     i1l4484:	
 11653                           	line	140
 11654                           ;HMI.c: 138: }
 11655                           ;HMI.c: 140: if(!RB6)
 11656  0D00  1283               	bcf	status, 5	;RP0=0, select bank0
 11657  0D01  1303               	bcf	status, 6	;RP1=0, select bank0
 11658  0D02  1B06               	btfsc	(54/8),(54)&7
 11659  0D03  2D05               	goto	u385_21
 11660  0D04  2D06               	goto	u385_20
 11661  0D05                     u385_21:
 11662  0D05  2D1A               	goto	i1l4485
 11663  0D06                     u385_20:
 11664                           	line	142
 11665                           	
 11666  0D06                     i1l10469:	
 11667                           ;HMI.c: 141: {
 11668                           ;HMI.c: 142: CenterDebounceCount++;
 11669  0D06  3001               	movlw	(01h)
 11670  0D07  00F2               	movwf	(??_Debounce+0)+0
 11671  0D08  0872               	movf	(??_Debounce+0)+0,w
 11672  0D09  1683               	bsf	status, 5	;RP0=1, select bank1
 11673  0D0A  1303               	bcf	status, 6	;RP1=0, select bank1
 11674  0D0B  07C5               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 11675                           	line	143
 11676                           	
 11677  0D0C                     i1l10471:	
 11678                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 11679  0D0C  300A               	movlw	(0Ah)
 11680  0D0D  0245               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 11681  0D0E  1C03               	skipc
 11682  0D0F  2D11               	goto	u386_21
 11683  0D10  2D12               	goto	u386_20
 11684  0D11                     u386_21:
 11685  0D11  2D1F               	goto	i1l4488
 11686  0D12                     u386_20:
 11687                           	
 11688  0D12                     i1l10473:	
 11689  0D12  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 11690  0D13  2D15               	goto	u387_21
 11691  0D14  2D16               	goto	u387_20
 11692  0D15                     u387_21:
 11693  0D15  2D1F               	goto	i1l4488
 11694  0D16                     u387_20:
 11695                           	line	145
 11696                           	
 11697  0D16                     i1l10475:	
 11698                           ;HMI.c: 144: {
 11699                           ;HMI.c: 145: CenterPressed = 1;
 11700  0D16  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 11701                           	line	146
 11702                           ;HMI.c: 146: CenterReleased = 0;
 11703  0D17  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 11704  0D18  2D1F               	goto	i1l4488
 11705                           	line	147
 11706                           	
 11707  0D19                     i1l4486:	
 11708                           	line	148
 11709                           ;HMI.c: 147: }
 11710                           ;HMI.c: 148: }
 11711  0D19  2D1F               	goto	i1l4488
 11712                           	line	149
 11713                           	
 11714  0D1A                     i1l4485:	
 11715                           	line	151
 11716                           ;HMI.c: 149: else
 11717                           ;HMI.c: 150: {
 11718                           ;HMI.c: 151: CenterDebounceCount = 0;
 11719  0D1A  1683               	bsf	status, 5	;RP0=1, select bank1
 11720  0D1B  1303               	bcf	status, 6	;RP1=0, select bank1
 11721  0D1C  01C5               	clrf	(_CenterDebounceCount)^080h	;volatile
 11722                           	line	152
 11723                           ;HMI.c: 152: CenterReleased = 1;
 11724  0D1D  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 11725  0D1E  2D1F               	goto	i1l4488
 11726                           	line	153
 11727                           	
 11728  0D1F                     i1l4487:	
 11729                           	line	154
 11730                           	
 11731  0D1F                     i1l4488:	
 11732  0D1F  0008               	return
 11733                           	opt stack 0
 11734                           GLOBAL	__end_of_Debounce
 11735  0D20                     	__end_of_Debounce:
 11736 ;; =============== function _Debounce ends ============
 11737                           
 11738                           	signat	_Debounce,88
 11739                           psect	text1093,local,class=CODE,delta=2
 11740                           global __ptext1093
 11741  0000                     __ptext1093:
 11742                           	global	btemp
 11743  007E                     	btemp set 07Eh
 11744                           
 11745                           	DABS	1,126,2	;btemp
 11746                           	global	wtemp0
 11747  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 11 13:15:39 2015

 __end_of_lcd_write_control 14B3             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                _IRdistance 00B0                          fsr 0004         ___wmul@multiplicand 0022  
                       l700 14C8                         l703 1524                         l704 1524  
                       l705 1528                         l706 1547                         l690 173F  
                       l691 1768                         l692 1743                         l693 1747  
                       l694 174B                         l695 174F                         l696 1753  
                       l689 1757                         l697 1775                         _GIE 005F  
                       _RB0 0030                         _RC0 0038                         _RB2 0032  
                       _RC1 0039                         _RB3 0033                         _RC2 003A  
                       _RB4 0034                         _RB5 0035                         _RE0 0048  
                       _RB6 0036                         _RE1 0049                         _RE2 004A  
                       _RX9 00C6                         _TX9 04C6                         _abs 1706  
                       _pos 00BE                         fsr0 0004                         indf 0000  
              ___awmod@sign 0026            ??_robotMoveSpeed 005D             ?_lcd_set_cursor 0072  
                      ?_abs 0026                        l3000 0523                        l3001 0474  
                      l1402 1477                        l3002 0522                        l1410 164C  
                      l3003 04CA                        l1411 164C                        l3004 0521  
                      l2220 0023                        l3005 0520                        l1405 1457  
                      l2221 0038                        l3006 0526                        l2230 0293  
                      l2222 0049                        l2223 02A3                        l2231 00F8  
                      l1408 163B                        l2240 01F0                        l2232 0121  
                      l2224 004A                        l1409 1622                        l2217 16D5  
                      l2225 02B9                        l2241 029A                        l2233 013B  
                      l2250 0A64                        l2242 029B                        l2234 0168  
                      l2226 0050                        l2251 0A91                        l2243 02A1  
                      l2235 019F                        l2227 0075                        l2260 0AA3  
                      l2252 0A65                        l2244 02C0                        l2236 01B9  
                      l2228 0098                        l1429 159C                        l2261 0AA4  
                      l2253 0AA2                        l2245 02C1                        l2237 01D1  
                      l2229 00F3                        l2254 0A67                        l2270 08E6  
                      l2246 02C1                        l2238 01F1                        l2255 0A69  
                      l2271 08E8                        l2256 0A79                        l2280 07F6  
                      l2272 08EA                        l2264 08D6                        l2257 0A87  
                      l2249 0A59                        l2281 07C9                        l2273 090C  
                      l2265 08E1                        l2258 0AA4                        l2282 07E0  
                      l2266 08F9                        l2274 08F6                        l2259 0A8F  
                      l2283 07FF                        l2275 090B                        l2267 08E2  
                      l2276 090C                        l2268 090A                        l2269 08E4  
                      l1399 14B2                        l2279 079D                        l6010 0C53  
                      l6011 0C87                        l4500 0911                        l4501 0951  
                      l3701 1493                        l4502 0912                        l3702 1493  
                      l3710 09C2                        l6014 173A                        l4503 0913  
                      l3703 1498                        l3711 09E2                        l4504 0924  
                      l3704 149E                        l3712 09F3                        l4520 064D  
                      l4505 0925                        l6009 0C35                        l4521 0676  
                      l4506 0937                        l4514 0678                        l4522 0685  
                      l4507 0938                        l3707 09B4                        l4515 0540  
                      l4508 0953                        l3708 09BB                        l4516 05A7  
                      l4509 093D                        l3709 09D8                        l4517 05BA  
                      l4518 0685                        l4519 0602                        l2990 14DE  
                      l2984 0B26                        l2993 031C                        l2985 0B5C  
                      l2994 0526                        l2986 0B48                        l4499 093F  
                      l2995 0372                        l2987 0B82                        l2996 0525  
                      l2997 03C8                        l2998 0524                        l2999 041E  
                      l6720 15F4                        l6713 14EA                        l6714 14F7  
                      l6723 1652                        l6724 1651                        l7460 15AC  
                      l6725 165C                        l7461 15C1                        l6717 15CB  
                      l6726 1679                        l7462 15C8                        l7470 098D  
                      l6718 15CA                        l7471 099B                        l6719 15D4  
                      l7472 09A3                        l7480 17E9                        l7800 0BCC  
                      l6760 06A7                        l7560 0F86                        l7465 099C  
                      l7481 17F7                        l7801 0BD8                        l6761 06A2  
                      l7561 0F9B                        l7466 096E                        l7482 17FF  
                      l7802 0BCD                        l7570 0E2D                        l6762 0780  
                      l6770 06FE                        l7562 0FB2                        l7459 15A2  
                      l7467 0962                        l7475 17F8                        l7803 0BDC  
                      l7571 0E19                        l6771 071B                        l6763 06A3  
                      l7563 0FB7                        l6748 1571                        l7468 0973  
                      l7476 17D2                        l7804 0BE6                        l7572 0E1A  
                      l6772 0760                        l6764 06A4                        l7564 0FCC  
                      l7469 0974                        l7477 17C6                        l7805 0BFF  
                      l7573 0E2C                        l6757 076C                        l6773 0720  
                      l6765 06BC                        l7565 0FE3                        l7557 0F2D  
                      l7478 17D7                        l7574 0E51                        l7670 0AD5  
                      l6774 076B                        l6766 06A5                        l6758 068E  
                      l5990 16A6                        l7558 0FFF                        l7479 17D8  
                      l7575 0E3D                        l7671 0AC9                        l6775 077F  
                      l6767 06D6                        l6759 06A0                        l7559 0F46  
                      l7576 0E4A                        l7568 0DE2                        l7672 0ADA  
                      l5984 08C6                        l6776 0785                        l6768 06E1  
                      l7577 0E3E                        l7569 0E6A                        l7673 0ADB  
                      l6769 0709                        l5993 0D82                        l7578 0E50  
                      l7674 0AEC                        l5994 0D32                        l7579 0E61  
                      l7675 0AFA                        l7667 0AB5                        l7595 1605  
                      l5987 0A46                        l5995 0D41                        l7676 0B05  
                      l7668 0ABF                        l7596 1620                        l5996 0DB9  
                      l7677 0B0C                        l7669 0AFB                        l5997 0DC4  
                      l7791 0B99                        l7793 0B91                        l7794 0BFF  
                      l7795 0BA7                        l7796 0B9A                        l7797 0BAE  
                      l7798 0BC5                        _CHS0 00FB                        l7799 0BAF  
                      _CHS1 00FC                        _CHS2 00FD                        STR_1 0862  
                      STR_2 0859                        STR_3 0874                        STR_4 087D  
                      STR_5 086B                        STR_6 0850                        STR_7 08A1  
                      STR_8 08A5                        STR_9 088D                        _BRGH 04C2  
                      _CREN 00C4                        u4010 15C0                        u4011 15BF  
                      u4020 095E                        u4005 15B4                        u4021 095D  
                      u4110 17D6                        u4111 17D5                        u4040 0972  
                      u4120 17E2                        u5000 03DA                        u4041 0971  
                      u4121 17E1                        u4105 17C7                        u5001 03D9  
                      u5010 0427                        u4035 0963                        u5011 0426  
                      u3500 1528                        u4060 0985                        u4140 17F6  
                      u5020 0430                        u5100 06FC                        u3501 1527  
                      u4061 0984                        u4141 17F5                        u4125 17DE  
                      u5021 042F                        u5101 06FB                        u5030 047D  
                      u5110 0708                        u4055 0975                        u4135 17EA  
                      u5031 047C                        u5111 0707                        u4080 099A  
                      u4400 0B90                        u5040 0486                        u5120 070F  
                      u5200 0F68                        u4081 0999                        u4065 0981  
                      u4401 0B8F                        u5041 0485                        u5121 070E  
                      u5105 06F8                        u4090 17C2                        u5050 04D3  
                      u5130 076A                        u5210 0F8A                        u3515 1535  
                      u4075 098E                        u4091 17C1                        u5051 04D2  
                      u5131 0769                        u5211 0F89                        u3700 0934  
                      u4420 0BAD                        u5060 04DC                        u5140 077E  
                      u5300 0FE2                        u3701 0933                        u4421 0BAC  
                      u5061 04DB                        u5141 077D                        u5301 0FE1  
                      u5221 0F93                        u5205 0F64                        u3710 165C  
                      u5070 0694                        u5150 15D4                        u5222 0F9A  
                      u5310 15FC                        u3711 165B                        u4415 0B9F  
                      u5071 0693                        u5151 15D3                        u5311 15FB  
                      u3720 1497                        u4440 0BCB                        u4600 0E08  
                      u5080 06CC                        u5320 164B                        u5400 07B4  
                      u3721 1496                        u4441 0BCA                        u4601 0E07  
                      u5081 06CB                        u5321 164A                        u5401 07B3  
                      u4610 0E0F                        u5090 06DF                        u5250 0FB1  
                      u5170 0F25                        u5330 0B24                        u5410 07D9  
                      u4435 0BBE                        u4611 0E0E                        u5091 06DE  
                      u5251 0FB0                        u5235 0F9C                        u5171 0F24  
                      u5331 0B23                        u5411 07D8                        _PEIE 005E  
                      u4460 0BDC                        u4700 0AB9                        u5260 0FBB  
                      u5180 0F3E                        u5340 0B3C                        u5420 07F5  
                      u5500 014A                        u4461 0BDB                        u4701 0AB8  
                      u5165 171B                        u5261 0FBA                        u5245 0FA4  
                      u5181 0F3D                        u5341 0B3B                        u5421 07F4  
                      u5405 07B0                        u5501 0149                        u3910 14E5  
                      u4470 0BE0                        u4390 0B89                        u4630 0E2B  
                      u4710 0AC5                        u5190 0F56                        u5350 0B5B  
                      u5430 0D3D                        u5510 0159                        u3911 14E4  
                      u4471 0BDF                        u4455 0BD0                        u4631 0E2A  
                      u4711 0AC4                        u5271 0FC4                        u5351 0B5A  
                      u5335 0B20                        u5511 0158                        u3920 14F2  
                      u4480 0BF1                        u4640 0E33                        u5272 0FCB  
                      u5360 0531                        u5440 0DB8                        u5600 0299  
                      u5520 0177                        u3921 14F1                        u4641 0E32  
                      u4625 0E1B                        u5425 07F1                        u5441 0DB7  
                      u5521 0176                        u5505 0146                        u3690 091F  
                      u4490 0BFE                        u4730 0AD9                        u5370 0594  
                      u5450 08DA                        u5530 0186                        u3691 091E  
                      u4731 0AD8                        u5195 0F52                        u5355 0B57  
                      u5371 0593                        u5451 08D9                        u5531 0185  
                      u5515 0155                        _RCIE 0465                        u4660 0E4F  
                      u4580 0DD8                        u4740 0AE5                        u4900 09AD  
                      u5380 0A5D                        u5540 01AE                        u5460 0027  
                      _RCIF 0065                        u4485 0BED                        u4661 0E4E  
                      u4581 0DD7                        u4741 0AE4                        u4725 0ACA  
                      u4901 09AC                        u5285 0FCD                        u5381 0A5C  
                      u5445 0DB4                        u5541 01AD                        u5525 0173  
                      u5461 0026                        u4670 0E55                        u4590 0DED  
                      u4910 09E2                        u5390 079B                        u5550 01B4  
                      u5470 003C                        u4655 0E40                        u4911 09E1  
                      u5295 0FD5                        u5375 0590                        u5391 079A  
                      u5551 01B3                        u5535 0182                        u4760 0AF9  
                      u4920 0C16                        u5560 01BF                        u5480 0116  
                      u4761 0AF8                        u4745 0AE1                        u4921 0C15  
                      u5561 01BE                        u5545 01AA                        u5481 0115  
                      u5617 0081                        u4770 0AFF                        u4690 0AAC  
                      u4930 02CF                        u5570 01CC                        u5490 0130  
                      u4595 0DE9                        u4755 0AED                        u4691 0AAB  
                      u4915 09DE                        u5707 09CB                        u4931 02CE  
                      u5395 0797                        u5571 01CB                        u5491 012F  
                      u5627 00A4                        u3980 15A6                        u4940 02D8  
                      u5580 01E0                        u3981 15A5                        u5717 1473  
                      u4941 02D7                        u5581 01DF                        u5485 0112  
                      u5637 00C2                        u4950 0325                        u5590 01EF  
                      u5727 14AD                        u4951 0324                        u5591 01EE  
                      u5575 01C8                        u5495 012C                        u5647 00DC  
                      u4960 032E                        u5737 14C6                        u4961 032D  
                      u5657 0210                        u5585 01DC                        u4970 037B  
                      _OERR 00C1                        u3995 15AD                        u5747 176A  
                      u4971 037A                        u5667 025F                        u5595 01EB  
                      u4980 0384                        u4981 0383                        u5677 027C  
                      u4990 03D1                        u4991 03D0                        u5687 0A06  
                      u5697 0A29                        _TMR0 0001                  _ChargeMode 08C7  
                      _SPEN 00C7                        _TXIE 0464                        _WREN 0C62  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
       __size_of_ADCconvert 0263                        _Menu 090D      __end_of_lcd_write_data 1478  
                      abs@v 0026                        _isr1 0E6B                        _main 0015  
              ___ftpack@arg 0020                        _init 16A7                ___ftpack@exp 0023  
                      btemp 007E              _CenterReleased 0381                        start 0012  
              ___ftmul@cntr 004A                ___ftmul@sign 004B               ??_ReadButtons 0073  
              ___fttol@exp1 0035                       ??_abs 0028                ___fttol@lval 0031  
     readAvgDistance@tempIR 0034                       ?_Menu 0072                       l11001 032E  
                     l11011 03D1                       l11003 0372                       l11021 0474  
                     l11013 03DA                       l11005 037B                       l11101 15EF  
                     l11031 04DC                       l11023 047D                       l11015 041E  
                     l11007 0384                       l11103 15F0                       l11111 1684  
                     l10401 0938                       l11025 0486                       l11017 0427  
                     l11009 03C8                       l11041 06A6                       l11033 0689  
                     l11105 15F4                       l11113 168A                       l11121 1706  
                     l11201 157A                       l10251 1547                       l10243 151F  
                     l10411 0953                       l10403 093C                       l10235 14F4  
                     l11027 04CA                       l11019 0430                       l11051 06CC  
                     l11043 06A7                       l11035 068E                       l11115 1692  
                     l11107 167A                       l11123 173A                       l11131 0F2D  
                     l11211 1590                       l11203 157D                       l10245 1522  
                     l10405 093E                       l10421 1677                       l10413 1650  
                     l10237 14F6                       l10501 14E5                       l11029 04D3  
                     l11061 06E1                       l11053 06D0                       l11045 06BC  
                     l11037 0694                       l11117 169A                       l11109 1680  
                     l11141 0F74                       l11133 0F3E                       l11125 0F12  
                     l11213 1596                       l11205 157E                       l11221 0A17  
                     l11301 060E                       l10247 152B                       l10407 093F  
                     l10423 1678                       l10415 1652                       l10431 149C  
                     l10511 14F4                       l10503 14E7                       l11071 070F  
                     l11063 06FD                       l11055 06D6                       l11047 06C4  
                     l11039 069B                       l11119 16A0                       l11151 0F8A  
                     l11143 0F75                       l11135 0F45                       l11127 0F25  
                     l11207 1584                       l11223 0A1D                       l11215 09F4  
                     l11231 14D7                       l11311 064D                       l11303 0619  
                     l10249 153E                       l10409 0951                       l10417 165D  
                     l10433 149E                       l10425 148E                       l10513 14F7  
                     l10505 14E9                       l10601 17F0                       l11081 075B  
                     l11073 0716                       l11065 06FE                       l11057 06D9  
                     l11049 06C8                       l11161 0FB7                       l11153 0F9B  
                     l11145 0F7B                       l11137 0F46                       l11129 0F2C  
                     l11209 158A                       l11225 0A2E                       l11217 0A00  
                     l11233 14DE                       l11241 16B4                       l11313 0659  
                     l11305 062A                       l11321 0A47                       l11401 0D82  
                     l10371 1556                       l10363 1548                       l10419 166B  
                     l10427 1490                       l10507 14EA                       l10603 17F8  
                     l11083 0760                       l11075 071B                       l11067 0702  
                     l11059 06E0                       l11091 15C9                       l11171 0FE3  
                     l11163 0FBB                       l11155 0FA3                       l11147 0F81  
                     l11139 0F73                       l11227 0A3A                       l11219 0A0B  
                     l11251 16C8                       l11243 16B6                       l11235 16A7  
                     l11315 0664                       l11307 0630                       l11331 0A69  
                     l11323 0A4C                       l11403 0DB9                       l11411 08DA  
                     l10381 1561                       l10373 1557                       l10365 154B  
                     l10429 1498                       l10509 14F2                       l10605 17FF  
                     l10701 0BE8                       l11077 0720                       l11069 0709  
                     l11085 076C                       l11093 15CB                       l11173 0FFF  
                     l11165 0FCC                       l11157 0FAB                       l11149 0F86  
                     l11181 1620                       l11229 14C9                       l11253 16CD  
                     l11245 16BA                       l11237 16A8                       l11261 0B0D  
                     l11317 0677                       l11309 0641                       l11341 0A8B  
                     l11333 0A77                       l11325 0A59                       l11421 08F5  
                     l11413 08DB                       l11405 08C7                       l11501 0177  
                     l10383 1564                       l10375 155A                       l10367 1553  
                     l10391 0913                       l10551 15A6                       l10703 0BFA  
                     l11079 0754                       l11087 0780                       l11095 15D5  
                     l11167 0FD4                       l11159 0FB2                       l11175 15F5  
                     l11183 1450                       l11191 1632                       l11255 16D2  
                     l11247 16BE                       l11239 16AC                       l11271 0B3C  
                     l11263 0B17                       l11319 0678                       l11343 0A8C  
                     l11335 0A79                       l11327 0A5D                       l11351 0786  
                     l11423 08F8                       l11415 08EA                       l11407 08CF  
                     l11511 01AE                       l11503 0186                       l11431 001D  
                     l10385 1565                       l10377 155D                       l10369 1554  
                     l10393 091B                       l10553 15B3                       l10561 0958  
                     l10705 0BFE                       l11089 0785                       l11097 15E1  
                     l11169 0FDC                       l11177 15FC                       l11185 1451  
                     l11193 163B                       l11257 16D3                       l11249 16C3  
                     l11273 0B4E                       l11265 0B25                       l11281 0546  
                     l11345 0A8E                       l11337 0A85                       l11329 0A5E  
                     l11361 07B4                       l11353 078E                       l11417 08F0  
                     l11425 08F9                       l11409 08D6                       l11521 01D1  
                     l11513 01B4                       l11505 0197                       l11441 0032  
                     l11433 0023                       l10387 1566                       l10379 1560  
                     l10395 091F                       l10555 15C1                       l10547 159D  
                     l10571 0974                       l10563 095E                       l10811 0AB5  
                     l11099 15E7                       l11179 1605                       l11187 1621  
                     l11195 1572                       l11259 16D4                       l11275 0B5C  
                     l11267 0B26                       l11291 05A7                       l11283 056E  
                     l11347 0A90                       l11339 0A87                       l11371 07E0  
                     l11363 07C9                       l11355 079C                       l11419 08F1  
                     l11531 024C                       l11523 01E0                       l11515 01B9  
                     l11507 019C                       l11451 0050                       l11435 0027  
                     l11443 0038                       l11427 0015                       l10397 0925  
                     l10389 0910                       l10557 15C8                       l10549 15A2  
                     l10573 0985                       l10565 0962                       l10581 099C  
                     l10821 0AD0                       l10813 0AB9                       l11189 1622  
                     l11197 1576                       l11269 0B33                       l11293 05BA  
                     l11285 057F                       l11277 0527                       l11349 0A91  
                     l11373 07E8                       l11365 07D5                       l11357 079D  
                     l11381 0D24                       l11533 0257                       l11525 01F1  
                     l11517 01BF                       l11509 019F                       l11541 0293  
                     l11461 0098                       l11453 005F                       l11445 003C  
                     l11437 0028                       l11429 001B                       l10399 0934  
                     l10583 09A3                       l10575 098B                       l10567 0969  
                     l10559 0954                       l10591 17CD                       l10751 0DC5  
                     l10831 0AF3                       l10823 0AD5                       l10815 0ABF  
                     l10807 0AA5                       l10911 1753                       l11199 1579  
                     l11295 05C0                       l11287 0585                       l11279 0540  
                     l11367 07D9                       l11359 07A2                       l11375 07F6  
                     l11391 0D4A                       l11383 0D32                       l11543 029B  
                     l11535 0266                       l11527 0208                       l11519 01CC  
                     l11471 00D4                       l11463 009C                       l11455 0075  
                     l11447 0047                       l11439 002D                       l10577 098D  
                     l10569 096E                       l10593 17D2                       l10585 17BA  
                     l10681 0B91                       l10761 0DF5                       l10753 0DD8  
                     l10825 0ADB                       l10817 0AC5                       l10833 0AFB  
                     l10809 0AAC                       l10921 176C                       l10913 1755  
                     l11297 05D7                       l11289 0594                       l11377 07FF  
                     l11369 07DA                       l11393 0D55                       l11385 0D37  
                     l11545 02A2                       l11537 0274                       l11529 0217  
                     l11481 0107                       l11473 00E3                       l11465 00AB  
                     l11457 0079                       l11449 004A                       l10499 14DF  
                     l10579 0994                       l10595 17D8                       l10587 17C2  
                     l10691 0BB3                       l10683 0B98                       l10771 0E0F  
                     l10763 0DFB                       l10755 0DE1                       l10835 0AFF  
                     l10827 0AE5                       l10819 0AC9                       l10923 1775  
                     l10915 1756                       l10931 14BE                       l11299 0602  
                     l11395 0D62                       l11387 0D3D                       l11379 0D20  
                     l11539 0283                       l11491 013B                       l11483 0109  
                     l11475 00F3                       l11467 00BA                       l11459 0088  
                     l11547 02A3                       l10597 17E2                       l10589 17C6  
                     l10693 0BBD                       l10685 0B9A                       l10677 0B83  
                     l10781 0E3C                       l10773 0E18                       l10765 0E02  
                     l10757 0DE2                       l10837 0B05                       l10829 0AEC  
                     l10917 1757                       l10909 173E                       l10933 14C2  
                     l10925 14B3                       l10941 14A8                       l11397 0D6E  
                     l11389 0D41                       l11493 014A                       l11485 0116  
                     l11477 00F8                       l11469 00C9                       l11549 02B9  
                     l10599 17E9                       l10695 0BCD                       l10687 0BA7  
                     l10679 0B89                       l10791 0E61                       l10783 0E3E  
                     l10775 0E1A                       l10767 0E04                       l10759 0DF4  
                     l10839 0B0C                       l10919 1768                       l10927 14B6  
                     l10935 14A2                       l10943 1468                       l10951 08AE  
                     l11399 0D7C                       l11495 0159                       l11487 0121  
                     l11479 0105                       l10697 0BD8                       l10689 0BAF  
                     l10793 0E6A                       l10785 0E4A                       l10769 0E08  
                     l10777 0E2D                       l10929 14BA                       l10937 14A5  
                     l10945 146B                       l10961 09BB                       l10953 09A4  
                     l11497 0163                       l11489 0130                       l10699 0BE0  
                     l10779 0E33                       l10787 0E51                       l10939 14A7  
                     l10947 146D                       l10971 09EA                       l10963 09BE  
                     l10955 09A8                       l11499 0168                       l10789 0E55  
                     l10949 146E                       l10973 09ED                       l10965 09BF  
                     l10957 09AD                       l10981 0C00                       l10975 09EE  
                     l10967 09C7                       l10959 09B4                       l10983 0C08  
                     l10991 02C4                       l10977 09EF                       l10969 09E4  
                     l10985 0C10                       l10993 02CF                       l10979 09F0  
                     l10987 0C16                       l10995 02D8                       l10989 0C35  
                     l10997 031C                       l10999 0325        __size_of_calibrateIR 005E  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
                     _EEADR 010D                       STR_10 0899                       STR_11 08A9  
                     STR_12 089D                       STR_13 083A                       STR_14 082A  
                     STR_15 0891                       STR_16 0885                       STR_17 0895  
                     STR_18 081A                       STR_19 0847             __end_of___awmod 0B0D  
                     _CARRY 0018             __end_of___ftmul 1000             __end_of___fttol 0E6B  
           __end_of___lwdiv 09A4             __end_of___lwmod 1800                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074             __end_of_scan360 0800               ___awtoft@sign 003B  
             ___ftpack@sign 0024                       _total 00C0              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00D4             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0786            __end_of_Debounce 0D20          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072                __end_of_Menu 0954  
__size_of_lcd_write_control 0014            _shortMenuStrings 00DD                __end_of_isr1 0F12  
              __end_of_main 02C4                __end_of_init 16D6             rotate@direction 0025  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
                    ??_isr1 0078                      ??_main 0062               ___fttol@sign1 0030  
                    ??_init 0023         __end_of_ReadButtons 1706               Menu@BTN_input 0020  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of___awtoft 1621            __end_of___ftpack 0C00  
          __end_of_adc_read 1548                 ?_ChargeMode 0072                      i1l2210 0EE0  
                    i1l2211 0EDF                      i1l2212 0F06                      i1l2213 0F05  
                    i1l2214 0F06                      i1l2206 0EBE                      i1l2207 0E92  
                    i1l2208 0EAF                      i1l2209 0EBD                      i1l4480 0CDD  
                    i1l4481 0CE2                      i1l4473 0CA2                      i1l4482 0CFC  
                    i1l4474 0CA1                      i1l4483 0CFB                      i1l4475 0CA6  
                    i1l4491 16E3                      i1l4484 0D00                      i1l4476 0CC0  
                    i1l4492 1705                      i1l4485 0D1A                      i1l4477 0CBF  
                    i1l4493 16EB                      i1l4486 0D19                      i1l4478 0CC4  
                    i1l4494 16F3                      i1l4487 0D1F                      i1l4479 0CDE  
                    i1l4495 16FB                      i1l4488 0D1F                      i1l4496 1703  
                    i1l7480 17A3                      i1l7481 17B1                      i1l7482 17B9  
                    i1l7475 17B2                      i1l7476 178C                      i1l7477 1780  
                    i1l7478 1791                      i1l7479 1792                      u360_20 0EDA  
                    u360_21 0ED9                      u361_20 0EE5                      u361_21 0EE4  
                    u362_20 0EEB                      u362_21 0EEA                      u363_20 0F03  
                    u355_20 0E6F                      u363_21 0F02                      u355_21 0E6E  
                    u380_20 0CD6                      u364_20 16DF                      u356_20 0E90  
                    u380_21 0CD5                      u364_21 16DE                      u356_21 0E8F  
                    u381_20 0CDA                      u373_20 0C8E                      u365_20 16E7  
                    u357_20 0EA9                      u381_21 0CD9                      u373_21 0C8D  
                    u365_21 16E6                      u357_21 0EA8                      u382_20 0CE8  
                    u374_20 0C9A                      u366_20 16EF                      u358_20 0EB4  
                    u382_21 0CE7                      u374_21 0C99                      u366_21 16EE  
                    u358_21 0EB3                 _DistLowByte 00C7                      u383_20 0CF4  
                    u375_20 0C9E                      u367_20 16F7                      u359_20 0EC4  
                    u383_21 0CF3                      u375_21 0C9D                      u367_21 16F6  
                    u359_21 0EC3                      u384_20 0CF8                      u376_20 0CAC  
                    u368_20 16FF                      u384_21 0CF7                      u376_21 0CAB  
                    u368_21 16FE                      u385_20 0D06                      u377_20 0CB8  
                    u385_21 0D05                      u377_21 0CB7                      u386_20 0D12  
                    u378_20 0CBC                      u386_21 0D11                      u378_21 0CBB  
                    u387_20 0D16                      u379_20 0CCA                      u387_21 0D15  
                    u379_21 0CC9                      u484_20 177C                      u484_21 177B  
                    u485_25 1781                      u486_20 1790                      u486_21 178F  
                    u487_20 179C                      u487_21 179B                      u487_25 1798  
                    u488_25 17A4                      u489_20 17B0                      u489_21 17AF  
                    _TMR0IE 005D                      _TMR0IF 005A                scan360@steps 005F  
                    _SSPCON 0014                      _SSPBUF 0013                  _UpReleased 038C  
          __end_of_lcd_init 159D                      _adcVal 00B6             _UpDebounceCount 00CC  
           RobotDrive@speed 0022                  _RobotDrive 167A                      ___wmul 159D  
                 ??___awmod 0024                _turnhighByte 00D3                   ??___ftmul 0042  
              ??_ADCconvert 002E                   ??___fttol 002C                   ??___lwdiv 002A  
                 ??___lwmod 0032            __end_of_init_adc 14C9              ??_readDistance 002A  
           ___awmod@divisor 0020    __end_of_lcd_write_string 164D             ___awmod@counter 0025  
                    _rotate 09A4                      _rxfifo 00A0                      clrloop 1446  
                    _txfifo 01A0                      _rxiptr 00D0                      _rxoptr 00D1  
               _BumpSensors 00C4                      _txiptr 00D5                   ??_scan360 005B  
     ___ftmul@f3_as_product 0047                      _txoptr 00D6            __end_of_ser_init 1572  
          __end_of_ser_isrx 14F8           __end_ofi1___lwmod 17BA                      saved_w 007E  
             main@shortwall 0069                 _LeftPressed 0384      RobotDrive@speedlowByte 0025  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 0527                  ___awtoft@c 0036                  ___ftmul@f1 003C  
                ___ftmul@f2 003F                  ___fttol@f1 0028              __pcstackCOMMON 0072  
              __pidataBANK1 1458                 _ReadButtons 16D6         __size_of_ChargeMode 0046  
          ??_lcd_set_cursor 0023                   ?_Debounce 0072               _buttonPressed 007D  
                __pbssBANK1 00A0                  __pbssBANK3 0190           _DownDebounceCount 00C8  
            main@direction1 0065          _RightDebounceCount 00CB                  __pmaintext 0015  
               ?_RobotDrive 0022                     ?___wmul 0020                  __pintentry 0004  
              _DistHighByte 00C6       __end_of_UpdateDisplay 0686                  __ptext1051 08C7  
                __ptext1060 1572                  __ptext1052 0D20                  __ptext1061 1621  
                __ptext1053 0786                  __ptext1070 0C00                  __ptext1062 144D  
                __ptext1054 0A47                  __ptext1071 09A4                  __ptext1063 15F5  
                __ptext1055 0527                  __ptext1080 17BA                  __ptext1072 08AE  
                __ptext1064 0F12                  __ptext1056 0B0D                  __ptext1081 0954  
                __ptext1073 1465                  __ptext1065 1706                  __ptext1057 16A7  
                __ptext1090 16D6                  __ptext1082 159D                  __ptext1074 149F  
                __ptext1066 167A                  __ptext1058 14C9                  __ptext1091 1776  
                __ptext1083 14DF                  __ptext1075 14B3                  __ptext1067 15C9  
                __ptext1059 09F4                  __ptext1092 0C88                  __ptext1084 148B  
                __ptext1076 173B                  __ptext1068 0686                  __ptext1093 0000  
                __ptext1085 164D                  __ptext1077 0AA5                  __ptext1069 02C4  
                __ptext1086 090D                  __ptext1078 0DC5                  __ptext1087 1548  
                __ptext1079 0B83                  __ptext1088 151F                  __ptext1089 0E6B  
        __size_of_ser_getch 002C                   ?___awtoft 0036                   ?___ftpack 0020  
                 ?_adc_read 0020                     ?_rotate 0023          __size_of_ser_putch 002D  
        __size_of_robo_init 0019                     i1l10301 0EBE                     i1l10303 0EC4  
                   i1l10311 0EE0                     i1l10321 0EFD                     i1l10313 0EE5  
                   i1l10305 0ECE                     i1l10331 16E0                     i1l10323 0F03  
                   i1l10315 0EEB                     i1l10307 0ED4                     i1l10341 16EF  
                   i1l10333 16E2                     i1l10325 16D6                     i1l10317 0EF3  
                   i1l10309 0EDA                     i1l10351 16FA                     i1l10343 16F0  
                   i1l10335 16E7                     i1l10327 16DB                     i1l10319 0EF9  
                   i1l10441 0C9A                     i1l10361 1705                     i1l10353 16FF  
                   i1l10345 16F2                     i1l10337 16E8                     i1l10329 16DF  
                   i1l10281 0E6F                     i1l10451 0CBC                     i1l10443 0C9E  
                   i1l10435 0C88                     i1l10355 1700                     i1l10347 16F7  
                   i1l10339 16EA                     i1l10291 0E92                     i1l10283 0E70  
                   i1l10461 0CE8                     i1l10453 0CCA                     i1l10445 0CAC  
                   i1l10437 0C8E                     i1l10357 1702                     i1l10349 16F8  
                   i1l10293 0EA9                     i1l10285 0E7A                     i1l10471 0D0C  
                   i1l10463 0CEE                     i1l10455 0CD0                     i1l10447 0CB2  
                   i1l10439 0C94                     i1l10359 1703                     i1l10295 0EAA  
                   i1l10287 0E7B                     i1l10279 0E6B                     i1l10473 0D12  
                   i1l10465 0CF4                     i1l10457 0CD6                     i1l10449 0CB8  
                   i1l10297 0EAF                     i1l10289 0E90                     i1l10475 0D16  
                   i1l10467 0CF8                     i1l10459 0CDA                     i1l10299 0EB4  
                   i1l10469 0D06                     i1l10901 17A3                     i1l10903 17AA  
                   i1l10905 17B2                     i1l10907 17B9                     i1l10891 1780  
                   i1l10893 1787                     i1l10895 178C                     i1l10887 1776  
                   i1l10897 1792                     i1l10889 177C                     i1l10899 179C  
        __size_of_robotTurn 0088                  ??_Debounce 0072            ??_lcd_write_data 0020  
                 ?_lcd_init 0072                     _SSPSTAT 0094        __end_of_readDistance 14DF  
                 ?_init_adc 0072          main@shortwall_3011 006C                   ?_ser_init 0072  
                 ?_ser_isrx 0072               ??_calibrateIR 0059                     ___awmod 0AA5  
           __size_of___wmul 002C                     ___ftmul 0F12                     ___fttol 0DC5  
                   ___lwdiv 0954                     ___lwmod 17BA   __size_of_adc_read_channel 003B  
                ??___awtoft 0039                  ??___ftpack 0025                  ??_adc_read 0022  
           __size_of_rotate 0050                     _scan360 0786                     _dpowers 0810  
              __size_of_abs 0035            ___awmod@dividend 0022                     _lowByte 00CF  
                   _ser_tmp 00D2                     _sprintf 0686                  ??_lcd_init 0023  
       __size_of_RobotDrive 002D        end_of_initialization 151B                ??_ChargeMode 0059  
         __end_of_ser_getch 15F5                     init_ram 147C                  ??_init_adc 0020  
   __size_of_robotMoveSpeed 00A5           __end_of_ser_putch 167A     RobotDrive@speedhighByte 0026  
         __end_of_robo_init 08C7                _LeftReleased 0385           __end_of_robotTurn 0C88  
                ??_ser_init 0020                  ??_ser_isrx 0020                     rotate@i 0028  
              _DownReleased 0383               _RightReleased 038A    __size_of_readAvgDistance 0076  
                _robot_read 09F4           ?_lcd_write_string 0027          __end_of_ChargeMode 090D  
       __end_of_calibrateIR 0AA5          ??_lcd_write_string 0029                 AT25256A@CS0 0038  
               AT25256A@CS1 0039           adc_read@adc_value 0024                   i1___lwmod 1776  
                _totalSteps 00C2                  main@choice 006B               ?_spi_transfer 0072  
               ___ftmul@exp 0046               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 15C9           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 09F4         start_initialization 14F8      UpdateDisplay@LCDOutput 0049  
               __end_of_abs 173B       __size_of_readDistance 0016           __size_of_Debounce 0098  
                ?i1___lwmod 0072          _TotalDistTravelled 00B4              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038B                ??_RobotDrive 0024  
            _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 0A47                 __pdataBANK1 00D7  
          _adc_read_channel 173B                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 14C9           __size_of___awtoft 002C           __size_of___ftpack 007D  
         __size_of_adc_read 0029                 __pbssCOMMON 007D           ??_readAvgDistance 0030  
             __pcstackBANK0 0020      robotMoveSpeed@distance 0059          __end_of_RobotDrive 16A7  
         __size_of_lcd_init 002B              _robotMoveSpeed 0D20                 sprintf@_val 003F  
               sprintf@flag 003D                 sprintf@prec 003E                _current_step 00E3  
          readAvgDistance@i 0036            readAvgDistance@j 0032           __size_of_init_adc 0016  
          robotTurn@degrees 0022            ___lwdiv@dividend 0028                    ?___awmod 0020  
                  ?___ftmul 003C           __size_of_ser_init 002A                    ?___fttol 0028  
         __size_of_ser_isrx 0019                    ?___lwdiv 0026                    ?___lwmod 002E  
                 __pstrings 0800                   _dist_high 00BA                    ?_scan360 0059  
       readDistance@readVal 002C                  ser_getch@c 0021            ___lwdiv@quotient 002B  
               ??i1___lwmod 0076                    ?_sprintf 0034      __end_of_robotMoveSpeed 0DC5  
   __size_of_lcd_set_cursor 000B           interrupt_function 0004      __size_of_UpdateDisplay 015F  
            ___wmul@product 0024         __size_of_robot_read 0053                  ser_putch@c 0021  
                 _ser_getch 15C9                   _ser_putch 164D                   _robo_init 08AE  
                 _robotTurn 0C00                _RightPressed 0389        __size_of_ReadButtons 0030  
      __end_of_spi_transfer 149F                 __stringbase 080F           ___wmul@multiplier 0020  
          spi_transfer@data 0022            spi_transfer@temp 0021                    _Debounce 0C88  
         _LeftDebounceCount 00C9             ?_robotMoveSpeed 0059   __size_of_lcd_write_string 002C  
        scan360@lowestSteps 005D     __size_of_lcd_write_data 0013                  ?_ser_getch 0072  
                ?_ser_putch 0072     adc_read_channel@channel 0027                  ?_robo_init 0072  
                 init_fetch 1478                  ?_robotTurn 0022                  _ADCconvert 02C4  
          __size_of___awmod 0068            __size_of___ftmul 00EE            __size_of___fttol 00A6  
          __size_of___lwdiv 0050            __size_of___lwmod 0046                    ___awtoft 15F5  
                  ___ftpack 0B83               _UpdateDisplay 0527                    _adc_read 151F  
               _currentMenu 00CD            __size_of_scan360 007A             ___lwdiv@divisor 0026  
           ___lwdiv@counter 002D                 _menuStrings 00D7                    _highByte 00CE  
                  _lcd_init 1572                    _dist_low 00BC            __size_of_sprintf 0100  
  __end_of_adc_read_channel 1776   lcd_write_control@databyte 0022               __size_of_Menu 0047  
                  _init_adc 14B3               __size_of_isr1 00A7               __size_of_main 02AF  
             __size_of_init 002F                    clear_ram 1445                    _ser_init 1548  
                  _ser_isrx 14DF                    main@RT2A 0067                    main@RT2P 006E  
           _readAvgDistance 0B0D                ?_calibrateIR 0072              ?_UpdateDisplay 0072  
              ??_robot_read 0022         _CenterDebounceCount 00C5                _RTC_FLAG_1MS 0386  
        UpdateDisplay@F1235 0190                    intlevel1 0000              _lcd_set_cursor 144D  
                 sprintf@ap 003C                   sprintf@sp 0043            ___lwmod@dividend 0030  
        __end_of_robot_read 0A47                   stringcode 080A                 ??_ser_getch 0020  
               ??_ser_putch 0020               _distTravelled 00B8                 ??_robo_init 0022  
     __size_of_spi_transfer 0014                 ??_robotTurn 0024                 ?_ADCconvert 0072  
         _lcd_write_control 149F            scan360@lowestVal 005B          ?_lcd_write_control 0072  
                _OPTION_REG 0081                    sprintf@c 0044                    sprintf@f 0034  
       robotMoveSpeed@temp1 0060         robotMoveSpeed@speed 005B             ___lwmod@divisor 002E  
                _ROBOTerror 00CA             ___lwmod@counter 0033                    stringdir 080A  
                  stringtab 0800         ??_lcd_write_control 0020      __end_of_lcd_set_cursor 1458  
          _lcd_write_string 1621                _spi_transfer 148B                 _RTC_Counter 00B2  
   __end_of_readAvgDistance 0B83              _lcd_write_data 1465  
