

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Apr 29 14:28:45 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_readAvgDistance
    48                           	FNCALL	_main,_UpdateDisplay
    49                           	FNCALL	_main,_Menu
    50                           	FNCALL	_main,_calibrateIR
    51                           	FNCALL	_main,_scan360
    52                           	FNCALL	_main,_rotate
    53                           	FNCALL	_main,_robotMove
    54                           	FNCALL	_main,_robotTurn
    55                           	FNCALL	_main,_robot_read
    56                           	FNCALL	_main,_ChargeMode
    57                           	FNCALL	_scan360,_readAvgDistance
    58                           	FNCALL	_scan360,_rotate
    59                           	FNCALL	_scan360,_UpdateDisplay
    60                           	FNCALL	_ChargeMode,_ser_putch
    61                           	FNCALL	_ChargeMode,_UpdateDisplay
    62                           	FNCALL	_calibrateIR,_rotate
    63                           	FNCALL	_calibrateIR,_UpdateDisplay
    64                           	FNCALL	_readAvgDistance,_readDistance
    65                           	FNCALL	_readAvgDistance,___lwdiv
    66                           	FNCALL	_readAvgDistance,_ADCconvert
    67                           	FNCALL	_UpdateDisplay,_lcd_write_control
    68                           	FNCALL	_UpdateDisplay,_sprintf
    69                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    70                           	FNCALL	_UpdateDisplay,_lcd_write_string
    71                           	FNCALL	_UpdateDisplay,___awmod
    72                           	FNCALL	_init,_ser_init
    73                           	FNCALL	_init,_init_adc
    74                           	FNCALL	_init,_lcd_init
    75                           	FNCALL	_init,_robo_init
    76                           	FNCALL	_readDistance,_adc_read_channel
    77                           	FNCALL	_robot_read,_ser_putch
    78                           	FNCALL	_robot_read,_ser_getch
    79                           	FNCALL	_lcd_init,_lcd_write_control
    80                           	FNCALL	_lcd_write_string,_lcd_write_data
    81                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    82                           	FNCALL	_ser_getch,_ser_isrx
    83                           	FNCALL	_sprintf,___lwdiv
    84                           	FNCALL	_sprintf,___lwmod
    85                           	FNCALL	_ADCconvert,___wmul
    86                           	FNCALL	_ADCconvert,___lwdiv
    87                           	FNCALL	_robotTurn,_ser_putch
    88                           	FNCALL	_robotMove,_ser_putch
    89                           	FNCALL	_rotate,_spi_transfer
    90                           	FNCALL	_robo_init,_ser_putch
    91                           	FNCALL	_adc_read_channel,_adc_read
    92                           	FNROOT	_main
    93                           	FNCALL	_isr1,i1___lwmod
    94                           	FNCALL	_isr1,_ReadButtons
    95                           	FNCALL	_ReadButtons,_Debounce
    96                           	FNCALL	intlevel1,_isr1
    97                           	global	intlevel1
    98                           	FNROOT	intlevel1
    99                           	global	_menuStrings
   100                           	global	_shortMenuStrings
   101                           	global	_current_step
   102                           psect	idataBANK1,class=CODE,space=0,delta=2
   103                           global __pidataBANK1
   104  0908                     __pidataBANK1:
   105                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   106                           	line	32
   107                           
   108                           ;initializer for _menuStrings
   109  0908  3445               	retlw	(STR_1-__stringbase)&0ffh
   110  0909  343C               	retlw	(STR_2-__stringbase)&0ffh
   111  090A  3457               	retlw	(STR_3-__stringbase)&0ffh
   112  090B  3460               	retlw	(STR_4-__stringbase)&0ffh
   113  090C  344E               	retlw	(STR_5-__stringbase)&0ffh
   114  090D  3433               	retlw	(STR_6-__stringbase)&0ffh
   115                           	line	33
   116                           
   117                           ;initializer for _shortMenuStrings
   118  090E  3484               	retlw	(STR_7-__stringbase)&0ffh
   119  090F  3488               	retlw	(STR_8-__stringbase)&0ffh
   120  0910  3470               	retlw	(STR_9-__stringbase)&0ffh
   121  0911  347C               	retlw	(STR_10-__stringbase)&0ffh
   122  0912  348C               	retlw	(STR_11-__stringbase)&0ffh
   123  0913  3480               	retlw	(STR_12-__stringbase)&0ffh
   124                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   125                           	line	30
   126                           
   127                           ;initializer for _current_step
   128  0914  343C               	retlw	03Ch
   129                           	global	_dpowers
   130                           psect	strings,class=STRING,delta=2
   131                           global __pstrings
   132  0700                     __pstrings:
   133                           ;	global	stringdir,stringtab,__stringbase
   134  0700                     stringtab:
   135                           ;	String table - string pointers are 1 byte each
   136  0700  1BFF               	btfsc	(btemp+1),7
   137  0701  2F0A               	ljmp	stringcode
   138  0702  1383               	bcf	status,7
   139  0703  187F               	btfsc	(btemp+1),0
   140  0704  1783               	bsf	status,7
   141  0705  0800               	movf	indf,w
   142  0706  0A84               	incf fsr
   143  0707  1903               skipnz
   144  0708  0AFF               incf btemp+1
   145  0709  0008               	return
   146  070A                     stringcode:stringdir:
      + 070A                     stringdir:	
   147  070A  3007               movlw high(stringdir)
   148  070B  008A               movwf pclath
   149  070C  0804               movf fsr,w
   150  070D  0A84               incf fsr
   151  070E  0782               	addwf pc
   152  070F                     __stringbase:
   153  070F  3400               	retlw	0
   154                           psect	strings
   155                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   156                           	line	350
   157  0710                     _dpowers:
   158  0710  3401               	retlw	01h
   159  0711  3400               	retlw	0
   160                           
   161  0712  340A               	retlw	0Ah
   162  0713  3400               	retlw	0
   163                           
   164  0714  3464               	retlw	064h
   165  0715  3400               	retlw	0
   166                           
   167  0716  34E8               	retlw	0E8h
   168  0717  3403               	retlw	03h
   169                           
   170  0718  3410               	retlw	010h
   171  0719  3427               	retlw	027h
   172                           
   173                           	global	_dpowers
   174                           	global	_RTC_Counter
   175                           	global	_adcVal
   176                           	global	_rxiptr
   177                           	global	_rxoptr
   178                           	global	_txiptr
   179                           	global	_txoptr
   180                           	global	UpdateDisplay@F1228
   181                           	global	_buttonPressed
   182                           	global	_CenterPressed
   183                           	global	_CenterReleased
   184                           	global	_DownPressed
   185                           	global	_DownReleased
   186                           	global	_LeftPressed
   187                           	global	_LeftReleased
   188                           	global	_RTC_FLAG_10MS
   189                           	global	_RTC_FLAG_1MS
   190                           	global	_RTC_FLAG_250MS
   191                           	global	_RTC_FLAG_500MS
   192                           	global	_RTC_FLAG_50MS
   193                           	global	_RightPressed
   194                           	global	_RightReleased
   195                           	global	_UpPressed
   196                           	global	_UpReleased
   197                           	global	_rxfifo
   198                           	global	_txfifo
   199                           	global	_distTravelled
   200                           	global	_dist_high
   201                           	global	_dist_low
   202                           	global	_distance
   203                           	global	_pos
   204                           	global	_test
   205                           	global	_total
   206                           	global	_totalSteps
   207                           	global	_CenterDebounceCount
   208                           	global	_DistHighByte
   209                           	global	_DistLowByte
   210                           	global	_DownDebounceCount
   211                           	global	_LeftDebounceCount
   212                           	global	_RightDebounceCount
   213                           	global	_UpDebounceCount
   214                           	global	_currentMenu
   215                           	global	_current_direction
   216                           	global	_highByte
   217                           	global	_lowByte
   218                           	global	_ser_tmp
   219                           	global	_serialInput
   220                           	global	_turnhighByte
   221                           	global	_turnlowByte
   222                           	global	_ADCON0
   223  001F                     _ADCON0	set	31
   224                           	global	_ADRESH
   225  001E                     _ADRESH	set	30
   226                           	global	_PORTA
   227  0005                     _PORTA	set	5
   228                           	global	_PORTC
   229  0007                     _PORTC	set	7
   230                           	global	_PORTD
   231  0008                     _PORTD	set	8
   232                           	global	_PORTE
   233  0009                     _PORTE	set	9
   234                           	global	_RCREG
   235  001A                     _RCREG	set	26
   236                           	global	_SSPBUF
   237  0013                     _SSPBUF	set	19
   238                           	global	_SSPCON
   239  0014                     _SSPCON	set	20
   240                           	global	_TMR0
   241  0001                     _TMR0	set	1
   242                           	global	_TXREG
   243  0019                     _TXREG	set	25
   244                           	global	AT25256A@CS0
   245  0038                     AT25256A@CS0	set	56
   246                           	global	AT25256A@CS1
   247  0039                     AT25256A@CS1	set	57
   248                           	global	_CARRY
   249  0018                     _CARRY	set	24
   250                           	global	_CHS0
   251  00FB                     _CHS0	set	251
   252                           	global	_CHS1
   253  00FC                     _CHS1	set	252
   254                           	global	_CHS2
   255  00FD                     _CHS2	set	253
   256                           	global	_CREN
   257  00C4                     _CREN	set	196
   258                           	global	_GIE
   259  005F                     _GIE	set	95
   260                           	global	_GO
   261  00FA                     _GO	set	250
   262                           	global	_OERR
   263  00C1                     _OERR	set	193
   264                           	global	_PEIE
   265  005E                     _PEIE	set	94
   266                           	global	_RB0
   267  0030                     _RB0	set	48
   268                           	global	_RB2
   269  0032                     _RB2	set	50
   270                           	global	_RB3
   271  0033                     _RB3	set	51
   272                           	global	_RB4
   273  0034                     _RB4	set	52
   274                           	global	_RB5
   275  0035                     _RB5	set	53
   276                           	global	_RB6
   277  0036                     _RB6	set	54
   278                           	global	_RC0
   279  0038                     _RC0	set	56
   280                           	global	_RC1
   281  0039                     _RC1	set	57
   282                           	global	_RC2
   283  003A                     _RC2	set	58
   284                           	global	_RCIF
   285  0065                     _RCIF	set	101
   286                           	global	_RE0
   287  0048                     _RE0	set	72
   288                           	global	_RE1
   289  0049                     _RE1	set	73
   290                           	global	_RE2
   291  004A                     _RE2	set	74
   292                           	global	_RX9
   293  00C6                     _RX9	set	198
   294                           	global	_SPEN
   295  00C7                     _SPEN	set	199
   296                           	global	_SSPIF
   297  0063                     _SSPIF	set	99
   298                           	global	_TMR0IE
   299  005D                     _TMR0IE	set	93
   300                           	global	_TMR0IF
   301  005A                     _TMR0IF	set	90
   302                           	global	_TXIF
   303  0064                     _TXIF	set	100
   304                           	global	_ADCON1
   305  009F                     _ADCON1	set	159
   306                           	global	_ADRESL
   307  009E                     _ADRESL	set	158
   308                           	global	_OPTION_REG
   309  0081                     _OPTION_REG	set	129
   310                           	global	_SPBRG
   311  0099                     _SPBRG	set	153
   312                           	global	_SSPSTAT
   313  0094                     _SSPSTAT	set	148
   314                           	global	_TRISA
   315  0085                     _TRISA	set	133
   316                           	global	_TRISB
   317  0086                     _TRISB	set	134
   318                           	global	_TRISC
   319  0087                     _TRISC	set	135
   320                           	global	_TRISD
   321  0088                     _TRISD	set	136
   322                           	global	_TRISE
   323  0089                     _TRISE	set	137
   324                           	global	_BRGH
   325  04C2                     _BRGH	set	1218
   326                           	global	_RCIE
   327  0465                     _RCIE	set	1125
   328                           	global	_SYNC
   329  04C4                     _SYNC	set	1220
   330                           	global	_TX9
   331  04C6                     _TX9	set	1222
   332                           	global	_TXEN
   333  04C5                     _TXEN	set	1221
   334                           	global	_TXIE
   335  0464                     _TXIE	set	1124
   336                           	global	_EEADR
   337  010D                     _EEADR	set	269
   338                           	global	_EEDATA
   339  010C                     _EEDATA	set	268
   340                           	global	_EECON1
   341  018C                     _EECON1	set	396
   342                           	global	_EECON2
   343  018D                     _EECON2	set	397
   344                           	global	_RD
   345  0C60                     _RD	set	3168
   346                           	global	_WR
   347  0C61                     _WR	set	3169
   348                           	global	_WREN
   349  0C62                     _WREN	set	3170
   350                           	
   351  071A                     STR_18:	
   352  071A  3420               	retlw	32	;' '
   353  071B  3443               	retlw	67	;'C'
   354  071C  3468               	retlw	104	;'h'
   355  071D  3461               	retlw	97	;'a'
   356  071E  3472               	retlw	114	;'r'
   357  071F  3467               	retlw	103	;'g'
   358  0720  3469               	retlw	105	;'i'
   359  0721  346E               	retlw	110	;'n'
   360  0722  3467               	retlw	103	;'g'
   361  0723  3420               	retlw	32	;' '
   362  0724  344D               	retlw	77	;'M'
   363  0725  346F               	retlw	111	;'o'
   364  0726  3464               	retlw	100	;'d'
   365  0727  3465               	retlw	101	;'e'
   366  0728  3420               	retlw	32	;' '
   367  0729  3400               	retlw	0
   368                           psect	strings
   369                           	
   370  072A                     STR_13:	
   371  072A  3441               	retlw	65	;'A'
   372  072B  3444               	retlw	68	;'D'
   373  072C  3443               	retlw	67	;'C'
   374  072D  343A               	retlw	58	;':'
   375  072E  3425               	retlw	37	;'%'
   376  072F  3464               	retlw	100	;'d'
   377  0730  3420               	retlw	32	;' '
   378  0731  3444               	retlw	68	;'D'
   379  0732  3469               	retlw	105	;'i'
   380  0733  3473               	retlw	115	;'s'
   381  0734  3474               	retlw	116	;'t'
   382  0735  343A               	retlw	58	;':'
   383  0736  3425               	retlw	37	;'%'
   384  0737  3464               	retlw	100	;'d'
   385  0738  3400               	retlw	0
   386                           psect	strings
   387                           	
   388  0739                     STR_19:	
   389  0739  3420               	retlw	32	;' '
   390  073A  3420               	retlw	32	;' '
   391  073B  3445               	retlw	69	;'E'
   392  073C  3458               	retlw	88	;'X'
   393  073D  3449               	retlw	73	;'I'
   394  073E  3454               	retlw	84	;'T'
   395  073F  3420               	retlw	32	;' '
   396  0740  3420               	retlw	32	;' '
   397  0741  3400               	retlw	0
   398                           psect	strings
   399                           	
   400  0742                     STR_6:	
   401  0742  3420               	retlw	32	;' '
   402  0743  3443               	retlw	67	;'C'
   403  0744  3468               	retlw	104	;'h'
   404  0745  3461               	retlw	97	;'a'
   405  0746  3472               	retlw	114	;'r'
   406  0747  3467               	retlw	103	;'g'
   407  0748  3465               	retlw	101	;'e'
   408  0749  3420               	retlw	32	;' '
   409  074A  3400               	retlw	0
   410                           psect	strings
   411                           	
   412  074B                     STR_2:	
   413  074B  3453               	retlw	83	;'S'
   414  074C  3463               	retlw	99	;'c'
   415  074D  3461               	retlw	97	;'a'
   416  074E  346E               	retlw	110	;'n'
   417  074F  345F               	retlw	95	;'_'
   418  0750  3433               	retlw	51	;'3'
   419  0751  3436               	retlw	54	;'6'
   420  0752  3430               	retlw	48	;'0'
   421  0753  3400               	retlw	0
   422                           psect	strings
   423                           	
   424  0754                     STR_1:	
   425  0754  3443               	retlw	67	;'C'
   426  0755  3461               	retlw	97	;'a'
   427  0756  346C               	retlw	108	;'l'
   428  0757  3469               	retlw	105	;'i'
   429  0758  3462               	retlw	98	;'b'
   430  0759  345F               	retlw	95	;'_'
   431  075A  3449               	retlw	73	;'I'
   432  075B  3452               	retlw	82	;'R'
   433  075C  3400               	retlw	0
   434                           psect	strings
   435                           	
   436  075D                     STR_5:	
   437  075D  3446               	retlw	70	;'F'
   438  075E  346C               	retlw	108	;'l'
   439  075F  3477               	retlw	119	;'w'
   440  0760  345F               	retlw	95	;'_'
   441  0761  3457               	retlw	87	;'W'
   442  0762  3461               	retlw	97	;'a'
   443  0763  346C               	retlw	108	;'l'
   444  0764  346C               	retlw	108	;'l'
   445  0765  3400               	retlw	0
   446                           psect	strings
   447                           	
   448  0766                     STR_3:	
   449  0766  3444               	retlw	68	;'D'
   450  0767  3472               	retlw	114	;'r'
   451  0768  3469               	retlw	105	;'i'
   452  0769  3476               	retlw	118	;'v'
   453  076A  3465               	retlw	101	;'e'
   454  076B  345F               	retlw	95	;'_'
   455  076C  3432               	retlw	50	;'2'
   456  076D  346D               	retlw	109	;'m'
   457  076E  3400               	retlw	0
   458                           psect	strings
   459                           	
   460  076F                     STR_4:	
   461  076F  3444               	retlw	68	;'D'
   462  0770  3472               	retlw	114	;'r'
   463  0771  3469               	retlw	105	;'i'
   464  0772  3476               	retlw	118	;'v'
   465  0773  3465               	retlw	101	;'e'
   466  0774  345F               	retlw	95	;'_'
   467  0775  344C               	retlw	76	;'L'
   468  0776  3400               	retlw	0
   469                           psect	strings
   470                           	
   471  0777                     STR_16:	
   472  0777  3443               	retlw	67	;'C'
   473  0778  344F               	retlw	79	;'O'
   474  0779  344E               	retlw	78	;'N'
   475  077A  3446               	retlw	70	;'F'
   476  077B  3449               	retlw	73	;'I'
   477  077C  3452               	retlw	82	;'R'
   478  077D  344D               	retlw	77	;'M'
   479  077E  3400               	retlw	0
   480                           psect	strings
   481                           	
   482  077F                     STR_9:	
   483  077F  3444               	retlw	68	;'D'
   484  0780  3472               	retlw	114	;'r'
   485  0781  3432               	retlw	50	;'2'
   486  0782  3400               	retlw	0
   487                           psect	strings
   488                           	
   489  0783                     STR_15:	
   490  0783  343C               	retlw	60	;'<'
   491  0784  343C               	retlw	60	;'<'
   492  0785  343C               	retlw	60	;'<'
   493  0786  3400               	retlw	0
   494                           psect	strings
   495                           	
   496  0787                     STR_17:	
   497  0787  343E               	retlw	62	;'>'
   498  0788  343E               	retlw	62	;'>'
   499  0789  343E               	retlw	62	;'>'
   500  078A  3400               	retlw	0
   501                           psect	strings
   502                           	
   503  078B                     STR_10:	
   504  078B  3444               	retlw	68	;'D'
   505  078C  3472               	retlw	114	;'r'
   506  078D  344C               	retlw	76	;'L'
   507  078E  3400               	retlw	0
   508                           psect	strings
   509                           	
   510  078F                     STR_12:	
   511  078F  3443               	retlw	67	;'C'
   512  0790  3468               	retlw	104	;'h'
   513  0791  3467               	retlw	103	;'g'
   514  0792  3400               	retlw	0
   515                           psect	strings
   516                           	
   517  0793                     STR_7:	
   518  0793  3443               	retlw	67	;'C'
   519  0794  3461               	retlw	97	;'a'
   520  0795  346C               	retlw	108	;'l'
   521  0796  3400               	retlw	0
   522                           psect	strings
   523                           	
   524  0797                     STR_8:	
   525  0797  3453               	retlw	83	;'S'
   526  0798  3463               	retlw	99	;'c'
   527  0799  346E               	retlw	110	;'n'
   528  079A  3400               	retlw	0
   529                           psect	strings
   530                           	
   531  079B                     STR_11:	
   532  079B  3446               	retlw	70	;'F'
   533  079C  346C               	retlw	108	;'l'
   534  079D  3477               	retlw	119	;'w'
   535  079E  3400               	retlw	0
   536                           psect	strings
   537  072A                     STR_14	equ	STR_13+0
   538                           	file	"Assignment3_AldnoahZero.as"
   539                           	line	#
   540                           psect cinit,class=CODE,delta=2
   541                           global start_initialization
   542  0B34                     start_initialization:
   543                           
   544                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   545                           global __pbitbssCOMMON
   546  0380                     __pbitbssCOMMON:
   547  0380                     _CenterPressed:
   548  0380                            ds      1
   549                           
   550  0381                     _CenterReleased:
   551  0381                            ds      1
   552                           
   553  0382                     _DownPressed:
   554  0382                            ds      1
   555                           
   556  0383                     _DownReleased:
   557  0383                            ds      1
   558                           
   559  0384                     _LeftPressed:
   560  0384                            ds      1
   561                           
   562  0385                     _LeftReleased:
   563  0385                            ds      1
   564                           
   565  0386                     _RTC_FLAG_10MS:
   566  0386                            ds      1
   567                           
   568  0387                     _RTC_FLAG_1MS:
   569  0387                            ds      1
   570                           
   571  0388                     _RTC_FLAG_250MS:
   572  0388                            ds      1
   573                           
   574  0389                     _RTC_FLAG_500MS:
   575  0389                            ds      1
   576                           
   577  038A                     _RTC_FLAG_50MS:
   578  038A                            ds      1
   579                           
   580  038B                     _RightPressed:
   581  038B                            ds      1
   582                           
   583  038C                     _RightReleased:
   584  038C                            ds      1
   585                           
   586  038D                     _UpPressed:
   587  038D                            ds      1
   588                           
   589  038E                     _UpReleased:
   590  038E                            ds      1
   591                           
   592                           psect	bssCOMMON,class=COMMON,space=1
   593                           global __pbssCOMMON
   594  007D                     __pbssCOMMON:
   595  007D                     _buttonPressed:
   596  007D                            ds      1
   597                           
   598                           psect	bssBANK0,class=BANK0,space=1
   599                           global __pbssBANK0
   600  0068                     __pbssBANK0:
   601  0068                     _RTC_Counter:
   602  0068                            ds      2
   603                           
   604  006A                     _adcVal:
   605  006A                            ds      2
   606                           
   607  006C                     _rxiptr:
   608  006C                            ds      1
   609                           
   610  006D                     _rxoptr:
   611  006D                            ds      1
   612                           
   613  006E                     _txiptr:
   614  006E                            ds      1
   615                           
   616  006F                     _txoptr:
   617  006F                            ds      1
   618                           
   619                           psect	bssBANK1,class=BANK1,space=1
   620                           global __pbssBANK1
   621  00A0                     __pbssBANK1:
   622  00A0                     _rxfifo:
   623  00A0                            ds      16
   624                           
   625  00B0                     _txfifo:
   626  00B0                            ds      16
   627                           
   628  00C0                     _distTravelled:
   629  00C0                            ds      2
   630                           
   631  00C2                     _dist_high:
   632  00C2                            ds      2
   633                           
   634  00C4                     _dist_low:
   635  00C4                            ds      2
   636                           
   637  00C6                     _distance:
   638  00C6                            ds      2
   639                           
   640  00C8                     _pos:
   641  00C8                            ds      2
   642                           
   643  00CA                     _test:
   644  00CA                            ds      2
   645                           
   646  00CC                     _total:
   647  00CC                            ds      2
   648                           
   649  00CE                     _totalSteps:
   650  00CE                            ds      2
   651                           
   652  00D0                     _CenterDebounceCount:
   653  00D0                            ds      1
   654                           
   655  00D1                     _DistHighByte:
   656  00D1                            ds      1
   657                           
   658  00D2                     _DistLowByte:
   659  00D2                            ds      1
   660                           
   661  00D3                     _DownDebounceCount:
   662  00D3                            ds      1
   663                           
   664  00D4                     _LeftDebounceCount:
   665  00D4                            ds      1
   666                           
   667  00D5                     _RightDebounceCount:
   668  00D5                            ds      1
   669                           
   670  00D6                     _UpDebounceCount:
   671  00D6                            ds      1
   672                           
   673  00D7                     _currentMenu:
   674  00D7                            ds      1
   675                           
   676  00D8                     _current_direction:
   677  00D8                            ds      1
   678                           
   679  00D9                     _highByte:
   680  00D9                            ds      1
   681                           
   682  00DA                     _lowByte:
   683  00DA                            ds      1
   684                           
   685  00DB                     _ser_tmp:
   686  00DB                            ds      1
   687                           
   688  00DC                     _serialInput:
   689  00DC                            ds      1
   690                           
   691  00DD                     _turnhighByte:
   692  00DD                            ds      1
   693                           
   694  00DE                     _turnlowByte:
   695  00DE                            ds      1
   696                           
   697                           psect	dataBANK1,class=BANK1,space=1
   698                           global __pdataBANK1
   699  00DF                     __pdataBANK1:
   700                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   701                           	line	32
   702  00DF                     _menuStrings:
   703  00DF                            ds      6
   704                           
   705                           psect	dataBANK1
   706                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   707                           	line	33
   708  00E5                     _shortMenuStrings:
   709  00E5                            ds      6
   710                           
   711                           psect	dataBANK1
   712                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   713                           	line	30
   714  00EB                     _current_step:
   715  00EB                            ds      1
   716                           
   717                           psect	bssBANK3,class=BANK3,space=1
   718                           global __pbssBANK3
   719  0190                     __pbssBANK3:
   720  0190                     UpdateDisplay@F1228:
   721  0190                            ds      16
   722                           
   723                           psect clrtext,class=CODE,delta=2
   724                           global clear_ram
   725                           ;	Called with FSR containing the base address, and
   726                           ;	W with the last address+1
   727  08F5                     clear_ram:
   728  08F5  0064               	clrwdt			;clear the watchdog before getting into this loop
   729  08F6                     clrloop:
   730  08F6  0180               	clrf	indf		;clear RAM location pointed to by FSR
   731  08F7  0A84               	incf	fsr,f		;increment pointer
   732  08F8  0604               	xorwf	fsr,w		;XOR with final address
   733  08F9  1903               	btfsc	status,2	;have we reached the end yet?
   734  08FA  3400               	retlw	0		;all done for this memory range, return
   735  08FB  0604               	xorwf	fsr,w		;XOR again to restore value
   736  08FC  28F6               	goto	clrloop		;do the next byte
   737                           
   738                           ; Clear objects allocated to BITCOMMON
   739                           psect cinit,class=CODE,delta=2
   740  0B34  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   741  0B35  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   742                           ; Clear objects allocated to COMMON
   743                           psect cinit,class=CODE,delta=2
   744  0B36  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   745                           ; Clear objects allocated to BANK0
   746                           psect cinit,class=CODE,delta=2
   747  0B37  1383               	bcf	status, 7	;select IRP bank0
   748  0B38  3068               	movlw	low(__pbssBANK0)
   749  0B39  0084               	movwf	fsr
   750  0B3A  3070               	movlw	low((__pbssBANK0)+08h)
   751  0B3B  120A  158A  20F5   	fcall	clear_ram
              120A  158A         
   752                           ; Clear objects allocated to BANK1
   753                           psect cinit,class=CODE,delta=2
   754  0B40  30A0               	movlw	low(__pbssBANK1)
   755  0B41  0084               	movwf	fsr
   756  0B42  30DF               	movlw	low((__pbssBANK1)+03Fh)
   757  0B43  120A  158A  20F5   	fcall	clear_ram
              120A  158A         
   758                           ; Clear objects allocated to BANK3
   759                           psect cinit,class=CODE,delta=2
   760  0B48  1783               	bsf	status, 7	;select IRP bank2
   761  0B49  3090               	movlw	low(__pbssBANK3)
   762  0B4A  0084               	movwf	fsr
   763  0B4B  30A0               	movlw	low((__pbssBANK3)+010h)
   764  0B4C  120A  158A  20F5   	fcall	clear_ram
              120A  158A         
   765                           global btemp
   766                           psect inittext,class=CODE,delta=2
   767                           global init_fetch,btemp
   768                           ;	Called with low address in FSR and high address in W
   769  0928                     init_fetch:
   770  0928  087E               	movf btemp,w
   771  0929  008A               	movwf pclath
   772  092A  087F               	movf btemp+1,w
   773  092B  0082               	movwf pc
   774                           global init_ram
   775                           ;Called with:
   776                           ;	high address of idata address in btemp 
   777                           ;	low address of idata address in btemp+1 
   778                           ;	low address of data in FSR
   779                           ;	high address + 1 of data in btemp-1
   780  092C                     init_ram:
   781  092C  120A  158A  2128   	fcall init_fetch
              120A  158A         
   782  0931  0080               	movwf indf,f
   783  0932  0A84               	incf fsr,f
   784  0933  0804               	movf fsr,w
   785  0934  067D               	xorwf btemp-1,w
   786  0935  1903               	btfsc status,2
   787  0936  3400               	retlw 0
   788  0937  0AFF               	incf btemp+1,f
   789  0938  1903               	btfsc status,2
   790  0939  0AFE               	incf btemp,f
   791  093A  292C               	goto init_ram
   792                           ; Initialize objects allocated to BANK1
   793                           psect cinit,class=CODE,delta=2
   794                           global init_ram, __pidataBANK1
   795  0B51  1383               	bcf	status, 7	;select IRP bank0
   796  0B52  30EC               	movlw low(__pdataBANK1+13)
   797  0B53  00FD               	movwf btemp-1,f
   798  0B54  3009               	movlw high(__pidataBANK1)
   799  0B55  00FE               	movwf btemp,f
   800  0B56  3008               	movlw low(__pidataBANK1)
   801  0B57  00FF               	movwf btemp+1,f
   802  0B58  30DF               	movlw low(__pdataBANK1)
   803  0B59  0084               	movwf fsr,f
   804  0B5A  120A  158A  212C   	fcall init_ram
              120A  158A         
   805                           psect cinit,class=CODE,delta=2
   806                           global end_of_initialization
   807                           
   808                           ;End of C runtime variable initialization code
   809                           
   810  0B5F                     end_of_initialization:
   811  0B5F  0183               clrf status
   812  0B60  120A  118A  2BB1   ljmp _main	;jump to C main() function
   813                           psect	cstackCOMMON,class=COMMON,space=1
   814                           global __pcstackCOMMON
   815  0072                     __pcstackCOMMON:
   816                           	global	?_ser_init
   817  0072                     ?_ser_init:	; 0 bytes @ 0x0
   818                           	global	?_robo_init
   819  0072                     ?_robo_init:	; 0 bytes @ 0x0
   820                           	global	?_UpdateDisplay
   821  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   822                           	global	?_ser_putch
   823  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   824                           	global	?_readAvgDistance
   825  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   826                           	global	?_robot_read
   827  0072                     ?_robot_read:	; 0 bytes @ 0x0
   828                           	global	?_ADCconvert
   829  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   830                           	global	?_init_adc
   831  0072                     ?_init_adc:	; 0 bytes @ 0x0
   832                           	global	?_lcd_write_control
   833  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   834                           	global	?_lcd_write_data
   835  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   836                           	global	?_lcd_set_cursor
   837  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   838                           	global	?_lcd_init
   839  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   840                           	global	?_isr1
   841  0072                     ?_isr1:	; 0 bytes @ 0x0
   842                           	global	?_init
   843  0072                     ?_init:	; 0 bytes @ 0x0
   844                           	global	?_calibrateIR
   845  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   846                           	global	?_ChargeMode
   847  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   848                           	global	?_main
   849  0072                     ?_main:	; 0 bytes @ 0x0
   850                           	global	?_Debounce
   851  0072                     ?_Debounce:	; 0 bytes @ 0x0
   852                           	global	??_Debounce
   853  0072                     ??_Debounce:	; 0 bytes @ 0x0
   854                           	global	?_ser_isrx
   855  0072                     ?_ser_isrx:	; 1 bit 
   856                           	global	?_ReadButtons
   857  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   858                           	global	?_Menu
   859  0072                     ?_Menu:	; 1 bytes @ 0x0
   860                           	global	?_ser_getch
   861  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   862                           	global	?_adc_read_channel
   863  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   864                           	global	?_spi_transfer
   865  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   866                           	global	?i1___lwmod
   867  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   868                           	global	i1___lwmod@divisor
   869  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   870  0072                     	ds	1
   871                           	global	??_ReadButtons
   872  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   873  0073                     	ds	1
   874                           	global	i1___lwmod@dividend
   875  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   876  0074                     	ds	2
   877                           	global	??i1___lwmod
   878  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   879  0076                     	ds	1
   880                           	global	i1___lwmod@counter
   881  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   882  0077                     	ds	1
   883                           	global	??_isr1
   884  0078                     ??_isr1:	; 0 bytes @ 0x6
   885  0078                     	ds	5
   886                           psect	cstackBANK0,class=BANK0,space=1
   887                           global __pcstackBANK0
   888  0020                     __pcstackBANK0:
   889                           	global	??_ser_init
   890  0020                     ??_ser_init:	; 0 bytes @ 0x0
   891                           	global	??_ser_putch
   892  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   893                           	global	??_Menu
   894  0020                     ??_Menu:	; 0 bytes @ 0x0
   895                           	global	??_ser_getch
   896  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   897                           	global	??_init_adc
   898  0020                     ??_init_adc:	; 0 bytes @ 0x0
   899                           	global	??_lcd_write_control
   900  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   901                           	global	??_lcd_write_data
   902  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   903                           	global	??_spi_transfer
   904  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   905                           	global	??_ser_isrx
   906  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   907                           	global	?_adc_read
   908  0020                     ?_adc_read:	; 2 bytes @ 0x0
   909                           	global	?___wmul
   910  0020                     ?___wmul:	; 2 bytes @ 0x0
   911                           	global	?___awmod
   912  0020                     ?___awmod:	; 2 bytes @ 0x0
   913                           	global	Menu@BTN_input
   914  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   915                           	global	___wmul@multiplier
   916  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   917                           	global	___awmod@divisor
   918  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   919  0020                     	ds	1
   920                           	global	spi_transfer@temp
   921  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   922                           	global	ser_getch@c
   923  0021                     ser_getch@c:	; 1 bytes @ 0x1
   924                           	global	ser_putch@c
   925  0021                     ser_putch@c:	; 1 bytes @ 0x1
   926  0021                     	ds	1
   927                           	global	??_adc_read
   928  0022                     ??_adc_read:	; 0 bytes @ 0x2
   929                           	global	??_robo_init
   930  0022                     ??_robo_init:	; 0 bytes @ 0x2
   931                           	global	?_robotMove
   932  0022                     ?_robotMove:	; 0 bytes @ 0x2
   933                           	global	?_robotTurn
   934  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   935                           	global	??_robot_read
   936  0022                     ??_robot_read:	; 0 bytes @ 0x2
   937                           	global	lcd_write_control@databyte
   938  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   939                           	global	lcd_write_data@databyte
   940  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   941                           	global	spi_transfer@data
   942  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   943                           	global	robotMove@distance
   944  0022                     robotMove@distance:	; 2 bytes @ 0x2
   945                           	global	robotTurn@distance
   946  0022                     robotTurn@distance:	; 2 bytes @ 0x2
   947                           	global	___wmul@multiplicand
   948  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   949                           	global	___awmod@dividend
   950  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   951  0022                     	ds	1
   952                           	global	?_rotate
   953  0023                     ?_rotate:	; 0 bytes @ 0x3
   954                           	global	??_lcd_set_cursor
   955  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   956                           	global	??_lcd_init
   957  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   958                           	global	??_init
   959  0023                     ??_init:	; 0 bytes @ 0x3
   960                           	global	lcd_set_cursor@address
   961  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   962                           	global	rotate@numsteps
   963  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   964  0023                     	ds	1
   965                           	global	??_robotMove
   966  0024                     ??_robotMove:	; 0 bytes @ 0x4
   967                           	global	??_robotTurn
   968  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   969                           	global	??___wmul
   970  0024                     ??___wmul:	; 0 bytes @ 0x4
   971                           	global	??___awmod
   972  0024                     ??___awmod:	; 0 bytes @ 0x4
   973                           	global	adc_read@adc_value
   974  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   975                           	global	___wmul@product
   976  0024                     ___wmul@product:	; 2 bytes @ 0x4
   977  0024                     	ds	1
   978                           	global	rotate@direction
   979  0025                     rotate@direction:	; 1 bytes @ 0x5
   980                           	global	___awmod@counter
   981  0025                     ___awmod@counter:	; 1 bytes @ 0x5
   982  0025                     	ds	1
   983                           	global	??_rotate
   984  0026                     ??_rotate:	; 0 bytes @ 0x6
   985                           	global	??_adc_read_channel
   986  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
   987                           	global	?___lwdiv
   988  0026                     ?___lwdiv:	; 2 bytes @ 0x6
   989                           	global	___awmod@sign
   990  0026                     ___awmod@sign:	; 1 bytes @ 0x6
   991                           	global	___lwdiv@divisor
   992  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   993  0026                     	ds	1
   994                           	global	?_lcd_write_string
   995  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
   996                           	global	adc_read_channel@channel
   997  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
   998                           	global	lcd_write_string@s
   999  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1000  0027                     	ds	1
  1001                           	global	?_readDistance
  1002  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1003                           	global	rotate@i
  1004  0028                     rotate@i:	; 2 bytes @ 0x8
  1005                           	global	___lwdiv@dividend
  1006  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1007  0028                     	ds	1
  1008                           	global	??_lcd_write_string
  1009  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1010  0029                     	ds	1
  1011                           	global	??_readDistance
  1012  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1013                           	global	??___lwdiv
  1014  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1015  002A                     	ds	1
  1016                           	global	___lwdiv@quotient
  1017  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1018  002B                     	ds	1
  1019                           	global	readDistance@fullval
  1020  002C                     readDistance@fullval:	; 2 bytes @ 0xC
  1021  002C                     	ds	1
  1022                           	global	___lwdiv@counter
  1023  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1024  002D                     	ds	1
  1025                           	global	??_ADCconvert
  1026  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1027                           	global	?___lwmod
  1028  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1029                           	global	___lwmod@divisor
  1030  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1031  002E                     	ds	2
  1032                           	global	??_readAvgDistance
  1033  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1034                           	global	readAvgDistance@fullval
  1035  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1036                           	global	___lwmod@dividend
  1037  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1038  0030                     	ds	2
  1039                           	global	??___lwmod
  1040  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1041                           	global	readAvgDistance@i
  1042  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
  1043  0032                     	ds	1
  1044                           	global	___lwmod@counter
  1045  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1046  0033                     	ds	1
  1047                           	global	?_sprintf
  1048  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1049                           	global	sprintf@f
  1050  0034                     sprintf@f:	; 1 bytes @ 0x14
  1051  0034                     	ds	5
  1052                           	global	??_sprintf
  1053  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1054  0039                     	ds	3
  1055                           	global	sprintf@ap
  1056  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1057  003C                     	ds	1
  1058                           	global	sprintf@flag
  1059  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1060  003D                     	ds	1
  1061                           	global	sprintf@prec
  1062  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1063  003E                     	ds	1
  1064                           	global	sprintf@_val
  1065  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1066  003F                     	ds	4
  1067                           	global	sprintf@sp
  1068  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1069  0043                     	ds	1
  1070                           	global	sprintf@c
  1071  0044                     sprintf@c:	; 1 bytes @ 0x24
  1072  0044                     	ds	1
  1073                           	global	??_UpdateDisplay
  1074  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1075  0045                     	ds	5
  1076                           	global	UpdateDisplay@adcOutput
  1077  004A                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x2A
  1078  004A                     	ds	16
  1079                           	global	??_calibrateIR
  1080  005A                     ??_calibrateIR:	; 0 bytes @ 0x3A
  1081                           	global	??_ChargeMode
  1082  005A                     ??_ChargeMode:	; 0 bytes @ 0x3A
  1083                           	global	?_scan360
  1084  005A                     ?_scan360:	; 2 bytes @ 0x3A
  1085  005A                     	ds	2
  1086                           	global	??_scan360
  1087  005C                     ??_scan360:	; 0 bytes @ 0x3C
  1088                           	global	scan360@lowestVal
  1089  005C                     scan360@lowestVal:	; 2 bytes @ 0x3C
  1090  005C                     	ds	2
  1091                           	global	scan360@lowestSteps
  1092  005E                     scan360@lowestSteps:	; 2 bytes @ 0x3E
  1093  005E                     	ds	2
  1094                           	global	scan360@steps
  1095  0060                     scan360@steps:	; 2 bytes @ 0x40
  1096  0060                     	ds	2
  1097                           	global	??_main
  1098  0062                     ??_main:	; 0 bytes @ 0x42
  1099  0062                     	ds	3
  1100                           	global	main@shortwall
  1101  0065                     main@shortwall:	; 2 bytes @ 0x45
  1102  0065                     	ds	2
  1103                           	global	main@choice
  1104  0067                     main@choice:	; 1 bytes @ 0x47
  1105  0067                     	ds	1
  1106 ;;Data sizes: Strings 133, constant 10, data 13, bss 88, persistent 0 stack 0
  1107 ;;Auto spaces:   Size  Autos    Used
  1108 ;; COMMON          14     11      14
  1109 ;; BANK0           80     72      80
  1110 ;; BANK1           80      0      76
  1111 ;; BANK3           96      0      16
  1112 ;; BANK2           96      0       0
  1113                           
  1114 ;;
  1115 ;; Pointer list with targets:
  1116                           
  1117 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1118 ;;
  1119 ;; ?___awmod	int  size(1) Largest target is 0
  1120 ;;
  1121 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1122 ;;
  1123 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1124 ;;
  1125 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1126 ;;
  1127 ;; ?_scan360	int  size(1) Largest target is 0
  1128 ;;
  1129 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1130 ;;
  1131 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1132 ;;
  1133 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1134 ;;		 -> STR_14(CODE[15]), STR_13(CODE[15]), 
  1135 ;;
  1136 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1137 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1138 ;;
  1139 ;; ?_sprintf	int  size(1) Largest target is 0
  1140 ;;
  1141 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1142 ;;		 -> ?_sprintf(BANK0[2]), 
  1143 ;;
  1144 ;; S8138$_cp	PTR const unsigned char  size(1) Largest target is 0
  1145 ;;
  1146 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1147 ;;
  1148 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1149 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1150 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1151 ;;
  1152 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1153 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1154 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1155 ;;
  1156 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1157 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1158 ;;		 -> STR_15(CODE[4]), UpdateDisplay@adcOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), 
  1159 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1160 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1161 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1162 ;;
  1163                           
  1164                           
  1165 ;;
  1166 ;; Critical Paths under _main in COMMON
  1167 ;;
  1168 ;;   None.
  1169 ;;
  1170 ;; Critical Paths under _isr1 in COMMON
  1171 ;;
  1172 ;;   _isr1->i1___lwmod
  1173 ;;   _ReadButtons->_Debounce
  1174 ;;
  1175 ;; Critical Paths under _main in BANK0
  1176 ;;
  1177 ;;   _main->_scan360
  1178 ;;   _scan360->_UpdateDisplay
  1179 ;;   _ChargeMode->_UpdateDisplay
  1180 ;;   _calibrateIR->_UpdateDisplay
  1181 ;;   _readAvgDistance->_ADCconvert
  1182 ;;   _UpdateDisplay->_sprintf
  1183 ;;   _readDistance->_adc_read_channel
  1184 ;;   _robot_read->_ser_putch
  1185 ;;   _robot_read->_ser_getch
  1186 ;;   _lcd_init->_lcd_write_control
  1187 ;;   _lcd_write_string->___awmod
  1188 ;;   _lcd_set_cursor->_lcd_write_control
  1189 ;;   _sprintf->___lwmod
  1190 ;;   _ADCconvert->___lwdiv
  1191 ;;   _robotTurn->_ser_putch
  1192 ;;   _robotMove->_ser_putch
  1193 ;;   _rotate->_spi_transfer
  1194 ;;   _robo_init->_ser_putch
  1195 ;;   _adc_read_channel->_adc_read
  1196 ;;   ___lwmod->___lwdiv
  1197 ;;   ___lwdiv->___wmul
  1198 ;;
  1199 ;; Critical Paths under _isr1 in BANK0
  1200 ;;
  1201 ;;   None.
  1202 ;;
  1203 ;; Critical Paths under _main in BANK1
  1204 ;;
  1205 ;;   None.
  1206 ;;
  1207 ;; Critical Paths under _isr1 in BANK1
  1208 ;;
  1209 ;;   None.
  1210 ;;
  1211 ;; Critical Paths under _main in BANK3
  1212 ;;
  1213 ;;   None.
  1214 ;;
  1215 ;; Critical Paths under _isr1 in BANK3
  1216 ;;
  1217 ;;   None.
  1218 ;;
  1219 ;; Critical Paths under _main in BANK2
  1220 ;;
  1221 ;;   None.
  1222 ;;
  1223 ;; Critical Paths under _isr1 in BANK2
  1224 ;;
  1225 ;;   None.
  1226                           
  1227 ;;
  1228 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1229 ;;
  1230                           
  1231 ;;
  1232 ;;Call Graph Tables:
  1233 ;;
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1236 ;; ---------------------------------------------------------------------------------
  1237 ;; (0) _main                                                 6     6      0    7208
  1238 ;;                                             66 BANK0      6     6      0
  1239 ;;                               _init
  1240 ;;                    _readAvgDistance
  1241 ;;                      _UpdateDisplay
  1242 ;;                               _Menu
  1243 ;;                        _calibrateIR
  1244 ;;                            _scan360
  1245 ;;                             _rotate
  1246 ;;                          _robotMove
  1247 ;;                          _robotTurn
  1248 ;;                         _robot_read
  1249 ;;                         _ChargeMode
  1250 ;; ---------------------------------------------------------------------------------
  1251 ;; (1) _scan360                                              8     6      2    2118
  1252 ;;                                             58 BANK0      8     6      2
  1253 ;;                    _readAvgDistance
  1254 ;;                             _rotate
  1255 ;;                      _UpdateDisplay
  1256 ;; ---------------------------------------------------------------------------------
  1257 ;; (1) _ChargeMode                                           1     1      0    1349
  1258 ;;                                             58 BANK0      1     1      0
  1259 ;;                          _ser_putch
  1260 ;;                      _UpdateDisplay
  1261 ;; ---------------------------------------------------------------------------------
  1262 ;; (1) _calibrateIR                                          0     0      0    1425
  1263 ;;                             _rotate
  1264 ;;                      _UpdateDisplay
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (2) _readAvgDistance                                      4     4      0     555
  1267 ;;                                             16 BANK0      4     4      0
  1268 ;;                       _readDistance
  1269 ;;                            ___lwdiv
  1270 ;;                         _ADCconvert
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (2) _UpdateDisplay                                       21    21      0    1327
  1273 ;;                                             37 BANK0     21    21      0
  1274 ;;                  _lcd_write_control
  1275 ;;                            _sprintf
  1276 ;;                     _lcd_set_cursor
  1277 ;;                   _lcd_write_string
  1278 ;;                            ___awmod
  1279 ;; ---------------------------------------------------------------------------------
  1280 ;; (1) _init                                                 1     1      0      44
  1281 ;;                                              3 BANK0      1     1      0
  1282 ;;                           _ser_init
  1283 ;;                           _init_adc
  1284 ;;                           _lcd_init
  1285 ;;                          _robo_init
  1286 ;; ---------------------------------------------------------------------------------
  1287 ;; (3) _readDistance                                         6     4      2      69
  1288 ;;                                              8 BANK0      6     4      2
  1289 ;;                   _adc_read_channel
  1290 ;; ---------------------------------------------------------------------------------
  1291 ;; (1) _robot_read                                           3     3      0      45
  1292 ;;                                              2 BANK0      3     3      0
  1293 ;;                          _ser_putch
  1294 ;;                          _ser_getch
  1295 ;; ---------------------------------------------------------------------------------
  1296 ;; (2) _lcd_init                                             0     0      0      22
  1297 ;;                  _lcd_write_control
  1298 ;; ---------------------------------------------------------------------------------
  1299 ;; (3) _lcd_write_string                                     2     0      2      67
  1300 ;;                                              7 BANK0      2     0      2
  1301 ;;                     _lcd_write_data
  1302 ;;                            ___awmod (ARG)
  1303 ;; ---------------------------------------------------------------------------------
  1304 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1305 ;;                                              3 BANK0      1     1      0
  1306 ;;                  _lcd_write_control
  1307 ;; ---------------------------------------------------------------------------------
  1308 ;; (2) _ser_getch                                            2     2      0      23
  1309 ;;                                              0 BANK0      2     2      0
  1310 ;;                           _ser_isrx
  1311 ;; ---------------------------------------------------------------------------------
  1312 ;; (3) _sprintf                                             17    12      5     798
  1313 ;;                                             20 BANK0     17    12      5
  1314 ;;                            ___lwdiv
  1315 ;;                            ___lwmod
  1316 ;; ---------------------------------------------------------------------------------
  1317 ;; (3) _ADCconvert                                           2     2      0     254
  1318 ;;                                             14 BANK0      2     2      0
  1319 ;;                             ___wmul
  1320 ;;                            ___lwdiv
  1321 ;; ---------------------------------------------------------------------------------
  1322 ;; (1) _robotTurn                                            3     1      2      88
  1323 ;;                                              2 BANK0      3     1      2
  1324 ;;                          _ser_putch
  1325 ;; ---------------------------------------------------------------------------------
  1326 ;; (1) _robotMove                                            3     1      2      88
  1327 ;;                                              2 BANK0      3     1      2
  1328 ;;                          _ser_putch
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; (1) _rotate                                               7     4      3      98
  1331 ;;                                              3 BANK0      7     4      3
  1332 ;;                       _spi_transfer
  1333 ;; ---------------------------------------------------------------------------------
  1334 ;; (2) _robo_init                                            0     0      0      22
  1335 ;;                          _ser_putch
  1336 ;; ---------------------------------------------------------------------------------
  1337 ;; (4) _lcd_write_data                                       3     3      0      22
  1338 ;;                                              0 BANK0      3     3      0
  1339 ;; ---------------------------------------------------------------------------------
  1340 ;; (4) _lcd_write_control                                    3     3      0      22
  1341 ;;                                              0 BANK0      3     3      0
  1342 ;; ---------------------------------------------------------------------------------
  1343 ;; (2) _init_adc                                             1     1      0       0
  1344 ;;                                              0 BANK0      1     1      0
  1345 ;; ---------------------------------------------------------------------------------
  1346 ;; (4) _adc_read_channel                                     2     2      0      46
  1347 ;;                                              6 BANK0      2     2      0
  1348 ;;                           _adc_read
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (3) ___awmod                                              7     3      4     296
  1351 ;;                                              0 BANK0      7     3      4
  1352 ;; ---------------------------------------------------------------------------------
  1353 ;; (4) ___lwmod                                              6     2      4     159
  1354 ;;                                             14 BANK0      6     2      4
  1355 ;;                            ___lwdiv (ARG)
  1356 ;; ---------------------------------------------------------------------------------
  1357 ;; (4) ___lwdiv                                              8     4      4     162
  1358 ;;                                              6 BANK0      8     4      4
  1359 ;;                             ___wmul (ARG)
  1360 ;; ---------------------------------------------------------------------------------
  1361 ;; (4) ___wmul                                               6     2      4      92
  1362 ;;                                              0 BANK0      6     2      4
  1363 ;; ---------------------------------------------------------------------------------
  1364 ;; (3) _ser_isrx                                             0     0      0       0
  1365 ;; ---------------------------------------------------------------------------------
  1366 ;; (2) _spi_transfer                                         3     3      0      30
  1367 ;;                                              0 BANK0      3     3      0
  1368 ;; ---------------------------------------------------------------------------------
  1369 ;; (1) _Menu                                                 1     1      0      22
  1370 ;;                                              0 BANK0      1     1      0
  1371 ;; ---------------------------------------------------------------------------------
  1372 ;; (2) _ser_putch                                            2     2      0      22
  1373 ;;                                              0 BANK0      2     2      0
  1374 ;; ---------------------------------------------------------------------------------
  1375 ;; (2) _ser_init                                             1     1      0       0
  1376 ;;                                              0 BANK0      1     1      0
  1377 ;; ---------------------------------------------------------------------------------
  1378 ;; (5) _adc_read                                             6     4      2      24
  1379 ;;                                              0 BANK0      6     4      2
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; Estimated maximum stack depth 5
  1382 ;; ---------------------------------------------------------------------------------
  1383 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1384 ;; ---------------------------------------------------------------------------------
  1385 ;; (6) _isr1                                                 5     5      0     521
  1386 ;;                                              6 COMMON     5     5      0
  1387 ;;                          i1___lwmod
  1388 ;;                        _ReadButtons
  1389 ;; ---------------------------------------------------------------------------------
  1390 ;; (7) _ReadButtons                                          0     0      0       0
  1391 ;;                           _Debounce
  1392 ;; ---------------------------------------------------------------------------------
  1393 ;; (7) i1___lwmod                                            6     2      4     521
  1394 ;;                                              0 COMMON     6     2      4
  1395 ;; ---------------------------------------------------------------------------------
  1396 ;; (8) _Debounce                                             1     1      0       0
  1397 ;;                                              0 COMMON     1     1      0
  1398 ;; ---------------------------------------------------------------------------------
  1399 ;; Estimated maximum stack depth 8
  1400 ;; ---------------------------------------------------------------------------------
  1401                           
  1402 ;; Call Graph Graphs:
  1403                           
  1404 ;; _main (ROOT)
  1405 ;;   _init
  1406 ;;     _ser_init
  1407 ;;     _init_adc
  1408 ;;     _lcd_init
  1409 ;;       _lcd_write_control
  1410 ;;     _robo_init
  1411 ;;       _ser_putch
  1412 ;;   _readAvgDistance
  1413 ;;     _readDistance
  1414 ;;       _adc_read_channel
  1415 ;;         _adc_read
  1416 ;;     ___lwdiv
  1417 ;;       ___wmul (ARG)
  1418 ;;     _ADCconvert
  1419 ;;       ___wmul
  1420 ;;       ___lwdiv
  1421 ;;         ___wmul (ARG)
  1422 ;;   _UpdateDisplay
  1423 ;;     _lcd_write_control
  1424 ;;     _sprintf
  1425 ;;       ___lwdiv
  1426 ;;         ___wmul (ARG)
  1427 ;;       ___lwmod
  1428 ;;         ___lwdiv (ARG)
  1429 ;;           ___wmul (ARG)
  1430 ;;     _lcd_set_cursor
  1431 ;;       _lcd_write_control
  1432 ;;     _lcd_write_string
  1433 ;;       _lcd_write_data
  1434 ;;       ___awmod (ARG)
  1435 ;;     ___awmod
  1436 ;;   _Menu
  1437 ;;   _calibrateIR
  1438 ;;     _rotate
  1439 ;;       _spi_transfer
  1440 ;;     _UpdateDisplay
  1441 ;;       _lcd_write_control
  1442 ;;       _sprintf
  1443 ;;         ___lwdiv
  1444 ;;           ___wmul (ARG)
  1445 ;;         ___lwmod
  1446 ;;           ___lwdiv (ARG)
  1447 ;;             ___wmul (ARG)
  1448 ;;       _lcd_set_cursor
  1449 ;;         _lcd_write_control
  1450 ;;       _lcd_write_string
  1451 ;;         _lcd_write_data
  1452 ;;         ___awmod (ARG)
  1453 ;;       ___awmod
  1454 ;;   _scan360
  1455 ;;     _readAvgDistance
  1456 ;;       _readDistance
  1457 ;;         _adc_read_channel
  1458 ;;           _adc_read
  1459 ;;       ___lwdiv
  1460 ;;         ___wmul (ARG)
  1461 ;;       _ADCconvert
  1462 ;;         ___wmul
  1463 ;;         ___lwdiv
  1464 ;;           ___wmul (ARG)
  1465 ;;     _rotate
  1466 ;;       _spi_transfer
  1467 ;;     _UpdateDisplay
  1468 ;;       _lcd_write_control
  1469 ;;       _sprintf
  1470 ;;         ___lwdiv
  1471 ;;           ___wmul (ARG)
  1472 ;;         ___lwmod
  1473 ;;           ___lwdiv (ARG)
  1474 ;;             ___wmul (ARG)
  1475 ;;       _lcd_set_cursor
  1476 ;;         _lcd_write_control
  1477 ;;       _lcd_write_string
  1478 ;;         _lcd_write_data
  1479 ;;         ___awmod (ARG)
  1480 ;;       ___awmod
  1481 ;;   _rotate
  1482 ;;     _spi_transfer
  1483 ;;   _robotMove
  1484 ;;     _ser_putch
  1485 ;;   _robotTurn
  1486 ;;     _ser_putch
  1487 ;;   _robot_read
  1488 ;;     _ser_putch
  1489 ;;     _ser_getch
  1490 ;;       _ser_isrx
  1491 ;;   _ChargeMode
  1492 ;;     _ser_putch
  1493 ;;     _UpdateDisplay
  1494 ;;       _lcd_write_control
  1495 ;;       _sprintf
  1496 ;;         ___lwdiv
  1497 ;;           ___wmul (ARG)
  1498 ;;         ___lwmod
  1499 ;;           ___lwdiv (ARG)
  1500 ;;             ___wmul (ARG)
  1501 ;;       _lcd_set_cursor
  1502 ;;         _lcd_write_control
  1503 ;;       _lcd_write_string
  1504 ;;         _lcd_write_data
  1505 ;;         ___awmod (ARG)
  1506 ;;       ___awmod
  1507 ;;
  1508 ;; _isr1 (ROOT)
  1509 ;;   i1___lwmod
  1510 ;;   _ReadButtons
  1511 ;;     _Debounce
  1512 ;;
  1513                           
  1514 ;; Address spaces:
  1515                           
  1516 ;;Name               Size   Autos  Total    Cost      Usage
  1517 ;;BANK3               60      0      10       9       16.7%
  1518 ;;BITBANK3            60      0       0       8        0.0%
  1519 ;;SFR3                 0      0       0       4        0.0%
  1520 ;;BITSFR3              0      0       0       4        0.0%
  1521 ;;BANK2               60      0       0      11        0.0%
  1522 ;;BITBANK2            60      0       0      10        0.0%
  1523 ;;SFR2                 0      0       0       5        0.0%
  1524 ;;BITSFR2              0      0       0       5        0.0%
  1525 ;;SFR1                 0      0       0       2        0.0%
  1526 ;;BITSFR1              0      0       0       2        0.0%
  1527 ;;BANK1               50      0      4C       7       95.0%
  1528 ;;BITBANK1            50      0       0       6        0.0%
  1529 ;;CODE                 0      0       0       0        0.0%
  1530 ;;DATA                 0      0      C5      12        0.0%
  1531 ;;ABS                  0      0      BA       3        0.0%
  1532 ;;NULL                 0      0       0       0        0.0%
  1533 ;;STACK                0      0       B       2        0.0%
  1534 ;;BANK0               50     48      50       5      100.0%
  1535 ;;BITBANK0            50      0       0       4        0.0%
  1536 ;;SFR0                 0      0       0       1        0.0%
  1537 ;;BITSFR0              0      0       0       1        0.0%
  1538 ;;COMMON               E      B       E       1      100.0%
  1539 ;;BITCOMMON            E      0       2       0       14.3%
  1540 ;;EEDATA             100      0       0       0        0.0%
  1541                           
  1542                           	global	_main
  1543                           psect	maintext,global,class=CODE,delta=2
  1544                           global __pmaintext
  1545  03B1                     __pmaintext:
  1546                           
  1547 ;; *************** function _main *****************
  1548 ;; Defined at:
  1549 ;;		line 297 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  shortwall       2   69[BANK0 ] int 
  1554 ;;  choice          1   71[BANK0 ] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;		None               void
  1557 ;; Registers used:
  1558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 17F/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         0       3       0       0       0
  1566 ;;      Temps:          0       3       0       0       0
  1567 ;;      Totals:         0       6       0       0       0
  1568 ;;Total ram usage:        6 bytes
  1569 ;; Hardware stack levels required when called:    8
  1570 ;; This function calls:
  1571 ;;		_init
  1572 ;;		_readAvgDistance
  1573 ;;		_UpdateDisplay
  1574 ;;		_Menu
  1575 ;;		_calibrateIR
  1576 ;;		_scan360
  1577 ;;		_rotate
  1578 ;;		_robotMove
  1579 ;;		_robotTurn
  1580 ;;		_robot_read
  1581 ;;		_ChargeMode
  1582 ;; This function is called by:
  1583 ;;		Startup code after reset
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           psect	maintext
  1587                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1588                           	line	297
  1589                           	global	__size_of_main
  1590  0105                     	__size_of_main	equ	__end_of_main-_main
  1591                           	
  1592  03B1                     _main:	
  1593                           	opt	stack 0
  1594                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1595                           	line	298
  1596                           	
  1597  03B1                     l11027:	
  1598                           ;Main.c: 298: unsigned char choice = 255;
  1599  03B1  30FF               	movlw	(0FFh)
  1600  03B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1601  03B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1602  03B4  00E2               	movwf	(??_main+0)+0
  1603  03B5  0862               	movf	(??_main+0)+0,w
  1604  03B6  00E7               	movwf	(main@choice)
  1605                           	line	299
  1606                           	
  1607  03B7                     l11029:	
  1608                           ;Main.c: 299: int shortwall = 0;
  1609  03B7  01E5               	clrf	(main@shortwall)
  1610  03B8  01E6               	clrf	(main@shortwall+1)
  1611                           	line	303
  1612                           	
  1613  03B9                     l11031:	
  1614                           ;Main.c: 303: init();
  1615  03B9  120A  158A  2305   	fcall	_init
              120A  118A         
  1616  03BE  2BBF               	goto	l11033
  1617                           	line	308
  1618                           ;Main.c: 308: while(1)
  1619                           	
  1620  03BF                     l2257:	
  1621                           	line	312
  1622                           	
  1623  03BF                     l11033:	
  1624                           ;Main.c: 309: {
  1625                           ;Main.c: 312: if (RTC_FLAG_250MS == 1)
  1626  03BF  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1627  03C0  2BC2               	goto	u4571
  1628  03C1  2BC3               	goto	u4570
  1629  03C2                     u4571:
  1630  03C2  2C00               	goto	l11061
  1631  03C3                     u4570:
  1632                           	line	314
  1633                           	
  1634  03C3                     l11035:	
  1635                           ;Main.c: 313: {
  1636                           ;Main.c: 314: RTC_FLAG_250MS = 0;
  1637  03C3  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1638                           	line	316
  1639                           	
  1640  03C4                     l11037:	
  1641                           ;Main.c: 316: readAvgDistance();
  1642  03C4  120A  158A  2585   	fcall	_readAvgDistance
              120A  118A         
  1643                           	line	317
  1644                           ;Main.c: 317: UpdateDisplay();
  1645  03C9  120A  118A  2238   	fcall	_UpdateDisplay
              120A  118A         
  1646  03CE  2C00               	goto	l11061
  1647                           	line	318
  1648                           	
  1649  03CF                     l2258:	
  1650                           	line	320
  1651                           ;Main.c: 318: }
  1652                           ;Main.c: 320: switch (buttonPressed)
  1653  03CF  2C00               	goto	l11061
  1654                           	line	322
  1655                           ;Main.c: 321: {
  1656                           ;Main.c: 322: case 1:
  1657                           	
  1658  03D0                     l2260:	
  1659                           	line	323
  1660                           	
  1661  03D0                     l11039:	
  1662                           ;Main.c: 323: Menu(1);
  1663  03D0  3001               	movlw	(01h)
  1664  03D1  120A  158A  249E   	fcall	_Menu
              120A  118A         
  1665                           	line	325
  1666                           	
  1667  03D6                     l11041:	
  1668                           ;Main.c: 325: buttonPressed = 0;
  1669  03D6  01FD               	clrf	(_buttonPressed)	;volatile
  1670                           	line	327
  1671                           ;Main.c: 327: break;
  1672  03D7  2C95               	goto	l11087
  1673                           	line	328
  1674                           ;Main.c: 328: case 2:
  1675                           	
  1676  03D8                     l2262:	
  1677                           	line	329
  1678                           	
  1679  03D8                     l11043:	
  1680                           ;Main.c: 329: Menu(2);
  1681  03D8  3002               	movlw	(02h)
  1682  03D9  120A  158A  249E   	fcall	_Menu
              120A  118A         
  1683                           	line	331
  1684                           	
  1685  03DE                     l11045:	
  1686                           ;Main.c: 331: buttonPressed = 0;
  1687  03DE  01FD               	clrf	(_buttonPressed)	;volatile
  1688                           	line	333
  1689                           ;Main.c: 333: break;
  1690  03DF  2C95               	goto	l11087
  1691                           	line	334
  1692                           ;Main.c: 334: case 3:
  1693                           	
  1694  03E0                     l2263:	
  1695                           	line	335
  1696                           	
  1697  03E0                     l11047:	
  1698                           ;Main.c: 335: Menu(3);
  1699  03E0  3003               	movlw	(03h)
  1700  03E1  120A  158A  249E   	fcall	_Menu
              120A  118A         
  1701                           	line	337
  1702                           	
  1703  03E6                     l11049:	
  1704                           ;Main.c: 337: buttonPressed = 0;
  1705  03E6  01FD               	clrf	(_buttonPressed)	;volatile
  1706                           	line	339
  1707                           ;Main.c: 339: break;
  1708  03E7  2C95               	goto	l11087
  1709                           	line	340
  1710                           ;Main.c: 340: case 4:
  1711                           	
  1712  03E8                     l2264:	
  1713                           	line	341
  1714                           	
  1715  03E8                     l11051:	
  1716                           ;Main.c: 341: Menu(4);
  1717  03E8  3004               	movlw	(04h)
  1718  03E9  120A  158A  249E   	fcall	_Menu
              120A  118A         
  1719                           	line	343
  1720                           	
  1721  03EE                     l11053:	
  1722                           ;Main.c: 343: buttonPressed = 0;
  1723  03EE  01FD               	clrf	(_buttonPressed)	;volatile
  1724                           	line	345
  1725                           ;Main.c: 345: break;
  1726  03EF  2C95               	goto	l11087
  1727                           	line	346
  1728                           ;Main.c: 346: case 5:
  1729                           	
  1730  03F0                     l2265:	
  1731                           	line	347
  1732                           	
  1733  03F0                     l11055:	
  1734                           ;Main.c: 347: choice = Menu(5);
  1735  03F0  3005               	movlw	(05h)
  1736  03F1  120A  158A  249E   	fcall	_Menu
              120A  118A         
  1737  03F6  1283               	bcf	status, 5	;RP0=0, select bank0
  1738  03F7  1303               	bcf	status, 6	;RP1=0, select bank0
  1739  03F8  00E2               	movwf	(??_main+0)+0
  1740  03F9  0862               	movf	(??_main+0)+0,w
  1741  03FA  00E7               	movwf	(main@choice)
  1742                           	line	349
  1743                           	
  1744  03FB                     l11057:	
  1745                           ;Main.c: 349: buttonPressed = 0;
  1746  03FB  01FD               	clrf	(_buttonPressed)	;volatile
  1747                           	line	351
  1748                           ;Main.c: 351: break;
  1749  03FC  2C95               	goto	l11087
  1750                           	line	352
  1751                           ;Main.c: 352: default:
  1752                           	
  1753  03FD                     l2266:	
  1754                           	line	353
  1755                           ;Main.c: 353: buttonPressed = 0;
  1756  03FD  01FD               	clrf	(_buttonPressed)	;volatile
  1757                           	line	354
  1758                           ;Main.c: 354: break;
  1759  03FE  2C95               	goto	l11087
  1760                           	line	355
  1761                           	
  1762  03FF                     l11059:	
  1763                           ;Main.c: 355: }
  1764  03FF  2C95               	goto	l11087
  1765                           	line	320
  1766                           	
  1767  0400                     l2259:	
  1768                           	
  1769  0400                     l11061:	
  1770  0400  087D               	movf	(_buttonPressed),w	;volatile
  1771                           	; Switch size 1, requested type "space"
  1772                           ; Number of cases is 5, Range of values is 1 to 5
  1773                           ; switch strategies available:
  1774                           ; Name         Instructions Cycles
  1775                           ; simple_byte           16     9 (average)
  1776                           ; direct_byte           26    11 (fixed)
  1777                           ; jumptable            263     9 (fixed)
  1778                           ;	Chosen strategy is simple_byte
  1779                           
  1780                           	opt asmopt_off
  1781  0401  3A01               	xorlw	1^0	; case 1
  1782  0402  1903               	skipnz
  1783  0403  2BD0               	goto	l11039
  1784  0404  3A03               	xorlw	2^1	; case 2
  1785  0405  1903               	skipnz
  1786  0406  2BD8               	goto	l11043
  1787  0407  3A01               	xorlw	3^2	; case 3
  1788  0408  1903               	skipnz
  1789  0409  2BE0               	goto	l11047
  1790  040A  3A07               	xorlw	4^3	; case 4
  1791  040B  1903               	skipnz
  1792  040C  2BE8               	goto	l11051
  1793  040D  3A01               	xorlw	5^4	; case 5
  1794  040E  1903               	skipnz
  1795  040F  2BF0               	goto	l11055
  1796  0410  2BFD               	goto	l2266
  1797                           	opt asmopt_on
  1798                           
  1799                           	line	355
  1800                           	
  1801  0411                     l2261:	
  1802                           	line	358
  1803                           ;Main.c: 358: switch (choice)
  1804  0411  2C95               	goto	l11087
  1805                           	line	360
  1806                           ;Main.c: 359: {
  1807                           ;Main.c: 360: case 0:
  1808                           	
  1809  0412                     l2268:	
  1810                           	line	361
  1811                           	
  1812  0412                     l11063:	
  1813                           ;Main.c: 361: calibrateIR();
  1814  0412  120A  118A  279F   	fcall	_calibrateIR
              120A  118A         
  1815                           	line	362
  1816                           ;Main.c: 362: break;
  1817  0417  2CAB               	goto	l11089
  1818                           	line	363
  1819                           ;Main.c: 363: case 1:
  1820                           	
  1821  0418                     l2270:	
  1822                           	line	364
  1823                           	
  1824  0418                     l11065:	
  1825                           ;Main.c: 364: shortwall = scan360();
  1826  0418  120A  158A  25DA   	fcall	_scan360
              120A  118A         
  1827  041D  1283               	bcf	status, 5	;RP0=0, select bank0
  1828  041E  1303               	bcf	status, 6	;RP1=0, select bank0
  1829  041F  085B               	movf	(1+(?_scan360)),w
  1830  0420  01E6               	clrf	(main@shortwall+1)
  1831  0421  07E6               	addwf	(main@shortwall+1)
  1832  0422  085A               	movf	(0+(?_scan360)),w
  1833  0423  01E5               	clrf	(main@shortwall)
  1834  0424  07E5               	addwf	(main@shortwall)
  1835                           
  1836                           	line	365
  1837                           	
  1838  0425                     l11067:	
  1839                           ;Main.c: 365: rotate((400 - shortwall), 0);
  1840  0425  0965               	comf	(main@shortwall),w
  1841  0426  00E2               	movwf	(??_main+0)+0
  1842  0427  0966               	comf	(main@shortwall+1),w
  1843  0428  00E3               	movwf	((??_main+0)+0+1)
  1844  0429  0AE2               	incf	(??_main+0)+0,f
  1845  042A  1903               	skipnz
  1846  042B  0AE3               	incf	((??_main+0)+0+1),f
  1847  042C  0862               	movf	0+(??_main+0)+0,w
  1848  042D  3E90               	addlw	low(0190h)
  1849  042E  00A3               	movwf	(?_rotate)
  1850  042F  0863               	movf	1+(??_main+0)+0,w
  1851  0430  1803               	skipnc
  1852  0431  3E01               	addlw	1
  1853  0432  3E01               	addlw	high(0190h)
  1854  0433  00A4               	movwf	1+(?_rotate)
  1855  0434  01A5               	clrf	0+(?_rotate)+02h
  1856  0435  120A  158A  2535   	fcall	_rotate
              120A  118A         
  1857                           	line	366
  1858                           ;Main.c: 366: break;
  1859  043A  2CAB               	goto	l11089
  1860                           	line	367
  1861                           ;Main.c: 367: case 2:
  1862                           	
  1863  043B                     l2271:	
  1864                           	line	368
  1865                           	
  1866  043B                     l11069:	
  1867                           ;Main.c: 368: _delay((unsigned long)((100)*(20000000/4000.0)));
  1868                           	opt asmopt_off
  1869  043B  3003               movlw  3
  1870  043C  1283               	bcf	status, 5	;RP0=0, select bank0
  1871  043D  1303               	bcf	status, 6	;RP1=0, select bank0
  1872  043E  00E4               movwf	((??_main+0)+0+2),f
  1873  043F  308A               movlw	138
  1874  0440  00E3               movwf	((??_main+0)+0+1),f
  1875  0441  3056               	movlw	86
  1876  0442  00E2               movwf	((??_main+0)+0),f
  1877  0443                     u4587:
  1878  0443  0BE2               	decfsz	((??_main+0)+0),f
  1879  0444  2C43               	goto	u4587
  1880  0445  0BE3               	decfsz	((??_main+0)+0+1),f
  1881  0446  2C43               	goto	u4587
  1882  0447  0BE4               	decfsz	((??_main+0)+0+2),f
  1883  0448  2C43               	goto	u4587
  1884  0449  2C4A               	nop2
  1885                           opt asmopt_on
  1886                           
  1887                           	line	369
  1888                           	
  1889  044A                     l11071:	
  1890                           ;Main.c: 369: robotMove(200);
  1891  044A  30C8               	movlw	low(0C8h)
  1892  044B  1283               	bcf	status, 5	;RP0=0, select bank0
  1893  044C  1303               	bcf	status, 6	;RP1=0, select bank0
  1894  044D  00A2               	movwf	(?_robotMove)
  1895  044E  3000               	movlw	high(0C8h)
  1896  044F  00A3               	movwf	((?_robotMove))+1
  1897  0450  120A  158A  26DC   	fcall	_robotMove
              120A  118A         
  1898                           	line	372
  1899                           ;Main.c: 372: break;
  1900  0455  2CAB               	goto	l11089
  1901                           	line	373
  1902                           ;Main.c: 373: case 3:
  1903                           	
  1904  0456                     l2272:	
  1905                           	line	374
  1906                           	
  1907  0456                     l11073:	
  1908                           ;Main.c: 374: _delay((unsigned long)((100)*(20000000/4000.0)));
  1909                           	opt asmopt_off
  1910  0456  3003               movlw  3
  1911  0457  1283               	bcf	status, 5	;RP0=0, select bank0
  1912  0458  1303               	bcf	status, 6	;RP1=0, select bank0
  1913  0459  00E4               movwf	((??_main+0)+0+2),f
  1914  045A  308A               movlw	138
  1915  045B  00E3               movwf	((??_main+0)+0+1),f
  1916  045C  3056               	movlw	86
  1917  045D  00E2               movwf	((??_main+0)+0),f
  1918  045E                     u4597:
  1919  045E  0BE2               	decfsz	((??_main+0)+0),f
  1920  045F  2C5E               	goto	u4597
  1921  0460  0BE3               	decfsz	((??_main+0)+0+1),f
  1922  0461  2C5E               	goto	u4597
  1923  0462  0BE4               	decfsz	((??_main+0)+0+2),f
  1924  0463  2C5E               	goto	u4597
  1925  0464  2C65               	nop2
  1926                           opt asmopt_on
  1927                           
  1928                           	line	375
  1929                           	
  1930  0465                     l11075:	
  1931                           ;Main.c: 375: robotMove(1000);
  1932  0465  30E8               	movlw	low(03E8h)
  1933  0466  1283               	bcf	status, 5	;RP0=0, select bank0
  1934  0467  1303               	bcf	status, 6	;RP1=0, select bank0
  1935  0468  00A2               	movwf	(?_robotMove)
  1936  0469  3003               	movlw	high(03E8h)
  1937  046A  00A3               	movwf	((?_robotMove))+1
  1938  046B  120A  158A  26DC   	fcall	_robotMove
              120A  118A         
  1939                           	line	376
  1940                           	
  1941  0470                     l11077:	
  1942                           ;Main.c: 376: robotTurn(-90);
  1943  0470  30A6               	movlw	low(-90)
  1944  0471  1283               	bcf	status, 5	;RP0=0, select bank0
  1945  0472  1303               	bcf	status, 6	;RP1=0, select bank0
  1946  0473  00A2               	movwf	(?_robotTurn)
  1947  0474  30FF               	movlw	high(-90)
  1948  0475  00A3               	movwf	((?_robotTurn))+1
  1949  0476  120A  158A  2654   	fcall	_robotTurn
              120A  118A         
  1950                           	line	377
  1951                           	
  1952  047B                     l11079:	
  1953                           ;Main.c: 377: robotMove(1000);
  1954  047B  30E8               	movlw	low(03E8h)
  1955  047C  1283               	bcf	status, 5	;RP0=0, select bank0
  1956  047D  1303               	bcf	status, 6	;RP1=0, select bank0
  1957  047E  00A2               	movwf	(?_robotMove)
  1958  047F  3003               	movlw	high(03E8h)
  1959  0480  00A3               	movwf	((?_robotMove))+1
  1960  0481  120A  158A  26DC   	fcall	_robotMove
              120A  118A         
  1961                           	line	378
  1962                           ;Main.c: 378: break;
  1963  0486  2CAB               	goto	l11089
  1964                           	line	379
  1965                           ;Main.c: 379: case 4:
  1966                           	
  1967  0487                     l2273:	
  1968                           	line	380
  1969                           	
  1970  0487                     l11081:	
  1971                           ;Main.c: 380: robot_read();
  1972  0487  120A  158A  22D6   	fcall	_robot_read
              120A  118A         
  1973                           	line	381
  1974                           ;Main.c: 381: break;
  1975  048C  2CAB               	goto	l11089
  1976                           	line	383
  1977                           ;Main.c: 383: case 5:
  1978                           	
  1979  048D                     l2274:	
  1980                           	line	384
  1981                           	
  1982  048D                     l11083:	
  1983                           ;Main.c: 384: ChargeMode();
  1984  048D  120A  158A  2458   	fcall	_ChargeMode
              120A  118A         
  1985                           	line	385
  1986                           ;Main.c: 385: break;
  1987  0492  2CAB               	goto	l11089
  1988                           	line	386
  1989                           ;Main.c: 386: default:
  1990                           	
  1991  0493                     l2275:	
  1992                           	line	388
  1993                           ;Main.c: 388: break;
  1994  0493  2CAB               	goto	l11089
  1995                           	line	389
  1996                           	
  1997  0494                     l11085:	
  1998                           ;Main.c: 389: }
  1999  0494  2CAB               	goto	l11089
  2000                           	line	358
  2001                           	
  2002  0495                     l2267:	
  2003                           	
  2004  0495                     l11087:	
  2005  0495  1283               	bcf	status, 5	;RP0=0, select bank0
  2006  0496  1303               	bcf	status, 6	;RP1=0, select bank0
  2007  0497  0867               	movf	(main@choice),w
  2008                           	; Switch size 1, requested type "space"
  2009                           ; Number of cases is 6, Range of values is 0 to 5
  2010                           ; switch strategies available:
  2011                           ; Name         Instructions Cycles
  2012                           ; simple_byte           19    10 (average)
  2013                           ; direct_byte           26     8 (fixed)
  2014                           ; jumptable            260     6 (fixed)
  2015                           ; rangetable            10     6 (fixed)
  2016                           ; spacedrange           18     9 (fixed)
  2017                           ; locatedrange           6     3 (fixed)
  2018                           ;	Chosen strategy is simple_byte
  2019                           
  2020                           	opt asmopt_off
  2021  0498  3A00               	xorlw	0^0	; case 0
  2022  0499  1903               	skipnz
  2023  049A  2C12               	goto	l11063
  2024  049B  3A01               	xorlw	1^0	; case 1
  2025  049C  1903               	skipnz
  2026  049D  2C18               	goto	l11065
  2027  049E  3A03               	xorlw	2^1	; case 2
  2028  049F  1903               	skipnz
  2029  04A0  2C3B               	goto	l11069
  2030  04A1  3A01               	xorlw	3^2	; case 3
  2031  04A2  1903               	skipnz
  2032  04A3  2C56               	goto	l11073
  2033  04A4  3A07               	xorlw	4^3	; case 4
  2034  04A5  1903               	skipnz
  2035  04A6  2C87               	goto	l11081
  2036  04A7  3A01               	xorlw	5^4	; case 5
  2037  04A8  1903               	skipnz
  2038  04A9  2C8D               	goto	l11083
  2039  04AA  2CAB               	goto	l11089
  2040                           	opt asmopt_on
  2041                           
  2042                           	line	389
  2043                           	
  2044  04AB                     l2269:	
  2045                           	line	390
  2046                           	
  2047  04AB                     l11089:	
  2048                           ;Main.c: 390: choice = 255;
  2049  04AB  30FF               	movlw	(0FFh)
  2050  04AC  1283               	bcf	status, 5	;RP0=0, select bank0
  2051  04AD  1303               	bcf	status, 6	;RP1=0, select bank0
  2052  04AE  00E2               	movwf	(??_main+0)+0
  2053  04AF  0862               	movf	(??_main+0)+0,w
  2054  04B0  00E7               	movwf	(main@choice)
  2055  04B1  2BBF               	goto	l11033
  2056                           	line	391
  2057                           	
  2058  04B2                     l2276:	
  2059                           	line	308
  2060  04B2  2BBF               	goto	l11033
  2061                           	
  2062  04B3                     l2277:	
  2063                           	line	392
  2064                           	
  2065  04B3                     l2278:	
  2066                           	global	start
  2067  04B3  120A  118A  2812   	ljmp	start
  2068                           	opt stack 0
  2069                           GLOBAL	__end_of_main
  2070  04B6                     	__end_of_main:
  2071 ;; =============== function _main ends ============
  2072                           
  2073                           	signat	_main,88
  2074                           	global	_scan360
  2075                           psect	text894,local,class=CODE,delta=2
  2076                           global __ptext894
  2077  0DDA                     __ptext894:
  2078                           
  2079 ;; *************** function _scan360 *****************
  2080 ;; Defined at:
  2081 ;;		line 268 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  steps           2   64[BANK0 ] int 
  2086 ;;  lowestSteps     2   62[BANK0 ] int 
  2087 ;;  lowestVal       2   60[BANK0 ] int 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2   58[BANK0 ] int 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       2       0       0       0
  2098 ;;      Locals:         0       6       0       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         0       8       0       0       0
  2101 ;;Total ram usage:        8 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    7
  2104 ;; This function calls:
  2105 ;;		_readAvgDistance
  2106 ;;		_rotate
  2107 ;;		_UpdateDisplay
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           psect	text894
  2113                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2114                           	line	268
  2115                           	global	__size_of_scan360
  2116  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  2117                           	
  2118  0DDA                     _scan360:	
  2119                           	opt	stack 0
  2120                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2121                           	line	269
  2122                           	
  2123  0DDA                     l10997:	
  2124                           ;Main.c: 269: int lowestVal = 0, lowestSteps = 0;
  2125  0DDA  1283               	bcf	status, 5	;RP0=0, select bank0
  2126  0DDB  1303               	bcf	status, 6	;RP1=0, select bank0
  2127  0DDC  01DC               	clrf	(scan360@lowestVal)
  2128  0DDD  01DD               	clrf	(scan360@lowestVal+1)
  2129  0DDE  01DE               	clrf	(scan360@lowestSteps)
  2130  0DDF  01DF               	clrf	(scan360@lowestSteps+1)
  2131                           	line	271
  2132                           ;Main.c: 271: for (int steps = 0; steps < 400; steps++)
  2133  0DE0  01E0               	clrf	(scan360@steps)
  2134  0DE1  01E1               	clrf	(scan360@steps+1)
  2135                           	
  2136  0DE2                     l10999:	
  2137  0DE2  0861               	movf	(scan360@steps+1),w
  2138  0DE3  3A80               	xorlw	80h
  2139  0DE4  00FF               	movwf	btemp+1
  2140  0DE5  3081               	movlw	(high(0190h))^80h
  2141  0DE6  027F               	subwf	btemp+1,w
  2142  0DE7  1D03               	skipz
  2143  0DE8  2DEB               	goto	u4535
  2144  0DE9  3090               	movlw	low(0190h)
  2145  0DEA  0260               	subwf	(scan360@steps),w
  2146  0DEB                     u4535:
  2147                           
  2148  0DEB  1C03               	skipc
  2149  0DEC  2DEE               	goto	u4531
  2150  0DED  2DEF               	goto	u4530
  2151  0DEE                     u4531:
  2152  0DEE  2DF1               	goto	l11003
  2153  0DEF                     u4530:
  2154  0DEF  2E4A               	goto	l11023
  2155                           	
  2156  0DF0                     l11001:	
  2157  0DF0  2E4A               	goto	l11023
  2158                           	line	272
  2159                           	
  2160  0DF1                     l2250:	
  2161                           	line	273
  2162                           	
  2163  0DF1                     l11003:	
  2164                           ;Main.c: 272: {
  2165                           ;Main.c: 273: readAvgDistance();
  2166  0DF1  120A  158A  2585   	fcall	_readAvgDistance
              120A  158A         
  2167                           	line	274
  2168                           	
  2169  0DF6                     l11005:	
  2170                           ;Main.c: 274: if (adcVal > lowestVal)
  2171  0DF6  1283               	bcf	status, 5	;RP0=0, select bank0
  2172  0DF7  1303               	bcf	status, 6	;RP1=0, select bank0
  2173  0DF8  086B               	movf	(_adcVal+1),w	;volatile
  2174  0DF9  025D               	subwf	(scan360@lowestVal+1),w
  2175  0DFA  1D03               	skipz
  2176  0DFB  2DFE               	goto	u4545
  2177  0DFC  086A               	movf	(_adcVal),w	;volatile
  2178  0DFD  025C               	subwf	(scan360@lowestVal),w
  2179  0DFE                     u4545:
  2180  0DFE  1803               	skipnc
  2181  0DFF  2E01               	goto	u4541
  2182  0E00  2E02               	goto	u4540
  2183  0E01                     u4541:
  2184  0E01  2E0F               	goto	l11009
  2185  0E02                     u4540:
  2186                           	line	276
  2187                           	
  2188  0E02                     l11007:	
  2189                           ;Main.c: 275: {
  2190                           ;Main.c: 276: lowestVal = adcVal;
  2191  0E02  086B               	movf	(_adcVal+1),w	;volatile
  2192  0E03  01DD               	clrf	(scan360@lowestVal+1)	;volatile
  2193  0E04  07DD               	addwf	(scan360@lowestVal+1)	;volatile
  2194  0E05  086A               	movf	(_adcVal),w	;volatile
  2195  0E06  01DC               	clrf	(scan360@lowestVal)	;volatile
  2196  0E07  07DC               	addwf	(scan360@lowestVal)	;volatile
  2197                           
  2198                           	line	277
  2199                           ;Main.c: 277: lowestSteps = steps;
  2200  0E08  0861               	movf	(scan360@steps+1),w
  2201  0E09  01DF               	clrf	(scan360@lowestSteps+1)
  2202  0E0A  07DF               	addwf	(scan360@lowestSteps+1)
  2203  0E0B  0860               	movf	(scan360@steps),w
  2204  0E0C  01DE               	clrf	(scan360@lowestSteps)
  2205  0E0D  07DE               	addwf	(scan360@lowestSteps)
  2206                           
  2207  0E0E  2E0F               	goto	l11009
  2208                           	line	279
  2209                           	
  2210  0E0F                     l2252:	
  2211                           	line	280
  2212                           	
  2213  0E0F                     l11009:	
  2214                           ;Main.c: 279: }
  2215                           ;Main.c: 280: rotate(1, 1);
  2216  0E0F  3001               	movlw	low(01h)
  2217  0E10  00A3               	movwf	(?_rotate)
  2218  0E11  3000               	movlw	high(01h)
  2219  0E12  00A4               	movwf	((?_rotate))+1
  2220  0E13  01A5               	clrf	0+(?_rotate)+02h
  2221  0E14  1403               	bsf	status,0
  2222  0E15  0DA5               	rlf	0+(?_rotate)+02h,f
  2223  0E16  120A  158A  2535   	fcall	_rotate
              120A  158A         
  2224                           	line	282
  2225                           	
  2226  0E1B                     l11011:	
  2227                           ;Main.c: 282: if (RTC_FLAG_250MS == 1)
  2228  0E1B  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2229  0E1C  2E1E               	goto	u4551
  2230  0E1D  2E1F               	goto	u4550
  2231  0E1E                     u4551:
  2232  0E1E  2E26               	goto	l11017
  2233  0E1F                     u4550:
  2234                           	line	284
  2235                           	
  2236  0E1F                     l11013:	
  2237                           ;Main.c: 283: {
  2238                           ;Main.c: 284: RTC_FLAG_250MS = 0;
  2239  0E1F  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2240                           	line	285
  2241                           	
  2242  0E20                     l11015:	
  2243                           ;Main.c: 285: UpdateDisplay();
  2244  0E20  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2245  0E25  2E26               	goto	l11017
  2246                           	line	286
  2247                           	
  2248  0E26                     l2253:	
  2249                           	line	287
  2250                           	
  2251  0E26                     l11017:	
  2252                           ;Main.c: 286: }
  2253                           ;Main.c: 287: test = lowestSteps;
  2254  0E26  1283               	bcf	status, 5	;RP0=0, select bank0
  2255  0E27  1303               	bcf	status, 6	;RP1=0, select bank0
  2256  0E28  085F               	movf	(scan360@lowestSteps+1),w
  2257  0E29  1683               	bsf	status, 5	;RP0=1, select bank1
  2258  0E2A  1303               	bcf	status, 6	;RP1=0, select bank1
  2259  0E2B  01CB               	clrf	(_test+1)^080h
  2260  0E2C  07CB               	addwf	(_test+1)^080h
  2261  0E2D  1283               	bcf	status, 5	;RP0=0, select bank0
  2262  0E2E  1303               	bcf	status, 6	;RP1=0, select bank0
  2263  0E2F  085E               	movf	(scan360@lowestSteps),w
  2264  0E30  1683               	bsf	status, 5	;RP0=1, select bank1
  2265  0E31  1303               	bcf	status, 6	;RP1=0, select bank1
  2266  0E32  01CA               	clrf	(_test)^080h
  2267  0E33  07CA               	addwf	(_test)^080h
  2268                           
  2269                           	line	271
  2270                           	
  2271  0E34                     l11019:	
  2272  0E34  3001               	movlw	low(01h)
  2273  0E35  1283               	bcf	status, 5	;RP0=0, select bank0
  2274  0E36  1303               	bcf	status, 6	;RP1=0, select bank0
  2275  0E37  07E0               	addwf	(scan360@steps),f
  2276  0E38  1803               	skipnc
  2277  0E39  0AE1               	incf	(scan360@steps+1),f
  2278  0E3A  3000               	movlw	high(01h)
  2279  0E3B  07E1               	addwf	(scan360@steps+1),f
  2280                           	
  2281  0E3C                     l11021:	
  2282  0E3C  0861               	movf	(scan360@steps+1),w
  2283  0E3D  3A80               	xorlw	80h
  2284  0E3E  00FF               	movwf	btemp+1
  2285  0E3F  3081               	movlw	(high(0190h))^80h
  2286  0E40  027F               	subwf	btemp+1,w
  2287  0E41  1D03               	skipz
  2288  0E42  2E45               	goto	u4565
  2289  0E43  3090               	movlw	low(0190h)
  2290  0E44  0260               	subwf	(scan360@steps),w
  2291  0E45                     u4565:
  2292                           
  2293  0E45  1C03               	skipc
  2294  0E46  2E48               	goto	u4561
  2295  0E47  2E49               	goto	u4560
  2296  0E48                     u4561:
  2297  0E48  2DF1               	goto	l11003
  2298  0E49                     u4560:
  2299  0E49  2E4A               	goto	l11023
  2300                           	
  2301  0E4A                     l2251:	
  2302                           	line	290
  2303                           	
  2304  0E4A                     l11023:	
  2305                           ;Main.c: 288: }
  2306                           ;Main.c: 290: return lowestSteps;
  2307  0E4A  1283               	bcf	status, 5	;RP0=0, select bank0
  2308  0E4B  1303               	bcf	status, 6	;RP1=0, select bank0
  2309  0E4C  085F               	movf	(scan360@lowestSteps+1),w
  2310  0E4D  01DB               	clrf	(?_scan360+1)
  2311  0E4E  07DB               	addwf	(?_scan360+1)
  2312  0E4F  085E               	movf	(scan360@lowestSteps),w
  2313  0E50  01DA               	clrf	(?_scan360)
  2314  0E51  07DA               	addwf	(?_scan360)
  2315                           
  2316  0E52  2E53               	goto	l2254
  2317                           	
  2318  0E53                     l11025:	
  2319                           	line	291
  2320                           	
  2321  0E53                     l2254:	
  2322  0E53  0008               	return
  2323                           	opt stack 0
  2324                           GLOBAL	__end_of_scan360
  2325  0E54                     	__end_of_scan360:
  2326 ;; =============== function _scan360 ends ============
  2327                           
  2328                           	signat	_scan360,90
  2329                           	global	_ChargeMode
  2330                           psect	text895,local,class=CODE,delta=2
  2331                           global __ptext895
  2332  0C58                     __ptext895:
  2333                           
  2334 ;; *************** function _ChargeMode *****************
  2335 ;; Defined at:
  2336 ;;		line 214 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;		None               void
  2343 ;; Registers used:
  2344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2350 ;;      Params:         0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0
  2352 ;;      Temps:          0       1       0       0       0
  2353 ;;      Totals:         0       1       0       0       0
  2354 ;;Total ram usage:        1 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    6
  2357 ;; This function calls:
  2358 ;;		_ser_putch
  2359 ;;		_UpdateDisplay
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           psect	text895
  2365                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2366                           	line	214
  2367                           	global	__size_of_ChargeMode
  2368  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2369                           	
  2370  0C58                     _ChargeMode:	
  2371                           	opt	stack 1
  2372                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2373                           	line	216
  2374                           	
  2375  0C58                     l10975:	
  2376                           ;Main.c: 216: currentMenu = 2;
  2377  0C58  3002               	movlw	(02h)
  2378  0C59  1283               	bcf	status, 5	;RP0=0, select bank0
  2379  0C5A  1303               	bcf	status, 6	;RP1=0, select bank0
  2380  0C5B  00DA               	movwf	(??_ChargeMode+0)+0
  2381  0C5C  085A               	movf	(??_ChargeMode+0)+0,w
  2382  0C5D  1683               	bsf	status, 5	;RP0=1, select bank1
  2383  0C5E  1303               	bcf	status, 6	;RP1=0, select bank1
  2384  0C5F  00D7               	movwf	(_currentMenu)^080h	;volatile
  2385                           	line	217
  2386                           	
  2387  0C60                     l10977:	
  2388                           ;Main.c: 217: ser_putch(128);
  2389  0C60  3080               	movlw	(080h)
  2390  0C61  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  2391  0C66  2C67               	goto	l10979
  2392                           	line	219
  2393                           ;Main.c: 219: while (1)
  2394                           	
  2395  0C67                     l2235:	
  2396                           	line	221
  2397                           	
  2398  0C67                     l10979:	
  2399                           ;Main.c: 220: {
  2400                           ;Main.c: 221: if (RTC_FLAG_250MS == 1)
  2401  0C67  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2402  0C68  2C6A               	goto	u4521
  2403  0C69  2C6B               	goto	u4520
  2404  0C6A                     u4521:
  2405  0C6A  2C8A               	goto	l10995
  2406  0C6B                     u4520:
  2407                           	line	223
  2408                           	
  2409  0C6B                     l10981:	
  2410                           ;Main.c: 222: {
  2411                           ;Main.c: 223: RTC_FLAG_250MS = 0;
  2412  0C6B  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2413                           	line	224
  2414                           	
  2415  0C6C                     l10983:	
  2416                           ;Main.c: 224: UpdateDisplay();
  2417  0C6C  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2418  0C71  2C8A               	goto	l10995
  2419                           	line	225
  2420                           	
  2421  0C72                     l2236:	
  2422                           	line	226
  2423                           ;Main.c: 225: }
  2424                           ;Main.c: 226: switch (buttonPressed)
  2425  0C72  2C8A               	goto	l10995
  2426                           	line	228
  2427                           ;Main.c: 227: {
  2428                           ;Main.c: 228: case 1:
  2429                           	
  2430  0C73                     l2238:	
  2431                           	line	231
  2432                           ;Main.c: 231: buttonPressed = 0;
  2433  0C73  01FD               	clrf	(_buttonPressed)	;volatile
  2434                           	line	233
  2435                           ;Main.c: 233: break;
  2436  0C74  2C67               	goto	l10979
  2437                           	line	234
  2438                           ;Main.c: 234: case 2:
  2439                           	
  2440  0C75                     l2240:	
  2441                           	line	237
  2442                           ;Main.c: 237: buttonPressed = 0;
  2443  0C75  01FD               	clrf	(_buttonPressed)	;volatile
  2444                           	line	239
  2445                           ;Main.c: 239: break;
  2446  0C76  2C67               	goto	l10979
  2447                           	line	240
  2448                           ;Main.c: 240: case 3:
  2449                           	
  2450  0C77                     l2241:	
  2451                           	line	243
  2452                           ;Main.c: 243: buttonPressed = 0;
  2453  0C77  01FD               	clrf	(_buttonPressed)	;volatile
  2454                           	line	245
  2455                           ;Main.c: 245: break;
  2456  0C78  2C67               	goto	l10979
  2457                           	line	246
  2458                           ;Main.c: 246: case 4:
  2459                           	
  2460  0C79                     l2242:	
  2461                           	line	249
  2462                           ;Main.c: 249: buttonPressed = 0;
  2463  0C79  01FD               	clrf	(_buttonPressed)	;volatile
  2464                           	line	251
  2465                           ;Main.c: 251: break;
  2466  0C7A  2C67               	goto	l10979
  2467                           	line	252
  2468                           ;Main.c: 252: case 5:
  2469                           	
  2470  0C7B                     l2243:	
  2471                           	line	253
  2472                           	
  2473  0C7B                     l10985:	
  2474                           ;Main.c: 253: ser_putch(132);
  2475  0C7B  3084               	movlw	(084h)
  2476  0C7C  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  2477                           	line	255
  2478                           	
  2479  0C81                     l10987:	
  2480                           ;Main.c: 255: buttonPressed = 0;
  2481  0C81  01FD               	clrf	(_buttonPressed)	;volatile
  2482                           	line	256
  2483                           	
  2484  0C82                     l10989:	
  2485                           ;Main.c: 256: currentMenu = 0;
  2486  0C82  1683               	bsf	status, 5	;RP0=1, select bank1
  2487  0C83  1303               	bcf	status, 6	;RP1=0, select bank1
  2488  0C84  01D7               	clrf	(_currentMenu)^080h	;volatile
  2489  0C85  2C9D               	goto	l2244
  2490                           	line	257
  2491                           	
  2492  0C86                     l10991:	
  2493                           ;Main.c: 257: return;
  2494  0C86  2C9D               	goto	l2244
  2495                           	line	259
  2496                           ;Main.c: 259: default:
  2497                           	
  2498  0C87                     l2245:	
  2499                           	line	260
  2500                           ;Main.c: 260: buttonPressed = 0;
  2501  0C87  01FD               	clrf	(_buttonPressed)	;volatile
  2502                           	line	261
  2503                           ;Main.c: 261: break;
  2504  0C88  2C67               	goto	l10979
  2505                           	line	262
  2506                           	
  2507  0C89                     l10993:	
  2508                           ;Main.c: 262: }
  2509  0C89  2C67               	goto	l10979
  2510                           	line	226
  2511                           	
  2512  0C8A                     l2237:	
  2513                           	
  2514  0C8A                     l10995:	
  2515  0C8A  087D               	movf	(_buttonPressed),w	;volatile
  2516                           	; Switch size 1, requested type "space"
  2517                           ; Number of cases is 5, Range of values is 1 to 5
  2518                           ; switch strategies available:
  2519                           ; Name         Instructions Cycles
  2520                           ; simple_byte           16     9 (average)
  2521                           ; direct_byte           26    11 (fixed)
  2522                           ; jumptable            263     9 (fixed)
  2523                           ;	Chosen strategy is simple_byte
  2524                           
  2525                           	opt asmopt_off
  2526  0C8B  3A01               	xorlw	1^0	; case 1
  2527  0C8C  1903               	skipnz
  2528  0C8D  2C73               	goto	l2238
  2529  0C8E  3A03               	xorlw	2^1	; case 2
  2530  0C8F  1903               	skipnz
  2531  0C90  2C75               	goto	l2240
  2532  0C91  3A01               	xorlw	3^2	; case 3
  2533  0C92  1903               	skipnz
  2534  0C93  2C77               	goto	l2241
  2535  0C94  3A07               	xorlw	4^3	; case 4
  2536  0C95  1903               	skipnz
  2537  0C96  2C79               	goto	l2242
  2538  0C97  3A01               	xorlw	5^4	; case 5
  2539  0C98  1903               	skipnz
  2540  0C99  2C7B               	goto	l10985
  2541  0C9A  2C87               	goto	l2245
  2542                           	opt asmopt_on
  2543                           
  2544                           	line	262
  2545                           	
  2546  0C9B                     l2239:	
  2547  0C9B  2C67               	goto	l10979
  2548                           	line	263
  2549                           	
  2550  0C9C                     l2246:	
  2551                           	line	219
  2552  0C9C  2C67               	goto	l10979
  2553                           	
  2554  0C9D                     l2247:	
  2555                           	line	264
  2556                           	
  2557  0C9D                     l2244:	
  2558  0C9D  0008               	return
  2559                           	opt stack 0
  2560                           GLOBAL	__end_of_ChargeMode
  2561  0C9E                     	__end_of_ChargeMode:
  2562 ;; =============== function _ChargeMode ends ============
  2563                           
  2564                           	signat	_ChargeMode,88
  2565                           	global	_calibrateIR
  2566                           psect	text896,local,class=CODE,delta=2
  2567                           global __ptext896
  2568  079F                     __ptext896:
  2569                           
  2570 ;; *************** function _calibrateIR *****************
  2571 ;; Defined at:
  2572 ;;		line 163 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;		None               void
  2579 ;; Registers used:
  2580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0
  2589 ;;      Totals:         0       0       0       0       0
  2590 ;;Total ram usage:        0 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    6
  2593 ;; This function calls:
  2594 ;;		_rotate
  2595 ;;		_UpdateDisplay
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           psect	text896
  2601                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2602                           	line	163
  2603                           	global	__size_of_calibrateIR
  2604  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  2605                           	
  2606  079F                     _calibrateIR:	
  2607                           	opt	stack 1
  2608                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2609                           	line	165
  2610                           	
  2611  079F                     l10945:	
  2612                           ;Main.c: 165: currentMenu = 1;
  2613  079F  1683               	bsf	status, 5	;RP0=1, select bank1
  2614  07A0  1303               	bcf	status, 6	;RP1=0, select bank1
  2615  07A1  01D7               	clrf	(_currentMenu)^080h	;volatile
  2616  07A2  1403               	bsf	status,0
  2617  07A3  0DD7               	rlf	(_currentMenu)^080h,f	;volatile
  2618                           	line	166
  2619                           	
  2620  07A4                     l10947:	
  2621                           ;Main.c: 166: rotate(8, 0);
  2622  07A4  3008               	movlw	low(08h)
  2623  07A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2624  07A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2625  07A7  00A3               	movwf	(?_rotate)
  2626  07A8  3000               	movlw	high(08h)
  2627  07A9  00A4               	movwf	((?_rotate))+1
  2628  07AA  01A5               	clrf	0+(?_rotate)+02h
  2629  07AB  120A  158A  2535   	fcall	_rotate
              120A  118A         
  2630  07B0  2FB1               	goto	l10949
  2631                           	line	167
  2632                           ;Main.c: 167: while (1)
  2633                           	
  2634  07B1                     l2220:	
  2635                           	line	169
  2636                           	
  2637  07B1                     l10949:	
  2638                           ;Main.c: 168: {
  2639                           ;Main.c: 169: if (RTC_FLAG_250MS == 1)
  2640  07B1  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2641  07B2  2FB4               	goto	u4511
  2642  07B3  2FB5               	goto	u4510
  2643  07B4                     u4511:
  2644  07B4  2FE9               	goto	l10973
  2645  07B5                     u4510:
  2646                           	line	171
  2647                           	
  2648  07B5                     l10951:	
  2649                           ;Main.c: 170: {
  2650                           ;Main.c: 171: RTC_FLAG_250MS = 0;
  2651  07B5  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2652                           	line	172
  2653                           	
  2654  07B6                     l10953:	
  2655                           ;Main.c: 172: UpdateDisplay();
  2656  07B6  120A  118A  2238   	fcall	_UpdateDisplay
              120A  118A         
  2657  07BB  2FE9               	goto	l10973
  2658                           	line	173
  2659                           	
  2660  07BC                     l2221:	
  2661                           	line	174
  2662                           ;Main.c: 173: }
  2663                           ;Main.c: 174: switch (buttonPressed)
  2664  07BC  2FE9               	goto	l10973
  2665                           	line	176
  2666                           ;Main.c: 175: {
  2667                           ;Main.c: 176: case 1:
  2668                           	
  2669  07BD                     l2223:	
  2670                           	line	179
  2671                           ;Main.c: 179: buttonPressed = 0;
  2672  07BD  01FD               	clrf	(_buttonPressed)	;volatile
  2673                           	line	181
  2674                           ;Main.c: 181: break;
  2675  07BE  2FB1               	goto	l10949
  2676                           	line	182
  2677                           ;Main.c: 182: case 2:
  2678                           	
  2679  07BF                     l2225:	
  2680                           	line	185
  2681                           ;Main.c: 185: buttonPressed = 0;
  2682  07BF  01FD               	clrf	(_buttonPressed)	;volatile
  2683                           	line	187
  2684                           ;Main.c: 187: break;
  2685  07C0  2FB1               	goto	l10949
  2686                           	line	188
  2687                           ;Main.c: 188: case 3:
  2688                           	
  2689  07C1                     l2226:	
  2690                           	line	189
  2691                           	
  2692  07C1                     l10955:	
  2693                           ;Main.c: 189: rotate(1, 1);
  2694  07C1  3001               	movlw	low(01h)
  2695  07C2  1283               	bcf	status, 5	;RP0=0, select bank0
  2696  07C3  1303               	bcf	status, 6	;RP1=0, select bank0
  2697  07C4  00A3               	movwf	(?_rotate)
  2698  07C5  3000               	movlw	high(01h)
  2699  07C6  00A4               	movwf	((?_rotate))+1
  2700  07C7  01A5               	clrf	0+(?_rotate)+02h
  2701  07C8  1403               	bsf	status,0
  2702  07C9  0DA5               	rlf	0+(?_rotate)+02h,f
  2703  07CA  120A  158A  2535   	fcall	_rotate
              120A  118A         
  2704                           	line	191
  2705                           	
  2706  07CF                     l10957:	
  2707                           ;Main.c: 191: buttonPressed = 0;
  2708  07CF  01FD               	clrf	(_buttonPressed)	;volatile
  2709                           	line	193
  2710                           ;Main.c: 193: break;
  2711  07D0  2FB1               	goto	l10949
  2712                           	line	194
  2713                           ;Main.c: 194: case 4:
  2714                           	
  2715  07D1                     l2227:	
  2716                           	line	195
  2717                           	
  2718  07D1                     l10959:	
  2719                           ;Main.c: 195: rotate(1, 0);
  2720  07D1  3001               	movlw	low(01h)
  2721  07D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2722  07D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2723  07D4  00A3               	movwf	(?_rotate)
  2724  07D5  3000               	movlw	high(01h)
  2725  07D6  00A4               	movwf	((?_rotate))+1
  2726  07D7  01A5               	clrf	0+(?_rotate)+02h
  2727  07D8  120A  158A  2535   	fcall	_rotate
              120A  118A         
  2728                           	line	197
  2729                           	
  2730  07DD                     l10961:	
  2731                           ;Main.c: 197: buttonPressed = 0;
  2732  07DD  01FD               	clrf	(_buttonPressed)	;volatile
  2733                           	line	199
  2734                           ;Main.c: 199: break;
  2735  07DE  2FB1               	goto	l10949
  2736                           	line	200
  2737                           ;Main.c: 200: case 5:
  2738                           	
  2739  07DF                     l2228:	
  2740                           	line	201
  2741                           	
  2742  07DF                     l10963:	
  2743                           ;Main.c: 201: totalSteps = 0;
  2744  07DF  1683               	bsf	status, 5	;RP0=1, select bank1
  2745  07E0  1303               	bcf	status, 6	;RP1=0, select bank1
  2746  07E1  01CE               	clrf	(_totalSteps)^080h
  2747  07E2  01CF               	clrf	(_totalSteps+1)^080h
  2748                           	line	203
  2749                           	
  2750  07E3                     l10965:	
  2751                           ;Main.c: 203: buttonPressed = 0;
  2752  07E3  01FD               	clrf	(_buttonPressed)	;volatile
  2753                           	line	204
  2754                           	
  2755  07E4                     l10967:	
  2756                           ;Main.c: 204: currentMenu = 0;
  2757  07E4  01D7               	clrf	(_currentMenu)^080h	;volatile
  2758  07E5  2FFC               	goto	l2229
  2759                           	line	205
  2760                           	
  2761  07E6                     l10969:	
  2762                           ;Main.c: 205: return;
  2763  07E6  2FFC               	goto	l2229
  2764                           	line	207
  2765                           ;Main.c: 207: default:
  2766                           	
  2767  07E7                     l2230:	
  2768                           	line	209
  2769                           ;Main.c: 209: break;
  2770  07E7  2FB1               	goto	l10949
  2771                           	line	210
  2772                           	
  2773  07E8                     l10971:	
  2774                           ;Main.c: 210: }
  2775  07E8  2FB1               	goto	l10949
  2776                           	line	174
  2777                           	
  2778  07E9                     l2222:	
  2779                           	
  2780  07E9                     l10973:	
  2781  07E9  087D               	movf	(_buttonPressed),w	;volatile
  2782                           	; Switch size 1, requested type "space"
  2783                           ; Number of cases is 5, Range of values is 1 to 5
  2784                           ; switch strategies available:
  2785                           ; Name         Instructions Cycles
  2786                           ; simple_byte           16     9 (average)
  2787                           ; direct_byte           26    11 (fixed)
  2788                           ; jumptable            263     9 (fixed)
  2789                           ;	Chosen strategy is simple_byte
  2790                           
  2791                           	opt asmopt_off
  2792  07EA  3A01               	xorlw	1^0	; case 1
  2793  07EB  1903               	skipnz
  2794  07EC  2FBD               	goto	l2223
  2795  07ED  3A03               	xorlw	2^1	; case 2
  2796  07EE  1903               	skipnz
  2797  07EF  2FBF               	goto	l2225
  2798  07F0  3A01               	xorlw	3^2	; case 3
  2799  07F1  1903               	skipnz
  2800  07F2  2FC1               	goto	l10955
  2801  07F3  3A07               	xorlw	4^3	; case 4
  2802  07F4  1903               	skipnz
  2803  07F5  2FD1               	goto	l10959
  2804  07F6  3A01               	xorlw	5^4	; case 5
  2805  07F7  1903               	skipnz
  2806  07F8  2FDF               	goto	l10963
  2807  07F9  2FB1               	goto	l10949
  2808                           	opt asmopt_on
  2809                           
  2810                           	line	210
  2811                           	
  2812  07FA                     l2224:	
  2813  07FA  2FB1               	goto	l10949
  2814                           	line	211
  2815                           	
  2816  07FB                     l2231:	
  2817                           	line	167
  2818  07FB  2FB1               	goto	l10949
  2819                           	
  2820  07FC                     l2232:	
  2821                           	line	212
  2822                           	
  2823  07FC                     l2229:	
  2824  07FC  0008               	return
  2825                           	opt stack 0
  2826                           GLOBAL	__end_of_calibrateIR
  2827  07FD                     	__end_of_calibrateIR:
  2828 ;; =============== function _calibrateIR ends ============
  2829                           
  2830                           	signat	_calibrateIR,88
  2831                           	global	_readAvgDistance
  2832                           psect	text897,local,class=CODE,delta=2
  2833                           global __ptext897
  2834  0D85                     __ptext897:
  2835                           
  2836 ;; *************** function _readAvgDistance *****************
  2837 ;; Defined at:
  2838 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  i               2   18[BANK0 ] int 
  2843 ;;  fullval         2   16[BANK0 ] unsigned int 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;		None               void
  2846 ;; Registers used:
  2847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2853 ;;      Params:         0       0       0       0       0
  2854 ;;      Locals:         0       4       0       0       0
  2855 ;;      Temps:          0       0       0       0       0
  2856 ;;      Totals:         0       4       0       0       0
  2857 ;;Total ram usage:        4 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    6
  2860 ;; This function calls:
  2861 ;;		_readDistance
  2862 ;;		___lwdiv
  2863 ;;		_ADCconvert
  2864 ;; This function is called by:
  2865 ;;		_scan360
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           psect	text897
  2870                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  2871                           	line	10
  2872                           	global	__size_of_readAvgDistance
  2873  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  2874                           	
  2875  0D85                     _readAvgDistance:	
  2876                           	opt	stack 0
  2877                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2878                           	line	11
  2879                           	
  2880  0D85                     l10931:	
  2881                           ;infrared.c: 11: unsigned int fullval = 0;
  2882  0D85  1283               	bcf	status, 5	;RP0=0, select bank0
  2883  0D86  1303               	bcf	status, 6	;RP1=0, select bank0
  2884  0D87  01B0               	clrf	(readAvgDistance@fullval)
  2885  0D88  01B1               	clrf	(readAvgDistance@fullval+1)
  2886                           	line	14
  2887                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  2888  0D89  01B2               	clrf	(readAvgDistance@i)
  2889  0D8A  01B3               	clrf	(readAvgDistance@i+1)
  2890                           	
  2891  0D8B                     l10933:	
  2892  0D8B  0833               	movf	(readAvgDistance@i+1),w
  2893  0D8C  3A80               	xorlw	80h
  2894  0D8D  00FF               	movwf	btemp+1
  2895  0D8E  3080               	movlw	(high(0Ah))^80h
  2896  0D8F  027F               	subwf	btemp+1,w
  2897  0D90  1D03               	skipz
  2898  0D91  2D94               	goto	u4495
  2899  0D92  300A               	movlw	low(0Ah)
  2900  0D93  0232               	subwf	(readAvgDistance@i),w
  2901  0D94                     u4495:
  2902                           
  2903  0D94  1C03               	skipc
  2904  0D95  2D97               	goto	u4491
  2905  0D96  2D98               	goto	u4490
  2906  0D97                     u4491:
  2907  0D97  2D9A               	goto	l10937
  2908  0D98                     u4490:
  2909  0D98  2DBB               	goto	l10943
  2910                           	
  2911  0D99                     l10935:	
  2912  0D99  2DBB               	goto	l10943
  2913                           	line	15
  2914                           	
  2915  0D9A                     l2981:	
  2916                           	line	16
  2917                           	
  2918  0D9A                     l10937:	
  2919                           ;infrared.c: 15: {
  2920                           ;infrared.c: 16: fullval += readDistance();
  2921  0D9A  120A  158A  2179   	fcall	_readDistance
              120A  158A         
  2922  0D9F  1283               	bcf	status, 5	;RP0=0, select bank0
  2923  0DA0  1303               	bcf	status, 6	;RP1=0, select bank0
  2924  0DA1  0828               	movf	(0+(?_readDistance)),w
  2925  0DA2  07B0               	addwf	(readAvgDistance@fullval),f
  2926  0DA3  1803               	skipnc
  2927  0DA4  0AB1               	incf	(readAvgDistance@fullval+1),f
  2928  0DA5  0829               	movf	(1+(?_readDistance)),w
  2929  0DA6  07B1               	addwf	(readAvgDistance@fullval+1),f
  2930                           	line	14
  2931                           	
  2932  0DA7                     l10939:	
  2933  0DA7  3001               	movlw	low(01h)
  2934  0DA8  07B2               	addwf	(readAvgDistance@i),f
  2935  0DA9  1803               	skipnc
  2936  0DAA  0AB3               	incf	(readAvgDistance@i+1),f
  2937  0DAB  3000               	movlw	high(01h)
  2938  0DAC  07B3               	addwf	(readAvgDistance@i+1),f
  2939                           	
  2940  0DAD                     l10941:	
  2941  0DAD  0833               	movf	(readAvgDistance@i+1),w
  2942  0DAE  3A80               	xorlw	80h
  2943  0DAF  00FF               	movwf	btemp+1
  2944  0DB0  3080               	movlw	(high(0Ah))^80h
  2945  0DB1  027F               	subwf	btemp+1,w
  2946  0DB2  1D03               	skipz
  2947  0DB3  2DB6               	goto	u4505
  2948  0DB4  300A               	movlw	low(0Ah)
  2949  0DB5  0232               	subwf	(readAvgDistance@i),w
  2950  0DB6                     u4505:
  2951                           
  2952  0DB6  1C03               	skipc
  2953  0DB7  2DB9               	goto	u4501
  2954  0DB8  2DBA               	goto	u4500
  2955  0DB9                     u4501:
  2956  0DB9  2D9A               	goto	l10937
  2957  0DBA                     u4500:
  2958  0DBA  2DBB               	goto	l10943
  2959                           	
  2960  0DBB                     l2982:	
  2961                           	line	19
  2962                           	
  2963  0DBB                     l10943:	
  2964                           ;infrared.c: 18: }
  2965                           ;infrared.c: 19: adcVal = fullval / 10;
  2966  0DBB  300A               	movlw	low(0Ah)
  2967  0DBC  1283               	bcf	status, 5	;RP0=0, select bank0
  2968  0DBD  1303               	bcf	status, 6	;RP1=0, select bank0
  2969  0DBE  00A6               	movwf	(?___lwdiv)
  2970  0DBF  3000               	movlw	high(0Ah)
  2971  0DC0  00A7               	movwf	((?___lwdiv))+1
  2972  0DC1  0831               	movf	(readAvgDistance@fullval+1),w
  2973  0DC2  01A9               	clrf	1+(?___lwdiv)+02h
  2974  0DC3  07A9               	addwf	1+(?___lwdiv)+02h
  2975  0DC4  0830               	movf	(readAvgDistance@fullval),w
  2976  0DC5  01A8               	clrf	0+(?___lwdiv)+02h
  2977  0DC6  07A8               	addwf	0+(?___lwdiv)+02h
  2978                           
  2979  0DC7  120A  158A  24E5   	fcall	___lwdiv
              120A  158A         
  2980  0DCC  1283               	bcf	status, 5	;RP0=0, select bank0
  2981  0DCD  1303               	bcf	status, 6	;RP1=0, select bank0
  2982  0DCE  0827               	movf	(1+(?___lwdiv)),w
  2983  0DCF  01EB               	clrf	(_adcVal+1)	;volatile
  2984  0DD0  07EB               	addwf	(_adcVal+1)	;volatile
  2985  0DD1  0826               	movf	(0+(?___lwdiv)),w
  2986  0DD2  01EA               	clrf	(_adcVal)	;volatile
  2987  0DD3  07EA               	addwf	(_adcVal)	;volatile
  2988                           
  2989                           	line	20
  2990                           ;infrared.c: 20: ADCconvert();
  2991  0DD4  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  2992                           	line	21
  2993                           	
  2994  0DD9                     l2983:	
  2995  0DD9  0008               	return
  2996                           	opt stack 0
  2997                           GLOBAL	__end_of_readAvgDistance
  2998  0DDA                     	__end_of_readAvgDistance:
  2999 ;; =============== function _readAvgDistance ends ============
  3000                           
  3001                           	signat	_readAvgDistance,88
  3002                           	global	_UpdateDisplay
  3003                           psect	text898,local,class=CODE,delta=2
  3004                           global __ptext898
  3005  0238                     __ptext898:
  3006                           
  3007 ;; *************** function _UpdateDisplay *****************
  3008 ;; Defined at:
  3009 ;;		line 216 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  adcOutput      16   42[BANK0 ] unsigned char [16]
  3014 ;; Return value:  Size  Location     Type
  3015 ;;		None               void
  3016 ;; Registers used:
  3017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       0       0       0
  3024 ;;      Locals:         0      16       0       0       0
  3025 ;;      Temps:          0       5       0       0       0
  3026 ;;      Totals:         0      21       0       0       0
  3027 ;;Total ram usage:       21 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    5
  3030 ;; This function calls:
  3031 ;;		_lcd_write_control
  3032 ;;		_sprintf
  3033 ;;		_lcd_set_cursor
  3034 ;;		_lcd_write_string
  3035 ;;		___awmod
  3036 ;; This function is called by:
  3037 ;;		_calibrateIR
  3038 ;;		_ChargeMode
  3039 ;;		_scan360
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           psect	text898
  3044                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  3045                           	line	216
  3046                           	global	__size_of_UpdateDisplay
  3047  0179                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  3048                           	
  3049  0238                     _UpdateDisplay:	
  3050                           	opt	stack 1
  3051                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3052                           	line	217
  3053                           	
  3054  0238                     l10885:	
  3055                           ;HMI.c: 217: char adcOutput[16] = "";
  3056  0238  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3057  0239  0084               	movwf	fsr0
  3058  023A  3090               	movlw	low(UpdateDisplay@F1228)
  3059  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  3060  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  3061  023D  00C5               	movwf	(??_UpdateDisplay+0)+0
  3062  023E  0804               	movf	fsr0,w
  3063  023F  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  3064  0240  3010               	movlw	16
  3065  0241  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  3066  0242                     u4470:
  3067  0242  0845               	movf	(??_UpdateDisplay+0)+0,w
  3068  0243  0084               	movwf	fsr0
  3069  0244  1783               	bsf	status, 7	;select IRP bank3
  3070                           	
  3071  0245  0800               	movf	indf,w
  3072  0246  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  3073  0247  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  3074  0248  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  3075  0249  0084               	movwf	fsr0
  3076  024A  1383               	bcf	status, 7	;select IRP bank0
  3077                           	
  3078  024B  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  3079  024C  0080               	movwf	indf
  3080  024D  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  3081  024E  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  3082  024F  2A42               	goto	u4470
  3083                           	line	218
  3084                           ;HMI.c: 218: switch (currentMenu)
  3085  0250  2BA3               	goto	l10929
  3086                           	line	221
  3087                           ;HMI.c: 219: {
  3088                           ;HMI.c: 221: case 0:
  3089                           	
  3090  0251                     l4538:	
  3091                           	line	224
  3092                           	
  3093  0251                     l10887:	
  3094                           ;HMI.c: 224: lcd_write_control(0b00000001);
  3095  0251  3001               	movlw	(01h)
  3096  0252  120A  158A  214F   	fcall	_lcd_write_control
              120A  118A         
  3097                           	line	226
  3098                           	
  3099  0257                     l10889:	
  3100                           ;HMI.c: 226: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, distTravelled);
  3101  0257  301B               	movlw	((STR_13-__stringbase))&0ffh
  3102  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  3103  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  3104  025A  00C5               	movwf	(??_UpdateDisplay+0)+0
  3105  025B  0845               	movf	(??_UpdateDisplay+0)+0,w
  3106  025C  00B4               	movwf	(?_sprintf)
  3107  025D  086B               	movf	(_adcVal+1),w	;volatile
  3108  025E  01B6               	clrf	1+(?_sprintf)+01h
  3109  025F  07B6               	addwf	1+(?_sprintf)+01h
  3110  0260  086A               	movf	(_adcVal),w	;volatile
  3111  0261  01B5               	clrf	0+(?_sprintf)+01h
  3112  0262  07B5               	addwf	0+(?_sprintf)+01h
  3113                           
  3114  0263  1683               	bsf	status, 5	;RP0=1, select bank1
  3115  0264  1303               	bcf	status, 6	;RP1=0, select bank1
  3116  0265  0841               	movf	(_distTravelled+1)^080h,w	;volatile
  3117  0266  1283               	bcf	status, 5	;RP0=0, select bank0
  3118  0267  1303               	bcf	status, 6	;RP1=0, select bank0
  3119  0268  01B8               	clrf	1+(?_sprintf)+03h
  3120  0269  07B8               	addwf	1+(?_sprintf)+03h
  3121  026A  1683               	bsf	status, 5	;RP0=1, select bank1
  3122  026B  1303               	bcf	status, 6	;RP1=0, select bank1
  3123  026C  0840               	movf	(_distTravelled)^080h,w	;volatile
  3124  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  3125  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  3126  026F  01B7               	clrf	0+(?_sprintf)+03h
  3127  0270  07B7               	addwf	0+(?_sprintf)+03h
  3128                           
  3129  0271  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3130  0272  120A  118A  24B6   	fcall	_sprintf
              120A  118A         
  3131                           	line	229
  3132                           	
  3133  0277                     l10891:	
  3134                           ;HMI.c: 229: lcd_set_cursor(0x00);
  3135  0277  3000               	movlw	(0)
  3136  0278  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3137                           	line	230
  3138                           ;HMI.c: 230: lcd_write_string(adcOutput);
  3139  027D  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3140  027E  1283               	bcf	status, 5	;RP0=0, select bank0
  3141  027F  1303               	bcf	status, 6	;RP1=0, select bank0
  3142  0280  00A7               	movwf	(?_lcd_write_string)
  3143  0281  3000               	movlw	(0x0/2)
  3144  0282  00A8               	movwf	(?_lcd_write_string+1)
  3145  0283  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3146                           	line	232
  3147                           	
  3148  0288                     l10893:	
  3149                           ;HMI.c: 232: lcd_set_cursor(0x40);
  3150  0288  3040               	movlw	(040h)
  3151  0289  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3152                           	line	233
  3153                           	
  3154  028E                     l10895:	
  3155                           ;HMI.c: 233: if (pos > 0)
  3156  028E  1683               	bsf	status, 5	;RP0=1, select bank1
  3157  028F  1303               	bcf	status, 6	;RP1=0, select bank1
  3158  0290  0849               	movf	(_pos+1)^080h,w
  3159  0291  3A80               	xorlw	80h
  3160  0292  00FF               	movwf	btemp+1
  3161  0293  3080               	movlw	(high(01h))^80h
  3162  0294  027F               	subwf	btemp+1,w
  3163  0295  1D03               	skipz
  3164  0296  2A99               	goto	u4485
  3165  0297  3001               	movlw	low(01h)
  3166  0298  0248               	subwf	(_pos)^080h,w
  3167  0299                     u4485:
  3168                           
  3169  0299  1C03               	skipc
  3170  029A  2A9C               	goto	u4481
  3171  029B  2A9D               	goto	u4480
  3172  029C                     u4481:
  3173  029C  2AB0               	goto	l10899
  3174  029D                     u4480:
  3175                           	line	234
  3176                           	
  3177  029D                     l10897:	
  3178                           ;HMI.c: 234: lcd_write_string(shortMenuStrings[pos - 1]);
  3179  029D  1683               	bsf	status, 5	;RP0=1, select bank1
  3180  029E  1303               	bcf	status, 6	;RP1=0, select bank1
  3181  029F  0848               	movf	(_pos)^080h,w
  3182  02A0  3EFF               	addlw	0FFh
  3183  02A1  3EE5               	addlw	_shortMenuStrings&0ffh
  3184  02A2  0084               	movwf	fsr0
  3185  02A3  1383               	bcf	status, 7	;select IRP bank1
  3186  02A4  0800               	movf	indf,w
  3187  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  3188  02A6  1303               	bcf	status, 6	;RP1=0, select bank0
  3189  02A7  00A7               	movwf	(?_lcd_write_string)
  3190  02A8  3080               	movlw	80h
  3191  02A9  00A8               	movwf	(?_lcd_write_string+1)
  3192  02AA  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3193  02AF  2AC3               	goto	l10901
  3194                           	line	235
  3195                           	
  3196  02B0                     l4539:	
  3197                           	line	236
  3198                           	
  3199  02B0                     l10899:	
  3200                           ;HMI.c: 235: else
  3201                           ;HMI.c: 236: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  3202  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
  3203  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
  3204  02B2  0848               	movf	(_pos)^080h,w
  3205  02B3  3E05               	addlw	05h
  3206  02B4  3EE5               	addlw	_shortMenuStrings&0ffh
  3207  02B5  0084               	movwf	fsr0
  3208  02B6  1383               	bcf	status, 7	;select IRP bank1
  3209  02B7  0800               	movf	indf,w
  3210  02B8  1283               	bcf	status, 5	;RP0=0, select bank0
  3211  02B9  1303               	bcf	status, 6	;RP1=0, select bank0
  3212  02BA  00A7               	movwf	(?_lcd_write_string)
  3213  02BB  3080               	movlw	80h
  3214  02BC  00A8               	movwf	(?_lcd_write_string+1)
  3215  02BD  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3216  02C2  2AC3               	goto	l10901
  3217                           	
  3218  02C3                     l4540:	
  3219                           	line	237
  3220                           	
  3221  02C3                     l10901:	
  3222                           ;HMI.c: 237: lcd_set_cursor(0x44);
  3223  02C3  3044               	movlw	(044h)
  3224  02C4  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3225                           	line	238
  3226                           	
  3227  02C9                     l10903:	
  3228                           ;HMI.c: 238: lcd_write_string(menuStrings[pos]);
  3229  02C9  1683               	bsf	status, 5	;RP0=1, select bank1
  3230  02CA  1303               	bcf	status, 6	;RP1=0, select bank1
  3231  02CB  0848               	movf	(_pos)^080h,w
  3232  02CC  3EDF               	addlw	_menuStrings&0ffh
  3233  02CD  0084               	movwf	fsr0
  3234  02CE  1383               	bcf	status, 7	;select IRP bank1
  3235  02CF  0800               	movf	indf,w
  3236  02D0  1283               	bcf	status, 5	;RP0=0, select bank0
  3237  02D1  1303               	bcf	status, 6	;RP1=0, select bank0
  3238  02D2  00A7               	movwf	(?_lcd_write_string)
  3239  02D3  3080               	movlw	80h
  3240  02D4  00A8               	movwf	(?_lcd_write_string+1)
  3241  02D5  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3242                           	line	239
  3243                           ;HMI.c: 239: lcd_set_cursor(0x4D);
  3244  02DA  304D               	movlw	(04Dh)
  3245  02DB  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3246                           	line	240
  3247                           	
  3248  02E0                     l10905:	
  3249                           ;HMI.c: 240: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  3250  02E0  3006               	movlw	low(06h)
  3251  02E1  1283               	bcf	status, 5	;RP0=0, select bank0
  3252  02E2  1303               	bcf	status, 6	;RP1=0, select bank0
  3253  02E3  00A0               	movwf	(?___awmod)
  3254  02E4  3000               	movlw	high(06h)
  3255  02E5  00A1               	movwf	((?___awmod))+1
  3256  02E6  1683               	bsf	status, 5	;RP0=1, select bank1
  3257  02E7  1303               	bcf	status, 6	;RP1=0, select bank1
  3258  02E8  0848               	movf	(_pos)^080h,w
  3259  02E9  3E01               	addlw	low(01h)
  3260  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  3261  02EB  1303               	bcf	status, 6	;RP1=0, select bank0
  3262  02EC  00A2               	movwf	0+(?___awmod)+02h
  3263  02ED  1683               	bsf	status, 5	;RP0=1, select bank1
  3264  02EE  1303               	bcf	status, 6	;RP1=0, select bank1
  3265  02EF  0849               	movf	(_pos+1)^080h,w
  3266  02F0  1803               	skipnc
  3267  02F1  3E01               	addlw	1
  3268  02F2  3E00               	addlw	high(01h)
  3269  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  3270  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  3271  02F5  00A3               	movwf	1+0+(?___awmod)+02h
  3272  02F6  120A  118A  2692   	fcall	___awmod
              120A  118A         
  3273  02FB  1283               	bcf	status, 5	;RP0=0, select bank0
  3274  02FC  1303               	bcf	status, 6	;RP1=0, select bank0
  3275  02FD  0820               	movf	(0+(?___awmod)),w
  3276  02FE  3EE5               	addlw	_shortMenuStrings&0ffh
  3277  02FF  0084               	movwf	fsr0
  3278  0300  1383               	bcf	status, 7	;select IRP bank1
  3279  0301  0800               	movf	indf,w
  3280  0302  00A7               	movwf	(?_lcd_write_string)
  3281  0303  3080               	movlw	80h
  3282  0304  00A8               	movwf	(?_lcd_write_string+1)
  3283  0305  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3284                           	line	241
  3285                           ;HMI.c: 241: break;
  3286  030A  2BB0               	goto	l4545
  3287                           	line	242
  3288                           ;HMI.c: 242: case 1:
  3289                           	
  3290  030B                     l4542:	
  3291                           	line	243
  3292                           	
  3293  030B                     l10907:	
  3294                           ;HMI.c: 243: lcd_write_control(0b00000001);
  3295  030B  3001               	movlw	(01h)
  3296  030C  120A  158A  214F   	fcall	_lcd_write_control
              120A  118A         
  3297                           	line	245
  3298                           	
  3299  0311                     l10909:	
  3300                           ;HMI.c: 245: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  3301  0311  301B               	movlw	((STR_14-__stringbase))&0ffh
  3302  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  3303  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  3304  0314  00C5               	movwf	(??_UpdateDisplay+0)+0
  3305  0315  0845               	movf	(??_UpdateDisplay+0)+0,w
  3306  0316  00B4               	movwf	(?_sprintf)
  3307  0317  1683               	bsf	status, 5	;RP0=1, select bank1
  3308  0318  1303               	bcf	status, 6	;RP1=0, select bank1
  3309  0319  0859               	movf	(_highByte)^080h,w
  3310  031A  1283               	bcf	status, 5	;RP0=0, select bank0
  3311  031B  1303               	bcf	status, 6	;RP1=0, select bank0
  3312  031C  00C6               	movwf	(??_UpdateDisplay+1)+0
  3313  031D  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  3314  031E  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  3315  031F  00B5               	movwf	0+(?_sprintf)+01h
  3316  0320  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  3317  0321  00B6               	movwf	1+(?_sprintf)+01h
  3318  0322  1683               	bsf	status, 5	;RP0=1, select bank1
  3319  0323  1303               	bcf	status, 6	;RP1=0, select bank1
  3320  0324  085A               	movf	(_lowByte)^080h,w
  3321  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  3322  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  3323  0327  00C8               	movwf	(??_UpdateDisplay+3)+0
  3324  0328  01C9               	clrf	(??_UpdateDisplay+3)+0+1
  3325  0329  0848               	movf	0+(??_UpdateDisplay+3)+0,w
  3326  032A  00B7               	movwf	0+(?_sprintf)+03h
  3327  032B  0849               	movf	1+(??_UpdateDisplay+3)+0,w
  3328  032C  00B8               	movwf	1+(?_sprintf)+03h
  3329  032D  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3330  032E  120A  118A  24B6   	fcall	_sprintf
              120A  118A         
  3331                           	line	247
  3332                           	
  3333  0333                     l10911:	
  3334                           ;HMI.c: 247: lcd_set_cursor(0x00);
  3335  0333  3000               	movlw	(0)
  3336  0334  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3337                           	line	248
  3338                           ;HMI.c: 248: lcd_write_string(adcOutput);
  3339  0339  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3340  033A  1283               	bcf	status, 5	;RP0=0, select bank0
  3341  033B  1303               	bcf	status, 6	;RP1=0, select bank0
  3342  033C  00A7               	movwf	(?_lcd_write_string)
  3343  033D  3000               	movlw	(0x0/2)
  3344  033E  00A8               	movwf	(?_lcd_write_string+1)
  3345  033F  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3346                           	line	253
  3347                           	
  3348  0344                     l10913:	
  3349                           ;HMI.c: 253: lcd_set_cursor(0x40);
  3350  0344  3040               	movlw	(040h)
  3351  0345  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3352                           	line	255
  3353                           	
  3354  034A                     l10915:	
  3355                           ;HMI.c: 255: lcd_write_string("<<<");
  3356  034A  3074               	movlw	low((STR_15-__stringbase))
  3357  034B  1283               	bcf	status, 5	;RP0=0, select bank0
  3358  034C  1303               	bcf	status, 6	;RP1=0, select bank0
  3359  034D  00A7               	movwf	(?_lcd_write_string)
  3360  034E  3080               	movlw	80h
  3361  034F  00A8               	movwf	(?_lcd_write_string+1)
  3362  0350  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3363                           	line	258
  3364                           ;HMI.c: 258: lcd_set_cursor(0x44);
  3365  0355  3044               	movlw	(044h)
  3366  0356  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3367                           	line	259
  3368                           	
  3369  035B                     l10917:	
  3370                           ;HMI.c: 259: lcd_write_string("CONFIRM");
  3371  035B  3068               	movlw	low((STR_16-__stringbase))
  3372  035C  1283               	bcf	status, 5	;RP0=0, select bank0
  3373  035D  1303               	bcf	status, 6	;RP1=0, select bank0
  3374  035E  00A7               	movwf	(?_lcd_write_string)
  3375  035F  3080               	movlw	80h
  3376  0360  00A8               	movwf	(?_lcd_write_string+1)
  3377  0361  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3378                           	line	260
  3379                           	
  3380  0366                     l10919:	
  3381                           ;HMI.c: 260: lcd_set_cursor(0x4D);
  3382  0366  304D               	movlw	(04Dh)
  3383  0367  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3384                           	line	261
  3385                           ;HMI.c: 261: lcd_write_string(">>>");
  3386  036C  3078               	movlw	low((STR_17-__stringbase))
  3387  036D  1283               	bcf	status, 5	;RP0=0, select bank0
  3388  036E  1303               	bcf	status, 6	;RP1=0, select bank0
  3389  036F  00A7               	movwf	(?_lcd_write_string)
  3390  0370  3080               	movlw	80h
  3391  0371  00A8               	movwf	(?_lcd_write_string+1)
  3392  0372  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3393                           	line	262
  3394                           ;HMI.c: 262: break;
  3395  0377  2BB0               	goto	l4545
  3396                           	line	263
  3397                           ;HMI.c: 263: case 2:
  3398                           	
  3399  0378                     l4543:	
  3400                           	line	264
  3401                           	
  3402  0378                     l10921:	
  3403                           ;HMI.c: 264: lcd_write_control(0b00000001);
  3404  0378  3001               	movlw	(01h)
  3405  0379  120A  158A  214F   	fcall	_lcd_write_control
              120A  118A         
  3406                           	line	266
  3407                           ;HMI.c: 266: lcd_set_cursor(0x00);
  3408  037E  3000               	movlw	(0)
  3409  037F  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3410                           	line	267
  3411                           	
  3412  0384                     l10923:	
  3413                           ;HMI.c: 267: lcd_write_string(" Charging Mode ");
  3414  0384  300B               	movlw	low((STR_18-__stringbase))
  3415  0385  1283               	bcf	status, 5	;RP0=0, select bank0
  3416  0386  1303               	bcf	status, 6	;RP1=0, select bank0
  3417  0387  00A7               	movwf	(?_lcd_write_string)
  3418  0388  3080               	movlw	80h
  3419  0389  00A8               	movwf	(?_lcd_write_string+1)
  3420  038A  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3421                           	line	271
  3422                           	
  3423  038F                     l10925:	
  3424                           ;HMI.c: 271: lcd_set_cursor(0x44);
  3425  038F  3044               	movlw	(044h)
  3426  0390  120A  158A  20FD   	fcall	_lcd_set_cursor
              120A  118A         
  3427                           	line	272
  3428                           ;HMI.c: 272: lcd_write_string("  EXIT  ");
  3429  0395  302A               	movlw	low((STR_19-__stringbase))
  3430  0396  1283               	bcf	status, 5	;RP0=0, select bank0
  3431  0397  1303               	bcf	status, 6	;RP1=0, select bank0
  3432  0398  00A7               	movwf	(?_lcd_write_string)
  3433  0399  3080               	movlw	80h
  3434  039A  00A8               	movwf	(?_lcd_write_string+1)
  3435  039B  120A  158A  22AA   	fcall	_lcd_write_string
              120A  118A         
  3436                           	line	274
  3437                           ;HMI.c: 274: break;
  3438  03A0  2BB0               	goto	l4545
  3439                           	line	276
  3440                           ;HMI.c: 276: default:
  3441                           	
  3442  03A1                     l4544:	
  3443                           	line	278
  3444                           ;HMI.c: 278: break;
  3445  03A1  2BB0               	goto	l4545
  3446                           	line	281
  3447                           	
  3448  03A2                     l10927:	
  3449                           ;HMI.c: 281: }
  3450  03A2  2BB0               	goto	l4545
  3451                           	line	218
  3452                           	
  3453  03A3                     l4537:	
  3454                           	
  3455  03A3                     l10929:	
  3456  03A3  1683               	bsf	status, 5	;RP0=1, select bank1
  3457  03A4  1303               	bcf	status, 6	;RP1=0, select bank1
  3458  03A5  0857               	movf	(_currentMenu)^080h,w	;volatile
  3459                           	; Switch size 1, requested type "space"
  3460                           ; Number of cases is 3, Range of values is 0 to 2
  3461                           ; switch strategies available:
  3462                           ; Name         Instructions Cycles
  3463                           ; simple_byte           10     6 (average)
  3464                           ; direct_byte           17     8 (fixed)
  3465                           ; jumptable            260     6 (fixed)
  3466                           ; rangetable             7     6 (fixed)
  3467                           ; spacedrange           12     9 (fixed)
  3468                           ; locatedrange           3     3 (fixed)
  3469                           ;	Chosen strategy is simple_byte
  3470                           
  3471                           	opt asmopt_off
  3472  03A6  3A00               	xorlw	0^0	; case 0
  3473  03A7  1903               	skipnz
  3474  03A8  2A51               	goto	l10887
  3475  03A9  3A01               	xorlw	1^0	; case 1
  3476  03AA  1903               	skipnz
  3477  03AB  2B0B               	goto	l10907
  3478  03AC  3A03               	xorlw	2^1	; case 2
  3479  03AD  1903               	skipnz
  3480  03AE  2B78               	goto	l10921
  3481  03AF  2BB0               	goto	l4545
  3482                           	opt asmopt_on
  3483                           
  3484                           	line	281
  3485                           	
  3486  03B0                     l4541:	
  3487                           	line	282
  3488                           	
  3489  03B0                     l4545:	
  3490  03B0  0008               	return
  3491                           	opt stack 0
  3492                           GLOBAL	__end_of_UpdateDisplay
  3493  03B1                     	__end_of_UpdateDisplay:
  3494 ;; =============== function _UpdateDisplay ends ============
  3495                           
  3496                           	signat	_UpdateDisplay,88
  3497                           	global	_init
  3498                           psect	text899,local,class=CODE,delta=2
  3499                           global __ptext899
  3500  0B05                     __ptext899:
  3501                           
  3502 ;; *************** function _init *****************
  3503 ;; Defined at:
  3504 ;;		line 135 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;		None
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;		None               void
  3511 ;; Registers used:
  3512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3518 ;;      Params:         0       0       0       0       0
  3519 ;;      Locals:         0       0       0       0       0
  3520 ;;      Temps:          0       1       0       0       0
  3521 ;;      Totals:         0       1       0       0       0
  3522 ;;Total ram usage:        1 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    5
  3525 ;; This function calls:
  3526 ;;		_ser_init
  3527 ;;		_init_adc
  3528 ;;		_lcd_init
  3529 ;;		_robo_init
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           psect	text899
  3535                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3536                           	line	135
  3537                           	global	__size_of_init
  3538  002F                     	__size_of_init	equ	__end_of_init-_init
  3539                           	
  3540  0B05                     _init:	
  3541                           	opt	stack 2
  3542                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3543                           	line	138
  3544                           	
  3545  0B05                     l10859:	
  3546                           ;Main.c: 138: buttonPressed = 0;
  3547  0B05  01FD               	clrf	(_buttonPressed)	;volatile
  3548                           	line	142
  3549                           	
  3550  0B06                     l10861:	
  3551                           ;Main.c: 142: TRISC &= 0b10010000;
  3552  0B06  3090               	movlw	(090h)
  3553  0B07  1283               	bcf	status, 5	;RP0=0, select bank0
  3554  0B08  1303               	bcf	status, 6	;RP1=0, select bank0
  3555  0B09  00A3               	movwf	(??_init+0)+0
  3556  0B0A  0823               	movf	(??_init+0)+0,w
  3557  0B0B  1683               	bsf	status, 5	;RP0=1, select bank1
  3558  0B0C  1303               	bcf	status, 6	;RP1=0, select bank1
  3559  0B0D  0587               	andwf	(135)^080h,f	;volatile
  3560                           	line	144
  3561                           	
  3562  0B0E                     l10863:	
  3563                           ;Main.c: 144: SSPSTAT = 0b01000000;
  3564  0B0E  3040               	movlw	(040h)
  3565  0B0F  0094               	movwf	(148)^080h	;volatile
  3566                           	line	145
  3567                           	
  3568  0B10                     l10865:	
  3569                           ;Main.c: 145: SSPCON = 0b10100001;
  3570  0B10  30A1               	movlw	(0A1h)
  3571  0B11  1283               	bcf	status, 5	;RP0=0, select bank0
  3572  0B12  1303               	bcf	status, 6	;RP1=0, select bank0
  3573  0B13  0094               	movwf	(20)	;volatile
  3574                           	line	147
  3575                           	
  3576  0B14                     l10867:	
  3577                           ;Main.c: 147: OPTION_REG = 0b00000100;
  3578  0B14  3004               	movlw	(04h)
  3579  0B15  1683               	bsf	status, 5	;RP0=1, select bank1
  3580  0B16  1303               	bcf	status, 6	;RP1=0, select bank1
  3581  0B17  0081               	movwf	(129)^080h	;volatile
  3582                           	line	148
  3583                           	
  3584  0B18                     l10869:	
  3585                           ;Main.c: 148: ser_init();
  3586  0B18  120A  158A  2202   	fcall	_ser_init
              120A  158A         
  3587                           	line	149
  3588                           	
  3589  0B1D                     l10871:	
  3590                           ;Main.c: 149: init_adc();
  3591  0B1D  120A  158A  2163   	fcall	_init_adc
              120A  158A         
  3592                           	line	150
  3593                           	
  3594  0B22                     l10873:	
  3595                           ;Main.c: 150: lcd_init();
  3596  0B22  120A  158A  2253   	fcall	_lcd_init
              120A  158A         
  3597                           	line	151
  3598                           	
  3599  0B27                     l10875:	
  3600                           ;Main.c: 151: robo_init();
  3601  0B27  120A  158A  21A6   	fcall	_robo_init
              120A  158A         
  3602                           	line	152
  3603                           	
  3604  0B2C                     l10877:	
  3605                           ;Main.c: 152: TRISB = 0b11111100;
  3606  0B2C  30FC               	movlw	(0FCh)
  3607  0B2D  1683               	bsf	status, 5	;RP0=1, select bank1
  3608  0B2E  1303               	bcf	status, 6	;RP1=0, select bank1
  3609  0B2F  0086               	movwf	(134)^080h	;volatile
  3610                           	line	154
  3611                           	
  3612  0B30                     l10879:	
  3613                           ;Main.c: 154: TMR0IE = 1;
  3614  0B30  168B               	bsf	(93/8),(93)&7
  3615                           	line	155
  3616                           	
  3617  0B31                     l10881:	
  3618                           ;Main.c: 155: PEIE=1;
  3619  0B31  170B               	bsf	(94/8),(94)&7
  3620                           	line	157
  3621                           	
  3622  0B32                     l10883:	
  3623                           ;Main.c: 157: (GIE = 1);
  3624  0B32  178B               	bsf	(95/8),(95)&7
  3625                           	line	158
  3626                           	
  3627  0B33                     l2217:	
  3628  0B33  0008               	return
  3629                           	opt stack 0
  3630                           GLOBAL	__end_of_init
  3631  0B34                     	__end_of_init:
  3632 ;; =============== function _init ends ============
  3633                           
  3634                           	signat	_init,88
  3635                           	global	_readDistance
  3636                           psect	text900,local,class=CODE,delta=2
  3637                           global __ptext900
  3638  0979                     __ptext900:
  3639                           
  3640 ;; *************** function _readDistance *****************
  3641 ;; Defined at:
  3642 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  fullval         2   12[BANK0 ] unsigned int 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  2    8[BANK0 ] unsigned int 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3656 ;;      Params:         0       2       0       0       0
  3657 ;;      Locals:         0       2       0       0       0
  3658 ;;      Temps:          0       2       0       0       0
  3659 ;;      Totals:         0       6       0       0       0
  3660 ;;Total ram usage:        6 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    5
  3663 ;; This function calls:
  3664 ;;		_adc_read_channel
  3665 ;; This function is called by:
  3666 ;;		_readAvgDistance
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           psect	text900
  3670                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3671                           	line	24
  3672                           	global	__size_of_readDistance
  3673  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3674                           	
  3675  0979                     _readDistance:	
  3676                           	opt	stack 0
  3677                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3678                           	line	27
  3679                           	
  3680  0979                     l10853:	
  3681                           ;infrared.c: 25: unsigned int fullval ;
  3682                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3683  0979  3000               	movlw	(0)
  3684  097A  120A  158A  2393   	fcall	_adc_read_channel
              120A  158A         
  3685  097F  1283               	bcf	status, 5	;RP0=0, select bank0
  3686  0980  1303               	bcf	status, 6	;RP1=0, select bank0
  3687  0981  00AA               	movwf	(??_readDistance+0)+0
  3688  0982  01AB               	clrf	(??_readDistance+0)+0+1
  3689  0983  082A               	movf	0+(??_readDistance+0)+0,w
  3690  0984  00AC               	movwf	(readDistance@fullval)
  3691  0985  082B               	movf	1+(??_readDistance+0)+0,w
  3692  0986  00AD               	movwf	(readDistance@fullval+1)
  3693                           	line	29
  3694                           	
  3695  0987                     l10855:	
  3696                           ;infrared.c: 29: return fullval;
  3697  0987  082D               	movf	(readDistance@fullval+1),w
  3698  0988  01A9               	clrf	(?_readDistance+1)
  3699  0989  07A9               	addwf	(?_readDistance+1)
  3700  098A  082C               	movf	(readDistance@fullval),w
  3701  098B  01A8               	clrf	(?_readDistance)
  3702  098C  07A8               	addwf	(?_readDistance)
  3703                           
  3704  098D  298E               	goto	l2986
  3705                           	
  3706  098E                     l10857:	
  3707                           	line	30
  3708                           	
  3709  098E                     l2986:	
  3710  098E  0008               	return
  3711                           	opt stack 0
  3712                           GLOBAL	__end_of_readDistance
  3713  098F                     	__end_of_readDistance:
  3714 ;; =============== function _readDistance ends ============
  3715                           
  3716                           	signat	_readDistance,90
  3717                           	global	_robot_read
  3718                           psect	text901,local,class=CODE,delta=2
  3719                           global __ptext901
  3720  0AD6                     __ptext901:
  3721                           
  3722 ;; *************** function _robot_read *****************
  3723 ;; Defined at:
  3724 ;;		line 17 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;		None               void
  3731 ;; Registers used:
  3732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0
  3740 ;;      Temps:          0       3       0       0       0
  3741 ;;      Totals:         0       3       0       0       0
  3742 ;;Total ram usage:        3 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    5
  3745 ;; This function calls:
  3746 ;;		_ser_putch
  3747 ;;		_ser_getch
  3748 ;; This function is called by:
  3749 ;;		_main
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           psect	text901
  3753                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3754                           	line	17
  3755                           	global	__size_of_robot_read
  3756  002F                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  3757                           	
  3758  0AD6                     _robot_read:	
  3759                           	opt	stack 2
  3760                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3761                           	line	18
  3762                           	
  3763  0AD6                     l10847:	
  3764                           ;robot.c: 18: ser_putch (142);
  3765  0AD6  308E               	movlw	(08Eh)
  3766  0AD7  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  3767                           	line	19
  3768                           ;robot.c: 19: ser_putch (7);
  3769  0ADC  3007               	movlw	(07h)
  3770  0ADD  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  3771                           	line	20
  3772                           	
  3773  0AE2                     l10849:	
  3774                           ;robot.c: 20: _delay((unsigned long)((200)*(20000000/4000.0)));
  3775                           	opt asmopt_off
  3776  0AE2  3006               movlw  6
  3777  0AE3  1283               	bcf	status, 5	;RP0=0, select bank0
  3778  0AE4  1303               	bcf	status, 6	;RP1=0, select bank0
  3779  0AE5  00A4               movwf	((??_robot_read+0)+0+2),f
  3780  0AE6  3013               movlw	19
  3781  0AE7  00A3               movwf	((??_robot_read+0)+0+1),f
  3782  0AE8  30B1               	movlw	177
  3783  0AE9  00A2               movwf	((??_robot_read+0)+0),f
  3784  0AEA                     u4607:
  3785  0AEA  0BA2               	decfsz	((??_robot_read+0)+0),f
  3786  0AEB  2AEA               	goto	u4607
  3787  0AEC  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  3788  0AED  2AEA               	goto	u4607
  3789  0AEE  0BA4               	decfsz	((??_robot_read+0)+0+2),f
  3790  0AEF  2AEA               	goto	u4607
  3791  0AF0  2AF1               	nop2
  3792                           opt asmopt_on
  3793                           
  3794                           	line	21
  3795                           	
  3796  0AF1                     l10851:	
  3797                           ;robot.c: 21: distTravelled = ser_getch();
  3798  0AF1  120A  158A  21E0   	fcall	_ser_getch
              120A  158A         
  3799  0AF6  1283               	bcf	status, 5	;RP0=0, select bank0
  3800  0AF7  1303               	bcf	status, 6	;RP1=0, select bank0
  3801  0AF8  00A2               	movwf	(??_robot_read+0)+0
  3802  0AF9  01A3               	clrf	(??_robot_read+0)+0+1
  3803  0AFA  0822               	movf	0+(??_robot_read+0)+0,w
  3804  0AFB  1683               	bsf	status, 5	;RP0=1, select bank1
  3805  0AFC  1303               	bcf	status, 6	;RP1=0, select bank1
  3806  0AFD  00C0               	movwf	(_distTravelled)^080h	;volatile
  3807  0AFE  1283               	bcf	status, 5	;RP0=0, select bank0
  3808  0AFF  1303               	bcf	status, 6	;RP1=0, select bank0
  3809  0B00  0823               	movf	1+(??_robot_read+0)+0,w
  3810  0B01  1683               	bsf	status, 5	;RP0=1, select bank1
  3811  0B02  1303               	bcf	status, 6	;RP1=0, select bank1
  3812  0B03  00C1               	movwf	(_distTravelled+1)^080h	;volatile
  3813                           	line	22
  3814                           	
  3815  0B04                     l5998:	
  3816  0B04  0008               	return
  3817                           	opt stack 0
  3818                           GLOBAL	__end_of_robot_read
  3819  0B05                     	__end_of_robot_read:
  3820 ;; =============== function _robot_read ends ============
  3821                           
  3822                           	signat	_robot_read,88
  3823                           	global	_lcd_init
  3824                           psect	text902,local,class=CODE,delta=2
  3825                           global __ptext902
  3826  0A53                     __ptext902:
  3827                           
  3828 ;; *************** function _lcd_init *****************
  3829 ;; Defined at:
  3830 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;		None               void
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    4
  3851 ;; This function calls:
  3852 ;;		_lcd_write_control
  3853 ;; This function is called by:
  3854 ;;		_init
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           psect	text902
  3858                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3859                           	line	101
  3860                           	global	__size_of_lcd_init
  3861  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3862                           	
  3863  0A53                     _lcd_init:	
  3864                           	opt	stack 2
  3865                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3866                           	line	105
  3867                           	
  3868  0A53                     l10827:	
  3869                           ;lcd.c: 105: ADCON1 = 0b00000010;
  3870  0A53  3002               	movlw	(02h)
  3871  0A54  1683               	bsf	status, 5	;RP0=1, select bank1
  3872  0A55  1303               	bcf	status, 6	;RP1=0, select bank1
  3873  0A56  009F               	movwf	(159)^080h	;volatile
  3874                           	line	108
  3875                           	
  3876  0A57                     l10829:	
  3877                           ;lcd.c: 108: PORTD = 0;
  3878  0A57  1283               	bcf	status, 5	;RP0=0, select bank0
  3879  0A58  1303               	bcf	status, 6	;RP1=0, select bank0
  3880  0A59  0188               	clrf	(8)	;volatile
  3881                           	line	109
  3882                           	
  3883  0A5A                     l10831:	
  3884                           ;lcd.c: 109: PORTE = 0;
  3885  0A5A  0189               	clrf	(9)	;volatile
  3886                           	line	111
  3887                           	
  3888  0A5B                     l10833:	
  3889                           ;lcd.c: 111: TRISD = 0b00000000;
  3890  0A5B  1683               	bsf	status, 5	;RP0=1, select bank1
  3891  0A5C  1303               	bcf	status, 6	;RP1=0, select bank1
  3892  0A5D  0188               	clrf	(136)^080h	;volatile
  3893                           	line	112
  3894                           	
  3895  0A5E                     l10835:	
  3896                           ;lcd.c: 112: TRISE = 0b00000000;
  3897  0A5E  0189               	clrf	(137)^080h	;volatile
  3898                           	line	115
  3899                           	
  3900  0A5F                     l10837:	
  3901                           ;lcd.c: 115: lcd_write_control(0b00000001);
  3902  0A5F  3001               	movlw	(01h)
  3903  0A60  120A  158A  214F   	fcall	_lcd_write_control
              120A  158A         
  3904                           	line	116
  3905                           	
  3906  0A65                     l10839:	
  3907                           ;lcd.c: 116: lcd_write_control(0b00111000);
  3908  0A65  3038               	movlw	(038h)
  3909  0A66  120A  158A  214F   	fcall	_lcd_write_control
              120A  158A         
  3910                           	line	117
  3911                           	
  3912  0A6B                     l10841:	
  3913                           ;lcd.c: 117: lcd_write_control(0b00001100);
  3914  0A6B  300C               	movlw	(0Ch)
  3915  0A6C  120A  158A  214F   	fcall	_lcd_write_control
              120A  158A         
  3916                           	line	118
  3917                           	
  3918  0A71                     l10843:	
  3919                           ;lcd.c: 118: lcd_write_control(0b00000110);
  3920  0A71  3006               	movlw	(06h)
  3921  0A72  120A  158A  214F   	fcall	_lcd_write_control
              120A  158A         
  3922                           	line	119
  3923                           	
  3924  0A77                     l10845:	
  3925                           ;lcd.c: 119: lcd_write_control(0b00000010);
  3926  0A77  3002               	movlw	(02h)
  3927  0A78  120A  158A  214F   	fcall	_lcd_write_control
              120A  158A         
  3928                           	line	121
  3929                           	
  3930  0A7D                     l1429:	
  3931  0A7D  0008               	return
  3932                           	opt stack 0
  3933                           GLOBAL	__end_of_lcd_init
  3934  0A7E                     	__end_of_lcd_init:
  3935 ;; =============== function _lcd_init ends ============
  3936                           
  3937                           	signat	_lcd_init,88
  3938                           	global	_lcd_write_string
  3939                           psect	text903,local,class=CODE,delta=2
  3940                           global __ptext903
  3941  0AAA                     __ptext903:
  3942                           
  3943 ;; *************** function _lcd_write_string *****************
  3944 ;; Defined at:
  3945 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  s               2    7[BANK0 ] PTR unsigned char 
  3948 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  3949 ;;		 -> STR_15(4), UpdateDisplay@adcOutput(16), STR_12(4), STR_11(4), 
  3950 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  3951 ;;		 -> STR_6(9), STR_5(9), STR_4(8), STR_3(9), 
  3952 ;;		 -> STR_2(9), STR_1(9), 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;		None               void
  3957 ;; Registers used:
  3958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3964 ;;      Params:         0       2       0       0       0
  3965 ;;      Locals:         0       0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0
  3967 ;;      Totals:         0       2       0       0       0
  3968 ;;Total ram usage:        2 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    4
  3971 ;; This function calls:
  3972 ;;		_lcd_write_data
  3973 ;; This function is called by:
  3974 ;;		_UpdateDisplay
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           psect	text903
  3978                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3979                           	line	48
  3980                           	global	__size_of_lcd_write_string
  3981  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3982                           	
  3983  0AAA                     _lcd_write_string:	
  3984                           	opt	stack 1
  3985                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3986                           	line	50
  3987                           	
  3988  0AAA                     l10819:	
  3989                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3990  0AAA  2AC4               	goto	l10825
  3991                           	
  3992  0AAB                     l1409:	
  3993                           	
  3994  0AAB                     l10821:	
  3995  0AAB  1283               	bcf	status, 5	;RP0=0, select bank0
  3996  0AAC  1303               	bcf	status, 6	;RP1=0, select bank0
  3997  0AAD  0828               	movf	(lcd_write_string@s+1),w
  3998  0AAE  00FF               	movwf	btemp+1
  3999  0AAF  0827               	movf	(lcd_write_string@s),w
  4000  0AB0  0084               	movwf	fsr0
  4001  0AB1  120A  118A  2700   	fcall	stringtab
              120A  158A         
  4002  0AB6  120A  158A  2115   	fcall	_lcd_write_data
              120A  158A         
  4003                           	
  4004  0ABB                     l10823:	
  4005  0ABB  3001               	movlw	low(01h)
  4006  0ABC  1283               	bcf	status, 5	;RP0=0, select bank0
  4007  0ABD  1303               	bcf	status, 6	;RP1=0, select bank0
  4008  0ABE  07A7               	addwf	(lcd_write_string@s),f
  4009  0ABF  1803               	skipnc
  4010  0AC0  0AA8               	incf	(lcd_write_string@s+1),f
  4011  0AC1  3000               	movlw	high(01h)
  4012  0AC2  07A8               	addwf	(lcd_write_string@s+1),f
  4013  0AC3  2AC4               	goto	l10825
  4014                           	
  4015  0AC4                     l1408:	
  4016                           	
  4017  0AC4                     l10825:	
  4018  0AC4  1283               	bcf	status, 5	;RP0=0, select bank0
  4019  0AC5  1303               	bcf	status, 6	;RP1=0, select bank0
  4020  0AC6  0828               	movf	(lcd_write_string@s+1),w
  4021  0AC7  00FF               	movwf	btemp+1
  4022  0AC8  0827               	movf	(lcd_write_string@s),w
  4023  0AC9  0084               	movwf	fsr0
  4024  0ACA  120A  118A  2700   	fcall	stringtab
              120A  158A         
  4025  0ACF  3800               	iorlw	0
  4026  0AD0  1D03               	skipz
  4027  0AD1  2AD3               	goto	u4461
  4028  0AD2  2AD4               	goto	u4460
  4029  0AD3                     u4461:
  4030  0AD3  2AAB               	goto	l10821
  4031  0AD4                     u4460:
  4032  0AD4  2AD5               	goto	l1411
  4033                           	
  4034  0AD5                     l1410:	
  4035                           	line	51
  4036                           	
  4037  0AD5                     l1411:	
  4038  0AD5  0008               	return
  4039                           	opt stack 0
  4040                           GLOBAL	__end_of_lcd_write_string
  4041  0AD6                     	__end_of_lcd_write_string:
  4042 ;; =============== function _lcd_write_string ends ============
  4043                           
  4044                           	signat	_lcd_write_string,4216
  4045                           	global	_lcd_set_cursor
  4046                           psect	text904,local,class=CODE,delta=2
  4047                           global __ptext904
  4048  08FD                     __ptext904:
  4049                           
  4050 ;; *************** function _lcd_set_cursor *****************
  4051 ;; Defined at:
  4052 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  address         1    wreg     unsigned char 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  address         1    3[BANK0 ] unsigned char 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;		None               void
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4066 ;;      Params:         0       0       0       0       0
  4067 ;;      Locals:         0       1       0       0       0
  4068 ;;      Temps:          0       0       0       0       0
  4069 ;;      Totals:         0       1       0       0       0
  4070 ;;Total ram usage:        1 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    4
  4073 ;; This function calls:
  4074 ;;		_lcd_write_control
  4075 ;; This function is called by:
  4076 ;;		_UpdateDisplay
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           psect	text904
  4080                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4081                           	line	42
  4082                           	global	__size_of_lcd_set_cursor
  4083  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  4084                           	
  4085  08FD                     _lcd_set_cursor:	
  4086                           	opt	stack 1
  4087                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4088                           ;lcd_set_cursor@address stored from wreg
  4089  08FD  1283               	bcf	status, 5	;RP0=0, select bank0
  4090  08FE  1303               	bcf	status, 6	;RP1=0, select bank0
  4091  08FF  00A3               	movwf	(lcd_set_cursor@address)
  4092                           	line	43
  4093                           	
  4094  0900                     l10815:	
  4095                           ;lcd.c: 43: address |= 0b10000000;
  4096  0900  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  4097                           	line	44
  4098                           	
  4099  0901                     l10817:	
  4100                           ;lcd.c: 44: lcd_write_control(address);
  4101  0901  0823               	movf	(lcd_set_cursor@address),w
  4102  0902  120A  158A  214F   	fcall	_lcd_write_control
              120A  158A         
  4103                           	line	45
  4104                           	
  4105  0907                     l1405:	
  4106  0907  0008               	return
  4107                           	opt stack 0
  4108                           GLOBAL	__end_of_lcd_set_cursor
  4109  0908                     	__end_of_lcd_set_cursor:
  4110 ;; =============== function _lcd_set_cursor ends ============
  4111                           
  4112                           	signat	_lcd_set_cursor,4216
  4113                           	global	_ser_getch
  4114                           psect	text905,local,class=CODE,delta=2
  4115                           global __ptext905
  4116  09E0                     __ptext905:
  4117                           
  4118 ;; *************** function _ser_getch *****************
  4119 ;; Defined at:
  4120 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  c               1    1[BANK0 ] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      unsigned char 
  4127 ;; Registers used:
  4128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4134 ;;      Params:         0       0       0       0       0
  4135 ;;      Locals:         0       1       0       0       0
  4136 ;;      Temps:          0       1       0       0       0
  4137 ;;      Totals:         0       2       0       0       0
  4138 ;;Total ram usage:        2 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    4
  4141 ;; This function calls:
  4142 ;;		_ser_isrx
  4143 ;; This function is called by:
  4144 ;;		_robot_read
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           psect	text905
  4148                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  4149                           	line	55
  4150                           	global	__size_of_ser_getch
  4151  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  4152                           	
  4153  09E0                     _ser_getch:	
  4154                           	opt	stack 2
  4155                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4156                           	line	58
  4157                           	
  4158  09E0                     l10799:	
  4159                           ;ser.c: 56: unsigned char c;
  4160                           ;ser.c: 58: while (ser_isrx()==0)
  4161  09E0  29E2               	goto	l10801
  4162                           	
  4163  09E1                     l6712:	
  4164                           	line	59
  4165                           ;ser.c: 59: continue;
  4166  09E1  29E2               	goto	l10801
  4167                           	
  4168  09E2                     l6711:	
  4169                           	line	58
  4170                           	
  4171  09E2                     l10801:	
  4172  09E2  120A  158A  218F   	fcall	_ser_isrx
              120A  158A         
  4173  09E7  1C03               	btfss	status,0
  4174  09E8  29EA               	goto	u4451
  4175  09E9  29EB               	goto	u4450
  4176  09EA                     u4451:
  4177  09EA  29E2               	goto	l10801
  4178  09EB                     u4450:
  4179                           	
  4180  09EB                     l6713:	
  4181                           	line	61
  4182                           ;ser.c: 61: GIE=0;
  4183  09EB  138B               	bcf	(95/8),(95)&7
  4184                           	line	62
  4185                           	
  4186  09EC                     l10803:	
  4187                           ;ser.c: 62: c=rxfifo[rxoptr];
  4188  09EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4189  09ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4190  09EE  086D               	movf	(_rxoptr),w
  4191  09EF  3EA0               	addlw	_rxfifo&0ffh
  4192  09F0  0084               	movwf	fsr0
  4193  09F1  1383               	bcf	status, 7	;select IRP bank1
  4194  09F2  0800               	movf	indf,w
  4195  09F3  00A0               	movwf	(??_ser_getch+0)+0
  4196  09F4  0820               	movf	(??_ser_getch+0)+0,w
  4197  09F5  00A1               	movwf	(ser_getch@c)
  4198                           	line	63
  4199                           	
  4200  09F6                     l10805:	
  4201                           ;ser.c: 63: ++rxoptr;
  4202  09F6  3001               	movlw	(01h)
  4203  09F7  00A0               	movwf	(??_ser_getch+0)+0
  4204  09F8  0820               	movf	(??_ser_getch+0)+0,w
  4205  09F9  07ED               	addwf	(_rxoptr),f	;volatile
  4206                           	line	64
  4207                           	
  4208  09FA                     l10807:	
  4209                           ;ser.c: 64: rxoptr &= (16-1);
  4210  09FA  300F               	movlw	(0Fh)
  4211  09FB  00A0               	movwf	(??_ser_getch+0)+0
  4212  09FC  0820               	movf	(??_ser_getch+0)+0,w
  4213  09FD  05ED               	andwf	(_rxoptr),f	;volatile
  4214                           	line	65
  4215                           	
  4216  09FE                     l10809:	
  4217                           ;ser.c: 65: GIE=1;
  4218  09FE  178B               	bsf	(95/8),(95)&7
  4219                           	line	66
  4220                           	
  4221  09FF                     l10811:	
  4222                           ;ser.c: 66: return c;
  4223  09FF  0821               	movf	(ser_getch@c),w
  4224  0A00  2A01               	goto	l6714
  4225                           	
  4226  0A01                     l10813:	
  4227                           	line	67
  4228                           	
  4229  0A01                     l6714:	
  4230  0A01  0008               	return
  4231                           	opt stack 0
  4232                           GLOBAL	__end_of_ser_getch
  4233  0A02                     	__end_of_ser_getch:
  4234 ;; =============== function _ser_getch ends ============
  4235                           
  4236                           	signat	_ser_getch,89
  4237                           	global	_sprintf
  4238                           psect	text906,local,class=CODE,delta=2
  4239                           global __ptext906
  4240  04B6                     __ptext906:
  4241                           
  4242 ;; *************** function _sprintf *****************
  4243 ;; Defined at:
  4244 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  sp              1    wreg     PTR unsigned char 
  4247 ;;		 -> UpdateDisplay@adcOutput(16), 
  4248 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  4249 ;;		 -> STR_14(15), STR_13(15), 
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  4252 ;;		 -> UpdateDisplay@adcOutput(16), 
  4253 ;;  _val            4   31[BANK0 ] struct .
  4254 ;;  c               1   36[BANK0 ] char 
  4255 ;;  prec            1   30[BANK0 ] char 
  4256 ;;  flag            1   29[BANK0 ] unsigned char 
  4257 ;;  ap              1   28[BANK0 ] PTR void [1]
  4258 ;;		 -> ?_sprintf(2), 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  2   20[BANK0 ] int 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4268 ;;      Params:         0       5       0       0       0
  4269 ;;      Locals:         0       9       0       0       0
  4270 ;;      Temps:          0       3       0       0       0
  4271 ;;      Totals:         0      17       0       0       0
  4272 ;;Total ram usage:       17 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    4
  4275 ;; This function calls:
  4276 ;;		___lwdiv
  4277 ;;		___lwmod
  4278 ;; This function is called by:
  4279 ;;		_UpdateDisplay
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           psect	text906
  4283                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  4284                           	line	488
  4285                           	global	__size_of_sprintf
  4286  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4287                           	
  4288  04B6                     _sprintf:	
  4289                           	opt	stack 1
  4290                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4291                           ;sprintf@sp stored from wreg
  4292                           	line	537
  4293  04B6  1283               	bcf	status, 5	;RP0=0, select bank0
  4294  04B7  1303               	bcf	status, 6	;RP1=0, select bank0
  4295  04B8  00C3               	movwf	(sprintf@sp)
  4296                           	
  4297  04B9                     l10741:	
  4298  04B9  3035               	movlw	(?_sprintf+01h)&0ffh
  4299  04BA  00B9               	movwf	(??_sprintf+0)+0
  4300  04BB  0839               	movf	(??_sprintf+0)+0,w
  4301  04BC  00BC               	movwf	(sprintf@ap)
  4302                           	line	540
  4303  04BD  2D9C               	goto	l10793
  4304                           	
  4305  04BE                     l6752:	
  4306                           	line	542
  4307                           	
  4308  04BE                     l10743:	
  4309  04BE  0844               	movf	(sprintf@c),w
  4310  04BF  3A25               	xorlw	025h
  4311  04C0  1903               	skipnz
  4312  04C1  2CC3               	goto	u4371
  4313  04C2  2CC4               	goto	u4370
  4314  04C3                     u4371:
  4315  04C3  2CD0               	goto	l6753
  4316  04C4                     u4370:
  4317                           	line	545
  4318                           	
  4319  04C4                     l10745:	
  4320  04C4  0844               	movf	(sprintf@c),w
  4321  04C5  00B9               	movwf	(??_sprintf+0)+0
  4322  04C6  0843               	movf	(sprintf@sp),w
  4323  04C7  0084               	movwf	fsr0
  4324  04C8  0839               	movf	(??_sprintf+0)+0,w
  4325  04C9  1383               	bcf	status, 7	;select IRP bank0
  4326  04CA  0080               	movwf	indf
  4327                           	
  4328  04CB                     l10747:	
  4329  04CB  3001               	movlw	(01h)
  4330  04CC  00B9               	movwf	(??_sprintf+0)+0
  4331  04CD  0839               	movf	(??_sprintf+0)+0,w
  4332  04CE  07C3               	addwf	(sprintf@sp),f
  4333                           	line	546
  4334  04CF  2D9C               	goto	l10793
  4335                           	line	547
  4336                           	
  4337  04D0                     l6753:	
  4338                           	line	552
  4339  04D0  01BD               	clrf	(sprintf@flag)
  4340                           	line	638
  4341  04D1  2CD7               	goto	l10751
  4342                           	line	640
  4343                           	
  4344  04D2                     l6755:	
  4345                           	line	641
  4346  04D2  2DB0               	goto	l10795
  4347                           	line	700
  4348                           	
  4349  04D3                     l6757:	
  4350  04D3  2CEC               	goto	l10753
  4351                           	line	701
  4352                           	
  4353  04D4                     l6758:	
  4354                           	line	702
  4355  04D4  2CEC               	goto	l10753
  4356                           	line	805
  4357                           	
  4358  04D5                     l6760:	
  4359                           	line	816
  4360  04D5  2D9C               	goto	l10793
  4361                           	line	825
  4362                           	
  4363  04D6                     l10749:	
  4364  04D6  2CEC               	goto	l10753
  4365                           	line	638
  4366                           	
  4367  04D7                     l6754:	
  4368                           	
  4369  04D7                     l10751:	
  4370  04D7  3001               	movlw	01h
  4371  04D8  07B4               	addwf	(sprintf@f),f
  4372  04D9  30FF               	movlw	-01h
  4373  04DA  0734               	addwf	(sprintf@f),w
  4374  04DB  0084               	movwf	fsr0
  4375  04DC  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4376  04E1  00C4               	movwf	(sprintf@c)
  4377                           	; Switch size 1, requested type "space"
  4378                           ; Number of cases is 3, Range of values is 0 to 105
  4379                           ; switch strategies available:
  4380                           ; Name         Instructions Cycles
  4381                           ; simple_byte           10     6 (average)
  4382                           ; jumptable            260     6 (fixed)
  4383                           ; rangetable           110     6 (fixed)
  4384                           ; spacedrange          218     9 (fixed)
  4385                           ; locatedrange         106     3 (fixed)
  4386                           ;	Chosen strategy is simple_byte
  4387                           
  4388                           	opt asmopt_off
  4389  04E2  3A00               	xorlw	0^0	; case 0
  4390  04E3  1903               	skipnz
  4391  04E4  2DB0               	goto	l10795
  4392  04E5  3A64               	xorlw	100^0	; case 100
  4393  04E6  1903               	skipnz
  4394  04E7  2CEC               	goto	l10753
  4395  04E8  3A0D               	xorlw	105^100	; case 105
  4396  04E9  1903               	skipnz
  4397  04EA  2CEC               	goto	l10753
  4398  04EB  2D9C               	goto	l10793
  4399                           	opt asmopt_on
  4400                           
  4401                           	line	825
  4402                           	
  4403  04EC                     l6759:	
  4404                           	line	1254
  4405                           	
  4406  04EC                     l10753:	
  4407  04EC  083C               	movf	(sprintf@ap),w
  4408  04ED  0084               	movwf	fsr0
  4409  04EE  1383               	bcf	status, 7	;select IRP bank0
  4410  04EF  0800               	movf	indf,w
  4411  04F0  00BF               	movwf	(sprintf@_val)
  4412  04F1  0A84               	incf	fsr0,f
  4413  04F2  0800               	movf	indf,w
  4414  04F3  00C0               	movwf	(sprintf@_val+1)
  4415                           	
  4416  04F4                     l10755:	
  4417  04F4  3002               	movlw	(02h)
  4418  04F5  00B9               	movwf	(??_sprintf+0)+0
  4419  04F6  0839               	movf	(??_sprintf+0)+0,w
  4420  04F7  07BC               	addwf	(sprintf@ap),f
  4421                           	line	1256
  4422                           	
  4423  04F8                     l10757:	
  4424  04F8  1FC0               	btfss	(sprintf@_val+1),7
  4425  04F9  2CFB               	goto	u4381
  4426  04FA  2CFC               	goto	u4380
  4427  04FB                     u4381:
  4428  04FB  2D06               	goto	l10763
  4429  04FC                     u4380:
  4430                           	line	1257
  4431                           	
  4432  04FC                     l10759:	
  4433  04FC  3003               	movlw	(03h)
  4434  04FD  00B9               	movwf	(??_sprintf+0)+0
  4435  04FE  0839               	movf	(??_sprintf+0)+0,w
  4436  04FF  04BD               	iorwf	(sprintf@flag),f
  4437                           	line	1258
  4438                           	
  4439  0500                     l10761:	
  4440  0500  09BF               	comf	(sprintf@_val),f
  4441  0501  09C0               	comf	(sprintf@_val+1),f
  4442  0502  0ABF               	incf	(sprintf@_val),f
  4443  0503  1903               	skipnz
  4444  0504  0AC0               	incf	(sprintf@_val+1),f
  4445  0505  2D06               	goto	l10763
  4446                           	line	1259
  4447                           	
  4448  0506                     l6761:	
  4449                           	line	1300
  4450                           	
  4451  0506                     l10763:	
  4452  0506  01C4               	clrf	(sprintf@c)
  4453  0507  1403               	bsf	status,0
  4454  0508  0DC4               	rlf	(sprintf@c),f
  4455                           	
  4456  0509                     l10765:	
  4457  0509  0844               	movf	(sprintf@c),w
  4458  050A  3A05               	xorlw	05h
  4459  050B  1D03               	skipz
  4460  050C  2D0E               	goto	u4391
  4461  050D  2D0F               	goto	u4390
  4462  050E                     u4391:
  4463  050E  2D11               	goto	l10769
  4464  050F                     u4390:
  4465  050F  2D39               	goto	l10777
  4466                           	
  4467  0510                     l10767:	
  4468  0510  2D39               	goto	l10777
  4469                           	line	1301
  4470                           	
  4471  0511                     l6762:	
  4472                           	
  4473  0511                     l10769:	
  4474  0511  0844               	movf	(sprintf@c),w
  4475  0512  00B9               	movwf	(??_sprintf+0)+0
  4476  0513  0739               	addwf	(??_sprintf+0)+0,w
  4477  0514  3E01               	addlw	low((_dpowers-__stringbase))
  4478  0515  0084               	movwf	fsr0
  4479  0516  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4480  051B  00BA               	movwf	(??_sprintf+1)+0
  4481  051C  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4482  0521  00BB               	movwf	(??_sprintf+1)+0+1
  4483  0522  083B               	movf	1+(??_sprintf+1)+0,w
  4484  0523  0240               	subwf	(sprintf@_val+1),w
  4485  0524  1D03               	skipz
  4486  0525  2D28               	goto	u4405
  4487  0526  083A               	movf	0+(??_sprintf+1)+0,w
  4488  0527  023F               	subwf	(sprintf@_val),w
  4489  0528                     u4405:
  4490  0528  1803               	skipnc
  4491  0529  2D2B               	goto	u4401
  4492  052A  2D2C               	goto	u4400
  4493  052B                     u4401:
  4494  052B  2D2E               	goto	l10773
  4495  052C                     u4400:
  4496  052C  2D39               	goto	l10777
  4497                           	line	1302
  4498                           	
  4499  052D                     l10771:	
  4500  052D  2D39               	goto	l10777
  4501                           	
  4502  052E                     l6764:	
  4503                           	line	1300
  4504                           	
  4505  052E                     l10773:	
  4506  052E  3001               	movlw	(01h)
  4507  052F  00B9               	movwf	(??_sprintf+0)+0
  4508  0530  0839               	movf	(??_sprintf+0)+0,w
  4509  0531  07C4               	addwf	(sprintf@c),f
  4510                           	
  4511  0532                     l10775:	
  4512  0532  0844               	movf	(sprintf@c),w
  4513  0533  3A05               	xorlw	05h
  4514  0534  1D03               	skipz
  4515  0535  2D37               	goto	u4411
  4516  0536  2D38               	goto	u4410
  4517  0537                     u4411:
  4518  0537  2D11               	goto	l10769
  4519  0538                     u4410:
  4520  0538  2D39               	goto	l10777
  4521                           	
  4522  0539                     l6763:	
  4523                           	line	1433
  4524                           	
  4525  0539                     l10777:	
  4526  0539  083D               	movf	(sprintf@flag),w
  4527  053A  3903               	andlw	03h
  4528  053B  1903               	btfsc	status,2
  4529  053C  2D3E               	goto	u4421
  4530  053D  2D3F               	goto	u4420
  4531  053E                     u4421:
  4532  053E  2D4B               	goto	l10783
  4533  053F                     u4420:
  4534                           	line	1434
  4535                           	
  4536  053F                     l10779:	
  4537  053F  302D               	movlw	(02Dh)
  4538  0540  00B9               	movwf	(??_sprintf+0)+0
  4539  0541  0843               	movf	(sprintf@sp),w
  4540  0542  0084               	movwf	fsr0
  4541  0543  0839               	movf	(??_sprintf+0)+0,w
  4542  0544  1383               	bcf	status, 7	;select IRP bank0
  4543  0545  0080               	movwf	indf
  4544                           	
  4545  0546                     l10781:	
  4546  0546  3001               	movlw	(01h)
  4547  0547  00B9               	movwf	(??_sprintf+0)+0
  4548  0548  0839               	movf	(??_sprintf+0)+0,w
  4549  0549  07C3               	addwf	(sprintf@sp),f
  4550  054A  2D4B               	goto	l10783
  4551                           	
  4552  054B                     l6765:	
  4553                           	line	1467
  4554                           	
  4555  054B                     l10783:	
  4556  054B  0844               	movf	(sprintf@c),w
  4557  054C  00B9               	movwf	(??_sprintf+0)+0
  4558  054D  0839               	movf	(??_sprintf+0)+0,w
  4559  054E  00BE               	movwf	(sprintf@prec)
  4560                           	line	1469
  4561  054F  2D90               	goto	l10791
  4562                           	
  4563  0550                     l6767:	
  4564                           	line	1484
  4565                           	
  4566  0550                     l10785:	
  4567  0550  300A               	movlw	low(0Ah)
  4568  0551  00AE               	movwf	(?___lwmod)
  4569  0552  3000               	movlw	high(0Ah)
  4570  0553  00AF               	movwf	((?___lwmod))+1
  4571  0554  083E               	movf	(sprintf@prec),w
  4572  0555  00B9               	movwf	(??_sprintf+0)+0
  4573  0556  0739               	addwf	(??_sprintf+0)+0,w
  4574  0557  3E01               	addlw	low((_dpowers-__stringbase))
  4575  0558  0084               	movwf	fsr0
  4576  0559  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4577  055E  00A6               	movwf	(?___lwdiv)
  4578  055F  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4579  0564  00A7               	movwf	(?___lwdiv+1)
  4580  0565  0840               	movf	(sprintf@_val+1),w
  4581  0566  01A9               	clrf	1+(?___lwdiv)+02h
  4582  0567  07A9               	addwf	1+(?___lwdiv)+02h
  4583  0568  083F               	movf	(sprintf@_val),w
  4584  0569  01A8               	clrf	0+(?___lwdiv)+02h
  4585  056A  07A8               	addwf	0+(?___lwdiv)+02h
  4586                           
  4587  056B  120A  158A  24E5   	fcall	___lwdiv
              120A  118A         
  4588  0570  1283               	bcf	status, 5	;RP0=0, select bank0
  4589  0571  1303               	bcf	status, 6	;RP1=0, select bank0
  4590  0572  0827               	movf	(1+(?___lwdiv)),w
  4591  0573  01B1               	clrf	1+(?___lwmod)+02h
  4592  0574  07B1               	addwf	1+(?___lwmod)+02h
  4593  0575  0826               	movf	(0+(?___lwdiv)),w
  4594  0576  01B0               	clrf	0+(?___lwmod)+02h
  4595  0577  07B0               	addwf	0+(?___lwmod)+02h
  4596                           
  4597  0578  120A  158A  2412   	fcall	___lwmod
              120A  118A         
  4598  057D  1283               	bcf	status, 5	;RP0=0, select bank0
  4599  057E  1303               	bcf	status, 6	;RP1=0, select bank0
  4600  057F  082E               	movf	(0+(?___lwmod)),w
  4601  0580  3E30               	addlw	030h
  4602  0581  00BA               	movwf	(??_sprintf+1)+0
  4603  0582  083A               	movf	(??_sprintf+1)+0,w
  4604  0583  00C4               	movwf	(sprintf@c)
  4605                           	line	1516
  4606                           	
  4607  0584                     l10787:	
  4608  0584  0844               	movf	(sprintf@c),w
  4609  0585  00B9               	movwf	(??_sprintf+0)+0
  4610  0586  0843               	movf	(sprintf@sp),w
  4611  0587  0084               	movwf	fsr0
  4612  0588  0839               	movf	(??_sprintf+0)+0,w
  4613  0589  1383               	bcf	status, 7	;select IRP bank0
  4614  058A  0080               	movwf	indf
  4615                           	
  4616  058B                     l10789:	
  4617  058B  3001               	movlw	(01h)
  4618  058C  00B9               	movwf	(??_sprintf+0)+0
  4619  058D  0839               	movf	(??_sprintf+0)+0,w
  4620  058E  07C3               	addwf	(sprintf@sp),f
  4621  058F  2D90               	goto	l10791
  4622                           	line	1517
  4623                           	
  4624  0590                     l6766:	
  4625                           	line	1469
  4626                           	
  4627  0590                     l10791:	
  4628  0590  30FF               	movlw	(-1)
  4629  0591  00B9               	movwf	(??_sprintf+0)+0
  4630  0592  0839               	movf	(??_sprintf+0)+0,w
  4631  0593  07BE               	addwf	(sprintf@prec),f
  4632  0594  083E               	movf	((sprintf@prec)),w
  4633  0595  3AFF               	xorlw	-1
  4634  0596  1D03               	skipz
  4635  0597  2D99               	goto	u4431
  4636  0598  2D9A               	goto	u4430
  4637  0599                     u4431:
  4638  0599  2D50               	goto	l10785
  4639  059A                     u4430:
  4640  059A  2D9C               	goto	l10793
  4641                           	
  4642  059B                     l6768:	
  4643  059B  2D9C               	goto	l10793
  4644                           	line	1525
  4645                           	
  4646  059C                     l6751:	
  4647                           	line	540
  4648                           	
  4649  059C                     l10793:	
  4650  059C  3001               	movlw	01h
  4651  059D  07B4               	addwf	(sprintf@f),f
  4652  059E  30FF               	movlw	-01h
  4653  059F  0734               	addwf	(sprintf@f),w
  4654  05A0  0084               	movwf	fsr0
  4655  05A1  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4656  05A6  00B9               	movwf	(??_sprintf+0)+0
  4657  05A7  0839               	movf	(??_sprintf+0)+0,w
  4658  05A8  00C4               	movwf	(sprintf@c)
  4659  05A9  08C4               	movf	((sprintf@c)),f
  4660  05AA  1D03               	skipz
  4661  05AB  2DAD               	goto	u4441
  4662  05AC  2DAE               	goto	u4440
  4663  05AD                     u4441:
  4664  05AD  2CBE               	goto	l10743
  4665  05AE                     u4440:
  4666  05AE  2DB0               	goto	l10795
  4667                           	
  4668  05AF                     l6769:	
  4669  05AF  2DB0               	goto	l10795
  4670                           	line	1527
  4671                           	
  4672  05B0                     l6756:	
  4673                           	line	1530
  4674                           	
  4675  05B0                     l10795:	
  4676  05B0  0843               	movf	(sprintf@sp),w
  4677  05B1  0084               	movwf	fsr0
  4678  05B2  1383               	bcf	status, 7	;select IRP bank0
  4679  05B3  0180               	clrf	indf
  4680  05B4  2DB5               	goto	l6770
  4681                           	line	1532
  4682                           	
  4683  05B5                     l10797:	
  4684                           	line	1533
  4685                           ;	Return value of _sprintf is never used
  4686                           	
  4687  05B5                     l6770:	
  4688  05B5  0008               	return
  4689                           	opt stack 0
  4690                           GLOBAL	__end_of_sprintf
  4691  05B6                     	__end_of_sprintf:
  4692 ;; =============== function _sprintf ends ============
  4693                           
  4694                           	signat	_sprintf,4698
  4695                           	global	_ADCconvert
  4696                           psect	text907,local,class=CODE,delta=2
  4697                           global __ptext907
  4698  0015                     __ptext907:
  4699                           
  4700 ;; *************** function _ADCconvert *****************
  4701 ;; Defined at:
  4702 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;		None               void
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0, pclath, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4716 ;;      Params:         0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0
  4718 ;;      Temps:          0       2       0       0       0
  4719 ;;      Totals:         0       2       0       0       0
  4720 ;;Total ram usage:        2 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    4
  4723 ;; This function calls:
  4724 ;;		___wmul
  4725 ;;		___lwdiv
  4726 ;; This function is called by:
  4727 ;;		_readAvgDistance
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           psect	text907
  4731                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4732                           	line	33
  4733                           	global	__size_of_ADCconvert
  4734  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  4735                           	
  4736  0015                     _ADCconvert:	
  4737                           	opt	stack 1
  4738                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  4739                           	line	39
  4740                           	
  4741  0015                     l10699:	
  4742                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  4743  0015  3000               	movlw	high(0D5h)
  4744  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  4745  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  4746  0018  026B               	subwf	(_adcVal+1),w	;volatile
  4747  0019  30D5               	movlw	low(0D5h)
  4748  001A  1903               	skipnz
  4749  001B  026A               	subwf	(_adcVal),w	;volatile
  4750  001C  1C03               	skipc
  4751  001D  281F               	goto	u4231
  4752  001E  2820               	goto	u4230
  4753  001F                     u4231:
  4754  001F  2863               	goto	l10705
  4755  0020                     u4230:
  4756                           	
  4757  0020                     l10701:	
  4758  0020  3000               	movlw	high(0EAh)
  4759  0021  026B               	subwf	(_adcVal+1),w	;volatile
  4760  0022  30EA               	movlw	low(0EAh)
  4761  0023  1903               	skipnz
  4762  0024  026A               	subwf	(_adcVal),w	;volatile
  4763  0025  1803               	skipnc
  4764  0026  2828               	goto	u4241
  4765  0027  2829               	goto	u4240
  4766  0028                     u4241:
  4767  0028  2863               	goto	l10705
  4768  0029                     u4240:
  4769                           	line	41
  4770                           	
  4771  0029                     l10703:	
  4772                           ;infrared.c: 40: {
  4773                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  4774  0029  3015               	movlw	low(015h)
  4775  002A  00A6               	movwf	(?___lwdiv)
  4776  002B  3000               	movlw	high(015h)
  4777  002C  00A7               	movwf	((?___lwdiv))+1
  4778  002D  096A               	comf	(_adcVal),w	;volatile
  4779  002E  00AE               	movwf	(??_ADCconvert+0)+0
  4780  002F  096B               	comf	(_adcVal+1),w	;volatile
  4781  0030  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4782  0031  0AAE               	incf	(??_ADCconvert+0)+0,f
  4783  0032  1903               	skipnz
  4784  0033  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4785  0034  082E               	movf	0+(??_ADCconvert+0)+0,w
  4786  0035  3EEA               	addlw	low(0EAh)
  4787  0036  00A0               	movwf	(?___wmul)
  4788  0037  082F               	movf	1+(??_ADCconvert+0)+0,w
  4789  0038  1803               	skipnc
  4790  0039  3E01               	addlw	1
  4791  003A  3E00               	addlw	high(0EAh)
  4792  003B  00A1               	movwf	1+(?___wmul)
  4793  003C  3005               	movlw	low(05h)
  4794  003D  00A2               	movwf	0+(?___wmul)+02h
  4795  003E  3000               	movlw	high(05h)
  4796  003F  00A3               	movwf	(0+(?___wmul)+02h)+1
  4797  0040  120A  158A  227E   	fcall	___wmul
              120A  118A         
  4798  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  4799  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  4800  0047  0821               	movf	(1+(?___wmul)),w
  4801  0048  01A9               	clrf	1+(?___lwdiv)+02h
  4802  0049  07A9               	addwf	1+(?___lwdiv)+02h
  4803  004A  0820               	movf	(0+(?___wmul)),w
  4804  004B  01A8               	clrf	0+(?___lwdiv)+02h
  4805  004C  07A8               	addwf	0+(?___lwdiv)+02h
  4806                           
  4807  004D  120A  158A  24E5   	fcall	___lwdiv
              120A  118A         
  4808  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  4809  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  4810  0054  0826               	movf	(0+(?___lwdiv)),w
  4811  0055  3E0F               	addlw	low(0Fh)
  4812  0056  1683               	bsf	status, 5	;RP0=1, select bank1
  4813  0057  1303               	bcf	status, 6	;RP1=0, select bank1
  4814  0058  00C6               	movwf	(_distance)^080h	;volatile
  4815  0059  1283               	bcf	status, 5	;RP0=0, select bank0
  4816  005A  1303               	bcf	status, 6	;RP1=0, select bank0
  4817  005B  0827               	movf	(1+(?___lwdiv)),w
  4818  005C  1803               	skipnc
  4819  005D  3E01               	addlw	1
  4820  005E  3E00               	addlw	high(0Fh)
  4821  005F  1683               	bsf	status, 5	;RP0=1, select bank1
  4822  0060  1303               	bcf	status, 6	;RP1=0, select bank1
  4823  0061  00C7               	movwf	1+(_distance)^080h	;volatile
  4824                           	line	42
  4825                           ;infrared.c: 42: }
  4826  0062  2A37               	goto	l3002
  4827                           	line	43
  4828                           	
  4829  0063                     l2989:	
  4830                           	
  4831  0063                     l10705:	
  4832                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  4833  0063  3000               	movlw	high(0AAh)
  4834  0064  1283               	bcf	status, 5	;RP0=0, select bank0
  4835  0065  026B               	subwf	(_adcVal+1),w	;volatile
  4836  0066  30AA               	movlw	low(0AAh)
  4837  0067  1903               	skipnz
  4838  0068  026A               	subwf	(_adcVal),w	;volatile
  4839  0069  1C03               	skipc
  4840  006A  286C               	goto	u4251
  4841  006B  286D               	goto	u4250
  4842  006C                     u4251:
  4843  006C  28B0               	goto	l10711
  4844  006D                     u4250:
  4845                           	
  4846  006D                     l10707:	
  4847  006D  3000               	movlw	high(0D5h)
  4848  006E  026B               	subwf	(_adcVal+1),w	;volatile
  4849  006F  30D5               	movlw	low(0D5h)
  4850  0070  1903               	skipnz
  4851  0071  026A               	subwf	(_adcVal),w	;volatile
  4852  0072  1803               	skipnc
  4853  0073  2875               	goto	u4261
  4854  0074  2876               	goto	u4260
  4855  0075                     u4261:
  4856  0075  28B0               	goto	l10711
  4857  0076                     u4260:
  4858                           	line	45
  4859                           	
  4860  0076                     l10709:	
  4861                           ;infrared.c: 44: {
  4862                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  4863  0076  302B               	movlw	low(02Bh)
  4864  0077  00A6               	movwf	(?___lwdiv)
  4865  0078  3000               	movlw	high(02Bh)
  4866  0079  00A7               	movwf	((?___lwdiv))+1
  4867  007A  096A               	comf	(_adcVal),w	;volatile
  4868  007B  00AE               	movwf	(??_ADCconvert+0)+0
  4869  007C  096B               	comf	(_adcVal+1),w	;volatile
  4870  007D  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4871  007E  0AAE               	incf	(??_ADCconvert+0)+0,f
  4872  007F  1903               	skipnz
  4873  0080  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4874  0081  082E               	movf	0+(??_ADCconvert+0)+0,w
  4875  0082  3ED5               	addlw	low(0D5h)
  4876  0083  00A0               	movwf	(?___wmul)
  4877  0084  082F               	movf	1+(??_ADCconvert+0)+0,w
  4878  0085  1803               	skipnc
  4879  0086  3E01               	addlw	1
  4880  0087  3E00               	addlw	high(0D5h)
  4881  0088  00A1               	movwf	1+(?___wmul)
  4882  0089  300A               	movlw	low(0Ah)
  4883  008A  00A2               	movwf	0+(?___wmul)+02h
  4884  008B  3000               	movlw	high(0Ah)
  4885  008C  00A3               	movwf	(0+(?___wmul)+02h)+1
  4886  008D  120A  158A  227E   	fcall	___wmul
              120A  118A         
  4887  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  4888  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  4889  0094  0821               	movf	(1+(?___wmul)),w
  4890  0095  01A9               	clrf	1+(?___lwdiv)+02h
  4891  0096  07A9               	addwf	1+(?___lwdiv)+02h
  4892  0097  0820               	movf	(0+(?___wmul)),w
  4893  0098  01A8               	clrf	0+(?___lwdiv)+02h
  4894  0099  07A8               	addwf	0+(?___lwdiv)+02h
  4895                           
  4896  009A  120A  158A  24E5   	fcall	___lwdiv
              120A  118A         
  4897  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  4898  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  4899  00A1  0826               	movf	(0+(?___lwdiv)),w
  4900  00A2  3E14               	addlw	low(014h)
  4901  00A3  1683               	bsf	status, 5	;RP0=1, select bank1
  4902  00A4  1303               	bcf	status, 6	;RP1=0, select bank1
  4903  00A5  00C6               	movwf	(_distance)^080h	;volatile
  4904  00A6  1283               	bcf	status, 5	;RP0=0, select bank0
  4905  00A7  1303               	bcf	status, 6	;RP1=0, select bank0
  4906  00A8  0827               	movf	(1+(?___lwdiv)),w
  4907  00A9  1803               	skipnc
  4908  00AA  3E01               	addlw	1
  4909  00AB  3E00               	addlw	high(014h)
  4910  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  4911  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  4912  00AE  00C7               	movwf	1+(_distance)^080h	;volatile
  4913                           	line	46
  4914                           ;infrared.c: 46: }
  4915  00AF  2A37               	goto	l3002
  4916                           	line	47
  4917                           	
  4918  00B0                     l2991:	
  4919                           	
  4920  00B0                     l10711:	
  4921                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  4922  00B0  3000               	movlw	high(080h)
  4923  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
  4924  00B2  026B               	subwf	(_adcVal+1),w	;volatile
  4925  00B3  3080               	movlw	low(080h)
  4926  00B4  1903               	skipnz
  4927  00B5  026A               	subwf	(_adcVal),w	;volatile
  4928  00B6  1C03               	skipc
  4929  00B7  28B9               	goto	u4271
  4930  00B8  28BA               	goto	u4270
  4931  00B9                     u4271:
  4932  00B9  28FD               	goto	l10717
  4933  00BA                     u4270:
  4934                           	
  4935  00BA                     l10713:	
  4936  00BA  3000               	movlw	high(0AAh)
  4937  00BB  026B               	subwf	(_adcVal+1),w	;volatile
  4938  00BC  30AA               	movlw	low(0AAh)
  4939  00BD  1903               	skipnz
  4940  00BE  026A               	subwf	(_adcVal),w	;volatile
  4941  00BF  1803               	skipnc
  4942  00C0  28C2               	goto	u4281
  4943  00C1  28C3               	goto	u4280
  4944  00C2                     u4281:
  4945  00C2  28FD               	goto	l10717
  4946  00C3                     u4280:
  4947                           	line	49
  4948                           	
  4949  00C3                     l10715:	
  4950                           ;infrared.c: 48: {
  4951                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  4952  00C3  302A               	movlw	low(02Ah)
  4953  00C4  00A6               	movwf	(?___lwdiv)
  4954  00C5  3000               	movlw	high(02Ah)
  4955  00C6  00A7               	movwf	((?___lwdiv))+1
  4956  00C7  096A               	comf	(_adcVal),w	;volatile
  4957  00C8  00AE               	movwf	(??_ADCconvert+0)+0
  4958  00C9  096B               	comf	(_adcVal+1),w	;volatile
  4959  00CA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4960  00CB  0AAE               	incf	(??_ADCconvert+0)+0,f
  4961  00CC  1903               	skipnz
  4962  00CD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4963  00CE  082E               	movf	0+(??_ADCconvert+0)+0,w
  4964  00CF  3EAA               	addlw	low(0AAh)
  4965  00D0  00A0               	movwf	(?___wmul)
  4966  00D1  082F               	movf	1+(??_ADCconvert+0)+0,w
  4967  00D2  1803               	skipnc
  4968  00D3  3E01               	addlw	1
  4969  00D4  3E00               	addlw	high(0AAh)
  4970  00D5  00A1               	movwf	1+(?___wmul)
  4971  00D6  300A               	movlw	low(0Ah)
  4972  00D7  00A2               	movwf	0+(?___wmul)+02h
  4973  00D8  3000               	movlw	high(0Ah)
  4974  00D9  00A3               	movwf	(0+(?___wmul)+02h)+1
  4975  00DA  120A  158A  227E   	fcall	___wmul
              120A  118A         
  4976  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4977  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4978  00E1  0821               	movf	(1+(?___wmul)),w
  4979  00E2  01A9               	clrf	1+(?___lwdiv)+02h
  4980  00E3  07A9               	addwf	1+(?___lwdiv)+02h
  4981  00E4  0820               	movf	(0+(?___wmul)),w
  4982  00E5  01A8               	clrf	0+(?___lwdiv)+02h
  4983  00E6  07A8               	addwf	0+(?___lwdiv)+02h
  4984                           
  4985  00E7  120A  158A  24E5   	fcall	___lwdiv
              120A  118A         
  4986  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4987  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4988  00EE  0826               	movf	(0+(?___lwdiv)),w
  4989  00EF  3E1E               	addlw	low(01Eh)
  4990  00F0  1683               	bsf	status, 5	;RP0=1, select bank1
  4991  00F1  1303               	bcf	status, 6	;RP1=0, select bank1
  4992  00F2  00C6               	movwf	(_distance)^080h	;volatile
  4993  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4994  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4995  00F5  0827               	movf	(1+(?___lwdiv)),w
  4996  00F6  1803               	skipnc
  4997  00F7  3E01               	addlw	1
  4998  00F8  3E00               	addlw	high(01Eh)
  4999  00F9  1683               	bsf	status, 5	;RP0=1, select bank1
  5000  00FA  1303               	bcf	status, 6	;RP1=0, select bank1
  5001  00FB  00C7               	movwf	1+(_distance)^080h	;volatile
  5002                           	line	50
  5003                           ;infrared.c: 50: }
  5004  00FC  2A37               	goto	l3002
  5005                           	line	51
  5006                           	
  5007  00FD                     l2993:	
  5008                           	
  5009  00FD                     l10717:	
  5010                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  5011  00FD  3000               	movlw	high(06Bh)
  5012  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  5013  00FF  026B               	subwf	(_adcVal+1),w	;volatile
  5014  0100  306B               	movlw	low(06Bh)
  5015  0101  1903               	skipnz
  5016  0102  026A               	subwf	(_adcVal),w	;volatile
  5017  0103  1C03               	skipc
  5018  0104  2906               	goto	u4291
  5019  0105  2907               	goto	u4290
  5020  0106                     u4291:
  5021  0106  294A               	goto	l10723
  5022  0107                     u4290:
  5023                           	
  5024  0107                     l10719:	
  5025  0107  3000               	movlw	high(080h)
  5026  0108  026B               	subwf	(_adcVal+1),w	;volatile
  5027  0109  3080               	movlw	low(080h)
  5028  010A  1903               	skipnz
  5029  010B  026A               	subwf	(_adcVal),w	;volatile
  5030  010C  1803               	skipnc
  5031  010D  290F               	goto	u4301
  5032  010E  2910               	goto	u4300
  5033  010F                     u4301:
  5034  010F  294A               	goto	l10723
  5035  0110                     u4300:
  5036                           	line	53
  5037                           	
  5038  0110                     l10721:	
  5039                           ;infrared.c: 52: {
  5040                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  5041  0110  3015               	movlw	low(015h)
  5042  0111  00A6               	movwf	(?___lwdiv)
  5043  0112  3000               	movlw	high(015h)
  5044  0113  00A7               	movwf	((?___lwdiv))+1
  5045  0114  096A               	comf	(_adcVal),w	;volatile
  5046  0115  00AE               	movwf	(??_ADCconvert+0)+0
  5047  0116  096B               	comf	(_adcVal+1),w	;volatile
  5048  0117  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5049  0118  0AAE               	incf	(??_ADCconvert+0)+0,f
  5050  0119  1903               	skipnz
  5051  011A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5052  011B  082E               	movf	0+(??_ADCconvert+0)+0,w
  5053  011C  3E80               	addlw	low(080h)
  5054  011D  00A0               	movwf	(?___wmul)
  5055  011E  082F               	movf	1+(??_ADCconvert+0)+0,w
  5056  011F  1803               	skipnc
  5057  0120  3E01               	addlw	1
  5058  0121  3E00               	addlw	high(080h)
  5059  0122  00A1               	movwf	1+(?___wmul)
  5060  0123  300A               	movlw	low(0Ah)
  5061  0124  00A2               	movwf	0+(?___wmul)+02h
  5062  0125  3000               	movlw	high(0Ah)
  5063  0126  00A3               	movwf	(0+(?___wmul)+02h)+1
  5064  0127  120A  158A  227E   	fcall	___wmul
              120A  118A         
  5065  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  5066  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  5067  012E  0821               	movf	(1+(?___wmul)),w
  5068  012F  01A9               	clrf	1+(?___lwdiv)+02h
  5069  0130  07A9               	addwf	1+(?___lwdiv)+02h
  5070  0131  0820               	movf	(0+(?___wmul)),w
  5071  0132  01A8               	clrf	0+(?___lwdiv)+02h
  5072  0133  07A8               	addwf	0+(?___lwdiv)+02h
  5073                           
  5074  0134  120A  158A  24E5   	fcall	___lwdiv
              120A  118A         
  5075  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  5076  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  5077  013B  0826               	movf	(0+(?___lwdiv)),w
  5078  013C  3E28               	addlw	low(028h)
  5079  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  5080  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  5081  013F  00C6               	movwf	(_distance)^080h	;volatile
  5082  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  5083  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  5084  0142  0827               	movf	(1+(?___lwdiv)),w
  5085  0143  1803               	skipnc
  5086  0144  3E01               	addlw	1
  5087  0145  3E00               	addlw	high(028h)
  5088  0146  1683               	bsf	status, 5	;RP0=1, select bank1
  5089  0147  1303               	bcf	status, 6	;RP1=0, select bank1
  5090  0148  00C7               	movwf	1+(_distance)^080h	;volatile
  5091                           	line	54
  5092                           ;infrared.c: 54: }
  5093  0149  2A37               	goto	l3002
  5094                           	line	55
  5095                           	
  5096  014A                     l2995:	
  5097                           	
  5098  014A                     l10723:	
  5099                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  5100  014A  3000               	movlw	high(04Dh)
  5101  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  5102  014C  026B               	subwf	(_adcVal+1),w	;volatile
  5103  014D  304D               	movlw	low(04Dh)
  5104  014E  1903               	skipnz
  5105  014F  026A               	subwf	(_adcVal),w	;volatile
  5106  0150  1C03               	skipc
  5107  0151  2953               	goto	u4311
  5108  0152  2954               	goto	u4310
  5109  0153                     u4311:
  5110  0153  2997               	goto	l10729
  5111  0154                     u4310:
  5112                           	
  5113  0154                     l10725:	
  5114  0154  3000               	movlw	high(06Bh)
  5115  0155  026B               	subwf	(_adcVal+1),w	;volatile
  5116  0156  306B               	movlw	low(06Bh)
  5117  0157  1903               	skipnz
  5118  0158  026A               	subwf	(_adcVal),w	;volatile
  5119  0159  1803               	skipnc
  5120  015A  295C               	goto	u4321
  5121  015B  295D               	goto	u4320
  5122  015C                     u4321:
  5123  015C  2997               	goto	l10729
  5124  015D                     u4320:
  5125                           	line	57
  5126                           	
  5127  015D                     l10727:	
  5128                           ;infrared.c: 56: {
  5129                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  5130  015D  301E               	movlw	low(01Eh)
  5131  015E  00A6               	movwf	(?___lwdiv)
  5132  015F  3000               	movlw	high(01Eh)
  5133  0160  00A7               	movwf	((?___lwdiv))+1
  5134  0161  096A               	comf	(_adcVal),w	;volatile
  5135  0162  00AE               	movwf	(??_ADCconvert+0)+0
  5136  0163  096B               	comf	(_adcVal+1),w	;volatile
  5137  0164  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5138  0165  0AAE               	incf	(??_ADCconvert+0)+0,f
  5139  0166  1903               	skipnz
  5140  0167  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5141  0168  082E               	movf	0+(??_ADCconvert+0)+0,w
  5142  0169  3E6B               	addlw	low(06Bh)
  5143  016A  00A0               	movwf	(?___wmul)
  5144  016B  082F               	movf	1+(??_ADCconvert+0)+0,w
  5145  016C  1803               	skipnc
  5146  016D  3E01               	addlw	1
  5147  016E  3E00               	addlw	high(06Bh)
  5148  016F  00A1               	movwf	1+(?___wmul)
  5149  0170  300A               	movlw	low(0Ah)
  5150  0171  00A2               	movwf	0+(?___wmul)+02h
  5151  0172  3000               	movlw	high(0Ah)
  5152  0173  00A3               	movwf	(0+(?___wmul)+02h)+1
  5153  0174  120A  158A  227E   	fcall	___wmul
              120A  118A         
  5154  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  5155  017A  1303               	bcf	status, 6	;RP1=0, select bank0
  5156  017B  0821               	movf	(1+(?___wmul)),w
  5157  017C  01A9               	clrf	1+(?___lwdiv)+02h
  5158  017D  07A9               	addwf	1+(?___lwdiv)+02h
  5159  017E  0820               	movf	(0+(?___wmul)),w
  5160  017F  01A8               	clrf	0+(?___lwdiv)+02h
  5161  0180  07A8               	addwf	0+(?___lwdiv)+02h
  5162                           
  5163  0181  120A  158A  24E5   	fcall	___lwdiv
              120A  118A         
  5164  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  5165  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  5166  0188  0826               	movf	(0+(?___lwdiv)),w
  5167  0189  3E32               	addlw	low(032h)
  5168  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  5169  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  5170  018C  00C6               	movwf	(_distance)^080h	;volatile
  5171  018D  1283               	bcf	status, 5	;RP0=0, select bank0
  5172  018E  1303               	bcf	status, 6	;RP1=0, select bank0
  5173  018F  0827               	movf	(1+(?___lwdiv)),w
  5174  0190  1803               	skipnc
  5175  0191  3E01               	addlw	1
  5176  0192  3E00               	addlw	high(032h)
  5177  0193  1683               	bsf	status, 5	;RP0=1, select bank1
  5178  0194  1303               	bcf	status, 6	;RP1=0, select bank1
  5179  0195  00C7               	movwf	1+(_distance)^080h	;volatile
  5180                           	line	58
  5181                           ;infrared.c: 58: }
  5182  0196  2A37               	goto	l3002
  5183                           	line	59
  5184                           	
  5185  0197                     l2997:	
  5186                           	
  5187  0197                     l10729:	
  5188                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  5189  0197  3000               	movlw	high(038h)
  5190  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  5191  0199  026B               	subwf	(_adcVal+1),w	;volatile
  5192  019A  3038               	movlw	low(038h)
  5193  019B  1903               	skipnz
  5194  019C  026A               	subwf	(_adcVal),w	;volatile
  5195  019D  1C03               	skipc
  5196  019E  29A0               	goto	u4331
  5197  019F  29A1               	goto	u4330
  5198  01A0                     u4331:
  5199  01A0  29E4               	goto	l10735
  5200  01A1                     u4330:
  5201                           	
  5202  01A1                     l10731:	
  5203  01A1  3000               	movlw	high(04Dh)
  5204  01A2  026B               	subwf	(_adcVal+1),w	;volatile
  5205  01A3  304D               	movlw	low(04Dh)
  5206  01A4  1903               	skipnz
  5207  01A5  026A               	subwf	(_adcVal),w	;volatile
  5208  01A6  1803               	skipnc
  5209  01A7  29A9               	goto	u4341
  5210  01A8  29AA               	goto	u4340
  5211  01A9                     u4341:
  5212  01A9  29E4               	goto	l10735
  5213  01AA                     u4340:
  5214                           	line	61
  5215                           	
  5216  01AA                     l10733:	
  5217                           ;infrared.c: 60: {
  5218                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  5219  01AA  3015               	movlw	low(015h)
  5220  01AB  00A6               	movwf	(?___lwdiv)
  5221  01AC  3000               	movlw	high(015h)
  5222  01AD  00A7               	movwf	((?___lwdiv))+1
  5223  01AE  096A               	comf	(_adcVal),w	;volatile
  5224  01AF  00AE               	movwf	(??_ADCconvert+0)+0
  5225  01B0  096B               	comf	(_adcVal+1),w	;volatile
  5226  01B1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5227  01B2  0AAE               	incf	(??_ADCconvert+0)+0,f
  5228  01B3  1903               	skipnz
  5229  01B4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5230  01B5  082E               	movf	0+(??_ADCconvert+0)+0,w
  5231  01B6  3E4D               	addlw	low(04Dh)
  5232  01B7  00A0               	movwf	(?___wmul)
  5233  01B8  082F               	movf	1+(??_ADCconvert+0)+0,w
  5234  01B9  1803               	skipnc
  5235  01BA  3E01               	addlw	1
  5236  01BB  3E00               	addlw	high(04Dh)
  5237  01BC  00A1               	movwf	1+(?___wmul)
  5238  01BD  300A               	movlw	low(0Ah)
  5239  01BE  00A2               	movwf	0+(?___wmul)+02h
  5240  01BF  3000               	movlw	high(0Ah)
  5241  01C0  00A3               	movwf	(0+(?___wmul)+02h)+1
  5242  01C1  120A  158A  227E   	fcall	___wmul
              120A  118A         
  5243  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  5244  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  5245  01C8  0821               	movf	(1+(?___wmul)),w
  5246  01C9  01A9               	clrf	1+(?___lwdiv)+02h
  5247  01CA  07A9               	addwf	1+(?___lwdiv)+02h
  5248  01CB  0820               	movf	(0+(?___wmul)),w
  5249  01CC  01A8               	clrf	0+(?___lwdiv)+02h
  5250  01CD  07A8               	addwf	0+(?___lwdiv)+02h
  5251                           
  5252  01CE  120A  158A  24E5   	fcall	___lwdiv
              120A  118A         
  5253  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
  5254  01D4  1303               	bcf	status, 6	;RP1=0, select bank0
  5255  01D5  0826               	movf	(0+(?___lwdiv)),w
  5256  01D6  3E3C               	addlw	low(03Ch)
  5257  01D7  1683               	bsf	status, 5	;RP0=1, select bank1
  5258  01D8  1303               	bcf	status, 6	;RP1=0, select bank1
  5259  01D9  00C6               	movwf	(_distance)^080h	;volatile
  5260  01DA  1283               	bcf	status, 5	;RP0=0, select bank0
  5261  01DB  1303               	bcf	status, 6	;RP1=0, select bank0
  5262  01DC  0827               	movf	(1+(?___lwdiv)),w
  5263  01DD  1803               	skipnc
  5264  01DE  3E01               	addlw	1
  5265  01DF  3E00               	addlw	high(03Ch)
  5266  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  5267  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  5268  01E2  00C7               	movwf	1+(_distance)^080h	;volatile
  5269                           	line	62
  5270                           ;infrared.c: 62: }
  5271  01E3  2A37               	goto	l3002
  5272                           	line	63
  5273                           	
  5274  01E4                     l2999:	
  5275                           	
  5276  01E4                     l10735:	
  5277                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  5278  01E4  3000               	movlw	high(02Bh)
  5279  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  5280  01E6  026B               	subwf	(_adcVal+1),w	;volatile
  5281  01E7  302B               	movlw	low(02Bh)
  5282  01E8  1903               	skipnz
  5283  01E9  026A               	subwf	(_adcVal),w	;volatile
  5284  01EA  1C03               	skipc
  5285  01EB  29ED               	goto	u4351
  5286  01EC  29EE               	goto	u4350
  5287  01ED                     u4351:
  5288  01ED  2A37               	goto	l3002
  5289  01EE                     u4350:
  5290                           	
  5291  01EE                     l10737:	
  5292  01EE  3000               	movlw	high(038h)
  5293  01EF  026B               	subwf	(_adcVal+1),w	;volatile
  5294  01F0  3038               	movlw	low(038h)
  5295  01F1  1903               	skipnz
  5296  01F2  026A               	subwf	(_adcVal),w	;volatile
  5297  01F3  1803               	skipnc
  5298  01F4  29F6               	goto	u4361
  5299  01F5  29F7               	goto	u4360
  5300  01F6                     u4361:
  5301  01F6  2A37               	goto	l3002
  5302  01F7                     u4360:
  5303                           	line	65
  5304                           	
  5305  01F7                     l10739:	
  5306                           ;infrared.c: 64: {
  5307                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  5308  01F7  300D               	movlw	low(0Dh)
  5309  01F8  00A6               	movwf	(?___lwdiv)
  5310  01F9  3000               	movlw	high(0Dh)
  5311  01FA  00A7               	movwf	((?___lwdiv))+1
  5312  01FB  096A               	comf	(_adcVal),w	;volatile
  5313  01FC  00AE               	movwf	(??_ADCconvert+0)+0
  5314  01FD  096B               	comf	(_adcVal+1),w	;volatile
  5315  01FE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5316  01FF  0AAE               	incf	(??_ADCconvert+0)+0,f
  5317  0200  1903               	skipnz
  5318  0201  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5319  0202  082E               	movf	0+(??_ADCconvert+0)+0,w
  5320  0203  3E38               	addlw	low(038h)
  5321  0204  00A0               	movwf	(?___wmul)
  5322  0205  082F               	movf	1+(??_ADCconvert+0)+0,w
  5323  0206  1803               	skipnc
  5324  0207  3E01               	addlw	1
  5325  0208  3E00               	addlw	high(038h)
  5326  0209  00A1               	movwf	1+(?___wmul)
  5327  020A  300A               	movlw	low(0Ah)
  5328  020B  00A2               	movwf	0+(?___wmul)+02h
  5329  020C  3000               	movlw	high(0Ah)
  5330  020D  00A3               	movwf	(0+(?___wmul)+02h)+1
  5331  020E  120A  158A  227E   	fcall	___wmul
              120A  118A         
  5332  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  5333  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  5334  0215  0821               	movf	(1+(?___wmul)),w
  5335  0216  01A9               	clrf	1+(?___lwdiv)+02h
  5336  0217  07A9               	addwf	1+(?___lwdiv)+02h
  5337  0218  0820               	movf	(0+(?___wmul)),w
  5338  0219  01A8               	clrf	0+(?___lwdiv)+02h
  5339  021A  07A8               	addwf	0+(?___lwdiv)+02h
  5340                           
  5341  021B  120A  158A  24E5   	fcall	___lwdiv
              120A  118A         
  5342  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  5343  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  5344  0222  0826               	movf	(0+(?___lwdiv)),w
  5345  0223  3E46               	addlw	low(046h)
  5346  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  5347  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  5348  0226  00C6               	movwf	(_distance)^080h	;volatile
  5349  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  5350  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  5351  0229  0827               	movf	(1+(?___lwdiv)),w
  5352  022A  1803               	skipnc
  5353  022B  3E01               	addlw	1
  5354  022C  3E00               	addlw	high(046h)
  5355  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  5356  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  5357  022F  00C7               	movwf	1+(_distance)^080h	;volatile
  5358  0230  2A37               	goto	l3002
  5359                           	line	66
  5360                           	
  5361  0231                     l3001:	
  5362  0231  2A37               	goto	l3002
  5363                           	line	67
  5364                           	
  5365  0232                     l3000:	
  5366  0232  2A37               	goto	l3002
  5367                           	
  5368  0233                     l2998:	
  5369  0233  2A37               	goto	l3002
  5370                           	
  5371  0234                     l2996:	
  5372  0234  2A37               	goto	l3002
  5373                           	
  5374  0235                     l2994:	
  5375  0235  2A37               	goto	l3002
  5376                           	
  5377  0236                     l2992:	
  5378  0236  2A37               	goto	l3002
  5379                           	
  5380  0237                     l2990:	
  5381                           	
  5382  0237                     l3002:	
  5383  0237  0008               	return
  5384                           	opt stack 0
  5385                           GLOBAL	__end_of_ADCconvert
  5386  0238                     	__end_of_ADCconvert:
  5387 ;; =============== function _ADCconvert ends ============
  5388                           
  5389                           	signat	_ADCconvert,88
  5390                           	global	_robotTurn
  5391                           psect	text908,local,class=CODE,delta=2
  5392                           global __ptext908
  5393  0E54                     __ptext908:
  5394                           
  5395 ;; *************** function _robotTurn *****************
  5396 ;; Defined at:
  5397 ;;		line 79 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  distance        2    2[BANK0 ] int 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;		None               void
  5404 ;; Registers used:
  5405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         0       2       0       0       0
  5412 ;;      Locals:         0       0       0       0       0
  5413 ;;      Temps:          0       1       0       0       0
  5414 ;;      Totals:         0       3       0       0       0
  5415 ;;Total ram usage:        3 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    4
  5418 ;; This function calls:
  5419 ;;		_ser_putch
  5420 ;; This function is called by:
  5421 ;;		_main
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           psect	text908
  5425                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5426                           	line	79
  5427                           	global	__size_of_robotTurn
  5428  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  5429                           	
  5430  0E54                     _robotTurn:	
  5431                           	opt	stack 3
  5432                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5433                           	line	82
  5434                           	
  5435  0E54                     l10689:	
  5436                           ;robot.c: 82: turnlowByte = (unsigned char) (distance) ;
  5437  0E54  1283               	bcf	status, 5	;RP0=0, select bank0
  5438  0E55  1303               	bcf	status, 6	;RP1=0, select bank0
  5439  0E56  0822               	movf	(robotTurn@distance),w
  5440  0E57  00A4               	movwf	(??_robotTurn+0)+0
  5441  0E58  0824               	movf	(??_robotTurn+0)+0,w
  5442  0E59  1683               	bsf	status, 5	;RP0=1, select bank1
  5443  0E5A  1303               	bcf	status, 6	;RP1=0, select bank1
  5444  0E5B  00DE               	movwf	(_turnlowByte)^080h
  5445                           	line	83
  5446                           	
  5447  0E5C                     l10691:	
  5448                           ;robot.c: 83: turnhighByte = (unsigned char) (distance >> 8);
  5449  0E5C  1283               	bcf	status, 5	;RP0=0, select bank0
  5450  0E5D  1303               	bcf	status, 6	;RP1=0, select bank0
  5451  0E5E  0823               	movf	(robotTurn@distance+1),w
  5452  0E5F  00A4               	movwf	(??_robotTurn+0)+0
  5453  0E60  0824               	movf	(??_robotTurn+0)+0,w
  5454  0E61  1683               	bsf	status, 5	;RP0=1, select bank1
  5455  0E62  1303               	bcf	status, 6	;RP1=0, select bank1
  5456  0E63  00DD               	movwf	(_turnhighByte)^080h
  5457                           	line	84
  5458                           	
  5459  0E64                     l10693:	
  5460                           ;robot.c: 84: if (distance >= 0)
  5461  0E64  1283               	bcf	status, 5	;RP0=0, select bank0
  5462  0E65  1303               	bcf	status, 6	;RP1=0, select bank0
  5463  0E66  1BA3               	btfsc	(robotTurn@distance+1),7
  5464  0E67  2E69               	goto	u4221
  5465  0E68  2E6A               	goto	u4220
  5466  0E69                     u4221:
  5467  0E69  2E89               	goto	l10697
  5468  0E6A                     u4220:
  5469                           	line	86
  5470                           	
  5471  0E6A                     l10695:	
  5472                           ;robot.c: 85: {
  5473                           ;robot.c: 86: ser_putch(137);
  5474  0E6A  3089               	movlw	(089h)
  5475  0E6B  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5476                           	line	88
  5477                           ;robot.c: 88: ser_putch(0);
  5478  0E70  3000               	movlw	(0)
  5479  0E71  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5480                           	line	90
  5481                           ;robot.c: 90: ser_putch(100);
  5482  0E76  3064               	movlw	(064h)
  5483  0E77  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5484                           	line	92
  5485                           ;robot.c: 92: ser_putch(0);
  5486  0E7C  3000               	movlw	(0)
  5487  0E7D  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5488                           	line	94
  5489                           ;robot.c: 94: ser_putch(1);
  5490  0E82  3001               	movlw	(01h)
  5491  0E83  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5492                           	line	95
  5493                           ;robot.c: 95: }
  5494  0E88  2EA7               	goto	l6007
  5495                           	line	96
  5496                           	
  5497  0E89                     l6006:	
  5498                           	line	98
  5499                           	
  5500  0E89                     l10697:	
  5501                           ;robot.c: 96: else
  5502                           ;robot.c: 97: {
  5503                           ;robot.c: 98: ser_putch(137);
  5504  0E89  3089               	movlw	(089h)
  5505  0E8A  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5506                           	line	100
  5507                           ;robot.c: 100: ser_putch(0);
  5508  0E8F  3000               	movlw	(0)
  5509  0E90  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5510                           	line	102
  5511                           ;robot.c: 102: ser_putch(100);
  5512  0E95  3064               	movlw	(064h)
  5513  0E96  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5514                           	line	104
  5515                           ;robot.c: 104: ser_putch(255);
  5516  0E9B  30FF               	movlw	(0FFh)
  5517  0E9C  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5518                           	line	106
  5519                           ;robot.c: 106: ser_putch(255);
  5520  0EA1  30FF               	movlw	(0FFh)
  5521  0EA2  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5522                           	line	107
  5523                           	
  5524  0EA7                     l6007:	
  5525                           	line	108
  5526                           ;robot.c: 107: }
  5527                           ;robot.c: 108: ser_putch(157);
  5528  0EA7  309D               	movlw	(09Dh)
  5529  0EA8  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5530                           	line	110
  5531                           ;robot.c: 110: ser_putch(turnhighByte);
  5532  0EAD  1683               	bsf	status, 5	;RP0=1, select bank1
  5533  0EAE  1303               	bcf	status, 6	;RP1=0, select bank1
  5534  0EAF  085D               	movf	(_turnhighByte)^080h,w
  5535  0EB0  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5536                           	line	112
  5537                           ;robot.c: 112: ser_putch(turnlowByte);
  5538  0EB5  1683               	bsf	status, 5	;RP0=1, select bank1
  5539  0EB6  1303               	bcf	status, 6	;RP1=0, select bank1
  5540  0EB7  085E               	movf	(_turnlowByte)^080h,w
  5541  0EB8  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5542                           	line	114
  5543                           ;robot.c: 114: ser_putch(137);
  5544  0EBD  3089               	movlw	(089h)
  5545  0EBE  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5546                           	line	116
  5547                           ;robot.c: 116: ser_putch(0);
  5548  0EC3  3000               	movlw	(0)
  5549  0EC4  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5550                           	line	118
  5551                           ;robot.c: 118: ser_putch(0);
  5552  0EC9  3000               	movlw	(0)
  5553  0ECA  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5554                           	line	120
  5555                           ;robot.c: 120: ser_putch(0);
  5556  0ECF  3000               	movlw	(0)
  5557  0ED0  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5558                           	line	122
  5559                           ;robot.c: 122: ser_putch(0);
  5560  0ED5  3000               	movlw	(0)
  5561  0ED6  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5562                           	line	123
  5563                           	
  5564  0EDB                     l6008:	
  5565  0EDB  0008               	return
  5566                           	opt stack 0
  5567                           GLOBAL	__end_of_robotTurn
  5568  0EDC                     	__end_of_robotTurn:
  5569 ;; =============== function _robotTurn ends ============
  5570                           
  5571                           	signat	_robotTurn,4216
  5572                           	global	_robotMove
  5573                           psect	text909,local,class=CODE,delta=2
  5574                           global __ptext909
  5575  0EDC                     __ptext909:
  5576                           
  5577 ;; *************** function _robotMove *****************
  5578 ;; Defined at:
  5579 ;;		line 29 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  distance        2    2[BANK0 ] int 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5593 ;;      Params:         0       2       0       0       0
  5594 ;;      Locals:         0       0       0       0       0
  5595 ;;      Temps:          0       1       0       0       0
  5596 ;;      Totals:         0       3       0       0       0
  5597 ;;Total ram usage:        3 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    4
  5600 ;; This function calls:
  5601 ;;		_ser_putch
  5602 ;; This function is called by:
  5603 ;;		_main
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           psect	text909
  5607                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5608                           	line	29
  5609                           	global	__size_of_robotMove
  5610  008C                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  5611                           	
  5612  0EDC                     _robotMove:	
  5613                           	opt	stack 3
  5614                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5615                           	line	30
  5616                           	
  5617  0EDC                     l10679:	
  5618                           ;robot.c: 30: distTravelled =0;
  5619  0EDC  1683               	bsf	status, 5	;RP0=1, select bank1
  5620  0EDD  1303               	bcf	status, 6	;RP1=0, select bank1
  5621  0EDE  01C0               	clrf	(_distTravelled)^080h	;volatile
  5622  0EDF  01C1               	clrf	(_distTravelled+1)^080h	;volatile
  5623                           	line	31
  5624                           	
  5625  0EE0                     l10681:	
  5626                           ;robot.c: 31: lowByte = (unsigned char) (distance) ;
  5627  0EE0  1283               	bcf	status, 5	;RP0=0, select bank0
  5628  0EE1  1303               	bcf	status, 6	;RP1=0, select bank0
  5629  0EE2  0822               	movf	(robotMove@distance),w
  5630  0EE3  00A4               	movwf	(??_robotMove+0)+0
  5631  0EE4  0824               	movf	(??_robotMove+0)+0,w
  5632  0EE5  1683               	bsf	status, 5	;RP0=1, select bank1
  5633  0EE6  1303               	bcf	status, 6	;RP1=0, select bank1
  5634  0EE7  00DA               	movwf	(_lowByte)^080h
  5635                           	line	32
  5636                           ;robot.c: 32: highByte = (unsigned char) (distance >> 8);
  5637  0EE8  1283               	bcf	status, 5	;RP0=0, select bank0
  5638  0EE9  1303               	bcf	status, 6	;RP1=0, select bank0
  5639  0EEA  0823               	movf	(robotMove@distance+1),w
  5640  0EEB  00A4               	movwf	(??_robotMove+0)+0
  5641  0EEC  0824               	movf	(??_robotMove+0)+0,w
  5642  0EED  1683               	bsf	status, 5	;RP0=1, select bank1
  5643  0EEE  1303               	bcf	status, 6	;RP1=0, select bank1
  5644  0EEF  00D9               	movwf	(_highByte)^080h
  5645                           	line	33
  5646                           	
  5647  0EF0                     l10683:	
  5648                           ;robot.c: 33: if (distance >= 0)
  5649  0EF0  1283               	bcf	status, 5	;RP0=0, select bank0
  5650  0EF1  1303               	bcf	status, 6	;RP1=0, select bank0
  5651  0EF2  1BA3               	btfsc	(robotMove@distance+1),7
  5652  0EF3  2EF5               	goto	u4211
  5653  0EF4  2EF6               	goto	u4210
  5654  0EF5                     u4211:
  5655  0EF5  2F15               	goto	l10687
  5656  0EF6                     u4210:
  5657                           	line	35
  5658                           	
  5659  0EF6                     l10685:	
  5660                           ;robot.c: 34: {
  5661                           ;robot.c: 35: ser_putch(137);
  5662  0EF6  3089               	movlw	(089h)
  5663  0EF7  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5664                           	line	37
  5665                           ;robot.c: 37: ser_putch(0);
  5666  0EFC  3000               	movlw	(0)
  5667  0EFD  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5668                           	line	39
  5669                           ;robot.c: 39: ser_putch(200);
  5670  0F02  30C8               	movlw	(0C8h)
  5671  0F03  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5672                           	line	41
  5673                           ;robot.c: 41: ser_putch(128);
  5674  0F08  3080               	movlw	(080h)
  5675  0F09  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5676                           	line	43
  5677                           ;robot.c: 43: ser_putch(0);
  5678  0F0E  3000               	movlw	(0)
  5679  0F0F  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5680                           	line	44
  5681                           ;robot.c: 44: }
  5682  0F14  2F33               	goto	l6002
  5683                           	line	45
  5684                           	
  5685  0F15                     l6001:	
  5686                           	line	47
  5687                           	
  5688  0F15                     l10687:	
  5689                           ;robot.c: 45: else
  5690                           ;robot.c: 46: {
  5691                           ;robot.c: 47: ser_putch(137);
  5692  0F15  3089               	movlw	(089h)
  5693  0F16  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5694                           	line	49
  5695                           ;robot.c: 49: ser_putch(0xff);
  5696  0F1B  30FF               	movlw	(0FFh)
  5697  0F1C  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5698                           	line	51
  5699                           ;robot.c: 51: ser_putch(0x38);
  5700  0F21  3038               	movlw	(038h)
  5701  0F22  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5702                           	line	53
  5703                           ;robot.c: 53: ser_putch(128);
  5704  0F27  3080               	movlw	(080h)
  5705  0F28  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5706                           	line	55
  5707                           ;robot.c: 55: ser_putch(0);
  5708  0F2D  3000               	movlw	(0)
  5709  0F2E  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5710                           	line	56
  5711                           	
  5712  0F33                     l6002:	
  5713                           	line	60
  5714                           ;robot.c: 56: }
  5715                           ;robot.c: 60: ser_putch(156);
  5716  0F33  309C               	movlw	(09Ch)
  5717  0F34  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5718                           	line	62
  5719                           ;robot.c: 62: ser_putch(highByte);
  5720  0F39  1683               	bsf	status, 5	;RP0=1, select bank1
  5721  0F3A  1303               	bcf	status, 6	;RP1=0, select bank1
  5722  0F3B  0859               	movf	(_highByte)^080h,w
  5723  0F3C  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5724                           	line	64
  5725                           ;robot.c: 64: ser_putch(lowByte);
  5726  0F41  1683               	bsf	status, 5	;RP0=1, select bank1
  5727  0F42  1303               	bcf	status, 6	;RP1=0, select bank1
  5728  0F43  085A               	movf	(_lowByte)^080h,w
  5729  0F44  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5730                           	line	66
  5731                           ;robot.c: 66: ser_putch(137);
  5732  0F49  3089               	movlw	(089h)
  5733  0F4A  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5734                           	line	68
  5735                           ;robot.c: 68: ser_putch(0);
  5736  0F4F  3000               	movlw	(0)
  5737  0F50  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5738                           	line	70
  5739                           ;robot.c: 70: ser_putch(0);
  5740  0F55  3000               	movlw	(0)
  5741  0F56  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5742                           	line	72
  5743                           ;robot.c: 72: ser_putch(0);
  5744  0F5B  3000               	movlw	(0)
  5745  0F5C  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5746                           	line	74
  5747                           ;robot.c: 74: ser_putch(0);
  5748  0F61  3000               	movlw	(0)
  5749  0F62  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  5750                           	line	76
  5751                           	
  5752  0F67                     l6003:	
  5753  0F67  0008               	return
  5754                           	opt stack 0
  5755                           GLOBAL	__end_of_robotMove
  5756  0F68                     	__end_of_robotMove:
  5757 ;; =============== function _robotMove ends ============
  5758                           
  5759                           	signat	_robotMove,4216
  5760                           	global	_rotate
  5761                           psect	text910,local,class=CODE,delta=2
  5762                           global __ptext910
  5763  0D35                     __ptext910:
  5764                           
  5765 ;; *************** function _rotate *****************
  5766 ;; Defined at:
  5767 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  numsteps        2    3[BANK0 ] unsigned int 
  5770 ;;  direction       1    5[BANK0 ] unsigned char 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  i               2    8[BANK0 ] unsigned int 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;		None               void
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0, pclath, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5782 ;;      Params:         0       3       0       0       0
  5783 ;;      Locals:         0       2       0       0       0
  5784 ;;      Temps:          0       2       0       0       0
  5785 ;;      Totals:         0       7       0       0       0
  5786 ;;Total ram usage:        7 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    4
  5789 ;; This function calls:
  5790 ;;		_spi_transfer
  5791 ;; This function is called by:
  5792 ;;		_calibrateIR
  5793 ;;		_scan360
  5794 ;;		_main
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           psect	text910
  5798                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5799                           	line	48
  5800                           	global	__size_of_rotate
  5801  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  5802                           	
  5803  0D35                     _rotate:	
  5804                           	opt	stack 3
  5805                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  5806                           	line	50
  5807                           	
  5808  0D35                     l10651:	
  5809                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  5810  0D35  1283               	bcf	status, 5	;RP0=0, select bank0
  5811  0D36  1303               	bcf	status, 6	;RP1=0, select bank0
  5812  0D37  1407               	bsf	(56/8),(56)&7
  5813  0D38  1487               	bsf	(57/8),(57)&7
  5814                           	line	51
  5815                           	
  5816  0D39                     l10653:	
  5817                           ;steppermotor.c: 51: if (direction == 0)
  5818  0D39  08A5               	movf	(rotate@direction),f
  5819  0D3A  1D03               	skipz
  5820  0D3B  2D3D               	goto	u4191
  5821  0D3C  2D3E               	goto	u4190
  5822  0D3D                     u4191:
  5823  0D3D  2D45               	goto	l10657
  5824  0D3E                     u4190:
  5825                           	line	52
  5826                           	
  5827  0D3E                     l10655:	
  5828                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  5829  0D3E  300F               	movlw	(0Fh)
  5830  0D3F  120A  158A  213B   	fcall	_spi_transfer
              120A  158A         
  5831  0D44  2D4C               	goto	l10659
  5832                           	line	53
  5833                           	
  5834  0D45                     l3703:	
  5835                           	line	54
  5836                           	
  5837  0D45                     l10657:	
  5838                           ;steppermotor.c: 53: else
  5839                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  5840  0D45  300D               	movlw	(0Dh)
  5841  0D46  120A  158A  213B   	fcall	_spi_transfer
              120A  158A         
  5842  0D4B  2D4C               	goto	l10659
  5843                           	
  5844  0D4C                     l3704:	
  5845                           	line	55
  5846                           	
  5847  0D4C                     l10659:	
  5848                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  5849  0D4C  1283               	bcf	status, 5	;RP0=0, select bank0
  5850  0D4D  1303               	bcf	status, 6	;RP1=0, select bank0
  5851  0D4E  1007               	bcf	(56/8),(56)&7
  5852                           	
  5853  0D4F                     l10661:	
  5854  0D4F  1087               	bcf	(57/8),(57)&7
  5855                           	line	56
  5856                           	
  5857  0D50                     l10663:	
  5858                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  5859  0D50  01A8               	clrf	(rotate@i)
  5860  0D51  01A9               	clrf	(rotate@i+1)
  5861  0D52  2D69               	goto	l3705
  5862                           	line	57
  5863                           	
  5864  0D53                     l3706:	
  5865                           	line	58
  5866                           ;steppermotor.c: 57: {
  5867                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  5868  0D53  1507               	bsf	(58/8),(58)&7
  5869  0D54  0000               	nop
  5870  0D55  1283               	bcf	status, 5	;RP0=0, select bank0
  5871  0D56  1303               	bcf	status, 6	;RP1=0, select bank0
  5872  0D57  1107               	bcf	(58/8),(58)&7
  5873                           	line	59
  5874                           	
  5875  0D58                     l10665:	
  5876                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  5877                           	opt asmopt_off
  5878  0D58  3062               movlw	98
  5879  0D59  00A7               movwf	((??_rotate+0)+0+1),f
  5880  0D5A  3065               	movlw	101
  5881  0D5B  00A6               movwf	((??_rotate+0)+0),f
  5882  0D5C                     u4617:
  5883  0D5C  0BA6               	decfsz	((??_rotate+0)+0),f
  5884  0D5D  2D5C               	goto	u4617
  5885  0D5E  0BA7               	decfsz	((??_rotate+0)+0+1),f
  5886  0D5F  2D5C               	goto	u4617
  5887  0D60  2D61               	nop2
  5888                           opt asmopt_on
  5889                           
  5890                           	line	56
  5891  0D61  3001               	movlw	low(01h)
  5892  0D62  1283               	bcf	status, 5	;RP0=0, select bank0
  5893  0D63  1303               	bcf	status, 6	;RP1=0, select bank0
  5894  0D64  07A8               	addwf	(rotate@i),f
  5895  0D65  1803               	skipnc
  5896  0D66  0AA9               	incf	(rotate@i+1),f
  5897  0D67  3000               	movlw	high(01h)
  5898  0D68  07A9               	addwf	(rotate@i+1),f
  5899                           	
  5900  0D69                     l3705:	
  5901  0D69  0824               	movf	(rotate@numsteps+1),w
  5902  0D6A  0229               	subwf	(rotate@i+1),w
  5903  0D6B  1D03               	skipz
  5904  0D6C  2D6F               	goto	u4205
  5905  0D6D  0823               	movf	(rotate@numsteps),w
  5906  0D6E  0228               	subwf	(rotate@i),w
  5907  0D6F                     u4205:
  5908  0D6F  1C03               	skipc
  5909  0D70  2D72               	goto	u4201
  5910  0D71  2D73               	goto	u4200
  5911  0D72                     u4201:
  5912  0D72  2D53               	goto	l3706
  5913  0D73                     u4200:
  5914                           	
  5915  0D73                     l3707:	
  5916                           	line	61
  5917                           ;steppermotor.c: 60: }
  5918                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  5919  0D73  1407               	bsf	(56/8),(56)&7
  5920  0D74  1487               	bsf	(57/8),(57)&7
  5921                           	line	62
  5922                           	
  5923  0D75                     l10667:	
  5924                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  5925  0D75  3000               	movlw	(0)
  5926  0D76  120A  158A  213B   	fcall	_spi_transfer
              120A  158A         
  5927                           	line	63
  5928                           	
  5929  0D7B                     l10669:	
  5930                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  5931  0D7B  1283               	bcf	status, 5	;RP0=0, select bank0
  5932  0D7C  1303               	bcf	status, 6	;RP1=0, select bank0
  5933  0D7D  1007               	bcf	(56/8),(56)&7
  5934                           	
  5935  0D7E                     l10671:	
  5936  0D7E  1087               	bcf	(57/8),(57)&7
  5937                           	line	64
  5938                           	
  5939  0D7F                     l10673:	
  5940                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  5941  0D7F  1507               	bsf	(58/8),(58)&7
  5942                           	
  5943  0D80                     l10675:	
  5944  0D80  0000               	nop
  5945                           	
  5946  0D81                     l10677:	
  5947  0D81  1283               	bcf	status, 5	;RP0=0, select bank0
  5948  0D82  1303               	bcf	status, 6	;RP1=0, select bank0
  5949  0D83  1107               	bcf	(58/8),(58)&7
  5950                           	line	65
  5951                           	
  5952  0D84                     l3708:	
  5953  0D84  0008               	return
  5954                           	opt stack 0
  5955                           GLOBAL	__end_of_rotate
  5956  0D85                     	__end_of_rotate:
  5957 ;; =============== function _rotate ends ============
  5958                           
  5959                           	signat	_rotate,8312
  5960                           	global	_robo_init
  5961                           psect	text911,local,class=CODE,delta=2
  5962                           global __ptext911
  5963  09A6                     __ptext911:
  5964                           
  5965 ;; *************** function _robo_init *****************
  5966 ;; Defined at:
  5967 ;;		line 9 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;		None               void
  5974 ;; Registers used:
  5975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5981 ;;      Params:         0       0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0
  5984 ;;      Totals:         0       0       0       0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    4
  5988 ;; This function calls:
  5989 ;;		_ser_putch
  5990 ;; This function is called by:
  5991 ;;		_init
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           psect	text911
  5995                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5996                           	line	9
  5997                           	global	__size_of_robo_init
  5998  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  5999                           	
  6000  09A6                     _robo_init:	
  6001                           	opt	stack 2
  6002                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6003                           	line	10
  6004                           	
  6005  09A6                     l10649:	
  6006                           ;robot.c: 10: ser_putch(128);
  6007  09A6  3080               	movlw	(080h)
  6008  09A7  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  6009                           	line	11
  6010                           ;robot.c: 11: ser_putch(132);
  6011  09AC  3084               	movlw	(084h)
  6012  09AD  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  6013                           	line	12
  6014                           ;robot.c: 12: ser_putch(150);
  6015  09B2  3096               	movlw	(096h)
  6016  09B3  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  6017                           	line	13
  6018                           ;robot.c: 13: ser_putch(0);
  6019  09B8  3000               	movlw	(0)
  6020  09B9  120A  158A  21BF   	fcall	_ser_putch
              120A  158A         
  6021                           	line	14
  6022                           	
  6023  09BE                     l5995:	
  6024  09BE  0008               	return
  6025                           	opt stack 0
  6026                           GLOBAL	__end_of_robo_init
  6027  09BF                     	__end_of_robo_init:
  6028 ;; =============== function _robo_init ends ============
  6029                           
  6030                           	signat	_robo_init,88
  6031                           	global	_lcd_write_data
  6032                           psect	text912,local,class=CODE,delta=2
  6033                           global __ptext912
  6034  0915                     __ptext912:
  6035                           
  6036 ;; *************** function _lcd_write_data *****************
  6037 ;; Defined at:
  6038 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  databyte        1    wreg     unsigned char 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  databyte        1    2[BANK0 ] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;		None               void
  6045 ;; Registers used:
  6046 ;;		wreg
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6052 ;;      Params:         0       0       0       0       0
  6053 ;;      Locals:         0       1       0       0       0
  6054 ;;      Temps:          0       2       0       0       0
  6055 ;;      Totals:         0       3       0       0       0
  6056 ;;Total ram usage:        3 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    3
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_lcd_write_string
  6063 ;;		_lcd_write_2_digit_bcd
  6064 ;;		_lcd_write_3_digit_bcd
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           psect	text912
  6068                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6069                           	line	30
  6070                           	global	__size_of_lcd_write_data
  6071  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  6072                           	
  6073  0915                     _lcd_write_data:	
  6074                           	opt	stack 1
  6075                           ; Regs used in _lcd_write_data: [wreg]
  6076                           ;lcd_write_data@databyte stored from wreg
  6077  0915  1283               	bcf	status, 5	;RP0=0, select bank0
  6078  0916  1303               	bcf	status, 6	;RP1=0, select bank0
  6079  0917  00A2               	movwf	(lcd_write_data@databyte)
  6080                           	line	31
  6081                           	
  6082  0918                     l10641:	
  6083                           ;lcd.c: 31: RE2 = 0;
  6084  0918  1109               	bcf	(74/8),(74)&7
  6085                           	line	32
  6086                           ;lcd.c: 32: RE1 = 0;
  6087  0919  1089               	bcf	(73/8),(73)&7
  6088                           	line	33
  6089                           ;lcd.c: 33: RE0 = 1;
  6090  091A  1409               	bsf	(72/8),(72)&7
  6091                           	line	34
  6092                           	
  6093  091B                     l10643:	
  6094                           ;lcd.c: 34: PORTD = databyte;
  6095  091B  0822               	movf	(lcd_write_data@databyte),w
  6096  091C  0088               	movwf	(8)	;volatile
  6097                           	line	35
  6098                           	
  6099  091D                     l10645:	
  6100                           ;lcd.c: 35: RE2 = 1;
  6101  091D  1509               	bsf	(74/8),(74)&7
  6102                           	line	36
  6103                           	
  6104  091E                     l10647:	
  6105                           ;lcd.c: 36: RE2 = 0;
  6106  091E  1109               	bcf	(74/8),(74)&7
  6107                           	line	37
  6108                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  6109                           	opt asmopt_off
  6110  091F  3007               movlw	7
  6111  0920  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  6112  0921  307D               	movlw	125
  6113  0922  00A0               movwf	((??_lcd_write_data+0)+0),f
  6114  0923                     u4627:
  6115  0923  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  6116  0924  2923               	goto	u4627
  6117  0925  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  6118  0926  2923               	goto	u4627
  6119                           opt asmopt_on
  6120                           
  6121                           	line	38
  6122                           	
  6123  0927                     l1402:	
  6124  0927  0008               	return
  6125                           	opt stack 0
  6126                           GLOBAL	__end_of_lcd_write_data
  6127  0928                     	__end_of_lcd_write_data:
  6128 ;; =============== function _lcd_write_data ends ============
  6129                           
  6130                           	signat	_lcd_write_data,4216
  6131                           	global	_lcd_write_control
  6132                           psect	text913,local,class=CODE,delta=2
  6133                           global __ptext913
  6134  094F                     __ptext913:
  6135                           
  6136 ;; *************** function _lcd_write_control *****************
  6137 ;; Defined at:
  6138 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  databyte        1    wreg     unsigned char 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  databyte        1    2[BANK0 ] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;		None               void
  6145 ;; Registers used:
  6146 ;;		wreg
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6152 ;;      Params:         0       0       0       0       0
  6153 ;;      Locals:         0       1       0       0       0
  6154 ;;      Temps:          0       2       0       0       0
  6155 ;;      Totals:         0       3       0       0       0
  6156 ;;Total ram usage:        3 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    3
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_lcd_set_cursor
  6163 ;;		_lcd_init
  6164 ;;		_UpdateDisplay
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           psect	text913
  6168                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6169                           	line	18
  6170                           	global	__size_of_lcd_write_control
  6171  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  6172                           	
  6173  094F                     _lcd_write_control:	
  6174                           	opt	stack 1
  6175                           ; Regs used in _lcd_write_control: [wreg]
  6176                           ;lcd_write_control@databyte stored from wreg
  6177  094F  1283               	bcf	status, 5	;RP0=0, select bank0
  6178  0950  1303               	bcf	status, 6	;RP1=0, select bank0
  6179  0951  00A2               	movwf	(lcd_write_control@databyte)
  6180                           	line	19
  6181                           	
  6182  0952                     l10633:	
  6183                           ;lcd.c: 19: RE2 = 0;
  6184  0952  1109               	bcf	(74/8),(74)&7
  6185                           	line	20
  6186                           ;lcd.c: 20: RE1 = 0;
  6187  0953  1089               	bcf	(73/8),(73)&7
  6188                           	line	21
  6189                           ;lcd.c: 21: RE0 = 0;
  6190  0954  1009               	bcf	(72/8),(72)&7
  6191                           	line	22
  6192                           	
  6193  0955                     l10635:	
  6194                           ;lcd.c: 22: PORTD = databyte;
  6195  0955  0822               	movf	(lcd_write_control@databyte),w
  6196  0956  0088               	movwf	(8)	;volatile
  6197                           	line	23
  6198                           	
  6199  0957                     l10637:	
  6200                           ;lcd.c: 23: RE2 = 1;
  6201  0957  1509               	bsf	(74/8),(74)&7
  6202                           	line	24
  6203                           	
  6204  0958                     l10639:	
  6205                           ;lcd.c: 24: RE2 = 0;
  6206  0958  1109               	bcf	(74/8),(74)&7
  6207                           	line	25
  6208                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  6209                           	opt asmopt_off
  6210  0959  300D               movlw	13
  6211  095A  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  6212  095B  30FB               	movlw	251
  6213  095C  00A0               movwf	((??_lcd_write_control+0)+0),f
  6214  095D                     u4637:
  6215  095D  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  6216  095E  295D               	goto	u4637
  6217  095F  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  6218  0960  295D               	goto	u4637
  6219  0961  2962               	nop2
  6220                           opt asmopt_on
  6221                           
  6222                           	line	26
  6223                           	
  6224  0962                     l1399:	
  6225  0962  0008               	return
  6226                           	opt stack 0
  6227                           GLOBAL	__end_of_lcd_write_control
  6228  0963                     	__end_of_lcd_write_control:
  6229 ;; =============== function _lcd_write_control ends ============
  6230                           
  6231                           	signat	_lcd_write_control,4216
  6232                           	global	_init_adc
  6233                           psect	text914,local,class=CODE,delta=2
  6234                           global __ptext914
  6235  0963                     __ptext914:
  6236                           
  6237 ;; *************** function _init_adc *****************
  6238 ;; Defined at:
  6239 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;		None
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;		None
  6244 ;; Return value:  Size  Location     Type
  6245 ;;		None               void
  6246 ;; Registers used:
  6247 ;;		wreg, status,2
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6253 ;;      Params:         0       0       0       0       0
  6254 ;;      Locals:         0       0       0       0       0
  6255 ;;      Temps:          0       1       0       0       0
  6256 ;;      Totals:         0       1       0       0       0
  6257 ;;Total ram usage:        1 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:    3
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_init
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           psect	text914
  6267                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6268                           	line	46
  6269                           	global	__size_of_init_adc
  6270  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  6271                           	
  6272  0963                     _init_adc:	
  6273                           	opt	stack 3
  6274                           ; Regs used in _init_adc: [wreg+status,2]
  6275                           	line	48
  6276                           	
  6277  0963                     l10623:	
  6278                           ;adc.c: 48: PORTA = 0;
  6279  0963  1283               	bcf	status, 5	;RP0=0, select bank0
  6280  0964  1303               	bcf	status, 6	;RP1=0, select bank0
  6281  0965  0185               	clrf	(5)	;volatile
  6282                           	line	49
  6283                           	
  6284  0966                     l10625:	
  6285                           ;adc.c: 49: TRISA = 0b00111111;
  6286  0966  303F               	movlw	(03Fh)
  6287  0967  1683               	bsf	status, 5	;RP0=1, select bank1
  6288  0968  1303               	bcf	status, 6	;RP1=0, select bank1
  6289  0969  0085               	movwf	(133)^080h	;volatile
  6290                           	line	52
  6291                           	
  6292  096A                     l10627:	
  6293                           ;adc.c: 52: ADCON0 = 0b10100001;
  6294  096A  30A1               	movlw	(0A1h)
  6295  096B  1283               	bcf	status, 5	;RP0=0, select bank0
  6296  096C  1303               	bcf	status, 6	;RP1=0, select bank0
  6297  096D  009F               	movwf	(31)	;volatile
  6298                           	line	53
  6299                           	
  6300  096E                     l10629:	
  6301                           ;adc.c: 53: ADCON1 = 0b0000010;
  6302  096E  3002               	movlw	(02h)
  6303  096F  1683               	bsf	status, 5	;RP0=1, select bank1
  6304  0970  1303               	bcf	status, 6	;RP1=0, select bank1
  6305  0971  009F               	movwf	(159)^080h	;volatile
  6306                           	line	55
  6307                           	
  6308  0972                     l10631:	
  6309                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6310                           	opt asmopt_off
  6311  0972  3053               movlw	83
  6312  0973  1283               	bcf	status, 5	;RP0=0, select bank0
  6313  0974  1303               	bcf	status, 6	;RP1=0, select bank0
  6314  0975  00A0               movwf	(??_init_adc+0)+0,f
  6315  0976                     u4647:
  6316  0976  0BA0               decfsz	(??_init_adc+0)+0,f
  6317  0977  2976               	goto	u4647
  6318                           opt asmopt_on
  6319                           
  6320                           	line	57
  6321                           	
  6322  0978                     l700:	
  6323  0978  0008               	return
  6324                           	opt stack 0
  6325                           GLOBAL	__end_of_init_adc
  6326  0979                     	__end_of_init_adc:
  6327 ;; =============== function _init_adc ends ============
  6328                           
  6329                           	signat	_init_adc,88
  6330                           	global	_adc_read_channel
  6331                           psect	text915,local,class=CODE,delta=2
  6332                           global __ptext915
  6333  0B93                     __ptext915:
  6334                           
  6335 ;; *************** function _adc_read_channel *****************
  6336 ;; Defined at:
  6337 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  channel         1    wreg     unsigned char 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  channel         1    7[BANK0 ] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      unsigned char 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6351 ;;      Params:         0       0       0       0       0
  6352 ;;      Locals:         0       1       0       0       0
  6353 ;;      Temps:          0       1       0       0       0
  6354 ;;      Totals:         0       2       0       0       0
  6355 ;;Total ram usage:        2 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    4
  6358 ;; This function calls:
  6359 ;;		_adc_read
  6360 ;; This function is called by:
  6361 ;;		_readDistance
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           psect	text915
  6365                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6366                           	line	5
  6367                           	global	__size_of_adc_read_channel
  6368  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  6369                           	
  6370  0B93                     _adc_read_channel:	
  6371                           	opt	stack 0
  6372                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6373                           ;adc_read_channel@channel stored from wreg
  6374  0B93  1283               	bcf	status, 5	;RP0=0, select bank0
  6375  0B94  1303               	bcf	status, 6	;RP1=0, select bank0
  6376  0B95  00A7               	movwf	(adc_read_channel@channel)
  6377                           	line	6
  6378                           	
  6379  0B96                     l10607:	
  6380                           ;adc.c: 6: switch(channel)
  6381  0B96  2BAF               	goto	l10615
  6382                           	line	8
  6383                           ;adc.c: 7: {
  6384                           ;adc.c: 8: case 0:
  6385                           	
  6386  0B97                     l690:	
  6387                           	line	9
  6388                           ;adc.c: 9: CHS0 = 0;
  6389  0B97  119F               	bcf	(251/8),(251)&7
  6390                           	line	10
  6391                           ;adc.c: 10: CHS1 = 0;
  6392  0B98  121F               	bcf	(252/8),(252)&7
  6393                           	line	11
  6394                           ;adc.c: 11: CHS2 = 0;
  6395  0B99  129F               	bcf	(253/8),(253)&7
  6396                           	line	12
  6397                           ;adc.c: 12: break;
  6398  0B9A  2BC0               	goto	l10617
  6399                           	line	13
  6400                           ;adc.c: 13: case 1:
  6401                           	
  6402  0B9B                     l692:	
  6403                           	line	14
  6404                           ;adc.c: 14: CHS0 = 1;
  6405  0B9B  159F               	bsf	(251/8),(251)&7
  6406                           	line	15
  6407                           ;adc.c: 15: CHS1 = 0;
  6408  0B9C  121F               	bcf	(252/8),(252)&7
  6409                           	line	16
  6410                           ;adc.c: 16: CHS2 = 0;
  6411  0B9D  129F               	bcf	(253/8),(253)&7
  6412                           	line	17
  6413                           ;adc.c: 17: break;
  6414  0B9E  2BC0               	goto	l10617
  6415                           	line	18
  6416                           ;adc.c: 18: case 2:
  6417                           	
  6418  0B9F                     l693:	
  6419                           	line	19
  6420                           ;adc.c: 19: CHS0 = 0;
  6421  0B9F  119F               	bcf	(251/8),(251)&7
  6422                           	line	20
  6423                           ;adc.c: 20: CHS1 = 1;
  6424  0BA0  161F               	bsf	(252/8),(252)&7
  6425                           	line	21
  6426                           ;adc.c: 21: CHS2 = 0;
  6427  0BA1  129F               	bcf	(253/8),(253)&7
  6428                           	line	22
  6429                           ;adc.c: 22: break;
  6430  0BA2  2BC0               	goto	l10617
  6431                           	line	23
  6432                           ;adc.c: 23: case 3:
  6433                           	
  6434  0BA3                     l694:	
  6435                           	line	24
  6436                           ;adc.c: 24: CHS0 = 1;
  6437  0BA3  159F               	bsf	(251/8),(251)&7
  6438                           	line	25
  6439                           ;adc.c: 25: CHS1 = 1;
  6440  0BA4  161F               	bsf	(252/8),(252)&7
  6441                           	line	26
  6442                           ;adc.c: 26: CHS2 = 0;
  6443  0BA5  129F               	bcf	(253/8),(253)&7
  6444                           	line	27
  6445                           ;adc.c: 27: break;
  6446  0BA6  2BC0               	goto	l10617
  6447                           	line	28
  6448                           ;adc.c: 28: case 4:
  6449                           	
  6450  0BA7                     l695:	
  6451                           	line	29
  6452                           ;adc.c: 29: CHS0 = 0;
  6453  0BA7  119F               	bcf	(251/8),(251)&7
  6454                           	line	30
  6455                           ;adc.c: 30: CHS1 = 0;
  6456  0BA8  121F               	bcf	(252/8),(252)&7
  6457                           	line	31
  6458                           ;adc.c: 31: CHS2 = 1;
  6459  0BA9  169F               	bsf	(253/8),(253)&7
  6460                           	line	32
  6461                           ;adc.c: 32: break;
  6462  0BAA  2BC0               	goto	l10617
  6463                           	line	35
  6464                           ;adc.c: 35: default:
  6465                           	
  6466  0BAB                     l696:	
  6467                           	line	36
  6468                           	
  6469  0BAB                     l10609:	
  6470                           ;adc.c: 36: return 0;
  6471  0BAB  3000               	movlw	(0)
  6472  0BAC  2BCD               	goto	l697
  6473                           	
  6474  0BAD                     l10611:	
  6475  0BAD  2BCD               	goto	l697
  6476                           	line	37
  6477                           	
  6478  0BAE                     l10613:	
  6479                           ;adc.c: 37: }
  6480  0BAE  2BC0               	goto	l10617
  6481                           	line	6
  6482                           	
  6483  0BAF                     l689:	
  6484                           	
  6485  0BAF                     l10615:	
  6486  0BAF  0827               	movf	(adc_read_channel@channel),w
  6487                           	; Switch size 1, requested type "space"
  6488                           ; Number of cases is 5, Range of values is 0 to 4
  6489                           ; switch strategies available:
  6490                           ; Name         Instructions Cycles
  6491                           ; simple_byte           16     9 (average)
  6492                           ; direct_byte           23     8 (fixed)
  6493                           ; jumptable            260     6 (fixed)
  6494                           ; rangetable             9     6 (fixed)
  6495                           ; spacedrange           16     9 (fixed)
  6496                           ; locatedrange           5     3 (fixed)
  6497                           ;	Chosen strategy is simple_byte
  6498                           
  6499                           	opt asmopt_off
  6500  0BB0  3A00               	xorlw	0^0	; case 0
  6501  0BB1  1903               	skipnz
  6502  0BB2  2B97               	goto	l690
  6503  0BB3  3A01               	xorlw	1^0	; case 1
  6504  0BB4  1903               	skipnz
  6505  0BB5  2B9B               	goto	l692
  6506  0BB6  3A03               	xorlw	2^1	; case 2
  6507  0BB7  1903               	skipnz
  6508  0BB8  2B9F               	goto	l693
  6509  0BB9  3A01               	xorlw	3^2	; case 3
  6510  0BBA  1903               	skipnz
  6511  0BBB  2BA3               	goto	l694
  6512  0BBC  3A07               	xorlw	4^3	; case 4
  6513  0BBD  1903               	skipnz
  6514  0BBE  2BA7               	goto	l695
  6515  0BBF  2BAB               	goto	l10609
  6516                           	opt asmopt_on
  6517                           
  6518                           	line	37
  6519                           	
  6520  0BC0                     l691:	
  6521                           	line	39
  6522                           	
  6523  0BC0                     l10617:	
  6524                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6525                           	opt asmopt_off
  6526  0BC0  3053               movlw	83
  6527  0BC1  00A6               movwf	(??_adc_read_channel+0)+0,f
  6528  0BC2                     u4657:
  6529  0BC2  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  6530  0BC3  2BC2               	goto	u4657
  6531                           opt asmopt_on
  6532                           
  6533                           	line	41
  6534                           	
  6535  0BC4                     l10619:	
  6536                           ;adc.c: 41: return adc_read();
  6537  0BC4  120A  158A  222A   	fcall	_adc_read
              120A  158A         
  6538  0BC9  1283               	bcf	status, 5	;RP0=0, select bank0
  6539  0BCA  1303               	bcf	status, 6	;RP1=0, select bank0
  6540  0BCB  0820               	movf	(0+(?_adc_read)),w
  6541  0BCC  2BCD               	goto	l697
  6542                           	
  6543  0BCD                     l10621:	
  6544                           	line	43
  6545                           	
  6546  0BCD                     l697:	
  6547  0BCD  0008               	return
  6548                           	opt stack 0
  6549                           GLOBAL	__end_of_adc_read_channel
  6550  0BCE                     	__end_of_adc_read_channel:
  6551 ;; =============== function _adc_read_channel ends ============
  6552                           
  6553                           	signat	_adc_read_channel,4217
  6554                           	global	___awmod
  6555                           psect	text916,local,class=CODE,delta=2
  6556                           global __ptext916
  6557  0692                     __ptext916:
  6558                           
  6559 ;; *************** function ___awmod *****************
  6560 ;; Defined at:
  6561 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  divisor         2    0[BANK0 ] int 
  6564 ;;  dividend        2    2[BANK0 ] int 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  sign            1    6[BANK0 ] unsigned char 
  6567 ;;  counter         1    5[BANK0 ] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  2    0[BANK0 ] int 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6577 ;;      Params:         0       4       0       0       0
  6578 ;;      Locals:         0       2       0       0       0
  6579 ;;      Temps:          0       1       0       0       0
  6580 ;;      Totals:         0       7       0       0       0
  6581 ;;Total ram usage:        7 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    3
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_UpdateDisplay
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           psect	text916
  6591                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6592                           	line	5
  6593                           	global	__size_of___awmod
  6594  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6595                           	
  6596  0692                     ___awmod:	
  6597                           	opt	stack 2
  6598                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6599                           	line	8
  6600                           	
  6601  0692                     l10551:	
  6602  0692  1283               	bcf	status, 5	;RP0=0, select bank0
  6603  0693  1303               	bcf	status, 6	;RP1=0, select bank0
  6604  0694  01A6               	clrf	(___awmod@sign)
  6605                           	line	9
  6606  0695  1FA3               	btfss	(___awmod@dividend+1),7
  6607  0696  2E98               	goto	u4041
  6608  0697  2E99               	goto	u4040
  6609  0698                     u4041:
  6610  0698  2EA2               	goto	l10555
  6611  0699                     u4040:
  6612                           	line	10
  6613                           	
  6614  0699                     l10553:	
  6615  0699  09A2               	comf	(___awmod@dividend),f
  6616  069A  09A3               	comf	(___awmod@dividend+1),f
  6617  069B  0AA2               	incf	(___awmod@dividend),f
  6618  069C  1903               	skipnz
  6619  069D  0AA3               	incf	(___awmod@dividend+1),f
  6620                           	line	11
  6621  069E  01A6               	clrf	(___awmod@sign)
  6622  069F  1403               	bsf	status,0
  6623  06A0  0DA6               	rlf	(___awmod@sign),f
  6624  06A1  2EA2               	goto	l10555
  6625                           	line	12
  6626                           	
  6627  06A2                     l7661:	
  6628                           	line	13
  6629                           	
  6630  06A2                     l10555:	
  6631  06A2  1FA1               	btfss	(___awmod@divisor+1),7
  6632  06A3  2EA5               	goto	u4051
  6633  06A4  2EA6               	goto	u4050
  6634  06A5                     u4051:
  6635  06A5  2EAC               	goto	l10559
  6636  06A6                     u4050:
  6637                           	line	14
  6638                           	
  6639  06A6                     l10557:	
  6640  06A6  09A0               	comf	(___awmod@divisor),f
  6641  06A7  09A1               	comf	(___awmod@divisor+1),f
  6642  06A8  0AA0               	incf	(___awmod@divisor),f
  6643  06A9  1903               	skipnz
  6644  06AA  0AA1               	incf	(___awmod@divisor+1),f
  6645  06AB  2EAC               	goto	l10559
  6646                           	
  6647  06AC                     l7662:	
  6648                           	line	15
  6649                           	
  6650  06AC                     l10559:	
  6651  06AC  0821               	movf	(___awmod@divisor+1),w
  6652  06AD  0420               	iorwf	(___awmod@divisor),w
  6653  06AE  1903               	skipnz
  6654  06AF  2EB1               	goto	u4061
  6655  06B0  2EB2               	goto	u4060
  6656  06B1                     u4061:
  6657  06B1  2EE8               	goto	l10577
  6658  06B2                     u4060:
  6659                           	line	16
  6660                           	
  6661  06B2                     l10561:	
  6662  06B2  01A5               	clrf	(___awmod@counter)
  6663  06B3  1403               	bsf	status,0
  6664  06B4  0DA5               	rlf	(___awmod@counter),f
  6665                           	line	17
  6666  06B5  2EC2               	goto	l10567
  6667                           	
  6668  06B6                     l7665:	
  6669                           	line	18
  6670                           	
  6671  06B6                     l10563:	
  6672  06B6  3001               	movlw	01h
  6673                           	
  6674  06B7                     u4075:
  6675  06B7  1003               	clrc
  6676  06B8  0DA0               	rlf	(___awmod@divisor),f
  6677  06B9  0DA1               	rlf	(___awmod@divisor+1),f
  6678  06BA  3EFF               	addlw	-1
  6679  06BB  1D03               	skipz
  6680  06BC  2EB7               	goto	u4075
  6681                           	line	19
  6682                           	
  6683  06BD                     l10565:	
  6684  06BD  3001               	movlw	(01h)
  6685  06BE  00A4               	movwf	(??___awmod+0)+0
  6686  06BF  0824               	movf	(??___awmod+0)+0,w
  6687  06C0  07A5               	addwf	(___awmod@counter),f
  6688  06C1  2EC2               	goto	l10567
  6689                           	line	20
  6690                           	
  6691  06C2                     l7664:	
  6692                           	line	17
  6693                           	
  6694  06C2                     l10567:	
  6695  06C2  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  6696  06C3  2EC5               	goto	u4081
  6697  06C4  2EC6               	goto	u4080
  6698  06C5                     u4081:
  6699  06C5  2EB6               	goto	l10563
  6700  06C6                     u4080:
  6701  06C6  2EC8               	goto	l10569
  6702                           	
  6703  06C7                     l7666:	
  6704  06C7  2EC8               	goto	l10569
  6705                           	line	21
  6706                           	
  6707  06C8                     l7667:	
  6708                           	line	22
  6709                           	
  6710  06C8                     l10569:	
  6711  06C8  0821               	movf	(___awmod@divisor+1),w
  6712  06C9  0223               	subwf	(___awmod@dividend+1),w
  6713  06CA  1D03               	skipz
  6714  06CB  2ECE               	goto	u4095
  6715  06CC  0820               	movf	(___awmod@divisor),w
  6716  06CD  0222               	subwf	(___awmod@dividend),w
  6717  06CE                     u4095:
  6718  06CE  1C03               	skipc
  6719  06CF  2ED1               	goto	u4091
  6720  06D0  2ED2               	goto	u4090
  6721  06D1                     u4091:
  6722  06D1  2ED9               	goto	l10573
  6723  06D2                     u4090:
  6724                           	line	23
  6725                           	
  6726  06D2                     l10571:	
  6727  06D2  0820               	movf	(___awmod@divisor),w
  6728  06D3  02A2               	subwf	(___awmod@dividend),f
  6729  06D4  0821               	movf	(___awmod@divisor+1),w
  6730  06D5  1C03               	skipc
  6731  06D6  03A3               	decf	(___awmod@dividend+1),f
  6732  06D7  02A3               	subwf	(___awmod@dividend+1),f
  6733  06D8  2ED9               	goto	l10573
  6734                           	
  6735  06D9                     l7668:	
  6736                           	line	24
  6737                           	
  6738  06D9                     l10573:	
  6739  06D9  3001               	movlw	01h
  6740                           	
  6741  06DA                     u4105:
  6742  06DA  1003               	clrc
  6743  06DB  0CA1               	rrf	(___awmod@divisor+1),f
  6744  06DC  0CA0               	rrf	(___awmod@divisor),f
  6745  06DD  3EFF               	addlw	-1
  6746  06DE  1D03               	skipz
  6747  06DF  2EDA               	goto	u4105
  6748                           	line	25
  6749                           	
  6750  06E0                     l10575:	
  6751  06E0  3001               	movlw	low(01h)
  6752  06E1  02A5               	subwf	(___awmod@counter),f
  6753  06E2  1D03               	btfss	status,2
  6754  06E3  2EE5               	goto	u4111
  6755  06E4  2EE6               	goto	u4110
  6756  06E5                     u4111:
  6757  06E5  2EC8               	goto	l10569
  6758  06E6                     u4110:
  6759  06E6  2EE8               	goto	l10577
  6760                           	
  6761  06E7                     l7669:	
  6762  06E7  2EE8               	goto	l10577
  6763                           	line	26
  6764                           	
  6765  06E8                     l7663:	
  6766                           	line	27
  6767                           	
  6768  06E8                     l10577:	
  6769  06E8  0826               	movf	(___awmod@sign),w
  6770  06E9  1D03               	skipz
  6771  06EA  2EEC               	goto	u4120
  6772  06EB  2EF2               	goto	l10581
  6773  06EC                     u4120:
  6774                           	line	28
  6775                           	
  6776  06EC                     l10579:	
  6777  06EC  09A2               	comf	(___awmod@dividend),f
  6778  06ED  09A3               	comf	(___awmod@dividend+1),f
  6779  06EE  0AA2               	incf	(___awmod@dividend),f
  6780  06EF  1903               	skipnz
  6781  06F0  0AA3               	incf	(___awmod@dividend+1),f
  6782  06F1  2EF2               	goto	l10581
  6783                           	
  6784  06F2                     l7670:	
  6785                           	line	29
  6786                           	
  6787  06F2                     l10581:	
  6788  06F2  0823               	movf	(___awmod@dividend+1),w
  6789  06F3  01A1               	clrf	(?___awmod+1)
  6790  06F4  07A1               	addwf	(?___awmod+1)
  6791  06F5  0822               	movf	(___awmod@dividend),w
  6792  06F6  01A0               	clrf	(?___awmod)
  6793  06F7  07A0               	addwf	(?___awmod)
  6794                           
  6795  06F8  2EF9               	goto	l7671
  6796                           	
  6797  06F9                     l10583:	
  6798                           	line	30
  6799                           	
  6800  06F9                     l7671:	
  6801  06F9  0008               	return
  6802                           	opt stack 0
  6803                           GLOBAL	__end_of___awmod
  6804  06FA                     	__end_of___awmod:
  6805 ;; =============== function ___awmod ends ============
  6806                           
  6807                           	signat	___awmod,8314
  6808                           	global	___lwmod
  6809                           psect	text917,local,class=CODE,delta=2
  6810                           global __ptext917
  6811  0C12                     __ptext917:
  6812                           
  6813 ;; *************** function ___lwmod *****************
  6814 ;; Defined at:
  6815 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  divisor         2   14[BANK0 ] unsigned int 
  6818 ;;  dividend        2   16[BANK0 ] unsigned int 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  counter         1   19[BANK0 ] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  2   14[BANK0 ] unsigned int 
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6830 ;;      Params:         0       4       0       0       0
  6831 ;;      Locals:         0       1       0       0       0
  6832 ;;      Temps:          0       1       0       0       0
  6833 ;;      Totals:         0       6       0       0       0
  6834 ;;Total ram usage:        6 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    3
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_sprintf
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           psect	text917
  6844                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6845                           	line	5
  6846                           	global	__size_of___lwmod
  6847  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6848                           	
  6849  0C12                     ___lwmod:	
  6850                           	opt	stack 1
  6851                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6852                           	line	8
  6853                           	
  6854  0C12                     l10529:	
  6855  0C12  1283               	bcf	status, 5	;RP0=0, select bank0
  6856  0C13  1303               	bcf	status, 6	;RP1=0, select bank0
  6857  0C14  082F               	movf	(___lwmod@divisor+1),w
  6858  0C15  042E               	iorwf	(___lwmod@divisor),w
  6859  0C16  1903               	skipnz
  6860  0C17  2C19               	goto	u3981
  6861  0C18  2C1A               	goto	u3980
  6862  0C19                     u3981:
  6863  0C19  2C50               	goto	l10547
  6864  0C1A                     u3980:
  6865                           	line	9
  6866                           	
  6867  0C1A                     l10531:	
  6868  0C1A  01B3               	clrf	(___lwmod@counter)
  6869  0C1B  1403               	bsf	status,0
  6870  0C1C  0DB3               	rlf	(___lwmod@counter),f
  6871                           	line	10
  6872  0C1D  2C2A               	goto	l10537
  6873                           	
  6874  0C1E                     l7471:	
  6875                           	line	11
  6876                           	
  6877  0C1E                     l10533:	
  6878  0C1E  3001               	movlw	01h
  6879                           	
  6880  0C1F                     u3995:
  6881  0C1F  1003               	clrc
  6882  0C20  0DAE               	rlf	(___lwmod@divisor),f
  6883  0C21  0DAF               	rlf	(___lwmod@divisor+1),f
  6884  0C22  3EFF               	addlw	-1
  6885  0C23  1D03               	skipz
  6886  0C24  2C1F               	goto	u3995
  6887                           	line	12
  6888                           	
  6889  0C25                     l10535:	
  6890  0C25  3001               	movlw	(01h)
  6891  0C26  00B2               	movwf	(??___lwmod+0)+0
  6892  0C27  0832               	movf	(??___lwmod+0)+0,w
  6893  0C28  07B3               	addwf	(___lwmod@counter),f
  6894  0C29  2C2A               	goto	l10537
  6895                           	line	13
  6896                           	
  6897  0C2A                     l7470:	
  6898                           	line	10
  6899                           	
  6900  0C2A                     l10537:	
  6901  0C2A  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  6902  0C2B  2C2D               	goto	u4001
  6903  0C2C  2C2E               	goto	u4000
  6904  0C2D                     u4001:
  6905  0C2D  2C1E               	goto	l10533
  6906  0C2E                     u4000:
  6907  0C2E  2C30               	goto	l10539
  6908                           	
  6909  0C2F                     l7472:	
  6910  0C2F  2C30               	goto	l10539
  6911                           	line	14
  6912                           	
  6913  0C30                     l7473:	
  6914                           	line	15
  6915                           	
  6916  0C30                     l10539:	
  6917  0C30  082F               	movf	(___lwmod@divisor+1),w
  6918  0C31  0231               	subwf	(___lwmod@dividend+1),w
  6919  0C32  1D03               	skipz
  6920  0C33  2C36               	goto	u4015
  6921  0C34  082E               	movf	(___lwmod@divisor),w
  6922  0C35  0230               	subwf	(___lwmod@dividend),w
  6923  0C36                     u4015:
  6924  0C36  1C03               	skipc
  6925  0C37  2C39               	goto	u4011
  6926  0C38  2C3A               	goto	u4010
  6927  0C39                     u4011:
  6928  0C39  2C41               	goto	l10543
  6929  0C3A                     u4010:
  6930                           	line	16
  6931                           	
  6932  0C3A                     l10541:	
  6933  0C3A  082E               	movf	(___lwmod@divisor),w
  6934  0C3B  02B0               	subwf	(___lwmod@dividend),f
  6935  0C3C  082F               	movf	(___lwmod@divisor+1),w
  6936  0C3D  1C03               	skipc
  6937  0C3E  03B1               	decf	(___lwmod@dividend+1),f
  6938  0C3F  02B1               	subwf	(___lwmod@dividend+1),f
  6939  0C40  2C41               	goto	l10543
  6940                           	
  6941  0C41                     l7474:	
  6942                           	line	17
  6943                           	
  6944  0C41                     l10543:	
  6945  0C41  3001               	movlw	01h
  6946                           	
  6947  0C42                     u4025:
  6948  0C42  1003               	clrc
  6949  0C43  0CAF               	rrf	(___lwmod@divisor+1),f
  6950  0C44  0CAE               	rrf	(___lwmod@divisor),f
  6951  0C45  3EFF               	addlw	-1
  6952  0C46  1D03               	skipz
  6953  0C47  2C42               	goto	u4025
  6954                           	line	18
  6955                           	
  6956  0C48                     l10545:	
  6957  0C48  3001               	movlw	low(01h)
  6958  0C49  02B3               	subwf	(___lwmod@counter),f
  6959  0C4A  1D03               	btfss	status,2
  6960  0C4B  2C4D               	goto	u4031
  6961  0C4C  2C4E               	goto	u4030
  6962  0C4D                     u4031:
  6963  0C4D  2C30               	goto	l10539
  6964  0C4E                     u4030:
  6965  0C4E  2C50               	goto	l10547
  6966                           	
  6967  0C4F                     l7475:	
  6968  0C4F  2C50               	goto	l10547
  6969                           	line	19
  6970                           	
  6971  0C50                     l7469:	
  6972                           	line	20
  6973                           	
  6974  0C50                     l10547:	
  6975  0C50  0831               	movf	(___lwmod@dividend+1),w
  6976  0C51  01AF               	clrf	(?___lwmod+1)
  6977  0C52  07AF               	addwf	(?___lwmod+1)
  6978  0C53  0830               	movf	(___lwmod@dividend),w
  6979  0C54  01AE               	clrf	(?___lwmod)
  6980  0C55  07AE               	addwf	(?___lwmod)
  6981                           
  6982  0C56  2C57               	goto	l7476
  6983                           	
  6984  0C57                     l10549:	
  6985                           	line	21
  6986                           	
  6987  0C57                     l7476:	
  6988  0C57  0008               	return
  6989                           	opt stack 0
  6990                           GLOBAL	__end_of___lwmod
  6991  0C58                     	__end_of___lwmod:
  6992 ;; =============== function ___lwmod ends ============
  6993                           
  6994                           	signat	___lwmod,8314
  6995                           	global	___lwdiv
  6996                           psect	text918,local,class=CODE,delta=2
  6997                           global __ptext918
  6998  0CE5                     __ptext918:
  6999                           
  7000 ;; *************** function ___lwdiv *****************
  7001 ;; Defined at:
  7002 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  divisor         2    6[BANK0 ] unsigned int 
  7005 ;;  dividend        2    8[BANK0 ] unsigned int 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  quotient        2   11[BANK0 ] unsigned int 
  7008 ;;  counter         1   13[BANK0 ] unsigned char 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  2    6[BANK0 ] unsigned int 
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7018 ;;      Params:         0       4       0       0       0
  7019 ;;      Locals:         0       3       0       0       0
  7020 ;;      Temps:          0       1       0       0       0
  7021 ;;      Totals:         0       8       0       0       0
  7022 ;;Total ram usage:        8 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; Hardware stack levels required when called:    3
  7025 ;; This function calls:
  7026 ;;		Nothing
  7027 ;; This function is called by:
  7028 ;;		_readAvgDistance
  7029 ;;		_ADCconvert
  7030 ;;		_sprintf
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           psect	text918
  7034                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7035                           	line	5
  7036                           	global	__size_of___lwdiv
  7037  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7038                           	
  7039  0CE5                     ___lwdiv:	
  7040                           	opt	stack 1
  7041                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7042                           	line	9
  7043                           	
  7044  0CE5                     l10503:	
  7045  0CE5  1283               	bcf	status, 5	;RP0=0, select bank0
  7046  0CE6  1303               	bcf	status, 6	;RP1=0, select bank0
  7047  0CE7  01AB               	clrf	(___lwdiv@quotient)
  7048  0CE8  01AC               	clrf	(___lwdiv@quotient+1)
  7049                           	line	10
  7050                           	
  7051  0CE9                     l10505:	
  7052  0CE9  0827               	movf	(___lwdiv@divisor+1),w
  7053  0CEA  0426               	iorwf	(___lwdiv@divisor),w
  7054  0CEB  1903               	skipnz
  7055  0CEC  2CEE               	goto	u3911
  7056  0CED  2CEF               	goto	u3910
  7057  0CEE                     u3911:
  7058  0CEE  2D2D               	goto	l10525
  7059  0CEF                     u3910:
  7060                           	line	11
  7061                           	
  7062  0CEF                     l10507:	
  7063  0CEF  01AD               	clrf	(___lwdiv@counter)
  7064  0CF0  1403               	bsf	status,0
  7065  0CF1  0DAD               	rlf	(___lwdiv@counter),f
  7066                           	line	12
  7067  0CF2  2CFF               	goto	l10513
  7068                           	
  7069  0CF3                     l7461:	
  7070                           	line	13
  7071                           	
  7072  0CF3                     l10509:	
  7073  0CF3  3001               	movlw	01h
  7074                           	
  7075  0CF4                     u3925:
  7076  0CF4  1003               	clrc
  7077  0CF5  0DA6               	rlf	(___lwdiv@divisor),f
  7078  0CF6  0DA7               	rlf	(___lwdiv@divisor+1),f
  7079  0CF7  3EFF               	addlw	-1
  7080  0CF8  1D03               	skipz
  7081  0CF9  2CF4               	goto	u3925
  7082                           	line	14
  7083                           	
  7084  0CFA                     l10511:	
  7085  0CFA  3001               	movlw	(01h)
  7086  0CFB  00AA               	movwf	(??___lwdiv+0)+0
  7087  0CFC  082A               	movf	(??___lwdiv+0)+0,w
  7088  0CFD  07AD               	addwf	(___lwdiv@counter),f
  7089  0CFE  2CFF               	goto	l10513
  7090                           	line	15
  7091                           	
  7092  0CFF                     l7460:	
  7093                           	line	12
  7094                           	
  7095  0CFF                     l10513:	
  7096  0CFF  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  7097  0D00  2D02               	goto	u3931
  7098  0D01  2D03               	goto	u3930
  7099  0D02                     u3931:
  7100  0D02  2CF3               	goto	l10509
  7101  0D03                     u3930:
  7102  0D03  2D05               	goto	l10515
  7103                           	
  7104  0D04                     l7462:	
  7105  0D04  2D05               	goto	l10515
  7106                           	line	16
  7107                           	
  7108  0D05                     l7463:	
  7109                           	line	17
  7110                           	
  7111  0D05                     l10515:	
  7112  0D05  3001               	movlw	01h
  7113                           	
  7114  0D06                     u3945:
  7115  0D06  1003               	clrc
  7116  0D07  0DAB               	rlf	(___lwdiv@quotient),f
  7117  0D08  0DAC               	rlf	(___lwdiv@quotient+1),f
  7118  0D09  3EFF               	addlw	-1
  7119  0D0A  1D03               	skipz
  7120  0D0B  2D06               	goto	u3945
  7121                           	line	18
  7122  0D0C  0827               	movf	(___lwdiv@divisor+1),w
  7123  0D0D  0229               	subwf	(___lwdiv@dividend+1),w
  7124  0D0E  1D03               	skipz
  7125  0D0F  2D12               	goto	u3955
  7126  0D10  0826               	movf	(___lwdiv@divisor),w
  7127  0D11  0228               	subwf	(___lwdiv@dividend),w
  7128  0D12                     u3955:
  7129  0D12  1C03               	skipc
  7130  0D13  2D15               	goto	u3951
  7131  0D14  2D16               	goto	u3950
  7132  0D15                     u3951:
  7133  0D15  2D1E               	goto	l10521
  7134  0D16                     u3950:
  7135                           	line	19
  7136                           	
  7137  0D16                     l10517:	
  7138  0D16  0826               	movf	(___lwdiv@divisor),w
  7139  0D17  02A8               	subwf	(___lwdiv@dividend),f
  7140  0D18  0827               	movf	(___lwdiv@divisor+1),w
  7141  0D19  1C03               	skipc
  7142  0D1A  03A9               	decf	(___lwdiv@dividend+1),f
  7143  0D1B  02A9               	subwf	(___lwdiv@dividend+1),f
  7144                           	line	20
  7145                           	
  7146  0D1C                     l10519:	
  7147  0D1C  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  7148  0D1D  2D1E               	goto	l10521
  7149                           	line	21
  7150                           	
  7151  0D1E                     l7464:	
  7152                           	line	22
  7153                           	
  7154  0D1E                     l10521:	
  7155  0D1E  3001               	movlw	01h
  7156                           	
  7157  0D1F                     u3965:
  7158  0D1F  1003               	clrc
  7159  0D20  0CA7               	rrf	(___lwdiv@divisor+1),f
  7160  0D21  0CA6               	rrf	(___lwdiv@divisor),f
  7161  0D22  3EFF               	addlw	-1
  7162  0D23  1D03               	skipz
  7163  0D24  2D1F               	goto	u3965
  7164                           	line	23
  7165                           	
  7166  0D25                     l10523:	
  7167  0D25  3001               	movlw	low(01h)
  7168  0D26  02AD               	subwf	(___lwdiv@counter),f
  7169  0D27  1D03               	btfss	status,2
  7170  0D28  2D2A               	goto	u3971
  7171  0D29  2D2B               	goto	u3970
  7172  0D2A                     u3971:
  7173  0D2A  2D05               	goto	l10515
  7174  0D2B                     u3970:
  7175  0D2B  2D2D               	goto	l10525
  7176                           	
  7177  0D2C                     l7465:	
  7178  0D2C  2D2D               	goto	l10525
  7179                           	line	24
  7180                           	
  7181  0D2D                     l7459:	
  7182                           	line	25
  7183                           	
  7184  0D2D                     l10525:	
  7185  0D2D  082C               	movf	(___lwdiv@quotient+1),w
  7186  0D2E  01A7               	clrf	(?___lwdiv+1)
  7187  0D2F  07A7               	addwf	(?___lwdiv+1)
  7188  0D30  082B               	movf	(___lwdiv@quotient),w
  7189  0D31  01A6               	clrf	(?___lwdiv)
  7190  0D32  07A6               	addwf	(?___lwdiv)
  7191                           
  7192  0D33  2D34               	goto	l7466
  7193                           	
  7194  0D34                     l10527:	
  7195                           	line	26
  7196                           	
  7197  0D34                     l7466:	
  7198  0D34  0008               	return
  7199                           	opt stack 0
  7200                           GLOBAL	__end_of___lwdiv
  7201  0D35                     	__end_of___lwdiv:
  7202 ;; =============== function ___lwdiv ends ============
  7203                           
  7204                           	signat	___lwdiv,8314
  7205                           	global	___wmul
  7206                           psect	text919,local,class=CODE,delta=2
  7207                           global __ptext919
  7208  0A7E                     __ptext919:
  7209                           
  7210 ;; *************** function ___wmul *****************
  7211 ;; Defined at:
  7212 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7215 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  product         2    4[BANK0 ] unsigned int 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  2    0[BANK0 ] unsigned int 
  7220 ;; Registers used:
  7221 ;;		wreg, status,2, status,0
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7227 ;;      Params:         0       4       0       0       0
  7228 ;;      Locals:         0       2       0       0       0
  7229 ;;      Temps:          0       0       0       0       0
  7230 ;;      Totals:         0       6       0       0       0
  7231 ;;Total ram usage:        6 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    3
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_ADCconvert
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           psect	text919
  7241                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7242                           	line	3
  7243                           	global	__size_of___wmul
  7244  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7245                           	
  7246  0A7E                     ___wmul:	
  7247                           	opt	stack 1
  7248                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7249                           	line	4
  7250                           	
  7251  0A7E                     l10491:	
  7252  0A7E  1283               	bcf	status, 5	;RP0=0, select bank0
  7253  0A7F  1303               	bcf	status, 6	;RP1=0, select bank0
  7254  0A80  01A4               	clrf	(___wmul@product)
  7255  0A81  01A5               	clrf	(___wmul@product+1)
  7256  0A82  2A83               	goto	l10493
  7257                           	line	6
  7258                           	
  7259  0A83                     l7453:	
  7260                           	line	7
  7261                           	
  7262  0A83                     l10493:	
  7263  0A83  1C20               	btfss	(___wmul@multiplier),(0)&7
  7264  0A84  2A86               	goto	u3871
  7265  0A85  2A87               	goto	u3870
  7266  0A86                     u3871:
  7267  0A86  2A8D               	goto	l7454
  7268  0A87                     u3870:
  7269                           	line	8
  7270                           	
  7271  0A87                     l10495:	
  7272  0A87  0822               	movf	(___wmul@multiplicand),w
  7273  0A88  07A4               	addwf	(___wmul@product),f
  7274  0A89  1803               	skipnc
  7275  0A8A  0AA5               	incf	(___wmul@product+1),f
  7276  0A8B  0823               	movf	(___wmul@multiplicand+1),w
  7277  0A8C  07A5               	addwf	(___wmul@product+1),f
  7278                           	
  7279  0A8D                     l7454:	
  7280                           	line	9
  7281  0A8D  3001               	movlw	01h
  7282                           	
  7283  0A8E                     u3885:
  7284  0A8E  1003               	clrc
  7285  0A8F  0DA2               	rlf	(___wmul@multiplicand),f
  7286  0A90  0DA3               	rlf	(___wmul@multiplicand+1),f
  7287  0A91  3EFF               	addlw	-1
  7288  0A92  1D03               	skipz
  7289  0A93  2A8E               	goto	u3885
  7290                           	line	10
  7291                           	
  7292  0A94                     l10497:	
  7293  0A94  3001               	movlw	01h
  7294                           	
  7295  0A95                     u3895:
  7296  0A95  1003               	clrc
  7297  0A96  0CA1               	rrf	(___wmul@multiplier+1),f
  7298  0A97  0CA0               	rrf	(___wmul@multiplier),f
  7299  0A98  3EFF               	addlw	-1
  7300  0A99  1D03               	skipz
  7301  0A9A  2A95               	goto	u3895
  7302                           	line	11
  7303  0A9B  0821               	movf	((___wmul@multiplier+1)),w
  7304  0A9C  0420               	iorwf	((___wmul@multiplier)),w
  7305  0A9D  1D03               	skipz
  7306  0A9E  2AA0               	goto	u3901
  7307  0A9F  2AA1               	goto	u3900
  7308  0AA0                     u3901:
  7309  0AA0  2A83               	goto	l10493
  7310  0AA1                     u3900:
  7311  0AA1  2AA2               	goto	l10499
  7312                           	
  7313  0AA2                     l7455:	
  7314                           	line	12
  7315                           	
  7316  0AA2                     l10499:	
  7317  0AA2  0825               	movf	(___wmul@product+1),w
  7318  0AA3  01A1               	clrf	(?___wmul+1)
  7319  0AA4  07A1               	addwf	(?___wmul+1)
  7320  0AA5  0824               	movf	(___wmul@product),w
  7321  0AA6  01A0               	clrf	(?___wmul)
  7322  0AA7  07A0               	addwf	(?___wmul)
  7323                           
  7324  0AA8  2AA9               	goto	l7456
  7325                           	
  7326  0AA9                     l10501:	
  7327                           	line	13
  7328                           	
  7329  0AA9                     l7456:	
  7330  0AA9  0008               	return
  7331                           	opt stack 0
  7332                           GLOBAL	__end_of___wmul
  7333  0AAA                     	__end_of___wmul:
  7334 ;; =============== function ___wmul ends ============
  7335                           
  7336                           	signat	___wmul,8314
  7337                           	global	_ser_isrx
  7338                           psect	text920,local,class=CODE,delta=2
  7339                           global __ptext920
  7340  098F                     __ptext920:
  7341                           
  7342 ;; *************** function _ser_isrx *****************
  7343 ;; Defined at:
  7344 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;		None
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;		None               void
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7358 ;;      Params:         0       0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0
  7361 ;;      Totals:         0       0       0       0       0
  7362 ;;Total ram usage:        0 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    3
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_ser_getch
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           psect	text920
  7372                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7373                           	line	45
  7374                           	global	__size_of_ser_isrx
  7375  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  7376                           	
  7377  098F                     _ser_isrx:	
  7378                           	opt	stack 2
  7379                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  7380                           	line	46
  7381                           	
  7382  098F                     l10443:	
  7383                           ;ser.c: 46: if(OERR) {
  7384  098F  1283               	bcf	status, 5	;RP0=0, select bank0
  7385  0990  1303               	bcf	status, 6	;RP1=0, select bank0
  7386  0991  1C98               	btfss	(193/8),(193)&7
  7387  0992  2994               	goto	u3801
  7388  0993  2995               	goto	u3800
  7389  0994                     u3801:
  7390  0994  299A               	goto	l10451
  7391  0995                     u3800:
  7392                           	line	47
  7393                           	
  7394  0995                     l10445:	
  7395                           ;ser.c: 47: CREN = 0;
  7396  0995  1218               	bcf	(196/8),(196)&7
  7397                           	line	48
  7398                           ;ser.c: 48: CREN = 1;
  7399  0996  1618               	bsf	(196/8),(196)&7
  7400                           	line	49
  7401                           	
  7402  0997                     l10447:	
  7403                           ;ser.c: 49: return 0;
  7404  0997  1003               	clrc
  7405                           	
  7406  0998  29A5               	goto	l6708
  7407                           	
  7408  0999                     l10449:	
  7409  0999  29A5               	goto	l6708
  7410                           	line	50
  7411                           	
  7412  099A                     l6707:	
  7413                           	line	51
  7414                           	
  7415  099A                     l10451:	
  7416                           ;ser.c: 50: }
  7417                           ;ser.c: 51: return (rxiptr!=rxoptr);
  7418  099A  086C               	movf	(_rxiptr),w	;volatile
  7419  099B  066D               	xorwf	(_rxoptr),w	;volatile
  7420  099C  1D03               	skipz
  7421  099D  299F               	goto	u3811
  7422  099E  29A0               	goto	u3810
  7423  099F                     u3811:
  7424  099F  29A2               	goto	l10455
  7425  09A0                     u3810:
  7426                           	
  7427  09A0                     l10453:	
  7428  09A0  1003               	clrc
  7429                           	
  7430  09A1  29A5               	goto	l6708
  7431                           	
  7432  09A2                     l10127:	
  7433                           	
  7434  09A2                     l10455:	
  7435  09A2  1403               	setc
  7436                           	
  7437  09A3  29A5               	goto	l6708
  7438                           	
  7439  09A4                     l10129:	
  7440  09A4  29A5               	goto	l6708
  7441                           	
  7442  09A5                     l10457:	
  7443                           	line	52
  7444                           	
  7445  09A5                     l6708:	
  7446  09A5  0008               	return
  7447                           	opt stack 0
  7448                           GLOBAL	__end_of_ser_isrx
  7449  09A6                     	__end_of_ser_isrx:
  7450 ;; =============== function _ser_isrx ends ============
  7451                           
  7452                           	signat	_ser_isrx,88
  7453                           	global	_spi_transfer
  7454                           psect	text921,local,class=CODE,delta=2
  7455                           global __ptext921
  7456  093B                     __ptext921:
  7457                           
  7458 ;; *************** function _spi_transfer *****************
  7459 ;; Defined at:
  7460 ;;		line 34 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  data            1    wreg     unsigned char 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;  data            1    2[BANK0 ] unsigned char 
  7465 ;;  temp            1    1[BANK0 ] unsigned char 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      unsigned char 
  7468 ;; Registers used:
  7469 ;;		wreg
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7475 ;;      Params:         0       0       0       0       0
  7476 ;;      Locals:         0       2       0       0       0
  7477 ;;      Temps:          0       1       0       0       0
  7478 ;;      Totals:         0       3       0       0       0
  7479 ;;Total ram usage:        3 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    3
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_rotate
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           psect	text921
  7489                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7490                           	line	34
  7491                           	global	__size_of_spi_transfer
  7492  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  7493                           	
  7494  093B                     _spi_transfer:	
  7495                           	opt	stack 3
  7496                           ; Regs used in _spi_transfer: [wreg]
  7497                           ;spi_transfer@data stored from wreg
  7498  093B  1283               	bcf	status, 5	;RP0=0, select bank0
  7499  093C  1303               	bcf	status, 6	;RP1=0, select bank0
  7500  093D  00A2               	movwf	(spi_transfer@data)
  7501                           	line	35
  7502                           	
  7503  093E                     l10329:	
  7504                           ;steppermotor.c: 35: unsigned char temp = 0;
  7505  093E  01A1               	clrf	(spi_transfer@temp)
  7506                           	line	37
  7507                           ;steppermotor.c: 37: SSPIF = 0;
  7508  093F  118C               	bcf	(99/8),(99)&7
  7509                           	line	38
  7510                           	
  7511  0940                     l10331:	
  7512                           ;steppermotor.c: 38: SSPBUF = data;
  7513  0940  0822               	movf	(spi_transfer@data),w
  7514  0941  0093               	movwf	(19)	;volatile
  7515                           	line	40
  7516                           ;steppermotor.c: 40: while (SSPIF == 0);
  7517  0942  2943               	goto	l3697
  7518                           	
  7519  0943                     l3698:	
  7520                           	
  7521  0943                     l3697:	
  7522  0943  1D8C               	btfss	(99/8),(99)&7
  7523  0944  2946               	goto	u3601
  7524  0945  2947               	goto	u3600
  7525  0946                     u3601:
  7526  0946  2943               	goto	l3697
  7527  0947                     u3600:
  7528  0947  2948               	goto	l10333
  7529                           	
  7530  0948                     l3699:	
  7531                           	line	41
  7532                           	
  7533  0948                     l10333:	
  7534                           ;steppermotor.c: 41: temp = SSPBUF;
  7535  0948  0813               	movf	(19),w	;volatile
  7536  0949  00A0               	movwf	(??_spi_transfer+0)+0
  7537  094A  0820               	movf	(??_spi_transfer+0)+0,w
  7538  094B  00A1               	movwf	(spi_transfer@temp)
  7539                           	line	42
  7540                           	
  7541  094C                     l10335:	
  7542                           ;steppermotor.c: 42: SSPIF = 0;
  7543  094C  118C               	bcf	(99/8),(99)&7
  7544  094D  294E               	goto	l3700
  7545                           	line	44
  7546                           	
  7547  094E                     l10337:	
  7548                           	line	45
  7549                           ;steppermotor.c: 44: return temp;
  7550                           ;	Return value of _spi_transfer is never used
  7551                           	
  7552  094E                     l3700:	
  7553  094E  0008               	return
  7554                           	opt stack 0
  7555                           GLOBAL	__end_of_spi_transfer
  7556  094F                     	__end_of_spi_transfer:
  7557 ;; =============== function _spi_transfer ends ============
  7558                           
  7559                           	signat	_spi_transfer,4217
  7560                           	global	_Menu
  7561                           psect	text922,local,class=CODE,delta=2
  7562                           global __ptext922
  7563  0C9E                     __ptext922:
  7564                           
  7565 ;; *************** function _Menu *****************
  7566 ;; Defined at:
  7567 ;;		line 181 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  BTN_input       1    wreg     unsigned char 
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;  BTN_input       1    0[BANK0 ] unsigned char 
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      unsigned char 
  7574 ;; Registers used:
  7575 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7581 ;;      Params:         0       0       0       0       0
  7582 ;;      Locals:         0       1       0       0       0
  7583 ;;      Temps:          0       0       0       0       0
  7584 ;;      Totals:         0       1       0       0       0
  7585 ;;Total ram usage:        1 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    3
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_main
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           psect	text922
  7595                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  7596                           	line	181
  7597                           	global	__size_of_Menu
  7598  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  7599                           	
  7600  0C9E                     _Menu:	
  7601                           	opt	stack 4
  7602                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  7603                           ;Menu@BTN_input stored from wreg
  7604  0C9E  1283               	bcf	status, 5	;RP0=0, select bank0
  7605  0C9F  1303               	bcf	status, 6	;RP1=0, select bank0
  7606  0CA0  00A0               	movwf	(Menu@BTN_input)
  7607                           	line	182
  7608                           	
  7609  0CA1                     l10305:	
  7610                           ;HMI.c: 182: switch (BTN_input)
  7611  0CA1  2CD0               	goto	l10323
  7612                           	line	184
  7613                           ;HMI.c: 183: {
  7614                           ;HMI.c: 184: case 1:
  7615                           	
  7616  0CA2                     l4523:	
  7617                           	line	186
  7618                           ;HMI.c: 186: break;
  7619  0CA2  2CE2               	goto	l10325
  7620                           	line	187
  7621                           ;HMI.c: 187: case 2:
  7622                           	
  7623  0CA3                     l4525:	
  7624                           	line	189
  7625                           ;HMI.c: 189: break;
  7626  0CA3  2CE2               	goto	l10325
  7627                           	line	190
  7628                           ;HMI.c: 190: case 3:
  7629                           	
  7630  0CA4                     l4526:	
  7631                           	line	191
  7632                           	
  7633  0CA4                     l10307:	
  7634                           ;HMI.c: 191: pos--;
  7635  0CA4  30FF               	movlw	low(-1)
  7636  0CA5  1683               	bsf	status, 5	;RP0=1, select bank1
  7637  0CA6  1303               	bcf	status, 6	;RP1=0, select bank1
  7638  0CA7  07C8               	addwf	(_pos)^080h,f
  7639  0CA8  1803               	skipnc
  7640  0CA9  0AC9               	incf	(_pos+1)^080h,f
  7641  0CAA  30FF               	movlw	high(-1)
  7642  0CAB  07C9               	addwf	(_pos+1)^080h,f
  7643                           	line	192
  7644                           	
  7645  0CAC                     l10309:	
  7646                           ;HMI.c: 192: if (pos < 0)
  7647  0CAC  1FC9               	btfss	(_pos+1)^080h,7
  7648  0CAD  2CAF               	goto	u3581
  7649  0CAE  2CB0               	goto	u3580
  7650  0CAF                     u3581:
  7651  0CAF  2CE2               	goto	l10325
  7652  0CB0                     u3580:
  7653                           	line	193
  7654                           	
  7655  0CB0                     l10311:	
  7656                           ;HMI.c: 193: pos = 6 - 1;
  7657  0CB0  3005               	movlw	low(05h)
  7658  0CB1  00C8               	movwf	(_pos)^080h
  7659  0CB2  3000               	movlw	high(05h)
  7660  0CB3  00C9               	movwf	((_pos)^080h)+1
  7661  0CB4  2CE2               	goto	l10325
  7662                           	
  7663  0CB5                     l4527:	
  7664                           	line	195
  7665                           ;HMI.c: 195: break;
  7666  0CB5  2CE2               	goto	l10325
  7667                           	line	196
  7668                           ;HMI.c: 196: case 4:
  7669                           	
  7670  0CB6                     l4528:	
  7671                           	line	197
  7672                           	
  7673  0CB6                     l10313:	
  7674                           ;HMI.c: 197: pos++;
  7675  0CB6  3001               	movlw	low(01h)
  7676  0CB7  1683               	bsf	status, 5	;RP0=1, select bank1
  7677  0CB8  1303               	bcf	status, 6	;RP1=0, select bank1
  7678  0CB9  07C8               	addwf	(_pos)^080h,f
  7679  0CBA  1803               	skipnc
  7680  0CBB  0AC9               	incf	(_pos+1)^080h,f
  7681  0CBC  3000               	movlw	high(01h)
  7682  0CBD  07C9               	addwf	(_pos+1)^080h,f
  7683                           	line	198
  7684                           ;HMI.c: 198: if (pos == 6)
  7685  0CBE  3006               	movlw	06h
  7686  0CBF  0648               	xorwf	(_pos)^080h,w
  7687  0CC0  0449               	iorwf	(_pos+1)^080h,w
  7688  0CC1  1D03               	skipz
  7689  0CC2  2CC4               	goto	u3591
  7690  0CC3  2CC5               	goto	u3590
  7691  0CC4                     u3591:
  7692  0CC4  2CE2               	goto	l10325
  7693  0CC5                     u3590:
  7694                           	line	199
  7695                           	
  7696  0CC5                     l10315:	
  7697                           ;HMI.c: 199: pos = 0;
  7698  0CC5  01C8               	clrf	(_pos)^080h
  7699  0CC6  01C9               	clrf	(_pos+1)^080h
  7700  0CC7  2CE2               	goto	l10325
  7701                           	
  7702  0CC8                     l4529:	
  7703                           	line	201
  7704                           ;HMI.c: 201: break;
  7705  0CC8  2CE2               	goto	l10325
  7706                           	line	202
  7707                           ;HMI.c: 202: case 5:
  7708                           	
  7709  0CC9                     l4530:	
  7710                           	line	203
  7711                           	
  7712  0CC9                     l10317:	
  7713                           ;HMI.c: 203: return pos;
  7714  0CC9  1683               	bsf	status, 5	;RP0=1, select bank1
  7715  0CCA  1303               	bcf	status, 6	;RP1=0, select bank1
  7716  0CCB  0848               	movf	(_pos)^080h,w
  7717  0CCC  2CE4               	goto	l4531
  7718                           	
  7719  0CCD                     l10319:	
  7720  0CCD  2CE4               	goto	l4531
  7721                           	line	206
  7722                           ;HMI.c: 206: default:
  7723                           	
  7724  0CCE                     l4532:	
  7725                           	line	208
  7726                           ;HMI.c: 208: break;
  7727  0CCE  2CE2               	goto	l10325
  7728                           	line	209
  7729                           	
  7730  0CCF                     l10321:	
  7731                           ;HMI.c: 209: }
  7732  0CCF  2CE2               	goto	l10325
  7733                           	line	182
  7734                           	
  7735  0CD0                     l4522:	
  7736                           	
  7737  0CD0                     l10323:	
  7738  0CD0  1283               	bcf	status, 5	;RP0=0, select bank0
  7739  0CD1  0820               	movf	(Menu@BTN_input),w
  7740                           	; Switch size 1, requested type "space"
  7741                           ; Number of cases is 5, Range of values is 1 to 5
  7742                           ; switch strategies available:
  7743                           ; Name         Instructions Cycles
  7744                           ; simple_byte           16     9 (average)
  7745                           ; direct_byte           26    11 (fixed)
  7746                           ; jumptable            263     9 (fixed)
  7747                           ;	Chosen strategy is simple_byte
  7748                           
  7749                           	opt asmopt_off
  7750  0CD2  3A01               	xorlw	1^0	; case 1
  7751  0CD3  1903               	skipnz
  7752  0CD4  2CE2               	goto	l10325
  7753  0CD5  3A03               	xorlw	2^1	; case 2
  7754  0CD6  1903               	skipnz
  7755  0CD7  2CE2               	goto	l10325
  7756  0CD8  3A01               	xorlw	3^2	; case 3
  7757  0CD9  1903               	skipnz
  7758  0CDA  2CA4               	goto	l10307
  7759  0CDB  3A07               	xorlw	4^3	; case 4
  7760  0CDC  1903               	skipnz
  7761  0CDD  2CB6               	goto	l10313
  7762  0CDE  3A01               	xorlw	5^4	; case 5
  7763  0CDF  1903               	skipnz
  7764  0CE0  2CC9               	goto	l10317
  7765  0CE1  2CE2               	goto	l10325
  7766                           	opt asmopt_on
  7767                           
  7768                           	line	209
  7769                           	
  7770  0CE2                     l4524:	
  7771                           	line	210
  7772                           	
  7773  0CE2                     l10325:	
  7774                           ;HMI.c: 210: return 255;
  7775  0CE2  30FF               	movlw	(0FFh)
  7776  0CE3  2CE4               	goto	l4531
  7777                           	
  7778  0CE4                     l10327:	
  7779                           	line	211
  7780                           	
  7781  0CE4                     l4531:	
  7782  0CE4  0008               	return
  7783                           	opt stack 0
  7784                           GLOBAL	__end_of_Menu
  7785  0CE5                     	__end_of_Menu:
  7786 ;; =============== function _Menu ends ============
  7787                           
  7788                           	signat	_Menu,4217
  7789                           	global	_ser_putch
  7790                           psect	text923,local,class=CODE,delta=2
  7791                           global __ptext923
  7792  09BF                     __ptext923:
  7793                           
  7794 ;; *************** function _ser_putch *****************
  7795 ;; Defined at:
  7796 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  c               1    wreg     unsigned char 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  c               1    1[BANK0 ] unsigned char 
  7801 ;; Return value:  Size  Location     Type
  7802 ;;		None               void
  7803 ;; Registers used:
  7804 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7810 ;;      Params:         0       0       0       0       0
  7811 ;;      Locals:         0       1       0       0       0
  7812 ;;      Temps:          0       1       0       0       0
  7813 ;;      Totals:         0       2       0       0       0
  7814 ;;Total ram usage:        2 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; Hardware stack levels required when called:    3
  7817 ;; This function calls:
  7818 ;;		Nothing
  7819 ;; This function is called by:
  7820 ;;		_ChargeMode
  7821 ;;		_robo_init
  7822 ;;		_robot_read
  7823 ;;		_robotMove
  7824 ;;		_robotTurn
  7825 ;;		_ser_puts
  7826 ;;		_ser_puts2
  7827 ;;		_ser_puthex
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           psect	text923
  7831                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7832                           	line	70
  7833                           	global	__size_of_ser_putch
  7834  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  7835                           	
  7836  09BF                     _ser_putch:	
  7837                           	opt	stack 3
  7838                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  7839                           ;ser_putch@c stored from wreg
  7840  09BF  1283               	bcf	status, 5	;RP0=0, select bank0
  7841  09C0  1303               	bcf	status, 6	;RP1=0, select bank0
  7842  09C1  00A1               	movwf	(ser_putch@c)
  7843                           	line	71
  7844                           	
  7845  09C2                     l10293:	
  7846                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  7847  09C2  29C4               	goto	l10295
  7848                           	
  7849  09C3                     l6718:	
  7850                           	line	72
  7851                           ;ser.c: 72: continue;
  7852  09C3  29C4               	goto	l10295
  7853                           	
  7854  09C4                     l6717:	
  7855                           	line	71
  7856                           	
  7857  09C4                     l10295:	
  7858  09C4  086E               	movf	(_txiptr),w	;volatile
  7859  09C5  3E01               	addlw	01h
  7860  09C6  390F               	andlw	0Fh
  7861  09C7  066F               	xorwf	(_txoptr),w	;volatile
  7862  09C8  1903               	skipnz
  7863  09C9  29CB               	goto	u3571
  7864  09CA  29CC               	goto	u3570
  7865  09CB                     u3571:
  7866  09CB  29C4               	goto	l10295
  7867  09CC                     u3570:
  7868                           	
  7869  09CC                     l6719:	
  7870                           	line	73
  7871                           ;ser.c: 73: GIE=0;
  7872  09CC  138B               	bcf	(95/8),(95)&7
  7873                           	line	74
  7874                           	
  7875  09CD                     l10297:	
  7876                           ;ser.c: 74: txfifo[txiptr] = c;
  7877  09CD  0821               	movf	(ser_putch@c),w
  7878  09CE  00A0               	movwf	(??_ser_putch+0)+0
  7879  09CF  086E               	movf	(_txiptr),w
  7880  09D0  3EB0               	addlw	_txfifo&0ffh
  7881  09D1  0084               	movwf	fsr0
  7882  09D2  0820               	movf	(??_ser_putch+0)+0,w
  7883  09D3  1383               	bcf	status, 7	;select IRP bank1
  7884  09D4  0080               	movwf	indf
  7885                           	line	75
  7886                           	
  7887  09D5                     l10299:	
  7888                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  7889  09D5  086E               	movf	(_txiptr),w	;volatile
  7890  09D6  3E01               	addlw	01h
  7891  09D7  390F               	andlw	0Fh
  7892  09D8  00A0               	movwf	(??_ser_putch+0)+0
  7893  09D9  0820               	movf	(??_ser_putch+0)+0,w
  7894  09DA  00EE               	movwf	(_txiptr)	;volatile
  7895                           	line	76
  7896                           	
  7897  09DB                     l10301:	
  7898                           ;ser.c: 76: TXIE=1;
  7899  09DB  1683               	bsf	status, 5	;RP0=1, select bank1
  7900  09DC  1303               	bcf	status, 6	;RP1=0, select bank1
  7901  09DD  160C               	bsf	(1124/8)^080h,(1124)&7
  7902                           	line	77
  7903                           	
  7904  09DE                     l10303:	
  7905                           ;ser.c: 77: GIE=1;
  7906  09DE  178B               	bsf	(95/8),(95)&7
  7907                           	line	78
  7908                           	
  7909  09DF                     l6720:	
  7910  09DF  0008               	return
  7911                           	opt stack 0
  7912                           GLOBAL	__end_of_ser_putch
  7913  09E0                     	__end_of_ser_putch:
  7914 ;; =============== function _ser_putch ends ============
  7915                           
  7916                           	signat	_ser_putch,4216
  7917                           	global	_ser_init
  7918                           psect	text924,local,class=CODE,delta=2
  7919                           global __ptext924
  7920  0A02                     __ptext924:
  7921                           
  7922 ;; *************** function _ser_init *****************
  7923 ;; Defined at:
  7924 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;		None
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;		None
  7929 ;; Return value:  Size  Location     Type
  7930 ;;		None               void
  7931 ;; Registers used:
  7932 ;;		wreg, status,2, status,0
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7938 ;;      Params:         0       0       0       0       0
  7939 ;;      Locals:         0       0       0       0       0
  7940 ;;      Temps:          0       1       0       0       0
  7941 ;;      Totals:         0       1       0       0       0
  7942 ;;Total ram usage:        1 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:    3
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_init
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           psect	text924
  7952                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7953                           	line	113
  7954                           	global	__size_of_ser_init
  7955  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  7956                           	
  7957  0A02                     _ser_init:	
  7958                           	opt	stack 3
  7959                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  7960                           	line	114
  7961                           	
  7962  0A02                     l10267:	
  7963                           ;ser.c: 114: TRISC |= 0b10000000;
  7964  0A02  1683               	bsf	status, 5	;RP0=1, select bank1
  7965  0A03  1303               	bcf	status, 6	;RP1=0, select bank1
  7966  0A04  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  7967                           	line	115
  7968                           	
  7969  0A05                     l10269:	
  7970                           ;ser.c: 115: TRISC &= 0b10111111;
  7971  0A05  30BF               	movlw	(0BFh)
  7972  0A06  1283               	bcf	status, 5	;RP0=0, select bank0
  7973  0A07  1303               	bcf	status, 6	;RP1=0, select bank0
  7974  0A08  00A0               	movwf	(??_ser_init+0)+0
  7975  0A09  0820               	movf	(??_ser_init+0)+0,w
  7976  0A0A  1683               	bsf	status, 5	;RP0=1, select bank1
  7977  0A0B  1303               	bcf	status, 6	;RP1=0, select bank1
  7978  0A0C  0587               	andwf	(135)^080h,f	;volatile
  7979                           	line	116
  7980                           	
  7981  0A0D                     l10271:	
  7982                           ;ser.c: 116: BRGH=1;
  7983  0A0D  1518               	bsf	(1218/8)^080h,(1218)&7
  7984                           	line	118
  7985                           	
  7986  0A0E                     l10273:	
  7987                           ;ser.c: 118: SPBRG=20;
  7988  0A0E  3014               	movlw	(014h)
  7989  0A0F  0099               	movwf	(153)^080h	;volatile
  7990                           	line	121
  7991                           	
  7992  0A10                     l10275:	
  7993                           ;ser.c: 121: TX9=0;
  7994  0A10  1318               	bcf	(1222/8)^080h,(1222)&7
  7995                           	line	122
  7996                           	
  7997  0A11                     l10277:	
  7998                           ;ser.c: 122: RX9=0;
  7999  0A11  1283               	bcf	status, 5	;RP0=0, select bank0
  8000  0A12  1303               	bcf	status, 6	;RP1=0, select bank0
  8001  0A13  1318               	bcf	(198/8),(198)&7
  8002                           	line	124
  8003                           	
  8004  0A14                     l10279:	
  8005                           ;ser.c: 124: SYNC=0;
  8006  0A14  1683               	bsf	status, 5	;RP0=1, select bank1
  8007  0A15  1303               	bcf	status, 6	;RP1=0, select bank1
  8008  0A16  1218               	bcf	(1220/8)^080h,(1220)&7
  8009                           	line	125
  8010                           	
  8011  0A17                     l10281:	
  8012                           ;ser.c: 125: SPEN=1;
  8013  0A17  1283               	bcf	status, 5	;RP0=0, select bank0
  8014  0A18  1303               	bcf	status, 6	;RP1=0, select bank0
  8015  0A19  1798               	bsf	(199/8),(199)&7
  8016                           	line	126
  8017                           	
  8018  0A1A                     l10283:	
  8019                           ;ser.c: 126: CREN=1;
  8020  0A1A  1618               	bsf	(196/8),(196)&7
  8021                           	line	127
  8022                           	
  8023  0A1B                     l10285:	
  8024                           ;ser.c: 127: TXIE=0;
  8025  0A1B  1683               	bsf	status, 5	;RP0=1, select bank1
  8026  0A1C  1303               	bcf	status, 6	;RP1=0, select bank1
  8027  0A1D  120C               	bcf	(1124/8)^080h,(1124)&7
  8028                           	line	128
  8029                           	
  8030  0A1E                     l10287:	
  8031                           ;ser.c: 128: RCIE=1;
  8032  0A1E  168C               	bsf	(1125/8)^080h,(1125)&7
  8033                           	line	129
  8034                           	
  8035  0A1F                     l10289:	
  8036                           ;ser.c: 129: TXEN=1;
  8037  0A1F  1698               	bsf	(1221/8)^080h,(1221)&7
  8038                           	line	132
  8039                           	
  8040  0A20                     l10291:	
  8041                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  8042  0A20  3000               	movlw	(0)
  8043  0A21  1283               	bcf	status, 5	;RP0=0, select bank0
  8044  0A22  1303               	bcf	status, 6	;RP1=0, select bank0
  8045  0A23  00EF               	movwf	(_txoptr)	;volatile
  8046  0A24  00EE               	movwf	(_txiptr)	;volatile
  8047  0A25  00ED               	movwf	(_rxoptr)	;volatile
  8048  0A26  00A0               	movwf	(??_ser_init+0)+0
  8049  0A27  0820               	movf	(??_ser_init+0)+0,w
  8050  0A28  00EC               	movwf	(_rxiptr)	;volatile
  8051                           	line	133
  8052                           	
  8053  0A29                     l6742:	
  8054  0A29  0008               	return
  8055                           	opt stack 0
  8056                           GLOBAL	__end_of_ser_init
  8057  0A2A                     	__end_of_ser_init:
  8058 ;; =============== function _ser_init ends ============
  8059                           
  8060                           	signat	_ser_init,88
  8061                           	global	_adc_read
  8062                           psect	text925,local,class=CODE,delta=2
  8063                           global __ptext925
  8064  0A2A                     __ptext925:
  8065                           
  8066 ;; *************** function _adc_read *****************
  8067 ;; Defined at:
  8068 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  2    0[BANK0 ] unsigned int 
  8075 ;; Registers used:
  8076 ;;		wreg, status,2, status,0
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8082 ;;      Params:         0       2       0       0       0
  8083 ;;      Locals:         0       2       0       0       0
  8084 ;;      Temps:          0       2       0       0       0
  8085 ;;      Totals:         0       6       0       0       0
  8086 ;;Total ram usage:        6 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    3
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_adc_read_channel
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           psect	text925
  8096                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8097                           	line	61
  8098                           	global	__size_of_adc_read
  8099  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  8100                           	
  8101  0A2A                     _adc_read:	
  8102                           	opt	stack 0
  8103                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  8104                           	line	64
  8105                           	
  8106  0A2A                     l10139:	
  8107                           ;adc.c: 62: volatile unsigned int adc_value;
  8108                           ;adc.c: 64: ADRESH = 0;
  8109  0A2A  1283               	bcf	status, 5	;RP0=0, select bank0
  8110  0A2B  1303               	bcf	status, 6	;RP1=0, select bank0
  8111  0A2C  019E               	clrf	(30)	;volatile
  8112                           	line	66
  8113                           	
  8114  0A2D                     l10141:	
  8115                           ;adc.c: 66: GO = 1;
  8116  0A2D  151F               	bsf	(250/8),(250)&7
  8117                           	line	67
  8118                           ;adc.c: 67: while(GO) continue;
  8119  0A2E  2A2F               	goto	l703
  8120                           	
  8121  0A2F                     l704:	
  8122                           	
  8123  0A2F                     l703:	
  8124  0A2F  191F               	btfsc	(250/8),(250)&7
  8125  0A30  2A32               	goto	u3361
  8126  0A31  2A33               	goto	u3360
  8127  0A32                     u3361:
  8128  0A32  2A2F               	goto	l703
  8129  0A33                     u3360:
  8130                           	
  8131  0A33                     l705:	
  8132                           	line	68
  8133                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  8134  0A33  0000               nop ;#
  8135                           	line	69
  8136                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  8137  0A34  0000               nop ;#
  8138                           	line	70
  8139                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  8140  0A35  0000               nop ;#
  8141                           psect	text925
  8142                           	line	73
  8143                           	
  8144  0A36                     l10143:	
  8145                           ;adc.c: 73: adc_value = ADRESH;
  8146  0A36  1283               	bcf	status, 5	;RP0=0, select bank0
  8147  0A37  1303               	bcf	status, 6	;RP1=0, select bank0
  8148  0A38  081E               	movf	(30),w	;volatile
  8149  0A39  00A2               	movwf	(??_adc_read+0)+0
  8150  0A3A  01A3               	clrf	(??_adc_read+0)+0+1
  8151  0A3B  0822               	movf	0+(??_adc_read+0)+0,w
  8152  0A3C  00A4               	movwf	(adc_read@adc_value)	;volatile
  8153  0A3D  0823               	movf	1+(??_adc_read+0)+0,w
  8154  0A3E  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  8155                           	line	74
  8156                           ;adc.c: 74: adc_value <<= 1;
  8157  0A3F  3001               	movlw	01h
  8158                           	
  8159  0A40                     u3375:
  8160  0A40  1003               	clrc
  8161  0A41  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  8162  0A42  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  8163  0A43  3EFF               	addlw	-1
  8164  0A44  1D03               	skipz
  8165  0A45  2A40               	goto	u3375
  8166                           	line	75
  8167                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  8168  0A46  1683               	bsf	status, 5	;RP0=1, select bank1
  8169  0A47  1303               	bcf	status, 6	;RP1=0, select bank1
  8170  0A48  081E               	movf	(158)^080h,w	;volatile
  8171                           	line	78
  8172                           	
  8173  0A49                     l10145:	
  8174                           ;adc.c: 78: return (adc_value);
  8175  0A49  1283               	bcf	status, 5	;RP0=0, select bank0
  8176  0A4A  1303               	bcf	status, 6	;RP1=0, select bank0
  8177  0A4B  0825               	movf	(adc_read@adc_value+1),w	;volatile
  8178  0A4C  01A1               	clrf	(?_adc_read+1)
  8179  0A4D  07A1               	addwf	(?_adc_read+1)
  8180  0A4E  0824               	movf	(adc_read@adc_value),w	;volatile
  8181  0A4F  01A0               	clrf	(?_adc_read)
  8182  0A50  07A0               	addwf	(?_adc_read)
  8183                           
  8184  0A51  2A52               	goto	l706
  8185                           	
  8186  0A52                     l10147:	
  8187                           	line	79
  8188                           	
  8189  0A52                     l706:	
  8190  0A52  0008               	return
  8191                           	opt stack 0
  8192                           GLOBAL	__end_of_adc_read
  8193  0A53                     	__end_of_adc_read:
  8194 ;; =============== function _adc_read ends ============
  8195                           
  8196                           	signat	_adc_read,90
  8197                           	global	_isr1
  8198                           psect	text926,local,class=CODE,delta=2
  8199                           global __ptext926
  8200  05B6                     __ptext926:
  8201                           
  8202 ;; *************** function _isr1 *****************
  8203 ;; Defined at:
  8204 ;;		line 93 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;		None
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;		None
  8209 ;; Return value:  Size  Location     Type
  8210 ;;		None               void
  8211 ;; Registers used:
  8212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8218 ;;      Params:         0       0       0       0       0
  8219 ;;      Locals:         0       0       0       0       0
  8220 ;;      Temps:          5       0       0       0       0
  8221 ;;      Totals:         5       0       0       0       0
  8222 ;;Total ram usage:        5 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    2
  8225 ;; This function calls:
  8226 ;;		i1___lwmod
  8227 ;;		_ReadButtons
  8228 ;; This function is called by:
  8229 ;;		Interrupt level 1
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           psect	text926
  8233                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  8234                           	line	93
  8235                           	global	__size_of_isr1
  8236  00DC                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  8237                           	
  8238  05B6                     _isr1:	
  8239                           	opt	stack 0
  8240                           ; Regs used in _isr1: [allreg]
  8241                           psect	intentry,class=CODE,delta=2
  8242                           global __pintentry
  8243  0004                     __pintentry:
  8244                           global interrupt_function
  8245  0004                     interrupt_function:
  8246                           	global saved_w
  8247  007E                     	saved_w	set	btemp+0
  8248  0004  00FE               	movwf	saved_w
  8249  0005  0E03               	swapf	status,w
  8250  0006  00F9               	movwf	(??_isr1+1)
  8251  0007  0804               	movf	fsr0,w
  8252  0008  00FA               	movwf	(??_isr1+2)
  8253  0009  080A               	movf	pclath,w
  8254  000A  00FB               	movwf	(??_isr1+3)
  8255  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  8256  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  8257  000D  087F               	movf	btemp+1,w
  8258  000E  00FC               	movwf	(??_isr1+4)
  8259  000F  120A  118A  2DB6   	ljmp	_isr1
  8260                           psect	text926
  8261                           	line	97
  8262                           	
  8263  05B6                     i1l10175:	
  8264                           ;Main.c: 97: if(TMR0IF)
  8265  05B6  1D0B               	btfss	(90/8),(90)&7
  8266  05B7  2DB9               	goto	u341_21
  8267  05B8  2DBA               	goto	u341_20
  8268  05B9                     u341_21:
  8269  05B9  2E39               	goto	i1l10205
  8270  05BA                     u341_20:
  8271                           	line	99
  8272                           	
  8273  05BA                     i1l10177:	
  8274                           ;Main.c: 98: {
  8275                           ;Main.c: 99: TMR0IF = 0;
  8276  05BA  110B               	bcf	(90/8),(90)&7
  8277                           	line	100
  8278                           	
  8279  05BB                     i1l10179:	
  8280                           ;Main.c: 100: TMR0 = 100;
  8281  05BB  3064               	movlw	(064h)
  8282  05BC  0081               	movwf	(1)	;volatile
  8283                           	line	102
  8284                           ;Main.c: 102: RTC_Counter++;
  8285  05BD  3001               	movlw	low(01h)
  8286  05BE  07E8               	addwf	(_RTC_Counter),f	;volatile
  8287  05BF  1803               	skipnc
  8288  05C0  0AE9               	incf	(_RTC_Counter+1),f	;volatile
  8289  05C1  3000               	movlw	high(01h)
  8290  05C2  07E9               	addwf	(_RTC_Counter+1),f	;volatile
  8291                           	line	104
  8292                           	
  8293  05C3                     i1l10181:	
  8294                           ;Main.c: 104: RTC_FLAG_1MS = 1;
  8295  05C3  17F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  8296                           	line	105
  8297                           	
  8298  05C4                     i1l10183:	
  8299                           ;Main.c: 105: if(RTC_Counter % 10 == 0)
  8300  05C4  300A               	movlw	low(0Ah)
  8301  05C5  00F2               	movwf	(?i1___lwmod)
  8302  05C6  3000               	movlw	high(0Ah)
  8303  05C7  00F3               	movwf	((?i1___lwmod))+1
  8304  05C8  0869               	movf	(_RTC_Counter+1),w	;volatile
  8305  05C9  01F5               	clrf	1+(?i1___lwmod)+02h
  8306  05CA  07F5               	addwf	1+(?i1___lwmod)+02h
  8307  05CB  0868               	movf	(_RTC_Counter),w	;volatile
  8308  05CC  01F4               	clrf	0+(?i1___lwmod)+02h
  8309  05CD  07F4               	addwf	0+(?i1___lwmod)+02h
  8310                           
  8311  05CE  120A  158A  23CE   	fcall	i1___lwmod
              120A  118A         
  8312  05D3  0873               	movf	((1+(?i1___lwmod))),w
  8313  05D4  0472               	iorwf	((0+(?i1___lwmod))),w
  8314  05D5  1D03               	skipz
  8315  05D6  2DD8               	goto	u342_21
  8316  05D7  2DD9               	goto	u342_20
  8317  05D8                     u342_21:
  8318  05D8  2DDB               	goto	i1l10187
  8319  05D9                     u342_20:
  8320                           	line	107
  8321                           	
  8322  05D9                     i1l10185:	
  8323                           ;Main.c: 106: {
  8324                           ;Main.c: 107: RTC_FLAG_10MS = 1;
  8325  05D9  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  8326  05DA  2DDB               	goto	i1l10187
  8327                           	line	110
  8328                           	
  8329  05DB                     i1l2205:	
  8330                           	line	111
  8331                           	
  8332  05DB                     i1l10187:	
  8333                           ;Main.c: 110: }
  8334                           ;Main.c: 111: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  8335  05DB  3032               	movlw	low(032h)
  8336  05DC  00F2               	movwf	(?i1___lwmod)
  8337  05DD  3000               	movlw	high(032h)
  8338  05DE  00F3               	movwf	((?i1___lwmod))+1
  8339  05DF  1283               	bcf	status, 5	;RP0=0, select bank0
  8340  05E0  1303               	bcf	status, 6	;RP1=0, select bank0
  8341  05E1  0869               	movf	(_RTC_Counter+1),w	;volatile
  8342  05E2  01F5               	clrf	1+(?i1___lwmod)+02h
  8343  05E3  07F5               	addwf	1+(?i1___lwmod)+02h
  8344  05E4  0868               	movf	(_RTC_Counter),w	;volatile
  8345  05E5  01F4               	clrf	0+(?i1___lwmod)+02h
  8346  05E6  07F4               	addwf	0+(?i1___lwmod)+02h
  8347                           
  8348  05E7  120A  158A  23CE   	fcall	i1___lwmod
              120A  118A         
  8349  05EC  0873               	movf	((1+(?i1___lwmod))),w
  8350  05ED  0472               	iorwf	((0+(?i1___lwmod))),w
  8351  05EE  1D03               	skipz
  8352  05EF  2DF1               	goto	u343_21
  8353  05F0  2DF2               	goto	u343_20
  8354  05F1                     u343_21:
  8355  05F1  2DF4               	goto	i1l10191
  8356  05F2                     u343_20:
  8357                           	
  8358  05F2                     i1l10189:	
  8359  05F2  1571               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  8360  05F3  2DF4               	goto	i1l10191
  8361                           	
  8362  05F4                     i1l2206:	
  8363                           	line	112
  8364                           	
  8365  05F4                     i1l10191:	
  8366                           ;Main.c: 112: if(RTC_Counter % 250 == 0)
  8367  05F4  30FA               	movlw	low(0FAh)
  8368  05F5  00F2               	movwf	(?i1___lwmod)
  8369  05F6  3000               	movlw	high(0FAh)
  8370  05F7  00F3               	movwf	((?i1___lwmod))+1
  8371  05F8  1283               	bcf	status, 5	;RP0=0, select bank0
  8372  05F9  1303               	bcf	status, 6	;RP1=0, select bank0
  8373  05FA  0869               	movf	(_RTC_Counter+1),w	;volatile
  8374  05FB  01F5               	clrf	1+(?i1___lwmod)+02h
  8375  05FC  07F5               	addwf	1+(?i1___lwmod)+02h
  8376  05FD  0868               	movf	(_RTC_Counter),w	;volatile
  8377  05FE  01F4               	clrf	0+(?i1___lwmod)+02h
  8378  05FF  07F4               	addwf	0+(?i1___lwmod)+02h
  8379                           
  8380  0600  120A  158A  23CE   	fcall	i1___lwmod
              120A  118A         
  8381  0605  0873               	movf	((1+(?i1___lwmod))),w
  8382  0606  0472               	iorwf	((0+(?i1___lwmod))),w
  8383  0607  1D03               	skipz
  8384  0608  2E0A               	goto	u344_21
  8385  0609  2E0B               	goto	u344_20
  8386  060A                     u344_21:
  8387  060A  2E0D               	goto	i1l10195
  8388  060B                     u344_20:
  8389                           	line	115
  8390                           	
  8391  060B                     i1l10193:	
  8392                           ;Main.c: 113: {
  8393                           ;Main.c: 115: RTC_FLAG_250MS = 1;
  8394  060B  1471               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  8395  060C  2E0D               	goto	i1l10195
  8396                           	line	117
  8397                           	
  8398  060D                     i1l2207:	
  8399                           	line	118
  8400                           	
  8401  060D                     i1l10195:	
  8402                           ;Main.c: 117: }
  8403                           ;Main.c: 118: if(RTC_Counter % 500 == 0)
  8404  060D  30F4               	movlw	low(01F4h)
  8405  060E  00F2               	movwf	(?i1___lwmod)
  8406  060F  3001               	movlw	high(01F4h)
  8407  0610  00F3               	movwf	((?i1___lwmod))+1
  8408  0611  1283               	bcf	status, 5	;RP0=0, select bank0
  8409  0612  1303               	bcf	status, 6	;RP1=0, select bank0
  8410  0613  0869               	movf	(_RTC_Counter+1),w	;volatile
  8411  0614  01F5               	clrf	1+(?i1___lwmod)+02h
  8412  0615  07F5               	addwf	1+(?i1___lwmod)+02h
  8413  0616  0868               	movf	(_RTC_Counter),w	;volatile
  8414  0617  01F4               	clrf	0+(?i1___lwmod)+02h
  8415  0618  07F4               	addwf	0+(?i1___lwmod)+02h
  8416                           
  8417  0619  120A  158A  23CE   	fcall	i1___lwmod
              120A  118A         
  8418  061E  0873               	movf	((1+(?i1___lwmod))),w
  8419  061F  0472               	iorwf	((0+(?i1___lwmod))),w
  8420  0620  1D03               	skipz
  8421  0621  2E23               	goto	u345_21
  8422  0622  2E24               	goto	u345_20
  8423  0623                     u345_21:
  8424  0623  2E2A               	goto	i1l10201
  8425  0624                     u345_20:
  8426                           	line	120
  8427                           	
  8428  0624                     i1l10197:	
  8429                           ;Main.c: 119: {
  8430                           ;Main.c: 120: RTC_FLAG_500MS = 1;
  8431  0624  14F1               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  8432                           	line	121
  8433                           	
  8434  0625                     i1l10199:	
  8435                           ;Main.c: 121: RB0 ^= 0x01;
  8436  0625  1283               	bcf	status, 5	;RP0=0, select bank0
  8437  0626  1303               	bcf	status, 6	;RP1=0, select bank0
  8438  0627  3001               	movlw	1<<((48)&7)
  8439  0628  0686               	xorwf	((48)/8),f
  8440  0629  2E2A               	goto	i1l10201
  8441                           	line	123
  8442                           	
  8443  062A                     i1l2208:	
  8444                           	line	124
  8445                           	
  8446  062A                     i1l10201:	
  8447                           ;Main.c: 123: }
  8448                           ;Main.c: 124: if (buttonPressed == 0)
  8449  062A  08FD               	movf	(_buttonPressed),f
  8450  062B  1D03               	skipz	;volatile
  8451  062C  2E2E               	goto	u346_21
  8452  062D  2E2F               	goto	u346_20
  8453  062E                     u346_21:
  8454  062E  2E39               	goto	i1l10205
  8455  062F                     u346_20:
  8456                           	line	127
  8457                           	
  8458  062F                     i1l10203:	
  8459                           ;Main.c: 125: {
  8460                           ;Main.c: 127: buttonPressed = ReadButtons();
  8461  062F  120A  158A  2363   	fcall	_ReadButtons
              120A  118A         
  8462  0634  00F8               	movwf	(??_isr1+0)+0
  8463  0635  0878               	movf	(??_isr1+0)+0,w
  8464  0636  00FD               	movwf	(_buttonPressed)	;volatile
  8465  0637  2E39               	goto	i1l10205
  8466                           	line	129
  8467                           	
  8468  0638                     i1l2209:	
  8469  0638  2E39               	goto	i1l10205
  8470                           	line	130
  8471                           	
  8472  0639                     i1l2204:	
  8473                           	line	131
  8474                           	
  8475  0639                     i1l10205:	
  8476                           ;Main.c: 129: }
  8477                           ;Main.c: 130: }
  8478                           ;Main.c: 131: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  8479  0639  1283               	bcf	status, 5	;RP0=0, select bank0
  8480  063A  1303               	bcf	status, 6	;RP1=0, select bank0
  8481  063B  1E8C               	btfss	(101/8),(101)&7
  8482  063C  2E3E               	goto	u347_21
  8483  063D  2E3F               	goto	u347_20
  8484  063E                     u347_21:
  8485  063E  2E61               	goto	i1l10215
  8486  063F                     u347_20:
  8487                           	
  8488  063F                     i1l10207:	
  8489  063F  081A               	movf	(26),w	;volatile
  8490  0640  00F8               	movwf	(??_isr1+0)+0
  8491  0641  086C               	movf	(_rxiptr),w
  8492  0642  3EA0               	addlw	_rxfifo&0ffh
  8493  0643  0084               	movwf	fsr0
  8494  0644  0878               	movf	(??_isr1+0)+0,w
  8495  0645  1383               	bcf	status, 7	;select IRP bank1
  8496  0646  0080               	movwf	indf
  8497                           	
  8498  0647                     i1l10209:	
  8499  0647  086C               	movf	(_rxiptr),w	;volatile
  8500  0648  3E01               	addlw	01h
  8501  0649  390F               	andlw	0Fh
  8502  064A  00F8               	movwf	(??_isr1+0)+0
  8503  064B  0878               	movf	(??_isr1+0)+0,w
  8504  064C  1683               	bsf	status, 5	;RP0=1, select bank1
  8505  064D  1303               	bcf	status, 6	;RP1=0, select bank1
  8506  064E  00DB               	movwf	(_ser_tmp)^080h
  8507                           	
  8508  064F                     i1l10211:	
  8509  064F  085B               	movf	(_ser_tmp)^080h,w
  8510  0650  1283               	bcf	status, 5	;RP0=0, select bank0
  8511  0651  1303               	bcf	status, 6	;RP1=0, select bank0
  8512  0652  066D               	xorwf	(_rxoptr),w	;volatile
  8513  0653  1903               	skipnz
  8514  0654  2E56               	goto	u348_21
  8515  0655  2E57               	goto	u348_20
  8516  0656                     u348_21:
  8517  0656  2E61               	goto	i1l10215
  8518  0657                     u348_20:
  8519                           	
  8520  0657                     i1l10213:	
  8521  0657  1683               	bsf	status, 5	;RP0=1, select bank1
  8522  0658  1303               	bcf	status, 6	;RP1=0, select bank1
  8523  0659  085B               	movf	(_ser_tmp)^080h,w
  8524  065A  00F8               	movwf	(??_isr1+0)+0
  8525  065B  0878               	movf	(??_isr1+0)+0,w
  8526  065C  1283               	bcf	status, 5	;RP0=0, select bank0
  8527  065D  1303               	bcf	status, 6	;RP1=0, select bank0
  8528  065E  00EC               	movwf	(_rxiptr)	;volatile
  8529  065F  2E61               	goto	i1l10215
  8530                           	
  8531  0660                     i1l2211:	
  8532  0660  2E61               	goto	i1l10215
  8533                           	
  8534  0661                     i1l2210:	
  8535                           	
  8536  0661                     i1l10215:	
  8537  0661  1E0C               	btfss	(100/8),(100)&7
  8538  0662  2E64               	goto	u349_21
  8539  0663  2E65               	goto	u349_20
  8540  0664                     u349_21:
  8541  0664  2E86               	goto	i1l2214
  8542  0665                     u349_20:
  8543                           	
  8544  0665                     i1l10217:	
  8545  0665  1683               	bsf	status, 5	;RP0=1, select bank1
  8546  0666  1303               	bcf	status, 6	;RP1=0, select bank1
  8547  0667  1E0C               	btfss	(1124/8)^080h,(1124)&7
  8548  0668  2E6A               	goto	u350_21
  8549  0669  2E6B               	goto	u350_20
  8550  066A                     u350_21:
  8551  066A  2E86               	goto	i1l2214
  8552  066B                     u350_20:
  8553                           	
  8554  066B                     i1l10219:	
  8555  066B  1283               	bcf	status, 5	;RP0=0, select bank0
  8556  066C  1303               	bcf	status, 6	;RP1=0, select bank0
  8557  066D  086F               	movf	(_txoptr),w
  8558  066E  3EB0               	addlw	_txfifo&0ffh
  8559  066F  0084               	movwf	fsr0
  8560  0670  1383               	bcf	status, 7	;select IRP bank1
  8561  0671  0800               	movf	indf,w
  8562  0672  0099               	movwf	(25)	;volatile
  8563                           	
  8564  0673                     i1l10221:	
  8565  0673  3001               	movlw	(01h)
  8566  0674  00F8               	movwf	(??_isr1+0)+0
  8567  0675  0878               	movf	(??_isr1+0)+0,w
  8568  0676  07EF               	addwf	(_txoptr),f	;volatile
  8569                           	
  8570  0677                     i1l10223:	
  8571  0677  300F               	movlw	(0Fh)
  8572  0678  00F8               	movwf	(??_isr1+0)+0
  8573  0679  0878               	movf	(??_isr1+0)+0,w
  8574  067A  05EF               	andwf	(_txoptr),f	;volatile
  8575                           	
  8576  067B                     i1l10225:	
  8577  067B  086F               	movf	(_txoptr),w	;volatile
  8578  067C  066E               	xorwf	(_txiptr),w	;volatile
  8579  067D  1D03               	skipz
  8580  067E  2E80               	goto	u351_21
  8581  067F  2E81               	goto	u351_20
  8582  0680                     u351_21:
  8583  0680  2E86               	goto	i1l2214
  8584  0681                     u351_20:
  8585                           	
  8586  0681                     i1l10227:	
  8587  0681  1683               	bsf	status, 5	;RP0=1, select bank1
  8588  0682  1303               	bcf	status, 6	;RP1=0, select bank1
  8589  0683  120C               	bcf	(1124/8)^080h,(1124)&7
  8590  0684  2E86               	goto	i1l2214
  8591                           	
  8592  0685                     i1l2213:	
  8593  0685  2E86               	goto	i1l2214
  8594                           	
  8595  0686                     i1l2212:	
  8596                           	line	132
  8597                           	
  8598  0686                     i1l2214:	
  8599  0686  087C               	movf	(??_isr1+4),w
  8600  0687  1283               	bcf	status, 5	;RP0=0, select bank0
  8601  0688  00FF               	movwf	btemp+1
  8602  0689  087B               	movf	(??_isr1+3),w
  8603  068A  008A               	movwf	pclath
  8604  068B  087A               	movf	(??_isr1+2),w
  8605  068C  0084               	movwf	fsr0
  8606  068D  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
  8607  068E  0083               	movwf	status
  8608  068F  0EFE               	swapf	saved_w,f
  8609  0690  0E7E               	swapf	saved_w,w
  8610  0691  0009               	retfie
  8611                           	opt stack 0
  8612                           GLOBAL	__end_of_isr1
  8613  0692                     	__end_of_isr1:
  8614 ;; =============== function _isr1 ends ============
  8615                           
  8616                           	signat	_isr1,88
  8617                           	global	_ReadButtons
  8618                           psect	text927,local,class=CODE,delta=2
  8619                           global __ptext927
  8620  0B63                     __ptext927:
  8621                           
  8622 ;; *************** function _ReadButtons *****************
  8623 ;; Defined at:
  8624 ;;		line 141 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      unsigned char 
  8631 ;; Registers used:
  8632 ;;		wreg, status,2, status,0, pclath, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8638 ;;      Params:         0       0       0       0       0
  8639 ;;      Locals:         0       0       0       0       0
  8640 ;;      Temps:          0       0       0       0       0
  8641 ;;      Totals:         0       0       0       0       0
  8642 ;;Total ram usage:        0 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    1
  8645 ;; This function calls:
  8646 ;;		_Debounce
  8647 ;; This function is called by:
  8648 ;;		_isr1
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           psect	text927
  8652                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  8653                           	line	141
  8654                           	global	__size_of_ReadButtons
  8655  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  8656                           	
  8657  0B63                     _ReadButtons:	
  8658                           	opt	stack 0
  8659                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  8660                           	line	143
  8661                           	
  8662  0B63                     i1l10229:	
  8663                           ;HMI.c: 143: Debounce();
  8664  0B63  120A  158A  2768   	fcall	_Debounce
              120A  158A         
  8665                           	line	145
  8666                           	
  8667  0B68                     i1l10231:	
  8668                           ;HMI.c: 145: if(UpPressed)
  8669  0B68  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
  8670  0B69  2B6B               	goto	u352_21
  8671  0B6A  2B6C               	goto	u352_20
  8672  0B6B                     u352_21:
  8673  0B6B  2B70               	goto	i1l4514
  8674  0B6C                     u352_20:
  8675                           	line	147
  8676                           	
  8677  0B6C                     i1l10233:	
  8678                           ;HMI.c: 146: {
  8679                           ;HMI.c: 147: UpPressed = 0;
  8680  0B6C  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
  8681                           	line	148
  8682                           	
  8683  0B6D                     i1l10235:	
  8684                           ;HMI.c: 148: return 1;
  8685  0B6D  3001               	movlw	(01h)
  8686  0B6E  2B92               	goto	i1l4515
  8687                           	
  8688  0B6F                     i1l10237:	
  8689  0B6F  2B92               	goto	i1l4515
  8690                           	line	150
  8691                           	
  8692  0B70                     i1l4514:	
  8693                           	line	152
  8694                           ;HMI.c: 150: }
  8695                           ;HMI.c: 152: if(DownPressed)
  8696  0B70  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
  8697  0B71  2B73               	goto	u353_21
  8698  0B72  2B74               	goto	u353_20
  8699  0B73                     u353_21:
  8700  0B73  2B78               	goto	i1l4516
  8701  0B74                     u353_20:
  8702                           	line	154
  8703                           	
  8704  0B74                     i1l10239:	
  8705                           ;HMI.c: 153: {
  8706                           ;HMI.c: 154: DownPressed = 0;
  8707  0B74  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
  8708                           	line	155
  8709                           	
  8710  0B75                     i1l10241:	
  8711                           ;HMI.c: 155: return 2;
  8712  0B75  3002               	movlw	(02h)
  8713  0B76  2B92               	goto	i1l4515
  8714                           	
  8715  0B77                     i1l10243:	
  8716  0B77  2B92               	goto	i1l4515
  8717                           	line	157
  8718                           	
  8719  0B78                     i1l4516:	
  8720                           	line	158
  8721                           ;HMI.c: 157: }
  8722                           ;HMI.c: 158: if(LeftPressed)
  8723  0B78  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  8724  0B79  2B7B               	goto	u354_21
  8725  0B7A  2B7C               	goto	u354_20
  8726  0B7B                     u354_21:
  8727  0B7B  2B80               	goto	i1l4517
  8728  0B7C                     u354_20:
  8729                           	line	160
  8730                           	
  8731  0B7C                     i1l10245:	
  8732                           ;HMI.c: 159: {
  8733                           ;HMI.c: 160: LeftPressed = 0;
  8734  0B7C  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  8735                           	line	161
  8736                           	
  8737  0B7D                     i1l10247:	
  8738                           ;HMI.c: 161: return 3;
  8739  0B7D  3003               	movlw	(03h)
  8740  0B7E  2B92               	goto	i1l4515
  8741                           	
  8742  0B7F                     i1l10249:	
  8743  0B7F  2B92               	goto	i1l4515
  8744                           	line	163
  8745                           	
  8746  0B80                     i1l4517:	
  8747                           	line	164
  8748                           ;HMI.c: 163: }
  8749                           ;HMI.c: 164: if(RightPressed)
  8750  0B80  1DF1               	btfss	(_RightPressed/8),(_RightPressed)&7
  8751  0B81  2B83               	goto	u355_21
  8752  0B82  2B84               	goto	u355_20
  8753  0B83                     u355_21:
  8754  0B83  2B88               	goto	i1l4518
  8755  0B84                     u355_20:
  8756                           	line	166
  8757                           	
  8758  0B84                     i1l10251:	
  8759                           ;HMI.c: 165: {
  8760                           ;HMI.c: 166: RightPressed = 0;
  8761  0B84  11F1               	bcf	(_RightPressed/8),(_RightPressed)&7
  8762                           	line	167
  8763                           	
  8764  0B85                     i1l10253:	
  8765                           ;HMI.c: 167: return 4;
  8766  0B85  3004               	movlw	(04h)
  8767  0B86  2B92               	goto	i1l4515
  8768                           	
  8769  0B87                     i1l10255:	
  8770  0B87  2B92               	goto	i1l4515
  8771                           	line	169
  8772                           	
  8773  0B88                     i1l4518:	
  8774                           	line	171
  8775                           ;HMI.c: 169: }
  8776                           ;HMI.c: 171: if(CenterPressed)
  8777  0B88  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  8778  0B89  2B8B               	goto	u356_21
  8779  0B8A  2B8C               	goto	u356_20
  8780  0B8B                     u356_21:
  8781  0B8B  2B90               	goto	i1l10263
  8782  0B8C                     u356_20:
  8783                           	line	173
  8784                           	
  8785  0B8C                     i1l10257:	
  8786                           ;HMI.c: 172: {
  8787                           ;HMI.c: 173: CenterPressed = 0;
  8788  0B8C  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  8789                           	line	174
  8790                           	
  8791  0B8D                     i1l10259:	
  8792                           ;HMI.c: 174: return 5;
  8793  0B8D  3005               	movlw	(05h)
  8794  0B8E  2B92               	goto	i1l4515
  8795                           	
  8796  0B8F                     i1l10261:	
  8797  0B8F  2B92               	goto	i1l4515
  8798                           	line	176
  8799                           	
  8800  0B90                     i1l4519:	
  8801                           	line	177
  8802                           	
  8803  0B90                     i1l10263:	
  8804                           ;HMI.c: 176: }
  8805                           ;HMI.c: 177: return 0;
  8806  0B90  3000               	movlw	(0)
  8807  0B91  2B92               	goto	i1l4515
  8808                           	
  8809  0B92                     i1l10265:	
  8810                           	line	178
  8811                           	
  8812  0B92                     i1l4515:	
  8813  0B92  0008               	return
  8814                           	opt stack 0
  8815                           GLOBAL	__end_of_ReadButtons
  8816  0B93                     	__end_of_ReadButtons:
  8817 ;; =============== function _ReadButtons ends ============
  8818                           
  8819                           	signat	_ReadButtons,89
  8820                           	global	i1___lwmod
  8821                           psect	text928,local,class=CODE,delta=2
  8822                           global __ptext928
  8823  0BCE                     __ptext928:
  8824                           
  8825 ;; *************** function i1___lwmod *****************
  8826 ;; Defined at:
  8827 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  __lwmod         2    0[COMMON] unsigned int 
  8830 ;;  __lwmod         2    2[COMMON] unsigned int 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  __lwmod         1    5[COMMON] unsigned char 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  2    0[COMMON] unsigned int 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8842 ;;      Params:         4       0       0       0       0
  8843 ;;      Locals:         1       0       0       0       0
  8844 ;;      Temps:          1       0       0       0       0
  8845 ;;      Totals:         6       0       0       0       0
  8846 ;;Total ram usage:        6 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; This function calls:
  8849 ;;		Nothing
  8850 ;; This function is called by:
  8851 ;;		_isr1
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           psect	text928
  8855                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8856                           	line	5
  8857                           	global	__size_ofi1___lwmod
  8858  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
  8859                           	
  8860  0BCE                     i1___lwmod:	
  8861                           	opt	stack 1
  8862                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8863                           	line	8
  8864                           	
  8865  0BCE                     i1l10585:	
  8866  0BCE  0873               	movf	(i1___lwmod@divisor+1),w
  8867  0BCF  0472               	iorwf	(i1___lwmod@divisor),w
  8868  0BD0  1903               	skipnz
  8869  0BD1  2BD3               	goto	u413_21
  8870  0BD2  2BD4               	goto	u413_20
  8871  0BD3                     u413_21:
  8872  0BD3  2C0A               	goto	i1l10603
  8873  0BD4                     u413_20:
  8874                           	line	9
  8875                           	
  8876  0BD4                     i1l10587:	
  8877  0BD4  01F7               	clrf	(i1___lwmod@counter)
  8878  0BD5  1403               	bsf	status,0
  8879  0BD6  0DF7               	rlf	(i1___lwmod@counter),f
  8880                           	line	10
  8881  0BD7  2BE4               	goto	i1l10593
  8882                           	
  8883  0BD8                     i1l7471:	
  8884                           	line	11
  8885                           	
  8886  0BD8                     i1l10589:	
  8887  0BD8  3001               	movlw	01h
  8888                           	
  8889  0BD9                     u414_25:
  8890  0BD9  1003               	clrc
  8891  0BDA  0DF2               	rlf	(i1___lwmod@divisor),f
  8892  0BDB  0DF3               	rlf	(i1___lwmod@divisor+1),f
  8893  0BDC  3EFF               	addlw	-1
  8894  0BDD  1D03               	skipz
  8895  0BDE  2BD9               	goto	u414_25
  8896                           	line	12
  8897                           	
  8898  0BDF                     i1l10591:	
  8899  0BDF  3001               	movlw	(01h)
  8900  0BE0  00F6               	movwf	(??i1___lwmod+0)+0
  8901  0BE1  0876               	movf	(??i1___lwmod+0)+0,w
  8902  0BE2  07F7               	addwf	(i1___lwmod@counter),f
  8903  0BE3  2BE4               	goto	i1l10593
  8904                           	line	13
  8905                           	
  8906  0BE4                     i1l7470:	
  8907                           	line	10
  8908                           	
  8909  0BE4                     i1l10593:	
  8910  0BE4  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
  8911  0BE5  2BE7               	goto	u415_21
  8912  0BE6  2BE8               	goto	u415_20
  8913  0BE7                     u415_21:
  8914  0BE7  2BD8               	goto	i1l10589
  8915  0BE8                     u415_20:
  8916  0BE8  2BEA               	goto	i1l10595
  8917                           	
  8918  0BE9                     i1l7472:	
  8919  0BE9  2BEA               	goto	i1l10595
  8920                           	line	14
  8921                           	
  8922  0BEA                     i1l7473:	
  8923                           	line	15
  8924                           	
  8925  0BEA                     i1l10595:	
  8926  0BEA  0873               	movf	(i1___lwmod@divisor+1),w
  8927  0BEB  0275               	subwf	(i1___lwmod@dividend+1),w
  8928  0BEC  1D03               	skipz
  8929  0BED  2BF0               	goto	u416_25
  8930  0BEE  0872               	movf	(i1___lwmod@divisor),w
  8931  0BEF  0274               	subwf	(i1___lwmod@dividend),w
  8932  0BF0                     u416_25:
  8933  0BF0  1C03               	skipc
  8934  0BF1  2BF3               	goto	u416_21
  8935  0BF2  2BF4               	goto	u416_20
  8936  0BF3                     u416_21:
  8937  0BF3  2BFB               	goto	i1l10599
  8938  0BF4                     u416_20:
  8939                           	line	16
  8940                           	
  8941  0BF4                     i1l10597:	
  8942  0BF4  0872               	movf	(i1___lwmod@divisor),w
  8943  0BF5  02F4               	subwf	(i1___lwmod@dividend),f
  8944  0BF6  0873               	movf	(i1___lwmod@divisor+1),w
  8945  0BF7  1C03               	skipc
  8946  0BF8  03F5               	decf	(i1___lwmod@dividend+1),f
  8947  0BF9  02F5               	subwf	(i1___lwmod@dividend+1),f
  8948  0BFA  2BFB               	goto	i1l10599
  8949                           	
  8950  0BFB                     i1l7474:	
  8951                           	line	17
  8952                           	
  8953  0BFB                     i1l10599:	
  8954  0BFB  3001               	movlw	01h
  8955                           	
  8956  0BFC                     u417_25:
  8957  0BFC  1003               	clrc
  8958  0BFD  0CF3               	rrf	(i1___lwmod@divisor+1),f
  8959  0BFE  0CF2               	rrf	(i1___lwmod@divisor),f
  8960  0BFF  3EFF               	addlw	-1
  8961  0C00  1D03               	skipz
  8962  0C01  2BFC               	goto	u417_25
  8963                           	line	18
  8964                           	
  8965  0C02                     i1l10601:	
  8966  0C02  3001               	movlw	low(01h)
  8967  0C03  02F7               	subwf	(i1___lwmod@counter),f
  8968  0C04  1D03               	btfss	status,2
  8969  0C05  2C07               	goto	u418_21
  8970  0C06  2C08               	goto	u418_20
  8971  0C07                     u418_21:
  8972  0C07  2BEA               	goto	i1l10595
  8973  0C08                     u418_20:
  8974  0C08  2C0A               	goto	i1l10603
  8975                           	
  8976  0C09                     i1l7475:	
  8977  0C09  2C0A               	goto	i1l10603
  8978                           	line	19
  8979                           	
  8980  0C0A                     i1l7469:	
  8981                           	line	20
  8982                           	
  8983  0C0A                     i1l10603:	
  8984  0C0A  0875               	movf	(i1___lwmod@dividend+1),w
  8985  0C0B  01F3               	clrf	(?i1___lwmod+1)
  8986  0C0C  07F3               	addwf	(?i1___lwmod+1)
  8987  0C0D  0874               	movf	(i1___lwmod@dividend),w
  8988  0C0E  01F2               	clrf	(?i1___lwmod)
  8989  0C0F  07F2               	addwf	(?i1___lwmod)
  8990                           
  8991  0C10  2C11               	goto	i1l7476
  8992                           	
  8993  0C11                     i1l10605:	
  8994                           	line	21
  8995                           	
  8996  0C11                     i1l7476:	
  8997  0C11  0008               	return
  8998                           	opt stack 0
  8999                           GLOBAL	__end_ofi1___lwmod
  9000  0C12                     	__end_ofi1___lwmod:
  9001 ;; =============== function i1___lwmod ends ============
  9002                           
  9003                           	signat	i1___lwmod,90
  9004                           	global	_Debounce
  9005                           psect	text929,local,class=CODE,delta=2
  9006                           global __ptext929
  9007  0F68                     __ptext929:
  9008                           
  9009 ;; *************** function _Debounce *****************
  9010 ;; Defined at:
  9011 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;		None
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;		None
  9016 ;; Return value:  Size  Location     Type
  9017 ;;		None               void
  9018 ;; Registers used:
  9019 ;;		wreg, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9025 ;;      Params:         0       0       0       0       0
  9026 ;;      Locals:         0       0       0       0       0
  9027 ;;      Temps:          1       0       0       0       0
  9028 ;;      Totals:         1       0       0       0       0
  9029 ;;Total ram usage:        1 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; This function calls:
  9032 ;;		Nothing
  9033 ;; This function is called by:
  9034 ;;		_ReadButtons
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           psect	text929
  9038                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  9039                           	line	61
  9040                           	global	__size_of_Debounce
  9041  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  9042                           	
  9043  0F68                     _Debounce:	
  9044                           	opt	stack 0
  9045                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  9046                           	line	63
  9047                           	
  9048  0F68                     i1l10401:	
  9049                           ;HMI.c: 63: if(!RB2)
  9050  0F68  1283               	bcf	status, 5	;RP0=0, select bank0
  9051  0F69  1303               	bcf	status, 6	;RP1=0, select bank0
  9052  0F6A  1906               	btfsc	(50/8),(50)&7
  9053  0F6B  2F6D               	goto	u365_21
  9054  0F6C  2F6E               	goto	u365_20
  9055  0F6D                     u365_21:
  9056  0F6D  2F82               	goto	i1l4496
  9057  0F6E                     u365_20:
  9058                           	line	65
  9059                           	
  9060  0F6E                     i1l10403:	
  9061                           ;HMI.c: 64: {
  9062                           ;HMI.c: 65: UpDebounceCount++;
  9063  0F6E  3001               	movlw	(01h)
  9064  0F6F  00F2               	movwf	(??_Debounce+0)+0
  9065  0F70  0872               	movf	(??_Debounce+0)+0,w
  9066  0F71  1683               	bsf	status, 5	;RP0=1, select bank1
  9067  0F72  1303               	bcf	status, 6	;RP1=0, select bank1
  9068  0F73  07D6               	addwf	(_UpDebounceCount)^080h,f	;volatile
  9069                           	line	66
  9070                           	
  9071  0F74                     i1l10405:	
  9072                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  9073  0F74  300A               	movlw	(0Ah)
  9074  0F75  0256               	subwf	(_UpDebounceCount)^080h,w	;volatile
  9075  0F76  1C03               	skipc
  9076  0F77  2F79               	goto	u366_21
  9077  0F78  2F7A               	goto	u366_20
  9078  0F79                     u366_21:
  9079  0F79  2F86               	goto	i1l4498
  9080  0F7A                     u366_20:
  9081                           	
  9082  0F7A                     i1l10407:	
  9083  0F7A  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
  9084  0F7B  2F7D               	goto	u367_21
  9085  0F7C  2F7E               	goto	u367_20
  9086  0F7D                     u367_21:
  9087  0F7D  2F86               	goto	i1l4498
  9088  0F7E                     u367_20:
  9089                           	line	68
  9090                           	
  9091  0F7E                     i1l10409:	
  9092                           ;HMI.c: 67: {
  9093                           ;HMI.c: 68: UpPressed = 1;
  9094  0F7E  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
  9095                           	line	69
  9096                           ;HMI.c: 69: UpReleased = 0;
  9097  0F7F  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
  9098  0F80  2F86               	goto	i1l4498
  9099                           	line	70
  9100                           	
  9101  0F81                     i1l4497:	
  9102                           	line	71
  9103                           ;HMI.c: 70: }
  9104                           ;HMI.c: 71: }
  9105  0F81  2F86               	goto	i1l4498
  9106                           	line	72
  9107                           	
  9108  0F82                     i1l4496:	
  9109                           	line	74
  9110                           ;HMI.c: 72: else
  9111                           ;HMI.c: 73: {
  9112                           ;HMI.c: 74: UpDebounceCount = 0;
  9113  0F82  1683               	bsf	status, 5	;RP0=1, select bank1
  9114  0F83  1303               	bcf	status, 6	;RP1=0, select bank1
  9115  0F84  01D6               	clrf	(_UpDebounceCount)^080h	;volatile
  9116                           	line	75
  9117                           ;HMI.c: 75: UpReleased = 1;
  9118  0F85  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
  9119                           	line	76
  9120                           	
  9121  0F86                     i1l4498:	
  9122                           	line	79
  9123                           ;HMI.c: 76: }
  9124                           ;HMI.c: 79: if(!RB3)
  9125  0F86  1283               	bcf	status, 5	;RP0=0, select bank0
  9126  0F87  1303               	bcf	status, 6	;RP1=0, select bank0
  9127  0F88  1986               	btfsc	(51/8),(51)&7
  9128  0F89  2F8B               	goto	u368_21
  9129  0F8A  2F8C               	goto	u368_20
  9130  0F8B                     u368_21:
  9131  0F8B  2FA0               	goto	i1l4499
  9132  0F8C                     u368_20:
  9133                           	line	81
  9134                           	
  9135  0F8C                     i1l10411:	
  9136                           ;HMI.c: 80: {
  9137                           ;HMI.c: 81: DownDebounceCount++;
  9138  0F8C  3001               	movlw	(01h)
  9139  0F8D  00F2               	movwf	(??_Debounce+0)+0
  9140  0F8E  0872               	movf	(??_Debounce+0)+0,w
  9141  0F8F  1683               	bsf	status, 5	;RP0=1, select bank1
  9142  0F90  1303               	bcf	status, 6	;RP1=0, select bank1
  9143  0F91  07D3               	addwf	(_DownDebounceCount)^080h,f	;volatile
  9144                           	line	82
  9145                           	
  9146  0F92                     i1l10413:	
  9147                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  9148  0F92  300A               	movlw	(0Ah)
  9149  0F93  0253               	subwf	(_DownDebounceCount)^080h,w	;volatile
  9150  0F94  1C03               	skipc
  9151  0F95  2F97               	goto	u369_21
  9152  0F96  2F98               	goto	u369_20
  9153  0F97                     u369_21:
  9154  0F97  2FA4               	goto	i1l4501
  9155  0F98                     u369_20:
  9156                           	
  9157  0F98                     i1l10415:	
  9158  0F98  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
  9159  0F99  2F9B               	goto	u370_21
  9160  0F9A  2F9C               	goto	u370_20
  9161  0F9B                     u370_21:
  9162  0F9B  2FA4               	goto	i1l4501
  9163  0F9C                     u370_20:
  9164                           	line	84
  9165                           	
  9166  0F9C                     i1l10417:	
  9167                           ;HMI.c: 83: {
  9168                           ;HMI.c: 84: DownPressed = 1;
  9169  0F9C  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
  9170                           	line	85
  9171                           ;HMI.c: 85: DownReleased = 0;
  9172  0F9D  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
  9173  0F9E  2FA4               	goto	i1l4501
  9174                           	line	86
  9175                           	
  9176  0F9F                     i1l4500:	
  9177                           	line	87
  9178                           ;HMI.c: 86: }
  9179                           ;HMI.c: 87: }
  9180  0F9F  2FA4               	goto	i1l4501
  9181                           	line	88
  9182                           	
  9183  0FA0                     i1l4499:	
  9184                           	line	90
  9185                           ;HMI.c: 88: else
  9186                           ;HMI.c: 89: {
  9187                           ;HMI.c: 90: DownDebounceCount = 0;
  9188  0FA0  1683               	bsf	status, 5	;RP0=1, select bank1
  9189  0FA1  1303               	bcf	status, 6	;RP1=0, select bank1
  9190  0FA2  01D3               	clrf	(_DownDebounceCount)^080h	;volatile
  9191                           	line	91
  9192                           ;HMI.c: 91: DownReleased = 1;
  9193  0FA3  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
  9194                           	line	92
  9195                           	
  9196  0FA4                     i1l4501:	
  9197                           	line	94
  9198                           ;HMI.c: 92: }
  9199                           ;HMI.c: 94: if(!RB4)
  9200  0FA4  1283               	bcf	status, 5	;RP0=0, select bank0
  9201  0FA5  1303               	bcf	status, 6	;RP1=0, select bank0
  9202  0FA6  1A06               	btfsc	(52/8),(52)&7
  9203  0FA7  2FA9               	goto	u371_21
  9204  0FA8  2FAA               	goto	u371_20
  9205  0FA9                     u371_21:
  9206  0FA9  2FBE               	goto	i1l4502
  9207  0FAA                     u371_20:
  9208                           	line	96
  9209                           	
  9210  0FAA                     i1l10419:	
  9211                           ;HMI.c: 95: {
  9212                           ;HMI.c: 96: LeftDebounceCount++;
  9213  0FAA  3001               	movlw	(01h)
  9214  0FAB  00F2               	movwf	(??_Debounce+0)+0
  9215  0FAC  0872               	movf	(??_Debounce+0)+0,w
  9216  0FAD  1683               	bsf	status, 5	;RP0=1, select bank1
  9217  0FAE  1303               	bcf	status, 6	;RP1=0, select bank1
  9218  0FAF  07D4               	addwf	(_LeftDebounceCount)^080h,f	;volatile
  9219                           	line	97
  9220                           	
  9221  0FB0                     i1l10421:	
  9222                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  9223  0FB0  300A               	movlw	(0Ah)
  9224  0FB1  0254               	subwf	(_LeftDebounceCount)^080h,w	;volatile
  9225  0FB2  1C03               	skipc
  9226  0FB3  2FB5               	goto	u372_21
  9227  0FB4  2FB6               	goto	u372_20
  9228  0FB5                     u372_21:
  9229  0FB5  2FC2               	goto	i1l4504
  9230  0FB6                     u372_20:
  9231                           	
  9232  0FB6                     i1l10423:	
  9233  0FB6  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  9234  0FB7  2FB9               	goto	u373_21
  9235  0FB8  2FBA               	goto	u373_20
  9236  0FB9                     u373_21:
  9237  0FB9  2FC2               	goto	i1l4504
  9238  0FBA                     u373_20:
  9239                           	line	99
  9240                           	
  9241  0FBA                     i1l10425:	
  9242                           ;HMI.c: 98: {
  9243                           ;HMI.c: 99: LeftPressed = 1;
  9244  0FBA  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  9245                           	line	100
  9246                           ;HMI.c: 100: LeftReleased = 0;
  9247  0FBB  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  9248  0FBC  2FC2               	goto	i1l4504
  9249                           	line	101
  9250                           	
  9251  0FBD                     i1l4503:	
  9252                           	line	102
  9253                           ;HMI.c: 101: }
  9254                           ;HMI.c: 102: }
  9255  0FBD  2FC2               	goto	i1l4504
  9256                           	line	103
  9257                           	
  9258  0FBE                     i1l4502:	
  9259                           	line	105
  9260                           ;HMI.c: 103: else
  9261                           ;HMI.c: 104: {
  9262                           ;HMI.c: 105: LeftDebounceCount = 0;
  9263  0FBE  1683               	bsf	status, 5	;RP0=1, select bank1
  9264  0FBF  1303               	bcf	status, 6	;RP1=0, select bank1
  9265  0FC0  01D4               	clrf	(_LeftDebounceCount)^080h	;volatile
  9266                           	line	106
  9267                           ;HMI.c: 106: LeftReleased = 1;
  9268  0FC1  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  9269                           	line	107
  9270                           	
  9271  0FC2                     i1l4504:	
  9272                           	line	109
  9273                           ;HMI.c: 107: }
  9274                           ;HMI.c: 109: if(!RB5)
  9275  0FC2  1283               	bcf	status, 5	;RP0=0, select bank0
  9276  0FC3  1303               	bcf	status, 6	;RP1=0, select bank0
  9277  0FC4  1A86               	btfsc	(53/8),(53)&7
  9278  0FC5  2FC7               	goto	u374_21
  9279  0FC6  2FC8               	goto	u374_20
  9280  0FC7                     u374_21:
  9281  0FC7  2FDC               	goto	i1l4505
  9282  0FC8                     u374_20:
  9283                           	line	111
  9284                           	
  9285  0FC8                     i1l10427:	
  9286                           ;HMI.c: 110: {
  9287                           ;HMI.c: 111: RightDebounceCount++;
  9288  0FC8  3001               	movlw	(01h)
  9289  0FC9  00F2               	movwf	(??_Debounce+0)+0
  9290  0FCA  0872               	movf	(??_Debounce+0)+0,w
  9291  0FCB  1683               	bsf	status, 5	;RP0=1, select bank1
  9292  0FCC  1303               	bcf	status, 6	;RP1=0, select bank1
  9293  0FCD  07D5               	addwf	(_RightDebounceCount)^080h,f	;volatile
  9294                           	line	112
  9295                           	
  9296  0FCE                     i1l10429:	
  9297                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  9298  0FCE  300A               	movlw	(0Ah)
  9299  0FCF  0255               	subwf	(_RightDebounceCount)^080h,w	;volatile
  9300  0FD0  1C03               	skipc
  9301  0FD1  2FD3               	goto	u375_21
  9302  0FD2  2FD4               	goto	u375_20
  9303  0FD3                     u375_21:
  9304  0FD3  2FE0               	goto	i1l4507
  9305  0FD4                     u375_20:
  9306                           	
  9307  0FD4                     i1l10431:	
  9308  0FD4  1E71               	btfss	(_RightReleased/8),(_RightReleased)&7
  9309  0FD5  2FD7               	goto	u376_21
  9310  0FD6  2FD8               	goto	u376_20
  9311  0FD7                     u376_21:
  9312  0FD7  2FE0               	goto	i1l4507
  9313  0FD8                     u376_20:
  9314                           	line	114
  9315                           	
  9316  0FD8                     i1l10433:	
  9317                           ;HMI.c: 113: {
  9318                           ;HMI.c: 114: RightPressed = 1;
  9319  0FD8  15F1               	bsf	(_RightPressed/8),(_RightPressed)&7
  9320                           	line	115
  9321                           ;HMI.c: 115: RightReleased = 0;
  9322  0FD9  1271               	bcf	(_RightReleased/8),(_RightReleased)&7
  9323  0FDA  2FE0               	goto	i1l4507
  9324                           	line	116
  9325                           	
  9326  0FDB                     i1l4506:	
  9327                           	line	117
  9328                           ;HMI.c: 116: }
  9329                           ;HMI.c: 117: }
  9330  0FDB  2FE0               	goto	i1l4507
  9331                           	line	118
  9332                           	
  9333  0FDC                     i1l4505:	
  9334                           	line	120
  9335                           ;HMI.c: 118: else
  9336                           ;HMI.c: 119: {
  9337                           ;HMI.c: 120: RightDebounceCount = 0;
  9338  0FDC  1683               	bsf	status, 5	;RP0=1, select bank1
  9339  0FDD  1303               	bcf	status, 6	;RP1=0, select bank1
  9340  0FDE  01D5               	clrf	(_RightDebounceCount)^080h	;volatile
  9341                           	line	121
  9342                           ;HMI.c: 121: RightReleased = 1;
  9343  0FDF  1671               	bsf	(_RightReleased/8),(_RightReleased)&7
  9344                           	line	122
  9345                           	
  9346  0FE0                     i1l4507:	
  9347                           	line	124
  9348                           ;HMI.c: 122: }
  9349                           ;HMI.c: 124: if(!RB6)
  9350  0FE0  1283               	bcf	status, 5	;RP0=0, select bank0
  9351  0FE1  1303               	bcf	status, 6	;RP1=0, select bank0
  9352  0FE2  1B06               	btfsc	(54/8),(54)&7
  9353  0FE3  2FE5               	goto	u377_21
  9354  0FE4  2FE6               	goto	u377_20
  9355  0FE5                     u377_21:
  9356  0FE5  2FFA               	goto	i1l4508
  9357  0FE6                     u377_20:
  9358                           	line	126
  9359                           	
  9360  0FE6                     i1l10435:	
  9361                           ;HMI.c: 125: {
  9362                           ;HMI.c: 126: CenterDebounceCount++;
  9363  0FE6  3001               	movlw	(01h)
  9364  0FE7  00F2               	movwf	(??_Debounce+0)+0
  9365  0FE8  0872               	movf	(??_Debounce+0)+0,w
  9366  0FE9  1683               	bsf	status, 5	;RP0=1, select bank1
  9367  0FEA  1303               	bcf	status, 6	;RP1=0, select bank1
  9368  0FEB  07D0               	addwf	(_CenterDebounceCount)^080h,f	;volatile
  9369                           	line	127
  9370                           	
  9371  0FEC                     i1l10437:	
  9372                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  9373  0FEC  300A               	movlw	(0Ah)
  9374  0FED  0250               	subwf	(_CenterDebounceCount)^080h,w	;volatile
  9375  0FEE  1C03               	skipc
  9376  0FEF  2FF1               	goto	u378_21
  9377  0FF0  2FF2               	goto	u378_20
  9378  0FF1                     u378_21:
  9379  0FF1  2FFF               	goto	i1l4511
  9380  0FF2                     u378_20:
  9381                           	
  9382  0FF2                     i1l10439:	
  9383  0FF2  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  9384  0FF3  2FF5               	goto	u379_21
  9385  0FF4  2FF6               	goto	u379_20
  9386  0FF5                     u379_21:
  9387  0FF5  2FFF               	goto	i1l4511
  9388  0FF6                     u379_20:
  9389                           	line	129
  9390                           	
  9391  0FF6                     i1l10441:	
  9392                           ;HMI.c: 128: {
  9393                           ;HMI.c: 129: CenterPressed = 1;
  9394  0FF6  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  9395                           	line	130
  9396                           ;HMI.c: 130: CenterReleased = 0;
  9397  0FF7  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  9398  0FF8  2FFF               	goto	i1l4511
  9399                           	line	131
  9400                           	
  9401  0FF9                     i1l4509:	
  9402                           	line	132
  9403                           ;HMI.c: 131: }
  9404                           ;HMI.c: 132: }
  9405  0FF9  2FFF               	goto	i1l4511
  9406                           	line	133
  9407                           	
  9408  0FFA                     i1l4508:	
  9409                           	line	135
  9410                           ;HMI.c: 133: else
  9411                           ;HMI.c: 134: {
  9412                           ;HMI.c: 135: CenterDebounceCount = 0;
  9413  0FFA  1683               	bsf	status, 5	;RP0=1, select bank1
  9414  0FFB  1303               	bcf	status, 6	;RP1=0, select bank1
  9415  0FFC  01D0               	clrf	(_CenterDebounceCount)^080h	;volatile
  9416                           	line	136
  9417                           ;HMI.c: 136: CenterReleased = 1;
  9418  0FFD  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  9419  0FFE  2FFF               	goto	i1l4511
  9420                           	line	137
  9421                           	
  9422  0FFF                     i1l4510:	
  9423                           	line	138
  9424                           	
  9425  0FFF                     i1l4511:	
  9426  0FFF  0008               	return
  9427                           	opt stack 0
  9428                           GLOBAL	__end_of_Debounce
  9429  1000                     	__end_of_Debounce:
  9430 ;; =============== function _Debounce ends ============
  9431                           
  9432                           	signat	_Debounce,88
  9433                           psect	text930,local,class=CODE,delta=2
  9434                           global __ptext930
  9435  0000                     __ptext930:
  9436                           	global	btemp
  9437  007E                     	btemp set 07Eh
  9438                           
  9439                           	DABS	1,126,2	;btemp
  9440                           	global	wtemp0
  9441  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Apr 29 14:28:45 2015

 __end_of_lcd_write_control 0963             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 0978  
                       l703 0A2F                         l704 0A2F                         l705 0A33  
                       l706 0A52                         l690 0B97                         l691 0BC0  
                       l692 0B9B                         l693 0B9F                         l694 0BA3  
                       l695 0BA7                         l696 0BAB                         l689 0BAF  
                       l697 0BCD                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _pos 00C8                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026             ?_lcd_set_cursor 0072  
                      l3000 0232                        l3001 0231                        l1402 0927  
                      l3002 0237                        l1410 0AD5                        l1411 0AD5  
                      l2220 07B1                        l1405 0907                        l2221 07BC  
                      l2222 07E9                        l2230 07E7                        l2231 07FB  
                      l2223 07BD                        l1408 0AC4                        l2232 07FC  
                      l2224 07FA                        l2240 0C75                        l1409 0AAB  
                      l2217 0B33                        l2225 07BF                        l2241 0C77  
                      l2226 07C1                        l2242 0C79                        l2250 0DF1  
                      l2227 07D1                        l2243 0C7B                        l2235 0C67  
                      l2251 0E4A                        l2228 07DF                        l2244 0C9D  
                      l2236 0C72                        l2252 0E0F                        l2260 03D0  
                      l1429 0A7D                        l2229 07FC                        l2237 0C8A  
                      l2245 0C87                        l2253 0E26                        l2261 0411  
                      l2246 0C9C                        l2238 0C73                        l2254 0E53  
                      l2270 0418                        l2262 03D8                        l2247 0C9D  
                      l2239 0C9B                        l2271 043B                        l2263 03E0  
                      l2272 0456                        l2264 03E8                        l2273 0487  
                      l2265 03F0                        l2257 03BF                        l2274 048D  
                      l2266 03FD                        l2258 03CF                        l2267 0495  
                      l2275 0493                        l2259 0400                        l2276 04B2  
                      l2268 0412                        l2277 04B3                        l2269 04AB  
                      l2278 04B3                        l1399 0962                        l6001 0F15  
                      l6002 0F33                        l6003 0F67                        l3700 094E  
                      l6006 0E89                        l3703 0D45                        l6007 0EA7  
                      l3704 0D4C                        l6008 0EDB                        l3705 0D69  
                      l4522 0CD0                        l4530 0CC9                        l3706 0D53  
                      l4531 0CE4                        l4523 0CA2                        l3707 0D73  
                      l4524 0CE2                        l4532 0CCE                        l3708 0D84  
                      l4540 02C3                        l4525 0CA3                        l4541 03B0  
                      l4526 0CA4                        l4542 030B                        l4527 0CB5  
                      l4543 0378                        l4528 0CB6                        l4544 03A1  
                      l4529 0CC8                        l4537 03A3                        l4545 03B0  
                      l4538 0251                        l4539 02B0                        l2981 0D9A  
                      l2990 0237                        l2982 0DBB                        l2991 00B0  
                      l2983 0DD9                        l2992 0236                        l3697 0943  
                      l2993 00FD                        l3698 0943                        l2994 0235  
                      l2986 098E                        l3699 0948                        l2995 014A  
                      l2996 0234                        l2997 0197                        l2989 0063  
                      l2998 0233                        l2999 01E4                        l6711 09E2  
                      l6720 09DF                        l6712 09E1                        l6713 09EB  
                      l6714 0A01                        l6707 099A                        l6708 09A5  
                      l7460 0CFF                        l6717 09C4                        l7453 0A83  
                      l7461 0CF3                        l6742 0A29                        l6718 09C3  
                      l7454 0A8D                        l7462 0D04                        l7470 0C2A  
                      l6719 09CC                        l7455 0AA2                        l7463 0D05  
                      l7471 0C1E                        l6751 059C                        l7456 0AA9  
                      l7464 0D1E                        l7472 0C2F                        l6760 04D5  
                      l6752 04BE                        l7465 0D2C                        l7473 0C30  
                      l6761 0506                        l6753 04D0                        l7466 0D34  
                      l7474 0C41                        l6770 05B5                        l6762 0511  
                      l6754 04D7                        l7459 0D2D                        l7475 0C4F  
                      l6763 0539                        l6755 04D2                        l7476 0C57  
                      l6756 05B0                        l6764 052E                        l7469 0C50  
                      l7661 06A2                        l6765 054B                        l6757 04D3  
                      l7670 06F2                        l7662 06AC                        l6766 0590  
                      l6758 04D4                        l7671 06F9                        l7663 06E8  
                      l6767 0550                        l6759 04EC                        l7664 06C2  
                      l6768 059B                        l7665 06B6                        l6769 05AF  
                      l7666 06C7                        l7667 06C8                        l5995 09BE  
                      l7668 06D9                        l7669 06E7                        l5998 0B04  
                      _CHS0 00FB                        _CHS1 00FC                        _CHS2 00FD  
                      STR_1 0754                        STR_2 074B                        STR_3 0766  
                      STR_4 076F                        STR_5 075D                        STR_6 0742  
                      STR_7 0793                        STR_8 0797                        STR_9 077F  
                      _BRGH 04C2                        _CREN 00C4                        u4000 0C2E  
                      u4001 0C2D                        u4010 0C3A                        u4011 0C39  
                      u4030 0C4E                        u4110 06E6                        u4031 0C4D  
                      u4015 0C36                        u4111 06E5                        u4120 06EC  
                      u4040 0699                        u4200 0D73                        u4025 0C42  
                      u4105 06DA                        u4041 0698                        u4201 0D72  
                      u4050 06A6                        u4210 0EF6                        u4051 06A5  
                      u4211 0EF5                        u4060 06B2                        u4220 0E6A  
                      u4300 0110                        u4061 06B1                        u4205 0D6F  
                      u4221 0E69                        u4301 010F                        u4310 0154  
                      u4230 0020                        u4311 0153                        u4231 001F  
                      u3360 0A33                        u3600 0947                        u4080 06C6  
                      u4320 015D                        u4240 0029                        u4400 052C  
                      u3361 0A32                        u3601 0946                        u4081 06C5  
                      u4321 015C                        u4241 0028                        u4401 052B  
                      u4090 06D2                        u4330 01A1                        u4250 006D  
                      u4410 0538                        u4091 06D1                        u4075 06B7  
                      u4331 01A0                        u4251 006C                        u4411 0537  
                      u4340 01AA                        u4260 0076                        u4420 053F  
                      u4500 0DBA                        u4341 01A9                        u4261 0075  
                      u4421 053E                        u4405 0528                        u4501 0DB9  
                      u4190 0D3E                        u4350 01EE                        u4270 00BA  
                      u4430 059A                        u4510 07B5                        u3375 0A40  
                      u4095 06CE                        u4191 0D3D                        u4351 01ED  
                      u4271 00B9                        u4431 0599                        u4511 07B4  
                      u3800 0995                        u4360 01F7                        u4280 00C3  
                      u4440 05AE                        u4520 0C6B                        u3801 0994  
                      u4361 01F6                        u4281 00C2                        u4441 05AD  
                      u4505 0DB6                        u4521 0C6A                        u3570 09CC  
                      u3810 09A0                        u4290 0107                        u4370 04C4  
                      u4450 09EB                        u4530 0DEF                        u3571 09CB  
                      u3811 099F                        u4291 0106                        u4371 04C3  
                      u4451 09EA                        u4531 0DEE                        _PEIE 005E  
                      u3580 0CB0                        u3900 0AA1                        u4380 04FC  
                      u4460 0AD4                        u4540 0E02                        u3581 0CAF  
                      u3901 0AA0                        u4381 04FB                        u4461 0AD3  
                      u4541 0E01                        u3590 0CC5                        u3910 0CEF  
                      u4390 050F                        u4470 0242                        u4550 0E1F  
                      u3591 0CC4                        u3911 0CEE                        u4391 050E  
                      u4607 0AEA                        u4551 0E1E                        u4535 0DEB  
                      u4480 029D                        u4560 0E49                        u4617 0D5C  
                      u4481 029C                        u4561 0E48                        u4545 0DFE  
                      u3930 0D03                        u4490 0D98                        u4570 03C3  
                      u3931 0D02                        u4627 0923                        u4491 0D97  
                      u4571 03C2                        _RCIE 0465                        _RCIF 0065  
                      u3925 0CF4                        u4637 095D                        u4485 0299  
                      u4565 0E45                        u3870 0A87                        u3950 0D16  
                      u3871 0A86                        u3951 0D15                        u4647 0976  
                      u4495 0D94                        u3945 0D06                        u4657 0BC2  
                      u3970 0D2B                        u3971 0D2A                        u3955 0D12  
                      u4587 0443                        u3980 0C1A                        u3885 0A8E  
                      u3965 0D1F                        u3981 0C19                        u4597 045E  
                      u3895 0A95                        _OERR 00C1                        u3995 0C1F  
                      _TMR0 0001                  _ChargeMode 0C58                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 0C9E      __end_of_lcd_write_data 0928                        _isr1 05B6  
                      _main 03B1                        _init 0B05                        _test 00CA  
                      btemp 007E              _CenterReleased 0381                        start 0012  
             ??_ReadButtons 0073                       ?_Menu 0072                       l11001 0DF0  
                     l11011 0E1B                       l11003 0DF1                       l10141 0A2D  
                     l10301 09DB                       l11021 0E3C                       l11013 0E1F  
                     l11005 0DF6                       l10143 0A36                       l10303 09DE  
                     l10311 0CB0                       l10127 09A2                       l11015 0E20  
                     l11007 0E02                       l11023 0E4A                       l11031 03B9  
                     l10145 0A49                       l10321 0CCF                       l10313 0CB6  
                     l10305 0CA1                       l10129 09A4                       l11025 0E53  
                     l11017 0E26                       l11009 0E0F                       l11041 03D6  
                     l11033 03BF                       l10147 0A52                       l10139 0A2A  
                     l10315 0CC5                       l10307 0CA4                       l10323 0CD0  
                     l10331 0940                       l11019 0E34                       l11051 03E8  
                     l11043 03D8                       l11035 03C3                       l11027 03B1  
                     l10317 0CC9                       l10309 0CAC                       l10325 0CE2  
                     l10333 0948                       l10501 0AA9                       l11053 03EE  
                     l11045 03DE                       l11037 03C4                       l11061 0400  
                     l11029 03B7                       l10271 0A0D                       l10327 0CE4  
                     l10319 0CCD                       l10335 094C                       l10511 0CFA  
                     l10503 0CE5                       l11071 044A                       l11063 0412  
                     l11055 03F0                       l11047 03E0                       l11039 03D0  
                     l10281 0A17                       l10273 0A0E                       l10337 094E  
                     l10329 093E                       l10521 0D1E                       l10513 0CFF  
                     l10505 0CE9                       l11081 0487                       l11073 0456  
                     l11065 0418                       l11057 03FB                       l11049 03E6  
                     l10291 0A20                       l10283 0A1A                       l10275 0A10  
                     l10267 0A02                       l10451 099A                       l10443 098F  
                     l10523 0D25                       l10515 0D05                       l10507 0CEF  
                     l10531 0C1A                       l10611 0BAD                       l11083 048D  
                     l11075 0465                       l11067 0425                       l11059 03FF  
                     l10285 0A1B                       l10277 0A11                       l10269 0A05  
                     l10293 09C2                       l10453 09A0                       l10445 0995  
                     l10517 0D16                       l10509 0CF3                       l10525 0D2D  
                     l10541 0C3A                       l10533 0C1E                       l10621 0BCD  
                     l10613 0BAE                       l10701 0020                       l11085 0494  
                     l11077 0470                       l11069 043B                       l10287 0A1E  
                     l10279 0A14                       l10295 09C4                       l10455 09A2  
                     l10447 0997                       l10527 0D34                       l10519 0D1C  
                     l10543 0C41                       l10535 0C25                       l10551 0692  
                     l10615 0BAF                       l10607 0B96                       l10631 0972  
                     l10623 0963                       l10711 00B0                       l10703 0029  
                     l11079 047B                       l11087 0495                       l10289 0A1F  
                     l10297 09CD                       l10457 09A5                       l10449 0999  
                     l10545 0C48                       l10537 0C2A                       l10529 0C12  
                     l10561 06B2                       l10553 0699                       l10609 0BAB  
                     l10617 0BC0                       l10625 0966                       l10633 0952  
                     l10641 0918                       l10721 0110                       l10713 00BA  
                     l10705 0063                       l10801 09E2                       l11089 04AB  
                     l10299 09D5                       l10491 0A7E                       l10539 0C30  
                     l10547 0C50                       l10571 06D2                       l10563 06B6  
                     l10555 06A2                       l10619 0BC4                       l10627 096A  
                     l10635 0955                       l10643 091B                       l10651 0D35  
                     l10731 01A1                       l10723 014A                       l10715 00C3  
                     l10707 006D                       l10811 09FF                       l10803 09EC  
                     l10493 0A83                       l10549 0C57                       l10581 06F2  
                     l10573 06D9                       l10565 06BD                       l10557 06A6  
                     l10629 096E                       l10637 0957                       l10645 091D  
                     l10661 0D4F                       l10653 0D39                       l10733 01AA  
                     l10725 0154                       l10717 00FD                       l10709 0076  
                     l10741 04B9                       l10813 0A01                       l10805 09F6  
                     l10821 0AAB                       l10901 02C3                       l10495 0A87  
                     l10583 06F9                       l10575 06E0                       l10567 06C2  
                     l10559 06AC                       l10639 0958                       l10647 091E  
                     l10671 0D7E                       l10663 0D50                       l10655 0D3E  
                     l10735 01E4                       l10727 015D                       l10719 0107  
                     l10751 04D7                       l10743 04BE                       l10807 09FA  
                     l10815 0900                       l10823 0ABB                       l10831 0A5A  
                     l10911 0333                       l10903 02C9                       l10497 0A94  
                     l10569 06C8                       l10577 06E8                       l10649 09A6  
                     l10673 0D7F                       l10665 0D58                       l10657 0D45  
                     l10681 0EE0                       l10737 01EE                       l10729 0197  
                     l10761 0500                       l10753 04EC                       l10745 04C4  
                     l10809 09FE                       l10817 0901                       l10825 0AC4  
                     l10841 0A6B                       l10833 0A5B                       l10921 0378  
                     l10913 0344                       l10905 02E0                       l10499 0AA2  
                     l10579 06EC                       l10675 0D80                       l10667 0D75  
                     l10659 0D4C                       l10683 0EF0                       l10691 0E5C  
                     l10739 01F7                       l10771 052D                       l10763 0506  
                     l10755 04F4                       l10747 04CB                       l10819 0AAA  
                     l10843 0A71                       l10835 0A5E                       l10827 0A53  
                     l10851 0AF1                       l10923 0384                       l10915 034A  
                     l10907 030B                       l10931 0D85                       l10677 0D81  
                     l10669 0D7B                       l10685 0EF6                       l10693 0E64  
                     l10781 0546                       l10773 052E                       l10765 0509  
                     l10757 04F8                       l10749 04D6                       l10845 0A77  
                     l10837 0A5F                       l10829 0A57                       l10853 0979  
                     l10861 0B06                       l10925 038F                       l10917 035B  
                     l10909 0311                       l10941 0DAD                       l10933 0D8B  
                     l10687 0F15                       l10679 0EDC                       l10695 0E6A  
                     l10791 0590                       l10783 054B                       l10775 0532  
                     l10767 0510                       l10759 04FC                       l10839 0A65  
                     l10847 0AD6                       l10855 0987                       l10871 0B1D  
                     l10863 0B0E                       l10927 03A2                       l10919 0366  
                     l10935 0D99                       l10943 0DBB                       l10951 07B5  
                     l10697 0E89                       l10689 0E54                       l10785 0550  
                     l10777 0539                       l10769 0511                       l10793 059C  
                     l10849 0AE2                       l10857 098E                       l10881 0B31  
                     l10873 0B22                       l10865 0B10                       l10929 03A3  
                     l10937 0D9A                       l10961 07DD                       l10953 07B6  
                     l10945 079F                       l10699 0015                       l10787 0584  
                     l10779 053F                       l10795 05B0                       l10883 0B32  
                     l10875 0B27                       l10867 0B14                       l10859 0B05  
                     l10891 0277                       l10939 0DA7                       l10971 07E8  
                     l10963 07DF                       l10955 07C1                       l10947 07A4  
                     l10797 05B5                       l10789 058B                       l10877 0B2C  
                     l10869 0B18                       l10893 0288                       l10885 0238  
                     l10965 07E3                       l10957 07CF                       l10973 07E9  
                     l10949 07B1                       l10981 0C6B                       l10799 09E0  
                     l10879 0B30                       l10895 028E                       l10887 0251  
                     l10967 07E4                       l10959 07D1                       l10991 0C86  
                     l10983 0C6C                       l10975 0C58                       l10897 029D  
                     l10889 0257                       l10969 07E6                       l10993 0C89  
                     l10985 0C7B                       l10977 0C60                       l10899 02B0  
                     l10987 0C81                       l10995 0C8A                       l10979 0C67  
                     l10989 0C82                       l10997 0DDA        __size_of_calibrateIR 005E  
                     l10999 0DE2                       ?_isr1 0072                       ?_main 0072  
                     ?_init 0072                       _EEADR 010D                       STR_10 078B  
                     STR_11 079B                       STR_12 078F                       STR_13 072A  
                     STR_14 072A                       STR_15 0783                       STR_16 0777  
                     STR_17 0787                       STR_18 071A                       STR_19 0739  
           __end_of___awmod 06FA                       _CARRY 0018             __end_of___lwdiv 0D35  
           __end_of___lwmod 0C58                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074             __end_of_scan360 0E54                       _total 00CC  
            __pbitbssCOMMON 0380                       pclath 000A                 _turnlowByte 00DE  
           ?_lcd_write_data 0072           ?_adc_read_channel 0072                       status 0003  
                     wtemp0 007E             __end_of_sprintf 05B6            __end_of_Debounce 1000  
        __size_ofi1___lwmod 0044          ??_adc_read_channel 0026            ?_readAvgDistance 0072  
              __end_of_Menu 0CE5  __size_of_lcd_write_control 0014            _shortMenuStrings 00E5  
              __end_of_isr1 0692                __end_of_main 04B6                __end_of_init 0B34  
           rotate@direction 0025                      ??_Menu 0020               ?_readDistance 0028  
    readAvgDistance@fullval 0030                      ??_isr1 0078                      ??_main 0062  
                    ??_init 0023         __end_of_ReadButtons 0B93               Menu@BTN_input 0020  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of_adc_read 0A53                 ?_ChargeMode 0072  
                    i1l2210 0661                      i1l2211 0660                      i1l2212 0686  
                    i1l2204 0639                      i1l2213 0685                      i1l2205 05DB  
                    i1l2214 0686                      i1l2206 05F4                      i1l2207 060D  
                    i1l2208 062A                      i1l2209 0638                      i1l4500 0F9F  
                    i1l4501 0FA4                      i1l4510 0FFF                      i1l4502 0FBE  
                    i1l4511 0FFF                      i1l4503 0FBD                      i1l4504 0FC2  
                    i1l4505 0FDC                      i1l4506 0FDB                      i1l4514 0B70  
                    i1l4507 0FE0                      i1l4515 0B92                      i1l4508 0FFA  
                    i1l4516 0B78                      i1l4509 0FF9                      i1l4517 0B80  
                    i1l4518 0B88                      i1l4519 0B90                      i1l4496 0F82  
                    i1l4497 0F81                      i1l4498 0F86                      i1l4499 0FA0  
                    i1l7470 0BE4                      i1l7471 0BD8                      i1l7472 0BE9  
                    i1l7473 0BEA                      i1l7474 0BFB                      i1l7475 0C09  
                    i1l7476 0C11                      i1l7469 0C0A                      u413_20 0BD4  
                    u341_20 05BA                      u413_21 0BD3                      u341_21 05B9  
                    u350_20 066B                      u342_20 05D9                      u350_21 066A  
                    u342_21 05D8                      u414_25 0BD9                      u415_20 0BE8  
                    u351_20 0681                      u343_20 05F2                      u415_21 0BE7  
                    u351_21 0680                      u343_21 05F1                      u416_20 0BF4  
                    u352_20 0B6C                      u344_20 060B                      u416_21 0BF3  
                    u352_21 0B6B                      u344_21 060A                      u416_25 0BF0  
                    u353_20 0B74                      u345_20 0624                      u353_21 0B73  
                    u345_21 0623                      u417_25 0BFC                      u370_20 0F9C  
                    u418_20 0C08                      u354_20 0B7C                      u346_20 062F  
                    u370_21 0F9B                      u418_21 0C07                      u354_21 0B7B  
                    u346_21 062E                      u371_20 0FAA                      u355_20 0B84  
                    u347_20 063F                      u371_21 0FA9                      u355_21 0B83  
                    u347_21 063E                      u372_20 0FB6                      u356_20 0B8C  
                    u348_20 0657                      u372_21 0FB5                      u356_21 0B8B  
                    u348_21 0656                      u373_20 0FBA                      u365_20 0F6E  
                    u349_20 0665                      u373_21 0FB9                      u365_21 0F6D  
                    u349_21 0664                      u374_20 0FC8                      u366_20 0F7A  
                    u374_21 0FC7                      u366_21 0F79                 _DistLowByte 00D2  
                    u375_20 0FD4                      u367_20 0F7E                      u375_21 0FD3  
                    u367_21 0F7D                      u376_20 0FD8                      u368_20 0F8C  
                    u376_21 0FD7                      u368_21 0F8B                      u377_20 0FE6  
                    u369_20 0F98                      u377_21 0FE5                      u369_21 0F97  
                    u378_20 0FF2                      u378_21 0FF1                      u379_20 0FF6  
                    u379_21 0FF5                      _TMR0IE 005D                      _TMR0IF 005A  
              scan360@steps 0060                      _SSPCON 0014                      _SSPBUF 0013  
                _UpReleased 038E            __end_of_lcd_init 0A7E                      _adcVal 006A  
           _UpDebounceCount 00D6                      ___wmul 0A7E                   ??___awmod 0024  
              _turnhighByte 00DD                ??_ADCconvert 002E                   ??___lwdiv 002A  
                 ??___lwmod 0032            __end_of_init_adc 0979              ??_readDistance 002A  
           ___awmod@divisor 0020    __end_of_lcd_write_string 0AD6             ___awmod@counter 0025  
                    _rotate 0D35                      _rxfifo 00A0                      clrloop 08F6  
                    _txfifo 00B0                      _rxiptr 006C                      _rxoptr 006D  
                    _txiptr 006E                   ??_scan360 005C                      _txoptr 006F  
          __end_of_ser_init 0A2A            __end_of_ser_isrx 09A6           __end_ofi1___lwmod 0C12  
                    saved_w 007E               main@shortwall 0065                 _LeftPressed 0384  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 0238              __pcstackCOMMON 0072                __pidataBANK1 0908  
               _ReadButtons 0B63         __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023  
                 ?_Debounce 0072               _buttonPressed 007D                  __pbssBANK0 0068  
                __pbssBANK1 00A0                  __pbssBANK3 0190           _DownDebounceCount 00D3  
        _RightDebounceCount 00D5                  __pmaintext 03B1           robotTurn@distance 0022  
                   ?___wmul 0020                  __pintentry 0004                _DistHighByte 00D1  
     __end_of_UpdateDisplay 03B1          __size_of_ser_getch 0022                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 0021          __size_of_robo_init 0019  
                   i1l10201 062A                     i1l10211 064F                     i1l10203 062F  
                   i1l10221 0673                     i1l10213 0657                     i1l10205 0639  
                   i1l10231 0B68                     i1l10223 0677                     i1l10207 063F  
                   i1l10215 0661                     i1l10401 0F68                     i1l10241 0B75  
                   i1l10233 0B6C                     i1l10225 067B                     i1l10217 0665  
                   i1l10209 0647                     i1l10411 0F8C                     i1l10403 0F6E  
                   i1l10251 0B84                     i1l10243 0B77                     i1l10235 0B6D  
                   i1l10227 0681                     i1l10219 066B                     i1l10421 0FB0  
                   i1l10413 0F92                     i1l10405 0F74                     i1l10261 0B8F  
                   i1l10253 0B85                     i1l10245 0B7C                     i1l10237 0B6F  
                   i1l10229 0B63                     i1l10181 05C3          __size_of_robotMove 008C  
                   i1l10431 0FD4                     i1l10423 0FB6                     i1l10415 0F98  
                   i1l10407 0F7A                     i1l10263 0B90                     i1l10255 0B87  
                   i1l10247 0B7D                     i1l10239 0B74                     i1l10191 05F4  
                   i1l10183 05C4                     i1l10175 05B6                     i1l10441 0FF6  
                   i1l10433 0FD8                     i1l10425 0FBA                     i1l10417 0F9C  
                   i1l10409 0F7E                     i1l10601 0C02                     i1l10265 0B92  
                   i1l10257 0B8C                     i1l10249 0B7F                     i1l10193 060B  
                   i1l10185 05D9                     i1l10177 05BA                     i1l10435 0FE6  
                   i1l10427 0FC8                     i1l10419 0FAA                     i1l10603 0C0A  
                   i1l10259 0B8D                     i1l10195 060D                     i1l10187 05DB  
                   i1l10179 05BB                     i1l10437 0FEC                     i1l10429 0FCE  
                   i1l10605 0C11                     i1l10197 0624                     i1l10189 05F2  
                   i1l10439 0FF2                     i1l10199 0625                     i1l10591 0BDF  
                   i1l10593 0BE4                     i1l10585 0BCE                     i1l10595 0BEA  
                   i1l10587 0BD4                     i1l10597 0BF4                     i1l10589 0BD8  
                   i1l10599 0BFB          __size_of_robotTurn 0088                  ??_Debounce 0072  
          ??_lcd_write_data 0020                   ?_lcd_init 0072                     _SSPSTAT 0094  
      __end_of_readDistance 098F                   ?_init_adc 0072                   ?_ser_init 0072  
                 ?_ser_isrx 0072               ??_calibrateIR 005A                     ___awmod 0692  
           __size_of___wmul 002C                     ___lwdiv 0CE5                     ___lwmod 0C12  
 __size_of_adc_read_channel 003B                  ??_adc_read 0022             __size_of_rotate 0050  
                   _scan360 0DDA                     _dpowers 0710            ___awmod@dividend 0022  
                   _lowByte 00DA                     _ser_tmp 00DB                     _sprintf 04B6  
                ??_lcd_init 0023        end_of_initialization 0B5F                ??_ChargeMode 005A  
         __end_of_ser_getch 0A02                     init_ram 092C                  ??_init_adc 0020  
         __end_of_ser_putch 09E0           __end_of_robo_init 09BF           __end_of_robotMove 0F68  
              _LeftReleased 0385           __end_of_robotTurn 0EDC                  ??_ser_init 0020  
                ??_ser_isrx 0020                     rotate@i 0028                _DownReleased 0383  
             _RightReleased 038C    __size_of_readAvgDistance 0055                  _robot_read 0AD6  
         ?_lcd_write_string 0027          __end_of_ChargeMode 0C9E         __end_of_calibrateIR 07FD  
        ??_lcd_write_string 0029                 AT25256A@CS0 0038                 AT25256A@CS1 0039  
         adc_read@adc_value 0024                   i1___lwmod 0BCE                  _totalSteps 00CE  
                main@choice 0067               ?_spi_transfer 0072               _CenterPressed 0380  
              ?_ReadButtons 0072              __end_of___wmul 0AAA           i1___lwmod@divisor 0072  
         i1___lwmod@counter 0077              __end_of_rotate 0D85         start_initialization 0B34  
     __size_of_readDistance 0016           __size_of_Debounce 0098                  ?i1___lwmod 0072  
            ??_spi_transfer 0020       lcd_set_cursor@address 0023                   _UpPressed 038D  
            _RTC_FLAG_250MS 0388              _RTC_FLAG_500MS 0389                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 079F                 __pdataBANK1 00DF  
          _adc_read_channel 0B93                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 0979           __size_of_adc_read 0029                 __pbssCOMMON 007D  
         ??_readAvgDistance 0030               __pcstackBANK0 0020           __size_of_lcd_init 002B  
               sprintf@_val 003F                 sprintf@flag 003D           robotMove@distance 0022  
               sprintf@prec 003E                _current_step 00EB            readAvgDistance@i 0032  
         __size_of_init_adc 0016            ___lwdiv@dividend 0028                    ?___awmod 0020  
                 __ptext900 0979                   __ptext901 0AD6                   __ptext910 0D35  
                 __ptext902 0A53                   __ptext911 09A6                   __ptext903 0AAA  
                 __ptext920 098F                   __ptext912 0915                   __ptext904 08FD  
                 __ptext921 093B                   __ptext913 094F                   __ptext905 09E0  
                 __ptext930 0000                   __ptext922 0C9E                   __ptext914 0963  
                 __ptext906 04B6                   __ptext923 09BF                   __ptext915 0B93  
                 __ptext907 0015                   __ptext924 0A02                   __ptext916 0692  
                 __ptext908 0E54                   __ptext925 0A2A                   __ptext917 0C12  
                 __ptext909 0EDC                   __ptext926 05B6                   __ptext918 0CE5  
                 __ptext927 0B63                   __ptext919 0A7E                   __ptext928 0BCE  
                 __ptext929 0F68                   __ptext894 0DDA                   __ptext895 0C58  
                 __ptext896 079F                   __ptext897 0D85                   __ptext898 0238  
                 __ptext899 0B05           __size_of_ser_init 0028           __size_of_ser_isrx 0017  
                  ?___lwdiv 0026                    ?___lwmod 002E                   __pstrings 0700  
                 _dist_high 00C2                    ?_scan360 005A         readDistance@fullval 002C  
                ser_getch@c 0021            ___lwdiv@quotient 002B                 ??i1___lwmod 0076  
                  ?_sprintf 0034     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 0179              ___wmul@product 0024         __size_of_robot_read 002F  
                ser_putch@c 0021                   _ser_getch 09E0                   _ser_putch 09BF  
                 _robo_init 09A6                   _robotMove 0EDC                   _robotTurn 0E54  
              _RightPressed 038B        __size_of_ReadButtons 0030        __end_of_spi_transfer 094F  
               __stringbase 070F           ___wmul@multiplier 0020      UpdateDisplay@adcOutput 004A  
          spi_transfer@data 0022            spi_transfer@temp 0021                    _Debounce 0F68  
         _LeftDebounceCount 00D4   __size_of_lcd_write_string 002C          scan360@lowestSteps 005E  
   __size_of_lcd_write_data 0013                  ?_ser_getch 0072                  ?_ser_putch 0072  
   adc_read_channel@channel 0027               _RTC_FLAG_10MS 0386               _RTC_FLAG_50MS 038A  
                ?_robo_init 0072                   init_fetch 0928                  ?_robotMove 0022  
                ?_robotTurn 0022                  _ADCconvert 0015            __size_of___awmod 0068  
          __size_of___lwdiv 0050            __size_of___lwmod 0046               _UpdateDisplay 0238  
                  _adc_read 0A2A                 _currentMenu 00D7            __size_of_scan360 007A  
           ___lwdiv@divisor 0026             ___lwdiv@counter 002D                 _menuStrings 00DF  
                  _highByte 00D9                    _lcd_init 0A53                    _distance 00C6  
                  _dist_low 00C4            __size_of_sprintf 0100    __end_of_adc_read_channel 0BCE  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 0963  
             __size_of_isr1 00DC               __size_of_main 0105               __size_of_init 002F  
                  clear_ram 08F5                    _ser_init 0A02                    _ser_isrx 098F  
           _readAvgDistance 0D85                ?_calibrateIR 0072              ?_UpdateDisplay 0072  
              ??_robot_read 0022         _CenterDebounceCount 00D0                _RTC_FLAG_1MS 0387  
        UpdateDisplay@F1228 0190                    intlevel1 0000              _lcd_set_cursor 08FD  
                 sprintf@ap 003C                   sprintf@sp 0043            ___lwmod@dividend 0030  
        __end_of_robot_read 0B05                   stringcode 070A                 ??_ser_getch 0020  
               _serialInput 00DC                 ??_ser_putch 0020               _distTravelled 00C0  
               ??_robo_init 0022       __size_of_spi_transfer 0014                 ??_robotMove 0024  
               ??_robotTurn 0024                 ?_ADCconvert 0072           _lcd_write_control 094F  
          scan360@lowestVal 005C          ?_lcd_write_control 0072                  _OPTION_REG 0081  
                  sprintf@c 0044                    sprintf@f 0034             ___lwmod@divisor 002E  
           ___lwmod@counter 0033                    stringdir 070A                    stringtab 0700  
       ??_lcd_write_control 0020      __end_of_lcd_set_cursor 0908            _lcd_write_string 0AAA  
              _spi_transfer 093B           _current_direction 00D8                 _RTC_Counter 0068  
   __end_of_readAvgDistance 0DDA              _lcd_write_data 0915  
