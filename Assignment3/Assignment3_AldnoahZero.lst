

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Apr 27 14:43:16 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_distance
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMove
    55                           	FNCALL	_main,_robotTurn
    56                           	FNCALL	_scan360,_readAvgDistance
    57                           	FNCALL	_scan360,_rotate
    58                           	FNCALL	_scan360,_UpdateDisplay
    59                           	FNCALL	_calibrateIR,_rotate
    60                           	FNCALL	_calibrateIR,_UpdateDisplay
    61                           	FNCALL	_readAvgDistance,_readDistance
    62                           	FNCALL	_readAvgDistance,___lwdiv
    63                           	FNCALL	_readAvgDistance,_ADCconvert
    64                           	FNCALL	_UpdateDisplay,_lcd_write_control
    65                           	FNCALL	_UpdateDisplay,_sprintf
    66                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    67                           	FNCALL	_UpdateDisplay,_lcd_write_string
    68                           	FNCALL	_UpdateDisplay,___awmod
    69                           	FNCALL	_init,_init_adc
    70                           	FNCALL	_init,_lcd_init
    71                           	FNCALL	_init,_ser_init
    72                           	FNCALL	_init,_robo_init
    73                           	FNCALL	_readDistance,_adc_read_channel
    74                           	FNCALL	_robot_distance,_robot_read
    75                           	FNCALL	_lcd_init,_lcd_write_control
    76                           	FNCALL	_lcd_write_string,_lcd_write_data
    77                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    78                           	FNCALL	_robot_read,_ser_putch
    79                           	FNCALL	_sprintf,___lwdiv
    80                           	FNCALL	_sprintf,___lwmod
    81                           	FNCALL	_ADCconvert,___wmul
    82                           	FNCALL	_ADCconvert,___lwdiv
    83                           	FNCALL	_robotTurn,_ser_putch
    84                           	FNCALL	_robotMove,_ser_putch
    85                           	FNCALL	_rotate,_spi_transfer
    86                           	FNCALL	_robo_init,_ser_putch
    87                           	FNCALL	_adc_read_channel,_adc_read
    88                           	FNROOT	_main
    89                           	FNCALL	_isr1,i1___lwmod
    90                           	FNCALL	_isr1,_ReadButtons
    91                           	FNCALL	_ReadButtons,_Debounce
    92                           	FNCALL	intlevel1,_isr1
    93                           	global	intlevel1
    94                           	FNROOT	intlevel1
    95                           	global	_menuStrings
    96                           	global	_shortMenuStrings
    97                           	global	_distTravelled
    98                           	global	_current_step
    99                           psect	idataBANK1,class=CODE,space=0,delta=2
   100                           global __pidataBANK1
   101  0A06                     __pidataBANK1:
   102                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   103                           	line	32
   104                           
   105                           ;initializer for _menuStrings
   106  0A06  3423               	retlw	(STR_1-__stringbase)&0ffh
   107  0A07  341A               	retlw	(STR_2-__stringbase)&0ffh
   108  0A08  3435               	retlw	(STR_3-__stringbase)&0ffh
   109  0A09  343E               	retlw	(STR_4-__stringbase)&0ffh
   110  0A0A  342C               	retlw	(STR_5-__stringbase)&0ffh
   111                           	line	33
   112                           
   113                           ;initializer for _shortMenuStrings
   114  0A0B  345E               	retlw	(STR_6-__stringbase)&0ffh
   115  0A0C  3462               	retlw	(STR_7-__stringbase)&0ffh
   116  0A0D  344E               	retlw	(STR_8-__stringbase)&0ffh
   117  0A0E  345A               	retlw	(STR_9-__stringbase)&0ffh
   118  0A0F  3466               	retlw	(STR_10-__stringbase)&0ffh
   119                           	file	"E:\Aldnoah.Zero\Assignment3\robot.h"
   120                           	line	11
   121                           
   122                           ;initializer for _distTravelled
   123  0A10  340B               	retlw	0Bh
   124  0A11  3400               	retlw	0
   125                           
   126                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   127                           	line	30
   128                           
   129                           ;initializer for _current_step
   130  0A12  343C               	retlw	03Ch
   131                           	global	_dpowers
   132                           psect	strings,class=STRING,delta=2
   133                           global __pstrings
   134  0781                     __pstrings:
   135                           ;	global	stringdir,stringtab,__stringbase
   136  0781                     stringtab:
   137                           ;	String table - string pointers are 1 byte each
   138  0781  1BFF               	btfsc	(btemp+1),7
   139  0782  2F8B               	ljmp	stringcode
   140  0783  1383               	bcf	status,7
   141  0784  187F               	btfsc	(btemp+1),0
   142  0785  1783               	bsf	status,7
   143  0786  0800               	movf	indf,w
   144  0787  0A84               	incf fsr
   145  0788  1903               skipnz
   146  0789  0AFF               incf btemp+1
   147  078A  0008               	return
   148  078B                     stringcode:stringdir:
      + 078B                     stringdir:	
   149  078B  3007               movlw high(stringdir)
   150  078C  008A               movwf pclath
   151  078D  0804               movf fsr,w
   152  078E  0A84               incf fsr
   153  078F  0782               	addwf pc
   154  0790                     __stringbase:
   155  0790  3400               	retlw	0
   156                           psect	strings
   157                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   158                           	line	350
   159  0791                     _dpowers:
   160  0791  3401               	retlw	01h
   161  0792  3400               	retlw	0
   162                           
   163  0793  340A               	retlw	0Ah
   164  0794  3400               	retlw	0
   165                           
   166  0795  3464               	retlw	064h
   167  0796  3400               	retlw	0
   168                           
   169  0797  34E8               	retlw	0E8h
   170  0798  3403               	retlw	03h
   171                           
   172  0799  3410               	retlw	010h
   173  079A  3427               	retlw	027h
   174                           
   175                           	global	_dpowers
   176                           	global	_RTC_Counter
   177                           	global	_adcVal
   178                           	global	_buttonPressed
   179                           	global	_txiptr
   180                           	global	_txoptr
   181                           	global	_RTC_FLAG_1MS
   182                           	global	UpdateDisplay@F1230
   183                           	global	_CenterPressed
   184                           	global	_CenterReleased
   185                           	global	_DownPressed
   186                           	global	_DownReleased
   187                           	global	_LeftPressed
   188                           	global	_LeftReleased
   189                           	global	_RTC_FLAG_10MS
   190                           	global	_RTC_FLAG_250MS
   191                           	global	_RTC_FLAG_500MS
   192                           	global	_RTC_FLAG_50MS
   193                           	global	_RightPressed
   194                           	global	_RightReleased
   195                           	global	_SER_RC_FLAG
   196                           	global	_UpPressed
   197                           	global	_UpReleased
   198                           	global	_rxfifo
   199                           	global	_txfifo
   200                           	global	_dist_high
   201                           	global	_dist_low
   202                           	global	_distance
   203                           	global	_pos
   204                           	global	_test
   205                           	global	_total
   206                           	global	_totalSteps
   207                           	global	_CenterDebounceCount
   208                           	global	_DistHighByte
   209                           	global	_DistLowByte
   210                           	global	_DownDebounceCount
   211                           	global	_LeftDebounceCount
   212                           	global	_RightDebounceCount
   213                           	global	_SCAN_FLAG
   214                           	global	_UpDebounceCount
   215                           	global	_currentMenu
   216                           	global	_current_direction
   217                           	global	_highByte
   218                           	global	_lowByte
   219                           	global	_rxiptr
   220                           	global	_rxoptr
   221                           	global	_ser_tmp
   222                           	global	_serialInput
   223                           	global	_turnhighByte
   224                           	global	_turnlowByte
   225                           	global	_ADCON0
   226  001F                     _ADCON0	set	31
   227                           	global	_ADRESH
   228  001E                     _ADRESH	set	30
   229                           	global	_PORTA
   230  0005                     _PORTA	set	5
   231                           	global	_PORTC
   232  0007                     _PORTC	set	7
   233                           	global	_PORTD
   234  0008                     _PORTD	set	8
   235                           	global	_PORTE
   236  0009                     _PORTE	set	9
   237                           	global	_RCREG
   238  001A                     _RCREG	set	26
   239                           	global	_SSPBUF
   240  0013                     _SSPBUF	set	19
   241                           	global	_SSPCON
   242  0014                     _SSPCON	set	20
   243                           	global	_TMR0
   244  0001                     _TMR0	set	1
   245                           	global	_TXREG
   246  0019                     _TXREG	set	25
   247                           	global	AT25256A@CS0
   248  0038                     AT25256A@CS0	set	56
   249                           	global	AT25256A@CS1
   250  0039                     AT25256A@CS1	set	57
   251                           	global	_CARRY
   252  0018                     _CARRY	set	24
   253                           	global	_CHS0
   254  00FB                     _CHS0	set	251
   255                           	global	_CHS1
   256  00FC                     _CHS1	set	252
   257                           	global	_CHS2
   258  00FD                     _CHS2	set	253
   259                           	global	_CREN
   260  00C4                     _CREN	set	196
   261                           	global	_GIE
   262  005F                     _GIE	set	95
   263                           	global	_GO
   264  00FA                     _GO	set	250
   265                           	global	_OERR
   266  00C1                     _OERR	set	193
   267                           	global	_PEIE
   268  005E                     _PEIE	set	94
   269                           	global	_RB0
   270  0030                     _RB0	set	48
   271                           	global	_RB1
   272  0031                     _RB1	set	49
   273                           	global	_RB2
   274  0032                     _RB2	set	50
   275                           	global	_RB3
   276  0033                     _RB3	set	51
   277                           	global	_RB4
   278  0034                     _RB4	set	52
   279                           	global	_RB5
   280  0035                     _RB5	set	53
   281                           	global	_RB6
   282  0036                     _RB6	set	54
   283                           	global	_RC0
   284  0038                     _RC0	set	56
   285                           	global	_RC1
   286  0039                     _RC1	set	57
   287                           	global	_RC2
   288  003A                     _RC2	set	58
   289                           	global	_RCIF
   290  0065                     _RCIF	set	101
   291                           	global	_RE0
   292  0048                     _RE0	set	72
   293                           	global	_RE1
   294  0049                     _RE1	set	73
   295                           	global	_RE2
   296  004A                     _RE2	set	74
   297                           	global	_RX9
   298  00C6                     _RX9	set	198
   299                           	global	_SPEN
   300  00C7                     _SPEN	set	199
   301                           	global	_SSPIF
   302  0063                     _SSPIF	set	99
   303                           	global	_TMR0IE
   304  005D                     _TMR0IE	set	93
   305                           	global	_TMR0IF
   306  005A                     _TMR0IF	set	90
   307                           	global	_TXIF
   308  0064                     _TXIF	set	100
   309                           	global	_ADCON1
   310  009F                     _ADCON1	set	159
   311                           	global	_ADRESL
   312  009E                     _ADRESL	set	158
   313                           	global	_OPTION_REG
   314  0081                     _OPTION_REG	set	129
   315                           	global	_SPBRG
   316  0099                     _SPBRG	set	153
   317                           	global	_SSPSTAT
   318  0094                     _SSPSTAT	set	148
   319                           	global	_TRISA
   320  0085                     _TRISA	set	133
   321                           	global	_TRISB
   322  0086                     _TRISB	set	134
   323                           	global	_TRISC
   324  0087                     _TRISC	set	135
   325                           	global	_TRISD
   326  0088                     _TRISD	set	136
   327                           	global	_TRISE
   328  0089                     _TRISE	set	137
   329                           	global	_BRGH
   330  04C2                     _BRGH	set	1218
   331                           	global	_RCIE
   332  0465                     _RCIE	set	1125
   333                           	global	_SYNC
   334  04C4                     _SYNC	set	1220
   335                           	global	_TX9
   336  04C6                     _TX9	set	1222
   337                           	global	_TXEN
   338  04C5                     _TXEN	set	1221
   339                           	global	_TXIE
   340  0464                     _TXIE	set	1124
   341                           	global	_EEADR
   342  010D                     _EEADR	set	269
   343                           	global	_EEDATA
   344  010C                     _EEDATA	set	268
   345                           	global	_EECON1
   346  018C                     _EECON1	set	396
   347                           	global	_EECON2
   348  018D                     _EECON2	set	397
   349                           	global	_RD
   350  0C60                     _RD	set	3168
   351                           	global	_WR
   352  0C61                     _WR	set	3169
   353                           	global	_WREN
   354  0C62                     _WREN	set	3170
   355                           	
   356  079B                     STR_11:	
   357  079B  3441               	retlw	65	;'A'
   358  079C  3444               	retlw	68	;'D'
   359  079D  3443               	retlw	67	;'C'
   360  079E  343A               	retlw	58	;':'
   361  079F  3425               	retlw	37	;'%'
   362  07A0  3464               	retlw	100	;'d'
   363  07A1  3420               	retlw	32	;' '
   364  07A2  3444               	retlw	68	;'D'
   365  07A3  3469               	retlw	105	;'i'
   366  07A4  3473               	retlw	115	;'s'
   367  07A5  3474               	retlw	116	;'t'
   368  07A6  343A               	retlw	58	;':'
   369  07A7  3425               	retlw	37	;'%'
   370  07A8  3464               	retlw	100	;'d'
   371  07A9  3400               	retlw	0
   372                           psect	strings
   373                           	
   374  07AA                     STR_2:	
   375  07AA  3453               	retlw	83	;'S'
   376  07AB  3463               	retlw	99	;'c'
   377  07AC  3461               	retlw	97	;'a'
   378  07AD  346E               	retlw	110	;'n'
   379  07AE  345F               	retlw	95	;'_'
   380  07AF  3433               	retlw	51	;'3'
   381  07B0  3436               	retlw	54	;'6'
   382  07B1  3430               	retlw	48	;'0'
   383  07B2  3400               	retlw	0
   384                           psect	strings
   385                           	
   386  07B3                     STR_1:	
   387  07B3  3443               	retlw	67	;'C'
   388  07B4  3461               	retlw	97	;'a'
   389  07B5  346C               	retlw	108	;'l'
   390  07B6  3469               	retlw	105	;'i'
   391  07B7  3462               	retlw	98	;'b'
   392  07B8  345F               	retlw	95	;'_'
   393  07B9  3449               	retlw	73	;'I'
   394  07BA  3452               	retlw	82	;'R'
   395  07BB  3400               	retlw	0
   396                           psect	strings
   397                           	
   398  07BC                     STR_5:	
   399  07BC  3446               	retlw	70	;'F'
   400  07BD  346C               	retlw	108	;'l'
   401  07BE  3477               	retlw	119	;'w'
   402  07BF  345F               	retlw	95	;'_'
   403  07C0  3457               	retlw	87	;'W'
   404  07C1  3461               	retlw	97	;'a'
   405  07C2  346C               	retlw	108	;'l'
   406  07C3  346C               	retlw	108	;'l'
   407  07C4  3400               	retlw	0
   408                           psect	strings
   409                           	
   410  07C5                     STR_3:	
   411  07C5  3444               	retlw	68	;'D'
   412  07C6  3472               	retlw	114	;'r'
   413  07C7  3469               	retlw	105	;'i'
   414  07C8  3476               	retlw	118	;'v'
   415  07C9  3465               	retlw	101	;'e'
   416  07CA  345F               	retlw	95	;'_'
   417  07CB  3432               	retlw	50	;'2'
   418  07CC  346D               	retlw	109	;'m'
   419  07CD  3400               	retlw	0
   420                           psect	strings
   421                           	
   422  07CE                     STR_4:	
   423  07CE  3444               	retlw	68	;'D'
   424  07CF  3472               	retlw	114	;'r'
   425  07D0  3469               	retlw	105	;'i'
   426  07D1  3476               	retlw	118	;'v'
   427  07D2  3465               	retlw	101	;'e'
   428  07D3  345F               	retlw	95	;'_'
   429  07D4  344C               	retlw	76	;'L'
   430  07D5  3400               	retlw	0
   431                           psect	strings
   432                           	
   433  07D6                     STR_14:	
   434  07D6  3443               	retlw	67	;'C'
   435  07D7  344F               	retlw	79	;'O'
   436  07D8  344E               	retlw	78	;'N'
   437  07D9  3446               	retlw	70	;'F'
   438  07DA  3449               	retlw	73	;'I'
   439  07DB  3452               	retlw	82	;'R'
   440  07DC  344D               	retlw	77	;'M'
   441  07DD  3400               	retlw	0
   442                           psect	strings
   443                           	
   444  07DE                     STR_8:	
   445  07DE  3444               	retlw	68	;'D'
   446  07DF  3472               	retlw	114	;'r'
   447  07E0  3432               	retlw	50	;'2'
   448  07E1  3400               	retlw	0
   449                           psect	strings
   450                           	
   451  07E2                     STR_13:	
   452  07E2  343C               	retlw	60	;'<'
   453  07E3  343C               	retlw	60	;'<'
   454  07E4  343C               	retlw	60	;'<'
   455  07E5  3400               	retlw	0
   456                           psect	strings
   457                           	
   458  07E6                     STR_15:	
   459  07E6  343E               	retlw	62	;'>'
   460  07E7  343E               	retlw	62	;'>'
   461  07E8  343E               	retlw	62	;'>'
   462  07E9  3400               	retlw	0
   463                           psect	strings
   464                           	
   465  07EA                     STR_9:	
   466  07EA  3444               	retlw	68	;'D'
   467  07EB  3472               	retlw	114	;'r'
   468  07EC  344C               	retlw	76	;'L'
   469  07ED  3400               	retlw	0
   470                           psect	strings
   471                           	
   472  07EE                     STR_6:	
   473  07EE  3443               	retlw	67	;'C'
   474  07EF  3461               	retlw	97	;'a'
   475  07F0  346C               	retlw	108	;'l'
   476  07F1  3400               	retlw	0
   477                           psect	strings
   478                           	
   479  07F2                     STR_7:	
   480  07F2  3453               	retlw	83	;'S'
   481  07F3  3463               	retlw	99	;'c'
   482  07F4  346E               	retlw	110	;'n'
   483  07F5  3400               	retlw	0
   484                           psect	strings
   485                           	
   486  07F6                     STR_10:	
   487  07F6  3446               	retlw	70	;'F'
   488  07F7  346C               	retlw	108	;'l'
   489  07F8  3477               	retlw	119	;'w'
   490  07F9  3400               	retlw	0
   491                           psect	strings
   492  079B                     STR_12	equ	STR_11+0
   493                           	file	"Assignment3_AldnoahZero.as"
   494                           	line	#
   495                           psect cinit,class=CODE,delta=2
   496                           global start_initialization
   497  0B9A                     start_initialization:
   498                           
   499                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   500                           global __pbitbssCOMMON
   501  0380                     __pbitbssCOMMON:
   502  0380                     _CenterPressed:
   503  0380                            ds      1
   504                           
   505  0381                     _CenterReleased:
   506  0381                            ds      1
   507                           
   508  0382                     _DownPressed:
   509  0382                            ds      1
   510                           
   511  0383                     _DownReleased:
   512  0383                            ds      1
   513                           
   514  0384                     _LeftPressed:
   515  0384                            ds      1
   516                           
   517  0385                     _LeftReleased:
   518  0385                            ds      1
   519                           
   520  0386                     _RTC_FLAG_10MS:
   521  0386                            ds      1
   522                           
   523  0387                     _RTC_FLAG_250MS:
   524  0387                            ds      1
   525                           
   526  0388                     _RTC_FLAG_500MS:
   527  0388                            ds      1
   528                           
   529  0389                     _RTC_FLAG_50MS:
   530  0389                            ds      1
   531                           
   532  038A                     _RightPressed:
   533  038A                            ds      1
   534                           
   535  038B                     _RightReleased:
   536  038B                            ds      1
   537                           
   538  038C                     _SER_RC_FLAG:
   539  038C                            ds      1
   540                           
   541  038D                     _UpPressed:
   542  038D                            ds      1
   543                           
   544  038E                     _UpReleased:
   545  038E                            ds      1
   546                           
   547                           psect	bitbssBANK0,class=BANK0,bit,space=1
   548                           global __pbitbssBANK0
   549  0378                     __pbitbssBANK0:
   550  0378                     _RTC_FLAG_1MS:
   551  0378                            ds      1
   552                           
   553                           psect	bssBANK0,class=BANK0,space=1
   554                           global __pbssBANK0
   555  0068                     __pbssBANK0:
   556  0068                     _RTC_Counter:
   557  0068                            ds      2
   558                           
   559  006A                     _adcVal:
   560  006A                            ds      2
   561                           
   562  006C                     _buttonPressed:
   563  006C                            ds      1
   564                           
   565  006D                     _txiptr:
   566  006D                            ds      1
   567                           
   568  006E                     _txoptr:
   569  006E                            ds      1
   570                           
   571                           psect	bssBANK1,class=BANK1,space=1
   572                           global __pbssBANK1
   573  00A0                     __pbssBANK1:
   574  00A0                     _rxfifo:
   575  00A0                            ds      16
   576                           
   577  00B0                     _txfifo:
   578  00B0                            ds      16
   579                           
   580  00C0                     _dist_high:
   581  00C0                            ds      2
   582                           
   583  00C2                     _dist_low:
   584  00C2                            ds      2
   585                           
   586  00C4                     _distance:
   587  00C4                            ds      2
   588                           
   589  00C6                     _pos:
   590  00C6                            ds      2
   591                           
   592  00C8                     _test:
   593  00C8                            ds      2
   594                           
   595  00CA                     _total:
   596  00CA                            ds      2
   597                           
   598  00CC                     _totalSteps:
   599  00CC                            ds      2
   600                           
   601  00CE                     _CenterDebounceCount:
   602  00CE                            ds      1
   603                           
   604  00CF                     _DistHighByte:
   605  00CF                            ds      1
   606                           
   607  00D0                     _DistLowByte:
   608  00D0                            ds      1
   609                           
   610  00D1                     _DownDebounceCount:
   611  00D1                            ds      1
   612                           
   613  00D2                     _LeftDebounceCount:
   614  00D2                            ds      1
   615                           
   616  00D3                     _RightDebounceCount:
   617  00D3                            ds      1
   618                           
   619  00D4                     _SCAN_FLAG:
   620  00D4                            ds      1
   621                           
   622  00D5                     _UpDebounceCount:
   623  00D5                            ds      1
   624                           
   625  00D6                     _currentMenu:
   626  00D6                            ds      1
   627                           
   628  00D7                     _current_direction:
   629  00D7                            ds      1
   630                           
   631  00D8                     _highByte:
   632  00D8                            ds      1
   633                           
   634  00D9                     _lowByte:
   635  00D9                            ds      1
   636                           
   637  00DA                     _rxiptr:
   638  00DA                            ds      1
   639                           
   640  00DB                     _rxoptr:
   641  00DB                            ds      1
   642                           
   643  00DC                     _ser_tmp:
   644  00DC                            ds      1
   645                           
   646  00DD                     _serialInput:
   647  00DD                            ds      1
   648                           
   649  00DE                     _turnhighByte:
   650  00DE                            ds      1
   651                           
   652  00DF                     _turnlowByte:
   653  00DF                            ds      1
   654                           
   655                           psect	dataBANK1,class=BANK1,space=1
   656                           global __pdataBANK1
   657  00E0                     __pdataBANK1:
   658                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   659                           	line	32
   660  00E0                     _menuStrings:
   661  00E0                            ds      5
   662                           
   663                           psect	dataBANK1
   664                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   665                           	line	33
   666  00E5                     _shortMenuStrings:
   667  00E5                            ds      5
   668                           
   669                           psect	dataBANK1
   670                           	file	"E:\Aldnoah.Zero\Assignment3\robot.h"
   671                           	line	11
   672  00EA                     _distTravelled:
   673  00EA                            ds      2
   674                           
   675                           psect	dataBANK1
   676                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   677                           	line	30
   678  00EC                     _current_step:
   679  00EC                            ds      1
   680                           
   681                           psect	bssBANK3,class=BANK3,space=1
   682                           global __pbssBANK3
   683  0190                     __pbssBANK3:
   684  0190                     UpdateDisplay@F1230:
   685  0190                            ds      16
   686                           
   687                           psect clrtext,class=CODE,delta=2
   688                           global clear_ram
   689                           ;	Called with FSR containing the base address, and
   690                           ;	W with the last address+1
   691  09E6                     clear_ram:
   692  09E6  0064               	clrwdt			;clear the watchdog before getting into this loop
   693  09E7                     clrloop:
   694  09E7  0180               	clrf	indf		;clear RAM location pointed to by FSR
   695  09E8  0A84               	incf	fsr,f		;increment pointer
   696  09E9  0604               	xorwf	fsr,w		;XOR with final address
   697  09EA  1903               	btfsc	status,2	;have we reached the end yet?
   698  09EB  3400               	retlw	0		;all done for this memory range, return
   699  09EC  0604               	xorwf	fsr,w		;XOR again to restore value
   700  09ED  29E7               	goto	clrloop		;do the next byte
   701                           
   702                           ; Clear objects allocated to BITCOMMON
   703                           psect cinit,class=CODE,delta=2
   704  0B9A  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   705  0B9B  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   706                           ; Clear objects allocated to BITBANK0
   707                           psect cinit,class=CODE,delta=2
   708  0B9C  01EF               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   709                           ; Clear objects allocated to BANK0
   710                           psect cinit,class=CODE,delta=2
   711  0B9D  01E8               	clrf	((__pbssBANK0)+0)&07Fh
   712  0B9E  01E9               	clrf	((__pbssBANK0)+1)&07Fh
   713  0B9F  01EA               	clrf	((__pbssBANK0)+2)&07Fh
   714  0BA0  01EB               	clrf	((__pbssBANK0)+3)&07Fh
   715  0BA1  01EC               	clrf	((__pbssBANK0)+4)&07Fh
   716  0BA2  01ED               	clrf	((__pbssBANK0)+5)&07Fh
   717  0BA3  01EE               	clrf	((__pbssBANK0)+6)&07Fh
   718                           ; Clear objects allocated to BANK1
   719                           psect cinit,class=CODE,delta=2
   720  0BA4  1383               	bcf	status, 7	;select IRP bank0
   721  0BA5  30A0               	movlw	low(__pbssBANK1)
   722  0BA6  0084               	movwf	fsr
   723  0BA7  30E0               	movlw	low((__pbssBANK1)+040h)
   724  0BA8  120A  158A  21E6   	fcall	clear_ram
              120A  158A         
   725                           ; Clear objects allocated to BANK3
   726                           psect cinit,class=CODE,delta=2
   727  0BAD  1783               	bsf	status, 7	;select IRP bank2
   728  0BAE  3090               	movlw	low(__pbssBANK3)
   729  0BAF  0084               	movwf	fsr
   730  0BB0  30A0               	movlw	low((__pbssBANK3)+010h)
   731  0BB1  120A  158A  21E6   	fcall	clear_ram
              120A  158A         
   732                           global btemp
   733                           psect inittext,class=CODE,delta=2
   734                           global init_fetch,btemp
   735                           ;	Called with low address in FSR and high address in W
   736  0A38                     init_fetch:
   737  0A38  087E               	movf btemp,w
   738  0A39  008A               	movwf pclath
   739  0A3A  087F               	movf btemp+1,w
   740  0A3B  0082               	movwf pc
   741                           global init_ram
   742                           ;Called with:
   743                           ;	high address of idata address in btemp 
   744                           ;	low address of idata address in btemp+1 
   745                           ;	low address of data in FSR
   746                           ;	high address + 1 of data in btemp-1
   747  0A3C                     init_ram:
   748  0A3C  120A  158A  2238   	fcall init_fetch
              120A  158A         
   749  0A41  0080               	movwf indf,f
   750  0A42  0A84               	incf fsr,f
   751  0A43  0804               	movf fsr,w
   752  0A44  067D               	xorwf btemp-1,w
   753  0A45  1903               	btfsc status,2
   754  0A46  3400               	retlw 0
   755  0A47  0AFF               	incf btemp+1,f
   756  0A48  1903               	btfsc status,2
   757  0A49  0AFE               	incf btemp,f
   758  0A4A  2A3C               	goto init_ram
   759                           ; Initialize objects allocated to BANK1
   760                           psect cinit,class=CODE,delta=2
   761                           global init_ram, __pidataBANK1
   762  0BB6  1383               	bcf	status, 7	;select IRP bank0
   763  0BB7  30ED               	movlw low(__pdataBANK1+13)
   764  0BB8  00FD               	movwf btemp-1,f
   765  0BB9  300A               	movlw high(__pidataBANK1)
   766  0BBA  00FE               	movwf btemp,f
   767  0BBB  3006               	movlw low(__pidataBANK1)
   768  0BBC  00FF               	movwf btemp+1,f
   769  0BBD  30E0               	movlw low(__pdataBANK1)
   770  0BBE  0084               	movwf fsr,f
   771  0BBF  120A  158A  223C   	fcall init_ram
              120A  158A         
   772                           psect cinit,class=CODE,delta=2
   773                           global end_of_initialization
   774                           
   775                           ;End of C runtime variable initialization code
   776                           
   777  0BC4                     end_of_initialization:
   778  0BC4  0183               clrf status
   779  0BC5  120A  118A  2B85   ljmp _main	;jump to C main() function
   780                           psect	cstackCOMMON,class=COMMON,space=1
   781                           global __pcstackCOMMON
   782  0072                     __pcstackCOMMON:
   783                           	global	?_ser_init
   784  0072                     ?_ser_init:	; 0 bytes @ 0x0
   785                           	global	?_robo_init
   786  0072                     ?_robo_init:	; 0 bytes @ 0x0
   787                           	global	?_UpdateDisplay
   788  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   789                           	global	?_readAvgDistance
   790  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   791                           	global	?_robot_distance
   792  0072                     ?_robot_distance:	; 0 bytes @ 0x0
   793                           	global	?_ADCconvert
   794  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   795                           	global	?_init_adc
   796  0072                     ?_init_adc:	; 0 bytes @ 0x0
   797                           	global	?_lcd_write_control
   798  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   799                           	global	?_lcd_write_data
   800  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   801                           	global	?_lcd_set_cursor
   802  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   803                           	global	?_lcd_init
   804  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   805                           	global	?_isr1
   806  0072                     ?_isr1:	; 0 bytes @ 0x0
   807                           	global	?_init
   808  0072                     ?_init:	; 0 bytes @ 0x0
   809                           	global	?_calibrateIR
   810  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   811                           	global	?_main
   812  0072                     ?_main:	; 0 bytes @ 0x0
   813                           	global	?_ser_putch
   814  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   815                           	global	?_Debounce
   816  0072                     ?_Debounce:	; 0 bytes @ 0x0
   817                           	global	??_Debounce
   818  0072                     ??_Debounce:	; 0 bytes @ 0x0
   819                           	global	?_robot_read
   820  0072                     ?_robot_read:	; 0 bytes @ 0x0
   821                           	global	?_ReadButtons
   822  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   823                           	global	?_Menu
   824  0072                     ?_Menu:	; 1 bytes @ 0x0
   825                           	global	?_adc_read_channel
   826  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   827                           	global	?_spi_transfer
   828  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   829                           	global	?i1___lwmod
   830  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   831                           	global	i1___lwmod@divisor
   832  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   833  0072                     	ds	1
   834                           	global	??_ReadButtons
   835  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   836  0073                     	ds	1
   837                           	global	i1___lwmod@dividend
   838  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   839  0074                     	ds	2
   840                           	global	??i1___lwmod
   841  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   842  0076                     	ds	1
   843                           	global	i1___lwmod@counter
   844  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   845  0077                     	ds	1
   846                           	global	??_isr1
   847  0078                     ??_isr1:	; 0 bytes @ 0x6
   848  0078                     	ds	6
   849                           psect	cstackBANK0,class=BANK0,space=1
   850                           global __pcstackBANK0
   851  0020                     __pcstackBANK0:
   852                           	global	??_ser_init
   853  0020                     ??_ser_init:	; 0 bytes @ 0x0
   854                           	global	??_Menu
   855  0020                     ??_Menu:	; 0 bytes @ 0x0
   856                           	global	??_init_adc
   857  0020                     ??_init_adc:	; 0 bytes @ 0x0
   858                           	global	??_lcd_write_control
   859  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   860                           	global	??_lcd_write_data
   861  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   862                           	global	??_spi_transfer
   863  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   864                           	global	??_ser_putch
   865  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   866                           	global	?_adc_read
   867  0020                     ?_adc_read:	; 2 bytes @ 0x0
   868                           	global	?___wmul
   869  0020                     ?___wmul:	; 2 bytes @ 0x0
   870                           	global	?___awmod
   871  0020                     ?___awmod:	; 2 bytes @ 0x0
   872                           	global	Menu@input
   873  0020                     Menu@input:	; 1 bytes @ 0x0
   874                           	global	___wmul@multiplier
   875  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   876                           	global	___awmod@divisor
   877  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   878  0020                     	ds	1
   879                           	global	spi_transfer@temp
   880  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   881                           	global	ser_putch@c
   882  0021                     ser_putch@c:	; 1 bytes @ 0x1
   883  0021                     	ds	1
   884                           	global	??_adc_read
   885  0022                     ??_adc_read:	; 0 bytes @ 0x2
   886                           	global	??_robo_init
   887  0022                     ??_robo_init:	; 0 bytes @ 0x2
   888                           	global	?_robotMove
   889  0022                     ?_robotMove:	; 0 bytes @ 0x2
   890                           	global	?_robotTurn
   891  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   892                           	global	??_robot_read
   893  0022                     ??_robot_read:	; 0 bytes @ 0x2
   894                           	global	lcd_write_control@databyte
   895  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   896                           	global	lcd_write_data@databyte
   897  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   898                           	global	spi_transfer@data
   899  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   900                           	global	robot_read@packet
   901  0022                     robot_read@packet:	; 1 bytes @ 0x2
   902                           	global	robotMove@distance
   903  0022                     robotMove@distance:	; 2 bytes @ 0x2
   904                           	global	robotTurn@distance
   905  0022                     robotTurn@distance:	; 2 bytes @ 0x2
   906                           	global	___wmul@multiplicand
   907  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   908                           	global	___awmod@dividend
   909  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   910  0022                     	ds	1
   911                           	global	?_rotate
   912  0023                     ?_rotate:	; 0 bytes @ 0x3
   913                           	global	??_robot_distance
   914  0023                     ??_robot_distance:	; 0 bytes @ 0x3
   915                           	global	??_lcd_set_cursor
   916  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   917                           	global	??_lcd_init
   918  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   919                           	global	??_init
   920  0023                     ??_init:	; 0 bytes @ 0x3
   921                           	global	lcd_set_cursor@address
   922  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   923                           	global	rotate@numsteps
   924  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   925  0023                     	ds	1
   926                           	global	??_robotMove
   927  0024                     ??_robotMove:	; 0 bytes @ 0x4
   928                           	global	??_robotTurn
   929  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   930                           	global	??___wmul
   931  0024                     ??___wmul:	; 0 bytes @ 0x4
   932                           	global	??___awmod
   933  0024                     ??___awmod:	; 0 bytes @ 0x4
   934                           	global	adc_read@adc_value
   935  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   936                           	global	___wmul@product
   937  0024                     ___wmul@product:	; 2 bytes @ 0x4
   938  0024                     	ds	1
   939                           	global	rotate@direction
   940  0025                     rotate@direction:	; 1 bytes @ 0x5
   941                           	global	___awmod@counter
   942  0025                     ___awmod@counter:	; 1 bytes @ 0x5
   943  0025                     	ds	1
   944                           	global	??_rotate
   945  0026                     ??_rotate:	; 0 bytes @ 0x6
   946                           	global	??_adc_read_channel
   947  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
   948                           	global	?___lwdiv
   949  0026                     ?___lwdiv:	; 2 bytes @ 0x6
   950                           	global	___awmod@sign
   951  0026                     ___awmod@sign:	; 1 bytes @ 0x6
   952                           	global	___lwdiv@divisor
   953  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   954  0026                     	ds	1
   955                           	global	?_lcd_write_string
   956  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
   957                           	global	adc_read_channel@channel
   958  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
   959                           	global	lcd_write_string@s
   960  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
   961  0027                     	ds	1
   962                           	global	?_readDistance
   963  0028                     ?_readDistance:	; 2 bytes @ 0x8
   964                           	global	rotate@i
   965  0028                     rotate@i:	; 2 bytes @ 0x8
   966                           	global	___lwdiv@dividend
   967  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   968  0028                     	ds	1
   969                           	global	??_lcd_write_string
   970  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
   971  0029                     	ds	1
   972                           	global	??_readDistance
   973  002A                     ??_readDistance:	; 0 bytes @ 0xA
   974                           	global	??___lwdiv
   975  002A                     ??___lwdiv:	; 0 bytes @ 0xA
   976  002A                     	ds	1
   977                           	global	___lwdiv@quotient
   978  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
   979  002B                     	ds	1
   980                           	global	readDistance@fullval
   981  002C                     readDistance@fullval:	; 2 bytes @ 0xC
   982  002C                     	ds	1
   983                           	global	___lwdiv@counter
   984  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
   985  002D                     	ds	1
   986                           	global	??_ADCconvert
   987  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
   988                           	global	?___lwmod
   989  002E                     ?___lwmod:	; 2 bytes @ 0xE
   990                           	global	___lwmod@divisor
   991  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
   992  002E                     	ds	2
   993                           	global	??_readAvgDistance
   994  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
   995                           	global	readAvgDistance@fullval
   996  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
   997                           	global	___lwmod@dividend
   998  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
   999  0030                     	ds	2
  1000                           	global	??___lwmod
  1001  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1002                           	global	readAvgDistance@i
  1003  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
  1004  0032                     	ds	1
  1005                           	global	___lwmod@counter
  1006  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1007  0033                     	ds	1
  1008                           	global	?_sprintf
  1009  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1010                           	global	sprintf@f
  1011  0034                     sprintf@f:	; 1 bytes @ 0x14
  1012  0034                     	ds	5
  1013                           	global	??_sprintf
  1014  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1015  0039                     	ds	3
  1016                           	global	sprintf@ap
  1017  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1018  003C                     	ds	1
  1019                           	global	sprintf@flag
  1020  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1021  003D                     	ds	1
  1022                           	global	sprintf@prec
  1023  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1024  003E                     	ds	1
  1025                           	global	sprintf@_val
  1026  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1027  003F                     	ds	4
  1028                           	global	sprintf@sp
  1029  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1030  0043                     	ds	1
  1031                           	global	sprintf@c
  1032  0044                     sprintf@c:	; 1 bytes @ 0x24
  1033  0044                     	ds	1
  1034                           	global	??_UpdateDisplay
  1035  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1036  0045                     	ds	5
  1037                           	global	UpdateDisplay@adcOutput
  1038  004A                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x2A
  1039  004A                     	ds	16
  1040                           	global	??_calibrateIR
  1041  005A                     ??_calibrateIR:	; 0 bytes @ 0x3A
  1042                           	global	?_scan360
  1043  005A                     ?_scan360:	; 2 bytes @ 0x3A
  1044  005A                     	ds	2
  1045                           	global	??_scan360
  1046  005C                     ??_scan360:	; 0 bytes @ 0x3C
  1047                           	global	scan360@lowestVal
  1048  005C                     scan360@lowestVal:	; 2 bytes @ 0x3C
  1049  005C                     	ds	2
  1050                           	global	scan360@lowestSteps
  1051  005E                     scan360@lowestSteps:	; 2 bytes @ 0x3E
  1052  005E                     	ds	2
  1053                           	global	scan360@steps
  1054  0060                     scan360@steps:	; 2 bytes @ 0x40
  1055  0060                     	ds	2
  1056                           	global	??_main
  1057  0062                     ??_main:	; 0 bytes @ 0x42
  1058  0062                     	ds	3
  1059                           	global	main@shortwall
  1060  0065                     main@shortwall:	; 2 bytes @ 0x45
  1061  0065                     	ds	2
  1062                           	global	main@choice
  1063  0067                     main@choice:	; 1 bytes @ 0x47
  1064  0067                     	ds	1
  1065 ;;Data sizes: Strings 95, constant 10, data 13, bss 87, persistent 0 stack 0
  1066 ;;Auto spaces:   Size  Autos    Used
  1067 ;; COMMON          14     12      14
  1068 ;; BANK0           80     72      80
  1069 ;; BANK1           80      0      77
  1070 ;; BANK3           96      0      16
  1071 ;; BANK2           96      0       0
  1072                           
  1073 ;;
  1074 ;; Pointer list with targets:
  1075                           
  1076 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1077 ;;
  1078 ;; ?___awmod	int  size(1) Largest target is 0
  1079 ;;
  1080 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1081 ;;
  1082 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1083 ;;
  1084 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1085 ;;
  1086 ;; ?_scan360	int  size(1) Largest target is 0
  1087 ;;
  1088 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1089 ;;
  1090 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1091 ;;
  1092 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1093 ;;		 -> STR_12(CODE[15]), STR_11(CODE[15]), 
  1094 ;;
  1095 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1096 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1097 ;;
  1098 ;; ?_sprintf	int  size(1) Largest target is 0
  1099 ;;
  1100 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1101 ;;		 -> ?_sprintf(BANK0[2]), 
  1102 ;;
  1103 ;; S8123$_cp	PTR const unsigned char  size(1) Largest target is 0
  1104 ;;
  1105 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1106 ;;
  1107 ;; shortMenuStrings	PTR const unsigned char [5] size(1) Largest target is 4
  1108 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1109 ;;		 -> STR_6(CODE[4]), 
  1110 ;;
  1111 ;; menuStrings	PTR const unsigned char [5] size(1) Largest target is 9
  1112 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1113 ;;		 -> STR_1(CODE[9]), 
  1114 ;;
  1115 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1116 ;;		 -> STR_15(CODE[4]), STR_14(CODE[8]), STR_13(CODE[4]), UpdateDisplay@adcOutput(BANK0[16]), 
  1117 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1118 ;;		 -> STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1119 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1120 ;;
  1121                           
  1122                           
  1123 ;;
  1124 ;; Critical Paths under _main in COMMON
  1125 ;;
  1126 ;;   None.
  1127 ;;
  1128 ;; Critical Paths under _isr1 in COMMON
  1129 ;;
  1130 ;;   _isr1->i1___lwmod
  1131 ;;   _ReadButtons->_Debounce
  1132 ;;
  1133 ;; Critical Paths under _main in BANK0
  1134 ;;
  1135 ;;   _main->_scan360
  1136 ;;   _scan360->_UpdateDisplay
  1137 ;;   _calibrateIR->_UpdateDisplay
  1138 ;;   _readAvgDistance->_ADCconvert
  1139 ;;   _UpdateDisplay->_sprintf
  1140 ;;   _readDistance->_adc_read_channel
  1141 ;;   _robot_distance->_robot_read
  1142 ;;   _lcd_init->_lcd_write_control
  1143 ;;   _lcd_write_string->___awmod
  1144 ;;   _lcd_set_cursor->_lcd_write_control
  1145 ;;   _robot_read->_ser_putch
  1146 ;;   _sprintf->___lwmod
  1147 ;;   _ADCconvert->___lwdiv
  1148 ;;   _robotTurn->_ser_putch
  1149 ;;   _robotMove->_ser_putch
  1150 ;;   _rotate->_spi_transfer
  1151 ;;   _robo_init->_ser_putch
  1152 ;;   _adc_read_channel->_adc_read
  1153 ;;   ___lwmod->___lwdiv
  1154 ;;   ___lwdiv->___wmul
  1155 ;;
  1156 ;; Critical Paths under _isr1 in BANK0
  1157 ;;
  1158 ;;   None.
  1159 ;;
  1160 ;; Critical Paths under _main in BANK1
  1161 ;;
  1162 ;;   None.
  1163 ;;
  1164 ;; Critical Paths under _isr1 in BANK1
  1165 ;;
  1166 ;;   None.
  1167 ;;
  1168 ;; Critical Paths under _main in BANK3
  1169 ;;
  1170 ;;   None.
  1171 ;;
  1172 ;; Critical Paths under _isr1 in BANK3
  1173 ;;
  1174 ;;   None.
  1175 ;;
  1176 ;; Critical Paths under _main in BANK2
  1177 ;;
  1178 ;;   None.
  1179 ;;
  1180 ;; Critical Paths under _isr1 in BANK2
  1181 ;;
  1182 ;;   None.
  1183                           
  1184 ;;
  1185 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1186 ;;
  1187                           
  1188 ;;
  1189 ;;Call Graph Tables:
  1190 ;;
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1193 ;; ---------------------------------------------------------------------------------
  1194 ;; (0) _main                                                 6     6      0    5886
  1195 ;;                                             66 BANK0      6     6      0
  1196 ;;                               _init
  1197 ;;                     _robot_distance
  1198 ;;                    _readAvgDistance
  1199 ;;                      _UpdateDisplay
  1200 ;;                               _Menu
  1201 ;;                        _calibrateIR
  1202 ;;                            _scan360
  1203 ;;                             _rotate
  1204 ;;                          _robotMove
  1205 ;;                          _robotTurn
  1206 ;; ---------------------------------------------------------------------------------
  1207 ;; (1) _scan360                                              8     6      2    2118
  1208 ;;                                             58 BANK0      8     6      2
  1209 ;;                    _readAvgDistance
  1210 ;;                             _rotate
  1211 ;;                      _UpdateDisplay
  1212 ;; ---------------------------------------------------------------------------------
  1213 ;; (1) _calibrateIR                                          0     0      0    1425
  1214 ;;                             _rotate
  1215 ;;                      _UpdateDisplay
  1216 ;; ---------------------------------------------------------------------------------
  1217 ;; (2) _readAvgDistance                                      4     4      0     555
  1218 ;;                                             16 BANK0      4     4      0
  1219 ;;                       _readDistance
  1220 ;;                            ___lwdiv
  1221 ;;                         _ADCconvert
  1222 ;; ---------------------------------------------------------------------------------
  1223 ;; (2) _UpdateDisplay                                       21    21      0    1327
  1224 ;;                                             37 BANK0     21    21      0
  1225 ;;                  _lcd_write_control
  1226 ;;                            _sprintf
  1227 ;;                     _lcd_set_cursor
  1228 ;;                   _lcd_write_string
  1229 ;;                            ___awmod
  1230 ;; ---------------------------------------------------------------------------------
  1231 ;; (1) _init                                                 1     1      0      44
  1232 ;;                                              3 BANK0      1     1      0
  1233 ;;                           _init_adc
  1234 ;;                           _lcd_init
  1235 ;;                           _ser_init
  1236 ;;                          _robo_init
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (3) _readDistance                                         6     4      2      69
  1239 ;;                                              8 BANK0      6     4      2
  1240 ;;                   _adc_read_channel
  1241 ;; ---------------------------------------------------------------------------------
  1242 ;; (1) _robot_distance                                       0     0      0      44
  1243 ;;                         _robot_read
  1244 ;; ---------------------------------------------------------------------------------
  1245 ;; (2) _lcd_init                                             0     0      0      22
  1246 ;;                  _lcd_write_control
  1247 ;; ---------------------------------------------------------------------------------
  1248 ;; (3) _lcd_write_string                                     2     0      2      67
  1249 ;;                                              7 BANK0      2     0      2
  1250 ;;                     _lcd_write_data
  1251 ;;                            ___awmod (ARG)
  1252 ;; ---------------------------------------------------------------------------------
  1253 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1254 ;;                                              3 BANK0      1     1      0
  1255 ;;                  _lcd_write_control
  1256 ;; ---------------------------------------------------------------------------------
  1257 ;; (2) _robot_read                                           1     1      0      44
  1258 ;;                                              2 BANK0      1     1      0
  1259 ;;                          _ser_putch
  1260 ;; ---------------------------------------------------------------------------------
  1261 ;; (3) _sprintf                                             17    12      5     798
  1262 ;;                                             20 BANK0     17    12      5
  1263 ;;                            ___lwdiv
  1264 ;;                            ___lwmod
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (3) _ADCconvert                                           2     2      0     254
  1267 ;;                                             14 BANK0      2     2      0
  1268 ;;                             ___wmul
  1269 ;;                            ___lwdiv
  1270 ;; ---------------------------------------------------------------------------------
  1271 ;; (1) _robotTurn                                            3     1      2      88
  1272 ;;                                              2 BANK0      3     1      2
  1273 ;;                          _ser_putch
  1274 ;; ---------------------------------------------------------------------------------
  1275 ;; (1) _robotMove                                            3     1      2      88
  1276 ;;                                              2 BANK0      3     1      2
  1277 ;;                          _ser_putch
  1278 ;; ---------------------------------------------------------------------------------
  1279 ;; (1) _rotate                                               7     4      3      98
  1280 ;;                                              3 BANK0      7     4      3
  1281 ;;                       _spi_transfer
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; (2) _robo_init                                            0     0      0      22
  1284 ;;                          _ser_putch
  1285 ;; ---------------------------------------------------------------------------------
  1286 ;; (4) _lcd_write_data                                       3     3      0      22
  1287 ;;                                              0 BANK0      3     3      0
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; (4) _lcd_write_control                                    3     3      0      22
  1290 ;;                                              0 BANK0      3     3      0
  1291 ;; ---------------------------------------------------------------------------------
  1292 ;; (2) _init_adc                                             1     1      0       0
  1293 ;;                                              0 BANK0      1     1      0
  1294 ;; ---------------------------------------------------------------------------------
  1295 ;; (4) _adc_read_channel                                     2     2      0      46
  1296 ;;                                              6 BANK0      2     2      0
  1297 ;;                           _adc_read
  1298 ;; ---------------------------------------------------------------------------------
  1299 ;; (3) ___awmod                                              7     3      4     296
  1300 ;;                                              0 BANK0      7     3      4
  1301 ;; ---------------------------------------------------------------------------------
  1302 ;; (4) ___lwmod                                              6     2      4     159
  1303 ;;                                             14 BANK0      6     2      4
  1304 ;;                            ___lwdiv (ARG)
  1305 ;; ---------------------------------------------------------------------------------
  1306 ;; (4) ___lwdiv                                              8     4      4     162
  1307 ;;                                              6 BANK0      8     4      4
  1308 ;;                             ___wmul (ARG)
  1309 ;; ---------------------------------------------------------------------------------
  1310 ;; (4) ___wmul                                               6     2      4      92
  1311 ;;                                              0 BANK0      6     2      4
  1312 ;; ---------------------------------------------------------------------------------
  1313 ;; (2) _ser_putch                                            2     2      0      22
  1314 ;;                                              0 BANK0      2     2      0
  1315 ;; ---------------------------------------------------------------------------------
  1316 ;; (2) _spi_transfer                                         3     3      0      30
  1317 ;;                                              0 BANK0      3     3      0
  1318 ;; ---------------------------------------------------------------------------------
  1319 ;; (1) _Menu                                                 1     1      0      22
  1320 ;;                                              0 BANK0      1     1      0
  1321 ;; ---------------------------------------------------------------------------------
  1322 ;; (2) _ser_init                                             1     1      0       0
  1323 ;;                                              0 BANK0      1     1      0
  1324 ;; ---------------------------------------------------------------------------------
  1325 ;; (5) _adc_read                                             6     4      2      24
  1326 ;;                                              0 BANK0      6     4      2
  1327 ;; ---------------------------------------------------------------------------------
  1328 ;; Estimated maximum stack depth 5
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1331 ;; ---------------------------------------------------------------------------------
  1332 ;; (6) _isr1                                                 6     6      0     641
  1333 ;;                                              6 COMMON     6     6      0
  1334 ;;                          i1___lwmod
  1335 ;;                        _ReadButtons
  1336 ;; ---------------------------------------------------------------------------------
  1337 ;; (7) _ReadButtons                                          0     0      0       0
  1338 ;;                           _Debounce
  1339 ;; ---------------------------------------------------------------------------------
  1340 ;; (7) i1___lwmod                                            6     2      4     641
  1341 ;;                                              0 COMMON     6     2      4
  1342 ;; ---------------------------------------------------------------------------------
  1343 ;; (8) _Debounce                                             1     1      0       0
  1344 ;;                                              0 COMMON     1     1      0
  1345 ;; ---------------------------------------------------------------------------------
  1346 ;; Estimated maximum stack depth 8
  1347 ;; ---------------------------------------------------------------------------------
  1348                           
  1349 ;; Call Graph Graphs:
  1350                           
  1351 ;; _main (ROOT)
  1352 ;;   _init
  1353 ;;     _init_adc
  1354 ;;     _lcd_init
  1355 ;;       _lcd_write_control
  1356 ;;     _ser_init
  1357 ;;     _robo_init
  1358 ;;       _ser_putch
  1359 ;;   _robot_distance
  1360 ;;     _robot_read
  1361 ;;       _ser_putch
  1362 ;;   _readAvgDistance
  1363 ;;     _readDistance
  1364 ;;       _adc_read_channel
  1365 ;;         _adc_read
  1366 ;;     ___lwdiv
  1367 ;;       ___wmul (ARG)
  1368 ;;     _ADCconvert
  1369 ;;       ___wmul
  1370 ;;       ___lwdiv
  1371 ;;         ___wmul (ARG)
  1372 ;;   _UpdateDisplay
  1373 ;;     _lcd_write_control
  1374 ;;     _sprintf
  1375 ;;       ___lwdiv
  1376 ;;         ___wmul (ARG)
  1377 ;;       ___lwmod
  1378 ;;         ___lwdiv (ARG)
  1379 ;;           ___wmul (ARG)
  1380 ;;     _lcd_set_cursor
  1381 ;;       _lcd_write_control
  1382 ;;     _lcd_write_string
  1383 ;;       _lcd_write_data
  1384 ;;       ___awmod (ARG)
  1385 ;;     ___awmod
  1386 ;;   _Menu
  1387 ;;   _calibrateIR
  1388 ;;     _rotate
  1389 ;;       _spi_transfer
  1390 ;;     _UpdateDisplay
  1391 ;;       _lcd_write_control
  1392 ;;       _sprintf
  1393 ;;         ___lwdiv
  1394 ;;           ___wmul (ARG)
  1395 ;;         ___lwmod
  1396 ;;           ___lwdiv (ARG)
  1397 ;;             ___wmul (ARG)
  1398 ;;       _lcd_set_cursor
  1399 ;;         _lcd_write_control
  1400 ;;       _lcd_write_string
  1401 ;;         _lcd_write_data
  1402 ;;         ___awmod (ARG)
  1403 ;;       ___awmod
  1404 ;;   _scan360
  1405 ;;     _readAvgDistance
  1406 ;;       _readDistance
  1407 ;;         _adc_read_channel
  1408 ;;           _adc_read
  1409 ;;       ___lwdiv
  1410 ;;         ___wmul (ARG)
  1411 ;;       _ADCconvert
  1412 ;;         ___wmul
  1413 ;;         ___lwdiv
  1414 ;;           ___wmul (ARG)
  1415 ;;     _rotate
  1416 ;;       _spi_transfer
  1417 ;;     _UpdateDisplay
  1418 ;;       _lcd_write_control
  1419 ;;       _sprintf
  1420 ;;         ___lwdiv
  1421 ;;           ___wmul (ARG)
  1422 ;;         ___lwmod
  1423 ;;           ___lwdiv (ARG)
  1424 ;;             ___wmul (ARG)
  1425 ;;       _lcd_set_cursor
  1426 ;;         _lcd_write_control
  1427 ;;       _lcd_write_string
  1428 ;;         _lcd_write_data
  1429 ;;         ___awmod (ARG)
  1430 ;;       ___awmod
  1431 ;;   _rotate
  1432 ;;     _spi_transfer
  1433 ;;   _robotMove
  1434 ;;     _ser_putch
  1435 ;;   _robotTurn
  1436 ;;     _ser_putch
  1437 ;;
  1438 ;; _isr1 (ROOT)
  1439 ;;   i1___lwmod
  1440 ;;   _ReadButtons
  1441 ;;     _Debounce
  1442 ;;
  1443                           
  1444 ;; Address spaces:
  1445                           
  1446 ;;Name               Size   Autos  Total    Cost      Usage
  1447 ;;BANK3               60      0      10       9       16.7%
  1448 ;;BITBANK3            60      0       0       8        0.0%
  1449 ;;SFR3                 0      0       0       4        0.0%
  1450 ;;BITSFR3              0      0       0       4        0.0%
  1451 ;;BANK2               60      0       0      11        0.0%
  1452 ;;BITBANK2            60      0       0      10        0.0%
  1453 ;;SFR2                 0      0       0       5        0.0%
  1454 ;;BITSFR2              0      0       0       5        0.0%
  1455 ;;SFR1                 0      0       0       2        0.0%
  1456 ;;BITSFR1              0      0       0       2        0.0%
  1457 ;;BANK1               50      0      4D       7       96.3%
  1458 ;;BITBANK1            50      0       0       6        0.0%
  1459 ;;CODE                 0      0       0       0        0.0%
  1460 ;;DATA                 0      0      C6      12        0.0%
  1461 ;;ABS                  0      0      BB       3        0.0%
  1462 ;;NULL                 0      0       0       0        0.0%
  1463 ;;STACK                0      0       B       2        0.0%
  1464 ;;BANK0               50     48      50       5      100.0%
  1465 ;;BITBANK0            50      0       1       4        1.3%
  1466 ;;SFR0                 0      0       0       1        0.0%
  1467 ;;BITSFR0              0      0       0       1        0.0%
  1468 ;;COMMON               E      C       E       1      100.0%
  1469 ;;BITCOMMON            E      0       2       0       14.3%
  1470 ;;EEDATA             100      0       0       0        0.0%
  1471                           
  1472                           	global	_main
  1473                           psect	maintext,global,class=CODE,delta=2
  1474                           global __pmaintext
  1475  0385                     __pmaintext:
  1476                           
  1477 ;; *************** function _main *****************
  1478 ;; Defined at:
  1479 ;;		line 265 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  shortwall       2   69[BANK0 ] int 
  1484 ;;  choice          1   71[BANK0 ] unsigned char 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;		None               void
  1487 ;; Registers used:
  1488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 17F/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1494 ;;      Params:         0       0       0       0       0
  1495 ;;      Locals:         0       3       0       0       0
  1496 ;;      Temps:          0       3       0       0       0
  1497 ;;      Totals:         0       6       0       0       0
  1498 ;;Total ram usage:        6 bytes
  1499 ;; Hardware stack levels required when called:    8
  1500 ;; This function calls:
  1501 ;;		_init
  1502 ;;		_robot_distance
  1503 ;;		_readAvgDistance
  1504 ;;		_UpdateDisplay
  1505 ;;		_Menu
  1506 ;;		_calibrateIR
  1507 ;;		_scan360
  1508 ;;		_rotate
  1509 ;;		_robotMove
  1510 ;;		_robotTurn
  1511 ;; This function is called by:
  1512 ;;		Startup code after reset
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           psect	maintext
  1516                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1517                           	line	265
  1518                           	global	__size_of_main
  1519  010C                     	__size_of_main	equ	__end_of_main-_main
  1520                           	
  1521  0385                     _main:	
  1522                           	opt	stack 0
  1523                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1524                           	line	270
  1525                           	
  1526  0385                     l11252:	
  1527                           ;Main.c: 270: init();
  1528  0385  120A  158A  23F8   	fcall	_init
              120A  118A         
  1529  038A  2B8B               	goto	l11254
  1530                           	line	275
  1531                           ;Main.c: 275: while(1)
  1532                           	
  1533  038B                     l2235:	
  1534                           	line	277
  1535                           	
  1536  038B                     l11254:	
  1537                           ;Main.c: 276: {
  1538                           ;Main.c: 277: unsigned char choice = 255;
  1539  038B  30FF               	movlw	(0FFh)
  1540  038C  1283               	bcf	status, 5	;RP0=0, select bank0
  1541  038D  1303               	bcf	status, 6	;RP1=0, select bank0
  1542  038E  00E2               	movwf	(??_main+0)+0
  1543  038F  0862               	movf	(??_main+0)+0,w
  1544  0390  00E7               	movwf	(main@choice)
  1545                           	line	278
  1546                           	
  1547  0391                     l11256:	
  1548                           ;Main.c: 278: int shortwall = 0;
  1549  0391  01E5               	clrf	(main@shortwall)
  1550  0392  01E6               	clrf	(main@shortwall+1)
  1551                           	line	280
  1552                           	
  1553  0393                     l11258:	
  1554                           ;Main.c: 280: if ((SCAN_FLAG == 0) & (RTC_FLAG_250MS == 1))
  1555  0393  1683               	bsf	status, 5	;RP0=1, select bank1
  1556  0394  1303               	bcf	status, 6	;RP1=0, select bank1
  1557  0395  08D4               	movf	(_SCAN_FLAG)^080h,f
  1558  0396  1D03               	skipz
  1559  0397  2B99               	goto	u4951
  1560  0398  2B9A               	goto	u4950
  1561  0399                     u4951:
  1562  0399  2BE7               	goto	l11292
  1563  039A                     u4950:
  1564                           	
  1565  039A                     l11260:	
  1566  039A  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1567  039B  2B9D               	goto	u4961
  1568  039C  2B9E               	goto	u4960
  1569  039D                     u4961:
  1570  039D  2BE7               	goto	l11292
  1571  039E                     u4960:
  1572                           	line	282
  1573                           	
  1574  039E                     l11262:	
  1575                           ;Main.c: 281: {
  1576                           ;Main.c: 282: RTC_FLAG_250MS = 0;
  1577  039E  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1578                           	line	283
  1579                           	
  1580  039F                     l11264:	
  1581                           ;Main.c: 283: robot_distance();
  1582  039F  120A  158A  21DF   	fcall	_robot_distance
              120A  118A         
  1583                           	line	284
  1584                           	
  1585  03A4                     l11266:	
  1586                           ;Main.c: 284: readAvgDistance();
  1587  03A4  120A  158A  25D4   	fcall	_readAvgDistance
              120A  118A         
  1588                           	line	285
  1589                           	
  1590  03A9                     l11268:	
  1591                           ;Main.c: 285: UpdateDisplay();
  1592  03A9  120A  118A  2238   	fcall	_UpdateDisplay
              120A  118A         
  1593  03AE  2BE7               	goto	l11292
  1594                           	line	286
  1595                           	
  1596  03AF                     l2236:	
  1597                           	line	294
  1598                           ;Main.c: 286: }
  1599                           ;Main.c: 294: switch (buttonPressed)
  1600  03AF  2BE7               	goto	l11292
  1601                           	line	296
  1602                           ;Main.c: 295: {
  1603                           ;Main.c: 296: case 1:
  1604                           	
  1605  03B0                     l2238:	
  1606                           	line	297
  1607                           	
  1608  03B0                     l11270:	
  1609                           ;Main.c: 297: Menu(1);
  1610  03B0  3001               	movlw	(01h)
  1611  03B1  120A  158A  24ED   	fcall	_Menu
              120A  118A         
  1612                           	line	299
  1613                           	
  1614  03B6                     l11272:	
  1615                           ;Main.c: 299: buttonPressed = 0;
  1616  03B6  1283               	bcf	status, 5	;RP0=0, select bank0
  1617  03B7  1303               	bcf	status, 6	;RP1=0, select bank0
  1618  03B8  01EC               	clrf	(_buttonPressed)	;volatile
  1619                           	line	301
  1620                           ;Main.c: 301: break;
  1621  03B9  2C73               	goto	l11314
  1622                           	line	302
  1623                           ;Main.c: 302: case 2:
  1624                           	
  1625  03BA                     l2240:	
  1626                           	line	303
  1627                           	
  1628  03BA                     l11274:	
  1629                           ;Main.c: 303: Menu(2);
  1630  03BA  3002               	movlw	(02h)
  1631  03BB  120A  158A  24ED   	fcall	_Menu
              120A  118A         
  1632                           	line	305
  1633                           	
  1634  03C0                     l11276:	
  1635                           ;Main.c: 305: buttonPressed = 0;
  1636  03C0  1283               	bcf	status, 5	;RP0=0, select bank0
  1637  03C1  1303               	bcf	status, 6	;RP1=0, select bank0
  1638  03C2  01EC               	clrf	(_buttonPressed)	;volatile
  1639                           	line	307
  1640                           ;Main.c: 307: break;
  1641  03C3  2C73               	goto	l11314
  1642                           	line	308
  1643                           ;Main.c: 308: case 3:
  1644                           	
  1645  03C4                     l2241:	
  1646                           	line	309
  1647                           	
  1648  03C4                     l11278:	
  1649                           ;Main.c: 309: Menu(3);
  1650  03C4  3003               	movlw	(03h)
  1651  03C5  120A  158A  24ED   	fcall	_Menu
              120A  118A         
  1652                           	line	311
  1653                           	
  1654  03CA                     l11280:	
  1655                           ;Main.c: 311: buttonPressed = 0;
  1656  03CA  1283               	bcf	status, 5	;RP0=0, select bank0
  1657  03CB  1303               	bcf	status, 6	;RP1=0, select bank0
  1658  03CC  01EC               	clrf	(_buttonPressed)	;volatile
  1659                           	line	313
  1660                           ;Main.c: 313: break;
  1661  03CD  2C73               	goto	l11314
  1662                           	line	314
  1663                           ;Main.c: 314: case 4:
  1664                           	
  1665  03CE                     l2242:	
  1666                           	line	315
  1667                           	
  1668  03CE                     l11282:	
  1669                           ;Main.c: 315: Menu(4);
  1670  03CE  3004               	movlw	(04h)
  1671  03CF  120A  158A  24ED   	fcall	_Menu
              120A  118A         
  1672                           	line	317
  1673                           	
  1674  03D4                     l11284:	
  1675                           ;Main.c: 317: buttonPressed = 0;
  1676  03D4  1283               	bcf	status, 5	;RP0=0, select bank0
  1677  03D5  1303               	bcf	status, 6	;RP1=0, select bank0
  1678  03D6  01EC               	clrf	(_buttonPressed)	;volatile
  1679                           	line	319
  1680                           ;Main.c: 319: break;
  1681  03D7  2C73               	goto	l11314
  1682                           	line	320
  1683                           ;Main.c: 320: case 5:
  1684                           	
  1685  03D8                     l2243:	
  1686                           	line	321
  1687                           	
  1688  03D8                     l11286:	
  1689                           ;Main.c: 321: choice = Menu(5);
  1690  03D8  3005               	movlw	(05h)
  1691  03D9  120A  158A  24ED   	fcall	_Menu
              120A  118A         
  1692  03DE  1283               	bcf	status, 5	;RP0=0, select bank0
  1693  03DF  1303               	bcf	status, 6	;RP1=0, select bank0
  1694  03E0  00E2               	movwf	(??_main+0)+0
  1695  03E1  0862               	movf	(??_main+0)+0,w
  1696  03E2  00E7               	movwf	(main@choice)
  1697                           	line	323
  1698                           	
  1699  03E3                     l11288:	
  1700                           ;Main.c: 323: buttonPressed = 0;
  1701  03E3  01EC               	clrf	(_buttonPressed)	;volatile
  1702                           	line	325
  1703                           ;Main.c: 325: break;
  1704  03E4  2C73               	goto	l11314
  1705                           	line	326
  1706                           ;Main.c: 326: default:
  1707                           	
  1708  03E5                     l2244:	
  1709                           	line	328
  1710                           ;Main.c: 328: break;
  1711  03E5  2C73               	goto	l11314
  1712                           	line	329
  1713                           	
  1714  03E6                     l11290:	
  1715                           ;Main.c: 329: }
  1716  03E6  2C73               	goto	l11314
  1717                           	line	294
  1718                           	
  1719  03E7                     l2237:	
  1720                           	
  1721  03E7                     l11292:	
  1722  03E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1723  03E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1724  03E9  086C               	movf	(_buttonPressed),w	;volatile
  1725                           	; Switch size 1, requested type "space"
  1726                           ; Number of cases is 5, Range of values is 1 to 5
  1727                           ; switch strategies available:
  1728                           ; Name         Instructions Cycles
  1729                           ; simple_byte           16     9 (average)
  1730                           ; direct_byte           26    11 (fixed)
  1731                           ; jumptable            263     9 (fixed)
  1732                           ;	Chosen strategy is simple_byte
  1733                           
  1734                           	opt asmopt_off
  1735  03EA  3A01               	xorlw	1^0	; case 1
  1736  03EB  1903               	skipnz
  1737  03EC  2BB0               	goto	l11270
  1738  03ED  3A03               	xorlw	2^1	; case 2
  1739  03EE  1903               	skipnz
  1740  03EF  2BBA               	goto	l11274
  1741  03F0  3A01               	xorlw	3^2	; case 3
  1742  03F1  1903               	skipnz
  1743  03F2  2BC4               	goto	l11278
  1744  03F3  3A07               	xorlw	4^3	; case 4
  1745  03F4  1903               	skipnz
  1746  03F5  2BCE               	goto	l11282
  1747  03F6  3A01               	xorlw	5^4	; case 5
  1748  03F7  1903               	skipnz
  1749  03F8  2BD8               	goto	l11286
  1750  03F9  2C73               	goto	l11314
  1751                           	opt asmopt_on
  1752                           
  1753                           	line	329
  1754                           	
  1755  03FA                     l2239:	
  1756                           	line	332
  1757                           ;Main.c: 332: switch (choice)
  1758  03FA  2C73               	goto	l11314
  1759                           	line	334
  1760                           ;Main.c: 333: {
  1761                           ;Main.c: 334: case 0:
  1762                           	
  1763  03FB                     l2246:	
  1764                           	line	335
  1765                           	
  1766  03FB                     l11294:	
  1767                           ;Main.c: 335: calibrateIR();
  1768  03FB  120A  158A  2629   	fcall	_calibrateIR
              120A  118A         
  1769                           	line	336
  1770                           ;Main.c: 336: break;
  1771  0400  2C86               	goto	l11316
  1772                           	line	337
  1773                           ;Main.c: 337: case 1:
  1774                           	
  1775  0401                     l2248:	
  1776                           	line	338
  1777                           	
  1778  0401                     l11296:	
  1779                           ;Main.c: 338: shortwall = scan360();
  1780  0401  120A  158A  26F5   	fcall	_scan360
              120A  118A         
  1781  0406  1283               	bcf	status, 5	;RP0=0, select bank0
  1782  0407  1303               	bcf	status, 6	;RP1=0, select bank0
  1783  0408  085B               	movf	(1+(?_scan360)),w
  1784  0409  01E6               	clrf	(main@shortwall+1)
  1785  040A  07E6               	addwf	(main@shortwall+1)
  1786  040B  085A               	movf	(0+(?_scan360)),w
  1787  040C  01E5               	clrf	(main@shortwall)
  1788  040D  07E5               	addwf	(main@shortwall)
  1789                           
  1790                           	line	339
  1791                           	
  1792  040E                     l11298:	
  1793                           ;Main.c: 339: rotate((400 - shortwall), 0);
  1794  040E  0965               	comf	(main@shortwall),w
  1795  040F  00E2               	movwf	(??_main+0)+0
  1796  0410  0966               	comf	(main@shortwall+1),w
  1797  0411  00E3               	movwf	((??_main+0)+0+1)
  1798  0412  0AE2               	incf	(??_main+0)+0,f
  1799  0413  1903               	skipnz
  1800  0414  0AE3               	incf	((??_main+0)+0+1),f
  1801  0415  0862               	movf	0+(??_main+0)+0,w
  1802  0416  3E90               	addlw	low(0190h)
  1803  0417  00A3               	movwf	(?_rotate)
  1804  0418  0863               	movf	1+(??_main+0)+0,w
  1805  0419  1803               	skipnc
  1806  041A  3E01               	addlw	1
  1807  041B  3E01               	addlw	high(0190h)
  1808  041C  00A4               	movwf	1+(?_rotate)
  1809  041D  01A5               	clrf	0+(?_rotate)+02h
  1810  041E  120A  158A  2584   	fcall	_rotate
              120A  118A         
  1811                           	line	340
  1812                           ;Main.c: 340: break;
  1813  0423  2C86               	goto	l11316
  1814                           	line	341
  1815                           ;Main.c: 341: case 2:
  1816                           	
  1817  0424                     l2249:	
  1818                           	line	342
  1819                           	
  1820  0424                     l11300:	
  1821                           ;Main.c: 342: _delay((unsigned long)((100)*(20000000/4000.0)));
  1822                           	opt asmopt_off
  1823  0424  3003               movlw  3
  1824  0425  1283               	bcf	status, 5	;RP0=0, select bank0
  1825  0426  1303               	bcf	status, 6	;RP1=0, select bank0
  1826  0427  00E4               movwf	((??_main+0)+0+2),f
  1827  0428  308A               movlw	138
  1828  0429  00E3               movwf	((??_main+0)+0+1),f
  1829  042A  3056               	movlw	86
  1830  042B  00E2               movwf	((??_main+0)+0),f
  1831  042C                     u4977:
  1832  042C  0BE2               	decfsz	((??_main+0)+0),f
  1833  042D  2C2C               	goto	u4977
  1834  042E  0BE3               	decfsz	((??_main+0)+0+1),f
  1835  042F  2C2C               	goto	u4977
  1836  0430  0BE4               	decfsz	((??_main+0)+0+2),f
  1837  0431  2C2C               	goto	u4977
  1838  0432  2C33               	nop2
  1839                           opt asmopt_on
  1840                           
  1841                           	line	343
  1842                           	
  1843  0433                     l11302:	
  1844                           ;Main.c: 343: robotMove(200);
  1845  0433  30C8               	movlw	low(0C8h)
  1846  0434  1283               	bcf	status, 5	;RP0=0, select bank0
  1847  0435  1303               	bcf	status, 6	;RP1=0, select bank0
  1848  0436  00A2               	movwf	(?_robotMove)
  1849  0437  3000               	movlw	high(0C8h)
  1850  0438  00A3               	movwf	((?_robotMove))+1
  1851  0439  120A  158A  2778   	fcall	_robotMove
              120A  118A         
  1852                           	line	346
  1853                           ;Main.c: 346: break;
  1854  043E  2C86               	goto	l11316
  1855                           	line	347
  1856                           ;Main.c: 347: case 3:
  1857                           	
  1858  043F                     l2250:	
  1859                           	line	348
  1860                           	
  1861  043F                     l11304:	
  1862                           ;Main.c: 348: _delay((unsigned long)((100)*(20000000/4000.0)));
  1863                           	opt asmopt_off
  1864  043F  3003               movlw  3
  1865  0440  1283               	bcf	status, 5	;RP0=0, select bank0
  1866  0441  1303               	bcf	status, 6	;RP1=0, select bank0
  1867  0442  00E4               movwf	((??_main+0)+0+2),f
  1868  0443  308A               movlw	138
  1869  0444  00E3               movwf	((??_main+0)+0+1),f
  1870  0445  3056               	movlw	86
  1871  0446  00E2               movwf	((??_main+0)+0),f
  1872  0447                     u4987:
  1873  0447  0BE2               	decfsz	((??_main+0)+0),f
  1874  0448  2C47               	goto	u4987
  1875  0449  0BE3               	decfsz	((??_main+0)+0+1),f
  1876  044A  2C47               	goto	u4987
  1877  044B  0BE4               	decfsz	((??_main+0)+0+2),f
  1878  044C  2C47               	goto	u4987
  1879  044D  2C4E               	nop2
  1880                           opt asmopt_on
  1881                           
  1882                           	line	349
  1883                           	
  1884  044E                     l11306:	
  1885                           ;Main.c: 349: robotMove(1000);
  1886  044E  30E8               	movlw	low(03E8h)
  1887  044F  1283               	bcf	status, 5	;RP0=0, select bank0
  1888  0450  1303               	bcf	status, 6	;RP1=0, select bank0
  1889  0451  00A2               	movwf	(?_robotMove)
  1890  0452  3003               	movlw	high(03E8h)
  1891  0453  00A3               	movwf	((?_robotMove))+1
  1892  0454  120A  158A  2778   	fcall	_robotMove
              120A  118A         
  1893                           	line	350
  1894                           	
  1895  0459                     l11308:	
  1896                           ;Main.c: 350: robotTurn(-90);
  1897  0459  30A6               	movlw	low(-90)
  1898  045A  1283               	bcf	status, 5	;RP0=0, select bank0
  1899  045B  1303               	bcf	status, 6	;RP1=0, select bank0
  1900  045C  00A2               	movwf	(?_robotTurn)
  1901  045D  30FF               	movlw	high(-90)
  1902  045E  00A3               	movwf	((?_robotTurn))+1
  1903  045F  120A  118A  26F9   	fcall	_robotTurn
              120A  118A         
  1904                           	line	351
  1905                           	
  1906  0464                     l11310:	
  1907                           ;Main.c: 351: robotMove(1000);
  1908  0464  30E8               	movlw	low(03E8h)
  1909  0465  1283               	bcf	status, 5	;RP0=0, select bank0
  1910  0466  1303               	bcf	status, 6	;RP1=0, select bank0
  1911  0467  00A2               	movwf	(?_robotMove)
  1912  0468  3003               	movlw	high(03E8h)
  1913  0469  00A3               	movwf	((?_robotMove))+1
  1914  046A  120A  158A  2778   	fcall	_robotMove
              120A  118A         
  1915                           	line	352
  1916                           ;Main.c: 352: break;
  1917  046F  2C86               	goto	l11316
  1918                           	line	353
  1919                           ;Main.c: 353: case 4:
  1920                           	
  1921  0470                     l2251:	
  1922                           	line	355
  1923                           ;Main.c: 355: break;
  1924  0470  2C86               	goto	l11316
  1925                           	line	358
  1926                           ;Main.c: 358: default:
  1927                           	
  1928  0471                     l2252:	
  1929                           	line	360
  1930                           ;Main.c: 360: break;
  1931  0471  2C86               	goto	l11316
  1932                           	line	361
  1933                           	
  1934  0472                     l11312:	
  1935                           ;Main.c: 361: }
  1936  0472  2C86               	goto	l11316
  1937                           	line	332
  1938                           	
  1939  0473                     l2245:	
  1940                           	
  1941  0473                     l11314:	
  1942  0473  1283               	bcf	status, 5	;RP0=0, select bank0
  1943  0474  1303               	bcf	status, 6	;RP1=0, select bank0
  1944  0475  0867               	movf	(main@choice),w
  1945                           	; Switch size 1, requested type "space"
  1946                           ; Number of cases is 5, Range of values is 0 to 4
  1947                           ; switch strategies available:
  1948                           ; Name         Instructions Cycles
  1949                           ; simple_byte           16     9 (average)
  1950                           ; direct_byte           23     8 (fixed)
  1951                           ; jumptable            260     6 (fixed)
  1952                           ; rangetable             9     6 (fixed)
  1953                           ; spacedrange           16     9 (fixed)
  1954                           ; locatedrange           5     3 (fixed)
  1955                           ;	Chosen strategy is simple_byte
  1956                           
  1957                           	opt asmopt_off
  1958  0476  3A00               	xorlw	0^0	; case 0
  1959  0477  1903               	skipnz
  1960  0478  2BFB               	goto	l11294
  1961  0479  3A01               	xorlw	1^0	; case 1
  1962  047A  1903               	skipnz
  1963  047B  2C01               	goto	l11296
  1964  047C  3A03               	xorlw	2^1	; case 2
  1965  047D  1903               	skipnz
  1966  047E  2C24               	goto	l11300
  1967  047F  3A01               	xorlw	3^2	; case 3
  1968  0480  1903               	skipnz
  1969  0481  2C3F               	goto	l11304
  1970  0482  3A07               	xorlw	4^3	; case 4
  1971  0483  1903               	skipnz
  1972  0484  2C86               	goto	l11316
  1973  0485  2C86               	goto	l11316
  1974                           	opt asmopt_on
  1975                           
  1976                           	line	361
  1977                           	
  1978  0486                     l2247:	
  1979                           	line	362
  1980                           	
  1981  0486                     l11316:	
  1982                           ;Main.c: 362: choice = 255;
  1983  0486  30FF               	movlw	(0FFh)
  1984  0487  1283               	bcf	status, 5	;RP0=0, select bank0
  1985  0488  1303               	bcf	status, 6	;RP1=0, select bank0
  1986  0489  00E2               	movwf	(??_main+0)+0
  1987  048A  0862               	movf	(??_main+0)+0,w
  1988  048B  00E7               	movwf	(main@choice)
  1989  048C  2B8B               	goto	l11254
  1990                           	line	363
  1991                           	
  1992  048D                     l2253:	
  1993                           	line	275
  1994  048D  2B8B               	goto	l11254
  1995                           	
  1996  048E                     l2254:	
  1997                           	line	364
  1998                           	
  1999  048E                     l2255:	
  2000                           	global	start
  2001  048E  120A  118A  2812   	ljmp	start
  2002                           	opt stack 0
  2003                           GLOBAL	__end_of_main
  2004  0491                     	__end_of_main:
  2005 ;; =============== function _main ends ============
  2006                           
  2007                           	signat	_main,88
  2008                           	global	_scan360
  2009                           psect	text1183,local,class=CODE,delta=2
  2010                           global __ptext1183
  2011  0EF5                     __ptext1183:
  2012                           
  2013 ;; *************** function _scan360 *****************
  2014 ;; Defined at:
  2015 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  steps           2   64[BANK0 ] int 
  2020 ;;  lowestSteps     2   62[BANK0 ] int 
  2021 ;;  lowestVal       2   60[BANK0 ] int 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  2   58[BANK0 ] int 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2031 ;;      Params:         0       2       0       0       0
  2032 ;;      Locals:         0       6       0       0       0
  2033 ;;      Temps:          0       0       0       0       0
  2034 ;;      Totals:         0       8       0       0       0
  2035 ;;Total ram usage:        8 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    7
  2038 ;; This function calls:
  2039 ;;		_readAvgDistance
  2040 ;;		_rotate
  2041 ;;		_UpdateDisplay
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           psect	text1183
  2047                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2048                           	line	236
  2049                           	global	__size_of_scan360
  2050  0083                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  2051                           	
  2052  0EF5                     _scan360:	
  2053                           	opt	stack 0
  2054                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2055                           	line	237
  2056                           	
  2057  0EF5                     l10906:	
  2058                           ;Main.c: 237: int lowestVal = 0, lowestSteps = 0;
  2059  0EF5  1283               	bcf	status, 5	;RP0=0, select bank0
  2060  0EF6  1303               	bcf	status, 6	;RP1=0, select bank0
  2061  0EF7  01DC               	clrf	(scan360@lowestVal)
  2062  0EF8  01DD               	clrf	(scan360@lowestVal+1)
  2063  0EF9  01DE               	clrf	(scan360@lowestSteps)
  2064  0EFA  01DF               	clrf	(scan360@lowestSteps+1)
  2065                           	line	238
  2066                           	
  2067  0EFB                     l10908:	
  2068                           ;Main.c: 238: SCAN_FLAG = 1;
  2069  0EFB  1683               	bsf	status, 5	;RP0=1, select bank1
  2070  0EFC  1303               	bcf	status, 6	;RP1=0, select bank1
  2071  0EFD  01D4               	clrf	(_SCAN_FLAG)^080h
  2072  0EFE  1403               	bsf	status,0
  2073  0EFF  0DD4               	rlf	(_SCAN_FLAG)^080h,f
  2074                           	line	239
  2075                           	
  2076  0F00                     l10910:	
  2077                           ;Main.c: 239: for (int steps = 0; steps < 400; steps++)
  2078  0F00  1283               	bcf	status, 5	;RP0=0, select bank0
  2079  0F01  1303               	bcf	status, 6	;RP1=0, select bank0
  2080  0F02  01E0               	clrf	(scan360@steps)
  2081  0F03  01E1               	clrf	(scan360@steps+1)
  2082                           	
  2083  0F04                     l10912:	
  2084  0F04  0861               	movf	(scan360@steps+1),w
  2085  0F05  3A80               	xorlw	80h
  2086  0F06  00FF               	movwf	btemp+1
  2087  0F07  3081               	movlw	(high(0190h))^80h
  2088  0F08  027F               	subwf	btemp+1,w
  2089  0F09  1D03               	skipz
  2090  0F0A  2F0D               	goto	u4505
  2091  0F0B  3090               	movlw	low(0190h)
  2092  0F0C  0260               	subwf	(scan360@steps),w
  2093  0F0D                     u4505:
  2094                           
  2095  0F0D  1C03               	skipc
  2096  0F0E  2F10               	goto	u4501
  2097  0F0F  2F11               	goto	u4500
  2098  0F10                     u4501:
  2099  0F10  2F13               	goto	l10916
  2100  0F11                     u4500:
  2101  0F11  2F6B               	goto	l2229
  2102                           	
  2103  0F12                     l10914:	
  2104  0F12  2F6B               	goto	l2229
  2105                           	line	240
  2106                           	
  2107  0F13                     l2228:	
  2108                           	line	241
  2109                           	
  2110  0F13                     l10916:	
  2111                           ;Main.c: 240: {
  2112                           ;Main.c: 241: readAvgDistance();
  2113  0F13  120A  158A  25D4   	fcall	_readAvgDistance
              120A  158A         
  2114                           	line	242
  2115                           	
  2116  0F18                     l10918:	
  2117                           ;Main.c: 242: if (adcVal > lowestVal)
  2118  0F18  1283               	bcf	status, 5	;RP0=0, select bank0
  2119  0F19  1303               	bcf	status, 6	;RP1=0, select bank0
  2120  0F1A  086B               	movf	(_adcVal+1),w	;volatile
  2121  0F1B  025D               	subwf	(scan360@lowestVal+1),w
  2122  0F1C  1D03               	skipz
  2123  0F1D  2F20               	goto	u4515
  2124  0F1E  086A               	movf	(_adcVal),w	;volatile
  2125  0F1F  025C               	subwf	(scan360@lowestVal),w
  2126  0F20                     u4515:
  2127  0F20  1803               	skipnc
  2128  0F21  2F23               	goto	u4511
  2129  0F22  2F24               	goto	u4510
  2130  0F23                     u4511:
  2131  0F23  2F31               	goto	l10922
  2132  0F24                     u4510:
  2133                           	line	244
  2134                           	
  2135  0F24                     l10920:	
  2136                           ;Main.c: 243: {
  2137                           ;Main.c: 244: lowestVal = adcVal;
  2138  0F24  086B               	movf	(_adcVal+1),w	;volatile
  2139  0F25  01DD               	clrf	(scan360@lowestVal+1)	;volatile
  2140  0F26  07DD               	addwf	(scan360@lowestVal+1)	;volatile
  2141  0F27  086A               	movf	(_adcVal),w	;volatile
  2142  0F28  01DC               	clrf	(scan360@lowestVal)	;volatile
  2143  0F29  07DC               	addwf	(scan360@lowestVal)	;volatile
  2144                           
  2145                           	line	245
  2146                           ;Main.c: 245: lowestSteps = steps;
  2147  0F2A  0861               	movf	(scan360@steps+1),w
  2148  0F2B  01DF               	clrf	(scan360@lowestSteps+1)
  2149  0F2C  07DF               	addwf	(scan360@lowestSteps+1)
  2150  0F2D  0860               	movf	(scan360@steps),w
  2151  0F2E  01DE               	clrf	(scan360@lowestSteps)
  2152  0F2F  07DE               	addwf	(scan360@lowestSteps)
  2153                           
  2154  0F30  2F31               	goto	l10922
  2155                           	line	247
  2156                           	
  2157  0F31                     l2230:	
  2158                           	line	248
  2159                           	
  2160  0F31                     l10922:	
  2161                           ;Main.c: 247: }
  2162                           ;Main.c: 248: rotate(1, 1);
  2163  0F31  3001               	movlw	low(01h)
  2164  0F32  00A3               	movwf	(?_rotate)
  2165  0F33  3000               	movlw	high(01h)
  2166  0F34  00A4               	movwf	((?_rotate))+1
  2167  0F35  01A5               	clrf	0+(?_rotate)+02h
  2168  0F36  1403               	bsf	status,0
  2169  0F37  0DA5               	rlf	0+(?_rotate)+02h,f
  2170  0F38  120A  158A  2584   	fcall	_rotate
              120A  158A         
  2171                           	line	250
  2172                           	
  2173  0F3D                     l10924:	
  2174                           ;Main.c: 250: if (RTC_FLAG_250MS == 1)
  2175  0F3D  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2176  0F3E  2F40               	goto	u4521
  2177  0F3F  2F41               	goto	u4520
  2178  0F40                     u4521:
  2179  0F40  2F48               	goto	l10930
  2180  0F41                     u4520:
  2181                           	line	252
  2182                           	
  2183  0F41                     l10926:	
  2184                           ;Main.c: 251: {
  2185                           ;Main.c: 252: RTC_FLAG_250MS = 0;
  2186  0F41  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2187                           	line	253
  2188                           	
  2189  0F42                     l10928:	
  2190                           ;Main.c: 253: UpdateDisplay();
  2191  0F42  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2192  0F47  2F48               	goto	l10930
  2193                           	line	254
  2194                           	
  2195  0F48                     l2231:	
  2196                           	line	255
  2197                           	
  2198  0F48                     l10930:	
  2199                           ;Main.c: 254: }
  2200                           ;Main.c: 255: test = lowestSteps;
  2201  0F48  1283               	bcf	status, 5	;RP0=0, select bank0
  2202  0F49  1303               	bcf	status, 6	;RP1=0, select bank0
  2203  0F4A  085F               	movf	(scan360@lowestSteps+1),w
  2204  0F4B  1683               	bsf	status, 5	;RP0=1, select bank1
  2205  0F4C  1303               	bcf	status, 6	;RP1=0, select bank1
  2206  0F4D  01C9               	clrf	(_test+1)^080h
  2207  0F4E  07C9               	addwf	(_test+1)^080h
  2208  0F4F  1283               	bcf	status, 5	;RP0=0, select bank0
  2209  0F50  1303               	bcf	status, 6	;RP1=0, select bank0
  2210  0F51  085E               	movf	(scan360@lowestSteps),w
  2211  0F52  1683               	bsf	status, 5	;RP0=1, select bank1
  2212  0F53  1303               	bcf	status, 6	;RP1=0, select bank1
  2213  0F54  01C8               	clrf	(_test)^080h
  2214  0F55  07C8               	addwf	(_test)^080h
  2215                           
  2216                           	line	239
  2217                           	
  2218  0F56                     l10932:	
  2219  0F56  3001               	movlw	low(01h)
  2220  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  2221  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  2222  0F59  07E0               	addwf	(scan360@steps),f
  2223  0F5A  1803               	skipnc
  2224  0F5B  0AE1               	incf	(scan360@steps+1),f
  2225  0F5C  3000               	movlw	high(01h)
  2226  0F5D  07E1               	addwf	(scan360@steps+1),f
  2227                           	
  2228  0F5E                     l10934:	
  2229  0F5E  0861               	movf	(scan360@steps+1),w
  2230  0F5F  3A80               	xorlw	80h
  2231  0F60  00FF               	movwf	btemp+1
  2232  0F61  3081               	movlw	(high(0190h))^80h
  2233  0F62  027F               	subwf	btemp+1,w
  2234  0F63  1D03               	skipz
  2235  0F64  2F67               	goto	u4535
  2236  0F65  3090               	movlw	low(0190h)
  2237  0F66  0260               	subwf	(scan360@steps),w
  2238  0F67                     u4535:
  2239                           
  2240  0F67  1C03               	skipc
  2241  0F68  2F6A               	goto	u4531
  2242  0F69  2F6B               	goto	u4530
  2243  0F6A                     u4531:
  2244  0F6A  2F13               	goto	l10916
  2245  0F6B                     u4530:
  2246                           	
  2247  0F6B                     l2229:	
  2248                           	line	257
  2249                           ;Main.c: 256: }
  2250                           ;Main.c: 257: SCAN_FLAG = 0;
  2251  0F6B  1683               	bsf	status, 5	;RP0=1, select bank1
  2252  0F6C  1303               	bcf	status, 6	;RP1=0, select bank1
  2253  0F6D  01D4               	clrf	(_SCAN_FLAG)^080h
  2254                           	line	258
  2255                           	
  2256  0F6E                     l10936:	
  2257                           ;Main.c: 258: return lowestSteps;
  2258  0F6E  1283               	bcf	status, 5	;RP0=0, select bank0
  2259  0F6F  1303               	bcf	status, 6	;RP1=0, select bank0
  2260  0F70  085F               	movf	(scan360@lowestSteps+1),w
  2261  0F71  01DB               	clrf	(?_scan360+1)
  2262  0F72  07DB               	addwf	(?_scan360+1)
  2263  0F73  085E               	movf	(scan360@lowestSteps),w
  2264  0F74  01DA               	clrf	(?_scan360)
  2265  0F75  07DA               	addwf	(?_scan360)
  2266                           
  2267  0F76  2F77               	goto	l2232
  2268                           	
  2269  0F77                     l10938:	
  2270                           	line	259
  2271                           	
  2272  0F77                     l2232:	
  2273  0F77  0008               	return
  2274                           	opt stack 0
  2275                           GLOBAL	__end_of_scan360
  2276  0F78                     	__end_of_scan360:
  2277 ;; =============== function _scan360 ends ============
  2278                           
  2279                           	signat	_scan360,90
  2280                           	global	_calibrateIR
  2281                           psect	text1184,local,class=CODE,delta=2
  2282                           global __ptext1184
  2283  0E29                     __ptext1184:
  2284                           
  2285 ;; *************** function _calibrateIR *****************
  2286 ;; Defined at:
  2287 ;;		line 184 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0
  2304 ;;      Totals:         0       0       0       0       0
  2305 ;;Total ram usage:        0 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    6
  2308 ;; This function calls:
  2309 ;;		_rotate
  2310 ;;		_UpdateDisplay
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           psect	text1184
  2316                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2317                           	line	184
  2318                           	global	__size_of_calibrateIR
  2319  0064                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  2320                           	
  2321  0E29                     _calibrateIR:	
  2322                           	opt	stack 1
  2323                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2324                           	line	186
  2325                           	
  2326  0E29                     l10876:	
  2327                           ;Main.c: 186: currentMenu = 1;
  2328  0E29  1683               	bsf	status, 5	;RP0=1, select bank1
  2329  0E2A  1303               	bcf	status, 6	;RP1=0, select bank1
  2330  0E2B  01D6               	clrf	(_currentMenu)^080h
  2331  0E2C  1403               	bsf	status,0
  2332  0E2D  0DD6               	rlf	(_currentMenu)^080h,f
  2333                           	line	187
  2334                           	
  2335  0E2E                     l10878:	
  2336                           ;Main.c: 187: rotate(8, 0);
  2337  0E2E  3008               	movlw	low(08h)
  2338  0E2F  1283               	bcf	status, 5	;RP0=0, select bank0
  2339  0E30  1303               	bcf	status, 6	;RP1=0, select bank0
  2340  0E31  00A3               	movwf	(?_rotate)
  2341  0E32  3000               	movlw	high(08h)
  2342  0E33  00A4               	movwf	((?_rotate))+1
  2343  0E34  01A5               	clrf	0+(?_rotate)+02h
  2344  0E35  120A  158A  2584   	fcall	_rotate
              120A  158A         
  2345  0E3A  2E3B               	goto	l10880
  2346                           	line	188
  2347                           ;Main.c: 188: while (1)
  2348                           	
  2349  0E3B                     l2213:	
  2350                           	line	190
  2351                           	
  2352  0E3B                     l10880:	
  2353                           ;Main.c: 189: {
  2354                           ;Main.c: 190: if (RTC_FLAG_250MS == 1)
  2355  0E3B  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2356  0E3C  2E3E               	goto	u4491
  2357  0E3D  2E3F               	goto	u4490
  2358  0E3E                     u4491:
  2359  0E3E  2E77               	goto	l10904
  2360  0E3F                     u4490:
  2361                           	line	192
  2362                           	
  2363  0E3F                     l10882:	
  2364                           ;Main.c: 191: {
  2365                           ;Main.c: 192: RTC_FLAG_250MS = 0;
  2366  0E3F  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2367                           	line	193
  2368                           	
  2369  0E40                     l10884:	
  2370                           ;Main.c: 193: UpdateDisplay();
  2371  0E40  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2372  0E45  2E77               	goto	l10904
  2373                           	line	194
  2374                           	
  2375  0E46                     l2214:	
  2376                           	line	195
  2377                           ;Main.c: 194: }
  2378                           ;Main.c: 195: switch (buttonPressed)
  2379  0E46  2E77               	goto	l10904
  2380                           	line	197
  2381                           ;Main.c: 196: {
  2382                           ;Main.c: 197: case 1:
  2383                           	
  2384  0E47                     l2216:	
  2385                           	line	200
  2386                           ;Main.c: 200: buttonPressed = 0;
  2387  0E47  01EC               	clrf	(_buttonPressed)	;volatile
  2388                           	line	202
  2389                           ;Main.c: 202: break;
  2390  0E48  2E3B               	goto	l10880
  2391                           	line	203
  2392                           ;Main.c: 203: case 2:
  2393                           	
  2394  0E49                     l2218:	
  2395                           	line	206
  2396                           ;Main.c: 206: buttonPressed = 0;
  2397  0E49  01EC               	clrf	(_buttonPressed)	;volatile
  2398                           	line	208
  2399                           ;Main.c: 208: break;
  2400  0E4A  2E3B               	goto	l10880
  2401                           	line	209
  2402                           ;Main.c: 209: case 3:
  2403                           	
  2404  0E4B                     l2219:	
  2405                           	line	210
  2406                           	
  2407  0E4B                     l10886:	
  2408                           ;Main.c: 210: rotate(1, 1);
  2409  0E4B  3001               	movlw	low(01h)
  2410  0E4C  00A3               	movwf	(?_rotate)
  2411  0E4D  3000               	movlw	high(01h)
  2412  0E4E  00A4               	movwf	((?_rotate))+1
  2413  0E4F  01A5               	clrf	0+(?_rotate)+02h
  2414  0E50  1403               	bsf	status,0
  2415  0E51  0DA5               	rlf	0+(?_rotate)+02h,f
  2416  0E52  120A  158A  2584   	fcall	_rotate
              120A  158A         
  2417                           	line	212
  2418                           	
  2419  0E57                     l10888:	
  2420                           ;Main.c: 212: buttonPressed = 0;
  2421  0E57  1283               	bcf	status, 5	;RP0=0, select bank0
  2422  0E58  1303               	bcf	status, 6	;RP1=0, select bank0
  2423  0E59  01EC               	clrf	(_buttonPressed)	;volatile
  2424                           	line	214
  2425                           ;Main.c: 214: break;
  2426  0E5A  2E3B               	goto	l10880
  2427                           	line	215
  2428                           ;Main.c: 215: case 4:
  2429                           	
  2430  0E5B                     l2220:	
  2431                           	line	216
  2432                           	
  2433  0E5B                     l10890:	
  2434                           ;Main.c: 216: rotate(1, 0);
  2435  0E5B  3001               	movlw	low(01h)
  2436  0E5C  00A3               	movwf	(?_rotate)
  2437  0E5D  3000               	movlw	high(01h)
  2438  0E5E  00A4               	movwf	((?_rotate))+1
  2439  0E5F  01A5               	clrf	0+(?_rotate)+02h
  2440  0E60  120A  158A  2584   	fcall	_rotate
              120A  158A         
  2441                           	line	218
  2442                           	
  2443  0E65                     l10892:	
  2444                           ;Main.c: 218: buttonPressed = 0;
  2445  0E65  1283               	bcf	status, 5	;RP0=0, select bank0
  2446  0E66  1303               	bcf	status, 6	;RP1=0, select bank0
  2447  0E67  01EC               	clrf	(_buttonPressed)	;volatile
  2448                           	line	220
  2449                           ;Main.c: 220: break;
  2450  0E68  2E3B               	goto	l10880
  2451                           	line	221
  2452                           ;Main.c: 221: case 5:
  2453                           	
  2454  0E69                     l2221:	
  2455                           	line	222
  2456                           	
  2457  0E69                     l10894:	
  2458                           ;Main.c: 222: totalSteps = 0;
  2459  0E69  1683               	bsf	status, 5	;RP0=1, select bank1
  2460  0E6A  1303               	bcf	status, 6	;RP1=0, select bank1
  2461  0E6B  01CC               	clrf	(_totalSteps)^080h
  2462  0E6C  01CD               	clrf	(_totalSteps+1)^080h
  2463                           	line	224
  2464                           	
  2465  0E6D                     l10896:	
  2466                           ;Main.c: 224: buttonPressed = 0;
  2467  0E6D  1283               	bcf	status, 5	;RP0=0, select bank0
  2468  0E6E  1303               	bcf	status, 6	;RP1=0, select bank0
  2469  0E6F  01EC               	clrf	(_buttonPressed)	;volatile
  2470                           	line	225
  2471                           	
  2472  0E70                     l10898:	
  2473                           ;Main.c: 225: currentMenu = 0;
  2474  0E70  1683               	bsf	status, 5	;RP0=1, select bank1
  2475  0E71  1303               	bcf	status, 6	;RP1=0, select bank1
  2476  0E72  01D6               	clrf	(_currentMenu)^080h
  2477  0E73  2E8C               	goto	l2222
  2478                           	line	226
  2479                           	
  2480  0E74                     l10900:	
  2481                           ;Main.c: 226: return;
  2482  0E74  2E8C               	goto	l2222
  2483                           	line	228
  2484                           ;Main.c: 228: default:
  2485                           	
  2486  0E75                     l2223:	
  2487                           	line	230
  2488                           ;Main.c: 230: break;
  2489  0E75  2E3B               	goto	l10880
  2490                           	line	231
  2491                           	
  2492  0E76                     l10902:	
  2493                           ;Main.c: 231: }
  2494  0E76  2E3B               	goto	l10880
  2495                           	line	195
  2496                           	
  2497  0E77                     l2215:	
  2498                           	
  2499  0E77                     l10904:	
  2500  0E77  1283               	bcf	status, 5	;RP0=0, select bank0
  2501  0E78  1303               	bcf	status, 6	;RP1=0, select bank0
  2502  0E79  086C               	movf	(_buttonPressed),w	;volatile
  2503                           	; Switch size 1, requested type "space"
  2504                           ; Number of cases is 5, Range of values is 1 to 5
  2505                           ; switch strategies available:
  2506                           ; Name         Instructions Cycles
  2507                           ; simple_byte           16     9 (average)
  2508                           ; direct_byte           26    11 (fixed)
  2509                           ; jumptable            263     9 (fixed)
  2510                           ;	Chosen strategy is simple_byte
  2511                           
  2512                           	opt asmopt_off
  2513  0E7A  3A01               	xorlw	1^0	; case 1
  2514  0E7B  1903               	skipnz
  2515  0E7C  2E47               	goto	l2216
  2516  0E7D  3A03               	xorlw	2^1	; case 2
  2517  0E7E  1903               	skipnz
  2518  0E7F  2E49               	goto	l2218
  2519  0E80  3A01               	xorlw	3^2	; case 3
  2520  0E81  1903               	skipnz
  2521  0E82  2E4B               	goto	l10886
  2522  0E83  3A07               	xorlw	4^3	; case 4
  2523  0E84  1903               	skipnz
  2524  0E85  2E5B               	goto	l10890
  2525  0E86  3A01               	xorlw	5^4	; case 5
  2526  0E87  1903               	skipnz
  2527  0E88  2E69               	goto	l10894
  2528  0E89  2E3B               	goto	l10880
  2529                           	opt asmopt_on
  2530                           
  2531                           	line	231
  2532                           	
  2533  0E8A                     l2217:	
  2534  0E8A  2E3B               	goto	l10880
  2535                           	line	232
  2536                           	
  2537  0E8B                     l2224:	
  2538                           	line	188
  2539  0E8B  2E3B               	goto	l10880
  2540                           	
  2541  0E8C                     l2225:	
  2542                           	line	233
  2543                           	
  2544  0E8C                     l2222:	
  2545  0E8C  0008               	return
  2546                           	opt stack 0
  2547                           GLOBAL	__end_of_calibrateIR
  2548  0E8D                     	__end_of_calibrateIR:
  2549 ;; =============== function _calibrateIR ends ============
  2550                           
  2551                           	signat	_calibrateIR,88
  2552                           	global	_readAvgDistance
  2553                           psect	text1185,local,class=CODE,delta=2
  2554                           global __ptext1185
  2555  0DD4                     __ptext1185:
  2556                           
  2557 ;; *************** function _readAvgDistance *****************
  2558 ;; Defined at:
  2559 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  i               2   18[BANK0 ] int 
  2564 ;;  fullval         2   16[BANK0 ] unsigned int 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;		None               void
  2567 ;; Registers used:
  2568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2574 ;;      Params:         0       0       0       0       0
  2575 ;;      Locals:         0       4       0       0       0
  2576 ;;      Temps:          0       0       0       0       0
  2577 ;;      Totals:         0       4       0       0       0
  2578 ;;Total ram usage:        4 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:    6
  2581 ;; This function calls:
  2582 ;;		_readDistance
  2583 ;;		___lwdiv
  2584 ;;		_ADCconvert
  2585 ;; This function is called by:
  2586 ;;		_scan360
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           psect	text1185
  2591                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  2592                           	line	10
  2593                           	global	__size_of_readAvgDistance
  2594  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  2595                           	
  2596  0DD4                     _readAvgDistance:	
  2597                           	opt	stack 0
  2598                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2599                           	line	11
  2600                           	
  2601  0DD4                     l10862:	
  2602                           ;infrared.c: 11: unsigned int fullval = 0;
  2603  0DD4  1283               	bcf	status, 5	;RP0=0, select bank0
  2604  0DD5  1303               	bcf	status, 6	;RP1=0, select bank0
  2605  0DD6  01B0               	clrf	(readAvgDistance@fullval)
  2606  0DD7  01B1               	clrf	(readAvgDistance@fullval+1)
  2607                           	line	14
  2608                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  2609  0DD8  01B2               	clrf	(readAvgDistance@i)
  2610  0DD9  01B3               	clrf	(readAvgDistance@i+1)
  2611                           	
  2612  0DDA                     l10864:	
  2613  0DDA  0833               	movf	(readAvgDistance@i+1),w
  2614  0DDB  3A80               	xorlw	80h
  2615  0DDC  00FF               	movwf	btemp+1
  2616  0DDD  3080               	movlw	(high(0Ah))^80h
  2617  0DDE  027F               	subwf	btemp+1,w
  2618  0DDF  1D03               	skipz
  2619  0DE0  2DE3               	goto	u4475
  2620  0DE1  300A               	movlw	low(0Ah)
  2621  0DE2  0232               	subwf	(readAvgDistance@i),w
  2622  0DE3                     u4475:
  2623                           
  2624  0DE3  1C03               	skipc
  2625  0DE4  2DE6               	goto	u4471
  2626  0DE5  2DE7               	goto	u4470
  2627  0DE6                     u4471:
  2628  0DE6  2DE9               	goto	l10868
  2629  0DE7                     u4470:
  2630  0DE7  2E0A               	goto	l10874
  2631                           	
  2632  0DE8                     l10866:	
  2633  0DE8  2E0A               	goto	l10874
  2634                           	line	15
  2635                           	
  2636  0DE9                     l2958:	
  2637                           	line	16
  2638                           	
  2639  0DE9                     l10868:	
  2640                           ;infrared.c: 15: {
  2641                           ;infrared.c: 16: fullval += readDistance();
  2642  0DE9  120A  158A  2289   	fcall	_readDistance
              120A  158A         
  2643  0DEE  1283               	bcf	status, 5	;RP0=0, select bank0
  2644  0DEF  1303               	bcf	status, 6	;RP1=0, select bank0
  2645  0DF0  0828               	movf	(0+(?_readDistance)),w
  2646  0DF1  07B0               	addwf	(readAvgDistance@fullval),f
  2647  0DF2  1803               	skipnc
  2648  0DF3  0AB1               	incf	(readAvgDistance@fullval+1),f
  2649  0DF4  0829               	movf	(1+(?_readDistance)),w
  2650  0DF5  07B1               	addwf	(readAvgDistance@fullval+1),f
  2651                           	line	14
  2652                           	
  2653  0DF6                     l10870:	
  2654  0DF6  3001               	movlw	low(01h)
  2655  0DF7  07B2               	addwf	(readAvgDistance@i),f
  2656  0DF8  1803               	skipnc
  2657  0DF9  0AB3               	incf	(readAvgDistance@i+1),f
  2658  0DFA  3000               	movlw	high(01h)
  2659  0DFB  07B3               	addwf	(readAvgDistance@i+1),f
  2660                           	
  2661  0DFC                     l10872:	
  2662  0DFC  0833               	movf	(readAvgDistance@i+1),w
  2663  0DFD  3A80               	xorlw	80h
  2664  0DFE  00FF               	movwf	btemp+1
  2665  0DFF  3080               	movlw	(high(0Ah))^80h
  2666  0E00  027F               	subwf	btemp+1,w
  2667  0E01  1D03               	skipz
  2668  0E02  2E05               	goto	u4485
  2669  0E03  300A               	movlw	low(0Ah)
  2670  0E04  0232               	subwf	(readAvgDistance@i),w
  2671  0E05                     u4485:
  2672                           
  2673  0E05  1C03               	skipc
  2674  0E06  2E08               	goto	u4481
  2675  0E07  2E09               	goto	u4480
  2676  0E08                     u4481:
  2677  0E08  2DE9               	goto	l10868
  2678  0E09                     u4480:
  2679  0E09  2E0A               	goto	l10874
  2680                           	
  2681  0E0A                     l2959:	
  2682                           	line	19
  2683                           	
  2684  0E0A                     l10874:	
  2685                           ;infrared.c: 18: }
  2686                           ;infrared.c: 19: adcVal = fullval / 10;
  2687  0E0A  300A               	movlw	low(0Ah)
  2688  0E0B  1283               	bcf	status, 5	;RP0=0, select bank0
  2689  0E0C  1303               	bcf	status, 6	;RP1=0, select bank0
  2690  0E0D  00A6               	movwf	(?___lwdiv)
  2691  0E0E  3000               	movlw	high(0Ah)
  2692  0E0F  00A7               	movwf	((?___lwdiv))+1
  2693  0E10  0831               	movf	(readAvgDistance@fullval+1),w
  2694  0E11  01A9               	clrf	1+(?___lwdiv)+02h
  2695  0E12  07A9               	addwf	1+(?___lwdiv)+02h
  2696  0E13  0830               	movf	(readAvgDistance@fullval),w
  2697  0E14  01A8               	clrf	0+(?___lwdiv)+02h
  2698  0E15  07A8               	addwf	0+(?___lwdiv)+02h
  2699                           
  2700  0E16  120A  158A  2534   	fcall	___lwdiv
              120A  158A         
  2701  0E1B  1283               	bcf	status, 5	;RP0=0, select bank0
  2702  0E1C  1303               	bcf	status, 6	;RP1=0, select bank0
  2703  0E1D  0827               	movf	(1+(?___lwdiv)),w
  2704  0E1E  01EB               	clrf	(_adcVal+1)	;volatile
  2705  0E1F  07EB               	addwf	(_adcVal+1)	;volatile
  2706  0E20  0826               	movf	(0+(?___lwdiv)),w
  2707  0E21  01EA               	clrf	(_adcVal)	;volatile
  2708  0E22  07EA               	addwf	(_adcVal)	;volatile
  2709                           
  2710                           	line	20
  2711                           ;infrared.c: 20: ADCconvert();
  2712  0E23  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  2713                           	line	21
  2714                           	
  2715  0E28                     l2960:	
  2716  0E28  0008               	return
  2717                           	opt stack 0
  2718                           GLOBAL	__end_of_readAvgDistance
  2719  0E29                     	__end_of_readAvgDistance:
  2720 ;; =============== function _readAvgDistance ends ============
  2721                           
  2722                           	signat	_readAvgDistance,88
  2723                           	global	_UpdateDisplay
  2724                           psect	text1186,local,class=CODE,delta=2
  2725                           global __ptext1186
  2726  0238                     __ptext1186:
  2727                           
  2728 ;; *************** function _UpdateDisplay *****************
  2729 ;; Defined at:
  2730 ;;		line 215 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  adcOutput      16   42[BANK0 ] unsigned char [16]
  2735 ;; Return value:  Size  Location     Type
  2736 ;;		None               void
  2737 ;; Registers used:
  2738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2744 ;;      Params:         0       0       0       0       0
  2745 ;;      Locals:         0      16       0       0       0
  2746 ;;      Temps:          0       5       0       0       0
  2747 ;;      Totals:         0      21       0       0       0
  2748 ;;Total ram usage:       21 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    5
  2751 ;; This function calls:
  2752 ;;		_lcd_write_control
  2753 ;;		_sprintf
  2754 ;;		_lcd_set_cursor
  2755 ;;		_lcd_write_string
  2756 ;;		___awmod
  2757 ;; This function is called by:
  2758 ;;		_calibrateIR
  2759 ;;		_scan360
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           psect	text1186
  2764                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  2765                           	line	215
  2766                           	global	__size_of_UpdateDisplay
  2767  014D                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  2768                           	
  2769  0238                     _UpdateDisplay:	
  2770                           	opt	stack 1
  2771                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2772                           	line	216
  2773                           	
  2774  0238                     l10822:	
  2775                           ;HMI.c: 216: char adcOutput[16] = "";
  2776  0238  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2777  0239  0084               	movwf	fsr0
  2778  023A  3090               	movlw	low(UpdateDisplay@F1230)
  2779  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  2780  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  2781  023D  00C5               	movwf	(??_UpdateDisplay+0)+0
  2782  023E  0804               	movf	fsr0,w
  2783  023F  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  2784  0240  3010               	movlw	16
  2785  0241  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  2786  0242                     u4450:
  2787  0242  0845               	movf	(??_UpdateDisplay+0)+0,w
  2788  0243  0084               	movwf	fsr0
  2789  0244  1783               	bsf	status, 7	;select IRP bank3
  2790                           	
  2791  0245  0800               	movf	indf,w
  2792  0246  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  2793  0247  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  2794  0248  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  2795  0249  0084               	movwf	fsr0
  2796  024A  1383               	bcf	status, 7	;select IRP bank0
  2797                           	
  2798  024B  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  2799  024C  0080               	movwf	indf
  2800  024D  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  2801  024E  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  2802  024F  2A42               	goto	u4450
  2803                           	line	217
  2804                           ;HMI.c: 217: switch (currentMenu)
  2805  0250  2B7A               	goto	l10860
  2806                           	line	220
  2807                           ;HMI.c: 218: {
  2808                           ;HMI.c: 220: case 0:
  2809                           	
  2810  0251                     l5249:	
  2811                           	line	223
  2812                           	
  2813  0251                     l10824:	
  2814                           ;HMI.c: 223: lcd_write_control(0b00000001);
  2815  0251  3001               	movlw	(01h)
  2816  0252  120A  158A  225F   	fcall	_lcd_write_control
              120A  118A         
  2817                           	line	225
  2818                           	
  2819  0257                     l10826:	
  2820                           ;HMI.c: 225: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, distTravelled);
  2821  0257  300B               	movlw	((STR_11-__stringbase))&0ffh
  2822  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  2823  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  2824  025A  00C5               	movwf	(??_UpdateDisplay+0)+0
  2825  025B  0845               	movf	(??_UpdateDisplay+0)+0,w
  2826  025C  00B4               	movwf	(?_sprintf)
  2827  025D  086B               	movf	(_adcVal+1),w	;volatile
  2828  025E  01B6               	clrf	1+(?_sprintf)+01h
  2829  025F  07B6               	addwf	1+(?_sprintf)+01h
  2830  0260  086A               	movf	(_adcVal),w	;volatile
  2831  0261  01B5               	clrf	0+(?_sprintf)+01h
  2832  0262  07B5               	addwf	0+(?_sprintf)+01h
  2833                           
  2834  0263  1683               	bsf	status, 5	;RP0=1, select bank1
  2835  0264  1303               	bcf	status, 6	;RP1=0, select bank1
  2836  0265  086B               	movf	(_distTravelled+1)^080h,w	;volatile
  2837  0266  1283               	bcf	status, 5	;RP0=0, select bank0
  2838  0267  1303               	bcf	status, 6	;RP1=0, select bank0
  2839  0268  01B8               	clrf	1+(?_sprintf)+03h
  2840  0269  07B8               	addwf	1+(?_sprintf)+03h
  2841  026A  1683               	bsf	status, 5	;RP0=1, select bank1
  2842  026B  1303               	bcf	status, 6	;RP1=0, select bank1
  2843  026C  086A               	movf	(_distTravelled)^080h,w	;volatile
  2844  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  2845  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  2846  026F  01B7               	clrf	0+(?_sprintf)+03h
  2847  0270  07B7               	addwf	0+(?_sprintf)+03h
  2848                           
  2849  0271  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  2850  0272  120A  118A  2491   	fcall	_sprintf
              120A  118A         
  2851                           	line	228
  2852                           	
  2853  0277                     l10828:	
  2854                           ;HMI.c: 228: lcd_set_cursor(0x00);
  2855  0277  3000               	movlw	(0)
  2856  0278  120A  158A  21EE   	fcall	_lcd_set_cursor
              120A  118A         
  2857                           	line	229
  2858                           ;HMI.c: 229: lcd_write_string(adcOutput);
  2859  027D  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  2860  027E  1283               	bcf	status, 5	;RP0=0, select bank0
  2861  027F  1303               	bcf	status, 6	;RP1=0, select bank0
  2862  0280  00A7               	movwf	(?_lcd_write_string)
  2863  0281  3000               	movlw	(0x0/2)
  2864  0282  00A8               	movwf	(?_lcd_write_string+1)
  2865  0283  120A  158A  2340   	fcall	_lcd_write_string
              120A  118A         
  2866                           	line	231
  2867                           	
  2868  0288                     l10830:	
  2869                           ;HMI.c: 231: lcd_set_cursor(0x40);
  2870  0288  3040               	movlw	(040h)
  2871  0289  120A  158A  21EE   	fcall	_lcd_set_cursor
              120A  118A         
  2872                           	line	232
  2873                           	
  2874  028E                     l10832:	
  2875                           ;HMI.c: 232: if (pos > 0)
  2876  028E  1683               	bsf	status, 5	;RP0=1, select bank1
  2877  028F  1303               	bcf	status, 6	;RP1=0, select bank1
  2878  0290  0847               	movf	(_pos+1)^080h,w
  2879  0291  3A80               	xorlw	80h
  2880  0292  00FF               	movwf	btemp+1
  2881  0293  3080               	movlw	(high(01h))^80h
  2882  0294  027F               	subwf	btemp+1,w
  2883  0295  1D03               	skipz
  2884  0296  2A99               	goto	u4465
  2885  0297  3001               	movlw	low(01h)
  2886  0298  0246               	subwf	(_pos)^080h,w
  2887  0299                     u4465:
  2888                           
  2889  0299  1C03               	skipc
  2890  029A  2A9C               	goto	u4461
  2891  029B  2A9D               	goto	u4460
  2892  029C                     u4461:
  2893  029C  2AB0               	goto	l10836
  2894  029D                     u4460:
  2895                           	line	233
  2896                           	
  2897  029D                     l10834:	
  2898                           ;HMI.c: 233: lcd_write_string(shortMenuStrings[pos - 1]);
  2899  029D  1683               	bsf	status, 5	;RP0=1, select bank1
  2900  029E  1303               	bcf	status, 6	;RP1=0, select bank1
  2901  029F  0846               	movf	(_pos)^080h,w
  2902  02A0  3EFF               	addlw	0FFh
  2903  02A1  3EE5               	addlw	_shortMenuStrings&0ffh
  2904  02A2  0084               	movwf	fsr0
  2905  02A3  1383               	bcf	status, 7	;select IRP bank1
  2906  02A4  0800               	movf	indf,w
  2907  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2908  02A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2909  02A7  00A7               	movwf	(?_lcd_write_string)
  2910  02A8  3080               	movlw	80h
  2911  02A9  00A8               	movwf	(?_lcd_write_string+1)
  2912  02AA  120A  158A  2340   	fcall	_lcd_write_string
              120A  118A         
  2913  02AF  2AC3               	goto	l10838
  2914                           	line	234
  2915                           	
  2916  02B0                     l5250:	
  2917                           	line	235
  2918                           	
  2919  02B0                     l10836:	
  2920                           ;HMI.c: 234: else
  2921                           ;HMI.c: 235: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  2922  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
  2923  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
  2924  02B2  0846               	movf	(_pos)^080h,w
  2925  02B3  3E04               	addlw	04h
  2926  02B4  3EE5               	addlw	_shortMenuStrings&0ffh
  2927  02B5  0084               	movwf	fsr0
  2928  02B6  1383               	bcf	status, 7	;select IRP bank1
  2929  02B7  0800               	movf	indf,w
  2930  02B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2931  02B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2932  02BA  00A7               	movwf	(?_lcd_write_string)
  2933  02BB  3080               	movlw	80h
  2934  02BC  00A8               	movwf	(?_lcd_write_string+1)
  2935  02BD  120A  158A  2340   	fcall	_lcd_write_string
              120A  118A         
  2936  02C2  2AC3               	goto	l10838
  2937                           	
  2938  02C3                     l5251:	
  2939                           	line	236
  2940                           	
  2941  02C3                     l10838:	
  2942                           ;HMI.c: 236: lcd_set_cursor(0x44);
  2943  02C3  3044               	movlw	(044h)
  2944  02C4  120A  158A  21EE   	fcall	_lcd_set_cursor
              120A  118A         
  2945                           	line	237
  2946                           	
  2947  02C9                     l10840:	
  2948                           ;HMI.c: 237: lcd_write_string(menuStrings[pos]);
  2949  02C9  1683               	bsf	status, 5	;RP0=1, select bank1
  2950  02CA  1303               	bcf	status, 6	;RP1=0, select bank1
  2951  02CB  0846               	movf	(_pos)^080h,w
  2952  02CC  3EE0               	addlw	_menuStrings&0ffh
  2953  02CD  0084               	movwf	fsr0
  2954  02CE  1383               	bcf	status, 7	;select IRP bank1
  2955  02CF  0800               	movf	indf,w
  2956  02D0  1283               	bcf	status, 5	;RP0=0, select bank0
  2957  02D1  1303               	bcf	status, 6	;RP1=0, select bank0
  2958  02D2  00A7               	movwf	(?_lcd_write_string)
  2959  02D3  3080               	movlw	80h
  2960  02D4  00A8               	movwf	(?_lcd_write_string+1)
  2961  02D5  120A  158A  2340   	fcall	_lcd_write_string
              120A  118A         
  2962                           	line	238
  2963                           ;HMI.c: 238: lcd_set_cursor(0x4D);
  2964  02DA  304D               	movlw	(04Dh)
  2965  02DB  120A  158A  21EE   	fcall	_lcd_set_cursor
              120A  118A         
  2966                           	line	239
  2967                           	
  2968  02E0                     l10842:	
  2969                           ;HMI.c: 239: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  2970  02E0  3005               	movlw	low(05h)
  2971  02E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2972  02E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2973  02E3  00A0               	movwf	(?___awmod)
  2974  02E4  3000               	movlw	high(05h)
  2975  02E5  00A1               	movwf	((?___awmod))+1
  2976  02E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2977  02E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2978  02E8  0846               	movf	(_pos)^080h,w
  2979  02E9  3E01               	addlw	low(01h)
  2980  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2981  02EB  1303               	bcf	status, 6	;RP1=0, select bank0
  2982  02EC  00A2               	movwf	0+(?___awmod)+02h
  2983  02ED  1683               	bsf	status, 5	;RP0=1, select bank1
  2984  02EE  1303               	bcf	status, 6	;RP1=0, select bank1
  2985  02EF  0847               	movf	(_pos+1)^080h,w
  2986  02F0  1803               	skipnc
  2987  02F1  3E01               	addlw	1
  2988  02F2  3E00               	addlw	high(01h)
  2989  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  2990  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  2991  02F5  00A3               	movwf	1+0+(?___awmod)+02h
  2992  02F6  120A  158A  268D   	fcall	___awmod
              120A  118A         
  2993  02FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2994  02FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2995  02FD  0820               	movf	(0+(?___awmod)),w
  2996  02FE  3EE5               	addlw	_shortMenuStrings&0ffh
  2997  02FF  0084               	movwf	fsr0
  2998  0300  1383               	bcf	status, 7	;select IRP bank1
  2999  0301  0800               	movf	indf,w
  3000  0302  00A7               	movwf	(?_lcd_write_string)
  3001  0303  3080               	movlw	80h
  3002  0304  00A8               	movwf	(?_lcd_write_string+1)
  3003  0305  120A  158A  2340   	fcall	_lcd_write_string
              120A  118A         
  3004                           	line	240
  3005                           ;HMI.c: 240: break;
  3006  030A  2B84               	goto	l5255
  3007                           	line	241
  3008                           ;HMI.c: 241: case 1:
  3009                           	
  3010  030B                     l5253:	
  3011                           	line	242
  3012                           	
  3013  030B                     l10844:	
  3014                           ;HMI.c: 242: lcd_write_control(0b00000001);
  3015  030B  3001               	movlw	(01h)
  3016  030C  120A  158A  225F   	fcall	_lcd_write_control
              120A  118A         
  3017                           	line	244
  3018                           	
  3019  0311                     l10846:	
  3020                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  3021  0311  300B               	movlw	((STR_12-__stringbase))&0ffh
  3022  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  3023  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  3024  0314  00C5               	movwf	(??_UpdateDisplay+0)+0
  3025  0315  0845               	movf	(??_UpdateDisplay+0)+0,w
  3026  0316  00B4               	movwf	(?_sprintf)
  3027  0317  1683               	bsf	status, 5	;RP0=1, select bank1
  3028  0318  1303               	bcf	status, 6	;RP1=0, select bank1
  3029  0319  0858               	movf	(_highByte)^080h,w
  3030  031A  1283               	bcf	status, 5	;RP0=0, select bank0
  3031  031B  1303               	bcf	status, 6	;RP1=0, select bank0
  3032  031C  00C6               	movwf	(??_UpdateDisplay+1)+0
  3033  031D  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  3034  031E  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  3035  031F  00B5               	movwf	0+(?_sprintf)+01h
  3036  0320  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  3037  0321  00B6               	movwf	1+(?_sprintf)+01h
  3038  0322  1683               	bsf	status, 5	;RP0=1, select bank1
  3039  0323  1303               	bcf	status, 6	;RP1=0, select bank1
  3040  0324  0859               	movf	(_lowByte)^080h,w
  3041  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  3042  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  3043  0327  00C8               	movwf	(??_UpdateDisplay+3)+0
  3044  0328  01C9               	clrf	(??_UpdateDisplay+3)+0+1
  3045  0329  0848               	movf	0+(??_UpdateDisplay+3)+0,w
  3046  032A  00B7               	movwf	0+(?_sprintf)+03h
  3047  032B  0849               	movf	1+(??_UpdateDisplay+3)+0,w
  3048  032C  00B8               	movwf	1+(?_sprintf)+03h
  3049  032D  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3050  032E  120A  118A  2491   	fcall	_sprintf
              120A  118A         
  3051                           	line	246
  3052                           	
  3053  0333                     l10848:	
  3054                           ;HMI.c: 246: lcd_set_cursor(0x00);
  3055  0333  3000               	movlw	(0)
  3056  0334  120A  158A  21EE   	fcall	_lcd_set_cursor
              120A  118A         
  3057                           	line	247
  3058                           ;HMI.c: 247: lcd_write_string(adcOutput);
  3059  0339  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3060  033A  1283               	bcf	status, 5	;RP0=0, select bank0
  3061  033B  1303               	bcf	status, 6	;RP1=0, select bank0
  3062  033C  00A7               	movwf	(?_lcd_write_string)
  3063  033D  3000               	movlw	(0x0/2)
  3064  033E  00A8               	movwf	(?_lcd_write_string+1)
  3065  033F  120A  158A  2340   	fcall	_lcd_write_string
              120A  118A         
  3066                           	line	252
  3067                           	
  3068  0344                     l10850:	
  3069                           ;HMI.c: 252: lcd_set_cursor(0x40);
  3070  0344  3040               	movlw	(040h)
  3071  0345  120A  158A  21EE   	fcall	_lcd_set_cursor
              120A  118A         
  3072                           	line	254
  3073                           	
  3074  034A                     l10852:	
  3075                           ;HMI.c: 254: lcd_write_string("<<<");
  3076  034A  3052               	movlw	low((STR_13-__stringbase))
  3077  034B  1283               	bcf	status, 5	;RP0=0, select bank0
  3078  034C  1303               	bcf	status, 6	;RP1=0, select bank0
  3079  034D  00A7               	movwf	(?_lcd_write_string)
  3080  034E  3080               	movlw	80h
  3081  034F  00A8               	movwf	(?_lcd_write_string+1)
  3082  0350  120A  158A  2340   	fcall	_lcd_write_string
              120A  118A         
  3083                           	line	257
  3084                           ;HMI.c: 257: lcd_set_cursor(0x44);
  3085  0355  3044               	movlw	(044h)
  3086  0356  120A  158A  21EE   	fcall	_lcd_set_cursor
              120A  118A         
  3087                           	line	258
  3088                           	
  3089  035B                     l10854:	
  3090                           ;HMI.c: 258: lcd_write_string("CONFIRM");
  3091  035B  3046               	movlw	low((STR_14-__stringbase))
  3092  035C  1283               	bcf	status, 5	;RP0=0, select bank0
  3093  035D  1303               	bcf	status, 6	;RP1=0, select bank0
  3094  035E  00A7               	movwf	(?_lcd_write_string)
  3095  035F  3080               	movlw	80h
  3096  0360  00A8               	movwf	(?_lcd_write_string+1)
  3097  0361  120A  158A  2340   	fcall	_lcd_write_string
              120A  118A         
  3098                           	line	259
  3099                           	
  3100  0366                     l10856:	
  3101                           ;HMI.c: 259: lcd_set_cursor(0x4D);
  3102  0366  304D               	movlw	(04Dh)
  3103  0367  120A  158A  21EE   	fcall	_lcd_set_cursor
              120A  118A         
  3104                           	line	260
  3105                           ;HMI.c: 260: lcd_write_string(">>>");
  3106  036C  3056               	movlw	low((STR_15-__stringbase))
  3107  036D  1283               	bcf	status, 5	;RP0=0, select bank0
  3108  036E  1303               	bcf	status, 6	;RP1=0, select bank0
  3109  036F  00A7               	movwf	(?_lcd_write_string)
  3110  0370  3080               	movlw	80h
  3111  0371  00A8               	movwf	(?_lcd_write_string+1)
  3112  0372  120A  158A  2340   	fcall	_lcd_write_string
              120A  118A         
  3113                           	line	261
  3114                           ;HMI.c: 261: break;
  3115  0377  2B84               	goto	l5255
  3116                           	line	263
  3117                           ;HMI.c: 263: default:
  3118                           	
  3119  0378                     l5254:	
  3120                           	line	265
  3121                           ;HMI.c: 265: break;
  3122  0378  2B84               	goto	l5255
  3123                           	line	268
  3124                           	
  3125  0379                     l10858:	
  3126                           ;HMI.c: 268: }
  3127  0379  2B84               	goto	l5255
  3128                           	line	217
  3129                           	
  3130  037A                     l5248:	
  3131                           	
  3132  037A                     l10860:	
  3133  037A  1683               	bsf	status, 5	;RP0=1, select bank1
  3134  037B  1303               	bcf	status, 6	;RP1=0, select bank1
  3135  037C  0856               	movf	(_currentMenu)^080h,w
  3136                           	; Switch size 1, requested type "space"
  3137                           ; Number of cases is 2, Range of values is 0 to 1
  3138                           ; switch strategies available:
  3139                           ; Name         Instructions Cycles
  3140                           ; simple_byte            7     4 (average)
  3141                           ; direct_byte           14     8 (fixed)
  3142                           ; jumptable            260     6 (fixed)
  3143                           ; rangetable             6     6 (fixed)
  3144                           ; spacedrange           10     9 (fixed)
  3145                           ; locatedrange           2     3 (fixed)
  3146                           ;	Chosen strategy is simple_byte
  3147                           
  3148                           	opt asmopt_off
  3149  037D  3A00               	xorlw	0^0	; case 0
  3150  037E  1903               	skipnz
  3151  037F  2A51               	goto	l10824
  3152  0380  3A01               	xorlw	1^0	; case 1
  3153  0381  1903               	skipnz
  3154  0382  2B0B               	goto	l10844
  3155  0383  2B84               	goto	l5255
  3156                           	opt asmopt_on
  3157                           
  3158                           	line	268
  3159                           	
  3160  0384                     l5252:	
  3161                           	line	269
  3162                           	
  3163  0384                     l5255:	
  3164  0384  0008               	return
  3165                           	opt stack 0
  3166                           GLOBAL	__end_of_UpdateDisplay
  3167  0385                     	__end_of_UpdateDisplay:
  3168 ;; =============== function _UpdateDisplay ends ============
  3169                           
  3170                           	signat	_UpdateDisplay,88
  3171                           	global	_init
  3172                           psect	text1187,local,class=CODE,delta=2
  3173                           global __ptext1187
  3174  0BF8                     __ptext1187:
  3175                           
  3176 ;; *************** function _init *****************
  3177 ;; Defined at:
  3178 ;;		line 158 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;		None
  3183 ;; Return value:  Size  Location     Type
  3184 ;;		None               void
  3185 ;; Registers used:
  3186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3192 ;;      Params:         0       0       0       0       0
  3193 ;;      Locals:         0       0       0       0       0
  3194 ;;      Temps:          0       1       0       0       0
  3195 ;;      Totals:         0       1       0       0       0
  3196 ;;Total ram usage:        1 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    5
  3199 ;; This function calls:
  3200 ;;		_init_adc
  3201 ;;		_lcd_init
  3202 ;;		_ser_init
  3203 ;;		_robo_init
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           psect	text1187
  3209                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3210                           	line	158
  3211                           	global	__size_of_init
  3212  0030                     	__size_of_init	equ	__end_of_init-_init
  3213                           	
  3214  0BF8                     _init:	
  3215                           	opt	stack 2
  3216                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3217                           	line	159
  3218                           	
  3219  0BF8                     l11228:	
  3220                           ;Main.c: 159: GIE=0;
  3221  0BF8  138B               	bcf	(95/8),(95)&7
  3222                           	line	160
  3223                           	
  3224  0BF9                     l11230:	
  3225                           ;Main.c: 160: init_adc();
  3226  0BF9  120A  158A  2273   	fcall	_init_adc
              120A  158A         
  3227                           	line	161
  3228                           ;Main.c: 161: lcd_init();
  3229  0BFE  120A  158A  22E9   	fcall	_lcd_init
              120A  158A         
  3230                           	line	162
  3231                           ;Main.c: 162: ser_init();
  3232  0C03  120A  158A  236C   	fcall	_ser_init
              120A  158A         
  3233                           	line	163
  3234                           	
  3235  0C08                     l11232:	
  3236                           ;Main.c: 163: robo_init();
  3237  0C08  120A  158A  21F9   	fcall	_robo_init
              120A  158A         
  3238                           	line	165
  3239                           	
  3240  0C0D                     l11234:	
  3241                           ;Main.c: 165: TRISB = 0b11111100;
  3242  0C0D  30FC               	movlw	(0FCh)
  3243  0C0E  1683               	bsf	status, 5	;RP0=1, select bank1
  3244  0C0F  1303               	bcf	status, 6	;RP1=0, select bank1
  3245  0C10  0086               	movwf	(134)^080h	;volatile
  3246                           	line	166
  3247                           	
  3248  0C11                     l11236:	
  3249                           ;Main.c: 166: TRISC &= 0b10010000;
  3250  0C11  3090               	movlw	(090h)
  3251  0C12  1283               	bcf	status, 5	;RP0=0, select bank0
  3252  0C13  1303               	bcf	status, 6	;RP1=0, select bank0
  3253  0C14  00A3               	movwf	(??_init+0)+0
  3254  0C15  0823               	movf	(??_init+0)+0,w
  3255  0C16  1683               	bsf	status, 5	;RP0=1, select bank1
  3256  0C17  1303               	bcf	status, 6	;RP1=0, select bank1
  3257  0C18  0587               	andwf	(135)^080h,f	;volatile
  3258                           	line	168
  3259                           	
  3260  0C19                     l11238:	
  3261                           ;Main.c: 168: SSPSTAT = 0b01000000;
  3262  0C19  3040               	movlw	(040h)
  3263  0C1A  0094               	movwf	(148)^080h	;volatile
  3264                           	line	169
  3265                           	
  3266  0C1B                     l11240:	
  3267                           ;Main.c: 169: SSPCON = 0b10100001;
  3268  0C1B  30A1               	movlw	(0A1h)
  3269  0C1C  1283               	bcf	status, 5	;RP0=0, select bank0
  3270  0C1D  1303               	bcf	status, 6	;RP1=0, select bank0
  3271  0C1E  0094               	movwf	(20)	;volatile
  3272                           	line	171
  3273                           	
  3274  0C1F                     l11242:	
  3275                           ;Main.c: 171: OPTION_REG = 0b00000100;
  3276  0C1F  3004               	movlw	(04h)
  3277  0C20  1683               	bsf	status, 5	;RP0=1, select bank1
  3278  0C21  1303               	bcf	status, 6	;RP1=0, select bank1
  3279  0C22  0081               	movwf	(129)^080h	;volatile
  3280                           	line	174
  3281                           	
  3282  0C23                     l11244:	
  3283                           ;Main.c: 174: TMR0IE = 1;
  3284  0C23  168B               	bsf	(93/8),(93)&7
  3285                           	line	175
  3286                           	
  3287  0C24                     l11246:	
  3288                           ;Main.c: 175: PEIE=1;
  3289  0C24  170B               	bsf	(94/8),(94)&7
  3290                           	line	177
  3291                           	
  3292  0C25                     l11248:	
  3293                           ;Main.c: 177: GIE=1;
  3294  0C25  178B               	bsf	(95/8),(95)&7
  3295                           	line	178
  3296                           	
  3297  0C26                     l11250:	
  3298                           ;Main.c: 178: (GIE = 1);
  3299  0C26  178B               	bsf	(95/8),(95)&7
  3300                           	line	179
  3301                           	
  3302  0C27                     l2210:	
  3303  0C27  0008               	return
  3304                           	opt stack 0
  3305                           GLOBAL	__end_of_init
  3306  0C28                     	__end_of_init:
  3307 ;; =============== function _init ends ============
  3308                           
  3309                           	signat	_init,88
  3310                           	global	_readDistance
  3311                           psect	text1188,local,class=CODE,delta=2
  3312                           global __ptext1188
  3313  0A89                     __ptext1188:
  3314                           
  3315 ;; *************** function _readDistance *****************
  3316 ;; Defined at:
  3317 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  fullval         2   12[BANK0 ] unsigned int 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  2    8[BANK0 ] unsigned int 
  3324 ;; Registers used:
  3325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3331 ;;      Params:         0       2       0       0       0
  3332 ;;      Locals:         0       2       0       0       0
  3333 ;;      Temps:          0       2       0       0       0
  3334 ;;      Totals:         0       6       0       0       0
  3335 ;;Total ram usage:        6 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    5
  3338 ;; This function calls:
  3339 ;;		_adc_read_channel
  3340 ;; This function is called by:
  3341 ;;		_readAvgDistance
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           psect	text1188
  3345                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3346                           	line	24
  3347                           	global	__size_of_readDistance
  3348  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3349                           	
  3350  0A89                     _readDistance:	
  3351                           	opt	stack 0
  3352                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3353                           	line	27
  3354                           	
  3355  0A89                     l10792:	
  3356                           ;infrared.c: 25: unsigned int fullval ;
  3357                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3358  0A89  3000               	movlw	(0)
  3359  0A8A  120A  158A  2428   	fcall	_adc_read_channel
              120A  158A         
  3360  0A8F  1283               	bcf	status, 5	;RP0=0, select bank0
  3361  0A90  1303               	bcf	status, 6	;RP1=0, select bank0
  3362  0A91  00AA               	movwf	(??_readDistance+0)+0
  3363  0A92  01AB               	clrf	(??_readDistance+0)+0+1
  3364  0A93  082A               	movf	0+(??_readDistance+0)+0,w
  3365  0A94  00AC               	movwf	(readDistance@fullval)
  3366  0A95  082B               	movf	1+(??_readDistance+0)+0,w
  3367  0A96  00AD               	movwf	(readDistance@fullval+1)
  3368                           	line	29
  3369                           	
  3370  0A97                     l10794:	
  3371                           ;infrared.c: 29: return fullval;
  3372  0A97  082D               	movf	(readDistance@fullval+1),w
  3373  0A98  01A9               	clrf	(?_readDistance+1)
  3374  0A99  07A9               	addwf	(?_readDistance+1)
  3375  0A9A  082C               	movf	(readDistance@fullval),w
  3376  0A9B  01A8               	clrf	(?_readDistance)
  3377  0A9C  07A8               	addwf	(?_readDistance)
  3378                           
  3379  0A9D  2A9E               	goto	l2963
  3380                           	
  3381  0A9E                     l10796:	
  3382                           	line	30
  3383                           	
  3384  0A9E                     l2963:	
  3385  0A9E  0008               	return
  3386                           	opt stack 0
  3387                           GLOBAL	__end_of_readDistance
  3388  0A9F                     	__end_of_readDistance:
  3389 ;; =============== function _readDistance ends ============
  3390                           
  3391                           	signat	_readDistance,90
  3392                           	global	_robot_distance
  3393                           psect	text1189,local,class=CODE,delta=2
  3394                           global __ptext1189
  3395  09DF                     __ptext1189:
  3396                           
  3397 ;; *************** function _robot_distance *****************
  3398 ;; Defined at:
  3399 ;;		line 23 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    5
  3420 ;; This function calls:
  3421 ;;		_robot_read
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           psect	text1189
  3427                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3428                           	line	23
  3429                           	global	__size_of_robot_distance
  3430  0007                     	__size_of_robot_distance	equ	__end_of_robot_distance-_robot_distance
  3431                           	
  3432  09DF                     _robot_distance:	
  3433                           	opt	stack 2
  3434                           ; Regs used in _robot_distance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3435                           	line	25
  3436                           	
  3437  09DF                     l10790:	
  3438                           ;robot.c: 25: robot_read(19);
  3439  09DF  3013               	movlw	(013h)
  3440  09E0  120A  158A  2213   	fcall	_robot_read
              120A  158A         
  3441                           	line	33
  3442                           	
  3443  09E5                     l6707:	
  3444  09E5  0008               	return
  3445                           	opt stack 0
  3446                           GLOBAL	__end_of_robot_distance
  3447  09E6                     	__end_of_robot_distance:
  3448 ;; =============== function _robot_distance ends ============
  3449                           
  3450                           	signat	_robot_distance,88
  3451                           	global	_lcd_init
  3452                           psect	text1190,local,class=CODE,delta=2
  3453                           global __ptext1190
  3454  0AE9                     __ptext1190:
  3455                           
  3456 ;; *************** function _lcd_init *****************
  3457 ;; Defined at:
  3458 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;		None               void
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0, pclath, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3472 ;;      Params:         0       0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0
  3475 ;;      Totals:         0       0       0       0       0
  3476 ;;Total ram usage:        0 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    4
  3479 ;; This function calls:
  3480 ;;		_lcd_write_control
  3481 ;; This function is called by:
  3482 ;;		_init
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           psect	text1190
  3486                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3487                           	line	101
  3488                           	global	__size_of_lcd_init
  3489  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3490                           	
  3491  0AE9                     _lcd_init:	
  3492                           	opt	stack 2
  3493                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3494                           	line	105
  3495                           	
  3496  0AE9                     l10770:	
  3497                           ;lcd.c: 105: ADCON1 = 0b00000010;
  3498  0AE9  3002               	movlw	(02h)
  3499  0AEA  1683               	bsf	status, 5	;RP0=1, select bank1
  3500  0AEB  1303               	bcf	status, 6	;RP1=0, select bank1
  3501  0AEC  009F               	movwf	(159)^080h	;volatile
  3502                           	line	108
  3503                           	
  3504  0AED                     l10772:	
  3505                           ;lcd.c: 108: PORTD = 0;
  3506  0AED  1283               	bcf	status, 5	;RP0=0, select bank0
  3507  0AEE  1303               	bcf	status, 6	;RP1=0, select bank0
  3508  0AEF  0188               	clrf	(8)	;volatile
  3509                           	line	109
  3510                           	
  3511  0AF0                     l10774:	
  3512                           ;lcd.c: 109: PORTE = 0;
  3513  0AF0  0189               	clrf	(9)	;volatile
  3514                           	line	111
  3515                           	
  3516  0AF1                     l10776:	
  3517                           ;lcd.c: 111: TRISD = 0b00000000;
  3518  0AF1  1683               	bsf	status, 5	;RP0=1, select bank1
  3519  0AF2  1303               	bcf	status, 6	;RP1=0, select bank1
  3520  0AF3  0188               	clrf	(136)^080h	;volatile
  3521                           	line	112
  3522                           	
  3523  0AF4                     l10778:	
  3524                           ;lcd.c: 112: TRISE = 0b00000000;
  3525  0AF4  0189               	clrf	(137)^080h	;volatile
  3526                           	line	115
  3527                           	
  3528  0AF5                     l10780:	
  3529                           ;lcd.c: 115: lcd_write_control(0b00000001);
  3530  0AF5  3001               	movlw	(01h)
  3531  0AF6  120A  158A  225F   	fcall	_lcd_write_control
              120A  158A         
  3532                           	line	116
  3533                           	
  3534  0AFB                     l10782:	
  3535                           ;lcd.c: 116: lcd_write_control(0b00111000);
  3536  0AFB  3038               	movlw	(038h)
  3537  0AFC  120A  158A  225F   	fcall	_lcd_write_control
              120A  158A         
  3538                           	line	117
  3539                           	
  3540  0B01                     l10784:	
  3541                           ;lcd.c: 117: lcd_write_control(0b00001100);
  3542  0B01  300C               	movlw	(0Ch)
  3543  0B02  120A  158A  225F   	fcall	_lcd_write_control
              120A  158A         
  3544                           	line	118
  3545                           	
  3546  0B07                     l10786:	
  3547                           ;lcd.c: 118: lcd_write_control(0b00000110);
  3548  0B07  3006               	movlw	(06h)
  3549  0B08  120A  158A  225F   	fcall	_lcd_write_control
              120A  158A         
  3550                           	line	119
  3551                           	
  3552  0B0D                     l10788:	
  3553                           ;lcd.c: 119: lcd_write_control(0b00000010);
  3554  0B0D  3002               	movlw	(02h)
  3555  0B0E  120A  158A  225F   	fcall	_lcd_write_control
              120A  158A         
  3556                           	line	121
  3557                           	
  3558  0B13                     l1429:	
  3559  0B13  0008               	return
  3560                           	opt stack 0
  3561                           GLOBAL	__end_of_lcd_init
  3562  0B14                     	__end_of_lcd_init:
  3563 ;; =============== function _lcd_init ends ============
  3564                           
  3565                           	signat	_lcd_init,88
  3566                           	global	_lcd_write_string
  3567                           psect	text1191,local,class=CODE,delta=2
  3568                           global __ptext1191
  3569  0B40                     __ptext1191:
  3570                           
  3571 ;; *************** function _lcd_write_string *****************
  3572 ;; Defined at:
  3573 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  s               2    7[BANK0 ] PTR unsigned char 
  3576 ;;		 -> STR_15(4), STR_14(8), STR_13(4), UpdateDisplay@adcOutput(16), 
  3577 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  3578 ;;		 -> STR_6(4), STR_5(9), STR_4(8), STR_3(9), 
  3579 ;;		 -> STR_2(9), STR_1(9), 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;		None               void
  3584 ;; Registers used:
  3585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       2       0       0       0
  3592 ;;      Locals:         0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         0       2       0       0       0
  3595 ;;Total ram usage:        2 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    4
  3598 ;; This function calls:
  3599 ;;		_lcd_write_data
  3600 ;; This function is called by:
  3601 ;;		_UpdateDisplay
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           psect	text1191
  3605                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3606                           	line	48
  3607                           	global	__size_of_lcd_write_string
  3608  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3609                           	
  3610  0B40                     _lcd_write_string:	
  3611                           	opt	stack 1
  3612                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3613                           	line	50
  3614                           	
  3615  0B40                     l10762:	
  3616                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3617  0B40  2B5A               	goto	l10768
  3618                           	
  3619  0B41                     l1409:	
  3620                           	
  3621  0B41                     l10764:	
  3622  0B41  1283               	bcf	status, 5	;RP0=0, select bank0
  3623  0B42  1303               	bcf	status, 6	;RP1=0, select bank0
  3624  0B43  0828               	movf	(lcd_write_string@s+1),w
  3625  0B44  00FF               	movwf	btemp+1
  3626  0B45  0827               	movf	(lcd_write_string@s),w
  3627  0B46  0084               	movwf	fsr0
  3628  0B47  120A  118A  2781   	fcall	stringtab
              120A  158A         
  3629  0B4C  120A  158A  2225   	fcall	_lcd_write_data
              120A  158A         
  3630                           	
  3631  0B51                     l10766:	
  3632  0B51  3001               	movlw	low(01h)
  3633  0B52  1283               	bcf	status, 5	;RP0=0, select bank0
  3634  0B53  1303               	bcf	status, 6	;RP1=0, select bank0
  3635  0B54  07A7               	addwf	(lcd_write_string@s),f
  3636  0B55  1803               	skipnc
  3637  0B56  0AA8               	incf	(lcd_write_string@s+1),f
  3638  0B57  3000               	movlw	high(01h)
  3639  0B58  07A8               	addwf	(lcd_write_string@s+1),f
  3640  0B59  2B5A               	goto	l10768
  3641                           	
  3642  0B5A                     l1408:	
  3643                           	
  3644  0B5A                     l10768:	
  3645  0B5A  1283               	bcf	status, 5	;RP0=0, select bank0
  3646  0B5B  1303               	bcf	status, 6	;RP1=0, select bank0
  3647  0B5C  0828               	movf	(lcd_write_string@s+1),w
  3648  0B5D  00FF               	movwf	btemp+1
  3649  0B5E  0827               	movf	(lcd_write_string@s),w
  3650  0B5F  0084               	movwf	fsr0
  3651  0B60  120A  118A  2781   	fcall	stringtab
              120A  158A         
  3652  0B65  3800               	iorlw	0
  3653  0B66  1D03               	skipz
  3654  0B67  2B69               	goto	u4441
  3655  0B68  2B6A               	goto	u4440
  3656  0B69                     u4441:
  3657  0B69  2B41               	goto	l10764
  3658  0B6A                     u4440:
  3659  0B6A  2B6B               	goto	l1411
  3660                           	
  3661  0B6B                     l1410:	
  3662                           	line	51
  3663                           	
  3664  0B6B                     l1411:	
  3665  0B6B  0008               	return
  3666                           	opt stack 0
  3667                           GLOBAL	__end_of_lcd_write_string
  3668  0B6C                     	__end_of_lcd_write_string:
  3669 ;; =============== function _lcd_write_string ends ============
  3670                           
  3671                           	signat	_lcd_write_string,4216
  3672                           	global	_lcd_set_cursor
  3673                           psect	text1192,local,class=CODE,delta=2
  3674                           global __ptext1192
  3675  09EE                     __ptext1192:
  3676                           
  3677 ;; *************** function _lcd_set_cursor *****************
  3678 ;; Defined at:
  3679 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  address         1    wreg     unsigned char 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  address         1    3[BANK0 ] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;		None               void
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       0       0       0
  3694 ;;      Locals:         0       1       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         0       1       0       0       0
  3697 ;;Total ram usage:        1 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    4
  3700 ;; This function calls:
  3701 ;;		_lcd_write_control
  3702 ;; This function is called by:
  3703 ;;		_UpdateDisplay
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           psect	text1192
  3707                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3708                           	line	42
  3709                           	global	__size_of_lcd_set_cursor
  3710  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3711                           	
  3712  09EE                     _lcd_set_cursor:	
  3713                           	opt	stack 1
  3714                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3715                           ;lcd_set_cursor@address stored from wreg
  3716  09EE  1283               	bcf	status, 5	;RP0=0, select bank0
  3717  09EF  1303               	bcf	status, 6	;RP1=0, select bank0
  3718  09F0  00A3               	movwf	(lcd_set_cursor@address)
  3719                           	line	43
  3720                           	
  3721  09F1                     l10758:	
  3722                           ;lcd.c: 43: address |= 0b10000000;
  3723  09F1  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3724                           	line	44
  3725                           	
  3726  09F2                     l10760:	
  3727                           ;lcd.c: 44: lcd_write_control(address);
  3728  09F2  0823               	movf	(lcd_set_cursor@address),w
  3729  09F3  120A  158A  225F   	fcall	_lcd_write_control
              120A  158A         
  3730                           	line	45
  3731                           	
  3732  09F8                     l1405:	
  3733  09F8  0008               	return
  3734                           	opt stack 0
  3735                           GLOBAL	__end_of_lcd_set_cursor
  3736  09F9                     	__end_of_lcd_set_cursor:
  3737 ;; =============== function _lcd_set_cursor ends ============
  3738                           
  3739                           	signat	_lcd_set_cursor,4216
  3740                           	global	_robot_read
  3741                           psect	text1193,local,class=CODE,delta=2
  3742                           global __ptext1193
  3743  0A13                     __ptext1193:
  3744                           
  3745 ;; *************** function _robot_read *****************
  3746 ;; Defined at:
  3747 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  packet          1    wreg     unsigned char 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  packet          1    2[BANK0 ] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;		None               void
  3754 ;; Registers used:
  3755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         0       1       0       0       0
  3763 ;;      Temps:          0       0       0       0       0
  3764 ;;      Totals:         0       1       0       0       0
  3765 ;;Total ram usage:        1 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    4
  3768 ;; This function calls:
  3769 ;;		_ser_putch
  3770 ;; This function is called by:
  3771 ;;		_robot_distance
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           psect	text1193
  3775                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3776                           	line	18
  3777                           	global	__size_of_robot_read
  3778  0012                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  3779                           	
  3780  0A13                     _robot_read:	
  3781                           	opt	stack 2
  3782                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3783                           ;robot_read@packet stored from wreg
  3784  0A13  1283               	bcf	status, 5	;RP0=0, select bank0
  3785  0A14  1303               	bcf	status, 6	;RP1=0, select bank0
  3786  0A15  00A2               	movwf	(robot_read@packet)
  3787                           	line	19
  3788                           	
  3789  0A16                     l10756:	
  3790                           ;robot.c: 19: ser_putch (142);
  3791  0A16  308E               	movlw	(08Eh)
  3792  0A17  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  3793                           	line	20
  3794                           ;robot.c: 20: ser_putch (packet);
  3795  0A1C  1283               	bcf	status, 5	;RP0=0, select bank0
  3796  0A1D  1303               	bcf	status, 6	;RP1=0, select bank0
  3797  0A1E  0822               	movf	(robot_read@packet),w
  3798  0A1F  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  3799                           	line	21
  3800                           	
  3801  0A24                     l6704:	
  3802  0A24  0008               	return
  3803                           	opt stack 0
  3804                           GLOBAL	__end_of_robot_read
  3805  0A25                     	__end_of_robot_read:
  3806 ;; =============== function _robot_read ends ============
  3807                           
  3808                           	signat	_robot_read,4216
  3809                           	global	_sprintf
  3810                           psect	text1194,local,class=CODE,delta=2
  3811                           global __ptext1194
  3812  0491                     __ptext1194:
  3813                           
  3814 ;; *************** function _sprintf *****************
  3815 ;; Defined at:
  3816 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  sp              1    wreg     PTR unsigned char 
  3819 ;;		 -> UpdateDisplay@adcOutput(16), 
  3820 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  3821 ;;		 -> STR_12(15), STR_11(15), 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  3824 ;;		 -> UpdateDisplay@adcOutput(16), 
  3825 ;;  _val            4   31[BANK0 ] struct .
  3826 ;;  c               1   36[BANK0 ] char 
  3827 ;;  prec            1   30[BANK0 ] char 
  3828 ;;  flag            1   29[BANK0 ] unsigned char 
  3829 ;;  ap              1   28[BANK0 ] PTR void [1]
  3830 ;;		 -> ?_sprintf(2), 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  2   20[BANK0 ] int 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3840 ;;      Params:         0       5       0       0       0
  3841 ;;      Locals:         0       9       0       0       0
  3842 ;;      Temps:          0       3       0       0       0
  3843 ;;      Totals:         0      17       0       0       0
  3844 ;;Total ram usage:       17 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    4
  3847 ;; This function calls:
  3848 ;;		___lwdiv
  3849 ;;		___lwmod
  3850 ;; This function is called by:
  3851 ;;		_UpdateDisplay
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           psect	text1194
  3855                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  3856                           	line	488
  3857                           	global	__size_of_sprintf
  3858  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3859                           	
  3860  0491                     _sprintf:	
  3861                           	opt	stack 1
  3862                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3863                           ;sprintf@sp stored from wreg
  3864                           	line	537
  3865  0491  1283               	bcf	status, 5	;RP0=0, select bank0
  3866  0492  1303               	bcf	status, 6	;RP1=0, select bank0
  3867  0493  00C3               	movwf	(sprintf@sp)
  3868                           	
  3869  0494                     l10698:	
  3870  0494  3035               	movlw	(?_sprintf+01h)&0ffh
  3871  0495  00B9               	movwf	(??_sprintf+0)+0
  3872  0496  0839               	movf	(??_sprintf+0)+0,w
  3873  0497  00BC               	movwf	(sprintf@ap)
  3874                           	line	540
  3875  0498  2D77               	goto	l10750
  3876                           	
  3877  0499                     l6727:	
  3878                           	line	542
  3879                           	
  3880  0499                     l10700:	
  3881  0499  0844               	movf	(sprintf@c),w
  3882  049A  3A25               	xorlw	025h
  3883  049B  1903               	skipnz
  3884  049C  2C9E               	goto	u4361
  3885  049D  2C9F               	goto	u4360
  3886  049E                     u4361:
  3887  049E  2CAB               	goto	l6728
  3888  049F                     u4360:
  3889                           	line	545
  3890                           	
  3891  049F                     l10702:	
  3892  049F  0844               	movf	(sprintf@c),w
  3893  04A0  00B9               	movwf	(??_sprintf+0)+0
  3894  04A1  0843               	movf	(sprintf@sp),w
  3895  04A2  0084               	movwf	fsr0
  3896  04A3  0839               	movf	(??_sprintf+0)+0,w
  3897  04A4  1383               	bcf	status, 7	;select IRP bank0
  3898  04A5  0080               	movwf	indf
  3899                           	
  3900  04A6                     l10704:	
  3901  04A6  3001               	movlw	(01h)
  3902  04A7  00B9               	movwf	(??_sprintf+0)+0
  3903  04A8  0839               	movf	(??_sprintf+0)+0,w
  3904  04A9  07C3               	addwf	(sprintf@sp),f
  3905                           	line	546
  3906  04AA  2D77               	goto	l10750
  3907                           	line	547
  3908                           	
  3909  04AB                     l6728:	
  3910                           	line	552
  3911  04AB  01BD               	clrf	(sprintf@flag)
  3912                           	line	638
  3913  04AC  2CB2               	goto	l10708
  3914                           	line	640
  3915                           	
  3916  04AD                     l6730:	
  3917                           	line	641
  3918  04AD  2D8B               	goto	l10752
  3919                           	line	700
  3920                           	
  3921  04AE                     l6732:	
  3922  04AE  2CC7               	goto	l10710
  3923                           	line	701
  3924                           	
  3925  04AF                     l6733:	
  3926                           	line	702
  3927  04AF  2CC7               	goto	l10710
  3928                           	line	805
  3929                           	
  3930  04B0                     l6735:	
  3931                           	line	816
  3932  04B0  2D77               	goto	l10750
  3933                           	line	825
  3934                           	
  3935  04B1                     l10706:	
  3936  04B1  2CC7               	goto	l10710
  3937                           	line	638
  3938                           	
  3939  04B2                     l6729:	
  3940                           	
  3941  04B2                     l10708:	
  3942  04B2  3001               	movlw	01h
  3943  04B3  07B4               	addwf	(sprintf@f),f
  3944  04B4  30FF               	movlw	-01h
  3945  04B5  0734               	addwf	(sprintf@f),w
  3946  04B6  0084               	movwf	fsr0
  3947  04B7  120A  118A  278B   	fcall	stringdir
              120A  118A         
  3948  04BC  00C4               	movwf	(sprintf@c)
  3949                           	; Switch size 1, requested type "space"
  3950                           ; Number of cases is 3, Range of values is 0 to 105
  3951                           ; switch strategies available:
  3952                           ; Name         Instructions Cycles
  3953                           ; simple_byte           10     6 (average)
  3954                           ; jumptable            260     6 (fixed)
  3955                           ; rangetable           110     6 (fixed)
  3956                           ; spacedrange          218     9 (fixed)
  3957                           ; locatedrange         106     3 (fixed)
  3958                           ;	Chosen strategy is simple_byte
  3959                           
  3960                           	opt asmopt_off
  3961  04BD  3A00               	xorlw	0^0	; case 0
  3962  04BE  1903               	skipnz
  3963  04BF  2D8B               	goto	l10752
  3964  04C0  3A64               	xorlw	100^0	; case 100
  3965  04C1  1903               	skipnz
  3966  04C2  2CC7               	goto	l10710
  3967  04C3  3A0D               	xorlw	105^100	; case 105
  3968  04C4  1903               	skipnz
  3969  04C5  2CC7               	goto	l10710
  3970  04C6  2D77               	goto	l10750
  3971                           	opt asmopt_on
  3972                           
  3973                           	line	825
  3974                           	
  3975  04C7                     l6734:	
  3976                           	line	1254
  3977                           	
  3978  04C7                     l10710:	
  3979  04C7  083C               	movf	(sprintf@ap),w
  3980  04C8  0084               	movwf	fsr0
  3981  04C9  1383               	bcf	status, 7	;select IRP bank0
  3982  04CA  0800               	movf	indf,w
  3983  04CB  00BF               	movwf	(sprintf@_val)
  3984  04CC  0A84               	incf	fsr0,f
  3985  04CD  0800               	movf	indf,w
  3986  04CE  00C0               	movwf	(sprintf@_val+1)
  3987                           	
  3988  04CF                     l10712:	
  3989  04CF  3002               	movlw	(02h)
  3990  04D0  00B9               	movwf	(??_sprintf+0)+0
  3991  04D1  0839               	movf	(??_sprintf+0)+0,w
  3992  04D2  07BC               	addwf	(sprintf@ap),f
  3993                           	line	1256
  3994                           	
  3995  04D3                     l10714:	
  3996  04D3  1FC0               	btfss	(sprintf@_val+1),7
  3997  04D4  2CD6               	goto	u4371
  3998  04D5  2CD7               	goto	u4370
  3999  04D6                     u4371:
  4000  04D6  2CE1               	goto	l10720
  4001  04D7                     u4370:
  4002                           	line	1257
  4003                           	
  4004  04D7                     l10716:	
  4005  04D7  3003               	movlw	(03h)
  4006  04D8  00B9               	movwf	(??_sprintf+0)+0
  4007  04D9  0839               	movf	(??_sprintf+0)+0,w
  4008  04DA  04BD               	iorwf	(sprintf@flag),f
  4009                           	line	1258
  4010                           	
  4011  04DB                     l10718:	
  4012  04DB  09BF               	comf	(sprintf@_val),f
  4013  04DC  09C0               	comf	(sprintf@_val+1),f
  4014  04DD  0ABF               	incf	(sprintf@_val),f
  4015  04DE  1903               	skipnz
  4016  04DF  0AC0               	incf	(sprintf@_val+1),f
  4017  04E0  2CE1               	goto	l10720
  4018                           	line	1259
  4019                           	
  4020  04E1                     l6736:	
  4021                           	line	1300
  4022                           	
  4023  04E1                     l10720:	
  4024  04E1  01C4               	clrf	(sprintf@c)
  4025  04E2  1403               	bsf	status,0
  4026  04E3  0DC4               	rlf	(sprintf@c),f
  4027                           	
  4028  04E4                     l10722:	
  4029  04E4  0844               	movf	(sprintf@c),w
  4030  04E5  3A05               	xorlw	05h
  4031  04E6  1D03               	skipz
  4032  04E7  2CE9               	goto	u4381
  4033  04E8  2CEA               	goto	u4380
  4034  04E9                     u4381:
  4035  04E9  2CEC               	goto	l10726
  4036  04EA                     u4380:
  4037  04EA  2D14               	goto	l10734
  4038                           	
  4039  04EB                     l10724:	
  4040  04EB  2D14               	goto	l10734
  4041                           	line	1301
  4042                           	
  4043  04EC                     l6737:	
  4044                           	
  4045  04EC                     l10726:	
  4046  04EC  0844               	movf	(sprintf@c),w
  4047  04ED  00B9               	movwf	(??_sprintf+0)+0
  4048  04EE  0739               	addwf	(??_sprintf+0)+0,w
  4049  04EF  3E01               	addlw	low((_dpowers-__stringbase))
  4050  04F0  0084               	movwf	fsr0
  4051  04F1  120A  118A  278B   	fcall	stringdir
              120A  118A         
  4052  04F6  00BA               	movwf	(??_sprintf+1)+0
  4053  04F7  120A  118A  278B   	fcall	stringdir
              120A  118A         
  4054  04FC  00BB               	movwf	(??_sprintf+1)+0+1
  4055  04FD  083B               	movf	1+(??_sprintf+1)+0,w
  4056  04FE  0240               	subwf	(sprintf@_val+1),w
  4057  04FF  1D03               	skipz
  4058  0500  2D03               	goto	u4395
  4059  0501  083A               	movf	0+(??_sprintf+1)+0,w
  4060  0502  023F               	subwf	(sprintf@_val),w
  4061  0503                     u4395:
  4062  0503  1803               	skipnc
  4063  0504  2D06               	goto	u4391
  4064  0505  2D07               	goto	u4390
  4065  0506                     u4391:
  4066  0506  2D09               	goto	l10730
  4067  0507                     u4390:
  4068  0507  2D14               	goto	l10734
  4069                           	line	1302
  4070                           	
  4071  0508                     l10728:	
  4072  0508  2D14               	goto	l10734
  4073                           	
  4074  0509                     l6739:	
  4075                           	line	1300
  4076                           	
  4077  0509                     l10730:	
  4078  0509  3001               	movlw	(01h)
  4079  050A  00B9               	movwf	(??_sprintf+0)+0
  4080  050B  0839               	movf	(??_sprintf+0)+0,w
  4081  050C  07C4               	addwf	(sprintf@c),f
  4082                           	
  4083  050D                     l10732:	
  4084  050D  0844               	movf	(sprintf@c),w
  4085  050E  3A05               	xorlw	05h
  4086  050F  1D03               	skipz
  4087  0510  2D12               	goto	u4401
  4088  0511  2D13               	goto	u4400
  4089  0512                     u4401:
  4090  0512  2CEC               	goto	l10726
  4091  0513                     u4400:
  4092  0513  2D14               	goto	l10734
  4093                           	
  4094  0514                     l6738:	
  4095                           	line	1433
  4096                           	
  4097  0514                     l10734:	
  4098  0514  083D               	movf	(sprintf@flag),w
  4099  0515  3903               	andlw	03h
  4100  0516  1903               	btfsc	status,2
  4101  0517  2D19               	goto	u4411
  4102  0518  2D1A               	goto	u4410
  4103  0519                     u4411:
  4104  0519  2D26               	goto	l10740
  4105  051A                     u4410:
  4106                           	line	1434
  4107                           	
  4108  051A                     l10736:	
  4109  051A  302D               	movlw	(02Dh)
  4110  051B  00B9               	movwf	(??_sprintf+0)+0
  4111  051C  0843               	movf	(sprintf@sp),w
  4112  051D  0084               	movwf	fsr0
  4113  051E  0839               	movf	(??_sprintf+0)+0,w
  4114  051F  1383               	bcf	status, 7	;select IRP bank0
  4115  0520  0080               	movwf	indf
  4116                           	
  4117  0521                     l10738:	
  4118  0521  3001               	movlw	(01h)
  4119  0522  00B9               	movwf	(??_sprintf+0)+0
  4120  0523  0839               	movf	(??_sprintf+0)+0,w
  4121  0524  07C3               	addwf	(sprintf@sp),f
  4122  0525  2D26               	goto	l10740
  4123                           	
  4124  0526                     l6740:	
  4125                           	line	1467
  4126                           	
  4127  0526                     l10740:	
  4128  0526  0844               	movf	(sprintf@c),w
  4129  0527  00B9               	movwf	(??_sprintf+0)+0
  4130  0528  0839               	movf	(??_sprintf+0)+0,w
  4131  0529  00BE               	movwf	(sprintf@prec)
  4132                           	line	1469
  4133  052A  2D6B               	goto	l10748
  4134                           	
  4135  052B                     l6742:	
  4136                           	line	1484
  4137                           	
  4138  052B                     l10742:	
  4139  052B  300A               	movlw	low(0Ah)
  4140  052C  00AE               	movwf	(?___lwmod)
  4141  052D  3000               	movlw	high(0Ah)
  4142  052E  00AF               	movwf	((?___lwmod))+1
  4143  052F  083E               	movf	(sprintf@prec),w
  4144  0530  00B9               	movwf	(??_sprintf+0)+0
  4145  0531  0739               	addwf	(??_sprintf+0)+0,w
  4146  0532  3E01               	addlw	low((_dpowers-__stringbase))
  4147  0533  0084               	movwf	fsr0
  4148  0534  120A  118A  278B   	fcall	stringdir
              120A  118A         
  4149  0539  00A6               	movwf	(?___lwdiv)
  4150  053A  120A  118A  278B   	fcall	stringdir
              120A  118A         
  4151  053F  00A7               	movwf	(?___lwdiv+1)
  4152  0540  0840               	movf	(sprintf@_val+1),w
  4153  0541  01A9               	clrf	1+(?___lwdiv)+02h
  4154  0542  07A9               	addwf	1+(?___lwdiv)+02h
  4155  0543  083F               	movf	(sprintf@_val),w
  4156  0544  01A8               	clrf	0+(?___lwdiv)+02h
  4157  0545  07A8               	addwf	0+(?___lwdiv)+02h
  4158                           
  4159  0546  120A  158A  2534   	fcall	___lwdiv
              120A  118A         
  4160  054B  1283               	bcf	status, 5	;RP0=0, select bank0
  4161  054C  1303               	bcf	status, 6	;RP1=0, select bank0
  4162  054D  0827               	movf	(1+(?___lwdiv)),w
  4163  054E  01B1               	clrf	1+(?___lwmod)+02h
  4164  054F  07B1               	addwf	1+(?___lwmod)+02h
  4165  0550  0826               	movf	(0+(?___lwdiv)),w
  4166  0551  01B0               	clrf	0+(?___lwmod)+02h
  4167  0552  07B0               	addwf	0+(?___lwmod)+02h
  4168                           
  4169  0553  120A  158A  24A7   	fcall	___lwmod
              120A  118A         
  4170  0558  1283               	bcf	status, 5	;RP0=0, select bank0
  4171  0559  1303               	bcf	status, 6	;RP1=0, select bank0
  4172  055A  082E               	movf	(0+(?___lwmod)),w
  4173  055B  3E30               	addlw	030h
  4174  055C  00BA               	movwf	(??_sprintf+1)+0
  4175  055D  083A               	movf	(??_sprintf+1)+0,w
  4176  055E  00C4               	movwf	(sprintf@c)
  4177                           	line	1516
  4178                           	
  4179  055F                     l10744:	
  4180  055F  0844               	movf	(sprintf@c),w
  4181  0560  00B9               	movwf	(??_sprintf+0)+0
  4182  0561  0843               	movf	(sprintf@sp),w
  4183  0562  0084               	movwf	fsr0
  4184  0563  0839               	movf	(??_sprintf+0)+0,w
  4185  0564  1383               	bcf	status, 7	;select IRP bank0
  4186  0565  0080               	movwf	indf
  4187                           	
  4188  0566                     l10746:	
  4189  0566  3001               	movlw	(01h)
  4190  0567  00B9               	movwf	(??_sprintf+0)+0
  4191  0568  0839               	movf	(??_sprintf+0)+0,w
  4192  0569  07C3               	addwf	(sprintf@sp),f
  4193  056A  2D6B               	goto	l10748
  4194                           	line	1517
  4195                           	
  4196  056B                     l6741:	
  4197                           	line	1469
  4198                           	
  4199  056B                     l10748:	
  4200  056B  30FF               	movlw	(-1)
  4201  056C  00B9               	movwf	(??_sprintf+0)+0
  4202  056D  0839               	movf	(??_sprintf+0)+0,w
  4203  056E  07BE               	addwf	(sprintf@prec),f
  4204  056F  083E               	movf	((sprintf@prec)),w
  4205  0570  3AFF               	xorlw	-1
  4206  0571  1D03               	skipz
  4207  0572  2D74               	goto	u4421
  4208  0573  2D75               	goto	u4420
  4209  0574                     u4421:
  4210  0574  2D2B               	goto	l10742
  4211  0575                     u4420:
  4212  0575  2D77               	goto	l10750
  4213                           	
  4214  0576                     l6743:	
  4215  0576  2D77               	goto	l10750
  4216                           	line	1525
  4217                           	
  4218  0577                     l6726:	
  4219                           	line	540
  4220                           	
  4221  0577                     l10750:	
  4222  0577  3001               	movlw	01h
  4223  0578  07B4               	addwf	(sprintf@f),f
  4224  0579  30FF               	movlw	-01h
  4225  057A  0734               	addwf	(sprintf@f),w
  4226  057B  0084               	movwf	fsr0
  4227  057C  120A  118A  278B   	fcall	stringdir
              120A  118A         
  4228  0581  00B9               	movwf	(??_sprintf+0)+0
  4229  0582  0839               	movf	(??_sprintf+0)+0,w
  4230  0583  00C4               	movwf	(sprintf@c)
  4231  0584  08C4               	movf	((sprintf@c)),f
  4232  0585  1D03               	skipz
  4233  0586  2D88               	goto	u4431
  4234  0587  2D89               	goto	u4430
  4235  0588                     u4431:
  4236  0588  2C99               	goto	l10700
  4237  0589                     u4430:
  4238  0589  2D8B               	goto	l10752
  4239                           	
  4240  058A                     l6744:	
  4241  058A  2D8B               	goto	l10752
  4242                           	line	1527
  4243                           	
  4244  058B                     l6731:	
  4245                           	line	1530
  4246                           	
  4247  058B                     l10752:	
  4248  058B  0843               	movf	(sprintf@sp),w
  4249  058C  0084               	movwf	fsr0
  4250  058D  1383               	bcf	status, 7	;select IRP bank0
  4251  058E  0180               	clrf	indf
  4252  058F  2D90               	goto	l6745
  4253                           	line	1532
  4254                           	
  4255  0590                     l10754:	
  4256                           	line	1533
  4257                           ;	Return value of _sprintf is never used
  4258                           	
  4259  0590                     l6745:	
  4260  0590  0008               	return
  4261                           	opt stack 0
  4262                           GLOBAL	__end_of_sprintf
  4263  0591                     	__end_of_sprintf:
  4264 ;; =============== function _sprintf ends ============
  4265                           
  4266                           	signat	_sprintf,4698
  4267                           	global	_ADCconvert
  4268                           psect	text1195,local,class=CODE,delta=2
  4269                           global __ptext1195
  4270  0015                     __ptext1195:
  4271                           
  4272 ;; *************** function _ADCconvert *****************
  4273 ;; Defined at:
  4274 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;		None               void
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, pclath, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4288 ;;      Params:         0       0       0       0       0
  4289 ;;      Locals:         0       0       0       0       0
  4290 ;;      Temps:          0       2       0       0       0
  4291 ;;      Totals:         0       2       0       0       0
  4292 ;;Total ram usage:        2 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    4
  4295 ;; This function calls:
  4296 ;;		___wmul
  4297 ;;		___lwdiv
  4298 ;; This function is called by:
  4299 ;;		_readAvgDistance
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           psect	text1195
  4303                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4304                           	line	33
  4305                           	global	__size_of_ADCconvert
  4306  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  4307                           	
  4308  0015                     _ADCconvert:	
  4309                           	opt	stack 1
  4310                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  4311                           	line	39
  4312                           	
  4313  0015                     l10656:	
  4314                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  4315  0015  3000               	movlw	high(0D5h)
  4316  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  4317  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  4318  0018  026B               	subwf	(_adcVal+1),w	;volatile
  4319  0019  30D5               	movlw	low(0D5h)
  4320  001A  1903               	skipnz
  4321  001B  026A               	subwf	(_adcVal),w	;volatile
  4322  001C  1C03               	skipc
  4323  001D  281F               	goto	u4221
  4324  001E  2820               	goto	u4220
  4325  001F                     u4221:
  4326  001F  2863               	goto	l10662
  4327  0020                     u4220:
  4328                           	
  4329  0020                     l10658:	
  4330  0020  3000               	movlw	high(0EAh)
  4331  0021  026B               	subwf	(_adcVal+1),w	;volatile
  4332  0022  30EA               	movlw	low(0EAh)
  4333  0023  1903               	skipnz
  4334  0024  026A               	subwf	(_adcVal),w	;volatile
  4335  0025  1803               	skipnc
  4336  0026  2828               	goto	u4231
  4337  0027  2829               	goto	u4230
  4338  0028                     u4231:
  4339  0028  2863               	goto	l10662
  4340  0029                     u4230:
  4341                           	line	41
  4342                           	
  4343  0029                     l10660:	
  4344                           ;infrared.c: 40: {
  4345                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  4346  0029  3015               	movlw	low(015h)
  4347  002A  00A6               	movwf	(?___lwdiv)
  4348  002B  3000               	movlw	high(015h)
  4349  002C  00A7               	movwf	((?___lwdiv))+1
  4350  002D  096A               	comf	(_adcVal),w	;volatile
  4351  002E  00AE               	movwf	(??_ADCconvert+0)+0
  4352  002F  096B               	comf	(_adcVal+1),w	;volatile
  4353  0030  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4354  0031  0AAE               	incf	(??_ADCconvert+0)+0,f
  4355  0032  1903               	skipnz
  4356  0033  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4357  0034  082E               	movf	0+(??_ADCconvert+0)+0,w
  4358  0035  3EEA               	addlw	low(0EAh)
  4359  0036  00A0               	movwf	(?___wmul)
  4360  0037  082F               	movf	1+(??_ADCconvert+0)+0,w
  4361  0038  1803               	skipnc
  4362  0039  3E01               	addlw	1
  4363  003A  3E00               	addlw	high(0EAh)
  4364  003B  00A1               	movwf	1+(?___wmul)
  4365  003C  3005               	movlw	low(05h)
  4366  003D  00A2               	movwf	0+(?___wmul)+02h
  4367  003E  3000               	movlw	high(05h)
  4368  003F  00A3               	movwf	(0+(?___wmul)+02h)+1
  4369  0040  120A  158A  2314   	fcall	___wmul
              120A  118A         
  4370  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  4371  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  4372  0047  0821               	movf	(1+(?___wmul)),w
  4373  0048  01A9               	clrf	1+(?___lwdiv)+02h
  4374  0049  07A9               	addwf	1+(?___lwdiv)+02h
  4375  004A  0820               	movf	(0+(?___wmul)),w
  4376  004B  01A8               	clrf	0+(?___lwdiv)+02h
  4377  004C  07A8               	addwf	0+(?___lwdiv)+02h
  4378                           
  4379  004D  120A  158A  2534   	fcall	___lwdiv
              120A  118A         
  4380  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  4381  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  4382  0054  0826               	movf	(0+(?___lwdiv)),w
  4383  0055  3E0F               	addlw	low(0Fh)
  4384  0056  1683               	bsf	status, 5	;RP0=1, select bank1
  4385  0057  1303               	bcf	status, 6	;RP1=0, select bank1
  4386  0058  00C4               	movwf	(_distance)^080h	;volatile
  4387  0059  1283               	bcf	status, 5	;RP0=0, select bank0
  4388  005A  1303               	bcf	status, 6	;RP1=0, select bank0
  4389  005B  0827               	movf	(1+(?___lwdiv)),w
  4390  005C  1803               	skipnc
  4391  005D  3E01               	addlw	1
  4392  005E  3E00               	addlw	high(0Fh)
  4393  005F  1683               	bsf	status, 5	;RP0=1, select bank1
  4394  0060  1303               	bcf	status, 6	;RP1=0, select bank1
  4395  0061  00C5               	movwf	1+(_distance)^080h	;volatile
  4396                           	line	42
  4397                           ;infrared.c: 42: }
  4398  0062  2A37               	goto	l2979
  4399                           	line	43
  4400                           	
  4401  0063                     l2966:	
  4402                           	
  4403  0063                     l10662:	
  4404                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  4405  0063  3000               	movlw	high(0AAh)
  4406  0064  1283               	bcf	status, 5	;RP0=0, select bank0
  4407  0065  026B               	subwf	(_adcVal+1),w	;volatile
  4408  0066  30AA               	movlw	low(0AAh)
  4409  0067  1903               	skipnz
  4410  0068  026A               	subwf	(_adcVal),w	;volatile
  4411  0069  1C03               	skipc
  4412  006A  286C               	goto	u4241
  4413  006B  286D               	goto	u4240
  4414  006C                     u4241:
  4415  006C  28B0               	goto	l10668
  4416  006D                     u4240:
  4417                           	
  4418  006D                     l10664:	
  4419  006D  3000               	movlw	high(0D5h)
  4420  006E  026B               	subwf	(_adcVal+1),w	;volatile
  4421  006F  30D5               	movlw	low(0D5h)
  4422  0070  1903               	skipnz
  4423  0071  026A               	subwf	(_adcVal),w	;volatile
  4424  0072  1803               	skipnc
  4425  0073  2875               	goto	u4251
  4426  0074  2876               	goto	u4250
  4427  0075                     u4251:
  4428  0075  28B0               	goto	l10668
  4429  0076                     u4250:
  4430                           	line	45
  4431                           	
  4432  0076                     l10666:	
  4433                           ;infrared.c: 44: {
  4434                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  4435  0076  302B               	movlw	low(02Bh)
  4436  0077  00A6               	movwf	(?___lwdiv)
  4437  0078  3000               	movlw	high(02Bh)
  4438  0079  00A7               	movwf	((?___lwdiv))+1
  4439  007A  096A               	comf	(_adcVal),w	;volatile
  4440  007B  00AE               	movwf	(??_ADCconvert+0)+0
  4441  007C  096B               	comf	(_adcVal+1),w	;volatile
  4442  007D  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4443  007E  0AAE               	incf	(??_ADCconvert+0)+0,f
  4444  007F  1903               	skipnz
  4445  0080  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4446  0081  082E               	movf	0+(??_ADCconvert+0)+0,w
  4447  0082  3ED5               	addlw	low(0D5h)
  4448  0083  00A0               	movwf	(?___wmul)
  4449  0084  082F               	movf	1+(??_ADCconvert+0)+0,w
  4450  0085  1803               	skipnc
  4451  0086  3E01               	addlw	1
  4452  0087  3E00               	addlw	high(0D5h)
  4453  0088  00A1               	movwf	1+(?___wmul)
  4454  0089  300A               	movlw	low(0Ah)
  4455  008A  00A2               	movwf	0+(?___wmul)+02h
  4456  008B  3000               	movlw	high(0Ah)
  4457  008C  00A3               	movwf	(0+(?___wmul)+02h)+1
  4458  008D  120A  158A  2314   	fcall	___wmul
              120A  118A         
  4459  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  4460  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  4461  0094  0821               	movf	(1+(?___wmul)),w
  4462  0095  01A9               	clrf	1+(?___lwdiv)+02h
  4463  0096  07A9               	addwf	1+(?___lwdiv)+02h
  4464  0097  0820               	movf	(0+(?___wmul)),w
  4465  0098  01A8               	clrf	0+(?___lwdiv)+02h
  4466  0099  07A8               	addwf	0+(?___lwdiv)+02h
  4467                           
  4468  009A  120A  158A  2534   	fcall	___lwdiv
              120A  118A         
  4469  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  4470  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  4471  00A1  0826               	movf	(0+(?___lwdiv)),w
  4472  00A2  3E14               	addlw	low(014h)
  4473  00A3  1683               	bsf	status, 5	;RP0=1, select bank1
  4474  00A4  1303               	bcf	status, 6	;RP1=0, select bank1
  4475  00A5  00C4               	movwf	(_distance)^080h	;volatile
  4476  00A6  1283               	bcf	status, 5	;RP0=0, select bank0
  4477  00A7  1303               	bcf	status, 6	;RP1=0, select bank0
  4478  00A8  0827               	movf	(1+(?___lwdiv)),w
  4479  00A9  1803               	skipnc
  4480  00AA  3E01               	addlw	1
  4481  00AB  3E00               	addlw	high(014h)
  4482  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  4483  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  4484  00AE  00C5               	movwf	1+(_distance)^080h	;volatile
  4485                           	line	46
  4486                           ;infrared.c: 46: }
  4487  00AF  2A37               	goto	l2979
  4488                           	line	47
  4489                           	
  4490  00B0                     l2968:	
  4491                           	
  4492  00B0                     l10668:	
  4493                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  4494  00B0  3000               	movlw	high(080h)
  4495  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
  4496  00B2  026B               	subwf	(_adcVal+1),w	;volatile
  4497  00B3  3080               	movlw	low(080h)
  4498  00B4  1903               	skipnz
  4499  00B5  026A               	subwf	(_adcVal),w	;volatile
  4500  00B6  1C03               	skipc
  4501  00B7  28B9               	goto	u4261
  4502  00B8  28BA               	goto	u4260
  4503  00B9                     u4261:
  4504  00B9  28FD               	goto	l10674
  4505  00BA                     u4260:
  4506                           	
  4507  00BA                     l10670:	
  4508  00BA  3000               	movlw	high(0AAh)
  4509  00BB  026B               	subwf	(_adcVal+1),w	;volatile
  4510  00BC  30AA               	movlw	low(0AAh)
  4511  00BD  1903               	skipnz
  4512  00BE  026A               	subwf	(_adcVal),w	;volatile
  4513  00BF  1803               	skipnc
  4514  00C0  28C2               	goto	u4271
  4515  00C1  28C3               	goto	u4270
  4516  00C2                     u4271:
  4517  00C2  28FD               	goto	l10674
  4518  00C3                     u4270:
  4519                           	line	49
  4520                           	
  4521  00C3                     l10672:	
  4522                           ;infrared.c: 48: {
  4523                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  4524  00C3  302A               	movlw	low(02Ah)
  4525  00C4  00A6               	movwf	(?___lwdiv)
  4526  00C5  3000               	movlw	high(02Ah)
  4527  00C6  00A7               	movwf	((?___lwdiv))+1
  4528  00C7  096A               	comf	(_adcVal),w	;volatile
  4529  00C8  00AE               	movwf	(??_ADCconvert+0)+0
  4530  00C9  096B               	comf	(_adcVal+1),w	;volatile
  4531  00CA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4532  00CB  0AAE               	incf	(??_ADCconvert+0)+0,f
  4533  00CC  1903               	skipnz
  4534  00CD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4535  00CE  082E               	movf	0+(??_ADCconvert+0)+0,w
  4536  00CF  3EAA               	addlw	low(0AAh)
  4537  00D0  00A0               	movwf	(?___wmul)
  4538  00D1  082F               	movf	1+(??_ADCconvert+0)+0,w
  4539  00D2  1803               	skipnc
  4540  00D3  3E01               	addlw	1
  4541  00D4  3E00               	addlw	high(0AAh)
  4542  00D5  00A1               	movwf	1+(?___wmul)
  4543  00D6  300A               	movlw	low(0Ah)
  4544  00D7  00A2               	movwf	0+(?___wmul)+02h
  4545  00D8  3000               	movlw	high(0Ah)
  4546  00D9  00A3               	movwf	(0+(?___wmul)+02h)+1
  4547  00DA  120A  158A  2314   	fcall	___wmul
              120A  118A         
  4548  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4549  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4550  00E1  0821               	movf	(1+(?___wmul)),w
  4551  00E2  01A9               	clrf	1+(?___lwdiv)+02h
  4552  00E3  07A9               	addwf	1+(?___lwdiv)+02h
  4553  00E4  0820               	movf	(0+(?___wmul)),w
  4554  00E5  01A8               	clrf	0+(?___lwdiv)+02h
  4555  00E6  07A8               	addwf	0+(?___lwdiv)+02h
  4556                           
  4557  00E7  120A  158A  2534   	fcall	___lwdiv
              120A  118A         
  4558  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4559  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4560  00EE  0826               	movf	(0+(?___lwdiv)),w
  4561  00EF  3E1E               	addlw	low(01Eh)
  4562  00F0  1683               	bsf	status, 5	;RP0=1, select bank1
  4563  00F1  1303               	bcf	status, 6	;RP1=0, select bank1
  4564  00F2  00C4               	movwf	(_distance)^080h	;volatile
  4565  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4566  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4567  00F5  0827               	movf	(1+(?___lwdiv)),w
  4568  00F6  1803               	skipnc
  4569  00F7  3E01               	addlw	1
  4570  00F8  3E00               	addlw	high(01Eh)
  4571  00F9  1683               	bsf	status, 5	;RP0=1, select bank1
  4572  00FA  1303               	bcf	status, 6	;RP1=0, select bank1
  4573  00FB  00C5               	movwf	1+(_distance)^080h	;volatile
  4574                           	line	50
  4575                           ;infrared.c: 50: }
  4576  00FC  2A37               	goto	l2979
  4577                           	line	51
  4578                           	
  4579  00FD                     l2970:	
  4580                           	
  4581  00FD                     l10674:	
  4582                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  4583  00FD  3000               	movlw	high(06Bh)
  4584  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  4585  00FF  026B               	subwf	(_adcVal+1),w	;volatile
  4586  0100  306B               	movlw	low(06Bh)
  4587  0101  1903               	skipnz
  4588  0102  026A               	subwf	(_adcVal),w	;volatile
  4589  0103  1C03               	skipc
  4590  0104  2906               	goto	u4281
  4591  0105  2907               	goto	u4280
  4592  0106                     u4281:
  4593  0106  294A               	goto	l10680
  4594  0107                     u4280:
  4595                           	
  4596  0107                     l10676:	
  4597  0107  3000               	movlw	high(080h)
  4598  0108  026B               	subwf	(_adcVal+1),w	;volatile
  4599  0109  3080               	movlw	low(080h)
  4600  010A  1903               	skipnz
  4601  010B  026A               	subwf	(_adcVal),w	;volatile
  4602  010C  1803               	skipnc
  4603  010D  290F               	goto	u4291
  4604  010E  2910               	goto	u4290
  4605  010F                     u4291:
  4606  010F  294A               	goto	l10680
  4607  0110                     u4290:
  4608                           	line	53
  4609                           	
  4610  0110                     l10678:	
  4611                           ;infrared.c: 52: {
  4612                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  4613  0110  3015               	movlw	low(015h)
  4614  0111  00A6               	movwf	(?___lwdiv)
  4615  0112  3000               	movlw	high(015h)
  4616  0113  00A7               	movwf	((?___lwdiv))+1
  4617  0114  096A               	comf	(_adcVal),w	;volatile
  4618  0115  00AE               	movwf	(??_ADCconvert+0)+0
  4619  0116  096B               	comf	(_adcVal+1),w	;volatile
  4620  0117  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4621  0118  0AAE               	incf	(??_ADCconvert+0)+0,f
  4622  0119  1903               	skipnz
  4623  011A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4624  011B  082E               	movf	0+(??_ADCconvert+0)+0,w
  4625  011C  3E80               	addlw	low(080h)
  4626  011D  00A0               	movwf	(?___wmul)
  4627  011E  082F               	movf	1+(??_ADCconvert+0)+0,w
  4628  011F  1803               	skipnc
  4629  0120  3E01               	addlw	1
  4630  0121  3E00               	addlw	high(080h)
  4631  0122  00A1               	movwf	1+(?___wmul)
  4632  0123  300A               	movlw	low(0Ah)
  4633  0124  00A2               	movwf	0+(?___wmul)+02h
  4634  0125  3000               	movlw	high(0Ah)
  4635  0126  00A3               	movwf	(0+(?___wmul)+02h)+1
  4636  0127  120A  158A  2314   	fcall	___wmul
              120A  118A         
  4637  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  4638  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  4639  012E  0821               	movf	(1+(?___wmul)),w
  4640  012F  01A9               	clrf	1+(?___lwdiv)+02h
  4641  0130  07A9               	addwf	1+(?___lwdiv)+02h
  4642  0131  0820               	movf	(0+(?___wmul)),w
  4643  0132  01A8               	clrf	0+(?___lwdiv)+02h
  4644  0133  07A8               	addwf	0+(?___lwdiv)+02h
  4645                           
  4646  0134  120A  158A  2534   	fcall	___lwdiv
              120A  118A         
  4647  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  4648  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  4649  013B  0826               	movf	(0+(?___lwdiv)),w
  4650  013C  3E28               	addlw	low(028h)
  4651  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  4652  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  4653  013F  00C4               	movwf	(_distance)^080h	;volatile
  4654  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  4655  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  4656  0142  0827               	movf	(1+(?___lwdiv)),w
  4657  0143  1803               	skipnc
  4658  0144  3E01               	addlw	1
  4659  0145  3E00               	addlw	high(028h)
  4660  0146  1683               	bsf	status, 5	;RP0=1, select bank1
  4661  0147  1303               	bcf	status, 6	;RP1=0, select bank1
  4662  0148  00C5               	movwf	1+(_distance)^080h	;volatile
  4663                           	line	54
  4664                           ;infrared.c: 54: }
  4665  0149  2A37               	goto	l2979
  4666                           	line	55
  4667                           	
  4668  014A                     l2972:	
  4669                           	
  4670  014A                     l10680:	
  4671                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  4672  014A  3000               	movlw	high(04Dh)
  4673  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  4674  014C  026B               	subwf	(_adcVal+1),w	;volatile
  4675  014D  304D               	movlw	low(04Dh)
  4676  014E  1903               	skipnz
  4677  014F  026A               	subwf	(_adcVal),w	;volatile
  4678  0150  1C03               	skipc
  4679  0151  2953               	goto	u4301
  4680  0152  2954               	goto	u4300
  4681  0153                     u4301:
  4682  0153  2997               	goto	l10686
  4683  0154                     u4300:
  4684                           	
  4685  0154                     l10682:	
  4686  0154  3000               	movlw	high(06Bh)
  4687  0155  026B               	subwf	(_adcVal+1),w	;volatile
  4688  0156  306B               	movlw	low(06Bh)
  4689  0157  1903               	skipnz
  4690  0158  026A               	subwf	(_adcVal),w	;volatile
  4691  0159  1803               	skipnc
  4692  015A  295C               	goto	u4311
  4693  015B  295D               	goto	u4310
  4694  015C                     u4311:
  4695  015C  2997               	goto	l10686
  4696  015D                     u4310:
  4697                           	line	57
  4698                           	
  4699  015D                     l10684:	
  4700                           ;infrared.c: 56: {
  4701                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  4702  015D  301E               	movlw	low(01Eh)
  4703  015E  00A6               	movwf	(?___lwdiv)
  4704  015F  3000               	movlw	high(01Eh)
  4705  0160  00A7               	movwf	((?___lwdiv))+1
  4706  0161  096A               	comf	(_adcVal),w	;volatile
  4707  0162  00AE               	movwf	(??_ADCconvert+0)+0
  4708  0163  096B               	comf	(_adcVal+1),w	;volatile
  4709  0164  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4710  0165  0AAE               	incf	(??_ADCconvert+0)+0,f
  4711  0166  1903               	skipnz
  4712  0167  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4713  0168  082E               	movf	0+(??_ADCconvert+0)+0,w
  4714  0169  3E6B               	addlw	low(06Bh)
  4715  016A  00A0               	movwf	(?___wmul)
  4716  016B  082F               	movf	1+(??_ADCconvert+0)+0,w
  4717  016C  1803               	skipnc
  4718  016D  3E01               	addlw	1
  4719  016E  3E00               	addlw	high(06Bh)
  4720  016F  00A1               	movwf	1+(?___wmul)
  4721  0170  300A               	movlw	low(0Ah)
  4722  0171  00A2               	movwf	0+(?___wmul)+02h
  4723  0172  3000               	movlw	high(0Ah)
  4724  0173  00A3               	movwf	(0+(?___wmul)+02h)+1
  4725  0174  120A  158A  2314   	fcall	___wmul
              120A  118A         
  4726  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  4727  017A  1303               	bcf	status, 6	;RP1=0, select bank0
  4728  017B  0821               	movf	(1+(?___wmul)),w
  4729  017C  01A9               	clrf	1+(?___lwdiv)+02h
  4730  017D  07A9               	addwf	1+(?___lwdiv)+02h
  4731  017E  0820               	movf	(0+(?___wmul)),w
  4732  017F  01A8               	clrf	0+(?___lwdiv)+02h
  4733  0180  07A8               	addwf	0+(?___lwdiv)+02h
  4734                           
  4735  0181  120A  158A  2534   	fcall	___lwdiv
              120A  118A         
  4736  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  4737  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  4738  0188  0826               	movf	(0+(?___lwdiv)),w
  4739  0189  3E32               	addlw	low(032h)
  4740  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  4741  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  4742  018C  00C4               	movwf	(_distance)^080h	;volatile
  4743  018D  1283               	bcf	status, 5	;RP0=0, select bank0
  4744  018E  1303               	bcf	status, 6	;RP1=0, select bank0
  4745  018F  0827               	movf	(1+(?___lwdiv)),w
  4746  0190  1803               	skipnc
  4747  0191  3E01               	addlw	1
  4748  0192  3E00               	addlw	high(032h)
  4749  0193  1683               	bsf	status, 5	;RP0=1, select bank1
  4750  0194  1303               	bcf	status, 6	;RP1=0, select bank1
  4751  0195  00C5               	movwf	1+(_distance)^080h	;volatile
  4752                           	line	58
  4753                           ;infrared.c: 58: }
  4754  0196  2A37               	goto	l2979
  4755                           	line	59
  4756                           	
  4757  0197                     l2974:	
  4758                           	
  4759  0197                     l10686:	
  4760                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  4761  0197  3000               	movlw	high(038h)
  4762  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  4763  0199  026B               	subwf	(_adcVal+1),w	;volatile
  4764  019A  3038               	movlw	low(038h)
  4765  019B  1903               	skipnz
  4766  019C  026A               	subwf	(_adcVal),w	;volatile
  4767  019D  1C03               	skipc
  4768  019E  29A0               	goto	u4321
  4769  019F  29A1               	goto	u4320
  4770  01A0                     u4321:
  4771  01A0  29E4               	goto	l10692
  4772  01A1                     u4320:
  4773                           	
  4774  01A1                     l10688:	
  4775  01A1  3000               	movlw	high(04Dh)
  4776  01A2  026B               	subwf	(_adcVal+1),w	;volatile
  4777  01A3  304D               	movlw	low(04Dh)
  4778  01A4  1903               	skipnz
  4779  01A5  026A               	subwf	(_adcVal),w	;volatile
  4780  01A6  1803               	skipnc
  4781  01A7  29A9               	goto	u4331
  4782  01A8  29AA               	goto	u4330
  4783  01A9                     u4331:
  4784  01A9  29E4               	goto	l10692
  4785  01AA                     u4330:
  4786                           	line	61
  4787                           	
  4788  01AA                     l10690:	
  4789                           ;infrared.c: 60: {
  4790                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  4791  01AA  3015               	movlw	low(015h)
  4792  01AB  00A6               	movwf	(?___lwdiv)
  4793  01AC  3000               	movlw	high(015h)
  4794  01AD  00A7               	movwf	((?___lwdiv))+1
  4795  01AE  096A               	comf	(_adcVal),w	;volatile
  4796  01AF  00AE               	movwf	(??_ADCconvert+0)+0
  4797  01B0  096B               	comf	(_adcVal+1),w	;volatile
  4798  01B1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4799  01B2  0AAE               	incf	(??_ADCconvert+0)+0,f
  4800  01B3  1903               	skipnz
  4801  01B4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4802  01B5  082E               	movf	0+(??_ADCconvert+0)+0,w
  4803  01B6  3E4D               	addlw	low(04Dh)
  4804  01B7  00A0               	movwf	(?___wmul)
  4805  01B8  082F               	movf	1+(??_ADCconvert+0)+0,w
  4806  01B9  1803               	skipnc
  4807  01BA  3E01               	addlw	1
  4808  01BB  3E00               	addlw	high(04Dh)
  4809  01BC  00A1               	movwf	1+(?___wmul)
  4810  01BD  300A               	movlw	low(0Ah)
  4811  01BE  00A2               	movwf	0+(?___wmul)+02h
  4812  01BF  3000               	movlw	high(0Ah)
  4813  01C0  00A3               	movwf	(0+(?___wmul)+02h)+1
  4814  01C1  120A  158A  2314   	fcall	___wmul
              120A  118A         
  4815  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  4816  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  4817  01C8  0821               	movf	(1+(?___wmul)),w
  4818  01C9  01A9               	clrf	1+(?___lwdiv)+02h
  4819  01CA  07A9               	addwf	1+(?___lwdiv)+02h
  4820  01CB  0820               	movf	(0+(?___wmul)),w
  4821  01CC  01A8               	clrf	0+(?___lwdiv)+02h
  4822  01CD  07A8               	addwf	0+(?___lwdiv)+02h
  4823                           
  4824  01CE  120A  158A  2534   	fcall	___lwdiv
              120A  118A         
  4825  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
  4826  01D4  1303               	bcf	status, 6	;RP1=0, select bank0
  4827  01D5  0826               	movf	(0+(?___lwdiv)),w
  4828  01D6  3E3C               	addlw	low(03Ch)
  4829  01D7  1683               	bsf	status, 5	;RP0=1, select bank1
  4830  01D8  1303               	bcf	status, 6	;RP1=0, select bank1
  4831  01D9  00C4               	movwf	(_distance)^080h	;volatile
  4832  01DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4833  01DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4834  01DC  0827               	movf	(1+(?___lwdiv)),w
  4835  01DD  1803               	skipnc
  4836  01DE  3E01               	addlw	1
  4837  01DF  3E00               	addlw	high(03Ch)
  4838  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  4839  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  4840  01E2  00C5               	movwf	1+(_distance)^080h	;volatile
  4841                           	line	62
  4842                           ;infrared.c: 62: }
  4843  01E3  2A37               	goto	l2979
  4844                           	line	63
  4845                           	
  4846  01E4                     l2976:	
  4847                           	
  4848  01E4                     l10692:	
  4849                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  4850  01E4  3000               	movlw	high(02Bh)
  4851  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4852  01E6  026B               	subwf	(_adcVal+1),w	;volatile
  4853  01E7  302B               	movlw	low(02Bh)
  4854  01E8  1903               	skipnz
  4855  01E9  026A               	subwf	(_adcVal),w	;volatile
  4856  01EA  1C03               	skipc
  4857  01EB  29ED               	goto	u4341
  4858  01EC  29EE               	goto	u4340
  4859  01ED                     u4341:
  4860  01ED  2A37               	goto	l2979
  4861  01EE                     u4340:
  4862                           	
  4863  01EE                     l10694:	
  4864  01EE  3000               	movlw	high(038h)
  4865  01EF  026B               	subwf	(_adcVal+1),w	;volatile
  4866  01F0  3038               	movlw	low(038h)
  4867  01F1  1903               	skipnz
  4868  01F2  026A               	subwf	(_adcVal),w	;volatile
  4869  01F3  1803               	skipnc
  4870  01F4  29F6               	goto	u4351
  4871  01F5  29F7               	goto	u4350
  4872  01F6                     u4351:
  4873  01F6  2A37               	goto	l2979
  4874  01F7                     u4350:
  4875                           	line	65
  4876                           	
  4877  01F7                     l10696:	
  4878                           ;infrared.c: 64: {
  4879                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  4880  01F7  300D               	movlw	low(0Dh)
  4881  01F8  00A6               	movwf	(?___lwdiv)
  4882  01F9  3000               	movlw	high(0Dh)
  4883  01FA  00A7               	movwf	((?___lwdiv))+1
  4884  01FB  096A               	comf	(_adcVal),w	;volatile
  4885  01FC  00AE               	movwf	(??_ADCconvert+0)+0
  4886  01FD  096B               	comf	(_adcVal+1),w	;volatile
  4887  01FE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4888  01FF  0AAE               	incf	(??_ADCconvert+0)+0,f
  4889  0200  1903               	skipnz
  4890  0201  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4891  0202  082E               	movf	0+(??_ADCconvert+0)+0,w
  4892  0203  3E38               	addlw	low(038h)
  4893  0204  00A0               	movwf	(?___wmul)
  4894  0205  082F               	movf	1+(??_ADCconvert+0)+0,w
  4895  0206  1803               	skipnc
  4896  0207  3E01               	addlw	1
  4897  0208  3E00               	addlw	high(038h)
  4898  0209  00A1               	movwf	1+(?___wmul)
  4899  020A  300A               	movlw	low(0Ah)
  4900  020B  00A2               	movwf	0+(?___wmul)+02h
  4901  020C  3000               	movlw	high(0Ah)
  4902  020D  00A3               	movwf	(0+(?___wmul)+02h)+1
  4903  020E  120A  158A  2314   	fcall	___wmul
              120A  118A         
  4904  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  4905  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  4906  0215  0821               	movf	(1+(?___wmul)),w
  4907  0216  01A9               	clrf	1+(?___lwdiv)+02h
  4908  0217  07A9               	addwf	1+(?___lwdiv)+02h
  4909  0218  0820               	movf	(0+(?___wmul)),w
  4910  0219  01A8               	clrf	0+(?___lwdiv)+02h
  4911  021A  07A8               	addwf	0+(?___lwdiv)+02h
  4912                           
  4913  021B  120A  158A  2534   	fcall	___lwdiv
              120A  118A         
  4914  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  4915  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  4916  0222  0826               	movf	(0+(?___lwdiv)),w
  4917  0223  3E46               	addlw	low(046h)
  4918  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  4919  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  4920  0226  00C4               	movwf	(_distance)^080h	;volatile
  4921  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  4922  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  4923  0229  0827               	movf	(1+(?___lwdiv)),w
  4924  022A  1803               	skipnc
  4925  022B  3E01               	addlw	1
  4926  022C  3E00               	addlw	high(046h)
  4927  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  4928  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  4929  022F  00C5               	movwf	1+(_distance)^080h	;volatile
  4930  0230  2A37               	goto	l2979
  4931                           	line	66
  4932                           	
  4933  0231                     l2978:	
  4934  0231  2A37               	goto	l2979
  4935                           	line	67
  4936                           	
  4937  0232                     l2977:	
  4938  0232  2A37               	goto	l2979
  4939                           	
  4940  0233                     l2975:	
  4941  0233  2A37               	goto	l2979
  4942                           	
  4943  0234                     l2973:	
  4944  0234  2A37               	goto	l2979
  4945                           	
  4946  0235                     l2971:	
  4947  0235  2A37               	goto	l2979
  4948                           	
  4949  0236                     l2969:	
  4950  0236  2A37               	goto	l2979
  4951                           	
  4952  0237                     l2967:	
  4953                           	
  4954  0237                     l2979:	
  4955  0237  0008               	return
  4956                           	opt stack 0
  4957                           GLOBAL	__end_of_ADCconvert
  4958  0238                     	__end_of_ADCconvert:
  4959 ;; =============== function _ADCconvert ends ============
  4960                           
  4961                           	signat	_ADCconvert,88
  4962                           	global	_robotTurn
  4963                           psect	text1196,local,class=CODE,delta=2
  4964                           global __ptext1196
  4965  06F9                     __ptext1196:
  4966                           
  4967 ;; *************** function _robotTurn *****************
  4968 ;; Defined at:
  4969 ;;		line 83 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  distance        2    2[BANK0 ] int 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;		None
  4974 ;; Return value:  Size  Location     Type
  4975 ;;		None               void
  4976 ;; Registers used:
  4977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4983 ;;      Params:         0       2       0       0       0
  4984 ;;      Locals:         0       0       0       0       0
  4985 ;;      Temps:          0       1       0       0       0
  4986 ;;      Totals:         0       3       0       0       0
  4987 ;;Total ram usage:        3 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    4
  4990 ;; This function calls:
  4991 ;;		_ser_putch
  4992 ;; This function is called by:
  4993 ;;		_main
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           psect	text1196
  4997                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4998                           	line	83
  4999                           	global	__size_of_robotTurn
  5000  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  5001                           	
  5002  06F9                     _robotTurn:	
  5003                           	opt	stack 3
  5004                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5005                           	line	86
  5006                           	
  5007  06F9                     l10646:	
  5008                           ;robot.c: 86: turnlowByte = (unsigned char) (distance) ;
  5009  06F9  1283               	bcf	status, 5	;RP0=0, select bank0
  5010  06FA  1303               	bcf	status, 6	;RP1=0, select bank0
  5011  06FB  0822               	movf	(robotTurn@distance),w
  5012  06FC  00A4               	movwf	(??_robotTurn+0)+0
  5013  06FD  0824               	movf	(??_robotTurn+0)+0,w
  5014  06FE  1683               	bsf	status, 5	;RP0=1, select bank1
  5015  06FF  1303               	bcf	status, 6	;RP1=0, select bank1
  5016  0700  00DF               	movwf	(_turnlowByte)^080h
  5017                           	line	87
  5018                           	
  5019  0701                     l10648:	
  5020                           ;robot.c: 87: turnhighByte = (unsigned char) (distance >> 8);
  5021  0701  1283               	bcf	status, 5	;RP0=0, select bank0
  5022  0702  1303               	bcf	status, 6	;RP1=0, select bank0
  5023  0703  0823               	movf	(robotTurn@distance+1),w
  5024  0704  00A4               	movwf	(??_robotTurn+0)+0
  5025  0705  0824               	movf	(??_robotTurn+0)+0,w
  5026  0706  1683               	bsf	status, 5	;RP0=1, select bank1
  5027  0707  1303               	bcf	status, 6	;RP1=0, select bank1
  5028  0708  00DE               	movwf	(_turnhighByte)^080h
  5029                           	line	88
  5030                           	
  5031  0709                     l10650:	
  5032                           ;robot.c: 88: if (distance >= 0)
  5033  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  5034  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  5035  070B  1BA3               	btfsc	(robotTurn@distance+1),7
  5036  070C  2F0E               	goto	u4211
  5037  070D  2F0F               	goto	u4210
  5038  070E                     u4211:
  5039  070E  2F2E               	goto	l10654
  5040  070F                     u4210:
  5041                           	line	90
  5042                           	
  5043  070F                     l10652:	
  5044                           ;robot.c: 89: {
  5045                           ;robot.c: 90: ser_putch(137);
  5046  070F  3089               	movlw	(089h)
  5047  0710  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5048                           	line	92
  5049                           ;robot.c: 92: ser_putch(0);
  5050  0715  3000               	movlw	(0)
  5051  0716  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5052                           	line	94
  5053                           ;robot.c: 94: ser_putch(100);
  5054  071B  3064               	movlw	(064h)
  5055  071C  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5056                           	line	96
  5057                           ;robot.c: 96: ser_putch(0);
  5058  0721  3000               	movlw	(0)
  5059  0722  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5060                           	line	98
  5061                           ;robot.c: 98: ser_putch(1);
  5062  0727  3001               	movlw	(01h)
  5063  0728  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5064                           	line	99
  5065                           ;robot.c: 99: }
  5066  072D  2F4C               	goto	l6716
  5067                           	line	100
  5068                           	
  5069  072E                     l6715:	
  5070                           	line	102
  5071                           	
  5072  072E                     l10654:	
  5073                           ;robot.c: 100: else
  5074                           ;robot.c: 101: {
  5075                           ;robot.c: 102: ser_putch(137);
  5076  072E  3089               	movlw	(089h)
  5077  072F  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5078                           	line	104
  5079                           ;robot.c: 104: ser_putch(0);
  5080  0734  3000               	movlw	(0)
  5081  0735  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5082                           	line	106
  5083                           ;robot.c: 106: ser_putch(100);
  5084  073A  3064               	movlw	(064h)
  5085  073B  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5086                           	line	108
  5087                           ;robot.c: 108: ser_putch(255);
  5088  0740  30FF               	movlw	(0FFh)
  5089  0741  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5090                           	line	110
  5091                           ;robot.c: 110: ser_putch(255);
  5092  0746  30FF               	movlw	(0FFh)
  5093  0747  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5094                           	line	111
  5095                           	
  5096  074C                     l6716:	
  5097                           	line	112
  5098                           ;robot.c: 111: }
  5099                           ;robot.c: 112: ser_putch(157);
  5100  074C  309D               	movlw	(09Dh)
  5101  074D  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5102                           	line	114
  5103                           ;robot.c: 114: ser_putch(turnhighByte);
  5104  0752  1683               	bsf	status, 5	;RP0=1, select bank1
  5105  0753  1303               	bcf	status, 6	;RP1=0, select bank1
  5106  0754  085E               	movf	(_turnhighByte)^080h,w
  5107  0755  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5108                           	line	116
  5109                           ;robot.c: 116: ser_putch(turnlowByte);
  5110  075A  1683               	bsf	status, 5	;RP0=1, select bank1
  5111  075B  1303               	bcf	status, 6	;RP1=0, select bank1
  5112  075C  085F               	movf	(_turnlowByte)^080h,w
  5113  075D  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5114                           	line	118
  5115                           ;robot.c: 118: ser_putch(137);
  5116  0762  3089               	movlw	(089h)
  5117  0763  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5118                           	line	120
  5119                           ;robot.c: 120: ser_putch(0);
  5120  0768  3000               	movlw	(0)
  5121  0769  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5122                           	line	122
  5123                           ;robot.c: 122: ser_putch(0);
  5124  076E  3000               	movlw	(0)
  5125  076F  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5126                           	line	124
  5127                           ;robot.c: 124: ser_putch(0);
  5128  0774  3000               	movlw	(0)
  5129  0775  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5130                           	line	126
  5131                           ;robot.c: 126: ser_putch(0);
  5132  077A  3000               	movlw	(0)
  5133  077B  120A  158A  229F   	fcall	_ser_putch
              120A  118A         
  5134                           	line	127
  5135                           	
  5136  0780                     l6717:	
  5137  0780  0008               	return
  5138                           	opt stack 0
  5139                           GLOBAL	__end_of_robotTurn
  5140  0781                     	__end_of_robotTurn:
  5141 ;; =============== function _robotTurn ends ============
  5142                           
  5143                           	signat	_robotTurn,4216
  5144                           	global	_robotMove
  5145                           psect	text1197,local,class=CODE,delta=2
  5146                           global __ptext1197
  5147  0F78                     __ptext1197:
  5148                           
  5149 ;; *************** function _robotMove *****************
  5150 ;; Defined at:
  5151 ;;		line 36 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  distance        2    2[BANK0 ] int 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;		None               void
  5158 ;; Registers used:
  5159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5165 ;;      Params:         0       2       0       0       0
  5166 ;;      Locals:         0       0       0       0       0
  5167 ;;      Temps:          0       1       0       0       0
  5168 ;;      Totals:         0       3       0       0       0
  5169 ;;Total ram usage:        3 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:    4
  5172 ;; This function calls:
  5173 ;;		_ser_putch
  5174 ;; This function is called by:
  5175 ;;		_main
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           psect	text1197
  5179                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5180                           	line	36
  5181                           	global	__size_of_robotMove
  5182  0088                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  5183                           	
  5184  0F78                     _robotMove:	
  5185                           	opt	stack 3
  5186                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5187                           	line	38
  5188                           	
  5189  0F78                     l10636:	
  5190                           ;robot.c: 38: lowByte = (unsigned char) (distance) ;
  5191  0F78  1283               	bcf	status, 5	;RP0=0, select bank0
  5192  0F79  1303               	bcf	status, 6	;RP1=0, select bank0
  5193  0F7A  0822               	movf	(robotMove@distance),w
  5194  0F7B  00A4               	movwf	(??_robotMove+0)+0
  5195  0F7C  0824               	movf	(??_robotMove+0)+0,w
  5196  0F7D  1683               	bsf	status, 5	;RP0=1, select bank1
  5197  0F7E  1303               	bcf	status, 6	;RP1=0, select bank1
  5198  0F7F  00D9               	movwf	(_lowByte)^080h
  5199                           	line	39
  5200                           	
  5201  0F80                     l10638:	
  5202                           ;robot.c: 39: highByte = (unsigned char) (distance >> 8);
  5203  0F80  1283               	bcf	status, 5	;RP0=0, select bank0
  5204  0F81  1303               	bcf	status, 6	;RP1=0, select bank0
  5205  0F82  0823               	movf	(robotMove@distance+1),w
  5206  0F83  00A4               	movwf	(??_robotMove+0)+0
  5207  0F84  0824               	movf	(??_robotMove+0)+0,w
  5208  0F85  1683               	bsf	status, 5	;RP0=1, select bank1
  5209  0F86  1303               	bcf	status, 6	;RP1=0, select bank1
  5210  0F87  00D8               	movwf	(_highByte)^080h
  5211                           	line	40
  5212                           	
  5213  0F88                     l10640:	
  5214                           ;robot.c: 40: if (distance >= 0)
  5215  0F88  1283               	bcf	status, 5	;RP0=0, select bank0
  5216  0F89  1303               	bcf	status, 6	;RP1=0, select bank0
  5217  0F8A  1BA3               	btfsc	(robotMove@distance+1),7
  5218  0F8B  2F8D               	goto	u4201
  5219  0F8C  2F8E               	goto	u4200
  5220  0F8D                     u4201:
  5221  0F8D  2FAD               	goto	l10644
  5222  0F8E                     u4200:
  5223                           	line	42
  5224                           	
  5225  0F8E                     l10642:	
  5226                           ;robot.c: 41: {
  5227                           ;robot.c: 42: ser_putch(137);
  5228  0F8E  3089               	movlw	(089h)
  5229  0F8F  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5230                           	line	44
  5231                           ;robot.c: 44: ser_putch(0);
  5232  0F94  3000               	movlw	(0)
  5233  0F95  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5234                           	line	46
  5235                           ;robot.c: 46: ser_putch(200);
  5236  0F9A  30C8               	movlw	(0C8h)
  5237  0F9B  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5238                           	line	48
  5239                           ;robot.c: 48: ser_putch(128);
  5240  0FA0  3080               	movlw	(080h)
  5241  0FA1  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5242                           	line	50
  5243                           ;robot.c: 50: ser_putch(0);
  5244  0FA6  3000               	movlw	(0)
  5245  0FA7  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5246                           	line	51
  5247                           ;robot.c: 51: }
  5248  0FAC  2FCB               	goto	l6711
  5249                           	line	52
  5250                           	
  5251  0FAD                     l6710:	
  5252                           	line	54
  5253                           	
  5254  0FAD                     l10644:	
  5255                           ;robot.c: 52: else
  5256                           ;robot.c: 53: {
  5257                           ;robot.c: 54: ser_putch(137);
  5258  0FAD  3089               	movlw	(089h)
  5259  0FAE  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5260                           	line	56
  5261                           ;robot.c: 56: ser_putch(0xff);
  5262  0FB3  30FF               	movlw	(0FFh)
  5263  0FB4  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5264                           	line	58
  5265                           ;robot.c: 58: ser_putch(0x38);
  5266  0FB9  3038               	movlw	(038h)
  5267  0FBA  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5268                           	line	60
  5269                           ;robot.c: 60: ser_putch(128);
  5270  0FBF  3080               	movlw	(080h)
  5271  0FC0  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5272                           	line	62
  5273                           ;robot.c: 62: ser_putch(0);
  5274  0FC5  3000               	movlw	(0)
  5275  0FC6  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5276                           	line	63
  5277                           	
  5278  0FCB                     l6711:	
  5279                           	line	64
  5280                           ;robot.c: 63: }
  5281                           ;robot.c: 64: ser_putch(156);
  5282  0FCB  309C               	movlw	(09Ch)
  5283  0FCC  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5284                           	line	66
  5285                           ;robot.c: 66: ser_putch(highByte);
  5286  0FD1  1683               	bsf	status, 5	;RP0=1, select bank1
  5287  0FD2  1303               	bcf	status, 6	;RP1=0, select bank1
  5288  0FD3  0858               	movf	(_highByte)^080h,w
  5289  0FD4  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5290                           	line	68
  5291                           ;robot.c: 68: ser_putch(lowByte);
  5292  0FD9  1683               	bsf	status, 5	;RP0=1, select bank1
  5293  0FDA  1303               	bcf	status, 6	;RP1=0, select bank1
  5294  0FDB  0859               	movf	(_lowByte)^080h,w
  5295  0FDC  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5296                           	line	70
  5297                           ;robot.c: 70: ser_putch(137);
  5298  0FE1  3089               	movlw	(089h)
  5299  0FE2  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5300                           	line	72
  5301                           ;robot.c: 72: ser_putch(0);
  5302  0FE7  3000               	movlw	(0)
  5303  0FE8  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5304                           	line	74
  5305                           ;robot.c: 74: ser_putch(0);
  5306  0FED  3000               	movlw	(0)
  5307  0FEE  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5308                           	line	76
  5309                           ;robot.c: 76: ser_putch(0);
  5310  0FF3  3000               	movlw	(0)
  5311  0FF4  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5312                           	line	78
  5313                           ;robot.c: 78: ser_putch(0);
  5314  0FF9  3000               	movlw	(0)
  5315  0FFA  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5316                           	line	80
  5317                           	
  5318  0FFF                     l6712:	
  5319  0FFF  0008               	return
  5320                           	opt stack 0
  5321                           GLOBAL	__end_of_robotMove
  5322  1000                     	__end_of_robotMove:
  5323 ;; =============== function _robotMove ends ============
  5324                           
  5325                           	signat	_robotMove,4216
  5326                           	global	_rotate
  5327                           psect	text1198,local,class=CODE,delta=2
  5328                           global __ptext1198
  5329  0D84                     __ptext1198:
  5330                           
  5331 ;; *************** function _rotate *****************
  5332 ;; Defined at:
  5333 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  numsteps        2    3[BANK0 ] unsigned int 
  5336 ;;  direction       1    5[BANK0 ] unsigned char 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  i               2    8[BANK0 ] unsigned int 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;		None               void
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0, pclath, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5348 ;;      Params:         0       3       0       0       0
  5349 ;;      Locals:         0       2       0       0       0
  5350 ;;      Temps:          0       2       0       0       0
  5351 ;;      Totals:         0       7       0       0       0
  5352 ;;Total ram usage:        7 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    4
  5355 ;; This function calls:
  5356 ;;		_spi_transfer
  5357 ;; This function is called by:
  5358 ;;		_calibrateIR
  5359 ;;		_scan360
  5360 ;;		_main
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           psect	text1198
  5364                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5365                           	line	48
  5366                           	global	__size_of_rotate
  5367  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  5368                           	
  5369  0D84                     _rotate:	
  5370                           	opt	stack 3
  5371                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  5372                           	line	50
  5373                           	
  5374  0D84                     l10608:	
  5375                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  5376  0D84  1283               	bcf	status, 5	;RP0=0, select bank0
  5377  0D85  1303               	bcf	status, 6	;RP1=0, select bank0
  5378  0D86  1407               	bsf	(56/8),(56)&7
  5379  0D87  1487               	bsf	(57/8),(57)&7
  5380                           	line	51
  5381                           	
  5382  0D88                     l10610:	
  5383                           ;steppermotor.c: 51: if (direction == 0)
  5384  0D88  08A5               	movf	(rotate@direction),f
  5385  0D89  1D03               	skipz
  5386  0D8A  2D8C               	goto	u4181
  5387  0D8B  2D8D               	goto	u4180
  5388  0D8C                     u4181:
  5389  0D8C  2D94               	goto	l10614
  5390  0D8D                     u4180:
  5391                           	line	52
  5392                           	
  5393  0D8D                     l10612:	
  5394                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  5395  0D8D  300F               	movlw	(0Fh)
  5396  0D8E  120A  158A  224B   	fcall	_spi_transfer
              120A  158A         
  5397  0D93  2D9B               	goto	l10616
  5398                           	line	53
  5399                           	
  5400  0D94                     l3680:	
  5401                           	line	54
  5402                           	
  5403  0D94                     l10614:	
  5404                           ;steppermotor.c: 53: else
  5405                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  5406  0D94  300D               	movlw	(0Dh)
  5407  0D95  120A  158A  224B   	fcall	_spi_transfer
              120A  158A         
  5408  0D9A  2D9B               	goto	l10616
  5409                           	
  5410  0D9B                     l3681:	
  5411                           	line	55
  5412                           	
  5413  0D9B                     l10616:	
  5414                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  5415  0D9B  1283               	bcf	status, 5	;RP0=0, select bank0
  5416  0D9C  1303               	bcf	status, 6	;RP1=0, select bank0
  5417  0D9D  1007               	bcf	(56/8),(56)&7
  5418                           	
  5419  0D9E                     l10618:	
  5420  0D9E  1087               	bcf	(57/8),(57)&7
  5421                           	line	56
  5422                           	
  5423  0D9F                     l10620:	
  5424                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  5425  0D9F  01A8               	clrf	(rotate@i)
  5426  0DA0  01A9               	clrf	(rotate@i+1)
  5427  0DA1  2DB8               	goto	l3682
  5428                           	line	57
  5429                           	
  5430  0DA2                     l3683:	
  5431                           	line	58
  5432                           ;steppermotor.c: 57: {
  5433                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  5434  0DA2  1507               	bsf	(58/8),(58)&7
  5435  0DA3  0000               	nop
  5436  0DA4  1283               	bcf	status, 5	;RP0=0, select bank0
  5437  0DA5  1303               	bcf	status, 6	;RP1=0, select bank0
  5438  0DA6  1107               	bcf	(58/8),(58)&7
  5439                           	line	59
  5440                           	
  5441  0DA7                     l10622:	
  5442                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  5443                           	opt asmopt_off
  5444  0DA7  3062               movlw	98
  5445  0DA8  00A7               movwf	((??_rotate+0)+0+1),f
  5446  0DA9  3065               	movlw	101
  5447  0DAA  00A6               movwf	((??_rotate+0)+0),f
  5448  0DAB                     u4997:
  5449  0DAB  0BA6               	decfsz	((??_rotate+0)+0),f
  5450  0DAC  2DAB               	goto	u4997
  5451  0DAD  0BA7               	decfsz	((??_rotate+0)+0+1),f
  5452  0DAE  2DAB               	goto	u4997
  5453  0DAF  2DB0               	nop2
  5454                           opt asmopt_on
  5455                           
  5456                           	line	56
  5457  0DB0  3001               	movlw	low(01h)
  5458  0DB1  1283               	bcf	status, 5	;RP0=0, select bank0
  5459  0DB2  1303               	bcf	status, 6	;RP1=0, select bank0
  5460  0DB3  07A8               	addwf	(rotate@i),f
  5461  0DB4  1803               	skipnc
  5462  0DB5  0AA9               	incf	(rotate@i+1),f
  5463  0DB6  3000               	movlw	high(01h)
  5464  0DB7  07A9               	addwf	(rotate@i+1),f
  5465                           	
  5466  0DB8                     l3682:	
  5467  0DB8  0824               	movf	(rotate@numsteps+1),w
  5468  0DB9  0229               	subwf	(rotate@i+1),w
  5469  0DBA  1D03               	skipz
  5470  0DBB  2DBE               	goto	u4195
  5471  0DBC  0823               	movf	(rotate@numsteps),w
  5472  0DBD  0228               	subwf	(rotate@i),w
  5473  0DBE                     u4195:
  5474  0DBE  1C03               	skipc
  5475  0DBF  2DC1               	goto	u4191
  5476  0DC0  2DC2               	goto	u4190
  5477  0DC1                     u4191:
  5478  0DC1  2DA2               	goto	l3683
  5479  0DC2                     u4190:
  5480                           	
  5481  0DC2                     l3684:	
  5482                           	line	61
  5483                           ;steppermotor.c: 60: }
  5484                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  5485  0DC2  1407               	bsf	(56/8),(56)&7
  5486  0DC3  1487               	bsf	(57/8),(57)&7
  5487                           	line	62
  5488                           	
  5489  0DC4                     l10624:	
  5490                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  5491  0DC4  3000               	movlw	(0)
  5492  0DC5  120A  158A  224B   	fcall	_spi_transfer
              120A  158A         
  5493                           	line	63
  5494                           	
  5495  0DCA                     l10626:	
  5496                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  5497  0DCA  1283               	bcf	status, 5	;RP0=0, select bank0
  5498  0DCB  1303               	bcf	status, 6	;RP1=0, select bank0
  5499  0DCC  1007               	bcf	(56/8),(56)&7
  5500                           	
  5501  0DCD                     l10628:	
  5502  0DCD  1087               	bcf	(57/8),(57)&7
  5503                           	line	64
  5504                           	
  5505  0DCE                     l10630:	
  5506                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  5507  0DCE  1507               	bsf	(58/8),(58)&7
  5508                           	
  5509  0DCF                     l10632:	
  5510  0DCF  0000               	nop
  5511                           	
  5512  0DD0                     l10634:	
  5513  0DD0  1283               	bcf	status, 5	;RP0=0, select bank0
  5514  0DD1  1303               	bcf	status, 6	;RP1=0, select bank0
  5515  0DD2  1107               	bcf	(58/8),(58)&7
  5516                           	line	65
  5517                           	
  5518  0DD3                     l3685:	
  5519  0DD3  0008               	return
  5520                           	opt stack 0
  5521                           GLOBAL	__end_of_rotate
  5522  0DD4                     	__end_of_rotate:
  5523 ;; =============== function _rotate ends ============
  5524                           
  5525                           	signat	_rotate,8312
  5526                           	global	_robo_init
  5527                           psect	text1199,local,class=CODE,delta=2
  5528                           global __ptext1199
  5529  09F9                     __ptext1199:
  5530                           
  5531 ;; *************** function _robo_init *****************
  5532 ;; Defined at:
  5533 ;;		line 9 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;		None
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;		None               void
  5540 ;; Registers used:
  5541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5547 ;;      Params:         0       0       0       0       0
  5548 ;;      Locals:         0       0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0
  5550 ;;      Totals:         0       0       0       0       0
  5551 ;;Total ram usage:        0 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    4
  5554 ;; This function calls:
  5555 ;;		_ser_putch
  5556 ;; This function is called by:
  5557 ;;		_init
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           psect	text1199
  5561                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5562                           	line	9
  5563                           	global	__size_of_robo_init
  5564  000D                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  5565                           	
  5566  09F9                     _robo_init:	
  5567                           	opt	stack 2
  5568                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5569                           	line	10
  5570                           	
  5571  09F9                     l10606:	
  5572                           ;robot.c: 10: ser_putch(128);
  5573  09F9  3080               	movlw	(080h)
  5574  09FA  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5575                           	line	11
  5576                           ;robot.c: 11: ser_putch(132);
  5577  09FF  3084               	movlw	(084h)
  5578  0A00  120A  158A  229F   	fcall	_ser_putch
              120A  158A         
  5579                           	line	15
  5580                           	
  5581  0A05                     l6701:	
  5582  0A05  0008               	return
  5583                           	opt stack 0
  5584                           GLOBAL	__end_of_robo_init
  5585  0A06                     	__end_of_robo_init:
  5586 ;; =============== function _robo_init ends ============
  5587                           
  5588                           	signat	_robo_init,88
  5589                           	global	_lcd_write_data
  5590                           psect	text1200,local,class=CODE,delta=2
  5591                           global __ptext1200
  5592  0A25                     __ptext1200:
  5593                           
  5594 ;; *************** function _lcd_write_data *****************
  5595 ;; Defined at:
  5596 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  databyte        1    wreg     unsigned char 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  databyte        1    2[BANK0 ] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;		None               void
  5603 ;; Registers used:
  5604 ;;		wreg
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5610 ;;      Params:         0       0       0       0       0
  5611 ;;      Locals:         0       1       0       0       0
  5612 ;;      Temps:          0       2       0       0       0
  5613 ;;      Totals:         0       3       0       0       0
  5614 ;;Total ram usage:        3 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    3
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_lcd_write_string
  5621 ;;		_lcd_write_2_digit_bcd
  5622 ;;		_lcd_write_3_digit_bcd
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           psect	text1200
  5626                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5627                           	line	30
  5628                           	global	__size_of_lcd_write_data
  5629  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  5630                           	
  5631  0A25                     _lcd_write_data:	
  5632                           	opt	stack 1
  5633                           ; Regs used in _lcd_write_data: [wreg]
  5634                           ;lcd_write_data@databyte stored from wreg
  5635  0A25  1283               	bcf	status, 5	;RP0=0, select bank0
  5636  0A26  1303               	bcf	status, 6	;RP1=0, select bank0
  5637  0A27  00A2               	movwf	(lcd_write_data@databyte)
  5638                           	line	31
  5639                           	
  5640  0A28                     l10598:	
  5641                           ;lcd.c: 31: RE2 = 0;
  5642  0A28  1109               	bcf	(74/8),(74)&7
  5643                           	line	32
  5644                           ;lcd.c: 32: RE1 = 0;
  5645  0A29  1089               	bcf	(73/8),(73)&7
  5646                           	line	33
  5647                           ;lcd.c: 33: RE0 = 1;
  5648  0A2A  1409               	bsf	(72/8),(72)&7
  5649                           	line	34
  5650                           	
  5651  0A2B                     l10600:	
  5652                           ;lcd.c: 34: PORTD = databyte;
  5653  0A2B  0822               	movf	(lcd_write_data@databyte),w
  5654  0A2C  0088               	movwf	(8)	;volatile
  5655                           	line	35
  5656                           	
  5657  0A2D                     l10602:	
  5658                           ;lcd.c: 35: RE2 = 1;
  5659  0A2D  1509               	bsf	(74/8),(74)&7
  5660                           	line	36
  5661                           	
  5662  0A2E                     l10604:	
  5663                           ;lcd.c: 36: RE2 = 0;
  5664  0A2E  1109               	bcf	(74/8),(74)&7
  5665                           	line	37
  5666                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  5667                           	opt asmopt_off
  5668  0A2F  3007               movlw	7
  5669  0A30  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  5670  0A31  307D               	movlw	125
  5671  0A32  00A0               movwf	((??_lcd_write_data+0)+0),f
  5672  0A33                     u5007:
  5673  0A33  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  5674  0A34  2A33               	goto	u5007
  5675  0A35  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  5676  0A36  2A33               	goto	u5007
  5677                           opt asmopt_on
  5678                           
  5679                           	line	38
  5680                           	
  5681  0A37                     l1402:	
  5682  0A37  0008               	return
  5683                           	opt stack 0
  5684                           GLOBAL	__end_of_lcd_write_data
  5685  0A38                     	__end_of_lcd_write_data:
  5686 ;; =============== function _lcd_write_data ends ============
  5687                           
  5688                           	signat	_lcd_write_data,4216
  5689                           	global	_lcd_write_control
  5690                           psect	text1201,local,class=CODE,delta=2
  5691                           global __ptext1201
  5692  0A5F                     __ptext1201:
  5693                           
  5694 ;; *************** function _lcd_write_control *****************
  5695 ;; Defined at:
  5696 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  databyte        1    wreg     unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  databyte        1    2[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;		None               void
  5703 ;; Registers used:
  5704 ;;		wreg
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5710 ;;      Params:         0       0       0       0       0
  5711 ;;      Locals:         0       1       0       0       0
  5712 ;;      Temps:          0       2       0       0       0
  5713 ;;      Totals:         0       3       0       0       0
  5714 ;;Total ram usage:        3 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    3
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_lcd_set_cursor
  5721 ;;		_lcd_init
  5722 ;;		_UpdateDisplay
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           psect	text1201
  5726                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5727                           	line	18
  5728                           	global	__size_of_lcd_write_control
  5729  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  5730                           	
  5731  0A5F                     _lcd_write_control:	
  5732                           	opt	stack 1
  5733                           ; Regs used in _lcd_write_control: [wreg]
  5734                           ;lcd_write_control@databyte stored from wreg
  5735  0A5F  1283               	bcf	status, 5	;RP0=0, select bank0
  5736  0A60  1303               	bcf	status, 6	;RP1=0, select bank0
  5737  0A61  00A2               	movwf	(lcd_write_control@databyte)
  5738                           	line	19
  5739                           	
  5740  0A62                     l10590:	
  5741                           ;lcd.c: 19: RE2 = 0;
  5742  0A62  1109               	bcf	(74/8),(74)&7
  5743                           	line	20
  5744                           ;lcd.c: 20: RE1 = 0;
  5745  0A63  1089               	bcf	(73/8),(73)&7
  5746                           	line	21
  5747                           ;lcd.c: 21: RE0 = 0;
  5748  0A64  1009               	bcf	(72/8),(72)&7
  5749                           	line	22
  5750                           	
  5751  0A65                     l10592:	
  5752                           ;lcd.c: 22: PORTD = databyte;
  5753  0A65  0822               	movf	(lcd_write_control@databyte),w
  5754  0A66  0088               	movwf	(8)	;volatile
  5755                           	line	23
  5756                           	
  5757  0A67                     l10594:	
  5758                           ;lcd.c: 23: RE2 = 1;
  5759  0A67  1509               	bsf	(74/8),(74)&7
  5760                           	line	24
  5761                           	
  5762  0A68                     l10596:	
  5763                           ;lcd.c: 24: RE2 = 0;
  5764  0A68  1109               	bcf	(74/8),(74)&7
  5765                           	line	25
  5766                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  5767                           	opt asmopt_off
  5768  0A69  300D               movlw	13
  5769  0A6A  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  5770  0A6B  30FB               	movlw	251
  5771  0A6C  00A0               movwf	((??_lcd_write_control+0)+0),f
  5772  0A6D                     u5017:
  5773  0A6D  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  5774  0A6E  2A6D               	goto	u5017
  5775  0A6F  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  5776  0A70  2A6D               	goto	u5017
  5777  0A71  2A72               	nop2
  5778                           opt asmopt_on
  5779                           
  5780                           	line	26
  5781                           	
  5782  0A72                     l1399:	
  5783  0A72  0008               	return
  5784                           	opt stack 0
  5785                           GLOBAL	__end_of_lcd_write_control
  5786  0A73                     	__end_of_lcd_write_control:
  5787 ;; =============== function _lcd_write_control ends ============
  5788                           
  5789                           	signat	_lcd_write_control,4216
  5790                           	global	_init_adc
  5791                           psect	text1202,local,class=CODE,delta=2
  5792                           global __ptext1202
  5793  0A73                     __ptext1202:
  5794                           
  5795 ;; *************** function _init_adc *****************
  5796 ;; Defined at:
  5797 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;		None               void
  5804 ;; Registers used:
  5805 ;;		wreg, status,2
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5811 ;;      Params:         0       0       0       0       0
  5812 ;;      Locals:         0       0       0       0       0
  5813 ;;      Temps:          0       1       0       0       0
  5814 ;;      Totals:         0       1       0       0       0
  5815 ;;Total ram usage:        1 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    3
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		_init
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           psect	text1202
  5825                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5826                           	line	46
  5827                           	global	__size_of_init_adc
  5828  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5829                           	
  5830  0A73                     _init_adc:	
  5831                           	opt	stack 3
  5832                           ; Regs used in _init_adc: [wreg+status,2]
  5833                           	line	48
  5834                           	
  5835  0A73                     l10580:	
  5836                           ;adc.c: 48: PORTA = 0;
  5837  0A73  1283               	bcf	status, 5	;RP0=0, select bank0
  5838  0A74  1303               	bcf	status, 6	;RP1=0, select bank0
  5839  0A75  0185               	clrf	(5)	;volatile
  5840                           	line	49
  5841                           	
  5842  0A76                     l10582:	
  5843                           ;adc.c: 49: TRISA = 0b00111111;
  5844  0A76  303F               	movlw	(03Fh)
  5845  0A77  1683               	bsf	status, 5	;RP0=1, select bank1
  5846  0A78  1303               	bcf	status, 6	;RP1=0, select bank1
  5847  0A79  0085               	movwf	(133)^080h	;volatile
  5848                           	line	52
  5849                           	
  5850  0A7A                     l10584:	
  5851                           ;adc.c: 52: ADCON0 = 0b10100001;
  5852  0A7A  30A1               	movlw	(0A1h)
  5853  0A7B  1283               	bcf	status, 5	;RP0=0, select bank0
  5854  0A7C  1303               	bcf	status, 6	;RP1=0, select bank0
  5855  0A7D  009F               	movwf	(31)	;volatile
  5856                           	line	53
  5857                           	
  5858  0A7E                     l10586:	
  5859                           ;adc.c: 53: ADCON1 = 0b0000010;
  5860  0A7E  3002               	movlw	(02h)
  5861  0A7F  1683               	bsf	status, 5	;RP0=1, select bank1
  5862  0A80  1303               	bcf	status, 6	;RP1=0, select bank1
  5863  0A81  009F               	movwf	(159)^080h	;volatile
  5864                           	line	55
  5865                           	
  5866  0A82                     l10588:	
  5867                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  5868                           	opt asmopt_off
  5869  0A82  3053               movlw	83
  5870  0A83  1283               	bcf	status, 5	;RP0=0, select bank0
  5871  0A84  1303               	bcf	status, 6	;RP1=0, select bank0
  5872  0A85  00A0               movwf	(??_init_adc+0)+0,f
  5873  0A86                     u5027:
  5874  0A86  0BA0               decfsz	(??_init_adc+0)+0,f
  5875  0A87  2A86               	goto	u5027
  5876                           opt asmopt_on
  5877                           
  5878                           	line	57
  5879                           	
  5880  0A88                     l700:	
  5881  0A88  0008               	return
  5882                           	opt stack 0
  5883                           GLOBAL	__end_of_init_adc
  5884  0A89                     	__end_of_init_adc:
  5885 ;; =============== function _init_adc ends ============
  5886                           
  5887                           	signat	_init_adc,88
  5888                           	global	_adc_read_channel
  5889                           psect	text1203,local,class=CODE,delta=2
  5890                           global __ptext1203
  5891  0C28                     __ptext1203:
  5892                           
  5893 ;; *************** function _adc_read_channel *****************
  5894 ;; Defined at:
  5895 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  channel         1    wreg     unsigned char 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  channel         1    7[BANK0 ] unsigned char 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      unsigned char 
  5902 ;; Registers used:
  5903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5909 ;;      Params:         0       0       0       0       0
  5910 ;;      Locals:         0       1       0       0       0
  5911 ;;      Temps:          0       1       0       0       0
  5912 ;;      Totals:         0       2       0       0       0
  5913 ;;Total ram usage:        2 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    4
  5916 ;; This function calls:
  5917 ;;		_adc_read
  5918 ;; This function is called by:
  5919 ;;		_readDistance
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           psect	text1203
  5923                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5924                           	line	5
  5925                           	global	__size_of_adc_read_channel
  5926  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  5927                           	
  5928  0C28                     _adc_read_channel:	
  5929                           	opt	stack 0
  5930                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5931                           ;adc_read_channel@channel stored from wreg
  5932  0C28  1283               	bcf	status, 5	;RP0=0, select bank0
  5933  0C29  1303               	bcf	status, 6	;RP1=0, select bank0
  5934  0C2A  00A7               	movwf	(adc_read_channel@channel)
  5935                           	line	6
  5936                           	
  5937  0C2B                     l10564:	
  5938                           ;adc.c: 6: switch(channel)
  5939  0C2B  2C44               	goto	l10572
  5940                           	line	8
  5941                           ;adc.c: 7: {
  5942                           ;adc.c: 8: case 0:
  5943                           	
  5944  0C2C                     l690:	
  5945                           	line	9
  5946                           ;adc.c: 9: CHS0 = 0;
  5947  0C2C  119F               	bcf	(251/8),(251)&7
  5948                           	line	10
  5949                           ;adc.c: 10: CHS1 = 0;
  5950  0C2D  121F               	bcf	(252/8),(252)&7
  5951                           	line	11
  5952                           ;adc.c: 11: CHS2 = 0;
  5953  0C2E  129F               	bcf	(253/8),(253)&7
  5954                           	line	12
  5955                           ;adc.c: 12: break;
  5956  0C2F  2C55               	goto	l10574
  5957                           	line	13
  5958                           ;adc.c: 13: case 1:
  5959                           	
  5960  0C30                     l692:	
  5961                           	line	14
  5962                           ;adc.c: 14: CHS0 = 1;
  5963  0C30  159F               	bsf	(251/8),(251)&7
  5964                           	line	15
  5965                           ;adc.c: 15: CHS1 = 0;
  5966  0C31  121F               	bcf	(252/8),(252)&7
  5967                           	line	16
  5968                           ;adc.c: 16: CHS2 = 0;
  5969  0C32  129F               	bcf	(253/8),(253)&7
  5970                           	line	17
  5971                           ;adc.c: 17: break;
  5972  0C33  2C55               	goto	l10574
  5973                           	line	18
  5974                           ;adc.c: 18: case 2:
  5975                           	
  5976  0C34                     l693:	
  5977                           	line	19
  5978                           ;adc.c: 19: CHS0 = 0;
  5979  0C34  119F               	bcf	(251/8),(251)&7
  5980                           	line	20
  5981                           ;adc.c: 20: CHS1 = 1;
  5982  0C35  161F               	bsf	(252/8),(252)&7
  5983                           	line	21
  5984                           ;adc.c: 21: CHS2 = 0;
  5985  0C36  129F               	bcf	(253/8),(253)&7
  5986                           	line	22
  5987                           ;adc.c: 22: break;
  5988  0C37  2C55               	goto	l10574
  5989                           	line	23
  5990                           ;adc.c: 23: case 3:
  5991                           	
  5992  0C38                     l694:	
  5993                           	line	24
  5994                           ;adc.c: 24: CHS0 = 1;
  5995  0C38  159F               	bsf	(251/8),(251)&7
  5996                           	line	25
  5997                           ;adc.c: 25: CHS1 = 1;
  5998  0C39  161F               	bsf	(252/8),(252)&7
  5999                           	line	26
  6000                           ;adc.c: 26: CHS2 = 0;
  6001  0C3A  129F               	bcf	(253/8),(253)&7
  6002                           	line	27
  6003                           ;adc.c: 27: break;
  6004  0C3B  2C55               	goto	l10574
  6005                           	line	28
  6006                           ;adc.c: 28: case 4:
  6007                           	
  6008  0C3C                     l695:	
  6009                           	line	29
  6010                           ;adc.c: 29: CHS0 = 0;
  6011  0C3C  119F               	bcf	(251/8),(251)&7
  6012                           	line	30
  6013                           ;adc.c: 30: CHS1 = 0;
  6014  0C3D  121F               	bcf	(252/8),(252)&7
  6015                           	line	31
  6016                           ;adc.c: 31: CHS2 = 1;
  6017  0C3E  169F               	bsf	(253/8),(253)&7
  6018                           	line	32
  6019                           ;adc.c: 32: break;
  6020  0C3F  2C55               	goto	l10574
  6021                           	line	35
  6022                           ;adc.c: 35: default:
  6023                           	
  6024  0C40                     l696:	
  6025                           	line	36
  6026                           	
  6027  0C40                     l10566:	
  6028                           ;adc.c: 36: return 0;
  6029  0C40  3000               	movlw	(0)
  6030  0C41  2C62               	goto	l697
  6031                           	
  6032  0C42                     l10568:	
  6033  0C42  2C62               	goto	l697
  6034                           	line	37
  6035                           	
  6036  0C43                     l10570:	
  6037                           ;adc.c: 37: }
  6038  0C43  2C55               	goto	l10574
  6039                           	line	6
  6040                           	
  6041  0C44                     l689:	
  6042                           	
  6043  0C44                     l10572:	
  6044  0C44  0827               	movf	(adc_read_channel@channel),w
  6045                           	; Switch size 1, requested type "space"
  6046                           ; Number of cases is 5, Range of values is 0 to 4
  6047                           ; switch strategies available:
  6048                           ; Name         Instructions Cycles
  6049                           ; simple_byte           16     9 (average)
  6050                           ; direct_byte           23     8 (fixed)
  6051                           ; jumptable            260     6 (fixed)
  6052                           ; rangetable             9     6 (fixed)
  6053                           ; spacedrange           16     9 (fixed)
  6054                           ; locatedrange           5     3 (fixed)
  6055                           ;	Chosen strategy is simple_byte
  6056                           
  6057                           	opt asmopt_off
  6058  0C45  3A00               	xorlw	0^0	; case 0
  6059  0C46  1903               	skipnz
  6060  0C47  2C2C               	goto	l690
  6061  0C48  3A01               	xorlw	1^0	; case 1
  6062  0C49  1903               	skipnz
  6063  0C4A  2C30               	goto	l692
  6064  0C4B  3A03               	xorlw	2^1	; case 2
  6065  0C4C  1903               	skipnz
  6066  0C4D  2C34               	goto	l693
  6067  0C4E  3A01               	xorlw	3^2	; case 3
  6068  0C4F  1903               	skipnz
  6069  0C50  2C38               	goto	l694
  6070  0C51  3A07               	xorlw	4^3	; case 4
  6071  0C52  1903               	skipnz
  6072  0C53  2C3C               	goto	l695
  6073  0C54  2C40               	goto	l10566
  6074                           	opt asmopt_on
  6075                           
  6076                           	line	37
  6077                           	
  6078  0C55                     l691:	
  6079                           	line	39
  6080                           	
  6081  0C55                     l10574:	
  6082                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6083                           	opt asmopt_off
  6084  0C55  3053               movlw	83
  6085  0C56  00A6               movwf	(??_adc_read_channel+0)+0,f
  6086  0C57                     u5037:
  6087  0C57  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  6088  0C58  2C57               	goto	u5037
  6089                           opt asmopt_on
  6090                           
  6091                           	line	41
  6092                           	
  6093  0C59                     l10576:	
  6094                           ;adc.c: 41: return adc_read();
  6095  0C59  120A  158A  22C0   	fcall	_adc_read
              120A  158A         
  6096  0C5E  1283               	bcf	status, 5	;RP0=0, select bank0
  6097  0C5F  1303               	bcf	status, 6	;RP1=0, select bank0
  6098  0C60  0820               	movf	(0+(?_adc_read)),w
  6099  0C61  2C62               	goto	l697
  6100                           	
  6101  0C62                     l10578:	
  6102                           	line	43
  6103                           	
  6104  0C62                     l697:	
  6105  0C62  0008               	return
  6106                           	opt stack 0
  6107                           GLOBAL	__end_of_adc_read_channel
  6108  0C63                     	__end_of_adc_read_channel:
  6109 ;; =============== function _adc_read_channel ends ============
  6110                           
  6111                           	signat	_adc_read_channel,4217
  6112                           	global	___awmod
  6113                           psect	text1204,local,class=CODE,delta=2
  6114                           global __ptext1204
  6115  0E8D                     __ptext1204:
  6116                           
  6117 ;; *************** function ___awmod *****************
  6118 ;; Defined at:
  6119 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  divisor         2    0[BANK0 ] int 
  6122 ;;  dividend        2    2[BANK0 ] int 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  sign            1    6[BANK0 ] unsigned char 
  6125 ;;  counter         1    5[BANK0 ] unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2    0[BANK0 ] int 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6135 ;;      Params:         0       4       0       0       0
  6136 ;;      Locals:         0       2       0       0       0
  6137 ;;      Temps:          0       1       0       0       0
  6138 ;;      Totals:         0       7       0       0       0
  6139 ;;Total ram usage:        7 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    3
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_UpdateDisplay
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           psect	text1204
  6149                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6150                           	line	5
  6151                           	global	__size_of___awmod
  6152  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6153                           	
  6154  0E8D                     ___awmod:	
  6155                           	opt	stack 2
  6156                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6157                           	line	8
  6158                           	
  6159  0E8D                     l10508:	
  6160  0E8D  1283               	bcf	status, 5	;RP0=0, select bank0
  6161  0E8E  1303               	bcf	status, 6	;RP1=0, select bank0
  6162  0E8F  01A6               	clrf	(___awmod@sign)
  6163                           	line	9
  6164  0E90  1FA3               	btfss	(___awmod@dividend+1),7
  6165  0E91  2E93               	goto	u4031
  6166  0E92  2E94               	goto	u4030
  6167  0E93                     u4031:
  6168  0E93  2E9D               	goto	l10512
  6169  0E94                     u4030:
  6170                           	line	10
  6171                           	
  6172  0E94                     l10510:	
  6173  0E94  09A2               	comf	(___awmod@dividend),f
  6174  0E95  09A3               	comf	(___awmod@dividend+1),f
  6175  0E96  0AA2               	incf	(___awmod@dividend),f
  6176  0E97  1903               	skipnz
  6177  0E98  0AA3               	incf	(___awmod@dividend+1),f
  6178                           	line	11
  6179  0E99  01A6               	clrf	(___awmod@sign)
  6180  0E9A  1403               	bsf	status,0
  6181  0E9B  0DA6               	rlf	(___awmod@sign),f
  6182  0E9C  2E9D               	goto	l10512
  6183                           	line	12
  6184                           	
  6185  0E9D                     l7636:	
  6186                           	line	13
  6187                           	
  6188  0E9D                     l10512:	
  6189  0E9D  1FA1               	btfss	(___awmod@divisor+1),7
  6190  0E9E  2EA0               	goto	u4041
  6191  0E9F  2EA1               	goto	u4040
  6192  0EA0                     u4041:
  6193  0EA0  2EA7               	goto	l10516
  6194  0EA1                     u4040:
  6195                           	line	14
  6196                           	
  6197  0EA1                     l10514:	
  6198  0EA1  09A0               	comf	(___awmod@divisor),f
  6199  0EA2  09A1               	comf	(___awmod@divisor+1),f
  6200  0EA3  0AA0               	incf	(___awmod@divisor),f
  6201  0EA4  1903               	skipnz
  6202  0EA5  0AA1               	incf	(___awmod@divisor+1),f
  6203  0EA6  2EA7               	goto	l10516
  6204                           	
  6205  0EA7                     l7637:	
  6206                           	line	15
  6207                           	
  6208  0EA7                     l10516:	
  6209  0EA7  0821               	movf	(___awmod@divisor+1),w
  6210  0EA8  0420               	iorwf	(___awmod@divisor),w
  6211  0EA9  1903               	skipnz
  6212  0EAA  2EAC               	goto	u4051
  6213  0EAB  2EAD               	goto	u4050
  6214  0EAC                     u4051:
  6215  0EAC  2EE3               	goto	l10534
  6216  0EAD                     u4050:
  6217                           	line	16
  6218                           	
  6219  0EAD                     l10518:	
  6220  0EAD  01A5               	clrf	(___awmod@counter)
  6221  0EAE  1403               	bsf	status,0
  6222  0EAF  0DA5               	rlf	(___awmod@counter),f
  6223                           	line	17
  6224  0EB0  2EBD               	goto	l10524
  6225                           	
  6226  0EB1                     l7640:	
  6227                           	line	18
  6228                           	
  6229  0EB1                     l10520:	
  6230  0EB1  3001               	movlw	01h
  6231                           	
  6232  0EB2                     u4065:
  6233  0EB2  1003               	clrc
  6234  0EB3  0DA0               	rlf	(___awmod@divisor),f
  6235  0EB4  0DA1               	rlf	(___awmod@divisor+1),f
  6236  0EB5  3EFF               	addlw	-1
  6237  0EB6  1D03               	skipz
  6238  0EB7  2EB2               	goto	u4065
  6239                           	line	19
  6240                           	
  6241  0EB8                     l10522:	
  6242  0EB8  3001               	movlw	(01h)
  6243  0EB9  00A4               	movwf	(??___awmod+0)+0
  6244  0EBA  0824               	movf	(??___awmod+0)+0,w
  6245  0EBB  07A5               	addwf	(___awmod@counter),f
  6246  0EBC  2EBD               	goto	l10524
  6247                           	line	20
  6248                           	
  6249  0EBD                     l7639:	
  6250                           	line	17
  6251                           	
  6252  0EBD                     l10524:	
  6253  0EBD  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  6254  0EBE  2EC0               	goto	u4071
  6255  0EBF  2EC1               	goto	u4070
  6256  0EC0                     u4071:
  6257  0EC0  2EB1               	goto	l10520
  6258  0EC1                     u4070:
  6259  0EC1  2EC3               	goto	l10526
  6260                           	
  6261  0EC2                     l7641:	
  6262  0EC2  2EC3               	goto	l10526
  6263                           	line	21
  6264                           	
  6265  0EC3                     l7642:	
  6266                           	line	22
  6267                           	
  6268  0EC3                     l10526:	
  6269  0EC3  0821               	movf	(___awmod@divisor+1),w
  6270  0EC4  0223               	subwf	(___awmod@dividend+1),w
  6271  0EC5  1D03               	skipz
  6272  0EC6  2EC9               	goto	u4085
  6273  0EC7  0820               	movf	(___awmod@divisor),w
  6274  0EC8  0222               	subwf	(___awmod@dividend),w
  6275  0EC9                     u4085:
  6276  0EC9  1C03               	skipc
  6277  0ECA  2ECC               	goto	u4081
  6278  0ECB  2ECD               	goto	u4080
  6279  0ECC                     u4081:
  6280  0ECC  2ED4               	goto	l10530
  6281  0ECD                     u4080:
  6282                           	line	23
  6283                           	
  6284  0ECD                     l10528:	
  6285  0ECD  0820               	movf	(___awmod@divisor),w
  6286  0ECE  02A2               	subwf	(___awmod@dividend),f
  6287  0ECF  0821               	movf	(___awmod@divisor+1),w
  6288  0ED0  1C03               	skipc
  6289  0ED1  03A3               	decf	(___awmod@dividend+1),f
  6290  0ED2  02A3               	subwf	(___awmod@dividend+1),f
  6291  0ED3  2ED4               	goto	l10530
  6292                           	
  6293  0ED4                     l7643:	
  6294                           	line	24
  6295                           	
  6296  0ED4                     l10530:	
  6297  0ED4  3001               	movlw	01h
  6298                           	
  6299  0ED5                     u4095:
  6300  0ED5  1003               	clrc
  6301  0ED6  0CA1               	rrf	(___awmod@divisor+1),f
  6302  0ED7  0CA0               	rrf	(___awmod@divisor),f
  6303  0ED8  3EFF               	addlw	-1
  6304  0ED9  1D03               	skipz
  6305  0EDA  2ED5               	goto	u4095
  6306                           	line	25
  6307                           	
  6308  0EDB                     l10532:	
  6309  0EDB  3001               	movlw	low(01h)
  6310  0EDC  02A5               	subwf	(___awmod@counter),f
  6311  0EDD  1D03               	btfss	status,2
  6312  0EDE  2EE0               	goto	u4101
  6313  0EDF  2EE1               	goto	u4100
  6314  0EE0                     u4101:
  6315  0EE0  2EC3               	goto	l10526
  6316  0EE1                     u4100:
  6317  0EE1  2EE3               	goto	l10534
  6318                           	
  6319  0EE2                     l7644:	
  6320  0EE2  2EE3               	goto	l10534
  6321                           	line	26
  6322                           	
  6323  0EE3                     l7638:	
  6324                           	line	27
  6325                           	
  6326  0EE3                     l10534:	
  6327  0EE3  0826               	movf	(___awmod@sign),w
  6328  0EE4  1D03               	skipz
  6329  0EE5  2EE7               	goto	u4110
  6330  0EE6  2EED               	goto	l10538
  6331  0EE7                     u4110:
  6332                           	line	28
  6333                           	
  6334  0EE7                     l10536:	
  6335  0EE7  09A2               	comf	(___awmod@dividend),f
  6336  0EE8  09A3               	comf	(___awmod@dividend+1),f
  6337  0EE9  0AA2               	incf	(___awmod@dividend),f
  6338  0EEA  1903               	skipnz
  6339  0EEB  0AA3               	incf	(___awmod@dividend+1),f
  6340  0EEC  2EED               	goto	l10538
  6341                           	
  6342  0EED                     l7645:	
  6343                           	line	29
  6344                           	
  6345  0EED                     l10538:	
  6346  0EED  0823               	movf	(___awmod@dividend+1),w
  6347  0EEE  01A1               	clrf	(?___awmod+1)
  6348  0EEF  07A1               	addwf	(?___awmod+1)
  6349  0EF0  0822               	movf	(___awmod@dividend),w
  6350  0EF1  01A0               	clrf	(?___awmod)
  6351  0EF2  07A0               	addwf	(?___awmod)
  6352                           
  6353  0EF3  2EF4               	goto	l7646
  6354                           	
  6355  0EF4                     l10540:	
  6356                           	line	30
  6357                           	
  6358  0EF4                     l7646:	
  6359  0EF4  0008               	return
  6360                           	opt stack 0
  6361                           GLOBAL	__end_of___awmod
  6362  0EF5                     	__end_of___awmod:
  6363 ;; =============== function ___awmod ends ============
  6364                           
  6365                           	signat	___awmod,8314
  6366                           	global	___lwmod
  6367                           psect	text1205,local,class=CODE,delta=2
  6368                           global __ptext1205
  6369  0CA7                     __ptext1205:
  6370                           
  6371 ;; *************** function ___lwmod *****************
  6372 ;; Defined at:
  6373 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  divisor         2   14[BANK0 ] unsigned int 
  6376 ;;  dividend        2   16[BANK0 ] unsigned int 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  counter         1   19[BANK0 ] unsigned char 
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  2   14[BANK0 ] unsigned int 
  6381 ;; Registers used:
  6382 ;;		wreg, status,2, status,0
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6388 ;;      Params:         0       4       0       0       0
  6389 ;;      Locals:         0       1       0       0       0
  6390 ;;      Temps:          0       1       0       0       0
  6391 ;;      Totals:         0       6       0       0       0
  6392 ;;Total ram usage:        6 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; Hardware stack levels required when called:    3
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		_sprintf
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           psect	text1205
  6402                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6403                           	line	5
  6404                           	global	__size_of___lwmod
  6405  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6406                           	
  6407  0CA7                     ___lwmod:	
  6408                           	opt	stack 1
  6409                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6410                           	line	8
  6411                           	
  6412  0CA7                     l10486:	
  6413  0CA7  1283               	bcf	status, 5	;RP0=0, select bank0
  6414  0CA8  1303               	bcf	status, 6	;RP1=0, select bank0
  6415  0CA9  082F               	movf	(___lwmod@divisor+1),w
  6416  0CAA  042E               	iorwf	(___lwmod@divisor),w
  6417  0CAB  1903               	skipnz
  6418  0CAC  2CAE               	goto	u3971
  6419  0CAD  2CAF               	goto	u3970
  6420  0CAE                     u3971:
  6421  0CAE  2CE5               	goto	l10504
  6422  0CAF                     u3970:
  6423                           	line	9
  6424                           	
  6425  0CAF                     l10488:	
  6426  0CAF  01B3               	clrf	(___lwmod@counter)
  6427  0CB0  1403               	bsf	status,0
  6428  0CB1  0DB3               	rlf	(___lwmod@counter),f
  6429                           	line	10
  6430  0CB2  2CBF               	goto	l10494
  6431                           	
  6432  0CB3                     l7446:	
  6433                           	line	11
  6434                           	
  6435  0CB3                     l10490:	
  6436  0CB3  3001               	movlw	01h
  6437                           	
  6438  0CB4                     u3985:
  6439  0CB4  1003               	clrc
  6440  0CB5  0DAE               	rlf	(___lwmod@divisor),f
  6441  0CB6  0DAF               	rlf	(___lwmod@divisor+1),f
  6442  0CB7  3EFF               	addlw	-1
  6443  0CB8  1D03               	skipz
  6444  0CB9  2CB4               	goto	u3985
  6445                           	line	12
  6446                           	
  6447  0CBA                     l10492:	
  6448  0CBA  3001               	movlw	(01h)
  6449  0CBB  00B2               	movwf	(??___lwmod+0)+0
  6450  0CBC  0832               	movf	(??___lwmod+0)+0,w
  6451  0CBD  07B3               	addwf	(___lwmod@counter),f
  6452  0CBE  2CBF               	goto	l10494
  6453                           	line	13
  6454                           	
  6455  0CBF                     l7445:	
  6456                           	line	10
  6457                           	
  6458  0CBF                     l10494:	
  6459  0CBF  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  6460  0CC0  2CC2               	goto	u3991
  6461  0CC1  2CC3               	goto	u3990
  6462  0CC2                     u3991:
  6463  0CC2  2CB3               	goto	l10490
  6464  0CC3                     u3990:
  6465  0CC3  2CC5               	goto	l10496
  6466                           	
  6467  0CC4                     l7447:	
  6468  0CC4  2CC5               	goto	l10496
  6469                           	line	14
  6470                           	
  6471  0CC5                     l7448:	
  6472                           	line	15
  6473                           	
  6474  0CC5                     l10496:	
  6475  0CC5  082F               	movf	(___lwmod@divisor+1),w
  6476  0CC6  0231               	subwf	(___lwmod@dividend+1),w
  6477  0CC7  1D03               	skipz
  6478  0CC8  2CCB               	goto	u4005
  6479  0CC9  082E               	movf	(___lwmod@divisor),w
  6480  0CCA  0230               	subwf	(___lwmod@dividend),w
  6481  0CCB                     u4005:
  6482  0CCB  1C03               	skipc
  6483  0CCC  2CCE               	goto	u4001
  6484  0CCD  2CCF               	goto	u4000
  6485  0CCE                     u4001:
  6486  0CCE  2CD6               	goto	l10500
  6487  0CCF                     u4000:
  6488                           	line	16
  6489                           	
  6490  0CCF                     l10498:	
  6491  0CCF  082E               	movf	(___lwmod@divisor),w
  6492  0CD0  02B0               	subwf	(___lwmod@dividend),f
  6493  0CD1  082F               	movf	(___lwmod@divisor+1),w
  6494  0CD2  1C03               	skipc
  6495  0CD3  03B1               	decf	(___lwmod@dividend+1),f
  6496  0CD4  02B1               	subwf	(___lwmod@dividend+1),f
  6497  0CD5  2CD6               	goto	l10500
  6498                           	
  6499  0CD6                     l7449:	
  6500                           	line	17
  6501                           	
  6502  0CD6                     l10500:	
  6503  0CD6  3001               	movlw	01h
  6504                           	
  6505  0CD7                     u4015:
  6506  0CD7  1003               	clrc
  6507  0CD8  0CAF               	rrf	(___lwmod@divisor+1),f
  6508  0CD9  0CAE               	rrf	(___lwmod@divisor),f
  6509  0CDA  3EFF               	addlw	-1
  6510  0CDB  1D03               	skipz
  6511  0CDC  2CD7               	goto	u4015
  6512                           	line	18
  6513                           	
  6514  0CDD                     l10502:	
  6515  0CDD  3001               	movlw	low(01h)
  6516  0CDE  02B3               	subwf	(___lwmod@counter),f
  6517  0CDF  1D03               	btfss	status,2
  6518  0CE0  2CE2               	goto	u4021
  6519  0CE1  2CE3               	goto	u4020
  6520  0CE2                     u4021:
  6521  0CE2  2CC5               	goto	l10496
  6522  0CE3                     u4020:
  6523  0CE3  2CE5               	goto	l10504
  6524                           	
  6525  0CE4                     l7450:	
  6526  0CE4  2CE5               	goto	l10504
  6527                           	line	19
  6528                           	
  6529  0CE5                     l7444:	
  6530                           	line	20
  6531                           	
  6532  0CE5                     l10504:	
  6533  0CE5  0831               	movf	(___lwmod@dividend+1),w
  6534  0CE6  01AF               	clrf	(?___lwmod+1)
  6535  0CE7  07AF               	addwf	(?___lwmod+1)
  6536  0CE8  0830               	movf	(___lwmod@dividend),w
  6537  0CE9  01AE               	clrf	(?___lwmod)
  6538  0CEA  07AE               	addwf	(?___lwmod)
  6539                           
  6540  0CEB  2CEC               	goto	l7451
  6541                           	
  6542  0CEC                     l10506:	
  6543                           	line	21
  6544                           	
  6545  0CEC                     l7451:	
  6546  0CEC  0008               	return
  6547                           	opt stack 0
  6548                           GLOBAL	__end_of___lwmod
  6549  0CED                     	__end_of___lwmod:
  6550 ;; =============== function ___lwmod ends ============
  6551                           
  6552                           	signat	___lwmod,8314
  6553                           	global	___lwdiv
  6554                           psect	text1206,local,class=CODE,delta=2
  6555                           global __ptext1206
  6556  0D34                     __ptext1206:
  6557                           
  6558 ;; *************** function ___lwdiv *****************
  6559 ;; Defined at:
  6560 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  divisor         2    6[BANK0 ] unsigned int 
  6563 ;;  dividend        2    8[BANK0 ] unsigned int 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  quotient        2   11[BANK0 ] unsigned int 
  6566 ;;  counter         1   13[BANK0 ] unsigned char 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  2    6[BANK0 ] unsigned int 
  6569 ;; Registers used:
  6570 ;;		wreg, status,2, status,0
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6576 ;;      Params:         0       4       0       0       0
  6577 ;;      Locals:         0       3       0       0       0
  6578 ;;      Temps:          0       1       0       0       0
  6579 ;;      Totals:         0       8       0       0       0
  6580 ;;Total ram usage:        8 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    3
  6583 ;; This function calls:
  6584 ;;		Nothing
  6585 ;; This function is called by:
  6586 ;;		_readAvgDistance
  6587 ;;		_ADCconvert
  6588 ;;		_sprintf
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           psect	text1206
  6592                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6593                           	line	5
  6594                           	global	__size_of___lwdiv
  6595  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6596                           	
  6597  0D34                     ___lwdiv:	
  6598                           	opt	stack 1
  6599                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6600                           	line	9
  6601                           	
  6602  0D34                     l10460:	
  6603  0D34  1283               	bcf	status, 5	;RP0=0, select bank0
  6604  0D35  1303               	bcf	status, 6	;RP1=0, select bank0
  6605  0D36  01AB               	clrf	(___lwdiv@quotient)
  6606  0D37  01AC               	clrf	(___lwdiv@quotient+1)
  6607                           	line	10
  6608                           	
  6609  0D38                     l10462:	
  6610  0D38  0827               	movf	(___lwdiv@divisor+1),w
  6611  0D39  0426               	iorwf	(___lwdiv@divisor),w
  6612  0D3A  1903               	skipnz
  6613  0D3B  2D3D               	goto	u3901
  6614  0D3C  2D3E               	goto	u3900
  6615  0D3D                     u3901:
  6616  0D3D  2D7C               	goto	l10482
  6617  0D3E                     u3900:
  6618                           	line	11
  6619                           	
  6620  0D3E                     l10464:	
  6621  0D3E  01AD               	clrf	(___lwdiv@counter)
  6622  0D3F  1403               	bsf	status,0
  6623  0D40  0DAD               	rlf	(___lwdiv@counter),f
  6624                           	line	12
  6625  0D41  2D4E               	goto	l10470
  6626                           	
  6627  0D42                     l7436:	
  6628                           	line	13
  6629                           	
  6630  0D42                     l10466:	
  6631  0D42  3001               	movlw	01h
  6632                           	
  6633  0D43                     u3915:
  6634  0D43  1003               	clrc
  6635  0D44  0DA6               	rlf	(___lwdiv@divisor),f
  6636  0D45  0DA7               	rlf	(___lwdiv@divisor+1),f
  6637  0D46  3EFF               	addlw	-1
  6638  0D47  1D03               	skipz
  6639  0D48  2D43               	goto	u3915
  6640                           	line	14
  6641                           	
  6642  0D49                     l10468:	
  6643  0D49  3001               	movlw	(01h)
  6644  0D4A  00AA               	movwf	(??___lwdiv+0)+0
  6645  0D4B  082A               	movf	(??___lwdiv+0)+0,w
  6646  0D4C  07AD               	addwf	(___lwdiv@counter),f
  6647  0D4D  2D4E               	goto	l10470
  6648                           	line	15
  6649                           	
  6650  0D4E                     l7435:	
  6651                           	line	12
  6652                           	
  6653  0D4E                     l10470:	
  6654  0D4E  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  6655  0D4F  2D51               	goto	u3921
  6656  0D50  2D52               	goto	u3920
  6657  0D51                     u3921:
  6658  0D51  2D42               	goto	l10466
  6659  0D52                     u3920:
  6660  0D52  2D54               	goto	l10472
  6661                           	
  6662  0D53                     l7437:	
  6663  0D53  2D54               	goto	l10472
  6664                           	line	16
  6665                           	
  6666  0D54                     l7438:	
  6667                           	line	17
  6668                           	
  6669  0D54                     l10472:	
  6670  0D54  3001               	movlw	01h
  6671                           	
  6672  0D55                     u3935:
  6673  0D55  1003               	clrc
  6674  0D56  0DAB               	rlf	(___lwdiv@quotient),f
  6675  0D57  0DAC               	rlf	(___lwdiv@quotient+1),f
  6676  0D58  3EFF               	addlw	-1
  6677  0D59  1D03               	skipz
  6678  0D5A  2D55               	goto	u3935
  6679                           	line	18
  6680  0D5B  0827               	movf	(___lwdiv@divisor+1),w
  6681  0D5C  0229               	subwf	(___lwdiv@dividend+1),w
  6682  0D5D  1D03               	skipz
  6683  0D5E  2D61               	goto	u3945
  6684  0D5F  0826               	movf	(___lwdiv@divisor),w
  6685  0D60  0228               	subwf	(___lwdiv@dividend),w
  6686  0D61                     u3945:
  6687  0D61  1C03               	skipc
  6688  0D62  2D64               	goto	u3941
  6689  0D63  2D65               	goto	u3940
  6690  0D64                     u3941:
  6691  0D64  2D6D               	goto	l10478
  6692  0D65                     u3940:
  6693                           	line	19
  6694                           	
  6695  0D65                     l10474:	
  6696  0D65  0826               	movf	(___lwdiv@divisor),w
  6697  0D66  02A8               	subwf	(___lwdiv@dividend),f
  6698  0D67  0827               	movf	(___lwdiv@divisor+1),w
  6699  0D68  1C03               	skipc
  6700  0D69  03A9               	decf	(___lwdiv@dividend+1),f
  6701  0D6A  02A9               	subwf	(___lwdiv@dividend+1),f
  6702                           	line	20
  6703                           	
  6704  0D6B                     l10476:	
  6705  0D6B  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  6706  0D6C  2D6D               	goto	l10478
  6707                           	line	21
  6708                           	
  6709  0D6D                     l7439:	
  6710                           	line	22
  6711                           	
  6712  0D6D                     l10478:	
  6713  0D6D  3001               	movlw	01h
  6714                           	
  6715  0D6E                     u3955:
  6716  0D6E  1003               	clrc
  6717  0D6F  0CA7               	rrf	(___lwdiv@divisor+1),f
  6718  0D70  0CA6               	rrf	(___lwdiv@divisor),f
  6719  0D71  3EFF               	addlw	-1
  6720  0D72  1D03               	skipz
  6721  0D73  2D6E               	goto	u3955
  6722                           	line	23
  6723                           	
  6724  0D74                     l10480:	
  6725  0D74  3001               	movlw	low(01h)
  6726  0D75  02AD               	subwf	(___lwdiv@counter),f
  6727  0D76  1D03               	btfss	status,2
  6728  0D77  2D79               	goto	u3961
  6729  0D78  2D7A               	goto	u3960
  6730  0D79                     u3961:
  6731  0D79  2D54               	goto	l10472
  6732  0D7A                     u3960:
  6733  0D7A  2D7C               	goto	l10482
  6734                           	
  6735  0D7B                     l7440:	
  6736  0D7B  2D7C               	goto	l10482
  6737                           	line	24
  6738                           	
  6739  0D7C                     l7434:	
  6740                           	line	25
  6741                           	
  6742  0D7C                     l10482:	
  6743  0D7C  082C               	movf	(___lwdiv@quotient+1),w
  6744  0D7D  01A7               	clrf	(?___lwdiv+1)
  6745  0D7E  07A7               	addwf	(?___lwdiv+1)
  6746  0D7F  082B               	movf	(___lwdiv@quotient),w
  6747  0D80  01A6               	clrf	(?___lwdiv)
  6748  0D81  07A6               	addwf	(?___lwdiv)
  6749                           
  6750  0D82  2D83               	goto	l7441
  6751                           	
  6752  0D83                     l10484:	
  6753                           	line	26
  6754                           	
  6755  0D83                     l7441:	
  6756  0D83  0008               	return
  6757                           	opt stack 0
  6758                           GLOBAL	__end_of___lwdiv
  6759  0D84                     	__end_of___lwdiv:
  6760 ;; =============== function ___lwdiv ends ============
  6761                           
  6762                           	signat	___lwdiv,8314
  6763                           	global	___wmul
  6764                           psect	text1207,local,class=CODE,delta=2
  6765                           global __ptext1207
  6766  0B14                     __ptext1207:
  6767                           
  6768 ;; *************** function ___wmul *****************
  6769 ;; Defined at:
  6770 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6773 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  product         2    4[BANK0 ] unsigned int 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  2    0[BANK0 ] unsigned int 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6785 ;;      Params:         0       4       0       0       0
  6786 ;;      Locals:         0       2       0       0       0
  6787 ;;      Temps:          0       0       0       0       0
  6788 ;;      Totals:         0       6       0       0       0
  6789 ;;Total ram usage:        6 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    3
  6792 ;; This function calls:
  6793 ;;		Nothing
  6794 ;; This function is called by:
  6795 ;;		_ADCconvert
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           psect	text1207
  6799                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6800                           	line	3
  6801                           	global	__size_of___wmul
  6802  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6803                           	
  6804  0B14                     ___wmul:	
  6805                           	opt	stack 1
  6806                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6807                           	line	4
  6808                           	
  6809  0B14                     l10448:	
  6810  0B14  1283               	bcf	status, 5	;RP0=0, select bank0
  6811  0B15  1303               	bcf	status, 6	;RP1=0, select bank0
  6812  0B16  01A4               	clrf	(___wmul@product)
  6813  0B17  01A5               	clrf	(___wmul@product+1)
  6814  0B18  2B19               	goto	l10450
  6815                           	line	6
  6816                           	
  6817  0B19                     l7428:	
  6818                           	line	7
  6819                           	
  6820  0B19                     l10450:	
  6821  0B19  1C20               	btfss	(___wmul@multiplier),(0)&7
  6822  0B1A  2B1C               	goto	u3861
  6823  0B1B  2B1D               	goto	u3860
  6824  0B1C                     u3861:
  6825  0B1C  2B23               	goto	l7429
  6826  0B1D                     u3860:
  6827                           	line	8
  6828                           	
  6829  0B1D                     l10452:	
  6830  0B1D  0822               	movf	(___wmul@multiplicand),w
  6831  0B1E  07A4               	addwf	(___wmul@product),f
  6832  0B1F  1803               	skipnc
  6833  0B20  0AA5               	incf	(___wmul@product+1),f
  6834  0B21  0823               	movf	(___wmul@multiplicand+1),w
  6835  0B22  07A5               	addwf	(___wmul@product+1),f
  6836                           	
  6837  0B23                     l7429:	
  6838                           	line	9
  6839  0B23  3001               	movlw	01h
  6840                           	
  6841  0B24                     u3875:
  6842  0B24  1003               	clrc
  6843  0B25  0DA2               	rlf	(___wmul@multiplicand),f
  6844  0B26  0DA3               	rlf	(___wmul@multiplicand+1),f
  6845  0B27  3EFF               	addlw	-1
  6846  0B28  1D03               	skipz
  6847  0B29  2B24               	goto	u3875
  6848                           	line	10
  6849                           	
  6850  0B2A                     l10454:	
  6851  0B2A  3001               	movlw	01h
  6852                           	
  6853  0B2B                     u3885:
  6854  0B2B  1003               	clrc
  6855  0B2C  0CA1               	rrf	(___wmul@multiplier+1),f
  6856  0B2D  0CA0               	rrf	(___wmul@multiplier),f
  6857  0B2E  3EFF               	addlw	-1
  6858  0B2F  1D03               	skipz
  6859  0B30  2B2B               	goto	u3885
  6860                           	line	11
  6861  0B31  0821               	movf	((___wmul@multiplier+1)),w
  6862  0B32  0420               	iorwf	((___wmul@multiplier)),w
  6863  0B33  1D03               	skipz
  6864  0B34  2B36               	goto	u3891
  6865  0B35  2B37               	goto	u3890
  6866  0B36                     u3891:
  6867  0B36  2B19               	goto	l10450
  6868  0B37                     u3890:
  6869  0B37  2B38               	goto	l10456
  6870                           	
  6871  0B38                     l7430:	
  6872                           	line	12
  6873                           	
  6874  0B38                     l10456:	
  6875  0B38  0825               	movf	(___wmul@product+1),w
  6876  0B39  01A1               	clrf	(?___wmul+1)
  6877  0B3A  07A1               	addwf	(?___wmul+1)
  6878  0B3B  0824               	movf	(___wmul@product),w
  6879  0B3C  01A0               	clrf	(?___wmul)
  6880  0B3D  07A0               	addwf	(?___wmul)
  6881                           
  6882  0B3E  2B3F               	goto	l7431
  6883                           	
  6884  0B3F                     l10458:	
  6885                           	line	13
  6886                           	
  6887  0B3F                     l7431:	
  6888  0B3F  0008               	return
  6889                           	opt stack 0
  6890                           GLOBAL	__end_of___wmul
  6891  0B40                     	__end_of___wmul:
  6892 ;; =============== function ___wmul ends ============
  6893                           
  6894                           	signat	___wmul,8314
  6895                           	global	_ser_putch
  6896                           psect	text1208,local,class=CODE,delta=2
  6897                           global __ptext1208
  6898  0A9F                     __ptext1208:
  6899                           
  6900 ;; *************** function _ser_putch *****************
  6901 ;; Defined at:
  6902 ;;		line 71 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  c               1    wreg     unsigned char 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  c               1    1[BANK0 ] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;		None               void
  6909 ;; Registers used:
  6910 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6916 ;;      Params:         0       0       0       0       0
  6917 ;;      Locals:         0       1       0       0       0
  6918 ;;      Temps:          0       1       0       0       0
  6919 ;;      Totals:         0       2       0       0       0
  6920 ;;Total ram usage:        2 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    3
  6923 ;; This function calls:
  6924 ;;		Nothing
  6925 ;; This function is called by:
  6926 ;;		_robo_init
  6927 ;;		_robot_read
  6928 ;;		_robotMove
  6929 ;;		_robotTurn
  6930 ;;		_ser_puts
  6931 ;;		_ser_puts2
  6932 ;;		_ser_puthex
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           psect	text1208
  6936                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  6937                           	line	71
  6938                           	global	__size_of_ser_putch
  6939  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  6940                           	
  6941  0A9F                     _ser_putch:	
  6942                           	opt	stack 3
  6943                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  6944                           ;ser_putch@c stored from wreg
  6945  0A9F  1283               	bcf	status, 5	;RP0=0, select bank0
  6946  0AA0  1303               	bcf	status, 6	;RP1=0, select bank0
  6947  0AA1  00A1               	movwf	(ser_putch@c)
  6948                           	line	72
  6949                           	
  6950  0AA2                     l10362:	
  6951                           ;ser.c: 72: while (((txiptr+1) & (16-1))==txoptr)
  6952  0AA2  2AA4               	goto	l10364
  6953                           	
  6954  0AA3                     l4426:	
  6955                           	line	73
  6956                           ;ser.c: 73: continue;
  6957  0AA3  2AA4               	goto	l10364
  6958                           	
  6959  0AA4                     l4425:	
  6960                           	line	72
  6961                           	
  6962  0AA4                     l10364:	
  6963  0AA4  086D               	movf	(_txiptr),w	;volatile
  6964  0AA5  3E01               	addlw	01h
  6965  0AA6  390F               	andlw	0Fh
  6966  0AA7  066E               	xorwf	(_txoptr),w	;volatile
  6967  0AA8  1903               	skipnz
  6968  0AA9  2AAB               	goto	u3651
  6969  0AAA  2AAC               	goto	u3650
  6970  0AAB                     u3651:
  6971  0AAB  2AA4               	goto	l10364
  6972  0AAC                     u3650:
  6973                           	
  6974  0AAC                     l4427:	
  6975                           	line	74
  6976                           ;ser.c: 74: GIE=0;
  6977  0AAC  138B               	bcf	(95/8),(95)&7
  6978                           	line	75
  6979                           	
  6980  0AAD                     l10366:	
  6981                           ;ser.c: 75: txfifo[txiptr] = c;
  6982  0AAD  0821               	movf	(ser_putch@c),w
  6983  0AAE  00A0               	movwf	(??_ser_putch+0)+0
  6984  0AAF  086D               	movf	(_txiptr),w
  6985  0AB0  3EB0               	addlw	_txfifo&0ffh
  6986  0AB1  0084               	movwf	fsr0
  6987  0AB2  0820               	movf	(??_ser_putch+0)+0,w
  6988  0AB3  1383               	bcf	status, 7	;select IRP bank1
  6989  0AB4  0080               	movwf	indf
  6990                           	line	76
  6991                           	
  6992  0AB5                     l10368:	
  6993                           ;ser.c: 76: txiptr=(txiptr+1) & (16-1);
  6994  0AB5  086D               	movf	(_txiptr),w	;volatile
  6995  0AB6  3E01               	addlw	01h
  6996  0AB7  390F               	andlw	0Fh
  6997  0AB8  00A0               	movwf	(??_ser_putch+0)+0
  6998  0AB9  0820               	movf	(??_ser_putch+0)+0,w
  6999  0ABA  00ED               	movwf	(_txiptr)	;volatile
  7000                           	line	77
  7001                           	
  7002  0ABB                     l10370:	
  7003                           ;ser.c: 77: TXIE=1;
  7004  0ABB  1683               	bsf	status, 5	;RP0=1, select bank1
  7005  0ABC  1303               	bcf	status, 6	;RP1=0, select bank1
  7006  0ABD  160C               	bsf	(1124/8)^080h,(1124)&7
  7007                           	line	78
  7008                           	
  7009  0ABE                     l10372:	
  7010                           ;ser.c: 78: GIE=1;
  7011  0ABE  178B               	bsf	(95/8),(95)&7
  7012                           	line	79
  7013                           	
  7014  0ABF                     l4428:	
  7015  0ABF  0008               	return
  7016                           	opt stack 0
  7017                           GLOBAL	__end_of_ser_putch
  7018  0AC0                     	__end_of_ser_putch:
  7019 ;; =============== function _ser_putch ends ============
  7020                           
  7021                           	signat	_ser_putch,4216
  7022                           	global	_spi_transfer
  7023                           psect	text1209,local,class=CODE,delta=2
  7024                           global __ptext1209
  7025  0A4B                     __ptext1209:
  7026                           
  7027 ;; *************** function _spi_transfer *****************
  7028 ;; Defined at:
  7029 ;;		line 34 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  data            1    wreg     unsigned char 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  data            1    2[BANK0 ] unsigned char 
  7034 ;;  temp            1    1[BANK0 ] unsigned char 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  1    wreg      unsigned char 
  7037 ;; Registers used:
  7038 ;;		wreg
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7044 ;;      Params:         0       0       0       0       0
  7045 ;;      Locals:         0       2       0       0       0
  7046 ;;      Temps:          0       1       0       0       0
  7047 ;;      Totals:         0       3       0       0       0
  7048 ;;Total ram usage:        3 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:    3
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_rotate
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           psect	text1209
  7058                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7059                           	line	34
  7060                           	global	__size_of_spi_transfer
  7061  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  7062                           	
  7063  0A4B                     _spi_transfer:	
  7064                           	opt	stack 3
  7065                           ; Regs used in _spi_transfer: [wreg]
  7066                           ;spi_transfer@data stored from wreg
  7067  0A4B  1283               	bcf	status, 5	;RP0=0, select bank0
  7068  0A4C  1303               	bcf	status, 6	;RP1=0, select bank0
  7069  0A4D  00A2               	movwf	(spi_transfer@data)
  7070                           	line	35
  7071                           	
  7072  0A4E                     l10260:	
  7073                           ;steppermotor.c: 35: unsigned char temp = 0;
  7074  0A4E  01A1               	clrf	(spi_transfer@temp)
  7075                           	line	37
  7076                           ;steppermotor.c: 37: SSPIF = 0;
  7077  0A4F  118C               	bcf	(99/8),(99)&7
  7078                           	line	38
  7079                           	
  7080  0A50                     l10262:	
  7081                           ;steppermotor.c: 38: SSPBUF = data;
  7082  0A50  0822               	movf	(spi_transfer@data),w
  7083  0A51  0093               	movwf	(19)	;volatile
  7084                           	line	40
  7085                           ;steppermotor.c: 40: while (SSPIF == 0);
  7086  0A52  2A53               	goto	l3674
  7087                           	
  7088  0A53                     l3675:	
  7089                           	
  7090  0A53                     l3674:	
  7091  0A53  1D8C               	btfss	(99/8),(99)&7
  7092  0A54  2A56               	goto	u3571
  7093  0A55  2A57               	goto	u3570
  7094  0A56                     u3571:
  7095  0A56  2A53               	goto	l3674
  7096  0A57                     u3570:
  7097  0A57  2A58               	goto	l10264
  7098                           	
  7099  0A58                     l3676:	
  7100                           	line	41
  7101                           	
  7102  0A58                     l10264:	
  7103                           ;steppermotor.c: 41: temp = SSPBUF;
  7104  0A58  0813               	movf	(19),w	;volatile
  7105  0A59  00A0               	movwf	(??_spi_transfer+0)+0
  7106  0A5A  0820               	movf	(??_spi_transfer+0)+0,w
  7107  0A5B  00A1               	movwf	(spi_transfer@temp)
  7108                           	line	42
  7109                           	
  7110  0A5C                     l10266:	
  7111                           ;steppermotor.c: 42: SSPIF = 0;
  7112  0A5C  118C               	bcf	(99/8),(99)&7
  7113  0A5D  2A5E               	goto	l3677
  7114                           	line	44
  7115                           	
  7116  0A5E                     l10268:	
  7117                           	line	45
  7118                           ;steppermotor.c: 44: return temp;
  7119                           ;	Return value of _spi_transfer is never used
  7120                           	
  7121  0A5E                     l3677:	
  7122  0A5E  0008               	return
  7123                           	opt stack 0
  7124                           GLOBAL	__end_of_spi_transfer
  7125  0A5F                     	__end_of_spi_transfer:
  7126 ;; =============== function _spi_transfer ends ============
  7127                           
  7128                           	signat	_spi_transfer,4217
  7129                           	global	_Menu
  7130                           psect	text1210,local,class=CODE,delta=2
  7131                           global __ptext1210
  7132  0CED                     __ptext1210:
  7133                           
  7134 ;; *************** function _Menu *****************
  7135 ;; Defined at:
  7136 ;;		line 180 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  input           1    wreg     unsigned char 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  input           1    0[BANK0 ] unsigned char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      unsigned char 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7150 ;;      Params:         0       0       0       0       0
  7151 ;;      Locals:         0       1       0       0       0
  7152 ;;      Temps:          0       0       0       0       0
  7153 ;;      Totals:         0       1       0       0       0
  7154 ;;Total ram usage:        1 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    3
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_main
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           psect	text1210
  7164                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  7165                           	line	180
  7166                           	global	__size_of_Menu
  7167  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  7168                           	
  7169  0CED                     _Menu:	
  7170                           	opt	stack 4
  7171                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  7172                           ;Menu@input stored from wreg
  7173  0CED  1283               	bcf	status, 5	;RP0=0, select bank0
  7174  0CEE  1303               	bcf	status, 6	;RP1=0, select bank0
  7175  0CEF  00A0               	movwf	(Menu@input)
  7176                           	line	181
  7177                           	
  7178  0CF0                     l10236:	
  7179                           ;HMI.c: 181: switch (input)
  7180  0CF0  2D1F               	goto	l10254
  7181                           	line	183
  7182                           ;HMI.c: 182: {
  7183                           ;HMI.c: 183: case 1:
  7184                           	
  7185  0CF1                     l5234:	
  7186                           	line	185
  7187                           ;HMI.c: 185: break;
  7188  0CF1  2D31               	goto	l10256
  7189                           	line	186
  7190                           ;HMI.c: 186: case 2:
  7191                           	
  7192  0CF2                     l5236:	
  7193                           	line	188
  7194                           ;HMI.c: 188: break;
  7195  0CF2  2D31               	goto	l10256
  7196                           	line	189
  7197                           ;HMI.c: 189: case 3:
  7198                           	
  7199  0CF3                     l5237:	
  7200                           	line	190
  7201                           	
  7202  0CF3                     l10238:	
  7203                           ;HMI.c: 190: pos--;
  7204  0CF3  30FF               	movlw	low(-1)
  7205  0CF4  1683               	bsf	status, 5	;RP0=1, select bank1
  7206  0CF5  1303               	bcf	status, 6	;RP1=0, select bank1
  7207  0CF6  07C6               	addwf	(_pos)^080h,f
  7208  0CF7  1803               	skipnc
  7209  0CF8  0AC7               	incf	(_pos+1)^080h,f
  7210  0CF9  30FF               	movlw	high(-1)
  7211  0CFA  07C7               	addwf	(_pos+1)^080h,f
  7212                           	line	191
  7213                           	
  7214  0CFB                     l10240:	
  7215                           ;HMI.c: 191: if (pos < 0)
  7216  0CFB  1FC7               	btfss	(_pos+1)^080h,7
  7217  0CFC  2CFE               	goto	u3551
  7218  0CFD  2CFF               	goto	u3550
  7219  0CFE                     u3551:
  7220  0CFE  2D31               	goto	l10256
  7221  0CFF                     u3550:
  7222                           	line	192
  7223                           	
  7224  0CFF                     l10242:	
  7225                           ;HMI.c: 192: pos = 5 - 1;
  7226  0CFF  3004               	movlw	low(04h)
  7227  0D00  00C6               	movwf	(_pos)^080h
  7228  0D01  3000               	movlw	high(04h)
  7229  0D02  00C7               	movwf	((_pos)^080h)+1
  7230  0D03  2D31               	goto	l10256
  7231                           	
  7232  0D04                     l5238:	
  7233                           	line	194
  7234                           ;HMI.c: 194: break;
  7235  0D04  2D31               	goto	l10256
  7236                           	line	195
  7237                           ;HMI.c: 195: case 4:
  7238                           	
  7239  0D05                     l5239:	
  7240                           	line	196
  7241                           	
  7242  0D05                     l10244:	
  7243                           ;HMI.c: 196: pos++;
  7244  0D05  3001               	movlw	low(01h)
  7245  0D06  1683               	bsf	status, 5	;RP0=1, select bank1
  7246  0D07  1303               	bcf	status, 6	;RP1=0, select bank1
  7247  0D08  07C6               	addwf	(_pos)^080h,f
  7248  0D09  1803               	skipnc
  7249  0D0A  0AC7               	incf	(_pos+1)^080h,f
  7250  0D0B  3000               	movlw	high(01h)
  7251  0D0C  07C7               	addwf	(_pos+1)^080h,f
  7252                           	line	197
  7253                           ;HMI.c: 197: if (pos == 5)
  7254  0D0D  3005               	movlw	05h
  7255  0D0E  0646               	xorwf	(_pos)^080h,w
  7256  0D0F  0447               	iorwf	(_pos+1)^080h,w
  7257  0D10  1D03               	skipz
  7258  0D11  2D13               	goto	u3561
  7259  0D12  2D14               	goto	u3560
  7260  0D13                     u3561:
  7261  0D13  2D31               	goto	l10256
  7262  0D14                     u3560:
  7263                           	line	198
  7264                           	
  7265  0D14                     l10246:	
  7266                           ;HMI.c: 198: pos = 0;
  7267  0D14  01C6               	clrf	(_pos)^080h
  7268  0D15  01C7               	clrf	(_pos+1)^080h
  7269  0D16  2D31               	goto	l10256
  7270                           	
  7271  0D17                     l5240:	
  7272                           	line	200
  7273                           ;HMI.c: 200: break;
  7274  0D17  2D31               	goto	l10256
  7275                           	line	201
  7276                           ;HMI.c: 201: case 5:
  7277                           	
  7278  0D18                     l5241:	
  7279                           	line	202
  7280                           	
  7281  0D18                     l10248:	
  7282                           ;HMI.c: 202: return pos;
  7283  0D18  1683               	bsf	status, 5	;RP0=1, select bank1
  7284  0D19  1303               	bcf	status, 6	;RP1=0, select bank1
  7285  0D1A  0846               	movf	(_pos)^080h,w
  7286  0D1B  2D33               	goto	l5242
  7287                           	
  7288  0D1C                     l10250:	
  7289  0D1C  2D33               	goto	l5242
  7290                           	line	205
  7291                           ;HMI.c: 205: default:
  7292                           	
  7293  0D1D                     l5243:	
  7294                           	line	207
  7295                           ;HMI.c: 207: break;
  7296  0D1D  2D31               	goto	l10256
  7297                           	line	208
  7298                           	
  7299  0D1E                     l10252:	
  7300                           ;HMI.c: 208: }
  7301  0D1E  2D31               	goto	l10256
  7302                           	line	181
  7303                           	
  7304  0D1F                     l5233:	
  7305                           	
  7306  0D1F                     l10254:	
  7307  0D1F  1283               	bcf	status, 5	;RP0=0, select bank0
  7308  0D20  0820               	movf	(Menu@input),w
  7309                           	; Switch size 1, requested type "space"
  7310                           ; Number of cases is 5, Range of values is 1 to 5
  7311                           ; switch strategies available:
  7312                           ; Name         Instructions Cycles
  7313                           ; simple_byte           16     9 (average)
  7314                           ; direct_byte           26    11 (fixed)
  7315                           ; jumptable            263     9 (fixed)
  7316                           ;	Chosen strategy is simple_byte
  7317                           
  7318                           	opt asmopt_off
  7319  0D21  3A01               	xorlw	1^0	; case 1
  7320  0D22  1903               	skipnz
  7321  0D23  2D31               	goto	l10256
  7322  0D24  3A03               	xorlw	2^1	; case 2
  7323  0D25  1903               	skipnz
  7324  0D26  2D31               	goto	l10256
  7325  0D27  3A01               	xorlw	3^2	; case 3
  7326  0D28  1903               	skipnz
  7327  0D29  2CF3               	goto	l10238
  7328  0D2A  3A07               	xorlw	4^3	; case 4
  7329  0D2B  1903               	skipnz
  7330  0D2C  2D05               	goto	l10244
  7331  0D2D  3A01               	xorlw	5^4	; case 5
  7332  0D2E  1903               	skipnz
  7333  0D2F  2D18               	goto	l10248
  7334  0D30  2D31               	goto	l10256
  7335                           	opt asmopt_on
  7336                           
  7337                           	line	208
  7338                           	
  7339  0D31                     l5235:	
  7340                           	line	209
  7341                           	
  7342  0D31                     l10256:	
  7343                           ;HMI.c: 209: return 255;
  7344  0D31  30FF               	movlw	(0FFh)
  7345  0D32  2D33               	goto	l5242
  7346                           	
  7347  0D33                     l10258:	
  7348                           	line	210
  7349                           	
  7350  0D33                     l5242:	
  7351  0D33  0008               	return
  7352                           	opt stack 0
  7353                           GLOBAL	__end_of_Menu
  7354  0D34                     	__end_of_Menu:
  7355 ;; =============== function _Menu ends ============
  7356                           
  7357                           	signat	_Menu,4217
  7358                           	global	_ser_init
  7359                           psect	text1211,local,class=CODE,delta=2
  7360                           global __ptext1211
  7361  0B6C                     __ptext1211:
  7362                           
  7363 ;; *************** function _ser_init *****************
  7364 ;; Defined at:
  7365 ;;		line 114 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;		None
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;		None
  7370 ;; Return value:  Size  Location     Type
  7371 ;;		None               void
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7379 ;;      Params:         0       0       0       0       0
  7380 ;;      Locals:         0       0       0       0       0
  7381 ;;      Temps:          0       1       0       0       0
  7382 ;;      Totals:         0       1       0       0       0
  7383 ;;Total ram usage:        1 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    3
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_init
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           psect	text1211
  7393                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7394                           	line	114
  7395                           	global	__size_of_ser_init
  7396  002E                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  7397                           	
  7398  0B6C                     _ser_init:	
  7399                           	opt	stack 3
  7400                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  7401                           	line	115
  7402                           	
  7403  0B6C                     l11108:	
  7404                           ;ser.c: 115: TRISC |= 0b10000000;
  7405  0B6C  1683               	bsf	status, 5	;RP0=1, select bank1
  7406  0B6D  1303               	bcf	status, 6	;RP1=0, select bank1
  7407  0B6E  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  7408                           	line	116
  7409                           	
  7410  0B6F                     l11110:	
  7411                           ;ser.c: 116: TRISC &= 0b10111111;
  7412  0B6F  30BF               	movlw	(0BFh)
  7413  0B70  1283               	bcf	status, 5	;RP0=0, select bank0
  7414  0B71  1303               	bcf	status, 6	;RP1=0, select bank0
  7415  0B72  00A0               	movwf	(??_ser_init+0)+0
  7416  0B73  0820               	movf	(??_ser_init+0)+0,w
  7417  0B74  1683               	bsf	status, 5	;RP0=1, select bank1
  7418  0B75  1303               	bcf	status, 6	;RP1=0, select bank1
  7419  0B76  0587               	andwf	(135)^080h,f	;volatile
  7420                           	line	117
  7421                           	
  7422  0B77                     l11112:	
  7423                           ;ser.c: 117: BRGH=1;
  7424  0B77  1518               	bsf	(1218/8)^080h,(1218)&7
  7425                           	line	119
  7426                           	
  7427  0B78                     l11114:	
  7428                           ;ser.c: 119: SPBRG=20;
  7429  0B78  3014               	movlw	(014h)
  7430  0B79  0099               	movwf	(153)^080h	;volatile
  7431                           	line	122
  7432                           	
  7433  0B7A                     l11116:	
  7434                           ;ser.c: 122: TX9=0;
  7435  0B7A  1318               	bcf	(1222/8)^080h,(1222)&7
  7436                           	line	123
  7437                           	
  7438  0B7B                     l11118:	
  7439                           ;ser.c: 123: RX9=0;
  7440  0B7B  1283               	bcf	status, 5	;RP0=0, select bank0
  7441  0B7C  1303               	bcf	status, 6	;RP1=0, select bank0
  7442  0B7D  1318               	bcf	(198/8),(198)&7
  7443                           	line	125
  7444                           	
  7445  0B7E                     l11120:	
  7446                           ;ser.c: 125: SYNC=0;
  7447  0B7E  1683               	bsf	status, 5	;RP0=1, select bank1
  7448  0B7F  1303               	bcf	status, 6	;RP1=0, select bank1
  7449  0B80  1218               	bcf	(1220/8)^080h,(1220)&7
  7450                           	line	126
  7451                           	
  7452  0B81                     l11122:	
  7453                           ;ser.c: 126: SPEN=1;
  7454  0B81  1283               	bcf	status, 5	;RP0=0, select bank0
  7455  0B82  1303               	bcf	status, 6	;RP1=0, select bank0
  7456  0B83  1798               	bsf	(199/8),(199)&7
  7457                           	line	127
  7458                           	
  7459  0B84                     l11124:	
  7460                           ;ser.c: 127: CREN=1;
  7461  0B84  1618               	bsf	(196/8),(196)&7
  7462                           	line	128
  7463                           	
  7464  0B85                     l11126:	
  7465                           ;ser.c: 128: TXIE=0;
  7466  0B85  1683               	bsf	status, 5	;RP0=1, select bank1
  7467  0B86  1303               	bcf	status, 6	;RP1=0, select bank1
  7468  0B87  120C               	bcf	(1124/8)^080h,(1124)&7
  7469                           	line	129
  7470                           	
  7471  0B88                     l11128:	
  7472                           ;ser.c: 129: RCIE=1;
  7473  0B88  168C               	bsf	(1125/8)^080h,(1125)&7
  7474                           	line	130
  7475                           	
  7476  0B89                     l11130:	
  7477                           ;ser.c: 130: TXEN=1;
  7478  0B89  1698               	bsf	(1221/8)^080h,(1221)&7
  7479                           	line	133
  7480                           	
  7481  0B8A                     l11132:	
  7482                           ;ser.c: 133: rxiptr=rxoptr=txiptr=txoptr=0;
  7483  0B8A  3000               	movlw	(0)
  7484  0B8B  1283               	bcf	status, 5	;RP0=0, select bank0
  7485  0B8C  1303               	bcf	status, 6	;RP1=0, select bank0
  7486  0B8D  00EE               	movwf	(_txoptr)	;volatile
  7487  0B8E  00ED               	movwf	(_txiptr)	;volatile
  7488  0B8F  1683               	bsf	status, 5	;RP0=1, select bank1
  7489  0B90  1303               	bcf	status, 6	;RP1=0, select bank1
  7490  0B91  00DB               	movwf	(_rxoptr)^080h	;volatile
  7491  0B92  1283               	bcf	status, 5	;RP0=0, select bank0
  7492  0B93  1303               	bcf	status, 6	;RP1=0, select bank0
  7493  0B94  00A0               	movwf	(??_ser_init+0)+0
  7494  0B95  0820               	movf	(??_ser_init+0)+0,w
  7495  0B96  1683               	bsf	status, 5	;RP0=1, select bank1
  7496  0B97  1303               	bcf	status, 6	;RP1=0, select bank1
  7497  0B98  00DA               	movwf	(_rxiptr)^080h	;volatile
  7498                           	line	134
  7499                           	
  7500  0B99                     l4450:	
  7501  0B99  0008               	return
  7502                           	opt stack 0
  7503                           GLOBAL	__end_of_ser_init
  7504  0B9A                     	__end_of_ser_init:
  7505 ;; =============== function _ser_init ends ============
  7506                           
  7507                           	signat	_ser_init,88
  7508                           	global	_adc_read
  7509                           psect	text1212,local,class=CODE,delta=2
  7510                           global __ptext1212
  7511  0AC0                     __ptext1212:
  7512                           
  7513 ;; *************** function _adc_read *****************
  7514 ;; Defined at:
  7515 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;		None
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  2    0[BANK0 ] unsigned int 
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7529 ;;      Params:         0       2       0       0       0
  7530 ;;      Locals:         0       2       0       0       0
  7531 ;;      Temps:          0       2       0       0       0
  7532 ;;      Totals:         0       6       0       0       0
  7533 ;;Total ram usage:        6 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:    3
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_adc_read_channel
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           psect	text1212
  7543                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7544                           	line	61
  7545                           	global	__size_of_adc_read
  7546  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7547                           	
  7548  0AC0                     _adc_read:	
  7549                           	opt	stack 0
  7550                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  7551                           	line	64
  7552                           	
  7553  0AC0                     l10084:	
  7554                           ;adc.c: 62: volatile unsigned int adc_value;
  7555                           ;adc.c: 64: ADRESH = 0;
  7556  0AC0  1283               	bcf	status, 5	;RP0=0, select bank0
  7557  0AC1  1303               	bcf	status, 6	;RP1=0, select bank0
  7558  0AC2  019E               	clrf	(30)	;volatile
  7559                           	line	66
  7560                           	
  7561  0AC3                     l10086:	
  7562                           ;adc.c: 66: GO = 1;
  7563  0AC3  151F               	bsf	(250/8),(250)&7
  7564                           	line	67
  7565                           ;adc.c: 67: while(GO) continue;
  7566  0AC4  2AC5               	goto	l703
  7567                           	
  7568  0AC5                     l704:	
  7569                           	
  7570  0AC5                     l703:	
  7571  0AC5  191F               	btfsc	(250/8),(250)&7
  7572  0AC6  2AC8               	goto	u3351
  7573  0AC7  2AC9               	goto	u3350
  7574  0AC8                     u3351:
  7575  0AC8  2AC5               	goto	l703
  7576  0AC9                     u3350:
  7577                           	
  7578  0AC9                     l705:	
  7579                           	line	68
  7580                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7581  0AC9  0000               nop ;#
  7582                           	line	69
  7583                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7584  0ACA  0000               nop ;#
  7585                           	line	70
  7586                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7587  0ACB  0000               nop ;#
  7588                           psect	text1212
  7589                           	line	73
  7590                           	
  7591  0ACC                     l10088:	
  7592                           ;adc.c: 73: adc_value = ADRESH;
  7593  0ACC  1283               	bcf	status, 5	;RP0=0, select bank0
  7594  0ACD  1303               	bcf	status, 6	;RP1=0, select bank0
  7595  0ACE  081E               	movf	(30),w	;volatile
  7596  0ACF  00A2               	movwf	(??_adc_read+0)+0
  7597  0AD0  01A3               	clrf	(??_adc_read+0)+0+1
  7598  0AD1  0822               	movf	0+(??_adc_read+0)+0,w
  7599  0AD2  00A4               	movwf	(adc_read@adc_value)	;volatile
  7600  0AD3  0823               	movf	1+(??_adc_read+0)+0,w
  7601  0AD4  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  7602                           	line	74
  7603                           ;adc.c: 74: adc_value <<= 1;
  7604  0AD5  3001               	movlw	01h
  7605                           	
  7606  0AD6                     u3365:
  7607  0AD6  1003               	clrc
  7608  0AD7  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  7609  0AD8  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  7610  0AD9  3EFF               	addlw	-1
  7611  0ADA  1D03               	skipz
  7612  0ADB  2AD6               	goto	u3365
  7613                           	line	75
  7614                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  7615  0ADC  1683               	bsf	status, 5	;RP0=1, select bank1
  7616  0ADD  1303               	bcf	status, 6	;RP1=0, select bank1
  7617  0ADE  081E               	movf	(158)^080h,w	;volatile
  7618                           	line	78
  7619                           	
  7620  0ADF                     l10090:	
  7621                           ;adc.c: 78: return (adc_value);
  7622  0ADF  1283               	bcf	status, 5	;RP0=0, select bank0
  7623  0AE0  1303               	bcf	status, 6	;RP1=0, select bank0
  7624  0AE1  0825               	movf	(adc_read@adc_value+1),w	;volatile
  7625  0AE2  01A1               	clrf	(?_adc_read+1)
  7626  0AE3  07A1               	addwf	(?_adc_read+1)
  7627  0AE4  0824               	movf	(adc_read@adc_value),w	;volatile
  7628  0AE5  01A0               	clrf	(?_adc_read)
  7629  0AE6  07A0               	addwf	(?_adc_read)
  7630                           
  7631  0AE7  2AE8               	goto	l706
  7632                           	
  7633  0AE8                     l10092:	
  7634                           	line	79
  7635                           	
  7636  0AE8                     l706:	
  7637  0AE8  0008               	return
  7638                           	opt stack 0
  7639                           GLOBAL	__end_of_adc_read
  7640  0AE9                     	__end_of_adc_read:
  7641 ;; =============== function _adc_read ends ============
  7642                           
  7643                           	signat	_adc_read,90
  7644                           	global	_isr1
  7645                           psect	text1213,local,class=CODE,delta=2
  7646                           global __ptext1213
  7647  0591                     __ptext1213:
  7648                           
  7649 ;; *************** function _isr1 *****************
  7650 ;; Defined at:
  7651 ;;		line 93 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;		None               void
  7658 ;; Registers used:
  7659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7665 ;;      Params:         0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0
  7667 ;;      Temps:          6       0       0       0       0
  7668 ;;      Totals:         6       0       0       0       0
  7669 ;;Total ram usage:        6 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    2
  7672 ;; This function calls:
  7673 ;;		i1___lwmod
  7674 ;;		_ReadButtons
  7675 ;; This function is called by:
  7676 ;;		Interrupt level 1
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           psect	text1213
  7680                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  7681                           	line	93
  7682                           	global	__size_of_isr1
  7683  00D0                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  7684                           	
  7685  0591                     _isr1:	
  7686                           	opt	stack 0
  7687                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7688                           psect	intentry,class=CODE,delta=2
  7689                           global __pintentry
  7690  0004                     __pintentry:
  7691                           global interrupt_function
  7692  0004                     interrupt_function:
  7693                           	global saved_w
  7694  007E                     	saved_w	set	btemp+0
  7695  0004  00FE               	movwf	saved_w
  7696  0005  0E03               	swapf	status,w
  7697  0006  00FA               	movwf	(??_isr1+2)
  7698  0007  0804               	movf	fsr0,w
  7699  0008  00FB               	movwf	(??_isr1+3)
  7700  0009  080A               	movf	pclath,w
  7701  000A  00FC               	movwf	(??_isr1+4)
  7702  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  7703  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  7704  000D  087F               	movf	btemp+1,w
  7705  000E  00FD               	movwf	(??_isr1+5)
  7706  000F  120A  118A  2D91   	ljmp	_isr1
  7707                           psect	text1213
  7708                           	line	98
  7709                           	
  7710  0591                     i1l11018:	
  7711                           ;Main.c: 98: if(TMR0IF)
  7712  0591  1D0B               	btfss	(90/8),(90)&7
  7713  0592  2D94               	goto	u456_21
  7714  0593  2D95               	goto	u456_20
  7715  0594                     u456_21:
  7716  0594  2E1A               	goto	i1l11050
  7717  0595                     u456_20:
  7718                           	line	100
  7719                           	
  7720  0595                     i1l11020:	
  7721                           ;Main.c: 99: {
  7722                           ;Main.c: 100: TMR0IF = 0;
  7723  0595  110B               	bcf	(90/8),(90)&7
  7724                           	line	101
  7725                           	
  7726  0596                     i1l11022:	
  7727                           ;Main.c: 101: TMR0 = 100;
  7728  0596  3064               	movlw	(064h)
  7729  0597  0081               	movwf	(1)	;volatile
  7730                           	line	103
  7731                           ;Main.c: 103: RTC_Counter++;
  7732  0598  3001               	movlw	low(01h)
  7733  0599  07E8               	addwf	(_RTC_Counter),f	;volatile
  7734  059A  1803               	skipnc
  7735  059B  0AE9               	incf	(_RTC_Counter+1),f	;volatile
  7736  059C  3000               	movlw	high(01h)
  7737  059D  07E9               	addwf	(_RTC_Counter+1),f	;volatile
  7738                           	line	105
  7739                           	
  7740  059E                     i1l11024:	
  7741                           ;Main.c: 105: RTC_FLAG_1MS = 1;
  7742  059E  146F               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  7743                           	line	106
  7744                           	
  7745  059F                     i1l11026:	
  7746                           ;Main.c: 106: if(RTC_Counter % 10 == 0)
  7747  059F  300A               	movlw	low(0Ah)
  7748  05A0  00F2               	movwf	(?i1___lwmod)
  7749  05A1  3000               	movlw	high(0Ah)
  7750  05A2  00F3               	movwf	((?i1___lwmod))+1
  7751  05A3  0869               	movf	(_RTC_Counter+1),w	;volatile
  7752  05A4  01F5               	clrf	1+(?i1___lwmod)+02h
  7753  05A5  07F5               	addwf	1+(?i1___lwmod)+02h
  7754  05A6  0868               	movf	(_RTC_Counter),w	;volatile
  7755  05A7  01F4               	clrf	0+(?i1___lwmod)+02h
  7756  05A8  07F4               	addwf	0+(?i1___lwmod)+02h
  7757                           
  7758  05A9  120A  158A  2463   	fcall	i1___lwmod
              120A  118A         
  7759  05AE  0873               	movf	((1+(?i1___lwmod))),w
  7760  05AF  0472               	iorwf	((0+(?i1___lwmod))),w
  7761  05B0  1D03               	skipz
  7762  05B1  2DB3               	goto	u457_21
  7763  05B2  2DB4               	goto	u457_20
  7764  05B3                     u457_21:
  7765  05B3  2DB6               	goto	i1l11030
  7766  05B4                     u457_20:
  7767                           	line	108
  7768                           	
  7769  05B4                     i1l11028:	
  7770                           ;Main.c: 107: {
  7771                           ;Main.c: 108: RTC_FLAG_10MS = 1;
  7772  05B4  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  7773  05B5  2DB6               	goto	i1l11030
  7774                           	line	111
  7775                           	
  7776  05B6                     i1l2199:	
  7777                           	line	112
  7778                           	
  7779  05B6                     i1l11030:	
  7780                           ;Main.c: 111: }
  7781                           ;Main.c: 112: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  7782  05B6  3032               	movlw	low(032h)
  7783  05B7  00F2               	movwf	(?i1___lwmod)
  7784  05B8  3000               	movlw	high(032h)
  7785  05B9  00F3               	movwf	((?i1___lwmod))+1
  7786  05BA  1283               	bcf	status, 5	;RP0=0, select bank0
  7787  05BB  1303               	bcf	status, 6	;RP1=0, select bank0
  7788  05BC  0869               	movf	(_RTC_Counter+1),w	;volatile
  7789  05BD  01F5               	clrf	1+(?i1___lwmod)+02h
  7790  05BE  07F5               	addwf	1+(?i1___lwmod)+02h
  7791  05BF  0868               	movf	(_RTC_Counter),w	;volatile
  7792  05C0  01F4               	clrf	0+(?i1___lwmod)+02h
  7793  05C1  07F4               	addwf	0+(?i1___lwmod)+02h
  7794                           
  7795  05C2  120A  158A  2463   	fcall	i1___lwmod
              120A  118A         
  7796  05C7  0873               	movf	((1+(?i1___lwmod))),w
  7797  05C8  0472               	iorwf	((0+(?i1___lwmod))),w
  7798  05C9  1D03               	skipz
  7799  05CA  2DCC               	goto	u458_21
  7800  05CB  2DCD               	goto	u458_20
  7801  05CC                     u458_21:
  7802  05CC  2DCF               	goto	i1l11034
  7803  05CD                     u458_20:
  7804                           	
  7805  05CD                     i1l11032:	
  7806  05CD  14F1               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  7807  05CE  2DCF               	goto	i1l11034
  7808                           	
  7809  05CF                     i1l2200:	
  7810                           	line	113
  7811                           	
  7812  05CF                     i1l11034:	
  7813                           ;Main.c: 113: if(RTC_Counter % 250 == 0)
  7814  05CF  30FA               	movlw	low(0FAh)
  7815  05D0  00F2               	movwf	(?i1___lwmod)
  7816  05D1  3000               	movlw	high(0FAh)
  7817  05D2  00F3               	movwf	((?i1___lwmod))+1
  7818  05D3  1283               	bcf	status, 5	;RP0=0, select bank0
  7819  05D4  1303               	bcf	status, 6	;RP1=0, select bank0
  7820  05D5  0869               	movf	(_RTC_Counter+1),w	;volatile
  7821  05D6  01F5               	clrf	1+(?i1___lwmod)+02h
  7822  05D7  07F5               	addwf	1+(?i1___lwmod)+02h
  7823  05D8  0868               	movf	(_RTC_Counter),w	;volatile
  7824  05D9  01F4               	clrf	0+(?i1___lwmod)+02h
  7825  05DA  07F4               	addwf	0+(?i1___lwmod)+02h
  7826                           
  7827  05DB  120A  158A  2463   	fcall	i1___lwmod
              120A  118A         
  7828  05E0  0873               	movf	((1+(?i1___lwmod))),w
  7829  05E1  0472               	iorwf	((0+(?i1___lwmod))),w
  7830  05E2  1D03               	skipz
  7831  05E3  2DE5               	goto	u459_21
  7832  05E4  2DE6               	goto	u459_20
  7833  05E5                     u459_21:
  7834  05E5  2DE8               	goto	i1l11038
  7835  05E6                     u459_20:
  7836                           	line	116
  7837                           	
  7838  05E6                     i1l11036:	
  7839                           ;Main.c: 114: {
  7840                           ;Main.c: 116: RTC_FLAG_250MS = 1;
  7841  05E6  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  7842  05E7  2DE8               	goto	i1l11038
  7843                           	line	118
  7844                           	
  7845  05E8                     i1l2201:	
  7846                           	line	119
  7847                           	
  7848  05E8                     i1l11038:	
  7849                           ;Main.c: 118: }
  7850                           ;Main.c: 119: if(RTC_Counter % 500 == 0)
  7851  05E8  30F4               	movlw	low(01F4h)
  7852  05E9  00F2               	movwf	(?i1___lwmod)
  7853  05EA  3001               	movlw	high(01F4h)
  7854  05EB  00F3               	movwf	((?i1___lwmod))+1
  7855  05EC  1283               	bcf	status, 5	;RP0=0, select bank0
  7856  05ED  1303               	bcf	status, 6	;RP1=0, select bank0
  7857  05EE  0869               	movf	(_RTC_Counter+1),w	;volatile
  7858  05EF  01F5               	clrf	1+(?i1___lwmod)+02h
  7859  05F0  07F5               	addwf	1+(?i1___lwmod)+02h
  7860  05F1  0868               	movf	(_RTC_Counter),w	;volatile
  7861  05F2  01F4               	clrf	0+(?i1___lwmod)+02h
  7862  05F3  07F4               	addwf	0+(?i1___lwmod)+02h
  7863                           
  7864  05F4  120A  158A  2463   	fcall	i1___lwmod
              120A  118A         
  7865  05F9  0873               	movf	((1+(?i1___lwmod))),w
  7866  05FA  0472               	iorwf	((0+(?i1___lwmod))),w
  7867  05FB  1D03               	skipz
  7868  05FC  2DFE               	goto	u460_21
  7869  05FD  2DFF               	goto	u460_20
  7870  05FE                     u460_21:
  7871  05FE  2E07               	goto	i1l11046
  7872  05FF                     u460_20:
  7873                           	line	121
  7874                           	
  7875  05FF                     i1l11040:	
  7876                           ;Main.c: 120: {
  7877                           ;Main.c: 121: RTC_FLAG_500MS = 1;
  7878  05FF  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  7879                           	line	122
  7880                           	
  7881  0600                     i1l11042:	
  7882                           ;Main.c: 122: RTC_Counter = 0;
  7883  0600  1283               	bcf	status, 5	;RP0=0, select bank0
  7884  0601  1303               	bcf	status, 6	;RP1=0, select bank0
  7885  0602  01E8               	clrf	(_RTC_Counter)	;volatile
  7886  0603  01E9               	clrf	(_RTC_Counter+1)	;volatile
  7887                           	line	123
  7888                           	
  7889  0604                     i1l11044:	
  7890                           ;Main.c: 123: RB0 ^= 0x01;
  7891  0604  3001               	movlw	1<<((48)&7)
  7892  0605  0686               	xorwf	((48)/8),f
  7893  0606  2E07               	goto	i1l11046
  7894                           	line	125
  7895                           	
  7896  0607                     i1l2202:	
  7897                           	line	127
  7898                           	
  7899  0607                     i1l11046:	
  7900                           ;Main.c: 125: }
  7901                           ;Main.c: 127: if (buttonPressed == 0)
  7902  0607  1283               	bcf	status, 5	;RP0=0, select bank0
  7903  0608  1303               	bcf	status, 6	;RP1=0, select bank0
  7904  0609  08EC               	movf	(_buttonPressed),f
  7905  060A  1D03               	skipz	;volatile
  7906  060B  2E0D               	goto	u461_21
  7907  060C  2E0E               	goto	u461_20
  7908  060D                     u461_21:
  7909  060D  2E1A               	goto	i1l11050
  7910  060E                     u461_20:
  7911                           	line	129
  7912                           	
  7913  060E                     i1l11048:	
  7914                           ;Main.c: 128: {
  7915                           ;Main.c: 129: buttonPressed = ReadButtons();
  7916  060E  120A  158A  23C8   	fcall	_ReadButtons
              120A  118A         
  7917  0613  00F8               	movwf	(??_isr1+0)+0
  7918  0614  0878               	movf	(??_isr1+0)+0,w
  7919  0615  1283               	bcf	status, 5	;RP0=0, select bank0
  7920  0616  1303               	bcf	status, 6	;RP1=0, select bank0
  7921  0617  00EC               	movwf	(_buttonPressed)	;volatile
  7922  0618  2E1A               	goto	i1l11050
  7923                           	line	130
  7924                           	
  7925  0619                     i1l2203:	
  7926  0619  2E1A               	goto	i1l11050
  7927                           	line	131
  7928                           	
  7929  061A                     i1l2198:	
  7930                           	line	134
  7931                           	
  7932  061A                     i1l11050:	
  7933                           ;Main.c: 130: }
  7934                           ;Main.c: 131: }
  7935                           ;Main.c: 134: if (RCIF)
  7936  061A  1E8C               	btfss	(101/8),(101)&7
  7937  061B  2E1D               	goto	u462_21
  7938  061C  2E1E               	goto	u462_20
  7939  061D                     u462_21:
  7940  061D  2E2F               	goto	i1l11056
  7941  061E                     u462_20:
  7942                           	line	136
  7943                           	
  7944  061E                     i1l11052:	
  7945                           ;Main.c: 135: {
  7946                           ;Main.c: 136: SER_RC_FLAG = 1;
  7947  061E  1671               	bsf	(_SER_RC_FLAG/8),(_SER_RC_FLAG)&7
  7948                           	line	137
  7949                           	
  7950  061F                     i1l11054:	
  7951                           ;Main.c: 137: RB1 ^= 0x01; DistHighByte = RCREG;
  7952  061F  3002               	movlw	1<<((49)&7)
  7953  0620  0686               	xorwf	((49)/8),f
  7954  0621  081A               	movf	(26),w	;volatile
  7955  0622  00F8               	movwf	(??_isr1+0)+0
  7956  0623  0878               	movf	(??_isr1+0)+0,w
  7957  0624  1683               	bsf	status, 5	;RP0=1, select bank1
  7958  0625  1303               	bcf	status, 6	;RP1=0, select bank1
  7959  0626  00CF               	movwf	(_DistHighByte)^080h	;volatile
  7960                           	line	139
  7961                           ;Main.c: 139: distTravelled = (int)DistHighByte ;
  7962  0627  084F               	movf	(_DistHighByte)^080h,w	;volatile
  7963  0628  00F8               	movwf	(??_isr1+0)+0
  7964  0629  01F9               	clrf	(??_isr1+0)+0+1
  7965  062A  0878               	movf	0+(??_isr1+0)+0,w
  7966  062B  00EA               	movwf	(_distTravelled)^080h	;volatile
  7967  062C  0879               	movf	1+(??_isr1+0)+0,w
  7968  062D  00EB               	movwf	(_distTravelled+1)^080h	;volatile
  7969  062E  2E2F               	goto	i1l11056
  7970                           	line	145
  7971                           	
  7972  062F                     i1l2204:	
  7973                           	
  7974  062F                     i1l11056:	
  7975                           ;Main.c: 145: } if (TXIF && TXIE)
  7976  062F  1283               	bcf	status, 5	;RP0=0, select bank0
  7977  0630  1E0C               	btfss	(100/8),(100)&7
  7978  0631  2E33               	goto	u463_21
  7979  0632  2E34               	goto	u463_20
  7980  0633                     u463_21:
  7981  0633  2E55               	goto	i1l2207
  7982  0634                     u463_20:
  7983                           	
  7984  0634                     i1l11058:	
  7985  0634  1683               	bsf	status, 5	;RP0=1, select bank1
  7986  0635  1303               	bcf	status, 6	;RP1=0, select bank1
  7987  0636  1E0C               	btfss	(1124/8)^080h,(1124)&7
  7988  0637  2E39               	goto	u464_21
  7989  0638  2E3A               	goto	u464_20
  7990  0639                     u464_21:
  7991  0639  2E55               	goto	i1l2207
  7992  063A                     u464_20:
  7993                           	line	147
  7994                           	
  7995  063A                     i1l11060:	
  7996                           ;Main.c: 147: { TXREG = txfifo[txoptr]; ++txoptr; txoptr &= (16-1); if (txoptr==txiptr)
  7997  063A  1283               	bcf	status, 5	;RP0=0, select bank0
  7998  063B  1303               	bcf	status, 6	;RP1=0, select bank0
  7999  063C  086E               	movf	(_txoptr),w
  8000  063D  3EB0               	addlw	_txfifo&0ffh
  8001  063E  0084               	movwf	fsr0
  8002  063F  1383               	bcf	status, 7	;select IRP bank1
  8003  0640  0800               	movf	indf,w
  8004  0641  0099               	movwf	(25)	;volatile
  8005                           	
  8006  0642                     i1l11062:	
  8007  0642  3001               	movlw	(01h)
  8008  0643  00F8               	movwf	(??_isr1+0)+0
  8009  0644  0878               	movf	(??_isr1+0)+0,w
  8010  0645  07EE               	addwf	(_txoptr),f	;volatile
  8011                           	
  8012  0646                     i1l11064:	
  8013  0646  300F               	movlw	(0Fh)
  8014  0647  00F8               	movwf	(??_isr1+0)+0
  8015  0648  0878               	movf	(??_isr1+0)+0,w
  8016  0649  05EE               	andwf	(_txoptr),f	;volatile
  8017                           	
  8018  064A                     i1l11066:	
  8019  064A  086E               	movf	(_txoptr),w	;volatile
  8020  064B  066D               	xorwf	(_txiptr),w	;volatile
  8021  064C  1D03               	skipz
  8022  064D  2E4F               	goto	u465_21
  8023  064E  2E50               	goto	u465_20
  8024  064F                     u465_21:
  8025  064F  2E55               	goto	i1l2207
  8026  0650                     u465_20:
  8027                           	line	152
  8028                           	
  8029  0650                     i1l11068:	
  8030                           ;Main.c: 152: TXIE = 0;
  8031  0650  1683               	bsf	status, 5	;RP0=1, select bank1
  8032  0651  1303               	bcf	status, 6	;RP1=0, select bank1
  8033  0652  120C               	bcf	(1124/8)^080h,(1124)&7
  8034  0653  2E55               	goto	i1l2207
  8035                           	
  8036  0654                     i1l2206:	
  8037  0654  2E55               	goto	i1l2207
  8038                           	line	154
  8039                           	
  8040  0655                     i1l2205:	
  8041                           	
  8042  0655                     i1l2207:	
  8043  0655  087D               	movf	(??_isr1+5),w
  8044  0656  1283               	bcf	status, 5	;RP0=0, select bank0
  8045  0657  00FF               	movwf	btemp+1
  8046  0658  087C               	movf	(??_isr1+4),w
  8047  0659  008A               	movwf	pclath
  8048  065A  087B               	movf	(??_isr1+3),w
  8049  065B  0084               	movwf	fsr0
  8050  065C  0E7A               	swapf	(??_isr1+2)^0FFFFFF80h,w
  8051  065D  0083               	movwf	status
  8052  065E  0EFE               	swapf	saved_w,f
  8053  065F  0E7E               	swapf	saved_w,w
  8054  0660  0009               	retfie
  8055                           	opt stack 0
  8056                           GLOBAL	__end_of_isr1
  8057  0661                     	__end_of_isr1:
  8058 ;; =============== function _isr1 ends ============
  8059                           
  8060                           	signat	_isr1,88
  8061                           	global	_ReadButtons
  8062                           psect	text1214,local,class=CODE,delta=2
  8063                           global __ptext1214
  8064  0BC8                     __ptext1214:
  8065                           
  8066 ;; *************** function _ReadButtons *****************
  8067 ;; Defined at:
  8068 ;;		line 141 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      unsigned char 
  8075 ;; Registers used:
  8076 ;;		wreg, status,2, status,0, pclath, cstack
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8082 ;;      Params:         0       0       0       0       0
  8083 ;;      Locals:         0       0       0       0       0
  8084 ;;      Temps:          0       0       0       0       0
  8085 ;;      Totals:         0       0       0       0       0
  8086 ;;Total ram usage:        0 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    1
  8089 ;; This function calls:
  8090 ;;		_Debounce
  8091 ;; This function is called by:
  8092 ;;		_isr1
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           psect	text1214
  8096                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  8097                           	line	141
  8098                           	global	__size_of_ReadButtons
  8099  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  8100                           	
  8101  0BC8                     _ReadButtons:	
  8102                           	opt	stack 0
  8103                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  8104                           	line	142
  8105                           	
  8106  0BC8                     i1l11070:	
  8107                           ;HMI.c: 142: Debounce();
  8108  0BC8  120A  118A  2661   	fcall	_Debounce
              120A  158A         
  8109                           	line	144
  8110                           	
  8111  0BCD                     i1l11072:	
  8112                           ;HMI.c: 144: if(UpPressed)
  8113  0BCD  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
  8114  0BCE  2BD0               	goto	u466_21
  8115  0BCF  2BD1               	goto	u466_20
  8116  0BD0                     u466_21:
  8117  0BD0  2BD5               	goto	i1l5225
  8118  0BD1                     u466_20:
  8119                           	line	146
  8120                           	
  8121  0BD1                     i1l11074:	
  8122                           ;HMI.c: 145: {
  8123                           ;HMI.c: 146: UpPressed = 0;
  8124  0BD1  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
  8125                           	line	147
  8126                           	
  8127  0BD2                     i1l11076:	
  8128                           ;HMI.c: 147: return 1;
  8129  0BD2  3001               	movlw	(01h)
  8130  0BD3  2BF7               	goto	i1l5226
  8131                           	
  8132  0BD4                     i1l11078:	
  8133  0BD4  2BF7               	goto	i1l5226
  8134                           	line	149
  8135                           	
  8136  0BD5                     i1l5225:	
  8137                           	line	151
  8138                           ;HMI.c: 149: }
  8139                           ;HMI.c: 151: if(DownPressed)
  8140  0BD5  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
  8141  0BD6  2BD8               	goto	u467_21
  8142  0BD7  2BD9               	goto	u467_20
  8143  0BD8                     u467_21:
  8144  0BD8  2BDD               	goto	i1l5227
  8145  0BD9                     u467_20:
  8146                           	line	153
  8147                           	
  8148  0BD9                     i1l11080:	
  8149                           ;HMI.c: 152: {
  8150                           ;HMI.c: 153: DownPressed = 0;
  8151  0BD9  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
  8152                           	line	154
  8153                           	
  8154  0BDA                     i1l11082:	
  8155                           ;HMI.c: 154: return 2;
  8156  0BDA  3002               	movlw	(02h)
  8157  0BDB  2BF7               	goto	i1l5226
  8158                           	
  8159  0BDC                     i1l11084:	
  8160  0BDC  2BF7               	goto	i1l5226
  8161                           	line	156
  8162                           	
  8163  0BDD                     i1l5227:	
  8164                           	line	157
  8165                           ;HMI.c: 156: }
  8166                           ;HMI.c: 157: if(LeftPressed)
  8167  0BDD  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  8168  0BDE  2BE0               	goto	u468_21
  8169  0BDF  2BE1               	goto	u468_20
  8170  0BE0                     u468_21:
  8171  0BE0  2BE5               	goto	i1l5228
  8172  0BE1                     u468_20:
  8173                           	line	159
  8174                           	
  8175  0BE1                     i1l11086:	
  8176                           ;HMI.c: 158: {
  8177                           ;HMI.c: 159: LeftPressed = 0;
  8178  0BE1  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  8179                           	line	160
  8180                           	
  8181  0BE2                     i1l11088:	
  8182                           ;HMI.c: 160: return 3;
  8183  0BE2  3003               	movlw	(03h)
  8184  0BE3  2BF7               	goto	i1l5226
  8185                           	
  8186  0BE4                     i1l11090:	
  8187  0BE4  2BF7               	goto	i1l5226
  8188                           	line	162
  8189                           	
  8190  0BE5                     i1l5228:	
  8191                           	line	163
  8192                           ;HMI.c: 162: }
  8193                           ;HMI.c: 163: if(RightPressed)
  8194  0BE5  1D71               	btfss	(_RightPressed/8),(_RightPressed)&7
  8195  0BE6  2BE8               	goto	u469_21
  8196  0BE7  2BE9               	goto	u469_20
  8197  0BE8                     u469_21:
  8198  0BE8  2BED               	goto	i1l5229
  8199  0BE9                     u469_20:
  8200                           	line	165
  8201                           	
  8202  0BE9                     i1l11092:	
  8203                           ;HMI.c: 164: {
  8204                           ;HMI.c: 165: RightPressed = 0;
  8205  0BE9  1171               	bcf	(_RightPressed/8),(_RightPressed)&7
  8206                           	line	166
  8207                           	
  8208  0BEA                     i1l11094:	
  8209                           ;HMI.c: 166: return 4;
  8210  0BEA  3004               	movlw	(04h)
  8211  0BEB  2BF7               	goto	i1l5226
  8212                           	
  8213  0BEC                     i1l11096:	
  8214  0BEC  2BF7               	goto	i1l5226
  8215                           	line	168
  8216                           	
  8217  0BED                     i1l5229:	
  8218                           	line	170
  8219                           ;HMI.c: 168: }
  8220                           ;HMI.c: 170: if(CenterPressed)
  8221  0BED  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  8222  0BEE  2BF0               	goto	u470_21
  8223  0BEF  2BF1               	goto	u470_20
  8224  0BF0                     u470_21:
  8225  0BF0  2BF5               	goto	i1l11104
  8226  0BF1                     u470_20:
  8227                           	line	172
  8228                           	
  8229  0BF1                     i1l11098:	
  8230                           ;HMI.c: 171: {
  8231                           ;HMI.c: 172: CenterPressed = 0;
  8232  0BF1  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  8233                           	line	173
  8234                           	
  8235  0BF2                     i1l11100:	
  8236                           ;HMI.c: 173: return 5;
  8237  0BF2  3005               	movlw	(05h)
  8238  0BF3  2BF7               	goto	i1l5226
  8239                           	
  8240  0BF4                     i1l11102:	
  8241  0BF4  2BF7               	goto	i1l5226
  8242                           	line	175
  8243                           	
  8244  0BF5                     i1l5230:	
  8245                           	line	176
  8246                           	
  8247  0BF5                     i1l11104:	
  8248                           ;HMI.c: 175: }
  8249                           ;HMI.c: 176: return 0;
  8250  0BF5  3000               	movlw	(0)
  8251  0BF6  2BF7               	goto	i1l5226
  8252                           	
  8253  0BF7                     i1l11106:	
  8254                           	line	177
  8255                           	
  8256  0BF7                     i1l5226:	
  8257  0BF7  0008               	return
  8258                           	opt stack 0
  8259                           GLOBAL	__end_of_ReadButtons
  8260  0BF8                     	__end_of_ReadButtons:
  8261 ;; =============== function _ReadButtons ends ============
  8262                           
  8263                           	signat	_ReadButtons,89
  8264                           	global	i1___lwmod
  8265                           psect	text1215,local,class=CODE,delta=2
  8266                           global __ptext1215
  8267  0C63                     __ptext1215:
  8268                           
  8269 ;; *************** function i1___lwmod *****************
  8270 ;; Defined at:
  8271 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  __lwmod         2    0[COMMON] unsigned int 
  8274 ;;  __lwmod         2    2[COMMON] unsigned int 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  __lwmod         1    5[COMMON] unsigned char 
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  2    0[COMMON] unsigned int 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2, status,0
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8286 ;;      Params:         4       0       0       0       0
  8287 ;;      Locals:         1       0       0       0       0
  8288 ;;      Temps:          1       0       0       0       0
  8289 ;;      Totals:         6       0       0       0       0
  8290 ;;Total ram usage:        6 bytes
  8291 ;; Hardware stack levels used:    1
  8292 ;; This function calls:
  8293 ;;		Nothing
  8294 ;; This function is called by:
  8295 ;;		_isr1
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           psect	text1215
  8299                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8300                           	line	5
  8301                           	global	__size_ofi1___lwmod
  8302  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
  8303                           	
  8304  0C63                     i1___lwmod:	
  8305                           	opt	stack 1
  8306                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8307                           	line	8
  8308                           	
  8309  0C63                     i1l11206:	
  8310  0C63  0873               	movf	(i1___lwmod@divisor+1),w
  8311  0C64  0472               	iorwf	(i1___lwmod@divisor),w
  8312  0C65  1903               	skipnz
  8313  0C66  2C68               	goto	u489_21
  8314  0C67  2C69               	goto	u489_20
  8315  0C68                     u489_21:
  8316  0C68  2C9F               	goto	i1l11224
  8317  0C69                     u489_20:
  8318                           	line	9
  8319                           	
  8320  0C69                     i1l11208:	
  8321  0C69  01F7               	clrf	(i1___lwmod@counter)
  8322  0C6A  1403               	bsf	status,0
  8323  0C6B  0DF7               	rlf	(i1___lwmod@counter),f
  8324                           	line	10
  8325  0C6C  2C79               	goto	i1l11214
  8326                           	
  8327  0C6D                     i1l7446:	
  8328                           	line	11
  8329                           	
  8330  0C6D                     i1l11210:	
  8331  0C6D  3001               	movlw	01h
  8332                           	
  8333  0C6E                     u490_25:
  8334  0C6E  1003               	clrc
  8335  0C6F  0DF2               	rlf	(i1___lwmod@divisor),f
  8336  0C70  0DF3               	rlf	(i1___lwmod@divisor+1),f
  8337  0C71  3EFF               	addlw	-1
  8338  0C72  1D03               	skipz
  8339  0C73  2C6E               	goto	u490_25
  8340                           	line	12
  8341                           	
  8342  0C74                     i1l11212:	
  8343  0C74  3001               	movlw	(01h)
  8344  0C75  00F6               	movwf	(??i1___lwmod+0)+0
  8345  0C76  0876               	movf	(??i1___lwmod+0)+0,w
  8346  0C77  07F7               	addwf	(i1___lwmod@counter),f
  8347  0C78  2C79               	goto	i1l11214
  8348                           	line	13
  8349                           	
  8350  0C79                     i1l7445:	
  8351                           	line	10
  8352                           	
  8353  0C79                     i1l11214:	
  8354  0C79  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
  8355  0C7A  2C7C               	goto	u491_21
  8356  0C7B  2C7D               	goto	u491_20
  8357  0C7C                     u491_21:
  8358  0C7C  2C6D               	goto	i1l11210
  8359  0C7D                     u491_20:
  8360  0C7D  2C7F               	goto	i1l11216
  8361                           	
  8362  0C7E                     i1l7447:	
  8363  0C7E  2C7F               	goto	i1l11216
  8364                           	line	14
  8365                           	
  8366  0C7F                     i1l7448:	
  8367                           	line	15
  8368                           	
  8369  0C7F                     i1l11216:	
  8370  0C7F  0873               	movf	(i1___lwmod@divisor+1),w
  8371  0C80  0275               	subwf	(i1___lwmod@dividend+1),w
  8372  0C81  1D03               	skipz
  8373  0C82  2C85               	goto	u492_25
  8374  0C83  0872               	movf	(i1___lwmod@divisor),w
  8375  0C84  0274               	subwf	(i1___lwmod@dividend),w
  8376  0C85                     u492_25:
  8377  0C85  1C03               	skipc
  8378  0C86  2C88               	goto	u492_21
  8379  0C87  2C89               	goto	u492_20
  8380  0C88                     u492_21:
  8381  0C88  2C90               	goto	i1l11220
  8382  0C89                     u492_20:
  8383                           	line	16
  8384                           	
  8385  0C89                     i1l11218:	
  8386  0C89  0872               	movf	(i1___lwmod@divisor),w
  8387  0C8A  02F4               	subwf	(i1___lwmod@dividend),f
  8388  0C8B  0873               	movf	(i1___lwmod@divisor+1),w
  8389  0C8C  1C03               	skipc
  8390  0C8D  03F5               	decf	(i1___lwmod@dividend+1),f
  8391  0C8E  02F5               	subwf	(i1___lwmod@dividend+1),f
  8392  0C8F  2C90               	goto	i1l11220
  8393                           	
  8394  0C90                     i1l7449:	
  8395                           	line	17
  8396                           	
  8397  0C90                     i1l11220:	
  8398  0C90  3001               	movlw	01h
  8399                           	
  8400  0C91                     u493_25:
  8401  0C91  1003               	clrc
  8402  0C92  0CF3               	rrf	(i1___lwmod@divisor+1),f
  8403  0C93  0CF2               	rrf	(i1___lwmod@divisor),f
  8404  0C94  3EFF               	addlw	-1
  8405  0C95  1D03               	skipz
  8406  0C96  2C91               	goto	u493_25
  8407                           	line	18
  8408                           	
  8409  0C97                     i1l11222:	
  8410  0C97  3001               	movlw	low(01h)
  8411  0C98  02F7               	subwf	(i1___lwmod@counter),f
  8412  0C99  1D03               	btfss	status,2
  8413  0C9A  2C9C               	goto	u494_21
  8414  0C9B  2C9D               	goto	u494_20
  8415  0C9C                     u494_21:
  8416  0C9C  2C7F               	goto	i1l11216
  8417  0C9D                     u494_20:
  8418  0C9D  2C9F               	goto	i1l11224
  8419                           	
  8420  0C9E                     i1l7450:	
  8421  0C9E  2C9F               	goto	i1l11224
  8422                           	line	19
  8423                           	
  8424  0C9F                     i1l7444:	
  8425                           	line	20
  8426                           	
  8427  0C9F                     i1l11224:	
  8428  0C9F  0875               	movf	(i1___lwmod@dividend+1),w
  8429  0CA0  01F3               	clrf	(?i1___lwmod+1)
  8430  0CA1  07F3               	addwf	(?i1___lwmod+1)
  8431  0CA2  0874               	movf	(i1___lwmod@dividend),w
  8432  0CA3  01F2               	clrf	(?i1___lwmod)
  8433  0CA4  07F2               	addwf	(?i1___lwmod)
  8434                           
  8435  0CA5  2CA6               	goto	i1l7451
  8436                           	
  8437  0CA6                     i1l11226:	
  8438                           	line	21
  8439                           	
  8440  0CA6                     i1l7451:	
  8441  0CA6  0008               	return
  8442                           	opt stack 0
  8443                           GLOBAL	__end_ofi1___lwmod
  8444  0CA7                     	__end_ofi1___lwmod:
  8445 ;; =============== function i1___lwmod ends ============
  8446                           
  8447                           	signat	i1___lwmod,90
  8448                           	global	_Debounce
  8449                           psect	text1216,local,class=CODE,delta=2
  8450                           global __ptext1216
  8451  0661                     __ptext1216:
  8452                           
  8453 ;; *************** function _Debounce *****************
  8454 ;; Defined at:
  8455 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;		None
  8460 ;; Return value:  Size  Location     Type
  8461 ;;		None               void
  8462 ;; Registers used:
  8463 ;;		wreg, status,2, status,0
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8469 ;;      Params:         0       0       0       0       0
  8470 ;;      Locals:         0       0       0       0       0
  8471 ;;      Temps:          1       0       0       0       0
  8472 ;;      Totals:         1       0       0       0       0
  8473 ;;Total ram usage:        1 bytes
  8474 ;; Hardware stack levels used:    1
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_ReadButtons
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           psect	text1216
  8482                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  8483                           	line	61
  8484                           	global	__size_of_Debounce
  8485  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  8486                           	
  8487  0661                     _Debounce:	
  8488                           	opt	stack 0
  8489                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  8490                           	line	63
  8491                           	
  8492  0661                     i1l11164:	
  8493                           ;HMI.c: 63: if(!RB2)
  8494  0661  1283               	bcf	status, 5	;RP0=0, select bank0
  8495  0662  1303               	bcf	status, 6	;RP1=0, select bank0
  8496  0663  1906               	btfsc	(50/8),(50)&7
  8497  0664  2E66               	goto	u474_21
  8498  0665  2E67               	goto	u474_20
  8499  0666                     u474_21:
  8500  0666  2E7B               	goto	i1l5207
  8501  0667                     u474_20:
  8502                           	line	65
  8503                           	
  8504  0667                     i1l11166:	
  8505                           ;HMI.c: 64: {
  8506                           ;HMI.c: 65: UpDebounceCount++;
  8507  0667  3001               	movlw	(01h)
  8508  0668  00F2               	movwf	(??_Debounce+0)+0
  8509  0669  0872               	movf	(??_Debounce+0)+0,w
  8510  066A  1683               	bsf	status, 5	;RP0=1, select bank1
  8511  066B  1303               	bcf	status, 6	;RP1=0, select bank1
  8512  066C  07D5               	addwf	(_UpDebounceCount)^080h,f	;volatile
  8513                           	line	66
  8514                           	
  8515  066D                     i1l11168:	
  8516                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  8517  066D  300A               	movlw	(0Ah)
  8518  066E  0255               	subwf	(_UpDebounceCount)^080h,w	;volatile
  8519  066F  1C03               	skipc
  8520  0670  2E72               	goto	u475_21
  8521  0671  2E73               	goto	u475_20
  8522  0672                     u475_21:
  8523  0672  2E7F               	goto	i1l5209
  8524  0673                     u475_20:
  8525                           	
  8526  0673                     i1l11170:	
  8527  0673  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
  8528  0674  2E76               	goto	u476_21
  8529  0675  2E77               	goto	u476_20
  8530  0676                     u476_21:
  8531  0676  2E7F               	goto	i1l5209
  8532  0677                     u476_20:
  8533                           	line	68
  8534                           	
  8535  0677                     i1l11172:	
  8536                           ;HMI.c: 67: {
  8537                           ;HMI.c: 68: UpPressed = 1;
  8538  0677  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
  8539                           	line	69
  8540                           ;HMI.c: 69: UpReleased = 0;
  8541  0678  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
  8542  0679  2E7F               	goto	i1l5209
  8543                           	line	70
  8544                           	
  8545  067A                     i1l5208:	
  8546                           	line	71
  8547                           ;HMI.c: 70: }
  8548                           ;HMI.c: 71: }
  8549  067A  2E7F               	goto	i1l5209
  8550                           	line	72
  8551                           	
  8552  067B                     i1l5207:	
  8553                           	line	74
  8554                           ;HMI.c: 72: else
  8555                           ;HMI.c: 73: {
  8556                           ;HMI.c: 74: UpDebounceCount = 0;
  8557  067B  1683               	bsf	status, 5	;RP0=1, select bank1
  8558  067C  1303               	bcf	status, 6	;RP1=0, select bank1
  8559  067D  01D5               	clrf	(_UpDebounceCount)^080h	;volatile
  8560                           	line	75
  8561                           ;HMI.c: 75: UpReleased = 1;
  8562  067E  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
  8563                           	line	76
  8564                           	
  8565  067F                     i1l5209:	
  8566                           	line	79
  8567                           ;HMI.c: 76: }
  8568                           ;HMI.c: 79: if(!RB3)
  8569  067F  1283               	bcf	status, 5	;RP0=0, select bank0
  8570  0680  1303               	bcf	status, 6	;RP1=0, select bank0
  8571  0681  1986               	btfsc	(51/8),(51)&7
  8572  0682  2E84               	goto	u477_21
  8573  0683  2E85               	goto	u477_20
  8574  0684                     u477_21:
  8575  0684  2E99               	goto	i1l5210
  8576  0685                     u477_20:
  8577                           	line	81
  8578                           	
  8579  0685                     i1l11174:	
  8580                           ;HMI.c: 80: {
  8581                           ;HMI.c: 81: DownDebounceCount++;
  8582  0685  3001               	movlw	(01h)
  8583  0686  00F2               	movwf	(??_Debounce+0)+0
  8584  0687  0872               	movf	(??_Debounce+0)+0,w
  8585  0688  1683               	bsf	status, 5	;RP0=1, select bank1
  8586  0689  1303               	bcf	status, 6	;RP1=0, select bank1
  8587  068A  07D1               	addwf	(_DownDebounceCount)^080h,f	;volatile
  8588                           	line	82
  8589                           	
  8590  068B                     i1l11176:	
  8591                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  8592  068B  300A               	movlw	(0Ah)
  8593  068C  0251               	subwf	(_DownDebounceCount)^080h,w	;volatile
  8594  068D  1C03               	skipc
  8595  068E  2E90               	goto	u478_21
  8596  068F  2E91               	goto	u478_20
  8597  0690                     u478_21:
  8598  0690  2E9D               	goto	i1l5212
  8599  0691                     u478_20:
  8600                           	
  8601  0691                     i1l11178:	
  8602  0691  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
  8603  0692  2E94               	goto	u479_21
  8604  0693  2E95               	goto	u479_20
  8605  0694                     u479_21:
  8606  0694  2E9D               	goto	i1l5212
  8607  0695                     u479_20:
  8608                           	line	84
  8609                           	
  8610  0695                     i1l11180:	
  8611                           ;HMI.c: 83: {
  8612                           ;HMI.c: 84: DownPressed = 1;
  8613  0695  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
  8614                           	line	85
  8615                           ;HMI.c: 85: DownReleased = 0;
  8616  0696  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
  8617  0697  2E9D               	goto	i1l5212
  8618                           	line	86
  8619                           	
  8620  0698                     i1l5211:	
  8621                           	line	87
  8622                           ;HMI.c: 86: }
  8623                           ;HMI.c: 87: }
  8624  0698  2E9D               	goto	i1l5212
  8625                           	line	88
  8626                           	
  8627  0699                     i1l5210:	
  8628                           	line	90
  8629                           ;HMI.c: 88: else
  8630                           ;HMI.c: 89: {
  8631                           ;HMI.c: 90: DownDebounceCount = 0;
  8632  0699  1683               	bsf	status, 5	;RP0=1, select bank1
  8633  069A  1303               	bcf	status, 6	;RP1=0, select bank1
  8634  069B  01D1               	clrf	(_DownDebounceCount)^080h	;volatile
  8635                           	line	91
  8636                           ;HMI.c: 91: DownReleased = 1;
  8637  069C  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
  8638                           	line	92
  8639                           	
  8640  069D                     i1l5212:	
  8641                           	line	94
  8642                           ;HMI.c: 92: }
  8643                           ;HMI.c: 94: if(!RB4)
  8644  069D  1283               	bcf	status, 5	;RP0=0, select bank0
  8645  069E  1303               	bcf	status, 6	;RP1=0, select bank0
  8646  069F  1A06               	btfsc	(52/8),(52)&7
  8647  06A0  2EA2               	goto	u480_21
  8648  06A1  2EA3               	goto	u480_20
  8649  06A2                     u480_21:
  8650  06A2  2EB7               	goto	i1l5213
  8651  06A3                     u480_20:
  8652                           	line	96
  8653                           	
  8654  06A3                     i1l11182:	
  8655                           ;HMI.c: 95: {
  8656                           ;HMI.c: 96: LeftDebounceCount++;
  8657  06A3  3001               	movlw	(01h)
  8658  06A4  00F2               	movwf	(??_Debounce+0)+0
  8659  06A5  0872               	movf	(??_Debounce+0)+0,w
  8660  06A6  1683               	bsf	status, 5	;RP0=1, select bank1
  8661  06A7  1303               	bcf	status, 6	;RP1=0, select bank1
  8662  06A8  07D2               	addwf	(_LeftDebounceCount)^080h,f	;volatile
  8663                           	line	97
  8664                           	
  8665  06A9                     i1l11184:	
  8666                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  8667  06A9  300A               	movlw	(0Ah)
  8668  06AA  0252               	subwf	(_LeftDebounceCount)^080h,w	;volatile
  8669  06AB  1C03               	skipc
  8670  06AC  2EAE               	goto	u481_21
  8671  06AD  2EAF               	goto	u481_20
  8672  06AE                     u481_21:
  8673  06AE  2EBB               	goto	i1l5215
  8674  06AF                     u481_20:
  8675                           	
  8676  06AF                     i1l11186:	
  8677  06AF  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  8678  06B0  2EB2               	goto	u482_21
  8679  06B1  2EB3               	goto	u482_20
  8680  06B2                     u482_21:
  8681  06B2  2EBB               	goto	i1l5215
  8682  06B3                     u482_20:
  8683                           	line	99
  8684                           	
  8685  06B3                     i1l11188:	
  8686                           ;HMI.c: 98: {
  8687                           ;HMI.c: 99: LeftPressed = 1;
  8688  06B3  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  8689                           	line	100
  8690                           ;HMI.c: 100: LeftReleased = 0;
  8691  06B4  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  8692  06B5  2EBB               	goto	i1l5215
  8693                           	line	101
  8694                           	
  8695  06B6                     i1l5214:	
  8696                           	line	102
  8697                           ;HMI.c: 101: }
  8698                           ;HMI.c: 102: }
  8699  06B6  2EBB               	goto	i1l5215
  8700                           	line	103
  8701                           	
  8702  06B7                     i1l5213:	
  8703                           	line	105
  8704                           ;HMI.c: 103: else
  8705                           ;HMI.c: 104: {
  8706                           ;HMI.c: 105: LeftDebounceCount = 0;
  8707  06B7  1683               	bsf	status, 5	;RP0=1, select bank1
  8708  06B8  1303               	bcf	status, 6	;RP1=0, select bank1
  8709  06B9  01D2               	clrf	(_LeftDebounceCount)^080h	;volatile
  8710                           	line	106
  8711                           ;HMI.c: 106: LeftReleased = 1;
  8712  06BA  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  8713                           	line	107
  8714                           	
  8715  06BB                     i1l5215:	
  8716                           	line	109
  8717                           ;HMI.c: 107: }
  8718                           ;HMI.c: 109: if(!RB5)
  8719  06BB  1283               	bcf	status, 5	;RP0=0, select bank0
  8720  06BC  1303               	bcf	status, 6	;RP1=0, select bank0
  8721  06BD  1A86               	btfsc	(53/8),(53)&7
  8722  06BE  2EC0               	goto	u483_21
  8723  06BF  2EC1               	goto	u483_20
  8724  06C0                     u483_21:
  8725  06C0  2ED5               	goto	i1l5216
  8726  06C1                     u483_20:
  8727                           	line	111
  8728                           	
  8729  06C1                     i1l11190:	
  8730                           ;HMI.c: 110: {
  8731                           ;HMI.c: 111: RightDebounceCount++;
  8732  06C1  3001               	movlw	(01h)
  8733  06C2  00F2               	movwf	(??_Debounce+0)+0
  8734  06C3  0872               	movf	(??_Debounce+0)+0,w
  8735  06C4  1683               	bsf	status, 5	;RP0=1, select bank1
  8736  06C5  1303               	bcf	status, 6	;RP1=0, select bank1
  8737  06C6  07D3               	addwf	(_RightDebounceCount)^080h,f	;volatile
  8738                           	line	112
  8739                           	
  8740  06C7                     i1l11192:	
  8741                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  8742  06C7  300A               	movlw	(0Ah)
  8743  06C8  0253               	subwf	(_RightDebounceCount)^080h,w	;volatile
  8744  06C9  1C03               	skipc
  8745  06CA  2ECC               	goto	u484_21
  8746  06CB  2ECD               	goto	u484_20
  8747  06CC                     u484_21:
  8748  06CC  2ED9               	goto	i1l5218
  8749  06CD                     u484_20:
  8750                           	
  8751  06CD                     i1l11194:	
  8752  06CD  1DF1               	btfss	(_RightReleased/8),(_RightReleased)&7
  8753  06CE  2ED0               	goto	u485_21
  8754  06CF  2ED1               	goto	u485_20
  8755  06D0                     u485_21:
  8756  06D0  2ED9               	goto	i1l5218
  8757  06D1                     u485_20:
  8758                           	line	114
  8759                           	
  8760  06D1                     i1l11196:	
  8761                           ;HMI.c: 113: {
  8762                           ;HMI.c: 114: RightPressed = 1;
  8763  06D1  1571               	bsf	(_RightPressed/8),(_RightPressed)&7
  8764                           	line	115
  8765                           ;HMI.c: 115: RightReleased = 0;
  8766  06D2  11F1               	bcf	(_RightReleased/8),(_RightReleased)&7
  8767  06D3  2ED9               	goto	i1l5218
  8768                           	line	116
  8769                           	
  8770  06D4                     i1l5217:	
  8771                           	line	117
  8772                           ;HMI.c: 116: }
  8773                           ;HMI.c: 117: }
  8774  06D4  2ED9               	goto	i1l5218
  8775                           	line	118
  8776                           	
  8777  06D5                     i1l5216:	
  8778                           	line	120
  8779                           ;HMI.c: 118: else
  8780                           ;HMI.c: 119: {
  8781                           ;HMI.c: 120: RightDebounceCount = 0;
  8782  06D5  1683               	bsf	status, 5	;RP0=1, select bank1
  8783  06D6  1303               	bcf	status, 6	;RP1=0, select bank1
  8784  06D7  01D3               	clrf	(_RightDebounceCount)^080h	;volatile
  8785                           	line	121
  8786                           ;HMI.c: 121: RightReleased = 1;
  8787  06D8  15F1               	bsf	(_RightReleased/8),(_RightReleased)&7
  8788                           	line	122
  8789                           	
  8790  06D9                     i1l5218:	
  8791                           	line	124
  8792                           ;HMI.c: 122: }
  8793                           ;HMI.c: 124: if(!RB6)
  8794  06D9  1283               	bcf	status, 5	;RP0=0, select bank0
  8795  06DA  1303               	bcf	status, 6	;RP1=0, select bank0
  8796  06DB  1B06               	btfsc	(54/8),(54)&7
  8797  06DC  2EDE               	goto	u486_21
  8798  06DD  2EDF               	goto	u486_20
  8799  06DE                     u486_21:
  8800  06DE  2EF3               	goto	i1l5219
  8801  06DF                     u486_20:
  8802                           	line	126
  8803                           	
  8804  06DF                     i1l11198:	
  8805                           ;HMI.c: 125: {
  8806                           ;HMI.c: 126: CenterDebounceCount++;
  8807  06DF  3001               	movlw	(01h)
  8808  06E0  00F2               	movwf	(??_Debounce+0)+0
  8809  06E1  0872               	movf	(??_Debounce+0)+0,w
  8810  06E2  1683               	bsf	status, 5	;RP0=1, select bank1
  8811  06E3  1303               	bcf	status, 6	;RP1=0, select bank1
  8812  06E4  07CE               	addwf	(_CenterDebounceCount)^080h,f	;volatile
  8813                           	line	127
  8814                           	
  8815  06E5                     i1l11200:	
  8816                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  8817  06E5  300A               	movlw	(0Ah)
  8818  06E6  024E               	subwf	(_CenterDebounceCount)^080h,w	;volatile
  8819  06E7  1C03               	skipc
  8820  06E8  2EEA               	goto	u487_21
  8821  06E9  2EEB               	goto	u487_20
  8822  06EA                     u487_21:
  8823  06EA  2EF8               	goto	i1l5222
  8824  06EB                     u487_20:
  8825                           	
  8826  06EB                     i1l11202:	
  8827  06EB  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  8828  06EC  2EEE               	goto	u488_21
  8829  06ED  2EEF               	goto	u488_20
  8830  06EE                     u488_21:
  8831  06EE  2EF8               	goto	i1l5222
  8832  06EF                     u488_20:
  8833                           	line	129
  8834                           	
  8835  06EF                     i1l11204:	
  8836                           ;HMI.c: 128: {
  8837                           ;HMI.c: 129: CenterPressed = 1;
  8838  06EF  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  8839                           	line	130
  8840                           ;HMI.c: 130: CenterReleased = 0;
  8841  06F0  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  8842  06F1  2EF8               	goto	i1l5222
  8843                           	line	131
  8844                           	
  8845  06F2                     i1l5220:	
  8846                           	line	132
  8847                           ;HMI.c: 131: }
  8848                           ;HMI.c: 132: }
  8849  06F2  2EF8               	goto	i1l5222
  8850                           	line	133
  8851                           	
  8852  06F3                     i1l5219:	
  8853                           	line	135
  8854                           ;HMI.c: 133: else
  8855                           ;HMI.c: 134: {
  8856                           ;HMI.c: 135: CenterDebounceCount = 0;
  8857  06F3  1683               	bsf	status, 5	;RP0=1, select bank1
  8858  06F4  1303               	bcf	status, 6	;RP1=0, select bank1
  8859  06F5  01CE               	clrf	(_CenterDebounceCount)^080h	;volatile
  8860                           	line	136
  8861                           ;HMI.c: 136: CenterReleased = 1;
  8862  06F6  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  8863  06F7  2EF8               	goto	i1l5222
  8864                           	line	137
  8865                           	
  8866  06F8                     i1l5221:	
  8867                           	line	138
  8868                           	
  8869  06F8                     i1l5222:	
  8870  06F8  0008               	return
  8871                           	opt stack 0
  8872                           GLOBAL	__end_of_Debounce
  8873  06F9                     	__end_of_Debounce:
  8874 ;; =============== function _Debounce ends ============
  8875                           
  8876                           	signat	_Debounce,88
  8877                           psect	text1217,local,class=CODE,delta=2
  8878                           global __ptext1217
  8879  0000                     __ptext1217:
  8880                           	global	btemp
  8881  007E                     	btemp set 07Eh
  8882                           
  8883                           	DABS	1,126,2	;btemp
  8884                           	global	wtemp0
  8885  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Apr 27 14:43:16 2015

 __end_of_lcd_write_control 0A73             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 0A88  
                       l703 0AC5                         l704 0AC5                         l705 0AC9  
                       l706 0AE8                         l690 0C2C                         l691 0C55  
                       l692 0C30                         l693 0C34                         l694 0C38  
                       l695 0C3C                         l696 0C40                         l689 0C44  
                       l697 0C62                         _GIE 005F                         _RB0 0030  
                       _RB1 0031                         _RC0 0038                         _RB2 0032  
                       _RC1 0039                         _RB3 0033                         _RC2 003A  
                       _RB4 0034                         _RB5 0035                         _RE0 0048  
                       _RB6 0036                         _RE1 0049                         _RE2 004A  
                       _RX9 00C6                         _TX9 04C6                         _pos 00C6  
                       fsr0 0004                         indf 0000                ___awmod@sign 0026  
           ?_lcd_set_cursor 0072                        l1402 0A37                        l1410 0B6B  
                      l2210 0C27                        l1411 0B6B                        l2220 0E5B  
                      l1405 09F8                        l2221 0E69                        l2213 0E3B  
                      l2222 0E8C                        l2214 0E46                        l2230 0F31  
                      l2215 0E77                        l2223 0E75                        l2231 0F48  
                      l1408 0B5A                        l2224 0E8B                        l2216 0E47  
                      l2232 0F77                        l2240 03BA                        l1409 0B41  
                      l2225 0E8C                        l2217 0E8A                        l2241 03C4  
                      l2218 0E49                        l2250 043F                        l2242 03CE  
                      l2219 0E4B                        l2251 0470                        l2243 03D8  
                      l2235 038B                        l2228 0F13                        l2252 0471  
                      l2244 03E5                        l2236 03AF                        l1429 0B13  
                      l2229 0F6B                        l2253 048D                        l2245 0473  
                      l2237 03E7                        l2254 048E                        l2246 03FB  
                      l2238 03B0                        l2255 048E                        l2247 0486  
                      l2239 03FA                        l2248 0401                        l2249 0424  
                      l1399 0A72                        l5240 0D17                        l5233 0D1F  
                      l5241 0D18                        l4425 0AA4                        l4450 0B99  
                      l5242 0D33                        l5234 0CF1                        l4426 0AA3  
                      l5250 02B0                        l5235 0D31                        l5243 0D1D  
                      l4427 0AAC                        l5251 02C3                        l5236 0CF2  
                      l4428 0ABF                        l5252 0384                        l5237 0CF3  
                      l5253 030B                        l5238 0D04                        l5254 0378  
                      l5239 0D05                        l5255 0384                        l3680 0D94  
                      l5248 037A                        l2960 0E28                        l3681 0D9B  
                      l5249 0251                        l3674 0A53                        l3682 0DB8  
                      l2970 00FD                        l3675 0A53                        l3683 0DA2  
                      l2971 0235                        l2963 0A9E                        l3676 0A58  
                      l3684 0DC2                        l2972 014A                        l3677 0A5E  
                      l3685 0DD3                        l2973 0234                        l2974 0197  
                      l2966 0063                        l2958 0DE9                        l2967 0237  
                      l2975 0233                        l2959 0E0A                        l2976 01E4  
                      l2968 00B0                        l2969 0236                        l2977 0232  
                      l2978 0231                        l2979 0237                        l6701 0A05  
                      l7430 0B38                        l6710 0FAD                        l7431 0B3F  
                      l6711 0FCB                        l7440 0D7B                        l6712 0FFF  
                      l6704 0A24                        l7441 0D83                        l7434 0D7C  
                      l7450 0CE4                        l6730 04AD                        l7435 0D4E  
                      l7451 0CEC                        l6715 072E                        l6731 058B  
                      l6707 09E5                        l7428 0B19                        l7436 0D42  
                      l7444 0CE5                        l6716 074C                        l6740 0526  
                      l6732 04AE                        l7429 0B23                        l7437 0D53  
                      l7445 0CBF                        l6717 0780                        l6741 056B  
                      l6733 04AF                        l7438 0D54                        l7446 0CB3  
                      l6726 0577                        l6742 052B                        l6734 04C7  
                      l7439 0D6D                        l7447 0CC4                        l6743 0576  
                      l6735 04B0                        l6727 0499                        l7448 0CC5  
                      l7640 0EB1                        l6744 058A                        l6736 04E1  
                      l6728 04AB                        l7449 0CD6                        l7641 0EC2  
                      l6745 0590                        l6737 04EC                        l6729 04B2  
                      l7642 0EC3                        l6738 0514                        l7643 0ED4  
                      l6739 0509                        l7644 0EE2                        l7636 0E9D  
                      l7645 0EED                        l7637 0EA7                        l7646 0EF4  
                      l7638 0EE3                        l7639 0EBD                        _CHS0 00FB  
                      _CHS1 00FC                        _CHS2 00FD                        STR_1 07B3  
                      STR_2 07AA                        STR_3 07C5                        STR_4 07CE  
                      STR_5 07BC                        STR_6 07EE                        STR_7 07F2  
                      STR_8 07DE                        STR_9 07EA                        _BRGH 04C2  
                      _CREN 00C4                        u4000 0CCF                        u4001 0CCE  
                      u4020 0CE3                        u4100 0EE1                        u4021 0CE2  
                      u4005 0CCB                        u4101 0EE0                        u4110 0EE7  
                      u4030 0E94                        u4015 0CD7                        u4031 0E93  
                      u4040 0EA1                        u4200 0F8E                        u4041 0EA0  
                      u4201 0F8D                        u4050 0EAD                        u4210 070F  
                      u4051 0EAC                        u4211 070E                        u4300 0154  
                      u4220 0020                        u4301 0153                        u4221 001F  
                      u3350 0AC9                        u4070 0EC1                        u4310 015D  
                      u4230 0029                        u3351 0AC8                        u4071 0EC0  
                      u5007 0A33                        u4311 015C                        u4231 0028  
                      u4080 0ECD                        u4320 01A1                        u4240 006D  
                      u4400 0513                        u4081 0ECC                        u4065 0EB2  
                      u5017 0A6D                        u4321 01A0                        u4241 006C  
                      u4401 0512                        u4330 01AA                        u4250 0076  
                      u4410 051A                        u5027 0A86                        u4331 01A9  
                      u4251 0075                        u4411 0519                        u4180 0D8D  
                      u4340 01EE                        u4260 00BA                        u4420 0575  
                      u4500 0F11                        u3365 0AD6                        u4085 0EC9  
                      u5037 0C57                        u4181 0D8C                        u4341 01ED  
                      u4261 00B9                        u4421 0574                        u4501 0F10  
                      u3550 0CFF                        u4190 0DC2                        u4350 01F7  
                      u4270 00C3                        u4430 0589                        u4510 0F24  
                      u3551 0CFE                        u4095 0ED5                        u4191 0DC1  
                      u4351 01F6                        u4271 00C2                        u4431 0588  
                      u4511 0F23                        u3560 0D14                        u4280 0107  
                      u4360 049F                        u4440 0B6A                        u4520 0F41  
                      u3561 0D13                        u4281 0106                        u4361 049E  
                      u4441 0B69                        u4521 0F40                        u4505 0F0D  
                      u3570 0A57                        u3650 0AAC                        u4290 0110  
                      u4370 04D7                        u4450 0242                        u4530 0F6B  
                      u3571 0A56                        u3651 0AAB                        u4195 0DBE  
                      u4291 010F                        u4371 04D6                        u4531 0F6A  
                      u4515 0F20                        _PEIE 005E                        u3900 0D3E  
                      u4380 04EA                        u4460 029D                        u3901 0D3D  
                      u4381 04E9                        u4461 029C                        u4390 0507  
                      u4470 0DE7                        u4391 0506                        u4471 0DE6  
                      u4535 0F67                        u3920 0D52                        u4480 0E09  
                      u3921 0D51                        u4465 0299                        u4481 0E08  
                      u4490 0E3F                        u3915 0D43                        u4395 0503  
                      u4475 0DE3                        u4491 0E3E                        _RCIE 0465  
                      u3860 0B1D                        u3940 0D65                        _RCIF 0065  
                      u3861 0B1C                        u3941 0D64                        u4485 0E05  
                      u3935 0D55                        u3960 0D7A                        u3961 0D79  
                      u3945 0D61                        u3890 0B37                        u3970 0CAF  
                      u3891 0B36                        u3875 0B24                        u3955 0D6E  
                      u3971 0CAE                        u3885 0B2B                        u3990 0CC3  
                      u4950 039A                        u3991 0CC2                        u4951 0399  
                      u4960 039E                        u3985 0CB4                        u4961 039D  
                      _OERR 00C1                        u4977 042C                        u4987 0447  
                      u4997 0DAB                        _TMR0 0001                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 0CED      __end_of_lcd_write_data 0A38                        _isr1 0591  
                      _main 0385                        _init 0BF8                        _test 00C8  
                      btemp 007E              _CenterReleased 0381                        start 0012  
             ??_ReadButtons 0073                       ?_Menu 0072            ??_robot_distance 0023  
                     l11110 0B6F                       l11120 0B7E                       l11112 0B77  
                     l10240 0CFB                       l10090 0ADF                       l11130 0B89  
                     l11122 0B81                       l11114 0B78                       l10250 0D1C  
                     l10242 0CFF                       l10092 0AE8                       l10084 0AC0  
                     l11132 0B8A                       l11124 0B84                       l11116 0B7A  
                     l11108 0B6C                       l10252 0D1E                       l10244 0D05  
                     l10236 0CF0                       l10260 0A4E                       l10500 0CD6  
                     l11300 0424                       l10086 0AC3                       l11126 0B85  
                     l11118 0B7B                       l10246 0D14                       l10238 0CF3  
                     l10254 0D1F                       l10262 0A50                       l10502 0CDD  
                     l10510 0E94                       l11230 0BF9                       l11310 0464  
                     l11302 0433                       l10088 0ACC                       l11128 0B88  
                     l10248 0D18                       l10256 0D31                       l10264 0A58  
                     l10504 0CE5                       l10520 0EB1                       l10512 0E9D  
                     l10600 0A2B                       l11240 0C1B                       l11232 0C08  
                     l11312 0472                       l11304 043F                       l10258 0D33  
                     l10266 0A5C                       l10370 0ABB                       l10362 0AA2  
                     l10450 0B19                       l10506 0CEC                       l10530 0ED4  
                     l10522 0EB8                       l10514 0EA1                       l10602 0A2D  
                     l10610 0D88                       l11250 0C26                       l11242 0C1F  
                     l11234 0C0D                       l11306 044E                       l11314 0473  
                     l10268 0A5E                       l10372 0ABE                       l10364 0AA4  
                     l10452 0B1D                       l10460 0D34                       l10540 0EF4  
                     l10532 0EDB                       l10524 0EBD                       l10516 0EA7  
                     l10508 0E8D                       l10604 0A2E                       l10620 0D9F  
                     l10612 0D8D                       l10700 0499                       l11244 0C23  
                     l11236 0C11                       l11228 0BF8                       l11308 0459  
                     l11316 0486                       l11260 039A                       l11252 0385  
                     l10366 0AAD                       l10454 0B2A                       l10470 0D4E  
                     l10462 0D38                       l10526 0EC3                       l10518 0EAD  
                     l10534 0EE3                       l10606 09F9                       l10630 0DCE  
                     l10622 0DA7                       l10614 0D94                       l10710 04C7  
                     l10702 049F                       l11246 0C24                       l11238 0C19  
                     l11270 03B0                       l11262 039E                       l11254 038B  
                     l10368 0AB5                       l10456 0B38                       l10448 0B14  
                     l10480 0D74                       l10472 0D54                       l10464 0D3E  
                     l10536 0EE7                       l10528 0ECD                       l10632 0DCF  
                     l10624 0DC4                       l10616 0D9B                       l10608 0D84  
                     l10640 0F88                       l10720 04E1                       l10712 04CF  
                     l10704 04A6                       l11248 0C25                       l11280 03CA  
                     l11272 03B6                       l11264 039F                       l11256 0391  
                     l10458 0B3F                       l10474 0D65                       l10466 0D42  
                     l10482 0D7C                       l10490 0CB3                       l10538 0EED  
                     l10570 0C43                       l10634 0DD0                       l10626 0DCA  
                     l10618 0D9E                       l10642 0F8E                       l10650 0709  
                     l10730 0509                       l10722 04E4                       l10714 04D3  
                     l10706 04B1                       l11290 03E6                       l11282 03CE  
                     l11274 03BA                       l11266 03A4                       l11258 0393  
                     l10484 0D83                       l10476 0D6B                       l10468 0D49  
                     l10492 0CBA                       l10572 0C44                       l10564 0C2B  
                     l10580 0A73                       l10628 0DCD                       l10644 0FAD  
                     l10636 0F78                       l10652 070F                       l10660 0029  
                     l10740 0526                       l10732 050D                       l10724 04EB  
                     l10716 04D7                       l10708 04B2                       l10900 0E74  
                     l11284 03D4                       l11276 03C0                       l11268 03A9  
                     l11292 03E7                       l10478 0D6D                       l10494 0CBF  
                     l10486 0CA7                       l10566 0C40                       l10574 0C55  
                     l10582 0A76                       l10590 0A62                       l10638 0F80  
                     l10654 072E                       l10646 06F9                       l10670 00BA  
                     l10662 0063                       l10742 052B                       l10734 0514  
                     l10726 04EC                       l10718 04DB                       l10750 0577  
                     l10830 0288                       l10822 0238                       l10902 0E76  
                     l10910 0F00                       l11294 03FB                       l11286 03D8  
                     l11278 03C4                       l10496 0CC5                       l10488 0CAF  
                     l10576 0C59                       l10568 0C42                       l10584 0A7A  
                     l10592 0A65                       l10648 0701                       l10680 014A  
                     l10672 00C3                       l10664 006D                       l10656 0015  
                     l10744 055F                       l10736 051A                       l10728 0508  
                     l10752 058B                       l10760 09F2                       l10840 02C9  
                     l10832 028E                       l10824 0251                       l10904 0E77  
                     l10920 0F24                       l10912 0F04                       l11296 0401  
                     l11288 03E3                       l10498 0CCF                       l10578 0C62  
                     l10586 0A7E                       l10594 0A67                       l10690 01AA  
                     l10682 0154                       l10674 00FD                       l10666 0076  
                     l10658 0020                       l10754 0590                       l10746 0566  
                     l10738 0521                       l10762 0B40                       l10770 0AE9  
                     l10850 0344                       l10842 02E0                       l10834 029D  
                     l10826 0257                       l10930 0F48                       l10922 0F31  
                     l10914 0F12                       l10906 0EF5                       l11298 040E  
                     l10588 0A82                       l10596 0A68                       l10692 01E4  
                     l10684 015D                       l10676 0107                       l10668 00B0  
                     l10748 056B                       l10756 0A16                       l10764 0B41  
                     l10780 0AF5                       l10772 0AED                       l10852 034A  
                     l10844 030B                       l10836 02B0                       l10828 0277  
                     l10860 037A                       l10932 0F56                       l10924 0F3D  
                     l10916 0F13                       l10908 0EFB                       l10598 0A28  
                     l10694 01EE                       l10686 0197                       l10678 0110  
                     l10758 09F1                       l10766 0B51                       l10782 0AFB  
                     l10774 0AF0                       l10790 09DF                       l10854 035B  
                     l10846 0311                       l10838 02C3                       l10870 0DF6  
                     l10862 0DD4                       l10934 0F5E                       l10926 0F41  
                     l10918 0F18                       l10696 01F7                       l10688 01A1  
                     l10768 0B5A                       l10784 0B01                       l10776 0AF1  
                     l10792 0A89                       l10856 0366                       l10848 0333  
                     l10872 0DFC                       l10864 0DDA                       l10880 0E3B  
                     l10936 0F6E                       l10928 0F42                       l10698 0494  
                     l10786 0B07                       l10778 0AF4                       l10794 0A97  
                     l10858 0379                       l10866 0DE8                       l10874 0E0A  
                     l10890 0E5B                       l10882 0E3F                       l10938 0F77  
                     l10788 0B0D                       l10796 0A9E                       l10868 0DE9  
                     l10892 0E65                       l10884 0E40                       l10876 0E29  
                     l10894 0E69                       l10886 0E4B                       l10878 0E2E  
                     l10896 0E6D                       l10888 0E57                       l10898 0E70  
      __size_of_calibrateIR 0064                       ?_isr1 0072                       ?_main 0072  
                     ?_init 0072                       _EEADR 010D                       STR_10 07F6  
                     STR_11 079B                       STR_12 079B                       STR_13 07E2  
                     STR_14 07D6                       STR_15 07E6             __end_of___awmod 0EF5  
                     _CARRY 0018             __end_of___lwdiv 0D84             __end_of___lwmod 0CED  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _SSPIF 0063  
                     _TXREG 0019      lcd_write_data@databyte 0022          i1___lwmod@dividend 0074  
           __end_of_scan360 0F78                       _total 00CA              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00DF             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0591            __end_of_Debounce 06F9          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072                __end_of_Menu 0D34  
__size_of_lcd_write_control 0014            _shortMenuStrings 00E5                __end_of_isr1 0661  
              __end_of_main 0491                __end_of_init 0C28             rotate@direction 0025  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
                    ??_isr1 0078                      ??_main 0062                      ??_init 0023  
       __end_of_ReadButtons 0BF8                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _EECON1 018C                      _EECON2 018D            __end_of_adc_read 0AE9  
                    i1l2200 05CF                      i1l2201 05E8                      i1l2202 0607  
                    i1l2203 0619                      i1l2204 062F                      i1l2205 0655  
                    i1l2206 0654                      i1l2207 0655                      i1l2198 061A  
                    i1l2199 05B6                      i1l5210 0699                      i1l5211 0698  
                    i1l5220 06F2                      i1l5212 069D                      i1l5221 06F8  
                    i1l5213 06B7                      i1l5222 06F8                      i1l5214 06B6  
                    i1l5230 0BF5                      i1l5215 06BB                      i1l5207 067B  
                    i1l5216 06D5                      i1l5208 067A                      i1l5217 06D4  
                    i1l5209 067F                      i1l5225 0BD5                      i1l5218 06D9  
                    i1l5226 0BF7                      i1l5219 06F3                      i1l5227 0BDD  
                    i1l5228 0BE5                      i1l5229 0BED                      i1l7450 0C9E  
                    i1l7451 0CA6                      i1l7444 0C9F                      i1l7445 0C79  
                    i1l7446 0C6D                      i1l7447 0C7E                      i1l7448 0C7F  
                    i1l7449 0C90                      u460_20 05FF                      u460_21 05FE  
                    u461_20 060E                      u461_21 060D                      u470_20 0BF1  
                    u462_20 061E                      u470_21 0BF0                      u462_21 061D  
               _DistLowByte 00D0                      u463_20 0634                      u463_21 0633  
                    u480_20 06A3                      u464_20 063A                      u456_20 0595  
                    u480_21 06A2                      u464_21 0639                      u456_21 0594  
                    u481_20 06AF                      u465_20 0650                      u457_20 05B4  
                    u481_21 06AE                      u465_21 064F                      u457_21 05B3  
                    u482_20 06B3                      u474_20 0667                      u466_20 0BD1  
                    u458_20 05CD                      u482_21 06B2                      u474_21 0666  
                    u466_21 0BD0                      u458_21 05CC                      u490_25 0C6E  
                    u483_20 06C1                      u475_20 0673                      u491_20 0C7D  
                    u467_20 0BD9                      u459_20 05E6                      u483_21 06C0  
                    u475_21 0672                      u491_21 0C7C                      u467_21 0BD8  
                    u459_21 05E5                      u484_20 06CD                      u476_20 0677  
                    u492_20 0C89                      u468_20 0BE1                      u484_21 06CC  
                    u476_21 0676                      u492_21 0C88                      u468_21 0BE0  
                    u492_25 0C85                      u485_20 06D1                      u477_20 0685  
                    u469_20 0BE9                      u485_21 06D0                      u477_21 0684  
                    u469_21 0BE8                      u493_25 0C91                      u486_20 06DF  
                    u478_20 0691                      u494_20 0C9D                      u486_21 06DE  
                    u478_21 0690                      u494_21 0C9C                      u487_20 06EB  
                    u479_20 0695                      u487_21 06EA                      u479_21 0694  
                    u488_20 06EF                      u488_21 06EE                      u489_20 0C69  
                    u489_21 0C68                      _TMR0IE 005D                      _TMR0IF 005A  
              scan360@steps 0060                      _SSPCON 0014                      _SSPBUF 0013  
                _UpReleased 038E            __end_of_lcd_init 0B14                      _adcVal 006A  
           _UpDebounceCount 00D5                      ___wmul 0B14                   ??___awmod 0024  
              _turnhighByte 00DE                ??_ADCconvert 002E                   ??___lwdiv 002A  
                 ??___lwmod 0032            __end_of_init_adc 0A89              ??_readDistance 002A  
           ___awmod@divisor 0020    __end_of_lcd_write_string 0B6C             ___awmod@counter 0025  
                    _rotate 0D84                      _rxfifo 00A0                      clrloop 09E7  
                    _txfifo 00B0                      _rxiptr 00DA                      _rxoptr 00DB  
                    _txiptr 006D                   ??_scan360 005C                      _txoptr 006E  
          __end_of_ser_init 0B9A           __end_ofi1___lwmod 0CA7                      saved_w 007E  
             main@shortwall 0065                 _LeftPressed 0384                   ??_sprintf 0039  
               _DownPressed 0382           lcd_write_string@s 0027          __end_of_ADCconvert 0238  
            __pcstackCOMMON 0072                __pidataBANK1 0A06                 _ReadButtons 0BC8  
          ??_lcd_set_cursor 0023                   ?_Debounce 0072               _buttonPressed 006C  
                __pbssBANK0 0068                  __pbssBANK1 00A0                  __pbssBANK3 0190  
         _DownDebounceCount 00D1          _RightDebounceCount 00D3                  __pmaintext 0385  
         robotTurn@distance 0022                     ?___wmul 0020                  __pintentry 0004  
              _DistHighByte 00CF                  __ptext1200 0A25                  __ptext1201 0A5F  
     __end_of_UpdateDisplay 0385                  __ptext1210 0CED                  __ptext1202 0A73  
                __ptext1211 0B6C                  __ptext1203 0C28                  __ptext1212 0AC0  
                __ptext1204 0E8D                  __ptext1213 0591                  __ptext1205 0CA7  
                __ptext1214 0BC8                  __ptext1206 0D34                  __ptext1215 0C63  
                __ptext1207 0B14                  __ptext1216 0661                  __ptext1208 0A9F  
                __ptext1217 0000                  __ptext1209 0A4B                  __ptext1190 0AE9  
                __ptext1191 0B40                  __ptext1183 0EF5                  __ptext1192 09EE  
                __ptext1184 0E29                  __ptext1193 0A13                  __ptext1185 0DD4  
                __ptext1194 0491                  __ptext1186 0238                  __ptext1195 0015  
                __ptext1187 0BF8                  __ptext1196 06F9                  __ptext1188 0A89  
                __ptext1197 0F78                  __ptext1189 09DF                  __ptext1198 0D84  
                __ptext1199 09F9                   ?_adc_read 0020                     ?_rotate 0023  
        __size_of_ser_putch 0021          __size_of_robo_init 000D                     i1l11100 0BF2  
                   i1l11020 0595                     i1l11102 0BF4                     i1l11030 05B6  
                   i1l11022 0596                     i1l11200 06E5                     i1l11104 0BF5  
                   i1l11040 05FF                     i1l11032 05CD                     i1l11024 059E  
                   i1l11202 06EB                     i1l11210 0C6D                     i1l11106 0BF7  
                   i1l11042 0600                     i1l11034 05CF                     i1l11026 059F  
                   i1l11050 061A                     i1l11018 0591                     i1l11204 06EF  
                   i1l11220 0C90                     i1l11212 0C74                     i1l11060 063A  
                   i1l11052 061E                     i1l11044 0604                     i1l11036 05E6  
                   i1l11028 05B4                     i1l11222 0C97                     i1l11214 0C79  
                   i1l11206 0C63                     i1l11070 0BC8                     i1l11062 0642  
                   i1l11054 061F                     i1l11046 0607                     i1l11038 05E8  
        __size_of_robotMove 0088                     i1l11216 0C7F                     i1l11208 0C69  
                   i1l11224 0C9F                     i1l11080 0BD9                     i1l11072 0BCD  
                   i1l11064 0646                     i1l11056 062F                     i1l11048 060E  
                   i1l11170 0673                     i1l11226 0CA6                     i1l11218 0C89  
                   i1l11090 0BE4                     i1l11082 0BDA                     i1l11074 0BD1  
                   i1l11066 064A                     i1l11058 0634                     i1l11180 0695  
                   i1l11172 0677                     i1l11164 0661                     i1l11092 0BE9  
                   i1l11084 0BDC                     i1l11076 0BD2                     i1l11068 0650  
                   i1l11190 06C1                     i1l11182 06A3                     i1l11174 0685  
                   i1l11166 0667                     i1l11094 0BEA                     i1l11086 0BE1  
                   i1l11078 0BD4                     i1l11192 06C7                     i1l11184 06A9  
                   i1l11176 068B                     i1l11168 066D                     i1l11096 0BEC  
                   i1l11088 0BE2                     i1l11194 06CD                     i1l11186 06AF  
                   i1l11178 0691                     i1l11098 0BF1                     i1l11196 06D1  
                   i1l11188 06B3                     i1l11198 06DF          __size_of_robotTurn 0088  
                ??_Debounce 0072            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094        __end_of_readDistance 0A9F                   ?_init_adc 0072  
                 ?_ser_init 0072               ??_calibrateIR 005A                     ___awmod 0E8D  
           __size_of___wmul 002C                     ___lwdiv 0D34                     ___lwmod 0CA7  
 __size_of_adc_read_channel 003B                  ??_adc_read 0022             __size_of_rotate 0050  
                   _scan360 0EF5                     _dpowers 0791            ___awmod@dividend 0022  
                   _lowByte 00D9                     _ser_tmp 00DC                     _sprintf 0491  
                ??_lcd_init 0023        end_of_initialization 0BC4                   _SCAN_FLAG 00D4  
                   init_ram 0A3C                  ??_init_adc 0020           __end_of_ser_putch 0AC0  
         __end_of_robo_init 0A06           __end_of_robotMove 1000                _LeftReleased 0385  
         __end_of_robotTurn 0781                  ??_ser_init 0020                     rotate@i 0028  
              _DownReleased 0383               _RightReleased 038B    __size_of_readAvgDistance 0055  
                _robot_read 0A13           ?_lcd_write_string 0027         __end_of_calibrateIR 0E8D  
        ??_lcd_write_string 0029                 AT25256A@CS0 0038                 AT25256A@CS1 0039  
         adc_read@adc_value 0024                   i1___lwmod 0C63     __size_of_robot_distance 0007  
                _totalSteps 00CC                  main@choice 0067               ?_spi_transfer 0072  
                 Menu@input 0020               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 0B40           i1___lwmod@divisor 0072               __pbitbssBANK0 0378  
         i1___lwmod@counter 0077              __end_of_rotate 0DD4         start_initialization 0B9A  
     __size_of_readDistance 0016           __size_of_Debounce 0098                  ?i1___lwmod 0072  
            ??_spi_transfer 0020       lcd_set_cursor@address 0023                   _UpPressed 038D  
            _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 0E29                 __pdataBANK1 00E0  
          _adc_read_channel 0C28                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 0A89           __size_of_adc_read 0029           ??_readAvgDistance 0030  
             __pcstackBANK0 0020           __size_of_lcd_init 002B                 sprintf@_val 003F  
               sprintf@flag 003D           robotMove@distance 0022                 sprintf@prec 003E  
              _current_step 00EC            readAvgDistance@i 0032           __size_of_init_adc 0016  
          ___lwdiv@dividend 0028                    ?___awmod 0020           __size_of_ser_init 002E  
                  ?___lwdiv 0026                    ?___lwmod 002E                   __pstrings 0781  
                 _dist_high 00C0                    ?_scan360 005A         readDistance@fullval 002C  
          ___lwdiv@quotient 002B              _robot_distance 09DF                 ??i1___lwmod 0076  
                  ?_sprintf 0034     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 014D              ___wmul@product 0024         __size_of_robot_read 0012  
                ser_putch@c 0021                   _ser_putch 0A9F                   _robo_init 09F9  
                 _robotMove 0F78                   _robotTurn 06F9                _RightPressed 038A  
      __size_of_ReadButtons 0030        __end_of_spi_transfer 0A5F                 __stringbase 0790  
         ___wmul@multiplier 0020      UpdateDisplay@adcOutput 004A            spi_transfer@data 0022  
          spi_transfer@temp 0021                    _Debounce 0661      __end_of_robot_distance 09E6  
         _LeftDebounceCount 00D2   __size_of_lcd_write_string 002C          scan360@lowestSteps 005E  
   __size_of_lcd_write_data 0013                  ?_ser_putch 0072     adc_read_channel@channel 0027  
             _RTC_FLAG_10MS 0386               _RTC_FLAG_50MS 0389                  ?_robo_init 0072  
                 init_fetch 0A38                  ?_robotMove 0022                  ?_robotTurn 0022  
                _ADCconvert 0015            __size_of___awmod 0068            __size_of___lwdiv 0050  
          __size_of___lwmod 0046               _UpdateDisplay 0238                    _adc_read 0AC0  
               _currentMenu 00D6            __size_of_scan360 0083             ?_robot_distance 0072  
           ___lwdiv@divisor 0026             ___lwdiv@counter 002D                 _menuStrings 00E0  
                  _highByte 00D8                    _lcd_init 0AE9                    _distance 00C4  
                  _dist_low 00C2            __size_of_sprintf 0100    __end_of_adc_read_channel 0C63  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 0A73  
             __size_of_isr1 00D0               __size_of_main 010C               __size_of_init 0030  
          robot_read@packet 0022                    clear_ram 09E6                    _ser_init 0B6C  
           _readAvgDistance 0DD4                ?_calibrateIR 0072              ?_UpdateDisplay 0072  
              ??_robot_read 0022         _CenterDebounceCount 00CE                _RTC_FLAG_1MS 0378  
        UpdateDisplay@F1230 0190                    intlevel1 0000              _lcd_set_cursor 09EE  
                 sprintf@ap 003C                   sprintf@sp 0043            ___lwmod@dividend 0030  
               _SER_RC_FLAG 038C          __end_of_robot_read 0A25                   stringcode 078B  
               _serialInput 00DD                 ??_ser_putch 0020               _distTravelled 00EA  
               ??_robo_init 0022       __size_of_spi_transfer 0014                 ??_robotMove 0024  
               ??_robotTurn 0024                 ?_ADCconvert 0072           _lcd_write_control 0A5F  
          scan360@lowestVal 005C          ?_lcd_write_control 0072                  _OPTION_REG 0081  
                  sprintf@c 0044                    sprintf@f 0034             ___lwmod@divisor 002E  
           ___lwmod@counter 0033                    stringdir 078B                    stringtab 0781  
       ??_lcd_write_control 0020      __end_of_lcd_set_cursor 09F9            _lcd_write_string 0B40  
              _spi_transfer 0A4B           _current_direction 00D7                 _RTC_Counter 0068  
   __end_of_readAvgDistance 0E29              _lcd_write_data 0A25  
