

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 17 10:12:40 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 34 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 34 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_init,_init_adc
    48                           	FNCALL	_init,_lcd_init
    49                           	FNCALL	_init,_ser_init
    50                           	FNCALL	_lcd_init,_lcd_write_control
    51                           	FNROOT	_main
    52                           	FNCALL	_isr1,___lwmod
    53                           	FNCALL	_isr1,_readAvgDistance
    54                           	FNCALL	_isr1,_ADCconvert
    55                           	FNCALL	_isr1,_ReadButtons
    56                           	FNCALL	_ADCconvert,___lwmod
    57                           	FNCALL	_ADCconvert,i1_lcd_write_control
    58                           	FNCALL	_ADCconvert,_sprintf
    59                           	FNCALL	_ADCconvert,_lcd_set_cursor
    60                           	FNCALL	_ADCconvert,_lcd_write_string
    61                           	FNCALL	_readAvgDistance,_readDistance
    62                           	FNCALL	_readAvgDistance,___lwdiv
    63                           	FNCALL	_readDistance,_adc_read_channel
    64                           	FNCALL	_lcd_write_string,_lcd_write_data
    65                           	FNCALL	_lcd_set_cursor,i1_lcd_write_control
    66                           	FNCALL	_sprintf,___lwdiv
    67                           	FNCALL	_sprintf,___lwmod
    68                           	FNCALL	_ReadButtons,_Debounce
    69                           	FNCALL	_adc_read_channel,_adc_read
    70                           	FNCALL	intlevel1,_isr1
    71                           	global	intlevel1
    72                           	FNROOT	intlevel1
    73                           	global	_current_step
    74                           psect	idataBANK0,class=CODE,space=0,delta=2
    75                           global __pidataBANK0
    76  07EA                     __pidataBANK0:
    77                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
    78                           	line	21
    79                           
    80                           ;initializer for _current_step
    81  07EA  343C               	retlw	03Ch
    82                           	global	_dpowers
    83                           psect	strings,class=STRING,delta=2
    84                           global __pstrings
    85  0700                     __pstrings:
    86                           ;	global	stringdir,stringtab,__stringbase
    87  0700                     stringtab:
    88                           ;	String table - string pointers are 1 byte each
    89  0700                     stringcode:stringdir:
      + 0700                     stringdir:	
    90  0700  3007               movlw high(stringdir)
    91  0701  008A               movwf pclath
    92  0702  0804               movf fsr,w
    93  0703  0A84               incf fsr
    94  0704  0782               	addwf pc
    95  0705                     __stringbase:
    96  0705  3400               	retlw	0
    97                           psect	strings
    98                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
    99                           	line	350
   100  0706                     _dpowers:
   101  0706  3401               	retlw	01h
   102  0707  3400               	retlw	0
   103                           
   104  0708  340A               	retlw	0Ah
   105  0709  3400               	retlw	0
   106                           
   107  070A  3464               	retlw	064h
   108  070B  3400               	retlw	0
   109                           
   110  070C  34E8               	retlw	0E8h
   111  070D  3403               	retlw	03h
   112                           
   113  070E  3410               	retlw	010h
   114  070F  3427               	retlw	027h
   115                           
   116                           	global	_dpowers
   117                           	global	_RTC_Counter
   118                           	global	_CenterDebounceCount
   119                           	global	_DownDebounceCount
   120                           	global	_LeftDebounceCount
   121                           	global	_RightDebounceCount
   122                           	global	_UpDebounceCount
   123                           	global	_buttonPressed
   124                           	global	_current_direction
   125                           	global	_rxiptr
   126                           	global	_rxoptr
   127                           	global	_ser_tmp
   128                           	global	_txiptr
   129                           	global	_txoptr
   130                           	global	_CenterPressed
   131                           	global	_CenterReleased
   132                           	global	_DownPressed
   133                           	global	_DownReleased
   134                           	global	_LeftPressed
   135                           	global	_LeftReleased
   136                           	global	_RTC_FLAG_10MS
   137                           	global	_RTC_FLAG_1MS
   138                           	global	_RTC_FLAG_250MS
   139                           	global	_RTC_FLAG_500MS
   140                           	global	_RTC_FLAG_50MS
   141                           	global	_RightPressed
   142                           	global	_RightReleased
   143                           	global	_UpPressed
   144                           	global	_UpReleased
   145                           	global	ADCconvert@F1190
   146                           	global	_rxfifo
   147                           	global	_txfifo
   148                           	global	readAvgDistance@F1184
   149                           	global	_ADCON0
   150  001F                     _ADCON0	set	31
   151                           	global	_ADRESH
   152  001E                     _ADRESH	set	30
   153                           	global	_PORTA
   154  0005                     _PORTA	set	5
   155                           	global	_PORTC
   156  0007                     _PORTC	set	7
   157                           	global	_PORTD
   158  0008                     _PORTD	set	8
   159                           	global	_PORTE
   160  0009                     _PORTE	set	9
   161                           	global	_RCREG
   162  001A                     _RCREG	set	26
   163                           	global	_TMR0
   164  0001                     _TMR0	set	1
   165                           	global	_TXREG
   166  0019                     _TXREG	set	25
   167                           	global	_CARRY
   168  0018                     _CARRY	set	24
   169                           	global	_CHS0
   170  00FB                     _CHS0	set	251
   171                           	global	_CHS1
   172  00FC                     _CHS1	set	252
   173                           	global	_CHS2
   174  00FD                     _CHS2	set	253
   175                           	global	_CREN
   176  00C4                     _CREN	set	196
   177                           	global	_GIE
   178  005F                     _GIE	set	95
   179                           	global	_GO
   180  00FA                     _GO	set	250
   181                           	global	_OERR
   182  00C1                     _OERR	set	193
   183                           	global	_RB0
   184  0030                     _RB0	set	48
   185                           	global	_RB1
   186  0031                     _RB1	set	49
   187                           	global	_RB2
   188  0032                     _RB2	set	50
   189                           	global	_RB3
   190  0033                     _RB3	set	51
   191                           	global	_RB4
   192  0034                     _RB4	set	52
   193                           	global	_RB5
   194  0035                     _RB5	set	53
   195                           	global	_RB6
   196  0036                     _RB6	set	54
   197                           	global	_RCIF
   198  0065                     _RCIF	set	101
   199                           	global	_RE0
   200  0048                     _RE0	set	72
   201                           	global	_RE1
   202  0049                     _RE1	set	73
   203                           	global	_RE2
   204  004A                     _RE2	set	74
   205                           	global	_RX9
   206  00C6                     _RX9	set	198
   207                           	global	_SPEN
   208  00C7                     _SPEN	set	199
   209                           	global	_TMR0IE
   210  005D                     _TMR0IE	set	93
   211                           	global	_TMR0IF
   212  005A                     _TMR0IF	set	90
   213                           	global	_TXIF
   214  0064                     _TXIF	set	100
   215                           	global	_ADCON1
   216  009F                     _ADCON1	set	159
   217                           	global	_ADRESL
   218  009E                     _ADRESL	set	158
   219                           	global	_OPTION_REG
   220  0081                     _OPTION_REG	set	129
   221                           	global	_SPBRG
   222  0099                     _SPBRG	set	153
   223                           	global	_TRISA
   224  0085                     _TRISA	set	133
   225                           	global	_TRISB
   226  0086                     _TRISB	set	134
   227                           	global	_TRISC
   228  0087                     _TRISC	set	135
   229                           	global	_TRISD
   230  0088                     _TRISD	set	136
   231                           	global	_TRISE
   232  0089                     _TRISE	set	137
   233                           	global	_BRGH
   234  04C2                     _BRGH	set	1218
   235                           	global	_RCIE
   236  0465                     _RCIE	set	1125
   237                           	global	_SYNC
   238  04C4                     _SYNC	set	1220
   239                           	global	_TX9
   240  04C6                     _TX9	set	1222
   241                           	global	_TXEN
   242  04C5                     _TXEN	set	1221
   243                           	global	_TXIE
   244  0464                     _TXIE	set	1124
   245                           	global	_EEADR
   246  010D                     _EEADR	set	269
   247                           	global	_EEDATA
   248  010C                     _EEDATA	set	268
   249                           	global	_EECON1
   250  018C                     _EECON1	set	396
   251                           	global	_EECON2
   252  018D                     _EECON2	set	397
   253                           	global	_RD
   254  0C60                     _RD	set	3168
   255                           	global	_WR
   256  0C61                     _WR	set	3169
   257                           	global	_WREN
   258  0C62                     _WREN	set	3170
   259                           	
   260  0710                     STR_1:	
   261  0710  3441               	retlw	65	;'A'
   262  0711  3444               	retlw	68	;'D'
   263  0712  3443               	retlw	67	;'C'
   264  0713  343A               	retlw	58	;':'
   265  0714  3425               	retlw	37	;'%'
   266  0715  3464               	retlw	100	;'d'
   267  0716  3420               	retlw	32	;' '
   268  0717  3444               	retlw	68	;'D'
   269  0718  3469               	retlw	105	;'i'
   270  0719  3473               	retlw	115	;'s'
   271  071A  3474               	retlw	116	;'t'
   272  071B  343A               	retlw	58	;':'
   273  071C  3425               	retlw	37	;'%'
   274  071D  3464               	retlw	100	;'d'
   275  071E  3400               	retlw	0
   276                           psect	strings
   277                           	file	"Assignment3_AldnoahZero.as"
   278                           	line	#
   279                           psect cinit,class=CODE,delta=2
   280                           global start_initialization
   281  071F                     start_initialization:
   282                           
   283                           psect	bitbssBANK0,class=BANK0,bit,space=1
   284                           global __pbitbssBANK0
   285  02C8                     __pbitbssBANK0:
   286  02C8                     _CenterPressed:
   287  02C8                            ds      1
   288                           
   289  02C9                     _CenterReleased:
   290  02C9                            ds      1
   291                           
   292  02CA                     _DownPressed:
   293  02CA                            ds      1
   294                           
   295  02CB                     _DownReleased:
   296  02CB                            ds      1
   297                           
   298  02CC                     _LeftPressed:
   299  02CC                            ds      1
   300                           
   301  02CD                     _LeftReleased:
   302  02CD                            ds      1
   303                           
   304  02CE                     _RTC_FLAG_10MS:
   305  02CE                            ds      1
   306                           
   307  02CF                     _RTC_FLAG_1MS:
   308  02CF                            ds      1
   309                           
   310  02D0                     _RTC_FLAG_250MS:
   311  02D0                            ds      1
   312                           
   313  02D1                     _RTC_FLAG_500MS:
   314  02D1                            ds      1
   315                           
   316  02D2                     _RTC_FLAG_50MS:
   317  02D2                            ds      1
   318                           
   319  02D3                     _RightPressed:
   320  02D3                            ds      1
   321                           
   322  02D4                     _RightReleased:
   323  02D4                            ds      1
   324                           
   325  02D5                     _UpPressed:
   326  02D5                            ds      1
   327                           
   328  02D6                     _UpReleased:
   329  02D6                            ds      1
   330                           
   331                           psect	bssBANK0,class=BANK0,space=1
   332                           global __pbssBANK0
   333  005B                     __pbssBANK0:
   334  005B                     _RTC_Counter:
   335  005B                            ds      2
   336                           
   337  005D                     _CenterDebounceCount:
   338  005D                            ds      1
   339                           
   340  005E                     _DownDebounceCount:
   341  005E                            ds      1
   342                           
   343  005F                     _LeftDebounceCount:
   344  005F                            ds      1
   345                           
   346  0060                     _RightDebounceCount:
   347  0060                            ds      1
   348                           
   349  0061                     _UpDebounceCount:
   350  0061                            ds      1
   351                           
   352  0062                     _buttonPressed:
   353  0062                            ds      1
   354                           
   355  0063                     _current_direction:
   356  0063                            ds      1
   357                           
   358  0064                     _rxiptr:
   359  0064                            ds      1
   360                           
   361  0065                     _rxoptr:
   362  0065                            ds      1
   363                           
   364  0066                     _ser_tmp:
   365  0066                            ds      1
   366                           
   367  0067                     _txiptr:
   368  0067                            ds      1
   369                           
   370  0068                     _txoptr:
   371  0068                            ds      1
   372                           
   373                           psect	dataBANK0,class=BANK0,space=1
   374                           global __pdataBANK0
   375  0069                     __pdataBANK0:
   376                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   377                           	line	21
   378  0069                     _current_step:
   379  0069                            ds      1
   380                           
   381                           psect	bssBANK1,class=BANK1,space=1
   382                           global __pbssBANK1
   383  00A0                     __pbssBANK1:
   384  00A0                     ADCconvert@F1190:
   385  00A0                            ds      16
   386                           
   387  00B0                     _rxfifo:
   388  00B0                            ds      16
   389                           
   390  00C0                     _txfifo:
   391  00C0                            ds      16
   392                           
   393  00D0                     readAvgDistance@F1184:
   394  00D0                            ds      16
   395                           
   396                           psect clrtext,class=CODE,delta=2
   397                           global clear_ram
   398                           ;	Called with FSR containing the base address, and
   399                           ;	W with the last address+1
   400  07E2                     clear_ram:
   401  07E2  0064               	clrwdt			;clear the watchdog before getting into this loop
   402  07E3                     clrloop:
   403  07E3  0180               	clrf	indf		;clear RAM location pointed to by FSR
   404  07E4  0A84               	incf	fsr,f		;increment pointer
   405  07E5  0604               	xorwf	fsr,w		;XOR with final address
   406  07E6  1903               	btfsc	status,2	;have we reached the end yet?
   407  07E7  3400               	retlw	0		;all done for this memory range, return
   408  07E8  0604               	xorwf	fsr,w		;XOR again to restore value
   409  07E9  2FE3               	goto	clrloop		;do the next byte
   410                           
   411                           ; Clear objects allocated to BITBANK0
   412                           psect cinit,class=CODE,delta=2
   413  071F  01D9               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   414  0720  01DA               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   415                           ; Clear objects allocated to BANK0
   416                           psect cinit,class=CODE,delta=2
   417  0721  1383               	bcf	status, 7	;select IRP bank0
   418  0722  305B               	movlw	low(__pbssBANK0)
   419  0723  0084               	movwf	fsr
   420  0724  3069               	movlw	low((__pbssBANK0)+0Eh)
   421  0725  120A  118A  27E2   	fcall	clear_ram
              120A  118A         
   422                           ; Clear objects allocated to BANK1
   423                           psect cinit,class=CODE,delta=2
   424  072A  30A0               	movlw	low(__pbssBANK1)
   425  072B  0084               	movwf	fsr
   426  072C  30E0               	movlw	low((__pbssBANK1)+040h)
   427  072D  120A  118A  27E2   	fcall	clear_ram
              120A  118A         
   428                           ; Initialize objects allocated to BANK0
   429                           	global __pidataBANK0
   430                           psect cinit,class=CODE,delta=2
   431  0732  120A  118A  27EA   	fcall	__pidataBANK0+0		;fetch initializer
              120A  118A         
   432  0737  00E9               	movwf	__pdataBANK0+0&07fh		
   433                           psect cinit,class=CODE,delta=2
   434                           global end_of_initialization
   435                           
   436                           ;End of C runtime variable initialization code
   437                           
   438  0738                     end_of_initialization:
   439  0738  0183               clrf status
   440  0739  120A  118A  2E18   ljmp _main	;jump to C main() function
   441                           psect	cstackBANK1,class=BANK1,space=1
   442                           global __pcstackBANK1
   443  00E0                     __pcstackBANK1:
   444                           	global	??_ser_init
   445  00E0                     ??_ser_init:	; 0 bytes @ 0x0
   446                           	global	??_init_adc
   447  00E0                     ??_init_adc:	; 0 bytes @ 0x0
   448                           	global	??_lcd_write_control
   449  00E0                     ??_lcd_write_control:	; 0 bytes @ 0x0
   450  00E0                     	ds	2
   451                           	global	lcd_write_control@databyte
   452  00E2                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   453  00E2                     	ds	1
   454                           	global	??_lcd_init
   455  00E3                     ??_lcd_init:	; 0 bytes @ 0x3
   456                           	global	??_init
   457  00E3                     ??_init:	; 0 bytes @ 0x3
   458                           	global	??_main
   459  00E3                     ??_main:	; 0 bytes @ 0x3
   460                           psect	cstackCOMMON,class=COMMON,space=1
   461                           global __pcstackCOMMON
   462  0070                     __pcstackCOMMON:
   463                           	global	?_ser_init
   464  0070                     ?_ser_init:	; 0 bytes @ 0x0
   465                           	global	?_init_adc
   466  0070                     ?_init_adc:	; 0 bytes @ 0x0
   467                           	global	?_lcd_write_control
   468  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   469                           	global	?_lcd_write_data
   470  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   471                           	global	??_lcd_write_data
   472  0070                     ??_lcd_write_data:	; 0 bytes @ 0x0
   473                           	global	?_lcd_set_cursor
   474  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   475                           	global	?_lcd_write_string
   476  0070                     ?_lcd_write_string:	; 0 bytes @ 0x0
   477                           	global	?_lcd_init
   478  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   479                           	global	?_isr1
   480  0070                     ?_isr1:	; 0 bytes @ 0x0
   481                           	global	?_init
   482  0070                     ?_init:	; 0 bytes @ 0x0
   483                           	global	?_main
   484  0070                     ?_main:	; 0 bytes @ 0x0
   485                           	global	?_Debounce
   486  0070                     ?_Debounce:	; 0 bytes @ 0x0
   487                           	global	??_Debounce
   488  0070                     ??_Debounce:	; 0 bytes @ 0x0
   489                           	global	?i1_lcd_write_control
   490  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
   491                           	global	??i1_lcd_write_control
   492  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
   493                           	global	?_ReadButtons
   494  0070                     ?_ReadButtons:	; 1 bytes @ 0x0
   495                           	global	?_adc_read_channel
   496  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
   497                           	global	?_adc_read
   498  0070                     ?_adc_read:	; 2 bytes @ 0x0
   499                           	global	?___lwdiv
   500  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   501                           	global	___lwdiv@divisor
   502  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   503  0070                     	ds	1
   504                           	global	??_ReadButtons
   505  0071                     ??_ReadButtons:	; 0 bytes @ 0x1
   506  0071                     	ds	1
   507                           	global	??_adc_read
   508  0072                     ??_adc_read:	; 0 bytes @ 0x2
   509                           	global	lcd_write_data@databyte
   510  0072                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   511                           	global	i1lcd_write_control@databyte
   512  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
   513                           	global	___lwdiv@dividend
   514  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   515  0072                     	ds	1
   516                           	global	??_lcd_set_cursor
   517  0073                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   518                           	global	??_lcd_write_string
   519  0073                     ??_lcd_write_string:	; 0 bytes @ 0x3
   520                           	global	lcd_set_cursor@address
   521  0073                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   522  0073                     	ds	1
   523                           	global	??___lwdiv
   524  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   525                           	global	lcd_write_string@s
   526  0074                     lcd_write_string@s:	; 1 bytes @ 0x4
   527                           	global	adc_read@adc_value
   528  0074                     adc_read@adc_value:	; 2 bytes @ 0x4
   529  0074                     	ds	1
   530                           	global	___lwdiv@quotient
   531  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   532  0075                     	ds	1
   533                           	global	??_adc_read_channel
   534  0076                     ??_adc_read_channel:	; 0 bytes @ 0x6
   535  0076                     	ds	1
   536                           	global	adc_read_channel@channel
   537  0077                     adc_read_channel@channel:	; 1 bytes @ 0x7
   538                           	global	___lwdiv@counter
   539  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   540  0077                     	ds	1
   541                           	global	?_readDistance
   542  0078                     ?_readDistance:	; 2 bytes @ 0x8
   543                           	global	?___lwmod
   544  0078                     ?___lwmod:	; 2 bytes @ 0x8
   545                           	global	___lwmod@divisor
   546  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   547  0078                     	ds	2
   548                           	global	??_readDistance
   549  007A                     ??_readDistance:	; 0 bytes @ 0xA
   550                           	global	___lwmod@dividend
   551  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   552  007A                     	ds	2
   553                           	global	??___lwmod
   554  007C                     ??___lwmod:	; 0 bytes @ 0xC
   555                           	global	readDistance@fullval
   556  007C                     readDistance@fullval:	; 2 bytes @ 0xC
   557  007C                     	ds	1
   558                           	global	___lwmod@counter
   559  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   560  007D                     	ds	1
   561                           psect	cstackBANK0,class=BANK0,space=1
   562                           global __pcstackBANK0
   563  0020                     __pcstackBANK0:
   564                           	global	?_readAvgDistance
   565  0020                     ?_readAvgDistance:	; 2 bytes @ 0x0
   566                           	global	?_sprintf
   567  0020                     ?_sprintf:	; 2 bytes @ 0x0
   568                           	global	sprintf@f
   569  0020                     sprintf@f:	; 1 bytes @ 0x0
   570  0020                     	ds	2
   571                           	global	??_readAvgDistance
   572  0022                     ??_readAvgDistance:	; 0 bytes @ 0x2
   573  0022                     	ds	3
   574                           	global	??_sprintf
   575  0025                     ??_sprintf:	; 0 bytes @ 0x5
   576  0025                     	ds	1
   577                           	global	readAvgDistance@adcOutput
   578  0026                     readAvgDistance@adcOutput:	; 16 bytes @ 0x6
   579  0026                     	ds	2
   580                           	global	sprintf@ap
   581  0028                     sprintf@ap:	; 1 bytes @ 0x8
   582  0028                     	ds	1
   583                           	global	sprintf@flag
   584  0029                     sprintf@flag:	; 1 bytes @ 0x9
   585  0029                     	ds	1
   586                           	global	sprintf@prec
   587  002A                     sprintf@prec:	; 1 bytes @ 0xA
   588  002A                     	ds	1
   589                           	global	sprintf@_val
   590  002B                     sprintf@_val:	; 4 bytes @ 0xB
   591  002B                     	ds	4
   592                           	global	sprintf@sp
   593  002F                     sprintf@sp:	; 1 bytes @ 0xF
   594  002F                     	ds	1
   595                           	global	sprintf@c
   596  0030                     sprintf@c:	; 1 bytes @ 0x10
   597  0030                     	ds	6
   598                           	global	readAvgDistance@averageval
   599  0036                     readAvgDistance@averageval:	; 2 bytes @ 0x16
   600  0036                     	ds	2
   601                           	global	readAvgDistance@fullval
   602  0038                     readAvgDistance@fullval:	; 2 bytes @ 0x18
   603  0038                     	ds	2
   604                           	global	readAvgDistance@i
   605  003A                     readAvgDistance@i:	; 2 bytes @ 0x1A
   606  003A                     	ds	2
   607                           	global	?_ADCconvert
   608  003C                     ?_ADCconvert:	; 0 bytes @ 0x1C
   609                           	global	ADCconvert@adcVal
   610  003C                     ADCconvert@adcVal:	; 2 bytes @ 0x1C
   611  003C                     	ds	2
   612                           	global	??_ADCconvert
   613  003E                     ??_ADCconvert:	; 0 bytes @ 0x1E
   614  003E                     	ds	4
   615                           	global	ADCconvert@adcOutput
   616  0042                     ADCconvert@adcOutput:	; 16 bytes @ 0x22
   617  0042                     	ds	16
   618                           	global	ADCconvert@distance
   619  0052                     ADCconvert@distance:	; 2 bytes @ 0x32
   620  0052                     	ds	2
   621                           	global	??_isr1
   622  0054                     ??_isr1:	; 0 bytes @ 0x34
   623  0054                     	ds	5
   624 ;;Data sizes: Strings 15, constant 10, data 1, bss 78, persistent 0 stack 0
   625 ;;Auto spaces:   Size  Autos    Used
   626 ;; COMMON          14     14      14
   627 ;; BANK0           80     57      74
   628 ;; BANK1           80      3      67
   629 ;; BANK3           96      0       0
   630 ;; BANK2           96      0       0
   631                           
   632 ;;
   633 ;; Pointer list with targets:
   634                           
   635 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
   636 ;;
   637 ;; ?_readAvgDistance	unsigned int  size(1) Largest target is 0
   638 ;;
   639 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   640 ;;
   641 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   642 ;;
   643 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
   644 ;;
   645 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
   646 ;;		 -> STR_1(CODE[15]), 
   647 ;;
   648 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
   649 ;;		 -> ADCconvert@adcOutput(BANK0[16]), 
   650 ;;
   651 ;; ?_sprintf	int  size(1) Largest target is 0
   652 ;;
   653 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   654 ;;		 -> ?_sprintf(BANK0[2]), 
   655 ;;
   656 ;; S6328$_cp	PTR const unsigned char  size(1) Largest target is 0
   657 ;;
   658 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   659 ;;
   660 ;; lcd_write_string@s	PTR unsigned char  size(1) Largest target is 16
   661 ;;		 -> ADCconvert@adcOutput(BANK0[16]), 
   662 ;;
   663                           
   664                           
   665 ;;
   666 ;; Critical Paths under _main in COMMON
   667 ;;
   668 ;;   None.
   669 ;;
   670 ;; Critical Paths under _isr1 in COMMON
   671 ;;
   672 ;;   _isr1->___lwmod
   673 ;;   _ADCconvert->___lwmod
   674 ;;   _readAvgDistance->_readDistance
   675 ;;   _readDistance->_adc_read_channel
   676 ;;   _lcd_write_string->_lcd_write_data
   677 ;;   _lcd_set_cursor->i1_lcd_write_control
   678 ;;   _sprintf->___lwmod
   679 ;;   _ReadButtons->_Debounce
   680 ;;   _adc_read_channel->_adc_read
   681 ;;   ___lwmod->___lwdiv
   682 ;;
   683 ;; Critical Paths under _main in BANK0
   684 ;;
   685 ;;   None.
   686 ;;
   687 ;; Critical Paths under _isr1 in BANK0
   688 ;;
   689 ;;   _isr1->_ADCconvert
   690 ;;   _ADCconvert->_readAvgDistance
   691 ;;
   692 ;; Critical Paths under _main in BANK1
   693 ;;
   694 ;;   _lcd_init->_lcd_write_control
   695 ;;
   696 ;; Critical Paths under _isr1 in BANK1
   697 ;;
   698 ;;   None.
   699 ;;
   700 ;; Critical Paths under _main in BANK3
   701 ;;
   702 ;;   None.
   703 ;;
   704 ;; Critical Paths under _isr1 in BANK3
   705 ;;
   706 ;;   None.
   707 ;;
   708 ;; Critical Paths under _main in BANK2
   709 ;;
   710 ;;   None.
   711 ;;
   712 ;; Critical Paths under _isr1 in BANK2
   713 ;;
   714 ;;   None.
   715                           
   716 ;;
   717 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   718 ;;
   719                           
   720 ;;
   721 ;;Call Graph Tables:
   722 ;;
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (0) _main                                                 0     0      0      22
   727 ;;                               _init
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (1) _init                                                 0     0      0      22
   730 ;;                           _init_adc
   731 ;;                           _lcd_init
   732 ;;                           _ser_init
   733 ;; ---------------------------------------------------------------------------------
   734 ;; (2) _lcd_init                                             0     0      0      22
   735 ;;                  _lcd_write_control
   736 ;; ---------------------------------------------------------------------------------
   737 ;; (3) _lcd_write_control                                    3     3      0      22
   738 ;;                                              0 BANK1      3     3      0
   739 ;; ---------------------------------------------------------------------------------
   740 ;; (2) _init_adc                                             1     1      0       0
   741 ;;                                              0 BANK1      1     1      0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (2) _ser_init                                             1     1      0       0
   744 ;;                                              0 BANK1      1     1      0
   745 ;; ---------------------------------------------------------------------------------
   746 ;; Estimated maximum stack depth 3
   747 ;; ---------------------------------------------------------------------------------
   748 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (4) _isr1                                                 5     5      0    2581
   751 ;;                                             52 BANK0      5     5      0
   752 ;;                            ___lwmod
   753 ;;                    _readAvgDistance
   754 ;;                         _ADCconvert
   755 ;;                        _ReadButtons
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (5) _ADCconvert                                          24    22      2    2097
   758 ;;                                             28 BANK0     24    22      2
   759 ;;                            ___lwmod
   760 ;;                i1_lcd_write_control
   761 ;;                            _sprintf
   762 ;;                     _lcd_set_cursor
   763 ;;                   _lcd_write_string
   764 ;;                    _readAvgDistance (ARG)
   765 ;; ---------------------------------------------------------------------------------
   766 ;; (5) _readAvgDistance                                     28    26      2     325
   767 ;;                                              0 BANK0     28    26      2
   768 ;;                       _readDistance
   769 ;;                            ___lwdiv
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (6) _readDistance                                         6     4      2      69
   772 ;;                                              8 COMMON     6     4      2
   773 ;;                   _adc_read_channel
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (6) _lcd_write_string                                     2     2      0      67
   776 ;;                                              3 COMMON     2     2      0
   777 ;;                     _lcd_write_data
   778 ;; ---------------------------------------------------------------------------------
   779 ;; (6) _lcd_set_cursor                                       1     1      0      96
   780 ;;                                              3 COMMON     1     1      0
   781 ;;                i1_lcd_write_control
   782 ;; ---------------------------------------------------------------------------------
   783 ;; (7) i1_lcd_write_control                                  3     3      0      73
   784 ;;                                              0 COMMON     3     3      0
   785 ;; ---------------------------------------------------------------------------------
   786 ;; (6) _sprintf                                             17    12      5     798
   787 ;;                                              0 BANK0     17    12      5
   788 ;;                            ___lwdiv
   789 ;;                            ___lwmod
   790 ;; ---------------------------------------------------------------------------------
   791 ;; (5) _ReadButtons                                          0     0      0       0
   792 ;;                           _Debounce
   793 ;; ---------------------------------------------------------------------------------
   794 ;; (7) _lcd_write_data                                       3     3      0      22
   795 ;;                                              0 COMMON     3     3      0
   796 ;; ---------------------------------------------------------------------------------
   797 ;; (7) _adc_read_channel                                     2     2      0      46
   798 ;;                                              6 COMMON     2     2      0
   799 ;;                           _adc_read
   800 ;; ---------------------------------------------------------------------------------
   801 ;; (7) ___lwmod                                              6     2      4     159
   802 ;;                                              8 COMMON     6     2      4
   803 ;;                            ___lwdiv (ARG)
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (7) ___lwdiv                                              8     4      4     162
   806 ;;                                              0 COMMON     8     4      4
   807 ;; ---------------------------------------------------------------------------------
   808 ;; (6) _Debounce                                             1     1      0       0
   809 ;;                                              0 COMMON     1     1      0
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (8) _adc_read                                             6     4      2      24
   812 ;;                                              0 COMMON     6     4      2
   813 ;; ---------------------------------------------------------------------------------
   814 ;; Estimated maximum stack depth 8
   815 ;; ---------------------------------------------------------------------------------
   816                           
   817 ;; Call Graph Graphs:
   818                           
   819 ;; _main (ROOT)
   820 ;;   _init
   821 ;;     _init_adc
   822 ;;     _lcd_init
   823 ;;       _lcd_write_control
   824 ;;     _ser_init
   825 ;;
   826 ;; _isr1 (ROOT)
   827 ;;   ___lwmod
   828 ;;     ___lwdiv (ARG)
   829 ;;   _readAvgDistance
   830 ;;     _readDistance
   831 ;;       _adc_read_channel
   832 ;;         _adc_read
   833 ;;     ___lwdiv
   834 ;;   _ADCconvert
   835 ;;     ___lwmod
   836 ;;       ___lwdiv (ARG)
   837 ;;     i1_lcd_write_control
   838 ;;     _sprintf
   839 ;;       ___lwdiv
   840 ;;       ___lwmod
   841 ;;         ___lwdiv (ARG)
   842 ;;     _lcd_set_cursor
   843 ;;       i1_lcd_write_control
   844 ;;     _lcd_write_string
   845 ;;       _lcd_write_data
   846 ;;     _readAvgDistance (ARG)
   847 ;;       _readDistance
   848 ;;         _adc_read_channel
   849 ;;           _adc_read
   850 ;;       ___lwdiv
   851 ;;   _ReadButtons
   852 ;;     _Debounce
   853 ;;
   854                           
   855 ;; Address spaces:
   856                           
   857 ;;Name               Size   Autos  Total    Cost      Usage
   858 ;;BANK3               60      0       0       9        0.0%
   859 ;;BITBANK3            60      0       0       8        0.0%
   860 ;;SFR3                 0      0       0       4        0.0%
   861 ;;BITSFR3              0      0       0       4        0.0%
   862 ;;BANK2               60      0       0      11        0.0%
   863 ;;BITBANK2            60      0       0      10        0.0%
   864 ;;SFR2                 0      0       0       5        0.0%
   865 ;;BITSFR2              0      0       0       5        0.0%
   866 ;;SFR1                 0      0       0       2        0.0%
   867 ;;BITSFR1              0      0       0       2        0.0%
   868 ;;BANK1               50      3      43       7       83.8%
   869 ;;BITBANK1            50      0       0       6        0.0%
   870 ;;CODE                 0      0       0       0        0.0%
   871 ;;DATA                 0      0      A8      12        0.0%
   872 ;;ABS                  0      0      9B       3        0.0%
   873 ;;NULL                 0      0       0       0        0.0%
   874 ;;STACK                0      0       D       2        0.0%
   875 ;;BANK0               50     39      4A       5       92.5%
   876 ;;BITBANK0            50      0       2       4        2.5%
   877 ;;SFR0                 0      0       0       1        0.0%
   878 ;;BITSFR0              0      0       0       1        0.0%
   879 ;;COMMON               E      E       E       1      100.0%
   880 ;;BITCOMMON            E      0       0       0        0.0%
   881 ;;EEDATA             100      0       0       0        0.0%
   882                           
   883                           	global	_main
   884                           psect	maintext,global,class=CODE,delta=2
   885                           global __pmaintext
   886  0618                     __pmaintext:
   887                           
   888 ;; *************** function _main *****************
   889 ;; Defined at:
   890 ;;		line 137 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;		None               void
   897 ;; Registers used:
   898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 17F/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels required when called:    8
   910 ;; This function calls:
   911 ;;		_init
   912 ;; This function is called by:
   913 ;;		Startup code after reset
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           psect	maintext
   917                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
   918                           	line	137
   919                           	global	__size_of_main
   920  0037                     	__size_of_main	equ	__end_of_main-_main
   921                           	
   922  0618                     _main:	
   923                           	opt	stack 0
   924                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   925                           	line	142
   926                           	
   927  0618                     l8640:	
   928                           ;Main.c: 142: init();
   929  0618  120A  118A  2772   	fcall	_init
              120A  118A         
   930  061D  2E37               	goto	l8664
   931                           	line	148
   932                           ;Main.c: 148: while(1)
   933                           	
   934  061E                     l2165:	
   935                           	line	151
   936                           ;Main.c: 149: {
   937                           ;Main.c: 151: switch (buttonPressed)
   938  061E  2E37               	goto	l8664
   939                           	line	153
   940                           ;Main.c: 152: {
   941                           ;Main.c: 153: case 1:
   942                           	
   943  061F                     l2167:	
   944                           	line	154
   945                           	
   946  061F                     l8642:	
   947                           ;Main.c: 154: RB1 ^= 0x01;
   948  061F  1283               	bcf	status, 5	;RP0=0, select bank0
   949  0620  1303               	bcf	status, 6	;RP1=0, select bank0
   950  0621  3002               	movlw	1<<((49)&7)
   951  0622  0686               	xorwf	((49)/8),f
   952                           	line	155
   953                           	
   954  0623                     l8644:	
   955                           ;Main.c: 155: buttonPressed = 0;
   956  0623  01E2               	clrf	(_buttonPressed)	;volatile
   957                           	line	156
   958                           ;Main.c: 156: break;
   959  0624  2E37               	goto	l8664
   960                           	line	157
   961                           ;Main.c: 157: case 2:
   962                           	
   963  0625                     l2169:	
   964                           	line	158
   965                           	
   966  0625                     l8646:	
   967                           ;Main.c: 158: RB1 ^= 0x01;
   968  0625  3002               	movlw	1<<((49)&7)
   969  0626  0686               	xorwf	((49)/8),f
   970                           	line	159
   971                           	
   972  0627                     l8648:	
   973                           ;Main.c: 159: buttonPressed = 0;
   974  0627  01E2               	clrf	(_buttonPressed)	;volatile
   975                           	line	160
   976                           ;Main.c: 160: break;
   977  0628  2E37               	goto	l8664
   978                           	line	161
   979                           ;Main.c: 161: case 3:
   980                           	
   981  0629                     l2170:	
   982                           	line	162
   983                           	
   984  0629                     l8650:	
   985                           ;Main.c: 162: RB1 ^= 0x01;
   986  0629  3002               	movlw	1<<((49)&7)
   987  062A  0686               	xorwf	((49)/8),f
   988                           	line	163
   989                           	
   990  062B                     l8652:	
   991                           ;Main.c: 163: buttonPressed = 0;
   992  062B  01E2               	clrf	(_buttonPressed)	;volatile
   993                           	line	164
   994                           ;Main.c: 164: break;
   995  062C  2E37               	goto	l8664
   996                           	line	165
   997                           ;Main.c: 165: case 4:
   998                           	
   999  062D                     l2171:	
  1000                           	line	166
  1001                           	
  1002  062D                     l8654:	
  1003                           ;Main.c: 166: RB1 ^= 0x01;
  1004  062D  3002               	movlw	1<<((49)&7)
  1005  062E  0686               	xorwf	((49)/8),f
  1006                           	line	167
  1007                           	
  1008  062F                     l8656:	
  1009                           ;Main.c: 167: buttonPressed = 0;
  1010  062F  01E2               	clrf	(_buttonPressed)	;volatile
  1011                           	line	168
  1012                           ;Main.c: 168: break;
  1013  0630  2E37               	goto	l8664
  1014                           	line	169
  1015                           ;Main.c: 169: case 5:
  1016                           	
  1017  0631                     l2172:	
  1018                           	line	170
  1019                           	
  1020  0631                     l8658:	
  1021                           ;Main.c: 170: RB1 ^= 0x01;
  1022  0631  3002               	movlw	1<<((49)&7)
  1023  0632  0686               	xorwf	((49)/8),f
  1024                           	line	171
  1025                           	
  1026  0633                     l8660:	
  1027                           ;Main.c: 171: buttonPressed = 0;
  1028  0633  01E2               	clrf	(_buttonPressed)	;volatile
  1029                           	line	172
  1030                           ;Main.c: 172: break;
  1031  0634  2E37               	goto	l8664
  1032                           	line	173
  1033                           ;Main.c: 173: default:
  1034                           	
  1035  0635                     l2173:	
  1036                           	line	175
  1037                           ;Main.c: 175: break;
  1038  0635  2E37               	goto	l8664
  1039                           	line	176
  1040                           	
  1041  0636                     l8662:	
  1042                           ;Main.c: 176: }
  1043  0636  2E37               	goto	l8664
  1044                           	line	151
  1045                           	
  1046  0637                     l2166:	
  1047                           	
  1048  0637                     l8664:	
  1049  0637  1283               	bcf	status, 5	;RP0=0, select bank0
  1050  0638  1303               	bcf	status, 6	;RP1=0, select bank0
  1051  0639  0862               	movf	(_buttonPressed),w	;volatile
  1052                           	; Switch size 1, requested type "space"
  1053                           ; Number of cases is 5, Range of values is 1 to 5
  1054                           ; switch strategies available:
  1055                           ; Name         Instructions Cycles
  1056                           ; simple_byte           16     9 (average)
  1057                           ; direct_byte           26    11 (fixed)
  1058                           ; jumptable            263     9 (fixed)
  1059                           ;	Chosen strategy is simple_byte
  1060                           
  1061                           	opt asmopt_off
  1062  063A  3A01               	xorlw	1^0	; case 1
  1063  063B  1903               	skipnz
  1064  063C  2E1F               	goto	l8642
  1065  063D  3A03               	xorlw	2^1	; case 2
  1066  063E  1903               	skipnz
  1067  063F  2E25               	goto	l8646
  1068  0640  3A01               	xorlw	3^2	; case 3
  1069  0641  1903               	skipnz
  1070  0642  2E29               	goto	l8650
  1071  0643  3A07               	xorlw	4^3	; case 4
  1072  0644  1903               	skipnz
  1073  0645  2E2D               	goto	l8654
  1074  0646  3A01               	xorlw	5^4	; case 5
  1075  0647  1903               	skipnz
  1076  0648  2E31               	goto	l8658
  1077  0649  2E37               	goto	l8664
  1078                           	opt asmopt_on
  1079                           
  1080                           	line	176
  1081                           	
  1082  064A                     l2168:	
  1083  064A  2E37               	goto	l8664
  1084                           	line	241
  1085                           	
  1086  064B                     l2174:	
  1087                           	line	148
  1088  064B  2E37               	goto	l8664
  1089                           	
  1090  064C                     l2175:	
  1091                           	line	242
  1092                           	
  1093  064C                     l2176:	
  1094                           	global	start
  1095  064C  120A  118A  2812   	ljmp	start
  1096                           	opt stack 0
  1097                           GLOBAL	__end_of_main
  1098  064F                     	__end_of_main:
  1099 ;; =============== function _main ends ============
  1100                           
  1101                           	signat	_main,88
  1102                           	global	_init
  1103                           psect	text532,local,class=CODE,delta=2
  1104                           global __ptext532
  1105  0772                     __ptext532:
  1106                           
  1107 ;; *************** function _init *****************
  1108 ;; Defined at:
  1109 ;;		line 108 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;		None               void
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    7
  1130 ;; This function calls:
  1131 ;;		_init_adc
  1132 ;;		_lcd_init
  1133 ;;		_ser_init
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           psect	text532
  1139                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1140                           	line	108
  1141                           	global	__size_of_init
  1142  0018                     	__size_of_init	equ	__end_of_init-_init
  1143                           	
  1144  0772                     _init:	
  1145                           	opt	stack 0
  1146                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1147                           	line	109
  1148                           	
  1149  0772                     l8630:	
  1150                           ;Main.c: 109: init_adc();
  1151  0772  120A  118A  278A   	fcall	_init_adc
              120A  118A         
  1152                           	line	110
  1153                           ;Main.c: 110: lcd_init();
  1154  0777  120A  118A  2681   	fcall	_lcd_init
              120A  118A         
  1155                           	line	111
  1156                           ;Main.c: 111: ser_init();
  1157  077C  120A  118A  26AC   	fcall	_ser_init
              120A  118A         
  1158                           	line	113
  1159                           	
  1160  0781                     l8632:	
  1161                           ;Main.c: 113: TRISB = 0b11111100;
  1162  0781  30FC               	movlw	(0FCh)
  1163  0782  1683               	bsf	status, 5	;RP0=1, select bank1
  1164  0783  1303               	bcf	status, 6	;RP1=0, select bank1
  1165  0784  0086               	movwf	(134)^080h	;volatile
  1166                           	line	119
  1167                           	
  1168  0785                     l8634:	
  1169                           ;Main.c: 119: OPTION_REG = 0b00000100;
  1170  0785  3004               	movlw	(04h)
  1171  0786  0081               	movwf	(129)^080h	;volatile
  1172                           	line	122
  1173                           	
  1174  0787                     l8636:	
  1175                           ;Main.c: 122: TMR0IE = 1;
  1176  0787  168B               	bsf	(93/8),(93)&7
  1177                           	line	125
  1178                           	
  1179  0788                     l8638:	
  1180                           ;Main.c: 125: (GIE = 1);
  1181  0788  178B               	bsf	(95/8),(95)&7
  1182                           	line	126
  1183                           	
  1184  0789                     l2162:	
  1185  0789  0008               	return
  1186                           	opt stack 0
  1187                           GLOBAL	__end_of_init
  1188  078A                     	__end_of_init:
  1189 ;; =============== function _init ends ============
  1190                           
  1191                           	signat	_init,88
  1192                           	global	_lcd_init
  1193                           psect	text533,local,class=CODE,delta=2
  1194                           global __ptext533
  1195  0681                     __ptext533:
  1196                           
  1197 ;; *************** function _lcd_init *****************
  1198 ;; Defined at:
  1199 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;		None               void
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    6
  1220 ;; This function calls:
  1221 ;;		_lcd_write_control
  1222 ;; This function is called by:
  1223 ;;		_init
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           psect	text533
  1227                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  1228                           	line	101
  1229                           	global	__size_of_lcd_init
  1230  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1231                           	
  1232  0681                     _lcd_init:	
  1233                           	opt	stack 0
  1234                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1235                           	line	105
  1236                           	
  1237  0681                     l8610:	
  1238                           ;lcd.c: 105: ADCON1 = 0b00000010;
  1239  0681  3002               	movlw	(02h)
  1240  0682  1683               	bsf	status, 5	;RP0=1, select bank1
  1241  0683  1303               	bcf	status, 6	;RP1=0, select bank1
  1242  0684  009F               	movwf	(159)^080h	;volatile
  1243                           	line	108
  1244                           	
  1245  0685                     l8612:	
  1246                           ;lcd.c: 108: PORTD = 0;
  1247  0685  1283               	bcf	status, 5	;RP0=0, select bank0
  1248  0686  1303               	bcf	status, 6	;RP1=0, select bank0
  1249  0687  0188               	clrf	(8)	;volatile
  1250                           	line	109
  1251                           	
  1252  0688                     l8614:	
  1253                           ;lcd.c: 109: PORTE = 0;
  1254  0688  0189               	clrf	(9)	;volatile
  1255                           	line	111
  1256                           	
  1257  0689                     l8616:	
  1258                           ;lcd.c: 111: TRISD = 0b00000000;
  1259  0689  1683               	bsf	status, 5	;RP0=1, select bank1
  1260  068A  1303               	bcf	status, 6	;RP1=0, select bank1
  1261  068B  0188               	clrf	(136)^080h	;volatile
  1262                           	line	112
  1263                           	
  1264  068C                     l8618:	
  1265                           ;lcd.c: 112: TRISE = 0b00000000;
  1266  068C  0189               	clrf	(137)^080h	;volatile
  1267                           	line	115
  1268                           	
  1269  068D                     l8620:	
  1270                           ;lcd.c: 115: lcd_write_control(0b00000001);
  1271  068D  3001               	movlw	(01h)
  1272  068E  120A  118A  273C   	fcall	_lcd_write_control
              120A  118A         
  1273                           	line	116
  1274                           	
  1275  0693                     l8622:	
  1276                           ;lcd.c: 116: lcd_write_control(0b00111000);
  1277  0693  3038               	movlw	(038h)
  1278  0694  120A  118A  273C   	fcall	_lcd_write_control
              120A  118A         
  1279                           	line	117
  1280                           	
  1281  0699                     l8624:	
  1282                           ;lcd.c: 117: lcd_write_control(0b00001100);
  1283  0699  300C               	movlw	(0Ch)
  1284  069A  120A  118A  273C   	fcall	_lcd_write_control
              120A  118A         
  1285                           	line	118
  1286                           	
  1287  069F                     l8626:	
  1288                           ;lcd.c: 118: lcd_write_control(0b00000110);
  1289  069F  3006               	movlw	(06h)
  1290  06A0  120A  118A  273C   	fcall	_lcd_write_control
              120A  118A         
  1291                           	line	119
  1292                           	
  1293  06A5                     l8628:	
  1294                           ;lcd.c: 119: lcd_write_control(0b00000010);
  1295  06A5  3002               	movlw	(02h)
  1296  06A6  120A  118A  273C   	fcall	_lcd_write_control
              120A  118A         
  1297                           	line	121
  1298                           	
  1299  06AB                     l1423:	
  1300  06AB  0008               	return
  1301                           	opt stack 0
  1302                           GLOBAL	__end_of_lcd_init
  1303  06AC                     	__end_of_lcd_init:
  1304 ;; =============== function _lcd_init ends ============
  1305                           
  1306                           	signat	_lcd_init,88
  1307                           	global	_lcd_write_control
  1308                           psect	text534,local,class=CODE,delta=2
  1309                           global __ptext534
  1310  073C                     __ptext534:
  1311                           
  1312 ;; *************** function _lcd_write_control *****************
  1313 ;; Defined at:
  1314 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  databyte        1    wreg     unsigned char 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  databyte        1    2[BANK1 ] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;		None               void
  1321 ;; Registers used:
  1322 ;;		wreg
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         0       0       0       0       0
  1329 ;;      Locals:         0       0       1       0       0
  1330 ;;      Temps:          0       0       2       0       0
  1331 ;;      Totals:         0       0       3       0       0
  1332 ;;Total ram usage:        3 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    5
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_lcd_init
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           psect	text534
  1342                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  1343                           	line	18
  1344                           	global	__size_of_lcd_write_control
  1345  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  1346                           	
  1347  073C                     _lcd_write_control:	
  1348                           	opt	stack 0
  1349                           ; Regs used in _lcd_write_control: [wreg]
  1350                           ;lcd_write_control@databyte stored from wreg
  1351  073C  1683               	bsf	status, 5	;RP0=1, select bank1
  1352  073D  1303               	bcf	status, 6	;RP1=0, select bank1
  1353  073E  00E2               	movwf	(lcd_write_control@databyte)^080h
  1354                           	line	19
  1355                           	
  1356  073F                     l8602:	
  1357                           ;lcd.c: 19: RE2 = 0;
  1358  073F  1283               	bcf	status, 5	;RP0=0, select bank0
  1359  0740  1303               	bcf	status, 6	;RP1=0, select bank0
  1360  0741  1109               	bcf	(74/8),(74)&7
  1361                           	line	20
  1362                           ;lcd.c: 20: RE1 = 0;
  1363  0742  1089               	bcf	(73/8),(73)&7
  1364                           	line	21
  1365                           ;lcd.c: 21: RE0 = 0;
  1366  0743  1009               	bcf	(72/8),(72)&7
  1367                           	line	22
  1368                           	
  1369  0744                     l8604:	
  1370                           ;lcd.c: 22: PORTD = databyte;
  1371  0744  1683               	bsf	status, 5	;RP0=1, select bank1
  1372  0745  1303               	bcf	status, 6	;RP1=0, select bank1
  1373  0746  0862               	movf	(lcd_write_control@databyte)^080h,w
  1374  0747  1283               	bcf	status, 5	;RP0=0, select bank0
  1375  0748  1303               	bcf	status, 6	;RP1=0, select bank0
  1376  0749  0088               	movwf	(8)	;volatile
  1377                           	line	23
  1378                           	
  1379  074A                     l8606:	
  1380                           ;lcd.c: 23: RE2 = 1;
  1381  074A  1509               	bsf	(74/8),(74)&7
  1382                           	line	24
  1383                           	
  1384  074B                     l8608:	
  1385                           ;lcd.c: 24: RE2 = 0;
  1386  074B  1109               	bcf	(74/8),(74)&7
  1387                           	line	25
  1388                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  1389                           	opt asmopt_off
  1390  074C  300D               movlw	13
  1391  074D  1683               	bsf	status, 5	;RP0=1, select bank1
  1392  074E  1303               	bcf	status, 6	;RP1=0, select bank1
  1393  074F  00E1               movwf	((??_lcd_write_control+0)^080h+0+1),f
  1394  0750  30FB               	movlw	251
  1395  0751  00E0               movwf	((??_lcd_write_control+0)^080h+0),f
  1396  0752                     u4057:
  1397  0752  0BE0               	decfsz	((??_lcd_write_control+0)^080h+0),f
  1398  0753  2F52               	goto	u4057
  1399  0754  0BE1               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  1400  0755  2F52               	goto	u4057
  1401  0756  2F57               	nop2
  1402                           opt asmopt_on
  1403                           
  1404                           	line	26
  1405                           	
  1406  0757                     l1393:	
  1407  0757  0008               	return
  1408                           	opt stack 0
  1409                           GLOBAL	__end_of_lcd_write_control
  1410  0758                     	__end_of_lcd_write_control:
  1411 ;; =============== function _lcd_write_control ends ============
  1412                           
  1413                           	signat	_lcd_write_control,4216
  1414                           	global	_init_adc
  1415                           psect	text535,local,class=CODE,delta=2
  1416                           global __ptext535
  1417  078A                     __ptext535:
  1418                           
  1419 ;; *************** function _init_adc *****************
  1420 ;; Defined at:
  1421 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;		None               void
  1428 ;; Registers used:
  1429 ;;		wreg, status,2
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0
  1437 ;;      Temps:          0       0       1       0       0
  1438 ;;      Totals:         0       0       1       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    5
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_init
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           psect	text535
  1449                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  1450                           	line	46
  1451                           	global	__size_of_init_adc
  1452  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  1453                           	
  1454  078A                     _init_adc:	
  1455                           	opt	stack 1
  1456                           ; Regs used in _init_adc: [wreg+status,2]
  1457                           	line	48
  1458                           	
  1459  078A                     l8592:	
  1460                           ;adc.c: 48: PORTA = 0;
  1461  078A  1283               	bcf	status, 5	;RP0=0, select bank0
  1462  078B  1303               	bcf	status, 6	;RP1=0, select bank0
  1463  078C  0185               	clrf	(5)	;volatile
  1464                           	line	49
  1465                           	
  1466  078D                     l8594:	
  1467                           ;adc.c: 49: TRISA = 0b00111111;
  1468  078D  303F               	movlw	(03Fh)
  1469  078E  1683               	bsf	status, 5	;RP0=1, select bank1
  1470  078F  1303               	bcf	status, 6	;RP1=0, select bank1
  1471  0790  0085               	movwf	(133)^080h	;volatile
  1472                           	line	52
  1473                           	
  1474  0791                     l8596:	
  1475                           ;adc.c: 52: ADCON0 = 0b10100001;
  1476  0791  30A1               	movlw	(0A1h)
  1477  0792  1283               	bcf	status, 5	;RP0=0, select bank0
  1478  0793  1303               	bcf	status, 6	;RP1=0, select bank0
  1479  0794  009F               	movwf	(31)	;volatile
  1480                           	line	53
  1481                           	
  1482  0795                     l8598:	
  1483                           ;adc.c: 53: ADCON1 = 0b0000010;
  1484  0795  3002               	movlw	(02h)
  1485  0796  1683               	bsf	status, 5	;RP0=1, select bank1
  1486  0797  1303               	bcf	status, 6	;RP1=0, select bank1
  1487  0798  009F               	movwf	(159)^080h	;volatile
  1488                           	line	55
  1489                           	
  1490  0799                     l8600:	
  1491                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  1492                           	opt asmopt_off
  1493  0799  3053               movlw	83
  1494  079A  00E0               movwf	(??_init_adc+0)^080h+0,f
  1495  079B                     u4067:
  1496  079B  0BE0               decfsz	(??_init_adc+0)^080h+0,f
  1497  079C  2F9B               	goto	u4067
  1498                           opt asmopt_on
  1499                           
  1500                           	line	57
  1501                           	
  1502  079D                     l700:	
  1503  079D  0008               	return
  1504                           	opt stack 0
  1505                           GLOBAL	__end_of_init_adc
  1506  079E                     	__end_of_init_adc:
  1507 ;; =============== function _init_adc ends ============
  1508                           
  1509                           	signat	_init_adc,88
  1510                           	global	_ser_init
  1511                           psect	text536,local,class=CODE,delta=2
  1512                           global __ptext536
  1513  06AC                     __ptext536:
  1514                           
  1515 ;; *************** function _ser_init *****************
  1516 ;; Defined at:
  1517 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;		None               void
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0
  1533 ;;      Temps:          0       0       1       0       0
  1534 ;;      Totals:         0       0       1       0       0
  1535 ;;Total ram usage:        1 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    5
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_init
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           psect	text536
  1545                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  1546                           	line	113
  1547                           	global	__size_of_ser_init
  1548  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  1549                           	
  1550  06AC                     _ser_init:	
  1551                           	opt	stack 1
  1552                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  1553                           	line	114
  1554                           	
  1555  06AC                     l8268:	
  1556                           ;ser.c: 114: TRISC |= 0b10000000;
  1557  06AC  1683               	bsf	status, 5	;RP0=1, select bank1
  1558  06AD  1303               	bcf	status, 6	;RP1=0, select bank1
  1559  06AE  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  1560                           	line	115
  1561                           	
  1562  06AF                     l8270:	
  1563                           ;ser.c: 115: TRISC &= 0b10111111;
  1564  06AF  30BF               	movlw	(0BFh)
  1565  06B0  00E0               	movwf	(??_ser_init+0)^080h+0
  1566  06B1  0860               	movf	(??_ser_init+0)^080h+0,w
  1567  06B2  0587               	andwf	(135)^080h,f	;volatile
  1568                           	line	116
  1569                           	
  1570  06B3                     l8272:	
  1571                           ;ser.c: 116: BRGH=1;
  1572  06B3  1518               	bsf	(1218/8)^080h,(1218)&7
  1573                           	line	118
  1574                           	
  1575  06B4                     l8274:	
  1576                           ;ser.c: 118: SPBRG=20;
  1577  06B4  3014               	movlw	(014h)
  1578  06B5  0099               	movwf	(153)^080h	;volatile
  1579                           	line	121
  1580                           	
  1581  06B6                     l8276:	
  1582                           ;ser.c: 121: TX9=0;
  1583  06B6  1318               	bcf	(1222/8)^080h,(1222)&7
  1584                           	line	122
  1585                           	
  1586  06B7                     l8278:	
  1587                           ;ser.c: 122: RX9=0;
  1588  06B7  1283               	bcf	status, 5	;RP0=0, select bank0
  1589  06B8  1303               	bcf	status, 6	;RP1=0, select bank0
  1590  06B9  1318               	bcf	(198/8),(198)&7
  1591                           	line	124
  1592                           	
  1593  06BA                     l8280:	
  1594                           ;ser.c: 124: SYNC=0;
  1595  06BA  1683               	bsf	status, 5	;RP0=1, select bank1
  1596  06BB  1303               	bcf	status, 6	;RP1=0, select bank1
  1597  06BC  1218               	bcf	(1220/8)^080h,(1220)&7
  1598                           	line	125
  1599                           	
  1600  06BD                     l8282:	
  1601                           ;ser.c: 125: SPEN=1;
  1602  06BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1603  06BE  1303               	bcf	status, 6	;RP1=0, select bank0
  1604  06BF  1798               	bsf	(199/8),(199)&7
  1605                           	line	126
  1606                           	
  1607  06C0                     l8284:	
  1608                           ;ser.c: 126: CREN=1;
  1609  06C0  1618               	bsf	(196/8),(196)&7
  1610                           	line	127
  1611                           	
  1612  06C1                     l8286:	
  1613                           ;ser.c: 127: TXIE=0;
  1614  06C1  1683               	bsf	status, 5	;RP0=1, select bank1
  1615  06C2  1303               	bcf	status, 6	;RP1=0, select bank1
  1616  06C3  120C               	bcf	(1124/8)^080h,(1124)&7
  1617                           	line	128
  1618                           	
  1619  06C4                     l8288:	
  1620                           ;ser.c: 128: RCIE=1;
  1621  06C4  168C               	bsf	(1125/8)^080h,(1125)&7
  1622                           	line	129
  1623                           	
  1624  06C5                     l8290:	
  1625                           ;ser.c: 129: TXEN=1;
  1626  06C5  1698               	bsf	(1221/8)^080h,(1221)&7
  1627                           	line	132
  1628                           	
  1629  06C6                     l8292:	
  1630                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  1631  06C6  3000               	movlw	(0)
  1632  06C7  1283               	bcf	status, 5	;RP0=0, select bank0
  1633  06C8  1303               	bcf	status, 6	;RP1=0, select bank0
  1634  06C9  00E8               	movwf	(_txoptr)	;volatile
  1635  06CA  00E7               	movwf	(_txiptr)	;volatile
  1636  06CB  00E5               	movwf	(_rxoptr)	;volatile
  1637  06CC  1683               	bsf	status, 5	;RP0=1, select bank1
  1638  06CD  1303               	bcf	status, 6	;RP1=0, select bank1
  1639  06CE  00E0               	movwf	(??_ser_init+0)^080h+0
  1640  06CF  0860               	movf	(??_ser_init+0)^080h+0,w
  1641  06D0  1283               	bcf	status, 5	;RP0=0, select bank0
  1642  06D1  1303               	bcf	status, 6	;RP1=0, select bank0
  1643  06D2  00E4               	movwf	(_rxiptr)	;volatile
  1644                           	line	133
  1645                           	
  1646  06D3                     l4361:	
  1647  06D3  0008               	return
  1648                           	opt stack 0
  1649                           GLOBAL	__end_of_ser_init
  1650  06D4                     	__end_of_ser_init:
  1651 ;; =============== function _ser_init ends ============
  1652                           
  1653                           	signat	_ser_init,88
  1654                           	global	_isr1
  1655                           psect	text537,local,class=CODE,delta=2
  1656                           global __ptext537
  1657  0375                     __ptext537:
  1658                           
  1659 ;; *************** function _isr1 *****************
  1660 ;; Defined at:
  1661 ;;		line 75 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;		None               void
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0
  1677 ;;      Temps:          0       5       0       0       0
  1678 ;;      Totals:         0       5       0       0       0
  1679 ;;Total ram usage:        5 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    4
  1682 ;; This function calls:
  1683 ;;		___lwmod
  1684 ;;		_readAvgDistance
  1685 ;;		_ADCconvert
  1686 ;;		_ReadButtons
  1687 ;; This function is called by:
  1688 ;;		Interrupt level 1
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           psect	text537
  1692                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1693                           	line	75
  1694                           	global	__size_of_isr1
  1695  00E8                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  1696                           	
  1697  0375                     _isr1:	
  1698                           	opt	stack 0
  1699                           ; Regs used in _isr1: [allreg]
  1700                           psect	intentry,class=CODE,delta=2
  1701                           global __pintentry
  1702  0004                     __pintentry:
  1703                           global interrupt_function
  1704  0004                     interrupt_function:
  1705                           	global saved_w
  1706  007E                     	saved_w	set	btemp+0
  1707  0004  00FE               	movwf	saved_w
  1708  0005  0E03               	swapf	status,w
  1709  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  1710  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  1711  0008  00D5               	movwf	(??_isr1+1)
  1712  0009  0804               	movf	fsr0,w
  1713  000A  00D6               	movwf	(??_isr1+2)
  1714  000B  080A               	movf	pclath,w
  1715  000C  00D7               	movwf	(??_isr1+3)
  1716  000D  087F               	movf	btemp+1,w
  1717  000E  00D8               	movwf	(??_isr1+4)
  1718  000F  120A  118A  2B75   	ljmp	_isr1
  1719                           psect	text537
  1720                           	line	77
  1721                           	
  1722  0375                     i1l8072:	
  1723                           ;Main.c: 77: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  1724  0375  1E8C               	btfss	(101/8),(101)&7
  1725  0376  2B78               	goto	u313_21
  1726  0377  2B79               	goto	u313_20
  1727  0378                     u313_21:
  1728  0378  2B93               	goto	i1l8082
  1729  0379                     u313_20:
  1730                           	
  1731  0379                     i1l8074:	
  1732  0379  081A               	movf	(26),w	;volatile
  1733  037A  00D4               	movwf	(??_isr1+0)+0
  1734  037B  0864               	movf	(_rxiptr),w
  1735  037C  3EB0               	addlw	_rxfifo&0ffh
  1736  037D  0084               	movwf	fsr0
  1737  037E  0854               	movf	(??_isr1+0)+0,w
  1738  037F  1383               	bcf	status, 7	;select IRP bank1
  1739  0380  0080               	movwf	indf
  1740                           	
  1741  0381                     i1l8076:	
  1742  0381  0864               	movf	(_rxiptr),w	;volatile
  1743  0382  3E01               	addlw	01h
  1744  0383  390F               	andlw	0Fh
  1745  0384  00D4               	movwf	(??_isr1+0)+0
  1746  0385  0854               	movf	(??_isr1+0)+0,w
  1747  0386  00E6               	movwf	(_ser_tmp)
  1748                           	
  1749  0387                     i1l8078:	
  1750  0387  0866               	movf	(_ser_tmp),w
  1751  0388  0665               	xorwf	(_rxoptr),w	;volatile
  1752  0389  1903               	skipnz
  1753  038A  2B8C               	goto	u314_21
  1754  038B  2B8D               	goto	u314_20
  1755  038C                     u314_21:
  1756  038C  2B93               	goto	i1l8082
  1757  038D                     u314_20:
  1758                           	
  1759  038D                     i1l8080:	
  1760  038D  0866               	movf	(_ser_tmp),w
  1761  038E  00D4               	movwf	(??_isr1+0)+0
  1762  038F  0854               	movf	(??_isr1+0)+0,w
  1763  0390  00E4               	movwf	(_rxiptr)	;volatile
  1764  0391  2B93               	goto	i1l8082
  1765                           	
  1766  0392                     i1l2151:	
  1767  0392  2B93               	goto	i1l8082
  1768                           	
  1769  0393                     i1l2150:	
  1770                           	
  1771  0393                     i1l8082:	
  1772  0393  1E0C               	btfss	(100/8),(100)&7
  1773  0394  2B96               	goto	u315_21
  1774  0395  2B97               	goto	u315_20
  1775  0396                     u315_21:
  1776  0396  2BB7               	goto	i1l2152
  1777  0397                     u315_20:
  1778                           	
  1779  0397                     i1l8084:	
  1780  0397  1683               	bsf	status, 5	;RP0=1, select bank1
  1781  0398  1303               	bcf	status, 6	;RP1=0, select bank1
  1782  0399  1E0C               	btfss	(1124/8)^080h,(1124)&7
  1783  039A  2B9C               	goto	u316_21
  1784  039B  2B9D               	goto	u316_20
  1785  039C                     u316_21:
  1786  039C  2BB7               	goto	i1l2152
  1787  039D                     u316_20:
  1788                           	
  1789  039D                     i1l8086:	
  1790  039D  1283               	bcf	status, 5	;RP0=0, select bank0
  1791  039E  1303               	bcf	status, 6	;RP1=0, select bank0
  1792  039F  0868               	movf	(_txoptr),w
  1793  03A0  3EC0               	addlw	_txfifo&0ffh
  1794  03A1  0084               	movwf	fsr0
  1795  03A2  1383               	bcf	status, 7	;select IRP bank1
  1796  03A3  0800               	movf	indf,w
  1797  03A4  0099               	movwf	(25)	;volatile
  1798                           	
  1799  03A5                     i1l8088:	
  1800  03A5  3001               	movlw	(01h)
  1801  03A6  00D4               	movwf	(??_isr1+0)+0
  1802  03A7  0854               	movf	(??_isr1+0)+0,w
  1803  03A8  07E8               	addwf	(_txoptr),f	;volatile
  1804                           	
  1805  03A9                     i1l8090:	
  1806  03A9  300F               	movlw	(0Fh)
  1807  03AA  00D4               	movwf	(??_isr1+0)+0
  1808  03AB  0854               	movf	(??_isr1+0)+0,w
  1809  03AC  05E8               	andwf	(_txoptr),f	;volatile
  1810                           	
  1811  03AD                     i1l8092:	
  1812  03AD  0868               	movf	(_txoptr),w	;volatile
  1813  03AE  0667               	xorwf	(_txiptr),w	;volatile
  1814  03AF  1D03               	skipz
  1815  03B0  2BB2               	goto	u317_21
  1816  03B1  2BB3               	goto	u317_20
  1817  03B2                     u317_21:
  1818  03B2  2BB7               	goto	i1l2152
  1819  03B3                     u317_20:
  1820                           	
  1821  03B3                     i1l8094:	
  1822  03B3  1683               	bsf	status, 5	;RP0=1, select bank1
  1823  03B4  1303               	bcf	status, 6	;RP1=0, select bank1
  1824  03B5  120C               	bcf	(1124/8)^080h,(1124)&7
  1825  03B6  2BB7               	goto	i1l2152
  1826                           	
  1827  03B7                     i1l2153:	
  1828                           	
  1829  03B7                     i1l2152:	
  1830                           	line	79
  1831                           ;Main.c: 79: if(TMR0IF)
  1832  03B7  1D0B               	btfss	(90/8),(90)&7
  1833  03B8  2BBA               	goto	u318_21
  1834  03B9  2BBB               	goto	u318_20
  1835  03BA                     u318_21:
  1836  03BA  2C51               	goto	i1l2159
  1837  03BB                     u318_20:
  1838                           	line	81
  1839                           	
  1840  03BB                     i1l8096:	
  1841                           ;Main.c: 80: {
  1842                           ;Main.c: 81: TMR0IF = 0;
  1843  03BB  110B               	bcf	(90/8),(90)&7
  1844                           	line	82
  1845                           	
  1846  03BC                     i1l8098:	
  1847                           ;Main.c: 82: TMR0 = 100;
  1848  03BC  3064               	movlw	(064h)
  1849  03BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1850  03BE  0081               	movwf	(1)	;volatile
  1851                           	line	84
  1852                           ;Main.c: 84: RTC_Counter++;
  1853  03BF  3001               	movlw	low(01h)
  1854  03C0  07DB               	addwf	(_RTC_Counter),f	;volatile
  1855  03C1  1803               	skipnc
  1856  03C2  0ADC               	incf	(_RTC_Counter+1),f	;volatile
  1857  03C3  3000               	movlw	high(01h)
  1858  03C4  07DC               	addwf	(_RTC_Counter+1),f	;volatile
  1859                           	line	86
  1860                           	
  1861  03C5                     i1l8100:	
  1862                           ;Main.c: 86: RTC_FLAG_1MS = 1;
  1863  03C5  17D9               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  1864                           	line	87
  1865                           	
  1866  03C6                     i1l8102:	
  1867                           ;Main.c: 87: if(RTC_Counter % 10 == 0) RTC_FLAG_10MS = 1;
  1868  03C6  300A               	movlw	low(0Ah)
  1869  03C7  00F8               	movwf	(?___lwmod)
  1870  03C8  3000               	movlw	high(0Ah)
  1871  03C9  00F9               	movwf	((?___lwmod))+1
  1872  03CA  085C               	movf	(_RTC_Counter+1),w	;volatile
  1873  03CB  01FB               	clrf	1+(?___lwmod)+02h
  1874  03CC  07FB               	addwf	1+(?___lwmod)+02h
  1875  03CD  085B               	movf	(_RTC_Counter),w	;volatile
  1876  03CE  01FA               	clrf	0+(?___lwmod)+02h
  1877  03CF  07FA               	addwf	0+(?___lwmod)+02h
  1878                           
  1879  03D0  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  1880  03D5  0879               	movf	((1+(?___lwmod))),w
  1881  03D6  0478               	iorwf	((0+(?___lwmod))),w
  1882  03D7  1D03               	skipz
  1883  03D8  2BDA               	goto	u319_21
  1884  03D9  2BDB               	goto	u319_20
  1885  03DA                     u319_21:
  1886  03DA  2BDF               	goto	i1l8106
  1887  03DB                     u319_20:
  1888                           	
  1889  03DB                     i1l8104:	
  1890  03DB  1283               	bcf	status, 5	;RP0=0, select bank0
  1891  03DC  1303               	bcf	status, 6	;RP1=0, select bank0
  1892  03DD  1759               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  1893  03DE  2BDF               	goto	i1l8106
  1894                           	
  1895  03DF                     i1l2155:	
  1896                           	line	88
  1897                           	
  1898  03DF                     i1l8106:	
  1899                           ;Main.c: 88: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  1900  03DF  3032               	movlw	low(032h)
  1901  03E0  00F8               	movwf	(?___lwmod)
  1902  03E1  3000               	movlw	high(032h)
  1903  03E2  00F9               	movwf	((?___lwmod))+1
  1904  03E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1905  03E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1906  03E5  085C               	movf	(_RTC_Counter+1),w	;volatile
  1907  03E6  01FB               	clrf	1+(?___lwmod)+02h
  1908  03E7  07FB               	addwf	1+(?___lwmod)+02h
  1909  03E8  085B               	movf	(_RTC_Counter),w	;volatile
  1910  03E9  01FA               	clrf	0+(?___lwmod)+02h
  1911  03EA  07FA               	addwf	0+(?___lwmod)+02h
  1912                           
  1913  03EB  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  1914  03F0  0879               	movf	((1+(?___lwmod))),w
  1915  03F1  0478               	iorwf	((0+(?___lwmod))),w
  1916  03F2  1D03               	skipz
  1917  03F3  2BF5               	goto	u320_21
  1918  03F4  2BF6               	goto	u320_20
  1919  03F5                     u320_21:
  1920  03F5  2BFA               	goto	i1l8110
  1921  03F6                     u320_20:
  1922                           	
  1923  03F6                     i1l8108:	
  1924  03F6  1283               	bcf	status, 5	;RP0=0, select bank0
  1925  03F7  1303               	bcf	status, 6	;RP1=0, select bank0
  1926  03F8  155A               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  1927  03F9  2BFA               	goto	i1l8110
  1928                           	
  1929  03FA                     i1l2156:	
  1930                           	line	89
  1931                           	
  1932  03FA                     i1l8110:	
  1933                           ;Main.c: 89: if(RTC_Counter % 250 == 0)
  1934  03FA  30FA               	movlw	low(0FAh)
  1935  03FB  00F8               	movwf	(?___lwmod)
  1936  03FC  3000               	movlw	high(0FAh)
  1937  03FD  00F9               	movwf	((?___lwmod))+1
  1938  03FE  1283               	bcf	status, 5	;RP0=0, select bank0
  1939  03FF  1303               	bcf	status, 6	;RP1=0, select bank0
  1940  0400  085C               	movf	(_RTC_Counter+1),w	;volatile
  1941  0401  01FB               	clrf	1+(?___lwmod)+02h
  1942  0402  07FB               	addwf	1+(?___lwmod)+02h
  1943  0403  085B               	movf	(_RTC_Counter),w	;volatile
  1944  0404  01FA               	clrf	0+(?___lwmod)+02h
  1945  0405  07FA               	addwf	0+(?___lwmod)+02h
  1946                           
  1947  0406  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  1948  040B  0879               	movf	((1+(?___lwmod))),w
  1949  040C  0478               	iorwf	((0+(?___lwmod))),w
  1950  040D  1D03               	skipz
  1951  040E  2C10               	goto	u321_21
  1952  040F  2C11               	goto	u321_20
  1953  0410                     u321_21:
  1954  0410  2C27               	goto	i1l8116
  1955  0411                     u321_20:
  1956                           	line	91
  1957                           	
  1958  0411                     i1l8112:	
  1959                           ;Main.c: 90: {
  1960                           ;Main.c: 91: ADCconvert(readAvgDistance());
  1961  0411  120A  118A  24D9   	fcall	_readAvgDistance
              120A  118A         
  1962  0416  1283               	bcf	status, 5	;RP0=0, select bank0
  1963  0417  1303               	bcf	status, 6	;RP1=0, select bank0
  1964  0418  0821               	movf	(1+(?_readAvgDistance)),w
  1965  0419  01BD               	clrf	(?_ADCconvert+1)
  1966  041A  07BD               	addwf	(?_ADCconvert+1)
  1967  041B  0820               	movf	(0+(?_readAvgDistance)),w
  1968  041C  01BC               	clrf	(?_ADCconvert)
  1969  041D  07BC               	addwf	(?_ADCconvert)
  1970                           
  1971  041E  120A  118A  2015   	fcall	_ADCconvert
              120A  118A         
  1972                           	line	93
  1973                           	
  1974  0423                     i1l8114:	
  1975                           ;Main.c: 93: RTC_FLAG_250MS = 1;
  1976  0423  1283               	bcf	status, 5	;RP0=0, select bank0
  1977  0424  1303               	bcf	status, 6	;RP1=0, select bank0
  1978  0425  145A               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1979  0426  2C27               	goto	i1l8116
  1980                           	line	95
  1981                           	
  1982  0427                     i1l2157:	
  1983                           	line	96
  1984                           	
  1985  0427                     i1l8116:	
  1986                           ;Main.c: 95: }
  1987                           ;Main.c: 96: if(RTC_Counter % 500 == 0)
  1988  0427  30F4               	movlw	low(01F4h)
  1989  0428  00F8               	movwf	(?___lwmod)
  1990  0429  3001               	movlw	high(01F4h)
  1991  042A  00F9               	movwf	((?___lwmod))+1
  1992  042B  1283               	bcf	status, 5	;RP0=0, select bank0
  1993  042C  1303               	bcf	status, 6	;RP1=0, select bank0
  1994  042D  085C               	movf	(_RTC_Counter+1),w	;volatile
  1995  042E  01FB               	clrf	1+(?___lwmod)+02h
  1996  042F  07FB               	addwf	1+(?___lwmod)+02h
  1997  0430  085B               	movf	(_RTC_Counter),w	;volatile
  1998  0431  01FA               	clrf	0+(?___lwmod)+02h
  1999  0432  07FA               	addwf	0+(?___lwmod)+02h
  2000                           
  2001  0433  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2002  0438  0879               	movf	((1+(?___lwmod))),w
  2003  0439  0478               	iorwf	((0+(?___lwmod))),w
  2004  043A  1D03               	skipz
  2005  043B  2C3D               	goto	u322_21
  2006  043C  2C3E               	goto	u322_20
  2007  043D                     u322_21:
  2008  043D  2C46               	goto	i1l8124
  2009  043E                     u322_20:
  2010                           	line	98
  2011                           	
  2012  043E                     i1l8118:	
  2013                           ;Main.c: 97: {
  2014                           ;Main.c: 98: RTC_FLAG_500MS = 1;
  2015  043E  1283               	bcf	status, 5	;RP0=0, select bank0
  2016  043F  1303               	bcf	status, 6	;RP1=0, select bank0
  2017  0440  14DA               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  2018                           	line	99
  2019                           	
  2020  0441                     i1l8120:	
  2021                           ;Main.c: 99: RTC_Counter = 0;
  2022  0441  01DB               	clrf	(_RTC_Counter)	;volatile
  2023  0442  01DC               	clrf	(_RTC_Counter+1)	;volatile
  2024                           	line	100
  2025                           	
  2026  0443                     i1l8122:	
  2027                           ;Main.c: 100: RB0 ^= 0x01;
  2028  0443  3001               	movlw	1<<((48)&7)
  2029  0444  0686               	xorwf	((48)/8),f
  2030  0445  2C46               	goto	i1l8124
  2031                           	line	101
  2032                           	
  2033  0446                     i1l2158:	
  2034                           	line	103
  2035                           	
  2036  0446                     i1l8124:	
  2037                           ;Main.c: 101: }
  2038                           ;Main.c: 103: buttonPressed = ReadButtons();
  2039  0446  120A  118A  264F   	fcall	_ReadButtons
              120A  118A         
  2040  044B  1283               	bcf	status, 5	;RP0=0, select bank0
  2041  044C  1303               	bcf	status, 6	;RP1=0, select bank0
  2042  044D  00D4               	movwf	(??_isr1+0)+0
  2043  044E  0854               	movf	(??_isr1+0)+0,w
  2044  044F  00E2               	movwf	(_buttonPressed)	;volatile
  2045  0450  2C51               	goto	i1l2159
  2046                           	line	104
  2047                           	
  2048  0451                     i1l2154:	
  2049                           	line	105
  2050                           	
  2051  0451                     i1l2159:	
  2052  0451  1283               	bcf	status, 5	;RP0=0, select bank0
  2053  0452  0858               	movf	(??_isr1+4),w
  2054  0453  00FF               	movwf	btemp+1
  2055  0454  0857               	movf	(??_isr1+3),w
  2056  0455  008A               	movwf	pclath
  2057  0456  0856               	movf	(??_isr1+2),w
  2058  0457  0084               	movwf	fsr0
  2059  0458  0E55               	swapf	(??_isr1+1)^00h,w
  2060  0459  0083               	movwf	status
  2061  045A  0EFE               	swapf	saved_w,f
  2062  045B  0E7E               	swapf	saved_w,w
  2063  045C  0009               	retfie
  2064                           	opt stack 0
  2065                           GLOBAL	__end_of_isr1
  2066  045D                     	__end_of_isr1:
  2067 ;; =============== function _isr1 ends ============
  2068                           
  2069                           	signat	_isr1,88
  2070                           	global	_ADCconvert
  2071                           psect	text538,local,class=CODE,delta=2
  2072                           global __ptext538
  2073  0015                     __ptext538:
  2074                           
  2075 ;; *************** function _ADCconvert *****************
  2076 ;; Defined at:
  2077 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  adcVal          2   28[BANK0 ] unsigned int 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  adcOutput      16   34[BANK0 ] unsigned char [16]
  2082 ;;  distance        2   50[BANK0 ] unsigned int 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;		None               void
  2085 ;; Registers used:
  2086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       2       0       0       0
  2093 ;;      Locals:         0      18       0       0       0
  2094 ;;      Temps:          0       4       0       0       0
  2095 ;;      Totals:         0      24       0       0       0
  2096 ;;Total ram usage:       24 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    2
  2099 ;; This function calls:
  2100 ;;		___lwmod
  2101 ;;		i1_lcd_write_control
  2102 ;;		_sprintf
  2103 ;;		_lcd_set_cursor
  2104 ;;		_lcd_write_string
  2105 ;; This function is called by:
  2106 ;;		_isr1
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           psect	text538
  2110                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  2111                           	line	33
  2112                           	global	__size_of_ADCconvert
  2113  0262                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  2114                           	
  2115  0015                     _ADCconvert:	
  2116                           	opt	stack 1
  2117                           ; Regs used in _ADCconvert: [allreg]
  2118                           	line	34
  2119                           	
  2120  0015                     i1l8148:	
  2121                           ;infrared.c: 34: char adcOutput[16] = "";
  2122  0015  3042               	movlw	(ADCconvert@adcOutput)&0ffh
  2123  0016  0084               	movwf	fsr0
  2124  0017  30A0               	movlw	low(ADCconvert@F1190)
  2125  0018  1283               	bcf	status, 5	;RP0=0, select bank0
  2126  0019  1303               	bcf	status, 6	;RP1=0, select bank0
  2127  001A  00BE               	movwf	(??_ADCconvert+0)+0
  2128  001B  0804               	movf	fsr0,w
  2129  001C  00BF               	movwf	((??_ADCconvert+0)+0+1)
  2130  001D  3010               	movlw	16
  2131  001E  00C0               	movwf	((??_ADCconvert+0)+0+2)
  2132  001F                     u326_20:
  2133  001F  083E               	movf	(??_ADCconvert+0)+0,w
  2134  0020  0084               	movwf	fsr0
  2135  0021  1383               	bcf	status, 7	;select IRP bank1
  2136                           	
  2137  0022  0800               	movf	indf,w
  2138  0023  00C1               	movwf	((??_ADCconvert+0)+0+3)
  2139  0024  0ABE               	incf	(??_ADCconvert+0)+0,f
  2140  0025  083F               	movf	((??_ADCconvert+0)+0+1),w
  2141  0026  0084               	movwf	fsr0
  2142                           	
  2143  0027  0841               	movf	((??_ADCconvert+0)+0+3),w
  2144  0028  0080               	movwf	indf
  2145  0029  0ABF               	incf	((??_ADCconvert+0)+0+1),f
  2146  002A  0BC0               	decfsz	((??_ADCconvert+0)+0+2),f
  2147  002B  281F               	goto	u326_20
  2148                           	line	36
  2149                           	
  2150  002C                     i1l8150:	
  2151                           ;infrared.c: 35: unsigned int distance;
  2152                           ;infrared.c: 36: if (adcVal > 250)
  2153  002C  3000               	movlw	high(0FBh)
  2154  002D  023D               	subwf	(ADCconvert@adcVal+1),w
  2155  002E  30FB               	movlw	low(0FBh)
  2156  002F  1903               	skipnz
  2157  0030  023C               	subwf	(ADCconvert@adcVal),w
  2158  0031  1C03               	skipc
  2159  0032  2834               	goto	u327_21
  2160  0033  2835               	goto	u327_20
  2161  0034                     u327_21:
  2162  0034  283A               	goto	i1l8154
  2163  0035                     u327_20:
  2164                           	line	38
  2165                           	
  2166  0035                     i1l8152:	
  2167                           ;infrared.c: 37: {
  2168                           ;infrared.c: 38: distance = 20;
  2169  0035  3014               	movlw	low(014h)
  2170  0036  00D2               	movwf	(ADCconvert@distance)
  2171  0037  3000               	movlw	high(014h)
  2172  0038  00D3               	movwf	((ADCconvert@distance))+1
  2173                           	line	39
  2174                           ;infrared.c: 39: }
  2175  0039  2A4C               	goto	i1l2886
  2176                           	line	40
  2177                           	
  2178  003A                     i1l2885:	
  2179                           	
  2180  003A                     i1l8154:	
  2181                           ;infrared.c: 40: else if (adcVal < 250 && adcVal >= 190)
  2182  003A  3000               	movlw	high(0FAh)
  2183  003B  023D               	subwf	(ADCconvert@adcVal+1),w
  2184  003C  30FA               	movlw	low(0FAh)
  2185  003D  1903               	skipnz
  2186  003E  023C               	subwf	(ADCconvert@adcVal),w
  2187  003F  1803               	skipnc
  2188  0040  2842               	goto	u328_21
  2189  0041  2843               	goto	u328_20
  2190  0042                     u328_21:
  2191  0042  2866               	goto	i1l8160
  2192  0043                     u328_20:
  2193                           	
  2194  0043                     i1l8156:	
  2195  0043  3000               	movlw	high(0BEh)
  2196  0044  023D               	subwf	(ADCconvert@adcVal+1),w
  2197  0045  30BE               	movlw	low(0BEh)
  2198  0046  1903               	skipnz
  2199  0047  023C               	subwf	(ADCconvert@adcVal),w
  2200  0048  1C03               	skipc
  2201  0049  284B               	goto	u329_21
  2202  004A  284C               	goto	u329_20
  2203  004B                     u329_21:
  2204  004B  2866               	goto	i1l8160
  2205  004C                     u329_20:
  2206                           	line	42
  2207                           	
  2208  004C                     i1l8158:	
  2209                           ;infrared.c: 41: {
  2210                           ;infrared.c: 42: distance = 20+ (adcVal%100) ;
  2211  004C  3064               	movlw	low(064h)
  2212  004D  00F8               	movwf	(?___lwmod)
  2213  004E  3000               	movlw	high(064h)
  2214  004F  00F9               	movwf	((?___lwmod))+1
  2215  0050  083D               	movf	(ADCconvert@adcVal+1),w
  2216  0051  01FB               	clrf	1+(?___lwmod)+02h
  2217  0052  07FB               	addwf	1+(?___lwmod)+02h
  2218  0053  083C               	movf	(ADCconvert@adcVal),w
  2219  0054  01FA               	clrf	0+(?___lwmod)+02h
  2220  0055  07FA               	addwf	0+(?___lwmod)+02h
  2221                           
  2222  0056  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2223  005B  0878               	movf	(0+(?___lwmod)),w
  2224  005C  3E14               	addlw	low(014h)
  2225  005D  1283               	bcf	status, 5	;RP0=0, select bank0
  2226  005E  1303               	bcf	status, 6	;RP1=0, select bank0
  2227  005F  00D2               	movwf	(ADCconvert@distance)
  2228  0060  0879               	movf	(1+(?___lwmod)),w
  2229  0061  1803               	skipnc
  2230  0062  3E01               	addlw	1
  2231  0063  3E00               	addlw	high(014h)
  2232  0064  00D3               	movwf	1+(ADCconvert@distance)
  2233                           	line	43
  2234                           ;infrared.c: 43: }
  2235  0065  2A4C               	goto	i1l2886
  2236                           	line	44
  2237                           	
  2238  0066                     i1l2887:	
  2239                           	
  2240  0066                     i1l8160:	
  2241                           ;infrared.c: 44: else if (adcVal < 190 && adcVal >= 96)
  2242  0066  3000               	movlw	high(0BEh)
  2243  0067  023D               	subwf	(ADCconvert@adcVal+1),w
  2244  0068  30BE               	movlw	low(0BEh)
  2245  0069  1903               	skipnz
  2246  006A  023C               	subwf	(ADCconvert@adcVal),w
  2247  006B  1803               	skipnc
  2248  006C  286E               	goto	u330_21
  2249  006D  286F               	goto	u330_20
  2250  006E                     u330_21:
  2251  006E  2892               	goto	i1l8166
  2252  006F                     u330_20:
  2253                           	
  2254  006F                     i1l8162:	
  2255  006F  3000               	movlw	high(060h)
  2256  0070  023D               	subwf	(ADCconvert@adcVal+1),w
  2257  0071  3060               	movlw	low(060h)
  2258  0072  1903               	skipnz
  2259  0073  023C               	subwf	(ADCconvert@adcVal),w
  2260  0074  1C03               	skipc
  2261  0075  2877               	goto	u331_21
  2262  0076  2878               	goto	u331_20
  2263  0077                     u331_21:
  2264  0077  2892               	goto	i1l8166
  2265  0078                     u331_20:
  2266                           	line	46
  2267                           	
  2268  0078                     i1l8164:	
  2269                           ;infrared.c: 45: {
  2270                           ;infrared.c: 46: distance = 30+ (adcVal%100) ;
  2271  0078  3064               	movlw	low(064h)
  2272  0079  00F8               	movwf	(?___lwmod)
  2273  007A  3000               	movlw	high(064h)
  2274  007B  00F9               	movwf	((?___lwmod))+1
  2275  007C  083D               	movf	(ADCconvert@adcVal+1),w
  2276  007D  01FB               	clrf	1+(?___lwmod)+02h
  2277  007E  07FB               	addwf	1+(?___lwmod)+02h
  2278  007F  083C               	movf	(ADCconvert@adcVal),w
  2279  0080  01FA               	clrf	0+(?___lwmod)+02h
  2280  0081  07FA               	addwf	0+(?___lwmod)+02h
  2281                           
  2282  0082  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2283  0087  0878               	movf	(0+(?___lwmod)),w
  2284  0088  3E1E               	addlw	low(01Eh)
  2285  0089  1283               	bcf	status, 5	;RP0=0, select bank0
  2286  008A  1303               	bcf	status, 6	;RP1=0, select bank0
  2287  008B  00D2               	movwf	(ADCconvert@distance)
  2288  008C  0879               	movf	(1+(?___lwmod)),w
  2289  008D  1803               	skipnc
  2290  008E  3E01               	addlw	1
  2291  008F  3E00               	addlw	high(01Eh)
  2292  0090  00D3               	movwf	1+(ADCconvert@distance)
  2293                           	line	47
  2294                           ;infrared.c: 47: }
  2295  0091  2A4C               	goto	i1l2886
  2296                           	line	48
  2297                           	
  2298  0092                     i1l2889:	
  2299                           	
  2300  0092                     i1l8166:	
  2301                           ;infrared.c: 48: else if (adcVal < 190 && adcVal >= 96)
  2302  0092  3000               	movlw	high(0BEh)
  2303  0093  023D               	subwf	(ADCconvert@adcVal+1),w
  2304  0094  30BE               	movlw	low(0BEh)
  2305  0095  1903               	skipnz
  2306  0096  023C               	subwf	(ADCconvert@adcVal),w
  2307  0097  1803               	skipnc
  2308  0098  289A               	goto	u332_21
  2309  0099  289B               	goto	u332_20
  2310  009A                     u332_21:
  2311  009A  28BE               	goto	i1l8172
  2312  009B                     u332_20:
  2313                           	
  2314  009B                     i1l8168:	
  2315  009B  3000               	movlw	high(060h)
  2316  009C  023D               	subwf	(ADCconvert@adcVal+1),w
  2317  009D  3060               	movlw	low(060h)
  2318  009E  1903               	skipnz
  2319  009F  023C               	subwf	(ADCconvert@adcVal),w
  2320  00A0  1C03               	skipc
  2321  00A1  28A3               	goto	u333_21
  2322  00A2  28A4               	goto	u333_20
  2323  00A3                     u333_21:
  2324  00A3  28BE               	goto	i1l8172
  2325  00A4                     u333_20:
  2326                           	line	50
  2327                           	
  2328  00A4                     i1l8170:	
  2329                           ;infrared.c: 49: {
  2330                           ;infrared.c: 50: distance = 40+ (adcVal%100) ;
  2331  00A4  3064               	movlw	low(064h)
  2332  00A5  00F8               	movwf	(?___lwmod)
  2333  00A6  3000               	movlw	high(064h)
  2334  00A7  00F9               	movwf	((?___lwmod))+1
  2335  00A8  083D               	movf	(ADCconvert@adcVal+1),w
  2336  00A9  01FB               	clrf	1+(?___lwmod)+02h
  2337  00AA  07FB               	addwf	1+(?___lwmod)+02h
  2338  00AB  083C               	movf	(ADCconvert@adcVal),w
  2339  00AC  01FA               	clrf	0+(?___lwmod)+02h
  2340  00AD  07FA               	addwf	0+(?___lwmod)+02h
  2341                           
  2342  00AE  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2343  00B3  0878               	movf	(0+(?___lwmod)),w
  2344  00B4  3E28               	addlw	low(028h)
  2345  00B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2346  00B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2347  00B7  00D2               	movwf	(ADCconvert@distance)
  2348  00B8  0879               	movf	(1+(?___lwmod)),w
  2349  00B9  1803               	skipnc
  2350  00BA  3E01               	addlw	1
  2351  00BB  3E00               	addlw	high(028h)
  2352  00BC  00D3               	movwf	1+(ADCconvert@distance)
  2353                           	line	51
  2354                           ;infrared.c: 51: }
  2355  00BD  2A4C               	goto	i1l2886
  2356                           	line	52
  2357                           	
  2358  00BE                     i1l2891:	
  2359                           	
  2360  00BE                     i1l8172:	
  2361                           ;infrared.c: 52: else if (adcVal < 115 && adcVal >= 96)
  2362  00BE  3000               	movlw	high(073h)
  2363  00BF  023D               	subwf	(ADCconvert@adcVal+1),w
  2364  00C0  3073               	movlw	low(073h)
  2365  00C1  1903               	skipnz
  2366  00C2  023C               	subwf	(ADCconvert@adcVal),w
  2367  00C3  1803               	skipnc
  2368  00C4  28C6               	goto	u334_21
  2369  00C5  28C7               	goto	u334_20
  2370  00C6                     u334_21:
  2371  00C6  28EA               	goto	i1l8178
  2372  00C7                     u334_20:
  2373                           	
  2374  00C7                     i1l8174:	
  2375  00C7  3000               	movlw	high(060h)
  2376  00C8  023D               	subwf	(ADCconvert@adcVal+1),w
  2377  00C9  3060               	movlw	low(060h)
  2378  00CA  1903               	skipnz
  2379  00CB  023C               	subwf	(ADCconvert@adcVal),w
  2380  00CC  1C03               	skipc
  2381  00CD  28CF               	goto	u335_21
  2382  00CE  28D0               	goto	u335_20
  2383  00CF                     u335_21:
  2384  00CF  28EA               	goto	i1l8178
  2385  00D0                     u335_20:
  2386                           	line	54
  2387                           	
  2388  00D0                     i1l8176:	
  2389                           ;infrared.c: 53: {
  2390                           ;infrared.c: 54: distance = 50+ (adcVal%100) ;
  2391  00D0  3064               	movlw	low(064h)
  2392  00D1  00F8               	movwf	(?___lwmod)
  2393  00D2  3000               	movlw	high(064h)
  2394  00D3  00F9               	movwf	((?___lwmod))+1
  2395  00D4  083D               	movf	(ADCconvert@adcVal+1),w
  2396  00D5  01FB               	clrf	1+(?___lwmod)+02h
  2397  00D6  07FB               	addwf	1+(?___lwmod)+02h
  2398  00D7  083C               	movf	(ADCconvert@adcVal),w
  2399  00D8  01FA               	clrf	0+(?___lwmod)+02h
  2400  00D9  07FA               	addwf	0+(?___lwmod)+02h
  2401                           
  2402  00DA  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2403  00DF  0878               	movf	(0+(?___lwmod)),w
  2404  00E0  3E32               	addlw	low(032h)
  2405  00E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2406  00E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2407  00E3  00D2               	movwf	(ADCconvert@distance)
  2408  00E4  0879               	movf	(1+(?___lwmod)),w
  2409  00E5  1803               	skipnc
  2410  00E6  3E01               	addlw	1
  2411  00E7  3E00               	addlw	high(032h)
  2412  00E8  00D3               	movwf	1+(ADCconvert@distance)
  2413                           	line	55
  2414                           ;infrared.c: 55: }
  2415  00E9  2A4C               	goto	i1l2886
  2416                           	line	56
  2417                           	
  2418  00EA                     i1l2893:	
  2419                           	
  2420  00EA                     i1l8178:	
  2421                           ;infrared.c: 56: else if (adcVal < 96 && adcVal >= 82)
  2422  00EA  3000               	movlw	high(060h)
  2423  00EB  023D               	subwf	(ADCconvert@adcVal+1),w
  2424  00EC  3060               	movlw	low(060h)
  2425  00ED  1903               	skipnz
  2426  00EE  023C               	subwf	(ADCconvert@adcVal),w
  2427  00EF  1803               	skipnc
  2428  00F0  28F2               	goto	u336_21
  2429  00F1  28F3               	goto	u336_20
  2430  00F2                     u336_21:
  2431  00F2  2916               	goto	i1l8184
  2432  00F3                     u336_20:
  2433                           	
  2434  00F3                     i1l8180:	
  2435  00F3  3000               	movlw	high(052h)
  2436  00F4  023D               	subwf	(ADCconvert@adcVal+1),w
  2437  00F5  3052               	movlw	low(052h)
  2438  00F6  1903               	skipnz
  2439  00F7  023C               	subwf	(ADCconvert@adcVal),w
  2440  00F8  1C03               	skipc
  2441  00F9  28FB               	goto	u337_21
  2442  00FA  28FC               	goto	u337_20
  2443  00FB                     u337_21:
  2444  00FB  2916               	goto	i1l8184
  2445  00FC                     u337_20:
  2446                           	line	58
  2447                           	
  2448  00FC                     i1l8182:	
  2449                           ;infrared.c: 57: {
  2450                           ;infrared.c: 58: distance = 60+ (adcVal%100) ;
  2451  00FC  3064               	movlw	low(064h)
  2452  00FD  00F8               	movwf	(?___lwmod)
  2453  00FE  3000               	movlw	high(064h)
  2454  00FF  00F9               	movwf	((?___lwmod))+1
  2455  0100  083D               	movf	(ADCconvert@adcVal+1),w
  2456  0101  01FB               	clrf	1+(?___lwmod)+02h
  2457  0102  07FB               	addwf	1+(?___lwmod)+02h
  2458  0103  083C               	movf	(ADCconvert@adcVal),w
  2459  0104  01FA               	clrf	0+(?___lwmod)+02h
  2460  0105  07FA               	addwf	0+(?___lwmod)+02h
  2461                           
  2462  0106  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2463  010B  0878               	movf	(0+(?___lwmod)),w
  2464  010C  3E3C               	addlw	low(03Ch)
  2465  010D  1283               	bcf	status, 5	;RP0=0, select bank0
  2466  010E  1303               	bcf	status, 6	;RP1=0, select bank0
  2467  010F  00D2               	movwf	(ADCconvert@distance)
  2468  0110  0879               	movf	(1+(?___lwmod)),w
  2469  0111  1803               	skipnc
  2470  0112  3E01               	addlw	1
  2471  0113  3E00               	addlw	high(03Ch)
  2472  0114  00D3               	movwf	1+(ADCconvert@distance)
  2473                           	line	59
  2474                           ;infrared.c: 59: }
  2475  0115  2A4C               	goto	i1l2886
  2476                           	line	60
  2477                           	
  2478  0116                     i1l2895:	
  2479                           	
  2480  0116                     i1l8184:	
  2481                           ;infrared.c: 60: else if (adcVal < 82 && adcVal >= 70)
  2482  0116  3000               	movlw	high(052h)
  2483  0117  023D               	subwf	(ADCconvert@adcVal+1),w
  2484  0118  3052               	movlw	low(052h)
  2485  0119  1903               	skipnz
  2486  011A  023C               	subwf	(ADCconvert@adcVal),w
  2487  011B  1803               	skipnc
  2488  011C  291E               	goto	u338_21
  2489  011D  291F               	goto	u338_20
  2490  011E                     u338_21:
  2491  011E  2942               	goto	i1l8190
  2492  011F                     u338_20:
  2493                           	
  2494  011F                     i1l8186:	
  2495  011F  3000               	movlw	high(046h)
  2496  0120  023D               	subwf	(ADCconvert@adcVal+1),w
  2497  0121  3046               	movlw	low(046h)
  2498  0122  1903               	skipnz
  2499  0123  023C               	subwf	(ADCconvert@adcVal),w
  2500  0124  1C03               	skipc
  2501  0125  2927               	goto	u339_21
  2502  0126  2928               	goto	u339_20
  2503  0127                     u339_21:
  2504  0127  2942               	goto	i1l8190
  2505  0128                     u339_20:
  2506                           	line	62
  2507                           	
  2508  0128                     i1l8188:	
  2509                           ;infrared.c: 61: {
  2510                           ;infrared.c: 62: distance = 70+ (adcVal%100) ;
  2511  0128  3064               	movlw	low(064h)
  2512  0129  00F8               	movwf	(?___lwmod)
  2513  012A  3000               	movlw	high(064h)
  2514  012B  00F9               	movwf	((?___lwmod))+1
  2515  012C  083D               	movf	(ADCconvert@adcVal+1),w
  2516  012D  01FB               	clrf	1+(?___lwmod)+02h
  2517  012E  07FB               	addwf	1+(?___lwmod)+02h
  2518  012F  083C               	movf	(ADCconvert@adcVal),w
  2519  0130  01FA               	clrf	0+(?___lwmod)+02h
  2520  0131  07FA               	addwf	0+(?___lwmod)+02h
  2521                           
  2522  0132  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2523  0137  0878               	movf	(0+(?___lwmod)),w
  2524  0138  3E46               	addlw	low(046h)
  2525  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  2526  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  2527  013B  00D2               	movwf	(ADCconvert@distance)
  2528  013C  0879               	movf	(1+(?___lwmod)),w
  2529  013D  1803               	skipnc
  2530  013E  3E01               	addlw	1
  2531  013F  3E00               	addlw	high(046h)
  2532  0140  00D3               	movwf	1+(ADCconvert@distance)
  2533                           	line	63
  2534                           ;infrared.c: 63: }
  2535  0141  2A4C               	goto	i1l2886
  2536                           	line	64
  2537                           	
  2538  0142                     i1l2897:	
  2539                           	
  2540  0142                     i1l8190:	
  2541                           ;infrared.c: 64: else if (adcVal < 70 && adcVal >= 64)
  2542  0142  3000               	movlw	high(046h)
  2543  0143  023D               	subwf	(ADCconvert@adcVal+1),w
  2544  0144  3046               	movlw	low(046h)
  2545  0145  1903               	skipnz
  2546  0146  023C               	subwf	(ADCconvert@adcVal),w
  2547  0147  1803               	skipnc
  2548  0148  294A               	goto	u340_21
  2549  0149  294B               	goto	u340_20
  2550  014A                     u340_21:
  2551  014A  296E               	goto	i1l8196
  2552  014B                     u340_20:
  2553                           	
  2554  014B                     i1l8192:	
  2555  014B  3000               	movlw	high(040h)
  2556  014C  023D               	subwf	(ADCconvert@adcVal+1),w
  2557  014D  3040               	movlw	low(040h)
  2558  014E  1903               	skipnz
  2559  014F  023C               	subwf	(ADCconvert@adcVal),w
  2560  0150  1C03               	skipc
  2561  0151  2953               	goto	u341_21
  2562  0152  2954               	goto	u341_20
  2563  0153                     u341_21:
  2564  0153  296E               	goto	i1l8196
  2565  0154                     u341_20:
  2566                           	line	66
  2567                           	
  2568  0154                     i1l8194:	
  2569                           ;infrared.c: 65: {
  2570                           ;infrared.c: 66: distance = 80+ (adcVal%100) ;
  2571  0154  3064               	movlw	low(064h)
  2572  0155  00F8               	movwf	(?___lwmod)
  2573  0156  3000               	movlw	high(064h)
  2574  0157  00F9               	movwf	((?___lwmod))+1
  2575  0158  083D               	movf	(ADCconvert@adcVal+1),w
  2576  0159  01FB               	clrf	1+(?___lwmod)+02h
  2577  015A  07FB               	addwf	1+(?___lwmod)+02h
  2578  015B  083C               	movf	(ADCconvert@adcVal),w
  2579  015C  01FA               	clrf	0+(?___lwmod)+02h
  2580  015D  07FA               	addwf	0+(?___lwmod)+02h
  2581                           
  2582  015E  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2583  0163  0878               	movf	(0+(?___lwmod)),w
  2584  0164  3E50               	addlw	low(050h)
  2585  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  2586  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  2587  0167  00D2               	movwf	(ADCconvert@distance)
  2588  0168  0879               	movf	(1+(?___lwmod)),w
  2589  0169  1803               	skipnc
  2590  016A  3E01               	addlw	1
  2591  016B  3E00               	addlw	high(050h)
  2592  016C  00D3               	movwf	1+(ADCconvert@distance)
  2593                           	line	67
  2594                           ;infrared.c: 67: }
  2595  016D  2A4C               	goto	i1l2886
  2596                           	line	68
  2597                           	
  2598  016E                     i1l2899:	
  2599                           	
  2600  016E                     i1l8196:	
  2601                           ;infrared.c: 68: else if (adcVal < 64 && adcVal >= 56)
  2602  016E  3000               	movlw	high(040h)
  2603  016F  023D               	subwf	(ADCconvert@adcVal+1),w
  2604  0170  3040               	movlw	low(040h)
  2605  0171  1903               	skipnz
  2606  0172  023C               	subwf	(ADCconvert@adcVal),w
  2607  0173  1803               	skipnc
  2608  0174  2976               	goto	u342_21
  2609  0175  2977               	goto	u342_20
  2610  0176                     u342_21:
  2611  0176  299A               	goto	i1l8202
  2612  0177                     u342_20:
  2613                           	
  2614  0177                     i1l8198:	
  2615  0177  3000               	movlw	high(038h)
  2616  0178  023D               	subwf	(ADCconvert@adcVal+1),w
  2617  0179  3038               	movlw	low(038h)
  2618  017A  1903               	skipnz
  2619  017B  023C               	subwf	(ADCconvert@adcVal),w
  2620  017C  1C03               	skipc
  2621  017D  297F               	goto	u343_21
  2622  017E  2980               	goto	u343_20
  2623  017F                     u343_21:
  2624  017F  299A               	goto	i1l8202
  2625  0180                     u343_20:
  2626                           	line	70
  2627                           	
  2628  0180                     i1l8200:	
  2629                           ;infrared.c: 69: {
  2630                           ;infrared.c: 70: distance = 90+ (adcVal%100) ;
  2631  0180  3064               	movlw	low(064h)
  2632  0181  00F8               	movwf	(?___lwmod)
  2633  0182  3000               	movlw	high(064h)
  2634  0183  00F9               	movwf	((?___lwmod))+1
  2635  0184  083D               	movf	(ADCconvert@adcVal+1),w
  2636  0185  01FB               	clrf	1+(?___lwmod)+02h
  2637  0186  07FB               	addwf	1+(?___lwmod)+02h
  2638  0187  083C               	movf	(ADCconvert@adcVal),w
  2639  0188  01FA               	clrf	0+(?___lwmod)+02h
  2640  0189  07FA               	addwf	0+(?___lwmod)+02h
  2641                           
  2642  018A  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2643  018F  0878               	movf	(0+(?___lwmod)),w
  2644  0190  3E5A               	addlw	low(05Ah)
  2645  0191  1283               	bcf	status, 5	;RP0=0, select bank0
  2646  0192  1303               	bcf	status, 6	;RP1=0, select bank0
  2647  0193  00D2               	movwf	(ADCconvert@distance)
  2648  0194  0879               	movf	(1+(?___lwmod)),w
  2649  0195  1803               	skipnc
  2650  0196  3E01               	addlw	1
  2651  0197  3E00               	addlw	high(05Ah)
  2652  0198  00D3               	movwf	1+(ADCconvert@distance)
  2653                           	line	71
  2654                           ;infrared.c: 71: }
  2655  0199  2A4C               	goto	i1l2886
  2656                           	line	72
  2657                           	
  2658  019A                     i1l2901:	
  2659                           	
  2660  019A                     i1l8202:	
  2661                           ;infrared.c: 72: else if (adcVal < 56 && adcVal >= 45)
  2662  019A  3000               	movlw	high(038h)
  2663  019B  023D               	subwf	(ADCconvert@adcVal+1),w
  2664  019C  3038               	movlw	low(038h)
  2665  019D  1903               	skipnz
  2666  019E  023C               	subwf	(ADCconvert@adcVal),w
  2667  019F  1803               	skipnc
  2668  01A0  29A2               	goto	u344_21
  2669  01A1  29A3               	goto	u344_20
  2670  01A2                     u344_21:
  2671  01A2  29C6               	goto	i1l8208
  2672  01A3                     u344_20:
  2673                           	
  2674  01A3                     i1l8204:	
  2675  01A3  3000               	movlw	high(02Dh)
  2676  01A4  023D               	subwf	(ADCconvert@adcVal+1),w
  2677  01A5  302D               	movlw	low(02Dh)
  2678  01A6  1903               	skipnz
  2679  01A7  023C               	subwf	(ADCconvert@adcVal),w
  2680  01A8  1C03               	skipc
  2681  01A9  29AB               	goto	u345_21
  2682  01AA  29AC               	goto	u345_20
  2683  01AB                     u345_21:
  2684  01AB  29C6               	goto	i1l8208
  2685  01AC                     u345_20:
  2686                           	line	74
  2687                           	
  2688  01AC                     i1l8206:	
  2689                           ;infrared.c: 73: {
  2690                           ;infrared.c: 74: distance = 100+ (adcVal%100) ;
  2691  01AC  3064               	movlw	low(064h)
  2692  01AD  00F8               	movwf	(?___lwmod)
  2693  01AE  3000               	movlw	high(064h)
  2694  01AF  00F9               	movwf	((?___lwmod))+1
  2695  01B0  083D               	movf	(ADCconvert@adcVal+1),w
  2696  01B1  01FB               	clrf	1+(?___lwmod)+02h
  2697  01B2  07FB               	addwf	1+(?___lwmod)+02h
  2698  01B3  083C               	movf	(ADCconvert@adcVal),w
  2699  01B4  01FA               	clrf	0+(?___lwmod)+02h
  2700  01B5  07FA               	addwf	0+(?___lwmod)+02h
  2701                           
  2702  01B6  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2703  01BB  0878               	movf	(0+(?___lwmod)),w
  2704  01BC  3E64               	addlw	low(064h)
  2705  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  2706  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  2707  01BF  00D2               	movwf	(ADCconvert@distance)
  2708  01C0  0879               	movf	(1+(?___lwmod)),w
  2709  01C1  1803               	skipnc
  2710  01C2  3E01               	addlw	1
  2711  01C3  3E00               	addlw	high(064h)
  2712  01C4  00D3               	movwf	1+(ADCconvert@distance)
  2713                           	line	75
  2714                           ;infrared.c: 75: }
  2715  01C5  2A4C               	goto	i1l2886
  2716                           	line	76
  2717                           	
  2718  01C6                     i1l2903:	
  2719                           	
  2720  01C6                     i1l8208:	
  2721                           ;infrared.c: 76: else if (adcVal < 45 && adcVal >= 40)
  2722  01C6  3000               	movlw	high(02Dh)
  2723  01C7  023D               	subwf	(ADCconvert@adcVal+1),w
  2724  01C8  302D               	movlw	low(02Dh)
  2725  01C9  1903               	skipnz
  2726  01CA  023C               	subwf	(ADCconvert@adcVal),w
  2727  01CB  1803               	skipnc
  2728  01CC  29CE               	goto	u346_21
  2729  01CD  29CF               	goto	u346_20
  2730  01CE                     u346_21:
  2731  01CE  29F2               	goto	i1l8214
  2732  01CF                     u346_20:
  2733                           	
  2734  01CF                     i1l8210:	
  2735  01CF  3000               	movlw	high(028h)
  2736  01D0  023D               	subwf	(ADCconvert@adcVal+1),w
  2737  01D1  3028               	movlw	low(028h)
  2738  01D2  1903               	skipnz
  2739  01D3  023C               	subwf	(ADCconvert@adcVal),w
  2740  01D4  1C03               	skipc
  2741  01D5  29D7               	goto	u347_21
  2742  01D6  29D8               	goto	u347_20
  2743  01D7                     u347_21:
  2744  01D7  29F2               	goto	i1l8214
  2745  01D8                     u347_20:
  2746                           	line	78
  2747                           	
  2748  01D8                     i1l8212:	
  2749                           ;infrared.c: 77: {
  2750                           ;infrared.c: 78: distance = 110+ (adcVal%100) ;
  2751  01D8  3064               	movlw	low(064h)
  2752  01D9  00F8               	movwf	(?___lwmod)
  2753  01DA  3000               	movlw	high(064h)
  2754  01DB  00F9               	movwf	((?___lwmod))+1
  2755  01DC  083D               	movf	(ADCconvert@adcVal+1),w
  2756  01DD  01FB               	clrf	1+(?___lwmod)+02h
  2757  01DE  07FB               	addwf	1+(?___lwmod)+02h
  2758  01DF  083C               	movf	(ADCconvert@adcVal),w
  2759  01E0  01FA               	clrf	0+(?___lwmod)+02h
  2760  01E1  07FA               	addwf	0+(?___lwmod)+02h
  2761                           
  2762  01E2  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2763  01E7  0878               	movf	(0+(?___lwmod)),w
  2764  01E8  3E6E               	addlw	low(06Eh)
  2765  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2766  01EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2767  01EB  00D2               	movwf	(ADCconvert@distance)
  2768  01EC  0879               	movf	(1+(?___lwmod)),w
  2769  01ED  1803               	skipnc
  2770  01EE  3E01               	addlw	1
  2771  01EF  3E00               	addlw	high(06Eh)
  2772  01F0  00D3               	movwf	1+(ADCconvert@distance)
  2773                           	line	79
  2774                           ;infrared.c: 79: }
  2775  01F1  2A4C               	goto	i1l2886
  2776                           	line	80
  2777                           	
  2778  01F2                     i1l2905:	
  2779                           	
  2780  01F2                     i1l8214:	
  2781                           ;infrared.c: 80: else if (adcVal < 40 && adcVal >= 33)
  2782  01F2  3000               	movlw	high(028h)
  2783  01F3  023D               	subwf	(ADCconvert@adcVal+1),w
  2784  01F4  3028               	movlw	low(028h)
  2785  01F5  1903               	skipnz
  2786  01F6  023C               	subwf	(ADCconvert@adcVal),w
  2787  01F7  1803               	skipnc
  2788  01F8  29FA               	goto	u348_21
  2789  01F9  29FB               	goto	u348_20
  2790  01FA                     u348_21:
  2791  01FA  2A1E               	goto	i1l8220
  2792  01FB                     u348_20:
  2793                           	
  2794  01FB                     i1l8216:	
  2795  01FB  3000               	movlw	high(021h)
  2796  01FC  023D               	subwf	(ADCconvert@adcVal+1),w
  2797  01FD  3021               	movlw	low(021h)
  2798  01FE  1903               	skipnz
  2799  01FF  023C               	subwf	(ADCconvert@adcVal),w
  2800  0200  1C03               	skipc
  2801  0201  2A03               	goto	u349_21
  2802  0202  2A04               	goto	u349_20
  2803  0203                     u349_21:
  2804  0203  2A1E               	goto	i1l8220
  2805  0204                     u349_20:
  2806                           	line	82
  2807                           	
  2808  0204                     i1l8218:	
  2809                           ;infrared.c: 81: {
  2810                           ;infrared.c: 82: distance = 120+ (adcVal%100) ;
  2811  0204  3064               	movlw	low(064h)
  2812  0205  00F8               	movwf	(?___lwmod)
  2813  0206  3000               	movlw	high(064h)
  2814  0207  00F9               	movwf	((?___lwmod))+1
  2815  0208  083D               	movf	(ADCconvert@adcVal+1),w
  2816  0209  01FB               	clrf	1+(?___lwmod)+02h
  2817  020A  07FB               	addwf	1+(?___lwmod)+02h
  2818  020B  083C               	movf	(ADCconvert@adcVal),w
  2819  020C  01FA               	clrf	0+(?___lwmod)+02h
  2820  020D  07FA               	addwf	0+(?___lwmod)+02h
  2821                           
  2822  020E  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2823  0213  0878               	movf	(0+(?___lwmod)),w
  2824  0214  3E78               	addlw	low(078h)
  2825  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  2826  0216  1303               	bcf	status, 6	;RP1=0, select bank0
  2827  0217  00D2               	movwf	(ADCconvert@distance)
  2828  0218  0879               	movf	(1+(?___lwmod)),w
  2829  0219  1803               	skipnc
  2830  021A  3E01               	addlw	1
  2831  021B  3E00               	addlw	high(078h)
  2832  021C  00D3               	movwf	1+(ADCconvert@distance)
  2833                           	line	83
  2834                           ;infrared.c: 83: }
  2835  021D  2A4C               	goto	i1l2886
  2836                           	line	84
  2837                           	
  2838  021E                     i1l2907:	
  2839                           	
  2840  021E                     i1l8220:	
  2841                           ;infrared.c: 84: else if (adcVal < 33 )
  2842  021E  3000               	movlw	high(021h)
  2843  021F  023D               	subwf	(ADCconvert@adcVal+1),w
  2844  0220  3021               	movlw	low(021h)
  2845  0221  1903               	skipnz
  2846  0222  023C               	subwf	(ADCconvert@adcVal),w
  2847  0223  1803               	skipnc
  2848  0224  2A26               	goto	u350_21
  2849  0225  2A27               	goto	u350_20
  2850  0226                     u350_21:
  2851  0226  2A4C               	goto	i1l2886
  2852  0227                     u350_20:
  2853                           	line	86
  2854                           	
  2855  0227                     i1l8222:	
  2856                           ;infrared.c: 85: {
  2857                           ;infrared.c: 86: distance = 130 + (adcVal%100) ;
  2858  0227  3064               	movlw	low(064h)
  2859  0228  00F8               	movwf	(?___lwmod)
  2860  0229  3000               	movlw	high(064h)
  2861  022A  00F9               	movwf	((?___lwmod))+1
  2862  022B  083D               	movf	(ADCconvert@adcVal+1),w
  2863  022C  01FB               	clrf	1+(?___lwmod)+02h
  2864  022D  07FB               	addwf	1+(?___lwmod)+02h
  2865  022E  083C               	movf	(ADCconvert@adcVal),w
  2866  022F  01FA               	clrf	0+(?___lwmod)+02h
  2867  0230  07FA               	addwf	0+(?___lwmod)+02h
  2868                           
  2869  0231  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  2870  0236  0878               	movf	(0+(?___lwmod)),w
  2871  0237  3E82               	addlw	low(082h)
  2872  0238  1283               	bcf	status, 5	;RP0=0, select bank0
  2873  0239  1303               	bcf	status, 6	;RP1=0, select bank0
  2874  023A  00D2               	movwf	(ADCconvert@distance)
  2875  023B  0879               	movf	(1+(?___lwmod)),w
  2876  023C  1803               	skipnc
  2877  023D  3E01               	addlw	1
  2878  023E  3E00               	addlw	high(082h)
  2879  023F  00D3               	movwf	1+(ADCconvert@distance)
  2880  0240  2A4C               	goto	i1l2886
  2881                           	line	87
  2882                           	
  2883  0241                     i1l2909:	
  2884  0241  2A4C               	goto	i1l2886
  2885                           	line	91
  2886                           	
  2887  0242                     i1l2908:	
  2888  0242  2A4C               	goto	i1l2886
  2889                           	
  2890  0243                     i1l2906:	
  2891  0243  2A4C               	goto	i1l2886
  2892                           	
  2893  0244                     i1l2904:	
  2894  0244  2A4C               	goto	i1l2886
  2895                           	
  2896  0245                     i1l2902:	
  2897  0245  2A4C               	goto	i1l2886
  2898                           	
  2899  0246                     i1l2900:	
  2900  0246  2A4C               	goto	i1l2886
  2901                           	
  2902  0247                     i1l2898:	
  2903  0247  2A4C               	goto	i1l2886
  2904                           	
  2905  0248                     i1l2896:	
  2906  0248  2A4C               	goto	i1l2886
  2907                           	
  2908  0249                     i1l2894:	
  2909  0249  2A4C               	goto	i1l2886
  2910                           	
  2911  024A                     i1l2892:	
  2912  024A  2A4C               	goto	i1l2886
  2913                           	
  2914  024B                     i1l2890:	
  2915  024B  2A4C               	goto	i1l2886
  2916                           	
  2917  024C                     i1l2888:	
  2918                           	
  2919  024C                     i1l2886:	
  2920                           ;infrared.c: 87: }
  2921                           ;infrared.c: 91: lcd_write_control(0b00000001);
  2922  024C  3001               	movlw	(01h)
  2923  024D  120A  118A  27B2   	fcall	i1_lcd_write_control
              120A  118A         
  2924                           	line	92
  2925                           	
  2926  0252                     i1l8224:	
  2927                           ;infrared.c: 92: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, distance);
  2928  0252  300B               	movlw	((STR_1-__stringbase))&0ffh
  2929  0253  1283               	bcf	status, 5	;RP0=0, select bank0
  2930  0254  1303               	bcf	status, 6	;RP1=0, select bank0
  2931  0255  00BE               	movwf	(??_ADCconvert+0)+0
  2932  0256  083E               	movf	(??_ADCconvert+0)+0,w
  2933  0257  00A0               	movwf	(?_sprintf)
  2934  0258  083D               	movf	(ADCconvert@adcVal+1),w
  2935  0259  01A2               	clrf	1+(?_sprintf)+01h
  2936  025A  07A2               	addwf	1+(?_sprintf)+01h
  2937  025B  083C               	movf	(ADCconvert@adcVal),w
  2938  025C  01A1               	clrf	0+(?_sprintf)+01h
  2939  025D  07A1               	addwf	0+(?_sprintf)+01h
  2940                           
  2941  025E  0853               	movf	(ADCconvert@distance+1),w
  2942  025F  01A4               	clrf	1+(?_sprintf)+03h
  2943  0260  07A4               	addwf	1+(?_sprintf)+03h
  2944  0261  0852               	movf	(ADCconvert@distance),w
  2945  0262  01A3               	clrf	0+(?_sprintf)+03h
  2946  0263  07A3               	addwf	0+(?_sprintf)+03h
  2947                           
  2948  0264  3042               	movlw	(ADCconvert@adcOutput)&0ffh
  2949  0265  120A  118A  2277   	fcall	_sprintf
              120A  118A         
  2950                           	line	93
  2951                           	
  2952  026A                     i1l8226:	
  2953                           ;infrared.c: 93: lcd_set_cursor(0x00);
  2954  026A  3000               	movlw	(0)
  2955  026B  120A  118A  27D9   	fcall	_lcd_set_cursor
              120A  118A         
  2956                           	line	94
  2957                           	
  2958  0270                     i1l8228:	
  2959                           ;infrared.c: 94: lcd_write_string(adcOutput);
  2960  0270  3042               	movlw	(ADCconvert@adcOutput)&0ffh
  2961  0271  120A  118A  2758   	fcall	_lcd_write_string
              120A  118A         
  2962                           	line	95
  2963                           	
  2964  0276                     i1l2910:	
  2965  0276  0008               	return
  2966                           	opt stack 0
  2967                           GLOBAL	__end_of_ADCconvert
  2968  0277                     	__end_of_ADCconvert:
  2969 ;; =============== function _ADCconvert ends ============
  2970                           
  2971                           	signat	_ADCconvert,4216
  2972                           	global	_readAvgDistance
  2973                           psect	text539,local,class=CODE,delta=2
  2974                           global __ptext539
  2975  04D9                     __ptext539:
  2976                           
  2977 ;; *************** function _readAvgDistance *****************
  2978 ;; Defined at:
  2979 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  i               2   26[BANK0 ] int 
  2984 ;;  adcOutput      16    6[BANK0 ] unsigned char [16]
  2985 ;;  fullval         2   24[BANK0 ] unsigned int 
  2986 ;;  averageval      2   22[BANK0 ] unsigned int 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  2    0[BANK0 ] unsigned int 
  2989 ;; Registers used:
  2990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         0       2       0       0       0
  2997 ;;      Locals:         0      22       0       0       0
  2998 ;;      Temps:          0       4       0       0       0
  2999 ;;      Totals:         0      28       0       0       0
  3000 ;;Total ram usage:       28 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    3
  3003 ;; This function calls:
  3004 ;;		_readDistance
  3005 ;;		___lwdiv
  3006 ;; This function is called by:
  3007 ;;		_isr1
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           psect	text539
  3011                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3012                           	line	10
  3013                           	global	__size_of_readAvgDistance
  3014  006C                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  3015                           	
  3016  04D9                     _readAvgDistance:	
  3017                           	opt	stack 0
  3018                           ; Regs used in _readAvgDistance: [allreg]
  3019                           	line	11
  3020                           	
  3021  04D9                     i1l8126:	
  3022                           ;infrared.c: 11: unsigned int fullval = 0, averageval;
  3023  04D9  1283               	bcf	status, 5	;RP0=0, select bank0
  3024  04DA  1303               	bcf	status, 6	;RP1=0, select bank0
  3025  04DB  01B8               	clrf	(readAvgDistance@fullval)
  3026  04DC  01B9               	clrf	(readAvgDistance@fullval+1)
  3027                           	line	12
  3028                           	
  3029  04DD                     i1l8128:	
  3030                           ;infrared.c: 12: char adcOutput[16] = "";
  3031  04DD  3026               	movlw	(readAvgDistance@adcOutput)&0ffh
  3032  04DE  0084               	movwf	fsr0
  3033  04DF  30D0               	movlw	low(readAvgDistance@F1184)
  3034  04E0  00A2               	movwf	(??_readAvgDistance+0)+0
  3035  04E1  0804               	movf	fsr0,w
  3036  04E2  00A3               	movwf	((??_readAvgDistance+0)+0+1)
  3037  04E3  3010               	movlw	16
  3038  04E4  00A4               	movwf	((??_readAvgDistance+0)+0+2)
  3039  04E5                     u323_20:
  3040  04E5  0822               	movf	(??_readAvgDistance+0)+0,w
  3041  04E6  0084               	movwf	fsr0
  3042  04E7  1383               	bcf	status, 7	;select IRP bank1
  3043                           	
  3044  04E8  0800               	movf	indf,w
  3045  04E9  00A5               	movwf	((??_readAvgDistance+0)+0+3)
  3046  04EA  0AA2               	incf	(??_readAvgDistance+0)+0,f
  3047  04EB  0823               	movf	((??_readAvgDistance+0)+0+1),w
  3048  04EC  0084               	movwf	fsr0
  3049                           	
  3050  04ED  0825               	movf	((??_readAvgDistance+0)+0+3),w
  3051  04EE  0080               	movwf	indf
  3052  04EF  0AA3               	incf	((??_readAvgDistance+0)+0+1),f
  3053  04F0  0BA4               	decfsz	((??_readAvgDistance+0)+0+2),f
  3054  04F1  2CE5               	goto	u323_20
  3055                           	line	14
  3056                           	
  3057  04F2                     i1l8130:	
  3058                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  3059  04F2  01BA               	clrf	(readAvgDistance@i)
  3060  04F3  01BB               	clrf	(readAvgDistance@i+1)
  3061                           	
  3062  04F4                     i1l8132:	
  3063  04F4  083B               	movf	(readAvgDistance@i+1),w
  3064  04F5  3A80               	xorlw	80h
  3065  04F6  00FF               	movwf	btemp+1
  3066  04F7  3080               	movlw	(high(0Ah))^80h
  3067  04F8  027F               	subwf	btemp+1,w
  3068  04F9  1D03               	skipz
  3069  04FA  2CFD               	goto	u324_25
  3070  04FB  300A               	movlw	low(0Ah)
  3071  04FC  023A               	subwf	(readAvgDistance@i),w
  3072  04FD                     u324_25:
  3073                           
  3074  04FD  1C03               	skipc
  3075  04FE  2D00               	goto	u324_21
  3076  04FF  2D01               	goto	u324_20
  3077  0500                     u324_21:
  3078  0500  2D03               	goto	i1l8136
  3079  0501                     u324_20:
  3080  0501  2D24               	goto	i1l8142
  3081                           	
  3082  0502                     i1l8134:	
  3083  0502  2D24               	goto	i1l8142
  3084                           	line	15
  3085                           	
  3086  0503                     i1l2875:	
  3087                           	line	16
  3088                           	
  3089  0503                     i1l8136:	
  3090                           ;infrared.c: 15: {
  3091                           ;infrared.c: 16: fullval += readDistance();
  3092  0503  120A  118A  279E   	fcall	_readDistance
              120A  118A         
  3093  0508  0878               	movf	(0+(?_readDistance)),w
  3094  0509  1283               	bcf	status, 5	;RP0=0, select bank0
  3095  050A  1303               	bcf	status, 6	;RP1=0, select bank0
  3096  050B  07B8               	addwf	(readAvgDistance@fullval),f
  3097  050C  1803               	skipnc
  3098  050D  0AB9               	incf	(readAvgDistance@fullval+1),f
  3099  050E  0879               	movf	(1+(?_readDistance)),w
  3100  050F  07B9               	addwf	(readAvgDistance@fullval+1),f
  3101                           	line	14
  3102                           	
  3103  0510                     i1l8138:	
  3104  0510  3001               	movlw	low(01h)
  3105  0511  07BA               	addwf	(readAvgDistance@i),f
  3106  0512  1803               	skipnc
  3107  0513  0ABB               	incf	(readAvgDistance@i+1),f
  3108  0514  3000               	movlw	high(01h)
  3109  0515  07BB               	addwf	(readAvgDistance@i+1),f
  3110                           	
  3111  0516                     i1l8140:	
  3112  0516  083B               	movf	(readAvgDistance@i+1),w
  3113  0517  3A80               	xorlw	80h
  3114  0518  00FF               	movwf	btemp+1
  3115  0519  3080               	movlw	(high(0Ah))^80h
  3116  051A  027F               	subwf	btemp+1,w
  3117  051B  1D03               	skipz
  3118  051C  2D1F               	goto	u325_25
  3119  051D  300A               	movlw	low(0Ah)
  3120  051E  023A               	subwf	(readAvgDistance@i),w
  3121  051F                     u325_25:
  3122                           
  3123  051F  1C03               	skipc
  3124  0520  2D22               	goto	u325_21
  3125  0521  2D23               	goto	u325_20
  3126  0522                     u325_21:
  3127  0522  2D03               	goto	i1l8136
  3128  0523                     u325_20:
  3129  0523  2D24               	goto	i1l8142
  3130                           	
  3131  0524                     i1l2876:	
  3132                           	line	19
  3133                           	
  3134  0524                     i1l8142:	
  3135                           ;infrared.c: 18: }
  3136                           ;infrared.c: 19: averageval = fullval / 10;
  3137  0524  300A               	movlw	low(0Ah)
  3138  0525  00F0               	movwf	(?___lwdiv)
  3139  0526  3000               	movlw	high(0Ah)
  3140  0527  00F1               	movwf	((?___lwdiv))+1
  3141  0528  1283               	bcf	status, 5	;RP0=0, select bank0
  3142  0529  1303               	bcf	status, 6	;RP1=0, select bank0
  3143  052A  0839               	movf	(readAvgDistance@fullval+1),w
  3144  052B  01F3               	clrf	1+(?___lwdiv)+02h
  3145  052C  07F3               	addwf	1+(?___lwdiv)+02h
  3146  052D  0838               	movf	(readAvgDistance@fullval),w
  3147  052E  01F2               	clrf	0+(?___lwdiv)+02h
  3148  052F  07F2               	addwf	0+(?___lwdiv)+02h
  3149                           
  3150  0530  120A  118A  2545   	fcall	___lwdiv
              120A  118A         
  3151  0535  0871               	movf	(1+(?___lwdiv)),w
  3152  0536  1283               	bcf	status, 5	;RP0=0, select bank0
  3153  0537  1303               	bcf	status, 6	;RP1=0, select bank0
  3154  0538  01B7               	clrf	(readAvgDistance@averageval+1)
  3155  0539  07B7               	addwf	(readAvgDistance@averageval+1)
  3156  053A  0870               	movf	(0+(?___lwdiv)),w
  3157  053B  01B6               	clrf	(readAvgDistance@averageval)
  3158  053C  07B6               	addwf	(readAvgDistance@averageval)
  3159                           
  3160                           	line	20
  3161                           	
  3162  053D                     i1l8144:	
  3163                           ;infrared.c: 20: return averageval;
  3164  053D  0837               	movf	(readAvgDistance@averageval+1),w
  3165  053E  01A1               	clrf	(?_readAvgDistance+1)
  3166  053F  07A1               	addwf	(?_readAvgDistance+1)
  3167  0540  0836               	movf	(readAvgDistance@averageval),w
  3168  0541  01A0               	clrf	(?_readAvgDistance)
  3169  0542  07A0               	addwf	(?_readAvgDistance)
  3170                           
  3171  0543  2D44               	goto	i1l2877
  3172                           	
  3173  0544                     i1l8146:	
  3174                           	line	21
  3175                           	
  3176  0544                     i1l2877:	
  3177  0544  0008               	return
  3178                           	opt stack 0
  3179                           GLOBAL	__end_of_readAvgDistance
  3180  0545                     	__end_of_readAvgDistance:
  3181 ;; =============== function _readAvgDistance ends ============
  3182                           
  3183                           	signat	_readAvgDistance,90
  3184                           	global	_readDistance
  3185                           psect	text540,local,class=CODE,delta=2
  3186                           global __ptext540
  3187  079E                     __ptext540:
  3188                           
  3189 ;; *************** function _readDistance *****************
  3190 ;; Defined at:
  3191 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  fullval         2   12[COMMON] unsigned int 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    8[COMMON] unsigned int 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         2       0       0       0       0
  3206 ;;      Locals:         2       0       0       0       0
  3207 ;;      Temps:          2       0       0       0       0
  3208 ;;      Totals:         6       0       0       0       0
  3209 ;;Total ram usage:        6 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    2
  3212 ;; This function calls:
  3213 ;;		_adc_read_channel
  3214 ;; This function is called by:
  3215 ;;		_readAvgDistance
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           psect	text540
  3219                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3220                           	line	24
  3221                           	global	__size_of_readDistance
  3222  0014                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3223                           	
  3224  079E                     _readDistance:	
  3225                           	opt	stack 0
  3226                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3227                           	line	27
  3228                           	
  3229  079E                     i1l8294:	
  3230                           ;infrared.c: 25: unsigned int fullval ;
  3231                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3232  079E  3000               	movlw	(0)
  3233  079F  120A  118A  25D7   	fcall	_adc_read_channel
              120A  118A         
  3234  07A4  00FA               	movwf	(??_readDistance+0)+0
  3235  07A5  01FB               	clrf	(??_readDistance+0)+0+1
  3236  07A6  087A               	movf	0+(??_readDistance+0)+0,w
  3237  07A7  00FC               	movwf	(readDistance@fullval)
  3238  07A8  087B               	movf	1+(??_readDistance+0)+0,w
  3239  07A9  00FD               	movwf	(readDistance@fullval+1)
  3240                           	line	29
  3241                           	
  3242  07AA                     i1l8296:	
  3243                           ;infrared.c: 29: return fullval;
  3244  07AA  087D               	movf	(readDistance@fullval+1),w
  3245  07AB  01F9               	clrf	(?_readDistance+1)
  3246  07AC  07F9               	addwf	(?_readDistance+1)
  3247  07AD  087C               	movf	(readDistance@fullval),w
  3248  07AE  01F8               	clrf	(?_readDistance)
  3249  07AF  07F8               	addwf	(?_readDistance)
  3250                           
  3251  07B0  2FB1               	goto	i1l2880
  3252                           	
  3253  07B1                     i1l8298:	
  3254                           	line	30
  3255                           	
  3256  07B1                     i1l2880:	
  3257  07B1  0008               	return
  3258                           	opt stack 0
  3259                           GLOBAL	__end_of_readDistance
  3260  07B2                     	__end_of_readDistance:
  3261 ;; =============== function _readDistance ends ============
  3262                           
  3263                           	signat	_readDistance,90
  3264                           	global	_lcd_write_string
  3265                           psect	text541,local,class=CODE,delta=2
  3266                           global __ptext541
  3267  0758                     __ptext541:
  3268                           
  3269 ;; *************** function _lcd_write_string *****************
  3270 ;; Defined at:
  3271 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  s               1    wreg     PTR unsigned char 
  3274 ;;		 -> ADCconvert@adcOutput(16), 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  s               1    4[COMMON] PTR unsigned char 
  3277 ;;		 -> ADCconvert@adcOutput(16), 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;		None               void
  3280 ;; Registers used:
  3281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3287 ;;      Params:         0       0       0       0       0
  3288 ;;      Locals:         1       0       0       0       0
  3289 ;;      Temps:          1       0       0       0       0
  3290 ;;      Totals:         2       0       0       0       0
  3291 ;;Total ram usage:        2 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    1
  3294 ;; This function calls:
  3295 ;;		_lcd_write_data
  3296 ;; This function is called by:
  3297 ;;		_ADCconvert
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           psect	text541
  3301                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3302                           	line	48
  3303                           	global	__size_of_lcd_write_string
  3304  001A                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3305                           	
  3306  0758                     _lcd_write_string:	
  3307                           	opt	stack 1
  3308                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3309                           ;lcd_write_string@s stored from wreg
  3310  0758  00F4               	movwf	(lcd_write_string@s)
  3311                           	line	50
  3312                           	
  3313  0759                     i1l8038:	
  3314                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3315  0759  2F68               	goto	i1l8044
  3316                           	
  3317  075A                     i1l1403:	
  3318                           	
  3319  075A                     i1l8040:	
  3320  075A  0874               	movf	(lcd_write_string@s),w
  3321  075B  0084               	movwf	fsr0
  3322  075C  1383               	bcf	status, 7	;select IRP bank0
  3323  075D  0800               	movf	indf,w
  3324  075E  120A  118A  27C6   	fcall	_lcd_write_data
              120A  118A         
  3325                           	
  3326  0763                     i1l8042:	
  3327  0763  3001               	movlw	(01h)
  3328  0764  00F3               	movwf	(??_lcd_write_string+0)+0
  3329  0765  0873               	movf	(??_lcd_write_string+0)+0,w
  3330  0766  07F4               	addwf	(lcd_write_string@s),f
  3331  0767  2F68               	goto	i1l8044
  3332                           	
  3333  0768                     i1l1402:	
  3334                           	
  3335  0768                     i1l8044:	
  3336  0768  0874               	movf	(lcd_write_string@s),w
  3337  0769  0084               	movwf	fsr0
  3338  076A  1383               	bcf	status, 7	;select IRP bank0
  3339  076B  0880               	movf	indf,f
  3340  076C  1D03               	skipz
  3341  076D  2F6F               	goto	u309_21
  3342  076E  2F70               	goto	u309_20
  3343  076F                     u309_21:
  3344  076F  2F5A               	goto	i1l8040
  3345  0770                     u309_20:
  3346  0770  2F71               	goto	i1l1405
  3347                           	
  3348  0771                     i1l1404:	
  3349                           	line	51
  3350                           	
  3351  0771                     i1l1405:	
  3352  0771  0008               	return
  3353                           	opt stack 0
  3354                           GLOBAL	__end_of_lcd_write_string
  3355  0772                     	__end_of_lcd_write_string:
  3356 ;; =============== function _lcd_write_string ends ============
  3357                           
  3358                           	signat	_lcd_write_string,4216
  3359                           	global	_lcd_set_cursor
  3360                           psect	text542,local,class=CODE,delta=2
  3361                           global __ptext542
  3362  07D9                     __ptext542:
  3363                           
  3364 ;; *************** function _lcd_set_cursor *****************
  3365 ;; Defined at:
  3366 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  address         1    wreg     unsigned char 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  address         1    3[COMMON] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0, pclath, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3380 ;;      Params:         0       0       0       0       0
  3381 ;;      Locals:         1       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0
  3383 ;;      Totals:         1       0       0       0       0
  3384 ;;Total ram usage:        1 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    1
  3387 ;; This function calls:
  3388 ;;		i1_lcd_write_control
  3389 ;; This function is called by:
  3390 ;;		_ADCconvert
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           psect	text542
  3394                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3395                           	line	42
  3396                           	global	__size_of_lcd_set_cursor
  3397  0009                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3398                           	
  3399  07D9                     _lcd_set_cursor:	
  3400                           	opt	stack 1
  3401                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3402                           ;lcd_set_cursor@address stored from wreg
  3403  07D9  00F3               	movwf	(lcd_set_cursor@address)
  3404                           	line	43
  3405                           	
  3406  07DA                     i1l8034:	
  3407                           ;lcd.c: 43: address |= 0b10000000;
  3408  07DA  17F3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3409                           	line	44
  3410                           	
  3411  07DB                     i1l8036:	
  3412                           ;lcd.c: 44: lcd_write_control(address);
  3413  07DB  0873               	movf	(lcd_set_cursor@address),w
  3414  07DC  120A  118A  27B2   	fcall	i1_lcd_write_control
              120A  118A         
  3415                           	line	45
  3416                           	
  3417  07E1                     i1l1399:	
  3418  07E1  0008               	return
  3419                           	opt stack 0
  3420                           GLOBAL	__end_of_lcd_set_cursor
  3421  07E2                     	__end_of_lcd_set_cursor:
  3422 ;; =============== function _lcd_set_cursor ends ============
  3423                           
  3424                           	signat	_lcd_set_cursor,4216
  3425                           	global	i1_lcd_write_control
  3426                           psect	text543,local,class=CODE,delta=2
  3427                           global __ptext543
  3428  07B2                     __ptext543:
  3429                           
  3430 ;; *************** function i1_lcd_write_control *****************
  3431 ;; Defined at:
  3432 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  lcd_write_co    1    wreg     unsigned char 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  lcd_write_co    1    2[COMMON] unsigned char 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		wreg
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3446 ;;      Params:         0       0       0       0       0
  3447 ;;      Locals:         1       0       0       0       0
  3448 ;;      Temps:          2       0       0       0       0
  3449 ;;      Totals:         3       0       0       0       0
  3450 ;;Total ram usage:        3 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_lcd_set_cursor
  3456 ;;		_ADCconvert
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           psect	text543
  3460                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3461                           	line	18
  3462                           	global	__size_ofi1_lcd_write_control
  3463  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
  3464                           	
  3465  07B2                     i1_lcd_write_control:	
  3466                           	opt	stack 1
  3467                           ; Regs used in i1_lcd_write_control: [wreg]
  3468                           ;i1lcd_write_control@databyte stored from wreg
  3469  07B2  00F2               	movwf	(i1lcd_write_control@databyte)
  3470                           	line	19
  3471                           	
  3472  07B3                     i1l8584:	
  3473                           ;lcd.c: 19: RE2 = 0;
  3474  07B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3475  07B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3476  07B5  1109               	bcf	(74/8),(74)&7
  3477                           	line	20
  3478                           ;lcd.c: 20: RE1 = 0;
  3479  07B6  1089               	bcf	(73/8),(73)&7
  3480                           	line	21
  3481                           ;lcd.c: 21: RE0 = 0;
  3482  07B7  1009               	bcf	(72/8),(72)&7
  3483                           	line	22
  3484                           	
  3485  07B8                     i1l8586:	
  3486                           ;lcd.c: 22: PORTD = databyte;
  3487  07B8  0872               	movf	(i1lcd_write_control@databyte),w
  3488  07B9  0088               	movwf	(8)	;volatile
  3489                           	line	23
  3490                           	
  3491  07BA                     i1l8588:	
  3492                           ;lcd.c: 23: RE2 = 1;
  3493  07BA  1509               	bsf	(74/8),(74)&7
  3494                           	line	24
  3495                           	
  3496  07BB                     i1l8590:	
  3497                           ;lcd.c: 24: RE2 = 0;
  3498  07BB  1109               	bcf	(74/8),(74)&7
  3499                           	line	25
  3500                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  3501                           	opt asmopt_off
  3502  07BC  300D               movlw	13
  3503  07BD  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
  3504  07BE  30FB               	movlw	251
  3505  07BF  00F0               movwf	((??i1_lcd_write_control+0)+0),f
  3506  07C0                     u407_27:
  3507  07C0  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
  3508  07C1  2FC0               	goto	u407_27
  3509  07C2  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
  3510  07C3  2FC0               	goto	u407_27
  3511  07C4  2FC5               	nop2
  3512                           opt asmopt_on
  3513                           
  3514                           	line	26
  3515                           	
  3516  07C5                     i1l1393:	
  3517  07C5  0008               	return
  3518                           	opt stack 0
  3519                           GLOBAL	__end_ofi1_lcd_write_control
  3520  07C6                     	__end_ofi1_lcd_write_control:
  3521 ;; =============== function i1_lcd_write_control ends ============
  3522                           
  3523                           	signat	i1_lcd_write_control,88
  3524                           	global	_sprintf
  3525                           psect	text544,local,class=CODE,delta=2
  3526                           global __ptext544
  3527  0277                     __ptext544:
  3528                           
  3529 ;; *************** function _sprintf *****************
  3530 ;; Defined at:
  3531 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  sp              1    wreg     PTR unsigned char 
  3534 ;;		 -> ADCconvert@adcOutput(16), 
  3535 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3536 ;;		 -> STR_1(15), 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  3539 ;;		 -> ADCconvert@adcOutput(16), 
  3540 ;;  _val            4   11[BANK0 ] struct .
  3541 ;;  c               1   16[BANK0 ] char 
  3542 ;;  prec            1   10[BANK0 ] char 
  3543 ;;  flag            1    9[BANK0 ] unsigned char 
  3544 ;;  ap              1    8[BANK0 ] PTR void [1]
  3545 ;;		 -> ?_sprintf(2), 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  2    0[BANK0 ] int 
  3548 ;; Registers used:
  3549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3555 ;;      Params:         0       5       0       0       0
  3556 ;;      Locals:         0       9       0       0       0
  3557 ;;      Temps:          0       3       0       0       0
  3558 ;;      Totals:         0      17       0       0       0
  3559 ;;Total ram usage:       17 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    1
  3562 ;; This function calls:
  3563 ;;		___lwdiv
  3564 ;;		___lwmod
  3565 ;; This function is called by:
  3566 ;;		_ADCconvert
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           psect	text544
  3570                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  3571                           	line	488
  3572                           	global	__size_of_sprintf
  3573  00FE                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  3574                           	
  3575  0277                     _sprintf:	
  3576                           	opt	stack 1
  3577                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3578                           ;sprintf@sp stored from wreg
  3579                           	line	537
  3580  0277  1283               	bcf	status, 5	;RP0=0, select bank0
  3581  0278  1303               	bcf	status, 6	;RP1=0, select bank0
  3582  0279  00AF               	movwf	(sprintf@sp)
  3583                           	
  3584  027A                     i1l8300:	
  3585  027A  3021               	movlw	(?_sprintf+01h)&0ffh
  3586  027B  00A5               	movwf	(??_sprintf+0)+0
  3587  027C  0825               	movf	(??_sprintf+0)+0,w
  3588  027D  00A8               	movwf	(sprintf@ap)
  3589                           	line	540
  3590  027E  2B5B               	goto	i1l8352
  3591                           	
  3592  027F                     i1l5109:	
  3593                           	line	542
  3594                           	
  3595  027F                     i1l8302:	
  3596  027F  0830               	movf	(sprintf@c),w
  3597  0280  3A25               	xorlw	025h
  3598  0281  1903               	skipnz
  3599  0282  2A84               	goto	u356_21
  3600  0283  2A85               	goto	u356_20
  3601  0284                     u356_21:
  3602  0284  2A91               	goto	i1l5110
  3603  0285                     u356_20:
  3604                           	line	545
  3605                           	
  3606  0285                     i1l8304:	
  3607  0285  0830               	movf	(sprintf@c),w
  3608  0286  00A5               	movwf	(??_sprintf+0)+0
  3609  0287  082F               	movf	(sprintf@sp),w
  3610  0288  0084               	movwf	fsr0
  3611  0289  0825               	movf	(??_sprintf+0)+0,w
  3612  028A  1383               	bcf	status, 7	;select IRP bank0
  3613  028B  0080               	movwf	indf
  3614                           	
  3615  028C                     i1l8306:	
  3616  028C  3001               	movlw	(01h)
  3617  028D  00A5               	movwf	(??_sprintf+0)+0
  3618  028E  0825               	movf	(??_sprintf+0)+0,w
  3619  028F  07AF               	addwf	(sprintf@sp),f
  3620                           	line	546
  3621  0290  2B5B               	goto	i1l8352
  3622                           	line	547
  3623                           	
  3624  0291                     i1l5110:	
  3625                           	line	552
  3626  0291  01A9               	clrf	(sprintf@flag)
  3627                           	line	638
  3628  0292  2A98               	goto	i1l8310
  3629                           	line	640
  3630                           	
  3631  0293                     i1l5112:	
  3632                           	line	641
  3633  0293  2B6F               	goto	i1l8354
  3634                           	line	700
  3635                           	
  3636  0294                     i1l5114:	
  3637  0294  2AAD               	goto	i1l8312
  3638                           	line	701
  3639                           	
  3640  0295                     i1l5115:	
  3641                           	line	702
  3642  0295  2AAD               	goto	i1l8312
  3643                           	line	805
  3644                           	
  3645  0296                     i1l5117:	
  3646                           	line	816
  3647  0296  2B5B               	goto	i1l8352
  3648                           	line	825
  3649                           	
  3650  0297                     i1l8308:	
  3651  0297  2AAD               	goto	i1l8312
  3652                           	line	638
  3653                           	
  3654  0298                     i1l5111:	
  3655                           	
  3656  0298                     i1l8310:	
  3657  0298  3001               	movlw	01h
  3658  0299  07A0               	addwf	(sprintf@f),f
  3659  029A  30FF               	movlw	-01h
  3660  029B  0720               	addwf	(sprintf@f),w
  3661  029C  0084               	movwf	fsr0
  3662  029D  120A  118A  2700   	fcall	stringdir
              120A  118A         
  3663  02A2  00B0               	movwf	(sprintf@c)
  3664                           	; Switch size 1, requested type "space"
  3665                           ; Number of cases is 3, Range of values is 0 to 105
  3666                           ; switch strategies available:
  3667                           ; Name         Instructions Cycles
  3668                           ; simple_byte           10     6 (average)
  3669                           ; jumptable            260     6 (fixed)
  3670                           ; rangetable           110     6 (fixed)
  3671                           ; spacedrange          218     9 (fixed)
  3672                           ; locatedrange         106     3 (fixed)
  3673                           ;	Chosen strategy is simple_byte
  3674                           
  3675                           	opt asmopt_off
  3676  02A3  3A00               	xorlw	0^0	; case 0
  3677  02A4  1903               	skipnz
  3678  02A5  2B6F               	goto	i1l8354
  3679  02A6  3A64               	xorlw	100^0	; case 100
  3680  02A7  1903               	skipnz
  3681  02A8  2AAD               	goto	i1l8312
  3682  02A9  3A0D               	xorlw	105^100	; case 105
  3683  02AA  1903               	skipnz
  3684  02AB  2AAD               	goto	i1l8312
  3685  02AC  2B5B               	goto	i1l8352
  3686                           	opt asmopt_on
  3687                           
  3688                           	line	825
  3689                           	
  3690  02AD                     i1l5116:	
  3691                           	line	1254
  3692                           	
  3693  02AD                     i1l8312:	
  3694  02AD  0828               	movf	(sprintf@ap),w
  3695  02AE  0084               	movwf	fsr0
  3696  02AF  1383               	bcf	status, 7	;select IRP bank0
  3697  02B0  0800               	movf	indf,w
  3698  02B1  00AB               	movwf	(sprintf@_val)
  3699  02B2  0A84               	incf	fsr0,f
  3700  02B3  0800               	movf	indf,w
  3701  02B4  00AC               	movwf	(sprintf@_val+1)
  3702                           	
  3703  02B5                     i1l8314:	
  3704  02B5  3002               	movlw	(02h)
  3705  02B6  00A5               	movwf	(??_sprintf+0)+0
  3706  02B7  0825               	movf	(??_sprintf+0)+0,w
  3707  02B8  07A8               	addwf	(sprintf@ap),f
  3708                           	line	1256
  3709                           	
  3710  02B9                     i1l8316:	
  3711  02B9  1FAC               	btfss	(sprintf@_val+1),7
  3712  02BA  2ABC               	goto	u357_21
  3713  02BB  2ABD               	goto	u357_20
  3714  02BC                     u357_21:
  3715  02BC  2AC7               	goto	i1l8322
  3716  02BD                     u357_20:
  3717                           	line	1257
  3718                           	
  3719  02BD                     i1l8318:	
  3720  02BD  3003               	movlw	(03h)
  3721  02BE  00A5               	movwf	(??_sprintf+0)+0
  3722  02BF  0825               	movf	(??_sprintf+0)+0,w
  3723  02C0  04A9               	iorwf	(sprintf@flag),f
  3724                           	line	1258
  3725                           	
  3726  02C1                     i1l8320:	
  3727  02C1  09AB               	comf	(sprintf@_val),f
  3728  02C2  09AC               	comf	(sprintf@_val+1),f
  3729  02C3  0AAB               	incf	(sprintf@_val),f
  3730  02C4  1903               	skipnz
  3731  02C5  0AAC               	incf	(sprintf@_val+1),f
  3732  02C6  2AC7               	goto	i1l8322
  3733                           	line	1259
  3734                           	
  3735  02C7                     i1l5118:	
  3736                           	line	1300
  3737                           	
  3738  02C7                     i1l8322:	
  3739  02C7  01B0               	clrf	(sprintf@c)
  3740  02C8  1403               	bsf	status,0
  3741  02C9  0DB0               	rlf	(sprintf@c),f
  3742                           	
  3743  02CA                     i1l8324:	
  3744  02CA  0830               	movf	(sprintf@c),w
  3745  02CB  3A05               	xorlw	05h
  3746  02CC  1D03               	skipz
  3747  02CD  2ACF               	goto	u358_21
  3748  02CE  2AD0               	goto	u358_20
  3749  02CF                     u358_21:
  3750  02CF  2AD2               	goto	i1l8328
  3751  02D0                     u358_20:
  3752  02D0  2AFA               	goto	i1l8336
  3753                           	
  3754  02D1                     i1l8326:	
  3755  02D1  2AFA               	goto	i1l8336
  3756                           	line	1301
  3757                           	
  3758  02D2                     i1l5119:	
  3759                           	
  3760  02D2                     i1l8328:	
  3761  02D2  0830               	movf	(sprintf@c),w
  3762  02D3  00A5               	movwf	(??_sprintf+0)+0
  3763  02D4  0725               	addwf	(??_sprintf+0)+0,w
  3764  02D5  3E01               	addlw	low((_dpowers-__stringbase))
  3765  02D6  0084               	movwf	fsr0
  3766  02D7  120A  118A  2700   	fcall	stringdir
              120A  118A         
  3767  02DC  00A6               	movwf	(??_sprintf+1)+0
  3768  02DD  120A  118A  2700   	fcall	stringdir
              120A  118A         
  3769  02E2  00A7               	movwf	(??_sprintf+1)+0+1
  3770  02E3  0827               	movf	1+(??_sprintf+1)+0,w
  3771  02E4  022C               	subwf	(sprintf@_val+1),w
  3772  02E5  1D03               	skipz
  3773  02E6  2AE9               	goto	u359_25
  3774  02E7  0826               	movf	0+(??_sprintf+1)+0,w
  3775  02E8  022B               	subwf	(sprintf@_val),w
  3776  02E9                     u359_25:
  3777  02E9  1803               	skipnc
  3778  02EA  2AEC               	goto	u359_21
  3779  02EB  2AED               	goto	u359_20
  3780  02EC                     u359_21:
  3781  02EC  2AEF               	goto	i1l8332
  3782  02ED                     u359_20:
  3783  02ED  2AFA               	goto	i1l8336
  3784                           	line	1302
  3785                           	
  3786  02EE                     i1l8330:	
  3787  02EE  2AFA               	goto	i1l8336
  3788                           	
  3789  02EF                     i1l5121:	
  3790                           	line	1300
  3791                           	
  3792  02EF                     i1l8332:	
  3793  02EF  3001               	movlw	(01h)
  3794  02F0  00A5               	movwf	(??_sprintf+0)+0
  3795  02F1  0825               	movf	(??_sprintf+0)+0,w
  3796  02F2  07B0               	addwf	(sprintf@c),f
  3797                           	
  3798  02F3                     i1l8334:	
  3799  02F3  0830               	movf	(sprintf@c),w
  3800  02F4  3A05               	xorlw	05h
  3801  02F5  1D03               	skipz
  3802  02F6  2AF8               	goto	u360_21
  3803  02F7  2AF9               	goto	u360_20
  3804  02F8                     u360_21:
  3805  02F8  2AD2               	goto	i1l8328
  3806  02F9                     u360_20:
  3807  02F9  2AFA               	goto	i1l8336
  3808                           	
  3809  02FA                     i1l5120:	
  3810                           	line	1433
  3811                           	
  3812  02FA                     i1l8336:	
  3813  02FA  0829               	movf	(sprintf@flag),w
  3814  02FB  3903               	andlw	03h
  3815  02FC  1903               	btfsc	status,2
  3816  02FD  2AFF               	goto	u361_21
  3817  02FE  2B00               	goto	u361_20
  3818  02FF                     u361_21:
  3819  02FF  2B0C               	goto	i1l8342
  3820  0300                     u361_20:
  3821                           	line	1434
  3822                           	
  3823  0300                     i1l8338:	
  3824  0300  302D               	movlw	(02Dh)
  3825  0301  00A5               	movwf	(??_sprintf+0)+0
  3826  0302  082F               	movf	(sprintf@sp),w
  3827  0303  0084               	movwf	fsr0
  3828  0304  0825               	movf	(??_sprintf+0)+0,w
  3829  0305  1383               	bcf	status, 7	;select IRP bank0
  3830  0306  0080               	movwf	indf
  3831                           	
  3832  0307                     i1l8340:	
  3833  0307  3001               	movlw	(01h)
  3834  0308  00A5               	movwf	(??_sprintf+0)+0
  3835  0309  0825               	movf	(??_sprintf+0)+0,w
  3836  030A  07AF               	addwf	(sprintf@sp),f
  3837  030B  2B0C               	goto	i1l8342
  3838                           	
  3839  030C                     i1l5122:	
  3840                           	line	1467
  3841                           	
  3842  030C                     i1l8342:	
  3843  030C  0830               	movf	(sprintf@c),w
  3844  030D  00A5               	movwf	(??_sprintf+0)+0
  3845  030E  0825               	movf	(??_sprintf+0)+0,w
  3846  030F  00AA               	movwf	(sprintf@prec)
  3847                           	line	1469
  3848  0310  2B4F               	goto	i1l8350
  3849                           	
  3850  0311                     i1l5124:	
  3851                           	line	1484
  3852                           	
  3853  0311                     i1l8344:	
  3854  0311  300A               	movlw	low(0Ah)
  3855  0312  00F8               	movwf	(?___lwmod)
  3856  0313  3000               	movlw	high(0Ah)
  3857  0314  00F9               	movwf	((?___lwmod))+1
  3858  0315  082A               	movf	(sprintf@prec),w
  3859  0316  00A5               	movwf	(??_sprintf+0)+0
  3860  0317  0725               	addwf	(??_sprintf+0)+0,w
  3861  0318  3E01               	addlw	low((_dpowers-__stringbase))
  3862  0319  0084               	movwf	fsr0
  3863  031A  120A  118A  2700   	fcall	stringdir
              120A  118A         
  3864  031F  00F0               	movwf	(?___lwdiv)
  3865  0320  120A  118A  2700   	fcall	stringdir
              120A  118A         
  3866  0325  00F1               	movwf	(?___lwdiv+1)
  3867  0326  082C               	movf	(sprintf@_val+1),w
  3868  0327  01F3               	clrf	1+(?___lwdiv)+02h
  3869  0328  07F3               	addwf	1+(?___lwdiv)+02h
  3870  0329  082B               	movf	(sprintf@_val),w
  3871  032A  01F2               	clrf	0+(?___lwdiv)+02h
  3872  032B  07F2               	addwf	0+(?___lwdiv)+02h
  3873                           
  3874  032C  120A  118A  2545   	fcall	___lwdiv
              120A  118A         
  3875  0331  0871               	movf	(1+(?___lwdiv)),w
  3876  0332  01FB               	clrf	1+(?___lwmod)+02h
  3877  0333  07FB               	addwf	1+(?___lwmod)+02h
  3878  0334  0870               	movf	(0+(?___lwdiv)),w
  3879  0335  01FA               	clrf	0+(?___lwmod)+02h
  3880  0336  07FA               	addwf	0+(?___lwmod)+02h
  3881                           
  3882  0337  120A  118A  2593   	fcall	___lwmod
              120A  118A         
  3883  033C  0878               	movf	(0+(?___lwmod)),w
  3884  033D  3E30               	addlw	030h
  3885  033E  1283               	bcf	status, 5	;RP0=0, select bank0
  3886  033F  1303               	bcf	status, 6	;RP1=0, select bank0
  3887  0340  00A6               	movwf	(??_sprintf+1)+0
  3888  0341  0826               	movf	(??_sprintf+1)+0,w
  3889  0342  00B0               	movwf	(sprintf@c)
  3890                           	line	1516
  3891                           	
  3892  0343                     i1l8346:	
  3893  0343  0830               	movf	(sprintf@c),w
  3894  0344  00A5               	movwf	(??_sprintf+0)+0
  3895  0345  082F               	movf	(sprintf@sp),w
  3896  0346  0084               	movwf	fsr0
  3897  0347  0825               	movf	(??_sprintf+0)+0,w
  3898  0348  1383               	bcf	status, 7	;select IRP bank0
  3899  0349  0080               	movwf	indf
  3900                           	
  3901  034A                     i1l8348:	
  3902  034A  3001               	movlw	(01h)
  3903  034B  00A5               	movwf	(??_sprintf+0)+0
  3904  034C  0825               	movf	(??_sprintf+0)+0,w
  3905  034D  07AF               	addwf	(sprintf@sp),f
  3906  034E  2B4F               	goto	i1l8350
  3907                           	line	1517
  3908                           	
  3909  034F                     i1l5123:	
  3910                           	line	1469
  3911                           	
  3912  034F                     i1l8350:	
  3913  034F  30FF               	movlw	(-1)
  3914  0350  00A5               	movwf	(??_sprintf+0)+0
  3915  0351  0825               	movf	(??_sprintf+0)+0,w
  3916  0352  07AA               	addwf	(sprintf@prec),f
  3917  0353  082A               	movf	((sprintf@prec)),w
  3918  0354  3AFF               	xorlw	-1
  3919  0355  1D03               	skipz
  3920  0356  2B58               	goto	u362_21
  3921  0357  2B59               	goto	u362_20
  3922  0358                     u362_21:
  3923  0358  2B11               	goto	i1l8344
  3924  0359                     u362_20:
  3925  0359  2B5B               	goto	i1l8352
  3926                           	
  3927  035A                     i1l5125:	
  3928  035A  2B5B               	goto	i1l8352
  3929                           	line	1525
  3930                           	
  3931  035B                     i1l5108:	
  3932                           	line	540
  3933                           	
  3934  035B                     i1l8352:	
  3935  035B  3001               	movlw	01h
  3936  035C  07A0               	addwf	(sprintf@f),f
  3937  035D  30FF               	movlw	-01h
  3938  035E  0720               	addwf	(sprintf@f),w
  3939  035F  0084               	movwf	fsr0
  3940  0360  120A  118A  2700   	fcall	stringdir
              120A  118A         
  3941  0365  00A5               	movwf	(??_sprintf+0)+0
  3942  0366  0825               	movf	(??_sprintf+0)+0,w
  3943  0367  00B0               	movwf	(sprintf@c)
  3944  0368  08B0               	movf	((sprintf@c)),f
  3945  0369  1D03               	skipz
  3946  036A  2B6C               	goto	u363_21
  3947  036B  2B6D               	goto	u363_20
  3948  036C                     u363_21:
  3949  036C  2A7F               	goto	i1l8302
  3950  036D                     u363_20:
  3951  036D  2B6F               	goto	i1l8354
  3952                           	
  3953  036E                     i1l5126:	
  3954  036E  2B6F               	goto	i1l8354
  3955                           	line	1527
  3956                           	
  3957  036F                     i1l5113:	
  3958                           	line	1530
  3959                           	
  3960  036F                     i1l8354:	
  3961  036F  082F               	movf	(sprintf@sp),w
  3962  0370  0084               	movwf	fsr0
  3963  0371  1383               	bcf	status, 7	;select IRP bank0
  3964  0372  0180               	clrf	indf
  3965  0373  2B74               	goto	i1l5127
  3966                           	line	1532
  3967                           	
  3968  0374                     i1l8356:	
  3969                           	line	1533
  3970                           ;	Return value of _sprintf is never used
  3971                           	
  3972  0374                     i1l5127:	
  3973  0374  0008               	return
  3974                           	opt stack 0
  3975                           GLOBAL	__end_of_sprintf
  3976  0375                     	__end_of_sprintf:
  3977 ;; =============== function _sprintf ends ============
  3978                           
  3979                           	signat	_sprintf,4698
  3980                           	global	_ReadButtons
  3981                           psect	text545,local,class=CODE,delta=2
  3982                           global __ptext545
  3983  064F                     __ptext545:
  3984                           
  3985 ;; *************** function _ReadButtons *****************
  3986 ;; Defined at:
  3987 ;;		line 116 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      unsigned char 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0, pclath, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4001 ;;      Params:         0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0
  4004 ;;      Totals:         0       0       0       0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:    1
  4008 ;; This function calls:
  4009 ;;		_Debounce
  4010 ;; This function is called by:
  4011 ;;		_isr1
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           psect	text545
  4015                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  4016                           	line	116
  4017                           	global	__size_of_ReadButtons
  4018  0032                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  4019                           	
  4020  064F                     _ReadButtons:	
  4021                           	opt	stack 2
  4022                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  4023                           	line	117
  4024                           	
  4025  064F                     i1l8230:	
  4026                           ;HMI.c: 117: Debounce();
  4027  064F  120A  118A  245D   	fcall	_Debounce
              120A  118A         
  4028                           	line	119
  4029                           	
  4030  0654                     i1l8232:	
  4031                           ;HMI.c: 119: if(UpPressed)
  4032  0654  1283               	bcf	status, 5	;RP0=0, select bank0
  4033  0655  1303               	bcf	status, 6	;RP1=0, select bank0
  4034  0656  1EDA               	btfss	(_UpPressed/8),(_UpPressed)&7
  4035  0657  2E59               	goto	u351_21
  4036  0658  2E5A               	goto	u351_20
  4037  0659                     u351_21:
  4038  0659  2E5E               	goto	i1l5094
  4039  065A                     u351_20:
  4040                           	line	121
  4041                           	
  4042  065A                     i1l8234:	
  4043                           ;HMI.c: 120: {
  4044                           ;HMI.c: 121: UpPressed = 0;
  4045  065A  12DA               	bcf	(_UpPressed/8),(_UpPressed)&7
  4046                           	line	122
  4047                           	
  4048  065B                     i1l8236:	
  4049                           ;HMI.c: 122: return 1;
  4050  065B  3001               	movlw	(01h)
  4051  065C  2E80               	goto	i1l5095
  4052                           	
  4053  065D                     i1l8238:	
  4054  065D  2E80               	goto	i1l5095
  4055                           	line	124
  4056                           	
  4057  065E                     i1l5094:	
  4058                           	line	126
  4059                           ;HMI.c: 124: }
  4060                           ;HMI.c: 126: if(DownPressed)
  4061  065E  1D59               	btfss	(_DownPressed/8),(_DownPressed)&7
  4062  065F  2E61               	goto	u352_21
  4063  0660  2E62               	goto	u352_20
  4064  0661                     u352_21:
  4065  0661  2E66               	goto	i1l5096
  4066  0662                     u352_20:
  4067                           	line	128
  4068                           	
  4069  0662                     i1l8240:	
  4070                           ;HMI.c: 127: {
  4071                           ;HMI.c: 128: DownPressed = 0;
  4072  0662  1159               	bcf	(_DownPressed/8),(_DownPressed)&7
  4073                           	line	129
  4074                           	
  4075  0663                     i1l8242:	
  4076                           ;HMI.c: 129: return 2;
  4077  0663  3002               	movlw	(02h)
  4078  0664  2E80               	goto	i1l5095
  4079                           	
  4080  0665                     i1l8244:	
  4081  0665  2E80               	goto	i1l5095
  4082                           	line	131
  4083                           	
  4084  0666                     i1l5096:	
  4085                           	line	132
  4086                           ;HMI.c: 131: }
  4087                           ;HMI.c: 132: if(LeftPressed)
  4088  0666  1E59               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  4089  0667  2E69               	goto	u353_21
  4090  0668  2E6A               	goto	u353_20
  4091  0669                     u353_21:
  4092  0669  2E6E               	goto	i1l5097
  4093  066A                     u353_20:
  4094                           	line	134
  4095                           	
  4096  066A                     i1l8246:	
  4097                           ;HMI.c: 133: {
  4098                           ;HMI.c: 134: LeftPressed = 0;
  4099  066A  1259               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  4100                           	line	135
  4101                           	
  4102  066B                     i1l8248:	
  4103                           ;HMI.c: 135: return 3;
  4104  066B  3003               	movlw	(03h)
  4105  066C  2E80               	goto	i1l5095
  4106                           	
  4107  066D                     i1l8250:	
  4108  066D  2E80               	goto	i1l5095
  4109                           	line	137
  4110                           	
  4111  066E                     i1l5097:	
  4112                           	line	138
  4113                           ;HMI.c: 137: }
  4114                           ;HMI.c: 138: if(RightPressed)
  4115  066E  1DDA               	btfss	(_RightPressed/8),(_RightPressed)&7
  4116  066F  2E71               	goto	u354_21
  4117  0670  2E72               	goto	u354_20
  4118  0671                     u354_21:
  4119  0671  2E76               	goto	i1l5098
  4120  0672                     u354_20:
  4121                           	line	140
  4122                           	
  4123  0672                     i1l8252:	
  4124                           ;HMI.c: 139: {
  4125                           ;HMI.c: 140: RightPressed = 0;
  4126  0672  11DA               	bcf	(_RightPressed/8),(_RightPressed)&7
  4127                           	line	141
  4128                           	
  4129  0673                     i1l8254:	
  4130                           ;HMI.c: 141: return 4;
  4131  0673  3004               	movlw	(04h)
  4132  0674  2E80               	goto	i1l5095
  4133                           	
  4134  0675                     i1l8256:	
  4135  0675  2E80               	goto	i1l5095
  4136                           	line	143
  4137                           	
  4138  0676                     i1l5098:	
  4139                           	line	145
  4140                           ;HMI.c: 143: }
  4141                           ;HMI.c: 145: if(CenterPressed)
  4142  0676  1C59               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  4143  0677  2E79               	goto	u355_21
  4144  0678  2E7A               	goto	u355_20
  4145  0679                     u355_21:
  4146  0679  2E7E               	goto	i1l8264
  4147  067A                     u355_20:
  4148                           	line	147
  4149                           	
  4150  067A                     i1l8258:	
  4151                           ;HMI.c: 146: {
  4152                           ;HMI.c: 147: CenterPressed = 0;
  4153  067A  1059               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  4154                           	line	148
  4155                           	
  4156  067B                     i1l8260:	
  4157                           ;HMI.c: 148: return 5;
  4158  067B  3005               	movlw	(05h)
  4159  067C  2E80               	goto	i1l5095
  4160                           	
  4161  067D                     i1l8262:	
  4162  067D  2E80               	goto	i1l5095
  4163                           	line	150
  4164                           	
  4165  067E                     i1l5099:	
  4166                           	line	151
  4167                           	
  4168  067E                     i1l8264:	
  4169                           ;HMI.c: 150: }
  4170                           ;HMI.c: 151: return 0;
  4171  067E  3000               	movlw	(0)
  4172  067F  2E80               	goto	i1l5095
  4173                           	
  4174  0680                     i1l8266:	
  4175                           	line	152
  4176                           	
  4177  0680                     i1l5095:	
  4178  0680  0008               	return
  4179                           	opt stack 0
  4180                           GLOBAL	__end_of_ReadButtons
  4181  0681                     	__end_of_ReadButtons:
  4182 ;; =============== function _ReadButtons ends ============
  4183                           
  4184                           	signat	_ReadButtons,89
  4185                           	global	_lcd_write_data
  4186                           psect	text546,local,class=CODE,delta=2
  4187                           global __ptext546
  4188  07C6                     __ptext546:
  4189                           
  4190 ;; *************** function _lcd_write_data *****************
  4191 ;; Defined at:
  4192 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  databyte        1    wreg     unsigned char 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  databyte        1    2[COMMON] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;		None               void
  4199 ;; Registers used:
  4200 ;;		wreg
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4206 ;;      Params:         0       0       0       0       0
  4207 ;;      Locals:         1       0       0       0       0
  4208 ;;      Temps:          2       0       0       0       0
  4209 ;;      Totals:         3       0       0       0       0
  4210 ;;Total ram usage:        3 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_lcd_write_string
  4216 ;;		_lcd_write_2_digit_bcd
  4217 ;;		_lcd_write_3_digit_bcd
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           psect	text546
  4221                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4222                           	line	30
  4223                           	global	__size_of_lcd_write_data
  4224  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  4225                           	
  4226  07C6                     _lcd_write_data:	
  4227                           	opt	stack 1
  4228                           ; Regs used in _lcd_write_data: [wreg]
  4229                           ;lcd_write_data@databyte stored from wreg
  4230  07C6  00F2               	movwf	(lcd_write_data@databyte)
  4231                           	line	31
  4232                           	
  4233  07C7                     i1l8026:	
  4234                           ;lcd.c: 31: RE2 = 0;
  4235  07C7  1283               	bcf	status, 5	;RP0=0, select bank0
  4236  07C8  1303               	bcf	status, 6	;RP1=0, select bank0
  4237  07C9  1109               	bcf	(74/8),(74)&7
  4238                           	line	32
  4239                           ;lcd.c: 32: RE1 = 0;
  4240  07CA  1089               	bcf	(73/8),(73)&7
  4241                           	line	33
  4242                           ;lcd.c: 33: RE0 = 1;
  4243  07CB  1409               	bsf	(72/8),(72)&7
  4244                           	line	34
  4245                           	
  4246  07CC                     i1l8028:	
  4247                           ;lcd.c: 34: PORTD = databyte;
  4248  07CC  0872               	movf	(lcd_write_data@databyte),w
  4249  07CD  0088               	movwf	(8)	;volatile
  4250                           	line	35
  4251                           	
  4252  07CE                     i1l8030:	
  4253                           ;lcd.c: 35: RE2 = 1;
  4254  07CE  1509               	bsf	(74/8),(74)&7
  4255                           	line	36
  4256                           	
  4257  07CF                     i1l8032:	
  4258                           ;lcd.c: 36: RE2 = 0;
  4259  07CF  1109               	bcf	(74/8),(74)&7
  4260                           	line	37
  4261                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  4262                           	opt asmopt_off
  4263  07D0  3007               movlw	7
  4264  07D1  00F1               movwf	((??_lcd_write_data+0)+0+1),f
  4265  07D2  307D               	movlw	125
  4266  07D3  00F0               movwf	((??_lcd_write_data+0)+0),f
  4267  07D4                     u408_27:
  4268  07D4  0BF0               	decfsz	((??_lcd_write_data+0)+0),f
  4269  07D5  2FD4               	goto	u408_27
  4270  07D6  0BF1               	decfsz	((??_lcd_write_data+0)+0+1),f
  4271  07D7  2FD4               	goto	u408_27
  4272                           opt asmopt_on
  4273                           
  4274                           	line	38
  4275                           	
  4276  07D8                     i1l1396:	
  4277  07D8  0008               	return
  4278                           	opt stack 0
  4279                           GLOBAL	__end_of_lcd_write_data
  4280  07D9                     	__end_of_lcd_write_data:
  4281 ;; =============== function _lcd_write_data ends ============
  4282                           
  4283                           	signat	_lcd_write_data,4216
  4284                           	global	_adc_read_channel
  4285                           psect	text547,local,class=CODE,delta=2
  4286                           global __ptext547
  4287  05D7                     __ptext547:
  4288                           
  4289 ;; *************** function _adc_read_channel *****************
  4290 ;; Defined at:
  4291 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  channel         1    wreg     unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  channel         1    7[COMMON] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      unsigned char 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4305 ;;      Params:         0       0       0       0       0
  4306 ;;      Locals:         1       0       0       0       0
  4307 ;;      Temps:          1       0       0       0       0
  4308 ;;      Totals:         2       0       0       0       0
  4309 ;;Total ram usage:        2 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    1
  4312 ;; This function calls:
  4313 ;;		_adc_read
  4314 ;; This function is called by:
  4315 ;;		_readDistance
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           psect	text547
  4319                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  4320                           	line	5
  4321                           	global	__size_of_adc_read_channel
  4322  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  4323                           	
  4324  05D7                     _adc_read_channel:	
  4325                           	opt	stack 0
  4326                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4327                           ;adc_read_channel@channel stored from wreg
  4328  05D7  00F7               	movwf	(adc_read_channel@channel)
  4329                           	line	6
  4330                           	
  4331  05D8                     i1l8000:	
  4332                           ;adc.c: 6: switch(channel)
  4333  05D8  2DFB               	goto	i1l8008
  4334                           	line	8
  4335                           ;adc.c: 7: {
  4336                           ;adc.c: 8: case 0:
  4337                           	
  4338  05D9                     i1l690:	
  4339                           	line	9
  4340                           ;adc.c: 9: CHS0 = 0;
  4341  05D9  1283               	bcf	status, 5	;RP0=0, select bank0
  4342  05DA  1303               	bcf	status, 6	;RP1=0, select bank0
  4343  05DB  119F               	bcf	(251/8),(251)&7
  4344                           	line	10
  4345                           ;adc.c: 10: CHS1 = 0;
  4346  05DC  121F               	bcf	(252/8),(252)&7
  4347                           	line	11
  4348                           ;adc.c: 11: CHS2 = 0;
  4349  05DD  129F               	bcf	(253/8),(253)&7
  4350                           	line	12
  4351                           ;adc.c: 12: break;
  4352  05DE  2E0C               	goto	i1l8010
  4353                           	line	13
  4354                           ;adc.c: 13: case 1:
  4355                           	
  4356  05DF                     i1l692:	
  4357                           	line	14
  4358                           ;adc.c: 14: CHS0 = 1;
  4359  05DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4360  05E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4361  05E1  159F               	bsf	(251/8),(251)&7
  4362                           	line	15
  4363                           ;adc.c: 15: CHS1 = 0;
  4364  05E2  121F               	bcf	(252/8),(252)&7
  4365                           	line	16
  4366                           ;adc.c: 16: CHS2 = 0;
  4367  05E3  129F               	bcf	(253/8),(253)&7
  4368                           	line	17
  4369                           ;adc.c: 17: break;
  4370  05E4  2E0C               	goto	i1l8010
  4371                           	line	18
  4372                           ;adc.c: 18: case 2:
  4373                           	
  4374  05E5                     i1l693:	
  4375                           	line	19
  4376                           ;adc.c: 19: CHS0 = 0;
  4377  05E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4378  05E6  1303               	bcf	status, 6	;RP1=0, select bank0
  4379  05E7  119F               	bcf	(251/8),(251)&7
  4380                           	line	20
  4381                           ;adc.c: 20: CHS1 = 1;
  4382  05E8  161F               	bsf	(252/8),(252)&7
  4383                           	line	21
  4384                           ;adc.c: 21: CHS2 = 0;
  4385  05E9  129F               	bcf	(253/8),(253)&7
  4386                           	line	22
  4387                           ;adc.c: 22: break;
  4388  05EA  2E0C               	goto	i1l8010
  4389                           	line	23
  4390                           ;adc.c: 23: case 3:
  4391                           	
  4392  05EB                     i1l694:	
  4393                           	line	24
  4394                           ;adc.c: 24: CHS0 = 1;
  4395  05EB  1283               	bcf	status, 5	;RP0=0, select bank0
  4396  05EC  1303               	bcf	status, 6	;RP1=0, select bank0
  4397  05ED  159F               	bsf	(251/8),(251)&7
  4398                           	line	25
  4399                           ;adc.c: 25: CHS1 = 1;
  4400  05EE  161F               	bsf	(252/8),(252)&7
  4401                           	line	26
  4402                           ;adc.c: 26: CHS2 = 0;
  4403  05EF  129F               	bcf	(253/8),(253)&7
  4404                           	line	27
  4405                           ;adc.c: 27: break;
  4406  05F0  2E0C               	goto	i1l8010
  4407                           	line	28
  4408                           ;adc.c: 28: case 4:
  4409                           	
  4410  05F1                     i1l695:	
  4411                           	line	29
  4412                           ;adc.c: 29: CHS0 = 0;
  4413  05F1  1283               	bcf	status, 5	;RP0=0, select bank0
  4414  05F2  1303               	bcf	status, 6	;RP1=0, select bank0
  4415  05F3  119F               	bcf	(251/8),(251)&7
  4416                           	line	30
  4417                           ;adc.c: 30: CHS1 = 0;
  4418  05F4  121F               	bcf	(252/8),(252)&7
  4419                           	line	31
  4420                           ;adc.c: 31: CHS2 = 1;
  4421  05F5  169F               	bsf	(253/8),(253)&7
  4422                           	line	32
  4423                           ;adc.c: 32: break;
  4424  05F6  2E0C               	goto	i1l8010
  4425                           	line	35
  4426                           ;adc.c: 35: default:
  4427                           	
  4428  05F7                     i1l696:	
  4429                           	line	36
  4430                           	
  4431  05F7                     i1l8002:	
  4432                           ;adc.c: 36: return 0;
  4433  05F7  3000               	movlw	(0)
  4434  05F8  2E17               	goto	i1l697
  4435                           	
  4436  05F9                     i1l8004:	
  4437  05F9  2E17               	goto	i1l697
  4438                           	line	37
  4439                           	
  4440  05FA                     i1l8006:	
  4441                           ;adc.c: 37: }
  4442  05FA  2E0C               	goto	i1l8010
  4443                           	line	6
  4444                           	
  4445  05FB                     i1l689:	
  4446                           	
  4447  05FB                     i1l8008:	
  4448  05FB  0877               	movf	(adc_read_channel@channel),w
  4449                           	; Switch size 1, requested type "space"
  4450                           ; Number of cases is 5, Range of values is 0 to 4
  4451                           ; switch strategies available:
  4452                           ; Name         Instructions Cycles
  4453                           ; simple_byte           16     9 (average)
  4454                           ; direct_byte           23     8 (fixed)
  4455                           ; jumptable            260     6 (fixed)
  4456                           ; rangetable             9     6 (fixed)
  4457                           ; spacedrange           16     9 (fixed)
  4458                           ; locatedrange           5     3 (fixed)
  4459                           ;	Chosen strategy is simple_byte
  4460                           
  4461                           	opt asmopt_off
  4462  05FC  3A00               	xorlw	0^0	; case 0
  4463  05FD  1903               	skipnz
  4464  05FE  2DD9               	goto	i1l690
  4465  05FF  3A01               	xorlw	1^0	; case 1
  4466  0600  1903               	skipnz
  4467  0601  2DDF               	goto	i1l692
  4468  0602  3A03               	xorlw	2^1	; case 2
  4469  0603  1903               	skipnz
  4470  0604  2DE5               	goto	i1l693
  4471  0605  3A01               	xorlw	3^2	; case 3
  4472  0606  1903               	skipnz
  4473  0607  2DEB               	goto	i1l694
  4474  0608  3A07               	xorlw	4^3	; case 4
  4475  0609  1903               	skipnz
  4476  060A  2DF1               	goto	i1l695
  4477  060B  2DF7               	goto	i1l8002
  4478                           	opt asmopt_on
  4479                           
  4480                           	line	37
  4481                           	
  4482  060C                     i1l691:	
  4483                           	line	39
  4484                           	
  4485  060C                     i1l8010:	
  4486                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  4487                           	opt asmopt_off
  4488  060C  3053               movlw	83
  4489  060D  00F6               movwf	(??_adc_read_channel+0)+0,f
  4490  060E                     u409_27:
  4491  060E  0BF6               decfsz	(??_adc_read_channel+0)+0,f
  4492  060F  2E0E               	goto	u409_27
  4493                           opt asmopt_on
  4494                           
  4495                           	line	41
  4496                           	
  4497  0610                     i1l8012:	
  4498                           ;adc.c: 41: return adc_read();
  4499  0610  120A  118A  26D4   	fcall	_adc_read
              120A  118A         
  4500  0615  0870               	movf	(0+(?_adc_read)),w
  4501  0616  2E17               	goto	i1l697
  4502                           	
  4503  0617                     i1l8014:	
  4504                           	line	43
  4505                           	
  4506  0617                     i1l697:	
  4507  0617  0008               	return
  4508                           	opt stack 0
  4509                           GLOBAL	__end_of_adc_read_channel
  4510  0618                     	__end_of_adc_read_channel:
  4511 ;; =============== function _adc_read_channel ends ============
  4512                           
  4513                           	signat	_adc_read_channel,4217
  4514                           	global	___lwmod
  4515                           psect	text548,local,class=CODE,delta=2
  4516                           global __ptext548
  4517  0593                     __ptext548:
  4518                           
  4519 ;; *************** function ___lwmod *****************
  4520 ;; Defined at:
  4521 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  divisor         2    8[COMMON] unsigned int 
  4524 ;;  dividend        2   10[COMMON] unsigned int 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  counter         1   13[COMMON] unsigned char 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  2    8[COMMON] unsigned int 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4536 ;;      Params:         4       0       0       0       0
  4537 ;;      Locals:         1       0       0       0       0
  4538 ;;      Temps:          1       0       0       0       0
  4539 ;;      Totals:         6       0       0       0       0
  4540 ;;Total ram usage:        6 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_isr1
  4546 ;;		_ADCconvert
  4547 ;;		_sprintf
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           psect	text548
  4551                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  4552                           	line	5
  4553                           	global	__size_of___lwmod
  4554  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4555                           	
  4556  0593                     ___lwmod:	
  4557                           	opt	stack 1
  4558                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4559                           	line	8
  4560                           	
  4561  0593                     i1l8562:	
  4562  0593  0879               	movf	(___lwmod@divisor+1),w
  4563  0594  0478               	iorwf	(___lwmod@divisor),w
  4564  0595  1903               	skipnz
  4565  0596  2D98               	goto	u399_21
  4566  0597  2D99               	goto	u399_20
  4567  0598                     u399_21:
  4568  0598  2DCF               	goto	i1l8580
  4569  0599                     u399_20:
  4570                           	line	9
  4571                           	
  4572  0599                     i1l8564:	
  4573  0599  01FD               	clrf	(___lwmod@counter)
  4574  059A  1403               	bsf	status,0
  4575  059B  0DFD               	rlf	(___lwmod@counter),f
  4576                           	line	10
  4577  059C  2DA9               	goto	i1l8570
  4578                           	
  4579  059D                     i1l5828:	
  4580                           	line	11
  4581                           	
  4582  059D                     i1l8566:	
  4583  059D  3001               	movlw	01h
  4584                           	
  4585  059E                     u400_25:
  4586  059E  1003               	clrc
  4587  059F  0DF8               	rlf	(___lwmod@divisor),f
  4588  05A0  0DF9               	rlf	(___lwmod@divisor+1),f
  4589  05A1  3EFF               	addlw	-1
  4590  05A2  1D03               	skipz
  4591  05A3  2D9E               	goto	u400_25
  4592                           	line	12
  4593                           	
  4594  05A4                     i1l8568:	
  4595  05A4  3001               	movlw	(01h)
  4596  05A5  00FC               	movwf	(??___lwmod+0)+0
  4597  05A6  087C               	movf	(??___lwmod+0)+0,w
  4598  05A7  07FD               	addwf	(___lwmod@counter),f
  4599  05A8  2DA9               	goto	i1l8570
  4600                           	line	13
  4601                           	
  4602  05A9                     i1l5827:	
  4603                           	line	10
  4604                           	
  4605  05A9                     i1l8570:	
  4606  05A9  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  4607  05AA  2DAC               	goto	u401_21
  4608  05AB  2DAD               	goto	u401_20
  4609  05AC                     u401_21:
  4610  05AC  2D9D               	goto	i1l8566
  4611  05AD                     u401_20:
  4612  05AD  2DAF               	goto	i1l8572
  4613                           	
  4614  05AE                     i1l5829:	
  4615  05AE  2DAF               	goto	i1l8572
  4616                           	line	14
  4617                           	
  4618  05AF                     i1l5830:	
  4619                           	line	15
  4620                           	
  4621  05AF                     i1l8572:	
  4622  05AF  0879               	movf	(___lwmod@divisor+1),w
  4623  05B0  027B               	subwf	(___lwmod@dividend+1),w
  4624  05B1  1D03               	skipz
  4625  05B2  2DB5               	goto	u402_25
  4626  05B3  0878               	movf	(___lwmod@divisor),w
  4627  05B4  027A               	subwf	(___lwmod@dividend),w
  4628  05B5                     u402_25:
  4629  05B5  1C03               	skipc
  4630  05B6  2DB8               	goto	u402_21
  4631  05B7  2DB9               	goto	u402_20
  4632  05B8                     u402_21:
  4633  05B8  2DC0               	goto	i1l8576
  4634  05B9                     u402_20:
  4635                           	line	16
  4636                           	
  4637  05B9                     i1l8574:	
  4638  05B9  0878               	movf	(___lwmod@divisor),w
  4639  05BA  02FA               	subwf	(___lwmod@dividend),f
  4640  05BB  0879               	movf	(___lwmod@divisor+1),w
  4641  05BC  1C03               	skipc
  4642  05BD  03FB               	decf	(___lwmod@dividend+1),f
  4643  05BE  02FB               	subwf	(___lwmod@dividend+1),f
  4644  05BF  2DC0               	goto	i1l8576
  4645                           	
  4646  05C0                     i1l5831:	
  4647                           	line	17
  4648                           	
  4649  05C0                     i1l8576:	
  4650  05C0  3001               	movlw	01h
  4651                           	
  4652  05C1                     u403_25:
  4653  05C1  1003               	clrc
  4654  05C2  0CF9               	rrf	(___lwmod@divisor+1),f
  4655  05C3  0CF8               	rrf	(___lwmod@divisor),f
  4656  05C4  3EFF               	addlw	-1
  4657  05C5  1D03               	skipz
  4658  05C6  2DC1               	goto	u403_25
  4659                           	line	18
  4660                           	
  4661  05C7                     i1l8578:	
  4662  05C7  3001               	movlw	low(01h)
  4663  05C8  02FD               	subwf	(___lwmod@counter),f
  4664  05C9  1D03               	btfss	status,2
  4665  05CA  2DCC               	goto	u404_21
  4666  05CB  2DCD               	goto	u404_20
  4667  05CC                     u404_21:
  4668  05CC  2DAF               	goto	i1l8572
  4669  05CD                     u404_20:
  4670  05CD  2DCF               	goto	i1l8580
  4671                           	
  4672  05CE                     i1l5832:	
  4673  05CE  2DCF               	goto	i1l8580
  4674                           	line	19
  4675                           	
  4676  05CF                     i1l5826:	
  4677                           	line	20
  4678                           	
  4679  05CF                     i1l8580:	
  4680  05CF  087B               	movf	(___lwmod@dividend+1),w
  4681  05D0  01F9               	clrf	(?___lwmod+1)
  4682  05D1  07F9               	addwf	(?___lwmod+1)
  4683  05D2  087A               	movf	(___lwmod@dividend),w
  4684  05D3  01F8               	clrf	(?___lwmod)
  4685  05D4  07F8               	addwf	(?___lwmod)
  4686                           
  4687  05D5  2DD6               	goto	i1l5833
  4688                           	
  4689  05D6                     i1l8582:	
  4690                           	line	21
  4691                           	
  4692  05D6                     i1l5833:	
  4693  05D6  0008               	return
  4694                           	opt stack 0
  4695                           GLOBAL	__end_of___lwmod
  4696  05D7                     	__end_of___lwmod:
  4697 ;; =============== function ___lwmod ends ============
  4698                           
  4699                           	signat	___lwmod,8314
  4700                           	global	___lwdiv
  4701                           psect	text549,local,class=CODE,delta=2
  4702                           global __ptext549
  4703  0545                     __ptext549:
  4704                           
  4705 ;; *************** function ___lwdiv *****************
  4706 ;; Defined at:
  4707 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  divisor         2    0[COMMON] unsigned int 
  4710 ;;  dividend        2    2[COMMON] unsigned int 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  quotient        2    5[COMMON] unsigned int 
  4713 ;;  counter         1    7[COMMON] unsigned char 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  2    0[COMMON] unsigned int 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4723 ;;      Params:         4       0       0       0       0
  4724 ;;      Locals:         3       0       0       0       0
  4725 ;;      Temps:          1       0       0       0       0
  4726 ;;      Totals:         8       0       0       0       0
  4727 ;;Total ram usage:        8 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_readAvgDistance
  4733 ;;		_sprintf
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           psect	text549
  4737                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  4738                           	line	5
  4739                           	global	__size_of___lwdiv
  4740  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4741                           	
  4742  0545                     ___lwdiv:	
  4743                           	opt	stack 1
  4744                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4745                           	line	9
  4746                           	
  4747  0545                     i1l8536:	
  4748  0545  01F5               	clrf	(___lwdiv@quotient)
  4749  0546  01F6               	clrf	(___lwdiv@quotient+1)
  4750                           	line	10
  4751                           	
  4752  0547                     i1l8538:	
  4753  0547  0871               	movf	(___lwdiv@divisor+1),w
  4754  0548  0470               	iorwf	(___lwdiv@divisor),w
  4755  0549  1903               	skipnz
  4756  054A  2D4C               	goto	u392_21
  4757  054B  2D4D               	goto	u392_20
  4758  054C                     u392_21:
  4759  054C  2D8B               	goto	i1l8558
  4760  054D                     u392_20:
  4761                           	line	11
  4762                           	
  4763  054D                     i1l8540:	
  4764  054D  01F7               	clrf	(___lwdiv@counter)
  4765  054E  1403               	bsf	status,0
  4766  054F  0DF7               	rlf	(___lwdiv@counter),f
  4767                           	line	12
  4768  0550  2D5D               	goto	i1l8546
  4769                           	
  4770  0551                     i1l5818:	
  4771                           	line	13
  4772                           	
  4773  0551                     i1l8542:	
  4774  0551  3001               	movlw	01h
  4775                           	
  4776  0552                     u393_25:
  4777  0552  1003               	clrc
  4778  0553  0DF0               	rlf	(___lwdiv@divisor),f
  4779  0554  0DF1               	rlf	(___lwdiv@divisor+1),f
  4780  0555  3EFF               	addlw	-1
  4781  0556  1D03               	skipz
  4782  0557  2D52               	goto	u393_25
  4783                           	line	14
  4784                           	
  4785  0558                     i1l8544:	
  4786  0558  3001               	movlw	(01h)
  4787  0559  00F4               	movwf	(??___lwdiv+0)+0
  4788  055A  0874               	movf	(??___lwdiv+0)+0,w
  4789  055B  07F7               	addwf	(___lwdiv@counter),f
  4790  055C  2D5D               	goto	i1l8546
  4791                           	line	15
  4792                           	
  4793  055D                     i1l5817:	
  4794                           	line	12
  4795                           	
  4796  055D                     i1l8546:	
  4797  055D  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  4798  055E  2D60               	goto	u394_21
  4799  055F  2D61               	goto	u394_20
  4800  0560                     u394_21:
  4801  0560  2D51               	goto	i1l8542
  4802  0561                     u394_20:
  4803  0561  2D63               	goto	i1l8548
  4804                           	
  4805  0562                     i1l5819:	
  4806  0562  2D63               	goto	i1l8548
  4807                           	line	16
  4808                           	
  4809  0563                     i1l5820:	
  4810                           	line	17
  4811                           	
  4812  0563                     i1l8548:	
  4813  0563  3001               	movlw	01h
  4814                           	
  4815  0564                     u395_25:
  4816  0564  1003               	clrc
  4817  0565  0DF5               	rlf	(___lwdiv@quotient),f
  4818  0566  0DF6               	rlf	(___lwdiv@quotient+1),f
  4819  0567  3EFF               	addlw	-1
  4820  0568  1D03               	skipz
  4821  0569  2D64               	goto	u395_25
  4822                           	line	18
  4823  056A  0871               	movf	(___lwdiv@divisor+1),w
  4824  056B  0273               	subwf	(___lwdiv@dividend+1),w
  4825  056C  1D03               	skipz
  4826  056D  2D70               	goto	u396_25
  4827  056E  0870               	movf	(___lwdiv@divisor),w
  4828  056F  0272               	subwf	(___lwdiv@dividend),w
  4829  0570                     u396_25:
  4830  0570  1C03               	skipc
  4831  0571  2D73               	goto	u396_21
  4832  0572  2D74               	goto	u396_20
  4833  0573                     u396_21:
  4834  0573  2D7C               	goto	i1l8554
  4835  0574                     u396_20:
  4836                           	line	19
  4837                           	
  4838  0574                     i1l8550:	
  4839  0574  0870               	movf	(___lwdiv@divisor),w
  4840  0575  02F2               	subwf	(___lwdiv@dividend),f
  4841  0576  0871               	movf	(___lwdiv@divisor+1),w
  4842  0577  1C03               	skipc
  4843  0578  03F3               	decf	(___lwdiv@dividend+1),f
  4844  0579  02F3               	subwf	(___lwdiv@dividend+1),f
  4845                           	line	20
  4846                           	
  4847  057A                     i1l8552:	
  4848  057A  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  4849  057B  2D7C               	goto	i1l8554
  4850                           	line	21
  4851                           	
  4852  057C                     i1l5821:	
  4853                           	line	22
  4854                           	
  4855  057C                     i1l8554:	
  4856  057C  3001               	movlw	01h
  4857                           	
  4858  057D                     u397_25:
  4859  057D  1003               	clrc
  4860  057E  0CF1               	rrf	(___lwdiv@divisor+1),f
  4861  057F  0CF0               	rrf	(___lwdiv@divisor),f
  4862  0580  3EFF               	addlw	-1
  4863  0581  1D03               	skipz
  4864  0582  2D7D               	goto	u397_25
  4865                           	line	23
  4866                           	
  4867  0583                     i1l8556:	
  4868  0583  3001               	movlw	low(01h)
  4869  0584  02F7               	subwf	(___lwdiv@counter),f
  4870  0585  1D03               	btfss	status,2
  4871  0586  2D88               	goto	u398_21
  4872  0587  2D89               	goto	u398_20
  4873  0588                     u398_21:
  4874  0588  2D63               	goto	i1l8548
  4875  0589                     u398_20:
  4876  0589  2D8B               	goto	i1l8558
  4877                           	
  4878  058A                     i1l5822:	
  4879  058A  2D8B               	goto	i1l8558
  4880                           	line	24
  4881                           	
  4882  058B                     i1l5816:	
  4883                           	line	25
  4884                           	
  4885  058B                     i1l8558:	
  4886  058B  0876               	movf	(___lwdiv@quotient+1),w
  4887  058C  01F1               	clrf	(?___lwdiv+1)
  4888  058D  07F1               	addwf	(?___lwdiv+1)
  4889  058E  0875               	movf	(___lwdiv@quotient),w
  4890  058F  01F0               	clrf	(?___lwdiv)
  4891  0590  07F0               	addwf	(?___lwdiv)
  4892                           
  4893  0591  2D92               	goto	i1l5823
  4894                           	
  4895  0592                     i1l8560:	
  4896                           	line	26
  4897                           	
  4898  0592                     i1l5823:	
  4899  0592  0008               	return
  4900                           	opt stack 0
  4901                           GLOBAL	__end_of___lwdiv
  4902  0593                     	__end_of___lwdiv:
  4903 ;; =============== function ___lwdiv ends ============
  4904                           
  4905                           	signat	___lwdiv,8314
  4906                           	global	_Debounce
  4907                           psect	text550,local,class=CODE,delta=2
  4908                           global __ptext550
  4909  045D                     __ptext550:
  4910                           
  4911 ;; *************** function _Debounce *****************
  4912 ;; Defined at:
  4913 ;;		line 36 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;		None               void
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4927 ;;      Params:         0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0
  4929 ;;      Temps:          1       0       0       0       0
  4930 ;;      Totals:         1       0       0       0       0
  4931 ;;Total ram usage:        1 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_ReadButtons
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           psect	text550
  4940                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  4941                           	line	36
  4942                           	global	__size_of_Debounce
  4943  007C                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  4944                           	
  4945  045D                     _Debounce:	
  4946                           	opt	stack 2
  4947                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  4948                           	line	38
  4949                           	
  4950  045D                     i1l8494:	
  4951                           ;HMI.c: 38: if(!RB2)
  4952  045D  1283               	bcf	status, 5	;RP0=0, select bank0
  4953  045E  1303               	bcf	status, 6	;RP1=0, select bank0
  4954  045F  1906               	btfsc	(50/8),(50)&7
  4955  0460  2C62               	goto	u377_21
  4956  0461  2C63               	goto	u377_20
  4957  0462                     u377_21:
  4958  0462  2C75               	goto	i1l5076
  4959  0463                     u377_20:
  4960                           	line	40
  4961                           	
  4962  0463                     i1l8496:	
  4963                           ;HMI.c: 39: {
  4964                           ;HMI.c: 40: UpDebounceCount++;
  4965  0463  3001               	movlw	(01h)
  4966  0464  00F0               	movwf	(??_Debounce+0)+0
  4967  0465  0870               	movf	(??_Debounce+0)+0,w
  4968  0466  07E1               	addwf	(_UpDebounceCount),f	;volatile
  4969                           	line	41
  4970                           	
  4971  0467                     i1l8498:	
  4972                           ;HMI.c: 41: if(UpDebounceCount >= 10 & UpReleased)
  4973  0467  300A               	movlw	(0Ah)
  4974  0468  0261               	subwf	(_UpDebounceCount),w	;volatile
  4975  0469  1C03               	skipc
  4976  046A  2C6C               	goto	u378_21
  4977  046B  2C6D               	goto	u378_20
  4978  046C                     u378_21:
  4979  046C  2C77               	goto	i1l5078
  4980  046D                     u378_20:
  4981                           	
  4982  046D                     i1l8500:	
  4983  046D  1F5A               	btfss	(_UpReleased/8),(_UpReleased)&7
  4984  046E  2C70               	goto	u379_21
  4985  046F  2C71               	goto	u379_20
  4986  0470                     u379_21:
  4987  0470  2C77               	goto	i1l5078
  4988  0471                     u379_20:
  4989                           	line	43
  4990                           	
  4991  0471                     i1l8502:	
  4992                           ;HMI.c: 42: {
  4993                           ;HMI.c: 43: UpPressed = 1;
  4994  0471  16DA               	bsf	(_UpPressed/8),(_UpPressed)&7
  4995                           	line	44
  4996                           ;HMI.c: 44: UpReleased = 0;
  4997  0472  135A               	bcf	(_UpReleased/8),(_UpReleased)&7
  4998  0473  2C77               	goto	i1l5078
  4999                           	line	45
  5000                           	
  5001  0474                     i1l5077:	
  5002                           	line	46
  5003                           ;HMI.c: 45: }
  5004                           ;HMI.c: 46: }
  5005  0474  2C77               	goto	i1l5078
  5006                           	line	47
  5007                           	
  5008  0475                     i1l5076:	
  5009                           	line	49
  5010                           ;HMI.c: 47: else
  5011                           ;HMI.c: 48: {
  5012                           ;HMI.c: 49: UpDebounceCount = 0;
  5013  0475  01E1               	clrf	(_UpDebounceCount)	;volatile
  5014                           	line	50
  5015                           ;HMI.c: 50: UpReleased = 1;
  5016  0476  175A               	bsf	(_UpReleased/8),(_UpReleased)&7
  5017                           	line	51
  5018                           	
  5019  0477                     i1l5078:	
  5020                           	line	54
  5021                           ;HMI.c: 51: }
  5022                           ;HMI.c: 54: if(!RB3)
  5023  0477  1986               	btfsc	(51/8),(51)&7
  5024  0478  2C7A               	goto	u380_21
  5025  0479  2C7B               	goto	u380_20
  5026  047A                     u380_21:
  5027  047A  2C8D               	goto	i1l5079
  5028  047B                     u380_20:
  5029                           	line	56
  5030                           	
  5031  047B                     i1l8504:	
  5032                           ;HMI.c: 55: {
  5033                           ;HMI.c: 56: DownDebounceCount++;
  5034  047B  3001               	movlw	(01h)
  5035  047C  00F0               	movwf	(??_Debounce+0)+0
  5036  047D  0870               	movf	(??_Debounce+0)+0,w
  5037  047E  07DE               	addwf	(_DownDebounceCount),f	;volatile
  5038                           	line	57
  5039                           	
  5040  047F                     i1l8506:	
  5041                           ;HMI.c: 57: if(DownDebounceCount >= 10 & DownReleased)
  5042  047F  300A               	movlw	(0Ah)
  5043  0480  025E               	subwf	(_DownDebounceCount),w	;volatile
  5044  0481  1C03               	skipc
  5045  0482  2C84               	goto	u381_21
  5046  0483  2C85               	goto	u381_20
  5047  0484                     u381_21:
  5048  0484  2C8F               	goto	i1l5081
  5049  0485                     u381_20:
  5050                           	
  5051  0485                     i1l8508:	
  5052  0485  1DD9               	btfss	(_DownReleased/8),(_DownReleased)&7
  5053  0486  2C88               	goto	u382_21
  5054  0487  2C89               	goto	u382_20
  5055  0488                     u382_21:
  5056  0488  2C8F               	goto	i1l5081
  5057  0489                     u382_20:
  5058                           	line	59
  5059                           	
  5060  0489                     i1l8510:	
  5061                           ;HMI.c: 58: {
  5062                           ;HMI.c: 59: DownPressed = 1;
  5063  0489  1559               	bsf	(_DownPressed/8),(_DownPressed)&7
  5064                           	line	60
  5065                           ;HMI.c: 60: DownReleased = 0;
  5066  048A  11D9               	bcf	(_DownReleased/8),(_DownReleased)&7
  5067  048B  2C8F               	goto	i1l5081
  5068                           	line	61
  5069                           	
  5070  048C                     i1l5080:	
  5071                           	line	62
  5072                           ;HMI.c: 61: }
  5073                           ;HMI.c: 62: }
  5074  048C  2C8F               	goto	i1l5081
  5075                           	line	63
  5076                           	
  5077  048D                     i1l5079:	
  5078                           	line	65
  5079                           ;HMI.c: 63: else
  5080                           ;HMI.c: 64: {
  5081                           ;HMI.c: 65: DownDebounceCount = 0;
  5082  048D  01DE               	clrf	(_DownDebounceCount)	;volatile
  5083                           	line	66
  5084                           ;HMI.c: 66: DownReleased = 1;
  5085  048E  15D9               	bsf	(_DownReleased/8),(_DownReleased)&7
  5086                           	line	67
  5087                           	
  5088  048F                     i1l5081:	
  5089                           	line	69
  5090                           ;HMI.c: 67: }
  5091                           ;HMI.c: 69: if(!RB4)
  5092  048F  1A06               	btfsc	(52/8),(52)&7
  5093  0490  2C92               	goto	u383_21
  5094  0491  2C93               	goto	u383_20
  5095  0492                     u383_21:
  5096  0492  2CA5               	goto	i1l5082
  5097  0493                     u383_20:
  5098                           	line	71
  5099                           	
  5100  0493                     i1l8512:	
  5101                           ;HMI.c: 70: {
  5102                           ;HMI.c: 71: LeftDebounceCount++;
  5103  0493  3001               	movlw	(01h)
  5104  0494  00F0               	movwf	(??_Debounce+0)+0
  5105  0495  0870               	movf	(??_Debounce+0)+0,w
  5106  0496  07DF               	addwf	(_LeftDebounceCount),f	;volatile
  5107                           	line	72
  5108                           	
  5109  0497                     i1l8514:	
  5110                           ;HMI.c: 72: if(LeftDebounceCount >= 10 & LeftReleased)
  5111  0497  300A               	movlw	(0Ah)
  5112  0498  025F               	subwf	(_LeftDebounceCount),w	;volatile
  5113  0499  1C03               	skipc
  5114  049A  2C9C               	goto	u384_21
  5115  049B  2C9D               	goto	u384_20
  5116  049C                     u384_21:
  5117  049C  2CA7               	goto	i1l5084
  5118  049D                     u384_20:
  5119                           	
  5120  049D                     i1l8516:	
  5121  049D  1ED9               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  5122  049E  2CA0               	goto	u385_21
  5123  049F  2CA1               	goto	u385_20
  5124  04A0                     u385_21:
  5125  04A0  2CA7               	goto	i1l5084
  5126  04A1                     u385_20:
  5127                           	line	74
  5128                           	
  5129  04A1                     i1l8518:	
  5130                           ;HMI.c: 73: {
  5131                           ;HMI.c: 74: LeftPressed = 1;
  5132  04A1  1659               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  5133                           	line	75
  5134                           ;HMI.c: 75: LeftReleased = 0;
  5135  04A2  12D9               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  5136  04A3  2CA7               	goto	i1l5084
  5137                           	line	76
  5138                           	
  5139  04A4                     i1l5083:	
  5140                           	line	77
  5141                           ;HMI.c: 76: }
  5142                           ;HMI.c: 77: }
  5143  04A4  2CA7               	goto	i1l5084
  5144                           	line	78
  5145                           	
  5146  04A5                     i1l5082:	
  5147                           	line	80
  5148                           ;HMI.c: 78: else
  5149                           ;HMI.c: 79: {
  5150                           ;HMI.c: 80: LeftDebounceCount = 0;
  5151  04A5  01DF               	clrf	(_LeftDebounceCount)	;volatile
  5152                           	line	81
  5153                           ;HMI.c: 81: LeftReleased = 1;
  5154  04A6  16D9               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  5155                           	line	82
  5156                           	
  5157  04A7                     i1l5084:	
  5158                           	line	84
  5159                           ;HMI.c: 82: }
  5160                           ;HMI.c: 84: if(!RB5)
  5161  04A7  1A86               	btfsc	(53/8),(53)&7
  5162  04A8  2CAA               	goto	u386_21
  5163  04A9  2CAB               	goto	u386_20
  5164  04AA                     u386_21:
  5165  04AA  2CBD               	goto	i1l5085
  5166  04AB                     u386_20:
  5167                           	line	86
  5168                           	
  5169  04AB                     i1l8520:	
  5170                           ;HMI.c: 85: {
  5171                           ;HMI.c: 86: RightDebounceCount++;
  5172  04AB  3001               	movlw	(01h)
  5173  04AC  00F0               	movwf	(??_Debounce+0)+0
  5174  04AD  0870               	movf	(??_Debounce+0)+0,w
  5175  04AE  07E0               	addwf	(_RightDebounceCount),f	;volatile
  5176                           	line	87
  5177                           	
  5178  04AF                     i1l8522:	
  5179                           ;HMI.c: 87: if(RightDebounceCount >= 10 & RightReleased)
  5180  04AF  300A               	movlw	(0Ah)
  5181  04B0  0260               	subwf	(_RightDebounceCount),w	;volatile
  5182  04B1  1C03               	skipc
  5183  04B2  2CB4               	goto	u387_21
  5184  04B3  2CB5               	goto	u387_20
  5185  04B4                     u387_21:
  5186  04B4  2CBF               	goto	i1l5087
  5187  04B5                     u387_20:
  5188                           	
  5189  04B5                     i1l8524:	
  5190  04B5  1E5A               	btfss	(_RightReleased/8),(_RightReleased)&7
  5191  04B6  2CB8               	goto	u388_21
  5192  04B7  2CB9               	goto	u388_20
  5193  04B8                     u388_21:
  5194  04B8  2CBF               	goto	i1l5087
  5195  04B9                     u388_20:
  5196                           	line	89
  5197                           	
  5198  04B9                     i1l8526:	
  5199                           ;HMI.c: 88: {
  5200                           ;HMI.c: 89: RightPressed = 1;
  5201  04B9  15DA               	bsf	(_RightPressed/8),(_RightPressed)&7
  5202                           	line	90
  5203                           ;HMI.c: 90: RightReleased = 0;
  5204  04BA  125A               	bcf	(_RightReleased/8),(_RightReleased)&7
  5205  04BB  2CBF               	goto	i1l5087
  5206                           	line	91
  5207                           	
  5208  04BC                     i1l5086:	
  5209                           	line	92
  5210                           ;HMI.c: 91: }
  5211                           ;HMI.c: 92: }
  5212  04BC  2CBF               	goto	i1l5087
  5213                           	line	93
  5214                           	
  5215  04BD                     i1l5085:	
  5216                           	line	95
  5217                           ;HMI.c: 93: else
  5218                           ;HMI.c: 94: {
  5219                           ;HMI.c: 95: RightDebounceCount = 0;
  5220  04BD  01E0               	clrf	(_RightDebounceCount)	;volatile
  5221                           	line	96
  5222                           ;HMI.c: 96: RightReleased = 1;
  5223  04BE  165A               	bsf	(_RightReleased/8),(_RightReleased)&7
  5224                           	line	97
  5225                           	
  5226  04BF                     i1l5087:	
  5227                           	line	99
  5228                           ;HMI.c: 97: }
  5229                           ;HMI.c: 99: if(!RB6)
  5230  04BF  1B06               	btfsc	(54/8),(54)&7
  5231  04C0  2CC2               	goto	u389_21
  5232  04C1  2CC3               	goto	u389_20
  5233  04C2                     u389_21:
  5234  04C2  2CD5               	goto	i1l5088
  5235  04C3                     u389_20:
  5236                           	line	101
  5237                           	
  5238  04C3                     i1l8528:	
  5239                           ;HMI.c: 100: {
  5240                           ;HMI.c: 101: CenterDebounceCount++;
  5241  04C3  3001               	movlw	(01h)
  5242  04C4  00F0               	movwf	(??_Debounce+0)+0
  5243  04C5  0870               	movf	(??_Debounce+0)+0,w
  5244  04C6  07DD               	addwf	(_CenterDebounceCount),f	;volatile
  5245                           	line	102
  5246                           	
  5247  04C7                     i1l8530:	
  5248                           ;HMI.c: 102: if(CenterDebounceCount >= 10 & CenterReleased)
  5249  04C7  300A               	movlw	(0Ah)
  5250  04C8  025D               	subwf	(_CenterDebounceCount),w	;volatile
  5251  04C9  1C03               	skipc
  5252  04CA  2CCC               	goto	u390_21
  5253  04CB  2CCD               	goto	u390_20
  5254  04CC                     u390_21:
  5255  04CC  2CD8               	goto	i1l5091
  5256  04CD                     u390_20:
  5257                           	
  5258  04CD                     i1l8532:	
  5259  04CD  1CD9               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  5260  04CE  2CD0               	goto	u391_21
  5261  04CF  2CD1               	goto	u391_20
  5262  04D0                     u391_21:
  5263  04D0  2CD8               	goto	i1l5091
  5264  04D1                     u391_20:
  5265                           	line	104
  5266                           	
  5267  04D1                     i1l8534:	
  5268                           ;HMI.c: 103: {
  5269                           ;HMI.c: 104: CenterPressed = 1;
  5270  04D1  1459               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  5271                           	line	105
  5272                           ;HMI.c: 105: CenterReleased = 0;
  5273  04D2  10D9               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  5274  04D3  2CD8               	goto	i1l5091
  5275                           	line	106
  5276                           	
  5277  04D4                     i1l5089:	
  5278                           	line	107
  5279                           ;HMI.c: 106: }
  5280                           ;HMI.c: 107: }
  5281  04D4  2CD8               	goto	i1l5091
  5282                           	line	108
  5283                           	
  5284  04D5                     i1l5088:	
  5285                           	line	110
  5286                           ;HMI.c: 108: else
  5287                           ;HMI.c: 109: {
  5288                           ;HMI.c: 110: CenterDebounceCount = 0;
  5289  04D5  01DD               	clrf	(_CenterDebounceCount)	;volatile
  5290                           	line	111
  5291                           ;HMI.c: 111: CenterReleased = 1;
  5292  04D6  14D9               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  5293  04D7  2CD8               	goto	i1l5091
  5294                           	line	112
  5295                           	
  5296  04D8                     i1l5090:	
  5297                           	line	113
  5298                           	
  5299  04D8                     i1l5091:	
  5300  04D8  0008               	return
  5301                           	opt stack 0
  5302                           GLOBAL	__end_of_Debounce
  5303  04D9                     	__end_of_Debounce:
  5304 ;; =============== function _Debounce ends ============
  5305                           
  5306                           	signat	_Debounce,88
  5307                           	global	_adc_read
  5308                           psect	text551,local,class=CODE,delta=2
  5309                           global __ptext551
  5310  06D4                     __ptext551:
  5311                           
  5312 ;; *************** function _adc_read *****************
  5313 ;; Defined at:
  5314 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  adc_value       2    4[COMMON] volatile unsigned int 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  2    0[COMMON] unsigned int 
  5321 ;; Registers used:
  5322 ;;		wreg, status,2, status,0
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5328 ;;      Params:         2       0       0       0       0
  5329 ;;      Locals:         2       0       0       0       0
  5330 ;;      Temps:          2       0       0       0       0
  5331 ;;      Totals:         6       0       0       0       0
  5332 ;;Total ram usage:        6 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_adc_read_channel
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           psect	text551
  5341                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5342                           	line	61
  5343                           	global	__size_of_adc_read
  5344  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  5345                           	
  5346  06D4                     _adc_read:	
  5347                           	opt	stack 0
  5348                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  5349                           	line	64
  5350                           	
  5351  06D4                     i1l8016:	
  5352                           ;adc.c: 62: volatile unsigned int adc_value;
  5353                           ;adc.c: 64: ADRESH = 0;
  5354  06D4  1283               	bcf	status, 5	;RP0=0, select bank0
  5355  06D5  1303               	bcf	status, 6	;RP1=0, select bank0
  5356  06D6  019E               	clrf	(30)	;volatile
  5357                           	line	66
  5358                           	
  5359  06D7                     i1l8018:	
  5360                           ;adc.c: 66: GO = 1;
  5361  06D7  151F               	bsf	(250/8),(250)&7
  5362                           	line	67
  5363                           ;adc.c: 67: while(GO) continue;
  5364  06D8  2ED9               	goto	i1l703
  5365                           	
  5366  06D9                     i1l704:	
  5367                           	
  5368  06D9                     i1l703:	
  5369  06D9  191F               	btfsc	(250/8),(250)&7
  5370  06DA  2EDC               	goto	u307_21
  5371  06DB  2EDD               	goto	u307_20
  5372  06DC                     u307_21:
  5373  06DC  2ED9               	goto	i1l703
  5374  06DD                     u307_20:
  5375                           	
  5376  06DD                     i1l705:	
  5377                           	line	68
  5378                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  5379  06DD  0000               nop ;#
  5380                           	line	69
  5381                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  5382  06DE  0000               nop ;#
  5383                           	line	70
  5384                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  5385  06DF  0000               nop ;#
  5386                           psect	text551
  5387                           	line	73
  5388                           	
  5389  06E0                     i1l8020:	
  5390                           ;adc.c: 73: adc_value = ADRESH;
  5391  06E0  1283               	bcf	status, 5	;RP0=0, select bank0
  5392  06E1  1303               	bcf	status, 6	;RP1=0, select bank0
  5393  06E2  081E               	movf	(30),w	;volatile
  5394  06E3  00F2               	movwf	(??_adc_read+0)+0
  5395  06E4  01F3               	clrf	(??_adc_read+0)+0+1
  5396  06E5  0872               	movf	0+(??_adc_read+0)+0,w
  5397  06E6  00F4               	movwf	(adc_read@adc_value)	;volatile
  5398  06E7  0873               	movf	1+(??_adc_read+0)+0,w
  5399  06E8  00F5               	movwf	(adc_read@adc_value+1)	;volatile
  5400                           	line	74
  5401                           ;adc.c: 74: adc_value <<= 1;
  5402  06E9  3001               	movlw	01h
  5403                           	
  5404  06EA                     u308_25:
  5405  06EA  1003               	clrc
  5406  06EB  0DF4               	rlf	(adc_read@adc_value),f	;volatile
  5407  06EC  0DF5               	rlf	(adc_read@adc_value+1),f	;volatile
  5408  06ED  3EFF               	addlw	-1
  5409  06EE  1D03               	skipz
  5410  06EF  2EEA               	goto	u308_25
  5411                           	line	75
  5412                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  5413  06F0  1683               	bsf	status, 5	;RP0=1, select bank1
  5414  06F1  1303               	bcf	status, 6	;RP1=0, select bank1
  5415  06F2  081E               	movf	(158)^080h,w	;volatile
  5416                           	line	78
  5417                           	
  5418  06F3                     i1l8022:	
  5419                           ;adc.c: 78: return (adc_value);
  5420  06F3  0875               	movf	(adc_read@adc_value+1),w	;volatile
  5421  06F4  01F1               	clrf	(?_adc_read+1)
  5422  06F5  07F1               	addwf	(?_adc_read+1)
  5423  06F6  0874               	movf	(adc_read@adc_value),w	;volatile
  5424  06F7  01F0               	clrf	(?_adc_read)
  5425  06F8  07F0               	addwf	(?_adc_read)
  5426                           
  5427  06F9  2EFA               	goto	i1l706
  5428                           	
  5429  06FA                     i1l8024:	
  5430                           	line	79
  5431                           	
  5432  06FA                     i1l706:	
  5433  06FA  0008               	return
  5434                           	opt stack 0
  5435                           GLOBAL	__end_of_adc_read
  5436  06FB                     	__end_of_adc_read:
  5437 ;; =============== function _adc_read ends ============
  5438                           
  5439                           	signat	_adc_read,90
  5440                           psect	text552,local,class=CODE,delta=2
  5441                           global __ptext552
  5442  0000                     __ptext552:
  5443                           	global	btemp
  5444  007E                     	btemp set 07Eh
  5445                           
  5446                           	DABS	1,126,2	;btemp
  5447                           	global	wtemp0
  5448  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 17 10:12:40 2015

   __end_of_lcd_write_control 0758                             pc 0002                            _GO 00FA  
                          _RD 0C60                            _WR 0C61                            fsr 0004  
                         l700 079D                           _GIE 005F                           _RB0 0030  
                         _RB1 0031                           _RB2 0032                           _RB3 0033  
                         _RB4 0034                           _RB5 0035                           _RE0 0048  
                         _RB6 0036                           _RE1 0049                           _RE2 004A  
                         _RX9 00C6                           _TX9 04C6                           fsr0 0004  
                         indf 0000               ?_lcd_set_cursor 0070                          l1423 06AB  
                        l2162 0789                          l2170 0629                          l2171 062D  
                        l2172 0631                          l2173 0635                          l2165 061E  
                        l2174 064B                          l2166 0637                          l2175 064C  
                        l2167 061F                          l2176 064C                          l2168 064A  
                        l1393 0757                          l2169 0625                          l4361 06D3  
                        l8270 06AF                          l8280 06BA                          l8272 06B3  
                        l8600 0799                          l8290 06C5                          l8282 06BD  
                        l8274 06B4                          l8602 073F                          l8610 0681  
                        l8292 06C6                          l8284 06C0                          l8276 06B6  
                        l8268 06AC                          l8604 0744                          l8620 068D  
                        l8612 0685                          l8286 06C1                          l8278 06B7  
                        l8606 074A                          l8622 0693                          l8614 0688  
                        l8630 0772                          l8288 06C4                          l8608 074B  
                        l8624 0699                          l8616 0689                          l8632 0781  
                        l8640 0618                          l8626 069F                          l8618 068C  
                        l8634 0785                          l8650 0629                          l8642 061F  
                        l8628 06A5                          l8636 0787                          l8660 0633  
                        l8652 062B                          l8644 0623                          l8638 0788  
                        l8662 0636                          l8654 062D                          l8646 0625  
                        l8592 078A                          l8656 062F                          l8648 0627  
                        l8664 0637                          l8594 078D                          l8658 0631  
                        l8596 0791                          l8598 0795                          _CHS0 00FB  
                        _CHS1 00FC                          _CHS2 00FD                          STR_1 0710  
                        _BRGH 04C2                          _CREN 00C4                          u4057 0752  
                        u4067 079B                          _RCIE 0465                          _RCIF 0065  
                        _OERR 00C1                          _TMR0 0001                          _SPEN 00C7  
                        _TXIE 0464                          _WREN 0C62                          _TXEN 04C5  
                        _TXIF 0064                          _SYNC 04C4           __size_of_ADCconvert 0262  
      __end_of_lcd_write_data 07D9                          _isr1 0375                          _main 0618  
                        _init 0772                          btemp 007E                _CenterReleased 02C9  
                        start 0012                 ??_ReadButtons 0071  __size_ofi1_lcd_write_control 0014  
                       ?_isr1 0070                         ?_main 0070                         ?_init 0070  
                       _EEADR 010D                         _CARRY 0018               __end_of___lwdiv 0593  
             __end_of___lwmod 05D7                         i1l703 06D9                         i1l704 06D9  
                       i1l705 06DD                         i1l706 06FA                         i1l690 05D9  
                       i1l691 060C                         i1l692 05DF                         i1l693 05E5  
                       i1l694 05EB                         i1l695 05F1                         i1l696 05F7  
                       i1l689 05FB                         i1l697 0617                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _TXREG 0019        lcd_write_data@databyte 0072  
                       pclath 000A               ?_lcd_write_data 0070             ?_adc_read_channel 0070  
                       status 0003                         wtemp0 007E               __end_of_sprintf 0375  
            __end_of_Debounce 04D9            ??_adc_read_channel 0076              ?_readAvgDistance 0020  
  __size_of_lcd_write_control 001C                  __end_of_isr1 045D                  __end_of_main 064F  
                __end_of_init 078A                 ?_readDistance 0078        readAvgDistance@fullval 0038  
                      ??_isr1 0054                        ??_main 00E3                        ??_init 00E3  
         __end_of_ReadButtons 0681                        _ADCON0 001F                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E                        _EEDATA 010C  
                      _EECON1 018C                        _EECON2 018D              __end_of_adc_read 06FB  
                      i1l1402 0768                        i1l1403 075A                        i1l1404 0771  
                      i1l1405 0771                        i1l2150 0393                        i1l2151 0392  
                      i1l2152 03B7                        i1l2153 03B7                        i1l2154 0451  
                      i1l2155 03DF                        i1l2156 03FA                        i1l2157 0427  
                      i1l2158 0446                        i1l2159 0451                        i1l1393 07C5  
                      i1l1396 07D8                        i1l5110 0291                        i1l5111 0298  
                      i1l1399 07E1                        i1l5120 02FA                        i1l5112 0293  
                      i1l5113 036F                        i1l5121 02EF                        i1l5122 030C  
                      i1l5114 0294                        i1l5123 034F                        i1l5115 0295  
                      i1l5108 035B                        i1l5124 0311                        i1l5116 02AD  
                      i1l2900 0246                        i1l5125 035A                        i1l5117 0296  
                      i1l5109 027F                        i1l2901 019A                        i1l5126 036E  
                      i1l5118 02C7                        i1l2910 0276                        i1l2902 0245  
                      i1l5127 0374                        i1l5119 02D2                        i1l2903 01C6  
                      i1l5080 048C                        i1l2904 0244                        i1l5081 048F  
                      i1l2905 01F2                        i1l5090 04D8                        i1l5082 04A5  
                      i1l2906 0243                        i1l5091 04D8                        i1l5083 04A4  
                      i1l2907 021E                        i1l5084 04A7                        i1l5076 0475  
                      i1l2908 0242                        i1l5085 04BD                        i1l5077 0474  
                      i1l2909 0241                        i1l5086 04BC                        i1l5078 0477  
                      i1l5094 065E                        i1l5087 04BF                        i1l5079 048D  
                      i1l5095 0680                        i1l5088 04D5                        i1l8000 05D8  
                      i1l5096 0666                        i1l2880 07B1                        i1l5089 04D4  
                      i1l5097 066E                        i1l8002 05F7                        i1l8010 060C  
                      i1l5098 0676                        i1l2890 024B                        i1l5099 067E  
                      i1l2875 0503                        i1l2891 00BE                        i1l8020 06E0  
                      i1l8012 0610                        i1l8004 05F9                        i1l2876 0524  
                      i1l2892 024A                        i1l8100 03C5                        i1l2877 0544  
                      i1l2893 00EA                        i1l2885 003A                        i1l8022 06F3  
                      i1l8014 0617                        i1l8006 05FA                        i1l8030 07CE  
                      i1l2894 0249                        i1l2886 024C                        i1l8110 03FA  
                      i1l8102 03C6                        i1l2895 0116                        i1l2887 0066  
                      i1l8024 06FA                        i1l8016 06D4                        i1l8008 05FB  
                      i1l8032 07CF                        i1l8040 075A                        i1l2888 024C  
                      i1l2896 0248                        i1l8200 0180                        i1l8120 0441  
                      i1l8112 0411                        i1l8104 03DB                        i1l2897 0142  
                      i1l2889 0092                        i1l8018 06D7                        i1l8026 07C7  
                      i1l8034 07DA                        i1l8042 0763                        i1l8130 04F2  
                      i1l2898 0247                        i1l8210 01CF                        i1l8202 019A  
                      i1l8122 0443                        i1l8114 0423                        i1l8106 03DF  
                      i1l2899 016E                        i1l5820 0563                        i1l8028 07CC  
                      i1l8300 027A                        i1l8036 07DB                        i1l8044 0768  
                      i1l8140 0516                        i1l8132 04F4                        i1l8220 021E  
                      i1l8212 01D8                        i1l8204 01A3                        i1l8124 0446  
                      i1l8116 0427                        i1l8108 03F6                        i1l5821 057C  
                      i1l5822 058A                        i1l5830 05AF                        i1l8230 064F  
                      i1l8310 0298                        i1l8302 027F                        i1l8038 0759  
                      i1l8134 0502                        i1l8142 0524                        i1l8126 04D9  
                      i1l8222 0227                        i1l8214 01F2                        i1l8206 01AC  
                      i1l8150 002C                        i1l8118 043E                        i1l5823 0592  
                      i1l5831 05C0                        i1l5816 058B                        i1l5832 05CE  
                      i1l8240 0662                        i1l8232 0654                        i1l8320 02C1  
                      i1l8312 02AD                        i1l8304 0285                        i1l8144 053D  
                      i1l8136 0503                        i1l8128 04DD                        i1l8224 0252  
                      i1l8216 01FB                        i1l8208 01C6                        i1l8160 0066  
                      i1l8152 0035                        i1l8080 038D                        i1l8072 0375  
                      i1l5817 055D                        i1l5833 05D6                        i1l5818 0551  
                      i1l5826 05CF                        i1l8250 066D                        i1l8242 0663  
                      i1l8234 065A                        i1l8330 02EE                        i1l8322 02C7  
                      i1l8314 02B5                        i1l8306 028C                        i1l8146 0544  
                      i1l8138 0510                        i1l8226 026A                        i1l8218 0204  
                      i1l8170 00A4                        i1l8162 006F                        i1l8154 003A  
                      i1l8090 03A9                        i1l8074 0379                        i1l8082 0393  
                      i1l5819 0562                        i1l5827 05A9                        i1l8500 046D  
                      i1l5828 059D                        i1l8260 067B                        i1l8252 0672  
                      i1l8244 0665                        i1l8236 065B                        i1l8340 0307  
                      i1l8332 02EF                        i1l8324 02CA                        i1l8316 02B9  
                      i1l8308 0297                        i1l8228 0270                        i1l8180 00F3  
                      i1l8172 00BE                        i1l8164 0078                        i1l8156 0043  
                      i1l8148 0015                        i1l8092 03AD                        i1l8084 0397  
                      i1l8076 0381                        i1l5829 05AE                        i1l8510 0489  
                      i1l8502 0471                        i1l8262 067D                        i1l8254 0673  
                      i1l8246 066A                        i1l8238 065D                        i1l8350 034F  
                      i1l8342 030C                        i1l8334 02F3                        i1l8326 02D1  
                      i1l8318 02BD                        i1l8190 0142                        i1l8182 00FC  
                      i1l8174 00C7                        i1l8166 0092                        i1l8158 004C  
                      i1l8094 03B3                        i1l8086 039D                        i1l8078 0387  
                      i1l8520 04AB                        i1l8512 0493                        i1l8504 047B  
                      i1l8264 067E                        i1l8256 0675                        i1l8248 066B  
                      i1l8344 0311                        i1l8336 02FA                        i1l8328 02D2  
                      i1l8352 035B                        i1l8192 014B                        i1l8184 0116  
                      i1l8176 00D0                        i1l8168 009B                        i1l8096 03BB  
                      i1l8088 03A5                        i1l8530 04C7                        i1l8522 04AF  
                      i1l8514 0497                        i1l8506 047F                        i1l8266 0680  
                      i1l8258 067A                        i1l8346 0343                        i1l8338 0300  
                      i1l8354 036F                        i1l8194 0154                        i1l8186 011F  
                      i1l8178 00EA                        i1l8098 03BC                        i1l8532 04CD  
                      i1l8524 04B5                        i1l8516 049D                        i1l8508 0485  
                      i1l8540 054D                        i1l8356 0374                        i1l8348 034A  
                      i1l8196 016E                        i1l8188 0128                        i1l8534 04D1  
                      i1l8526 04B9                        i1l8518 04A1                        i1l8550 0574  
                      i1l8542 0551                        i1l8294 079E                        i1l8198 0177  
                      i1l8528 04C3                        i1l8560 0592                        i1l8552 057A  
                      i1l8544 0558                        i1l8536 0545                        i1l8296 07AA  
                      u320_20 03F6                        u320_21 03F5                        i1l8554 057C  
                      i1l8546 055D                        i1l8538 0547                        i1l8570 05A9  
                      i1l8562 0593                        i1l8298 07B1                        i1l8556 0583  
                      i1l8548 0563                        i1l8572 05AF                        i1l8564 0599  
                      i1l8580 05CF                        u400_25 059E                        i1l8494 045D  
                      i1l8558 058B                        i1l8582 05D6                        i1l8574 05B9  
                      i1l8566 059D                        i1l8590 07BB                        i1l8496 0463  
                      i1l8576 05C0                        u401_20 05AD                        i1l8568 05A4  
                      i1l8584 07B3                        u321_20 0411                        u313_20 0379  
                      u401_21 05AC                        u321_21 0410                        u313_21 0378  
                      i1l8498 0467                        i1l8578 05C7                        i1l8586 07B8  
                      i1l8588 07BA                        u402_20 05B9                        u330_20 006F  
                      u322_20 043E                        u314_20 038D                        u402_21 05B8  
                      u330_21 006E                        u322_21 043D                        u314_21 038C  
                      u402_25 05B5                        u307_20 06DD                        u323_20 04E5  
                      u331_20 0078                        u315_20 0397                        u307_21 06DC  
                      u331_21 0077                        u315_21 0396                        u403_25 05C1  
                      u404_20 05CD                        u324_20 0501                        u340_20 014B  
                      u332_20 009B                        u316_20 039D                        u404_21 05CC  
                      u324_21 0500                        u340_21 014A                        u332_21 009A  
                      u316_21 039C                        u308_25 06EA                        u324_25 04FD  
                      u309_20 0770                        u325_20 0523                        u341_20 0154  
                      u333_20 00A4                        u317_20 03B3                        u309_21 076F  
                      u325_21 0522                        u341_21 0153                        u333_21 00A3  
                      u317_21 03B2                        u325_25 051F                        u350_20 0227  
                      u342_20 0177                        u334_20 00C7                        u326_20 001F  
                      u318_20 03BB                        u350_21 0226                        u342_21 0176  
                      u334_21 00C6                        u318_21 03BA                        u351_20 065A  
                      u343_20 0180                        u335_20 00D0                        u327_20 0035  
                      u319_20 03DB                        u351_21 0659                        u343_21 017F  
                      u335_21 00CF                        u327_21 0034                        u319_21 03DA  
                      u407_27 07C0                        u352_20 0662                        u360_20 02F9  
                      u344_20 01A3                        u336_20 00F3                        u328_20 0043  
                      u352_21 0661                        u360_21 02F8                        u344_21 01A2  
                      u336_21 00F2                        u328_21 0042                        u408_27 07D4  
                      u353_20 066A                        u361_20 0300                        u345_20 01AC  
                      u337_20 00FC                        u329_20 004C                        u353_21 0669  
                      u361_21 02FF                        u345_21 01AB                        u337_21 00FB  
                      u329_21 004B                        u409_27 060E                        u354_20 0672  
                      u362_20 0359                        u346_20 01CF                        u338_20 011F  
                      u354_21 0671                        u362_21 0358                        u346_21 01CE  
                      u338_21 011E                        u355_20 067A                        u363_20 036D  
                      u347_20 01D8                        u339_20 0128                        u355_21 0679  
                      u363_21 036C                        u347_21 01D7                        u339_21 0127  
                      u380_20 047B                        u356_20 0285                        u348_20 01FB  
                      u380_21 047A                        u356_21 0284                        u348_21 01FA  
                      u381_20 0485                        u357_20 02BD                        u349_20 0204  
                      u381_21 0484                        u357_21 02BC                        u349_21 0203  
                      u390_20 04CD                        u382_20 0489                        u358_20 02D0  
                      u390_21 04CC                        u382_21 0488                        u358_21 02CF  
                      u391_20 04D1                        u383_20 0493                        u359_20 02ED  
                      u391_21 04D0                        u383_21 0492                        u359_21 02EC  
                      u359_25 02E9                        u384_20 049D                        u392_20 054D  
                      u384_21 049C                        u392_21 054C                        u385_20 04A1  
                      u377_20 0463                        u385_21 04A0                        u377_21 0462  
                      u393_25 0552                        u386_20 04AB                        u378_20 046D  
                      u394_20 0561                        u386_21 04AA                        u378_21 046C  
                      u394_21 0560                        u387_20 04B5                        u379_20 0471  
                      u387_21 04B4                        u379_21 0470                        u395_25 0564  
                      u388_20 04B9                        u396_20 0574                        u388_21 04B8  
                      u396_21 0573                        u396_25 0570                        u389_20 04C3  
                      u389_21 04C2                        u397_25 057D                        u398_20 0589  
                      u398_21 0588                        u399_20 0599                        u399_21 0598  
                      _TMR0IE 005D                        _TMR0IF 005A                    _UpReleased 02D6  
            __end_of_lcd_init 06AC               _UpDebounceCount 0061                  ??_ADCconvert 003E  
                   ??___lwdiv 0074                     ??___lwmod 007C              __end_of_init_adc 079E  
              ??_readDistance 007A      __end_of_lcd_write_string 0772            ADCconvert@distance 0052  
                      _rxfifo 00B0                        clrloop 07E3                        _txfifo 00C0  
                      _rxiptr 0064                        _rxoptr 0065                        _txiptr 0067  
                      _txoptr 0068              __end_of_ser_init 06D4                        saved_w 007E  
                 _LeftPressed 02CC                     ??_sprintf 0025                   _DownPressed 02CA  
           lcd_write_string@s 0074            __end_of_ADCconvert 0277                __pcstackCOMMON 0070  
                __pidataBANK0 07EA                   _ReadButtons 064F              ??_lcd_set_cursor 0073  
                   ?_Debounce 0070                 _buttonPressed 0062           i1_lcd_write_control 07B2  
                  __pbssBANK0 005B                    __pbssBANK1 00A0             _DownDebounceCount 005E  
          _RightDebounceCount 0060                    __pmaintext 0618                    __pintentry 0004  
        ?i1_lcd_write_control 0070                     ?_adc_read 0070                    ??_Debounce 0070  
            ??_lcd_write_data 0070                     ?_lcd_init 0070           ADCconvert@adcOutput 0042  
        __end_of_readDistance 07B2                     ?_init_adc 0070                     ?_ser_init 0070  
       ??i1_lcd_write_control 0070                       ___lwdiv 0545                       ___lwmod 0593  
   __size_of_adc_read_channel 0041                    ??_adc_read 0072                       _dpowers 0706  
                     _ser_tmp 0066                       _sprintf 0277                    ??_lcd_init 00E3  
        end_of_initialization 0738                    ??_init_adc 00E0                  _LeftReleased 02CD  
                  ??_ser_init 00E0                  _DownReleased 02CB                 _RightReleased 02D4  
    __size_of_readAvgDistance 006C             ?_lcd_write_string 0070            ??_lcd_write_string 0073  
           adc_read@adc_value 0074          readAvgDistance@F1184 00D0      readAvgDistance@adcOutput 0026  
               _CenterPressed 02C8                  ?_ReadButtons 0070                 __pbitbssBANK0 02C8  
         start_initialization 071F         __size_of_readDistance 0014             __size_of_Debounce 007C  
       lcd_set_cursor@address 0073                     _UpPressed 02D5                _RTC_FLAG_250MS 02D0  
              _RTC_FLAG_500MS 02D1                   __pdataBANK0 0069              _adc_read_channel 05D7  
                _readDistance 079E             __size_of_adc_read 0027             ??_readAvgDistance 0022  
               __pcstackBANK0 0020                 __pcstackBANK1 00E0             __size_of_lcd_init 002B  
                 sprintf@_val 002B                   sprintf@flag 0029                   sprintf@prec 002A  
                _current_step 0069              readAvgDistance@i 003A             __size_of_init_adc 0014  
            ___lwdiv@dividend 0072                     __ptext540 079E                     __ptext532 0772  
                   __ptext541 0758                     __ptext533 0681                     __ptext550 045D  
                   __ptext542 07D9                     __ptext534 073C                     __ptext551 06D4  
                   __ptext543 07B2                     __ptext535 078A                     __ptext552 0000  
                   __ptext544 0277                     __ptext536 06AC                     __ptext545 064F  
                   __ptext537 0375                     __ptext546 07C6                     __ptext538 0015  
                   __ptext547 05D7                     __ptext539 04D9                     __ptext548 0593  
                   __ptext549 0545             __size_of_ser_init 0028                      ?___lwdiv 0070  
                    ?___lwmod 0078                     __pstrings 0700           readDistance@fullval 007C  
            ___lwdiv@quotient 0075                      ?_sprintf 0020       __size_of_lcd_set_cursor 0009  
           interrupt_function 0004   __end_ofi1_lcd_write_control 07C6                  _RightPressed 02D3  
   readAvgDistance@averageval 0036          __size_of_ReadButtons 0032                   __stringbase 0705  
                    _Debounce 045D             _LeftDebounceCount 005F     __size_of_lcd_write_string 001A  
     __size_of_lcd_write_data 0013              ADCconvert@adcVal 003C       adc_read_channel@channel 0077  
               _RTC_FLAG_10MS 02CE                 _RTC_FLAG_50MS 02D2                    _ADCconvert 0015  
            __size_of___lwdiv 004E              __size_of___lwmod 0044                      _adc_read 06D4  
             ___lwdiv@divisor 0070               ___lwdiv@counter 0077                      _lcd_init 0681  
            __size_of_sprintf 00FE      __end_of_adc_read_channel 0618     lcd_write_control@databyte 00E2  
                    _init_adc 078A                 __size_of_isr1 00E8                 __size_of_main 0037  
               __size_of_init 0018                      clear_ram 07E2                      _ser_init 06AC  
             _readAvgDistance 04D9               ADCconvert@F1190 00A0           _CenterDebounceCount 005D  
                _RTC_FLAG_1MS 02CF                      intlevel1 0000                _lcd_set_cursor 07D9  
                   sprintf@ap 0028                     sprintf@sp 002F              ___lwmod@dividend 007A  
                   stringcode 0700                   ?_ADCconvert 003C             _lcd_write_control 073C  
 i1lcd_write_control@databyte 0072            ?_lcd_write_control 0070                    _OPTION_REG 0081  
                    sprintf@c 0030                      sprintf@f 0020               ___lwmod@divisor 0078  
             ___lwmod@counter 007D                      stringdir 0700                      stringtab 0700  
         ??_lcd_write_control 00E0        __end_of_lcd_set_cursor 07E2              _lcd_write_string 0758  
           _current_direction 0063                   _RTC_Counter 005B       __end_of_readAvgDistance 0545  
              _lcd_write_data 07C6  
