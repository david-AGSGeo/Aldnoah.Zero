

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri May 01 16:02:34 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_scan360
    53                           	FNCALL	_main,_rotate
    54                           	FNCALL	_main,_robotMove
    55                           	FNCALL	_main,_robotTurn
    56                           	FNCALL	_main,___awtoft
    57                           	FNCALL	_main,___ftmul
    58                           	FNCALL	_main,___fttol
    59                           	FNCALL	_main,_ChargeMode
    60                           	FNCALL	_robotMove,_ser_putch
    61                           	FNCALL	_robotMove,_robot_read
    62                           	FNCALL	_robotMove,_UpdateDisplay
    63                           	FNCALL	_scan360,_readAvgDistance
    64                           	FNCALL	_scan360,_rotate
    65                           	FNCALL	_scan360,_UpdateDisplay
    66                           	FNCALL	_ChargeMode,_ser_putch
    67                           	FNCALL	_ChargeMode,_UpdateDisplay
    68                           	FNCALL	_calibrateIR,_rotate
    69                           	FNCALL	_calibrateIR,_UpdateDisplay
    70                           	FNCALL	_readAvgDistance,_readDistance
    71                           	FNCALL	_readAvgDistance,___lwdiv
    72                           	FNCALL	_readAvgDistance,_ADCconvert
    73                           	FNCALL	_UpdateDisplay,_lcd_write_control
    74                           	FNCALL	_UpdateDisplay,_sprintf
    75                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    76                           	FNCALL	_UpdateDisplay,_lcd_write_string
    77                           	FNCALL	_UpdateDisplay,___awmod
    78                           	FNCALL	_init,_ser_init
    79                           	FNCALL	_init,_init_adc
    80                           	FNCALL	_init,_lcd_init
    81                           	FNCALL	_init,_robo_init
    82                           	FNCALL	_readDistance,_adc_read_channel
    83                           	FNCALL	_robot_read,_ser_putch
    84                           	FNCALL	_robot_read,_ser_getch
    85                           	FNCALL	_lcd_init,_lcd_write_control
    86                           	FNCALL	_lcd_write_string,_lcd_write_data
    87                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    88                           	FNCALL	___awtoft,___ftpack
    89                           	FNCALL	___ftmul,___ftpack
    90                           	FNCALL	_ser_getch,_ser_isrx
    91                           	FNCALL	_sprintf,___lwdiv
    92                           	FNCALL	_sprintf,___lwmod
    93                           	FNCALL	_ADCconvert,___wmul
    94                           	FNCALL	_ADCconvert,___lwdiv
    95                           	FNCALL	_robotTurn,_ser_putch
    96                           	FNCALL	_rotate,_spi_transfer
    97                           	FNCALL	_robo_init,_ser_putch
    98                           	FNCALL	_adc_read_channel,_adc_read
    99                           	FNROOT	_main
   100                           	FNCALL	_isr1,i1___lwmod
   101                           	FNCALL	_isr1,_ReadButtons
   102                           	FNCALL	_ReadButtons,_Debounce
   103                           	FNCALL	intlevel1,_isr1
   104                           	global	intlevel1
   105                           	FNROOT	intlevel1
   106                           	global	_menuStrings
   107                           	global	_shortMenuStrings
   108                           	global	_current_step
   109                           psect	idataBANK1,class=CODE,space=0,delta=2
   110                           global __pidataBANK1
   111  1500                     __pidataBANK1:
   112                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
   113                           	line	32
   114                           
   115                           ;initializer for _menuStrings
   116  1500  3455               	retlw	(STR_1-__stringbase)&0ffh
   117  1501  344C               	retlw	(STR_2-__stringbase)&0ffh
   118  1502  3467               	retlw	(STR_3-__stringbase)&0ffh
   119  1503  3470               	retlw	(STR_4-__stringbase)&0ffh
   120  1504  345E               	retlw	(STR_5-__stringbase)&0ffh
   121  1505  3443               	retlw	(STR_6-__stringbase)&0ffh
   122                           	line	33
   123                           
   124                           ;initializer for _shortMenuStrings
   125  1506  3494               	retlw	(STR_7-__stringbase)&0ffh
   126  1507  3498               	retlw	(STR_8-__stringbase)&0ffh
   127  1508  3480               	retlw	(STR_9-__stringbase)&0ffh
   128  1509  348C               	retlw	(STR_10-__stringbase)&0ffh
   129  150A  349C               	retlw	(STR_11-__stringbase)&0ffh
   130  150B  3490               	retlw	(STR_12-__stringbase)&0ffh
   131                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
   132                           	line	30
   133                           
   134                           ;initializer for _current_step
   135  150C  343C               	retlw	03Ch
   136                           	global	_dpowers
   137                           psect	strings,class=STRING,delta=2
   138                           global __pstrings
   139  0800                     __pstrings:
   140                           ;	global	stringdir,stringtab,__stringbase
   141  0800                     stringtab:
   142                           ;	String table - string pointers are 1 byte each
   143  0800  1BFF               	btfsc	(btemp+1),7
   144  0801  280A               	ljmp	stringcode
   145  0802  1383               	bcf	status,7
   146  0803  187F               	btfsc	(btemp+1),0
   147  0804  1783               	bsf	status,7
   148  0805  0800               	movf	indf,w
   149  0806  0A84               	incf fsr
   150  0807  1903               skipnz
   151  0808  0AFF               incf btemp+1
   152  0809  0008               	return
   153  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   154  080A  3008               movlw high(stringdir)
   155  080B  008A               movwf pclath
   156  080C  0804               movf fsr,w
   157  080D  0A84               incf fsr
   158  080E  0782               	addwf pc
   159  080F                     __stringbase:
   160  080F  3400               	retlw	0
   161                           psect	strings
   162                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   163                           	line	350
   164  0810                     _dpowers:
   165  0810  3401               	retlw	01h
   166  0811  3400               	retlw	0
   167                           
   168  0812  340A               	retlw	0Ah
   169  0813  3400               	retlw	0
   170                           
   171  0814  3464               	retlw	064h
   172  0815  3400               	retlw	0
   173                           
   174  0816  34E8               	retlw	0E8h
   175  0817  3403               	retlw	03h
   176                           
   177  0818  3410               	retlw	010h
   178  0819  3427               	retlw	027h
   179                           
   180                           	global	_dpowers
   181                           	global	_adcVal
   182                           	global	_txiptr
   183                           	global	UpdateDisplay@F1229
   184                           	global	_txfifo
   185                           	global	_buttonPressed
   186                           	global	_CenterPressed
   187                           	global	_CenterReleased
   188                           	global	_DownPressed
   189                           	global	_DownReleased
   190                           	global	_LeftPressed
   191                           	global	_LeftReleased
   192                           	global	_RTC_FLAG_10MS
   193                           	global	_RTC_FLAG_1MS
   194                           	global	_RTC_FLAG_250MS
   195                           	global	_RTC_FLAG_500MS
   196                           	global	_RTC_FLAG_50MS
   197                           	global	_RightPressed
   198                           	global	_RightReleased
   199                           	global	_UpPressed
   200                           	global	_UpReleased
   201                           	global	_rxfifo
   202                           	global	_RTC_Counter
   203                           	global	_distTravelled
   204                           	global	_dist_high
   205                           	global	_dist_low
   206                           	global	_distance
   207                           	global	_pos
   208                           	global	_test
   209                           	global	_total
   210                           	global	_totalSteps
   211                           	global	_BumpSensors
   212                           	global	_CenterDebounceCount
   213                           	global	_DistHighByte
   214                           	global	_DistLowByte
   215                           	global	_DownDebounceCount
   216                           	global	_LeftDebounceCount
   217                           	global	_RightDebounceCount
   218                           	global	_UpDebounceCount
   219                           	global	_currentMenu
   220                           	global	_current_direction
   221                           	global	_highByte
   222                           	global	_lowByte
   223                           	global	_rxiptr
   224                           	global	_rxoptr
   225                           	global	_ser_tmp
   226                           	global	_serialInput
   227                           	global	_turnhighByte
   228                           	global	_turnlowByte
   229                           	global	_txoptr
   230                           	global	_ADCON0
   231  001F                     _ADCON0	set	31
   232                           	global	_ADRESH
   233  001E                     _ADRESH	set	30
   234                           	global	_PORTA
   235  0005                     _PORTA	set	5
   236                           	global	_PORTC
   237  0007                     _PORTC	set	7
   238                           	global	_PORTD
   239  0008                     _PORTD	set	8
   240                           	global	_PORTE
   241  0009                     _PORTE	set	9
   242                           	global	_RCREG
   243  001A                     _RCREG	set	26
   244                           	global	_SSPBUF
   245  0013                     _SSPBUF	set	19
   246                           	global	_SSPCON
   247  0014                     _SSPCON	set	20
   248                           	global	_TMR0
   249  0001                     _TMR0	set	1
   250                           	global	_TXREG
   251  0019                     _TXREG	set	25
   252                           	global	AT25256A@CS0
   253  0038                     AT25256A@CS0	set	56
   254                           	global	AT25256A@CS1
   255  0039                     AT25256A@CS1	set	57
   256                           	global	_CARRY
   257  0018                     _CARRY	set	24
   258                           	global	_CHS0
   259  00FB                     _CHS0	set	251
   260                           	global	_CHS1
   261  00FC                     _CHS1	set	252
   262                           	global	_CHS2
   263  00FD                     _CHS2	set	253
   264                           	global	_CREN
   265  00C4                     _CREN	set	196
   266                           	global	_GIE
   267  005F                     _GIE	set	95
   268                           	global	_GO
   269  00FA                     _GO	set	250
   270                           	global	_OERR
   271  00C1                     _OERR	set	193
   272                           	global	_PEIE
   273  005E                     _PEIE	set	94
   274                           	global	_RB0
   275  0030                     _RB0	set	48
   276                           	global	_RB2
   277  0032                     _RB2	set	50
   278                           	global	_RB3
   279  0033                     _RB3	set	51
   280                           	global	_RB4
   281  0034                     _RB4	set	52
   282                           	global	_RB5
   283  0035                     _RB5	set	53
   284                           	global	_RB6
   285  0036                     _RB6	set	54
   286                           	global	_RC0
   287  0038                     _RC0	set	56
   288                           	global	_RC1
   289  0039                     _RC1	set	57
   290                           	global	_RC2
   291  003A                     _RC2	set	58
   292                           	global	_RCIF
   293  0065                     _RCIF	set	101
   294                           	global	_RE0
   295  0048                     _RE0	set	72
   296                           	global	_RE1
   297  0049                     _RE1	set	73
   298                           	global	_RE2
   299  004A                     _RE2	set	74
   300                           	global	_RX9
   301  00C6                     _RX9	set	198
   302                           	global	_SPEN
   303  00C7                     _SPEN	set	199
   304                           	global	_SSPIF
   305  0063                     _SSPIF	set	99
   306                           	global	_TMR0IE
   307  005D                     _TMR0IE	set	93
   308                           	global	_TMR0IF
   309  005A                     _TMR0IF	set	90
   310                           	global	_TXIF
   311  0064                     _TXIF	set	100
   312                           	global	_ADCON1
   313  009F                     _ADCON1	set	159
   314                           	global	_ADRESL
   315  009E                     _ADRESL	set	158
   316                           	global	_OPTION_REG
   317  0081                     _OPTION_REG	set	129
   318                           	global	_SPBRG
   319  0099                     _SPBRG	set	153
   320                           	global	_SSPSTAT
   321  0094                     _SSPSTAT	set	148
   322                           	global	_TRISA
   323  0085                     _TRISA	set	133
   324                           	global	_TRISB
   325  0086                     _TRISB	set	134
   326                           	global	_TRISC
   327  0087                     _TRISC	set	135
   328                           	global	_TRISD
   329  0088                     _TRISD	set	136
   330                           	global	_TRISE
   331  0089                     _TRISE	set	137
   332                           	global	_BRGH
   333  04C2                     _BRGH	set	1218
   334                           	global	_RCIE
   335  0465                     _RCIE	set	1125
   336                           	global	_SYNC
   337  04C4                     _SYNC	set	1220
   338                           	global	_TX9
   339  04C6                     _TX9	set	1222
   340                           	global	_TXEN
   341  04C5                     _TXEN	set	1221
   342                           	global	_TXIE
   343  0464                     _TXIE	set	1124
   344                           	global	_EEADR
   345  010D                     _EEADR	set	269
   346                           	global	_EEDATA
   347  010C                     _EEDATA	set	268
   348                           	global	_EECON1
   349  018C                     _EECON1	set	396
   350                           	global	_EECON2
   351  018D                     _EECON2	set	397
   352                           	global	_RD
   353  0C60                     _RD	set	3168
   354                           	global	_WR
   355  0C61                     _WR	set	3169
   356                           	global	_WREN
   357  0C62                     _WREN	set	3170
   358                           	
   359  081A                     STR_18:	
   360  081A  3420               	retlw	32	;' '
   361  081B  3443               	retlw	67	;'C'
   362  081C  3468               	retlw	104	;'h'
   363  081D  3461               	retlw	97	;'a'
   364  081E  3472               	retlw	114	;'r'
   365  081F  3467               	retlw	103	;'g'
   366  0820  3469               	retlw	105	;'i'
   367  0821  346E               	retlw	110	;'n'
   368  0822  3467               	retlw	103	;'g'
   369  0823  3420               	retlw	32	;' '
   370  0824  344D               	retlw	77	;'M'
   371  0825  346F               	retlw	111	;'o'
   372  0826  3464               	retlw	100	;'d'
   373  0827  3465               	retlw	101	;'e'
   374  0828  3420               	retlw	32	;' '
   375  0829  3400               	retlw	0
   376                           psect	strings
   377                           	
   378  082A                     STR_14:	
   379  082A  345A               	retlw	90	;'Z'
   380  082B  3465               	retlw	101	;'e'
   381  082C  3472               	retlw	114	;'r'
   382  082D  346F               	retlw	111	;'o'
   383  082E  3420               	retlw	32	;' '
   384  082F  3453               	retlw	83	;'S'
   385  0830  3474               	retlw	116	;'t'
   386  0831  3465               	retlw	101	;'e'
   387  0832  3470               	retlw	112	;'p'
   388  0833  345F               	retlw	95	;'_'
   389  0834  344D               	retlw	77	;'M'
   390  0835  346F               	retlw	111	;'o'
   391  0836  3474               	retlw	116	;'t'
   392  0837  346F               	retlw	111	;'o'
   393  0838  3472               	retlw	114	;'r'
   394  0839  3400               	retlw	0
   395                           psect	strings
   396                           	
   397  083A                     STR_13:	
   398  083A  3441               	retlw	65	;'A'
   399  083B  3444               	retlw	68	;'D'
   400  083C  3443               	retlw	67	;'C'
   401  083D  343A               	retlw	58	;':'
   402  083E  3425               	retlw	37	;'%'
   403  083F  3464               	retlw	100	;'d'
   404  0840  3420               	retlw	32	;' '
   405  0841  3444               	retlw	68	;'D'
   406  0842  3469               	retlw	105	;'i'
   407  0843  3473               	retlw	115	;'s'
   408  0844  3474               	retlw	116	;'t'
   409  0845  343A               	retlw	58	;':'
   410  0846  3425               	retlw	37	;'%'
   411  0847  3464               	retlw	100	;'d'
   412  0848  3400               	retlw	0
   413                           psect	strings
   414                           	
   415  0849                     STR_19:	
   416  0849  3420               	retlw	32	;' '
   417  084A  3420               	retlw	32	;' '
   418  084B  3445               	retlw	69	;'E'
   419  084C  3458               	retlw	88	;'X'
   420  084D  3449               	retlw	73	;'I'
   421  084E  3454               	retlw	84	;'T'
   422  084F  3420               	retlw	32	;' '
   423  0850  3420               	retlw	32	;' '
   424  0851  3400               	retlw	0
   425                           psect	strings
   426                           	
   427  0852                     STR_6:	
   428  0852  3420               	retlw	32	;' '
   429  0853  3443               	retlw	67	;'C'
   430  0854  3468               	retlw	104	;'h'
   431  0855  3461               	retlw	97	;'a'
   432  0856  3472               	retlw	114	;'r'
   433  0857  3467               	retlw	103	;'g'
   434  0858  3465               	retlw	101	;'e'
   435  0859  3420               	retlw	32	;' '
   436  085A  3400               	retlw	0
   437                           psect	strings
   438                           	
   439  085B                     STR_2:	
   440  085B  3453               	retlw	83	;'S'
   441  085C  3463               	retlw	99	;'c'
   442  085D  3461               	retlw	97	;'a'
   443  085E  346E               	retlw	110	;'n'
   444  085F  345F               	retlw	95	;'_'
   445  0860  3433               	retlw	51	;'3'
   446  0861  3436               	retlw	54	;'6'
   447  0862  3430               	retlw	48	;'0'
   448  0863  3400               	retlw	0
   449                           psect	strings
   450                           	
   451  0864                     STR_1:	
   452  0864  3443               	retlw	67	;'C'
   453  0865  3461               	retlw	97	;'a'
   454  0866  346C               	retlw	108	;'l'
   455  0867  3469               	retlw	105	;'i'
   456  0868  3462               	retlw	98	;'b'
   457  0869  345F               	retlw	95	;'_'
   458  086A  3449               	retlw	73	;'I'
   459  086B  3452               	retlw	82	;'R'
   460  086C  3400               	retlw	0
   461                           psect	strings
   462                           	
   463  086D                     STR_5:	
   464  086D  3446               	retlw	70	;'F'
   465  086E  346C               	retlw	108	;'l'
   466  086F  3477               	retlw	119	;'w'
   467  0870  345F               	retlw	95	;'_'
   468  0871  3457               	retlw	87	;'W'
   469  0872  3461               	retlw	97	;'a'
   470  0873  346C               	retlw	108	;'l'
   471  0874  346C               	retlw	108	;'l'
   472  0875  3400               	retlw	0
   473                           psect	strings
   474                           	
   475  0876                     STR_3:	
   476  0876  3444               	retlw	68	;'D'
   477  0877  3472               	retlw	114	;'r'
   478  0878  3469               	retlw	105	;'i'
   479  0879  3476               	retlw	118	;'v'
   480  087A  3465               	retlw	101	;'e'
   481  087B  345F               	retlw	95	;'_'
   482  087C  3432               	retlw	50	;'2'
   483  087D  346D               	retlw	109	;'m'
   484  087E  3400               	retlw	0
   485                           psect	strings
   486                           	
   487  087F                     STR_4:	
   488  087F  3444               	retlw	68	;'D'
   489  0880  3472               	retlw	114	;'r'
   490  0881  3469               	retlw	105	;'i'
   491  0882  3476               	retlw	118	;'v'
   492  0883  3465               	retlw	101	;'e'
   493  0884  345F               	retlw	95	;'_'
   494  0885  344C               	retlw	76	;'L'
   495  0886  3400               	retlw	0
   496                           psect	strings
   497                           	
   498  0887                     STR_16:	
   499  0887  3443               	retlw	67	;'C'
   500  0888  344F               	retlw	79	;'O'
   501  0889  344E               	retlw	78	;'N'
   502  088A  3446               	retlw	70	;'F'
   503  088B  3449               	retlw	73	;'I'
   504  088C  3452               	retlw	82	;'R'
   505  088D  344D               	retlw	77	;'M'
   506  088E  3400               	retlw	0
   507                           psect	strings
   508                           	
   509  088F                     STR_9:	
   510  088F  3444               	retlw	68	;'D'
   511  0890  3472               	retlw	114	;'r'
   512  0891  3432               	retlw	50	;'2'
   513  0892  3400               	retlw	0
   514                           psect	strings
   515                           	
   516  0893                     STR_15:	
   517  0893  343C               	retlw	60	;'<'
   518  0894  343C               	retlw	60	;'<'
   519  0895  343C               	retlw	60	;'<'
   520  0896  3400               	retlw	0
   521                           psect	strings
   522                           	
   523  0897                     STR_17:	
   524  0897  343E               	retlw	62	;'>'
   525  0898  343E               	retlw	62	;'>'
   526  0899  343E               	retlw	62	;'>'
   527  089A  3400               	retlw	0
   528                           psect	strings
   529                           	
   530  089B                     STR_10:	
   531  089B  3444               	retlw	68	;'D'
   532  089C  3472               	retlw	114	;'r'
   533  089D  344C               	retlw	76	;'L'
   534  089E  3400               	retlw	0
   535                           psect	strings
   536                           	
   537  089F                     STR_12:	
   538  089F  3443               	retlw	67	;'C'
   539  08A0  3468               	retlw	104	;'h'
   540  08A1  3467               	retlw	103	;'g'
   541  08A2  3400               	retlw	0
   542                           psect	strings
   543                           	
   544  08A3                     STR_7:	
   545  08A3  3443               	retlw	67	;'C'
   546  08A4  3461               	retlw	97	;'a'
   547  08A5  346C               	retlw	108	;'l'
   548  08A6  3400               	retlw	0
   549                           psect	strings
   550                           	
   551  08A7                     STR_8:	
   552  08A7  3453               	retlw	83	;'S'
   553  08A8  3463               	retlw	99	;'c'
   554  08A9  346E               	retlw	110	;'n'
   555  08AA  3400               	retlw	0
   556                           psect	strings
   557                           	
   558  08AB                     STR_11:	
   559  08AB  3446               	retlw	70	;'F'
   560  08AC  346C               	retlw	108	;'l'
   561  08AD  3477               	retlw	119	;'w'
   562  08AE  3400               	retlw	0
   563                           psect	strings
   564                           	file	"Assignment3_AldnoahZero.as"
   565                           	line	#
   566                           psect cinit,class=CODE,delta=2
   567                           global start_initialization
   568  15EF                     start_initialization:
   569                           
   570                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   571                           global __pbitbssCOMMON
   572  0380                     __pbitbssCOMMON:
   573  0380                     _CenterPressed:
   574  0380                            ds      1
   575                           
   576  0381                     _CenterReleased:
   577  0381                            ds      1
   578                           
   579  0382                     _DownPressed:
   580  0382                            ds      1
   581                           
   582  0383                     _DownReleased:
   583  0383                            ds      1
   584                           
   585  0384                     _LeftPressed:
   586  0384                            ds      1
   587                           
   588  0385                     _LeftReleased:
   589  0385                            ds      1
   590                           
   591  0386                     _RTC_FLAG_10MS:
   592  0386                            ds      1
   593                           
   594  0387                     _RTC_FLAG_1MS:
   595  0387                            ds      1
   596                           
   597  0388                     _RTC_FLAG_250MS:
   598  0388                            ds      1
   599                           
   600  0389                     _RTC_FLAG_500MS:
   601  0389                            ds      1
   602                           
   603  038A                     _RTC_FLAG_50MS:
   604  038A                            ds      1
   605                           
   606  038B                     _RightPressed:
   607  038B                            ds      1
   608                           
   609  038C                     _RightReleased:
   610  038C                            ds      1
   611                           
   612  038D                     _UpPressed:
   613  038D                            ds      1
   614                           
   615  038E                     _UpReleased:
   616  038E                            ds      1
   617                           
   618                           psect	bssCOMMON,class=COMMON,space=1
   619                           global __pbssCOMMON
   620  007D                     __pbssCOMMON:
   621  007D                     _buttonPressed:
   622  007D                            ds      1
   623                           
   624                           psect	bssBANK0,class=BANK0,space=1
   625                           global __pbssBANK0
   626  006D                     __pbssBANK0:
   627  006D                     _adcVal:
   628  006D                            ds      2
   629                           
   630  006F                     _txiptr:
   631  006F                            ds      1
   632                           
   633                           psect	bssBANK1,class=BANK1,space=1
   634                           global __pbssBANK1
   635  00A0                     __pbssBANK1:
   636  00A0                     _rxfifo:
   637  00A0                            ds      16
   638                           
   639  00B0                     _RTC_Counter:
   640  00B0                            ds      2
   641                           
   642  00B2                     _distTravelled:
   643  00B2                            ds      2
   644                           
   645  00B4                     _dist_high:
   646  00B4                            ds      2
   647                           
   648  00B6                     _dist_low:
   649  00B6                            ds      2
   650                           
   651  00B8                     _distance:
   652  00B8                            ds      2
   653                           
   654  00BA                     _pos:
   655  00BA                            ds      2
   656                           
   657  00BC                     _test:
   658  00BC                            ds      2
   659                           
   660  00BE                     _total:
   661  00BE                            ds      2
   662                           
   663  00C0                     _totalSteps:
   664  00C0                            ds      2
   665                           
   666  00C2                     _BumpSensors:
   667  00C2                            ds      1
   668                           
   669  00C3                     _CenterDebounceCount:
   670  00C3                            ds      1
   671                           
   672  00C4                     _DistHighByte:
   673  00C4                            ds      1
   674                           
   675  00C5                     _DistLowByte:
   676  00C5                            ds      1
   677                           
   678  00C6                     _DownDebounceCount:
   679  00C6                            ds      1
   680                           
   681  00C7                     _LeftDebounceCount:
   682  00C7                            ds      1
   683                           
   684  00C8                     _RightDebounceCount:
   685  00C8                            ds      1
   686                           
   687  00C9                     _UpDebounceCount:
   688  00C9                            ds      1
   689                           
   690  00CA                     _currentMenu:
   691  00CA                            ds      1
   692                           
   693  00CB                     _current_direction:
   694  00CB                            ds      1
   695                           
   696  00CC                     _highByte:
   697  00CC                            ds      1
   698                           
   699  00CD                     _lowByte:
   700  00CD                            ds      1
   701                           
   702  00CE                     _rxiptr:
   703  00CE                            ds      1
   704                           
   705  00CF                     _rxoptr:
   706  00CF                            ds      1
   707                           
   708  00D0                     _ser_tmp:
   709  00D0                            ds      1
   710                           
   711  00D1                     _serialInput:
   712  00D1                            ds      1
   713                           
   714  00D2                     _turnhighByte:
   715  00D2                            ds      1
   716                           
   717  00D3                     _turnlowByte:
   718  00D3                            ds      1
   719                           
   720  00D4                     _txoptr:
   721  00D4                            ds      1
   722                           
   723                           psect	dataBANK1,class=BANK1,space=1
   724                           global __pdataBANK1
   725  00D5                     __pdataBANK1:
   726                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
   727                           	line	32
   728  00D5                     _menuStrings:
   729  00D5                            ds      6
   730                           
   731                           psect	dataBANK1
   732                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
   733                           	line	33
   734  00DB                     _shortMenuStrings:
   735  00DB                            ds      6
   736                           
   737                           psect	dataBANK1
   738                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
   739                           	line	30
   740  00E1                     _current_step:
   741  00E1                            ds      1
   742                           
   743                           psect	bssBANK3,class=BANK3,space=1
   744                           global __pbssBANK3
   745  0190                     __pbssBANK3:
   746  0190                     UpdateDisplay@F1229:
   747  0190                            ds      16
   748                           
   749  01A0                     _txfifo:
   750  01A0                            ds      16
   751                           
   752                           psect clrtext,class=CODE,delta=2
   753                           global clear_ram
   754                           ;	Called with FSR containing the base address, and
   755                           ;	W with the last address+1
   756  07F7                     clear_ram:
   757  07F7  0064               	clrwdt			;clear the watchdog before getting into this loop
   758  07F8                     clrloop:
   759  07F8  0180               	clrf	indf		;clear RAM location pointed to by FSR
   760  07F9  0A84               	incf	fsr,f		;increment pointer
   761  07FA  0604               	xorwf	fsr,w		;XOR with final address
   762  07FB  1903               	btfsc	status,2	;have we reached the end yet?
   763  07FC  3400               	retlw	0		;all done for this memory range, return
   764  07FD  0604               	xorwf	fsr,w		;XOR again to restore value
   765  07FE  2FF8               	goto	clrloop		;do the next byte
   766                           
   767                           ; Clear objects allocated to BITCOMMON
   768                           psect cinit,class=CODE,delta=2
   769  15EF  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   770  15F0  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   771                           ; Clear objects allocated to COMMON
   772                           psect cinit,class=CODE,delta=2
   773  15F1  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   774                           ; Clear objects allocated to BANK0
   775                           psect cinit,class=CODE,delta=2
   776  15F2  01ED               	clrf	((__pbssBANK0)+0)&07Fh
   777  15F3  01EE               	clrf	((__pbssBANK0)+1)&07Fh
   778  15F4  01EF               	clrf	((__pbssBANK0)+2)&07Fh
   779                           ; Clear objects allocated to BANK1
   780                           psect cinit,class=CODE,delta=2
   781  15F5  1383               	bcf	status, 7	;select IRP bank0
   782  15F6  30A0               	movlw	low(__pbssBANK1)
   783  15F7  0084               	movwf	fsr
   784  15F8  30D5               	movlw	low((__pbssBANK1)+035h)
   785  15F9  120A  118A  27F7   	fcall	clear_ram
              160A  118A         
   786                           ; Clear objects allocated to BANK3
   787                           psect cinit,class=CODE,delta=2
   788  15FE  1783               	bsf	status, 7	;select IRP bank2
   789  15FF  3090               	movlw	low(__pbssBANK3)
   790  1600  0084               	movwf	fsr
   791  1601  30B0               	movlw	low((__pbssBANK3)+020h)
   792  1602  120A  118A  27F7   	fcall	clear_ram
              160A  118A         
   793                           global btemp
   794                           psect inittext,class=CODE,delta=2
   795                           global init_fetch,btemp
   796                           ;	Called with low address in FSR and high address in W
   797  1520                     init_fetch:
   798  1520  087E               	movf btemp,w
   799  1521  008A               	movwf pclath
   800  1522  087F               	movf btemp+1,w
   801  1523  0082               	movwf pc
   802                           global init_ram
   803                           ;Called with:
   804                           ;	high address of idata address in btemp 
   805                           ;	low address of idata address in btemp+1 
   806                           ;	low address of data in FSR
   807                           ;	high address + 1 of data in btemp-1
   808  1524                     init_ram:
   809  1524  160A  118A  2520   	fcall init_fetch
              160A  118A         
   810  1529  0080               	movwf indf,f
   811  152A  0A84               	incf fsr,f
   812  152B  0804               	movf fsr,w
   813  152C  067D               	xorwf btemp-1,w
   814  152D  1903               	btfsc status,2
   815  152E  3400               	retlw 0
   816  152F  0AFF               	incf btemp+1,f
   817  1530  1903               	btfsc status,2
   818  1531  0AFE               	incf btemp,f
   819  1532  2D24               	goto init_ram
   820                           ; Initialize objects allocated to BANK1
   821                           psect cinit,class=CODE,delta=2
   822                           global init_ram, __pidataBANK1
   823  1607  1383               	bcf	status, 7	;select IRP bank0
   824  1608  30E2               	movlw low(__pdataBANK1+13)
   825  1609  00FD               	movwf btemp-1,f
   826  160A  3015               	movlw high(__pidataBANK1)
   827  160B  00FE               	movwf btemp,f
   828  160C  3000               	movlw low(__pidataBANK1)
   829  160D  00FF               	movwf btemp+1,f
   830  160E  30D5               	movlw low(__pdataBANK1)
   831  160F  0084               	movwf fsr,f
   832  1610  160A  118A  2524   	fcall init_ram
              160A  118A         
   833                           psect cinit,class=CODE,delta=2
   834                           global end_of_initialization
   835                           
   836                           ;End of C runtime variable initialization code
   837                           
   838  1615                     end_of_initialization:
   839  1615  0183               clrf status
   840  1616  120A  118A  2815   ljmp _main	;jump to C main() function
   841                           psect	cstackCOMMON,class=COMMON,space=1
   842                           global __pcstackCOMMON
   843  0072                     __pcstackCOMMON:
   844                           	global	?_ser_init
   845  0072                     ?_ser_init:	; 0 bytes @ 0x0
   846                           	global	?_robo_init
   847  0072                     ?_robo_init:	; 0 bytes @ 0x0
   848                           	global	?_UpdateDisplay
   849  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   850                           	global	?_ser_putch
   851  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   852                           	global	?_readAvgDistance
   853  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   854                           	global	?_robot_read
   855  0072                     ?_robot_read:	; 0 bytes @ 0x0
   856                           	global	?_ADCconvert
   857  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   858                           	global	?_init_adc
   859  0072                     ?_init_adc:	; 0 bytes @ 0x0
   860                           	global	?_lcd_write_control
   861  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   862                           	global	?_lcd_write_data
   863  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   864                           	global	?_lcd_set_cursor
   865  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   866                           	global	?_lcd_init
   867  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   868                           	global	?_isr1
   869  0072                     ?_isr1:	; 0 bytes @ 0x0
   870                           	global	?_init
   871  0072                     ?_init:	; 0 bytes @ 0x0
   872                           	global	?_calibrateIR
   873  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   874                           	global	?_ChargeMode
   875  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   876                           	global	?_main
   877  0072                     ?_main:	; 0 bytes @ 0x0
   878                           	global	?_Debounce
   879  0072                     ?_Debounce:	; 0 bytes @ 0x0
   880                           	global	??_Debounce
   881  0072                     ??_Debounce:	; 0 bytes @ 0x0
   882                           	global	?_ser_isrx
   883  0072                     ?_ser_isrx:	; 1 bit 
   884                           	global	?_ReadButtons
   885  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   886                           	global	?_Menu
   887  0072                     ?_Menu:	; 1 bytes @ 0x0
   888                           	global	?_ser_getch
   889  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   890                           	global	?_adc_read_channel
   891  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   892                           	global	?_spi_transfer
   893  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   894                           	global	?i1___lwmod
   895  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   896                           	global	i1___lwmod@divisor
   897  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   898  0072                     	ds	1
   899                           	global	??_ReadButtons
   900  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   901  0073                     	ds	1
   902                           	global	i1___lwmod@dividend
   903  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   904  0074                     	ds	2
   905                           	global	??i1___lwmod
   906  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   907  0076                     	ds	1
   908                           	global	i1___lwmod@counter
   909  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   910  0077                     	ds	1
   911                           	global	??_isr1
   912  0078                     ??_isr1:	; 0 bytes @ 0x6
   913  0078                     	ds	5
   914                           psect	cstackBANK0,class=BANK0,space=1
   915                           global __pcstackBANK0
   916  0020                     __pcstackBANK0:
   917                           	global	??_ser_init
   918  0020                     ??_ser_init:	; 0 bytes @ 0x0
   919                           	global	??_ser_putch
   920  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   921                           	global	??_Menu
   922  0020                     ??_Menu:	; 0 bytes @ 0x0
   923                           	global	??_ser_getch
   924  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   925                           	global	??_init_adc
   926  0020                     ??_init_adc:	; 0 bytes @ 0x0
   927                           	global	??_lcd_write_control
   928  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   929                           	global	??_lcd_write_data
   930  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   931                           	global	??_spi_transfer
   932  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   933                           	global	??_ser_isrx
   934  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   935                           	global	?_adc_read
   936  0020                     ?_adc_read:	; 2 bytes @ 0x0
   937                           	global	?___wmul
   938  0020                     ?___wmul:	; 2 bytes @ 0x0
   939                           	global	?___awmod
   940  0020                     ?___awmod:	; 2 bytes @ 0x0
   941                           	global	?___ftpack
   942  0020                     ?___ftpack:	; 3 bytes @ 0x0
   943                           	global	Menu@BTN_input
   944  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   945                           	global	___wmul@multiplier
   946  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   947                           	global	___awmod@divisor
   948  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   949                           	global	___ftpack@arg
   950  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
   951  0020                     	ds	1
   952                           	global	spi_transfer@temp
   953  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   954                           	global	ser_getch@c
   955  0021                     ser_getch@c:	; 1 bytes @ 0x1
   956                           	global	ser_putch@c
   957  0021                     ser_putch@c:	; 1 bytes @ 0x1
   958  0021                     	ds	1
   959                           	global	??_adc_read
   960  0022                     ??_adc_read:	; 0 bytes @ 0x2
   961                           	global	??_robo_init
   962  0022                     ??_robo_init:	; 0 bytes @ 0x2
   963                           	global	??_robot_read
   964  0022                     ??_robot_read:	; 0 bytes @ 0x2
   965                           	global	?_robotTurn
   966  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   967                           	global	lcd_write_control@databyte
   968  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   969                           	global	lcd_write_data@databyte
   970  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   971                           	global	spi_transfer@data
   972  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   973                           	global	robotTurn@distance
   974  0022                     robotTurn@distance:	; 2 bytes @ 0x2
   975                           	global	___wmul@multiplicand
   976  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   977                           	global	___awmod@dividend
   978  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   979  0022                     	ds	1
   980                           	global	?_rotate
   981  0023                     ?_rotate:	; 0 bytes @ 0x3
   982                           	global	??_lcd_set_cursor
   983  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   984                           	global	??_lcd_init
   985  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   986                           	global	??_init
   987  0023                     ??_init:	; 0 bytes @ 0x3
   988                           	global	lcd_set_cursor@address
   989  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   990                           	global	___ftpack@exp
   991  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
   992                           	global	rotate@numsteps
   993  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   994  0023                     	ds	1
   995                           	global	??_robotTurn
   996  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   997                           	global	??___wmul
   998  0024                     ??___wmul:	; 0 bytes @ 0x4
   999                           	global	??___awmod
  1000  0024                     ??___awmod:	; 0 bytes @ 0x4
  1001                           	global	___ftpack@sign
  1002  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1003                           	global	adc_read@adc_value
  1004  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1005                           	global	___wmul@product
  1006  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1007  0024                     	ds	1
  1008                           	global	??___ftpack
  1009  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1010                           	global	rotate@direction
  1011  0025                     rotate@direction:	; 1 bytes @ 0x5
  1012                           	global	___awmod@counter
  1013  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1014  0025                     	ds	1
  1015                           	global	??_rotate
  1016  0026                     ??_rotate:	; 0 bytes @ 0x6
  1017                           	global	??_adc_read_channel
  1018  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1019                           	global	?___lwdiv
  1020  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1021                           	global	___awmod@sign
  1022  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1023                           	global	___lwdiv@divisor
  1024  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1025  0026                     	ds	1
  1026                           	global	?_lcd_write_string
  1027  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1028                           	global	adc_read_channel@channel
  1029  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1030                           	global	lcd_write_string@s
  1031  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1032  0027                     	ds	1
  1033                           	global	?_readDistance
  1034  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1035                           	global	?___fttol
  1036  0028                     ?___fttol:	; 4 bytes @ 0x8
  1037                           	global	rotate@i
  1038  0028                     rotate@i:	; 2 bytes @ 0x8
  1039                           	global	___lwdiv@dividend
  1040  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1041                           	global	___fttol@f1
  1042  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1043  0028                     	ds	1
  1044                           	global	??_lcd_write_string
  1045  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1046  0029                     	ds	1
  1047                           	global	??_readDistance
  1048  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1049                           	global	??___lwdiv
  1050  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1051  002A                     	ds	1
  1052                           	global	___lwdiv@quotient
  1053  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1054  002B                     	ds	1
  1055                           	global	??___fttol
  1056  002C                     ??___fttol:	; 0 bytes @ 0xC
  1057                           	global	readDistance@fullval
  1058  002C                     readDistance@fullval:	; 2 bytes @ 0xC
  1059  002C                     	ds	1
  1060                           	global	___lwdiv@counter
  1061  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1062  002D                     	ds	1
  1063                           	global	??_ADCconvert
  1064  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1065                           	global	?___lwmod
  1066  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1067                           	global	___lwmod@divisor
  1068  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1069  002E                     	ds	2
  1070                           	global	??_readAvgDistance
  1071  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1072                           	global	___fttol@sign1
  1073  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1074                           	global	readAvgDistance@fullval
  1075  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1076                           	global	___lwmod@dividend
  1077  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1078  0030                     	ds	1
  1079                           	global	___fttol@lval
  1080  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1081  0031                     	ds	1
  1082                           	global	??___lwmod
  1083  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1084                           	global	readAvgDistance@i
  1085  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
  1086  0032                     	ds	1
  1087                           	global	___lwmod@counter
  1088  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1089  0033                     	ds	1
  1090                           	global	?_sprintf
  1091  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1092                           	global	sprintf@f
  1093  0034                     sprintf@f:	; 1 bytes @ 0x14
  1094  0034                     	ds	1
  1095                           	global	___fttol@exp1
  1096  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1097  0035                     	ds	1
  1098                           	global	?___awtoft
  1099  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1100                           	global	___awtoft@c
  1101  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1102  0036                     	ds	3
  1103                           	global	??_sprintf
  1104  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1105                           	global	??___awtoft
  1106  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1107  0039                     	ds	2
  1108                           	global	___awtoft@sign
  1109  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1110  003B                     	ds	1
  1111                           	global	?___ftmul
  1112  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  1113                           	global	sprintf@ap
  1114  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1115                           	global	___ftmul@f1
  1116  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  1117  003C                     	ds	1
  1118                           	global	sprintf@flag
  1119  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1120  003D                     	ds	1
  1121                           	global	sprintf@prec
  1122  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1123  003E                     	ds	1
  1124                           	global	___ftmul@f2
  1125  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  1126                           	global	sprintf@_val
  1127  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1128  003F                     	ds	3
  1129                           	global	??___ftmul
  1130  0042                     ??___ftmul:	; 0 bytes @ 0x22
  1131  0042                     	ds	1
  1132                           	global	sprintf@sp
  1133  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1134  0043                     	ds	1
  1135                           	global	sprintf@c
  1136  0044                     sprintf@c:	; 1 bytes @ 0x24
  1137  0044                     	ds	1
  1138                           	global	??_UpdateDisplay
  1139  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1140  0045                     	ds	1
  1141                           	global	___ftmul@exp
  1142  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  1143  0046                     	ds	1
  1144                           	global	___ftmul@f3_as_product
  1145  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  1146  0047                     	ds	2
  1147                           	global	UpdateDisplay@adcOutput
  1148  0049                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x29
  1149  0049                     	ds	1
  1150                           	global	___ftmul@cntr
  1151  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  1152  004A                     	ds	1
  1153                           	global	___ftmul@sign
  1154  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  1155  004B                     	ds	14
  1156                           	global	?_robotMove
  1157  0059                     ?_robotMove:	; 0 bytes @ 0x39
  1158                           	global	??_calibrateIR
  1159  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1160                           	global	??_ChargeMode
  1161  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1162                           	global	?_scan360
  1163  0059                     ?_scan360:	; 2 bytes @ 0x39
  1164                           	global	robotMove@distance
  1165  0059                     robotMove@distance:	; 2 bytes @ 0x39
  1166  0059                     	ds	2
  1167                           	global	??_robotMove
  1168  005B                     ??_robotMove:	; 0 bytes @ 0x3B
  1169                           	global	??_scan360
  1170  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1171                           	global	scan360@lowestVal
  1172  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1173  005B                     	ds	2
  1174                           	global	scan360@lowestSteps
  1175  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1176  005D                     	ds	2
  1177                           	global	scan360@steps
  1178  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1179  005F                     	ds	2
  1180                           	global	??_main
  1181  0061                     ??_main:	; 0 bytes @ 0x41
  1182  0061                     	ds	3
  1183                           	global	main@direction1
  1184  0064                     main@direction1:	; 2 bytes @ 0x44
  1185  0064                     	ds	2
  1186                           	global	main@RT2A
  1187  0066                     main@RT2A:	; 2 bytes @ 0x46
  1188  0066                     	ds	2
  1189                           	global	main@choice
  1190  0068                     main@choice:	; 1 bytes @ 0x48
  1191  0068                     	ds	1
  1192                           	global	main@shortwall
  1193  0069                     main@shortwall:	; 2 bytes @ 0x49
  1194  0069                     	ds	2
  1195                           	global	main@RT2P
  1196  006B                     main@RT2P:	; 2 bytes @ 0x4B
  1197  006B                     	ds	2
  1198 ;;Data sizes: Strings 149, constant 10, data 13, bss 89, persistent 0 stack 0
  1199 ;;Auto spaces:   Size  Autos    Used
  1200 ;; COMMON          14     11      14
  1201 ;; BANK0           80     77      80
  1202 ;; BANK1           80      0      66
  1203 ;; BANK3           96      0      32
  1204 ;; BANK2           96      0       0
  1205                           
  1206 ;;
  1207 ;; Pointer list with targets:
  1208                           
  1209 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1210 ;;
  1211 ;; ?___ftpack	float  size(1) Largest target is 2
  1212 ;;		 -> main@RT2P(BANK0[2]), 
  1213 ;;
  1214 ;; ?___awmod	int  size(1) Largest target is 0
  1215 ;;
  1216 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1217 ;;
  1218 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1219 ;;
  1220 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1221 ;;
  1222 ;; ?___fttol	long  size(1) Largest target is 0
  1223 ;;
  1224 ;; ?___ftmul	float  size(1) Largest target is 0
  1225 ;;
  1226 ;; ?___awtoft	float  size(1) Largest target is 0
  1227 ;;
  1228 ;; ?_scan360	int  size(1) Largest target is 0
  1229 ;;
  1230 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1231 ;;
  1232 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1233 ;;
  1234 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1235 ;;		 -> STR_13(CODE[15]), 
  1236 ;;
  1237 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1238 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1239 ;;
  1240 ;; ?_sprintf	int  size(1) Largest target is 0
  1241 ;;
  1242 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1243 ;;		 -> ?_sprintf(BANK0[2]), 
  1244 ;;
  1245 ;; S8146$_cp	PTR const unsigned char  size(1) Largest target is 0
  1246 ;;
  1247 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1248 ;;
  1249 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1250 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1251 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1252 ;;
  1253 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1254 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1255 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1256 ;;
  1257 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1258 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1259 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@adcOutput(BANK0[16]), STR_12(CODE[4]), 
  1260 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1261 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1262 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1263 ;;
  1264                           
  1265                           
  1266 ;;
  1267 ;; Critical Paths under _main in COMMON
  1268 ;;
  1269 ;;   None.
  1270 ;;
  1271 ;; Critical Paths under _isr1 in COMMON
  1272 ;;
  1273 ;;   _isr1->i1___lwmod
  1274 ;;   _ReadButtons->_Debounce
  1275 ;;
  1276 ;; Critical Paths under _main in BANK0
  1277 ;;
  1278 ;;   _main->_scan360
  1279 ;;   _robotMove->_UpdateDisplay
  1280 ;;   _scan360->_UpdateDisplay
  1281 ;;   _ChargeMode->_UpdateDisplay
  1282 ;;   _calibrateIR->_UpdateDisplay
  1283 ;;   _readAvgDistance->_ADCconvert
  1284 ;;   _UpdateDisplay->_sprintf
  1285 ;;   _readDistance->_adc_read_channel
  1286 ;;   _robot_read->_ser_putch
  1287 ;;   _robot_read->_ser_getch
  1288 ;;   _lcd_init->_lcd_write_control
  1289 ;;   _lcd_write_string->___awmod
  1290 ;;   _lcd_set_cursor->_lcd_write_control
  1291 ;;   ___awtoft->___fttol
  1292 ;;   ___ftmul->___awtoft
  1293 ;;   _sprintf->___lwmod
  1294 ;;   _ADCconvert->___lwdiv
  1295 ;;   _robotTurn->_ser_putch
  1296 ;;   _rotate->_spi_transfer
  1297 ;;   _robo_init->_ser_putch
  1298 ;;   _adc_read_channel->_adc_read
  1299 ;;   ___fttol->___ftpack
  1300 ;;   ___lwmod->___lwdiv
  1301 ;;   ___lwdiv->___wmul
  1302 ;;
  1303 ;; Critical Paths under _isr1 in BANK0
  1304 ;;
  1305 ;;   None.
  1306 ;;
  1307 ;; Critical Paths under _main in BANK1
  1308 ;;
  1309 ;;   None.
  1310 ;;
  1311 ;; Critical Paths under _isr1 in BANK1
  1312 ;;
  1313 ;;   None.
  1314 ;;
  1315 ;; Critical Paths under _main in BANK3
  1316 ;;
  1317 ;;   None.
  1318 ;;
  1319 ;; Critical Paths under _isr1 in BANK3
  1320 ;;
  1321 ;;   None.
  1322 ;;
  1323 ;; Critical Paths under _main in BANK2
  1324 ;;
  1325 ;;   None.
  1326 ;;
  1327 ;; Critical Paths under _isr1 in BANK2
  1328 ;;
  1329 ;;   None.
  1330                           
  1331 ;;
  1332 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1333 ;;
  1334                           
  1335 ;;
  1336 ;;Call Graph Tables:
  1337 ;;
  1338 ;; ---------------------------------------------------------------------------------
  1339 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1340 ;; ---------------------------------------------------------------------------------
  1341 ;; (0) _main                                                12    12      0    9900
  1342 ;;                                             65 BANK0     12    12      0
  1343 ;;                               _init
  1344 ;;                         _robot_read
  1345 ;;                    _readAvgDistance
  1346 ;;                      _UpdateDisplay
  1347 ;;                               _Menu
  1348 ;;                        _calibrateIR
  1349 ;;                            _scan360
  1350 ;;                             _rotate
  1351 ;;                          _robotMove
  1352 ;;                          _robotTurn
  1353 ;;                           ___awtoft
  1354 ;;                            ___ftmul
  1355 ;;                            ___fttol
  1356 ;;                         _ChargeMode
  1357 ;; ---------------------------------------------------------------------------------
  1358 ;; (1) _robotMove                                            4     2      2    1394
  1359 ;;                                             57 BANK0      4     2      2
  1360 ;;                          _ser_putch
  1361 ;;                         _robot_read
  1362 ;;                      _UpdateDisplay
  1363 ;; ---------------------------------------------------------------------------------
  1364 ;; (1) _scan360                                              8     6      2    2074
  1365 ;;                                             57 BANK0      8     6      2
  1366 ;;                    _readAvgDistance
  1367 ;;                             _rotate
  1368 ;;                      _UpdateDisplay
  1369 ;; ---------------------------------------------------------------------------------
  1370 ;; (1) _ChargeMode                                           1     1      0    1305
  1371 ;;                                             57 BANK0      1     1      0
  1372 ;;                          _ser_putch
  1373 ;;                      _UpdateDisplay
  1374 ;; ---------------------------------------------------------------------------------
  1375 ;; (1) _calibrateIR                                          0     0      0    1381
  1376 ;;                             _rotate
  1377 ;;                      _UpdateDisplay
  1378 ;; ---------------------------------------------------------------------------------
  1379 ;; (2) _readAvgDistance                                      4     4      0     555
  1380 ;;                                             16 BANK0      4     4      0
  1381 ;;                       _readDistance
  1382 ;;                            ___lwdiv
  1383 ;;                         _ADCconvert
  1384 ;; ---------------------------------------------------------------------------------
  1385 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1386 ;;                                             37 BANK0     20    20      0
  1387 ;;                  _lcd_write_control
  1388 ;;                            _sprintf
  1389 ;;                     _lcd_set_cursor
  1390 ;;                   _lcd_write_string
  1391 ;;                            ___awmod
  1392 ;; ---------------------------------------------------------------------------------
  1393 ;; (1) _init                                                 1     1      0      44
  1394 ;;                                              3 BANK0      1     1      0
  1395 ;;                           _ser_init
  1396 ;;                           _init_adc
  1397 ;;                           _lcd_init
  1398 ;;                          _robo_init
  1399 ;; ---------------------------------------------------------------------------------
  1400 ;; (3) _readDistance                                         6     4      2      69
  1401 ;;                                              8 BANK0      6     4      2
  1402 ;;                   _adc_read_channel
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (2) _robot_read                                           2     2      0      45
  1405 ;;                                              2 BANK0      2     2      0
  1406 ;;                          _ser_putch
  1407 ;;                          _ser_getch
  1408 ;; ---------------------------------------------------------------------------------
  1409 ;; (2) _lcd_init                                             0     0      0      22
  1410 ;;                  _lcd_write_control
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (3) _lcd_write_string                                     2     0      2      67
  1413 ;;                                              7 BANK0      2     0      2
  1414 ;;                     _lcd_write_data
  1415 ;;                            ___awmod (ARG)
  1416 ;; ---------------------------------------------------------------------------------
  1417 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1418 ;;                                              3 BANK0      1     1      0
  1419 ;;                  _lcd_write_control
  1420 ;; ---------------------------------------------------------------------------------
  1421 ;; (1) ___awtoft                                             6     3      3     300
  1422 ;;                                             22 BANK0      6     3      3
  1423 ;;                           ___ftpack
  1424 ;;                            ___fttol (ARG)
  1425 ;; ---------------------------------------------------------------------------------
  1426 ;; (1) ___ftmul                                             16    10      6     535
  1427 ;;                                             28 BANK0     16    10      6
  1428 ;;                           ___ftpack
  1429 ;;                           ___awtoft (ARG)
  1430 ;;                            ___fttol (ARG)
  1431 ;; ---------------------------------------------------------------------------------
  1432 ;; (3) _ser_getch                                            2     2      0      23
  1433 ;;                                              0 BANK0      2     2      0
  1434 ;;                           _ser_isrx
  1435 ;; ---------------------------------------------------------------------------------
  1436 ;; (3) _sprintf                                             17    12      5     798
  1437 ;;                                             20 BANK0     17    12      5
  1438 ;;                            ___lwdiv
  1439 ;;                            ___lwmod
  1440 ;; ---------------------------------------------------------------------------------
  1441 ;; (3) _ADCconvert                                           2     2      0     254
  1442 ;;                                             14 BANK0      2     2      0
  1443 ;;                             ___wmul
  1444 ;;                            ___lwdiv
  1445 ;; ---------------------------------------------------------------------------------
  1446 ;; (1) _robotTurn                                            3     1      2      88
  1447 ;;                                              2 BANK0      3     1      2
  1448 ;;                          _ser_putch
  1449 ;; ---------------------------------------------------------------------------------
  1450 ;; (1) _rotate                                               7     4      3      98
  1451 ;;                                              3 BANK0      7     4      3
  1452 ;;                       _spi_transfer
  1453 ;; ---------------------------------------------------------------------------------
  1454 ;; (2) _robo_init                                            0     0      0      22
  1455 ;;                          _ser_putch
  1456 ;; ---------------------------------------------------------------------------------
  1457 ;; (4) _lcd_write_data                                       3     3      0      22
  1458 ;;                                              0 BANK0      3     3      0
  1459 ;; ---------------------------------------------------------------------------------
  1460 ;; (4) _lcd_write_control                                    3     3      0      22
  1461 ;;                                              0 BANK0      3     3      0
  1462 ;; ---------------------------------------------------------------------------------
  1463 ;; (2) _init_adc                                             1     1      0       0
  1464 ;;                                              0 BANK0      1     1      0
  1465 ;; ---------------------------------------------------------------------------------
  1466 ;; (4) _adc_read_channel                                     2     2      0      46
  1467 ;;                                              6 BANK0      2     2      0
  1468 ;;                           _adc_read
  1469 ;; ---------------------------------------------------------------------------------
  1470 ;; (3) ___awmod                                              7     3      4     296
  1471 ;;                                              0 BANK0      7     3      4
  1472 ;; ---------------------------------------------------------------------------------
  1473 ;; (1) ___fttol                                             14    10      4     252
  1474 ;;                                              8 BANK0     14    10      4
  1475 ;;                           ___ftpack (ARG)
  1476 ;; ---------------------------------------------------------------------------------
  1477 ;; (2) ___ftpack                                             8     3      5     209
  1478 ;;                                              0 BANK0      8     3      5
  1479 ;; ---------------------------------------------------------------------------------
  1480 ;; (4) ___lwmod                                              6     2      4     159
  1481 ;;                                             14 BANK0      6     2      4
  1482 ;;                            ___lwdiv (ARG)
  1483 ;; ---------------------------------------------------------------------------------
  1484 ;; (4) ___lwdiv                                              8     4      4     162
  1485 ;;                                              6 BANK0      8     4      4
  1486 ;;                             ___wmul (ARG)
  1487 ;; ---------------------------------------------------------------------------------
  1488 ;; (4) ___wmul                                               6     2      4      92
  1489 ;;                                              0 BANK0      6     2      4
  1490 ;; ---------------------------------------------------------------------------------
  1491 ;; (4) _ser_isrx                                             0     0      0       0
  1492 ;; ---------------------------------------------------------------------------------
  1493 ;; (2) _spi_transfer                                         3     3      0      30
  1494 ;;                                              0 BANK0      3     3      0
  1495 ;; ---------------------------------------------------------------------------------
  1496 ;; (1) _Menu                                                 1     1      0      22
  1497 ;;                                              0 BANK0      1     1      0
  1498 ;; ---------------------------------------------------------------------------------
  1499 ;; (2) _ser_putch                                            2     2      0      22
  1500 ;;                                              0 BANK0      2     2      0
  1501 ;; ---------------------------------------------------------------------------------
  1502 ;; (2) _ser_init                                             1     1      0       0
  1503 ;;                                              0 BANK0      1     1      0
  1504 ;; ---------------------------------------------------------------------------------
  1505 ;; (5) _adc_read                                             6     4      2      24
  1506 ;;                                              0 BANK0      6     4      2
  1507 ;; ---------------------------------------------------------------------------------
  1508 ;; Estimated maximum stack depth 5
  1509 ;; ---------------------------------------------------------------------------------
  1510 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1511 ;; ---------------------------------------------------------------------------------
  1512 ;; (6) _isr1                                                 5     5      0     521
  1513 ;;                                              6 COMMON     5     5      0
  1514 ;;                          i1___lwmod
  1515 ;;                        _ReadButtons
  1516 ;; ---------------------------------------------------------------------------------
  1517 ;; (7) _ReadButtons                                          0     0      0       0
  1518 ;;                           _Debounce
  1519 ;; ---------------------------------------------------------------------------------
  1520 ;; (7) i1___lwmod                                            6     2      4     521
  1521 ;;                                              0 COMMON     6     2      4
  1522 ;; ---------------------------------------------------------------------------------
  1523 ;; (8) _Debounce                                             1     1      0       0
  1524 ;;                                              0 COMMON     1     1      0
  1525 ;; ---------------------------------------------------------------------------------
  1526 ;; Estimated maximum stack depth 8
  1527 ;; ---------------------------------------------------------------------------------
  1528                           
  1529 ;; Call Graph Graphs:
  1530                           
  1531 ;; _main (ROOT)
  1532 ;;   _init
  1533 ;;     _ser_init
  1534 ;;     _init_adc
  1535 ;;     _lcd_init
  1536 ;;       _lcd_write_control
  1537 ;;     _robo_init
  1538 ;;       _ser_putch
  1539 ;;   _robot_read
  1540 ;;     _ser_putch
  1541 ;;     _ser_getch
  1542 ;;       _ser_isrx
  1543 ;;   _readAvgDistance
  1544 ;;     _readDistance
  1545 ;;       _adc_read_channel
  1546 ;;         _adc_read
  1547 ;;     ___lwdiv
  1548 ;;       ___wmul (ARG)
  1549 ;;     _ADCconvert
  1550 ;;       ___wmul
  1551 ;;       ___lwdiv
  1552 ;;         ___wmul (ARG)
  1553 ;;   _UpdateDisplay
  1554 ;;     _lcd_write_control
  1555 ;;     _sprintf
  1556 ;;       ___lwdiv
  1557 ;;         ___wmul (ARG)
  1558 ;;       ___lwmod
  1559 ;;         ___lwdiv (ARG)
  1560 ;;           ___wmul (ARG)
  1561 ;;     _lcd_set_cursor
  1562 ;;       _lcd_write_control
  1563 ;;     _lcd_write_string
  1564 ;;       _lcd_write_data
  1565 ;;       ___awmod (ARG)
  1566 ;;     ___awmod
  1567 ;;   _Menu
  1568 ;;   _calibrateIR
  1569 ;;     _rotate
  1570 ;;       _spi_transfer
  1571 ;;     _UpdateDisplay
  1572 ;;       _lcd_write_control
  1573 ;;       _sprintf
  1574 ;;         ___lwdiv
  1575 ;;           ___wmul (ARG)
  1576 ;;         ___lwmod
  1577 ;;           ___lwdiv (ARG)
  1578 ;;             ___wmul (ARG)
  1579 ;;       _lcd_set_cursor
  1580 ;;         _lcd_write_control
  1581 ;;       _lcd_write_string
  1582 ;;         _lcd_write_data
  1583 ;;         ___awmod (ARG)
  1584 ;;       ___awmod
  1585 ;;   _scan360
  1586 ;;     _readAvgDistance
  1587 ;;       _readDistance
  1588 ;;         _adc_read_channel
  1589 ;;           _adc_read
  1590 ;;       ___lwdiv
  1591 ;;         ___wmul (ARG)
  1592 ;;       _ADCconvert
  1593 ;;         ___wmul
  1594 ;;         ___lwdiv
  1595 ;;           ___wmul (ARG)
  1596 ;;     _rotate
  1597 ;;       _spi_transfer
  1598 ;;     _UpdateDisplay
  1599 ;;       _lcd_write_control
  1600 ;;       _sprintf
  1601 ;;         ___lwdiv
  1602 ;;           ___wmul (ARG)
  1603 ;;         ___lwmod
  1604 ;;           ___lwdiv (ARG)
  1605 ;;             ___wmul (ARG)
  1606 ;;       _lcd_set_cursor
  1607 ;;         _lcd_write_control
  1608 ;;       _lcd_write_string
  1609 ;;         _lcd_write_data
  1610 ;;         ___awmod (ARG)
  1611 ;;       ___awmod
  1612 ;;   _rotate
  1613 ;;     _spi_transfer
  1614 ;;   _robotMove
  1615 ;;     _ser_putch
  1616 ;;     _robot_read
  1617 ;;       _ser_putch
  1618 ;;       _ser_getch
  1619 ;;         _ser_isrx
  1620 ;;     _UpdateDisplay
  1621 ;;       _lcd_write_control
  1622 ;;       _sprintf
  1623 ;;         ___lwdiv
  1624 ;;           ___wmul (ARG)
  1625 ;;         ___lwmod
  1626 ;;           ___lwdiv (ARG)
  1627 ;;             ___wmul (ARG)
  1628 ;;       _lcd_set_cursor
  1629 ;;         _lcd_write_control
  1630 ;;       _lcd_write_string
  1631 ;;         _lcd_write_data
  1632 ;;         ___awmod (ARG)
  1633 ;;       ___awmod
  1634 ;;   _robotTurn
  1635 ;;     _ser_putch
  1636 ;;   ___awtoft
  1637 ;;     ___ftpack
  1638 ;;     ___fttol (ARG)
  1639 ;;       ___ftpack (ARG)
  1640 ;;   ___ftmul
  1641 ;;     ___ftpack
  1642 ;;     ___awtoft (ARG)
  1643 ;;       ___ftpack
  1644 ;;       ___fttol (ARG)
  1645 ;;         ___ftpack (ARG)
  1646 ;;     ___fttol (ARG)
  1647 ;;       ___ftpack (ARG)
  1648 ;;   ___fttol
  1649 ;;     ___ftpack (ARG)
  1650 ;;   _ChargeMode
  1651 ;;     _ser_putch
  1652 ;;     _UpdateDisplay
  1653 ;;       _lcd_write_control
  1654 ;;       _sprintf
  1655 ;;         ___lwdiv
  1656 ;;           ___wmul (ARG)
  1657 ;;         ___lwmod
  1658 ;;           ___lwdiv (ARG)
  1659 ;;             ___wmul (ARG)
  1660 ;;       _lcd_set_cursor
  1661 ;;         _lcd_write_control
  1662 ;;       _lcd_write_string
  1663 ;;         _lcd_write_data
  1664 ;;         ___awmod (ARG)
  1665 ;;       ___awmod
  1666 ;;
  1667 ;; _isr1 (ROOT)
  1668 ;;   i1___lwmod
  1669 ;;   _ReadButtons
  1670 ;;     _Debounce
  1671 ;;
  1672                           
  1673 ;; Address spaces:
  1674                           
  1675 ;;Name               Size   Autos  Total    Cost      Usage
  1676 ;;BANK3               60      0      20       9       33.3%
  1677 ;;BITBANK3            60      0       0       8        0.0%
  1678 ;;SFR3                 0      0       0       4        0.0%
  1679 ;;BITSFR3              0      0       0       4        0.0%
  1680 ;;BANK2               60      0       0      11        0.0%
  1681 ;;BITBANK2            60      0       0      10        0.0%
  1682 ;;SFR2                 0      0       0       5        0.0%
  1683 ;;BITSFR2              0      0       0       5        0.0%
  1684 ;;SFR1                 0      0       0       2        0.0%
  1685 ;;BITSFR1              0      0       0       2        0.0%
  1686 ;;BANK1               50      0      42       7       82.5%
  1687 ;;BITBANK1            50      0       0       6        0.0%
  1688 ;;CODE                 0      0       0       0        0.0%
  1689 ;;DATA                 0      0      CB      12        0.0%
  1690 ;;ABS                  0      0      C0       3        0.0%
  1691 ;;NULL                 0      0       0       0        0.0%
  1692 ;;STACK                0      0       B       2        0.0%
  1693 ;;BANK0               50     4D      50       5      100.0%
  1694 ;;BITBANK0            50      0       0       4        0.0%
  1695 ;;SFR0                 0      0       0       1        0.0%
  1696 ;;BITSFR0              0      0       0       1        0.0%
  1697 ;;COMMON               E      B       E       1      100.0%
  1698 ;;BITCOMMON            E      0       2       0       14.3%
  1699 ;;EEDATA             100      0       0       0        0.0%
  1700                           
  1701                           	global	_main
  1702                           psect	maintext,global,class=CODE,delta=2
  1703                           global __pmaintext
  1704  0015                     __pmaintext:
  1705                           
  1706 ;; *************** function _main *****************
  1707 ;; Defined at:
  1708 ;;		line 297 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  RT2P            2   75[BANK0 ] int 
  1713 ;;  RT2A            2   70[BANK0 ] int 
  1714 ;;  direction1      2   68[BANK0 ] int 
  1715 ;;  shortwall       2   73[BANK0 ] int 
  1716 ;;  choice          1   72[BANK0 ] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;		None               void
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 17F/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       0       0       0       0
  1727 ;;      Locals:         0       9       0       0       0
  1728 ;;      Temps:          0       3       0       0       0
  1729 ;;      Totals:         0      12       0       0       0
  1730 ;;Total ram usage:       12 bytes
  1731 ;; Hardware stack levels required when called:    8
  1732 ;; This function calls:
  1733 ;;		_init
  1734 ;;		_robot_read
  1735 ;;		_readAvgDistance
  1736 ;;		_UpdateDisplay
  1737 ;;		_Menu
  1738 ;;		_calibrateIR
  1739 ;;		_scan360
  1740 ;;		_rotate
  1741 ;;		_robotMove
  1742 ;;		_robotTurn
  1743 ;;		___awtoft
  1744 ;;		___ftmul
  1745 ;;		___fttol
  1746 ;;		_ChargeMode
  1747 ;; This function is called by:
  1748 ;;		Startup code after reset
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           psect	maintext
  1752                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  1753                           	line	297
  1754                           	global	__size_of_main
  1755  0286                     	__size_of_main	equ	__end_of_main-_main
  1756                           	
  1757  0015                     _main:	
  1758                           	opt	stack 0
  1759                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1760                           	line	298
  1761                           	
  1762  0015                     l11521:	
  1763                           ;Main.c: 298: unsigned char choice = 255;
  1764  0015  30FF               	movlw	(0FFh)
  1765  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  1766  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  1767  0018  00E1               	movwf	(??_main+0)+0
  1768  0019  0861               	movf	(??_main+0)+0,w
  1769  001A  00E8               	movwf	(main@choice)
  1770                           	line	299
  1771                           	
  1772  001B                     l11523:	
  1773                           ;Main.c: 299: int shortwall = 0;
  1774  001B  01E9               	clrf	(main@shortwall)
  1775  001C  01EA               	clrf	(main@shortwall+1)
  1776                           	line	303
  1777                           	
  1778  001D                     l11525:	
  1779                           ;Main.c: 303: init();
  1780  001D  160A  118A  2722   	fcall	_init
              120A  118A         
  1781  0022  2823               	goto	l11527
  1782                           	line	308
  1783                           ;Main.c: 308: while(1)
  1784                           	
  1785  0023                     l2259:	
  1786                           	line	312
  1787                           	
  1788  0023                     l11527:	
  1789                           ;Main.c: 309: {
  1790                           ;Main.c: 312: if (RTC_FLAG_250MS == 1)
  1791  0023  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1792  0024  2826               	goto	u5461
  1793  0025  2827               	goto	u5460
  1794  0026                     u5461:
  1795  0026  2869               	goto	l11559
  1796  0027                     u5460:
  1797                           	line	314
  1798                           	
  1799  0027                     l11529:	
  1800                           ;Main.c: 313: {
  1801                           ;Main.c: 314: RTC_FLAG_250MS = 0;
  1802  0027  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1803                           	line	315
  1804                           	
  1805  0028                     l11531:	
  1806                           ;Main.c: 315: robot_read();
  1807  0028  120A  158A  2242   	fcall	_robot_read
              120A  118A         
  1808                           	line	316
  1809                           	
  1810  002D                     l11533:	
  1811                           ;Main.c: 316: readAvgDistance();
  1812  002D  120A  158A  2295   	fcall	_readAvgDistance
              120A  118A         
  1813                           	line	317
  1814                           	
  1815  0032                     l11535:	
  1816                           ;Main.c: 317: UpdateDisplay();
  1817  0032  120A  118A  24BE   	fcall	_UpdateDisplay
              120A  118A         
  1818  0037  2869               	goto	l11559
  1819                           	line	318
  1820                           	
  1821  0038                     l2260:	
  1822                           	line	320
  1823                           ;Main.c: 318: }
  1824                           ;Main.c: 320: switch (buttonPressed)
  1825  0038  2869               	goto	l11559
  1826                           	line	322
  1827                           ;Main.c: 321: {
  1828                           ;Main.c: 322: case 1:
  1829                           	
  1830  0039                     l2262:	
  1831                           	line	323
  1832                           	
  1833  0039                     l11537:	
  1834                           ;Main.c: 323: Menu(1);
  1835  0039  3001               	movlw	(01h)
  1836  003A  120A  158A  215B   	fcall	_Menu
              120A  118A         
  1837                           	line	325
  1838                           	
  1839  003F                     l11539:	
  1840                           ;Main.c: 325: buttonPressed = 0;
  1841  003F  01FD               	clrf	(_buttonPressed)	;volatile
  1842                           	line	327
  1843                           ;Main.c: 327: break;
  1844  0040  2A7A               	goto	l11647
  1845                           	line	328
  1846                           ;Main.c: 328: case 2:
  1847                           	
  1848  0041                     l2264:	
  1849                           	line	329
  1850                           	
  1851  0041                     l11541:	
  1852                           ;Main.c: 329: Menu(2);
  1853  0041  3002               	movlw	(02h)
  1854  0042  120A  158A  215B   	fcall	_Menu
              120A  118A         
  1855                           	line	331
  1856                           	
  1857  0047                     l11543:	
  1858                           ;Main.c: 331: buttonPressed = 0;
  1859  0047  01FD               	clrf	(_buttonPressed)	;volatile
  1860                           	line	333
  1861                           ;Main.c: 333: break;
  1862  0048  2A7A               	goto	l11647
  1863                           	line	334
  1864                           ;Main.c: 334: case 3:
  1865                           	
  1866  0049                     l2265:	
  1867                           	line	335
  1868                           	
  1869  0049                     l11545:	
  1870                           ;Main.c: 335: Menu(3);
  1871  0049  3003               	movlw	(03h)
  1872  004A  120A  158A  215B   	fcall	_Menu
              120A  118A         
  1873                           	line	337
  1874                           	
  1875  004F                     l11547:	
  1876                           ;Main.c: 337: buttonPressed = 0;
  1877  004F  01FD               	clrf	(_buttonPressed)	;volatile
  1878                           	line	339
  1879                           ;Main.c: 339: break;
  1880  0050  2A7A               	goto	l11647
  1881                           	line	340
  1882                           ;Main.c: 340: case 4:
  1883                           	
  1884  0051                     l2266:	
  1885                           	line	341
  1886                           	
  1887  0051                     l11549:	
  1888                           ;Main.c: 341: Menu(4);
  1889  0051  3004               	movlw	(04h)
  1890  0052  120A  158A  215B   	fcall	_Menu
              120A  118A         
  1891                           	line	343
  1892                           	
  1893  0057                     l11551:	
  1894                           ;Main.c: 343: buttonPressed = 0;
  1895  0057  01FD               	clrf	(_buttonPressed)	;volatile
  1896                           	line	345
  1897                           ;Main.c: 345: break;
  1898  0058  2A7A               	goto	l11647
  1899                           	line	346
  1900                           ;Main.c: 346: case 5:
  1901                           	
  1902  0059                     l2267:	
  1903                           	line	347
  1904                           	
  1905  0059                     l11553:	
  1906                           ;Main.c: 347: choice = Menu(5);
  1907  0059  3005               	movlw	(05h)
  1908  005A  120A  158A  215B   	fcall	_Menu
              120A  118A         
  1909  005F  1283               	bcf	status, 5	;RP0=0, select bank0
  1910  0060  1303               	bcf	status, 6	;RP1=0, select bank0
  1911  0061  00E1               	movwf	(??_main+0)+0
  1912  0062  0861               	movf	(??_main+0)+0,w
  1913  0063  00E8               	movwf	(main@choice)
  1914                           	line	349
  1915                           	
  1916  0064                     l11555:	
  1917                           ;Main.c: 349: buttonPressed = 0;
  1918  0064  01FD               	clrf	(_buttonPressed)	;volatile
  1919                           	line	351
  1920                           ;Main.c: 351: break;
  1921  0065  2A7A               	goto	l11647
  1922                           	line	352
  1923                           ;Main.c: 352: default:
  1924                           	
  1925  0066                     l2268:	
  1926                           	line	353
  1927                           ;Main.c: 353: buttonPressed = 0;
  1928  0066  01FD               	clrf	(_buttonPressed)	;volatile
  1929                           	line	354
  1930                           ;Main.c: 354: break;
  1931  0067  2A7A               	goto	l11647
  1932                           	line	355
  1933                           	
  1934  0068                     l11557:	
  1935                           ;Main.c: 355: }
  1936  0068  2A7A               	goto	l11647
  1937                           	line	320
  1938                           	
  1939  0069                     l2261:	
  1940                           	
  1941  0069                     l11559:	
  1942  0069  087D               	movf	(_buttonPressed),w	;volatile
  1943                           	; Switch size 1, requested type "space"
  1944                           ; Number of cases is 5, Range of values is 1 to 5
  1945                           ; switch strategies available:
  1946                           ; Name         Instructions Cycles
  1947                           ; simple_byte           16     9 (average)
  1948                           ; direct_byte           26    11 (fixed)
  1949                           ; jumptable            263     9 (fixed)
  1950                           ;	Chosen strategy is simple_byte
  1951                           
  1952                           	opt asmopt_off
  1953  006A  3A01               	xorlw	1^0	; case 1
  1954  006B  1903               	skipnz
  1955  006C  2839               	goto	l11537
  1956  006D  3A03               	xorlw	2^1	; case 2
  1957  006E  1903               	skipnz
  1958  006F  2841               	goto	l11541
  1959  0070  3A01               	xorlw	3^2	; case 3
  1960  0071  1903               	skipnz
  1961  0072  2849               	goto	l11545
  1962  0073  3A07               	xorlw	4^3	; case 4
  1963  0074  1903               	skipnz
  1964  0075  2851               	goto	l11549
  1965  0076  3A01               	xorlw	5^4	; case 5
  1966  0077  1903               	skipnz
  1967  0078  2859               	goto	l11553
  1968  0079  2866               	goto	l2268
  1969                           	opt asmopt_on
  1970                           
  1971                           	line	355
  1972                           	
  1973  007A                     l2263:	
  1974                           	line	358
  1975                           ;Main.c: 358: switch (choice)
  1976  007A  2A7A               	goto	l11647
  1977                           	line	360
  1978                           ;Main.c: 359: {
  1979                           ;Main.c: 360: case 0:
  1980                           	
  1981  007B                     l2270:	
  1982                           	line	361
  1983                           	
  1984  007B                     l11561:	
  1985                           ;Main.c: 361: calibrateIR();
  1986  007B  120A  158A  22EA   	fcall	_calibrateIR
              120A  118A         
  1987                           	line	362
  1988                           ;Main.c: 362: break;
  1989  0080  2A90               	goto	l11649
  1990                           	line	363
  1991                           ;Main.c: 363: case 1:
  1992                           	
  1993  0081                     l2272:	
  1994                           	line	364
  1995                           	
  1996  0081                     l11563:	
  1997                           ;Main.c: 364: shortwall = scan360() - 13;
  1998  0081  120A  158A  23B0   	fcall	_scan360
              120A  118A         
  1999  0086  1283               	bcf	status, 5	;RP0=0, select bank0
  2000  0087  1303               	bcf	status, 6	;RP1=0, select bank0
  2001  0088  0859               	movf	(0+(?_scan360)),w
  2002  0089  3EF3               	addlw	low(-13)
  2003  008A  00E9               	movwf	(main@shortwall)
  2004  008B  085A               	movf	(1+(?_scan360)),w
  2005  008C  1803               	skipnc
  2006  008D  3E01               	addlw	1
  2007  008E  3EFF               	addlw	high(-13)
  2008  008F  00EA               	movwf	1+(main@shortwall)
  2009                           	line	365
  2010                           	
  2011  0090                     l11565:	
  2012                           ;Main.c: 365: rotate((400 - shortwall), 0);
  2013  0090  0969               	comf	(main@shortwall),w
  2014  0091  00E1               	movwf	(??_main+0)+0
  2015  0092  096A               	comf	(main@shortwall+1),w
  2016  0093  00E2               	movwf	((??_main+0)+0+1)
  2017  0094  0AE1               	incf	(??_main+0)+0,f
  2018  0095  1903               	skipnz
  2019  0096  0AE2               	incf	((??_main+0)+0+1),f
  2020  0097  0861               	movf	0+(??_main+0)+0,w
  2021  0098  3E90               	addlw	low(0190h)
  2022  0099  00A3               	movwf	(?_rotate)
  2023  009A  0862               	movf	1+(??_main+0)+0,w
  2024  009B  1803               	skipnc
  2025  009C  3E01               	addlw	1
  2026  009D  3E01               	addlw	high(0190h)
  2027  009E  00A4               	movwf	1+(?_rotate)
  2028  009F  01A5               	clrf	0+(?_rotate)+02h
  2029  00A0  120A  158A  21F2   	fcall	_rotate
              120A  118A         
  2030                           	line	366
  2031                           ;Main.c: 366: break;
  2032  00A5  2A90               	goto	l11649
  2033                           	line	367
  2034                           ;Main.c: 367: case 2:
  2035                           	
  2036  00A6                     l2273:	
  2037                           	line	368
  2038                           	
  2039  00A6                     l11567:	
  2040                           ;Main.c: 368: _delay((unsigned long)((100)*(20000000/4000.0)));
  2041                           	opt asmopt_off
  2042  00A6  3003               movlw  3
  2043  00A7  1283               	bcf	status, 5	;RP0=0, select bank0
  2044  00A8  1303               	bcf	status, 6	;RP1=0, select bank0
  2045  00A9  00E3               movwf	((??_main+0)+0+2),f
  2046  00AA  308A               movlw	138
  2047  00AB  00E2               movwf	((??_main+0)+0+1),f
  2048  00AC  3056               	movlw	86
  2049  00AD  00E1               movwf	((??_main+0)+0),f
  2050  00AE                     u5577:
  2051  00AE  0BE1               	decfsz	((??_main+0)+0),f
  2052  00AF  28AE               	goto	u5577
  2053  00B0  0BE2               	decfsz	((??_main+0)+0+1),f
  2054  00B1  28AE               	goto	u5577
  2055  00B2  0BE3               	decfsz	((??_main+0)+0+2),f
  2056  00B3  28AE               	goto	u5577
  2057  00B4  28B5               	nop2
  2058                           opt asmopt_on
  2059                           
  2060                           	line	369
  2061                           	
  2062  00B5                     l11569:	
  2063                           ;Main.c: 369: robotMove(2000);
  2064  00B5  30D0               	movlw	low(07D0h)
  2065  00B6  1283               	bcf	status, 5	;RP0=0, select bank0
  2066  00B7  1303               	bcf	status, 6	;RP1=0, select bank0
  2067  00B8  00D9               	movwf	(?_robotMove)
  2068  00B9  3007               	movlw	high(07D0h)
  2069  00BA  00DA               	movwf	((?_robotMove))+1
  2070  00BB  120A  158A  25C7   	fcall	_robotMove
              120A  118A         
  2071                           	line	372
  2072                           ;Main.c: 372: break;
  2073  00C0  2A90               	goto	l11649
  2074                           	line	373
  2075                           ;Main.c: 373: case 3:
  2076                           	
  2077  00C1                     l2274:	
  2078                           	line	374
  2079                           	
  2080  00C1                     l11571:	
  2081                           ;Main.c: 374: _delay((unsigned long)((100)*(20000000/4000.0)));
  2082                           	opt asmopt_off
  2083  00C1  3003               movlw  3
  2084  00C2  1283               	bcf	status, 5	;RP0=0, select bank0
  2085  00C3  1303               	bcf	status, 6	;RP1=0, select bank0
  2086  00C4  00E3               movwf	((??_main+0)+0+2),f
  2087  00C5  308A               movlw	138
  2088  00C6  00E2               movwf	((??_main+0)+0+1),f
  2089  00C7  3056               	movlw	86
  2090  00C8  00E1               movwf	((??_main+0)+0),f
  2091  00C9                     u5587:
  2092  00C9  0BE1               	decfsz	((??_main+0)+0),f
  2093  00CA  28C9               	goto	u5587
  2094  00CB  0BE2               	decfsz	((??_main+0)+0+1),f
  2095  00CC  28C9               	goto	u5587
  2096  00CD  0BE3               	decfsz	((??_main+0)+0+2),f
  2097  00CE  28C9               	goto	u5587
  2098  00CF  28D0               	nop2
  2099                           opt asmopt_on
  2100                           
  2101                           	line	375
  2102                           	
  2103  00D0                     l11573:	
  2104                           ;Main.c: 375: robotMove(1000);
  2105  00D0  30E8               	movlw	low(03E8h)
  2106  00D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2107  00D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2108  00D3  00D9               	movwf	(?_robotMove)
  2109  00D4  3003               	movlw	high(03E8h)
  2110  00D5  00DA               	movwf	((?_robotMove))+1
  2111  00D6  120A  158A  25C7   	fcall	_robotMove
              120A  118A         
  2112                           	line	376
  2113                           	
  2114  00DB                     l11575:	
  2115                           ;Main.c: 376: robotTurn(-90);
  2116  00DB  30A6               	movlw	low(-90)
  2117  00DC  1283               	bcf	status, 5	;RP0=0, select bank0
  2118  00DD  1303               	bcf	status, 6	;RP1=0, select bank0
  2119  00DE  00A2               	movwf	(?_robotTurn)
  2120  00DF  30FF               	movlw	high(-90)
  2121  00E0  00A3               	movwf	((?_robotTurn))+1
  2122  00E1  120A  158A  24A7   	fcall	_robotTurn
              120A  118A         
  2123                           	line	377
  2124                           	
  2125  00E6                     l11577:	
  2126                           ;Main.c: 377: robotMove(1000);
  2127  00E6  30E8               	movlw	low(03E8h)
  2128  00E7  1283               	bcf	status, 5	;RP0=0, select bank0
  2129  00E8  1303               	bcf	status, 6	;RP1=0, select bank0
  2130  00E9  00D9               	movwf	(?_robotMove)
  2131  00EA  3003               	movlw	high(03E8h)
  2132  00EB  00DA               	movwf	((?_robotMove))+1
  2133  00EC  120A  158A  25C7   	fcall	_robotMove
              120A  118A         
  2134                           	line	378
  2135                           ;Main.c: 378: break;
  2136  00F1  2A90               	goto	l11649
  2137                           	line	379
  2138                           ;Main.c: 379: case 4:
  2139                           	
  2140  00F2                     l2275:	
  2141  00F2  28F3               	goto	l11579
  2142                           	line	381
  2143                           ;Main.c: 381: while(1)
  2144                           	
  2145  00F3                     l2276:	
  2146                           	line	383
  2147                           	
  2148  00F3                     l11579:	
  2149                           ;Main.c: 382: {
  2150                           ;Main.c: 383: shortwall = scan360() - 13;
  2151  00F3  120A  158A  23B0   	fcall	_scan360
              120A  118A         
  2152  00F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2153  00F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2154  00FA  0859               	movf	(0+(?_scan360)),w
  2155  00FB  3EF3               	addlw	low(-13)
  2156  00FC  00E9               	movwf	(main@shortwall)
  2157  00FD  085A               	movf	(1+(?_scan360)),w
  2158  00FE  1803               	skipnc
  2159  00FF  3E01               	addlw	1
  2160  0100  3EFF               	addlw	high(-13)
  2161  0101  00EA               	movwf	1+(main@shortwall)
  2162                           	line	384
  2163                           	
  2164  0102                     l11581:	
  2165                           ;Main.c: 384: int RT2P = 0;
  2166  0102  01EB               	clrf	(main@RT2P)
  2167  0103  01EC               	clrf	(main@RT2P+1)
  2168                           	line	385
  2169                           	
  2170  0104                     l11583:	
  2171                           ;Main.c: 385: int direction1 = 0;
  2172  0104  01E4               	clrf	(main@direction1)
  2173  0105  01E5               	clrf	(main@direction1+1)
  2174                           	line	386
  2175                           	
  2176  0106                     l11585:	
  2177                           ;Main.c: 386: if (shortwall > 200)
  2178  0106  086A               	movf	(main@shortwall+1),w
  2179  0107  3A80               	xorlw	80h
  2180  0108  00FF               	movwf	btemp+1
  2181  0109  3080               	movlw	(high(0C9h))^80h
  2182  010A  027F               	subwf	btemp+1,w
  2183  010B  1D03               	skipz
  2184  010C  290F               	goto	u5475
  2185  010D  30C9               	movlw	low(0C9h)
  2186  010E  0269               	subwf	(main@shortwall),w
  2187  010F                     u5475:
  2188                           
  2189  010F  1C03               	skipc
  2190  0110  2912               	goto	u5471
  2191  0111  2913               	goto	u5470
  2192  0112                     u5471:
  2193  0112  291E               	goto	l11589
  2194  0113                     u5470:
  2195                           	line	387
  2196                           	
  2197  0113                     l11587:	
  2198                           ;Main.c: 387: RT2P = shortwall + 100;
  2199  0113  1283               	bcf	status, 5	;RP0=0, select bank0
  2200  0114  1303               	bcf	status, 6	;RP1=0, select bank0
  2201  0115  0869               	movf	(main@shortwall),w
  2202  0116  3E64               	addlw	low(064h)
  2203  0117  00EB               	movwf	(main@RT2P)
  2204  0118  086A               	movf	(main@shortwall+1),w
  2205  0119  1803               	skipnc
  2206  011A  3E01               	addlw	1
  2207  011B  3E00               	addlw	high(064h)
  2208  011C  00EC               	movwf	1+(main@RT2P)
  2209  011D  291E               	goto	l11589
  2210                           	
  2211  011E                     l2277:	
  2212                           	line	388
  2213                           	
  2214  011E                     l11589:	
  2215                           ;Main.c: 388: if (shortwall < 200)
  2216  011E  1283               	bcf	status, 5	;RP0=0, select bank0
  2217  011F  1303               	bcf	status, 6	;RP1=0, select bank0
  2218  0120  086A               	movf	(main@shortwall+1),w
  2219  0121  3A80               	xorlw	80h
  2220  0122  00FF               	movwf	btemp+1
  2221  0123  3080               	movlw	(high(0C8h))^80h
  2222  0124  027F               	subwf	btemp+1,w
  2223  0125  1D03               	skipz
  2224  0126  2929               	goto	u5485
  2225  0127  30C8               	movlw	low(0C8h)
  2226  0128  0269               	subwf	(main@shortwall),w
  2227  0129                     u5485:
  2228                           
  2229  0129  1803               	skipnc
  2230  012A  292C               	goto	u5481
  2231  012B  292D               	goto	u5480
  2232  012C                     u5481:
  2233  012C  2938               	goto	l11593
  2234  012D                     u5480:
  2235                           	line	389
  2236                           	
  2237  012D                     l11591:	
  2238                           ;Main.c: 389: RT2P = shortwall - 100;
  2239  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  2240  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  2241  012F  0869               	movf	(main@shortwall),w
  2242  0130  3E9C               	addlw	low(-100)
  2243  0131  00EB               	movwf	(main@RT2P)
  2244  0132  086A               	movf	(main@shortwall+1),w
  2245  0133  1803               	skipnc
  2246  0134  3E01               	addlw	1
  2247  0135  3EFF               	addlw	high(-100)
  2248  0136  00EC               	movwf	1+(main@RT2P)
  2249  0137  2938               	goto	l11593
  2250                           	
  2251  0138                     l2278:	
  2252                           	line	392
  2253                           	
  2254  0138                     l11593:	
  2255                           ;Main.c: 392: if (RT2P >= 400 && RT2P < 500 )
  2256  0138  1283               	bcf	status, 5	;RP0=0, select bank0
  2257  0139  1303               	bcf	status, 6	;RP1=0, select bank0
  2258  013A  086C               	movf	(main@RT2P+1),w
  2259  013B  3A80               	xorlw	80h
  2260  013C  00FF               	movwf	btemp+1
  2261  013D  3081               	movlw	(high(0190h))^80h
  2262  013E  027F               	subwf	btemp+1,w
  2263  013F  1D03               	skipz
  2264  0140  2943               	goto	u5495
  2265  0141  3090               	movlw	low(0190h)
  2266  0142  026B               	subwf	(main@RT2P),w
  2267  0143                     u5495:
  2268                           
  2269  0143  1C03               	skipc
  2270  0144  2946               	goto	u5491
  2271  0145  2947               	goto	u5490
  2272  0146                     u5491:
  2273  0146  2965               	goto	l11601
  2274  0147                     u5490:
  2275                           	
  2276  0147                     l11595:	
  2277  0147  1283               	bcf	status, 5	;RP0=0, select bank0
  2278  0148  1303               	bcf	status, 6	;RP1=0, select bank0
  2279  0149  086C               	movf	(main@RT2P+1),w
  2280  014A  3A80               	xorlw	80h
  2281  014B  00FF               	movwf	btemp+1
  2282  014C  3081               	movlw	(high(01F4h))^80h
  2283  014D  027F               	subwf	btemp+1,w
  2284  014E  1D03               	skipz
  2285  014F  2952               	goto	u5505
  2286  0150  30F4               	movlw	low(01F4h)
  2287  0151  026B               	subwf	(main@RT2P),w
  2288  0152                     u5505:
  2289                           
  2290  0152  1803               	skipnc
  2291  0153  2955               	goto	u5501
  2292  0154  2956               	goto	u5500
  2293  0155                     u5501:
  2294  0155  2965               	goto	l11601
  2295  0156                     u5500:
  2296                           	line	394
  2297                           	
  2298  0156                     l11597:	
  2299                           ;Main.c: 393: {
  2300                           ;Main.c: 394: RT2P = RT2P - 400;
  2301  0156  1283               	bcf	status, 5	;RP0=0, select bank0
  2302  0157  1303               	bcf	status, 6	;RP1=0, select bank0
  2303  0158  086B               	movf	(main@RT2P),w
  2304  0159  3E70               	addlw	low(-400)
  2305  015A  00EB               	movwf	(main@RT2P)
  2306  015B  086C               	movf	(main@RT2P+1),w
  2307  015C  1803               	skipnc
  2308  015D  3E01               	addlw	1
  2309  015E  3EFE               	addlw	high(-400)
  2310  015F  00EC               	movwf	1+(main@RT2P)
  2311                           	line	395
  2312                           	
  2313  0160                     l11599:	
  2314                           ;Main.c: 395: direction1 = 1;
  2315  0160  3001               	movlw	low(01h)
  2316  0161  00E4               	movwf	(main@direction1)
  2317  0162  3000               	movlw	high(01h)
  2318  0163  00E5               	movwf	((main@direction1))+1
  2319  0164  2965               	goto	l11601
  2320                           	line	396
  2321                           	
  2322  0165                     l2279:	
  2323                           	line	397
  2324                           	
  2325  0165                     l11601:	
  2326                           ;Main.c: 396: }
  2327                           ;Main.c: 397: if (RT2P >= 200 && RT2P < 400)
  2328  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  2329  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  2330  0167  086C               	movf	(main@RT2P+1),w
  2331  0168  3A80               	xorlw	80h
  2332  0169  00FF               	movwf	btemp+1
  2333  016A  3080               	movlw	(high(0C8h))^80h
  2334  016B  027F               	subwf	btemp+1,w
  2335  016C  1D03               	skipz
  2336  016D  2970               	goto	u5515
  2337  016E  30C8               	movlw	low(0C8h)
  2338  016F  026B               	subwf	(main@RT2P),w
  2339  0170                     u5515:
  2340                           
  2341  0170  1C03               	skipc
  2342  0171  2973               	goto	u5511
  2343  0172  2974               	goto	u5510
  2344  0173                     u5511:
  2345  0173  299C               	goto	l11611
  2346  0174                     u5510:
  2347                           	
  2348  0174                     l11603:	
  2349  0174  1283               	bcf	status, 5	;RP0=0, select bank0
  2350  0175  1303               	bcf	status, 6	;RP1=0, select bank0
  2351  0176  086C               	movf	(main@RT2P+1),w
  2352  0177  3A80               	xorlw	80h
  2353  0178  00FF               	movwf	btemp+1
  2354  0179  3081               	movlw	(high(0190h))^80h
  2355  017A  027F               	subwf	btemp+1,w
  2356  017B  1D03               	skipz
  2357  017C  297F               	goto	u5525
  2358  017D  3090               	movlw	low(0190h)
  2359  017E  026B               	subwf	(main@RT2P),w
  2360  017F                     u5525:
  2361                           
  2362  017F  1803               	skipnc
  2363  0180  2982               	goto	u5521
  2364  0181  2983               	goto	u5520
  2365  0182                     u5521:
  2366  0182  299C               	goto	l11611
  2367  0183                     u5520:
  2368                           	line	399
  2369                           	
  2370  0183                     l11605:	
  2371                           ;Main.c: 398: {
  2372                           ;Main.c: 399: RT2P = 400 - RT2P;
  2373  0183  1283               	bcf	status, 5	;RP0=0, select bank0
  2374  0184  1303               	bcf	status, 6	;RP1=0, select bank0
  2375  0185  096B               	comf	(main@RT2P),w
  2376  0186  00E1               	movwf	(??_main+0)+0
  2377  0187  096C               	comf	(main@RT2P+1),w
  2378  0188  00E2               	movwf	((??_main+0)+0+1)
  2379  0189  0AE1               	incf	(??_main+0)+0,f
  2380  018A  1903               	skipnz
  2381  018B  0AE2               	incf	((??_main+0)+0+1),f
  2382  018C  0861               	movf	0+(??_main+0)+0,w
  2383  018D  3E90               	addlw	low(0190h)
  2384  018E  00EB               	movwf	(main@RT2P)
  2385  018F  0862               	movf	1+(??_main+0)+0,w
  2386  0190  1803               	skipnc
  2387  0191  3E01               	addlw	1
  2388  0192  3E01               	addlw	high(0190h)
  2389  0193  00EC               	movwf	1+(main@RT2P)
  2390                           	line	400
  2391                           	
  2392  0194                     l11607:	
  2393                           ;Main.c: 400: RT2P = RT2P * -1;
  2394  0194  09EB               	comf	(main@RT2P),f
  2395  0195  09EC               	comf	(main@RT2P+1),f
  2396  0196  0AEB               	incf	(main@RT2P),f
  2397  0197  1903               	skipnz
  2398  0198  0AEC               	incf	(main@RT2P+1),f
  2399                           	line	401
  2400                           	
  2401  0199                     l11609:	
  2402                           ;Main.c: 401: direction1 = 0;
  2403  0199  01E4               	clrf	(main@direction1)
  2404  019A  01E5               	clrf	(main@direction1+1)
  2405  019B  299C               	goto	l11611
  2406                           	line	402
  2407                           	
  2408  019C                     l2280:	
  2409                           	line	403
  2410                           	
  2411  019C                     l11611:	
  2412                           ;Main.c: 402: }
  2413                           ;Main.c: 403: if (RT2P < 200 && RT2P >= 0)
  2414  019C  1283               	bcf	status, 5	;RP0=0, select bank0
  2415  019D  1303               	bcf	status, 6	;RP1=0, select bank0
  2416  019E  086C               	movf	(main@RT2P+1),w
  2417  019F  3A80               	xorlw	80h
  2418  01A0  00FF               	movwf	btemp+1
  2419  01A1  3080               	movlw	(high(0C8h))^80h
  2420  01A2  027F               	subwf	btemp+1,w
  2421  01A3  1D03               	skipz
  2422  01A4  29A7               	goto	u5535
  2423  01A5  30C8               	movlw	low(0C8h)
  2424  01A6  026B               	subwf	(main@RT2P),w
  2425  01A7                     u5535:
  2426                           
  2427  01A7  1803               	skipnc
  2428  01A8  29AA               	goto	u5531
  2429  01A9  29AB               	goto	u5530
  2430  01AA                     u5531:
  2431  01AA  29B6               	goto	l11617
  2432  01AB                     u5530:
  2433                           	
  2434  01AB                     l11613:	
  2435  01AB  1283               	bcf	status, 5	;RP0=0, select bank0
  2436  01AC  1303               	bcf	status, 6	;RP1=0, select bank0
  2437  01AD  1BEC               	btfsc	(main@RT2P+1),7
  2438  01AE  29B0               	goto	u5541
  2439  01AF  29B1               	goto	u5540
  2440  01B0                     u5541:
  2441  01B0  29B6               	goto	l11617
  2442  01B1                     u5540:
  2443                           	line	405
  2444                           	
  2445  01B1                     l11615:	
  2446                           ;Main.c: 404: {
  2447                           ;Main.c: 405: direction1 = 1;
  2448  01B1  3001               	movlw	low(01h)
  2449  01B2  00E4               	movwf	(main@direction1)
  2450  01B3  3000               	movlw	high(01h)
  2451  01B4  00E5               	movwf	((main@direction1))+1
  2452  01B5  29B6               	goto	l11617
  2453                           	line	406
  2454                           	
  2455  01B6                     l2281:	
  2456                           	line	407
  2457                           	
  2458  01B6                     l11617:	
  2459                           ;Main.c: 406: }
  2460                           ;Main.c: 407: if (RT2P < 0 && RT2P >= -200)
  2461  01B6  1283               	bcf	status, 5	;RP0=0, select bank0
  2462  01B7  1303               	bcf	status, 6	;RP1=0, select bank0
  2463  01B8  1FEC               	btfss	(main@RT2P+1),7
  2464  01B9  29BB               	goto	u5551
  2465  01BA  29BC               	goto	u5550
  2466  01BB                     u5551:
  2467  01BB  29D2               	goto	l11627
  2468  01BC                     u5550:
  2469                           	
  2470  01BC                     l11619:	
  2471  01BC  086C               	movf	(main@RT2P+1),w
  2472  01BD  3A80               	xorlw	80h
  2473  01BE  00FF               	movwf	btemp+1
  2474  01BF  307F               	movlw	(high(-200))^80h
  2475  01C0  027F               	subwf	btemp+1,w
  2476  01C1  1D03               	skipz
  2477  01C2  29C5               	goto	u5565
  2478  01C3  3038               	movlw	low(-200)
  2479  01C4  026B               	subwf	(main@RT2P),w
  2480  01C5                     u5565:
  2481                           
  2482  01C5  1C03               	skipc
  2483  01C6  29C8               	goto	u5561
  2484  01C7  29C9               	goto	u5560
  2485  01C8                     u5561:
  2486  01C8  29D2               	goto	l11627
  2487  01C9                     u5560:
  2488                           	line	410
  2489                           	
  2490  01C9                     l11621:	
  2491                           ;Main.c: 408: {
  2492                           ;Main.c: 410: direction1 = 0;
  2493  01C9  1283               	bcf	status, 5	;RP0=0, select bank0
  2494  01CA  1303               	bcf	status, 6	;RP1=0, select bank0
  2495  01CB  01E4               	clrf	(main@direction1)
  2496  01CC  01E5               	clrf	(main@direction1+1)
  2497  01CD  29D2               	goto	l11627
  2498                           	line	411
  2499                           	
  2500  01CE                     l2282:	
  2501  01CE  29D2               	goto	l11627
  2502                           	line	412
  2503                           	
  2504  01CF                     l11623:	
  2505  01CF  29D2               	goto	l11627
  2506                           	
  2507  01D0                     l11625:	
  2508  01D0  29D2               	goto	l11627
  2509                           	
  2510  01D1                     l2285:	
  2511  01D1  29D2               	goto	l11627
  2512                           	line	415
  2513                           ;Main.c: 413: {
  2514                           	
  2515  01D2                     l2283:	
  2516                           	line	417
  2517                           	
  2518  01D2                     l11627:	
  2519                           ;Main.c: 415: }
  2520                           ;Main.c: 417: rotate((400 - shortwall ), 0);
  2521  01D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2522  01D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2523  01D4  0969               	comf	(main@shortwall),w
  2524  01D5  00E1               	movwf	(??_main+0)+0
  2525  01D6  096A               	comf	(main@shortwall+1),w
  2526  01D7  00E2               	movwf	((??_main+0)+0+1)
  2527  01D8  0AE1               	incf	(??_main+0)+0,f
  2528  01D9  1903               	skipnz
  2529  01DA  0AE2               	incf	((??_main+0)+0+1),f
  2530  01DB  0861               	movf	0+(??_main+0)+0,w
  2531  01DC  3E90               	addlw	low(0190h)
  2532  01DD  00A3               	movwf	(?_rotate)
  2533  01DE  0862               	movf	1+(??_main+0)+0,w
  2534  01DF  1803               	skipnc
  2535  01E0  3E01               	addlw	1
  2536  01E1  3E01               	addlw	high(0190h)
  2537  01E2  00A4               	movwf	1+(?_rotate)
  2538  01E3  01A5               	clrf	0+(?_rotate)+02h
  2539  01E4  120A  158A  21F2   	fcall	_rotate
              120A  118A         
  2540                           	line	418
  2541                           	
  2542  01E9                     l11629:	
  2543                           ;Main.c: 418: _delay((unsigned long)((100)*(20000000/4000.0)));
  2544                           	opt asmopt_off
  2545  01E9  3003               movlw  3
  2546  01EA  1283               	bcf	status, 5	;RP0=0, select bank0
  2547  01EB  1303               	bcf	status, 6	;RP1=0, select bank0
  2548  01EC  00E3               movwf	((??_main+0)+0+2),f
  2549  01ED  308A               movlw	138
  2550  01EE  00E2               movwf	((??_main+0)+0+1),f
  2551  01EF  3056               	movlw	86
  2552  01F0  00E1               movwf	((??_main+0)+0),f
  2553  01F1                     u5597:
  2554  01F1  0BE1               	decfsz	((??_main+0)+0),f
  2555  01F2  29F1               	goto	u5597
  2556  01F3  0BE2               	decfsz	((??_main+0)+0+1),f
  2557  01F4  29F1               	goto	u5597
  2558  01F5  0BE3               	decfsz	((??_main+0)+0+2),f
  2559  01F6  29F1               	goto	u5597
  2560  01F7  29F8               	nop2
  2561                           opt asmopt_on
  2562                           
  2563                           	line	421
  2564                           	
  2565  01F8                     l11631:	
  2566                           ;Main.c: 421: int RT2A= RT2P * (36.0/40.0);
  2567  01F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2568  01F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2569  01FA  086C               	movf	(main@RT2P+1),w
  2570  01FB  01B7               	clrf	(?___awtoft+1)
  2571  01FC  07B7               	addwf	(?___awtoft+1)
  2572  01FD  086B               	movf	(main@RT2P),w
  2573  01FE  01B6               	clrf	(?___awtoft)
  2574  01FF  07B6               	addwf	(?___awtoft)
  2575                           
  2576  0200  160A  118A  269C   	fcall	___awtoft
              120A  118A         
  2577  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  2578  0206  1303               	bcf	status, 6	;RP1=0, select bank0
  2579  0207  0836               	movf	(0+(?___awtoft)),w
  2580  0208  00BF               	movwf	0+(?___ftmul)+03h
  2581  0209  0837               	movf	(1+(?___awtoft)),w
  2582  020A  00C0               	movwf	1+(?___ftmul)+03h
  2583  020B  0838               	movf	(2+(?___awtoft)),w
  2584  020C  00C1               	movwf	2+(?___ftmul)+03h
  2585  020D  3066               	movlw	0x66
  2586  020E  00BC               	movwf	(?___ftmul)
  2587  020F  3066               	movlw	0x66
  2588  0210  00BD               	movwf	(?___ftmul+1)
  2589  0211  303F               	movlw	0x3f
  2590  0212  00BE               	movwf	(?___ftmul+2)
  2591  0213  120A  158A  2712   	fcall	___ftmul
              120A  118A         
  2592  0218  1283               	bcf	status, 5	;RP0=0, select bank0
  2593  0219  1303               	bcf	status, 6	;RP1=0, select bank0
  2594  021A  083C               	movf	(0+(?___ftmul)),w
  2595  021B  00A8               	movwf	(?___fttol)
  2596  021C  083D               	movf	(1+(?___ftmul)),w
  2597  021D  00A9               	movwf	(?___fttol+1)
  2598  021E  083E               	movf	(2+(?___ftmul)),w
  2599  021F  00AA               	movwf	(?___fttol+2)
  2600  0220  120A  158A  266C   	fcall	___fttol
              120A  118A         
  2601  0225  1283               	bcf	status, 5	;RP0=0, select bank0
  2602  0226  1303               	bcf	status, 6	;RP1=0, select bank0
  2603  0227  0829               	movf	1+(((0+(?___fttol)))),w
  2604  0228  01E7               	clrf	(main@RT2A+1)
  2605  0229  07E7               	addwf	(main@RT2A+1)
  2606  022A  0828               	movf	0+(((0+(?___fttol)))),w
  2607  022B  01E6               	clrf	(main@RT2A)
  2608  022C  07E6               	addwf	(main@RT2A)
  2609                           
  2610                           	line	422
  2611                           	
  2612  022D                     l11633:	
  2613                           ;Main.c: 422: robotTurn(RT2A);
  2614  022D  0867               	movf	(main@RT2A+1),w
  2615  022E  01A3               	clrf	(?_robotTurn+1)
  2616  022F  07A3               	addwf	(?_robotTurn+1)
  2617  0230  0866               	movf	(main@RT2A),w
  2618  0231  01A2               	clrf	(?_robotTurn)
  2619  0232  07A2               	addwf	(?_robotTurn)
  2620                           
  2621  0233  120A  158A  24A7   	fcall	_robotTurn
              120A  118A         
  2622                           	line	423
  2623                           	
  2624  0238                     l11635:	
  2625                           ;Main.c: 423: _delay((unsigned long)((100)*(20000000/4000.0)));
  2626                           	opt asmopt_off
  2627  0238  3003               movlw  3
  2628  0239  1283               	bcf	status, 5	;RP0=0, select bank0
  2629  023A  1303               	bcf	status, 6	;RP1=0, select bank0
  2630  023B  00E3               movwf	((??_main+0)+0+2),f
  2631  023C  308A               movlw	138
  2632  023D  00E2               movwf	((??_main+0)+0+1),f
  2633  023E  3056               	movlw	86
  2634  023F  00E1               movwf	((??_main+0)+0),f
  2635  0240                     u5607:
  2636  0240  0BE1               	decfsz	((??_main+0)+0),f
  2637  0241  2A40               	goto	u5607
  2638  0242  0BE2               	decfsz	((??_main+0)+0+1),f
  2639  0243  2A40               	goto	u5607
  2640  0244  0BE3               	decfsz	((??_main+0)+0+2),f
  2641  0245  2A40               	goto	u5607
  2642  0246  2A47               	nop2
  2643                           opt asmopt_on
  2644                           
  2645                           	line	424
  2646                           	
  2647  0247                     l11637:	
  2648                           ;Main.c: 424: rotate(shortwall,0);
  2649  0247  1283               	bcf	status, 5	;RP0=0, select bank0
  2650  0248  1303               	bcf	status, 6	;RP1=0, select bank0
  2651  0249  086A               	movf	(main@shortwall+1),w
  2652  024A  01A4               	clrf	(?_rotate+1)
  2653  024B  07A4               	addwf	(?_rotate+1)
  2654  024C  0869               	movf	(main@shortwall),w
  2655  024D  01A3               	clrf	(?_rotate)
  2656  024E  07A3               	addwf	(?_rotate)
  2657                           
  2658  024F  01A5               	clrf	0+(?_rotate)+02h
  2659  0250  120A  158A  21F2   	fcall	_rotate
              120A  118A         
  2660                           	line	425
  2661                           	
  2662  0255                     l11639:	
  2663                           ;Main.c: 425: _delay((unsigned long)((100)*(20000000/4000.0)));
  2664                           	opt asmopt_off
  2665  0255  3003               movlw  3
  2666  0256  1283               	bcf	status, 5	;RP0=0, select bank0
  2667  0257  1303               	bcf	status, 6	;RP1=0, select bank0
  2668  0258  00E3               movwf	((??_main+0)+0+2),f
  2669  0259  308A               movlw	138
  2670  025A  00E2               movwf	((??_main+0)+0+1),f
  2671  025B  3056               	movlw	86
  2672  025C  00E1               movwf	((??_main+0)+0),f
  2673  025D                     u5617:
  2674  025D  0BE1               	decfsz	((??_main+0)+0),f
  2675  025E  2A5D               	goto	u5617
  2676  025F  0BE2               	decfsz	((??_main+0)+0+1),f
  2677  0260  2A5D               	goto	u5617
  2678  0261  0BE3               	decfsz	((??_main+0)+0+2),f
  2679  0262  2A5D               	goto	u5617
  2680  0263  2A64               	nop2
  2681                           opt asmopt_on
  2682                           
  2683                           	line	426
  2684                           	
  2685  0264                     l11641:	
  2686                           ;Main.c: 426: robotMove(200);
  2687  0264  30C8               	movlw	low(0C8h)
  2688  0265  1283               	bcf	status, 5	;RP0=0, select bank0
  2689  0266  1303               	bcf	status, 6	;RP1=0, select bank0
  2690  0267  00D9               	movwf	(?_robotMove)
  2691  0268  3000               	movlw	high(0C8h)
  2692  0269  00DA               	movwf	((?_robotMove))+1
  2693  026A  120A  158A  25C7   	fcall	_robotMove
              120A  118A         
  2694  026F  28F3               	goto	l11579
  2695                           	line	427
  2696                           	
  2697  0270                     l2286:	
  2698                           	line	381
  2699  0270  28F3               	goto	l11579
  2700                           	
  2701  0271                     l2287:	
  2702                           	line	429
  2703                           ;Main.c: 427: }
  2704                           ;Main.c: 429: break;
  2705  0271  2A90               	goto	l11649
  2706                           	line	431
  2707                           ;Main.c: 431: case 5:
  2708                           	
  2709  0272                     l2288:	
  2710                           	line	432
  2711                           	
  2712  0272                     l11643:	
  2713                           ;Main.c: 432: ChargeMode();
  2714  0272  120A  158A  2115   	fcall	_ChargeMode
              120A  118A         
  2715                           	line	433
  2716                           ;Main.c: 433: break;
  2717  0277  2A90               	goto	l11649
  2718                           	line	434
  2719                           ;Main.c: 434: default:
  2720                           	
  2721  0278                     l2289:	
  2722                           	line	436
  2723                           ;Main.c: 436: break;
  2724  0278  2A90               	goto	l11649
  2725                           	line	437
  2726                           	
  2727  0279                     l11645:	
  2728                           ;Main.c: 437: }
  2729  0279  2A90               	goto	l11649
  2730                           	line	358
  2731                           	
  2732  027A                     l2269:	
  2733                           	
  2734  027A                     l11647:	
  2735  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  2736  027B  1303               	bcf	status, 6	;RP1=0, select bank0
  2737  027C  0868               	movf	(main@choice),w
  2738                           	; Switch size 1, requested type "space"
  2739                           ; Number of cases is 6, Range of values is 0 to 5
  2740                           ; switch strategies available:
  2741                           ; Name         Instructions Cycles
  2742                           ; simple_byte           19    10 (average)
  2743                           ; direct_byte           26     8 (fixed)
  2744                           ; jumptable            260     6 (fixed)
  2745                           ; rangetable            10     6 (fixed)
  2746                           ; spacedrange           18     9 (fixed)
  2747                           ; locatedrange           6     3 (fixed)
  2748                           ;	Chosen strategy is simple_byte
  2749                           
  2750                           	opt asmopt_off
  2751  027D  3A00               	xorlw	0^0	; case 0
  2752  027E  1903               	skipnz
  2753  027F  287B               	goto	l11561
  2754  0280  3A01               	xorlw	1^0	; case 1
  2755  0281  1903               	skipnz
  2756  0282  2881               	goto	l11563
  2757  0283  3A03               	xorlw	2^1	; case 2
  2758  0284  1903               	skipnz
  2759  0285  28A6               	goto	l11567
  2760  0286  3A01               	xorlw	3^2	; case 3
  2761  0287  1903               	skipnz
  2762  0288  28C1               	goto	l11571
  2763  0289  3A07               	xorlw	4^3	; case 4
  2764  028A  1903               	skipnz
  2765  028B  28F3               	goto	l11579
  2766  028C  3A01               	xorlw	5^4	; case 5
  2767  028D  1903               	skipnz
  2768  028E  2A72               	goto	l11643
  2769  028F  2A90               	goto	l11649
  2770                           	opt asmopt_on
  2771                           
  2772                           	line	437
  2773                           	
  2774  0290                     l2271:	
  2775                           	line	438
  2776                           	
  2777  0290                     l11649:	
  2778                           ;Main.c: 438: choice = 255;
  2779  0290  30FF               	movlw	(0FFh)
  2780  0291  1283               	bcf	status, 5	;RP0=0, select bank0
  2781  0292  1303               	bcf	status, 6	;RP1=0, select bank0
  2782  0293  00E1               	movwf	(??_main+0)+0
  2783  0294  0861               	movf	(??_main+0)+0,w
  2784  0295  00E8               	movwf	(main@choice)
  2785  0296  2823               	goto	l11527
  2786                           	line	439
  2787                           	
  2788  0297                     l2290:	
  2789                           	line	308
  2790  0297  2823               	goto	l11527
  2791                           	
  2792  0298                     l2291:	
  2793                           	line	440
  2794                           	
  2795  0298                     l2292:	
  2796                           	global	start
  2797  0298  120A  118A  2812   	ljmp	start
  2798                           	opt stack 0
  2799                           GLOBAL	__end_of_main
  2800  029B                     	__end_of_main:
  2801 ;; =============== function _main ends ============
  2802                           
  2803                           	signat	_main,88
  2804                           	global	_robotMove
  2805                           psect	text1004,local,class=CODE,delta=2
  2806                           global __ptext1004
  2807  0DC7                     __ptext1004:
  2808                           
  2809 ;; *************** function _robotMove *****************
  2810 ;; Defined at:
  2811 ;;		line 40 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  distance        2   57[BANK0 ] int 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;		None               void
  2818 ;; Registers used:
  2819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       2       0       0       0
  2826 ;;      Locals:         0       0       0       0       0
  2827 ;;      Temps:          0       2       0       0       0
  2828 ;;      Totals:         0       4       0       0       0
  2829 ;;Total ram usage:        4 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    6
  2832 ;; This function calls:
  2833 ;;		_ser_putch
  2834 ;;		_robot_read
  2835 ;;		_UpdateDisplay
  2836 ;; This function is called by:
  2837 ;;		_main
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           psect	text1004
  2841                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  2842                           	line	40
  2843                           	global	__size_of_robotMove
  2844  00A5                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  2845                           	
  2846  0DC7                     _robotMove:	
  2847                           	opt	stack 1
  2848                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2849                           	line	41
  2850                           	
  2851  0DC7                     l11499:	
  2852                           ;robot.c: 41: distTravelled =0;
  2853  0DC7  1683               	bsf	status, 5	;RP0=1, select bank1
  2854  0DC8  1303               	bcf	status, 6	;RP1=0, select bank1
  2855  0DC9  01B2               	clrf	(_distTravelled)^080h
  2856  0DCA  01B3               	clrf	(_distTravelled+1)^080h
  2857                           	line	43
  2858                           	
  2859  0DCB                     l11501:	
  2860                           ;robot.c: 43: if (distance >= 0)
  2861  0DCB  1283               	bcf	status, 5	;RP0=0, select bank0
  2862  0DCC  1303               	bcf	status, 6	;RP1=0, select bank0
  2863  0DCD  1BDA               	btfsc	(robotMove@distance+1),7
  2864  0DCE  2DD0               	goto	u5431
  2865  0DCF  2DD1               	goto	u5430
  2866  0DD0                     u5431:
  2867  0DD0  2DF0               	goto	l11505
  2868  0DD1                     u5430:
  2869                           	line	45
  2870                           	
  2871  0DD1                     l11503:	
  2872                           ;robot.c: 44: {
  2873                           ;robot.c: 45: ser_putch(137);
  2874  0DD1  3089               	movlw	(089h)
  2875  0DD2  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2876                           	line	47
  2877                           ;robot.c: 47: ser_putch(0);
  2878  0DD7  3000               	movlw	(0)
  2879  0DD8  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2880                           	line	49
  2881                           ;robot.c: 49: ser_putch(50);
  2882  0DDD  3032               	movlw	(032h)
  2883  0DDE  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2884                           	line	51
  2885                           ;robot.c: 51: ser_putch(128);
  2886  0DE3  3080               	movlw	(080h)
  2887  0DE4  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2888                           	line	53
  2889                           ;robot.c: 53: ser_putch(0);
  2890  0DE9  3000               	movlw	(0)
  2891  0DEA  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2892                           	line	54
  2893                           ;robot.c: 54: }
  2894  0DEF  2E34               	goto	l11517
  2895                           	line	55
  2896                           	
  2897  0DF0                     l6023:	
  2898                           	line	57
  2899                           	
  2900  0DF0                     l11505:	
  2901                           ;robot.c: 55: else
  2902                           ;robot.c: 56: {
  2903                           ;robot.c: 57: ser_putch(137);
  2904  0DF0  3089               	movlw	(089h)
  2905  0DF1  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2906                           	line	59
  2907                           ;robot.c: 59: ser_putch(0xff);
  2908  0DF6  30FF               	movlw	(0FFh)
  2909  0DF7  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2910                           	line	61
  2911                           ;robot.c: 61: ser_putch(0x38);
  2912  0DFC  3038               	movlw	(038h)
  2913  0DFD  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2914                           	line	63
  2915                           ;robot.c: 63: ser_putch(128);
  2916  0E02  3080               	movlw	(080h)
  2917  0E03  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2918                           	line	65
  2919                           ;robot.c: 65: ser_putch(0);
  2920  0E08  3000               	movlw	(0)
  2921  0E09  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  2922  0E0E  2E34               	goto	l11517
  2923                           	line	66
  2924                           	
  2925  0E0F                     l6024:	
  2926                           	line	69
  2927                           ;robot.c: 66: }
  2928                           ;robot.c: 69: while (distTravelled <= distance)
  2929  0E0F  2E34               	goto	l11517
  2930                           	
  2931  0E10                     l6026:	
  2932                           	line	71
  2933                           	
  2934  0E10                     l11507:	
  2935                           ;robot.c: 70: {
  2936                           ;robot.c: 71: robot_read();
  2937  0E10  120A  158A  2242   	fcall	_robot_read
              120A  158A         
  2938                           	line	72
  2939                           	
  2940  0E15                     l11509:	
  2941                           ;robot.c: 72: if (BumpSensors)
  2942  0E15  1683               	bsf	status, 5	;RP0=1, select bank1
  2943  0E16  1303               	bcf	status, 6	;RP1=0, select bank1
  2944  0E17  0842               	movf	(_BumpSensors)^080h,w	;volatile
  2945  0E18  1D03               	skipz
  2946  0E19  2E1B               	goto	u5440
  2947  0E1A  2E1D               	goto	l11513
  2948  0E1B                     u5440:
  2949  0E1B  2E4D               	goto	l11519
  2950                           	line	73
  2951                           	
  2952  0E1C                     l11511:	
  2953                           ;robot.c: 73: break;
  2954  0E1C  2E4D               	goto	l11519
  2955                           	
  2956  0E1D                     l6027:	
  2957                           	line	74
  2958                           	
  2959  0E1D                     l11513:	
  2960                           ;robot.c: 74: distTravelled += DistLowByte;
  2961  0E1D  0845               	movf	(_DistLowByte)^080h,w	;volatile
  2962  0E1E  1283               	bcf	status, 5	;RP0=0, select bank0
  2963  0E1F  1303               	bcf	status, 6	;RP1=0, select bank0
  2964  0E20  00DB               	movwf	(??_robotMove+0)+0
  2965  0E21  01DC               	clrf	(??_robotMove+0)+0+1
  2966  0E22  085B               	movf	0+(??_robotMove+0)+0,w
  2967  0E23  1683               	bsf	status, 5	;RP0=1, select bank1
  2968  0E24  1303               	bcf	status, 6	;RP1=0, select bank1
  2969  0E25  07B2               	addwf	(_distTravelled)^080h,f
  2970  0E26  1803               	skipnc
  2971  0E27  0AB3               	incf	(_distTravelled+1)^080h,f
  2972  0E28  1283               	bcf	status, 5	;RP0=0, select bank0
  2973  0E29  1303               	bcf	status, 6	;RP1=0, select bank0
  2974  0E2A  085C               	movf	1+(??_robotMove+0)+0,w
  2975  0E2B  1683               	bsf	status, 5	;RP0=1, select bank1
  2976  0E2C  1303               	bcf	status, 6	;RP1=0, select bank1
  2977  0E2D  07B3               	addwf	(_distTravelled+1)^080h,f
  2978                           	line	75
  2979                           	
  2980  0E2E                     l11515:	
  2981                           ;robot.c: 75: UpdateDisplay();
  2982  0E2E  120A  118A  24BE   	fcall	_UpdateDisplay
              120A  158A         
  2983  0E33  2E34               	goto	l11517
  2984                           	line	76
  2985                           	
  2986  0E34                     l6025:	
  2987                           	line	69
  2988                           	
  2989  0E34                     l11517:	
  2990  0E34  1283               	bcf	status, 5	;RP0=0, select bank0
  2991  0E35  1303               	bcf	status, 6	;RP1=0, select bank0
  2992  0E36  085A               	movf	(robotMove@distance+1),w
  2993  0E37  3A80               	xorlw	80h
  2994  0E38  00DB               	movwf	(??_robotMove+0)+0
  2995  0E39  1683               	bsf	status, 5	;RP0=1, select bank1
  2996  0E3A  1303               	bcf	status, 6	;RP1=0, select bank1
  2997  0E3B  0833               	movf	(_distTravelled+1)^080h,w
  2998  0E3C  3A80               	xorlw	80h
  2999  0E3D  1283               	bcf	status, 5	;RP0=0, select bank0
  3000  0E3E  1303               	bcf	status, 6	;RP1=0, select bank0
  3001  0E3F  025B               	subwf	(??_robotMove+0)+0,w
  3002  0E40  1D03               	skipz
  3003  0E41  2E48               	goto	u5455
  3004  0E42  1683               	bsf	status, 5	;RP0=1, select bank1
  3005  0E43  1303               	bcf	status, 6	;RP1=0, select bank1
  3006  0E44  0832               	movf	(_distTravelled)^080h,w
  3007  0E45  1283               	bcf	status, 5	;RP0=0, select bank0
  3008  0E46  1303               	bcf	status, 6	;RP1=0, select bank0
  3009  0E47  0259               	subwf	(robotMove@distance),w
  3010  0E48                     u5455:
  3011                           
  3012  0E48  1803               	skipnc
  3013  0E49  2E4B               	goto	u5451
  3014  0E4A  2E4C               	goto	u5450
  3015  0E4B                     u5451:
  3016  0E4B  2E10               	goto	l11507
  3017  0E4C                     u5450:
  3018  0E4C  2E4D               	goto	l11519
  3019                           	
  3020  0E4D                     l6028:	
  3021                           	line	78
  3022                           	
  3023  0E4D                     l11519:	
  3024                           ;robot.c: 76: }
  3025                           ;robot.c: 78: ser_putch(137);
  3026  0E4D  3089               	movlw	(089h)
  3027  0E4E  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  3028                           	line	80
  3029                           ;robot.c: 80: ser_putch(0);
  3030  0E53  3000               	movlw	(0)
  3031  0E54  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  3032                           	line	82
  3033                           ;robot.c: 82: ser_putch(0);
  3034  0E59  3000               	movlw	(0)
  3035  0E5A  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  3036                           	line	84
  3037                           ;robot.c: 84: ser_putch(0);
  3038  0E5F  3000               	movlw	(0)
  3039  0E60  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  3040                           	line	86
  3041                           ;robot.c: 86: ser_putch(0);
  3042  0E65  3000               	movlw	(0)
  3043  0E66  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  3044                           	line	88
  3045                           	
  3046  0E6B                     l6029:	
  3047  0E6B  0008               	return
  3048                           	opt stack 0
  3049                           GLOBAL	__end_of_robotMove
  3050  0E6C                     	__end_of_robotMove:
  3051 ;; =============== function _robotMove ends ============
  3052                           
  3053                           	signat	_robotMove,4216
  3054                           	global	_scan360
  3055                           psect	text1005,local,class=CODE,delta=2
  3056                           global __ptext1005
  3057  0BB0                     __ptext1005:
  3058                           
  3059 ;; *************** function _scan360 *****************
  3060 ;; Defined at:
  3061 ;;		line 268 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  steps           2   63[BANK0 ] int 
  3066 ;;  lowestSteps     2   61[BANK0 ] int 
  3067 ;;  lowestVal       2   59[BANK0 ] int 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  2   57[BANK0 ] int 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       2       0       0       0
  3078 ;;      Locals:         0       6       0       0       0
  3079 ;;      Temps:          0       0       0       0       0
  3080 ;;      Totals:         0       8       0       0       0
  3081 ;;Total ram usage:        8 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    7
  3084 ;; This function calls:
  3085 ;;		_readAvgDistance
  3086 ;;		_rotate
  3087 ;;		_UpdateDisplay
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           psect	text1005
  3093                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3094                           	line	268
  3095                           	global	__size_of_scan360
  3096  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  3097                           	
  3098  0BB0                     _scan360:	
  3099                           	opt	stack 0
  3100                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3101                           	line	269
  3102                           	
  3103  0BB0                     l11469:	
  3104                           ;Main.c: 269: int lowestVal = 0, lowestSteps = 0;
  3105  0BB0  1283               	bcf	status, 5	;RP0=0, select bank0
  3106  0BB1  1303               	bcf	status, 6	;RP1=0, select bank0
  3107  0BB2  01DB               	clrf	(scan360@lowestVal)
  3108  0BB3  01DC               	clrf	(scan360@lowestVal+1)
  3109  0BB4  01DD               	clrf	(scan360@lowestSteps)
  3110  0BB5  01DE               	clrf	(scan360@lowestSteps+1)
  3111                           	line	271
  3112                           ;Main.c: 271: for (int steps = 0; steps < 400; steps++)
  3113  0BB6  01DF               	clrf	(scan360@steps)
  3114  0BB7  01E0               	clrf	(scan360@steps+1)
  3115                           	
  3116  0BB8                     l11471:	
  3117  0BB8  0860               	movf	(scan360@steps+1),w
  3118  0BB9  3A80               	xorlw	80h
  3119  0BBA  00FF               	movwf	btemp+1
  3120  0BBB  3081               	movlw	(high(0190h))^80h
  3121  0BBC  027F               	subwf	btemp+1,w
  3122  0BBD  1D03               	skipz
  3123  0BBE  2BC1               	goto	u5395
  3124  0BBF  3090               	movlw	low(0190h)
  3125  0BC0  025F               	subwf	(scan360@steps),w
  3126  0BC1                     u5395:
  3127                           
  3128  0BC1  1C03               	skipc
  3129  0BC2  2BC4               	goto	u5391
  3130  0BC3  2BC5               	goto	u5390
  3131  0BC4                     u5391:
  3132  0BC4  2BC7               	goto	l11475
  3133  0BC5                     u5390:
  3134  0BC5  2C20               	goto	l11495
  3135                           	
  3136  0BC6                     l11473:	
  3137  0BC6  2C20               	goto	l11495
  3138                           	line	272
  3139                           	
  3140  0BC7                     l2252:	
  3141                           	line	273
  3142                           	
  3143  0BC7                     l11475:	
  3144                           ;Main.c: 272: {
  3145                           ;Main.c: 273: readAvgDistance();
  3146  0BC7  120A  158A  2295   	fcall	_readAvgDistance
              120A  158A         
  3147                           	line	274
  3148                           	
  3149  0BCC                     l11477:	
  3150                           ;Main.c: 274: if (adcVal > lowestVal)
  3151  0BCC  1283               	bcf	status, 5	;RP0=0, select bank0
  3152  0BCD  1303               	bcf	status, 6	;RP1=0, select bank0
  3153  0BCE  086E               	movf	(_adcVal+1),w	;volatile
  3154  0BCF  025C               	subwf	(scan360@lowestVal+1),w
  3155  0BD0  1D03               	skipz
  3156  0BD1  2BD4               	goto	u5405
  3157  0BD2  086D               	movf	(_adcVal),w	;volatile
  3158  0BD3  025B               	subwf	(scan360@lowestVal),w
  3159  0BD4                     u5405:
  3160  0BD4  1803               	skipnc
  3161  0BD5  2BD7               	goto	u5401
  3162  0BD6  2BD8               	goto	u5400
  3163  0BD7                     u5401:
  3164  0BD7  2BE5               	goto	l11481
  3165  0BD8                     u5400:
  3166                           	line	276
  3167                           	
  3168  0BD8                     l11479:	
  3169                           ;Main.c: 275: {
  3170                           ;Main.c: 276: lowestVal = adcVal;
  3171  0BD8  086E               	movf	(_adcVal+1),w	;volatile
  3172  0BD9  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  3173  0BDA  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  3174  0BDB  086D               	movf	(_adcVal),w	;volatile
  3175  0BDC  01DB               	clrf	(scan360@lowestVal)	;volatile
  3176  0BDD  07DB               	addwf	(scan360@lowestVal)	;volatile
  3177                           
  3178                           	line	277
  3179                           ;Main.c: 277: lowestSteps = steps;
  3180  0BDE  0860               	movf	(scan360@steps+1),w
  3181  0BDF  01DE               	clrf	(scan360@lowestSteps+1)
  3182  0BE0  07DE               	addwf	(scan360@lowestSteps+1)
  3183  0BE1  085F               	movf	(scan360@steps),w
  3184  0BE2  01DD               	clrf	(scan360@lowestSteps)
  3185  0BE3  07DD               	addwf	(scan360@lowestSteps)
  3186                           
  3187  0BE4  2BE5               	goto	l11481
  3188                           	line	279
  3189                           	
  3190  0BE5                     l2254:	
  3191                           	line	280
  3192                           	
  3193  0BE5                     l11481:	
  3194                           ;Main.c: 279: }
  3195                           ;Main.c: 280: rotate(1, 1);
  3196  0BE5  3001               	movlw	low(01h)
  3197  0BE6  00A3               	movwf	(?_rotate)
  3198  0BE7  3000               	movlw	high(01h)
  3199  0BE8  00A4               	movwf	((?_rotate))+1
  3200  0BE9  01A5               	clrf	0+(?_rotate)+02h
  3201  0BEA  1403               	bsf	status,0
  3202  0BEB  0DA5               	rlf	0+(?_rotate)+02h,f
  3203  0BEC  120A  158A  21F2   	fcall	_rotate
              120A  158A         
  3204                           	line	282
  3205                           	
  3206  0BF1                     l11483:	
  3207                           ;Main.c: 282: if (RTC_FLAG_250MS == 1)
  3208  0BF1  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3209  0BF2  2BF4               	goto	u5411
  3210  0BF3  2BF5               	goto	u5410
  3211  0BF4                     u5411:
  3212  0BF4  2BFC               	goto	l11489
  3213  0BF5                     u5410:
  3214                           	line	284
  3215                           	
  3216  0BF5                     l11485:	
  3217                           ;Main.c: 283: {
  3218                           ;Main.c: 284: RTC_FLAG_250MS = 0;
  3219  0BF5  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3220                           	line	285
  3221                           	
  3222  0BF6                     l11487:	
  3223                           ;Main.c: 285: UpdateDisplay();
  3224  0BF6  120A  118A  24BE   	fcall	_UpdateDisplay
              120A  158A         
  3225  0BFB  2BFC               	goto	l11489
  3226                           	line	286
  3227                           	
  3228  0BFC                     l2255:	
  3229                           	line	287
  3230                           	
  3231  0BFC                     l11489:	
  3232                           ;Main.c: 286: }
  3233                           ;Main.c: 287: test = lowestSteps;
  3234  0BFC  1283               	bcf	status, 5	;RP0=0, select bank0
  3235  0BFD  1303               	bcf	status, 6	;RP1=0, select bank0
  3236  0BFE  085E               	movf	(scan360@lowestSteps+1),w
  3237  0BFF  1683               	bsf	status, 5	;RP0=1, select bank1
  3238  0C00  1303               	bcf	status, 6	;RP1=0, select bank1
  3239  0C01  01BD               	clrf	(_test+1)^080h
  3240  0C02  07BD               	addwf	(_test+1)^080h
  3241  0C03  1283               	bcf	status, 5	;RP0=0, select bank0
  3242  0C04  1303               	bcf	status, 6	;RP1=0, select bank0
  3243  0C05  085D               	movf	(scan360@lowestSteps),w
  3244  0C06  1683               	bsf	status, 5	;RP0=1, select bank1
  3245  0C07  1303               	bcf	status, 6	;RP1=0, select bank1
  3246  0C08  01BC               	clrf	(_test)^080h
  3247  0C09  07BC               	addwf	(_test)^080h
  3248                           
  3249                           	line	271
  3250                           	
  3251  0C0A                     l11491:	
  3252  0C0A  3001               	movlw	low(01h)
  3253  0C0B  1283               	bcf	status, 5	;RP0=0, select bank0
  3254  0C0C  1303               	bcf	status, 6	;RP1=0, select bank0
  3255  0C0D  07DF               	addwf	(scan360@steps),f
  3256  0C0E  1803               	skipnc
  3257  0C0F  0AE0               	incf	(scan360@steps+1),f
  3258  0C10  3000               	movlw	high(01h)
  3259  0C11  07E0               	addwf	(scan360@steps+1),f
  3260                           	
  3261  0C12                     l11493:	
  3262  0C12  0860               	movf	(scan360@steps+1),w
  3263  0C13  3A80               	xorlw	80h
  3264  0C14  00FF               	movwf	btemp+1
  3265  0C15  3081               	movlw	(high(0190h))^80h
  3266  0C16  027F               	subwf	btemp+1,w
  3267  0C17  1D03               	skipz
  3268  0C18  2C1B               	goto	u5425
  3269  0C19  3090               	movlw	low(0190h)
  3270  0C1A  025F               	subwf	(scan360@steps),w
  3271  0C1B                     u5425:
  3272                           
  3273  0C1B  1C03               	skipc
  3274  0C1C  2C1E               	goto	u5421
  3275  0C1D  2C1F               	goto	u5420
  3276  0C1E                     u5421:
  3277  0C1E  2BC7               	goto	l11475
  3278  0C1F                     u5420:
  3279  0C1F  2C20               	goto	l11495
  3280                           	
  3281  0C20                     l2253:	
  3282                           	line	290
  3283                           	
  3284  0C20                     l11495:	
  3285                           ;Main.c: 288: }
  3286                           ;Main.c: 290: return lowestSteps;
  3287  0C20  1283               	bcf	status, 5	;RP0=0, select bank0
  3288  0C21  1303               	bcf	status, 6	;RP1=0, select bank0
  3289  0C22  085E               	movf	(scan360@lowestSteps+1),w
  3290  0C23  01DA               	clrf	(?_scan360+1)
  3291  0C24  07DA               	addwf	(?_scan360+1)
  3292  0C25  085D               	movf	(scan360@lowestSteps),w
  3293  0C26  01D9               	clrf	(?_scan360)
  3294  0C27  07D9               	addwf	(?_scan360)
  3295                           
  3296  0C28  2C29               	goto	l2256
  3297                           	
  3298  0C29                     l11497:	
  3299                           	line	291
  3300                           	
  3301  0C29                     l2256:	
  3302  0C29  0008               	return
  3303                           	opt stack 0
  3304                           GLOBAL	__end_of_scan360
  3305  0C2A                     	__end_of_scan360:
  3306 ;; =============== function _scan360 ends ============
  3307                           
  3308                           	signat	_scan360,90
  3309                           	global	_ChargeMode
  3310                           psect	text1006,local,class=CODE,delta=2
  3311                           global __ptext1006
  3312  0915                     __ptext1006:
  3313                           
  3314 ;; *************** function _ChargeMode *****************
  3315 ;; Defined at:
  3316 ;;		line 214 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;		None               void
  3323 ;; Registers used:
  3324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3330 ;;      Params:         0       0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0
  3332 ;;      Temps:          0       1       0       0       0
  3333 ;;      Totals:         0       1       0       0       0
  3334 ;;Total ram usage:        1 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    6
  3337 ;; This function calls:
  3338 ;;		_ser_putch
  3339 ;;		_UpdateDisplay
  3340 ;; This function is called by:
  3341 ;;		_main
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           psect	text1006
  3345                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3346                           	line	214
  3347                           	global	__size_of_ChargeMode
  3348  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  3349                           	
  3350  0915                     _ChargeMode:	
  3351                           	opt	stack 1
  3352                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3353                           	line	216
  3354                           	
  3355  0915                     l11447:	
  3356                           ;Main.c: 216: currentMenu = 2;
  3357  0915  3002               	movlw	(02h)
  3358  0916  1283               	bcf	status, 5	;RP0=0, select bank0
  3359  0917  1303               	bcf	status, 6	;RP1=0, select bank0
  3360  0918  00D9               	movwf	(??_ChargeMode+0)+0
  3361  0919  0859               	movf	(??_ChargeMode+0)+0,w
  3362  091A  1683               	bsf	status, 5	;RP0=1, select bank1
  3363  091B  1303               	bcf	status, 6	;RP1=0, select bank1
  3364  091C  00CA               	movwf	(_currentMenu)^080h	;volatile
  3365                           	line	217
  3366                           	
  3367  091D                     l11449:	
  3368                           ;Main.c: 217: ser_putch(128);
  3369  091D  3080               	movlw	(080h)
  3370  091E  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  3371  0923  2924               	goto	l11451
  3372                           	line	219
  3373                           ;Main.c: 219: while (1)
  3374                           	
  3375  0924                     l2237:	
  3376                           	line	221
  3377                           	
  3378  0924                     l11451:	
  3379                           ;Main.c: 220: {
  3380                           ;Main.c: 221: if (RTC_FLAG_250MS == 1)
  3381  0924  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3382  0925  2927               	goto	u5381
  3383  0926  2928               	goto	u5380
  3384  0927                     u5381:
  3385  0927  2947               	goto	l11467
  3386  0928                     u5380:
  3387                           	line	223
  3388                           	
  3389  0928                     l11453:	
  3390                           ;Main.c: 222: {
  3391                           ;Main.c: 223: RTC_FLAG_250MS = 0;
  3392  0928  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3393                           	line	224
  3394                           	
  3395  0929                     l11455:	
  3396                           ;Main.c: 224: UpdateDisplay();
  3397  0929  120A  118A  24BE   	fcall	_UpdateDisplay
              120A  158A         
  3398  092E  2947               	goto	l11467
  3399                           	line	225
  3400                           	
  3401  092F                     l2238:	
  3402                           	line	226
  3403                           ;Main.c: 225: }
  3404                           ;Main.c: 226: switch (buttonPressed)
  3405  092F  2947               	goto	l11467
  3406                           	line	228
  3407                           ;Main.c: 227: {
  3408                           ;Main.c: 228: case 1:
  3409                           	
  3410  0930                     l2240:	
  3411                           	line	231
  3412                           ;Main.c: 231: buttonPressed = 0;
  3413  0930  01FD               	clrf	(_buttonPressed)	;volatile
  3414                           	line	233
  3415                           ;Main.c: 233: break;
  3416  0931  2924               	goto	l11451
  3417                           	line	234
  3418                           ;Main.c: 234: case 2:
  3419                           	
  3420  0932                     l2242:	
  3421                           	line	237
  3422                           ;Main.c: 237: buttonPressed = 0;
  3423  0932  01FD               	clrf	(_buttonPressed)	;volatile
  3424                           	line	239
  3425                           ;Main.c: 239: break;
  3426  0933  2924               	goto	l11451
  3427                           	line	240
  3428                           ;Main.c: 240: case 3:
  3429                           	
  3430  0934                     l2243:	
  3431                           	line	243
  3432                           ;Main.c: 243: buttonPressed = 0;
  3433  0934  01FD               	clrf	(_buttonPressed)	;volatile
  3434                           	line	245
  3435                           ;Main.c: 245: break;
  3436  0935  2924               	goto	l11451
  3437                           	line	246
  3438                           ;Main.c: 246: case 4:
  3439                           	
  3440  0936                     l2244:	
  3441                           	line	249
  3442                           ;Main.c: 249: buttonPressed = 0;
  3443  0936  01FD               	clrf	(_buttonPressed)	;volatile
  3444                           	line	251
  3445                           ;Main.c: 251: break;
  3446  0937  2924               	goto	l11451
  3447                           	line	252
  3448                           ;Main.c: 252: case 5:
  3449                           	
  3450  0938                     l2245:	
  3451                           	line	253
  3452                           	
  3453  0938                     l11457:	
  3454                           ;Main.c: 253: ser_putch(132);
  3455  0938  3084               	movlw	(084h)
  3456  0939  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  3457                           	line	255
  3458                           	
  3459  093E                     l11459:	
  3460                           ;Main.c: 255: buttonPressed = 0;
  3461  093E  01FD               	clrf	(_buttonPressed)	;volatile
  3462                           	line	256
  3463                           	
  3464  093F                     l11461:	
  3465                           ;Main.c: 256: currentMenu = 0;
  3466  093F  1683               	bsf	status, 5	;RP0=1, select bank1
  3467  0940  1303               	bcf	status, 6	;RP1=0, select bank1
  3468  0941  01CA               	clrf	(_currentMenu)^080h	;volatile
  3469  0942  295A               	goto	l2246
  3470                           	line	257
  3471                           	
  3472  0943                     l11463:	
  3473                           ;Main.c: 257: return;
  3474  0943  295A               	goto	l2246
  3475                           	line	259
  3476                           ;Main.c: 259: default:
  3477                           	
  3478  0944                     l2247:	
  3479                           	line	260
  3480                           ;Main.c: 260: buttonPressed = 0;
  3481  0944  01FD               	clrf	(_buttonPressed)	;volatile
  3482                           	line	261
  3483                           ;Main.c: 261: break;
  3484  0945  2924               	goto	l11451
  3485                           	line	262
  3486                           	
  3487  0946                     l11465:	
  3488                           ;Main.c: 262: }
  3489  0946  2924               	goto	l11451
  3490                           	line	226
  3491                           	
  3492  0947                     l2239:	
  3493                           	
  3494  0947                     l11467:	
  3495  0947  087D               	movf	(_buttonPressed),w	;volatile
  3496                           	; Switch size 1, requested type "space"
  3497                           ; Number of cases is 5, Range of values is 1 to 5
  3498                           ; switch strategies available:
  3499                           ; Name         Instructions Cycles
  3500                           ; simple_byte           16     9 (average)
  3501                           ; direct_byte           26    11 (fixed)
  3502                           ; jumptable            263     9 (fixed)
  3503                           ;	Chosen strategy is simple_byte
  3504                           
  3505                           	opt asmopt_off
  3506  0948  3A01               	xorlw	1^0	; case 1
  3507  0949  1903               	skipnz
  3508  094A  2930               	goto	l2240
  3509  094B  3A03               	xorlw	2^1	; case 2
  3510  094C  1903               	skipnz
  3511  094D  2932               	goto	l2242
  3512  094E  3A01               	xorlw	3^2	; case 3
  3513  094F  1903               	skipnz
  3514  0950  2934               	goto	l2243
  3515  0951  3A07               	xorlw	4^3	; case 4
  3516  0952  1903               	skipnz
  3517  0953  2936               	goto	l2244
  3518  0954  3A01               	xorlw	5^4	; case 5
  3519  0955  1903               	skipnz
  3520  0956  2938               	goto	l11457
  3521  0957  2944               	goto	l2247
  3522                           	opt asmopt_on
  3523                           
  3524                           	line	262
  3525                           	
  3526  0958                     l2241:	
  3527  0958  2924               	goto	l11451
  3528                           	line	263
  3529                           	
  3530  0959                     l2248:	
  3531                           	line	219
  3532  0959  2924               	goto	l11451
  3533                           	
  3534  095A                     l2249:	
  3535                           	line	264
  3536                           	
  3537  095A                     l2246:	
  3538  095A  0008               	return
  3539                           	opt stack 0
  3540                           GLOBAL	__end_of_ChargeMode
  3541  095B                     	__end_of_ChargeMode:
  3542 ;; =============== function _ChargeMode ends ============
  3543                           
  3544                           	signat	_ChargeMode,88
  3545                           	global	_calibrateIR
  3546                           psect	text1007,local,class=CODE,delta=2
  3547                           global __ptext1007
  3548  0AEA                     __ptext1007:
  3549                           
  3550 ;; *************** function _calibrateIR *****************
  3551 ;; Defined at:
  3552 ;;		line 163 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;		None               void
  3559 ;; Registers used:
  3560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3566 ;;      Params:         0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    6
  3573 ;; This function calls:
  3574 ;;		_rotate
  3575 ;;		_UpdateDisplay
  3576 ;; This function is called by:
  3577 ;;		_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           psect	text1007
  3581                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  3582                           	line	163
  3583                           	global	__size_of_calibrateIR
  3584  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  3585                           	
  3586  0AEA                     _calibrateIR:	
  3587                           	opt	stack 1
  3588                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3589                           	line	165
  3590                           	
  3591  0AEA                     l11417:	
  3592                           ;Main.c: 165: currentMenu = 1;
  3593  0AEA  1683               	bsf	status, 5	;RP0=1, select bank1
  3594  0AEB  1303               	bcf	status, 6	;RP1=0, select bank1
  3595  0AEC  01CA               	clrf	(_currentMenu)^080h	;volatile
  3596  0AED  1403               	bsf	status,0
  3597  0AEE  0DCA               	rlf	(_currentMenu)^080h,f	;volatile
  3598                           	line	166
  3599                           	
  3600  0AEF                     l11419:	
  3601                           ;Main.c: 166: rotate(8, 0);
  3602  0AEF  3008               	movlw	low(08h)
  3603  0AF0  1283               	bcf	status, 5	;RP0=0, select bank0
  3604  0AF1  1303               	bcf	status, 6	;RP1=0, select bank0
  3605  0AF2  00A3               	movwf	(?_rotate)
  3606  0AF3  3000               	movlw	high(08h)
  3607  0AF4  00A4               	movwf	((?_rotate))+1
  3608  0AF5  01A5               	clrf	0+(?_rotate)+02h
  3609  0AF6  120A  158A  21F2   	fcall	_rotate
              120A  158A         
  3610  0AFB  2AFC               	goto	l11421
  3611                           	line	167
  3612                           ;Main.c: 167: while (1)
  3613                           	
  3614  0AFC                     l2222:	
  3615                           	line	169
  3616                           	
  3617  0AFC                     l11421:	
  3618                           ;Main.c: 168: {
  3619                           ;Main.c: 169: if (RTC_FLAG_250MS == 1)
  3620  0AFC  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3621  0AFD  2AFF               	goto	u5371
  3622  0AFE  2B00               	goto	u5370
  3623  0AFF                     u5371:
  3624  0AFF  2B34               	goto	l11445
  3625  0B00                     u5370:
  3626                           	line	171
  3627                           	
  3628  0B00                     l11423:	
  3629                           ;Main.c: 170: {
  3630                           ;Main.c: 171: RTC_FLAG_250MS = 0;
  3631  0B00  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3632                           	line	172
  3633                           	
  3634  0B01                     l11425:	
  3635                           ;Main.c: 172: UpdateDisplay();
  3636  0B01  120A  118A  24BE   	fcall	_UpdateDisplay
              120A  158A         
  3637  0B06  2B34               	goto	l11445
  3638                           	line	173
  3639                           	
  3640  0B07                     l2223:	
  3641                           	line	174
  3642                           ;Main.c: 173: }
  3643                           ;Main.c: 174: switch (buttonPressed)
  3644  0B07  2B34               	goto	l11445
  3645                           	line	176
  3646                           ;Main.c: 175: {
  3647                           ;Main.c: 176: case 1:
  3648                           	
  3649  0B08                     l2225:	
  3650                           	line	179
  3651                           ;Main.c: 179: buttonPressed = 0;
  3652  0B08  01FD               	clrf	(_buttonPressed)	;volatile
  3653                           	line	181
  3654                           ;Main.c: 181: break;
  3655  0B09  2AFC               	goto	l11421
  3656                           	line	182
  3657                           ;Main.c: 182: case 2:
  3658                           	
  3659  0B0A                     l2227:	
  3660                           	line	185
  3661                           ;Main.c: 185: buttonPressed = 0;
  3662  0B0A  01FD               	clrf	(_buttonPressed)	;volatile
  3663                           	line	187
  3664                           ;Main.c: 187: break;
  3665  0B0B  2AFC               	goto	l11421
  3666                           	line	188
  3667                           ;Main.c: 188: case 3:
  3668                           	
  3669  0B0C                     l2228:	
  3670                           	line	189
  3671                           	
  3672  0B0C                     l11427:	
  3673                           ;Main.c: 189: rotate(1, 1);
  3674  0B0C  3001               	movlw	low(01h)
  3675  0B0D  1283               	bcf	status, 5	;RP0=0, select bank0
  3676  0B0E  1303               	bcf	status, 6	;RP1=0, select bank0
  3677  0B0F  00A3               	movwf	(?_rotate)
  3678  0B10  3000               	movlw	high(01h)
  3679  0B11  00A4               	movwf	((?_rotate))+1
  3680  0B12  01A5               	clrf	0+(?_rotate)+02h
  3681  0B13  1403               	bsf	status,0
  3682  0B14  0DA5               	rlf	0+(?_rotate)+02h,f
  3683  0B15  120A  158A  21F2   	fcall	_rotate
              120A  158A         
  3684                           	line	191
  3685                           	
  3686  0B1A                     l11429:	
  3687                           ;Main.c: 191: buttonPressed = 0;
  3688  0B1A  01FD               	clrf	(_buttonPressed)	;volatile
  3689                           	line	193
  3690                           ;Main.c: 193: break;
  3691  0B1B  2AFC               	goto	l11421
  3692                           	line	194
  3693                           ;Main.c: 194: case 4:
  3694                           	
  3695  0B1C                     l2229:	
  3696                           	line	195
  3697                           	
  3698  0B1C                     l11431:	
  3699                           ;Main.c: 195: rotate(1, 0);
  3700  0B1C  3001               	movlw	low(01h)
  3701  0B1D  1283               	bcf	status, 5	;RP0=0, select bank0
  3702  0B1E  1303               	bcf	status, 6	;RP1=0, select bank0
  3703  0B1F  00A3               	movwf	(?_rotate)
  3704  0B20  3000               	movlw	high(01h)
  3705  0B21  00A4               	movwf	((?_rotate))+1
  3706  0B22  01A5               	clrf	0+(?_rotate)+02h
  3707  0B23  120A  158A  21F2   	fcall	_rotate
              120A  158A         
  3708                           	line	197
  3709                           	
  3710  0B28                     l11433:	
  3711                           ;Main.c: 197: buttonPressed = 0;
  3712  0B28  01FD               	clrf	(_buttonPressed)	;volatile
  3713                           	line	199
  3714                           ;Main.c: 199: break;
  3715  0B29  2AFC               	goto	l11421
  3716                           	line	200
  3717                           ;Main.c: 200: case 5:
  3718                           	
  3719  0B2A                     l2230:	
  3720                           	line	201
  3721                           	
  3722  0B2A                     l11435:	
  3723                           ;Main.c: 201: totalSteps = 0;
  3724  0B2A  1683               	bsf	status, 5	;RP0=1, select bank1
  3725  0B2B  1303               	bcf	status, 6	;RP1=0, select bank1
  3726  0B2C  01C0               	clrf	(_totalSteps)^080h
  3727  0B2D  01C1               	clrf	(_totalSteps+1)^080h
  3728                           	line	203
  3729                           	
  3730  0B2E                     l11437:	
  3731                           ;Main.c: 203: buttonPressed = 0;
  3732  0B2E  01FD               	clrf	(_buttonPressed)	;volatile
  3733                           	line	204
  3734                           	
  3735  0B2F                     l11439:	
  3736                           ;Main.c: 204: currentMenu = 0;
  3737  0B2F  01CA               	clrf	(_currentMenu)^080h	;volatile
  3738  0B30  2B47               	goto	l2231
  3739                           	line	205
  3740                           	
  3741  0B31                     l11441:	
  3742                           ;Main.c: 205: return;
  3743  0B31  2B47               	goto	l2231
  3744                           	line	207
  3745                           ;Main.c: 207: default:
  3746                           	
  3747  0B32                     l2232:	
  3748                           	line	209
  3749                           ;Main.c: 209: break;
  3750  0B32  2AFC               	goto	l11421
  3751                           	line	210
  3752                           	
  3753  0B33                     l11443:	
  3754                           ;Main.c: 210: }
  3755  0B33  2AFC               	goto	l11421
  3756                           	line	174
  3757                           	
  3758  0B34                     l2224:	
  3759                           	
  3760  0B34                     l11445:	
  3761  0B34  087D               	movf	(_buttonPressed),w	;volatile
  3762                           	; Switch size 1, requested type "space"
  3763                           ; Number of cases is 5, Range of values is 1 to 5
  3764                           ; switch strategies available:
  3765                           ; Name         Instructions Cycles
  3766                           ; simple_byte           16     9 (average)
  3767                           ; direct_byte           26    11 (fixed)
  3768                           ; jumptable            263     9 (fixed)
  3769                           ;	Chosen strategy is simple_byte
  3770                           
  3771                           	opt asmopt_off
  3772  0B35  3A01               	xorlw	1^0	; case 1
  3773  0B36  1903               	skipnz
  3774  0B37  2B08               	goto	l2225
  3775  0B38  3A03               	xorlw	2^1	; case 2
  3776  0B39  1903               	skipnz
  3777  0B3A  2B0A               	goto	l2227
  3778  0B3B  3A01               	xorlw	3^2	; case 3
  3779  0B3C  1903               	skipnz
  3780  0B3D  2B0C               	goto	l11427
  3781  0B3E  3A07               	xorlw	4^3	; case 4
  3782  0B3F  1903               	skipnz
  3783  0B40  2B1C               	goto	l11431
  3784  0B41  3A01               	xorlw	5^4	; case 5
  3785  0B42  1903               	skipnz
  3786  0B43  2B2A               	goto	l11435
  3787  0B44  2AFC               	goto	l11421
  3788                           	opt asmopt_on
  3789                           
  3790                           	line	210
  3791                           	
  3792  0B45                     l2226:	
  3793  0B45  2AFC               	goto	l11421
  3794                           	line	211
  3795                           	
  3796  0B46                     l2233:	
  3797                           	line	167
  3798  0B46  2AFC               	goto	l11421
  3799                           	
  3800  0B47                     l2234:	
  3801                           	line	212
  3802                           	
  3803  0B47                     l2231:	
  3804  0B47  0008               	return
  3805                           	opt stack 0
  3806                           GLOBAL	__end_of_calibrateIR
  3807  0B48                     	__end_of_calibrateIR:
  3808 ;; =============== function _calibrateIR ends ============
  3809                           
  3810                           	signat	_calibrateIR,88
  3811                           	global	_readAvgDistance
  3812                           psect	text1008,local,class=CODE,delta=2
  3813                           global __ptext1008
  3814  0A95                     __ptext1008:
  3815                           
  3816 ;; *************** function _readAvgDistance *****************
  3817 ;; Defined at:
  3818 ;;		line 10 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  i               2   18[BANK0 ] int 
  3823 ;;  fullval         2   16[BANK0 ] unsigned int 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;		None               void
  3826 ;; Registers used:
  3827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3833 ;;      Params:         0       0       0       0       0
  3834 ;;      Locals:         0       4       0       0       0
  3835 ;;      Temps:          0       0       0       0       0
  3836 ;;      Totals:         0       4       0       0       0
  3837 ;;Total ram usage:        4 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    6
  3840 ;; This function calls:
  3841 ;;		_readDistance
  3842 ;;		___lwdiv
  3843 ;;		_ADCconvert
  3844 ;; This function is called by:
  3845 ;;		_scan360
  3846 ;;		_main
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           psect	text1008
  3850                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  3851                           	line	10
  3852                           	global	__size_of_readAvgDistance
  3853  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  3854                           	
  3855  0A95                     _readAvgDistance:	
  3856                           	opt	stack 0
  3857                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3858                           	line	11
  3859                           	
  3860  0A95                     l11403:	
  3861                           ;infrared.c: 11: unsigned int fullval = 0;
  3862  0A95  1283               	bcf	status, 5	;RP0=0, select bank0
  3863  0A96  1303               	bcf	status, 6	;RP1=0, select bank0
  3864  0A97  01B0               	clrf	(readAvgDistance@fullval)
  3865  0A98  01B1               	clrf	(readAvgDistance@fullval+1)
  3866                           	line	14
  3867                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  3868  0A99  01B2               	clrf	(readAvgDistance@i)
  3869  0A9A  01B3               	clrf	(readAvgDistance@i+1)
  3870                           	
  3871  0A9B                     l11405:	
  3872  0A9B  0833               	movf	(readAvgDistance@i+1),w
  3873  0A9C  3A80               	xorlw	80h
  3874  0A9D  00FF               	movwf	btemp+1
  3875  0A9E  3080               	movlw	(high(0Ah))^80h
  3876  0A9F  027F               	subwf	btemp+1,w
  3877  0AA0  1D03               	skipz
  3878  0AA1  2AA4               	goto	u5355
  3879  0AA2  300A               	movlw	low(0Ah)
  3880  0AA3  0232               	subwf	(readAvgDistance@i),w
  3881  0AA4                     u5355:
  3882                           
  3883  0AA4  1C03               	skipc
  3884  0AA5  2AA7               	goto	u5351
  3885  0AA6  2AA8               	goto	u5350
  3886  0AA7                     u5351:
  3887  0AA7  2AAA               	goto	l11409
  3888  0AA8                     u5350:
  3889  0AA8  2ACB               	goto	l11415
  3890                           	
  3891  0AA9                     l11407:	
  3892  0AA9  2ACB               	goto	l11415
  3893                           	line	15
  3894                           	
  3895  0AAA                     l2995:	
  3896                           	line	16
  3897                           	
  3898  0AAA                     l11409:	
  3899                           ;infrared.c: 15: {
  3900                           ;infrared.c: 16: fullval += readDistance();
  3901  0AAA  160A  118A  2571   	fcall	_readDistance
              120A  158A         
  3902  0AAF  1283               	bcf	status, 5	;RP0=0, select bank0
  3903  0AB0  1303               	bcf	status, 6	;RP1=0, select bank0
  3904  0AB1  0828               	movf	(0+(?_readDistance)),w
  3905  0AB2  07B0               	addwf	(readAvgDistance@fullval),f
  3906  0AB3  1803               	skipnc
  3907  0AB4  0AB1               	incf	(readAvgDistance@fullval+1),f
  3908  0AB5  0829               	movf	(1+(?_readDistance)),w
  3909  0AB6  07B1               	addwf	(readAvgDistance@fullval+1),f
  3910                           	line	14
  3911                           	
  3912  0AB7                     l11411:	
  3913  0AB7  3001               	movlw	low(01h)
  3914  0AB8  07B2               	addwf	(readAvgDistance@i),f
  3915  0AB9  1803               	skipnc
  3916  0ABA  0AB3               	incf	(readAvgDistance@i+1),f
  3917  0ABB  3000               	movlw	high(01h)
  3918  0ABC  07B3               	addwf	(readAvgDistance@i+1),f
  3919                           	
  3920  0ABD                     l11413:	
  3921  0ABD  0833               	movf	(readAvgDistance@i+1),w
  3922  0ABE  3A80               	xorlw	80h
  3923  0ABF  00FF               	movwf	btemp+1
  3924  0AC0  3080               	movlw	(high(0Ah))^80h
  3925  0AC1  027F               	subwf	btemp+1,w
  3926  0AC2  1D03               	skipz
  3927  0AC3  2AC6               	goto	u5365
  3928  0AC4  300A               	movlw	low(0Ah)
  3929  0AC5  0232               	subwf	(readAvgDistance@i),w
  3930  0AC6                     u5365:
  3931                           
  3932  0AC6  1C03               	skipc
  3933  0AC7  2AC9               	goto	u5361
  3934  0AC8  2ACA               	goto	u5360
  3935  0AC9                     u5361:
  3936  0AC9  2AAA               	goto	l11409
  3937  0ACA                     u5360:
  3938  0ACA  2ACB               	goto	l11415
  3939                           	
  3940  0ACB                     l2996:	
  3941                           	line	19
  3942                           	
  3943  0ACB                     l11415:	
  3944                           ;infrared.c: 18: }
  3945                           ;infrared.c: 19: adcVal = fullval / 10;
  3946  0ACB  300A               	movlw	low(0Ah)
  3947  0ACC  1283               	bcf	status, 5	;RP0=0, select bank0
  3948  0ACD  1303               	bcf	status, 6	;RP1=0, select bank0
  3949  0ACE  00A6               	movwf	(?___lwdiv)
  3950  0ACF  3000               	movlw	high(0Ah)
  3951  0AD0  00A7               	movwf	((?___lwdiv))+1
  3952  0AD1  0831               	movf	(readAvgDistance@fullval+1),w
  3953  0AD2  01A9               	clrf	1+(?___lwdiv)+02h
  3954  0AD3  07A9               	addwf	1+(?___lwdiv)+02h
  3955  0AD4  0830               	movf	(readAvgDistance@fullval),w
  3956  0AD5  01A8               	clrf	0+(?___lwdiv)+02h
  3957  0AD6  07A8               	addwf	0+(?___lwdiv)+02h
  3958                           
  3959  0AD7  120A  158A  21A2   	fcall	___lwdiv
              120A  158A         
  3960  0ADC  1283               	bcf	status, 5	;RP0=0, select bank0
  3961  0ADD  1303               	bcf	status, 6	;RP1=0, select bank0
  3962  0ADE  0827               	movf	(1+(?___lwdiv)),w
  3963  0ADF  01EE               	clrf	(_adcVal+1)	;volatile
  3964  0AE0  07EE               	addwf	(_adcVal+1)	;volatile
  3965  0AE1  0826               	movf	(0+(?___lwdiv)),w
  3966  0AE2  01ED               	clrf	(_adcVal)	;volatile
  3967  0AE3  07ED               	addwf	(_adcVal)	;volatile
  3968                           
  3969                           	line	20
  3970                           ;infrared.c: 20: ADCconvert();
  3971  0AE4  120A  118A  229B   	fcall	_ADCconvert
              120A  158A         
  3972                           	line	21
  3973                           	
  3974  0AE9                     l2997:	
  3975  0AE9  0008               	return
  3976                           	opt stack 0
  3977                           GLOBAL	__end_of_readAvgDistance
  3978  0AEA                     	__end_of_readAvgDistance:
  3979 ;; =============== function _readAvgDistance ends ============
  3980                           
  3981                           	signat	_readAvgDistance,88
  3982                           	global	_UpdateDisplay
  3983                           psect	text1009,local,class=CODE,delta=2
  3984                           global __ptext1009
  3985  04BE                     __ptext1009:
  3986                           
  3987 ;; *************** function _UpdateDisplay *****************
  3988 ;; Defined at:
  3989 ;;		line 216 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  adcOutput      16   41[BANK0 ] unsigned char [16]
  3994 ;; Return value:  Size  Location     Type
  3995 ;;		None               void
  3996 ;; Registers used:
  3997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         0       0       0       0       0
  4004 ;;      Locals:         0      16       0       0       0
  4005 ;;      Temps:          0       4       0       0       0
  4006 ;;      Totals:         0      20       0       0       0
  4007 ;;Total ram usage:       20 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    5
  4010 ;; This function calls:
  4011 ;;		_lcd_write_control
  4012 ;;		_sprintf
  4013 ;;		_lcd_set_cursor
  4014 ;;		_lcd_write_string
  4015 ;;		___awmod
  4016 ;; This function is called by:
  4017 ;;		_calibrateIR
  4018 ;;		_ChargeMode
  4019 ;;		_scan360
  4020 ;;		_main
  4021 ;;		_robotMove
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           psect	text1009
  4025                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  4026                           	line	216
  4027                           	global	__size_of_UpdateDisplay
  4028  015C                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4029                           	
  4030  04BE                     _UpdateDisplay:	
  4031                           	opt	stack 1
  4032                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4033                           	line	217
  4034                           	
  4035  04BE                     l11359:	
  4036                           ;HMI.c: 217: char adcOutput[16] = "";
  4037  04BE  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4038  04BF  0084               	movwf	fsr0
  4039  04C0  3090               	movlw	low(UpdateDisplay@F1229)
  4040  04C1  1283               	bcf	status, 5	;RP0=0, select bank0
  4041  04C2  1303               	bcf	status, 6	;RP1=0, select bank0
  4042  04C3  00C5               	movwf	(??_UpdateDisplay+0)+0
  4043  04C4  0804               	movf	fsr0,w
  4044  04C5  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  4045  04C6  3010               	movlw	16
  4046  04C7  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  4047  04C8                     u5330:
  4048  04C8  0845               	movf	(??_UpdateDisplay+0)+0,w
  4049  04C9  0084               	movwf	fsr0
  4050  04CA  1783               	bsf	status, 7	;select IRP bank3
  4051                           	
  4052  04CB  0800               	movf	indf,w
  4053  04CC  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  4054  04CD  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  4055  04CE  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  4056  04CF  0084               	movwf	fsr0
  4057  04D0  1383               	bcf	status, 7	;select IRP bank0
  4058                           	
  4059  04D1  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  4060  04D2  0080               	movwf	indf
  4061  04D3  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  4062  04D4  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4063  04D5  2CC8               	goto	u5330
  4064                           	line	218
  4065                           ;HMI.c: 218: switch (currentMenu)
  4066  04D6  2E0C               	goto	l11401
  4067                           	line	221
  4068                           ;HMI.c: 219: {
  4069                           ;HMI.c: 221: case 0:
  4070                           	
  4071  04D7                     l4554:	
  4072                           	line	224
  4073                           	
  4074  04D7                     l11361:	
  4075                           ;HMI.c: 224: lcd_write_control(0b00000001);
  4076  04D7  3001               	movlw	(01h)
  4077  04D8  160A  118A  2547   	fcall	_lcd_write_control
              120A  118A         
  4078                           	line	226
  4079                           	
  4080  04DD                     l11363:	
  4081                           ;HMI.c: 226: sprintf(adcOutput,"ADC:%d Dist:%d",BumpSensors, distTravelled);
  4082  04DD  302B               	movlw	((STR_13-__stringbase))&0ffh
  4083  04DE  1283               	bcf	status, 5	;RP0=0, select bank0
  4084  04DF  1303               	bcf	status, 6	;RP1=0, select bank0
  4085  04E0  00C5               	movwf	(??_UpdateDisplay+0)+0
  4086  04E1  0845               	movf	(??_UpdateDisplay+0)+0,w
  4087  04E2  00B4               	movwf	(?_sprintf)
  4088  04E3  1683               	bsf	status, 5	;RP0=1, select bank1
  4089  04E4  1303               	bcf	status, 6	;RP1=0, select bank1
  4090  04E5  0842               	movf	(_BumpSensors)^080h,w	;volatile
  4091  04E6  1283               	bcf	status, 5	;RP0=0, select bank0
  4092  04E7  1303               	bcf	status, 6	;RP1=0, select bank0
  4093  04E8  00C6               	movwf	(??_UpdateDisplay+1)+0
  4094  04E9  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  4095  04EA  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  4096  04EB  00B5               	movwf	0+(?_sprintf)+01h
  4097  04EC  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  4098  04ED  00B6               	movwf	1+(?_sprintf)+01h
  4099  04EE  1683               	bsf	status, 5	;RP0=1, select bank1
  4100  04EF  1303               	bcf	status, 6	;RP1=0, select bank1
  4101  04F0  0833               	movf	(_distTravelled+1)^080h,w
  4102  04F1  1283               	bcf	status, 5	;RP0=0, select bank0
  4103  04F2  1303               	bcf	status, 6	;RP1=0, select bank0
  4104  04F3  01B8               	clrf	1+(?_sprintf)+03h
  4105  04F4  07B8               	addwf	1+(?_sprintf)+03h
  4106  04F5  1683               	bsf	status, 5	;RP0=1, select bank1
  4107  04F6  1303               	bcf	status, 6	;RP1=0, select bank1
  4108  04F7  0832               	movf	(_distTravelled)^080h,w
  4109  04F8  1283               	bcf	status, 5	;RP0=0, select bank0
  4110  04F9  1303               	bcf	status, 6	;RP1=0, select bank0
  4111  04FA  01B7               	clrf	0+(?_sprintf)+03h
  4112  04FB  07B7               	addwf	0+(?_sprintf)+03h
  4113                           
  4114  04FC  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4115  04FD  120A  118A  261A   	fcall	_sprintf
              120A  118A         
  4116                           	line	229
  4117                           	
  4118  0502                     l11365:	
  4119                           ;HMI.c: 229: lcd_set_cursor(0x00);
  4120  0502  3000               	movlw	(0)
  4121  0503  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4122                           	line	230
  4123                           ;HMI.c: 230: lcd_write_string(adcOutput);
  4124  0508  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  4125  0509  1283               	bcf	status, 5	;RP0=0, select bank0
  4126  050A  1303               	bcf	status, 6	;RP1=0, select bank0
  4127  050B  00A7               	movwf	(?_lcd_write_string)
  4128  050C  3000               	movlw	(0x0/2)
  4129  050D  00A8               	movwf	(?_lcd_write_string+1)
  4130  050E  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4131                           	line	232
  4132                           	
  4133  0513                     l11367:	
  4134                           ;HMI.c: 232: lcd_set_cursor(0x40);
  4135  0513  3040               	movlw	(040h)
  4136  0514  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4137                           	line	233
  4138                           	
  4139  0519                     l11369:	
  4140                           ;HMI.c: 233: if (pos > 0)
  4141  0519  1683               	bsf	status, 5	;RP0=1, select bank1
  4142  051A  1303               	bcf	status, 6	;RP1=0, select bank1
  4143  051B  083B               	movf	(_pos+1)^080h,w
  4144  051C  3A80               	xorlw	80h
  4145  051D  00FF               	movwf	btemp+1
  4146  051E  3080               	movlw	(high(01h))^80h
  4147  051F  027F               	subwf	btemp+1,w
  4148  0520  1D03               	skipz
  4149  0521  2D24               	goto	u5345
  4150  0522  3001               	movlw	low(01h)
  4151  0523  023A               	subwf	(_pos)^080h,w
  4152  0524                     u5345:
  4153                           
  4154  0524  1C03               	skipc
  4155  0525  2D27               	goto	u5341
  4156  0526  2D28               	goto	u5340
  4157  0527                     u5341:
  4158  0527  2D3B               	goto	l11373
  4159  0528                     u5340:
  4160                           	line	234
  4161                           	
  4162  0528                     l11371:	
  4163                           ;HMI.c: 234: lcd_write_string(shortMenuStrings[pos - 1]);
  4164  0528  1683               	bsf	status, 5	;RP0=1, select bank1
  4165  0529  1303               	bcf	status, 6	;RP1=0, select bank1
  4166  052A  083A               	movf	(_pos)^080h,w
  4167  052B  3EFF               	addlw	0FFh
  4168  052C  3EDB               	addlw	_shortMenuStrings&0ffh
  4169  052D  0084               	movwf	fsr0
  4170  052E  1383               	bcf	status, 7	;select IRP bank1
  4171  052F  0800               	movf	indf,w
  4172  0530  1283               	bcf	status, 5	;RP0=0, select bank0
  4173  0531  1303               	bcf	status, 6	;RP1=0, select bank0
  4174  0532  00A7               	movwf	(?_lcd_write_string)
  4175  0533  3080               	movlw	80h
  4176  0534  00A8               	movwf	(?_lcd_write_string+1)
  4177  0535  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4178  053A  2D4E               	goto	l11375
  4179                           	line	235
  4180                           	
  4181  053B                     l4555:	
  4182                           	line	236
  4183                           	
  4184  053B                     l11373:	
  4185                           ;HMI.c: 235: else
  4186                           ;HMI.c: 236: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4187  053B  1683               	bsf	status, 5	;RP0=1, select bank1
  4188  053C  1303               	bcf	status, 6	;RP1=0, select bank1
  4189  053D  083A               	movf	(_pos)^080h,w
  4190  053E  3E05               	addlw	05h
  4191  053F  3EDB               	addlw	_shortMenuStrings&0ffh
  4192  0540  0084               	movwf	fsr0
  4193  0541  1383               	bcf	status, 7	;select IRP bank1
  4194  0542  0800               	movf	indf,w
  4195  0543  1283               	bcf	status, 5	;RP0=0, select bank0
  4196  0544  1303               	bcf	status, 6	;RP1=0, select bank0
  4197  0545  00A7               	movwf	(?_lcd_write_string)
  4198  0546  3080               	movlw	80h
  4199  0547  00A8               	movwf	(?_lcd_write_string+1)
  4200  0548  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4201  054D  2D4E               	goto	l11375
  4202                           	
  4203  054E                     l4556:	
  4204                           	line	237
  4205                           	
  4206  054E                     l11375:	
  4207                           ;HMI.c: 237: lcd_set_cursor(0x44);
  4208  054E  3044               	movlw	(044h)
  4209  054F  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4210                           	line	238
  4211                           	
  4212  0554                     l11377:	
  4213                           ;HMI.c: 238: lcd_write_string(menuStrings[pos]);
  4214  0554  1683               	bsf	status, 5	;RP0=1, select bank1
  4215  0555  1303               	bcf	status, 6	;RP1=0, select bank1
  4216  0556  083A               	movf	(_pos)^080h,w
  4217  0557  3ED5               	addlw	_menuStrings&0ffh
  4218  0558  0084               	movwf	fsr0
  4219  0559  1383               	bcf	status, 7	;select IRP bank1
  4220  055A  0800               	movf	indf,w
  4221  055B  1283               	bcf	status, 5	;RP0=0, select bank0
  4222  055C  1303               	bcf	status, 6	;RP1=0, select bank0
  4223  055D  00A7               	movwf	(?_lcd_write_string)
  4224  055E  3080               	movlw	80h
  4225  055F  00A8               	movwf	(?_lcd_write_string+1)
  4226  0560  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4227                           	line	239
  4228                           ;HMI.c: 239: lcd_set_cursor(0x4D);
  4229  0565  304D               	movlw	(04Dh)
  4230  0566  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4231                           	line	240
  4232                           	
  4233  056B                     l11379:	
  4234                           ;HMI.c: 240: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4235  056B  3006               	movlw	low(06h)
  4236  056C  1283               	bcf	status, 5	;RP0=0, select bank0
  4237  056D  1303               	bcf	status, 6	;RP1=0, select bank0
  4238  056E  00A0               	movwf	(?___awmod)
  4239  056F  3000               	movlw	high(06h)
  4240  0570  00A1               	movwf	((?___awmod))+1
  4241  0571  1683               	bsf	status, 5	;RP0=1, select bank1
  4242  0572  1303               	bcf	status, 6	;RP1=0, select bank1
  4243  0573  083A               	movf	(_pos)^080h,w
  4244  0574  3E01               	addlw	low(01h)
  4245  0575  1283               	bcf	status, 5	;RP0=0, select bank0
  4246  0576  1303               	bcf	status, 6	;RP1=0, select bank0
  4247  0577  00A2               	movwf	0+(?___awmod)+02h
  4248  0578  1683               	bsf	status, 5	;RP0=1, select bank1
  4249  0579  1303               	bcf	status, 6	;RP1=0, select bank1
  4250  057A  083B               	movf	(_pos+1)^080h,w
  4251  057B  1803               	skipnc
  4252  057C  3E01               	addlw	1
  4253  057D  3E00               	addlw	high(01h)
  4254  057E  1283               	bcf	status, 5	;RP0=0, select bank0
  4255  057F  1303               	bcf	status, 6	;RP1=0, select bank0
  4256  0580  00A3               	movwf	1+0+(?___awmod)+02h
  4257  0581  120A  158A  2348   	fcall	___awmod
              120A  118A         
  4258  0586  1283               	bcf	status, 5	;RP0=0, select bank0
  4259  0587  1303               	bcf	status, 6	;RP1=0, select bank0
  4260  0588  0820               	movf	(0+(?___awmod)),w
  4261  0589  3EDB               	addlw	_shortMenuStrings&0ffh
  4262  058A  0084               	movwf	fsr0
  4263  058B  1383               	bcf	status, 7	;select IRP bank1
  4264  058C  0800               	movf	indf,w
  4265  058D  00A7               	movwf	(?_lcd_write_string)
  4266  058E  3080               	movlw	80h
  4267  058F  00A8               	movwf	(?_lcd_write_string+1)
  4268  0590  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4269                           	line	241
  4270                           ;HMI.c: 241: break;
  4271  0595  2E19               	goto	l4561
  4272                           	line	242
  4273                           ;HMI.c: 242: case 1:
  4274                           	
  4275  0596                     l4558:	
  4276                           	line	243
  4277                           	
  4278  0596                     l11381:	
  4279                           ;HMI.c: 243: lcd_write_control(0b00000001);
  4280  0596  3001               	movlw	(01h)
  4281  0597  160A  118A  2547   	fcall	_lcd_write_control
              120A  118A         
  4282                           	line	245
  4283                           ;HMI.c: 245: lcd_set_cursor(0x00);
  4284  059C  3000               	movlw	(0)
  4285  059D  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4286                           	line	246
  4287                           	
  4288  05A2                     l11383:	
  4289                           ;HMI.c: 246: lcd_write_string("Zero Step_Motor");
  4290  05A2  301B               	movlw	low((STR_14-__stringbase))
  4291  05A3  1283               	bcf	status, 5	;RP0=0, select bank0
  4292  05A4  1303               	bcf	status, 6	;RP1=0, select bank0
  4293  05A5  00A7               	movwf	(?_lcd_write_string)
  4294  05A6  3080               	movlw	80h
  4295  05A7  00A8               	movwf	(?_lcd_write_string+1)
  4296  05A8  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4297                           	line	251
  4298                           	
  4299  05AD                     l11385:	
  4300                           ;HMI.c: 251: lcd_set_cursor(0x40);
  4301  05AD  3040               	movlw	(040h)
  4302  05AE  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4303                           	line	253
  4304                           ;HMI.c: 253: lcd_write_string("<<<");
  4305  05B3  3084               	movlw	low((STR_15-__stringbase))
  4306  05B4  1283               	bcf	status, 5	;RP0=0, select bank0
  4307  05B5  1303               	bcf	status, 6	;RP1=0, select bank0
  4308  05B6  00A7               	movwf	(?_lcd_write_string)
  4309  05B7  3080               	movlw	80h
  4310  05B8  00A8               	movwf	(?_lcd_write_string+1)
  4311  05B9  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4312                           	line	256
  4313                           	
  4314  05BE                     l11387:	
  4315                           ;HMI.c: 256: lcd_set_cursor(0x44);
  4316  05BE  3044               	movlw	(044h)
  4317  05BF  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4318                           	line	257
  4319                           	
  4320  05C4                     l11389:	
  4321                           ;HMI.c: 257: lcd_write_string("CONFIRM");
  4322  05C4  3078               	movlw	low((STR_16-__stringbase))
  4323  05C5  1283               	bcf	status, 5	;RP0=0, select bank0
  4324  05C6  1303               	bcf	status, 6	;RP1=0, select bank0
  4325  05C7  00A7               	movwf	(?_lcd_write_string)
  4326  05C8  3080               	movlw	80h
  4327  05C9  00A8               	movwf	(?_lcd_write_string+1)
  4328  05CA  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4329                           	line	258
  4330                           ;HMI.c: 258: lcd_set_cursor(0x4D);
  4331  05CF  304D               	movlw	(04Dh)
  4332  05D0  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4333                           	line	259
  4334                           	
  4335  05D5                     l11391:	
  4336                           ;HMI.c: 259: lcd_write_string(">>>");
  4337  05D5  3088               	movlw	low((STR_17-__stringbase))
  4338  05D6  1283               	bcf	status, 5	;RP0=0, select bank0
  4339  05D7  1303               	bcf	status, 6	;RP1=0, select bank0
  4340  05D8  00A7               	movwf	(?_lcd_write_string)
  4341  05D9  3080               	movlw	80h
  4342  05DA  00A8               	movwf	(?_lcd_write_string+1)
  4343  05DB  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4344                           	line	260
  4345                           ;HMI.c: 260: break;
  4346  05E0  2E19               	goto	l4561
  4347                           	line	261
  4348                           ;HMI.c: 261: case 2:
  4349                           	
  4350  05E1                     l4559:	
  4351                           	line	262
  4352                           	
  4353  05E1                     l11393:	
  4354                           ;HMI.c: 262: lcd_write_control(0b00000001);
  4355  05E1  3001               	movlw	(01h)
  4356  05E2  160A  118A  2547   	fcall	_lcd_write_control
              120A  118A         
  4357                           	line	264
  4358                           ;HMI.c: 264: lcd_set_cursor(0x00);
  4359  05E7  3000               	movlw	(0)
  4360  05E8  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4361                           	line	265
  4362                           	
  4363  05ED                     l11395:	
  4364                           ;HMI.c: 265: lcd_write_string(" Charging Mode ");
  4365  05ED  300B               	movlw	low((STR_18-__stringbase))
  4366  05EE  1283               	bcf	status, 5	;RP0=0, select bank0
  4367  05EF  1303               	bcf	status, 6	;RP1=0, select bank0
  4368  05F0  00A7               	movwf	(?_lcd_write_string)
  4369  05F1  3080               	movlw	80h
  4370  05F2  00A8               	movwf	(?_lcd_write_string+1)
  4371  05F3  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4372                           	line	269
  4373                           	
  4374  05F8                     l11397:	
  4375                           ;HMI.c: 269: lcd_set_cursor(0x44);
  4376  05F8  3044               	movlw	(044h)
  4377  05F9  160A  118A  24F5   	fcall	_lcd_set_cursor
              120A  118A         
  4378                           	line	270
  4379                           ;HMI.c: 270: lcd_write_string("  EXIT  ");
  4380  05FE  303A               	movlw	low((STR_19-__stringbase))
  4381  05FF  1283               	bcf	status, 5	;RP0=0, select bank0
  4382  0600  1303               	bcf	status, 6	;RP1=0, select bank0
  4383  0601  00A7               	movwf	(?_lcd_write_string)
  4384  0602  3080               	movlw	80h
  4385  0603  00A8               	movwf	(?_lcd_write_string+1)
  4386  0604  160A  118A  26C8   	fcall	_lcd_write_string
              120A  118A         
  4387                           	line	272
  4388                           ;HMI.c: 272: break;
  4389  0609  2E19               	goto	l4561
  4390                           	line	274
  4391                           ;HMI.c: 274: default:
  4392                           	
  4393  060A                     l4560:	
  4394                           	line	276
  4395                           ;HMI.c: 276: break;
  4396  060A  2E19               	goto	l4561
  4397                           	line	279
  4398                           	
  4399  060B                     l11399:	
  4400                           ;HMI.c: 279: }
  4401  060B  2E19               	goto	l4561
  4402                           	line	218
  4403                           	
  4404  060C                     l4553:	
  4405                           	
  4406  060C                     l11401:	
  4407  060C  1683               	bsf	status, 5	;RP0=1, select bank1
  4408  060D  1303               	bcf	status, 6	;RP1=0, select bank1
  4409  060E  084A               	movf	(_currentMenu)^080h,w	;volatile
  4410                           	; Switch size 1, requested type "space"
  4411                           ; Number of cases is 3, Range of values is 0 to 2
  4412                           ; switch strategies available:
  4413                           ; Name         Instructions Cycles
  4414                           ; simple_byte           10     6 (average)
  4415                           ; direct_byte           17     8 (fixed)
  4416                           ; jumptable            260     6 (fixed)
  4417                           ; rangetable             7     6 (fixed)
  4418                           ; spacedrange           12     9 (fixed)
  4419                           ; locatedrange           3     3 (fixed)
  4420                           ;	Chosen strategy is simple_byte
  4421                           
  4422                           	opt asmopt_off
  4423  060F  3A00               	xorlw	0^0	; case 0
  4424  0610  1903               	skipnz
  4425  0611  2CD7               	goto	l11361
  4426  0612  3A01               	xorlw	1^0	; case 1
  4427  0613  1903               	skipnz
  4428  0614  2D96               	goto	l11381
  4429  0615  3A03               	xorlw	2^1	; case 2
  4430  0616  1903               	skipnz
  4431  0617  2DE1               	goto	l11393
  4432  0618  2E19               	goto	l4561
  4433                           	opt asmopt_on
  4434                           
  4435                           	line	279
  4436                           	
  4437  0619                     l4557:	
  4438                           	line	280
  4439                           	
  4440  0619                     l4561:	
  4441  0619  0008               	return
  4442                           	opt stack 0
  4443                           GLOBAL	__end_of_UpdateDisplay
  4444  061A                     	__end_of_UpdateDisplay:
  4445 ;; =============== function _UpdateDisplay ends ============
  4446                           
  4447                           	signat	_UpdateDisplay,88
  4448                           	global	_init
  4449                           psect	text1010,local,class=CODE,delta=2
  4450                           global __ptext1010
  4451  1722                     __ptext1010:
  4452                           
  4453 ;; *************** function _init *****************
  4454 ;; Defined at:
  4455 ;;		line 135 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;		None               void
  4462 ;; Registers used:
  4463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4469 ;;      Params:         0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0
  4471 ;;      Temps:          0       1       0       0       0
  4472 ;;      Totals:         0       1       0       0       0
  4473 ;;Total ram usage:        1 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    5
  4476 ;; This function calls:
  4477 ;;		_ser_init
  4478 ;;		_init_adc
  4479 ;;		_lcd_init
  4480 ;;		_robo_init
  4481 ;; This function is called by:
  4482 ;;		_main
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           psect	text1010
  4486                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
  4487                           	line	135
  4488                           	global	__size_of_init
  4489  002F                     	__size_of_init	equ	__end_of_init-_init
  4490                           	
  4491  1722                     _init:	
  4492                           	opt	stack 2
  4493                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4494                           	line	138
  4495                           	
  4496  1722                     l11333:	
  4497                           ;Main.c: 138: buttonPressed = 0;
  4498  1722  01FD               	clrf	(_buttonPressed)	;volatile
  4499                           	line	142
  4500                           	
  4501  1723                     l11335:	
  4502                           ;Main.c: 142: TRISC &= 0b10010000;
  4503  1723  3090               	movlw	(090h)
  4504  1724  1283               	bcf	status, 5	;RP0=0, select bank0
  4505  1725  1303               	bcf	status, 6	;RP1=0, select bank0
  4506  1726  00A3               	movwf	(??_init+0)+0
  4507  1727  0823               	movf	(??_init+0)+0,w
  4508  1728  1683               	bsf	status, 5	;RP0=1, select bank1
  4509  1729  1303               	bcf	status, 6	;RP1=0, select bank1
  4510  172A  0587               	andwf	(135)^080h,f	;volatile
  4511                           	line	144
  4512                           	
  4513  172B                     l11337:	
  4514                           ;Main.c: 144: SSPSTAT = 0b01000000;
  4515  172B  3040               	movlw	(040h)
  4516  172C  0094               	movwf	(148)^080h	;volatile
  4517                           	line	145
  4518                           	
  4519  172D                     l11339:	
  4520                           ;Main.c: 145: SSPCON = 0b10100001;
  4521  172D  30A1               	movlw	(0A1h)
  4522  172E  1283               	bcf	status, 5	;RP0=0, select bank0
  4523  172F  1303               	bcf	status, 6	;RP1=0, select bank0
  4524  1730  0094               	movwf	(20)	;volatile
  4525                           	line	147
  4526                           	
  4527  1731                     l11341:	
  4528                           ;Main.c: 147: OPTION_REG = 0b00000100;
  4529  1731  3004               	movlw	(04h)
  4530  1732  1683               	bsf	status, 5	;RP0=1, select bank1
  4531  1733  1303               	bcf	status, 6	;RP1=0, select bank1
  4532  1734  0081               	movwf	(129)^080h	;volatile
  4533                           	line	148
  4534                           	
  4535  1735                     l11343:	
  4536                           ;Main.c: 148: ser_init();
  4537  1735  160A  118A  26F4   	fcall	_ser_init
              160A  118A         
  4538                           	line	149
  4539                           	
  4540  173A                     l11345:	
  4541                           ;Main.c: 149: init_adc();
  4542  173A  160A  118A  255B   	fcall	_init_adc
              160A  118A         
  4543                           	line	150
  4544                           	
  4545  173F                     l11347:	
  4546                           ;Main.c: 150: lcd_init();
  4547  173F  160A  118A  2619   	fcall	_lcd_init
              160A  118A         
  4548                           	line	151
  4549                           	
  4550  1744                     l11349:	
  4551                           ;Main.c: 151: robo_init();
  4552  1744  120A  158A  20B6   	fcall	_robo_init
              160A  118A         
  4553                           	line	152
  4554                           	
  4555  1749                     l11351:	
  4556                           ;Main.c: 152: TRISB = 0b11111100;
  4557  1749  30FC               	movlw	(0FCh)
  4558  174A  1683               	bsf	status, 5	;RP0=1, select bank1
  4559  174B  1303               	bcf	status, 6	;RP1=0, select bank1
  4560  174C  0086               	movwf	(134)^080h	;volatile
  4561                           	line	154
  4562                           	
  4563  174D                     l11353:	
  4564                           ;Main.c: 154: TMR0IE = 1;
  4565  174D  168B               	bsf	(93/8),(93)&7
  4566                           	line	155
  4567                           	
  4568  174E                     l11355:	
  4569                           ;Main.c: 155: PEIE=1;
  4570  174E  170B               	bsf	(94/8),(94)&7
  4571                           	line	157
  4572                           	
  4573  174F                     l11357:	
  4574                           ;Main.c: 157: (GIE = 1);
  4575  174F  178B               	bsf	(95/8),(95)&7
  4576                           	line	158
  4577                           	
  4578  1750                     l2219:	
  4579  1750  0008               	return
  4580                           	opt stack 0
  4581                           GLOBAL	__end_of_init
  4582  1751                     	__end_of_init:
  4583 ;; =============== function _init ends ============
  4584                           
  4585                           	signat	_init,88
  4586                           	global	_readDistance
  4587                           psect	text1011,local,class=CODE,delta=2
  4588                           global __ptext1011
  4589  1571                     __ptext1011:
  4590                           
  4591 ;; *************** function _readDistance *****************
  4592 ;; Defined at:
  4593 ;;		line 24 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;		None
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  fullval         2   12[BANK0 ] unsigned int 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2    8[BANK0 ] unsigned int 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4607 ;;      Params:         0       2       0       0       0
  4608 ;;      Locals:         0       2       0       0       0
  4609 ;;      Temps:          0       2       0       0       0
  4610 ;;      Totals:         0       6       0       0       0
  4611 ;;Total ram usage:        6 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    5
  4614 ;; This function calls:
  4615 ;;		_adc_read_channel
  4616 ;; This function is called by:
  4617 ;;		_readAvgDistance
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           psect	text1011
  4621                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  4622                           	line	24
  4623                           	global	__size_of_readDistance
  4624  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  4625                           	
  4626  1571                     _readDistance:	
  4627                           	opt	stack 0
  4628                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4629                           	line	27
  4630                           	
  4631  1571                     l11327:	
  4632                           ;infrared.c: 25: unsigned int fullval ;
  4633                           ;infrared.c: 27: fullval = adc_read_channel(0);
  4634  1571  3000               	movlw	(0)
  4635  1572  160A  118A  2781   	fcall	_adc_read_channel
              160A  118A         
  4636  1577  1283               	bcf	status, 5	;RP0=0, select bank0
  4637  1578  1303               	bcf	status, 6	;RP1=0, select bank0
  4638  1579  00AA               	movwf	(??_readDistance+0)+0
  4639  157A  01AB               	clrf	(??_readDistance+0)+0+1
  4640  157B  082A               	movf	0+(??_readDistance+0)+0,w
  4641  157C  00AC               	movwf	(readDistance@fullval)
  4642  157D  082B               	movf	1+(??_readDistance+0)+0,w
  4643  157E  00AD               	movwf	(readDistance@fullval+1)
  4644                           	line	29
  4645                           	
  4646  157F                     l11329:	
  4647                           ;infrared.c: 29: return fullval;
  4648  157F  082D               	movf	(readDistance@fullval+1),w
  4649  1580  01A9               	clrf	(?_readDistance+1)
  4650  1581  07A9               	addwf	(?_readDistance+1)
  4651  1582  082C               	movf	(readDistance@fullval),w
  4652  1583  01A8               	clrf	(?_readDistance)
  4653  1584  07A8               	addwf	(?_readDistance)
  4654                           
  4655  1585  2D86               	goto	l3000
  4656                           	
  4657  1586                     l11331:	
  4658                           	line	30
  4659                           	
  4660  1586                     l3000:	
  4661  1586  0008               	return
  4662                           	opt stack 0
  4663                           GLOBAL	__end_of_readDistance
  4664  1587                     	__end_of_readDistance:
  4665 ;; =============== function _readDistance ends ============
  4666                           
  4667                           	signat	_readDistance,90
  4668                           	global	_robot_read
  4669                           psect	text1012,local,class=CODE,delta=2
  4670                           global __ptext1012
  4671  0A42                     __ptext1012:
  4672                           
  4673 ;; *************** function _robot_read *****************
  4674 ;; Defined at:
  4675 ;;		line 18 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4689 ;;      Params:         0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0
  4691 ;;      Temps:          0       2       0       0       0
  4692 ;;      Totals:         0       2       0       0       0
  4693 ;;Total ram usage:        2 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    5
  4696 ;; This function calls:
  4697 ;;		_ser_putch
  4698 ;;		_ser_getch
  4699 ;; This function is called by:
  4700 ;;		_main
  4701 ;;		_robotMove
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           psect	text1012
  4705                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  4706                           	line	18
  4707                           	global	__size_of_robot_read
  4708  0053                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  4709                           	
  4710  0A42                     _robot_read:	
  4711                           	opt	stack 1
  4712                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4713                           	line	23
  4714                           	
  4715  0A42                     l11313:	
  4716                           ;robot.c: 23: ser_putch (142);
  4717  0A42  308E               	movlw	(08Eh)
  4718  0A43  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  4719                           	line	24
  4720                           ;robot.c: 24: ser_putch (7);
  4721  0A48  3007               	movlw	(07h)
  4722  0A49  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  4723                           	line	25
  4724                           	
  4725  0A4E                     l11315:	
  4726                           ;robot.c: 25: _delay((unsigned long)((5)*(20000000/4000.0)));
  4727                           	opt asmopt_off
  4728  0A4E  3021               movlw	33
  4729  0A4F  1283               	bcf	status, 5	;RP0=0, select bank0
  4730  0A50  1303               	bcf	status, 6	;RP1=0, select bank0
  4731  0A51  00A3               movwf	((??_robot_read+0)+0+1),f
  4732  0A52  3076               	movlw	118
  4733  0A53  00A2               movwf	((??_robot_read+0)+0),f
  4734  0A54                     u5627:
  4735  0A54  0BA2               	decfsz	((??_robot_read+0)+0),f
  4736  0A55  2A54               	goto	u5627
  4737  0A56  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4738  0A57  2A54               	goto	u5627
  4739  0A58  0064               	clrwdt
  4740                           opt asmopt_on
  4741                           
  4742                           	line	26
  4743                           	
  4744  0A59                     l11317:	
  4745                           ;robot.c: 26: BumpSensors = ser_getch();
  4746  0A59  160A  118A  2670   	fcall	_ser_getch
              120A  158A         
  4747  0A5E  1283               	bcf	status, 5	;RP0=0, select bank0
  4748  0A5F  1303               	bcf	status, 6	;RP1=0, select bank0
  4749  0A60  00A2               	movwf	(??_robot_read+0)+0
  4750  0A61  0822               	movf	(??_robot_read+0)+0,w
  4751  0A62  1683               	bsf	status, 5	;RP0=1, select bank1
  4752  0A63  1303               	bcf	status, 6	;RP1=0, select bank1
  4753  0A64  00C2               	movwf	(_BumpSensors)^080h	;volatile
  4754                           	line	27
  4755                           	
  4756  0A65                     l11319:	
  4757                           ;robot.c: 27: ser_putch (142);
  4758  0A65  308E               	movlw	(08Eh)
  4759  0A66  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  4760                           	line	28
  4761                           	
  4762  0A6B                     l11321:	
  4763                           ;robot.c: 28: ser_putch (19);
  4764  0A6B  3013               	movlw	(013h)
  4765  0A6C  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  4766                           	line	29
  4767                           ;robot.c: 29: _delay((unsigned long)((5)*(20000000/4000.0)));
  4768                           	opt asmopt_off
  4769  0A71  3021               movlw	33
  4770  0A72  1283               	bcf	status, 5	;RP0=0, select bank0
  4771  0A73  1303               	bcf	status, 6	;RP1=0, select bank0
  4772  0A74  00A3               movwf	((??_robot_read+0)+0+1),f
  4773  0A75  3076               	movlw	118
  4774  0A76  00A2               movwf	((??_robot_read+0)+0),f
  4775  0A77                     u5637:
  4776  0A77  0BA2               	decfsz	((??_robot_read+0)+0),f
  4777  0A78  2A77               	goto	u5637
  4778  0A79  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  4779  0A7A  2A77               	goto	u5637
  4780  0A7B  0064               	clrwdt
  4781                           opt asmopt_on
  4782                           
  4783                           	line	30
  4784                           	
  4785  0A7C                     l11323:	
  4786                           ;robot.c: 30: DistHighByte = ser_getch();
  4787  0A7C  160A  118A  2670   	fcall	_ser_getch
              120A  158A         
  4788  0A81  1283               	bcf	status, 5	;RP0=0, select bank0
  4789  0A82  1303               	bcf	status, 6	;RP1=0, select bank0
  4790  0A83  00A2               	movwf	(??_robot_read+0)+0
  4791  0A84  0822               	movf	(??_robot_read+0)+0,w
  4792  0A85  1683               	bsf	status, 5	;RP0=1, select bank1
  4793  0A86  1303               	bcf	status, 6	;RP1=0, select bank1
  4794  0A87  00C4               	movwf	(_DistHighByte)^080h	;volatile
  4795                           	line	31
  4796                           	
  4797  0A88                     l11325:	
  4798                           ;robot.c: 31: DistLowByte = ser_getch();
  4799  0A88  160A  118A  2670   	fcall	_ser_getch
              120A  158A         
  4800  0A8D  1283               	bcf	status, 5	;RP0=0, select bank0
  4801  0A8E  1303               	bcf	status, 6	;RP1=0, select bank0
  4802  0A8F  00A2               	movwf	(??_robot_read+0)+0
  4803  0A90  0822               	movf	(??_robot_read+0)+0,w
  4804  0A91  1683               	bsf	status, 5	;RP0=1, select bank1
  4805  0A92  1303               	bcf	status, 6	;RP1=0, select bank1
  4806  0A93  00C5               	movwf	(_DistLowByte)^080h	;volatile
  4807                           	line	33
  4808                           	
  4809  0A94                     l6020:	
  4810  0A94  0008               	return
  4811                           	opt stack 0
  4812                           GLOBAL	__end_of_robot_read
  4813  0A95                     	__end_of_robot_read:
  4814 ;; =============== function _robot_read ends ============
  4815                           
  4816                           	signat	_robot_read,88
  4817                           	global	_lcd_init
  4818                           psect	text1013,local,class=CODE,delta=2
  4819                           global __ptext1013
  4820  1619                     __ptext1013:
  4821                           
  4822 ;; *************** function _lcd_init *****************
  4823 ;; Defined at:
  4824 ;;		line 101 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;		None               void
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0, pclath, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4838 ;;      Params:         0       0       0       0       0
  4839 ;;      Locals:         0       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0
  4841 ;;      Totals:         0       0       0       0       0
  4842 ;;Total ram usage:        0 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    4
  4845 ;; This function calls:
  4846 ;;		_lcd_write_control
  4847 ;; This function is called by:
  4848 ;;		_init
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           psect	text1013
  4852                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  4853                           	line	101
  4854                           	global	__size_of_lcd_init
  4855  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4856                           	
  4857  1619                     _lcd_init:	
  4858                           	opt	stack 2
  4859                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4860                           	line	105
  4861                           	
  4862  1619                     l11293:	
  4863                           ;lcd.c: 105: ADCON1 = 0b00000010;
  4864  1619  3002               	movlw	(02h)
  4865  161A  1683               	bsf	status, 5	;RP0=1, select bank1
  4866  161B  1303               	bcf	status, 6	;RP1=0, select bank1
  4867  161C  009F               	movwf	(159)^080h	;volatile
  4868                           	line	108
  4869                           	
  4870  161D                     l11295:	
  4871                           ;lcd.c: 108: PORTD = 0;
  4872  161D  1283               	bcf	status, 5	;RP0=0, select bank0
  4873  161E  1303               	bcf	status, 6	;RP1=0, select bank0
  4874  161F  0188               	clrf	(8)	;volatile
  4875                           	line	109
  4876                           	
  4877  1620                     l11297:	
  4878                           ;lcd.c: 109: PORTE = 0;
  4879  1620  0189               	clrf	(9)	;volatile
  4880                           	line	111
  4881                           	
  4882  1621                     l11299:	
  4883                           ;lcd.c: 111: TRISD = 0b00000000;
  4884  1621  1683               	bsf	status, 5	;RP0=1, select bank1
  4885  1622  1303               	bcf	status, 6	;RP1=0, select bank1
  4886  1623  0188               	clrf	(136)^080h	;volatile
  4887                           	line	112
  4888                           	
  4889  1624                     l11301:	
  4890                           ;lcd.c: 112: TRISE = 0b00000000;
  4891  1624  0189               	clrf	(137)^080h	;volatile
  4892                           	line	115
  4893                           	
  4894  1625                     l11303:	
  4895                           ;lcd.c: 115: lcd_write_control(0b00000001);
  4896  1625  3001               	movlw	(01h)
  4897  1626  160A  118A  2547   	fcall	_lcd_write_control
              160A  118A         
  4898                           	line	116
  4899                           	
  4900  162B                     l11305:	
  4901                           ;lcd.c: 116: lcd_write_control(0b00111000);
  4902  162B  3038               	movlw	(038h)
  4903  162C  160A  118A  2547   	fcall	_lcd_write_control
              160A  118A         
  4904                           	line	117
  4905                           	
  4906  1631                     l11307:	
  4907                           ;lcd.c: 117: lcd_write_control(0b00001100);
  4908  1631  300C               	movlw	(0Ch)
  4909  1632  160A  118A  2547   	fcall	_lcd_write_control
              160A  118A         
  4910                           	line	118
  4911                           	
  4912  1637                     l11309:	
  4913                           ;lcd.c: 118: lcd_write_control(0b00000110);
  4914  1637  3006               	movlw	(06h)
  4915  1638  160A  118A  2547   	fcall	_lcd_write_control
              160A  118A         
  4916                           	line	119
  4917                           	
  4918  163D                     l11311:	
  4919                           ;lcd.c: 119: lcd_write_control(0b00000010);
  4920  163D  3002               	movlw	(02h)
  4921  163E  160A  118A  2547   	fcall	_lcd_write_control
              160A  118A         
  4922                           	line	121
  4923                           	
  4924  1643                     l1429:	
  4925  1643  0008               	return
  4926                           	opt stack 0
  4927                           GLOBAL	__end_of_lcd_init
  4928  1644                     	__end_of_lcd_init:
  4929 ;; =============== function _lcd_init ends ============
  4930                           
  4931                           	signat	_lcd_init,88
  4932                           	global	_lcd_write_string
  4933                           psect	text1014,local,class=CODE,delta=2
  4934                           global __ptext1014
  4935  16C8                     __ptext1014:
  4936                           
  4937 ;; *************** function _lcd_write_string *****************
  4938 ;; Defined at:
  4939 ;;		line 48 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  s               2    7[BANK0 ] PTR unsigned char 
  4942 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  4943 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@adcOutput(16), STR_12(4), 
  4944 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  4945 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  4946 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;		None               void
  4951 ;; Registers used:
  4952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4958 ;;      Params:         0       2       0       0       0
  4959 ;;      Locals:         0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0
  4961 ;;      Totals:         0       2       0       0       0
  4962 ;;Total ram usage:        2 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    4
  4965 ;; This function calls:
  4966 ;;		_lcd_write_data
  4967 ;; This function is called by:
  4968 ;;		_UpdateDisplay
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           psect	text1014
  4972                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  4973                           	line	48
  4974                           	global	__size_of_lcd_write_string
  4975  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  4976                           	
  4977  16C8                     _lcd_write_string:	
  4978                           	opt	stack 1
  4979                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4980                           	line	50
  4981                           	
  4982  16C8                     l11285:	
  4983                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  4984  16C8  2EE2               	goto	l11291
  4985                           	
  4986  16C9                     l1409:	
  4987                           	
  4988  16C9                     l11287:	
  4989  16C9  1283               	bcf	status, 5	;RP0=0, select bank0
  4990  16CA  1303               	bcf	status, 6	;RP1=0, select bank0
  4991  16CB  0828               	movf	(lcd_write_string@s+1),w
  4992  16CC  00FF               	movwf	btemp+1
  4993  16CD  0827               	movf	(lcd_write_string@s),w
  4994  16CE  0084               	movwf	fsr0
  4995  16CF  120A  158A  2000   	fcall	stringtab
              160A  118A         
  4996  16D4  160A  118A  250D   	fcall	_lcd_write_data
              160A  118A         
  4997                           	
  4998  16D9                     l11289:	
  4999  16D9  3001               	movlw	low(01h)
  5000  16DA  1283               	bcf	status, 5	;RP0=0, select bank0
  5001  16DB  1303               	bcf	status, 6	;RP1=0, select bank0
  5002  16DC  07A7               	addwf	(lcd_write_string@s),f
  5003  16DD  1803               	skipnc
  5004  16DE  0AA8               	incf	(lcd_write_string@s+1),f
  5005  16DF  3000               	movlw	high(01h)
  5006  16E0  07A8               	addwf	(lcd_write_string@s+1),f
  5007  16E1  2EE2               	goto	l11291
  5008                           	
  5009  16E2                     l1408:	
  5010                           	
  5011  16E2                     l11291:	
  5012  16E2  1283               	bcf	status, 5	;RP0=0, select bank0
  5013  16E3  1303               	bcf	status, 6	;RP1=0, select bank0
  5014  16E4  0828               	movf	(lcd_write_string@s+1),w
  5015  16E5  00FF               	movwf	btemp+1
  5016  16E6  0827               	movf	(lcd_write_string@s),w
  5017  16E7  0084               	movwf	fsr0
  5018  16E8  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5019  16ED  3800               	iorlw	0
  5020  16EE  1D03               	skipz
  5021  16EF  2EF1               	goto	u5321
  5022  16F0  2EF2               	goto	u5320
  5023  16F1                     u5321:
  5024  16F1  2EC9               	goto	l11287
  5025  16F2                     u5320:
  5026  16F2  2EF3               	goto	l1411
  5027                           	
  5028  16F3                     l1410:	
  5029                           	line	51
  5030                           	
  5031  16F3                     l1411:	
  5032  16F3  0008               	return
  5033                           	opt stack 0
  5034                           GLOBAL	__end_of_lcd_write_string
  5035  16F4                     	__end_of_lcd_write_string:
  5036 ;; =============== function _lcd_write_string ends ============
  5037                           
  5038                           	signat	_lcd_write_string,4216
  5039                           	global	_lcd_set_cursor
  5040                           psect	text1015,local,class=CODE,delta=2
  5041                           global __ptext1015
  5042  14F5                     __ptext1015:
  5043                           
  5044 ;; *************** function _lcd_set_cursor *****************
  5045 ;; Defined at:
  5046 ;;		line 42 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  address         1    wreg     unsigned char 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  address         1    3[BANK0 ] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;		None               void
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0, pclath, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5060 ;;      Params:         0       0       0       0       0
  5061 ;;      Locals:         0       1       0       0       0
  5062 ;;      Temps:          0       0       0       0       0
  5063 ;;      Totals:         0       1       0       0       0
  5064 ;;Total ram usage:        1 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    4
  5067 ;; This function calls:
  5068 ;;		_lcd_write_control
  5069 ;; This function is called by:
  5070 ;;		_UpdateDisplay
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           psect	text1015
  5074                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  5075                           	line	42
  5076                           	global	__size_of_lcd_set_cursor
  5077  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5078                           	
  5079  14F5                     _lcd_set_cursor:	
  5080                           	opt	stack 1
  5081                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5082                           ;lcd_set_cursor@address stored from wreg
  5083  14F5  1283               	bcf	status, 5	;RP0=0, select bank0
  5084  14F6  1303               	bcf	status, 6	;RP1=0, select bank0
  5085  14F7  00A3               	movwf	(lcd_set_cursor@address)
  5086                           	line	43
  5087                           	
  5088  14F8                     l11281:	
  5089                           ;lcd.c: 43: address |= 0b10000000;
  5090  14F8  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5091                           	line	44
  5092                           	
  5093  14F9                     l11283:	
  5094                           ;lcd.c: 44: lcd_write_control(address);
  5095  14F9  0823               	movf	(lcd_set_cursor@address),w
  5096  14FA  160A  118A  2547   	fcall	_lcd_write_control
              160A  118A         
  5097                           	line	45
  5098                           	
  5099  14FF                     l1405:	
  5100  14FF  0008               	return
  5101                           	opt stack 0
  5102                           GLOBAL	__end_of_lcd_set_cursor
  5103  1500                     	__end_of_lcd_set_cursor:
  5104 ;; =============== function _lcd_set_cursor ends ============
  5105                           
  5106                           	signat	_lcd_set_cursor,4216
  5107                           	global	___awtoft
  5108                           psect	text1016,local,class=CODE,delta=2
  5109                           global __ptext1016
  5110  169C                     __ptext1016:
  5111                           
  5112 ;; *************** function ___awtoft *****************
  5113 ;; Defined at:
  5114 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  c               2   22[BANK0 ] int 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  sign            1   27[BANK0 ] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  3   22[BANK0 ] float 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0, pclath, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5128 ;;      Params:         0       3       0       0       0
  5129 ;;      Locals:         0       1       0       0       0
  5130 ;;      Temps:          0       2       0       0       0
  5131 ;;      Totals:         0       6       0       0       0
  5132 ;;Total ram usage:        6 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    4
  5135 ;; This function calls:
  5136 ;;		___ftpack
  5137 ;; This function is called by:
  5138 ;;		_main
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           psect	text1016
  5142                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5143                           	line	33
  5144                           	global	__size_of___awtoft
  5145  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  5146                           	
  5147  169C                     ___awtoft:	
  5148                           	opt	stack 3
  5149                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5150                           	line	36
  5151                           	
  5152  169C                     l11273:	
  5153  169C  1283               	bcf	status, 5	;RP0=0, select bank0
  5154  169D  1303               	bcf	status, 6	;RP1=0, select bank0
  5155  169E  01BB               	clrf	(___awtoft@sign)
  5156                           	line	37
  5157  169F  1FB7               	btfss	(___awtoft@c+1),7
  5158  16A0  2EA2               	goto	u5311
  5159  16A1  2EA3               	goto	u5310
  5160  16A2                     u5311:
  5161  16A2  2EAC               	goto	l11277
  5162  16A3                     u5310:
  5163                           	line	38
  5164                           	
  5165  16A3                     l11275:	
  5166  16A3  09B6               	comf	(___awtoft@c),f
  5167  16A4  09B7               	comf	(___awtoft@c+1),f
  5168  16A5  0AB6               	incf	(___awtoft@c),f
  5169  16A6  1903               	skipnz
  5170  16A7  0AB7               	incf	(___awtoft@c+1),f
  5171                           	line	39
  5172  16A8  01BB               	clrf	(___awtoft@sign)
  5173  16A9  1403               	bsf	status,0
  5174  16AA  0DBB               	rlf	(___awtoft@sign),f
  5175  16AB  2EAC               	goto	l11277
  5176                           	line	40
  5177                           	
  5178  16AC                     l7615:	
  5179                           	line	41
  5180                           	
  5181  16AC                     l11277:	
  5182  16AC  0836               	movf	(___awtoft@c),w
  5183  16AD  00A0               	movwf	(?___ftpack)
  5184  16AE  0837               	movf	(___awtoft@c+1),w
  5185  16AF  00A1               	movwf	(?___ftpack+1)
  5186  16B0  01A2               	clrf	(?___ftpack+2)
  5187  16B1  308E               	movlw	(08Eh)
  5188  16B2  00B9               	movwf	(??___awtoft+0)+0
  5189  16B3  0839               	movf	(??___awtoft+0)+0,w
  5190  16B4  00A3               	movwf	0+(?___ftpack)+03h
  5191  16B5  083B               	movf	(___awtoft@sign),w
  5192  16B6  00BA               	movwf	(??___awtoft+1)+0
  5193  16B7  083A               	movf	(??___awtoft+1)+0,w
  5194  16B8  00A4               	movwf	0+(?___ftpack)+04h
  5195  16B9  120A  158A  242A   	fcall	___ftpack
              160A  118A         
  5196  16BE  1283               	bcf	status, 5	;RP0=0, select bank0
  5197  16BF  1303               	bcf	status, 6	;RP1=0, select bank0
  5198  16C0  0820               	movf	(0+(?___ftpack)),w
  5199  16C1  00B6               	movwf	(?___awtoft)
  5200  16C2  0821               	movf	(1+(?___ftpack)),w
  5201  16C3  00B7               	movwf	(?___awtoft+1)
  5202  16C4  0822               	movf	(2+(?___ftpack)),w
  5203  16C5  00B8               	movwf	(?___awtoft+2)
  5204  16C6  2EC7               	goto	l7616
  5205                           	
  5206  16C7                     l11279:	
  5207                           	line	42
  5208                           	
  5209  16C7                     l7616:	
  5210  16C7  0008               	return
  5211                           	opt stack 0
  5212                           GLOBAL	__end_of___awtoft
  5213  16C8                     	__end_of___awtoft:
  5214 ;; =============== function ___awtoft ends ============
  5215                           
  5216                           	signat	___awtoft,4219
  5217                           	global	___ftmul
  5218                           psect	text1017,local,class=CODE,delta=2
  5219                           global __ptext1017
  5220  0F12                     __ptext1017:
  5221                           
  5222 ;; *************** function ___ftmul *****************
  5223 ;; Defined at:
  5224 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  f1              3   28[BANK0 ] float 
  5227 ;;  f2              3   31[BANK0 ] float 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  5230 ;;  sign            1   43[BANK0 ] unsigned char 
  5231 ;;  cntr            1   42[BANK0 ] unsigned char 
  5232 ;;  exp             1   38[BANK0 ] unsigned char 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  3   28[BANK0 ] float 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0, pclath, cstack
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5242 ;;      Params:         0       6       0       0       0
  5243 ;;      Locals:         0       6       0       0       0
  5244 ;;      Temps:          0       4       0       0       0
  5245 ;;      Totals:         0      16       0       0       0
  5246 ;;Total ram usage:       16 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    4
  5249 ;; This function calls:
  5250 ;;		___ftpack
  5251 ;; This function is called by:
  5252 ;;		_main
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           psect	text1017
  5256                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5257                           	line	52
  5258                           	global	__size_of___ftmul
  5259  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5260                           	
  5261  0F12                     ___ftmul:	
  5262                           	opt	stack 3
  5263                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5264                           	line	56
  5265                           	
  5266  0F12                     l11223:	
  5267  0F12  1283               	bcf	status, 5	;RP0=0, select bank0
  5268  0F13  1303               	bcf	status, 6	;RP1=0, select bank0
  5269  0F14  083C               	movf	(___ftmul@f1),w
  5270  0F15  00C2               	movwf	((??___ftmul+0)+0)
  5271  0F16  083D               	movf	(___ftmul@f1+1),w
  5272  0F17  00C3               	movwf	((??___ftmul+0)+0+1)
  5273  0F18  083E               	movf	(___ftmul@f1+2),w
  5274  0F19  00C4               	movwf	((??___ftmul+0)+0+2)
  5275  0F1A  1003               	clrc
  5276  0F1B  0D43               	rlf	(??___ftmul+0)+1,w
  5277  0F1C  0D44               	rlf	(??___ftmul+0)+2,w
  5278  0F1D  00C5               	movwf	(??___ftmul+3)+0
  5279  0F1E  0845               	movf	(??___ftmul+3)+0,w
  5280  0F1F  00C6               	movwf	(___ftmul@exp)
  5281  0F20  08C6               	movf	((___ftmul@exp)),f
  5282  0F21  1D03               	skipz
  5283  0F22  2F24               	goto	u5171
  5284  0F23  2F25               	goto	u5170
  5285  0F24                     u5171:
  5286  0F24  2F2D               	goto	l11229
  5287  0F25                     u5170:
  5288                           	line	57
  5289                           	
  5290  0F25                     l11225:	
  5291  0F25  3000               	movlw	0x0
  5292  0F26  00BC               	movwf	(?___ftmul)
  5293  0F27  3000               	movlw	0x0
  5294  0F28  00BD               	movwf	(?___ftmul+1)
  5295  0F29  3000               	movlw	0x0
  5296  0F2A  00BE               	movwf	(?___ftmul+2)
  5297  0F2B  2FFF               	goto	l7578
  5298                           	
  5299  0F2C                     l11227:	
  5300  0F2C  2FFF               	goto	l7578
  5301                           	
  5302  0F2D                     l7577:	
  5303                           	line	58
  5304                           	
  5305  0F2D                     l11229:	
  5306  0F2D  083F               	movf	(___ftmul@f2),w
  5307  0F2E  00C2               	movwf	((??___ftmul+0)+0)
  5308  0F2F  0840               	movf	(___ftmul@f2+1),w
  5309  0F30  00C3               	movwf	((??___ftmul+0)+0+1)
  5310  0F31  0841               	movf	(___ftmul@f2+2),w
  5311  0F32  00C4               	movwf	((??___ftmul+0)+0+2)
  5312  0F33  1003               	clrc
  5313  0F34  0D43               	rlf	(??___ftmul+0)+1,w
  5314  0F35  0D44               	rlf	(??___ftmul+0)+2,w
  5315  0F36  00C5               	movwf	(??___ftmul+3)+0
  5316  0F37  0845               	movf	(??___ftmul+3)+0,w
  5317  0F38  00CB               	movwf	(___ftmul@sign)
  5318  0F39  08CB               	movf	((___ftmul@sign)),f
  5319  0F3A  1D03               	skipz
  5320  0F3B  2F3D               	goto	u5181
  5321  0F3C  2F3E               	goto	u5180
  5322  0F3D                     u5181:
  5323  0F3D  2F46               	goto	l11235
  5324  0F3E                     u5180:
  5325                           	line	59
  5326                           	
  5327  0F3E                     l11231:	
  5328  0F3E  3000               	movlw	0x0
  5329  0F3F  00BC               	movwf	(?___ftmul)
  5330  0F40  3000               	movlw	0x0
  5331  0F41  00BD               	movwf	(?___ftmul+1)
  5332  0F42  3000               	movlw	0x0
  5333  0F43  00BE               	movwf	(?___ftmul+2)
  5334  0F44  2FFF               	goto	l7578
  5335                           	
  5336  0F45                     l11233:	
  5337  0F45  2FFF               	goto	l7578
  5338                           	
  5339  0F46                     l7579:	
  5340                           	line	60
  5341                           	
  5342  0F46                     l11235:	
  5343  0F46  084B               	movf	(___ftmul@sign),w
  5344  0F47  3E7B               	addlw	07Bh
  5345  0F48  00C2               	movwf	(??___ftmul+0)+0
  5346  0F49  0842               	movf	(??___ftmul+0)+0,w
  5347  0F4A  07C6               	addwf	(___ftmul@exp),f
  5348                           	line	61
  5349  0F4B  083C               	movf	(___ftmul@f1),w
  5350  0F4C  00C2               	movwf	((??___ftmul+0)+0)
  5351  0F4D  083D               	movf	(___ftmul@f1+1),w
  5352  0F4E  00C3               	movwf	((??___ftmul+0)+0+1)
  5353  0F4F  083E               	movf	(___ftmul@f1+2),w
  5354  0F50  00C4               	movwf	((??___ftmul+0)+0+2)
  5355  0F51  3010               	movlw	010h
  5356  0F52                     u5195:
  5357  0F52  1003               	clrc
  5358  0F53  0CC4               	rrf	(??___ftmul+0)+2,f
  5359  0F54  0CC3               	rrf	(??___ftmul+0)+1,f
  5360  0F55  0CC2               	rrf	(??___ftmul+0)+0,f
  5361  0F56                     u5190:
  5362  0F56  3EFF               	addlw	-1
  5363  0F57  1D03               	skipz
  5364  0F58  2F52               	goto	u5195
  5365  0F59  0842               	movf	0+(??___ftmul+0)+0,w
  5366  0F5A  00C5               	movwf	(??___ftmul+3)+0
  5367  0F5B  0845               	movf	(??___ftmul+3)+0,w
  5368  0F5C  00CB               	movwf	(___ftmul@sign)
  5369                           	line	62
  5370  0F5D  083F               	movf	(___ftmul@f2),w
  5371  0F5E  00C2               	movwf	((??___ftmul+0)+0)
  5372  0F5F  0840               	movf	(___ftmul@f2+1),w
  5373  0F60  00C3               	movwf	((??___ftmul+0)+0+1)
  5374  0F61  0841               	movf	(___ftmul@f2+2),w
  5375  0F62  00C4               	movwf	((??___ftmul+0)+0+2)
  5376  0F63  3010               	movlw	010h
  5377  0F64                     u5205:
  5378  0F64  1003               	clrc
  5379  0F65  0CC4               	rrf	(??___ftmul+0)+2,f
  5380  0F66  0CC3               	rrf	(??___ftmul+0)+1,f
  5381  0F67  0CC2               	rrf	(??___ftmul+0)+0,f
  5382  0F68                     u5200:
  5383  0F68  3EFF               	addlw	-1
  5384  0F69  1D03               	skipz
  5385  0F6A  2F64               	goto	u5205
  5386  0F6B  0842               	movf	0+(??___ftmul+0)+0,w
  5387  0F6C  00C5               	movwf	(??___ftmul+3)+0
  5388  0F6D  0845               	movf	(??___ftmul+3)+0,w
  5389  0F6E  06CB               	xorwf	(___ftmul@sign),f
  5390                           	line	63
  5391  0F6F  3080               	movlw	(080h)
  5392  0F70  00C2               	movwf	(??___ftmul+0)+0
  5393  0F71  0842               	movf	(??___ftmul+0)+0,w
  5394  0F72  05CB               	andwf	(___ftmul@sign),f
  5395                           	line	64
  5396                           	
  5397  0F73                     l11237:	
  5398  0F73  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5399                           	line	66
  5400                           	
  5401  0F74                     l11239:	
  5402  0F74  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5403                           	line	67
  5404                           	
  5405  0F75                     l11241:	
  5406  0F75  30FF               	movlw	0FFh
  5407  0F76  05BF               	andwf	(___ftmul@f2),f
  5408  0F77  30FF               	movlw	0FFh
  5409  0F78  05C0               	andwf	(___ftmul@f2+1),f
  5410  0F79  3000               	movlw	0
  5411  0F7A  05C1               	andwf	(___ftmul@f2+2),f
  5412                           	line	68
  5413                           	
  5414  0F7B                     l11243:	
  5415  0F7B  3000               	movlw	0
  5416  0F7C  00C7               	movwf	(___ftmul@f3_as_product)
  5417  0F7D  3000               	movlw	0
  5418  0F7E  00C8               	movwf	(___ftmul@f3_as_product+1)
  5419  0F7F  3000               	movlw	0
  5420  0F80  00C9               	movwf	(___ftmul@f3_as_product+2)
  5421                           	line	69
  5422                           	
  5423  0F81                     l11245:	
  5424  0F81  3007               	movlw	(07h)
  5425  0F82  00C2               	movwf	(??___ftmul+0)+0
  5426  0F83  0842               	movf	(??___ftmul+0)+0,w
  5427  0F84  00CA               	movwf	(___ftmul@cntr)
  5428  0F85  2F86               	goto	l11247
  5429                           	line	70
  5430                           	
  5431  0F86                     l7580:	
  5432                           	line	71
  5433                           	
  5434  0F86                     l11247:	
  5435  0F86  1C3C               	btfss	(___ftmul@f1),(0)&7
  5436  0F87  2F89               	goto	u5211
  5437  0F88  2F8A               	goto	u5210
  5438  0F89                     u5211:
  5439  0F89  2F9B               	goto	l11251
  5440  0F8A                     u5210:
  5441                           	line	72
  5442                           	
  5443  0F8A                     l11249:	
  5444  0F8A  083F               	movf	(___ftmul@f2),w
  5445  0F8B  07C7               	addwf	(___ftmul@f3_as_product),f
  5446  0F8C  0840               	movf	(___ftmul@f2+1),w
  5447  0F8D  1103               	clrz
  5448  0F8E  1803               	skipnc
  5449  0F8F  0A40               	incf	(___ftmul@f2+1),w
  5450  0F90  1903               	skipnz
  5451  0F91  2F93               	goto	u5221
  5452  0F92  07C8               	addwf	(___ftmul@f3_as_product+1),f
  5453  0F93                     u5221:
  5454  0F93  0841               	movf	(___ftmul@f2+2),w
  5455  0F94  1103               	clrz
  5456  0F95  1803               	skipnc
  5457  0F96  0A41               	incf	(___ftmul@f2+2),w
  5458  0F97  1903               	skipnz
  5459  0F98  2F9A               	goto	u5222
  5460  0F99  07C9               	addwf	(___ftmul@f3_as_product+2),f
  5461  0F9A                     u5222:
  5462                           
  5463  0F9A  2F9B               	goto	l11251
  5464                           	
  5465  0F9B                     l7581:	
  5466                           	line	73
  5467                           	
  5468  0F9B                     l11251:	
  5469  0F9B  3001               	movlw	01h
  5470  0F9C                     u5235:
  5471  0F9C  1003               	clrc
  5472  0F9D  0CBE               	rrf	(___ftmul@f1+2),f
  5473  0F9E  0CBD               	rrf	(___ftmul@f1+1),f
  5474  0F9F  0CBC               	rrf	(___ftmul@f1),f
  5475  0FA0  3EFF               	addlw	-1
  5476  0FA1  1D03               	skipz
  5477  0FA2  2F9C               	goto	u5235
  5478                           
  5479                           	line	74
  5480                           	
  5481  0FA3                     l11253:	
  5482  0FA3  3001               	movlw	01h
  5483  0FA4                     u5245:
  5484  0FA4  1003               	clrc
  5485  0FA5  0DBF               	rlf	(___ftmul@f2),f
  5486  0FA6  0DC0               	rlf	(___ftmul@f2+1),f
  5487  0FA7  0DC1               	rlf	(___ftmul@f2+2),f
  5488  0FA8  3EFF               	addlw	-1
  5489  0FA9  1D03               	skipz
  5490  0FAA  2FA4               	goto	u5245
  5491                           	line	75
  5492                           	
  5493  0FAB                     l11255:	
  5494  0FAB  3001               	movlw	low(01h)
  5495  0FAC  02CA               	subwf	(___ftmul@cntr),f
  5496  0FAD  1D03               	btfss	status,2
  5497  0FAE  2FB0               	goto	u5251
  5498  0FAF  2FB1               	goto	u5250
  5499  0FB0                     u5251:
  5500  0FB0  2F86               	goto	l11247
  5501  0FB1                     u5250:
  5502  0FB1  2FB2               	goto	l11257
  5503                           	
  5504  0FB2                     l7582:	
  5505                           	line	76
  5506                           	
  5507  0FB2                     l11257:	
  5508  0FB2  3009               	movlw	(09h)
  5509  0FB3  00C2               	movwf	(??___ftmul+0)+0
  5510  0FB4  0842               	movf	(??___ftmul+0)+0,w
  5511  0FB5  00CA               	movwf	(___ftmul@cntr)
  5512  0FB6  2FB7               	goto	l11259
  5513                           	line	77
  5514                           	
  5515  0FB7                     l7583:	
  5516                           	line	78
  5517                           	
  5518  0FB7                     l11259:	
  5519  0FB7  1C3C               	btfss	(___ftmul@f1),(0)&7
  5520  0FB8  2FBA               	goto	u5261
  5521  0FB9  2FBB               	goto	u5260
  5522  0FBA                     u5261:
  5523  0FBA  2FCC               	goto	l11263
  5524  0FBB                     u5260:
  5525                           	line	79
  5526                           	
  5527  0FBB                     l11261:	
  5528  0FBB  083F               	movf	(___ftmul@f2),w
  5529  0FBC  07C7               	addwf	(___ftmul@f3_as_product),f
  5530  0FBD  0840               	movf	(___ftmul@f2+1),w
  5531  0FBE  1103               	clrz
  5532  0FBF  1803               	skipnc
  5533  0FC0  0A40               	incf	(___ftmul@f2+1),w
  5534  0FC1  1903               	skipnz
  5535  0FC2  2FC4               	goto	u5271
  5536  0FC3  07C8               	addwf	(___ftmul@f3_as_product+1),f
  5537  0FC4                     u5271:
  5538  0FC4  0841               	movf	(___ftmul@f2+2),w
  5539  0FC5  1103               	clrz
  5540  0FC6  1803               	skipnc
  5541  0FC7  0A41               	incf	(___ftmul@f2+2),w
  5542  0FC8  1903               	skipnz
  5543  0FC9  2FCB               	goto	u5272
  5544  0FCA  07C9               	addwf	(___ftmul@f3_as_product+2),f
  5545  0FCB                     u5272:
  5546                           
  5547  0FCB  2FCC               	goto	l11263
  5548                           	
  5549  0FCC                     l7584:	
  5550                           	line	80
  5551                           	
  5552  0FCC                     l11263:	
  5553  0FCC  3001               	movlw	01h
  5554  0FCD                     u5285:
  5555  0FCD  1003               	clrc
  5556  0FCE  0CBE               	rrf	(___ftmul@f1+2),f
  5557  0FCF  0CBD               	rrf	(___ftmul@f1+1),f
  5558  0FD0  0CBC               	rrf	(___ftmul@f1),f
  5559  0FD1  3EFF               	addlw	-1
  5560  0FD2  1D03               	skipz
  5561  0FD3  2FCD               	goto	u5285
  5562                           
  5563                           	line	81
  5564                           	
  5565  0FD4                     l11265:	
  5566  0FD4  3001               	movlw	01h
  5567  0FD5                     u5295:
  5568  0FD5  1003               	clrc
  5569  0FD6  0CC9               	rrf	(___ftmul@f3_as_product+2),f
  5570  0FD7  0CC8               	rrf	(___ftmul@f3_as_product+1),f
  5571  0FD8  0CC7               	rrf	(___ftmul@f3_as_product),f
  5572  0FD9  3EFF               	addlw	-1
  5573  0FDA  1D03               	skipz
  5574  0FDB  2FD5               	goto	u5295
  5575                           
  5576                           	line	82
  5577                           	
  5578  0FDC                     l11267:	
  5579  0FDC  3001               	movlw	low(01h)
  5580  0FDD  02CA               	subwf	(___ftmul@cntr),f
  5581  0FDE  1D03               	btfss	status,2
  5582  0FDF  2FE1               	goto	u5301
  5583  0FE0  2FE2               	goto	u5300
  5584  0FE1                     u5301:
  5585  0FE1  2FB7               	goto	l11259
  5586  0FE2                     u5300:
  5587  0FE2  2FE3               	goto	l11269
  5588                           	
  5589  0FE3                     l7585:	
  5590                           	line	83
  5591                           	
  5592  0FE3                     l11269:	
  5593  0FE3  0847               	movf	(___ftmul@f3_as_product),w
  5594  0FE4  00A0               	movwf	(?___ftpack)
  5595  0FE5  0848               	movf	(___ftmul@f3_as_product+1),w
  5596  0FE6  00A1               	movwf	(?___ftpack+1)
  5597  0FE7  0849               	movf	(___ftmul@f3_as_product+2),w
  5598  0FE8  00A2               	movwf	(?___ftpack+2)
  5599  0FE9  0846               	movf	(___ftmul@exp),w
  5600  0FEA  00C2               	movwf	(??___ftmul+0)+0
  5601  0FEB  0842               	movf	(??___ftmul+0)+0,w
  5602  0FEC  00A3               	movwf	0+(?___ftpack)+03h
  5603  0FED  084B               	movf	(___ftmul@sign),w
  5604  0FEE  00C3               	movwf	(??___ftmul+1)+0
  5605  0FEF  0843               	movf	(??___ftmul+1)+0,w
  5606  0FF0  00A4               	movwf	0+(?___ftpack)+04h
  5607  0FF1  120A  158A  242A   	fcall	___ftpack
              120A  158A         
  5608  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  5609  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  5610  0FF8  0820               	movf	(0+(?___ftpack)),w
  5611  0FF9  00BC               	movwf	(?___ftmul)
  5612  0FFA  0821               	movf	(1+(?___ftpack)),w
  5613  0FFB  00BD               	movwf	(?___ftmul+1)
  5614  0FFC  0822               	movf	(2+(?___ftpack)),w
  5615  0FFD  00BE               	movwf	(?___ftmul+2)
  5616  0FFE  2FFF               	goto	l7578
  5617                           	
  5618  0FFF                     l11271:	
  5619                           	line	84
  5620                           	
  5621  0FFF                     l7578:	
  5622  0FFF  0008               	return
  5623                           	opt stack 0
  5624                           GLOBAL	__end_of___ftmul
  5625  1000                     	__end_of___ftmul:
  5626 ;; =============== function ___ftmul ends ============
  5627                           
  5628                           	signat	___ftmul,8315
  5629                           	global	_ser_getch
  5630                           psect	text1018,local,class=CODE,delta=2
  5631                           global __ptext1018
  5632  1670                     __ptext1018:
  5633                           
  5634 ;; *************** function _ser_getch *****************
  5635 ;; Defined at:
  5636 ;;		line 55 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;		None
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  c               1    1[BANK0 ] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      unsigned char 
  5643 ;; Registers used:
  5644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5650 ;;      Params:         0       0       0       0       0
  5651 ;;      Locals:         0       1       0       0       0
  5652 ;;      Temps:          0       1       0       0       0
  5653 ;;      Totals:         0       2       0       0       0
  5654 ;;Total ram usage:        2 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    4
  5657 ;; This function calls:
  5658 ;;		_ser_isrx
  5659 ;; This function is called by:
  5660 ;;		_robot_read
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           psect	text1018
  5664                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  5665                           	line	55
  5666                           	global	__size_of_ser_getch
  5667  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  5668                           	
  5669  1670                     _ser_getch:	
  5670                           	opt	stack 1
  5671                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5672                           	line	58
  5673                           	
  5674  1670                     l11207:	
  5675                           ;ser.c: 56: unsigned char c;
  5676                           ;ser.c: 58: while (ser_isrx()==0)
  5677  1670  2E72               	goto	l11209
  5678                           	
  5679  1671                     l6738:	
  5680                           	line	59
  5681                           ;ser.c: 59: continue;
  5682  1671  2E72               	goto	l11209
  5683                           	
  5684  1672                     l6737:	
  5685                           	line	58
  5686                           	
  5687  1672                     l11209:	
  5688  1672  160A  118A  2587   	fcall	_ser_isrx
              160A  118A         
  5689  1677  1C03               	btfss	status,0
  5690  1678  2E7A               	goto	u5161
  5691  1679  2E7B               	goto	u5160
  5692  167A                     u5161:
  5693  167A  2E72               	goto	l11209
  5694  167B                     u5160:
  5695                           	
  5696  167B                     l6739:	
  5697                           	line	61
  5698                           ;ser.c: 61: GIE=0;
  5699  167B  138B               	bcf	(95/8),(95)&7
  5700                           	line	62
  5701                           	
  5702  167C                     l11211:	
  5703                           ;ser.c: 62: c=rxfifo[rxoptr];
  5704  167C  1683               	bsf	status, 5	;RP0=1, select bank1
  5705  167D  1303               	bcf	status, 6	;RP1=0, select bank1
  5706  167E  084F               	movf	(_rxoptr)^080h,w
  5707  167F  3EA0               	addlw	_rxfifo&0ffh
  5708  1680  0084               	movwf	fsr0
  5709  1681  1383               	bcf	status, 7	;select IRP bank1
  5710  1682  0800               	movf	indf,w
  5711  1683  1283               	bcf	status, 5	;RP0=0, select bank0
  5712  1684  1303               	bcf	status, 6	;RP1=0, select bank0
  5713  1685  00A0               	movwf	(??_ser_getch+0)+0
  5714  1686  0820               	movf	(??_ser_getch+0)+0,w
  5715  1687  00A1               	movwf	(ser_getch@c)
  5716                           	line	63
  5717                           	
  5718  1688                     l11213:	
  5719                           ;ser.c: 63: ++rxoptr;
  5720  1688  3001               	movlw	(01h)
  5721  1689  00A0               	movwf	(??_ser_getch+0)+0
  5722  168A  0820               	movf	(??_ser_getch+0)+0,w
  5723  168B  1683               	bsf	status, 5	;RP0=1, select bank1
  5724  168C  1303               	bcf	status, 6	;RP1=0, select bank1
  5725  168D  07CF               	addwf	(_rxoptr)^080h,f	;volatile
  5726                           	line	64
  5727                           	
  5728  168E                     l11215:	
  5729                           ;ser.c: 64: rxoptr &= (16-1);
  5730  168E  300F               	movlw	(0Fh)
  5731  168F  1283               	bcf	status, 5	;RP0=0, select bank0
  5732  1690  1303               	bcf	status, 6	;RP1=0, select bank0
  5733  1691  00A0               	movwf	(??_ser_getch+0)+0
  5734  1692  0820               	movf	(??_ser_getch+0)+0,w
  5735  1693  1683               	bsf	status, 5	;RP0=1, select bank1
  5736  1694  1303               	bcf	status, 6	;RP1=0, select bank1
  5737  1695  05CF               	andwf	(_rxoptr)^080h,f	;volatile
  5738                           	line	65
  5739                           	
  5740  1696                     l11217:	
  5741                           ;ser.c: 65: GIE=1;
  5742  1696  178B               	bsf	(95/8),(95)&7
  5743                           	line	66
  5744                           	
  5745  1697                     l11219:	
  5746                           ;ser.c: 66: return c;
  5747  1697  1283               	bcf	status, 5	;RP0=0, select bank0
  5748  1698  1303               	bcf	status, 6	;RP1=0, select bank0
  5749  1699  0821               	movf	(ser_getch@c),w
  5750  169A  2E9B               	goto	l6740
  5751                           	
  5752  169B                     l11221:	
  5753                           	line	67
  5754                           	
  5755  169B                     l6740:	
  5756  169B  0008               	return
  5757                           	opt stack 0
  5758                           GLOBAL	__end_of_ser_getch
  5759  169C                     	__end_of_ser_getch:
  5760 ;; =============== function _ser_getch ends ============
  5761                           
  5762                           	signat	_ser_getch,89
  5763                           	global	_sprintf
  5764                           psect	text1019,local,class=CODE,delta=2
  5765                           global __ptext1019
  5766  061A                     __ptext1019:
  5767                           
  5768 ;; *************** function _sprintf *****************
  5769 ;; Defined at:
  5770 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  sp              1    wreg     PTR unsigned char 
  5773 ;;		 -> UpdateDisplay@adcOutput(16), 
  5774 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  5775 ;;		 -> STR_13(15), 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  5778 ;;		 -> UpdateDisplay@adcOutput(16), 
  5779 ;;  _val            4   31[BANK0 ] struct .
  5780 ;;  c               1   36[BANK0 ] char 
  5781 ;;  prec            1   30[BANK0 ] char 
  5782 ;;  flag            1   29[BANK0 ] unsigned char 
  5783 ;;  ap              1   28[BANK0 ] PTR void [1]
  5784 ;;		 -> ?_sprintf(2), 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  2   20[BANK0 ] int 
  5787 ;; Registers used:
  5788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5794 ;;      Params:         0       5       0       0       0
  5795 ;;      Locals:         0       9       0       0       0
  5796 ;;      Temps:          0       3       0       0       0
  5797 ;;      Totals:         0      17       0       0       0
  5798 ;;Total ram usage:       17 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    4
  5801 ;; This function calls:
  5802 ;;		___lwdiv
  5803 ;;		___lwmod
  5804 ;; This function is called by:
  5805 ;;		_UpdateDisplay
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           psect	text1019
  5809                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  5810                           	line	488
  5811                           	global	__size_of_sprintf
  5812  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  5813                           	
  5814  061A                     _sprintf:	
  5815                           	opt	stack 1
  5816                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5817                           ;sprintf@sp stored from wreg
  5818                           	line	537
  5819  061A  1283               	bcf	status, 5	;RP0=0, select bank0
  5820  061B  1303               	bcf	status, 6	;RP1=0, select bank0
  5821  061C  00C3               	movwf	(sprintf@sp)
  5822                           	
  5823  061D                     l11149:	
  5824  061D  3035               	movlw	(?_sprintf+01h)&0ffh
  5825  061E  00B9               	movwf	(??_sprintf+0)+0
  5826  061F  0839               	movf	(??_sprintf+0)+0,w
  5827  0620  00BC               	movwf	(sprintf@ap)
  5828                           	line	540
  5829  0621  2F00               	goto	l11201
  5830                           	
  5831  0622                     l6778:	
  5832                           	line	542
  5833                           	
  5834  0622                     l11151:	
  5835  0622  0844               	movf	(sprintf@c),w
  5836  0623  3A25               	xorlw	025h
  5837  0624  1903               	skipnz
  5838  0625  2E27               	goto	u5081
  5839  0626  2E28               	goto	u5080
  5840  0627                     u5081:
  5841  0627  2E34               	goto	l6779
  5842  0628                     u5080:
  5843                           	line	545
  5844                           	
  5845  0628                     l11153:	
  5846  0628  0844               	movf	(sprintf@c),w
  5847  0629  00B9               	movwf	(??_sprintf+0)+0
  5848  062A  0843               	movf	(sprintf@sp),w
  5849  062B  0084               	movwf	fsr0
  5850  062C  0839               	movf	(??_sprintf+0)+0,w
  5851  062D  1383               	bcf	status, 7	;select IRP bank0
  5852  062E  0080               	movwf	indf
  5853                           	
  5854  062F                     l11155:	
  5855  062F  3001               	movlw	(01h)
  5856  0630  00B9               	movwf	(??_sprintf+0)+0
  5857  0631  0839               	movf	(??_sprintf+0)+0,w
  5858  0632  07C3               	addwf	(sprintf@sp),f
  5859                           	line	546
  5860  0633  2F00               	goto	l11201
  5861                           	line	547
  5862                           	
  5863  0634                     l6779:	
  5864                           	line	552
  5865  0634  01BD               	clrf	(sprintf@flag)
  5866                           	line	638
  5867  0635  2E3B               	goto	l11159
  5868                           	line	640
  5869                           	
  5870  0636                     l6781:	
  5871                           	line	641
  5872  0636  2F14               	goto	l11203
  5873                           	line	700
  5874                           	
  5875  0637                     l6783:	
  5876  0637  2E50               	goto	l11161
  5877                           	line	701
  5878                           	
  5879  0638                     l6784:	
  5880                           	line	702
  5881  0638  2E50               	goto	l11161
  5882                           	line	805
  5883                           	
  5884  0639                     l6786:	
  5885                           	line	816
  5886  0639  2F00               	goto	l11201
  5887                           	line	825
  5888                           	
  5889  063A                     l11157:	
  5890  063A  2E50               	goto	l11161
  5891                           	line	638
  5892                           	
  5893  063B                     l6780:	
  5894                           	
  5895  063B                     l11159:	
  5896  063B  3001               	movlw	01h
  5897  063C  07B4               	addwf	(sprintf@f),f
  5898  063D  30FF               	movlw	-01h
  5899  063E  0734               	addwf	(sprintf@f),w
  5900  063F  0084               	movwf	fsr0
  5901  0640  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5902  0645  00C4               	movwf	(sprintf@c)
  5903                           	; Switch size 1, requested type "space"
  5904                           ; Number of cases is 3, Range of values is 0 to 105
  5905                           ; switch strategies available:
  5906                           ; Name         Instructions Cycles
  5907                           ; simple_byte           10     6 (average)
  5908                           ; jumptable            260     6 (fixed)
  5909                           ; rangetable           110     6 (fixed)
  5910                           ; spacedrange          218     9 (fixed)
  5911                           ; locatedrange         106     3 (fixed)
  5912                           ;	Chosen strategy is simple_byte
  5913                           
  5914                           	opt asmopt_off
  5915  0646  3A00               	xorlw	0^0	; case 0
  5916  0647  1903               	skipnz
  5917  0648  2F14               	goto	l11203
  5918  0649  3A64               	xorlw	100^0	; case 100
  5919  064A  1903               	skipnz
  5920  064B  2E50               	goto	l11161
  5921  064C  3A0D               	xorlw	105^100	; case 105
  5922  064D  1903               	skipnz
  5923  064E  2E50               	goto	l11161
  5924  064F  2F00               	goto	l11201
  5925                           	opt asmopt_on
  5926                           
  5927                           	line	825
  5928                           	
  5929  0650                     l6785:	
  5930                           	line	1254
  5931                           	
  5932  0650                     l11161:	
  5933  0650  083C               	movf	(sprintf@ap),w
  5934  0651  0084               	movwf	fsr0
  5935  0652  1383               	bcf	status, 7	;select IRP bank0
  5936  0653  0800               	movf	indf,w
  5937  0654  00BF               	movwf	(sprintf@_val)
  5938  0655  0A84               	incf	fsr0,f
  5939  0656  0800               	movf	indf,w
  5940  0657  00C0               	movwf	(sprintf@_val+1)
  5941                           	
  5942  0658                     l11163:	
  5943  0658  3002               	movlw	(02h)
  5944  0659  00B9               	movwf	(??_sprintf+0)+0
  5945  065A  0839               	movf	(??_sprintf+0)+0,w
  5946  065B  07BC               	addwf	(sprintf@ap),f
  5947                           	line	1256
  5948                           	
  5949  065C                     l11165:	
  5950  065C  1FC0               	btfss	(sprintf@_val+1),7
  5951  065D  2E5F               	goto	u5091
  5952  065E  2E60               	goto	u5090
  5953  065F                     u5091:
  5954  065F  2E6A               	goto	l11171
  5955  0660                     u5090:
  5956                           	line	1257
  5957                           	
  5958  0660                     l11167:	
  5959  0660  3003               	movlw	(03h)
  5960  0661  00B9               	movwf	(??_sprintf+0)+0
  5961  0662  0839               	movf	(??_sprintf+0)+0,w
  5962  0663  04BD               	iorwf	(sprintf@flag),f
  5963                           	line	1258
  5964                           	
  5965  0664                     l11169:	
  5966  0664  09BF               	comf	(sprintf@_val),f
  5967  0665  09C0               	comf	(sprintf@_val+1),f
  5968  0666  0ABF               	incf	(sprintf@_val),f
  5969  0667  1903               	skipnz
  5970  0668  0AC0               	incf	(sprintf@_val+1),f
  5971  0669  2E6A               	goto	l11171
  5972                           	line	1259
  5973                           	
  5974  066A                     l6787:	
  5975                           	line	1300
  5976                           	
  5977  066A                     l11171:	
  5978  066A  01C4               	clrf	(sprintf@c)
  5979  066B  1403               	bsf	status,0
  5980  066C  0DC4               	rlf	(sprintf@c),f
  5981                           	
  5982  066D                     l11173:	
  5983  066D  0844               	movf	(sprintf@c),w
  5984  066E  3A05               	xorlw	05h
  5985  066F  1D03               	skipz
  5986  0670  2E72               	goto	u5101
  5987  0671  2E73               	goto	u5100
  5988  0672                     u5101:
  5989  0672  2E75               	goto	l11177
  5990  0673                     u5100:
  5991  0673  2E9D               	goto	l11185
  5992                           	
  5993  0674                     l11175:	
  5994  0674  2E9D               	goto	l11185
  5995                           	line	1301
  5996                           	
  5997  0675                     l6788:	
  5998                           	
  5999  0675                     l11177:	
  6000  0675  0844               	movf	(sprintf@c),w
  6001  0676  00B9               	movwf	(??_sprintf+0)+0
  6002  0677  0739               	addwf	(??_sprintf+0)+0,w
  6003  0678  3E01               	addlw	low((_dpowers-__stringbase))
  6004  0679  0084               	movwf	fsr0
  6005  067A  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6006  067F  00BA               	movwf	(??_sprintf+1)+0
  6007  0680  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6008  0685  00BB               	movwf	(??_sprintf+1)+0+1
  6009  0686  083B               	movf	1+(??_sprintf+1)+0,w
  6010  0687  0240               	subwf	(sprintf@_val+1),w
  6011  0688  1D03               	skipz
  6012  0689  2E8C               	goto	u5115
  6013  068A  083A               	movf	0+(??_sprintf+1)+0,w
  6014  068B  023F               	subwf	(sprintf@_val),w
  6015  068C                     u5115:
  6016  068C  1803               	skipnc
  6017  068D  2E8F               	goto	u5111
  6018  068E  2E90               	goto	u5110
  6019  068F                     u5111:
  6020  068F  2E92               	goto	l11181
  6021  0690                     u5110:
  6022  0690  2E9D               	goto	l11185
  6023                           	line	1302
  6024                           	
  6025  0691                     l11179:	
  6026  0691  2E9D               	goto	l11185
  6027                           	
  6028  0692                     l6790:	
  6029                           	line	1300
  6030                           	
  6031  0692                     l11181:	
  6032  0692  3001               	movlw	(01h)
  6033  0693  00B9               	movwf	(??_sprintf+0)+0
  6034  0694  0839               	movf	(??_sprintf+0)+0,w
  6035  0695  07C4               	addwf	(sprintf@c),f
  6036                           	
  6037  0696                     l11183:	
  6038  0696  0844               	movf	(sprintf@c),w
  6039  0697  3A05               	xorlw	05h
  6040  0698  1D03               	skipz
  6041  0699  2E9B               	goto	u5121
  6042  069A  2E9C               	goto	u5120
  6043  069B                     u5121:
  6044  069B  2E75               	goto	l11177
  6045  069C                     u5120:
  6046  069C  2E9D               	goto	l11185
  6047                           	
  6048  069D                     l6789:	
  6049                           	line	1433
  6050                           	
  6051  069D                     l11185:	
  6052  069D  083D               	movf	(sprintf@flag),w
  6053  069E  3903               	andlw	03h
  6054  069F  1903               	btfsc	status,2
  6055  06A0  2EA2               	goto	u5131
  6056  06A1  2EA3               	goto	u5130
  6057  06A2                     u5131:
  6058  06A2  2EAF               	goto	l11191
  6059  06A3                     u5130:
  6060                           	line	1434
  6061                           	
  6062  06A3                     l11187:	
  6063  06A3  302D               	movlw	(02Dh)
  6064  06A4  00B9               	movwf	(??_sprintf+0)+0
  6065  06A5  0843               	movf	(sprintf@sp),w
  6066  06A6  0084               	movwf	fsr0
  6067  06A7  0839               	movf	(??_sprintf+0)+0,w
  6068  06A8  1383               	bcf	status, 7	;select IRP bank0
  6069  06A9  0080               	movwf	indf
  6070                           	
  6071  06AA                     l11189:	
  6072  06AA  3001               	movlw	(01h)
  6073  06AB  00B9               	movwf	(??_sprintf+0)+0
  6074  06AC  0839               	movf	(??_sprintf+0)+0,w
  6075  06AD  07C3               	addwf	(sprintf@sp),f
  6076  06AE  2EAF               	goto	l11191
  6077                           	
  6078  06AF                     l6791:	
  6079                           	line	1467
  6080                           	
  6081  06AF                     l11191:	
  6082  06AF  0844               	movf	(sprintf@c),w
  6083  06B0  00B9               	movwf	(??_sprintf+0)+0
  6084  06B1  0839               	movf	(??_sprintf+0)+0,w
  6085  06B2  00BE               	movwf	(sprintf@prec)
  6086                           	line	1469
  6087  06B3  2EF4               	goto	l11199
  6088                           	
  6089  06B4                     l6793:	
  6090                           	line	1484
  6091                           	
  6092  06B4                     l11193:	
  6093  06B4  300A               	movlw	low(0Ah)
  6094  06B5  00AE               	movwf	(?___lwmod)
  6095  06B6  3000               	movlw	high(0Ah)
  6096  06B7  00AF               	movwf	((?___lwmod))+1
  6097  06B8  083E               	movf	(sprintf@prec),w
  6098  06B9  00B9               	movwf	(??_sprintf+0)+0
  6099  06BA  0739               	addwf	(??_sprintf+0)+0,w
  6100  06BB  3E01               	addlw	low((_dpowers-__stringbase))
  6101  06BC  0084               	movwf	fsr0
  6102  06BD  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6103  06C2  00A6               	movwf	(?___lwdiv)
  6104  06C3  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6105  06C8  00A7               	movwf	(?___lwdiv+1)
  6106  06C9  0840               	movf	(sprintf@_val+1),w
  6107  06CA  01A9               	clrf	1+(?___lwdiv)+02h
  6108  06CB  07A9               	addwf	1+(?___lwdiv)+02h
  6109  06CC  083F               	movf	(sprintf@_val),w
  6110  06CD  01A8               	clrf	0+(?___lwdiv)+02h
  6111  06CE  07A8               	addwf	0+(?___lwdiv)+02h
  6112                           
  6113  06CF  120A  158A  21A2   	fcall	___lwdiv
              120A  118A         
  6114  06D4  1283               	bcf	status, 5	;RP0=0, select bank0
  6115  06D5  1303               	bcf	status, 6	;RP1=0, select bank0
  6116  06D6  0827               	movf	(1+(?___lwdiv)),w
  6117  06D7  01B1               	clrf	1+(?___lwmod)+02h
  6118  06D8  07B1               	addwf	1+(?___lwmod)+02h
  6119  06D9  0826               	movf	(0+(?___lwdiv)),w
  6120  06DA  01B0               	clrf	0+(?___lwmod)+02h
  6121  06DB  07B0               	addwf	0+(?___lwmod)+02h
  6122                           
  6123  06DC  120A  158A  20CF   	fcall	___lwmod
              120A  118A         
  6124  06E1  1283               	bcf	status, 5	;RP0=0, select bank0
  6125  06E2  1303               	bcf	status, 6	;RP1=0, select bank0
  6126  06E3  082E               	movf	(0+(?___lwmod)),w
  6127  06E4  3E30               	addlw	030h
  6128  06E5  00BA               	movwf	(??_sprintf+1)+0
  6129  06E6  083A               	movf	(??_sprintf+1)+0,w
  6130  06E7  00C4               	movwf	(sprintf@c)
  6131                           	line	1516
  6132                           	
  6133  06E8                     l11195:	
  6134  06E8  0844               	movf	(sprintf@c),w
  6135  06E9  00B9               	movwf	(??_sprintf+0)+0
  6136  06EA  0843               	movf	(sprintf@sp),w
  6137  06EB  0084               	movwf	fsr0
  6138  06EC  0839               	movf	(??_sprintf+0)+0,w
  6139  06ED  1383               	bcf	status, 7	;select IRP bank0
  6140  06EE  0080               	movwf	indf
  6141                           	
  6142  06EF                     l11197:	
  6143  06EF  3001               	movlw	(01h)
  6144  06F0  00B9               	movwf	(??_sprintf+0)+0
  6145  06F1  0839               	movf	(??_sprintf+0)+0,w
  6146  06F2  07C3               	addwf	(sprintf@sp),f
  6147  06F3  2EF4               	goto	l11199
  6148                           	line	1517
  6149                           	
  6150  06F4                     l6792:	
  6151                           	line	1469
  6152                           	
  6153  06F4                     l11199:	
  6154  06F4  30FF               	movlw	(-1)
  6155  06F5  00B9               	movwf	(??_sprintf+0)+0
  6156  06F6  0839               	movf	(??_sprintf+0)+0,w
  6157  06F7  07BE               	addwf	(sprintf@prec),f
  6158  06F8  083E               	movf	((sprintf@prec)),w
  6159  06F9  3AFF               	xorlw	-1
  6160  06FA  1D03               	skipz
  6161  06FB  2EFD               	goto	u5141
  6162  06FC  2EFE               	goto	u5140
  6163  06FD                     u5141:
  6164  06FD  2EB4               	goto	l11193
  6165  06FE                     u5140:
  6166  06FE  2F00               	goto	l11201
  6167                           	
  6168  06FF                     l6794:	
  6169  06FF  2F00               	goto	l11201
  6170                           	line	1525
  6171                           	
  6172  0700                     l6777:	
  6173                           	line	540
  6174                           	
  6175  0700                     l11201:	
  6176  0700  3001               	movlw	01h
  6177  0701  07B4               	addwf	(sprintf@f),f
  6178  0702  30FF               	movlw	-01h
  6179  0703  0734               	addwf	(sprintf@f),w
  6180  0704  0084               	movwf	fsr0
  6181  0705  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6182  070A  00B9               	movwf	(??_sprintf+0)+0
  6183  070B  0839               	movf	(??_sprintf+0)+0,w
  6184  070C  00C4               	movwf	(sprintf@c)
  6185  070D  08C4               	movf	((sprintf@c)),f
  6186  070E  1D03               	skipz
  6187  070F  2F11               	goto	u5151
  6188  0710  2F12               	goto	u5150
  6189  0711                     u5151:
  6190  0711  2E22               	goto	l11151
  6191  0712                     u5150:
  6192  0712  2F14               	goto	l11203
  6193                           	
  6194  0713                     l6795:	
  6195  0713  2F14               	goto	l11203
  6196                           	line	1527
  6197                           	
  6198  0714                     l6782:	
  6199                           	line	1530
  6200                           	
  6201  0714                     l11203:	
  6202  0714  0843               	movf	(sprintf@sp),w
  6203  0715  0084               	movwf	fsr0
  6204  0716  1383               	bcf	status, 7	;select IRP bank0
  6205  0717  0180               	clrf	indf
  6206  0718  2F19               	goto	l6796
  6207                           	line	1532
  6208                           	
  6209  0719                     l11205:	
  6210                           	line	1533
  6211                           ;	Return value of _sprintf is never used
  6212                           	
  6213  0719                     l6796:	
  6214  0719  0008               	return
  6215                           	opt stack 0
  6216                           GLOBAL	__end_of_sprintf
  6217  071A                     	__end_of_sprintf:
  6218 ;; =============== function _sprintf ends ============
  6219                           
  6220                           	signat	_sprintf,4698
  6221                           	global	_ADCconvert
  6222                           psect	text1020,local,class=CODE,delta=2
  6223                           global __ptext1020
  6224  029B                     __ptext1020:
  6225                           
  6226 ;; *************** function _ADCconvert *****************
  6227 ;; Defined at:
  6228 ;;		line 33 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;		None               void
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0, pclath, cstack
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6242 ;;      Params:         0       0       0       0       0
  6243 ;;      Locals:         0       0       0       0       0
  6244 ;;      Temps:          0       2       0       0       0
  6245 ;;      Totals:         0       2       0       0       0
  6246 ;;Total ram usage:        2 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    4
  6249 ;; This function calls:
  6250 ;;		___wmul
  6251 ;;		___lwdiv
  6252 ;; This function is called by:
  6253 ;;		_readAvgDistance
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           psect	text1020
  6257                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\infrared.c"
  6258                           	line	33
  6259                           	global	__size_of_ADCconvert
  6260  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  6261                           	
  6262  029B                     _ADCconvert:	
  6263                           	opt	stack 1
  6264                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  6265                           	line	39
  6266                           	
  6267  029B                     l11107:	
  6268                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  6269  029B  3000               	movlw	high(0D5h)
  6270  029C  1283               	bcf	status, 5	;RP0=0, select bank0
  6271  029D  1303               	bcf	status, 6	;RP1=0, select bank0
  6272  029E  026E               	subwf	(_adcVal+1),w	;volatile
  6273  029F  30D5               	movlw	low(0D5h)
  6274  02A0  1903               	skipnz
  6275  02A1  026D               	subwf	(_adcVal),w	;volatile
  6276  02A2  1C03               	skipc
  6277  02A3  2AA5               	goto	u4941
  6278  02A4  2AA6               	goto	u4940
  6279  02A5                     u4941:
  6280  02A5  2AE9               	goto	l11113
  6281  02A6                     u4940:
  6282                           	
  6283  02A6                     l11109:	
  6284  02A6  3000               	movlw	high(0EAh)
  6285  02A7  026E               	subwf	(_adcVal+1),w	;volatile
  6286  02A8  30EA               	movlw	low(0EAh)
  6287  02A9  1903               	skipnz
  6288  02AA  026D               	subwf	(_adcVal),w	;volatile
  6289  02AB  1803               	skipnc
  6290  02AC  2AAE               	goto	u4951
  6291  02AD  2AAF               	goto	u4950
  6292  02AE                     u4951:
  6293  02AE  2AE9               	goto	l11113
  6294  02AF                     u4950:
  6295                           	line	41
  6296                           	
  6297  02AF                     l11111:	
  6298                           ;infrared.c: 40: {
  6299                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  6300  02AF  3015               	movlw	low(015h)
  6301  02B0  00A6               	movwf	(?___lwdiv)
  6302  02B1  3000               	movlw	high(015h)
  6303  02B2  00A7               	movwf	((?___lwdiv))+1
  6304  02B3  096D               	comf	(_adcVal),w	;volatile
  6305  02B4  00AE               	movwf	(??_ADCconvert+0)+0
  6306  02B5  096E               	comf	(_adcVal+1),w	;volatile
  6307  02B6  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6308  02B7  0AAE               	incf	(??_ADCconvert+0)+0,f
  6309  02B8  1903               	skipnz
  6310  02B9  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6311  02BA  082E               	movf	0+(??_ADCconvert+0)+0,w
  6312  02BB  3EEA               	addlw	low(0EAh)
  6313  02BC  00A0               	movwf	(?___wmul)
  6314  02BD  082F               	movf	1+(??_ADCconvert+0)+0,w
  6315  02BE  1803               	skipnc
  6316  02BF  3E01               	addlw	1
  6317  02C0  3E00               	addlw	high(0EAh)
  6318  02C1  00A1               	movwf	1+(?___wmul)
  6319  02C2  3005               	movlw	low(05h)
  6320  02C3  00A2               	movwf	0+(?___wmul)+02h
  6321  02C4  3000               	movlw	high(05h)
  6322  02C5  00A3               	movwf	(0+(?___wmul)+02h)+1
  6323  02C6  160A  118A  2644   	fcall	___wmul
              120A  118A         
  6324  02CB  1283               	bcf	status, 5	;RP0=0, select bank0
  6325  02CC  1303               	bcf	status, 6	;RP1=0, select bank0
  6326  02CD  0821               	movf	(1+(?___wmul)),w
  6327  02CE  01A9               	clrf	1+(?___lwdiv)+02h
  6328  02CF  07A9               	addwf	1+(?___lwdiv)+02h
  6329  02D0  0820               	movf	(0+(?___wmul)),w
  6330  02D1  01A8               	clrf	0+(?___lwdiv)+02h
  6331  02D2  07A8               	addwf	0+(?___lwdiv)+02h
  6332                           
  6333  02D3  120A  158A  21A2   	fcall	___lwdiv
              120A  118A         
  6334  02D8  1283               	bcf	status, 5	;RP0=0, select bank0
  6335  02D9  1303               	bcf	status, 6	;RP1=0, select bank0
  6336  02DA  0826               	movf	(0+(?___lwdiv)),w
  6337  02DB  3E0F               	addlw	low(0Fh)
  6338  02DC  1683               	bsf	status, 5	;RP0=1, select bank1
  6339  02DD  1303               	bcf	status, 6	;RP1=0, select bank1
  6340  02DE  00B8               	movwf	(_distance)^080h	;volatile
  6341  02DF  1283               	bcf	status, 5	;RP0=0, select bank0
  6342  02E0  1303               	bcf	status, 6	;RP1=0, select bank0
  6343  02E1  0827               	movf	(1+(?___lwdiv)),w
  6344  02E2  1803               	skipnc
  6345  02E3  3E01               	addlw	1
  6346  02E4  3E00               	addlw	high(0Fh)
  6347  02E5  1683               	bsf	status, 5	;RP0=1, select bank1
  6348  02E6  1303               	bcf	status, 6	;RP1=0, select bank1
  6349  02E7  00B9               	movwf	1+(_distance)^080h	;volatile
  6350                           	line	42
  6351                           ;infrared.c: 42: }
  6352  02E8  2CBD               	goto	l3016
  6353                           	line	43
  6354                           	
  6355  02E9                     l3003:	
  6356                           	
  6357  02E9                     l11113:	
  6358                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  6359  02E9  3000               	movlw	high(0AAh)
  6360  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  6361  02EB  026E               	subwf	(_adcVal+1),w	;volatile
  6362  02EC  30AA               	movlw	low(0AAh)
  6363  02ED  1903               	skipnz
  6364  02EE  026D               	subwf	(_adcVal),w	;volatile
  6365  02EF  1C03               	skipc
  6366  02F0  2AF2               	goto	u4961
  6367  02F1  2AF3               	goto	u4960
  6368  02F2                     u4961:
  6369  02F2  2B36               	goto	l11119
  6370  02F3                     u4960:
  6371                           	
  6372  02F3                     l11115:	
  6373  02F3  3000               	movlw	high(0D5h)
  6374  02F4  026E               	subwf	(_adcVal+1),w	;volatile
  6375  02F5  30D5               	movlw	low(0D5h)
  6376  02F6  1903               	skipnz
  6377  02F7  026D               	subwf	(_adcVal),w	;volatile
  6378  02F8  1803               	skipnc
  6379  02F9  2AFB               	goto	u4971
  6380  02FA  2AFC               	goto	u4970
  6381  02FB                     u4971:
  6382  02FB  2B36               	goto	l11119
  6383  02FC                     u4970:
  6384                           	line	45
  6385                           	
  6386  02FC                     l11117:	
  6387                           ;infrared.c: 44: {
  6388                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  6389  02FC  302B               	movlw	low(02Bh)
  6390  02FD  00A6               	movwf	(?___lwdiv)
  6391  02FE  3000               	movlw	high(02Bh)
  6392  02FF  00A7               	movwf	((?___lwdiv))+1
  6393  0300  096D               	comf	(_adcVal),w	;volatile
  6394  0301  00AE               	movwf	(??_ADCconvert+0)+0
  6395  0302  096E               	comf	(_adcVal+1),w	;volatile
  6396  0303  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6397  0304  0AAE               	incf	(??_ADCconvert+0)+0,f
  6398  0305  1903               	skipnz
  6399  0306  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6400  0307  082E               	movf	0+(??_ADCconvert+0)+0,w
  6401  0308  3ED5               	addlw	low(0D5h)
  6402  0309  00A0               	movwf	(?___wmul)
  6403  030A  082F               	movf	1+(??_ADCconvert+0)+0,w
  6404  030B  1803               	skipnc
  6405  030C  3E01               	addlw	1
  6406  030D  3E00               	addlw	high(0D5h)
  6407  030E  00A1               	movwf	1+(?___wmul)
  6408  030F  300A               	movlw	low(0Ah)
  6409  0310  00A2               	movwf	0+(?___wmul)+02h
  6410  0311  3000               	movlw	high(0Ah)
  6411  0312  00A3               	movwf	(0+(?___wmul)+02h)+1
  6412  0313  160A  118A  2644   	fcall	___wmul
              120A  118A         
  6413  0318  1283               	bcf	status, 5	;RP0=0, select bank0
  6414  0319  1303               	bcf	status, 6	;RP1=0, select bank0
  6415  031A  0821               	movf	(1+(?___wmul)),w
  6416  031B  01A9               	clrf	1+(?___lwdiv)+02h
  6417  031C  07A9               	addwf	1+(?___lwdiv)+02h
  6418  031D  0820               	movf	(0+(?___wmul)),w
  6419  031E  01A8               	clrf	0+(?___lwdiv)+02h
  6420  031F  07A8               	addwf	0+(?___lwdiv)+02h
  6421                           
  6422  0320  120A  158A  21A2   	fcall	___lwdiv
              120A  118A         
  6423  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  6424  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  6425  0327  0826               	movf	(0+(?___lwdiv)),w
  6426  0328  3E14               	addlw	low(014h)
  6427  0329  1683               	bsf	status, 5	;RP0=1, select bank1
  6428  032A  1303               	bcf	status, 6	;RP1=0, select bank1
  6429  032B  00B8               	movwf	(_distance)^080h	;volatile
  6430  032C  1283               	bcf	status, 5	;RP0=0, select bank0
  6431  032D  1303               	bcf	status, 6	;RP1=0, select bank0
  6432  032E  0827               	movf	(1+(?___lwdiv)),w
  6433  032F  1803               	skipnc
  6434  0330  3E01               	addlw	1
  6435  0331  3E00               	addlw	high(014h)
  6436  0332  1683               	bsf	status, 5	;RP0=1, select bank1
  6437  0333  1303               	bcf	status, 6	;RP1=0, select bank1
  6438  0334  00B9               	movwf	1+(_distance)^080h	;volatile
  6439                           	line	46
  6440                           ;infrared.c: 46: }
  6441  0335  2CBD               	goto	l3016
  6442                           	line	47
  6443                           	
  6444  0336                     l3005:	
  6445                           	
  6446  0336                     l11119:	
  6447                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  6448  0336  3000               	movlw	high(080h)
  6449  0337  1283               	bcf	status, 5	;RP0=0, select bank0
  6450  0338  026E               	subwf	(_adcVal+1),w	;volatile
  6451  0339  3080               	movlw	low(080h)
  6452  033A  1903               	skipnz
  6453  033B  026D               	subwf	(_adcVal),w	;volatile
  6454  033C  1C03               	skipc
  6455  033D  2B3F               	goto	u4981
  6456  033E  2B40               	goto	u4980
  6457  033F                     u4981:
  6458  033F  2B83               	goto	l11125
  6459  0340                     u4980:
  6460                           	
  6461  0340                     l11121:	
  6462  0340  3000               	movlw	high(0AAh)
  6463  0341  026E               	subwf	(_adcVal+1),w	;volatile
  6464  0342  30AA               	movlw	low(0AAh)
  6465  0343  1903               	skipnz
  6466  0344  026D               	subwf	(_adcVal),w	;volatile
  6467  0345  1803               	skipnc
  6468  0346  2B48               	goto	u4991
  6469  0347  2B49               	goto	u4990
  6470  0348                     u4991:
  6471  0348  2B83               	goto	l11125
  6472  0349                     u4990:
  6473                           	line	49
  6474                           	
  6475  0349                     l11123:	
  6476                           ;infrared.c: 48: {
  6477                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  6478  0349  302A               	movlw	low(02Ah)
  6479  034A  00A6               	movwf	(?___lwdiv)
  6480  034B  3000               	movlw	high(02Ah)
  6481  034C  00A7               	movwf	((?___lwdiv))+1
  6482  034D  096D               	comf	(_adcVal),w	;volatile
  6483  034E  00AE               	movwf	(??_ADCconvert+0)+0
  6484  034F  096E               	comf	(_adcVal+1),w	;volatile
  6485  0350  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6486  0351  0AAE               	incf	(??_ADCconvert+0)+0,f
  6487  0352  1903               	skipnz
  6488  0353  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6489  0354  082E               	movf	0+(??_ADCconvert+0)+0,w
  6490  0355  3EAA               	addlw	low(0AAh)
  6491  0356  00A0               	movwf	(?___wmul)
  6492  0357  082F               	movf	1+(??_ADCconvert+0)+0,w
  6493  0358  1803               	skipnc
  6494  0359  3E01               	addlw	1
  6495  035A  3E00               	addlw	high(0AAh)
  6496  035B  00A1               	movwf	1+(?___wmul)
  6497  035C  300A               	movlw	low(0Ah)
  6498  035D  00A2               	movwf	0+(?___wmul)+02h
  6499  035E  3000               	movlw	high(0Ah)
  6500  035F  00A3               	movwf	(0+(?___wmul)+02h)+1
  6501  0360  160A  118A  2644   	fcall	___wmul
              120A  118A         
  6502  0365  1283               	bcf	status, 5	;RP0=0, select bank0
  6503  0366  1303               	bcf	status, 6	;RP1=0, select bank0
  6504  0367  0821               	movf	(1+(?___wmul)),w
  6505  0368  01A9               	clrf	1+(?___lwdiv)+02h
  6506  0369  07A9               	addwf	1+(?___lwdiv)+02h
  6507  036A  0820               	movf	(0+(?___wmul)),w
  6508  036B  01A8               	clrf	0+(?___lwdiv)+02h
  6509  036C  07A8               	addwf	0+(?___lwdiv)+02h
  6510                           
  6511  036D  120A  158A  21A2   	fcall	___lwdiv
              120A  118A         
  6512  0372  1283               	bcf	status, 5	;RP0=0, select bank0
  6513  0373  1303               	bcf	status, 6	;RP1=0, select bank0
  6514  0374  0826               	movf	(0+(?___lwdiv)),w
  6515  0375  3E1E               	addlw	low(01Eh)
  6516  0376  1683               	bsf	status, 5	;RP0=1, select bank1
  6517  0377  1303               	bcf	status, 6	;RP1=0, select bank1
  6518  0378  00B8               	movwf	(_distance)^080h	;volatile
  6519  0379  1283               	bcf	status, 5	;RP0=0, select bank0
  6520  037A  1303               	bcf	status, 6	;RP1=0, select bank0
  6521  037B  0827               	movf	(1+(?___lwdiv)),w
  6522  037C  1803               	skipnc
  6523  037D  3E01               	addlw	1
  6524  037E  3E00               	addlw	high(01Eh)
  6525  037F  1683               	bsf	status, 5	;RP0=1, select bank1
  6526  0380  1303               	bcf	status, 6	;RP1=0, select bank1
  6527  0381  00B9               	movwf	1+(_distance)^080h	;volatile
  6528                           	line	50
  6529                           ;infrared.c: 50: }
  6530  0382  2CBD               	goto	l3016
  6531                           	line	51
  6532                           	
  6533  0383                     l3007:	
  6534                           	
  6535  0383                     l11125:	
  6536                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  6537  0383  3000               	movlw	high(06Bh)
  6538  0384  1283               	bcf	status, 5	;RP0=0, select bank0
  6539  0385  026E               	subwf	(_adcVal+1),w	;volatile
  6540  0386  306B               	movlw	low(06Bh)
  6541  0387  1903               	skipnz
  6542  0388  026D               	subwf	(_adcVal),w	;volatile
  6543  0389  1C03               	skipc
  6544  038A  2B8C               	goto	u5001
  6545  038B  2B8D               	goto	u5000
  6546  038C                     u5001:
  6547  038C  2BD0               	goto	l11131
  6548  038D                     u5000:
  6549                           	
  6550  038D                     l11127:	
  6551  038D  3000               	movlw	high(080h)
  6552  038E  026E               	subwf	(_adcVal+1),w	;volatile
  6553  038F  3080               	movlw	low(080h)
  6554  0390  1903               	skipnz
  6555  0391  026D               	subwf	(_adcVal),w	;volatile
  6556  0392  1803               	skipnc
  6557  0393  2B95               	goto	u5011
  6558  0394  2B96               	goto	u5010
  6559  0395                     u5011:
  6560  0395  2BD0               	goto	l11131
  6561  0396                     u5010:
  6562                           	line	53
  6563                           	
  6564  0396                     l11129:	
  6565                           ;infrared.c: 52: {
  6566                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  6567  0396  3015               	movlw	low(015h)
  6568  0397  00A6               	movwf	(?___lwdiv)
  6569  0398  3000               	movlw	high(015h)
  6570  0399  00A7               	movwf	((?___lwdiv))+1
  6571  039A  096D               	comf	(_adcVal),w	;volatile
  6572  039B  00AE               	movwf	(??_ADCconvert+0)+0
  6573  039C  096E               	comf	(_adcVal+1),w	;volatile
  6574  039D  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6575  039E  0AAE               	incf	(??_ADCconvert+0)+0,f
  6576  039F  1903               	skipnz
  6577  03A0  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6578  03A1  082E               	movf	0+(??_ADCconvert+0)+0,w
  6579  03A2  3E80               	addlw	low(080h)
  6580  03A3  00A0               	movwf	(?___wmul)
  6581  03A4  082F               	movf	1+(??_ADCconvert+0)+0,w
  6582  03A5  1803               	skipnc
  6583  03A6  3E01               	addlw	1
  6584  03A7  3E00               	addlw	high(080h)
  6585  03A8  00A1               	movwf	1+(?___wmul)
  6586  03A9  300A               	movlw	low(0Ah)
  6587  03AA  00A2               	movwf	0+(?___wmul)+02h
  6588  03AB  3000               	movlw	high(0Ah)
  6589  03AC  00A3               	movwf	(0+(?___wmul)+02h)+1
  6590  03AD  160A  118A  2644   	fcall	___wmul
              120A  118A         
  6591  03B2  1283               	bcf	status, 5	;RP0=0, select bank0
  6592  03B3  1303               	bcf	status, 6	;RP1=0, select bank0
  6593  03B4  0821               	movf	(1+(?___wmul)),w
  6594  03B5  01A9               	clrf	1+(?___lwdiv)+02h
  6595  03B6  07A9               	addwf	1+(?___lwdiv)+02h
  6596  03B7  0820               	movf	(0+(?___wmul)),w
  6597  03B8  01A8               	clrf	0+(?___lwdiv)+02h
  6598  03B9  07A8               	addwf	0+(?___lwdiv)+02h
  6599                           
  6600  03BA  120A  158A  21A2   	fcall	___lwdiv
              120A  118A         
  6601  03BF  1283               	bcf	status, 5	;RP0=0, select bank0
  6602  03C0  1303               	bcf	status, 6	;RP1=0, select bank0
  6603  03C1  0826               	movf	(0+(?___lwdiv)),w
  6604  03C2  3E28               	addlw	low(028h)
  6605  03C3  1683               	bsf	status, 5	;RP0=1, select bank1
  6606  03C4  1303               	bcf	status, 6	;RP1=0, select bank1
  6607  03C5  00B8               	movwf	(_distance)^080h	;volatile
  6608  03C6  1283               	bcf	status, 5	;RP0=0, select bank0
  6609  03C7  1303               	bcf	status, 6	;RP1=0, select bank0
  6610  03C8  0827               	movf	(1+(?___lwdiv)),w
  6611  03C9  1803               	skipnc
  6612  03CA  3E01               	addlw	1
  6613  03CB  3E00               	addlw	high(028h)
  6614  03CC  1683               	bsf	status, 5	;RP0=1, select bank1
  6615  03CD  1303               	bcf	status, 6	;RP1=0, select bank1
  6616  03CE  00B9               	movwf	1+(_distance)^080h	;volatile
  6617                           	line	54
  6618                           ;infrared.c: 54: }
  6619  03CF  2CBD               	goto	l3016
  6620                           	line	55
  6621                           	
  6622  03D0                     l3009:	
  6623                           	
  6624  03D0                     l11131:	
  6625                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  6626  03D0  3000               	movlw	high(04Dh)
  6627  03D1  1283               	bcf	status, 5	;RP0=0, select bank0
  6628  03D2  026E               	subwf	(_adcVal+1),w	;volatile
  6629  03D3  304D               	movlw	low(04Dh)
  6630  03D4  1903               	skipnz
  6631  03D5  026D               	subwf	(_adcVal),w	;volatile
  6632  03D6  1C03               	skipc
  6633  03D7  2BD9               	goto	u5021
  6634  03D8  2BDA               	goto	u5020
  6635  03D9                     u5021:
  6636  03D9  2C1D               	goto	l11137
  6637  03DA                     u5020:
  6638                           	
  6639  03DA                     l11133:	
  6640  03DA  3000               	movlw	high(06Bh)
  6641  03DB  026E               	subwf	(_adcVal+1),w	;volatile
  6642  03DC  306B               	movlw	low(06Bh)
  6643  03DD  1903               	skipnz
  6644  03DE  026D               	subwf	(_adcVal),w	;volatile
  6645  03DF  1803               	skipnc
  6646  03E0  2BE2               	goto	u5031
  6647  03E1  2BE3               	goto	u5030
  6648  03E2                     u5031:
  6649  03E2  2C1D               	goto	l11137
  6650  03E3                     u5030:
  6651                           	line	57
  6652                           	
  6653  03E3                     l11135:	
  6654                           ;infrared.c: 56: {
  6655                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  6656  03E3  301E               	movlw	low(01Eh)
  6657  03E4  00A6               	movwf	(?___lwdiv)
  6658  03E5  3000               	movlw	high(01Eh)
  6659  03E6  00A7               	movwf	((?___lwdiv))+1
  6660  03E7  096D               	comf	(_adcVal),w	;volatile
  6661  03E8  00AE               	movwf	(??_ADCconvert+0)+0
  6662  03E9  096E               	comf	(_adcVal+1),w	;volatile
  6663  03EA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6664  03EB  0AAE               	incf	(??_ADCconvert+0)+0,f
  6665  03EC  1903               	skipnz
  6666  03ED  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6667  03EE  082E               	movf	0+(??_ADCconvert+0)+0,w
  6668  03EF  3E6B               	addlw	low(06Bh)
  6669  03F0  00A0               	movwf	(?___wmul)
  6670  03F1  082F               	movf	1+(??_ADCconvert+0)+0,w
  6671  03F2  1803               	skipnc
  6672  03F3  3E01               	addlw	1
  6673  03F4  3E00               	addlw	high(06Bh)
  6674  03F5  00A1               	movwf	1+(?___wmul)
  6675  03F6  300A               	movlw	low(0Ah)
  6676  03F7  00A2               	movwf	0+(?___wmul)+02h
  6677  03F8  3000               	movlw	high(0Ah)
  6678  03F9  00A3               	movwf	(0+(?___wmul)+02h)+1
  6679  03FA  160A  118A  2644   	fcall	___wmul
              120A  118A         
  6680  03FF  1283               	bcf	status, 5	;RP0=0, select bank0
  6681  0400  1303               	bcf	status, 6	;RP1=0, select bank0
  6682  0401  0821               	movf	(1+(?___wmul)),w
  6683  0402  01A9               	clrf	1+(?___lwdiv)+02h
  6684  0403  07A9               	addwf	1+(?___lwdiv)+02h
  6685  0404  0820               	movf	(0+(?___wmul)),w
  6686  0405  01A8               	clrf	0+(?___lwdiv)+02h
  6687  0406  07A8               	addwf	0+(?___lwdiv)+02h
  6688                           
  6689  0407  120A  158A  21A2   	fcall	___lwdiv
              120A  118A         
  6690  040C  1283               	bcf	status, 5	;RP0=0, select bank0
  6691  040D  1303               	bcf	status, 6	;RP1=0, select bank0
  6692  040E  0826               	movf	(0+(?___lwdiv)),w
  6693  040F  3E32               	addlw	low(032h)
  6694  0410  1683               	bsf	status, 5	;RP0=1, select bank1
  6695  0411  1303               	bcf	status, 6	;RP1=0, select bank1
  6696  0412  00B8               	movwf	(_distance)^080h	;volatile
  6697  0413  1283               	bcf	status, 5	;RP0=0, select bank0
  6698  0414  1303               	bcf	status, 6	;RP1=0, select bank0
  6699  0415  0827               	movf	(1+(?___lwdiv)),w
  6700  0416  1803               	skipnc
  6701  0417  3E01               	addlw	1
  6702  0418  3E00               	addlw	high(032h)
  6703  0419  1683               	bsf	status, 5	;RP0=1, select bank1
  6704  041A  1303               	bcf	status, 6	;RP1=0, select bank1
  6705  041B  00B9               	movwf	1+(_distance)^080h	;volatile
  6706                           	line	58
  6707                           ;infrared.c: 58: }
  6708  041C  2CBD               	goto	l3016
  6709                           	line	59
  6710                           	
  6711  041D                     l3011:	
  6712                           	
  6713  041D                     l11137:	
  6714                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  6715  041D  3000               	movlw	high(038h)
  6716  041E  1283               	bcf	status, 5	;RP0=0, select bank0
  6717  041F  026E               	subwf	(_adcVal+1),w	;volatile
  6718  0420  3038               	movlw	low(038h)
  6719  0421  1903               	skipnz
  6720  0422  026D               	subwf	(_adcVal),w	;volatile
  6721  0423  1C03               	skipc
  6722  0424  2C26               	goto	u5041
  6723  0425  2C27               	goto	u5040
  6724  0426                     u5041:
  6725  0426  2C6A               	goto	l11143
  6726  0427                     u5040:
  6727                           	
  6728  0427                     l11139:	
  6729  0427  3000               	movlw	high(04Dh)
  6730  0428  026E               	subwf	(_adcVal+1),w	;volatile
  6731  0429  304D               	movlw	low(04Dh)
  6732  042A  1903               	skipnz
  6733  042B  026D               	subwf	(_adcVal),w	;volatile
  6734  042C  1803               	skipnc
  6735  042D  2C2F               	goto	u5051
  6736  042E  2C30               	goto	u5050
  6737  042F                     u5051:
  6738  042F  2C6A               	goto	l11143
  6739  0430                     u5050:
  6740                           	line	61
  6741                           	
  6742  0430                     l11141:	
  6743                           ;infrared.c: 60: {
  6744                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  6745  0430  3015               	movlw	low(015h)
  6746  0431  00A6               	movwf	(?___lwdiv)
  6747  0432  3000               	movlw	high(015h)
  6748  0433  00A7               	movwf	((?___lwdiv))+1
  6749  0434  096D               	comf	(_adcVal),w	;volatile
  6750  0435  00AE               	movwf	(??_ADCconvert+0)+0
  6751  0436  096E               	comf	(_adcVal+1),w	;volatile
  6752  0437  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6753  0438  0AAE               	incf	(??_ADCconvert+0)+0,f
  6754  0439  1903               	skipnz
  6755  043A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6756  043B  082E               	movf	0+(??_ADCconvert+0)+0,w
  6757  043C  3E4D               	addlw	low(04Dh)
  6758  043D  00A0               	movwf	(?___wmul)
  6759  043E  082F               	movf	1+(??_ADCconvert+0)+0,w
  6760  043F  1803               	skipnc
  6761  0440  3E01               	addlw	1
  6762  0441  3E00               	addlw	high(04Dh)
  6763  0442  00A1               	movwf	1+(?___wmul)
  6764  0443  300A               	movlw	low(0Ah)
  6765  0444  00A2               	movwf	0+(?___wmul)+02h
  6766  0445  3000               	movlw	high(0Ah)
  6767  0446  00A3               	movwf	(0+(?___wmul)+02h)+1
  6768  0447  160A  118A  2644   	fcall	___wmul
              120A  118A         
  6769  044C  1283               	bcf	status, 5	;RP0=0, select bank0
  6770  044D  1303               	bcf	status, 6	;RP1=0, select bank0
  6771  044E  0821               	movf	(1+(?___wmul)),w
  6772  044F  01A9               	clrf	1+(?___lwdiv)+02h
  6773  0450  07A9               	addwf	1+(?___lwdiv)+02h
  6774  0451  0820               	movf	(0+(?___wmul)),w
  6775  0452  01A8               	clrf	0+(?___lwdiv)+02h
  6776  0453  07A8               	addwf	0+(?___lwdiv)+02h
  6777                           
  6778  0454  120A  158A  21A2   	fcall	___lwdiv
              120A  118A         
  6779  0459  1283               	bcf	status, 5	;RP0=0, select bank0
  6780  045A  1303               	bcf	status, 6	;RP1=0, select bank0
  6781  045B  0826               	movf	(0+(?___lwdiv)),w
  6782  045C  3E3C               	addlw	low(03Ch)
  6783  045D  1683               	bsf	status, 5	;RP0=1, select bank1
  6784  045E  1303               	bcf	status, 6	;RP1=0, select bank1
  6785  045F  00B8               	movwf	(_distance)^080h	;volatile
  6786  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  6787  0461  1303               	bcf	status, 6	;RP1=0, select bank0
  6788  0462  0827               	movf	(1+(?___lwdiv)),w
  6789  0463  1803               	skipnc
  6790  0464  3E01               	addlw	1
  6791  0465  3E00               	addlw	high(03Ch)
  6792  0466  1683               	bsf	status, 5	;RP0=1, select bank1
  6793  0467  1303               	bcf	status, 6	;RP1=0, select bank1
  6794  0468  00B9               	movwf	1+(_distance)^080h	;volatile
  6795                           	line	62
  6796                           ;infrared.c: 62: }
  6797  0469  2CBD               	goto	l3016
  6798                           	line	63
  6799                           	
  6800  046A                     l3013:	
  6801                           	
  6802  046A                     l11143:	
  6803                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  6804  046A  3000               	movlw	high(02Bh)
  6805  046B  1283               	bcf	status, 5	;RP0=0, select bank0
  6806  046C  026E               	subwf	(_adcVal+1),w	;volatile
  6807  046D  302B               	movlw	low(02Bh)
  6808  046E  1903               	skipnz
  6809  046F  026D               	subwf	(_adcVal),w	;volatile
  6810  0470  1C03               	skipc
  6811  0471  2C73               	goto	u5061
  6812  0472  2C74               	goto	u5060
  6813  0473                     u5061:
  6814  0473  2CBD               	goto	l3016
  6815  0474                     u5060:
  6816                           	
  6817  0474                     l11145:	
  6818  0474  3000               	movlw	high(038h)
  6819  0475  026E               	subwf	(_adcVal+1),w	;volatile
  6820  0476  3038               	movlw	low(038h)
  6821  0477  1903               	skipnz
  6822  0478  026D               	subwf	(_adcVal),w	;volatile
  6823  0479  1803               	skipnc
  6824  047A  2C7C               	goto	u5071
  6825  047B  2C7D               	goto	u5070
  6826  047C                     u5071:
  6827  047C  2CBD               	goto	l3016
  6828  047D                     u5070:
  6829                           	line	65
  6830                           	
  6831  047D                     l11147:	
  6832                           ;infrared.c: 64: {
  6833                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  6834  047D  300D               	movlw	low(0Dh)
  6835  047E  00A6               	movwf	(?___lwdiv)
  6836  047F  3000               	movlw	high(0Dh)
  6837  0480  00A7               	movwf	((?___lwdiv))+1
  6838  0481  096D               	comf	(_adcVal),w	;volatile
  6839  0482  00AE               	movwf	(??_ADCconvert+0)+0
  6840  0483  096E               	comf	(_adcVal+1),w	;volatile
  6841  0484  00AF               	movwf	((??_ADCconvert+0)+0+1)
  6842  0485  0AAE               	incf	(??_ADCconvert+0)+0,f
  6843  0486  1903               	skipnz
  6844  0487  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  6845  0488  082E               	movf	0+(??_ADCconvert+0)+0,w
  6846  0489  3E38               	addlw	low(038h)
  6847  048A  00A0               	movwf	(?___wmul)
  6848  048B  082F               	movf	1+(??_ADCconvert+0)+0,w
  6849  048C  1803               	skipnc
  6850  048D  3E01               	addlw	1
  6851  048E  3E00               	addlw	high(038h)
  6852  048F  00A1               	movwf	1+(?___wmul)
  6853  0490  300A               	movlw	low(0Ah)
  6854  0491  00A2               	movwf	0+(?___wmul)+02h
  6855  0492  3000               	movlw	high(0Ah)
  6856  0493  00A3               	movwf	(0+(?___wmul)+02h)+1
  6857  0494  160A  118A  2644   	fcall	___wmul
              120A  118A         
  6858  0499  1283               	bcf	status, 5	;RP0=0, select bank0
  6859  049A  1303               	bcf	status, 6	;RP1=0, select bank0
  6860  049B  0821               	movf	(1+(?___wmul)),w
  6861  049C  01A9               	clrf	1+(?___lwdiv)+02h
  6862  049D  07A9               	addwf	1+(?___lwdiv)+02h
  6863  049E  0820               	movf	(0+(?___wmul)),w
  6864  049F  01A8               	clrf	0+(?___lwdiv)+02h
  6865  04A0  07A8               	addwf	0+(?___lwdiv)+02h
  6866                           
  6867  04A1  120A  158A  21A2   	fcall	___lwdiv
              120A  118A         
  6868  04A6  1283               	bcf	status, 5	;RP0=0, select bank0
  6869  04A7  1303               	bcf	status, 6	;RP1=0, select bank0
  6870  04A8  0826               	movf	(0+(?___lwdiv)),w
  6871  04A9  3E46               	addlw	low(046h)
  6872  04AA  1683               	bsf	status, 5	;RP0=1, select bank1
  6873  04AB  1303               	bcf	status, 6	;RP1=0, select bank1
  6874  04AC  00B8               	movwf	(_distance)^080h	;volatile
  6875  04AD  1283               	bcf	status, 5	;RP0=0, select bank0
  6876  04AE  1303               	bcf	status, 6	;RP1=0, select bank0
  6877  04AF  0827               	movf	(1+(?___lwdiv)),w
  6878  04B0  1803               	skipnc
  6879  04B1  3E01               	addlw	1
  6880  04B2  3E00               	addlw	high(046h)
  6881  04B3  1683               	bsf	status, 5	;RP0=1, select bank1
  6882  04B4  1303               	bcf	status, 6	;RP1=0, select bank1
  6883  04B5  00B9               	movwf	1+(_distance)^080h	;volatile
  6884  04B6  2CBD               	goto	l3016
  6885                           	line	66
  6886                           	
  6887  04B7                     l3015:	
  6888  04B7  2CBD               	goto	l3016
  6889                           	line	67
  6890                           	
  6891  04B8                     l3014:	
  6892  04B8  2CBD               	goto	l3016
  6893                           	
  6894  04B9                     l3012:	
  6895  04B9  2CBD               	goto	l3016
  6896                           	
  6897  04BA                     l3010:	
  6898  04BA  2CBD               	goto	l3016
  6899                           	
  6900  04BB                     l3008:	
  6901  04BB  2CBD               	goto	l3016
  6902                           	
  6903  04BC                     l3006:	
  6904  04BC  2CBD               	goto	l3016
  6905                           	
  6906  04BD                     l3004:	
  6907                           	
  6908  04BD                     l3016:	
  6909  04BD  0008               	return
  6910                           	opt stack 0
  6911                           GLOBAL	__end_of_ADCconvert
  6912  04BE                     	__end_of_ADCconvert:
  6913 ;; =============== function _ADCconvert ends ============
  6914                           
  6915                           	signat	_ADCconvert,88
  6916                           	global	_robotTurn
  6917                           psect	text1021,local,class=CODE,delta=2
  6918                           global __ptext1021
  6919  0CA7                     __ptext1021:
  6920                           
  6921 ;; *************** function _robotTurn *****************
  6922 ;; Defined at:
  6923 ;;		line 91 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  distance        2    2[BANK0 ] int 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;		None               void
  6930 ;; Registers used:
  6931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6937 ;;      Params:         0       2       0       0       0
  6938 ;;      Locals:         0       0       0       0       0
  6939 ;;      Temps:          0       1       0       0       0
  6940 ;;      Totals:         0       3       0       0       0
  6941 ;;Total ram usage:        3 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    4
  6944 ;; This function calls:
  6945 ;;		_ser_putch
  6946 ;; This function is called by:
  6947 ;;		_main
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           psect	text1021
  6951                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  6952                           	line	91
  6953                           	global	__size_of_robotTurn
  6954  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  6955                           	
  6956  0CA7                     _robotTurn:	
  6957                           	opt	stack 3
  6958                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6959                           	line	94
  6960                           	
  6961  0CA7                     l11097:	
  6962                           ;robot.c: 94: turnlowByte = (unsigned char) (distance) ;
  6963  0CA7  1283               	bcf	status, 5	;RP0=0, select bank0
  6964  0CA8  1303               	bcf	status, 6	;RP1=0, select bank0
  6965  0CA9  0822               	movf	(robotTurn@distance),w
  6966  0CAA  00A4               	movwf	(??_robotTurn+0)+0
  6967  0CAB  0824               	movf	(??_robotTurn+0)+0,w
  6968  0CAC  1683               	bsf	status, 5	;RP0=1, select bank1
  6969  0CAD  1303               	bcf	status, 6	;RP1=0, select bank1
  6970  0CAE  00D3               	movwf	(_turnlowByte)^080h
  6971                           	line	95
  6972                           	
  6973  0CAF                     l11099:	
  6974                           ;robot.c: 95: turnhighByte = (unsigned char) (distance >> 8);
  6975  0CAF  1283               	bcf	status, 5	;RP0=0, select bank0
  6976  0CB0  1303               	bcf	status, 6	;RP1=0, select bank0
  6977  0CB1  0823               	movf	(robotTurn@distance+1),w
  6978  0CB2  00A4               	movwf	(??_robotTurn+0)+0
  6979  0CB3  0824               	movf	(??_robotTurn+0)+0,w
  6980  0CB4  1683               	bsf	status, 5	;RP0=1, select bank1
  6981  0CB5  1303               	bcf	status, 6	;RP1=0, select bank1
  6982  0CB6  00D2               	movwf	(_turnhighByte)^080h
  6983                           	line	96
  6984                           	
  6985  0CB7                     l11101:	
  6986                           ;robot.c: 96: if (distance >= 0)
  6987  0CB7  1283               	bcf	status, 5	;RP0=0, select bank0
  6988  0CB8  1303               	bcf	status, 6	;RP1=0, select bank0
  6989  0CB9  1BA3               	btfsc	(robotTurn@distance+1),7
  6990  0CBA  2CBC               	goto	u4931
  6991  0CBB  2CBD               	goto	u4930
  6992  0CBC                     u4931:
  6993  0CBC  2CDC               	goto	l11105
  6994  0CBD                     u4930:
  6995                           	line	98
  6996                           	
  6997  0CBD                     l11103:	
  6998                           ;robot.c: 97: {
  6999                           ;robot.c: 98: ser_putch(137);
  7000  0CBD  3089               	movlw	(089h)
  7001  0CBE  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7002                           	line	100
  7003                           ;robot.c: 100: ser_putch(0);
  7004  0CC3  3000               	movlw	(0)
  7005  0CC4  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7006                           	line	102
  7007                           ;robot.c: 102: ser_putch(50);
  7008  0CC9  3032               	movlw	(032h)
  7009  0CCA  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7010                           	line	104
  7011                           ;robot.c: 104: ser_putch(0);
  7012  0CCF  3000               	movlw	(0)
  7013  0CD0  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7014                           	line	106
  7015                           ;robot.c: 106: ser_putch(1);
  7016  0CD5  3001               	movlw	(01h)
  7017  0CD6  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7018                           	line	107
  7019                           ;robot.c: 107: }
  7020  0CDB  2CFA               	goto	l6033
  7021                           	line	108
  7022                           	
  7023  0CDC                     l6032:	
  7024                           	line	110
  7025                           	
  7026  0CDC                     l11105:	
  7027                           ;robot.c: 108: else
  7028                           ;robot.c: 109: {
  7029                           ;robot.c: 110: ser_putch(137);
  7030  0CDC  3089               	movlw	(089h)
  7031  0CDD  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7032                           	line	112
  7033                           ;robot.c: 112: ser_putch(0);
  7034  0CE2  3000               	movlw	(0)
  7035  0CE3  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7036                           	line	114
  7037                           ;robot.c: 114: ser_putch(50);
  7038  0CE8  3032               	movlw	(032h)
  7039  0CE9  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7040                           	line	116
  7041                           ;robot.c: 116: ser_putch(255);
  7042  0CEE  30FF               	movlw	(0FFh)
  7043  0CEF  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7044                           	line	118
  7045                           ;robot.c: 118: ser_putch(255);
  7046  0CF4  30FF               	movlw	(0FFh)
  7047  0CF5  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7048                           	line	119
  7049                           	
  7050  0CFA                     l6033:	
  7051                           	line	120
  7052                           ;robot.c: 119: }
  7053                           ;robot.c: 120: ser_putch(157);
  7054  0CFA  309D               	movlw	(09Dh)
  7055  0CFB  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7056                           	line	122
  7057                           ;robot.c: 122: ser_putch(turnhighByte);
  7058  0D00  1683               	bsf	status, 5	;RP0=1, select bank1
  7059  0D01  1303               	bcf	status, 6	;RP1=0, select bank1
  7060  0D02  0852               	movf	(_turnhighByte)^080h,w
  7061  0D03  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7062                           	line	124
  7063                           ;robot.c: 124: ser_putch(turnlowByte);
  7064  0D08  1683               	bsf	status, 5	;RP0=1, select bank1
  7065  0D09  1303               	bcf	status, 6	;RP1=0, select bank1
  7066  0D0A  0853               	movf	(_turnlowByte)^080h,w
  7067  0D0B  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7068                           	line	126
  7069                           ;robot.c: 126: ser_putch(137);
  7070  0D10  3089               	movlw	(089h)
  7071  0D11  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7072                           	line	128
  7073                           ;robot.c: 128: ser_putch(0);
  7074  0D16  3000               	movlw	(0)
  7075  0D17  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7076                           	line	130
  7077                           ;robot.c: 130: ser_putch(0);
  7078  0D1C  3000               	movlw	(0)
  7079  0D1D  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7080                           	line	132
  7081                           ;robot.c: 132: ser_putch(0);
  7082  0D22  3000               	movlw	(0)
  7083  0D23  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7084                           	line	134
  7085                           ;robot.c: 134: ser_putch(0);
  7086  0D28  3000               	movlw	(0)
  7087  0D29  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7088                           	line	135
  7089                           	
  7090  0D2E                     l6034:	
  7091  0D2E  0008               	return
  7092                           	opt stack 0
  7093                           GLOBAL	__end_of_robotTurn
  7094  0D2F                     	__end_of_robotTurn:
  7095 ;; =============== function _robotTurn ends ============
  7096                           
  7097                           	signat	_robotTurn,4216
  7098                           	global	_rotate
  7099                           psect	text1022,local,class=CODE,delta=2
  7100                           global __ptext1022
  7101  09F2                     __ptext1022:
  7102                           
  7103 ;; *************** function _rotate *****************
  7104 ;; Defined at:
  7105 ;;		line 48 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  numsteps        2    3[BANK0 ] unsigned int 
  7108 ;;  direction       1    5[BANK0 ] unsigned char 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  i               2    8[BANK0 ] unsigned int 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;		None               void
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0, pclath, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7120 ;;      Params:         0       3       0       0       0
  7121 ;;      Locals:         0       2       0       0       0
  7122 ;;      Temps:          0       2       0       0       0
  7123 ;;      Totals:         0       7       0       0       0
  7124 ;;Total ram usage:        7 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:    4
  7127 ;; This function calls:
  7128 ;;		_spi_transfer
  7129 ;; This function is called by:
  7130 ;;		_calibrateIR
  7131 ;;		_scan360
  7132 ;;		_main
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           psect	text1022
  7136                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
  7137                           	line	48
  7138                           	global	__size_of_rotate
  7139  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  7140                           	
  7141  09F2                     _rotate:	
  7142                           	opt	stack 3
  7143                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  7144                           	line	50
  7145                           	
  7146  09F2                     l11069:	
  7147                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  7148  09F2  1283               	bcf	status, 5	;RP0=0, select bank0
  7149  09F3  1303               	bcf	status, 6	;RP1=0, select bank0
  7150  09F4  1407               	bsf	(56/8),(56)&7
  7151  09F5  1487               	bsf	(57/8),(57)&7
  7152                           	line	51
  7153                           	
  7154  09F6                     l11071:	
  7155                           ;steppermotor.c: 51: if (direction == 0)
  7156  09F6  08A5               	movf	(rotate@direction),f
  7157  09F7  1D03               	skipz
  7158  09F8  29FA               	goto	u4911
  7159  09F9  29FB               	goto	u4910
  7160  09FA                     u4911:
  7161  09FA  2A02               	goto	l11075
  7162  09FB                     u4910:
  7163                           	line	52
  7164                           	
  7165  09FB                     l11073:	
  7166                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  7167  09FB  300F               	movlw	(0Fh)
  7168  09FC  160A  118A  2533   	fcall	_spi_transfer
              120A  158A         
  7169  0A01  2A09               	goto	l11077
  7170                           	line	53
  7171                           	
  7172  0A02                     l3717:	
  7173                           	line	54
  7174                           	
  7175  0A02                     l11075:	
  7176                           ;steppermotor.c: 53: else
  7177                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  7178  0A02  300D               	movlw	(0Dh)
  7179  0A03  160A  118A  2533   	fcall	_spi_transfer
              120A  158A         
  7180  0A08  2A09               	goto	l11077
  7181                           	
  7182  0A09                     l3718:	
  7183                           	line	55
  7184                           	
  7185  0A09                     l11077:	
  7186                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  7187  0A09  1283               	bcf	status, 5	;RP0=0, select bank0
  7188  0A0A  1303               	bcf	status, 6	;RP1=0, select bank0
  7189  0A0B  1007               	bcf	(56/8),(56)&7
  7190                           	
  7191  0A0C                     l11079:	
  7192  0A0C  1087               	bcf	(57/8),(57)&7
  7193                           	line	56
  7194                           	
  7195  0A0D                     l11081:	
  7196                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  7197  0A0D  01A8               	clrf	(rotate@i)
  7198  0A0E  01A9               	clrf	(rotate@i+1)
  7199  0A0F  2A26               	goto	l3719
  7200                           	line	57
  7201                           	
  7202  0A10                     l3720:	
  7203                           	line	58
  7204                           ;steppermotor.c: 57: {
  7205                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  7206  0A10  1507               	bsf	(58/8),(58)&7
  7207  0A11  0000               	nop
  7208  0A12  1283               	bcf	status, 5	;RP0=0, select bank0
  7209  0A13  1303               	bcf	status, 6	;RP1=0, select bank0
  7210  0A14  1107               	bcf	(58/8),(58)&7
  7211                           	line	59
  7212                           	
  7213  0A15                     l11083:	
  7214                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  7215                           	opt asmopt_off
  7216  0A15  3062               movlw	98
  7217  0A16  00A7               movwf	((??_rotate+0)+0+1),f
  7218  0A17  3065               	movlw	101
  7219  0A18  00A6               movwf	((??_rotate+0)+0),f
  7220  0A19                     u5647:
  7221  0A19  0BA6               	decfsz	((??_rotate+0)+0),f
  7222  0A1A  2A19               	goto	u5647
  7223  0A1B  0BA7               	decfsz	((??_rotate+0)+0+1),f
  7224  0A1C  2A19               	goto	u5647
  7225  0A1D  2A1E               	nop2
  7226                           opt asmopt_on
  7227                           
  7228                           	line	56
  7229  0A1E  3001               	movlw	low(01h)
  7230  0A1F  1283               	bcf	status, 5	;RP0=0, select bank0
  7231  0A20  1303               	bcf	status, 6	;RP1=0, select bank0
  7232  0A21  07A8               	addwf	(rotate@i),f
  7233  0A22  1803               	skipnc
  7234  0A23  0AA9               	incf	(rotate@i+1),f
  7235  0A24  3000               	movlw	high(01h)
  7236  0A25  07A9               	addwf	(rotate@i+1),f
  7237                           	
  7238  0A26                     l3719:	
  7239  0A26  0824               	movf	(rotate@numsteps+1),w
  7240  0A27  0229               	subwf	(rotate@i+1),w
  7241  0A28  1D03               	skipz
  7242  0A29  2A2C               	goto	u4925
  7243  0A2A  0823               	movf	(rotate@numsteps),w
  7244  0A2B  0228               	subwf	(rotate@i),w
  7245  0A2C                     u4925:
  7246  0A2C  1C03               	skipc
  7247  0A2D  2A2F               	goto	u4921
  7248  0A2E  2A30               	goto	u4920
  7249  0A2F                     u4921:
  7250  0A2F  2A10               	goto	l3720
  7251  0A30                     u4920:
  7252                           	
  7253  0A30                     l3721:	
  7254                           	line	61
  7255                           ;steppermotor.c: 60: }
  7256                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  7257  0A30  1407               	bsf	(56/8),(56)&7
  7258  0A31  1487               	bsf	(57/8),(57)&7
  7259                           	line	62
  7260                           	
  7261  0A32                     l11085:	
  7262                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  7263  0A32  3000               	movlw	(0)
  7264  0A33  160A  118A  2533   	fcall	_spi_transfer
              120A  158A         
  7265                           	line	63
  7266                           	
  7267  0A38                     l11087:	
  7268                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  7269  0A38  1283               	bcf	status, 5	;RP0=0, select bank0
  7270  0A39  1303               	bcf	status, 6	;RP1=0, select bank0
  7271  0A3A  1007               	bcf	(56/8),(56)&7
  7272                           	
  7273  0A3B                     l11089:	
  7274  0A3B  1087               	bcf	(57/8),(57)&7
  7275                           	line	64
  7276                           	
  7277  0A3C                     l11091:	
  7278                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  7279  0A3C  1507               	bsf	(58/8),(58)&7
  7280                           	
  7281  0A3D                     l11093:	
  7282  0A3D  0000               	nop
  7283                           	
  7284  0A3E                     l11095:	
  7285  0A3E  1283               	bcf	status, 5	;RP0=0, select bank0
  7286  0A3F  1303               	bcf	status, 6	;RP1=0, select bank0
  7287  0A40  1107               	bcf	(58/8),(58)&7
  7288                           	line	65
  7289                           	
  7290  0A41                     l3722:	
  7291  0A41  0008               	return
  7292                           	opt stack 0
  7293                           GLOBAL	__end_of_rotate
  7294  0A42                     	__end_of_rotate:
  7295 ;; =============== function _rotate ends ============
  7296                           
  7297                           	signat	_rotate,8312
  7298                           	global	_robo_init
  7299                           psect	text1023,local,class=CODE,delta=2
  7300                           global __ptext1023
  7301  08B6                     __ptext1023:
  7302                           
  7303 ;; *************** function _robo_init *****************
  7304 ;; Defined at:
  7305 ;;		line 10 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;		None
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;		None
  7310 ;; Return value:  Size  Location     Type
  7311 ;;		None               void
  7312 ;; Registers used:
  7313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7319 ;;      Params:         0       0       0       0       0
  7320 ;;      Locals:         0       0       0       0       0
  7321 ;;      Temps:          0       0       0       0       0
  7322 ;;      Totals:         0       0       0       0       0
  7323 ;;Total ram usage:        0 bytes
  7324 ;; Hardware stack levels used:    1
  7325 ;; Hardware stack levels required when called:    4
  7326 ;; This function calls:
  7327 ;;		_ser_putch
  7328 ;; This function is called by:
  7329 ;;		_init
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           psect	text1023
  7333                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\robot.c"
  7334                           	line	10
  7335                           	global	__size_of_robo_init
  7336  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  7337                           	
  7338  08B6                     _robo_init:	
  7339                           	opt	stack 2
  7340                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7341                           	line	11
  7342                           	
  7343  08B6                     l11067:	
  7344                           ;robot.c: 11: ser_putch(128);
  7345  08B6  3080               	movlw	(080h)
  7346  08B7  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7347                           	line	12
  7348                           ;robot.c: 12: ser_putch(132);
  7349  08BC  3084               	movlw	(084h)
  7350  08BD  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7351                           	line	13
  7352                           ;robot.c: 13: ser_putch(150);
  7353  08C2  3096               	movlw	(096h)
  7354  08C3  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7355                           	line	14
  7356                           ;robot.c: 14: ser_putch(0);
  7357  08C8  3000               	movlw	(0)
  7358  08C9  160A  118A  25A0   	fcall	_ser_putch
              120A  158A         
  7359                           	line	15
  7360                           	
  7361  08CE                     l6017:	
  7362  08CE  0008               	return
  7363                           	opt stack 0
  7364                           GLOBAL	__end_of_robo_init
  7365  08CF                     	__end_of_robo_init:
  7366 ;; =============== function _robo_init ends ============
  7367                           
  7368                           	signat	_robo_init,88
  7369                           	global	_lcd_write_data
  7370                           psect	text1024,local,class=CODE,delta=2
  7371                           global __ptext1024
  7372  150D                     __ptext1024:
  7373                           
  7374 ;; *************** function _lcd_write_data *****************
  7375 ;; Defined at:
  7376 ;;		line 30 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  databyte        1    wreg     unsigned char 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  databyte        1    2[BANK0 ] unsigned char 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;		None               void
  7383 ;; Registers used:
  7384 ;;		wreg
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7390 ;;      Params:         0       0       0       0       0
  7391 ;;      Locals:         0       1       0       0       0
  7392 ;;      Temps:          0       2       0       0       0
  7393 ;;      Totals:         0       3       0       0       0
  7394 ;;Total ram usage:        3 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    3
  7397 ;; This function calls:
  7398 ;;		Nothing
  7399 ;; This function is called by:
  7400 ;;		_lcd_write_string
  7401 ;;		_lcd_write_2_digit_bcd
  7402 ;;		_lcd_write_3_digit_bcd
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           psect	text1024
  7406                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  7407                           	line	30
  7408                           	global	__size_of_lcd_write_data
  7409  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  7410                           	
  7411  150D                     _lcd_write_data:	
  7412                           	opt	stack 1
  7413                           ; Regs used in _lcd_write_data: [wreg]
  7414                           ;lcd_write_data@databyte stored from wreg
  7415  150D  1283               	bcf	status, 5	;RP0=0, select bank0
  7416  150E  1303               	bcf	status, 6	;RP1=0, select bank0
  7417  150F  00A2               	movwf	(lcd_write_data@databyte)
  7418                           	line	31
  7419                           	
  7420  1510                     l11059:	
  7421                           ;lcd.c: 31: RE2 = 0;
  7422  1510  1109               	bcf	(74/8),(74)&7
  7423                           	line	32
  7424                           ;lcd.c: 32: RE1 = 0;
  7425  1511  1089               	bcf	(73/8),(73)&7
  7426                           	line	33
  7427                           ;lcd.c: 33: RE0 = 1;
  7428  1512  1409               	bsf	(72/8),(72)&7
  7429                           	line	34
  7430                           	
  7431  1513                     l11061:	
  7432                           ;lcd.c: 34: PORTD = databyte;
  7433  1513  0822               	movf	(lcd_write_data@databyte),w
  7434  1514  0088               	movwf	(8)	;volatile
  7435                           	line	35
  7436                           	
  7437  1515                     l11063:	
  7438                           ;lcd.c: 35: RE2 = 1;
  7439  1515  1509               	bsf	(74/8),(74)&7
  7440                           	line	36
  7441                           	
  7442  1516                     l11065:	
  7443                           ;lcd.c: 36: RE2 = 0;
  7444  1516  1109               	bcf	(74/8),(74)&7
  7445                           	line	37
  7446                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  7447                           	opt asmopt_off
  7448  1517  3007               movlw	7
  7449  1518  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  7450  1519  307D               	movlw	125
  7451  151A  00A0               movwf	((??_lcd_write_data+0)+0),f
  7452  151B                     u5657:
  7453  151B  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  7454  151C  2D1B               	goto	u5657
  7455  151D  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  7456  151E  2D1B               	goto	u5657
  7457                           opt asmopt_on
  7458                           
  7459                           	line	38
  7460                           	
  7461  151F                     l1402:	
  7462  151F  0008               	return
  7463                           	opt stack 0
  7464                           GLOBAL	__end_of_lcd_write_data
  7465  1520                     	__end_of_lcd_write_data:
  7466 ;; =============== function _lcd_write_data ends ============
  7467                           
  7468                           	signat	_lcd_write_data,4216
  7469                           	global	_lcd_write_control
  7470                           psect	text1025,local,class=CODE,delta=2
  7471                           global __ptext1025
  7472  1547                     __ptext1025:
  7473                           
  7474 ;; *************** function _lcd_write_control *****************
  7475 ;; Defined at:
  7476 ;;		line 18 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  databyte        1    wreg     unsigned char 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;  databyte        1    2[BANK0 ] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;		None               void
  7483 ;; Registers used:
  7484 ;;		wreg
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7490 ;;      Params:         0       0       0       0       0
  7491 ;;      Locals:         0       1       0       0       0
  7492 ;;      Temps:          0       2       0       0       0
  7493 ;;      Totals:         0       3       0       0       0
  7494 ;;Total ram usage:        3 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    3
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_lcd_set_cursor
  7501 ;;		_lcd_init
  7502 ;;		_UpdateDisplay
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           psect	text1025
  7506                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\lcd.c"
  7507                           	line	18
  7508                           	global	__size_of_lcd_write_control
  7509  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  7510                           	
  7511  1547                     _lcd_write_control:	
  7512                           	opt	stack 1
  7513                           ; Regs used in _lcd_write_control: [wreg]
  7514                           ;lcd_write_control@databyte stored from wreg
  7515  1547  1283               	bcf	status, 5	;RP0=0, select bank0
  7516  1548  1303               	bcf	status, 6	;RP1=0, select bank0
  7517  1549  00A2               	movwf	(lcd_write_control@databyte)
  7518                           	line	19
  7519                           	
  7520  154A                     l11051:	
  7521                           ;lcd.c: 19: RE2 = 0;
  7522  154A  1109               	bcf	(74/8),(74)&7
  7523                           	line	20
  7524                           ;lcd.c: 20: RE1 = 0;
  7525  154B  1089               	bcf	(73/8),(73)&7
  7526                           	line	21
  7527                           ;lcd.c: 21: RE0 = 0;
  7528  154C  1009               	bcf	(72/8),(72)&7
  7529                           	line	22
  7530                           	
  7531  154D                     l11053:	
  7532                           ;lcd.c: 22: PORTD = databyte;
  7533  154D  0822               	movf	(lcd_write_control@databyte),w
  7534  154E  0088               	movwf	(8)	;volatile
  7535                           	line	23
  7536                           	
  7537  154F                     l11055:	
  7538                           ;lcd.c: 23: RE2 = 1;
  7539  154F  1509               	bsf	(74/8),(74)&7
  7540                           	line	24
  7541                           	
  7542  1550                     l11057:	
  7543                           ;lcd.c: 24: RE2 = 0;
  7544  1550  1109               	bcf	(74/8),(74)&7
  7545                           	line	25
  7546                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  7547                           	opt asmopt_off
  7548  1551  300D               movlw	13
  7549  1552  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  7550  1553  30FB               	movlw	251
  7551  1554  00A0               movwf	((??_lcd_write_control+0)+0),f
  7552  1555                     u5667:
  7553  1555  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  7554  1556  2D55               	goto	u5667
  7555  1557  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  7556  1558  2D55               	goto	u5667
  7557  1559  2D5A               	nop2
  7558                           opt asmopt_on
  7559                           
  7560                           	line	26
  7561                           	
  7562  155A                     l1399:	
  7563  155A  0008               	return
  7564                           	opt stack 0
  7565                           GLOBAL	__end_of_lcd_write_control
  7566  155B                     	__end_of_lcd_write_control:
  7567 ;; =============== function _lcd_write_control ends ============
  7568                           
  7569                           	signat	_lcd_write_control,4216
  7570                           	global	_init_adc
  7571                           psect	text1026,local,class=CODE,delta=2
  7572                           global __ptext1026
  7573  155B                     __ptext1026:
  7574                           
  7575 ;; *************** function _init_adc *****************
  7576 ;; Defined at:
  7577 ;;		line 46 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;		None
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;		None               void
  7584 ;; Registers used:
  7585 ;;		wreg, status,2
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7591 ;;      Params:         0       0       0       0       0
  7592 ;;      Locals:         0       0       0       0       0
  7593 ;;      Temps:          0       1       0       0       0
  7594 ;;      Totals:         0       1       0       0       0
  7595 ;;Total ram usage:        1 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; Hardware stack levels required when called:    3
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_init
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           psect	text1026
  7605                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  7606                           	line	46
  7607                           	global	__size_of_init_adc
  7608  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  7609                           	
  7610  155B                     _init_adc:	
  7611                           	opt	stack 3
  7612                           ; Regs used in _init_adc: [wreg+status,2]
  7613                           	line	48
  7614                           	
  7615  155B                     l11041:	
  7616                           ;adc.c: 48: PORTA = 0;
  7617  155B  1283               	bcf	status, 5	;RP0=0, select bank0
  7618  155C  1303               	bcf	status, 6	;RP1=0, select bank0
  7619  155D  0185               	clrf	(5)	;volatile
  7620                           	line	49
  7621                           	
  7622  155E                     l11043:	
  7623                           ;adc.c: 49: TRISA = 0b00111111;
  7624  155E  303F               	movlw	(03Fh)
  7625  155F  1683               	bsf	status, 5	;RP0=1, select bank1
  7626  1560  1303               	bcf	status, 6	;RP1=0, select bank1
  7627  1561  0085               	movwf	(133)^080h	;volatile
  7628                           	line	52
  7629                           	
  7630  1562                     l11045:	
  7631                           ;adc.c: 52: ADCON0 = 0b10100001;
  7632  1562  30A1               	movlw	(0A1h)
  7633  1563  1283               	bcf	status, 5	;RP0=0, select bank0
  7634  1564  1303               	bcf	status, 6	;RP1=0, select bank0
  7635  1565  009F               	movwf	(31)	;volatile
  7636                           	line	53
  7637                           	
  7638  1566                     l11047:	
  7639                           ;adc.c: 53: ADCON1 = 0b0000010;
  7640  1566  3002               	movlw	(02h)
  7641  1567  1683               	bsf	status, 5	;RP0=1, select bank1
  7642  1568  1303               	bcf	status, 6	;RP1=0, select bank1
  7643  1569  009F               	movwf	(159)^080h	;volatile
  7644                           	line	55
  7645                           	
  7646  156A                     l11049:	
  7647                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  7648                           	opt asmopt_off
  7649  156A  3053               movlw	83
  7650  156B  1283               	bcf	status, 5	;RP0=0, select bank0
  7651  156C  1303               	bcf	status, 6	;RP1=0, select bank0
  7652  156D  00A0               movwf	(??_init_adc+0)+0,f
  7653  156E                     u5677:
  7654  156E  0BA0               decfsz	(??_init_adc+0)+0,f
  7655  156F  2D6E               	goto	u5677
  7656                           opt asmopt_on
  7657                           
  7658                           	line	57
  7659                           	
  7660  1570                     l700:	
  7661  1570  0008               	return
  7662                           	opt stack 0
  7663                           GLOBAL	__end_of_init_adc
  7664  1571                     	__end_of_init_adc:
  7665 ;; =============== function _init_adc ends ============
  7666                           
  7667                           	signat	_init_adc,88
  7668                           	global	_adc_read_channel
  7669                           psect	text1027,local,class=CODE,delta=2
  7670                           global __ptext1027
  7671  1781                     __ptext1027:
  7672                           
  7673 ;; *************** function _adc_read_channel *****************
  7674 ;; Defined at:
  7675 ;;		line 5 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  channel         1    wreg     unsigned char 
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;  channel         1    7[BANK0 ] unsigned char 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      unsigned char 
  7682 ;; Registers used:
  7683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7689 ;;      Params:         0       0       0       0       0
  7690 ;;      Locals:         0       1       0       0       0
  7691 ;;      Temps:          0       1       0       0       0
  7692 ;;      Totals:         0       2       0       0       0
  7693 ;;Total ram usage:        2 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    4
  7696 ;; This function calls:
  7697 ;;		_adc_read
  7698 ;; This function is called by:
  7699 ;;		_readDistance
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           psect	text1027
  7703                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
  7704                           	line	5
  7705                           	global	__size_of_adc_read_channel
  7706  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  7707                           	
  7708  1781                     _adc_read_channel:	
  7709                           	opt	stack 0
  7710                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7711                           ;adc_read_channel@channel stored from wreg
  7712  1781  1283               	bcf	status, 5	;RP0=0, select bank0
  7713  1782  1303               	bcf	status, 6	;RP1=0, select bank0
  7714  1783  00A7               	movwf	(adc_read_channel@channel)
  7715                           	line	6
  7716                           	
  7717  1784                     l11025:	
  7718                           ;adc.c: 6: switch(channel)
  7719  1784  2F9D               	goto	l11033
  7720                           	line	8
  7721                           ;adc.c: 7: {
  7722                           ;adc.c: 8: case 0:
  7723                           	
  7724  1785                     l690:	
  7725                           	line	9
  7726                           ;adc.c: 9: CHS0 = 0;
  7727  1785  119F               	bcf	(251/8),(251)&7
  7728                           	line	10
  7729                           ;adc.c: 10: CHS1 = 0;
  7730  1786  121F               	bcf	(252/8),(252)&7
  7731                           	line	11
  7732                           ;adc.c: 11: CHS2 = 0;
  7733  1787  129F               	bcf	(253/8),(253)&7
  7734                           	line	12
  7735                           ;adc.c: 12: break;
  7736  1788  2FAE               	goto	l11035
  7737                           	line	13
  7738                           ;adc.c: 13: case 1:
  7739                           	
  7740  1789                     l692:	
  7741                           	line	14
  7742                           ;adc.c: 14: CHS0 = 1;
  7743  1789  159F               	bsf	(251/8),(251)&7
  7744                           	line	15
  7745                           ;adc.c: 15: CHS1 = 0;
  7746  178A  121F               	bcf	(252/8),(252)&7
  7747                           	line	16
  7748                           ;adc.c: 16: CHS2 = 0;
  7749  178B  129F               	bcf	(253/8),(253)&7
  7750                           	line	17
  7751                           ;adc.c: 17: break;
  7752  178C  2FAE               	goto	l11035
  7753                           	line	18
  7754                           ;adc.c: 18: case 2:
  7755                           	
  7756  178D                     l693:	
  7757                           	line	19
  7758                           ;adc.c: 19: CHS0 = 0;
  7759  178D  119F               	bcf	(251/8),(251)&7
  7760                           	line	20
  7761                           ;adc.c: 20: CHS1 = 1;
  7762  178E  161F               	bsf	(252/8),(252)&7
  7763                           	line	21
  7764                           ;adc.c: 21: CHS2 = 0;
  7765  178F  129F               	bcf	(253/8),(253)&7
  7766                           	line	22
  7767                           ;adc.c: 22: break;
  7768  1790  2FAE               	goto	l11035
  7769                           	line	23
  7770                           ;adc.c: 23: case 3:
  7771                           	
  7772  1791                     l694:	
  7773                           	line	24
  7774                           ;adc.c: 24: CHS0 = 1;
  7775  1791  159F               	bsf	(251/8),(251)&7
  7776                           	line	25
  7777                           ;adc.c: 25: CHS1 = 1;
  7778  1792  161F               	bsf	(252/8),(252)&7
  7779                           	line	26
  7780                           ;adc.c: 26: CHS2 = 0;
  7781  1793  129F               	bcf	(253/8),(253)&7
  7782                           	line	27
  7783                           ;adc.c: 27: break;
  7784  1794  2FAE               	goto	l11035
  7785                           	line	28
  7786                           ;adc.c: 28: case 4:
  7787                           	
  7788  1795                     l695:	
  7789                           	line	29
  7790                           ;adc.c: 29: CHS0 = 0;
  7791  1795  119F               	bcf	(251/8),(251)&7
  7792                           	line	30
  7793                           ;adc.c: 30: CHS1 = 0;
  7794  1796  121F               	bcf	(252/8),(252)&7
  7795                           	line	31
  7796                           ;adc.c: 31: CHS2 = 1;
  7797  1797  169F               	bsf	(253/8),(253)&7
  7798                           	line	32
  7799                           ;adc.c: 32: break;
  7800  1798  2FAE               	goto	l11035
  7801                           	line	35
  7802                           ;adc.c: 35: default:
  7803                           	
  7804  1799                     l696:	
  7805                           	line	36
  7806                           	
  7807  1799                     l11027:	
  7808                           ;adc.c: 36: return 0;
  7809  1799  3000               	movlw	(0)
  7810  179A  2FBB               	goto	l697
  7811                           	
  7812  179B                     l11029:	
  7813  179B  2FBB               	goto	l697
  7814                           	line	37
  7815                           	
  7816  179C                     l11031:	
  7817                           ;adc.c: 37: }
  7818  179C  2FAE               	goto	l11035
  7819                           	line	6
  7820                           	
  7821  179D                     l689:	
  7822                           	
  7823  179D                     l11033:	
  7824  179D  0827               	movf	(adc_read_channel@channel),w
  7825                           	; Switch size 1, requested type "space"
  7826                           ; Number of cases is 5, Range of values is 0 to 4
  7827                           ; switch strategies available:
  7828                           ; Name         Instructions Cycles
  7829                           ; simple_byte           16     9 (average)
  7830                           ; direct_byte           23     8 (fixed)
  7831                           ; jumptable            260     6 (fixed)
  7832                           ; rangetable             9     6 (fixed)
  7833                           ; spacedrange           16     9 (fixed)
  7834                           ; locatedrange           5     3 (fixed)
  7835                           ;	Chosen strategy is simple_byte
  7836                           
  7837                           	opt asmopt_off
  7838  179E  3A00               	xorlw	0^0	; case 0
  7839  179F  1903               	skipnz
  7840  17A0  2F85               	goto	l690
  7841  17A1  3A01               	xorlw	1^0	; case 1
  7842  17A2  1903               	skipnz
  7843  17A3  2F89               	goto	l692
  7844  17A4  3A03               	xorlw	2^1	; case 2
  7845  17A5  1903               	skipnz
  7846  17A6  2F8D               	goto	l693
  7847  17A7  3A01               	xorlw	3^2	; case 3
  7848  17A8  1903               	skipnz
  7849  17A9  2F91               	goto	l694
  7850  17AA  3A07               	xorlw	4^3	; case 4
  7851  17AB  1903               	skipnz
  7852  17AC  2F95               	goto	l695
  7853  17AD  2F99               	goto	l11027
  7854                           	opt asmopt_on
  7855                           
  7856                           	line	37
  7857                           	
  7858  17AE                     l691:	
  7859                           	line	39
  7860                           	
  7861  17AE                     l11035:	
  7862                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  7863                           	opt asmopt_off
  7864  17AE  3053               movlw	83
  7865  17AF  00A6               movwf	(??_adc_read_channel+0)+0,f
  7866  17B0                     u5687:
  7867  17B0  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  7868  17B1  2FB0               	goto	u5687
  7869                           opt asmopt_on
  7870                           
  7871                           	line	41
  7872                           	
  7873  17B2                     l11037:	
  7874                           ;adc.c: 41: return adc_read();
  7875  17B2  160A  118A  25C6   	fcall	_adc_read
              160A  118A         
  7876  17B7  1283               	bcf	status, 5	;RP0=0, select bank0
  7877  17B8  1303               	bcf	status, 6	;RP1=0, select bank0
  7878  17B9  0820               	movf	(0+(?_adc_read)),w
  7879  17BA  2FBB               	goto	l697
  7880                           	
  7881  17BB                     l11039:	
  7882                           	line	43
  7883                           	
  7884  17BB                     l697:	
  7885  17BB  0008               	return
  7886                           	opt stack 0
  7887                           GLOBAL	__end_of_adc_read_channel
  7888  17BC                     	__end_of_adc_read_channel:
  7889 ;; =============== function _adc_read_channel ends ============
  7890                           
  7891                           	signat	_adc_read_channel,4217
  7892                           	global	___awmod
  7893                           psect	text1028,local,class=CODE,delta=2
  7894                           global __ptext1028
  7895  0B48                     __ptext1028:
  7896                           
  7897 ;; *************** function ___awmod *****************
  7898 ;; Defined at:
  7899 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  divisor         2    0[BANK0 ] int 
  7902 ;;  dividend        2    2[BANK0 ] int 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  sign            1    6[BANK0 ] unsigned char 
  7905 ;;  counter         1    5[BANK0 ] unsigned char 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  2    0[BANK0 ] int 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7915 ;;      Params:         0       4       0       0       0
  7916 ;;      Locals:         0       2       0       0       0
  7917 ;;      Temps:          0       1       0       0       0
  7918 ;;      Totals:         0       7       0       0       0
  7919 ;;Total ram usage:        7 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:    3
  7922 ;; This function calls:
  7923 ;;		Nothing
  7924 ;; This function is called by:
  7925 ;;		_UpdateDisplay
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           psect	text1028
  7929                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7930                           	line	5
  7931                           	global	__size_of___awmod
  7932  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  7933                           	
  7934  0B48                     ___awmod:	
  7935                           	opt	stack 2
  7936                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7937                           	line	8
  7938                           	
  7939  0B48                     l10923:	
  7940  0B48  1283               	bcf	status, 5	;RP0=0, select bank0
  7941  0B49  1303               	bcf	status, 6	;RP1=0, select bank0
  7942  0B4A  01A6               	clrf	(___awmod@sign)
  7943                           	line	9
  7944  0B4B  1FA3               	btfss	(___awmod@dividend+1),7
  7945  0B4C  2B4E               	goto	u4701
  7946  0B4D  2B4F               	goto	u4700
  7947  0B4E                     u4701:
  7948  0B4E  2B58               	goto	l10927
  7949  0B4F                     u4700:
  7950                           	line	10
  7951                           	
  7952  0B4F                     l10925:	
  7953  0B4F  09A2               	comf	(___awmod@dividend),f
  7954  0B50  09A3               	comf	(___awmod@dividend+1),f
  7955  0B51  0AA2               	incf	(___awmod@dividend),f
  7956  0B52  1903               	skipnz
  7957  0B53  0AA3               	incf	(___awmod@dividend+1),f
  7958                           	line	11
  7959  0B54  01A6               	clrf	(___awmod@sign)
  7960  0B55  1403               	bsf	status,0
  7961  0B56  0DA6               	rlf	(___awmod@sign),f
  7962  0B57  2B58               	goto	l10927
  7963                           	line	12
  7964                           	
  7965  0B58                     l7687:	
  7966                           	line	13
  7967                           	
  7968  0B58                     l10927:	
  7969  0B58  1FA1               	btfss	(___awmod@divisor+1),7
  7970  0B59  2B5B               	goto	u4711
  7971  0B5A  2B5C               	goto	u4710
  7972  0B5B                     u4711:
  7973  0B5B  2B62               	goto	l10931
  7974  0B5C                     u4710:
  7975                           	line	14
  7976                           	
  7977  0B5C                     l10929:	
  7978  0B5C  09A0               	comf	(___awmod@divisor),f
  7979  0B5D  09A1               	comf	(___awmod@divisor+1),f
  7980  0B5E  0AA0               	incf	(___awmod@divisor),f
  7981  0B5F  1903               	skipnz
  7982  0B60  0AA1               	incf	(___awmod@divisor+1),f
  7983  0B61  2B62               	goto	l10931
  7984                           	
  7985  0B62                     l7688:	
  7986                           	line	15
  7987                           	
  7988  0B62                     l10931:	
  7989  0B62  0821               	movf	(___awmod@divisor+1),w
  7990  0B63  0420               	iorwf	(___awmod@divisor),w
  7991  0B64  1903               	skipnz
  7992  0B65  2B67               	goto	u4721
  7993  0B66  2B68               	goto	u4720
  7994  0B67                     u4721:
  7995  0B67  2B9E               	goto	l10949
  7996  0B68                     u4720:
  7997                           	line	16
  7998                           	
  7999  0B68                     l10933:	
  8000  0B68  01A5               	clrf	(___awmod@counter)
  8001  0B69  1403               	bsf	status,0
  8002  0B6A  0DA5               	rlf	(___awmod@counter),f
  8003                           	line	17
  8004  0B6B  2B78               	goto	l10939
  8005                           	
  8006  0B6C                     l7691:	
  8007                           	line	18
  8008                           	
  8009  0B6C                     l10935:	
  8010  0B6C  3001               	movlw	01h
  8011                           	
  8012  0B6D                     u4735:
  8013  0B6D  1003               	clrc
  8014  0B6E  0DA0               	rlf	(___awmod@divisor),f
  8015  0B6F  0DA1               	rlf	(___awmod@divisor+1),f
  8016  0B70  3EFF               	addlw	-1
  8017  0B71  1D03               	skipz
  8018  0B72  2B6D               	goto	u4735
  8019                           	line	19
  8020                           	
  8021  0B73                     l10937:	
  8022  0B73  3001               	movlw	(01h)
  8023  0B74  00A4               	movwf	(??___awmod+0)+0
  8024  0B75  0824               	movf	(??___awmod+0)+0,w
  8025  0B76  07A5               	addwf	(___awmod@counter),f
  8026  0B77  2B78               	goto	l10939
  8027                           	line	20
  8028                           	
  8029  0B78                     l7690:	
  8030                           	line	17
  8031                           	
  8032  0B78                     l10939:	
  8033  0B78  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  8034  0B79  2B7B               	goto	u4741
  8035  0B7A  2B7C               	goto	u4740
  8036  0B7B                     u4741:
  8037  0B7B  2B6C               	goto	l10935
  8038  0B7C                     u4740:
  8039  0B7C  2B7E               	goto	l10941
  8040                           	
  8041  0B7D                     l7692:	
  8042  0B7D  2B7E               	goto	l10941
  8043                           	line	21
  8044                           	
  8045  0B7E                     l7693:	
  8046                           	line	22
  8047                           	
  8048  0B7E                     l10941:	
  8049  0B7E  0821               	movf	(___awmod@divisor+1),w
  8050  0B7F  0223               	subwf	(___awmod@dividend+1),w
  8051  0B80  1D03               	skipz
  8052  0B81  2B84               	goto	u4755
  8053  0B82  0820               	movf	(___awmod@divisor),w
  8054  0B83  0222               	subwf	(___awmod@dividend),w
  8055  0B84                     u4755:
  8056  0B84  1C03               	skipc
  8057  0B85  2B87               	goto	u4751
  8058  0B86  2B88               	goto	u4750
  8059  0B87                     u4751:
  8060  0B87  2B8F               	goto	l10945
  8061  0B88                     u4750:
  8062                           	line	23
  8063                           	
  8064  0B88                     l10943:	
  8065  0B88  0820               	movf	(___awmod@divisor),w
  8066  0B89  02A2               	subwf	(___awmod@dividend),f
  8067  0B8A  0821               	movf	(___awmod@divisor+1),w
  8068  0B8B  1C03               	skipc
  8069  0B8C  03A3               	decf	(___awmod@dividend+1),f
  8070  0B8D  02A3               	subwf	(___awmod@dividend+1),f
  8071  0B8E  2B8F               	goto	l10945
  8072                           	
  8073  0B8F                     l7694:	
  8074                           	line	24
  8075                           	
  8076  0B8F                     l10945:	
  8077  0B8F  3001               	movlw	01h
  8078                           	
  8079  0B90                     u4765:
  8080  0B90  1003               	clrc
  8081  0B91  0CA1               	rrf	(___awmod@divisor+1),f
  8082  0B92  0CA0               	rrf	(___awmod@divisor),f
  8083  0B93  3EFF               	addlw	-1
  8084  0B94  1D03               	skipz
  8085  0B95  2B90               	goto	u4765
  8086                           	line	25
  8087                           	
  8088  0B96                     l10947:	
  8089  0B96  3001               	movlw	low(01h)
  8090  0B97  02A5               	subwf	(___awmod@counter),f
  8091  0B98  1D03               	btfss	status,2
  8092  0B99  2B9B               	goto	u4771
  8093  0B9A  2B9C               	goto	u4770
  8094  0B9B                     u4771:
  8095  0B9B  2B7E               	goto	l10941
  8096  0B9C                     u4770:
  8097  0B9C  2B9E               	goto	l10949
  8098                           	
  8099  0B9D                     l7695:	
  8100  0B9D  2B9E               	goto	l10949
  8101                           	line	26
  8102                           	
  8103  0B9E                     l7689:	
  8104                           	line	27
  8105                           	
  8106  0B9E                     l10949:	
  8107  0B9E  0826               	movf	(___awmod@sign),w
  8108  0B9F  1D03               	skipz
  8109  0BA0  2BA2               	goto	u4780
  8110  0BA1  2BA8               	goto	l10953
  8111  0BA2                     u4780:
  8112                           	line	28
  8113                           	
  8114  0BA2                     l10951:	
  8115  0BA2  09A2               	comf	(___awmod@dividend),f
  8116  0BA3  09A3               	comf	(___awmod@dividend+1),f
  8117  0BA4  0AA2               	incf	(___awmod@dividend),f
  8118  0BA5  1903               	skipnz
  8119  0BA6  0AA3               	incf	(___awmod@dividend+1),f
  8120  0BA7  2BA8               	goto	l10953
  8121                           	
  8122  0BA8                     l7696:	
  8123                           	line	29
  8124                           	
  8125  0BA8                     l10953:	
  8126  0BA8  0823               	movf	(___awmod@dividend+1),w
  8127  0BA9  01A1               	clrf	(?___awmod+1)
  8128  0BAA  07A1               	addwf	(?___awmod+1)
  8129  0BAB  0822               	movf	(___awmod@dividend),w
  8130  0BAC  01A0               	clrf	(?___awmod)
  8131  0BAD  07A0               	addwf	(?___awmod)
  8132                           
  8133  0BAE  2BAF               	goto	l7697
  8134                           	
  8135  0BAF                     l10955:	
  8136                           	line	30
  8137                           	
  8138  0BAF                     l7697:	
  8139  0BAF  0008               	return
  8140                           	opt stack 0
  8141                           GLOBAL	__end_of___awmod
  8142  0BB0                     	__end_of___awmod:
  8143 ;; =============== function ___awmod ends ============
  8144                           
  8145                           	signat	___awmod,8314
  8146                           	global	___fttol
  8147                           psect	text1029,local,class=CODE,delta=2
  8148                           global __ptext1029
  8149  0E6C                     __ptext1029:
  8150                           
  8151 ;; *************** function ___fttol *****************
  8152 ;; Defined at:
  8153 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  f1              3    8[BANK0 ] float 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  lval            4   17[BANK0 ] unsigned long 
  8158 ;;  exp1            1   21[BANK0 ] unsigned char 
  8159 ;;  sign1           1   16[BANK0 ] unsigned char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  4    8[BANK0 ] long 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8169 ;;      Params:         0       4       0       0       0
  8170 ;;      Locals:         0       6       0       0       0
  8171 ;;      Temps:          0       4       0       0       0
  8172 ;;      Totals:         0      14       0       0       0
  8173 ;;Total ram usage:       14 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:    3
  8176 ;; This function calls:
  8177 ;;		Nothing
  8178 ;; This function is called by:
  8179 ;;		_main
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           psect	text1029
  8183                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  8184                           	line	45
  8185                           	global	__size_of___fttol
  8186  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  8187                           	
  8188  0E6C                     ___fttol:	
  8189                           	opt	stack 4
  8190                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8191                           	line	49
  8192                           	
  8193  0E6C                     l10867:	
  8194  0E6C  1283               	bcf	status, 5	;RP0=0, select bank0
  8195  0E6D  1303               	bcf	status, 6	;RP1=0, select bank0
  8196  0E6E  0828               	movf	(___fttol@f1),w
  8197  0E6F  00AC               	movwf	((??___fttol+0)+0)
  8198  0E70  0829               	movf	(___fttol@f1+1),w
  8199  0E71  00AD               	movwf	((??___fttol+0)+0+1)
  8200  0E72  082A               	movf	(___fttol@f1+2),w
  8201  0E73  00AE               	movwf	((??___fttol+0)+0+2)
  8202  0E74  1003               	clrc
  8203  0E75  0D2D               	rlf	(??___fttol+0)+1,w
  8204  0E76  0D2E               	rlf	(??___fttol+0)+2,w
  8205  0E77  00AF               	movwf	(??___fttol+3)+0
  8206  0E78  082F               	movf	(??___fttol+3)+0,w
  8207  0E79  00B5               	movwf	(___fttol@exp1)
  8208  0E7A  08B5               	movf	((___fttol@exp1)),f
  8209  0E7B  1D03               	skipz
  8210  0E7C  2E7E               	goto	u4591
  8211  0E7D  2E7F               	goto	u4590
  8212  0E7E                     u4591:
  8213  0E7E  2E89               	goto	l10873
  8214  0E7F                     u4590:
  8215                           	line	50
  8216                           	
  8217  0E7F                     l10869:	
  8218  0E7F  3000               	movlw	0
  8219  0E80  00AB               	movwf	(?___fttol+3)
  8220  0E81  3000               	movlw	0
  8221  0E82  00AA               	movwf	(?___fttol+2)
  8222  0E83  3000               	movlw	0
  8223  0E84  00A9               	movwf	(?___fttol+1)
  8224  0E85  3000               	movlw	0
  8225  0E86  00A8               	movwf	(?___fttol)
  8226                           
  8227  0E87  2F11               	goto	l7589
  8228                           	
  8229  0E88                     l10871:	
  8230  0E88  2F11               	goto	l7589
  8231                           	
  8232  0E89                     l7588:	
  8233                           	line	51
  8234                           	
  8235  0E89                     l10873:	
  8236  0E89  0828               	movf	(___fttol@f1),w
  8237  0E8A  00AC               	movwf	((??___fttol+0)+0)
  8238  0E8B  0829               	movf	(___fttol@f1+1),w
  8239  0E8C  00AD               	movwf	((??___fttol+0)+0+1)
  8240  0E8D  082A               	movf	(___fttol@f1+2),w
  8241  0E8E  00AE               	movwf	((??___fttol+0)+0+2)
  8242  0E8F  3017               	movlw	017h
  8243  0E90                     u4605:
  8244  0E90  1003               	clrc
  8245  0E91  0CAE               	rrf	(??___fttol+0)+2,f
  8246  0E92  0CAD               	rrf	(??___fttol+0)+1,f
  8247  0E93  0CAC               	rrf	(??___fttol+0)+0,f
  8248  0E94                     u4600:
  8249  0E94  3EFF               	addlw	-1
  8250  0E95  1D03               	skipz
  8251  0E96  2E90               	goto	u4605
  8252  0E97  082C               	movf	0+(??___fttol+0)+0,w
  8253  0E98  00AF               	movwf	(??___fttol+3)+0
  8254  0E99  082F               	movf	(??___fttol+3)+0,w
  8255  0E9A  00B0               	movwf	(___fttol@sign1)
  8256                           	line	52
  8257                           	
  8258  0E9B                     l10875:	
  8259  0E9B  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
  8260                           	line	53
  8261                           	
  8262  0E9C                     l10877:	
  8263  0E9C  30FF               	movlw	0FFh
  8264  0E9D  05A8               	andwf	(___fttol@f1),f
  8265  0E9E  30FF               	movlw	0FFh
  8266  0E9F  05A9               	andwf	(___fttol@f1+1),f
  8267  0EA0  3000               	movlw	0
  8268  0EA1  05AA               	andwf	(___fttol@f1+2),f
  8269                           	line	54
  8270                           	
  8271  0EA2                     l10879:	
  8272  0EA2  0828               	movf	(___fttol@f1),w
  8273  0EA3  00B1               	movwf	(___fttol@lval)
  8274  0EA4  0829               	movf	(___fttol@f1+1),w
  8275  0EA5  00B2               	movwf	((___fttol@lval))+1
  8276  0EA6  082A               	movf	(___fttol@f1+2),w
  8277  0EA7  00B3               	movwf	((___fttol@lval))+2
  8278  0EA8  01B4               	clrf	((___fttol@lval))+3
  8279                           	line	55
  8280                           	
  8281  0EA9                     l10881:	
  8282  0EA9  308E               	movlw	low(08Eh)
  8283  0EAA  02B5               	subwf	(___fttol@exp1),f
  8284                           	line	56
  8285                           	
  8286  0EAB                     l10883:	
  8287  0EAB  1FB5               	btfss	(___fttol@exp1),7
  8288  0EAC  2EAE               	goto	u4611
  8289  0EAD  2EAF               	goto	u4610
  8290  0EAE                     u4611:
  8291  0EAE  2ED4               	goto	l10893
  8292  0EAF                     u4610:
  8293                           	line	57
  8294                           	
  8295  0EAF                     l10885:	
  8296  0EAF  0835               	movf	(___fttol@exp1),w
  8297  0EB0  3A80               	xorlw	80h
  8298  0EB1  3E8F               	addlw	-((-15)^80h)
  8299  0EB2  1803               	skipnc
  8300  0EB3  2EB5               	goto	u4621
  8301  0EB4  2EB6               	goto	u4620
  8302  0EB5                     u4621:
  8303  0EB5  2EC1               	goto	l10891
  8304  0EB6                     u4620:
  8305                           	line	58
  8306                           	
  8307  0EB6                     l10887:	
  8308  0EB6  3000               	movlw	0
  8309  0EB7  00AB               	movwf	(?___fttol+3)
  8310  0EB8  3000               	movlw	0
  8311  0EB9  00AA               	movwf	(?___fttol+2)
  8312  0EBA  3000               	movlw	0
  8313  0EBB  00A9               	movwf	(?___fttol+1)
  8314  0EBC  3000               	movlw	0
  8315  0EBD  00A8               	movwf	(?___fttol)
  8316                           
  8317  0EBE  2F11               	goto	l7589
  8318                           	
  8319  0EBF                     l10889:	
  8320  0EBF  2F11               	goto	l7589
  8321                           	
  8322  0EC0                     l7591:	
  8323  0EC0  2EC1               	goto	l10891
  8324                           	line	59
  8325                           	
  8326  0EC1                     l7592:	
  8327                           	line	60
  8328                           	
  8329  0EC1                     l10891:	
  8330  0EC1  3001               	movlw	01h
  8331  0EC2                     u4635:
  8332  0EC2  1003               	clrc
  8333  0EC3  0CB4               	rrf	(___fttol@lval+3),f
  8334  0EC4  0CB3               	rrf	(___fttol@lval+2),f
  8335  0EC5  0CB2               	rrf	(___fttol@lval+1),f
  8336  0EC6  0CB1               	rrf	(___fttol@lval),f
  8337  0EC7  3EFF               	addlw	-1
  8338  0EC8  1D03               	skipz
  8339  0EC9  2EC2               	goto	u4635
  8340                           
  8341                           	line	61
  8342  0ECA  3001               	movlw	(01h)
  8343  0ECB  00AC               	movwf	(??___fttol+0)+0
  8344  0ECC  082C               	movf	(??___fttol+0)+0,w
  8345  0ECD  07B5               	addwf	(___fttol@exp1),f
  8346  0ECE  1D03               	btfss	status,2
  8347  0ECF  2ED1               	goto	u4641
  8348  0ED0  2ED2               	goto	u4640
  8349  0ED1                     u4641:
  8350  0ED1  2EC1               	goto	l10891
  8351  0ED2                     u4640:
  8352  0ED2  2EF8               	goto	l10903
  8353                           	
  8354  0ED3                     l7593:	
  8355                           	line	62
  8356  0ED3  2EF8               	goto	l10903
  8357                           	
  8358  0ED4                     l7590:	
  8359                           	line	63
  8360                           	
  8361  0ED4                     l10893:	
  8362  0ED4  3018               	movlw	(018h)
  8363  0ED5  0235               	subwf	(___fttol@exp1),w
  8364  0ED6  1C03               	skipc
  8365  0ED7  2ED9               	goto	u4651
  8366  0ED8  2EDA               	goto	u4650
  8367  0ED9                     u4651:
  8368  0ED9  2EF1               	goto	l10901
  8369  0EDA                     u4650:
  8370                           	line	64
  8371                           	
  8372  0EDA                     l10895:	
  8373  0EDA  3000               	movlw	0
  8374  0EDB  00AB               	movwf	(?___fttol+3)
  8375  0EDC  3000               	movlw	0
  8376  0EDD  00AA               	movwf	(?___fttol+2)
  8377  0EDE  3000               	movlw	0
  8378  0EDF  00A9               	movwf	(?___fttol+1)
  8379  0EE0  3000               	movlw	0
  8380  0EE1  00A8               	movwf	(?___fttol)
  8381                           
  8382  0EE2  2F11               	goto	l7589
  8383                           	
  8384  0EE3                     l10897:	
  8385  0EE3  2F11               	goto	l7589
  8386                           	
  8387  0EE4                     l7595:	
  8388                           	line	65
  8389  0EE4  2EF1               	goto	l10901
  8390                           	
  8391  0EE5                     l7597:	
  8392                           	line	66
  8393                           	
  8394  0EE5                     l10899:	
  8395  0EE5  3001               	movlw	01h
  8396  0EE6  00AC               	movwf	(??___fttol+0)+0
  8397  0EE7                     u4665:
  8398  0EE7  1003               	clrc
  8399  0EE8  0DB1               	rlf	(___fttol@lval),f
  8400  0EE9  0DB2               	rlf	(___fttol@lval+1),f
  8401  0EEA  0DB3               	rlf	(___fttol@lval+2),f
  8402  0EEB  0DB4               	rlf	(___fttol@lval+3),f
  8403  0EEC  0BAC               	decfsz	(??___fttol+0)+0
  8404  0EED  2EE7               	goto	u4665
  8405                           	line	67
  8406  0EEE  3001               	movlw	low(01h)
  8407  0EEF  02B5               	subwf	(___fttol@exp1),f
  8408  0EF0  2EF1               	goto	l10901
  8409                           	line	68
  8410                           	
  8411  0EF1                     l7596:	
  8412                           	line	65
  8413                           	
  8414  0EF1                     l10901:	
  8415  0EF1  08B5               	movf	(___fttol@exp1),f
  8416  0EF2  1D03               	skipz
  8417  0EF3  2EF5               	goto	u4671
  8418  0EF4  2EF6               	goto	u4670
  8419  0EF5                     u4671:
  8420  0EF5  2EE5               	goto	l10899
  8421  0EF6                     u4670:
  8422  0EF6  2EF8               	goto	l10903
  8423                           	
  8424  0EF7                     l7598:	
  8425  0EF7  2EF8               	goto	l10903
  8426                           	line	69
  8427                           	
  8428  0EF8                     l7594:	
  8429                           	line	70
  8430                           	
  8431  0EF8                     l10903:	
  8432  0EF8  0830               	movf	(___fttol@sign1),w
  8433  0EF9  1D03               	skipz
  8434  0EFA  2EFC               	goto	u4680
  8435  0EFB  2F08               	goto	l10907
  8436  0EFC                     u4680:
  8437                           	line	71
  8438                           	
  8439  0EFC                     l10905:	
  8440  0EFC  09B1               	comf	(___fttol@lval),f
  8441  0EFD  09B2               	comf	(___fttol@lval+1),f
  8442  0EFE  09B3               	comf	(___fttol@lval+2),f
  8443  0EFF  09B4               	comf	(___fttol@lval+3),f
  8444  0F00  0AB1               	incf	(___fttol@lval),f
  8445  0F01  1903               	skipnz
  8446  0F02  0AB2               	incf	(___fttol@lval+1),f
  8447  0F03  1903               	skipnz
  8448  0F04  0AB3               	incf	(___fttol@lval+2),f
  8449  0F05  1903               	skipnz
  8450  0F06  0AB4               	incf	(___fttol@lval+3),f
  8451  0F07  2F08               	goto	l10907
  8452                           	
  8453  0F08                     l7599:	
  8454                           	line	72
  8455                           	
  8456  0F08                     l10907:	
  8457  0F08  0834               	movf	(___fttol@lval+3),w
  8458  0F09  00AB               	movwf	(?___fttol+3)
  8459  0F0A  0833               	movf	(___fttol@lval+2),w
  8460  0F0B  00AA               	movwf	(?___fttol+2)
  8461  0F0C  0832               	movf	(___fttol@lval+1),w
  8462  0F0D  00A9               	movwf	(?___fttol+1)
  8463  0F0E  0831               	movf	(___fttol@lval),w
  8464  0F0F  00A8               	movwf	(?___fttol)
  8465                           
  8466  0F10  2F11               	goto	l7589
  8467                           	
  8468  0F11                     l10909:	
  8469                           	line	73
  8470                           	
  8471  0F11                     l7589:	
  8472  0F11  0008               	return
  8473                           	opt stack 0
  8474                           GLOBAL	__end_of___fttol
  8475  0F12                     	__end_of___fttol:
  8476 ;; =============== function ___fttol ends ============
  8477                           
  8478                           	signat	___fttol,4220
  8479                           	global	___ftpack
  8480                           psect	text1030,local,class=CODE,delta=2
  8481                           global __ptext1030
  8482  0C2A                     __ptext1030:
  8483                           
  8484 ;; *************** function ___ftpack *****************
  8485 ;; Defined at:
  8486 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  arg             3    0[BANK0 ] unsigned um
  8489 ;;  exp             1    3[BANK0 ] unsigned char 
  8490 ;;  sign            1    4[BANK0 ] unsigned char 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  3    0[BANK0 ] float 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8502 ;;      Params:         0       5       0       0       0
  8503 ;;      Locals:         0       0       0       0       0
  8504 ;;      Temps:          0       3       0       0       0
  8505 ;;      Totals:         0       8       0       0       0
  8506 ;;Total ram usage:        8 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    3
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		___ftmul
  8513 ;;		___awtoft
  8514 ;;		___ftadd
  8515 ;;		___ftdiv
  8516 ;;		___lbtoft
  8517 ;;		___abtoft
  8518 ;;		___lwtoft
  8519 ;;		___altoft
  8520 ;;		___lltoft
  8521 ;;		___attoft
  8522 ;;		___lttoft
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           psect	text1030
  8526                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  8527                           	line	63
  8528                           	global	__size_of___ftpack
  8529  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  8530                           	
  8531  0C2A                     ___ftpack:	
  8532                           	opt	stack 3
  8533                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8534                           	line	64
  8535                           	
  8536  0C2A                     l10793:	
  8537  0C2A  1283               	bcf	status, 5	;RP0=0, select bank0
  8538  0C2B  1303               	bcf	status, 6	;RP1=0, select bank0
  8539  0C2C  0823               	movf	(___ftpack@exp),w
  8540  0C2D  1D03               	skipz
  8541  0C2E  2C30               	goto	u4400
  8542  0C2F  2C38               	goto	l10797
  8543  0C30                     u4400:
  8544                           	
  8545  0C30                     l10795:	
  8546  0C30  0822               	movf	(___ftpack@arg+2),w
  8547  0C31  0421               	iorwf	(___ftpack@arg+1),w
  8548  0C32  0420               	iorwf	(___ftpack@arg),w
  8549  0C33  1D03               	skipz
  8550  0C34  2C36               	goto	u4411
  8551  0C35  2C37               	goto	u4410
  8552  0C36                     u4411:
  8553  0C36  2C4E               	goto	l10803
  8554  0C37                     u4410:
  8555  0C37  2C38               	goto	l10797
  8556                           	
  8557  0C38                     l7813:	
  8558                           	line	65
  8559                           	
  8560  0C38                     l10797:	
  8561  0C38  3000               	movlw	0x0
  8562  0C39  00A0               	movwf	(?___ftpack)
  8563  0C3A  3000               	movlw	0x0
  8564  0C3B  00A1               	movwf	(?___ftpack+1)
  8565  0C3C  3000               	movlw	0x0
  8566  0C3D  00A2               	movwf	(?___ftpack+2)
  8567  0C3E  2CA6               	goto	l7814
  8568                           	
  8569  0C3F                     l10799:	
  8570  0C3F  2CA6               	goto	l7814
  8571                           	
  8572  0C40                     l7811:	
  8573                           	line	66
  8574  0C40  2C4E               	goto	l10803
  8575                           	
  8576  0C41                     l7816:	
  8577                           	line	67
  8578                           	
  8579  0C41                     l10801:	
  8580  0C41  3001               	movlw	(01h)
  8581  0C42  00A5               	movwf	(??___ftpack+0)+0
  8582  0C43  0825               	movf	(??___ftpack+0)+0,w
  8583  0C44  07A3               	addwf	(___ftpack@exp),f
  8584                           	line	68
  8585  0C45  3001               	movlw	01h
  8586  0C46                     u4425:
  8587  0C46  1003               	clrc
  8588  0C47  0CA2               	rrf	(___ftpack@arg+2),f
  8589  0C48  0CA1               	rrf	(___ftpack@arg+1),f
  8590  0C49  0CA0               	rrf	(___ftpack@arg),f
  8591  0C4A  3EFF               	addlw	-1
  8592  0C4B  1D03               	skipz
  8593  0C4C  2C46               	goto	u4425
  8594                           
  8595  0C4D  2C4E               	goto	l10803
  8596                           	line	69
  8597                           	
  8598  0C4E                     l7815:	
  8599                           	line	66
  8600                           	
  8601  0C4E                     l10803:	
  8602  0C4E  30FE               	movlw	low highword(0FE0000h)
  8603  0C4F  0522               	andwf	(___ftpack@arg+2),w
  8604  0C50  1D03               	btfss	status,2
  8605  0C51  2C53               	goto	u4431
  8606  0C52  2C54               	goto	u4430
  8607  0C53                     u4431:
  8608  0C53  2C41               	goto	l10801
  8609  0C54                     u4430:
  8610  0C54  2C6C               	goto	l7818
  8611                           	
  8612  0C55                     l7817:	
  8613                           	line	70
  8614  0C55  2C6C               	goto	l7818
  8615                           	
  8616  0C56                     l7819:	
  8617                           	line	71
  8618                           	
  8619  0C56                     l10805:	
  8620  0C56  3001               	movlw	(01h)
  8621  0C57  00A5               	movwf	(??___ftpack+0)+0
  8622  0C58  0825               	movf	(??___ftpack+0)+0,w
  8623  0C59  07A3               	addwf	(___ftpack@exp),f
  8624                           	line	72
  8625                           	
  8626  0C5A                     l10807:	
  8627  0C5A  3001               	movlw	01h
  8628  0C5B  07A0               	addwf	(___ftpack@arg),f
  8629  0C5C  3000               	movlw	0
  8630  0C5D  1803               	skipnc
  8631  0C5E  3001               movlw 1
  8632  0C5F  07A1               	addwf	(___ftpack@arg+1),f
  8633  0C60  3000               	movlw	0
  8634  0C61  1803               	skipnc
  8635  0C62  3001               movlw 1
  8636  0C63  07A2               	addwf	(___ftpack@arg+2),f
  8637                           	line	73
  8638                           	
  8639  0C64                     l10809:	
  8640  0C64  3001               	movlw	01h
  8641  0C65                     u4445:
  8642  0C65  1003               	clrc
  8643  0C66  0CA2               	rrf	(___ftpack@arg+2),f
  8644  0C67  0CA1               	rrf	(___ftpack@arg+1),f
  8645  0C68  0CA0               	rrf	(___ftpack@arg),f
  8646  0C69  3EFF               	addlw	-1
  8647  0C6A  1D03               	skipz
  8648  0C6B  2C65               	goto	u4445
  8649                           
  8650                           	line	74
  8651                           	
  8652  0C6C                     l7818:	
  8653                           	line	70
  8654  0C6C  30FF               	movlw	low highword(0FF0000h)
  8655  0C6D  0522               	andwf	(___ftpack@arg+2),w
  8656  0C6E  1D03               	btfss	status,2
  8657  0C6F  2C71               	goto	u4451
  8658  0C70  2C72               	goto	u4450
  8659  0C71                     u4451:
  8660  0C71  2C56               	goto	l10805
  8661  0C72                     u4450:
  8662  0C72  2C7F               	goto	l10813
  8663                           	
  8664  0C73                     l7820:	
  8665                           	line	75
  8666  0C73  2C7F               	goto	l10813
  8667                           	
  8668  0C74                     l7822:	
  8669                           	line	76
  8670                           	
  8671  0C74                     l10811:	
  8672  0C74  3001               	movlw	low(01h)
  8673  0C75  02A3               	subwf	(___ftpack@exp),f
  8674                           	line	77
  8675  0C76  3001               	movlw	01h
  8676  0C77                     u4465:
  8677  0C77  1003               	clrc
  8678  0C78  0DA0               	rlf	(___ftpack@arg),f
  8679  0C79  0DA1               	rlf	(___ftpack@arg+1),f
  8680  0C7A  0DA2               	rlf	(___ftpack@arg+2),f
  8681  0C7B  3EFF               	addlw	-1
  8682  0C7C  1D03               	skipz
  8683  0C7D  2C77               	goto	u4465
  8684  0C7E  2C7F               	goto	l10813
  8685                           	line	78
  8686                           	
  8687  0C7F                     l7821:	
  8688                           	line	75
  8689                           	
  8690  0C7F                     l10813:	
  8691  0C7F  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  8692  0C80  2C82               	goto	u4471
  8693  0C81  2C83               	goto	u4470
  8694  0C82                     u4471:
  8695  0C82  2C74               	goto	l10811
  8696  0C83                     u4470:
  8697                           	
  8698  0C83                     l7823:	
  8699                           	line	79
  8700  0C83  1823               	btfsc	(___ftpack@exp),(0)&7
  8701  0C84  2C86               	goto	u4481
  8702  0C85  2C87               	goto	u4480
  8703  0C86                     u4481:
  8704  0C86  2C8D               	goto	l7824
  8705  0C87                     u4480:
  8706                           	line	80
  8707                           	
  8708  0C87                     l10815:	
  8709  0C87  30FF               	movlw	0FFh
  8710  0C88  05A0               	andwf	(___ftpack@arg),f
  8711  0C89  307F               	movlw	07Fh
  8712  0C8A  05A1               	andwf	(___ftpack@arg+1),f
  8713  0C8B  30FF               	movlw	0FFh
  8714  0C8C  05A2               	andwf	(___ftpack@arg+2),f
  8715                           	
  8716  0C8D                     l7824:	
  8717                           	line	81
  8718  0C8D  1003               	clrc
  8719  0C8E  0CA3               	rrf	(___ftpack@exp),f
  8720                           
  8721                           	line	82
  8722                           	
  8723  0C8F                     l10817:	
  8724  0C8F  0823               	movf	(___ftpack@exp),w
  8725  0C90  00A5               	movwf	((??___ftpack+0)+0)
  8726  0C91  01A6               	clrf	((??___ftpack+0)+0+1)
  8727  0C92  01A7               	clrf	((??___ftpack+0)+0+2)
  8728  0C93  3010               	movlw	010h
  8729  0C94                     u4495:
  8730  0C94  1003               	clrc
  8731  0C95  0DA5               	rlf	(??___ftpack+0)+0,f
  8732  0C96  0DA6               	rlf	(??___ftpack+0)+1,f
  8733  0C97  0DA7               	rlf	(??___ftpack+0)+2,f
  8734  0C98                     u4490:
  8735  0C98  3EFF               	addlw	-1
  8736  0C99  1D03               	skipz
  8737  0C9A  2C94               	goto	u4495
  8738  0C9B  0825               	movf	0+(??___ftpack+0)+0,w
  8739  0C9C  04A0               	iorwf	(___ftpack@arg),f
  8740  0C9D  0826               	movf	1+(??___ftpack+0)+0,w
  8741  0C9E  04A1               	iorwf	(___ftpack@arg+1),f
  8742  0C9F  0827               	movf	2+(??___ftpack+0)+0,w
  8743  0CA0  04A2               	iorwf	(___ftpack@arg+2),f
  8744                           	line	83
  8745                           	
  8746  0CA1                     l10819:	
  8747  0CA1  0824               	movf	(___ftpack@sign),w
  8748  0CA2  1D03               	skipz
  8749  0CA3  2CA5               	goto	u4500
  8750  0CA4  2CA6               	goto	l7825
  8751  0CA5                     u4500:
  8752                           	line	84
  8753                           	
  8754  0CA5                     l10821:	
  8755  0CA5  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  8756                           	
  8757  0CA6                     l7825:	
  8758                           	line	85
  8759                           	line	86
  8760                           	
  8761  0CA6                     l7814:	
  8762  0CA6  0008               	return
  8763                           	opt stack 0
  8764                           GLOBAL	__end_of___ftpack
  8765  0CA7                     	__end_of___ftpack:
  8766 ;; =============== function ___ftpack ends ============
  8767                           
  8768                           	signat	___ftpack,12411
  8769                           	global	___lwmod
  8770                           psect	text1031,local,class=CODE,delta=2
  8771                           global __ptext1031
  8772  08CF                     __ptext1031:
  8773                           
  8774 ;; *************** function ___lwmod *****************
  8775 ;; Defined at:
  8776 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  divisor         2   14[BANK0 ] unsigned int 
  8779 ;;  dividend        2   16[BANK0 ] unsigned int 
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;  counter         1   19[BANK0 ] unsigned char 
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  2   14[BANK0 ] unsigned int 
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8791 ;;      Params:         0       4       0       0       0
  8792 ;;      Locals:         0       1       0       0       0
  8793 ;;      Temps:          0       1       0       0       0
  8794 ;;      Totals:         0       6       0       0       0
  8795 ;;Total ram usage:        6 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:    3
  8798 ;; This function calls:
  8799 ;;		Nothing
  8800 ;; This function is called by:
  8801 ;;		_sprintf
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           psect	text1031
  8805                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8806                           	line	5
  8807                           	global	__size_of___lwmod
  8808  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  8809                           	
  8810  08CF                     ___lwmod:	
  8811                           	opt	stack 1
  8812                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8813                           	line	8
  8814                           	
  8815  08CF                     l10701:	
  8816  08CF  1283               	bcf	status, 5	;RP0=0, select bank0
  8817  08D0  1303               	bcf	status, 6	;RP1=0, select bank0
  8818  08D1  082F               	movf	(___lwmod@divisor+1),w
  8819  08D2  042E               	iorwf	(___lwmod@divisor),w
  8820  08D3  1903               	skipnz
  8821  08D4  28D6               	goto	u4101
  8822  08D5  28D7               	goto	u4100
  8823  08D6                     u4101:
  8824  08D6  290D               	goto	l10719
  8825  08D7                     u4100:
  8826                           	line	9
  8827                           	
  8828  08D7                     l10703:	
  8829  08D7  01B3               	clrf	(___lwmod@counter)
  8830  08D8  1403               	bsf	status,0
  8831  08D9  0DB3               	rlf	(___lwmod@counter),f
  8832                           	line	10
  8833  08DA  28E7               	goto	l10709
  8834                           	
  8835  08DB                     l7497:	
  8836                           	line	11
  8837                           	
  8838  08DB                     l10705:	
  8839  08DB  3001               	movlw	01h
  8840                           	
  8841  08DC                     u4115:
  8842  08DC  1003               	clrc
  8843  08DD  0DAE               	rlf	(___lwmod@divisor),f
  8844  08DE  0DAF               	rlf	(___lwmod@divisor+1),f
  8845  08DF  3EFF               	addlw	-1
  8846  08E0  1D03               	skipz
  8847  08E1  28DC               	goto	u4115
  8848                           	line	12
  8849                           	
  8850  08E2                     l10707:	
  8851  08E2  3001               	movlw	(01h)
  8852  08E3  00B2               	movwf	(??___lwmod+0)+0
  8853  08E4  0832               	movf	(??___lwmod+0)+0,w
  8854  08E5  07B3               	addwf	(___lwmod@counter),f
  8855  08E6  28E7               	goto	l10709
  8856                           	line	13
  8857                           	
  8858  08E7                     l7496:	
  8859                           	line	10
  8860                           	
  8861  08E7                     l10709:	
  8862  08E7  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  8863  08E8  28EA               	goto	u4121
  8864  08E9  28EB               	goto	u4120
  8865  08EA                     u4121:
  8866  08EA  28DB               	goto	l10705
  8867  08EB                     u4120:
  8868  08EB  28ED               	goto	l10711
  8869                           	
  8870  08EC                     l7498:	
  8871  08EC  28ED               	goto	l10711
  8872                           	line	14
  8873                           	
  8874  08ED                     l7499:	
  8875                           	line	15
  8876                           	
  8877  08ED                     l10711:	
  8878  08ED  082F               	movf	(___lwmod@divisor+1),w
  8879  08EE  0231               	subwf	(___lwmod@dividend+1),w
  8880  08EF  1D03               	skipz
  8881  08F0  28F3               	goto	u4135
  8882  08F1  082E               	movf	(___lwmod@divisor),w
  8883  08F2  0230               	subwf	(___lwmod@dividend),w
  8884  08F3                     u4135:
  8885  08F3  1C03               	skipc
  8886  08F4  28F6               	goto	u4131
  8887  08F5  28F7               	goto	u4130
  8888  08F6                     u4131:
  8889  08F6  28FE               	goto	l10715
  8890  08F7                     u4130:
  8891                           	line	16
  8892                           	
  8893  08F7                     l10713:	
  8894  08F7  082E               	movf	(___lwmod@divisor),w
  8895  08F8  02B0               	subwf	(___lwmod@dividend),f
  8896  08F9  082F               	movf	(___lwmod@divisor+1),w
  8897  08FA  1C03               	skipc
  8898  08FB  03B1               	decf	(___lwmod@dividend+1),f
  8899  08FC  02B1               	subwf	(___lwmod@dividend+1),f
  8900  08FD  28FE               	goto	l10715
  8901                           	
  8902  08FE                     l7500:	
  8903                           	line	17
  8904                           	
  8905  08FE                     l10715:	
  8906  08FE  3001               	movlw	01h
  8907                           	
  8908  08FF                     u4145:
  8909  08FF  1003               	clrc
  8910  0900  0CAF               	rrf	(___lwmod@divisor+1),f
  8911  0901  0CAE               	rrf	(___lwmod@divisor),f
  8912  0902  3EFF               	addlw	-1
  8913  0903  1D03               	skipz
  8914  0904  28FF               	goto	u4145
  8915                           	line	18
  8916                           	
  8917  0905                     l10717:	
  8918  0905  3001               	movlw	low(01h)
  8919  0906  02B3               	subwf	(___lwmod@counter),f
  8920  0907  1D03               	btfss	status,2
  8921  0908  290A               	goto	u4151
  8922  0909  290B               	goto	u4150
  8923  090A                     u4151:
  8924  090A  28ED               	goto	l10711
  8925  090B                     u4150:
  8926  090B  290D               	goto	l10719
  8927                           	
  8928  090C                     l7501:	
  8929  090C  290D               	goto	l10719
  8930                           	line	19
  8931                           	
  8932  090D                     l7495:	
  8933                           	line	20
  8934                           	
  8935  090D                     l10719:	
  8936  090D  0831               	movf	(___lwmod@dividend+1),w
  8937  090E  01AF               	clrf	(?___lwmod+1)
  8938  090F  07AF               	addwf	(?___lwmod+1)
  8939  0910  0830               	movf	(___lwmod@dividend),w
  8940  0911  01AE               	clrf	(?___lwmod)
  8941  0912  07AE               	addwf	(?___lwmod)
  8942                           
  8943  0913  2914               	goto	l7502
  8944                           	
  8945  0914                     l10721:	
  8946                           	line	21
  8947                           	
  8948  0914                     l7502:	
  8949  0914  0008               	return
  8950                           	opt stack 0
  8951                           GLOBAL	__end_of___lwmod
  8952  0915                     	__end_of___lwmod:
  8953 ;; =============== function ___lwmod ends ============
  8954                           
  8955                           	signat	___lwmod,8314
  8956                           	global	___lwdiv
  8957                           psect	text1032,local,class=CODE,delta=2
  8958                           global __ptext1032
  8959  09A2                     __ptext1032:
  8960                           
  8961 ;; *************** function ___lwdiv *****************
  8962 ;; Defined at:
  8963 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  divisor         2    6[BANK0 ] unsigned int 
  8966 ;;  dividend        2    8[BANK0 ] unsigned int 
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;  quotient        2   11[BANK0 ] unsigned int 
  8969 ;;  counter         1   13[BANK0 ] unsigned char 
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  2    6[BANK0 ] unsigned int 
  8972 ;; Registers used:
  8973 ;;		wreg, status,2, status,0
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8979 ;;      Params:         0       4       0       0       0
  8980 ;;      Locals:         0       3       0       0       0
  8981 ;;      Temps:          0       1       0       0       0
  8982 ;;      Totals:         0       8       0       0       0
  8983 ;;Total ram usage:        8 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    3
  8986 ;; This function calls:
  8987 ;;		Nothing
  8988 ;; This function is called by:
  8989 ;;		_readAvgDistance
  8990 ;;		_ADCconvert
  8991 ;;		_sprintf
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           psect	text1032
  8995                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  8996                           	line	5
  8997                           	global	__size_of___lwdiv
  8998  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  8999                           	
  9000  09A2                     ___lwdiv:	
  9001                           	opt	stack 1
  9002                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9003                           	line	9
  9004                           	
  9005  09A2                     l10675:	
  9006  09A2  1283               	bcf	status, 5	;RP0=0, select bank0
  9007  09A3  1303               	bcf	status, 6	;RP1=0, select bank0
  9008  09A4  01AB               	clrf	(___lwdiv@quotient)
  9009  09A5  01AC               	clrf	(___lwdiv@quotient+1)
  9010                           	line	10
  9011                           	
  9012  09A6                     l10677:	
  9013  09A6  0827               	movf	(___lwdiv@divisor+1),w
  9014  09A7  0426               	iorwf	(___lwdiv@divisor),w
  9015  09A8  1903               	skipnz
  9016  09A9  29AB               	goto	u4031
  9017  09AA  29AC               	goto	u4030
  9018  09AB                     u4031:
  9019  09AB  29EA               	goto	l10697
  9020  09AC                     u4030:
  9021                           	line	11
  9022                           	
  9023  09AC                     l10679:	
  9024  09AC  01AD               	clrf	(___lwdiv@counter)
  9025  09AD  1403               	bsf	status,0
  9026  09AE  0DAD               	rlf	(___lwdiv@counter),f
  9027                           	line	12
  9028  09AF  29BC               	goto	l10685
  9029                           	
  9030  09B0                     l7487:	
  9031                           	line	13
  9032                           	
  9033  09B0                     l10681:	
  9034  09B0  3001               	movlw	01h
  9035                           	
  9036  09B1                     u4045:
  9037  09B1  1003               	clrc
  9038  09B2  0DA6               	rlf	(___lwdiv@divisor),f
  9039  09B3  0DA7               	rlf	(___lwdiv@divisor+1),f
  9040  09B4  3EFF               	addlw	-1
  9041  09B5  1D03               	skipz
  9042  09B6  29B1               	goto	u4045
  9043                           	line	14
  9044                           	
  9045  09B7                     l10683:	
  9046  09B7  3001               	movlw	(01h)
  9047  09B8  00AA               	movwf	(??___lwdiv+0)+0
  9048  09B9  082A               	movf	(??___lwdiv+0)+0,w
  9049  09BA  07AD               	addwf	(___lwdiv@counter),f
  9050  09BB  29BC               	goto	l10685
  9051                           	line	15
  9052                           	
  9053  09BC                     l7486:	
  9054                           	line	12
  9055                           	
  9056  09BC                     l10685:	
  9057  09BC  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  9058  09BD  29BF               	goto	u4051
  9059  09BE  29C0               	goto	u4050
  9060  09BF                     u4051:
  9061  09BF  29B0               	goto	l10681
  9062  09C0                     u4050:
  9063  09C0  29C2               	goto	l10687
  9064                           	
  9065  09C1                     l7488:	
  9066  09C1  29C2               	goto	l10687
  9067                           	line	16
  9068                           	
  9069  09C2                     l7489:	
  9070                           	line	17
  9071                           	
  9072  09C2                     l10687:	
  9073  09C2  3001               	movlw	01h
  9074                           	
  9075  09C3                     u4065:
  9076  09C3  1003               	clrc
  9077  09C4  0DAB               	rlf	(___lwdiv@quotient),f
  9078  09C5  0DAC               	rlf	(___lwdiv@quotient+1),f
  9079  09C6  3EFF               	addlw	-1
  9080  09C7  1D03               	skipz
  9081  09C8  29C3               	goto	u4065
  9082                           	line	18
  9083  09C9  0827               	movf	(___lwdiv@divisor+1),w
  9084  09CA  0229               	subwf	(___lwdiv@dividend+1),w
  9085  09CB  1D03               	skipz
  9086  09CC  29CF               	goto	u4075
  9087  09CD  0826               	movf	(___lwdiv@divisor),w
  9088  09CE  0228               	subwf	(___lwdiv@dividend),w
  9089  09CF                     u4075:
  9090  09CF  1C03               	skipc
  9091  09D0  29D2               	goto	u4071
  9092  09D1  29D3               	goto	u4070
  9093  09D2                     u4071:
  9094  09D2  29DB               	goto	l10693
  9095  09D3                     u4070:
  9096                           	line	19
  9097                           	
  9098  09D3                     l10689:	
  9099  09D3  0826               	movf	(___lwdiv@divisor),w
  9100  09D4  02A8               	subwf	(___lwdiv@dividend),f
  9101  09D5  0827               	movf	(___lwdiv@divisor+1),w
  9102  09D6  1C03               	skipc
  9103  09D7  03A9               	decf	(___lwdiv@dividend+1),f
  9104  09D8  02A9               	subwf	(___lwdiv@dividend+1),f
  9105                           	line	20
  9106                           	
  9107  09D9                     l10691:	
  9108  09D9  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  9109  09DA  29DB               	goto	l10693
  9110                           	line	21
  9111                           	
  9112  09DB                     l7490:	
  9113                           	line	22
  9114                           	
  9115  09DB                     l10693:	
  9116  09DB  3001               	movlw	01h
  9117                           	
  9118  09DC                     u4085:
  9119  09DC  1003               	clrc
  9120  09DD  0CA7               	rrf	(___lwdiv@divisor+1),f
  9121  09DE  0CA6               	rrf	(___lwdiv@divisor),f
  9122  09DF  3EFF               	addlw	-1
  9123  09E0  1D03               	skipz
  9124  09E1  29DC               	goto	u4085
  9125                           	line	23
  9126                           	
  9127  09E2                     l10695:	
  9128  09E2  3001               	movlw	low(01h)
  9129  09E3  02AD               	subwf	(___lwdiv@counter),f
  9130  09E4  1D03               	btfss	status,2
  9131  09E5  29E7               	goto	u4091
  9132  09E6  29E8               	goto	u4090
  9133  09E7                     u4091:
  9134  09E7  29C2               	goto	l10687
  9135  09E8                     u4090:
  9136  09E8  29EA               	goto	l10697
  9137                           	
  9138  09E9                     l7491:	
  9139  09E9  29EA               	goto	l10697
  9140                           	line	24
  9141                           	
  9142  09EA                     l7485:	
  9143                           	line	25
  9144                           	
  9145  09EA                     l10697:	
  9146  09EA  082C               	movf	(___lwdiv@quotient+1),w
  9147  09EB  01A7               	clrf	(?___lwdiv+1)
  9148  09EC  07A7               	addwf	(?___lwdiv+1)
  9149  09ED  082B               	movf	(___lwdiv@quotient),w
  9150  09EE  01A6               	clrf	(?___lwdiv)
  9151  09EF  07A6               	addwf	(?___lwdiv)
  9152                           
  9153  09F0  29F1               	goto	l7492
  9154                           	
  9155  09F1                     l10699:	
  9156                           	line	26
  9157                           	
  9158  09F1                     l7492:	
  9159  09F1  0008               	return
  9160                           	opt stack 0
  9161                           GLOBAL	__end_of___lwdiv
  9162  09F2                     	__end_of___lwdiv:
  9163 ;; =============== function ___lwdiv ends ============
  9164                           
  9165                           	signat	___lwdiv,8314
  9166                           	global	___wmul
  9167                           psect	text1033,local,class=CODE,delta=2
  9168                           global __ptext1033
  9169  1644                     __ptext1033:
  9170                           
  9171 ;; *************** function ___wmul *****************
  9172 ;; Defined at:
  9173 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9176 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  product         2    4[BANK0 ] unsigned int 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  2    0[BANK0 ] unsigned int 
  9181 ;; Registers used:
  9182 ;;		wreg, status,2, status,0
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9188 ;;      Params:         0       4       0       0       0
  9189 ;;      Locals:         0       2       0       0       0
  9190 ;;      Temps:          0       0       0       0       0
  9191 ;;      Totals:         0       6       0       0       0
  9192 ;;Total ram usage:        6 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    3
  9195 ;; This function calls:
  9196 ;;		Nothing
  9197 ;; This function is called by:
  9198 ;;		_ADCconvert
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           psect	text1033
  9202                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  9203                           	line	3
  9204                           	global	__size_of___wmul
  9205  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  9206                           	
  9207  1644                     ___wmul:	
  9208                           	opt	stack 1
  9209                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9210                           	line	4
  9211                           	
  9212  1644                     l10663:	
  9213  1644  1283               	bcf	status, 5	;RP0=0, select bank0
  9214  1645  1303               	bcf	status, 6	;RP1=0, select bank0
  9215  1646  01A4               	clrf	(___wmul@product)
  9216  1647  01A5               	clrf	(___wmul@product+1)
  9217  1648  2E49               	goto	l10665
  9218                           	line	6
  9219                           	
  9220  1649                     l7479:	
  9221                           	line	7
  9222                           	
  9223  1649                     l10665:	
  9224  1649  1C20               	btfss	(___wmul@multiplier),(0)&7
  9225  164A  2E4C               	goto	u3991
  9226  164B  2E4D               	goto	u3990
  9227  164C                     u3991:
  9228  164C  2E53               	goto	l7480
  9229  164D                     u3990:
  9230                           	line	8
  9231                           	
  9232  164D                     l10667:	
  9233  164D  0822               	movf	(___wmul@multiplicand),w
  9234  164E  07A4               	addwf	(___wmul@product),f
  9235  164F  1803               	skipnc
  9236  1650  0AA5               	incf	(___wmul@product+1),f
  9237  1651  0823               	movf	(___wmul@multiplicand+1),w
  9238  1652  07A5               	addwf	(___wmul@product+1),f
  9239                           	
  9240  1653                     l7480:	
  9241                           	line	9
  9242  1653  3001               	movlw	01h
  9243                           	
  9244  1654                     u4005:
  9245  1654  1003               	clrc
  9246  1655  0DA2               	rlf	(___wmul@multiplicand),f
  9247  1656  0DA3               	rlf	(___wmul@multiplicand+1),f
  9248  1657  3EFF               	addlw	-1
  9249  1658  1D03               	skipz
  9250  1659  2E54               	goto	u4005
  9251                           	line	10
  9252                           	
  9253  165A                     l10669:	
  9254  165A  3001               	movlw	01h
  9255                           	
  9256  165B                     u4015:
  9257  165B  1003               	clrc
  9258  165C  0CA1               	rrf	(___wmul@multiplier+1),f
  9259  165D  0CA0               	rrf	(___wmul@multiplier),f
  9260  165E  3EFF               	addlw	-1
  9261  165F  1D03               	skipz
  9262  1660  2E5B               	goto	u4015
  9263                           	line	11
  9264  1661  0821               	movf	((___wmul@multiplier+1)),w
  9265  1662  0420               	iorwf	((___wmul@multiplier)),w
  9266  1663  1D03               	skipz
  9267  1664  2E66               	goto	u4021
  9268  1665  2E67               	goto	u4020
  9269  1666                     u4021:
  9270  1666  2E49               	goto	l10665
  9271  1667                     u4020:
  9272  1667  2E68               	goto	l10671
  9273                           	
  9274  1668                     l7481:	
  9275                           	line	12
  9276                           	
  9277  1668                     l10671:	
  9278  1668  0825               	movf	(___wmul@product+1),w
  9279  1669  01A1               	clrf	(?___wmul+1)
  9280  166A  07A1               	addwf	(?___wmul+1)
  9281  166B  0824               	movf	(___wmul@product),w
  9282  166C  01A0               	clrf	(?___wmul)
  9283  166D  07A0               	addwf	(?___wmul)
  9284                           
  9285  166E  2E6F               	goto	l7482
  9286                           	
  9287  166F                     l10673:	
  9288                           	line	13
  9289                           	
  9290  166F                     l7482:	
  9291  166F  0008               	return
  9292                           	opt stack 0
  9293                           GLOBAL	__end_of___wmul
  9294  1670                     	__end_of___wmul:
  9295 ;; =============== function ___wmul ends ============
  9296                           
  9297                           	signat	___wmul,8314
  9298                           	global	_ser_isrx
  9299                           psect	text1034,local,class=CODE,delta=2
  9300                           global __ptext1034
  9301  1587                     __ptext1034:
  9302                           
  9303 ;; *************** function _ser_isrx *****************
  9304 ;; Defined at:
  9305 ;;		line 45 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;		None
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;		None
  9310 ;; Return value:  Size  Location     Type
  9311 ;;		None               void
  9312 ;; Registers used:
  9313 ;;		wreg, status,2, status,0
  9314 ;; Tracked objects:
  9315 ;;		On entry : 0/0
  9316 ;;		On exit  : 0/0
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9319 ;;      Params:         0       0       0       0       0
  9320 ;;      Locals:         0       0       0       0       0
  9321 ;;      Temps:          0       0       0       0       0
  9322 ;;      Totals:         0       0       0       0       0
  9323 ;;Total ram usage:        0 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; Hardware stack levels required when called:    3
  9326 ;; This function calls:
  9327 ;;		Nothing
  9328 ;; This function is called by:
  9329 ;;		_ser_getch
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           psect	text1034
  9333                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  9334                           	line	45
  9335                           	global	__size_of_ser_isrx
  9336  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  9337                           	
  9338  1587                     _ser_isrx:	
  9339                           	opt	stack 1
  9340                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  9341                           	line	46
  9342                           	
  9343  1587                     l10615:	
  9344                           ;ser.c: 46: if(OERR) {
  9345  1587  1283               	bcf	status, 5	;RP0=0, select bank0
  9346  1588  1303               	bcf	status, 6	;RP1=0, select bank0
  9347  1589  1C98               	btfss	(193/8),(193)&7
  9348  158A  2D8C               	goto	u3921
  9349  158B  2D8D               	goto	u3920
  9350  158C                     u3921:
  9351  158C  2D92               	goto	l10623
  9352  158D                     u3920:
  9353                           	line	47
  9354                           	
  9355  158D                     l10617:	
  9356                           ;ser.c: 47: CREN = 0;
  9357  158D  1218               	bcf	(196/8),(196)&7
  9358                           	line	48
  9359                           ;ser.c: 48: CREN = 1;
  9360  158E  1618               	bsf	(196/8),(196)&7
  9361                           	line	49
  9362                           	
  9363  158F                     l10619:	
  9364                           ;ser.c: 49: return 0;
  9365  158F  1003               	clrc
  9366                           	
  9367  1590  2D9F               	goto	l6734
  9368                           	
  9369  1591                     l10621:	
  9370  1591  2D9F               	goto	l6734
  9371                           	line	50
  9372                           	
  9373  1592                     l6733:	
  9374                           	line	51
  9375                           	
  9376  1592                     l10623:	
  9377                           ;ser.c: 50: }
  9378                           ;ser.c: 51: return (rxiptr!=rxoptr);
  9379  1592  1683               	bsf	status, 5	;RP0=1, select bank1
  9380  1593  1303               	bcf	status, 6	;RP1=0, select bank1
  9381  1594  084E               	movf	(_rxiptr)^080h,w	;volatile
  9382  1595  064F               	xorwf	(_rxoptr)^080h,w	;volatile
  9383  1596  1D03               	skipz
  9384  1597  2D99               	goto	u3931
  9385  1598  2D9A               	goto	u3930
  9386  1599                     u3931:
  9387  1599  2D9C               	goto	l10627
  9388  159A                     u3930:
  9389                           	
  9390  159A                     l10625:	
  9391  159A  1003               	clrc
  9392                           	
  9393  159B  2D9F               	goto	l6734
  9394                           	
  9395  159C                     l10299:	
  9396                           	
  9397  159C                     l10627:	
  9398  159C  1403               	setc
  9399                           	
  9400  159D  2D9F               	goto	l6734
  9401                           	
  9402  159E                     l10301:	
  9403  159E  2D9F               	goto	l6734
  9404                           	
  9405  159F                     l10629:	
  9406                           	line	52
  9407                           	
  9408  159F                     l6734:	
  9409  159F  0008               	return
  9410                           	opt stack 0
  9411                           GLOBAL	__end_of_ser_isrx
  9412  15A0                     	__end_of_ser_isrx:
  9413 ;; =============== function _ser_isrx ends ============
  9414                           
  9415                           	signat	_ser_isrx,88
  9416                           	global	_spi_transfer
  9417                           psect	text1035,local,class=CODE,delta=2
  9418                           global __ptext1035
  9419  1533                     __ptext1035:
  9420                           
  9421 ;; *************** function _spi_transfer *****************
  9422 ;; Defined at:
  9423 ;;		line 34 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;  data            1    wreg     unsigned char 
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;  data            1    2[BANK0 ] unsigned char 
  9428 ;;  temp            1    1[BANK0 ] unsigned char 
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      unsigned char 
  9431 ;; Registers used:
  9432 ;;		wreg
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9438 ;;      Params:         0       0       0       0       0
  9439 ;;      Locals:         0       2       0       0       0
  9440 ;;      Temps:          0       1       0       0       0
  9441 ;;      Totals:         0       3       0       0       0
  9442 ;;Total ram usage:        3 bytes
  9443 ;; Hardware stack levels used:    1
  9444 ;; Hardware stack levels required when called:    3
  9445 ;; This function calls:
  9446 ;;		Nothing
  9447 ;; This function is called by:
  9448 ;;		_rotate
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           psect	text1035
  9452                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\steppermotor.c"
  9453                           	line	34
  9454                           	global	__size_of_spi_transfer
  9455  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  9456                           	
  9457  1533                     _spi_transfer:	
  9458                           	opt	stack 3
  9459                           ; Regs used in _spi_transfer: [wreg]
  9460                           ;spi_transfer@data stored from wreg
  9461  1533  1283               	bcf	status, 5	;RP0=0, select bank0
  9462  1534  1303               	bcf	status, 6	;RP1=0, select bank0
  9463  1535  00A2               	movwf	(spi_transfer@data)
  9464                           	line	35
  9465                           	
  9466  1536                     l10501:	
  9467                           ;steppermotor.c: 35: unsigned char temp = 0;
  9468  1536  01A1               	clrf	(spi_transfer@temp)
  9469                           	line	37
  9470                           ;steppermotor.c: 37: SSPIF = 0;
  9471  1537  118C               	bcf	(99/8),(99)&7
  9472                           	line	38
  9473                           	
  9474  1538                     l10503:	
  9475                           ;steppermotor.c: 38: SSPBUF = data;
  9476  1538  0822               	movf	(spi_transfer@data),w
  9477  1539  0093               	movwf	(19)	;volatile
  9478                           	line	40
  9479                           ;steppermotor.c: 40: while (SSPIF == 0);
  9480  153A  2D3B               	goto	l3711
  9481                           	
  9482  153B                     l3712:	
  9483                           	
  9484  153B                     l3711:	
  9485  153B  1D8C               	btfss	(99/8),(99)&7
  9486  153C  2D3E               	goto	u3721
  9487  153D  2D3F               	goto	u3720
  9488  153E                     u3721:
  9489  153E  2D3B               	goto	l3711
  9490  153F                     u3720:
  9491  153F  2D40               	goto	l10505
  9492                           	
  9493  1540                     l3713:	
  9494                           	line	41
  9495                           	
  9496  1540                     l10505:	
  9497                           ;steppermotor.c: 41: temp = SSPBUF;
  9498  1540  0813               	movf	(19),w	;volatile
  9499  1541  00A0               	movwf	(??_spi_transfer+0)+0
  9500  1542  0820               	movf	(??_spi_transfer+0)+0,w
  9501  1543  00A1               	movwf	(spi_transfer@temp)
  9502                           	line	42
  9503                           	
  9504  1544                     l10507:	
  9505                           ;steppermotor.c: 42: SSPIF = 0;
  9506  1544  118C               	bcf	(99/8),(99)&7
  9507  1545  2D46               	goto	l3714
  9508                           	line	44
  9509                           	
  9510  1546                     l10509:	
  9511                           	line	45
  9512                           ;steppermotor.c: 44: return temp;
  9513                           ;	Return value of _spi_transfer is never used
  9514                           	
  9515  1546                     l3714:	
  9516  1546  0008               	return
  9517                           	opt stack 0
  9518                           GLOBAL	__end_of_spi_transfer
  9519  1547                     	__end_of_spi_transfer:
  9520 ;; =============== function _spi_transfer ends ============
  9521                           
  9522                           	signat	_spi_transfer,4217
  9523                           	global	_Menu
  9524                           psect	text1036,local,class=CODE,delta=2
  9525                           global __ptext1036
  9526  095B                     __ptext1036:
  9527                           
  9528 ;; *************** function _Menu *****************
  9529 ;; Defined at:
  9530 ;;		line 181 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  BTN_input       1    wreg     unsigned char 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  BTN_input       1    0[BANK0 ] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      unsigned char 
  9537 ;; Registers used:
  9538 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9544 ;;      Params:         0       0       0       0       0
  9545 ;;      Locals:         0       1       0       0       0
  9546 ;;      Temps:          0       0       0       0       0
  9547 ;;      Totals:         0       1       0       0       0
  9548 ;;Total ram usage:        1 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    3
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_main
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           psect	text1036
  9558                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
  9559                           	line	181
  9560                           	global	__size_of_Menu
  9561  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  9562                           	
  9563  095B                     _Menu:	
  9564                           	opt	stack 4
  9565                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  9566                           ;Menu@BTN_input stored from wreg
  9567  095B  1283               	bcf	status, 5	;RP0=0, select bank0
  9568  095C  1303               	bcf	status, 6	;RP1=0, select bank0
  9569  095D  00A0               	movwf	(Menu@BTN_input)
  9570                           	line	182
  9571                           	
  9572  095E                     l10477:	
  9573                           ;HMI.c: 182: switch (BTN_input)
  9574  095E  298D               	goto	l10495
  9575                           	line	184
  9576                           ;HMI.c: 183: {
  9577                           ;HMI.c: 184: case 1:
  9578                           	
  9579  095F                     l4539:	
  9580                           	line	186
  9581                           ;HMI.c: 186: break;
  9582  095F  299F               	goto	l10497
  9583                           	line	187
  9584                           ;HMI.c: 187: case 2:
  9585                           	
  9586  0960                     l4541:	
  9587                           	line	189
  9588                           ;HMI.c: 189: break;
  9589  0960  299F               	goto	l10497
  9590                           	line	190
  9591                           ;HMI.c: 190: case 3:
  9592                           	
  9593  0961                     l4542:	
  9594                           	line	191
  9595                           	
  9596  0961                     l10479:	
  9597                           ;HMI.c: 191: pos--;
  9598  0961  30FF               	movlw	low(-1)
  9599  0962  1683               	bsf	status, 5	;RP0=1, select bank1
  9600  0963  1303               	bcf	status, 6	;RP1=0, select bank1
  9601  0964  07BA               	addwf	(_pos)^080h,f
  9602  0965  1803               	skipnc
  9603  0966  0ABB               	incf	(_pos+1)^080h,f
  9604  0967  30FF               	movlw	high(-1)
  9605  0968  07BB               	addwf	(_pos+1)^080h,f
  9606                           	line	192
  9607                           	
  9608  0969                     l10481:	
  9609                           ;HMI.c: 192: if (pos < 0)
  9610  0969  1FBB               	btfss	(_pos+1)^080h,7
  9611  096A  296C               	goto	u3701
  9612  096B  296D               	goto	u3700
  9613  096C                     u3701:
  9614  096C  299F               	goto	l10497
  9615  096D                     u3700:
  9616                           	line	193
  9617                           	
  9618  096D                     l10483:	
  9619                           ;HMI.c: 193: pos = 6 - 1;
  9620  096D  3005               	movlw	low(05h)
  9621  096E  00BA               	movwf	(_pos)^080h
  9622  096F  3000               	movlw	high(05h)
  9623  0970  00BB               	movwf	((_pos)^080h)+1
  9624  0971  299F               	goto	l10497
  9625                           	
  9626  0972                     l4543:	
  9627                           	line	195
  9628                           ;HMI.c: 195: break;
  9629  0972  299F               	goto	l10497
  9630                           	line	196
  9631                           ;HMI.c: 196: case 4:
  9632                           	
  9633  0973                     l4544:	
  9634                           	line	197
  9635                           	
  9636  0973                     l10485:	
  9637                           ;HMI.c: 197: pos++;
  9638  0973  3001               	movlw	low(01h)
  9639  0974  1683               	bsf	status, 5	;RP0=1, select bank1
  9640  0975  1303               	bcf	status, 6	;RP1=0, select bank1
  9641  0976  07BA               	addwf	(_pos)^080h,f
  9642  0977  1803               	skipnc
  9643  0978  0ABB               	incf	(_pos+1)^080h,f
  9644  0979  3000               	movlw	high(01h)
  9645  097A  07BB               	addwf	(_pos+1)^080h,f
  9646                           	line	198
  9647                           ;HMI.c: 198: if (pos == 6)
  9648  097B  3006               	movlw	06h
  9649  097C  063A               	xorwf	(_pos)^080h,w
  9650  097D  043B               	iorwf	(_pos+1)^080h,w
  9651  097E  1D03               	skipz
  9652  097F  2981               	goto	u3711
  9653  0980  2982               	goto	u3710
  9654  0981                     u3711:
  9655  0981  299F               	goto	l10497
  9656  0982                     u3710:
  9657                           	line	199
  9658                           	
  9659  0982                     l10487:	
  9660                           ;HMI.c: 199: pos = 0;
  9661  0982  01BA               	clrf	(_pos)^080h
  9662  0983  01BB               	clrf	(_pos+1)^080h
  9663  0984  299F               	goto	l10497
  9664                           	
  9665  0985                     l4545:	
  9666                           	line	201
  9667                           ;HMI.c: 201: break;
  9668  0985  299F               	goto	l10497
  9669                           	line	202
  9670                           ;HMI.c: 202: case 5:
  9671                           	
  9672  0986                     l4546:	
  9673                           	line	203
  9674                           	
  9675  0986                     l10489:	
  9676                           ;HMI.c: 203: return pos;
  9677  0986  1683               	bsf	status, 5	;RP0=1, select bank1
  9678  0987  1303               	bcf	status, 6	;RP1=0, select bank1
  9679  0988  083A               	movf	(_pos)^080h,w
  9680  0989  29A1               	goto	l4547
  9681                           	
  9682  098A                     l10491:	
  9683  098A  29A1               	goto	l4547
  9684                           	line	206
  9685                           ;HMI.c: 206: default:
  9686                           	
  9687  098B                     l4548:	
  9688                           	line	208
  9689                           ;HMI.c: 208: break;
  9690  098B  299F               	goto	l10497
  9691                           	line	209
  9692                           	
  9693  098C                     l10493:	
  9694                           ;HMI.c: 209: }
  9695  098C  299F               	goto	l10497
  9696                           	line	182
  9697                           	
  9698  098D                     l4538:	
  9699                           	
  9700  098D                     l10495:	
  9701  098D  1283               	bcf	status, 5	;RP0=0, select bank0
  9702  098E  0820               	movf	(Menu@BTN_input),w
  9703                           	; Switch size 1, requested type "space"
  9704                           ; Number of cases is 5, Range of values is 1 to 5
  9705                           ; switch strategies available:
  9706                           ; Name         Instructions Cycles
  9707                           ; simple_byte           16     9 (average)
  9708                           ; direct_byte           26    11 (fixed)
  9709                           ; jumptable            263     9 (fixed)
  9710                           ;	Chosen strategy is simple_byte
  9711                           
  9712                           	opt asmopt_off
  9713  098F  3A01               	xorlw	1^0	; case 1
  9714  0990  1903               	skipnz
  9715  0991  299F               	goto	l10497
  9716  0992  3A03               	xorlw	2^1	; case 2
  9717  0993  1903               	skipnz
  9718  0994  299F               	goto	l10497
  9719  0995  3A01               	xorlw	3^2	; case 3
  9720  0996  1903               	skipnz
  9721  0997  2961               	goto	l10479
  9722  0998  3A07               	xorlw	4^3	; case 4
  9723  0999  1903               	skipnz
  9724  099A  2973               	goto	l10485
  9725  099B  3A01               	xorlw	5^4	; case 5
  9726  099C  1903               	skipnz
  9727  099D  2986               	goto	l10489
  9728  099E  299F               	goto	l10497
  9729                           	opt asmopt_on
  9730                           
  9731                           	line	209
  9732                           	
  9733  099F                     l4540:	
  9734                           	line	210
  9735                           	
  9736  099F                     l10497:	
  9737                           ;HMI.c: 210: return 255;
  9738  099F  30FF               	movlw	(0FFh)
  9739  09A0  29A1               	goto	l4547
  9740                           	
  9741  09A1                     l10499:	
  9742                           	line	211
  9743                           	
  9744  09A1                     l4547:	
  9745  09A1  0008               	return
  9746                           	opt stack 0
  9747                           GLOBAL	__end_of_Menu
  9748  09A2                     	__end_of_Menu:
  9749 ;; =============== function _Menu ends ============
  9750                           
  9751                           	signat	_Menu,4217
  9752                           	global	_ser_putch
  9753                           psect	text1037,local,class=CODE,delta=2
  9754                           global __ptext1037
  9755  15A0                     __ptext1037:
  9756                           
  9757 ;; *************** function _ser_putch *****************
  9758 ;; Defined at:
  9759 ;;		line 70 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  c               1    wreg     unsigned char 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;  c               1    1[BANK0 ] unsigned char 
  9764 ;; Return value:  Size  Location     Type
  9765 ;;		None               void
  9766 ;; Registers used:
  9767 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9773 ;;      Params:         0       0       0       0       0
  9774 ;;      Locals:         0       1       0       0       0
  9775 ;;      Temps:          0       1       0       0       0
  9776 ;;      Totals:         0       2       0       0       0
  9777 ;;Total ram usage:        2 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; Hardware stack levels required when called:    3
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_ChargeMode
  9784 ;;		_robo_init
  9785 ;;		_robot_read
  9786 ;;		_robotMove
  9787 ;;		_robotTurn
  9788 ;;		_ser_puts
  9789 ;;		_ser_puts2
  9790 ;;		_ser_puthex
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           psect	text1037
  9794                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  9795                           	line	70
  9796                           	global	__size_of_ser_putch
  9797  0026                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  9798                           	
  9799  15A0                     _ser_putch:	
  9800                           	opt	stack 3
  9801                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  9802                           ;ser_putch@c stored from wreg
  9803  15A0  1283               	bcf	status, 5	;RP0=0, select bank0
  9804  15A1  1303               	bcf	status, 6	;RP1=0, select bank0
  9805  15A2  00A1               	movwf	(ser_putch@c)
  9806                           	line	71
  9807                           	
  9808  15A3                     l10465:	
  9809                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  9810  15A3  2DA5               	goto	l10467
  9811                           	
  9812  15A4                     l6744:	
  9813                           	line	72
  9814                           ;ser.c: 72: continue;
  9815  15A4  2DA5               	goto	l10467
  9816                           	
  9817  15A5                     l6743:	
  9818                           	line	71
  9819                           	
  9820  15A5                     l10467:	
  9821  15A5  1283               	bcf	status, 5	;RP0=0, select bank0
  9822  15A6  086F               	movf	(_txiptr),w	;volatile
  9823  15A7  3E01               	addlw	01h
  9824  15A8  390F               	andlw	0Fh
  9825  15A9  1683               	bsf	status, 5	;RP0=1, select bank1
  9826  15AA  1303               	bcf	status, 6	;RP1=0, select bank1
  9827  15AB  0654               	xorwf	(_txoptr)^080h,w	;volatile
  9828  15AC  1903               	skipnz
  9829  15AD  2DAF               	goto	u3691
  9830  15AE  2DB0               	goto	u3690
  9831  15AF                     u3691:
  9832  15AF  2DA5               	goto	l10467
  9833  15B0                     u3690:
  9834                           	
  9835  15B0                     l6745:	
  9836                           	line	73
  9837                           ;ser.c: 73: GIE=0;
  9838  15B0  138B               	bcf	(95/8),(95)&7
  9839                           	line	74
  9840                           	
  9841  15B1                     l10469:	
  9842                           ;ser.c: 74: txfifo[txiptr] = c;
  9843  15B1  1283               	bcf	status, 5	;RP0=0, select bank0
  9844  15B2  1303               	bcf	status, 6	;RP1=0, select bank0
  9845  15B3  0821               	movf	(ser_putch@c),w
  9846  15B4  00A0               	movwf	(??_ser_putch+0)+0
  9847  15B5  086F               	movf	(_txiptr),w
  9848  15B6  3EA0               	addlw	_txfifo&0ffh
  9849  15B7  0084               	movwf	fsr0
  9850  15B8  0820               	movf	(??_ser_putch+0)+0,w
  9851  15B9  1783               	bsf	status, 7	;select IRP bank3
  9852  15BA  0080               	movwf	indf
  9853                           	line	75
  9854                           	
  9855  15BB                     l10471:	
  9856                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  9857  15BB  086F               	movf	(_txiptr),w	;volatile
  9858  15BC  3E01               	addlw	01h
  9859  15BD  390F               	andlw	0Fh
  9860  15BE  00A0               	movwf	(??_ser_putch+0)+0
  9861  15BF  0820               	movf	(??_ser_putch+0)+0,w
  9862  15C0  00EF               	movwf	(_txiptr)	;volatile
  9863                           	line	76
  9864                           	
  9865  15C1                     l10473:	
  9866                           ;ser.c: 76: TXIE=1;
  9867  15C1  1683               	bsf	status, 5	;RP0=1, select bank1
  9868  15C2  1303               	bcf	status, 6	;RP1=0, select bank1
  9869  15C3  160C               	bsf	(1124/8)^080h,(1124)&7
  9870                           	line	77
  9871                           	
  9872  15C4                     l10475:	
  9873                           ;ser.c: 77: GIE=1;
  9874  15C4  178B               	bsf	(95/8),(95)&7
  9875                           	line	78
  9876                           	
  9877  15C5                     l6746:	
  9878  15C5  0008               	return
  9879                           	opt stack 0
  9880                           GLOBAL	__end_of_ser_putch
  9881  15C6                     	__end_of_ser_putch:
  9882 ;; =============== function _ser_putch ends ============
  9883                           
  9884                           	signat	_ser_putch,4216
  9885                           	global	_ser_init
  9886                           psect	text1038,local,class=CODE,delta=2
  9887                           global __ptext1038
  9888  16F4                     __ptext1038:
  9889                           
  9890 ;; *************** function _ser_init *****************
  9891 ;; Defined at:
  9892 ;;		line 113 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  9893 ;; Parameters:    Size  Location     Type
  9894 ;;		None
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;		None
  9897 ;; Return value:  Size  Location     Type
  9898 ;;		None               void
  9899 ;; Registers used:
  9900 ;;		wreg, status,2, status,0
  9901 ;; Tracked objects:
  9902 ;;		On entry : 0/0
  9903 ;;		On exit  : 0/0
  9904 ;;		Unchanged: 0/0
  9905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9906 ;;      Params:         0       0       0       0       0
  9907 ;;      Locals:         0       0       0       0       0
  9908 ;;      Temps:          0       1       0       0       0
  9909 ;;      Totals:         0       1       0       0       0
  9910 ;;Total ram usage:        1 bytes
  9911 ;; Hardware stack levels used:    1
  9912 ;; Hardware stack levels required when called:    3
  9913 ;; This function calls:
  9914 ;;		Nothing
  9915 ;; This function is called by:
  9916 ;;		_init
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           psect	text1038
  9920                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\ser.c"
  9921                           	line	113
  9922                           	global	__size_of_ser_init
  9923  002E                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  9924                           	
  9925  16F4                     _ser_init:	
  9926                           	opt	stack 3
  9927                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  9928                           	line	114
  9929                           	
  9930  16F4                     l10439:	
  9931                           ;ser.c: 114: TRISC |= 0b10000000;
  9932  16F4  1683               	bsf	status, 5	;RP0=1, select bank1
  9933  16F5  1303               	bcf	status, 6	;RP1=0, select bank1
  9934  16F6  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  9935                           	line	115
  9936                           	
  9937  16F7                     l10441:	
  9938                           ;ser.c: 115: TRISC &= 0b10111111;
  9939  16F7  30BF               	movlw	(0BFh)
  9940  16F8  1283               	bcf	status, 5	;RP0=0, select bank0
  9941  16F9  1303               	bcf	status, 6	;RP1=0, select bank0
  9942  16FA  00A0               	movwf	(??_ser_init+0)+0
  9943  16FB  0820               	movf	(??_ser_init+0)+0,w
  9944  16FC  1683               	bsf	status, 5	;RP0=1, select bank1
  9945  16FD  1303               	bcf	status, 6	;RP1=0, select bank1
  9946  16FE  0587               	andwf	(135)^080h,f	;volatile
  9947                           	line	116
  9948                           	
  9949  16FF                     l10443:	
  9950                           ;ser.c: 116: BRGH=1;
  9951  16FF  1518               	bsf	(1218/8)^080h,(1218)&7
  9952                           	line	118
  9953                           	
  9954  1700                     l10445:	
  9955                           ;ser.c: 118: SPBRG=20;
  9956  1700  3014               	movlw	(014h)
  9957  1701  0099               	movwf	(153)^080h	;volatile
  9958                           	line	121
  9959                           	
  9960  1702                     l10447:	
  9961                           ;ser.c: 121: TX9=0;
  9962  1702  1318               	bcf	(1222/8)^080h,(1222)&7
  9963                           	line	122
  9964                           	
  9965  1703                     l10449:	
  9966                           ;ser.c: 122: RX9=0;
  9967  1703  1283               	bcf	status, 5	;RP0=0, select bank0
  9968  1704  1303               	bcf	status, 6	;RP1=0, select bank0
  9969  1705  1318               	bcf	(198/8),(198)&7
  9970                           	line	124
  9971                           	
  9972  1706                     l10451:	
  9973                           ;ser.c: 124: SYNC=0;
  9974  1706  1683               	bsf	status, 5	;RP0=1, select bank1
  9975  1707  1303               	bcf	status, 6	;RP1=0, select bank1
  9976  1708  1218               	bcf	(1220/8)^080h,(1220)&7
  9977                           	line	125
  9978                           	
  9979  1709                     l10453:	
  9980                           ;ser.c: 125: SPEN=1;
  9981  1709  1283               	bcf	status, 5	;RP0=0, select bank0
  9982  170A  1303               	bcf	status, 6	;RP1=0, select bank0
  9983  170B  1798               	bsf	(199/8),(199)&7
  9984                           	line	126
  9985                           	
  9986  170C                     l10455:	
  9987                           ;ser.c: 126: CREN=1;
  9988  170C  1618               	bsf	(196/8),(196)&7
  9989                           	line	127
  9990                           	
  9991  170D                     l10457:	
  9992                           ;ser.c: 127: TXIE=0;
  9993  170D  1683               	bsf	status, 5	;RP0=1, select bank1
  9994  170E  1303               	bcf	status, 6	;RP1=0, select bank1
  9995  170F  120C               	bcf	(1124/8)^080h,(1124)&7
  9996                           	line	128
  9997                           	
  9998  1710                     l10459:	
  9999                           ;ser.c: 128: RCIE=1;
 10000  1710  168C               	bsf	(1125/8)^080h,(1125)&7
 10001                           	line	129
 10002                           	
 10003  1711                     l10461:	
 10004                           ;ser.c: 129: TXEN=1;
 10005  1711  1698               	bsf	(1221/8)^080h,(1221)&7
 10006                           	line	132
 10007                           	
 10008  1712                     l10463:	
 10009                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 10010  1712  3000               	movlw	(0)
 10011  1713  00D4               	movwf	(_txoptr)^080h	;volatile
 10012  1714  1283               	bcf	status, 5	;RP0=0, select bank0
 10013  1715  1303               	bcf	status, 6	;RP1=0, select bank0
 10014  1716  00EF               	movwf	(_txiptr)	;volatile
 10015  1717  1683               	bsf	status, 5	;RP0=1, select bank1
 10016  1718  1303               	bcf	status, 6	;RP1=0, select bank1
 10017  1719  00CF               	movwf	(_rxoptr)^080h	;volatile
 10018  171A  1283               	bcf	status, 5	;RP0=0, select bank0
 10019  171B  1303               	bcf	status, 6	;RP1=0, select bank0
 10020  171C  00A0               	movwf	(??_ser_init+0)+0
 10021  171D  0820               	movf	(??_ser_init+0)+0,w
 10022  171E  1683               	bsf	status, 5	;RP0=1, select bank1
 10023  171F  1303               	bcf	status, 6	;RP1=0, select bank1
 10024  1720  00CE               	movwf	(_rxiptr)^080h	;volatile
 10025                           	line	133
 10026                           	
 10027  1721                     l6768:	
 10028  1721  0008               	return
 10029                           	opt stack 0
 10030                           GLOBAL	__end_of_ser_init
 10031  1722                     	__end_of_ser_init:
 10032 ;; =============== function _ser_init ends ============
 10033                           
 10034                           	signat	_ser_init,88
 10035                           	global	_adc_read
 10036                           psect	text1039,local,class=CODE,delta=2
 10037                           global __ptext1039
 10038  15C6                     __ptext1039:
 10039                           
 10040 ;; *************** function _adc_read *****************
 10041 ;; Defined at:
 10042 ;;		line 61 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;		None
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  2    0[BANK0 ] unsigned int 
 10049 ;; Registers used:
 10050 ;;		wreg, status,2, status,0
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10056 ;;      Params:         0       2       0       0       0
 10057 ;;      Locals:         0       2       0       0       0
 10058 ;;      Temps:          0       2       0       0       0
 10059 ;;      Totals:         0       6       0       0       0
 10060 ;;Total ram usage:        6 bytes
 10061 ;; Hardware stack levels used:    1
 10062 ;; Hardware stack levels required when called:    3
 10063 ;; This function calls:
 10064 ;;		Nothing
 10065 ;; This function is called by:
 10066 ;;		_adc_read_channel
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           psect	text1039
 10070                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
 10071                           	line	61
 10072                           	global	__size_of_adc_read
 10073  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 10074                           	
 10075  15C6                     _adc_read:	
 10076                           	opt	stack 0
 10077                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 10078                           	line	64
 10079                           	
 10080  15C6                     l10311:	
 10081                           ;adc.c: 62: volatile unsigned int adc_value;
 10082                           ;adc.c: 64: ADRESH = 0;
 10083  15C6  1283               	bcf	status, 5	;RP0=0, select bank0
 10084  15C7  1303               	bcf	status, 6	;RP1=0, select bank0
 10085  15C8  019E               	clrf	(30)	;volatile
 10086                           	line	66
 10087                           	
 10088  15C9                     l10313:	
 10089                           ;adc.c: 66: GO = 1;
 10090  15C9  151F               	bsf	(250/8),(250)&7
 10091                           	line	67
 10092                           ;adc.c: 67: while(GO) continue;
 10093  15CA  2DCB               	goto	l703
 10094                           	
 10095  15CB                     l704:	
 10096                           	
 10097  15CB                     l703:	
 10098  15CB  191F               	btfsc	(250/8),(250)&7
 10099  15CC  2DCE               	goto	u3481
 10100  15CD  2DCF               	goto	u3480
 10101  15CE                     u3481:
 10102  15CE  2DCB               	goto	l703
 10103  15CF                     u3480:
 10104                           	
 10105  15CF                     l705:	
 10106                           	line	68
 10107                           # 68 "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
 10108  15CF  0000               nop ;#
 10109                           	line	69
 10110                           # 69 "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
 10111  15D0  0000               nop ;#
 10112                           	line	70
 10113                           # 70 "H:\Aldnoah.Zero.git\trunk\Assignment3\adc.c"
 10114  15D1  0000               nop ;#
 10115                           psect	text1039
 10116                           	line	73
 10117                           	
 10118  15D2                     l10315:	
 10119                           ;adc.c: 73: adc_value = ADRESH;
 10120  15D2  1283               	bcf	status, 5	;RP0=0, select bank0
 10121  15D3  1303               	bcf	status, 6	;RP1=0, select bank0
 10122  15D4  081E               	movf	(30),w	;volatile
 10123  15D5  00A2               	movwf	(??_adc_read+0)+0
 10124  15D6  01A3               	clrf	(??_adc_read+0)+0+1
 10125  15D7  0822               	movf	0+(??_adc_read+0)+0,w
 10126  15D8  00A4               	movwf	(adc_read@adc_value)	;volatile
 10127  15D9  0823               	movf	1+(??_adc_read+0)+0,w
 10128  15DA  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 10129                           	line	74
 10130                           ;adc.c: 74: adc_value <<= 1;
 10131  15DB  3001               	movlw	01h
 10132                           	
 10133  15DC                     u3495:
 10134  15DC  1003               	clrc
 10135  15DD  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 10136  15DE  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 10137  15DF  3EFF               	addlw	-1
 10138  15E0  1D03               	skipz
 10139  15E1  2DDC               	goto	u3495
 10140                           	line	75
 10141                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
 10142  15E2  1683               	bsf	status, 5	;RP0=1, select bank1
 10143  15E3  1303               	bcf	status, 6	;RP1=0, select bank1
 10144  15E4  081E               	movf	(158)^080h,w	;volatile
 10145                           	line	78
 10146                           	
 10147  15E5                     l10317:	
 10148                           ;adc.c: 78: return (adc_value);
 10149  15E5  1283               	bcf	status, 5	;RP0=0, select bank0
 10150  15E6  1303               	bcf	status, 6	;RP1=0, select bank0
 10151  15E7  0825               	movf	(adc_read@adc_value+1),w	;volatile
 10152  15E8  01A1               	clrf	(?_adc_read+1)
 10153  15E9  07A1               	addwf	(?_adc_read+1)
 10154  15EA  0824               	movf	(adc_read@adc_value),w	;volatile
 10155  15EB  01A0               	clrf	(?_adc_read)
 10156  15EC  07A0               	addwf	(?_adc_read)
 10157                           
 10158  15ED  2DEE               	goto	l706
 10159                           	
 10160  15EE                     l10319:	
 10161                           	line	79
 10162                           	
 10163  15EE                     l706:	
 10164  15EE  0008               	return
 10165                           	opt stack 0
 10166                           GLOBAL	__end_of_adc_read
 10167  15EF                     	__end_of_adc_read:
 10168 ;; =============== function _adc_read ends ============
 10169                           
 10170                           	signat	_adc_read,90
 10171                           	global	_isr1
 10172                           psect	text1040,local,class=CODE,delta=2
 10173                           global __ptext1040
 10174  071A                     __ptext1040:
 10175                           
 10176 ;; *************** function _isr1 *****************
 10177 ;; Defined at:
 10178 ;;		line 93 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;		None
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;		None
 10183 ;; Return value:  Size  Location     Type
 10184 ;;		None               void
 10185 ;; Registers used:
 10186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10192 ;;      Params:         0       0       0       0       0
 10193 ;;      Locals:         0       0       0       0       0
 10194 ;;      Temps:          5       0       0       0       0
 10195 ;;      Totals:         5       0       0       0       0
 10196 ;;Total ram usage:        5 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; Hardware stack levels required when called:    2
 10199 ;; This function calls:
 10200 ;;		i1___lwmod
 10201 ;;		_ReadButtons
 10202 ;; This function is called by:
 10203 ;;		Interrupt level 1
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           psect	text1040
 10207                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\Main.c"
 10208                           	line	93
 10209                           	global	__size_of_isr1
 10210  00DD                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 10211                           	
 10212  071A                     _isr1:	
 10213                           	opt	stack 0
 10214                           ; Regs used in _isr1: [allreg]
 10215                           psect	intentry,class=CODE,delta=2
 10216                           global __pintentry
 10217  0004                     __pintentry:
 10218                           global interrupt_function
 10219  0004                     interrupt_function:
 10220                           	global saved_w
 10221  007E                     	saved_w	set	btemp+0
 10222  0004  00FE               	movwf	saved_w
 10223  0005  0E03               	swapf	status,w
 10224  0006  00F9               	movwf	(??_isr1+1)
 10225  0007  0804               	movf	fsr0,w
 10226  0008  00FA               	movwf	(??_isr1+2)
 10227  0009  080A               	movf	pclath,w
 10228  000A  00FB               	movwf	(??_isr1+3)
 10229  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 10230  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 10231  000D  087F               	movf	btemp+1,w
 10232  000E  00FC               	movwf	(??_isr1+4)
 10233  000F  120A  118A  2F1A   	ljmp	_isr1
 10234                           psect	text1040
 10235                           	line	97
 10236                           	
 10237  071A                     i1l10347:	
 10238                           ;Main.c: 97: if(TMR0IF)
 10239  071A  1D0B               	btfss	(90/8),(90)&7
 10240  071B  2F1D               	goto	u353_21
 10241  071C  2F1E               	goto	u353_20
 10242  071D                     u353_21:
 10243  071D  2F9F               	goto	i1l10377
 10244  071E                     u353_20:
 10245                           	line	99
 10246                           	
 10247  071E                     i1l10349:	
 10248                           ;Main.c: 98: {
 10249                           ;Main.c: 99: TMR0IF = 0;
 10250  071E  110B               	bcf	(90/8),(90)&7
 10251                           	line	100
 10252                           	
 10253  071F                     i1l10351:	
 10254                           ;Main.c: 100: TMR0 = 100;
 10255  071F  3064               	movlw	(064h)
 10256  0720  0081               	movwf	(1)	;volatile
 10257                           	line	102
 10258                           ;Main.c: 102: RTC_Counter++;
 10259  0721  3001               	movlw	low(01h)
 10260  0722  1683               	bsf	status, 5	;RP0=1, select bank1
 10261  0723  1303               	bcf	status, 6	;RP1=0, select bank1
 10262  0724  07B0               	addwf	(_RTC_Counter)^080h,f	;volatile
 10263  0725  1803               	skipnc
 10264  0726  0AB1               	incf	(_RTC_Counter+1)^080h,f	;volatile
 10265  0727  3000               	movlw	high(01h)
 10266  0728  07B1               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 10267                           	line	104
 10268                           	
 10269  0729                     i1l10353:	
 10270                           ;Main.c: 104: RTC_FLAG_1MS = 1;
 10271  0729  17F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 10272                           	line	105
 10273                           	
 10274  072A                     i1l10355:	
 10275                           ;Main.c: 105: if(RTC_Counter % 10 == 0)
 10276  072A  300A               	movlw	low(0Ah)
 10277  072B  00F2               	movwf	(?i1___lwmod)
 10278  072C  3000               	movlw	high(0Ah)
 10279  072D  00F3               	movwf	((?i1___lwmod))+1
 10280  072E  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10281  072F  01F5               	clrf	1+(?i1___lwmod)+02h
 10282  0730  07F5               	addwf	1+(?i1___lwmod)+02h
 10283  0731  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 10284  0732  01F4               	clrf	0+(?i1___lwmod)+02h
 10285  0733  07F4               	addwf	0+(?i1___lwmod)+02h
 10286                           
 10287  0734  160A  118A  27BC   	fcall	i1___lwmod
              120A  118A         
 10288  0739  0873               	movf	((1+(?i1___lwmod))),w
 10289  073A  0472               	iorwf	((0+(?i1___lwmod))),w
 10290  073B  1D03               	skipz
 10291  073C  2F3E               	goto	u354_21
 10292  073D  2F3F               	goto	u354_20
 10293  073E                     u354_21:
 10294  073E  2F41               	goto	i1l10359
 10295  073F                     u354_20:
 10296                           	line	107
 10297                           	
 10298  073F                     i1l10357:	
 10299                           ;Main.c: 106: {
 10300                           ;Main.c: 107: RTC_FLAG_10MS = 1;
 10301  073F  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
 10302  0740  2F41               	goto	i1l10359
 10303                           	line	110
 10304                           	
 10305  0741                     i1l2207:	
 10306                           	line	111
 10307                           	
 10308  0741                     i1l10359:	
 10309                           ;Main.c: 110: }
 10310                           ;Main.c: 111: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
 10311  0741  3032               	movlw	low(032h)
 10312  0742  00F2               	movwf	(?i1___lwmod)
 10313  0743  3000               	movlw	high(032h)
 10314  0744  00F3               	movwf	((?i1___lwmod))+1
 10315  0745  1683               	bsf	status, 5	;RP0=1, select bank1
 10316  0746  1303               	bcf	status, 6	;RP1=0, select bank1
 10317  0747  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10318  0748  01F5               	clrf	1+(?i1___lwmod)+02h
 10319  0749  07F5               	addwf	1+(?i1___lwmod)+02h
 10320  074A  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 10321  074B  01F4               	clrf	0+(?i1___lwmod)+02h
 10322  074C  07F4               	addwf	0+(?i1___lwmod)+02h
 10323                           
 10324  074D  160A  118A  27BC   	fcall	i1___lwmod
              120A  118A         
 10325  0752  0873               	movf	((1+(?i1___lwmod))),w
 10326  0753  0472               	iorwf	((0+(?i1___lwmod))),w
 10327  0754  1D03               	skipz
 10328  0755  2F57               	goto	u355_21
 10329  0756  2F58               	goto	u355_20
 10330  0757                     u355_21:
 10331  0757  2F5A               	goto	i1l10363
 10332  0758                     u355_20:
 10333                           	
 10334  0758                     i1l10361:	
 10335  0758  1571               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
 10336  0759  2F5A               	goto	i1l10363
 10337                           	
 10338  075A                     i1l2208:	
 10339                           	line	112
 10340                           	
 10341  075A                     i1l10363:	
 10342                           ;Main.c: 112: if(RTC_Counter % 250 == 0)
 10343  075A  30FA               	movlw	low(0FAh)
 10344  075B  00F2               	movwf	(?i1___lwmod)
 10345  075C  3000               	movlw	high(0FAh)
 10346  075D  00F3               	movwf	((?i1___lwmod))+1
 10347  075E  1683               	bsf	status, 5	;RP0=1, select bank1
 10348  075F  1303               	bcf	status, 6	;RP1=0, select bank1
 10349  0760  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10350  0761  01F5               	clrf	1+(?i1___lwmod)+02h
 10351  0762  07F5               	addwf	1+(?i1___lwmod)+02h
 10352  0763  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 10353  0764  01F4               	clrf	0+(?i1___lwmod)+02h
 10354  0765  07F4               	addwf	0+(?i1___lwmod)+02h
 10355                           
 10356  0766  160A  118A  27BC   	fcall	i1___lwmod
              120A  118A         
 10357  076B  0873               	movf	((1+(?i1___lwmod))),w
 10358  076C  0472               	iorwf	((0+(?i1___lwmod))),w
 10359  076D  1D03               	skipz
 10360  076E  2F70               	goto	u356_21
 10361  076F  2F71               	goto	u356_20
 10362  0770                     u356_21:
 10363  0770  2F73               	goto	i1l10367
 10364  0771                     u356_20:
 10365                           	line	115
 10366                           	
 10367  0771                     i1l10365:	
 10368                           ;Main.c: 113: {
 10369                           ;Main.c: 115: RTC_FLAG_250MS = 1;
 10370  0771  1471               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 10371  0772  2F73               	goto	i1l10367
 10372                           	line	117
 10373                           	
 10374  0773                     i1l2209:	
 10375                           	line	118
 10376                           	
 10377  0773                     i1l10367:	
 10378                           ;Main.c: 117: }
 10379                           ;Main.c: 118: if(RTC_Counter % 500 == 0)
 10380  0773  30F4               	movlw	low(01F4h)
 10381  0774  00F2               	movwf	(?i1___lwmod)
 10382  0775  3001               	movlw	high(01F4h)
 10383  0776  00F3               	movwf	((?i1___lwmod))+1
 10384  0777  1683               	bsf	status, 5	;RP0=1, select bank1
 10385  0778  1303               	bcf	status, 6	;RP1=0, select bank1
 10386  0779  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 10387  077A  01F5               	clrf	1+(?i1___lwmod)+02h
 10388  077B  07F5               	addwf	1+(?i1___lwmod)+02h
 10389  077C  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 10390  077D  01F4               	clrf	0+(?i1___lwmod)+02h
 10391  077E  07F4               	addwf	0+(?i1___lwmod)+02h
 10392                           
 10393  077F  160A  118A  27BC   	fcall	i1___lwmod
              120A  118A         
 10394  0784  0873               	movf	((1+(?i1___lwmod))),w
 10395  0785  0472               	iorwf	((0+(?i1___lwmod))),w
 10396  0786  1D03               	skipz
 10397  0787  2F89               	goto	u357_21
 10398  0788  2F8A               	goto	u357_20
 10399  0789                     u357_21:
 10400  0789  2F90               	goto	i1l10373
 10401  078A                     u357_20:
 10402                           	line	120
 10403                           	
 10404  078A                     i1l10369:	
 10405                           ;Main.c: 119: {
 10406                           ;Main.c: 120: RTC_FLAG_500MS = 1;
 10407  078A  14F1               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 10408                           	line	121
 10409                           	
 10410  078B                     i1l10371:	
 10411                           ;Main.c: 121: RB0 ^= 0x01;
 10412  078B  1283               	bcf	status, 5	;RP0=0, select bank0
 10413  078C  1303               	bcf	status, 6	;RP1=0, select bank0
 10414  078D  3001               	movlw	1<<((48)&7)
 10415  078E  0686               	xorwf	((48)/8),f
 10416  078F  2F90               	goto	i1l10373
 10417                           	line	123
 10418                           	
 10419  0790                     i1l2210:	
 10420                           	line	124
 10421                           	
 10422  0790                     i1l10373:	
 10423                           ;Main.c: 123: }
 10424                           ;Main.c: 124: if (buttonPressed == 0)
 10425  0790  08FD               	movf	(_buttonPressed),f
 10426  0791  1D03               	skipz	;volatile
 10427  0792  2F94               	goto	u358_21
 10428  0793  2F95               	goto	u358_20
 10429  0794                     u358_21:
 10430  0794  2F9F               	goto	i1l10377
 10431  0795                     u358_20:
 10432                           	line	127
 10433                           	
 10434  0795                     i1l10375:	
 10435                           ;Main.c: 125: {
 10436                           ;Main.c: 127: buttonPressed = ReadButtons();
 10437  0795  160A  118A  2751   	fcall	_ReadButtons
              120A  118A         
 10438  079A  00F8               	movwf	(??_isr1+0)+0
 10439  079B  0878               	movf	(??_isr1+0)+0,w
 10440  079C  00FD               	movwf	(_buttonPressed)	;volatile
 10441  079D  2F9F               	goto	i1l10377
 10442                           	line	129
 10443                           	
 10444  079E                     i1l2211:	
 10445  079E  2F9F               	goto	i1l10377
 10446                           	line	130
 10447                           	
 10448  079F                     i1l2206:	
 10449                           	line	131
 10450                           	
 10451  079F                     i1l10377:	
 10452                           ;Main.c: 129: }
 10453                           ;Main.c: 130: }
 10454                           ;Main.c: 131: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 10455  079F  1283               	bcf	status, 5	;RP0=0, select bank0
 10456  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
 10457  07A1  1E8C               	btfss	(101/8),(101)&7
 10458  07A2  2FA4               	goto	u359_21
 10459  07A3  2FA5               	goto	u359_20
 10460  07A4                     u359_21:
 10461  07A4  2FC1               	goto	i1l10387
 10462  07A5                     u359_20:
 10463                           	
 10464  07A5                     i1l10379:	
 10465  07A5  081A               	movf	(26),w	;volatile
 10466  07A6  00F8               	movwf	(??_isr1+0)+0
 10467  07A7  1683               	bsf	status, 5	;RP0=1, select bank1
 10468  07A8  1303               	bcf	status, 6	;RP1=0, select bank1
 10469  07A9  084E               	movf	(_rxiptr)^080h,w
 10470  07AA  3EA0               	addlw	_rxfifo&0ffh
 10471  07AB  0084               	movwf	fsr0
 10472  07AC  0878               	movf	(??_isr1+0)+0,w
 10473  07AD  1383               	bcf	status, 7	;select IRP bank1
 10474  07AE  0080               	movwf	indf
 10475                           	
 10476  07AF                     i1l10381:	
 10477  07AF  084E               	movf	(_rxiptr)^080h,w	;volatile
 10478  07B0  3E01               	addlw	01h
 10479  07B1  390F               	andlw	0Fh
 10480  07B2  00F8               	movwf	(??_isr1+0)+0
 10481  07B3  0878               	movf	(??_isr1+0)+0,w
 10482  07B4  00D0               	movwf	(_ser_tmp)^080h
 10483                           	
 10484  07B5                     i1l10383:	
 10485  07B5  0850               	movf	(_ser_tmp)^080h,w
 10486  07B6  064F               	xorwf	(_rxoptr)^080h,w	;volatile
 10487  07B7  1903               	skipnz
 10488  07B8  2FBA               	goto	u360_21
 10489  07B9  2FBB               	goto	u360_20
 10490  07BA                     u360_21:
 10491  07BA  2FC1               	goto	i1l10387
 10492  07BB                     u360_20:
 10493                           	
 10494  07BB                     i1l10385:	
 10495  07BB  0850               	movf	(_ser_tmp)^080h,w
 10496  07BC  00F8               	movwf	(??_isr1+0)+0
 10497  07BD  0878               	movf	(??_isr1+0)+0,w
 10498  07BE  00CE               	movwf	(_rxiptr)^080h	;volatile
 10499  07BF  2FC1               	goto	i1l10387
 10500                           	
 10501  07C0                     i1l2213:	
 10502  07C0  2FC1               	goto	i1l10387
 10503                           	
 10504  07C1                     i1l2212:	
 10505                           	
 10506  07C1                     i1l10387:	
 10507  07C1  1283               	bcf	status, 5	;RP0=0, select bank0
 10508  07C2  1E0C               	btfss	(100/8),(100)&7
 10509  07C3  2FC5               	goto	u361_21
 10510  07C4  2FC6               	goto	u361_20
 10511  07C5                     u361_21:
 10512  07C5  2FEB               	goto	i1l2216
 10513  07C6                     u361_20:
 10514                           	
 10515  07C6                     i1l10389:	
 10516  07C6  1683               	bsf	status, 5	;RP0=1, select bank1
 10517  07C7  1303               	bcf	status, 6	;RP1=0, select bank1
 10518  07C8  1E0C               	btfss	(1124/8)^080h,(1124)&7
 10519  07C9  2FCB               	goto	u362_21
 10520  07CA  2FCC               	goto	u362_20
 10521  07CB                     u362_21:
 10522  07CB  2FEB               	goto	i1l2216
 10523  07CC                     u362_20:
 10524                           	
 10525  07CC                     i1l10391:	
 10526  07CC  0854               	movf	(_txoptr)^080h,w
 10527  07CD  3EA0               	addlw	_txfifo&0ffh
 10528  07CE  0084               	movwf	fsr0
 10529  07CF  1783               	bsf	status, 7	;select IRP bank3
 10530  07D0  0800               	movf	indf,w
 10531  07D1  1283               	bcf	status, 5	;RP0=0, select bank0
 10532  07D2  1303               	bcf	status, 6	;RP1=0, select bank0
 10533  07D3  0099               	movwf	(25)	;volatile
 10534                           	
 10535  07D4                     i1l10393:	
 10536  07D4  3001               	movlw	(01h)
 10537  07D5  00F8               	movwf	(??_isr1+0)+0
 10538  07D6  0878               	movf	(??_isr1+0)+0,w
 10539  07D7  1683               	bsf	status, 5	;RP0=1, select bank1
 10540  07D8  1303               	bcf	status, 6	;RP1=0, select bank1
 10541  07D9  07D4               	addwf	(_txoptr)^080h,f	;volatile
 10542                           	
 10543  07DA                     i1l10395:	
 10544  07DA  300F               	movlw	(0Fh)
 10545  07DB  00F8               	movwf	(??_isr1+0)+0
 10546  07DC  0878               	movf	(??_isr1+0)+0,w
 10547  07DD  05D4               	andwf	(_txoptr)^080h,f	;volatile
 10548                           	
 10549  07DE                     i1l10397:	
 10550  07DE  0854               	movf	(_txoptr)^080h,w	;volatile
 10551  07DF  1283               	bcf	status, 5	;RP0=0, select bank0
 10552  07E0  1303               	bcf	status, 6	;RP1=0, select bank0
 10553  07E1  066F               	xorwf	(_txiptr),w	;volatile
 10554  07E2  1D03               	skipz
 10555  07E3  2FE5               	goto	u363_21
 10556  07E4  2FE6               	goto	u363_20
 10557  07E5                     u363_21:
 10558  07E5  2FEB               	goto	i1l2216
 10559  07E6                     u363_20:
 10560                           	
 10561  07E6                     i1l10399:	
 10562  07E6  1683               	bsf	status, 5	;RP0=1, select bank1
 10563  07E7  1303               	bcf	status, 6	;RP1=0, select bank1
 10564  07E8  120C               	bcf	(1124/8)^080h,(1124)&7
 10565  07E9  2FEB               	goto	i1l2216
 10566                           	
 10567  07EA                     i1l2215:	
 10568  07EA  2FEB               	goto	i1l2216
 10569                           	
 10570  07EB                     i1l2214:	
 10571                           	line	132
 10572                           	
 10573  07EB                     i1l2216:	
 10574  07EB  087C               	movf	(??_isr1+4),w
 10575  07EC  1283               	bcf	status, 5	;RP0=0, select bank0
 10576  07ED  00FF               	movwf	btemp+1
 10577  07EE  087B               	movf	(??_isr1+3),w
 10578  07EF  008A               	movwf	pclath
 10579  07F0  087A               	movf	(??_isr1+2),w
 10580  07F1  0084               	movwf	fsr0
 10581  07F2  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 10582  07F3  0083               	movwf	status
 10583  07F4  0EFE               	swapf	saved_w,f
 10584  07F5  0E7E               	swapf	saved_w,w
 10585  07F6  0009               	retfie
 10586                           	opt stack 0
 10587                           GLOBAL	__end_of_isr1
 10588  07F7                     	__end_of_isr1:
 10589 ;; =============== function _isr1 ends ============
 10590                           
 10591                           	signat	_isr1,88
 10592                           	global	_ReadButtons
 10593                           psect	text1041,local,class=CODE,delta=2
 10594                           global __ptext1041
 10595  1751                     __ptext1041:
 10596                           
 10597 ;; *************** function _ReadButtons *****************
 10598 ;; Defined at:
 10599 ;;		line 141 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;		None
 10602 ;; Auto vars:     Size  Location     Type
 10603 ;;		None
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  1    wreg      unsigned char 
 10606 ;; Registers used:
 10607 ;;		wreg, status,2, status,0, pclath, cstack
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10613 ;;      Params:         0       0       0       0       0
 10614 ;;      Locals:         0       0       0       0       0
 10615 ;;      Temps:          0       0       0       0       0
 10616 ;;      Totals:         0       0       0       0       0
 10617 ;;Total ram usage:        0 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:    1
 10620 ;; This function calls:
 10621 ;;		_Debounce
 10622 ;; This function is called by:
 10623 ;;		_isr1
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           psect	text1041
 10627                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
 10628                           	line	141
 10629                           	global	__size_of_ReadButtons
 10630  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 10631                           	
 10632  1751                     _ReadButtons:	
 10633                           	opt	stack 0
 10634                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 10635                           	line	143
 10636                           	
 10637  1751                     i1l10401:	
 10638                           ;HMI.c: 143: Debounce();
 10639  1751  120A  158A  252F   	fcall	_Debounce
              160A  118A         
 10640                           	line	145
 10641                           	
 10642  1756                     i1l10403:	
 10643                           ;HMI.c: 145: if(UpPressed)
 10644  1756  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 10645  1757  2F59               	goto	u364_21
 10646  1758  2F5A               	goto	u364_20
 10647  1759                     u364_21:
 10648  1759  2F5E               	goto	i1l4530
 10649  175A                     u364_20:
 10650                           	line	147
 10651                           	
 10652  175A                     i1l10405:	
 10653                           ;HMI.c: 146: {
 10654                           ;HMI.c: 147: UpPressed = 0;
 10655  175A  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 10656                           	line	148
 10657                           	
 10658  175B                     i1l10407:	
 10659                           ;HMI.c: 148: return 1;
 10660  175B  3001               	movlw	(01h)
 10661  175C  2F80               	goto	i1l4531
 10662                           	
 10663  175D                     i1l10409:	
 10664  175D  2F80               	goto	i1l4531
 10665                           	line	150
 10666                           	
 10667  175E                     i1l4530:	
 10668                           	line	152
 10669                           ;HMI.c: 150: }
 10670                           ;HMI.c: 152: if(DownPressed)
 10671  175E  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 10672  175F  2F61               	goto	u365_21
 10673  1760  2F62               	goto	u365_20
 10674  1761                     u365_21:
 10675  1761  2F66               	goto	i1l4532
 10676  1762                     u365_20:
 10677                           	line	154
 10678                           	
 10679  1762                     i1l10411:	
 10680                           ;HMI.c: 153: {
 10681                           ;HMI.c: 154: DownPressed = 0;
 10682  1762  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 10683                           	line	155
 10684                           	
 10685  1763                     i1l10413:	
 10686                           ;HMI.c: 155: return 2;
 10687  1763  3002               	movlw	(02h)
 10688  1764  2F80               	goto	i1l4531
 10689                           	
 10690  1765                     i1l10415:	
 10691  1765  2F80               	goto	i1l4531
 10692                           	line	157
 10693                           	
 10694  1766                     i1l4532:	
 10695                           	line	158
 10696                           ;HMI.c: 157: }
 10697                           ;HMI.c: 158: if(LeftPressed)
 10698  1766  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 10699  1767  2F69               	goto	u366_21
 10700  1768  2F6A               	goto	u366_20
 10701  1769                     u366_21:
 10702  1769  2F6E               	goto	i1l4533
 10703  176A                     u366_20:
 10704                           	line	160
 10705                           	
 10706  176A                     i1l10417:	
 10707                           ;HMI.c: 159: {
 10708                           ;HMI.c: 160: LeftPressed = 0;
 10709  176A  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 10710                           	line	161
 10711                           	
 10712  176B                     i1l10419:	
 10713                           ;HMI.c: 161: return 3;
 10714  176B  3003               	movlw	(03h)
 10715  176C  2F80               	goto	i1l4531
 10716                           	
 10717  176D                     i1l10421:	
 10718  176D  2F80               	goto	i1l4531
 10719                           	line	163
 10720                           	
 10721  176E                     i1l4533:	
 10722                           	line	164
 10723                           ;HMI.c: 163: }
 10724                           ;HMI.c: 164: if(RightPressed)
 10725  176E  1DF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 10726  176F  2F71               	goto	u367_21
 10727  1770  2F72               	goto	u367_20
 10728  1771                     u367_21:
 10729  1771  2F76               	goto	i1l4534
 10730  1772                     u367_20:
 10731                           	line	166
 10732                           	
 10733  1772                     i1l10423:	
 10734                           ;HMI.c: 165: {
 10735                           ;HMI.c: 166: RightPressed = 0;
 10736  1772  11F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 10737                           	line	167
 10738                           	
 10739  1773                     i1l10425:	
 10740                           ;HMI.c: 167: return 4;
 10741  1773  3004               	movlw	(04h)
 10742  1774  2F80               	goto	i1l4531
 10743                           	
 10744  1775                     i1l10427:	
 10745  1775  2F80               	goto	i1l4531
 10746                           	line	169
 10747                           	
 10748  1776                     i1l4534:	
 10749                           	line	171
 10750                           ;HMI.c: 169: }
 10751                           ;HMI.c: 171: if(CenterPressed)
 10752  1776  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 10753  1777  2F79               	goto	u368_21
 10754  1778  2F7A               	goto	u368_20
 10755  1779                     u368_21:
 10756  1779  2F7E               	goto	i1l10435
 10757  177A                     u368_20:
 10758                           	line	173
 10759                           	
 10760  177A                     i1l10429:	
 10761                           ;HMI.c: 172: {
 10762                           ;HMI.c: 173: CenterPressed = 0;
 10763  177A  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 10764                           	line	174
 10765                           	
 10766  177B                     i1l10431:	
 10767                           ;HMI.c: 174: return 5;
 10768  177B  3005               	movlw	(05h)
 10769  177C  2F80               	goto	i1l4531
 10770                           	
 10771  177D                     i1l10433:	
 10772  177D  2F80               	goto	i1l4531
 10773                           	line	176
 10774                           	
 10775  177E                     i1l4535:	
 10776                           	line	177
 10777                           	
 10778  177E                     i1l10435:	
 10779                           ;HMI.c: 176: }
 10780                           ;HMI.c: 177: return 0;
 10781  177E  3000               	movlw	(0)
 10782  177F  2F80               	goto	i1l4531
 10783                           	
 10784  1780                     i1l10437:	
 10785                           	line	178
 10786                           	
 10787  1780                     i1l4531:	
 10788  1780  0008               	return
 10789                           	opt stack 0
 10790                           GLOBAL	__end_of_ReadButtons
 10791  1781                     	__end_of_ReadButtons:
 10792 ;; =============== function _ReadButtons ends ============
 10793                           
 10794                           	signat	_ReadButtons,89
 10795                           	global	i1___lwmod
 10796                           psect	text1042,local,class=CODE,delta=2
 10797                           global __ptext1042
 10798  17BC                     __ptext1042:
 10799                           
 10800 ;; *************** function i1___lwmod *****************
 10801 ;; Defined at:
 10802 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;  __lwmod         2    0[COMMON] unsigned int 
 10805 ;;  __lwmod         2    2[COMMON] unsigned int 
 10806 ;; Auto vars:     Size  Location     Type
 10807 ;;  __lwmod         1    5[COMMON] unsigned char 
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  2    0[COMMON] unsigned int 
 10810 ;; Registers used:
 10811 ;;		wreg, status,2, status,0
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10817 ;;      Params:         4       0       0       0       0
 10818 ;;      Locals:         1       0       0       0       0
 10819 ;;      Temps:          1       0       0       0       0
 10820 ;;      Totals:         6       0       0       0       0
 10821 ;;Total ram usage:        6 bytes
 10822 ;; Hardware stack levels used:    1
 10823 ;; This function calls:
 10824 ;;		Nothing
 10825 ;; This function is called by:
 10826 ;;		_isr1
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           psect	text1042
 10830                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10831                           	line	5
 10832                           	global	__size_ofi1___lwmod
 10833  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 10834                           	
 10835  17BC                     i1___lwmod:	
 10836                           	opt	stack 1
 10837                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 10838                           	line	8
 10839                           	
 10840  17BC                     i1l11003:	
 10841  17BC  0873               	movf	(i1___lwmod@divisor+1),w
 10842  17BD  0472               	iorwf	(i1___lwmod@divisor),w
 10843  17BE  1903               	skipnz
 10844  17BF  2FC1               	goto	u485_21
 10845  17C0  2FC2               	goto	u485_20
 10846  17C1                     u485_21:
 10847  17C1  2FF8               	goto	i1l11021
 10848  17C2                     u485_20:
 10849                           	line	9
 10850                           	
 10851  17C2                     i1l11005:	
 10852  17C2  01F7               	clrf	(i1___lwmod@counter)
 10853  17C3  1403               	bsf	status,0
 10854  17C4  0DF7               	rlf	(i1___lwmod@counter),f
 10855                           	line	10
 10856  17C5  2FD2               	goto	i1l11011
 10857                           	
 10858  17C6                     i1l7497:	
 10859                           	line	11
 10860                           	
 10861  17C6                     i1l11007:	
 10862  17C6  3001               	movlw	01h
 10863                           	
 10864  17C7                     u486_25:
 10865  17C7  1003               	clrc
 10866  17C8  0DF2               	rlf	(i1___lwmod@divisor),f
 10867  17C9  0DF3               	rlf	(i1___lwmod@divisor+1),f
 10868  17CA  3EFF               	addlw	-1
 10869  17CB  1D03               	skipz
 10870  17CC  2FC7               	goto	u486_25
 10871                           	line	12
 10872                           	
 10873  17CD                     i1l11009:	
 10874  17CD  3001               	movlw	(01h)
 10875  17CE  00F6               	movwf	(??i1___lwmod+0)+0
 10876  17CF  0876               	movf	(??i1___lwmod+0)+0,w
 10877  17D0  07F7               	addwf	(i1___lwmod@counter),f
 10878  17D1  2FD2               	goto	i1l11011
 10879                           	line	13
 10880                           	
 10881  17D2                     i1l7496:	
 10882                           	line	10
 10883                           	
 10884  17D2                     i1l11011:	
 10885  17D2  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 10886  17D3  2FD5               	goto	u487_21
 10887  17D4  2FD6               	goto	u487_20
 10888  17D5                     u487_21:
 10889  17D5  2FC6               	goto	i1l11007
 10890  17D6                     u487_20:
 10891  17D6  2FD8               	goto	i1l11013
 10892                           	
 10893  17D7                     i1l7498:	
 10894  17D7  2FD8               	goto	i1l11013
 10895                           	line	14
 10896                           	
 10897  17D8                     i1l7499:	
 10898                           	line	15
 10899                           	
 10900  17D8                     i1l11013:	
 10901  17D8  0873               	movf	(i1___lwmod@divisor+1),w
 10902  17D9  0275               	subwf	(i1___lwmod@dividend+1),w
 10903  17DA  1D03               	skipz
 10904  17DB  2FDE               	goto	u488_25
 10905  17DC  0872               	movf	(i1___lwmod@divisor),w
 10906  17DD  0274               	subwf	(i1___lwmod@dividend),w
 10907  17DE                     u488_25:
 10908  17DE  1C03               	skipc
 10909  17DF  2FE1               	goto	u488_21
 10910  17E0  2FE2               	goto	u488_20
 10911  17E1                     u488_21:
 10912  17E1  2FE9               	goto	i1l11017
 10913  17E2                     u488_20:
 10914                           	line	16
 10915                           	
 10916  17E2                     i1l11015:	
 10917  17E2  0872               	movf	(i1___lwmod@divisor),w
 10918  17E3  02F4               	subwf	(i1___lwmod@dividend),f
 10919  17E4  0873               	movf	(i1___lwmod@divisor+1),w
 10920  17E5  1C03               	skipc
 10921  17E6  03F5               	decf	(i1___lwmod@dividend+1),f
 10922  17E7  02F5               	subwf	(i1___lwmod@dividend+1),f
 10923  17E8  2FE9               	goto	i1l11017
 10924                           	
 10925  17E9                     i1l7500:	
 10926                           	line	17
 10927                           	
 10928  17E9                     i1l11017:	
 10929  17E9  3001               	movlw	01h
 10930                           	
 10931  17EA                     u489_25:
 10932  17EA  1003               	clrc
 10933  17EB  0CF3               	rrf	(i1___lwmod@divisor+1),f
 10934  17EC  0CF2               	rrf	(i1___lwmod@divisor),f
 10935  17ED  3EFF               	addlw	-1
 10936  17EE  1D03               	skipz
 10937  17EF  2FEA               	goto	u489_25
 10938                           	line	18
 10939                           	
 10940  17F0                     i1l11019:	
 10941  17F0  3001               	movlw	low(01h)
 10942  17F1  02F7               	subwf	(i1___lwmod@counter),f
 10943  17F2  1D03               	btfss	status,2
 10944  17F3  2FF5               	goto	u490_21
 10945  17F4  2FF6               	goto	u490_20
 10946  17F5                     u490_21:
 10947  17F5  2FD8               	goto	i1l11013
 10948  17F6                     u490_20:
 10949  17F6  2FF8               	goto	i1l11021
 10950                           	
 10951  17F7                     i1l7501:	
 10952  17F7  2FF8               	goto	i1l11021
 10953                           	line	19
 10954                           	
 10955  17F8                     i1l7495:	
 10956                           	line	20
 10957                           	
 10958  17F8                     i1l11021:	
 10959  17F8  0875               	movf	(i1___lwmod@dividend+1),w
 10960  17F9  01F3               	clrf	(?i1___lwmod+1)
 10961  17FA  07F3               	addwf	(?i1___lwmod+1)
 10962  17FB  0874               	movf	(i1___lwmod@dividend),w
 10963  17FC  01F2               	clrf	(?i1___lwmod)
 10964  17FD  07F2               	addwf	(?i1___lwmod)
 10965                           
 10966  17FE  2FFF               	goto	i1l7502
 10967                           	
 10968  17FF                     i1l11023:	
 10969                           	line	21
 10970                           	
 10971  17FF                     i1l7502:	
 10972  17FF  0008               	return
 10973                           	opt stack 0
 10974                           GLOBAL	__end_ofi1___lwmod
 10975  1800                     	__end_ofi1___lwmod:
 10976 ;; =============== function i1___lwmod ends ============
 10977                           
 10978                           	signat	i1___lwmod,90
 10979                           	global	_Debounce
 10980                           psect	text1043,local,class=CODE,delta=2
 10981                           global __ptext1043
 10982  0D2F                     __ptext1043:
 10983                           
 10984 ;; *************** function _Debounce *****************
 10985 ;; Defined at:
 10986 ;;		line 61 in file "H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;		None
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;		None               void
 10993 ;; Registers used:
 10994 ;;		wreg, status,2, status,0
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11000 ;;      Params:         0       0       0       0       0
 11001 ;;      Locals:         0       0       0       0       0
 11002 ;;      Temps:          1       0       0       0       0
 11003 ;;      Totals:         1       0       0       0       0
 11004 ;;Total ram usage:        1 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; This function calls:
 11007 ;;		Nothing
 11008 ;; This function is called by:
 11009 ;;		_ReadButtons
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           psect	text1043
 11013                           	file	"H:\Aldnoah.Zero.git\trunk\Assignment3\HMI.c"
 11014                           	line	61
 11015                           	global	__size_of_Debounce
 11016  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 11017                           	
 11018  0D2F                     _Debounce:	
 11019                           	opt	stack 0
 11020                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 11021                           	line	63
 11022                           	
 11023  0D2F                     i1l10573:	
 11024                           ;HMI.c: 63: if(!RB2)
 11025  0D2F  1283               	bcf	status, 5	;RP0=0, select bank0
 11026  0D30  1303               	bcf	status, 6	;RP1=0, select bank0
 11027  0D31  1906               	btfsc	(50/8),(50)&7
 11028  0D32  2D34               	goto	u377_21
 11029  0D33  2D35               	goto	u377_20
 11030  0D34                     u377_21:
 11031  0D34  2D49               	goto	i1l4512
 11032  0D35                     u377_20:
 11033                           	line	65
 11034                           	
 11035  0D35                     i1l10575:	
 11036                           ;HMI.c: 64: {
 11037                           ;HMI.c: 65: UpDebounceCount++;
 11038  0D35  3001               	movlw	(01h)
 11039  0D36  00F2               	movwf	(??_Debounce+0)+0
 11040  0D37  0872               	movf	(??_Debounce+0)+0,w
 11041  0D38  1683               	bsf	status, 5	;RP0=1, select bank1
 11042  0D39  1303               	bcf	status, 6	;RP1=0, select bank1
 11043  0D3A  07C9               	addwf	(_UpDebounceCount)^080h,f	;volatile
 11044                           	line	66
 11045                           	
 11046  0D3B                     i1l10577:	
 11047                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
 11048  0D3B  300A               	movlw	(0Ah)
 11049  0D3C  0249               	subwf	(_UpDebounceCount)^080h,w	;volatile
 11050  0D3D  1C03               	skipc
 11051  0D3E  2D40               	goto	u378_21
 11052  0D3F  2D41               	goto	u378_20
 11053  0D40                     u378_21:
 11054  0D40  2D4D               	goto	i1l4514
 11055  0D41                     u378_20:
 11056                           	
 11057  0D41                     i1l10579:	
 11058  0D41  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
 11059  0D42  2D44               	goto	u379_21
 11060  0D43  2D45               	goto	u379_20
 11061  0D44                     u379_21:
 11062  0D44  2D4D               	goto	i1l4514
 11063  0D45                     u379_20:
 11064                           	line	68
 11065                           	
 11066  0D45                     i1l10581:	
 11067                           ;HMI.c: 67: {
 11068                           ;HMI.c: 68: UpPressed = 1;
 11069  0D45  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 11070                           	line	69
 11071                           ;HMI.c: 69: UpReleased = 0;
 11072  0D46  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
 11073  0D47  2D4D               	goto	i1l4514
 11074                           	line	70
 11075                           	
 11076  0D48                     i1l4513:	
 11077                           	line	71
 11078                           ;HMI.c: 70: }
 11079                           ;HMI.c: 71: }
 11080  0D48  2D4D               	goto	i1l4514
 11081                           	line	72
 11082                           	
 11083  0D49                     i1l4512:	
 11084                           	line	74
 11085                           ;HMI.c: 72: else
 11086                           ;HMI.c: 73: {
 11087                           ;HMI.c: 74: UpDebounceCount = 0;
 11088  0D49  1683               	bsf	status, 5	;RP0=1, select bank1
 11089  0D4A  1303               	bcf	status, 6	;RP1=0, select bank1
 11090  0D4B  01C9               	clrf	(_UpDebounceCount)^080h	;volatile
 11091                           	line	75
 11092                           ;HMI.c: 75: UpReleased = 1;
 11093  0D4C  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
 11094                           	line	76
 11095                           	
 11096  0D4D                     i1l4514:	
 11097                           	line	79
 11098                           ;HMI.c: 76: }
 11099                           ;HMI.c: 79: if(!RB3)
 11100  0D4D  1283               	bcf	status, 5	;RP0=0, select bank0
 11101  0D4E  1303               	bcf	status, 6	;RP1=0, select bank0
 11102  0D4F  1986               	btfsc	(51/8),(51)&7
 11103  0D50  2D52               	goto	u380_21
 11104  0D51  2D53               	goto	u380_20
 11105  0D52                     u380_21:
 11106  0D52  2D67               	goto	i1l4515
 11107  0D53                     u380_20:
 11108                           	line	81
 11109                           	
 11110  0D53                     i1l10583:	
 11111                           ;HMI.c: 80: {
 11112                           ;HMI.c: 81: DownDebounceCount++;
 11113  0D53  3001               	movlw	(01h)
 11114  0D54  00F2               	movwf	(??_Debounce+0)+0
 11115  0D55  0872               	movf	(??_Debounce+0)+0,w
 11116  0D56  1683               	bsf	status, 5	;RP0=1, select bank1
 11117  0D57  1303               	bcf	status, 6	;RP1=0, select bank1
 11118  0D58  07C6               	addwf	(_DownDebounceCount)^080h,f	;volatile
 11119                           	line	82
 11120                           	
 11121  0D59                     i1l10585:	
 11122                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
 11123  0D59  300A               	movlw	(0Ah)
 11124  0D5A  0246               	subwf	(_DownDebounceCount)^080h,w	;volatile
 11125  0D5B  1C03               	skipc
 11126  0D5C  2D5E               	goto	u381_21
 11127  0D5D  2D5F               	goto	u381_20
 11128  0D5E                     u381_21:
 11129  0D5E  2D6B               	goto	i1l4517
 11130  0D5F                     u381_20:
 11131                           	
 11132  0D5F                     i1l10587:	
 11133  0D5F  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 11134  0D60  2D62               	goto	u382_21
 11135  0D61  2D63               	goto	u382_20
 11136  0D62                     u382_21:
 11137  0D62  2D6B               	goto	i1l4517
 11138  0D63                     u382_20:
 11139                           	line	84
 11140                           	
 11141  0D63                     i1l10589:	
 11142                           ;HMI.c: 83: {
 11143                           ;HMI.c: 84: DownPressed = 1;
 11144  0D63  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 11145                           	line	85
 11146                           ;HMI.c: 85: DownReleased = 0;
 11147  0D64  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 11148  0D65  2D6B               	goto	i1l4517
 11149                           	line	86
 11150                           	
 11151  0D66                     i1l4516:	
 11152                           	line	87
 11153                           ;HMI.c: 86: }
 11154                           ;HMI.c: 87: }
 11155  0D66  2D6B               	goto	i1l4517
 11156                           	line	88
 11157                           	
 11158  0D67                     i1l4515:	
 11159                           	line	90
 11160                           ;HMI.c: 88: else
 11161                           ;HMI.c: 89: {
 11162                           ;HMI.c: 90: DownDebounceCount = 0;
 11163  0D67  1683               	bsf	status, 5	;RP0=1, select bank1
 11164  0D68  1303               	bcf	status, 6	;RP1=0, select bank1
 11165  0D69  01C6               	clrf	(_DownDebounceCount)^080h	;volatile
 11166                           	line	91
 11167                           ;HMI.c: 91: DownReleased = 1;
 11168  0D6A  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 11169                           	line	92
 11170                           	
 11171  0D6B                     i1l4517:	
 11172                           	line	94
 11173                           ;HMI.c: 92: }
 11174                           ;HMI.c: 94: if(!RB4)
 11175  0D6B  1283               	bcf	status, 5	;RP0=0, select bank0
 11176  0D6C  1303               	bcf	status, 6	;RP1=0, select bank0
 11177  0D6D  1A06               	btfsc	(52/8),(52)&7
 11178  0D6E  2D70               	goto	u383_21
 11179  0D6F  2D71               	goto	u383_20
 11180  0D70                     u383_21:
 11181  0D70  2D85               	goto	i1l4518
 11182  0D71                     u383_20:
 11183                           	line	96
 11184                           	
 11185  0D71                     i1l10591:	
 11186                           ;HMI.c: 95: {
 11187                           ;HMI.c: 96: LeftDebounceCount++;
 11188  0D71  3001               	movlw	(01h)
 11189  0D72  00F2               	movwf	(??_Debounce+0)+0
 11190  0D73  0872               	movf	(??_Debounce+0)+0,w
 11191  0D74  1683               	bsf	status, 5	;RP0=1, select bank1
 11192  0D75  1303               	bcf	status, 6	;RP1=0, select bank1
 11193  0D76  07C7               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 11194                           	line	97
 11195                           	
 11196  0D77                     i1l10593:	
 11197                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
 11198  0D77  300A               	movlw	(0Ah)
 11199  0D78  0247               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 11200  0D79  1C03               	skipc
 11201  0D7A  2D7C               	goto	u384_21
 11202  0D7B  2D7D               	goto	u384_20
 11203  0D7C                     u384_21:
 11204  0D7C  2D89               	goto	i1l4520
 11205  0D7D                     u384_20:
 11206                           	
 11207  0D7D                     i1l10595:	
 11208  0D7D  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 11209  0D7E  2D80               	goto	u385_21
 11210  0D7F  2D81               	goto	u385_20
 11211  0D80                     u385_21:
 11212  0D80  2D89               	goto	i1l4520
 11213  0D81                     u385_20:
 11214                           	line	99
 11215                           	
 11216  0D81                     i1l10597:	
 11217                           ;HMI.c: 98: {
 11218                           ;HMI.c: 99: LeftPressed = 1;
 11219  0D81  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 11220                           	line	100
 11221                           ;HMI.c: 100: LeftReleased = 0;
 11222  0D82  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 11223  0D83  2D89               	goto	i1l4520
 11224                           	line	101
 11225                           	
 11226  0D84                     i1l4519:	
 11227                           	line	102
 11228                           ;HMI.c: 101: }
 11229                           ;HMI.c: 102: }
 11230  0D84  2D89               	goto	i1l4520
 11231                           	line	103
 11232                           	
 11233  0D85                     i1l4518:	
 11234                           	line	105
 11235                           ;HMI.c: 103: else
 11236                           ;HMI.c: 104: {
 11237                           ;HMI.c: 105: LeftDebounceCount = 0;
 11238  0D85  1683               	bsf	status, 5	;RP0=1, select bank1
 11239  0D86  1303               	bcf	status, 6	;RP1=0, select bank1
 11240  0D87  01C7               	clrf	(_LeftDebounceCount)^080h	;volatile
 11241                           	line	106
 11242                           ;HMI.c: 106: LeftReleased = 1;
 11243  0D88  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 11244                           	line	107
 11245                           	
 11246  0D89                     i1l4520:	
 11247                           	line	109
 11248                           ;HMI.c: 107: }
 11249                           ;HMI.c: 109: if(!RB5)
 11250  0D89  1283               	bcf	status, 5	;RP0=0, select bank0
 11251  0D8A  1303               	bcf	status, 6	;RP1=0, select bank0
 11252  0D8B  1A86               	btfsc	(53/8),(53)&7
 11253  0D8C  2D8E               	goto	u386_21
 11254  0D8D  2D8F               	goto	u386_20
 11255  0D8E                     u386_21:
 11256  0D8E  2DA3               	goto	i1l4521
 11257  0D8F                     u386_20:
 11258                           	line	111
 11259                           	
 11260  0D8F                     i1l10599:	
 11261                           ;HMI.c: 110: {
 11262                           ;HMI.c: 111: RightDebounceCount++;
 11263  0D8F  3001               	movlw	(01h)
 11264  0D90  00F2               	movwf	(??_Debounce+0)+0
 11265  0D91  0872               	movf	(??_Debounce+0)+0,w
 11266  0D92  1683               	bsf	status, 5	;RP0=1, select bank1
 11267  0D93  1303               	bcf	status, 6	;RP1=0, select bank1
 11268  0D94  07C8               	addwf	(_RightDebounceCount)^080h,f	;volatile
 11269                           	line	112
 11270                           	
 11271  0D95                     i1l10601:	
 11272                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
 11273  0D95  300A               	movlw	(0Ah)
 11274  0D96  0248               	subwf	(_RightDebounceCount)^080h,w	;volatile
 11275  0D97  1C03               	skipc
 11276  0D98  2D9A               	goto	u387_21
 11277  0D99  2D9B               	goto	u387_20
 11278  0D9A                     u387_21:
 11279  0D9A  2DA7               	goto	i1l4523
 11280  0D9B                     u387_20:
 11281                           	
 11282  0D9B                     i1l10603:	
 11283  0D9B  1E71               	btfss	(_RightReleased/8),(_RightReleased)&7
 11284  0D9C  2D9E               	goto	u388_21
 11285  0D9D  2D9F               	goto	u388_20
 11286  0D9E                     u388_21:
 11287  0D9E  2DA7               	goto	i1l4523
 11288  0D9F                     u388_20:
 11289                           	line	114
 11290                           	
 11291  0D9F                     i1l10605:	
 11292                           ;HMI.c: 113: {
 11293                           ;HMI.c: 114: RightPressed = 1;
 11294  0D9F  15F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 11295                           	line	115
 11296                           ;HMI.c: 115: RightReleased = 0;
 11297  0DA0  1271               	bcf	(_RightReleased/8),(_RightReleased)&7
 11298  0DA1  2DA7               	goto	i1l4523
 11299                           	line	116
 11300                           	
 11301  0DA2                     i1l4522:	
 11302                           	line	117
 11303                           ;HMI.c: 116: }
 11304                           ;HMI.c: 117: }
 11305  0DA2  2DA7               	goto	i1l4523
 11306                           	line	118
 11307                           	
 11308  0DA3                     i1l4521:	
 11309                           	line	120
 11310                           ;HMI.c: 118: else
 11311                           ;HMI.c: 119: {
 11312                           ;HMI.c: 120: RightDebounceCount = 0;
 11313  0DA3  1683               	bsf	status, 5	;RP0=1, select bank1
 11314  0DA4  1303               	bcf	status, 6	;RP1=0, select bank1
 11315  0DA5  01C8               	clrf	(_RightDebounceCount)^080h	;volatile
 11316                           	line	121
 11317                           ;HMI.c: 121: RightReleased = 1;
 11318  0DA6  1671               	bsf	(_RightReleased/8),(_RightReleased)&7
 11319                           	line	122
 11320                           	
 11321  0DA7                     i1l4523:	
 11322                           	line	124
 11323                           ;HMI.c: 122: }
 11324                           ;HMI.c: 124: if(!RB6)
 11325  0DA7  1283               	bcf	status, 5	;RP0=0, select bank0
 11326  0DA8  1303               	bcf	status, 6	;RP1=0, select bank0
 11327  0DA9  1B06               	btfsc	(54/8),(54)&7
 11328  0DAA  2DAC               	goto	u389_21
 11329  0DAB  2DAD               	goto	u389_20
 11330  0DAC                     u389_21:
 11331  0DAC  2DC1               	goto	i1l4524
 11332  0DAD                     u389_20:
 11333                           	line	126
 11334                           	
 11335  0DAD                     i1l10607:	
 11336                           ;HMI.c: 125: {
 11337                           ;HMI.c: 126: CenterDebounceCount++;
 11338  0DAD  3001               	movlw	(01h)
 11339  0DAE  00F2               	movwf	(??_Debounce+0)+0
 11340  0DAF  0872               	movf	(??_Debounce+0)+0,w
 11341  0DB0  1683               	bsf	status, 5	;RP0=1, select bank1
 11342  0DB1  1303               	bcf	status, 6	;RP1=0, select bank1
 11343  0DB2  07C3               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 11344                           	line	127
 11345                           	
 11346  0DB3                     i1l10609:	
 11347                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
 11348  0DB3  300A               	movlw	(0Ah)
 11349  0DB4  0243               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 11350  0DB5  1C03               	skipc
 11351  0DB6  2DB8               	goto	u390_21
 11352  0DB7  2DB9               	goto	u390_20
 11353  0DB8                     u390_21:
 11354  0DB8  2DC6               	goto	i1l4527
 11355  0DB9                     u390_20:
 11356                           	
 11357  0DB9                     i1l10611:	
 11358  0DB9  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 11359  0DBA  2DBC               	goto	u391_21
 11360  0DBB  2DBD               	goto	u391_20
 11361  0DBC                     u391_21:
 11362  0DBC  2DC6               	goto	i1l4527
 11363  0DBD                     u391_20:
 11364                           	line	129
 11365                           	
 11366  0DBD                     i1l10613:	
 11367                           ;HMI.c: 128: {
 11368                           ;HMI.c: 129: CenterPressed = 1;
 11369  0DBD  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 11370                           	line	130
 11371                           ;HMI.c: 130: CenterReleased = 0;
 11372  0DBE  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 11373  0DBF  2DC6               	goto	i1l4527
 11374                           	line	131
 11375                           	
 11376  0DC0                     i1l4525:	
 11377                           	line	132
 11378                           ;HMI.c: 131: }
 11379                           ;HMI.c: 132: }
 11380  0DC0  2DC6               	goto	i1l4527
 11381                           	line	133
 11382                           	
 11383  0DC1                     i1l4524:	
 11384                           	line	135
 11385                           ;HMI.c: 133: else
 11386                           ;HMI.c: 134: {
 11387                           ;HMI.c: 135: CenterDebounceCount = 0;
 11388  0DC1  1683               	bsf	status, 5	;RP0=1, select bank1
 11389  0DC2  1303               	bcf	status, 6	;RP1=0, select bank1
 11390  0DC3  01C3               	clrf	(_CenterDebounceCount)^080h	;volatile
 11391                           	line	136
 11392                           ;HMI.c: 136: CenterReleased = 1;
 11393  0DC4  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 11394  0DC5  2DC6               	goto	i1l4527
 11395                           	line	137
 11396                           	
 11397  0DC6                     i1l4526:	
 11398                           	line	138
 11399                           	
 11400  0DC6                     i1l4527:	
 11401  0DC6  0008               	return
 11402                           	opt stack 0
 11403                           GLOBAL	__end_of_Debounce
 11404  0DC7                     	__end_of_Debounce:
 11405 ;; =============== function _Debounce ends ============
 11406                           
 11407                           	signat	_Debounce,88
 11408                           psect	text1044,local,class=CODE,delta=2
 11409                           global __ptext1044
 11410  0000                     __ptext1044:
 11411                           	global	btemp
 11412  007E                     	btemp set 07Eh
 11413                           
 11414                           	DABS	1,126,2	;btemp
 11415                           	global	wtemp0
 11416  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri May 01 16:02:34 2015

 __end_of_lcd_write_control 155B             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 1570  
                       l703 15CB                         l704 15CB                         l705 15CF  
                       l706 15EE                         l690 1785                         l691 17AE  
                       l692 1789                         l693 178D                         l694 1791  
                       l695 1795                         l696 1799                         l689 179D  
                       l697 17BB                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _pos 00BA                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026             ?_lcd_set_cursor 0072  
                      l3000 1586                        l1402 151F                        l3010 04BA  
                      l1410 16F3                        l3011 041D                        l3003 02E9  
                      l1411 16F3                        l3004 04BD                        l3012 04B9  
                      l3013 046A                        l3005 0336                        l1405 14FF  
                      l3006 04BC                        l3014 04B8                        l2230 0B2A  
                      l2222 0AFC                        l3015 04B7                        l3007 0383  
                      l2231 0B47                        l2223 0B07                        l3008 04BB  
                      l3016 04BD                        l1408 16E2                        l2224 0B34  
                      l2232 0B32                        l2240 0930                        l3009 03D0  
                      l1409 16C9                        l2233 0B46                        l2225 0B08  
                      l2241 0958                        l2234 0B47                        l2226 0B45  
                      l2242 0932                        l2219 1750                        l2227 0B0A  
                      l2243 0934                        l2228 0B0C                        l2244 0936  
                      l2252 0BC7                        l2260 0038                        l1429 1643  
                      l2229 0B1C                        l2245 0938                        l2237 0924  
                      l2253 0C20                        l2261 0069                        l2246 095A  
                      l2238 092F                        l2254 0BE5                        l2270 007B  
                      l2262 0039                        l2239 0947                        l2247 0944  
                      l2255 0BFC                        l2271 0290                        l2263 007A  
                      l2248 0959                        l2256 0C29                        l2280 019C  
                      l2272 0081                        l2264 0041                        l2249 095A  
                      l2281 01B6                        l2273 00A6                        l2265 0049  
                      l2290 0297                        l2282 01CE                        l2274 00C1  
                      l2266 0051                        l2291 0298                        l2283 01D2  
                      l2275 00F2                        l2267 0059                        l2259 0023  
                      l2292 0298                        l2276 00F3                        l2268 0066  
                      l2269 027A                        l2285 01D1                        l2277 011E  
                      l2286 0270                        l2278 0138                        l1399 155A  
                      l2287 0271                        l2279 0165                        l2288 0272  
                      l2289 0278                        l6020 0A94                        l3711 153B  
                      l6023 0DF0                        l3712 153B                        l3720 0A10  
                      l6032 0CDC                        l6024 0E0F                        l3713 1540  
                      l6017 08CE                        l3721 0A30                        l6033 0CFA  
                      l6025 0E34                        l3714 1546                        l3722 0A41  
                      l6034 0D2E                        l6026 0E10                        l6027 0E1D  
                      l4540 099F                        l6028 0E4D                        l4541 0960  
                      l3717 0A02                        l6029 0E6B                        l4542 0961  
                      l3718 0A09                        l4543 0972                        l3719 0A26  
                      l4544 0973                        l4560 060A                        l4545 0985  
                      l4553 060C                        l4561 0619                        l4538 098D  
                      l4546 0986                        l4554 04D7                        l4547 09A1  
                      l4539 095F                        l4555 053B                        l4548 098B  
                      l4556 054E                        l4557 0619                        l4558 0596  
                      l4559 05E1                        l2995 0AAA                        l7500 08FE  
                      l2996 0ACB                        l7501 090C                        l2997 0AE9  
                      l7502 0914                        l6740 169B                        l6733 1592  
                      l6734 159F                        l6743 15A5                        l7615 16AC  
                      l6744 15A4                        l7480 1653                        l7616 16C7  
                      l6745 15B0                        l7481 1668                        l6737 1672  
                      l6746 15C5                        l7482 166F                        l7490 09DB  
                      l6738 1671                        l7491 09E9                        l7811 0C40  
                      l6739 167B                        l7492 09F1                        l7820 0C73  
                      l6780 063B                        l7580 0F86                        l7485 09EA  
                      l7821 0C7F                        l7813 0C38                        l6781 0636  
                      l7581 0F9B                        l7486 09BC                        l7822 0C74  
                      l7814 0CA6                        l7590 0ED4                        l6782 0714  
                      l6790 0692                        l7582 0FB2                        l7479 1649  
                      l7487 09B0                        l7495 090D                        l7823 0C83  
                      l7815 0C4E                        l7591 0EC0                        l6791 06AF  
                      l6783 0637                        l7583 0FB7                        l6768 1721  
                      l7488 09C1                        l7496 08E7                        l7824 0C8D  
                      l7816 0C41                        l7592 0EC1                        l6792 06F4  
                      l6784 0638                        l7584 0FCC                        l7489 09C2  
                      l7497 08DB                        l7825 0CA6                        l7817 0C55  
                      l7593 0ED3                        l6777 0700                        l6793 06B4  
                      l6785 0650                        l7585 0FE3                        l7577 0F2D  
                      l7498 08EC                        l7818 0C6C                        l7594 0EF8  
                      l7690 0B78                        l6794 06FF                        l6786 0639  
                      l6778 0622                        l7578 0FFF                        l7499 08ED  
                      l7819 0C56                        l7595 0EE4                        l7691 0B6C  
                      l6795 0713                        l6787 066A                        l6779 0634  
                      l7579 0F46                        l7596 0EF1                        l7588 0E89  
                      l7692 0B7D                        l6796 0719                        l6788 0675  
                      l7597 0EE5                        l7589 0F11                        l7693 0B7E  
                      l6789 069D                        l7598 0EF7                        l7694 0B8F  
                      l7599 0F08                        l7695 0B9D                        l7687 0B58  
                      l7696 0BA8                        l7688 0B62                        l7697 0BAF  
                      l7689 0B9E                        _CHS0 00FB                        _CHS1 00FC  
                      _CHS2 00FD                        STR_1 0864                        STR_2 085B  
                      STR_3 0876                        STR_4 087F                        STR_5 086D  
                      STR_6 0852                        STR_7 08A3                        STR_8 08A7  
                      STR_9 088F                        _BRGH 04C2                        _CREN 00C4  
                      u4020 1667                        u4100 08D7                        u4021 1666  
                      u4005 1654                        u4101 08D6                        u4030 09AC  
                      u4015 165B                        u4031 09AB                        u4120 08EB  
                      u5000 038D                        u4121 08EA                        u5001 038C  
                      u4050 09C0                        u4130 08F7                        u5010 0396  
                      u4051 09BF                        u4131 08F6                        u4115 08DC  
                      u5011 0395                        u5020 03DA                        u5100 0673  
                      u4045 09B1                        u5021 03D9                        u5101 0672  
                      u4070 09D3                        u4150 090B                        u5030 03E3  
                      u5110 0690                        u4071 09D2                        u4151 090A  
                      u4135 08F3                        u5031 03E2                        u5111 068F  
                      u4400 0C30                        u5040 0427                        u5120 069C  
                      u5200 0F68                        u4065 09C3                        u4145 08FF  
                      u5041 0426                        u5121 069B                        u4090 09E8  
                      u4410 0C37                        u5050 0430                        u5130 06A3  
                      u5210 0F8A                        u4091 09E7                        u4075 09CF  
                      u4411 0C36                        u5051 042F                        u5131 06A2  
                      u5115 068C                        u5211 0F89                        u3700 096D  
                      u4500 0CA5                        u5060 0474                        u5140 06FE  
                      u5300 0FE2                        u3701 096C                        u4085 09DC  
                      u5061 0473                        u5141 06FD                        u5301 0FE1  
                      u5221 0F93                        u5205 0F64                        u3710 0982  
                      u4430 0C54                        u5070 047D                        u5150 0712  
                      u5222 0F9A                        u5310 16A3                        u3711 0981  
                      u4431 0C53                        u5071 047C                        u5151 0711  
                      u5311 16A2                        u3480 15CF                        u3720 153F  
                      u4600 0E94                        u5080 0628                        u5160 167B  
                      u5320 16F2                        u5400 0BD8                        u3481 15CE  
                      u3721 153E                        u4425 0C46                        u5081 0627  
                      u5161 167A                        u5321 16F1                        u5401 0BD7  
                      u4450 0C72                        u4610 0EAF                        u5090 0660  
                      u5250 0FB1                        u5170 0F25                        u5330 04C8  
                      u5410 0BF5                        u4451 0C71                        u4611 0EAE  
                      u5091 065F                        u5251 0FB0                        u5235 0F9C  
                      u5171 0F24                        u5411 0BF4                        _PEIE 005E  
                      u4620 0EB6                        u4700 0B4F                        u5260 0FBB  
                      u5180 0F3E                        u5340 0528                        u5420 0C1F  
                      u5500 0156                        u4445 0C65                        u4621 0EB5  
                      u4605 0E90                        u4701 0B4E                        u5261 0FBA  
                      u5245 0FA4                        u5181 0F3D                        u5341 0527  
                      u5421 0C1E                        u5405 0BD4                        u5501 0155  
                      u4470 0C83                        u4710 0B5C                        u5190 0F56  
                      u5350 0AA8                        u5430 0DD1                        u5510 0174  
                      u3495 15DC                        u4471 0C82                        u4711 0B5B  
                      u5271 0FC4                        u5351 0AA7                        u5431 0DD0  
                      u5511 0173                        u3920 158D                        u4480 0C87  
                      u4640 0ED2                        u4720 0B68                        u5272 0FCB  
                      u5360 0ACA                        u5440 0E1B                        u5520 0183  
                      u3921 158C                        u4481 0C86                        u4465 0C77  
                      u4641 0ED1                        u4721 0B67                        u5345 0524  
                      u5361 0AC9                        u5425 0C1B                        u5521 0182  
                      u5505 0152                        u3690 15B0                        u3930 159A  
                      u4490 0C98                        u4650 0EDA                        u5370 0B00  
                      u5450 0E4C                        u5530 01AB                        u3691 15AF  
                      u3931 1599                        u4651 0ED9                        u4635 0EC2  
                      u5195 0F52                        u5355 0AA4                        u5371 0AFF  
                      u5451 0E4B                        u5531 01AA                        u5515 0170  
                      _RCIE 0465                        u4740 0B7C                        u5380 0928  
                      u5540 01B1                        u5460 0027                        _RCIF 0065  
                      u4741 0B7B                        u5285 0FCD                        u5365 0AC6  
                      u5381 0927                        u5541 01B0                        u5525 017F  
                      u5461 0026                        u4670 0EF6                        u4590 0E7F  
                      u4750 0B88                        u4910 09FB                        u5390 0BC5  
                      u5550 01BC                        u5470 0113                        u4495 0C94  
                      u4671 0EF5                        u4591 0E7E                        u4751 0B87  
                      u4735 0B6D                        u4911 09FA                        u5295 0FD5  
                      u5391 0BC4                        u5455 0E48                        u5607 0240  
                      u5551 01BB                        u5535 01A7                        u5471 0112  
                      u4680 0EFC                        u4920 0A30                        u5560 01C9  
                      u5480 012D                        u4665 0EE7                        u4921 0A2F  
                      u5617 025D                        u5561 01C8                        u5481 012C  
                      u4770 0B9C                        u4930 0CBD                        u5490 0147  
                      u4771 0B9B                        u4755 0B84                        u4931 0CBC  
                      u5627 0A54                        u5395 0BC1                        u5491 0146  
                      u5475 010F                        u4780 0BA2                        u4940 02A6  
                      u4765 0B90                        u4925 0A2C                        u4941 02A5  
                      u5637 0A77                        u5565 01C5                        u5485 0129  
                      u3990 164D                        u4950 02AF                        u3991 164C  
                      u5647 0A19                        u4951 02AE                        u5495 0143  
                      u4960 02F3                        u5657 151B                        u4961 02F2  
                      u5577 00AE                        u4970 02FC                        _OERR 00C1  
                      u5667 1555                        u4971 02FB                        u5587 00C9  
                      u4980 0340                        u5677 156E                        u4981 033F  
                      u5597 01F1                        u4990 0349                        u5687 17B0  
                      u4991 0348                        _TMR0 0001                  _ChargeMode 0915  
                      _SPEN 00C7                        _TXIE 0464                        _WREN 0C62  
                      _TXEN 04C5                        _TXIF 0064                        _SYNC 04C4  
       __size_of_ADCconvert 0223                        _Menu 095B      __end_of_lcd_write_data 1520  
                      _isr1 071A                        _main 0015                ___ftpack@arg 0020  
                      _init 1722                ___ftpack@exp 0023                        _test 00BC  
                      btemp 007E              _CenterReleased 0381                        start 0012  
              ___ftmul@cntr 004A                ___ftmul@sign 004B               ??_ReadButtons 0073  
              ___fttol@exp1 0035                ___fttol@lval 0031                       ?_Menu 0072  
                     l10301 159E                       l11101 0CB7                       l10311 15C6  
                     l11031 179C                       l11103 0CBD                       l11111 02AF  
                     l10313 15C9                       l11033 179D                       l11025 1784  
                     l11041 155B                       l11105 0CDC                       l11121 0340  
                     l11113 02E9                       l11201 0700                       l10315 15D2  
                     l11027 1799                       l11035 17AE                       l11043 155E  
                     l11051 154A                       l11131 03D0                       l11123 0349  
                     l11115 02F3                       l11107 029B                       l11203 0714  
                     l11211 167C                       l10317 15E5                       l10501 1536  
                     l11037 17B2                       l11029 179B                       l11045 1562  
                     l11053 154D                       l11061 1513                       l11141 0430  
                     l11133 03DA                       l11125 0383                       l11117 02FC  
                     l11109 02A6                       l11205 0719                       l11221 169B  
                     l11213 1688                       l11301 1624                       l10319 15EE  
                     l10503 1538                       l11039 17BB                       l11047 1566  
                     l11055 154F                       l11063 1515                       l11071 09F6  
                     l11143 046A                       l11135 03E3                       l11127 038D  
                     l11119 0336                       l11151 0622                       l11215 168E  
                     l11207 1670                       l11231 0F3E                       l11223 0F12  
                     l11311 163D                       l11303 1625                       l10441 16F7  
                     l10505 1540                       l11049 156A                       l11057 1550  
                     l11065 1516                       l11081 0A0D                       l11073 09FB  
                     l11145 0474                       l11137 041D                       l11129 0396  
                     l11161 0650                       l11153 0628                       l11217 1696  
                     l11209 1672                       l11241 0F75                       l11233 0F45  
                     l11225 0F25                       l11305 162B                       l11321 0A6B  
                     l11313 0A42                       l11401 060C                       l10451 1706  
                     l10443 16FF                       l10507 1544                       l11059 1510  
                     l11067 08B6                       l11091 0A3C                       l11083 0A15  
                     l11075 0A02                       l11147 047D                       l11139 0427  
                     l11171 066A                       l11163 0658                       l11155 062F  
                     l11219 1697                       l11251 0F9B                       l11243 0F7B  
                     l11235 0F46                       l11227 0F2C                       l11307 1631  
                     l11323 0A7C                       l11315 0A4E                       l11331 1586  
                     l11411 0AB7                       l11403 0A95                       l10461 1711  
                     l10453 1709                       l10445 1700                       l10509 1546  
                     l10621 1591                       l10701 08CF                       l11093 0A3D  
                     l11085 0A32                       l11077 0A09                       l11069 09F2  
                     l11181 0692                       l11173 066D                       l11165 065C  
                     l11157 063A                       l11149 061D                       l11261 0FBB  
                     l11253 0FA3                       l11245 0F81                       l11237 0F73  
                     l11229 0F2D                       l11309 1637                       l11325 0A88  
                     l11317 0A59                       l11341 1731                       l11333 1722  
                     l11413 0ABD                       l11405 0A9B                       l11421 0AFC  
                     l11501 0DCB                       l10463 1712                       l10455 170C  
                     l10447 1702                       l10439 16F4                       l10471 15BB  
                     l10623 1592                       l10615 1587                       l10711 08ED  
                     l10703 08D7                       l11095 0A3E                       l11087 0A38  
                     l11079 0A0C                       l11191 06AF                       l11183 0696  
                     l11175 0674                       l11167 0660                       l11159 063B  
                     l11271 0FFF                       l11263 0FCC                       l11255 0FAB  
                     l11247 0F86                       l11239 0F74                       l11319 0A65  
                     l11327 1571                       l11351 1749                       l11343 1735  
                     l11335 1723                       l11407 0AA9                       l11415 0ACB  
                     l11431 0B1C                       l11423 0B00                       l11511 0E1C  
                     l11503 0DD1                       l10457 170D                       l10449 1703  
                     l10473 15C1                       l10465 15A3                       l10481 0969  
                     l10625 159A                       l10617 158D                       l10721 0914  
                     l10713 08F7                       l10705 08DB                       l10801 0C41  
                     l11089 0A3B                       l11097 0CA7                       l11193 06B4  
                     l11185 069D                       l11177 0675                       l11169 0664  
                     l11265 0FD4                       l11257 0FB2                       l11249 0F8A  
                     l11273 169C                       l11281 14F8                       l11329 157F  
                     l11353 174D                       l11345 173A                       l11337 172B  
                     l11361 04D7                       l11409 0AAA                       l11441 0B31  
                     l11433 0B28                       l11425 0B01                       l11417 0AEA  
                     l11513 0E1D                       l11505 0DF0                       l11601 0165  
                     l11521 0015                       l10459 1710                       l10475 15C4  
                     l10467 15A5                       l10491 098A                       l10483 096D  
                     l10299 159C                       l10627 159C                       l10619 158F  
                     l10715 08FE                       l10707 08E2                       l10811 0C74  
                     l10803 0C4E                       l11099 0CAF                       l11195 06E8  
                     l11187 06A3                       l11179 0691                       l11267 0FDC  
                     l11259 0FB7                       l11275 16A3                       l11283 14F9  
                     l11291 16E2                       l11355 174E                       l11347 173F  
                     l11339 172D                       l11371 0528                       l11363 04DD  
                     l11443 0B33                       l11435 0B2A                       l11427 0B0C  
                     l11419 0AEF                       l11451 0924                       l11515 0E2E  
                     l11507 0E10                       l11603 0174                       l11611 019C  
                     l11531 0028                       l11523 001B                       l10469 15B1  
                     l10493 098C                       l10485 0973                       l10477 095E  
                     l10629 159F                       l10717 0905                       l10709 08E7  
                     l10821 0CA5                       l10813 0C7F                       l10805 0C56  
                     l10901 0EF1                       l11197 06EF                       l11189 06AA  
                     l11269 0FE3                       l11277 16AC                       l11285 16C8  
                     l11293 1619                       l11357 174F                       l11349 1744  
                     l11381 0596                       l11373 053B                       l11365 0502  
                     l11437 0B2E                       l11429 0B1A                       l11445 0B34  
                     l11461 093F                       l11453 0928                       l11509 0E15  
                     l11517 0E34                       l11621 01C9                       l11613 01AB  
                     l11605 0183                       l11541 0041                       l11533 002D  
                     l11525 001D                       l10487 0982                       l10479 0961  
                     l10495 098D                       l10671 1668                       l10663 1644  
                     l10719 090D                       l10815 0C87                       l10807 0C5A  
                     l10903 0EF8                       l11199 06F4                       l11279 16C7  
                     l11287 16C9                       l11295 161D                       l11391 05D5  
                     l11383 05A2                       l11375 054E                       l11367 0513  
                     l11359 04BE                       l11439 0B2F                       l11463 0943  
                     l11455 0929                       l11447 0915                       l11471 0BB8  
                     l11519 0E4D                       l11631 01F8                       l11623 01CF  
                     l11615 01B1                       l11607 0194                       l11551 0057  
                     l11543 0047                       l11535 0032                       l11527 0023  
                     l10489 0986                       l10497 099F                       l10673 166F  
                     l10665 1649                       l10681 09B0                       l10817 0C8F  
                     l10809 0C64                       l10905 0EFC                       l11289 16D9  
                     l11297 1620                       l11393 05E1                       l11385 05AD  
                     l11377 0554                       l11369 0519                       l11465 0946  
                     l11457 0938                       l11449 091D                       l11481 0BE5  
                     l11473 0BC6                       l11641 0264                       l11633 022D  
                     l11625 01D0                       l11617 01B6                       l11609 0199  
                     l11561 007B                       l11553 0059                       l11545 0049  
                     l11537 0039                       l11529 0027                       l10499 09A1  
                     l10667 164D                       l10691 09D9                       l10683 09B7  
                     l10675 09A2                       l10819 0CA1                       l10907 0F08  
                     l10931 0B62                       l10923 0B48                       l11299 1621  
                     l11395 05ED                       l11387 05BE                       l11379 056B  
                     l11459 093E                       l11467 0947                       l11491 0C0A  
                     l11483 0BF1                       l11475 0BC7                       l11643 0272  
                     l11635 0238                       l11619 01BC                       l11627 01D2  
                     l11571 00C1                       l11563 0081                       l11555 0064  
                     l11547 004F                       l11539 003F                       l10669 165A  
                     l10693 09DB                       l10685 09BC                       l10677 09A6  
                     l10909 0F11                       l10941 0B7E                       l10933 0B68  
                     l10925 0B4F                       l11397 05F8                       l11389 05C4  
                     l11493 0C12                       l11485 0BF5                       l11477 0BCC  
                     l11469 0BB0                       l11645 0279                       l11637 0247  
                     l11629 01E9                       l11581 0102                       l11573 00D0  
                     l11565 0090                       l11557 0068                       l11549 0051  
                     l10695 09E2                       l10687 09C2                       l10679 09AC  
                     l10871 0E88                       l10951 0BA2                       l10943 0B88  
                     l10935 0B6C                       l10927 0B58                       l11399 060B  
                     l11487 0BF6                       l11479 0BD8                       l11495 0C20  
                     l11639 0255                       l11591 012D                       l11583 0104  
                     l11575 00DB                       l11567 00A6                       l11647 027A  
                     l11559 0069                       l10689 09D3                       l10697 09EA  
                     l10793 0C2A                       l10881 0EA9                       l10873 0E89  
                     l10953 0BA8                       l10945 0B8F                       l10937 0B73  
                     l10929 0B5C                       l11497 0C29                       l11489 0BFC  
                     l11593 0138                       l11585 0106                       l11577 00E6  
                     l11569 00B5                       l11649 0290                       l10699 09F1  
                     l10795 0C30                       l10891 0EC1                       l10883 0EAB  
                     l10875 0E9B                       l10867 0E6C                       l10955 0BAF  
                     l10947 0B96                       l10939 0B78                       l11499 0DC7  
                     l11595 0147                       l11587 0113                       l11579 00F3  
                     l10797 0C38                       l10885 0EAF                       l10893 0ED4  
                     l10877 0E9C                       l10869 0E7F                       l10949 0B9E  
                     l11597 0156                       l11589 011E                       l10799 0C3F  
                     l10895 0EDA                       l10887 0EB6                       l10879 0EA2  
                     l11599 0160                       l10897 0EE3                       l10889 0EBF  
                     l10899 0EE5        __size_of_calibrateIR 005E                       ?_isr1 0072  
                     ?_main 0072                       ?_init 0072                       _EEADR 010D  
                     STR_10 089B                       STR_11 08AB                       STR_12 089F  
                     STR_13 083A                       STR_14 082A                       STR_15 0893  
                     STR_16 0887                       STR_17 0897                       STR_18 081A  
                     STR_19 0849             __end_of___awmod 0BB0                       _CARRY 0018  
           __end_of___ftmul 1000             __end_of___fttol 0F12             __end_of___lwdiv 09F2  
           __end_of___lwmod 0915                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074             __end_of_scan360 0C2A               ___awtoft@sign 003B  
             ___ftpack@sign 0024                       _total 00BE              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00D3             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 071A            __end_of_Debounce 0DC7          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072                __end_of_Menu 09A2  
__size_of_lcd_write_control 0014            _shortMenuStrings 00DB                __end_of_isr1 07F7  
              __end_of_main 029B                __end_of_init 1751             rotate@direction 0025  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
                    ??_isr1 0078                      ??_main 0061               ___fttol@sign1 0030  
                    ??_init 0023         __end_of_ReadButtons 1781               Menu@BTN_input 0020  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of___awtoft 16C8            __end_of___ftpack 0CA7  
          __end_of_adc_read 15EF                 ?_ChargeMode 0072                      i1l2210 0790  
                    i1l2211 079E                      i1l2212 07C1                      i1l2213 07C0  
                    i1l2214 07EB                      i1l2206 079F                      i1l2215 07EA  
                    i1l2207 0741                      i1l2216 07EB                      i1l2208 075A  
                    i1l2209 0773                      i1l4520 0D89                      i1l4512 0D49  
                    i1l4521 0DA3                      i1l4513 0D48                      i1l4522 0DA2  
                    i1l4514 0D4D                      i1l4530 175E                      i1l4523 0DA7  
                    i1l4515 0D67                      i1l4531 1780                      i1l4524 0DC1  
                    i1l4516 0D66                      i1l4532 1766                      i1l4525 0DC0  
                    i1l4517 0D6B                      i1l4533 176E                      i1l4526 0DC6  
                    i1l4518 0D85                      i1l4534 1776                      i1l4527 0DC6  
                    i1l4519 0D84                      i1l4535 177E                      i1l7500 17E9  
                    i1l7501 17F7                      i1l7502 17FF                      i1l7495 17F8  
                    i1l7496 17D2                      i1l7497 17C6                      i1l7498 17D7  
                    i1l7499 17D8                      u360_20 07BB                      u360_21 07BA  
                    u361_20 07C6                      u353_20 071E                      u361_21 07C5  
                    u353_21 071D                      u362_20 07CC                      u354_20 073F  
                    u362_21 07CB                      u354_21 073E                      u363_20 07E6  
                    u355_20 0758                      u363_21 07E5                      u355_21 0757  
                    u380_20 0D53                      u364_20 175A                      u356_20 0771  
                    u380_21 0D52                      u364_21 1759                      u356_21 0770  
                    u381_20 0D5F                      u365_20 1762                      u357_20 078A  
                    u381_21 0D5E                      u365_21 1761                      u357_21 0789  
                    u390_20 0DB9                      u382_20 0D63                      u366_20 176A  
                    u358_20 0795                      u390_21 0DB8                      u382_21 0D62  
                    u366_21 1769                      u358_21 0794                 _DistLowByte 00C5  
                    u391_20 0DBD                      u383_20 0D71                      u367_20 1772  
                    u359_20 07A5                      u391_21 0DBC                      u383_21 0D70  
                    u367_21 1771                      u359_21 07A4                      u384_20 0D7D  
                    u368_20 177A                      u384_21 0D7C                      u368_21 1779  
                    u385_20 0D81                      u377_20 0D35                      u385_21 0D80  
                    u377_21 0D34                      u386_20 0D8F                      u378_20 0D41  
                    u490_20 17F6                      u386_21 0D8E                      u378_21 0D40  
                    u490_21 17F5                      u387_20 0D9B                      u379_20 0D45  
                    u387_21 0D9A                      u379_21 0D44                      u388_20 0D9F  
                    u388_21 0D9E                      u389_20 0DAD                      u485_20 17C2  
                    u389_21 0DAC                      u485_21 17C1                      u486_25 17C7  
                    u487_20 17D6                      u487_21 17D5                      u488_20 17E2  
                    u488_21 17E1                      u488_25 17DE                      u489_25 17EA  
                    _TMR0IE 005D                      _TMR0IF 005A                scan360@steps 005F  
                    _SSPCON 0014                      _SSPBUF 0013                  _UpReleased 038E  
          __end_of_lcd_init 1644                      _adcVal 006D             _UpDebounceCount 00C9  
                    ___wmul 1644                   ??___awmod 0024                _turnhighByte 00D2  
                 ??___ftmul 0042                ??_ADCconvert 002E                   ??___fttol 002C  
                 ??___lwdiv 002A                   ??___lwmod 0032            __end_of_init_adc 1571  
            ??_readDistance 002A             ___awmod@divisor 0020    __end_of_lcd_write_string 16F4  
           ___awmod@counter 0025                      _rotate 09F2                      _rxfifo 00A0  
                    clrloop 07F8                      _txfifo 01A0                      _rxiptr 00CE  
                    _rxoptr 00CF                 _BumpSensors 00C2                      _txiptr 006F  
                 ??_scan360 005B       ___ftmul@f3_as_product 0047                      _txoptr 00D4  
          __end_of_ser_init 1722            __end_of_ser_isrx 15A0           __end_ofi1___lwmod 1800  
                    saved_w 007E               main@shortwall 0069                 _LeftPressed 0384  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 04BE                  ___awtoft@c 0036                  ___ftmul@f1 003C  
                ___ftmul@f2 003F                  ___fttol@f1 0028              __pcstackCOMMON 0072  
              __pidataBANK1 1500                 _ReadButtons 1751         __size_of_ChargeMode 0046  
          ??_lcd_set_cursor 0023                   ?_Debounce 0072               _buttonPressed 007D  
                __pbssBANK0 006D                  __pbssBANK1 00A0                  __pbssBANK3 0190  
         _DownDebounceCount 00C6              main@direction1 0064          _RightDebounceCount 00C8  
                __pmaintext 0015           robotTurn@distance 0022                     ?___wmul 0020  
                __pintentry 0004                _DistHighByte 00C4                  __ptext1010 1722  
                __ptext1011 1571                  __ptext1020 029B                  __ptext1012 0A42  
                __ptext1004 0DC7                  __ptext1021 0CA7                  __ptext1013 1619  
                __ptext1005 0BB0                  __ptext1030 0C2A                  __ptext1022 09F2  
                __ptext1014 16C8                  __ptext1006 0915                  __ptext1031 08CF  
                __ptext1023 08B6                  __ptext1015 14F5                  __ptext1007 0AEA  
                __ptext1040 071A                  __ptext1032 09A2                  __ptext1024 150D  
                __ptext1016 169C                  __ptext1008 0A95                  __ptext1041 1751  
                __ptext1033 1644                  __ptext1025 1547                  __ptext1017 0F12  
     __end_of_UpdateDisplay 061A                  __ptext1009 04BE                  __ptext1042 17BC  
                __ptext1034 1587                  __ptext1026 155B                  __ptext1018 1670  
                __ptext1043 0D2F                  __ptext1035 1533                  __ptext1027 1781  
                __ptext1019 061A                  __ptext1044 0000                  __ptext1036 095B  
                __ptext1028 0B48                  __ptext1037 15A0                  __ptext1029 0E6C  
                __ptext1038 16F4                  __ptext1039 15C6          __size_of_ser_getch 002C  
                 ?___awtoft 0036                   ?___ftpack 0020                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 0026          __size_of_robo_init 0019  
                   i1l11011 17D2                     i1l11003 17BC                     i1l11013 17D8  
                   i1l11005 17C2                     i1l11021 17F8                     i1l11023 17FF  
                   i1l11015 17E2                     i1l11007 17C6                     i1l11017 17E9  
                   i1l11009 17CD                     i1l10401 1751                     i1l11019 17F0  
                   i1l10411 1762                     i1l10403 1756                     i1l10421 176D  
                   i1l10413 1763                     i1l10405 175A          __size_of_robotMove 00A5  
                   i1l10431 177B                     i1l10423 1772                     i1l10415 1765  
                   i1l10407 175B                     i1l10351 071F                     i1l10601 0D95  
                   i1l10433 177D                     i1l10425 1773                     i1l10417 176A  
                   i1l10409 175D                     i1l10361 0758                     i1l10353 0729  
                   i1l10611 0DB9                     i1l10603 0D9B                     i1l10435 177E  
                   i1l10427 1775                     i1l10419 176B                     i1l10371 078B  
                   i1l10363 075A                     i1l10355 072A                     i1l10347 071A  
                   i1l10613 0DBD                     i1l10605 0D9F                     i1l10437 1780  
                   i1l10429 177A                     i1l10381 07AF                     i1l10373 0790  
                   i1l10365 0771                     i1l10357 073F                     i1l10349 071E  
                   i1l10607 0DAD                     i1l10391 07CC                     i1l10383 07B5  
                   i1l10375 0795                     i1l10367 0773                     i1l10359 0741  
                   i1l10609 0DB3                     i1l10393 07D4                     i1l10385 07BB  
                   i1l10369 078A                     i1l10377 079F                     i1l10395 07DA  
                   i1l10379 07A5                     i1l10387 07C1                     i1l10581 0D45  
                   i1l10573 0D2F                     i1l10397 07DE                     i1l10389 07C6  
                   i1l10591 0D71                     i1l10583 0D53                     i1l10575 0D35  
                   i1l10399 07E6                     i1l10593 0D77                     i1l10585 0D59  
                   i1l10577 0D3B                     i1l10595 0D7D                     i1l10587 0D5F  
                   i1l10579 0D41                     i1l10597 0D81                     i1l10589 0D63  
                   i1l10599 0D8F          __size_of_robotTurn 0088                  ??_Debounce 0072  
          ??_lcd_write_data 0020                   ?_lcd_init 0072                     _SSPSTAT 0094  
      __end_of_readDistance 1587                   ?_init_adc 0072                   ?_ser_init 0072  
                 ?_ser_isrx 0072               ??_calibrateIR 0059                     ___awmod 0B48  
           __size_of___wmul 002C                     ___ftmul 0F12                     ___fttol 0E6C  
                   ___lwdiv 09A2                     ___lwmod 08CF   __size_of_adc_read_channel 003B  
                ??___awtoft 0039                  ??___ftpack 0025                  ??_adc_read 0022  
           __size_of_rotate 0050                     _scan360 0BB0                     _dpowers 0810  
          ___awmod@dividend 0022                     _lowByte 00CD                     _ser_tmp 00D0  
                   _sprintf 061A                  ??_lcd_init 0023        end_of_initialization 1615  
              ??_ChargeMode 0059           __end_of_ser_getch 169C                     init_ram 1524  
                ??_init_adc 0020           __end_of_ser_putch 15C6           __end_of_robo_init 08CF  
         __end_of_robotMove 0E6C                _LeftReleased 0385           __end_of_robotTurn 0D2F  
                ??_ser_init 0020                  ??_ser_isrx 0020                     rotate@i 0028  
              _DownReleased 0383               _RightReleased 038C    __size_of_readAvgDistance 0055  
                _robot_read 0A42           ?_lcd_write_string 0027          __end_of_ChargeMode 095B  
       __end_of_calibrateIR 0B48          ??_lcd_write_string 0029                 AT25256A@CS0 0038  
               AT25256A@CS1 0039           adc_read@adc_value 0024                   i1___lwmod 17BC  
                _totalSteps 00C0                  main@choice 0068               ?_spi_transfer 0072  
               ___ftmul@exp 0046               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 1670           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 0A42         start_initialization 15EF       __size_of_readDistance 0016  
         __size_of_Debounce 0098                  ?i1___lwmod 0072              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038D              _RTC_FLAG_250MS 0388  
            _RTC_FLAG_500MS 0389                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 0AEA                 __pdataBANK1 00D5            _adc_read_channel 1781  
               ?_robot_read 0072                    ??_rotate 0026                _readDistance 1571  
         __size_of___awtoft 002C           __size_of___ftpack 007D           __size_of_adc_read 0029  
               __pbssCOMMON 007D           ??_readAvgDistance 0030               __pcstackBANK0 0020  
         __size_of_lcd_init 002B                 sprintf@_val 003F                 sprintf@flag 003D  
         robotMove@distance 0059                 sprintf@prec 003E                _current_step 00E1  
          readAvgDistance@i 0032           __size_of_init_adc 0016            ___lwdiv@dividend 0028  
                  ?___awmod 0020                    ?___ftmul 003C           __size_of_ser_init 002E  
                  ?___fttol 0028           __size_of_ser_isrx 0019                    ?___lwdiv 0026  
                  ?___lwmod 002E                   __pstrings 0800                   _dist_high 00B4  
                  ?_scan360 0059         readDistance@fullval 002C                  ser_getch@c 0021  
          ___lwdiv@quotient 002B                 ??i1___lwmod 0076                    ?_sprintf 0034  
   __size_of_lcd_set_cursor 000B           interrupt_function 0004      __size_of_UpdateDisplay 015C  
            ___wmul@product 0024         __size_of_robot_read 0053                  ser_putch@c 0021  
                 _ser_getch 1670                   _ser_putch 15A0                   _robo_init 08B6  
                 _robotMove 0DC7                   _robotTurn 0CA7                _RightPressed 038B  
      __size_of_ReadButtons 0030        __end_of_spi_transfer 1547                 __stringbase 080F  
         ___wmul@multiplier 0020      UpdateDisplay@adcOutput 0049            spi_transfer@data 0022  
          spi_transfer@temp 0021                    _Debounce 0D2F           _LeftDebounceCount 00C7  
 __size_of_lcd_write_string 002C          scan360@lowestSteps 005D     __size_of_lcd_write_data 0013  
                ?_ser_getch 0072                  ?_ser_putch 0072     adc_read_channel@channel 0027  
             _RTC_FLAG_10MS 0386               _RTC_FLAG_50MS 038A                  ?_robo_init 0072  
                 init_fetch 1520                  ?_robotMove 0059                  ?_robotTurn 0022  
                _ADCconvert 029B            __size_of___awmod 0068            __size_of___ftmul 00EE  
          __size_of___fttol 00A6            __size_of___lwdiv 0050            __size_of___lwmod 0046  
                  ___awtoft 169C                    ___ftpack 0C2A               _UpdateDisplay 04BE  
                  _adc_read 15C6                 _currentMenu 00CA            __size_of_scan360 007A  
           ___lwdiv@divisor 0026             ___lwdiv@counter 002D                 _menuStrings 00D5  
                  _highByte 00CC                    _lcd_init 1619                    _distance 00B8  
                  _dist_low 00B6            __size_of_sprintf 0100    __end_of_adc_read_channel 17BC  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 155B  
             __size_of_isr1 00DD               __size_of_main 0286               __size_of_init 002F  
                  clear_ram 07F7                    _ser_init 16F4                    _ser_isrx 1587  
                  main@RT2A 0066                    main@RT2P 006B             _readAvgDistance 0A95  
              ?_calibrateIR 0072              ?_UpdateDisplay 0072                ??_robot_read 0022  
       _CenterDebounceCount 00C3                _RTC_FLAG_1MS 0387          UpdateDisplay@F1229 0190  
                  intlevel1 0000              _lcd_set_cursor 14F5                   sprintf@ap 003C  
                 sprintf@sp 0043            ___lwmod@dividend 0030          __end_of_robot_read 0A95  
                 stringcode 080A                 ??_ser_getch 0020                 _serialInput 00D1  
               ??_ser_putch 0020               _distTravelled 00B2                 ??_robo_init 0022  
     __size_of_spi_transfer 0014                 ??_robotMove 005B                 ??_robotTurn 0024  
               ?_ADCconvert 0072           _lcd_write_control 1547            scan360@lowestVal 005B  
        ?_lcd_write_control 0072                  _OPTION_REG 0081                    sprintf@c 0044  
                  sprintf@f 0034             ___lwmod@divisor 002E             ___lwmod@counter 0033  
                  stringdir 080A                    stringtab 0800         ??_lcd_write_control 0020  
    __end_of_lcd_set_cursor 1500            _lcd_write_string 16C8                _spi_transfer 1533  
         _current_direction 00CB                 _RTC_Counter 00B0     __end_of_readAvgDistance 0AEA  
            _lcd_write_data 150D  
