

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Apr 20 16:12:51 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_Menu
    48                           	FNCALL	_main,_spi_transfer
    49                           	FNCALL	_main,_robotMove
    50                           	FNCALL	_main,_robotTurn
    51                           	FNCALL	_main,_ser_putch
    52                           	FNCALL	_init,_init_adc
    53                           	FNCALL	_init,_lcd_init
    54                           	FNCALL	_init,_ser_init
    55                           	FNCALL	_init,_robo_init
    56                           	FNCALL	_lcd_init,_lcd_write_control
    57                           	FNCALL	_robotTurn,_ser_putch
    58                           	FNCALL	_robotMove,_ser_putch
    59                           	FNCALL	_robo_init,_ser_putch
    60                           	FNROOT	_main
    61                           	FNCALL	_isr1,___lwmod
    62                           	FNCALL	_isr1,_readAvgDistance
    63                           	FNCALL	_isr1,_UpdateDisplay
    64                           	FNCALL	_isr1,_ReadButtons
    65                           	FNCALL	_UpdateDisplay,i1_lcd_write_control
    66                           	FNCALL	_UpdateDisplay,_sprintf
    67                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    68                           	FNCALL	_UpdateDisplay,_lcd_write_string
    69                           	FNCALL	_UpdateDisplay,___awmod
    70                           	FNCALL	_readAvgDistance,_readDistance
    71                           	FNCALL	_readAvgDistance,___lwdiv
    72                           	FNCALL	_readAvgDistance,_ADCconvert
    73                           	FNCALL	_readDistance,_adc_read_channel
    74                           	FNCALL	_lcd_write_string,_lcd_write_data
    75                           	FNCALL	_lcd_set_cursor,i1_lcd_write_control
    76                           	FNCALL	_sprintf,___lwdiv
    77                           	FNCALL	_sprintf,___lwmod
    78                           	FNCALL	_ADCconvert,___wmul
    79                           	FNCALL	_ADCconvert,___lwdiv
    80                           	FNCALL	_ReadButtons,_Debounce
    81                           	FNCALL	_adc_read_channel,_adc_read
    82                           	FNCALL	intlevel1,_isr1
    83                           	global	intlevel1
    84                           	FNROOT	intlevel1
    85                           	global	_current_step
    86                           	global	_menuStrings
    87                           	global	_shortMenuStrings
    88                           psect	idataBANK0,class=CODE,space=0,delta=2
    89                           global __pidataBANK0
    90  07FF                     __pidataBANK0:
    91                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
    92                           	line	21
    93                           
    94                           ;initializer for _current_step
    95  07FF  343C               	retlw	03Ch
    96                           psect	idataBANK1,class=CODE,space=0,delta=2
    97                           global __pidataBANK1
    98  0A32                     __pidataBANK1:
    99                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   100                           	line	32
   101                           
   102                           ;initializer for _menuStrings
   103  0A32  341A               	retlw	(STR_1-__stringbase)&0ffh
   104  0A33  3421               	retlw	(STR_2-__stringbase)&0ffh
   105  0A34  3428               	retlw	(STR_3-__stringbase)&0ffh
   106  0A35  342F               	retlw	(STR_4-__stringbase)&0ffh
   107  0A36  3436               	retlw	(STR_5-__stringbase)&0ffh
   108                           	line	33
   109                           
   110                           ;initializer for _shortMenuStrings
   111  0A37  343D               	retlw	(STR_6-__stringbase)&0ffh
   112  0A38  3441               	retlw	(STR_7-__stringbase)&0ffh
   113  0A39  3445               	retlw	(STR_8-__stringbase)&0ffh
   114  0A3A  3449               	retlw	(STR_9-__stringbase)&0ffh
   115  0A3B  344D               	retlw	(STR_10-__stringbase)&0ffh
   116                           	global	_dpowers
   117                           psect	strings,class=STRING,delta=2
   118                           global __pstrings
   119  0800                     __pstrings:
   120                           ;	global	stringdir,stringtab,__stringbase
   121  0800                     stringtab:
   122                           ;	String table - string pointers are 1 byte each
   123  0800  1BFF               	btfsc	(btemp+1),7
   124  0801  280A               	ljmp	stringcode
   125  0802  1383               	bcf	status,7
   126  0803  187F               	btfsc	(btemp+1),0
   127  0804  1783               	bsf	status,7
   128  0805  0800               	movf	indf,w
   129  0806  0A84               	incf fsr
   130  0807  1903               skipnz
   131  0808  0AFF               incf btemp+1
   132  0809  0008               	return
   133  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   134  080A  3008               movlw high(stringdir)
   135  080B  008A               movwf pclath
   136  080C  0804               movf fsr,w
   137  080D  0A84               incf fsr
   138  080E  0782               	addwf pc
   139  080F                     __stringbase:
   140  080F  3400               	retlw	0
   141                           psect	strings
   142                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   143                           	line	350
   144  0810                     _dpowers:
   145  0810  3401               	retlw	01h
   146  0811  3400               	retlw	0
   147                           
   148  0812  340A               	retlw	0Ah
   149  0813  3400               	retlw	0
   150                           
   151  0814  3464               	retlw	064h
   152  0815  3400               	retlw	0
   153                           
   154  0816  34E8               	retlw	0E8h
   155  0817  3403               	retlw	03h
   156                           
   157  0818  3410               	retlw	010h
   158  0819  3427               	retlw	027h
   159                           
   160                           	global	_dpowers
   161                           	global	_RTC_Counter
   162                           	global	_adcVal
   163                           	global	_dist_high
   164                           	global	_dist_low
   165                           	global	_pos
   166                           	global	_total
   167                           	global	_CenterDebounceCount
   168                           	global	_DownDebounceCount
   169                           	global	_LeftDebounceCount
   170                           	global	_RightDebounceCount
   171                           	global	_UpDebounceCount
   172                           	global	_buttonPressed
   173                           	global	_current_direction
   174                           	global	_highByte
   175                           	global	_lowByte
   176                           	global	_rxiptr
   177                           	global	_rxoptr
   178                           	global	_ser_tmp
   179                           	global	_serialInput
   180                           	global	_txiptr
   181                           	global	_txoptr
   182                           	global	_CenterPressed
   183                           	global	_CenterReleased
   184                           	global	_DownPressed
   185                           	global	_DownReleased
   186                           	global	_LeftPressed
   187                           	global	_LeftReleased
   188                           	global	_RTC_FLAG_10MS
   189                           	global	_RTC_FLAG_1MS
   190                           	global	_RTC_FLAG_250MS
   191                           	global	_RTC_FLAG_500MS
   192                           	global	_RTC_FLAG_50MS
   193                           	global	_RightPressed
   194                           	global	_RightReleased
   195                           	global	_UpPressed
   196                           	global	_UpReleased
   197                           	global	UpdateDisplay@F1223
   198                           	global	_rxfifo
   199                           	global	_txfifo
   200                           	global	_distance
   201                           	global	_turnhighByte
   202                           	global	_turnlowByte
   203                           	global	_ADCON0
   204  001F                     _ADCON0	set	31
   205                           	global	_ADRESH
   206  001E                     _ADRESH	set	30
   207                           	global	_PORTA
   208  0005                     _PORTA	set	5
   209                           	global	_PORTC
   210  0007                     _PORTC	set	7
   211                           	global	_PORTD
   212  0008                     _PORTD	set	8
   213                           	global	_PORTE
   214  0009                     _PORTE	set	9
   215                           	global	_RCREG
   216  001A                     _RCREG	set	26
   217                           	global	_SSPBUF
   218  0013                     _SSPBUF	set	19
   219                           	global	_SSPCON
   220  0014                     _SSPCON	set	20
   221                           	global	_TMR0
   222  0001                     _TMR0	set	1
   223                           	global	_TXREG
   224  0019                     _TXREG	set	25
   225                           	global	_CARRY
   226  0018                     _CARRY	set	24
   227                           	global	_CHS0
   228  00FB                     _CHS0	set	251
   229                           	global	_CHS1
   230  00FC                     _CHS1	set	252
   231                           	global	_CHS2
   232  00FD                     _CHS2	set	253
   233                           	global	_CREN
   234  00C4                     _CREN	set	196
   235                           	global	_CS0
   236  0038                     _CS0	set	56
   237                           	global	_CS1
   238  0039                     _CS1	set	57
   239                           	global	_GIE
   240  005F                     _GIE	set	95
   241                           	global	_GO
   242  00FA                     _GO	set	250
   243                           	global	_OERR
   244  00C1                     _OERR	set	193
   245                           	global	_RB0
   246  0030                     _RB0	set	48
   247                           	global	_RB2
   248  0032                     _RB2	set	50
   249                           	global	_RB3
   250  0033                     _RB3	set	51
   251                           	global	_RB4
   252  0034                     _RB4	set	52
   253                           	global	_RB5
   254  0035                     _RB5	set	53
   255                           	global	_RB6
   256  0036                     _RB6	set	54
   257                           	global	_RC0
   258  0038                     _RC0	set	56
   259                           	global	_RC1
   260  0039                     _RC1	set	57
   261                           	global	_RC2
   262  003A                     _RC2	set	58
   263                           	global	_RCIF
   264  0065                     _RCIF	set	101
   265                           	global	_RE0
   266  0048                     _RE0	set	72
   267                           	global	_RE1
   268  0049                     _RE1	set	73
   269                           	global	_RE2
   270  004A                     _RE2	set	74
   271                           	global	_RX9
   272  00C6                     _RX9	set	198
   273                           	global	_SPEN
   274  00C7                     _SPEN	set	199
   275                           	global	_SSPIF
   276  0063                     _SSPIF	set	99
   277                           	global	_TMR0IE
   278  005D                     _TMR0IE	set	93
   279                           	global	_TMR0IF
   280  005A                     _TMR0IF	set	90
   281                           	global	_TXIF
   282  0064                     _TXIF	set	100
   283                           	global	_ADCON1
   284  009F                     _ADCON1	set	159
   285                           	global	_ADRESL
   286  009E                     _ADRESL	set	158
   287                           	global	_OPTION_REG
   288  0081                     _OPTION_REG	set	129
   289                           	global	_SPBRG
   290  0099                     _SPBRG	set	153
   291                           	global	_SSPSTAT
   292  0094                     _SSPSTAT	set	148
   293                           	global	_TRISA
   294  0085                     _TRISA	set	133
   295                           	global	_TRISB
   296  0086                     _TRISB	set	134
   297                           	global	_TRISC
   298  0087                     _TRISC	set	135
   299                           	global	_TRISD
   300  0088                     _TRISD	set	136
   301                           	global	_TRISE
   302  0089                     _TRISE	set	137
   303                           	global	_BRGH
   304  04C2                     _BRGH	set	1218
   305                           	global	_RCIE
   306  0465                     _RCIE	set	1125
   307                           	global	_SYNC
   308  04C4                     _SYNC	set	1220
   309                           	global	_TX9
   310  04C6                     _TX9	set	1222
   311                           	global	_TXEN
   312  04C5                     _TXEN	set	1221
   313                           	global	_TXIE
   314  0464                     _TXIE	set	1124
   315                           	global	_EEADR
   316  010D                     _EEADR	set	269
   317                           	global	_EEDATA
   318  010C                     _EEDATA	set	268
   319                           	global	_EECON1
   320  018C                     _EECON1	set	396
   321                           	global	_EECON2
   322  018D                     _EECON2	set	397
   323                           	global	_RD
   324  0C60                     _RD	set	3168
   325                           	global	_WR
   326  0C61                     _WR	set	3169
   327                           	global	_WREN
   328  0C62                     _WREN	set	3170
   329                           	
   330  081A                     STR_11:	
   331  081A  3441               	retlw	65	;'A'
   332  081B  3444               	retlw	68	;'D'
   333  081C  3443               	retlw	67	;'C'
   334  081D  343A               	retlw	58	;':'
   335  081E  3425               	retlw	37	;'%'
   336  081F  3464               	retlw	100	;'d'
   337  0820  3420               	retlw	32	;' '
   338  0821  3444               	retlw	68	;'D'
   339  0822  3469               	retlw	105	;'i'
   340  0823  3473               	retlw	115	;'s'
   341  0824  3474               	retlw	116	;'t'
   342  0825  343A               	retlw	58	;':'
   343  0826  3425               	retlw	37	;'%'
   344  0827  3464               	retlw	100	;'d'
   345  0828  3400               	retlw	0
   346                           psect	strings
   347                           	
   348  0829                     STR_1:	
   349  0829  3454               	retlw	84	;'T'
   350  082A  3468               	retlw	104	;'h'
   351  082B  3469               	retlw	105	;'i'
   352  082C  346E               	retlw	110	;'n'
   353  082D  3467               	retlw	103	;'g'
   354  082E  3431               	retlw	49	;'1'
   355  082F  3400               	retlw	0
   356                           psect	strings
   357                           	
   358  0830                     STR_2:	
   359  0830  3454               	retlw	84	;'T'
   360  0831  3468               	retlw	104	;'h'
   361  0832  3469               	retlw	105	;'i'
   362  0833  346E               	retlw	110	;'n'
   363  0834  3467               	retlw	103	;'g'
   364  0835  3432               	retlw	50	;'2'
   365  0836  3400               	retlw	0
   366                           psect	strings
   367                           	
   368  0837                     STR_3:	
   369  0837  3454               	retlw	84	;'T'
   370  0838  3468               	retlw	104	;'h'
   371  0839  3469               	retlw	105	;'i'
   372  083A  346E               	retlw	110	;'n'
   373  083B  3467               	retlw	103	;'g'
   374  083C  3433               	retlw	51	;'3'
   375  083D  3400               	retlw	0
   376                           psect	strings
   377                           	
   378  083E                     STR_4:	
   379  083E  3454               	retlw	84	;'T'
   380  083F  3468               	retlw	104	;'h'
   381  0840  3469               	retlw	105	;'i'
   382  0841  346E               	retlw	110	;'n'
   383  0842  3467               	retlw	103	;'g'
   384  0843  3434               	retlw	52	;'4'
   385  0844  3400               	retlw	0
   386                           psect	strings
   387                           	
   388  0845                     STR_5:	
   389  0845  3454               	retlw	84	;'T'
   390  0846  3468               	retlw	104	;'h'
   391  0847  3469               	retlw	105	;'i'
   392  0848  346E               	retlw	110	;'n'
   393  0849  3467               	retlw	103	;'g'
   394  084A  3435               	retlw	53	;'5'
   395  084B  3400               	retlw	0
   396                           psect	strings
   397                           	
   398  084C                     STR_6:	
   399  084C  3454               	retlw	84	;'T'
   400  084D  3468               	retlw	104	;'h'
   401  084E  3431               	retlw	49	;'1'
   402  084F  3400               	retlw	0
   403                           psect	strings
   404                           	
   405  0850                     STR_7:	
   406  0850  3454               	retlw	84	;'T'
   407  0851  3468               	retlw	104	;'h'
   408  0852  3432               	retlw	50	;'2'
   409  0853  3400               	retlw	0
   410                           psect	strings
   411                           	
   412  0854                     STR_8:	
   413  0854  3454               	retlw	84	;'T'
   414  0855  3468               	retlw	104	;'h'
   415  0856  3433               	retlw	51	;'3'
   416  0857  3400               	retlw	0
   417                           psect	strings
   418                           	
   419  0858                     STR_9:	
   420  0858  3454               	retlw	84	;'T'
   421  0859  3468               	retlw	104	;'h'
   422  085A  3434               	retlw	52	;'4'
   423  085B  3400               	retlw	0
   424                           psect	strings
   425                           	
   426  085C                     STR_10:	
   427  085C  3454               	retlw	84	;'T'
   428  085D  3468               	retlw	104	;'h'
   429  085E  3435               	retlw	53	;'5'
   430  085F  3400               	retlw	0
   431                           psect	strings
   432                           	file	"Assignment3_AldnoahZero.as"
   433                           	line	#
   434                           psect cinit,class=CODE,delta=2
   435                           global start_initialization
   436  0B94                     start_initialization:
   437                           
   438                           psect	bitbssBANK0,class=BANK0,bit,space=1
   439                           global __pbitbssBANK0
   440  0360                     __pbitbssBANK0:
   441  0360                     _CenterPressed:
   442  0360                            ds      1
   443                           
   444  0361                     _CenterReleased:
   445  0361                            ds      1
   446                           
   447  0362                     _DownPressed:
   448  0362                            ds      1
   449                           
   450  0363                     _DownReleased:
   451  0363                            ds      1
   452                           
   453  0364                     _LeftPressed:
   454  0364                            ds      1
   455                           
   456  0365                     _LeftReleased:
   457  0365                            ds      1
   458                           
   459  0366                     _RTC_FLAG_10MS:
   460  0366                            ds      1
   461                           
   462  0367                     _RTC_FLAG_1MS:
   463  0367                            ds      1
   464                           
   465  0368                     _RTC_FLAG_250MS:
   466  0368                            ds      1
   467                           
   468  0369                     _RTC_FLAG_500MS:
   469  0369                            ds      1
   470                           
   471  036A                     _RTC_FLAG_50MS:
   472  036A                            ds      1
   473                           
   474  036B                     _RightPressed:
   475  036B                            ds      1
   476                           
   477  036C                     _RightReleased:
   478  036C                            ds      1
   479                           
   480  036D                     _UpPressed:
   481  036D                            ds      1
   482                           
   483  036E                     _UpReleased:
   484  036E                            ds      1
   485                           
   486                           psect	bssBANK0,class=BANK0,space=1
   487                           global __pbssBANK0
   488  0051                     __pbssBANK0:
   489  0051                     _RTC_Counter:
   490  0051                            ds      2
   491                           
   492  0053                     _adcVal:
   493  0053                            ds      2
   494                           
   495  0055                     _dist_high:
   496  0055                            ds      2
   497                           
   498  0057                     _dist_low:
   499  0057                            ds      2
   500                           
   501  0059                     _pos:
   502  0059                            ds      2
   503                           
   504  005B                     _total:
   505  005B                            ds      2
   506                           
   507  005D                     _CenterDebounceCount:
   508  005D                            ds      1
   509                           
   510  005E                     _DownDebounceCount:
   511  005E                            ds      1
   512                           
   513  005F                     _LeftDebounceCount:
   514  005F                            ds      1
   515                           
   516  0060                     _RightDebounceCount:
   517  0060                            ds      1
   518                           
   519  0061                     _UpDebounceCount:
   520  0061                            ds      1
   521                           
   522  0062                     _buttonPressed:
   523  0062                            ds      1
   524                           
   525  0063                     _current_direction:
   526  0063                            ds      1
   527                           
   528  0064                     _highByte:
   529  0064                            ds      1
   530                           
   531  0065                     _lowByte:
   532  0065                            ds      1
   533                           
   534  0066                     _rxiptr:
   535  0066                            ds      1
   536                           
   537  0067                     _rxoptr:
   538  0067                            ds      1
   539                           
   540  0068                     _ser_tmp:
   541  0068                            ds      1
   542                           
   543  0069                     _serialInput:
   544  0069                            ds      1
   545                           
   546  006A                     _txiptr:
   547  006A                            ds      1
   548                           
   549  006B                     _txoptr:
   550  006B                            ds      1
   551                           
   552                           psect	dataBANK0,class=BANK0,space=1
   553                           global __pdataBANK0
   554  006E                     __pdataBANK0:
   555                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   556                           	line	21
   557  006E                     _current_step:
   558  006E                            ds      1
   559                           
   560                           psect	bssBANK1,class=BANK1,space=1
   561                           global __pbssBANK1
   562  00A0                     __pbssBANK1:
   563  00A0                     UpdateDisplay@F1223:
   564  00A0                            ds      16
   565                           
   566  00B0                     _rxfifo:
   567  00B0                            ds      16
   568                           
   569  00C0                     _txfifo:
   570  00C0                            ds      16
   571                           
   572  00D0                     _distance:
   573  00D0                            ds      2
   574                           
   575  00D2                     _turnhighByte:
   576  00D2                            ds      1
   577                           
   578  00D3                     _turnlowByte:
   579  00D3                            ds      1
   580                           
   581                           psect	dataBANK1,class=BANK1,space=1
   582                           global __pdataBANK1
   583  00D4                     __pdataBANK1:
   584                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   585                           	line	32
   586  00D4                     _menuStrings:
   587  00D4                            ds      5
   588                           
   589                           psect	dataBANK1
   590                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   591                           	line	33
   592  00D9                     _shortMenuStrings:
   593  00D9                            ds      5
   594                           
   595                           psect clrtext,class=CODE,delta=2
   596                           global clear_ram
   597                           ;	Called with FSR containing the base address, and
   598                           ;	W with the last address+1
   599  0A21                     clear_ram:
   600  0A21  0064               	clrwdt			;clear the watchdog before getting into this loop
   601  0A22                     clrloop:
   602  0A22  0180               	clrf	indf		;clear RAM location pointed to by FSR
   603  0A23  0A84               	incf	fsr,f		;increment pointer
   604  0A24  0604               	xorwf	fsr,w		;XOR with final address
   605  0A25  1903               	btfsc	status,2	;have we reached the end yet?
   606  0A26  3400               	retlw	0		;all done for this memory range, return
   607  0A27  0604               	xorwf	fsr,w		;XOR again to restore value
   608  0A28  2A22               	goto	clrloop		;do the next byte
   609                           
   610                           ; Clear objects allocated to BITBANK0
   611                           psect cinit,class=CODE,delta=2
   612  0B94  01EC               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   613  0B95  01ED               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   614                           ; Clear objects allocated to BANK0
   615                           psect cinit,class=CODE,delta=2
   616  0B96  1383               	bcf	status, 7	;select IRP bank0
   617  0B97  3051               	movlw	low(__pbssBANK0)
   618  0B98  0084               	movwf	fsr
   619  0B99  306C               	movlw	low((__pbssBANK0)+01Bh)
   620  0B9A  120A  158A  2221   	fcall	clear_ram
              120A  158A         
   621                           ; Clear objects allocated to BANK1
   622                           psect cinit,class=CODE,delta=2
   623  0B9F  30A0               	movlw	low(__pbssBANK1)
   624  0BA0  0084               	movwf	fsr
   625  0BA1  30D4               	movlw	low((__pbssBANK1)+034h)
   626  0BA2  120A  158A  2221   	fcall	clear_ram
              120A  158A         
   627                           global btemp
   628                           psect inittext,class=CODE,delta=2
   629                           global init_fetch,btemp
   630                           ;	Called with low address in FSR and high address in W
   631  0A4F                     init_fetch:
   632  0A4F  087E               	movf btemp,w
   633  0A50  008A               	movwf pclath
   634  0A51  087F               	movf btemp+1,w
   635  0A52  0082               	movwf pc
   636                           global init_ram
   637                           ;Called with:
   638                           ;	high address of idata address in btemp 
   639                           ;	low address of idata address in btemp+1 
   640                           ;	low address of data in FSR
   641                           ;	high address + 1 of data in btemp-1
   642  0A53                     init_ram:
   643  0A53  120A  158A  224F   	fcall init_fetch
              120A  158A         
   644  0A58  0080               	movwf indf,f
   645  0A59  0A84               	incf fsr,f
   646  0A5A  0804               	movf fsr,w
   647  0A5B  067D               	xorwf btemp-1,w
   648  0A5C  1903               	btfsc status,2
   649  0A5D  3400               	retlw 0
   650  0A5E  0AFF               	incf btemp+1,f
   651  0A5F  1903               	btfsc status,2
   652  0A60  0AFE               	incf btemp,f
   653  0A61  2A53               	goto init_ram
   654                           ; Initialize objects allocated to BANK1
   655                           psect cinit,class=CODE,delta=2
   656                           global init_ram, __pidataBANK1
   657  0BA7  30DE               	movlw low(__pdataBANK1+10)
   658  0BA8  00FD               	movwf btemp-1,f
   659  0BA9  300A               	movlw high(__pidataBANK1)
   660  0BAA  00FE               	movwf btemp,f
   661  0BAB  3032               	movlw low(__pidataBANK1)
   662  0BAC  00FF               	movwf btemp+1,f
   663  0BAD  30D4               	movlw low(__pdataBANK1)
   664  0BAE  0084               	movwf fsr,f
   665  0BAF  120A  158A  2253   	fcall init_ram
              120A  158A         
   666                           ; Initialize objects allocated to BANK0
   667                           	global __pidataBANK0
   668                           psect cinit,class=CODE,delta=2
   669  0BB4  120A  118A  27FF   	fcall	__pidataBANK0+0		;fetch initializer
              120A  158A         
   670  0BB9  00EE               	movwf	__pdataBANK0+0&07fh		
   671                           psect cinit,class=CODE,delta=2
   672                           global end_of_initialization
   673                           
   674                           ;End of C runtime variable initialization code
   675                           
   676  0BBA                     end_of_initialization:
   677  0BBA  0183               clrf status
   678  0BBB  120A  118A  2815   ljmp _main	;jump to C main() function
   679                           psect	cstackBANK1,class=BANK1,space=1
   680                           global __pcstackBANK1
   681  00DE                     __pcstackBANK1:
   682                           	global	??_ser_init
   683  00DE                     ??_ser_init:	; 0 bytes @ 0x0
   684                           	global	??_Menu
   685  00DE                     ??_Menu:	; 0 bytes @ 0x0
   686                           	global	??_ser_putch
   687  00DE                     ??_ser_putch:	; 0 bytes @ 0x0
   688                           	global	??_init_adc
   689  00DE                     ??_init_adc:	; 0 bytes @ 0x0
   690                           	global	??_lcd_write_control
   691  00DE                     ??_lcd_write_control:	; 0 bytes @ 0x0
   692                           	global	??_spi_transfer
   693  00DE                     ??_spi_transfer:	; 0 bytes @ 0x0
   694                           	global	Menu@input
   695  00DE                     Menu@input:	; 1 bytes @ 0x0
   696  00DE                     	ds	1
   697                           	global	spi_transfer@temp
   698  00DF                     spi_transfer@temp:	; 1 bytes @ 0x1
   699                           	global	ser_putch@c
   700  00DF                     ser_putch@c:	; 1 bytes @ 0x1
   701  00DF                     	ds	1
   702                           	global	??_robo_init
   703  00E0                     ??_robo_init:	; 0 bytes @ 0x2
   704                           	global	?_robotMove
   705  00E0                     ?_robotMove:	; 0 bytes @ 0x2
   706                           	global	?_robotTurn
   707  00E0                     ?_robotTurn:	; 0 bytes @ 0x2
   708                           	global	lcd_write_control@databyte
   709  00E0                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   710                           	global	spi_transfer@data
   711  00E0                     spi_transfer@data:	; 1 bytes @ 0x2
   712                           	global	robotMove@distance
   713  00E0                     robotMove@distance:	; 2 bytes @ 0x2
   714                           	global	robotTurn@distance
   715  00E0                     robotTurn@distance:	; 2 bytes @ 0x2
   716  00E0                     	ds	1
   717                           	global	??_lcd_init
   718  00E1                     ??_lcd_init:	; 0 bytes @ 0x3
   719                           	global	??_init
   720  00E1                     ??_init:	; 0 bytes @ 0x3
   721  00E1                     	ds	1
   722                           	global	??_robotMove
   723  00E2                     ??_robotMove:	; 0 bytes @ 0x4
   724                           	global	??_robotTurn
   725  00E2                     ??_robotTurn:	; 0 bytes @ 0x4
   726  00E2                     	ds	1
   727                           	global	??_main
   728  00E3                     ??_main:	; 0 bytes @ 0x5
   729  00E3                     	ds	3
   730                           	global	main@choice
   731  00E6                     main@choice:	; 1 bytes @ 0x8
   732  00E6                     	ds	1
   733                           psect	cstackCOMMON,class=COMMON,space=1
   734                           global __pcstackCOMMON
   735  0070                     __pcstackCOMMON:
   736                           	global	?_readAvgDistance
   737  0070                     ?_readAvgDistance:	; 0 bytes @ 0x0
   738                           	global	?_UpdateDisplay
   739  0070                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   740                           	global	?_ser_init
   741  0070                     ?_ser_init:	; 0 bytes @ 0x0
   742                           	global	?_robo_init
   743  0070                     ?_robo_init:	; 0 bytes @ 0x0
   744                           	global	?_ser_putch
   745  0070                     ?_ser_putch:	; 0 bytes @ 0x0
   746                           	global	?_ADCconvert
   747  0070                     ?_ADCconvert:	; 0 bytes @ 0x0
   748                           	global	?_init_adc
   749  0070                     ?_init_adc:	; 0 bytes @ 0x0
   750                           	global	?_lcd_write_control
   751  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   752                           	global	?_lcd_write_data
   753  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   754                           	global	??_lcd_write_data
   755  0070                     ??_lcd_write_data:	; 0 bytes @ 0x0
   756                           	global	?_lcd_set_cursor
   757  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   758                           	global	?_lcd_init
   759  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   760                           	global	?_isr1
   761  0070                     ?_isr1:	; 0 bytes @ 0x0
   762                           	global	?_init
   763  0070                     ?_init:	; 0 bytes @ 0x0
   764                           	global	?_main
   765  0070                     ?_main:	; 0 bytes @ 0x0
   766                           	global	?_Debounce
   767  0070                     ?_Debounce:	; 0 bytes @ 0x0
   768                           	global	??_Debounce
   769  0070                     ??_Debounce:	; 0 bytes @ 0x0
   770                           	global	?i1_lcd_write_control
   771  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
   772                           	global	??i1_lcd_write_control
   773  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
   774                           	global	?_ReadButtons
   775  0070                     ?_ReadButtons:	; 1 bytes @ 0x0
   776                           	global	?_Menu
   777  0070                     ?_Menu:	; 1 bytes @ 0x0
   778                           	global	?_adc_read_channel
   779  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
   780                           	global	?_spi_transfer
   781  0070                     ?_spi_transfer:	; 1 bytes @ 0x0
   782                           	global	?_adc_read
   783  0070                     ?_adc_read:	; 2 bytes @ 0x0
   784                           	global	?___wmul
   785  0070                     ?___wmul:	; 2 bytes @ 0x0
   786                           	global	?___awmod
   787  0070                     ?___awmod:	; 2 bytes @ 0x0
   788                           	global	UpdateDisplay@serialInput
   789  0070                     UpdateDisplay@serialInput:	; 1 bytes @ 0x0
   790                           	global	___wmul@multiplier
   791  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   792                           	global	___awmod@divisor
   793  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   794  0070                     	ds	1
   795                           	global	??_ReadButtons
   796  0071                     ??_ReadButtons:	; 0 bytes @ 0x1
   797  0071                     	ds	1
   798                           	global	??_adc_read
   799  0072                     ??_adc_read:	; 0 bytes @ 0x2
   800                           	global	lcd_write_data@databyte
   801  0072                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   802                           	global	i1lcd_write_control@databyte
   803  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
   804                           	global	___wmul@multiplicand
   805  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   806                           	global	___awmod@dividend
   807  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   808  0072                     	ds	1
   809                           	global	??_lcd_set_cursor
   810  0073                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   811                           	global	lcd_set_cursor@address
   812  0073                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   813  0073                     	ds	1
   814                           	global	??___wmul
   815  0074                     ??___wmul:	; 0 bytes @ 0x4
   816                           	global	??___awmod
   817  0074                     ??___awmod:	; 0 bytes @ 0x4
   818                           	global	adc_read@adc_value
   819  0074                     adc_read@adc_value:	; 2 bytes @ 0x4
   820                           	global	___wmul@product
   821  0074                     ___wmul@product:	; 2 bytes @ 0x4
   822  0074                     	ds	1
   823                           	global	___awmod@counter
   824  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   825  0075                     	ds	1
   826                           	global	??_adc_read_channel
   827  0076                     ??_adc_read_channel:	; 0 bytes @ 0x6
   828                           	global	?___lwdiv
   829  0076                     ?___lwdiv:	; 2 bytes @ 0x6
   830                           	global	___awmod@sign
   831  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   832                           	global	___lwdiv@divisor
   833  0076                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   834  0076                     	ds	1
   835                           	global	?_lcd_write_string
   836  0077                     ?_lcd_write_string:	; 0 bytes @ 0x7
   837                           	global	adc_read_channel@channel
   838  0077                     adc_read_channel@channel:	; 1 bytes @ 0x7
   839                           	global	lcd_write_string@s
   840  0077                     lcd_write_string@s:	; 2 bytes @ 0x7
   841  0077                     	ds	1
   842                           	global	?_readDistance
   843  0078                     ?_readDistance:	; 2 bytes @ 0x8
   844                           	global	___lwdiv@dividend
   845  0078                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   846  0078                     	ds	1
   847                           	global	??_lcd_write_string
   848  0079                     ??_lcd_write_string:	; 0 bytes @ 0x9
   849  0079                     	ds	1
   850                           	global	??_readDistance
   851  007A                     ??_readDistance:	; 0 bytes @ 0xA
   852                           	global	??___lwdiv
   853  007A                     ??___lwdiv:	; 0 bytes @ 0xA
   854  007A                     	ds	1
   855                           	global	___lwdiv@quotient
   856  007B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
   857  007B                     	ds	1
   858                           	global	readDistance@fullval
   859  007C                     readDistance@fullval:	; 2 bytes @ 0xC
   860  007C                     	ds	1
   861                           	global	___lwdiv@counter
   862  007D                     ___lwdiv@counter:	; 1 bytes @ 0xD
   863  007D                     	ds	1
   864                           	global	??_readAvgDistance
   865  007E                     ??_readAvgDistance:	; 0 bytes @ 0xE
   866                           psect	cstackBANK0,class=BANK0,space=1
   867                           global __pcstackBANK0
   868  0020                     __pcstackBANK0:
   869                           	global	??_ADCconvert
   870  0020                     ??_ADCconvert:	; 0 bytes @ 0x0
   871                           	global	?___lwmod
   872  0020                     ?___lwmod:	; 2 bytes @ 0x0
   873                           	global	___lwmod@divisor
   874  0020                     ___lwmod@divisor:	; 2 bytes @ 0x0
   875  0020                     	ds	2
   876                           	global	readAvgDistance@fullval
   877  0022                     readAvgDistance@fullval:	; 2 bytes @ 0x2
   878                           	global	___lwmod@dividend
   879  0022                     ___lwmod@dividend:	; 2 bytes @ 0x2
   880  0022                     	ds	2
   881                           	global	??___lwmod
   882  0024                     ??___lwmod:	; 0 bytes @ 0x4
   883                           	global	readAvgDistance@i
   884  0024                     readAvgDistance@i:	; 2 bytes @ 0x4
   885  0024                     	ds	1
   886                           	global	___lwmod@counter
   887  0025                     ___lwmod@counter:	; 1 bytes @ 0x5
   888  0025                     	ds	1
   889                           	global	?_sprintf
   890  0026                     ?_sprintf:	; 2 bytes @ 0x6
   891                           	global	sprintf@f
   892  0026                     sprintf@f:	; 1 bytes @ 0x6
   893  0026                     	ds	5
   894                           	global	??_sprintf
   895  002B                     ??_sprintf:	; 0 bytes @ 0xB
   896  002B                     	ds	3
   897                           	global	sprintf@ap
   898  002E                     sprintf@ap:	; 1 bytes @ 0xE
   899  002E                     	ds	1
   900                           	global	sprintf@flag
   901  002F                     sprintf@flag:	; 1 bytes @ 0xF
   902  002F                     	ds	1
   903                           	global	sprintf@prec
   904  0030                     sprintf@prec:	; 1 bytes @ 0x10
   905  0030                     	ds	1
   906                           	global	sprintf@_val
   907  0031                     sprintf@_val:	; 4 bytes @ 0x11
   908  0031                     	ds	4
   909                           	global	sprintf@sp
   910  0035                     sprintf@sp:	; 1 bytes @ 0x15
   911  0035                     	ds	1
   912                           	global	sprintf@c
   913  0036                     sprintf@c:	; 1 bytes @ 0x16
   914  0036                     	ds	1
   915                           	global	??_UpdateDisplay
   916  0037                     ??_UpdateDisplay:	; 0 bytes @ 0x17
   917  0037                     	ds	5
   918                           	global	UpdateDisplay@adcOutput
   919  003C                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x1C
   920  003C                     	ds	16
   921                           	global	??_isr1
   922  004C                     ??_isr1:	; 0 bytes @ 0x2C
   923  004C                     	ds	5
   924 ;;Data sizes: Strings 70, constant 10, data 11, bss 79, persistent 0 stack 0
   925 ;;Auto spaces:   Size  Autos    Used
   926 ;; COMMON          14     14      14
   927 ;; BANK0           80     49      79
   928 ;; BANK1           80      9      71
   929 ;; BANK3           96      0       0
   930 ;; BANK2           96      0       0
   931                           
   932 ;;
   933 ;; Pointer list with targets:
   934                           
   935 ;; ?___awmod	int  size(1) Largest target is 0
   936 ;;
   937 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   938 ;;
   939 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
   940 ;;
   941 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   942 ;;
   943 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   944 ;;
   945 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
   946 ;;
   947 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
   948 ;;		 -> STR_11(CODE[15]), 
   949 ;;
   950 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
   951 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
   952 ;;
   953 ;; ?_sprintf	int  size(1) Largest target is 0
   954 ;;
   955 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   956 ;;		 -> ?_sprintf(BANK0[2]), 
   957 ;;
   958 ;; S8090$_cp	PTR const unsigned char  size(1) Largest target is 0
   959 ;;
   960 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   961 ;;
   962 ;; shortMenuStrings	PTR const unsigned char [5] size(1) Largest target is 4
   963 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
   964 ;;		 -> STR_6(CODE[4]), 
   965 ;;
   966 ;; menuStrings	PTR const unsigned char [5] size(1) Largest target is 7
   967 ;;		 -> STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 
   968 ;;		 -> STR_1(CODE[7]), 
   969 ;;
   970 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
   971 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
   972 ;;		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[7]), STR_4(CODE[7]), 
   973 ;;		 -> STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 
   974 ;;
   975                           
   976                           
   977 ;;
   978 ;; Critical Paths under _main in COMMON
   979 ;;
   980 ;;   None.
   981 ;;
   982 ;; Critical Paths under _isr1 in COMMON
   983 ;;
   984 ;;   _readAvgDistance->_readDistance
   985 ;;   _readAvgDistance->___lwdiv
   986 ;;   _readDistance->_adc_read_channel
   987 ;;   _lcd_write_string->___awmod
   988 ;;   _lcd_set_cursor->i1_lcd_write_control
   989 ;;   _sprintf->___lwdiv
   990 ;;   _ADCconvert->___lwdiv
   991 ;;   _ReadButtons->_Debounce
   992 ;;   _adc_read_channel->_adc_read
   993 ;;   ___lwmod->___lwdiv
   994 ;;   ___lwdiv->___wmul
   995 ;;
   996 ;; Critical Paths under _main in BANK0
   997 ;;
   998 ;;   None.
   999 ;;
  1000 ;; Critical Paths under _isr1 in BANK0
  1001 ;;
  1002 ;;   _isr1->_UpdateDisplay
  1003 ;;   _UpdateDisplay->_sprintf
  1004 ;;   _readAvgDistance->_ADCconvert
  1005 ;;   _sprintf->___lwmod
  1006 ;;
  1007 ;; Critical Paths under _main in BANK1
  1008 ;;
  1009 ;;   _main->_robotMove
  1010 ;;   _main->_robotTurn
  1011 ;;   _lcd_init->_lcd_write_control
  1012 ;;   _robotTurn->_ser_putch
  1013 ;;   _robotMove->_ser_putch
  1014 ;;   _robo_init->_ser_putch
  1015 ;;
  1016 ;; Critical Paths under _isr1 in BANK1
  1017 ;;
  1018 ;;   None.
  1019 ;;
  1020 ;; Critical Paths under _main in BANK3
  1021 ;;
  1022 ;;   None.
  1023 ;;
  1024 ;; Critical Paths under _isr1 in BANK3
  1025 ;;
  1026 ;;   None.
  1027 ;;
  1028 ;; Critical Paths under _main in BANK2
  1029 ;;
  1030 ;;   None.
  1031 ;;
  1032 ;; Critical Paths under _isr1 in BANK2
  1033 ;;
  1034 ;;   None.
  1035                           
  1036 ;;
  1037 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1038 ;;
  1039                           
  1040 ;;
  1041 ;;Call Graph Tables:
  1042 ;;
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; (0) _main                                                 4     4      0     319
  1047 ;;                                              5 BANK1      4     4      0
  1048 ;;                               _init
  1049 ;;                               _Menu
  1050 ;;                       _spi_transfer
  1051 ;;                          _robotMove
  1052 ;;                          _robotTurn
  1053 ;;                          _ser_putch
  1054 ;; ---------------------------------------------------------------------------------
  1055 ;; (1) _init                                                 1     1      0      44
  1056 ;;                                              3 BANK1      1     1      0
  1057 ;;                           _init_adc
  1058 ;;                           _lcd_init
  1059 ;;                           _ser_init
  1060 ;;                          _robo_init
  1061 ;; ---------------------------------------------------------------------------------
  1062 ;; (2) _lcd_init                                             0     0      0      22
  1063 ;;                  _lcd_write_control
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (1) _robotTurn                                            3     1      2      88
  1066 ;;                                              2 BANK1      3     1      2
  1067 ;;                          _ser_putch
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (1) _robotMove                                            3     1      2      88
  1070 ;;                                              2 BANK1      3     1      2
  1071 ;;                          _ser_putch
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (2) _robo_init                                            0     0      0      22
  1074 ;;                          _ser_putch
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; (3) _lcd_write_control                                    3     3      0      22
  1077 ;;                                              0 BANK1      3     3      0
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (2) _init_adc                                             1     1      0       0
  1080 ;;                                              0 BANK1      1     1      0
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (1) _ser_putch                                            2     2      0      22
  1083 ;;                                              0 BANK1      2     2      0
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; (1) _Menu                                                 1     1      0      22
  1086 ;;                                              0 BANK1      1     1      0
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (1) _spi_transfer                                         3     3      0      30
  1089 ;;                                              0 BANK1      3     3      0
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (2) _ser_init                                             1     1      0       0
  1092 ;;                                              0 BANK1      1     1      0
  1093 ;; ---------------------------------------------------------------------------------
  1094 ;; Estimated maximum stack depth 3
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1097 ;; ---------------------------------------------------------------------------------
  1098 ;; (4) _isr1                                                 5     5      0    2099
  1099 ;;                                             44 BANK0      5     5      0
  1100 ;;                            ___lwmod
  1101 ;;                    _readAvgDistance
  1102 ;;                      _UpdateDisplay
  1103 ;;                        _ReadButtons
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (5) _UpdateDisplay                                       22    22      0    1385
  1106 ;;                                             23 BANK0     21    21      0
  1107 ;;                i1_lcd_write_control
  1108 ;;                            _sprintf
  1109 ;;                     _lcd_set_cursor
  1110 ;;                   _lcd_write_string
  1111 ;;                            ___awmod
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (5) _readAvgDistance                                      4     4      0     555
  1114 ;;                                              2 BANK0      4     4      0
  1115 ;;                       _readDistance
  1116 ;;                            ___lwdiv
  1117 ;;                         _ADCconvert
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (6) _readDistance                                         6     4      2      69
  1120 ;;                                              8 COMMON     6     4      2
  1121 ;;                   _adc_read_channel
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; (6) _lcd_write_string                                     2     0      2      67
  1124 ;;                                              7 COMMON     2     0      2
  1125 ;;                     _lcd_write_data
  1126 ;;                            ___awmod (ARG)
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (6) _lcd_set_cursor                                       1     1      0      96
  1129 ;;                                              3 COMMON     1     1      0
  1130 ;;                i1_lcd_write_control
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (7) i1_lcd_write_control                                  3     3      0      73
  1133 ;;                                              0 COMMON     3     3      0
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (6) _sprintf                                             17    12      5     798
  1136 ;;                                              6 BANK0     17    12      5
  1137 ;;                            ___lwdiv
  1138 ;;                            ___lwmod
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; (6) _ADCconvert                                           2     2      0     254
  1141 ;;                                              0 BANK0      2     2      0
  1142 ;;                             ___wmul
  1143 ;;                            ___lwdiv
  1144 ;; ---------------------------------------------------------------------------------
  1145 ;; (5) _ReadButtons                                          0     0      0       0
  1146 ;;                           _Debounce
  1147 ;; ---------------------------------------------------------------------------------
  1148 ;; (7) _lcd_write_data                                       3     3      0      22
  1149 ;;                                              0 COMMON     3     3      0
  1150 ;; ---------------------------------------------------------------------------------
  1151 ;; (7) _adc_read_channel                                     2     2      0      46
  1152 ;;                                              6 COMMON     2     2      0
  1153 ;;                           _adc_read
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (6) ___awmod                                              7     3      4     296
  1156 ;;                                              0 COMMON     7     3      4
  1157 ;; ---------------------------------------------------------------------------------
  1158 ;; (7) ___lwmod                                              6     2      4     159
  1159 ;;                                              0 BANK0      6     2      4
  1160 ;;                            ___lwdiv (ARG)
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; (7) ___lwdiv                                              8     4      4     162
  1163 ;;                                              6 COMMON     8     4      4
  1164 ;;                             ___wmul (ARG)
  1165 ;; ---------------------------------------------------------------------------------
  1166 ;; (7) ___wmul                                               6     2      4      92
  1167 ;;                                              0 COMMON     6     2      4
  1168 ;; ---------------------------------------------------------------------------------
  1169 ;; (6) _Debounce                                             1     1      0       0
  1170 ;;                                              0 COMMON     1     1      0
  1171 ;; ---------------------------------------------------------------------------------
  1172 ;; (8) _adc_read                                             6     4      2      24
  1173 ;;                                              0 COMMON     6     4      2
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; Estimated maximum stack depth 8
  1176 ;; ---------------------------------------------------------------------------------
  1177                           
  1178 ;; Call Graph Graphs:
  1179                           
  1180 ;; _main (ROOT)
  1181 ;;   _init
  1182 ;;     _init_adc
  1183 ;;     _lcd_init
  1184 ;;       _lcd_write_control
  1185 ;;     _ser_init
  1186 ;;     _robo_init
  1187 ;;       _ser_putch
  1188 ;;   _Menu
  1189 ;;   _spi_transfer
  1190 ;;   _robotMove
  1191 ;;     _ser_putch
  1192 ;;   _robotTurn
  1193 ;;     _ser_putch
  1194 ;;   _ser_putch
  1195 ;;
  1196 ;; _isr1 (ROOT)
  1197 ;;   ___lwmod
  1198 ;;     ___lwdiv (ARG)
  1199 ;;       ___wmul (ARG)
  1200 ;;   _readAvgDistance
  1201 ;;     _readDistance
  1202 ;;       _adc_read_channel
  1203 ;;         _adc_read
  1204 ;;     ___lwdiv
  1205 ;;       ___wmul (ARG)
  1206 ;;     _ADCconvert
  1207 ;;       ___wmul
  1208 ;;       ___lwdiv
  1209 ;;         ___wmul (ARG)
  1210 ;;   _UpdateDisplay
  1211 ;;     i1_lcd_write_control
  1212 ;;     _sprintf
  1213 ;;       ___lwdiv
  1214 ;;         ___wmul (ARG)
  1215 ;;       ___lwmod
  1216 ;;         ___lwdiv (ARG)
  1217 ;;           ___wmul (ARG)
  1218 ;;     _lcd_set_cursor
  1219 ;;       i1_lcd_write_control
  1220 ;;     _lcd_write_string
  1221 ;;       _lcd_write_data
  1222 ;;       ___awmod (ARG)
  1223 ;;     ___awmod
  1224 ;;   _ReadButtons
  1225 ;;     _Debounce
  1226 ;;
  1227                           
  1228 ;; Address spaces:
  1229                           
  1230 ;;Name               Size   Autos  Total    Cost      Usage
  1231 ;;BANK3               60      0       0       9        0.0%
  1232 ;;BITBANK3            60      0       0       8        0.0%
  1233 ;;SFR3                 0      0       0       4        0.0%
  1234 ;;BITSFR3              0      0       0       4        0.0%
  1235 ;;BANK2               60      0       0      11        0.0%
  1236 ;;BITBANK2            60      0       0      10        0.0%
  1237 ;;SFR2                 0      0       0       5        0.0%
  1238 ;;BITSFR2              0      0       0       5        0.0%
  1239 ;;SFR1                 0      0       0       2        0.0%
  1240 ;;BITSFR1              0      0       0       2        0.0%
  1241 ;;BANK1               50      9      47       7       88.8%
  1242 ;;BITBANK1            50      0       0       6        0.0%
  1243 ;;CODE                 0      0       0       0        0.0%
  1244 ;;DATA                 0      0      B1      12        0.0%
  1245 ;;ABS                  0      0      A4       3        0.0%
  1246 ;;NULL                 0      0       0       0        0.0%
  1247 ;;STACK                0      0       D       2        0.0%
  1248 ;;BANK0               50     31      4F       5       98.8%
  1249 ;;BITBANK0            50      0       2       4        2.5%
  1250 ;;SFR0                 0      0       0       1        0.0%
  1251 ;;BITSFR0              0      0       0       1        0.0%
  1252 ;;COMMON               E      E       E       1      100.0%
  1253 ;;BITCOMMON            E      0       0       0        0.0%
  1254 ;;EEDATA             100      0       0       0        0.0%
  1255                           
  1256                           	global	_main
  1257                           psect	maintext,global,class=CODE,delta=2
  1258                           global __pmaintext
  1259  0015                     __pmaintext:
  1260                           
  1261 ;; *************** function _main *****************
  1262 ;; Defined at:
  1263 ;;		line 169 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  choice          1    8[BANK1 ] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;		None               void
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 17F/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         0       0       1       0       0
  1279 ;;      Temps:          0       0       3       0       0
  1280 ;;      Totals:         0       0       4       0       0
  1281 ;;Total ram usage:        4 bytes
  1282 ;; Hardware stack levels required when called:    8
  1283 ;; This function calls:
  1284 ;;		_init
  1285 ;;		_Menu
  1286 ;;		_spi_transfer
  1287 ;;		_robotMove
  1288 ;;		_robotTurn
  1289 ;;		_ser_putch
  1290 ;; This function is called by:
  1291 ;;		Startup code after reset
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           psect	maintext
  1295                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1296                           	line	169
  1297                           	global	__size_of_main
  1298  0392                     	__size_of_main	equ	__end_of_main-_main
  1299                           	
  1300  0015                     _main:	
  1301                           	opt	stack 0
  1302                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1303                           	line	174
  1304                           	
  1305  0015                     l10716:	
  1306                           ;Main.c: 174: init();
  1307  0015  120A  158A  23E9   	fcall	_init
              120A  118A         
  1308  001A  281B               	goto	l10718
  1309                           	line	180
  1310                           ;Main.c: 180: while(1)
  1311                           	
  1312  001B                     l2212:	
  1313                           	line	182
  1314                           	
  1315  001B                     l10718:	
  1316                           ;Main.c: 181: {
  1317                           ;Main.c: 182: unsigned char choice = 255;
  1318  001B  30FF               	movlw	(0FFh)
  1319  001C  1683               	bsf	status, 5	;RP0=1, select bank1
  1320  001D  1303               	bcf	status, 6	;RP1=0, select bank1
  1321  001E  00E3               	movwf	(??_main+0)^080h+0
  1322  001F  0863               	movf	(??_main+0)^080h+0,w
  1323  0020  00E6               	movwf	(main@choice)^080h
  1324                           	line	184
  1325                           ;Main.c: 184: switch (buttonPressed)
  1326  0021  285B               	goto	l10742
  1327                           	line	186
  1328                           ;Main.c: 185: {
  1329                           ;Main.c: 186: case 1:
  1330                           	
  1331  0022                     l2214:	
  1332                           	line	187
  1333                           	
  1334  0022                     l10720:	
  1335                           ;Main.c: 187: Menu(1);
  1336  0022  3001               	movlw	(01h)
  1337  0023  120A  158A  24FB   	fcall	_Menu
              120A  118A         
  1338                           	line	189
  1339                           	
  1340  0028                     l10722:	
  1341                           ;Main.c: 189: buttonPressed = 0;
  1342  0028  1283               	bcf	status, 5	;RP0=0, select bank0
  1343  0029  1303               	bcf	status, 6	;RP1=0, select bank0
  1344  002A  01E2               	clrf	(_buttonPressed)	;volatile
  1345                           	line	191
  1346                           ;Main.c: 191: break;
  1347  002B  2B89               	goto	l10852
  1348                           	line	192
  1349                           ;Main.c: 192: case 2:
  1350                           	
  1351  002C                     l2216:	
  1352                           	line	193
  1353                           	
  1354  002C                     l10724:	
  1355                           ;Main.c: 193: Menu(2);
  1356  002C  3002               	movlw	(02h)
  1357  002D  120A  158A  24FB   	fcall	_Menu
              120A  118A         
  1358                           	line	195
  1359                           	
  1360  0032                     l10726:	
  1361                           ;Main.c: 195: buttonPressed = 0;
  1362  0032  1283               	bcf	status, 5	;RP0=0, select bank0
  1363  0033  1303               	bcf	status, 6	;RP1=0, select bank0
  1364  0034  01E2               	clrf	(_buttonPressed)	;volatile
  1365                           	line	197
  1366                           ;Main.c: 197: break;
  1367  0035  2B89               	goto	l10852
  1368                           	line	198
  1369                           ;Main.c: 198: case 3:
  1370                           	
  1371  0036                     l2217:	
  1372                           	line	199
  1373                           	
  1374  0036                     l10728:	
  1375                           ;Main.c: 199: Menu(3);
  1376  0036  3003               	movlw	(03h)
  1377  0037  120A  158A  24FB   	fcall	_Menu
              120A  118A         
  1378                           	line	201
  1379                           	
  1380  003C                     l10730:	
  1381                           ;Main.c: 201: buttonPressed = 0;
  1382  003C  1283               	bcf	status, 5	;RP0=0, select bank0
  1383  003D  1303               	bcf	status, 6	;RP1=0, select bank0
  1384  003E  01E2               	clrf	(_buttonPressed)	;volatile
  1385                           	line	203
  1386                           ;Main.c: 203: break;
  1387  003F  2B89               	goto	l10852
  1388                           	line	204
  1389                           ;Main.c: 204: case 4:
  1390                           	
  1391  0040                     l2218:	
  1392                           	line	205
  1393                           	
  1394  0040                     l10732:	
  1395                           ;Main.c: 205: Menu(4);
  1396  0040  3004               	movlw	(04h)
  1397  0041  120A  158A  24FB   	fcall	_Menu
              120A  118A         
  1398                           	line	207
  1399                           	
  1400  0046                     l10734:	
  1401                           ;Main.c: 207: buttonPressed = 0;
  1402  0046  1283               	bcf	status, 5	;RP0=0, select bank0
  1403  0047  1303               	bcf	status, 6	;RP1=0, select bank0
  1404  0048  01E2               	clrf	(_buttonPressed)	;volatile
  1405                           	line	209
  1406                           ;Main.c: 209: break;
  1407  0049  2B89               	goto	l10852
  1408                           	line	210
  1409                           ;Main.c: 210: case 5:
  1410                           	
  1411  004A                     l2219:	
  1412                           	line	211
  1413                           	
  1414  004A                     l10736:	
  1415                           ;Main.c: 211: choice = Menu(5);
  1416  004A  3005               	movlw	(05h)
  1417  004B  120A  158A  24FB   	fcall	_Menu
              120A  118A         
  1418  0050  1683               	bsf	status, 5	;RP0=1, select bank1
  1419  0051  1303               	bcf	status, 6	;RP1=0, select bank1
  1420  0052  00E3               	movwf	(??_main+0)^080h+0
  1421  0053  0863               	movf	(??_main+0)^080h+0,w
  1422  0054  00E6               	movwf	(main@choice)^080h
  1423                           	line	213
  1424                           	
  1425  0055                     l10738:	
  1426                           ;Main.c: 213: buttonPressed = 0;
  1427  0055  1283               	bcf	status, 5	;RP0=0, select bank0
  1428  0056  1303               	bcf	status, 6	;RP1=0, select bank0
  1429  0057  01E2               	clrf	(_buttonPressed)	;volatile
  1430                           	line	215
  1431                           ;Main.c: 215: break;
  1432  0058  2B89               	goto	l10852
  1433                           	line	216
  1434                           ;Main.c: 216: default:
  1435                           	
  1436  0059                     l2220:	
  1437                           	line	218
  1438                           ;Main.c: 218: break;
  1439  0059  2B89               	goto	l10852
  1440                           	line	219
  1441                           	
  1442  005A                     l10740:	
  1443                           ;Main.c: 219: }
  1444  005A  2B89               	goto	l10852
  1445                           	line	184
  1446                           	
  1447  005B                     l2213:	
  1448                           	
  1449  005B                     l10742:	
  1450  005B  1283               	bcf	status, 5	;RP0=0, select bank0
  1451  005C  0862               	movf	(_buttonPressed),w	;volatile
  1452                           	; Switch size 1, requested type "space"
  1453                           ; Number of cases is 5, Range of values is 1 to 5
  1454                           ; switch strategies available:
  1455                           ; Name         Instructions Cycles
  1456                           ; simple_byte           16     9 (average)
  1457                           ; direct_byte           26    11 (fixed)
  1458                           ; jumptable            263     9 (fixed)
  1459                           ;	Chosen strategy is simple_byte
  1460                           
  1461                           	opt asmopt_off
  1462  005D  3A01               	xorlw	1^0	; case 1
  1463  005E  1903               	skipnz
  1464  005F  2822               	goto	l10720
  1465  0060  3A03               	xorlw	2^1	; case 2
  1466  0061  1903               	skipnz
  1467  0062  282C               	goto	l10724
  1468  0063  3A01               	xorlw	3^2	; case 3
  1469  0064  1903               	skipnz
  1470  0065  2836               	goto	l10728
  1471  0066  3A07               	xorlw	4^3	; case 4
  1472  0067  1903               	skipnz
  1473  0068  2840               	goto	l10732
  1474  0069  3A01               	xorlw	5^4	; case 5
  1475  006A  1903               	skipnz
  1476  006B  284A               	goto	l10736
  1477  006C  2B89               	goto	l10852
  1478                           	opt asmopt_on
  1479                           
  1480                           	line	219
  1481                           	
  1482  006D                     l2215:	
  1483                           	line	222
  1484                           ;Main.c: 222: switch (choice)
  1485  006D  2B89               	goto	l10852
  1486                           	line	224
  1487                           ;Main.c: 223: {
  1488                           ;Main.c: 224: case 0:
  1489                           	
  1490  006E                     l2222:	
  1491                           	line	225
  1492                           ;Main.c: 225: RC0 = 1; RC1 = 1;;
  1493  006E  1283               	bcf	status, 5	;RP0=0, select bank0
  1494  006F  1303               	bcf	status, 6	;RP1=0, select bank0
  1495  0070  1407               	bsf	(56/8),(56)&7
  1496  0071  1487               	bsf	(57/8),(57)&7
  1497                           	line	226
  1498                           	
  1499  0072                     l10744:	
  1500                           ;Main.c: 226: spi_transfer(0b00001011);
  1501  0072  300B               	movlw	(0Bh)
  1502  0073  120A  158A  22D3   	fcall	_spi_transfer
              120A  118A         
  1503                           	line	227
  1504                           	
  1505  0078                     l10746:	
  1506                           ;Main.c: 227: RC0 = 0; RC1 = 0;;
  1507  0078  1283               	bcf	status, 5	;RP0=0, select bank0
  1508  0079  1303               	bcf	status, 6	;RP1=0, select bank0
  1509  007A  1007               	bcf	(56/8),(56)&7
  1510                           	
  1511  007B                     l10748:	
  1512  007B  1087               	bcf	(57/8),(57)&7
  1513                           	line	228
  1514                           	
  1515  007C                     l10750:	
  1516                           ;Main.c: 228: RC2 = 1; _nop(); RC2 = 0;;
  1517  007C  1507               	bsf	(58/8),(58)&7
  1518                           	
  1519  007D                     l10752:	
  1520  007D  0000               	nop
  1521                           	
  1522  007E                     l10754:	
  1523  007E  1283               	bcf	status, 5	;RP0=0, select bank0
  1524  007F  1303               	bcf	status, 6	;RP1=0, select bank0
  1525  0080  1107               	bcf	(58/8),(58)&7
  1526                           	line	229
  1527                           ;Main.c: 229: break;
  1528  0081  2B9C               	goto	l10854
  1529                           	line	230
  1530                           ;Main.c: 230: case 1:
  1531                           	
  1532  0082                     l2224:	
  1533                           	line	231
  1534                           	
  1535  0082                     l10756:	
  1536                           ;Main.c: 231: robotMove(500);
  1537  0082  30F4               	movlw	low(01F4h)
  1538  0083  1683               	bsf	status, 5	;RP0=1, select bank1
  1539  0084  1303               	bcf	status, 6	;RP1=0, select bank1
  1540  0085  00E0               	movwf	(?_robotMove)^080h
  1541  0086  3001               	movlw	high(01F4h)
  1542  0087  00E1               	movwf	((?_robotMove)^080h)+1
  1543  0088  120A  118A  2777   	fcall	_robotMove
              120A  118A         
  1544                           	line	232
  1545                           	
  1546  008D                     l10758:	
  1547                           ;Main.c: 232: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1548                           	opt asmopt_off
  1549  008D  3033               movlw  51
  1550  008E  1683               	bsf	status, 5	;RP0=1, select bank1
  1551  008F  1303               	bcf	status, 6	;RP1=0, select bank1
  1552  0090  00E5               movwf	((??_main+0)^080h+0+2),f
  1553  0091  30BC               movlw	188
  1554  0092  00E4               movwf	((??_main+0)^080h+0+1),f
  1555  0093  3010               	movlw	16
  1556  0094  00E3               movwf	((??_main+0)^080h+0),f
  1557  0095                     u4267:
  1558  0095  0BE3               	decfsz	((??_main+0)^080h+0),f
  1559  0096  2895               	goto	u4267
  1560  0097  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1561  0098  2895               	goto	u4267
  1562  0099  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1563  009A  2895               	goto	u4267
  1564                           opt asmopt_on
  1565                           
  1566                           	line	233
  1567                           	
  1568  009B                     l10760:	
  1569                           ;Main.c: 233: robotTurn(90);
  1570  009B  305A               	movlw	low(05Ah)
  1571  009C  1683               	bsf	status, 5	;RP0=1, select bank1
  1572  009D  1303               	bcf	status, 6	;RP1=0, select bank1
  1573  009E  00E0               	movwf	(?_robotTurn)^080h
  1574  009F  3000               	movlw	high(05Ah)
  1575  00A0  00E1               	movwf	((?_robotTurn)^080h)+1
  1576  00A1  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  1577                           	line	234
  1578                           ;Main.c: 234: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1579                           	opt asmopt_off
  1580  00A6  3033               movlw  51
  1581  00A7  1683               	bsf	status, 5	;RP0=1, select bank1
  1582  00A8  1303               	bcf	status, 6	;RP1=0, select bank1
  1583  00A9  00E5               movwf	((??_main+0)^080h+0+2),f
  1584  00AA  30BC               movlw	188
  1585  00AB  00E4               movwf	((??_main+0)^080h+0+1),f
  1586  00AC  3010               	movlw	16
  1587  00AD  00E3               movwf	((??_main+0)^080h+0),f
  1588  00AE                     u4277:
  1589  00AE  0BE3               	decfsz	((??_main+0)^080h+0),f
  1590  00AF  28AE               	goto	u4277
  1591  00B0  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1592  00B1  28AE               	goto	u4277
  1593  00B2  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1594  00B3  28AE               	goto	u4277
  1595                           opt asmopt_on
  1596                           
  1597                           	line	235
  1598                           	
  1599  00B4                     l10762:	
  1600                           ;Main.c: 235: robotMove(500);
  1601  00B4  30F4               	movlw	low(01F4h)
  1602  00B5  1683               	bsf	status, 5	;RP0=1, select bank1
  1603  00B6  1303               	bcf	status, 6	;RP1=0, select bank1
  1604  00B7  00E0               	movwf	(?_robotMove)^080h
  1605  00B8  3001               	movlw	high(01F4h)
  1606  00B9  00E1               	movwf	((?_robotMove)^080h)+1
  1607  00BA  120A  118A  2777   	fcall	_robotMove
              120A  118A         
  1608                           	line	236
  1609                           	
  1610  00BF                     l10764:	
  1611                           ;Main.c: 236: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1612                           	opt asmopt_off
  1613  00BF  3033               movlw  51
  1614  00C0  1683               	bsf	status, 5	;RP0=1, select bank1
  1615  00C1  1303               	bcf	status, 6	;RP1=0, select bank1
  1616  00C2  00E5               movwf	((??_main+0)^080h+0+2),f
  1617  00C3  30BC               movlw	188
  1618  00C4  00E4               movwf	((??_main+0)^080h+0+1),f
  1619  00C5  3010               	movlw	16
  1620  00C6  00E3               movwf	((??_main+0)^080h+0),f
  1621  00C7                     u4287:
  1622  00C7  0BE3               	decfsz	((??_main+0)^080h+0),f
  1623  00C8  28C7               	goto	u4287
  1624  00C9  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1625  00CA  28C7               	goto	u4287
  1626  00CB  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1627  00CC  28C7               	goto	u4287
  1628                           opt asmopt_on
  1629                           
  1630                           	line	237
  1631                           ;Main.c: 237: robotTurn(90);
  1632  00CD  305A               	movlw	low(05Ah)
  1633  00CE  1683               	bsf	status, 5	;RP0=1, select bank1
  1634  00CF  1303               	bcf	status, 6	;RP1=0, select bank1
  1635  00D0  00E0               	movwf	(?_robotTurn)^080h
  1636  00D1  3000               	movlw	high(05Ah)
  1637  00D2  00E1               	movwf	((?_robotTurn)^080h)+1
  1638  00D3  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  1639                           	line	238
  1640                           	
  1641  00D8                     l10766:	
  1642                           ;Main.c: 238: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1643                           	opt asmopt_off
  1644  00D8  3033               movlw  51
  1645  00D9  1683               	bsf	status, 5	;RP0=1, select bank1
  1646  00DA  1303               	bcf	status, 6	;RP1=0, select bank1
  1647  00DB  00E5               movwf	((??_main+0)^080h+0+2),f
  1648  00DC  30BC               movlw	188
  1649  00DD  00E4               movwf	((??_main+0)^080h+0+1),f
  1650  00DE  3010               	movlw	16
  1651  00DF  00E3               movwf	((??_main+0)^080h+0),f
  1652  00E0                     u4297:
  1653  00E0  0BE3               	decfsz	((??_main+0)^080h+0),f
  1654  00E1  28E0               	goto	u4297
  1655  00E2  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1656  00E3  28E0               	goto	u4297
  1657  00E4  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1658  00E5  28E0               	goto	u4297
  1659                           opt asmopt_on
  1660                           
  1661                           	line	239
  1662                           	
  1663  00E6                     l10768:	
  1664                           ;Main.c: 239: robotMove(500);
  1665  00E6  30F4               	movlw	low(01F4h)
  1666  00E7  1683               	bsf	status, 5	;RP0=1, select bank1
  1667  00E8  1303               	bcf	status, 6	;RP1=0, select bank1
  1668  00E9  00E0               	movwf	(?_robotMove)^080h
  1669  00EA  3001               	movlw	high(01F4h)
  1670  00EB  00E1               	movwf	((?_robotMove)^080h)+1
  1671  00EC  120A  118A  2777   	fcall	_robotMove
              120A  118A         
  1672                           	line	240
  1673                           ;Main.c: 240: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1674                           	opt asmopt_off
  1675  00F1  3033               movlw  51
  1676  00F2  1683               	bsf	status, 5	;RP0=1, select bank1
  1677  00F3  1303               	bcf	status, 6	;RP1=0, select bank1
  1678  00F4  00E5               movwf	((??_main+0)^080h+0+2),f
  1679  00F5  30BC               movlw	188
  1680  00F6  00E4               movwf	((??_main+0)^080h+0+1),f
  1681  00F7  3010               	movlw	16
  1682  00F8  00E3               movwf	((??_main+0)^080h+0),f
  1683  00F9                     u4307:
  1684  00F9  0BE3               	decfsz	((??_main+0)^080h+0),f
  1685  00FA  28F9               	goto	u4307
  1686  00FB  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1687  00FC  28F9               	goto	u4307
  1688  00FD  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1689  00FE  28F9               	goto	u4307
  1690                           opt asmopt_on
  1691                           
  1692                           	line	241
  1693                           	
  1694  00FF                     l10770:	
  1695                           ;Main.c: 241: robotTurn(90);
  1696  00FF  305A               	movlw	low(05Ah)
  1697  0100  1683               	bsf	status, 5	;RP0=1, select bank1
  1698  0101  1303               	bcf	status, 6	;RP1=0, select bank1
  1699  0102  00E0               	movwf	(?_robotTurn)^080h
  1700  0103  3000               	movlw	high(05Ah)
  1701  0104  00E1               	movwf	((?_robotTurn)^080h)+1
  1702  0105  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  1703                           	line	242
  1704                           	
  1705  010A                     l10772:	
  1706                           ;Main.c: 242: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1707                           	opt asmopt_off
  1708  010A  3033               movlw  51
  1709  010B  1683               	bsf	status, 5	;RP0=1, select bank1
  1710  010C  1303               	bcf	status, 6	;RP1=0, select bank1
  1711  010D  00E5               movwf	((??_main+0)^080h+0+2),f
  1712  010E  30BC               movlw	188
  1713  010F  00E4               movwf	((??_main+0)^080h+0+1),f
  1714  0110  3010               	movlw	16
  1715  0111  00E3               movwf	((??_main+0)^080h+0),f
  1716  0112                     u4317:
  1717  0112  0BE3               	decfsz	((??_main+0)^080h+0),f
  1718  0113  2912               	goto	u4317
  1719  0114  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1720  0115  2912               	goto	u4317
  1721  0116  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1722  0117  2912               	goto	u4317
  1723                           opt asmopt_on
  1724                           
  1725                           	line	243
  1726                           ;Main.c: 243: robotMove(500);
  1727  0118  30F4               	movlw	low(01F4h)
  1728  0119  1683               	bsf	status, 5	;RP0=1, select bank1
  1729  011A  1303               	bcf	status, 6	;RP1=0, select bank1
  1730  011B  00E0               	movwf	(?_robotMove)^080h
  1731  011C  3001               	movlw	high(01F4h)
  1732  011D  00E1               	movwf	((?_robotMove)^080h)+1
  1733  011E  120A  118A  2777   	fcall	_robotMove
              120A  118A         
  1734                           	line	244
  1735                           	
  1736  0123                     l10774:	
  1737                           ;Main.c: 244: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1738                           	opt asmopt_off
  1739  0123  3033               movlw  51
  1740  0124  1683               	bsf	status, 5	;RP0=1, select bank1
  1741  0125  1303               	bcf	status, 6	;RP1=0, select bank1
  1742  0126  00E5               movwf	((??_main+0)^080h+0+2),f
  1743  0127  30BC               movlw	188
  1744  0128  00E4               movwf	((??_main+0)^080h+0+1),f
  1745  0129  3010               	movlw	16
  1746  012A  00E3               movwf	((??_main+0)^080h+0),f
  1747  012B                     u4327:
  1748  012B  0BE3               	decfsz	((??_main+0)^080h+0),f
  1749  012C  292B               	goto	u4327
  1750  012D  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1751  012E  292B               	goto	u4327
  1752  012F  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1753  0130  292B               	goto	u4327
  1754                           opt asmopt_on
  1755                           
  1756                           	line	245
  1757                           	
  1758  0131                     l10776:	
  1759                           ;Main.c: 245: robotTurn(90);
  1760  0131  305A               	movlw	low(05Ah)
  1761  0132  1683               	bsf	status, 5	;RP0=1, select bank1
  1762  0133  1303               	bcf	status, 6	;RP1=0, select bank1
  1763  0134  00E0               	movwf	(?_robotTurn)^080h
  1764  0135  3000               	movlw	high(05Ah)
  1765  0136  00E1               	movwf	((?_robotTurn)^080h)+1
  1766  0137  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  1767                           	line	247
  1768                           ;Main.c: 247: break;
  1769  013C  2B9C               	goto	l10854
  1770                           	line	248
  1771                           ;Main.c: 248: case 2:
  1772                           	
  1773  013D                     l2225:	
  1774                           	line	250
  1775                           	
  1776  013D                     l10778:	
  1777                           ;Main.c: 250: robotMove(-200);
  1778  013D  3038               	movlw	low(-200)
  1779  013E  1683               	bsf	status, 5	;RP0=1, select bank1
  1780  013F  1303               	bcf	status, 6	;RP1=0, select bank1
  1781  0140  00E0               	movwf	(?_robotMove)^080h
  1782  0141  30FF               	movlw	high(-200)
  1783  0142  00E1               	movwf	((?_robotMove)^080h)+1
  1784  0143  120A  118A  2777   	fcall	_robotMove
              120A  118A         
  1785                           	line	251
  1786                           	
  1787  0148                     l10780:	
  1788                           ;Main.c: 251: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1789                           	opt asmopt_off
  1790  0148  3033               movlw  51
  1791  0149  1683               	bsf	status, 5	;RP0=1, select bank1
  1792  014A  1303               	bcf	status, 6	;RP1=0, select bank1
  1793  014B  00E5               movwf	((??_main+0)^080h+0+2),f
  1794  014C  30BC               movlw	188
  1795  014D  00E4               movwf	((??_main+0)^080h+0+1),f
  1796  014E  3010               	movlw	16
  1797  014F  00E3               movwf	((??_main+0)^080h+0),f
  1798  0150                     u4337:
  1799  0150  0BE3               	decfsz	((??_main+0)^080h+0),f
  1800  0151  2950               	goto	u4337
  1801  0152  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1802  0153  2950               	goto	u4337
  1803  0154  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1804  0155  2950               	goto	u4337
  1805                           opt asmopt_on
  1806                           
  1807                           	line	252
  1808                           	
  1809  0156                     l10782:	
  1810                           ;Main.c: 252: robotTurn(-90);
  1811  0156  30A6               	movlw	low(-90)
  1812  0157  1683               	bsf	status, 5	;RP0=1, select bank1
  1813  0158  1303               	bcf	status, 6	;RP1=0, select bank1
  1814  0159  00E0               	movwf	(?_robotTurn)^080h
  1815  015A  30FF               	movlw	high(-90)
  1816  015B  00E1               	movwf	((?_robotTurn)^080h)+1
  1817  015C  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  1818                           	line	253
  1819                           ;Main.c: 253: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1820                           	opt asmopt_off
  1821  0161  3033               movlw  51
  1822  0162  1683               	bsf	status, 5	;RP0=1, select bank1
  1823  0163  1303               	bcf	status, 6	;RP1=0, select bank1
  1824  0164  00E5               movwf	((??_main+0)^080h+0+2),f
  1825  0165  30BC               movlw	188
  1826  0166  00E4               movwf	((??_main+0)^080h+0+1),f
  1827  0167  3010               	movlw	16
  1828  0168  00E3               movwf	((??_main+0)^080h+0),f
  1829  0169                     u4347:
  1830  0169  0BE3               	decfsz	((??_main+0)^080h+0),f
  1831  016A  2969               	goto	u4347
  1832  016B  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1833  016C  2969               	goto	u4347
  1834  016D  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1835  016E  2969               	goto	u4347
  1836                           opt asmopt_on
  1837                           
  1838                           	line	254
  1839                           	
  1840  016F                     l10784:	
  1841                           ;Main.c: 254: robotMove(-200);
  1842  016F  3038               	movlw	low(-200)
  1843  0170  1683               	bsf	status, 5	;RP0=1, select bank1
  1844  0171  1303               	bcf	status, 6	;RP1=0, select bank1
  1845  0172  00E0               	movwf	(?_robotMove)^080h
  1846  0173  30FF               	movlw	high(-200)
  1847  0174  00E1               	movwf	((?_robotMove)^080h)+1
  1848  0175  120A  118A  2777   	fcall	_robotMove
              120A  118A         
  1849                           	line	255
  1850                           	
  1851  017A                     l10786:	
  1852                           ;Main.c: 255: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1853                           	opt asmopt_off
  1854  017A  3033               movlw  51
  1855  017B  1683               	bsf	status, 5	;RP0=1, select bank1
  1856  017C  1303               	bcf	status, 6	;RP1=0, select bank1
  1857  017D  00E5               movwf	((??_main+0)^080h+0+2),f
  1858  017E  30BC               movlw	188
  1859  017F  00E4               movwf	((??_main+0)^080h+0+1),f
  1860  0180  3010               	movlw	16
  1861  0181  00E3               movwf	((??_main+0)^080h+0),f
  1862  0182                     u4357:
  1863  0182  0BE3               	decfsz	((??_main+0)^080h+0),f
  1864  0183  2982               	goto	u4357
  1865  0184  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1866  0185  2982               	goto	u4357
  1867  0186  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1868  0187  2982               	goto	u4357
  1869                           opt asmopt_on
  1870                           
  1871                           	line	256
  1872                           ;Main.c: 256: robotTurn(-90);
  1873  0188  30A6               	movlw	low(-90)
  1874  0189  1683               	bsf	status, 5	;RP0=1, select bank1
  1875  018A  1303               	bcf	status, 6	;RP1=0, select bank1
  1876  018B  00E0               	movwf	(?_robotTurn)^080h
  1877  018C  30FF               	movlw	high(-90)
  1878  018D  00E1               	movwf	((?_robotTurn)^080h)+1
  1879  018E  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  1880                           	line	257
  1881                           	
  1882  0193                     l10788:	
  1883                           ;Main.c: 257: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1884                           	opt asmopt_off
  1885  0193  3033               movlw  51
  1886  0194  1683               	bsf	status, 5	;RP0=1, select bank1
  1887  0195  1303               	bcf	status, 6	;RP1=0, select bank1
  1888  0196  00E5               movwf	((??_main+0)^080h+0+2),f
  1889  0197  30BC               movlw	188
  1890  0198  00E4               movwf	((??_main+0)^080h+0+1),f
  1891  0199  3010               	movlw	16
  1892  019A  00E3               movwf	((??_main+0)^080h+0),f
  1893  019B                     u4367:
  1894  019B  0BE3               	decfsz	((??_main+0)^080h+0),f
  1895  019C  299B               	goto	u4367
  1896  019D  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1897  019E  299B               	goto	u4367
  1898  019F  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1899  01A0  299B               	goto	u4367
  1900                           opt asmopt_on
  1901                           
  1902                           	line	258
  1903                           	
  1904  01A1                     l10790:	
  1905                           ;Main.c: 258: robotMove(-200);
  1906  01A1  3038               	movlw	low(-200)
  1907  01A2  1683               	bsf	status, 5	;RP0=1, select bank1
  1908  01A3  1303               	bcf	status, 6	;RP1=0, select bank1
  1909  01A4  00E0               	movwf	(?_robotMove)^080h
  1910  01A5  30FF               	movlw	high(-200)
  1911  01A6  00E1               	movwf	((?_robotMove)^080h)+1
  1912  01A7  120A  118A  2777   	fcall	_robotMove
              120A  118A         
  1913                           	line	259
  1914                           ;Main.c: 259: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1915                           	opt asmopt_off
  1916  01AC  3033               movlw  51
  1917  01AD  1683               	bsf	status, 5	;RP0=1, select bank1
  1918  01AE  1303               	bcf	status, 6	;RP1=0, select bank1
  1919  01AF  00E5               movwf	((??_main+0)^080h+0+2),f
  1920  01B0  30BC               movlw	188
  1921  01B1  00E4               movwf	((??_main+0)^080h+0+1),f
  1922  01B2  3010               	movlw	16
  1923  01B3  00E3               movwf	((??_main+0)^080h+0),f
  1924  01B4                     u4377:
  1925  01B4  0BE3               	decfsz	((??_main+0)^080h+0),f
  1926  01B5  29B4               	goto	u4377
  1927  01B6  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1928  01B7  29B4               	goto	u4377
  1929  01B8  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1930  01B9  29B4               	goto	u4377
  1931                           opt asmopt_on
  1932                           
  1933                           	line	260
  1934                           	
  1935  01BA                     l10792:	
  1936                           ;Main.c: 260: robotTurn(-90);
  1937  01BA  30A6               	movlw	low(-90)
  1938  01BB  1683               	bsf	status, 5	;RP0=1, select bank1
  1939  01BC  1303               	bcf	status, 6	;RP1=0, select bank1
  1940  01BD  00E0               	movwf	(?_robotTurn)^080h
  1941  01BE  30FF               	movlw	high(-90)
  1942  01BF  00E1               	movwf	((?_robotTurn)^080h)+1
  1943  01C0  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  1944                           	line	261
  1945                           	
  1946  01C5                     l10794:	
  1947                           ;Main.c: 261: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1948                           	opt asmopt_off
  1949  01C5  3033               movlw  51
  1950  01C6  1683               	bsf	status, 5	;RP0=1, select bank1
  1951  01C7  1303               	bcf	status, 6	;RP1=0, select bank1
  1952  01C8  00E5               movwf	((??_main+0)^080h+0+2),f
  1953  01C9  30BC               movlw	188
  1954  01CA  00E4               movwf	((??_main+0)^080h+0+1),f
  1955  01CB  3010               	movlw	16
  1956  01CC  00E3               movwf	((??_main+0)^080h+0),f
  1957  01CD                     u4387:
  1958  01CD  0BE3               	decfsz	((??_main+0)^080h+0),f
  1959  01CE  29CD               	goto	u4387
  1960  01CF  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1961  01D0  29CD               	goto	u4387
  1962  01D1  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1963  01D2  29CD               	goto	u4387
  1964                           opt asmopt_on
  1965                           
  1966                           	line	262
  1967                           ;Main.c: 262: robotMove(-200);
  1968  01D3  3038               	movlw	low(-200)
  1969  01D4  1683               	bsf	status, 5	;RP0=1, select bank1
  1970  01D5  1303               	bcf	status, 6	;RP1=0, select bank1
  1971  01D6  00E0               	movwf	(?_robotMove)^080h
  1972  01D7  30FF               	movlw	high(-200)
  1973  01D8  00E1               	movwf	((?_robotMove)^080h)+1
  1974  01D9  120A  118A  2777   	fcall	_robotMove
              120A  118A         
  1975                           	line	263
  1976                           	
  1977  01DE                     l10796:	
  1978                           ;Main.c: 263: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1979                           	opt asmopt_off
  1980  01DE  3033               movlw  51
  1981  01DF  1683               	bsf	status, 5	;RP0=1, select bank1
  1982  01E0  1303               	bcf	status, 6	;RP1=0, select bank1
  1983  01E1  00E5               movwf	((??_main+0)^080h+0+2),f
  1984  01E2  30BC               movlw	188
  1985  01E3  00E4               movwf	((??_main+0)^080h+0+1),f
  1986  01E4  3010               	movlw	16
  1987  01E5  00E3               movwf	((??_main+0)^080h+0),f
  1988  01E6                     u4397:
  1989  01E6  0BE3               	decfsz	((??_main+0)^080h+0),f
  1990  01E7  29E6               	goto	u4397
  1991  01E8  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  1992  01E9  29E6               	goto	u4397
  1993  01EA  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  1994  01EB  29E6               	goto	u4397
  1995                           opt asmopt_on
  1996                           
  1997                           	line	264
  1998                           	
  1999  01EC                     l10798:	
  2000                           ;Main.c: 264: robotTurn(-90);
  2001  01EC  30A6               	movlw	low(-90)
  2002  01ED  1683               	bsf	status, 5	;RP0=1, select bank1
  2003  01EE  1303               	bcf	status, 6	;RP1=0, select bank1
  2004  01EF  00E0               	movwf	(?_robotTurn)^080h
  2005  01F0  30FF               	movlw	high(-90)
  2006  01F1  00E1               	movwf	((?_robotTurn)^080h)+1
  2007  01F2  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  2008                           	line	266
  2009                           ;Main.c: 266: break;
  2010  01F7  2B9C               	goto	l10854
  2011                           	line	267
  2012                           ;Main.c: 267: case 3:
  2013                           	
  2014  01F8                     l2226:	
  2015                           	line	268
  2016                           	
  2017  01F8                     l10800:	
  2018                           ;Main.c: 268: ser_putch(128);
  2019  01F8  3080               	movlw	(080h)
  2020  01F9  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2021                           	line	269
  2022                           	
  2023  01FE                     l10802:	
  2024                           ;Main.c: 269: _delay((unsigned long)((100)*(20000000/4000.0)));
  2025                           	opt asmopt_off
  2026  01FE  3003               movlw  3
  2027  01FF  1683               	bsf	status, 5	;RP0=1, select bank1
  2028  0200  1303               	bcf	status, 6	;RP1=0, select bank1
  2029  0201  00E5               movwf	((??_main+0)^080h+0+2),f
  2030  0202  308A               movlw	138
  2031  0203  00E4               movwf	((??_main+0)^080h+0+1),f
  2032  0204  3056               	movlw	86
  2033  0205  00E3               movwf	((??_main+0)^080h+0),f
  2034  0206                     u4407:
  2035  0206  0BE3               	decfsz	((??_main+0)^080h+0),f
  2036  0207  2A06               	goto	u4407
  2037  0208  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2038  0209  2A06               	goto	u4407
  2039  020A  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2040  020B  2A06               	goto	u4407
  2041  020C  2A0D               	nop2
  2042                           opt asmopt_on
  2043                           
  2044                           	line	270
  2045                           	
  2046  020D                     l10804:	
  2047                           ;Main.c: 270: ser_putch(132);
  2048  020D  3084               	movlw	(084h)
  2049  020E  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2050                           	line	271
  2051                           ;Main.c: 271: _delay((unsigned long)((100)*(20000000/4000.0)));
  2052                           	opt asmopt_off
  2053  0213  3003               movlw  3
  2054  0214  1683               	bsf	status, 5	;RP0=1, select bank1
  2055  0215  1303               	bcf	status, 6	;RP1=0, select bank1
  2056  0216  00E5               movwf	((??_main+0)^080h+0+2),f
  2057  0217  308A               movlw	138
  2058  0218  00E4               movwf	((??_main+0)^080h+0+1),f
  2059  0219  3056               	movlw	86
  2060  021A  00E3               movwf	((??_main+0)^080h+0),f
  2061  021B                     u4417:
  2062  021B  0BE3               	decfsz	((??_main+0)^080h+0),f
  2063  021C  2A1B               	goto	u4417
  2064  021D  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2065  021E  2A1B               	goto	u4417
  2066  021F  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2067  0220  2A1B               	goto	u4417
  2068  0221  2A22               	nop2
  2069                           opt asmopt_on
  2070                           
  2071                           	line	273
  2072                           ;Main.c: 273: _delay((unsigned long)((100)*(20000000/4000.0)));
  2073                           	opt asmopt_off
  2074  0222  3003               movlw  3
  2075  0223  1683               	bsf	status, 5	;RP0=1, select bank1
  2076  0224  1303               	bcf	status, 6	;RP1=0, select bank1
  2077  0225  00E5               movwf	((??_main+0)^080h+0+2),f
  2078  0226  308A               movlw	138
  2079  0227  00E4               movwf	((??_main+0)^080h+0+1),f
  2080  0228  3056               	movlw	86
  2081  0229  00E3               movwf	((??_main+0)^080h+0),f
  2082  022A                     u4427:
  2083  022A  0BE3               	decfsz	((??_main+0)^080h+0),f
  2084  022B  2A2A               	goto	u4427
  2085  022C  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2086  022D  2A2A               	goto	u4427
  2087  022E  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2088  022F  2A2A               	goto	u4427
  2089  0230  2A31               	nop2
  2090                           opt asmopt_on
  2091                           
  2092                           	line	275
  2093                           ;Main.c: 275: _delay((unsigned long)((100)*(20000000/4000.0)));
  2094                           	opt asmopt_off
  2095  0231  3003               movlw  3
  2096  0232  1683               	bsf	status, 5	;RP0=1, select bank1
  2097  0233  1303               	bcf	status, 6	;RP1=0, select bank1
  2098  0234  00E5               movwf	((??_main+0)^080h+0+2),f
  2099  0235  308A               movlw	138
  2100  0236  00E4               movwf	((??_main+0)^080h+0+1),f
  2101  0237  3056               	movlw	86
  2102  0238  00E3               movwf	((??_main+0)^080h+0),f
  2103  0239                     u4437:
  2104  0239  0BE3               	decfsz	((??_main+0)^080h+0),f
  2105  023A  2A39               	goto	u4437
  2106  023B  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2107  023C  2A39               	goto	u4437
  2108  023D  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2109  023E  2A39               	goto	u4437
  2110  023F  2A40               	nop2
  2111                           opt asmopt_on
  2112                           
  2113                           	line	276
  2114                           	
  2115  0240                     l10806:	
  2116                           ;Main.c: 276: ser_putch(137);
  2117  0240  3089               	movlw	(089h)
  2118  0241  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2119                           	line	277
  2120                           	
  2121  0246                     l10808:	
  2122                           ;Main.c: 277: _delay((unsigned long)((100)*(20000000/4000.0)));
  2123                           	opt asmopt_off
  2124  0246  3003               movlw  3
  2125  0247  1683               	bsf	status, 5	;RP0=1, select bank1
  2126  0248  1303               	bcf	status, 6	;RP1=0, select bank1
  2127  0249  00E5               movwf	((??_main+0)^080h+0+2),f
  2128  024A  308A               movlw	138
  2129  024B  00E4               movwf	((??_main+0)^080h+0+1),f
  2130  024C  3056               	movlw	86
  2131  024D  00E3               movwf	((??_main+0)^080h+0),f
  2132  024E                     u4447:
  2133  024E  0BE3               	decfsz	((??_main+0)^080h+0),f
  2134  024F  2A4E               	goto	u4447
  2135  0250  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2136  0251  2A4E               	goto	u4447
  2137  0252  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2138  0253  2A4E               	goto	u4447
  2139  0254  2A55               	nop2
  2140                           opt asmopt_on
  2141                           
  2142                           	line	278
  2143                           ;Main.c: 278: ser_putch(1);
  2144  0255  3001               	movlw	(01h)
  2145  0256  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2146                           	line	279
  2147                           	
  2148  025B                     l10810:	
  2149                           ;Main.c: 279: _delay((unsigned long)((100)*(20000000/4000.0)));
  2150                           	opt asmopt_off
  2151  025B  3003               movlw  3
  2152  025C  1683               	bsf	status, 5	;RP0=1, select bank1
  2153  025D  1303               	bcf	status, 6	;RP1=0, select bank1
  2154  025E  00E5               movwf	((??_main+0)^080h+0+2),f
  2155  025F  308A               movlw	138
  2156  0260  00E4               movwf	((??_main+0)^080h+0+1),f
  2157  0261  3056               	movlw	86
  2158  0262  00E3               movwf	((??_main+0)^080h+0),f
  2159  0263                     u4457:
  2160  0263  0BE3               	decfsz	((??_main+0)^080h+0),f
  2161  0264  2A63               	goto	u4457
  2162  0265  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2163  0266  2A63               	goto	u4457
  2164  0267  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2165  0268  2A63               	goto	u4457
  2166  0269  2A6A               	nop2
  2167                           opt asmopt_on
  2168                           
  2169                           	line	280
  2170                           	
  2171  026A                     l10812:	
  2172                           ;Main.c: 280: ser_putch(44);
  2173  026A  302C               	movlw	(02Ch)
  2174  026B  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2175                           	line	281
  2176                           ;Main.c: 281: _delay((unsigned long)((100)*(20000000/4000.0)));
  2177                           	opt asmopt_off
  2178  0270  3003               movlw  3
  2179  0271  1683               	bsf	status, 5	;RP0=1, select bank1
  2180  0272  1303               	bcf	status, 6	;RP1=0, select bank1
  2181  0273  00E5               movwf	((??_main+0)^080h+0+2),f
  2182  0274  308A               movlw	138
  2183  0275  00E4               movwf	((??_main+0)^080h+0+1),f
  2184  0276  3056               	movlw	86
  2185  0277  00E3               movwf	((??_main+0)^080h+0),f
  2186  0278                     u4467:
  2187  0278  0BE3               	decfsz	((??_main+0)^080h+0),f
  2188  0279  2A78               	goto	u4467
  2189  027A  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2190  027B  2A78               	goto	u4467
  2191  027C  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2192  027D  2A78               	goto	u4467
  2193  027E  2A7F               	nop2
  2194                           opt asmopt_on
  2195                           
  2196                           	line	282
  2197                           	
  2198  027F                     l10814:	
  2199                           ;Main.c: 282: ser_putch(128);
  2200  027F  3080               	movlw	(080h)
  2201  0280  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2202                           	line	283
  2203                           	
  2204  0285                     l10816:	
  2205                           ;Main.c: 283: _delay((unsigned long)((100)*(20000000/4000.0)));
  2206                           	opt asmopt_off
  2207  0285  3003               movlw  3
  2208  0286  1683               	bsf	status, 5	;RP0=1, select bank1
  2209  0287  1303               	bcf	status, 6	;RP1=0, select bank1
  2210  0288  00E5               movwf	((??_main+0)^080h+0+2),f
  2211  0289  308A               movlw	138
  2212  028A  00E4               movwf	((??_main+0)^080h+0+1),f
  2213  028B  3056               	movlw	86
  2214  028C  00E3               movwf	((??_main+0)^080h+0),f
  2215  028D                     u4477:
  2216  028D  0BE3               	decfsz	((??_main+0)^080h+0),f
  2217  028E  2A8D               	goto	u4477
  2218  028F  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2219  0290  2A8D               	goto	u4477
  2220  0291  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2221  0292  2A8D               	goto	u4477
  2222  0293  2A94               	nop2
  2223                           opt asmopt_on
  2224                           
  2225                           	line	284
  2226                           ;Main.c: 284: ser_putch(0);
  2227  0294  3000               	movlw	(0)
  2228  0295  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2229                           	line	285
  2230                           	
  2231  029A                     l10818:	
  2232                           ;Main.c: 285: _delay((unsigned long)((100)*(20000000/4000.0)));
  2233                           	opt asmopt_off
  2234  029A  3003               movlw  3
  2235  029B  1683               	bsf	status, 5	;RP0=1, select bank1
  2236  029C  1303               	bcf	status, 6	;RP1=0, select bank1
  2237  029D  00E5               movwf	((??_main+0)^080h+0+2),f
  2238  029E  308A               movlw	138
  2239  029F  00E4               movwf	((??_main+0)^080h+0+1),f
  2240  02A0  3056               	movlw	86
  2241  02A1  00E3               movwf	((??_main+0)^080h+0),f
  2242  02A2                     u4487:
  2243  02A2  0BE3               	decfsz	((??_main+0)^080h+0),f
  2244  02A3  2AA2               	goto	u4487
  2245  02A4  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2246  02A5  2AA2               	goto	u4487
  2247  02A6  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2248  02A7  2AA2               	goto	u4487
  2249  02A8  2AA9               	nop2
  2250                           opt asmopt_on
  2251                           
  2252                           	line	286
  2253                           	
  2254  02A9                     l10820:	
  2255                           ;Main.c: 286: ser_putch(156);
  2256  02A9  309C               	movlw	(09Ch)
  2257  02AA  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2258                           	line	287
  2259                           ;Main.c: 287: _delay((unsigned long)((100)*(20000000/4000.0)));
  2260                           	opt asmopt_off
  2261  02AF  3003               movlw  3
  2262  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
  2263  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
  2264  02B2  00E5               movwf	((??_main+0)^080h+0+2),f
  2265  02B3  308A               movlw	138
  2266  02B4  00E4               movwf	((??_main+0)^080h+0+1),f
  2267  02B5  3056               	movlw	86
  2268  02B6  00E3               movwf	((??_main+0)^080h+0),f
  2269  02B7                     u4497:
  2270  02B7  0BE3               	decfsz	((??_main+0)^080h+0),f
  2271  02B8  2AB7               	goto	u4497
  2272  02B9  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2273  02BA  2AB7               	goto	u4497
  2274  02BB  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2275  02BC  2AB7               	goto	u4497
  2276  02BD  2ABE               	nop2
  2277                           opt asmopt_on
  2278                           
  2279                           	line	288
  2280                           	
  2281  02BE                     l10822:	
  2282                           ;Main.c: 288: ser_putch(1);
  2283  02BE  3001               	movlw	(01h)
  2284  02BF  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2285                           	line	289
  2286                           	
  2287  02C4                     l10824:	
  2288                           ;Main.c: 289: _delay((unsigned long)((100)*(20000000/4000.0)));
  2289                           	opt asmopt_off
  2290  02C4  3003               movlw  3
  2291  02C5  1683               	bsf	status, 5	;RP0=1, select bank1
  2292  02C6  1303               	bcf	status, 6	;RP1=0, select bank1
  2293  02C7  00E5               movwf	((??_main+0)^080h+0+2),f
  2294  02C8  308A               movlw	138
  2295  02C9  00E4               movwf	((??_main+0)^080h+0+1),f
  2296  02CA  3056               	movlw	86
  2297  02CB  00E3               movwf	((??_main+0)^080h+0),f
  2298  02CC                     u4507:
  2299  02CC  0BE3               	decfsz	((??_main+0)^080h+0),f
  2300  02CD  2ACC               	goto	u4507
  2301  02CE  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2302  02CF  2ACC               	goto	u4507
  2303  02D0  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2304  02D1  2ACC               	goto	u4507
  2305  02D2  2AD3               	nop2
  2306                           opt asmopt_on
  2307                           
  2308                           	line	290
  2309                           ;Main.c: 290: ser_putch(144);
  2310  02D3  3090               	movlw	(090h)
  2311  02D4  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2312                           	line	291
  2313                           	
  2314  02D9                     l10826:	
  2315                           ;Main.c: 291: _delay((unsigned long)((100)*(20000000/4000.0)));
  2316                           	opt asmopt_off
  2317  02D9  3003               movlw  3
  2318  02DA  1683               	bsf	status, 5	;RP0=1, select bank1
  2319  02DB  1303               	bcf	status, 6	;RP1=0, select bank1
  2320  02DC  00E5               movwf	((??_main+0)^080h+0+2),f
  2321  02DD  308A               movlw	138
  2322  02DE  00E4               movwf	((??_main+0)^080h+0+1),f
  2323  02DF  3056               	movlw	86
  2324  02E0  00E3               movwf	((??_main+0)^080h+0),f
  2325  02E1                     u4517:
  2326  02E1  0BE3               	decfsz	((??_main+0)^080h+0),f
  2327  02E2  2AE1               	goto	u4517
  2328  02E3  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2329  02E4  2AE1               	goto	u4517
  2330  02E5  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2331  02E6  2AE1               	goto	u4517
  2332  02E7  2AE8               	nop2
  2333                           opt asmopt_on
  2334                           
  2335                           	line	292
  2336                           	
  2337  02E8                     l10828:	
  2338                           ;Main.c: 292: ser_putch(137);
  2339  02E8  3089               	movlw	(089h)
  2340  02E9  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2341                           	line	293
  2342                           ;Main.c: 293: _delay((unsigned long)((100)*(20000000/4000.0)));
  2343                           	opt asmopt_off
  2344  02EE  3003               movlw  3
  2345  02EF  1683               	bsf	status, 5	;RP0=1, select bank1
  2346  02F0  1303               	bcf	status, 6	;RP1=0, select bank1
  2347  02F1  00E5               movwf	((??_main+0)^080h+0+2),f
  2348  02F2  308A               movlw	138
  2349  02F3  00E4               movwf	((??_main+0)^080h+0+1),f
  2350  02F4  3056               	movlw	86
  2351  02F5  00E3               movwf	((??_main+0)^080h+0),f
  2352  02F6                     u4527:
  2353  02F6  0BE3               	decfsz	((??_main+0)^080h+0),f
  2354  02F7  2AF6               	goto	u4527
  2355  02F8  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2356  02F9  2AF6               	goto	u4527
  2357  02FA  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2358  02FB  2AF6               	goto	u4527
  2359  02FC  2AFD               	nop2
  2360                           opt asmopt_on
  2361                           
  2362                           	line	294
  2363                           	
  2364  02FD                     l10830:	
  2365                           ;Main.c: 294: ser_putch(0);
  2366  02FD  3000               	movlw	(0)
  2367  02FE  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2368                           	line	295
  2369                           	
  2370  0303                     l10832:	
  2371                           ;Main.c: 295: _delay((unsigned long)((100)*(20000000/4000.0)));
  2372                           	opt asmopt_off
  2373  0303  3003               movlw  3
  2374  0304  1683               	bsf	status, 5	;RP0=1, select bank1
  2375  0305  1303               	bcf	status, 6	;RP1=0, select bank1
  2376  0306  00E5               movwf	((??_main+0)^080h+0+2),f
  2377  0307  308A               movlw	138
  2378  0308  00E4               movwf	((??_main+0)^080h+0+1),f
  2379  0309  3056               	movlw	86
  2380  030A  00E3               movwf	((??_main+0)^080h+0),f
  2381  030B                     u4537:
  2382  030B  0BE3               	decfsz	((??_main+0)^080h+0),f
  2383  030C  2B0B               	goto	u4537
  2384  030D  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2385  030E  2B0B               	goto	u4537
  2386  030F  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2387  0310  2B0B               	goto	u4537
  2388  0311  2B12               	nop2
  2389                           opt asmopt_on
  2390                           
  2391                           	line	296
  2392                           ;Main.c: 296: ser_putch(0);
  2393  0312  3000               	movlw	(0)
  2394  0313  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2395                           	line	297
  2396                           	
  2397  0318                     l10834:	
  2398                           ;Main.c: 297: _delay((unsigned long)((100)*(20000000/4000.0)));
  2399                           	opt asmopt_off
  2400  0318  3003               movlw  3
  2401  0319  1683               	bsf	status, 5	;RP0=1, select bank1
  2402  031A  1303               	bcf	status, 6	;RP1=0, select bank1
  2403  031B  00E5               movwf	((??_main+0)^080h+0+2),f
  2404  031C  308A               movlw	138
  2405  031D  00E4               movwf	((??_main+0)^080h+0+1),f
  2406  031E  3056               	movlw	86
  2407  031F  00E3               movwf	((??_main+0)^080h+0),f
  2408  0320                     u4547:
  2409  0320  0BE3               	decfsz	((??_main+0)^080h+0),f
  2410  0321  2B20               	goto	u4547
  2411  0322  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2412  0323  2B20               	goto	u4547
  2413  0324  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2414  0325  2B20               	goto	u4547
  2415  0326  2B27               	nop2
  2416                           opt asmopt_on
  2417                           
  2418                           	line	298
  2419                           	
  2420  0327                     l10836:	
  2421                           ;Main.c: 298: ser_putch(0);
  2422  0327  3000               	movlw	(0)
  2423  0328  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2424                           	line	299
  2425                           ;Main.c: 299: _delay((unsigned long)((100)*(20000000/4000.0)));
  2426                           	opt asmopt_off
  2427  032D  3003               movlw  3
  2428  032E  1683               	bsf	status, 5	;RP0=1, select bank1
  2429  032F  1303               	bcf	status, 6	;RP1=0, select bank1
  2430  0330  00E5               movwf	((??_main+0)^080h+0+2),f
  2431  0331  308A               movlw	138
  2432  0332  00E4               movwf	((??_main+0)^080h+0+1),f
  2433  0333  3056               	movlw	86
  2434  0334  00E3               movwf	((??_main+0)^080h+0),f
  2435  0335                     u4557:
  2436  0335  0BE3               	decfsz	((??_main+0)^080h+0),f
  2437  0336  2B35               	goto	u4557
  2438  0337  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2439  0338  2B35               	goto	u4557
  2440  0339  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2441  033A  2B35               	goto	u4557
  2442  033B  2B3C               	nop2
  2443                           opt asmopt_on
  2444                           
  2445                           	line	300
  2446                           	
  2447  033C                     l10838:	
  2448                           ;Main.c: 300: ser_putch(0);
  2449  033C  3000               	movlw	(0)
  2450  033D  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  2451                           	line	301
  2452                           	
  2453  0342                     l10840:	
  2454                           ;Main.c: 301: _delay((unsigned long)((100)*(20000000/4000.0)));
  2455                           	opt asmopt_off
  2456  0342  3003               movlw  3
  2457  0343  1683               	bsf	status, 5	;RP0=1, select bank1
  2458  0344  1303               	bcf	status, 6	;RP1=0, select bank1
  2459  0345  00E5               movwf	((??_main+0)^080h+0+2),f
  2460  0346  308A               movlw	138
  2461  0347  00E4               movwf	((??_main+0)^080h+0+1),f
  2462  0348  3056               	movlw	86
  2463  0349  00E3               movwf	((??_main+0)^080h+0),f
  2464  034A                     u4567:
  2465  034A  0BE3               	decfsz	((??_main+0)^080h+0),f
  2466  034B  2B4A               	goto	u4567
  2467  034C  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2468  034D  2B4A               	goto	u4567
  2469  034E  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2470  034F  2B4A               	goto	u4567
  2471  0350  2B51               	nop2
  2472                           opt asmopt_on
  2473                           
  2474                           	line	303
  2475                           	
  2476  0351                     l10842:	
  2477                           ;Main.c: 303: _delay((unsigned long)((100)*(20000000/4000.0)));
  2478                           	opt asmopt_off
  2479  0351  3003               movlw  3
  2480  0352  1683               	bsf	status, 5	;RP0=1, select bank1
  2481  0353  1303               	bcf	status, 6	;RP1=0, select bank1
  2482  0354  00E5               movwf	((??_main+0)^080h+0+2),f
  2483  0355  308A               movlw	138
  2484  0356  00E4               movwf	((??_main+0)^080h+0+1),f
  2485  0357  3056               	movlw	86
  2486  0358  00E3               movwf	((??_main+0)^080h+0),f
  2487  0359                     u4577:
  2488  0359  0BE3               	decfsz	((??_main+0)^080h+0),f
  2489  035A  2B59               	goto	u4577
  2490  035B  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2491  035C  2B59               	goto	u4577
  2492  035D  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2493  035E  2B59               	goto	u4577
  2494  035F  2B60               	nop2
  2495                           opt asmopt_on
  2496                           
  2497                           	line	305
  2498                           ;Main.c: 305: break;
  2499  0360  2B9C               	goto	l10854
  2500                           	line	306
  2501                           ;Main.c: 306: case 4:
  2502                           	
  2503  0361                     l2227:	
  2504                           	line	307
  2505                           	
  2506  0361                     l10844:	
  2507                           ;Main.c: 307: robotTurn(90);
  2508  0361  305A               	movlw	low(05Ah)
  2509  0362  1683               	bsf	status, 5	;RP0=1, select bank1
  2510  0363  1303               	bcf	status, 6	;RP1=0, select bank1
  2511  0364  00E0               	movwf	(?_robotTurn)^080h
  2512  0365  3000               	movlw	high(05Ah)
  2513  0366  00E1               	movwf	((?_robotTurn)^080h)+1
  2514  0367  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  2515                           	line	308
  2516                           	
  2517  036C                     l10846:	
  2518                           ;Main.c: 308: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2519                           	opt asmopt_off
  2520  036C  301A               movlw  26
  2521  036D  1683               	bsf	status, 5	;RP0=1, select bank1
  2522  036E  1303               	bcf	status, 6	;RP1=0, select bank1
  2523  036F  00E5               movwf	((??_main+0)^080h+0+2),f
  2524  0370  305E               movlw	94
  2525  0371  00E4               movwf	((??_main+0)^080h+0+1),f
  2526  0372  3086               	movlw	134
  2527  0373  00E3               movwf	((??_main+0)^080h+0),f
  2528  0374                     u4587:
  2529  0374  0BE3               	decfsz	((??_main+0)^080h+0),f
  2530  0375  2B74               	goto	u4587
  2531  0376  0BE4               	decfsz	((??_main+0)^080h+0+1),f
  2532  0377  2B74               	goto	u4587
  2533  0378  0BE5               	decfsz	((??_main+0)^080h+0+2),f
  2534  0379  2B74               	goto	u4587
  2535  037A  0064               	clrwdt
  2536                           opt asmopt_on
  2537                           
  2538                           	line	309
  2539                           	
  2540  037B                     l10848:	
  2541                           ;Main.c: 309: robotTurn(-90);
  2542  037B  30A6               	movlw	low(-90)
  2543  037C  1683               	bsf	status, 5	;RP0=1, select bank1
  2544  037D  1303               	bcf	status, 6	;RP1=0, select bank1
  2545  037E  00E0               	movwf	(?_robotTurn)^080h
  2546  037F  30FF               	movlw	high(-90)
  2547  0380  00E1               	movwf	((?_robotTurn)^080h)+1
  2548  0381  120A  158A  26C7   	fcall	_robotTurn
              120A  118A         
  2549                           	line	326
  2550                           ;Main.c: 326: break;
  2551  0386  2B9C               	goto	l10854
  2552                           	line	329
  2553                           ;Main.c: 329: default:
  2554                           	
  2555  0387                     l2228:	
  2556                           	line	331
  2557                           ;Main.c: 331: break;
  2558  0387  2B9C               	goto	l10854
  2559                           	line	332
  2560                           	
  2561  0388                     l10850:	
  2562                           ;Main.c: 332: }
  2563  0388  2B9C               	goto	l10854
  2564                           	line	222
  2565                           	
  2566  0389                     l2221:	
  2567                           	
  2568  0389                     l10852:	
  2569  0389  1683               	bsf	status, 5	;RP0=1, select bank1
  2570  038A  1303               	bcf	status, 6	;RP1=0, select bank1
  2571  038B  0866               	movf	(main@choice)^080h,w
  2572                           	; Switch size 1, requested type "space"
  2573                           ; Number of cases is 5, Range of values is 0 to 4
  2574                           ; switch strategies available:
  2575                           ; Name         Instructions Cycles
  2576                           ; simple_byte           16     9 (average)
  2577                           ; direct_byte           23     8 (fixed)
  2578                           ; jumptable            260     6 (fixed)
  2579                           ; rangetable             9     6 (fixed)
  2580                           ; spacedrange           16     9 (fixed)
  2581                           ; locatedrange           5     3 (fixed)
  2582                           ;	Chosen strategy is simple_byte
  2583                           
  2584                           	opt asmopt_off
  2585  038C  3A00               	xorlw	0^0	; case 0
  2586  038D  1903               	skipnz
  2587  038E  286E               	goto	l2222
  2588  038F  3A01               	xorlw	1^0	; case 1
  2589  0390  1903               	skipnz
  2590  0391  2882               	goto	l10756
  2591  0392  3A03               	xorlw	2^1	; case 2
  2592  0393  1903               	skipnz
  2593  0394  293D               	goto	l10778
  2594  0395  3A01               	xorlw	3^2	; case 3
  2595  0396  1903               	skipnz
  2596  0397  29F8               	goto	l10800
  2597  0398  3A07               	xorlw	4^3	; case 4
  2598  0399  1903               	skipnz
  2599  039A  2B61               	goto	l10844
  2600  039B  2B9C               	goto	l10854
  2601                           	opt asmopt_on
  2602                           
  2603                           	line	332
  2604                           	
  2605  039C                     l2223:	
  2606                           	line	333
  2607                           	
  2608  039C                     l10854:	
  2609                           ;Main.c: 333: choice = 255;
  2610  039C  30FF               	movlw	(0FFh)
  2611  039D  1683               	bsf	status, 5	;RP0=1, select bank1
  2612  039E  1303               	bcf	status, 6	;RP1=0, select bank1
  2613  039F  00E3               	movwf	(??_main+0)^080h+0
  2614  03A0  0863               	movf	(??_main+0)^080h+0,w
  2615  03A1  00E6               	movwf	(main@choice)^080h
  2616  03A2  281B               	goto	l10718
  2617                           	line	483
  2618                           	
  2619  03A3                     l2229:	
  2620                           	line	180
  2621  03A3  281B               	goto	l10718
  2622                           	
  2623  03A4                     l2230:	
  2624                           	line	484
  2625                           	
  2626  03A4                     l2231:	
  2627                           	global	start
  2628  03A4  120A  118A  2812   	ljmp	start
  2629                           	opt stack 0
  2630                           GLOBAL	__end_of_main
  2631  03A7                     	__end_of_main:
  2632 ;; =============== function _main ends ============
  2633                           
  2634                           	signat	_main,88
  2635                           	global	_init
  2636                           psect	text713,local,class=CODE,delta=2
  2637                           global __ptext713
  2638  0BE9                     __ptext713:
  2639                           
  2640 ;; *************** function _init *****************
  2641 ;; Defined at:
  2642 ;;		line 125 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;		None               void
  2649 ;; Registers used:
  2650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2656 ;;      Params:         0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0
  2658 ;;      Temps:          0       0       1       0       0
  2659 ;;      Totals:         0       0       1       0       0
  2660 ;;Total ram usage:        1 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    7
  2663 ;; This function calls:
  2664 ;;		_init_adc
  2665 ;;		_lcd_init
  2666 ;;		_ser_init
  2667 ;;		_robo_init
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           psect	text713
  2673                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  2674                           	line	125
  2675                           	global	__size_of_init
  2676  002B                     	__size_of_init	equ	__end_of_init-_init
  2677                           	
  2678  0BE9                     _init:	
  2679                           	opt	stack 0
  2680                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2681                           	line	126
  2682                           	
  2683  0BE9                     l10694:	
  2684                           ;Main.c: 126: init_adc();
  2685  0BE9  120A  158A  228A   	fcall	_init_adc
              120A  158A         
  2686                           	line	127
  2687                           ;Main.c: 127: lcd_init();
  2688  0BEE  120A  158A  23BE   	fcall	_lcd_init
              120A  158A         
  2689                           	line	128
  2690                           ;Main.c: 128: ser_init();
  2691  0BF3  120A  158A  2318   	fcall	_ser_init
              120A  158A         
  2692                           	line	129
  2693                           	
  2694  0BF8                     l10696:	
  2695                           ;Main.c: 129: robo_init();
  2696  0BF8  120A  158A  229E   	fcall	_robo_init
              120A  158A         
  2697                           	line	131
  2698                           	
  2699  0BFD                     l10698:	
  2700                           ;Main.c: 131: TRISB = 0b11111100;
  2701  0BFD  30FC               	movlw	(0FCh)
  2702  0BFE  1683               	bsf	status, 5	;RP0=1, select bank1
  2703  0BFF  1303               	bcf	status, 6	;RP1=0, select bank1
  2704  0C00  0086               	movwf	(134)^080h	;volatile
  2705                           	line	133
  2706                           	
  2707  0C01                     l10700:	
  2708                           ;Main.c: 133: TRISC &= 0b10010000;
  2709  0C01  3090               	movlw	(090h)
  2710  0C02  00E1               	movwf	(??_init+0)^080h+0
  2711  0C03  0861               	movf	(??_init+0)^080h+0,w
  2712  0C04  0587               	andwf	(135)^080h,f	;volatile
  2713                           	line	135
  2714                           	
  2715  0C05                     l10702:	
  2716                           ;Main.c: 135: SSPSTAT = 0b01000000;
  2717  0C05  3040               	movlw	(040h)
  2718  0C06  0094               	movwf	(148)^080h	;volatile
  2719                           	line	136
  2720                           	
  2721  0C07                     l10704:	
  2722                           ;Main.c: 136: SSPCON = 0b10100001;
  2723  0C07  30A1               	movlw	(0A1h)
  2724  0C08  1283               	bcf	status, 5	;RP0=0, select bank0
  2725  0C09  1303               	bcf	status, 6	;RP1=0, select bank0
  2726  0C0A  0094               	movwf	(20)	;volatile
  2727                           	line	137
  2728                           	
  2729  0C0B                     l10706:	
  2730                           ;Main.c: 137: RC0 = 0; RC1 = 0;
  2731  0C0B  1007               	bcf	(56/8),(56)&7
  2732                           	
  2733  0C0C                     l10708:	
  2734  0C0C  1087               	bcf	(57/8),(57)&7
  2735                           	line	139
  2736                           	
  2737  0C0D                     l10710:	
  2738                           ;Main.c: 139: OPTION_REG = 0b00000100;
  2739  0C0D  3004               	movlw	(04h)
  2740  0C0E  1683               	bsf	status, 5	;RP0=1, select bank1
  2741  0C0F  1303               	bcf	status, 6	;RP1=0, select bank1
  2742  0C10  0081               	movwf	(129)^080h	;volatile
  2743                           	line	142
  2744                           	
  2745  0C11                     l10712:	
  2746                           ;Main.c: 142: TMR0IE = 1;
  2747  0C11  168B               	bsf	(93/8),(93)&7
  2748                           	line	145
  2749                           	
  2750  0C12                     l10714:	
  2751                           ;Main.c: 145: (GIE = 1);
  2752  0C12  178B               	bsf	(95/8),(95)&7
  2753                           	line	146
  2754                           	
  2755  0C13                     l2203:	
  2756  0C13  0008               	return
  2757                           	opt stack 0
  2758                           GLOBAL	__end_of_init
  2759  0C14                     	__end_of_init:
  2760 ;; =============== function _init ends ============
  2761                           
  2762                           	signat	_init,88
  2763                           	global	_lcd_init
  2764                           psect	text714,local,class=CODE,delta=2
  2765                           global __ptext714
  2766  0BBE                     __ptext714:
  2767                           
  2768 ;; *************** function _lcd_init *****************
  2769 ;; Defined at:
  2770 ;;		line 101 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;		None               void
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    6
  2791 ;; This function calls:
  2792 ;;		_lcd_write_control
  2793 ;; This function is called by:
  2794 ;;		_init
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           psect	text714
  2798                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  2799                           	line	101
  2800                           	global	__size_of_lcd_init
  2801  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  2802                           	
  2803  0BBE                     _lcd_init:	
  2804                           	opt	stack 0
  2805                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2806                           	line	105
  2807                           	
  2808  0BBE                     l10674:	
  2809                           ;lcd.c: 105: ADCON1 = 0b00000010;
  2810  0BBE  3002               	movlw	(02h)
  2811  0BBF  1683               	bsf	status, 5	;RP0=1, select bank1
  2812  0BC0  1303               	bcf	status, 6	;RP1=0, select bank1
  2813  0BC1  009F               	movwf	(159)^080h	;volatile
  2814                           	line	108
  2815                           	
  2816  0BC2                     l10676:	
  2817                           ;lcd.c: 108: PORTD = 0;
  2818  0BC2  1283               	bcf	status, 5	;RP0=0, select bank0
  2819  0BC3  1303               	bcf	status, 6	;RP1=0, select bank0
  2820  0BC4  0188               	clrf	(8)	;volatile
  2821                           	line	109
  2822                           	
  2823  0BC5                     l10678:	
  2824                           ;lcd.c: 109: PORTE = 0;
  2825  0BC5  0189               	clrf	(9)	;volatile
  2826                           	line	111
  2827                           	
  2828  0BC6                     l10680:	
  2829                           ;lcd.c: 111: TRISD = 0b00000000;
  2830  0BC6  1683               	bsf	status, 5	;RP0=1, select bank1
  2831  0BC7  1303               	bcf	status, 6	;RP1=0, select bank1
  2832  0BC8  0188               	clrf	(136)^080h	;volatile
  2833                           	line	112
  2834                           	
  2835  0BC9                     l10682:	
  2836                           ;lcd.c: 112: TRISE = 0b00000000;
  2837  0BC9  0189               	clrf	(137)^080h	;volatile
  2838                           	line	115
  2839                           	
  2840  0BCA                     l10684:	
  2841                           ;lcd.c: 115: lcd_write_control(0b00000001);
  2842  0BCA  3001               	movlw	(01h)
  2843  0BCB  120A  158A  22B7   	fcall	_lcd_write_control
              120A  158A         
  2844                           	line	116
  2845                           	
  2846  0BD0                     l10686:	
  2847                           ;lcd.c: 116: lcd_write_control(0b00111000);
  2848  0BD0  3038               	movlw	(038h)
  2849  0BD1  120A  158A  22B7   	fcall	_lcd_write_control
              120A  158A         
  2850                           	line	117
  2851                           	
  2852  0BD6                     l10688:	
  2853                           ;lcd.c: 117: lcd_write_control(0b00001100);
  2854  0BD6  300C               	movlw	(0Ch)
  2855  0BD7  120A  158A  22B7   	fcall	_lcd_write_control
              120A  158A         
  2856                           	line	118
  2857                           	
  2858  0BDC                     l10690:	
  2859                           ;lcd.c: 118: lcd_write_control(0b00000110);
  2860  0BDC  3006               	movlw	(06h)
  2861  0BDD  120A  158A  22B7   	fcall	_lcd_write_control
              120A  158A         
  2862                           	line	119
  2863                           	
  2864  0BE2                     l10692:	
  2865                           ;lcd.c: 119: lcd_write_control(0b00000010);
  2866  0BE2  3002               	movlw	(02h)
  2867  0BE3  120A  158A  22B7   	fcall	_lcd_write_control
              120A  158A         
  2868                           	line	121
  2869                           	
  2870  0BE8                     l1429:	
  2871  0BE8  0008               	return
  2872                           	opt stack 0
  2873                           GLOBAL	__end_of_lcd_init
  2874  0BE9                     	__end_of_lcd_init:
  2875 ;; =============== function _lcd_init ends ============
  2876                           
  2877                           	signat	_lcd_init,88
  2878                           	global	_robotTurn
  2879                           psect	text715,local,class=CODE,delta=2
  2880                           global __ptext715
  2881  0EC7                     __ptext715:
  2882                           
  2883 ;; *************** function _robotTurn *****************
  2884 ;; Defined at:
  2885 ;;		line 66 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  distance        2    2[BANK1 ] int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;		None               void
  2892 ;; Registers used:
  2893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2899 ;;      Params:         0       0       2       0       0
  2900 ;;      Locals:         0       0       0       0       0
  2901 ;;      Temps:          0       0       1       0       0
  2902 ;;      Totals:         0       0       3       0       0
  2903 ;;Total ram usage:        3 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    6
  2906 ;; This function calls:
  2907 ;;		_ser_putch
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           psect	text715
  2913                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2914                           	line	66
  2915                           	global	__size_of_robotTurn
  2916  0080                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  2917                           	
  2918  0EC7                     _robotTurn:	
  2919                           	opt	stack 1
  2920                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2921                           	line	69
  2922                           	
  2923  0EC7                     l10664:	
  2924                           ;robot.c: 69: turnlowByte = (unsigned char) (distance) ;
  2925  0EC7  1683               	bsf	status, 5	;RP0=1, select bank1
  2926  0EC8  1303               	bcf	status, 6	;RP1=0, select bank1
  2927  0EC9  0860               	movf	(robotTurn@distance)^080h,w
  2928  0ECA  00E2               	movwf	(??_robotTurn+0)^080h+0
  2929  0ECB  0862               	movf	(??_robotTurn+0)^080h+0,w
  2930  0ECC  00D3               	movwf	(_turnlowByte)^080h
  2931                           	line	70
  2932                           	
  2933  0ECD                     l10666:	
  2934                           ;robot.c: 70: turnhighByte = (unsigned char) (distance >> 8);
  2935  0ECD  0861               	movf	(robotTurn@distance+1)^080h,w
  2936  0ECE  00E2               	movwf	(??_robotTurn+0)^080h+0
  2937  0ECF  0862               	movf	(??_robotTurn+0)^080h+0,w
  2938  0ED0  00D2               	movwf	(_turnhighByte)^080h
  2939                           	line	71
  2940                           	
  2941  0ED1                     l10668:	
  2942                           ;robot.c: 71: if (distance >= 0)
  2943  0ED1  1BE1               	btfsc	(robotTurn@distance+1)^080h,7
  2944  0ED2  2ED4               	goto	u4251
  2945  0ED3  2ED5               	goto	u4250
  2946  0ED4                     u4251:
  2947  0ED4  2EF4               	goto	l10672
  2948  0ED5                     u4250:
  2949                           	line	73
  2950                           	
  2951  0ED5                     l10670:	
  2952                           ;robot.c: 72: {
  2953                           ;robot.c: 73: ser_putch(137);
  2954  0ED5  3089               	movlw	(089h)
  2955  0ED6  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  2956                           	line	75
  2957                           ;robot.c: 75: ser_putch(0);
  2958  0EDB  3000               	movlw	(0)
  2959  0EDC  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  2960                           	line	77
  2961                           ;robot.c: 77: ser_putch(100);
  2962  0EE1  3064               	movlw	(064h)
  2963  0EE2  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  2964                           	line	79
  2965                           ;robot.c: 79: ser_putch(0);
  2966  0EE7  3000               	movlw	(0)
  2967  0EE8  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  2968                           	line	81
  2969                           ;robot.c: 81: ser_putch(1);
  2970  0EED  3001               	movlw	(01h)
  2971  0EEE  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  2972                           	line	82
  2973                           ;robot.c: 82: }
  2974  0EF3  2F12               	goto	l6648
  2975                           	line	83
  2976                           	
  2977  0EF4                     l6647:	
  2978                           	line	85
  2979                           	
  2980  0EF4                     l10672:	
  2981                           ;robot.c: 83: else
  2982                           ;robot.c: 84: {
  2983                           ;robot.c: 85: ser_putch(137);
  2984  0EF4  3089               	movlw	(089h)
  2985  0EF5  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  2986                           	line	87
  2987                           ;robot.c: 87: ser_putch(0);
  2988  0EFA  3000               	movlw	(0)
  2989  0EFB  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  2990                           	line	89
  2991                           ;robot.c: 89: ser_putch(100);
  2992  0F00  3064               	movlw	(064h)
  2993  0F01  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  2994                           	line	91
  2995                           ;robot.c: 91: ser_putch(255);
  2996  0F06  30FF               	movlw	(0FFh)
  2997  0F07  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  2998                           	line	93
  2999                           ;robot.c: 93: ser_putch(255);
  3000  0F0C  30FF               	movlw	(0FFh)
  3001  0F0D  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3002                           	line	94
  3003                           	
  3004  0F12                     l6648:	
  3005                           	line	95
  3006                           ;robot.c: 94: }
  3007                           ;robot.c: 95: ser_putch(157);
  3008  0F12  309D               	movlw	(09Dh)
  3009  0F13  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3010                           	line	97
  3011                           ;robot.c: 97: ser_putch(turnhighByte);
  3012  0F18  1683               	bsf	status, 5	;RP0=1, select bank1
  3013  0F19  1303               	bcf	status, 6	;RP1=0, select bank1
  3014  0F1A  0852               	movf	(_turnhighByte)^080h,w
  3015  0F1B  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3016                           	line	99
  3017                           ;robot.c: 99: ser_putch(turnlowByte);
  3018  0F20  1683               	bsf	status, 5	;RP0=1, select bank1
  3019  0F21  1303               	bcf	status, 6	;RP1=0, select bank1
  3020  0F22  0853               	movf	(_turnlowByte)^080h,w
  3021  0F23  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3022                           	line	101
  3023                           ;robot.c: 101: ser_putch(137);
  3024  0F28  3089               	movlw	(089h)
  3025  0F29  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3026                           	line	103
  3027                           ;robot.c: 103: ser_putch(0);
  3028  0F2E  3000               	movlw	(0)
  3029  0F2F  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3030                           	line	105
  3031                           ;robot.c: 105: ser_putch(0);
  3032  0F34  3000               	movlw	(0)
  3033  0F35  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3034                           	line	107
  3035                           ;robot.c: 107: ser_putch(0);
  3036  0F3A  3000               	movlw	(0)
  3037  0F3B  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3038                           	line	109
  3039                           ;robot.c: 109: ser_putch(0);
  3040  0F40  3000               	movlw	(0)
  3041  0F41  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3042                           	line	111
  3043                           	
  3044  0F46                     l6649:	
  3045  0F46  0008               	return
  3046                           	opt stack 0
  3047                           GLOBAL	__end_of_robotTurn
  3048  0F47                     	__end_of_robotTurn:
  3049 ;; =============== function _robotTurn ends ============
  3050                           
  3051                           	signat	_robotTurn,4216
  3052                           	global	_robotMove
  3053                           psect	text716,local,class=CODE,delta=2
  3054                           global __ptext716
  3055  0777                     __ptext716:
  3056                           
  3057 ;; *************** function _robotMove *****************
  3058 ;; Defined at:
  3059 ;;		line 19 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  distance        2    2[BANK1 ] int 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;		None               void
  3066 ;; Registers used:
  3067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         0       0       2       0       0
  3074 ;;      Locals:         0       0       0       0       0
  3075 ;;      Temps:          0       0       1       0       0
  3076 ;;      Totals:         0       0       3       0       0
  3077 ;;Total ram usage:        3 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    6
  3080 ;; This function calls:
  3081 ;;		_ser_putch
  3082 ;; This function is called by:
  3083 ;;		_main
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           psect	text716
  3087                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3088                           	line	19
  3089                           	global	__size_of_robotMove
  3090  0088                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  3091                           	
  3092  0777                     _robotMove:	
  3093                           	opt	stack 1
  3094                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3095                           	line	21
  3096                           	
  3097  0777                     l10654:	
  3098                           ;robot.c: 21: lowByte = (unsigned char) (distance) ;
  3099  0777  1683               	bsf	status, 5	;RP0=1, select bank1
  3100  0778  1303               	bcf	status, 6	;RP1=0, select bank1
  3101  0779  0860               	movf	(robotMove@distance)^080h,w
  3102  077A  00E2               	movwf	(??_robotMove+0)^080h+0
  3103  077B  0862               	movf	(??_robotMove+0)^080h+0,w
  3104  077C  1283               	bcf	status, 5	;RP0=0, select bank0
  3105  077D  1303               	bcf	status, 6	;RP1=0, select bank0
  3106  077E  00E5               	movwf	(_lowByte)
  3107                           	line	22
  3108                           	
  3109  077F                     l10656:	
  3110                           ;robot.c: 22: highByte = (unsigned char) (distance >> 8);
  3111  077F  1683               	bsf	status, 5	;RP0=1, select bank1
  3112  0780  1303               	bcf	status, 6	;RP1=0, select bank1
  3113  0781  0861               	movf	(robotMove@distance+1)^080h,w
  3114  0782  00E2               	movwf	(??_robotMove+0)^080h+0
  3115  0783  0862               	movf	(??_robotMove+0)^080h+0,w
  3116  0784  1283               	bcf	status, 5	;RP0=0, select bank0
  3117  0785  1303               	bcf	status, 6	;RP1=0, select bank0
  3118  0786  00E4               	movwf	(_highByte)
  3119                           	line	23
  3120                           	
  3121  0787                     l10658:	
  3122                           ;robot.c: 23: if (distance >= 0)
  3123  0787  1683               	bsf	status, 5	;RP0=1, select bank1
  3124  0788  1303               	bcf	status, 6	;RP1=0, select bank1
  3125  0789  1BE1               	btfsc	(robotMove@distance+1)^080h,7
  3126  078A  2F8C               	goto	u4241
  3127  078B  2F8D               	goto	u4240
  3128  078C                     u4241:
  3129  078C  2FAC               	goto	l10662
  3130  078D                     u4240:
  3131                           	line	25
  3132                           	
  3133  078D                     l10660:	
  3134                           ;robot.c: 24: {
  3135                           ;robot.c: 25: ser_putch(137);
  3136  078D  3089               	movlw	(089h)
  3137  078E  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3138                           	line	27
  3139                           ;robot.c: 27: ser_putch(0);
  3140  0793  3000               	movlw	(0)
  3141  0794  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3142                           	line	29
  3143                           ;robot.c: 29: ser_putch(200);
  3144  0799  30C8               	movlw	(0C8h)
  3145  079A  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3146                           	line	31
  3147                           ;robot.c: 31: ser_putch(128);
  3148  079F  3080               	movlw	(080h)
  3149  07A0  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3150                           	line	33
  3151                           ;robot.c: 33: ser_putch(0);
  3152  07A5  3000               	movlw	(0)
  3153  07A6  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3154                           	line	34
  3155                           ;robot.c: 34: }
  3156  07AB  2FCA               	goto	l6643
  3157                           	line	35
  3158                           	
  3159  07AC                     l6642:	
  3160                           	line	37
  3161                           	
  3162  07AC                     l10662:	
  3163                           ;robot.c: 35: else
  3164                           ;robot.c: 36: {
  3165                           ;robot.c: 37: ser_putch(137);
  3166  07AC  3089               	movlw	(089h)
  3167  07AD  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3168                           	line	39
  3169                           ;robot.c: 39: ser_putch(0xff);
  3170  07B2  30FF               	movlw	(0FFh)
  3171  07B3  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3172                           	line	41
  3173                           ;robot.c: 41: ser_putch(0x38);
  3174  07B8  3038               	movlw	(038h)
  3175  07B9  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3176                           	line	43
  3177                           ;robot.c: 43: ser_putch(128);
  3178  07BE  3080               	movlw	(080h)
  3179  07BF  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3180                           	line	45
  3181                           ;robot.c: 45: ser_putch(0);
  3182  07C4  3000               	movlw	(0)
  3183  07C5  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3184                           	line	46
  3185                           	
  3186  07CA                     l6643:	
  3187                           	line	47
  3188                           ;robot.c: 46: }
  3189                           ;robot.c: 47: ser_putch(156);
  3190  07CA  309C               	movlw	(09Ch)
  3191  07CB  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3192                           	line	49
  3193                           ;robot.c: 49: ser_putch(highByte);
  3194  07D0  1283               	bcf	status, 5	;RP0=0, select bank0
  3195  07D1  1303               	bcf	status, 6	;RP1=0, select bank0
  3196  07D2  0864               	movf	(_highByte),w
  3197  07D3  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3198                           	line	51
  3199                           ;robot.c: 51: ser_putch(lowByte);
  3200  07D8  1283               	bcf	status, 5	;RP0=0, select bank0
  3201  07D9  1303               	bcf	status, 6	;RP1=0, select bank0
  3202  07DA  0865               	movf	(_lowByte),w
  3203  07DB  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3204                           	line	53
  3205                           ;robot.c: 53: ser_putch(137);
  3206  07E0  3089               	movlw	(089h)
  3207  07E1  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3208                           	line	55
  3209                           ;robot.c: 55: ser_putch(0);
  3210  07E6  3000               	movlw	(0)
  3211  07E7  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3212                           	line	57
  3213                           ;robot.c: 57: ser_putch(0);
  3214  07EC  3000               	movlw	(0)
  3215  07ED  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3216                           	line	59
  3217                           ;robot.c: 59: ser_putch(0);
  3218  07F2  3000               	movlw	(0)
  3219  07F3  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3220                           	line	61
  3221                           ;robot.c: 61: ser_putch(0);
  3222  07F8  3000               	movlw	(0)
  3223  07F9  120A  158A  2414   	fcall	_ser_putch
              120A  118A         
  3224                           	line	63
  3225                           	
  3226  07FE                     l6644:	
  3227  07FE  0008               	return
  3228                           	opt stack 0
  3229                           GLOBAL	__end_of_robotMove
  3230  07FF                     	__end_of_robotMove:
  3231 ;; =============== function _robotMove ends ============
  3232                           
  3233                           	signat	_robotMove,4216
  3234                           	global	_robo_init
  3235                           psect	text717,local,class=CODE,delta=2
  3236                           global __ptext717
  3237  0A9E                     __ptext717:
  3238                           
  3239 ;; *************** function _robo_init *****************
  3240 ;; Defined at:
  3241 ;;		line 9 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    6
  3262 ;; This function calls:
  3263 ;;		_ser_putch
  3264 ;; This function is called by:
  3265 ;;		_init
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           psect	text717
  3269                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  3270                           	line	9
  3271                           	global	__size_of_robo_init
  3272  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  3273                           	
  3274  0A9E                     _robo_init:	
  3275                           	opt	stack 0
  3276                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3277                           	line	10
  3278                           	
  3279  0A9E                     l10652:	
  3280                           ;robot.c: 10: ser_putch(128);
  3281  0A9E  3080               	movlw	(080h)
  3282  0A9F  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3283                           	line	11
  3284                           ;robot.c: 11: ser_putch(132);
  3285  0AA4  3084               	movlw	(084h)
  3286  0AA5  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3287                           	line	14
  3288                           ;robot.c: 14: ser_putch (142);
  3289  0AAA  308E               	movlw	(08Eh)
  3290  0AAB  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3291                           	line	15
  3292                           ;robot.c: 15: ser_putch (19);
  3293  0AB0  3013               	movlw	(013h)
  3294  0AB1  120A  158A  2414   	fcall	_ser_putch
              120A  158A         
  3295                           	line	16
  3296                           	
  3297  0AB6                     l6639:	
  3298  0AB6  0008               	return
  3299                           	opt stack 0
  3300                           GLOBAL	__end_of_robo_init
  3301  0AB7                     	__end_of_robo_init:
  3302 ;; =============== function _robo_init ends ============
  3303                           
  3304                           	signat	_robo_init,88
  3305                           	global	_lcd_write_control
  3306                           psect	text718,local,class=CODE,delta=2
  3307                           global __ptext718
  3308  0AB7                     __ptext718:
  3309                           
  3310 ;; *************** function _lcd_write_control *****************
  3311 ;; Defined at:
  3312 ;;		line 18 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  databyte        1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  databyte        1    2[BANK1 ] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		wreg
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         0       0       1       0       0
  3328 ;;      Temps:          0       0       2       0       0
  3329 ;;      Totals:         0       0       3       0       0
  3330 ;;Total ram usage:        3 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    5
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_lcd_init
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           psect	text718
  3340                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  3341                           	line	18
  3342                           	global	__size_of_lcd_write_control
  3343  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  3344                           	
  3345  0AB7                     _lcd_write_control:	
  3346                           	opt	stack 0
  3347                           ; Regs used in _lcd_write_control: [wreg]
  3348                           ;lcd_write_control@databyte stored from wreg
  3349  0AB7  1683               	bsf	status, 5	;RP0=1, select bank1
  3350  0AB8  1303               	bcf	status, 6	;RP1=0, select bank1
  3351  0AB9  00E0               	movwf	(lcd_write_control@databyte)^080h
  3352                           	line	19
  3353                           	
  3354  0ABA                     l10644:	
  3355                           ;lcd.c: 19: RE2 = 0;
  3356  0ABA  1283               	bcf	status, 5	;RP0=0, select bank0
  3357  0ABB  1303               	bcf	status, 6	;RP1=0, select bank0
  3358  0ABC  1109               	bcf	(74/8),(74)&7
  3359                           	line	20
  3360                           ;lcd.c: 20: RE1 = 0;
  3361  0ABD  1089               	bcf	(73/8),(73)&7
  3362                           	line	21
  3363                           ;lcd.c: 21: RE0 = 0;
  3364  0ABE  1009               	bcf	(72/8),(72)&7
  3365                           	line	22
  3366                           	
  3367  0ABF                     l10646:	
  3368                           ;lcd.c: 22: PORTD = databyte;
  3369  0ABF  1683               	bsf	status, 5	;RP0=1, select bank1
  3370  0AC0  1303               	bcf	status, 6	;RP1=0, select bank1
  3371  0AC1  0860               	movf	(lcd_write_control@databyte)^080h,w
  3372  0AC2  1283               	bcf	status, 5	;RP0=0, select bank0
  3373  0AC3  1303               	bcf	status, 6	;RP1=0, select bank0
  3374  0AC4  0088               	movwf	(8)	;volatile
  3375                           	line	23
  3376                           	
  3377  0AC5                     l10648:	
  3378                           ;lcd.c: 23: RE2 = 1;
  3379  0AC5  1509               	bsf	(74/8),(74)&7
  3380                           	line	24
  3381                           	
  3382  0AC6                     l10650:	
  3383                           ;lcd.c: 24: RE2 = 0;
  3384  0AC6  1109               	bcf	(74/8),(74)&7
  3385                           	line	25
  3386                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  3387                           	opt asmopt_off
  3388  0AC7  300D               movlw	13
  3389  0AC8  1683               	bsf	status, 5	;RP0=1, select bank1
  3390  0AC9  1303               	bcf	status, 6	;RP1=0, select bank1
  3391  0ACA  00DF               movwf	((??_lcd_write_control+0)^080h+0+1),f
  3392  0ACB  30FB               	movlw	251
  3393  0ACC  00DE               movwf	((??_lcd_write_control+0)^080h+0),f
  3394  0ACD                     u4597:
  3395  0ACD  0BDE               	decfsz	((??_lcd_write_control+0)^080h+0),f
  3396  0ACE  2ACD               	goto	u4597
  3397  0ACF  0BDF               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  3398  0AD0  2ACD               	goto	u4597
  3399  0AD1  2AD2               	nop2
  3400                           opt asmopt_on
  3401                           
  3402                           	line	26
  3403                           	
  3404  0AD2                     l1399:	
  3405  0AD2  0008               	return
  3406                           	opt stack 0
  3407                           GLOBAL	__end_of_lcd_write_control
  3408  0AD3                     	__end_of_lcd_write_control:
  3409 ;; =============== function _lcd_write_control ends ============
  3410                           
  3411                           	signat	_lcd_write_control,4216
  3412                           	global	_init_adc
  3413                           psect	text719,local,class=CODE,delta=2
  3414                           global __ptext719
  3415  0A8A                     __ptext719:
  3416                           
  3417 ;; *************** function _init_adc *****************
  3418 ;; Defined at:
  3419 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;		None               void
  3426 ;; Registers used:
  3427 ;;		wreg, status,2
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3433 ;;      Params:         0       0       0       0       0
  3434 ;;      Locals:         0       0       0       0       0
  3435 ;;      Temps:          0       0       1       0       0
  3436 ;;      Totals:         0       0       1       0       0
  3437 ;;Total ram usage:        1 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    5
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_init
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           psect	text719
  3447                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  3448                           	line	46
  3449                           	global	__size_of_init_adc
  3450  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  3451                           	
  3452  0A8A                     _init_adc:	
  3453                           	opt	stack 1
  3454                           ; Regs used in _init_adc: [wreg+status,2]
  3455                           	line	48
  3456                           	
  3457  0A8A                     l10634:	
  3458                           ;adc.c: 48: PORTA = 0;
  3459  0A8A  1283               	bcf	status, 5	;RP0=0, select bank0
  3460  0A8B  1303               	bcf	status, 6	;RP1=0, select bank0
  3461  0A8C  0185               	clrf	(5)	;volatile
  3462                           	line	49
  3463                           	
  3464  0A8D                     l10636:	
  3465                           ;adc.c: 49: TRISA = 0b00111111;
  3466  0A8D  303F               	movlw	(03Fh)
  3467  0A8E  1683               	bsf	status, 5	;RP0=1, select bank1
  3468  0A8F  1303               	bcf	status, 6	;RP1=0, select bank1
  3469  0A90  0085               	movwf	(133)^080h	;volatile
  3470                           	line	52
  3471                           	
  3472  0A91                     l10638:	
  3473                           ;adc.c: 52: ADCON0 = 0b10100001;
  3474  0A91  30A1               	movlw	(0A1h)
  3475  0A92  1283               	bcf	status, 5	;RP0=0, select bank0
  3476  0A93  1303               	bcf	status, 6	;RP1=0, select bank0
  3477  0A94  009F               	movwf	(31)	;volatile
  3478                           	line	53
  3479                           	
  3480  0A95                     l10640:	
  3481                           ;adc.c: 53: ADCON1 = 0b0000010;
  3482  0A95  3002               	movlw	(02h)
  3483  0A96  1683               	bsf	status, 5	;RP0=1, select bank1
  3484  0A97  1303               	bcf	status, 6	;RP1=0, select bank1
  3485  0A98  009F               	movwf	(159)^080h	;volatile
  3486                           	line	55
  3487                           	
  3488  0A99                     l10642:	
  3489                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  3490                           	opt asmopt_off
  3491  0A99  3053               movlw	83
  3492  0A9A  00DE               movwf	(??_init_adc+0)^080h+0,f
  3493  0A9B                     u4607:
  3494  0A9B  0BDE               decfsz	(??_init_adc+0)^080h+0,f
  3495  0A9C  2A9B               	goto	u4607
  3496                           opt asmopt_on
  3497                           
  3498                           	line	57
  3499                           	
  3500  0A9D                     l700:	
  3501  0A9D  0008               	return
  3502                           	opt stack 0
  3503                           GLOBAL	__end_of_init_adc
  3504  0A9E                     	__end_of_init_adc:
  3505 ;; =============== function _init_adc ends ============
  3506                           
  3507                           	signat	_init_adc,88
  3508                           	global	_ser_putch
  3509                           psect	text720,local,class=CODE,delta=2
  3510                           global __ptext720
  3511  0C14                     __ptext720:
  3512                           
  3513 ;; *************** function _ser_putch *****************
  3514 ;; Defined at:
  3515 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  c               1    wreg     unsigned char 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  c               1    1[BANK1 ] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;		None               void
  3522 ;; Registers used:
  3523 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         0       0       0       0       0
  3530 ;;      Locals:         0       0       1       0       0
  3531 ;;      Temps:          0       0       1       0       0
  3532 ;;      Totals:         0       0       2       0       0
  3533 ;;Total ram usage:        2 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    5
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;;		_robo_init
  3541 ;;		_robotMove
  3542 ;;		_robotTurn
  3543 ;;		_ser_puts
  3544 ;;		_ser_puts2
  3545 ;;		_ser_puthex
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           psect	text720
  3549                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  3550                           	line	70
  3551                           	global	__size_of_ser_putch
  3552  002E                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  3553                           	
  3554  0C14                     _ser_putch:	
  3555                           	opt	stack 2
  3556                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  3557                           ;ser_putch@c stored from wreg
  3558  0C14  1683               	bsf	status, 5	;RP0=1, select bank1
  3559  0C15  1303               	bcf	status, 6	;RP1=0, select bank1
  3560  0C16  00DF               	movwf	(ser_putch@c)^080h
  3561                           	line	71
  3562                           	
  3563  0C17                     l10234:	
  3564                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  3565  0C17  2C19               	goto	l10236
  3566                           	
  3567  0C18                     l4380:	
  3568                           	line	72
  3569                           ;ser.c: 72: continue;
  3570  0C18  2C19               	goto	l10236
  3571                           	
  3572  0C19                     l4379:	
  3573                           	line	71
  3574                           	
  3575  0C19                     l10236:	
  3576  0C19  1283               	bcf	status, 5	;RP0=0, select bank0
  3577  0C1A  086A               	movf	(_txiptr),w	;volatile
  3578  0C1B  3E01               	addlw	01h
  3579  0C1C  390F               	andlw	0Fh
  3580  0C1D  066B               	xorwf	(_txoptr),w	;volatile
  3581  0C1E  1903               	skipnz
  3582  0C1F  2C21               	goto	u3461
  3583  0C20  2C22               	goto	u3460
  3584  0C21                     u3461:
  3585  0C21  2C19               	goto	l10236
  3586  0C22                     u3460:
  3587                           	
  3588  0C22                     l4381:	
  3589                           	line	73
  3590                           ;ser.c: 73: GIE=0;
  3591  0C22  138B               	bcf	(95/8),(95)&7
  3592                           	line	74
  3593                           	
  3594  0C23                     l10238:	
  3595                           ;ser.c: 74: txfifo[txiptr] = c;
  3596  0C23  1683               	bsf	status, 5	;RP0=1, select bank1
  3597  0C24  1303               	bcf	status, 6	;RP1=0, select bank1
  3598  0C25  085F               	movf	(ser_putch@c)^080h,w
  3599  0C26  00DE               	movwf	(??_ser_putch+0)^080h+0
  3600  0C27  1283               	bcf	status, 5	;RP0=0, select bank0
  3601  0C28  1303               	bcf	status, 6	;RP1=0, select bank0
  3602  0C29  086A               	movf	(_txiptr),w
  3603  0C2A  3EC0               	addlw	_txfifo&0ffh
  3604  0C2B  0084               	movwf	fsr0
  3605  0C2C  1683               	bsf	status, 5	;RP0=1, select bank1
  3606  0C2D  1303               	bcf	status, 6	;RP1=0, select bank1
  3607  0C2E  085E               	movf	(??_ser_putch+0)^080h+0,w
  3608  0C2F  1383               	bcf	status, 7	;select IRP bank1
  3609  0C30  0080               	movwf	indf
  3610                           	line	75
  3611                           	
  3612  0C31                     l10240:	
  3613                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  3614  0C31  1283               	bcf	status, 5	;RP0=0, select bank0
  3615  0C32  1303               	bcf	status, 6	;RP1=0, select bank0
  3616  0C33  086A               	movf	(_txiptr),w	;volatile
  3617  0C34  3E01               	addlw	01h
  3618  0C35  390F               	andlw	0Fh
  3619  0C36  1683               	bsf	status, 5	;RP0=1, select bank1
  3620  0C37  1303               	bcf	status, 6	;RP1=0, select bank1
  3621  0C38  00DE               	movwf	(??_ser_putch+0)^080h+0
  3622  0C39  085E               	movf	(??_ser_putch+0)^080h+0,w
  3623  0C3A  1283               	bcf	status, 5	;RP0=0, select bank0
  3624  0C3B  1303               	bcf	status, 6	;RP1=0, select bank0
  3625  0C3C  00EA               	movwf	(_txiptr)	;volatile
  3626                           	line	76
  3627                           	
  3628  0C3D                     l10242:	
  3629                           ;ser.c: 76: TXIE=1;
  3630  0C3D  1683               	bsf	status, 5	;RP0=1, select bank1
  3631  0C3E  1303               	bcf	status, 6	;RP1=0, select bank1
  3632  0C3F  160C               	bsf	(1124/8)^080h,(1124)&7
  3633                           	line	77
  3634                           	
  3635  0C40                     l10244:	
  3636                           ;ser.c: 77: GIE=1;
  3637  0C40  178B               	bsf	(95/8),(95)&7
  3638                           	line	78
  3639                           	
  3640  0C41                     l4382:	
  3641  0C41  0008               	return
  3642                           	opt stack 0
  3643                           GLOBAL	__end_of_ser_putch
  3644  0C42                     	__end_of_ser_putch:
  3645 ;; =============== function _ser_putch ends ============
  3646                           
  3647                           	signat	_ser_putch,4216
  3648                           	global	_Menu
  3649                           psect	text721,local,class=CODE,delta=2
  3650                           global __ptext721
  3651  0CFB                     __ptext721:
  3652                           
  3653 ;; *************** function _Menu *****************
  3654 ;; Defined at:
  3655 ;;		line 180 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  input           1    wreg     unsigned char 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  input           1    0[BANK1 ] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      unsigned char 
  3662 ;; Registers used:
  3663 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3669 ;;      Params:         0       0       0       0       0
  3670 ;;      Locals:         0       0       1       0       0
  3671 ;;      Temps:          0       0       0       0       0
  3672 ;;      Totals:         0       0       1       0       0
  3673 ;;Total ram usage:        1 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    5
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           psect	text721
  3683                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  3684                           	line	180
  3685                           	global	__size_of_Menu
  3686  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  3687                           	
  3688  0CFB                     _Menu:	
  3689                           	opt	stack 2
  3690                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  3691                           ;Menu@input stored from wreg
  3692  0CFB  1683               	bsf	status, 5	;RP0=1, select bank1
  3693  0CFC  1303               	bcf	status, 6	;RP1=0, select bank1
  3694  0CFD  00DE               	movwf	(Menu@input)^080h
  3695                           	line	181
  3696                           	
  3697  0CFE                     l10208:	
  3698                           ;HMI.c: 181: switch (input)
  3699  0CFE  2D2C               	goto	l10228
  3700                           	line	183
  3701                           ;HMI.c: 182: {
  3702                           ;HMI.c: 183: case 1:
  3703                           	
  3704  0CFF                     l5178:	
  3705                           	line	185
  3706                           ;HMI.c: 185: break;
  3707  0CFF  2D3F               	goto	l10230
  3708                           	line	186
  3709                           ;HMI.c: 186: case 2:
  3710                           	
  3711  0D00                     l5180:	
  3712                           	line	188
  3713                           ;HMI.c: 188: break;
  3714  0D00  2D3F               	goto	l10230
  3715                           	line	189
  3716                           ;HMI.c: 189: case 3:
  3717                           	
  3718  0D01                     l5181:	
  3719                           	line	190
  3720                           	
  3721  0D01                     l10210:	
  3722                           ;HMI.c: 190: pos--;
  3723  0D01  30FF               	movlw	low(-1)
  3724  0D02  1283               	bcf	status, 5	;RP0=0, select bank0
  3725  0D03  1303               	bcf	status, 6	;RP1=0, select bank0
  3726  0D04  07D9               	addwf	(_pos),f
  3727  0D05  1803               	skipnc
  3728  0D06  0ADA               	incf	(_pos+1),f
  3729  0D07  30FF               	movlw	high(-1)
  3730  0D08  07DA               	addwf	(_pos+1),f
  3731                           	line	191
  3732                           	
  3733  0D09                     l10212:	
  3734                           ;HMI.c: 191: if (pos < 0)
  3735  0D09  1FDA               	btfss	(_pos+1),7
  3736  0D0A  2D0C               	goto	u3441
  3737  0D0B  2D0D               	goto	u3440
  3738  0D0C                     u3441:
  3739  0D0C  2D3F               	goto	l10230
  3740  0D0D                     u3440:
  3741                           	line	192
  3742                           	
  3743  0D0D                     l10214:	
  3744                           ;HMI.c: 192: pos = 5 - 1;
  3745  0D0D  3004               	movlw	low(04h)
  3746  0D0E  00D9               	movwf	(_pos)
  3747  0D0F  3000               	movlw	high(04h)
  3748  0D10  00DA               	movwf	((_pos))+1
  3749  0D11  2D3F               	goto	l10230
  3750                           	
  3751  0D12                     l5182:	
  3752                           	line	194
  3753                           ;HMI.c: 194: break;
  3754  0D12  2D3F               	goto	l10230
  3755                           	line	195
  3756                           ;HMI.c: 195: case 4:
  3757                           	
  3758  0D13                     l5183:	
  3759                           	line	196
  3760                           	
  3761  0D13                     l10216:	
  3762                           ;HMI.c: 196: pos++;
  3763  0D13  3001               	movlw	low(01h)
  3764  0D14  1283               	bcf	status, 5	;RP0=0, select bank0
  3765  0D15  07D9               	addwf	(_pos),f
  3766  0D16  1803               	skipnc
  3767  0D17  0ADA               	incf	(_pos+1),f
  3768  0D18  3000               	movlw	high(01h)
  3769  0D19  07DA               	addwf	(_pos+1),f
  3770                           	line	197
  3771                           ;HMI.c: 197: if (pos == 5)
  3772  0D1A  3005               	movlw	05h
  3773  0D1B  0659               	xorwf	(_pos),w
  3774  0D1C  045A               	iorwf	(_pos+1),w
  3775  0D1D  1D03               	skipz
  3776  0D1E  2D20               	goto	u3451
  3777  0D1F  2D21               	goto	u3450
  3778  0D20                     u3451:
  3779  0D20  2D3F               	goto	l10230
  3780  0D21                     u3450:
  3781                           	line	198
  3782                           	
  3783  0D21                     l10218:	
  3784                           ;HMI.c: 198: pos = 0;
  3785  0D21  01D9               	clrf	(_pos)
  3786  0D22  01DA               	clrf	(_pos+1)
  3787  0D23  2D3F               	goto	l10230
  3788                           	
  3789  0D24                     l5184:	
  3790                           	line	200
  3791                           ;HMI.c: 200: break;
  3792  0D24  2D3F               	goto	l10230
  3793                           	line	201
  3794                           ;HMI.c: 201: case 5:
  3795                           	
  3796  0D25                     l5185:	
  3797                           	line	202
  3798                           	
  3799  0D25                     l10220:	
  3800                           ;HMI.c: 202: return pos;
  3801  0D25  1283               	bcf	status, 5	;RP0=0, select bank0
  3802  0D26  0859               	movf	(_pos),w
  3803  0D27  2D41               	goto	l5186
  3804                           	
  3805  0D28                     l10222:	
  3806  0D28  2D41               	goto	l5186
  3807                           	line	203
  3808                           	
  3809  0D29                     l10224:	
  3810                           ;HMI.c: 203: break;
  3811  0D29  2D3F               	goto	l10230
  3812                           	line	205
  3813                           ;HMI.c: 205: default:
  3814                           	
  3815  0D2A                     l5187:	
  3816                           	line	207
  3817                           ;HMI.c: 207: break;
  3818  0D2A  2D3F               	goto	l10230
  3819                           	line	208
  3820                           	
  3821  0D2B                     l10226:	
  3822                           ;HMI.c: 208: }
  3823  0D2B  2D3F               	goto	l10230
  3824                           	line	181
  3825                           	
  3826  0D2C                     l5177:	
  3827                           	
  3828  0D2C                     l10228:	
  3829  0D2C  1683               	bsf	status, 5	;RP0=1, select bank1
  3830  0D2D  1303               	bcf	status, 6	;RP1=0, select bank1
  3831  0D2E  085E               	movf	(Menu@input)^080h,w
  3832                           	; Switch size 1, requested type "space"
  3833                           ; Number of cases is 5, Range of values is 1 to 5
  3834                           ; switch strategies available:
  3835                           ; Name         Instructions Cycles
  3836                           ; simple_byte           16     9 (average)
  3837                           ; direct_byte           26    11 (fixed)
  3838                           ; jumptable            263     9 (fixed)
  3839                           ;	Chosen strategy is simple_byte
  3840                           
  3841                           	opt asmopt_off
  3842  0D2F  3A01               	xorlw	1^0	; case 1
  3843  0D30  1903               	skipnz
  3844  0D31  2D3F               	goto	l10230
  3845  0D32  3A03               	xorlw	2^1	; case 2
  3846  0D33  1903               	skipnz
  3847  0D34  2D3F               	goto	l10230
  3848  0D35  3A01               	xorlw	3^2	; case 3
  3849  0D36  1903               	skipnz
  3850  0D37  2D01               	goto	l10210
  3851  0D38  3A07               	xorlw	4^3	; case 4
  3852  0D39  1903               	skipnz
  3853  0D3A  2D13               	goto	l10216
  3854  0D3B  3A01               	xorlw	5^4	; case 5
  3855  0D3C  1903               	skipnz
  3856  0D3D  2D25               	goto	l10220
  3857  0D3E  2D3F               	goto	l10230
  3858                           	opt asmopt_on
  3859                           
  3860                           	line	208
  3861                           	
  3862  0D3F                     l5179:	
  3863                           	line	209
  3864                           	
  3865  0D3F                     l10230:	
  3866                           ;HMI.c: 209: return 255;
  3867  0D3F  30FF               	movlw	(0FFh)
  3868  0D40  2D41               	goto	l5186
  3869                           	
  3870  0D41                     l10232:	
  3871                           	line	210
  3872                           	
  3873  0D41                     l5186:	
  3874  0D41  0008               	return
  3875                           	opt stack 0
  3876                           GLOBAL	__end_of_Menu
  3877  0D42                     	__end_of_Menu:
  3878 ;; =============== function _Menu ends ============
  3879                           
  3880                           	signat	_Menu,4217
  3881                           	global	_spi_transfer
  3882                           psect	text722,local,class=CODE,delta=2
  3883                           global __ptext722
  3884  0AD3                     __ptext722:
  3885                           
  3886 ;; *************** function _spi_transfer *****************
  3887 ;; Defined at:
  3888 ;;		line 151 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  data            1    wreg     unsigned char 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  data            1    2[BANK1 ] unsigned char 
  3893 ;;  temp            1    1[BANK1 ] unsigned char 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      unsigned char 
  3896 ;; Registers used:
  3897 ;;		wreg
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3903 ;;      Params:         0       0       0       0       0
  3904 ;;      Locals:         0       0       2       0       0
  3905 ;;      Temps:          0       0       1       0       0
  3906 ;;      Totals:         0       0       3       0       0
  3907 ;;Total ram usage:        3 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    5
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_main
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           psect	text722
  3917                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3918                           	line	151
  3919                           	global	__size_of_spi_transfer
  3920  001E                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  3921                           	
  3922  0AD3                     _spi_transfer:	
  3923                           	opt	stack 2
  3924                           ; Regs used in _spi_transfer: [wreg]
  3925                           ;spi_transfer@data stored from wreg
  3926  0AD3  1683               	bsf	status, 5	;RP0=1, select bank1
  3927  0AD4  1303               	bcf	status, 6	;RP1=0, select bank1
  3928  0AD5  00E0               	movwf	(spi_transfer@data)^080h
  3929                           	line	152
  3930                           	
  3931  0AD6                     l10198:	
  3932                           ;Main.c: 152: unsigned char temp = 0;
  3933  0AD6  01DF               	clrf	(spi_transfer@temp)^080h
  3934                           	line	154
  3935                           ;Main.c: 154: SSPIF = 0;
  3936  0AD7  1283               	bcf	status, 5	;RP0=0, select bank0
  3937  0AD8  1303               	bcf	status, 6	;RP1=0, select bank0
  3938  0AD9  118C               	bcf	(99/8),(99)&7
  3939                           	line	155
  3940                           	
  3941  0ADA                     l10200:	
  3942                           ;Main.c: 155: SSPBUF = data;
  3943  0ADA  1683               	bsf	status, 5	;RP0=1, select bank1
  3944  0ADB  1303               	bcf	status, 6	;RP1=0, select bank1
  3945  0ADC  0860               	movf	(spi_transfer@data)^080h,w
  3946  0ADD  1283               	bcf	status, 5	;RP0=0, select bank0
  3947  0ADE  1303               	bcf	status, 6	;RP1=0, select bank0
  3948  0ADF  0093               	movwf	(19)	;volatile
  3949                           	line	157
  3950                           ;Main.c: 157: while (SSPIF == 0);
  3951  0AE0  2AE1               	goto	l2206
  3952                           	
  3953  0AE1                     l2207:	
  3954                           	
  3955  0AE1                     l2206:	
  3956  0AE1  1D8C               	btfss	(99/8),(99)&7
  3957  0AE2  2AE4               	goto	u3431
  3958  0AE3  2AE5               	goto	u3430
  3959  0AE4                     u3431:
  3960  0AE4  2AE1               	goto	l2206
  3961  0AE5                     u3430:
  3962  0AE5  2AE6               	goto	l10202
  3963                           	
  3964  0AE6                     l2208:	
  3965                           	line	158
  3966                           	
  3967  0AE6                     l10202:	
  3968                           ;Main.c: 158: temp = SSPBUF;
  3969  0AE6  0813               	movf	(19),w	;volatile
  3970  0AE7  1683               	bsf	status, 5	;RP0=1, select bank1
  3971  0AE8  1303               	bcf	status, 6	;RP1=0, select bank1
  3972  0AE9  00DE               	movwf	(??_spi_transfer+0)^080h+0
  3973  0AEA  085E               	movf	(??_spi_transfer+0)^080h+0,w
  3974  0AEB  00DF               	movwf	(spi_transfer@temp)^080h
  3975                           	line	159
  3976                           	
  3977  0AEC                     l10204:	
  3978                           ;Main.c: 159: SSPIF = 0;
  3979  0AEC  1283               	bcf	status, 5	;RP0=0, select bank0
  3980  0AED  1303               	bcf	status, 6	;RP1=0, select bank0
  3981  0AEE  118C               	bcf	(99/8),(99)&7
  3982  0AEF  2AF0               	goto	l2209
  3983                           	line	161
  3984                           	
  3985  0AF0                     l10206:	
  3986                           	line	162
  3987                           ;Main.c: 161: return temp;
  3988                           ;	Return value of _spi_transfer is never used
  3989                           	
  3990  0AF0                     l2209:	
  3991  0AF0  0008               	return
  3992                           	opt stack 0
  3993                           GLOBAL	__end_of_spi_transfer
  3994  0AF1                     	__end_of_spi_transfer:
  3995 ;; =============== function _spi_transfer ends ============
  3996                           
  3997                           	signat	_spi_transfer,4217
  3998                           	global	_ser_init
  3999                           psect	text723,local,class=CODE,delta=2
  4000                           global __ptext723
  4001  0B18                     __ptext723:
  4002                           
  4003 ;; *************** function _ser_init *****************
  4004 ;; Defined at:
  4005 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;		None               void
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4019 ;;      Params:         0       0       0       0       0
  4020 ;;      Locals:         0       0       0       0       0
  4021 ;;      Temps:          0       0       1       0       0
  4022 ;;      Totals:         0       0       1       0       0
  4023 ;;Total ram usage:        1 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    5
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_init
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           psect	text723
  4033                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  4034                           	line	113
  4035                           	global	__size_of_ser_init
  4036  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  4037                           	
  4038  0B18                     _ser_init:	
  4039                           	opt	stack 1
  4040                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  4041                           	line	114
  4042                           	
  4043  0B18                     l10172:	
  4044                           ;ser.c: 114: TRISC |= 0b10000000;
  4045  0B18  1683               	bsf	status, 5	;RP0=1, select bank1
  4046  0B19  1303               	bcf	status, 6	;RP1=0, select bank1
  4047  0B1A  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  4048                           	line	115
  4049                           	
  4050  0B1B                     l10174:	
  4051                           ;ser.c: 115: TRISC &= 0b10111111;
  4052  0B1B  30BF               	movlw	(0BFh)
  4053  0B1C  00DE               	movwf	(??_ser_init+0)^080h+0
  4054  0B1D  085E               	movf	(??_ser_init+0)^080h+0,w
  4055  0B1E  0587               	andwf	(135)^080h,f	;volatile
  4056                           	line	116
  4057                           	
  4058  0B1F                     l10176:	
  4059                           ;ser.c: 116: BRGH=1;
  4060  0B1F  1518               	bsf	(1218/8)^080h,(1218)&7
  4061                           	line	118
  4062                           	
  4063  0B20                     l10178:	
  4064                           ;ser.c: 118: SPBRG=20;
  4065  0B20  3014               	movlw	(014h)
  4066  0B21  0099               	movwf	(153)^080h	;volatile
  4067                           	line	121
  4068                           	
  4069  0B22                     l10180:	
  4070                           ;ser.c: 121: TX9=0;
  4071  0B22  1318               	bcf	(1222/8)^080h,(1222)&7
  4072                           	line	122
  4073                           	
  4074  0B23                     l10182:	
  4075                           ;ser.c: 122: RX9=0;
  4076  0B23  1283               	bcf	status, 5	;RP0=0, select bank0
  4077  0B24  1303               	bcf	status, 6	;RP1=0, select bank0
  4078  0B25  1318               	bcf	(198/8),(198)&7
  4079                           	line	124
  4080                           	
  4081  0B26                     l10184:	
  4082                           ;ser.c: 124: SYNC=0;
  4083  0B26  1683               	bsf	status, 5	;RP0=1, select bank1
  4084  0B27  1303               	bcf	status, 6	;RP1=0, select bank1
  4085  0B28  1218               	bcf	(1220/8)^080h,(1220)&7
  4086                           	line	125
  4087                           	
  4088  0B29                     l10186:	
  4089                           ;ser.c: 125: SPEN=1;
  4090  0B29  1283               	bcf	status, 5	;RP0=0, select bank0
  4091  0B2A  1303               	bcf	status, 6	;RP1=0, select bank0
  4092  0B2B  1798               	bsf	(199/8),(199)&7
  4093                           	line	126
  4094                           	
  4095  0B2C                     l10188:	
  4096                           ;ser.c: 126: CREN=1;
  4097  0B2C  1618               	bsf	(196/8),(196)&7
  4098                           	line	127
  4099                           	
  4100  0B2D                     l10190:	
  4101                           ;ser.c: 127: TXIE=0;
  4102  0B2D  1683               	bsf	status, 5	;RP0=1, select bank1
  4103  0B2E  1303               	bcf	status, 6	;RP1=0, select bank1
  4104  0B2F  120C               	bcf	(1124/8)^080h,(1124)&7
  4105                           	line	128
  4106                           	
  4107  0B30                     l10192:	
  4108                           ;ser.c: 128: RCIE=1;
  4109  0B30  168C               	bsf	(1125/8)^080h,(1125)&7
  4110                           	line	129
  4111                           	
  4112  0B31                     l10194:	
  4113                           ;ser.c: 129: TXEN=1;
  4114  0B31  1698               	bsf	(1221/8)^080h,(1221)&7
  4115                           	line	132
  4116                           	
  4117  0B32                     l10196:	
  4118                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  4119  0B32  3000               	movlw	(0)
  4120  0B33  1283               	bcf	status, 5	;RP0=0, select bank0
  4121  0B34  1303               	bcf	status, 6	;RP1=0, select bank0
  4122  0B35  00EB               	movwf	(_txoptr)	;volatile
  4123  0B36  00EA               	movwf	(_txiptr)	;volatile
  4124  0B37  00E7               	movwf	(_rxoptr)	;volatile
  4125  0B38  1683               	bsf	status, 5	;RP0=1, select bank1
  4126  0B39  1303               	bcf	status, 6	;RP1=0, select bank1
  4127  0B3A  00DE               	movwf	(??_ser_init+0)^080h+0
  4128  0B3B  085E               	movf	(??_ser_init+0)^080h+0,w
  4129  0B3C  1283               	bcf	status, 5	;RP0=0, select bank0
  4130  0B3D  1303               	bcf	status, 6	;RP1=0, select bank0
  4131  0B3E  00E6               	movwf	(_rxiptr)	;volatile
  4132                           	line	133
  4133                           	
  4134  0B3F                     l4404:	
  4135  0B3F  0008               	return
  4136                           	opt stack 0
  4137                           GLOBAL	__end_of_ser_init
  4138  0B40                     	__end_of_ser_init:
  4139 ;; =============== function _ser_init ends ============
  4140                           
  4141                           	signat	_ser_init,88
  4142                           	global	_isr1
  4143                           psect	text724,local,class=CODE,delta=2
  4144                           global __ptext724
  4145  0692                     __ptext724:
  4146                           
  4147 ;; *************** function _isr1 *****************
  4148 ;; Defined at:
  4149 ;;		line 83 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;		None               void
  4156 ;; Registers used:
  4157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4163 ;;      Params:         0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0
  4165 ;;      Temps:          0       5       0       0       0
  4166 ;;      Totals:         0       5       0       0       0
  4167 ;;Total ram usage:        5 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    4
  4170 ;; This function calls:
  4171 ;;		___lwmod
  4172 ;;		_readAvgDistance
  4173 ;;		_UpdateDisplay
  4174 ;;		_ReadButtons
  4175 ;; This function is called by:
  4176 ;;		Interrupt level 1
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           psect	text724
  4180                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  4181                           	line	83
  4182                           	global	__size_of_isr1
  4183  00E5                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  4184                           	
  4185  0692                     _isr1:	
  4186                           	opt	stack 0
  4187                           ; Regs used in _isr1: [allreg]
  4188                           psect	intentry,class=CODE,delta=2
  4189                           global __pintentry
  4190  0004                     __pintentry:
  4191                           global interrupt_function
  4192  0004                     interrupt_function:
  4193                           	global saved_w
  4194  007E                     	saved_w	set	btemp+0
  4195  0004  00FE               	movwf	saved_w
  4196  0005  0E03               	swapf	status,w
  4197  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  4198  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  4199  0008  00CD               	movwf	(??_isr1+1)
  4200  0009  0804               	movf	fsr0,w
  4201  000A  00CE               	movwf	(??_isr1+2)
  4202  000B  080A               	movf	pclath,w
  4203  000C  00CF               	movwf	(??_isr1+3)
  4204  000D  087F               	movf	btemp+1,w
  4205  000E  00D0               	movwf	(??_isr1+4)
  4206  000F  120A  118A  2E92   	ljmp	_isr1
  4207                           psect	text724
  4208                           	line	85
  4209                           	
  4210  0692                     i1l10038:	
  4211                           ;Main.c: 85: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  4212  0692  1E8C               	btfss	(101/8),(101)&7
  4213  0693  2E95               	goto	u323_21
  4214  0694  2E96               	goto	u323_20
  4215  0695                     u323_21:
  4216  0695  2EB0               	goto	i1l10048
  4217  0696                     u323_20:
  4218                           	
  4219  0696                     i1l10040:	
  4220  0696  081A               	movf	(26),w	;volatile
  4221  0697  00CC               	movwf	(??_isr1+0)+0
  4222  0698  0866               	movf	(_rxiptr),w
  4223  0699  3EB0               	addlw	_rxfifo&0ffh
  4224  069A  0084               	movwf	fsr0
  4225  069B  084C               	movf	(??_isr1+0)+0,w
  4226  069C  1383               	bcf	status, 7	;select IRP bank1
  4227  069D  0080               	movwf	indf
  4228                           	
  4229  069E                     i1l10042:	
  4230  069E  0866               	movf	(_rxiptr),w	;volatile
  4231  069F  3E01               	addlw	01h
  4232  06A0  390F               	andlw	0Fh
  4233  06A1  00CC               	movwf	(??_isr1+0)+0
  4234  06A2  084C               	movf	(??_isr1+0)+0,w
  4235  06A3  00E8               	movwf	(_ser_tmp)
  4236                           	
  4237  06A4                     i1l10044:	
  4238  06A4  0868               	movf	(_ser_tmp),w
  4239  06A5  0667               	xorwf	(_rxoptr),w	;volatile
  4240  06A6  1903               	skipnz
  4241  06A7  2EA9               	goto	u324_21
  4242  06A8  2EAA               	goto	u324_20
  4243  06A9                     u324_21:
  4244  06A9  2EB0               	goto	i1l10048
  4245  06AA                     u324_20:
  4246                           	
  4247  06AA                     i1l10046:	
  4248  06AA  0868               	movf	(_ser_tmp),w
  4249  06AB  00CC               	movwf	(??_isr1+0)+0
  4250  06AC  084C               	movf	(??_isr1+0)+0,w
  4251  06AD  00E6               	movwf	(_rxiptr)	;volatile
  4252  06AE  2EB0               	goto	i1l10048
  4253                           	
  4254  06AF                     i1l2191:	
  4255  06AF  2EB0               	goto	i1l10048
  4256                           	
  4257  06B0                     i1l2190:	
  4258                           	
  4259  06B0                     i1l10048:	
  4260  06B0  1E0C               	btfss	(100/8),(100)&7
  4261  06B1  2EB3               	goto	u325_21
  4262  06B2  2EB4               	goto	u325_20
  4263  06B3                     u325_21:
  4264  06B3  2ED4               	goto	i1l2192
  4265  06B4                     u325_20:
  4266                           	
  4267  06B4                     i1l10050:	
  4268  06B4  1683               	bsf	status, 5	;RP0=1, select bank1
  4269  06B5  1303               	bcf	status, 6	;RP1=0, select bank1
  4270  06B6  1E0C               	btfss	(1124/8)^080h,(1124)&7
  4271  06B7  2EB9               	goto	u326_21
  4272  06B8  2EBA               	goto	u326_20
  4273  06B9                     u326_21:
  4274  06B9  2ED4               	goto	i1l2192
  4275  06BA                     u326_20:
  4276                           	
  4277  06BA                     i1l10052:	
  4278  06BA  1283               	bcf	status, 5	;RP0=0, select bank0
  4279  06BB  1303               	bcf	status, 6	;RP1=0, select bank0
  4280  06BC  086B               	movf	(_txoptr),w
  4281  06BD  3EC0               	addlw	_txfifo&0ffh
  4282  06BE  0084               	movwf	fsr0
  4283  06BF  1383               	bcf	status, 7	;select IRP bank1
  4284  06C0  0800               	movf	indf,w
  4285  06C1  0099               	movwf	(25)	;volatile
  4286                           	
  4287  06C2                     i1l10054:	
  4288  06C2  3001               	movlw	(01h)
  4289  06C3  00CC               	movwf	(??_isr1+0)+0
  4290  06C4  084C               	movf	(??_isr1+0)+0,w
  4291  06C5  07EB               	addwf	(_txoptr),f	;volatile
  4292                           	
  4293  06C6                     i1l10056:	
  4294  06C6  300F               	movlw	(0Fh)
  4295  06C7  00CC               	movwf	(??_isr1+0)+0
  4296  06C8  084C               	movf	(??_isr1+0)+0,w
  4297  06C9  05EB               	andwf	(_txoptr),f	;volatile
  4298                           	
  4299  06CA                     i1l10058:	
  4300  06CA  086B               	movf	(_txoptr),w	;volatile
  4301  06CB  066A               	xorwf	(_txiptr),w	;volatile
  4302  06CC  1D03               	skipz
  4303  06CD  2ECF               	goto	u327_21
  4304  06CE  2ED0               	goto	u327_20
  4305  06CF                     u327_21:
  4306  06CF  2ED4               	goto	i1l2192
  4307  06D0                     u327_20:
  4308                           	
  4309  06D0                     i1l10060:	
  4310  06D0  1683               	bsf	status, 5	;RP0=1, select bank1
  4311  06D1  1303               	bcf	status, 6	;RP1=0, select bank1
  4312  06D2  120C               	bcf	(1124/8)^080h,(1124)&7
  4313  06D3  2ED4               	goto	i1l2192
  4314                           	
  4315  06D4                     i1l2193:	
  4316                           	
  4317  06D4                     i1l2192:	
  4318                           	line	88
  4319                           ;Main.c: 88: if(TMR0IF)
  4320  06D4  1D0B               	btfss	(90/8),(90)&7
  4321  06D5  2ED7               	goto	u328_21
  4322  06D6  2ED8               	goto	u328_20
  4323  06D7                     u328_21:
  4324  06D7  2F6B               	goto	i1l2200
  4325  06D8                     u328_20:
  4326                           	line	90
  4327                           	
  4328  06D8                     i1l10062:	
  4329                           ;Main.c: 89: {
  4330                           ;Main.c: 90: TMR0IF = 0;
  4331  06D8  110B               	bcf	(90/8),(90)&7
  4332                           	line	91
  4333                           	
  4334  06D9                     i1l10064:	
  4335                           ;Main.c: 91: TMR0 = 100;
  4336  06D9  3064               	movlw	(064h)
  4337  06DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4338  06DB  0081               	movwf	(1)	;volatile
  4339                           	line	93
  4340                           ;Main.c: 93: RTC_Counter++;
  4341  06DC  3001               	movlw	low(01h)
  4342  06DD  07D1               	addwf	(_RTC_Counter),f	;volatile
  4343  06DE  1803               	skipnc
  4344  06DF  0AD2               	incf	(_RTC_Counter+1),f	;volatile
  4345  06E0  3000               	movlw	high(01h)
  4346  06E1  07D2               	addwf	(_RTC_Counter+1),f	;volatile
  4347                           	line	95
  4348                           	
  4349  06E2                     i1l10066:	
  4350                           ;Main.c: 95: RTC_FLAG_1MS = 1;
  4351  06E2  17EC               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  4352                           	line	96
  4353                           	
  4354  06E3                     i1l10068:	
  4355                           ;Main.c: 96: if(RTC_Counter % 10 == 0)
  4356  06E3  300A               	movlw	low(0Ah)
  4357  06E4  00A0               	movwf	(?___lwmod)
  4358  06E5  3000               	movlw	high(0Ah)
  4359  06E6  00A1               	movwf	((?___lwmod))+1
  4360  06E7  0852               	movf	(_RTC_Counter+1),w	;volatile
  4361  06E8  01A3               	clrf	1+(?___lwmod)+02h
  4362  06E9  07A3               	addwf	1+(?___lwmod)+02h
  4363  06EA  0851               	movf	(_RTC_Counter),w	;volatile
  4364  06EB  01A2               	clrf	0+(?___lwmod)+02h
  4365  06EC  07A2               	addwf	0+(?___lwmod)+02h
  4366                           
  4367  06ED  120A  158A  24B5   	fcall	___lwmod
              120A  118A         
  4368  06F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4369  06F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4370  06F4  0821               	movf	((1+(?___lwmod))),w
  4371  06F5  0420               	iorwf	((0+(?___lwmod))),w
  4372  06F6  1D03               	skipz
  4373  06F7  2EF9               	goto	u329_21
  4374  06F8  2EFA               	goto	u329_20
  4375  06F9                     u329_21:
  4376  06F9  2EFC               	goto	i1l10072
  4377  06FA                     u329_20:
  4378                           	line	98
  4379                           	
  4380  06FA                     i1l10070:	
  4381                           ;Main.c: 97: {
  4382                           ;Main.c: 98: RTC_FLAG_10MS = 1;
  4383  06FA  176C               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  4384  06FB  2EFC               	goto	i1l10072
  4385                           	line	101
  4386                           	
  4387  06FC                     i1l2195:	
  4388                           	line	102
  4389                           	
  4390  06FC                     i1l10072:	
  4391                           ;Main.c: 101: }
  4392                           ;Main.c: 102: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  4393  06FC  3032               	movlw	low(032h)
  4394  06FD  00A0               	movwf	(?___lwmod)
  4395  06FE  3000               	movlw	high(032h)
  4396  06FF  00A1               	movwf	((?___lwmod))+1
  4397  0700  0852               	movf	(_RTC_Counter+1),w	;volatile
  4398  0701  01A3               	clrf	1+(?___lwmod)+02h
  4399  0702  07A3               	addwf	1+(?___lwmod)+02h
  4400  0703  0851               	movf	(_RTC_Counter),w	;volatile
  4401  0704  01A2               	clrf	0+(?___lwmod)+02h
  4402  0705  07A2               	addwf	0+(?___lwmod)+02h
  4403                           
  4404  0706  120A  158A  24B5   	fcall	___lwmod
              120A  118A         
  4405  070B  1283               	bcf	status, 5	;RP0=0, select bank0
  4406  070C  1303               	bcf	status, 6	;RP1=0, select bank0
  4407  070D  0821               	movf	((1+(?___lwmod))),w
  4408  070E  0420               	iorwf	((0+(?___lwmod))),w
  4409  070F  1D03               	skipz
  4410  0710  2F12               	goto	u330_21
  4411  0711  2F13               	goto	u330_20
  4412  0712                     u330_21:
  4413  0712  2F15               	goto	i1l10076
  4414  0713                     u330_20:
  4415                           	
  4416  0713                     i1l10074:	
  4417  0713  156D               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  4418  0714  2F15               	goto	i1l10076
  4419                           	
  4420  0715                     i1l2196:	
  4421                           	line	103
  4422                           	
  4423  0715                     i1l10076:	
  4424                           ;Main.c: 103: if(RTC_Counter % 250 == 0)
  4425  0715  30FA               	movlw	low(0FAh)
  4426  0716  00A0               	movwf	(?___lwmod)
  4427  0717  3000               	movlw	high(0FAh)
  4428  0718  00A1               	movwf	((?___lwmod))+1
  4429  0719  0852               	movf	(_RTC_Counter+1),w	;volatile
  4430  071A  01A3               	clrf	1+(?___lwmod)+02h
  4431  071B  07A3               	addwf	1+(?___lwmod)+02h
  4432  071C  0851               	movf	(_RTC_Counter),w	;volatile
  4433  071D  01A2               	clrf	0+(?___lwmod)+02h
  4434  071E  07A2               	addwf	0+(?___lwmod)+02h
  4435                           
  4436  071F  120A  158A  24B5   	fcall	___lwmod
              120A  118A         
  4437  0724  1283               	bcf	status, 5	;RP0=0, select bank0
  4438  0725  1303               	bcf	status, 6	;RP1=0, select bank0
  4439  0726  0821               	movf	((1+(?___lwmod))),w
  4440  0727  0420               	iorwf	((0+(?___lwmod))),w
  4441  0728  1D03               	skipz
  4442  0729  2F2B               	goto	u331_21
  4443  072A  2F2C               	goto	u331_20
  4444  072B                     u331_21:
  4445  072B  2F3D               	goto	i1l10082
  4446  072C                     u331_20:
  4447                           	line	105
  4448                           	
  4449  072C                     i1l10078:	
  4450                           ;Main.c: 104: {
  4451                           ;Main.c: 105: readAvgDistance();
  4452  072C  120A  158A  2590   	fcall	_readAvgDistance
              120A  118A         
  4453                           	line	106
  4454                           ;Main.c: 106: UpdateDisplay(serialInput);
  4455  0731  1283               	bcf	status, 5	;RP0=0, select bank0
  4456  0732  1303               	bcf	status, 6	;RP1=0, select bank0
  4457  0733  0869               	movf	(_serialInput),w	;volatile
  4458  0734  120A  158A  2747   	fcall	_UpdateDisplay
              120A  118A         
  4459                           	line	107
  4460                           	
  4461  0739                     i1l10080:	
  4462                           ;Main.c: 107: RTC_FLAG_250MS = 1;
  4463  0739  1283               	bcf	status, 5	;RP0=0, select bank0
  4464  073A  1303               	bcf	status, 6	;RP1=0, select bank0
  4465  073B  146D               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4466  073C  2F3D               	goto	i1l10082
  4467                           	line	109
  4468                           	
  4469  073D                     i1l2197:	
  4470                           	line	110
  4471                           	
  4472  073D                     i1l10082:	
  4473                           ;Main.c: 109: }
  4474                           ;Main.c: 110: if(RTC_Counter % 500 == 0)
  4475  073D  30F4               	movlw	low(01F4h)
  4476  073E  00A0               	movwf	(?___lwmod)
  4477  073F  3001               	movlw	high(01F4h)
  4478  0740  00A1               	movwf	((?___lwmod))+1
  4479  0741  0852               	movf	(_RTC_Counter+1),w	;volatile
  4480  0742  01A3               	clrf	1+(?___lwmod)+02h
  4481  0743  07A3               	addwf	1+(?___lwmod)+02h
  4482  0744  0851               	movf	(_RTC_Counter),w	;volatile
  4483  0745  01A2               	clrf	0+(?___lwmod)+02h
  4484  0746  07A2               	addwf	0+(?___lwmod)+02h
  4485                           
  4486  0747  120A  158A  24B5   	fcall	___lwmod
              120A  118A         
  4487  074C  1283               	bcf	status, 5	;RP0=0, select bank0
  4488  074D  1303               	bcf	status, 6	;RP1=0, select bank0
  4489  074E  0821               	movf	((1+(?___lwmod))),w
  4490  074F  0420               	iorwf	((0+(?___lwmod))),w
  4491  0750  1D03               	skipz
  4492  0751  2F53               	goto	u332_21
  4493  0752  2F54               	goto	u332_20
  4494  0753                     u332_21:
  4495  0753  2F5A               	goto	i1l10090
  4496  0754                     u332_20:
  4497                           	line	112
  4498                           	
  4499  0754                     i1l10084:	
  4500                           ;Main.c: 111: {
  4501                           ;Main.c: 112: RTC_FLAG_500MS = 1;
  4502  0754  14ED               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  4503                           	line	113
  4504                           	
  4505  0755                     i1l10086:	
  4506                           ;Main.c: 113: RTC_Counter = 0;
  4507  0755  01D1               	clrf	(_RTC_Counter)	;volatile
  4508  0756  01D2               	clrf	(_RTC_Counter+1)	;volatile
  4509                           	line	114
  4510                           	
  4511  0757                     i1l10088:	
  4512                           ;Main.c: 114: RB0 ^= 0x01;
  4513  0757  3001               	movlw	1<<((48)&7)
  4514  0758  0686               	xorwf	((48)/8),f
  4515  0759  2F5A               	goto	i1l10090
  4516                           	line	115
  4517                           	
  4518  075A                     i1l2198:	
  4519                           	line	117
  4520                           	
  4521  075A                     i1l10090:	
  4522                           ;Main.c: 115: }
  4523                           ;Main.c: 117: if (buttonPressed == 0)
  4524  075A  08E2               	movf	(_buttonPressed),f
  4525  075B  1D03               	skipz	;volatile
  4526  075C  2F5E               	goto	u333_21
  4527  075D  2F5F               	goto	u333_20
  4528  075E                     u333_21:
  4529  075E  2F6B               	goto	i1l2200
  4530  075F                     u333_20:
  4531                           	line	119
  4532                           	
  4533  075F                     i1l10092:	
  4534                           ;Main.c: 118: {
  4535                           ;Main.c: 119: buttonPressed = ReadButtons();
  4536  075F  120A  158A  2442   	fcall	_ReadButtons
              120A  118A         
  4537  0764  1283               	bcf	status, 5	;RP0=0, select bank0
  4538  0765  1303               	bcf	status, 6	;RP1=0, select bank0
  4539  0766  00CC               	movwf	(??_isr1+0)+0
  4540  0767  084C               	movf	(??_isr1+0)+0,w
  4541  0768  00E2               	movwf	(_buttonPressed)	;volatile
  4542  0769  2F6B               	goto	i1l2200
  4543                           	line	120
  4544                           	
  4545  076A                     i1l2199:	
  4546  076A  2F6B               	goto	i1l2200
  4547                           	line	121
  4548                           	
  4549  076B                     i1l2194:	
  4550                           	line	122
  4551                           	
  4552  076B                     i1l2200:	
  4553  076B  1283               	bcf	status, 5	;RP0=0, select bank0
  4554  076C  0850               	movf	(??_isr1+4),w
  4555  076D  00FF               	movwf	btemp+1
  4556  076E  084F               	movf	(??_isr1+3),w
  4557  076F  008A               	movwf	pclath
  4558  0770  084E               	movf	(??_isr1+2),w
  4559  0771  0084               	movwf	fsr0
  4560  0772  0E4D               	swapf	(??_isr1+1)^00h,w
  4561  0773  0083               	movwf	status
  4562  0774  0EFE               	swapf	saved_w,f
  4563  0775  0E7E               	swapf	saved_w,w
  4564  0776  0009               	retfie
  4565                           	opt stack 0
  4566                           GLOBAL	__end_of_isr1
  4567  0777                     	__end_of_isr1:
  4568 ;; =============== function _isr1 ends ============
  4569                           
  4570                           	signat	_isr1,88
  4571                           	global	_UpdateDisplay
  4572                           psect	text725,local,class=CODE,delta=2
  4573                           global __ptext725
  4574  0F47                     __ptext725:
  4575                           
  4576 ;; *************** function _UpdateDisplay *****************
  4577 ;; Defined at:
  4578 ;;		line 220 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  serialInput     1    wreg     unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  serialInput     1    0[COMMON] unsigned char 
  4583 ;;  adcOutput      16   28[BANK0 ] unsigned char [16]
  4584 ;; Return value:  Size  Location     Type
  4585 ;;		None               void
  4586 ;; Registers used:
  4587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4593 ;;      Params:         0       0       0       0       0
  4594 ;;      Locals:         0      16       0       0       0
  4595 ;;      Temps:          0       5       0       0       0
  4596 ;;      Totals:         0      21       0       0       0
  4597 ;;Total ram usage:       21 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    2
  4600 ;; This function calls:
  4601 ;;		i1_lcd_write_control
  4602 ;;		_sprintf
  4603 ;;		_lcd_set_cursor
  4604 ;;		_lcd_write_string
  4605 ;;		___awmod
  4606 ;; This function is called by:
  4607 ;;		_isr1
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           psect	text725
  4611                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  4612                           	line	220
  4613                           	global	__size_of_UpdateDisplay
  4614  00B9                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4615                           	
  4616  0F47                     _UpdateDisplay:	
  4617                           	opt	stack 1
  4618                           ; Regs used in _UpdateDisplay: [allreg]
  4619                           	line	221
  4620                           	
  4621  0F47                     i1l10110:	
  4622                           ;HMI.c: 221: char adcOutput[16] = "";
  4623  0F47  303C               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4624  0F48  0084               	movwf	fsr0
  4625  0F49  30A0               	movlw	low(UpdateDisplay@F1223)
  4626  0F4A  1283               	bcf	status, 5	;RP0=0, select bank0
  4627  0F4B  1303               	bcf	status, 6	;RP1=0, select bank0
  4628  0F4C  00B7               	movwf	(??_UpdateDisplay+0)+0
  4629  0F4D  0804               	movf	fsr0,w
  4630  0F4E  00B8               	movwf	((??_UpdateDisplay+0)+0+1)
  4631  0F4F  3010               	movlw	16
  4632  0F50  00B9               	movwf	((??_UpdateDisplay+0)+0+2)
  4633  0F51                     u336_20:
  4634  0F51  0837               	movf	(??_UpdateDisplay+0)+0,w
  4635  0F52  0084               	movwf	fsr0
  4636  0F53  1383               	bcf	status, 7	;select IRP bank1
  4637                           	
  4638  0F54  0800               	movf	indf,w
  4639  0F55  00BA               	movwf	((??_UpdateDisplay+0)+0+3)
  4640  0F56  0AB7               	incf	(??_UpdateDisplay+0)+0,f
  4641  0F57  0838               	movf	((??_UpdateDisplay+0)+0+1),w
  4642  0F58  0084               	movwf	fsr0
  4643                           	
  4644  0F59  083A               	movf	((??_UpdateDisplay+0)+0+3),w
  4645  0F5A  0080               	movwf	indf
  4646  0F5B  0AB8               	incf	((??_UpdateDisplay+0)+0+1),f
  4647  0F5C  0BB9               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4648  0F5D  2F51               	goto	u336_20
  4649                           	line	222
  4650                           	
  4651  0F5E                     i1l10112:	
  4652                           ;HMI.c: 222: lcd_write_control(0b00000001);
  4653  0F5E  3001               	movlw	(01h)
  4654  0F5F  120A  158A  2262   	fcall	i1_lcd_write_control
              120A  158A         
  4655                           	line	224
  4656                           	
  4657  0F64                     i1l10114:	
  4658                           ;HMI.c: 224: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  4659  0F64  300B               	movlw	((STR_11-__stringbase))&0ffh
  4660  0F65  1283               	bcf	status, 5	;RP0=0, select bank0
  4661  0F66  1303               	bcf	status, 6	;RP1=0, select bank0
  4662  0F67  00B7               	movwf	(??_UpdateDisplay+0)+0
  4663  0F68  0837               	movf	(??_UpdateDisplay+0)+0,w
  4664  0F69  00A6               	movwf	(?_sprintf)
  4665  0F6A  0864               	movf	(_highByte),w
  4666  0F6B  00B8               	movwf	(??_UpdateDisplay+1)+0
  4667  0F6C  01B9               	clrf	(??_UpdateDisplay+1)+0+1
  4668  0F6D  0838               	movf	0+(??_UpdateDisplay+1)+0,w
  4669  0F6E  00A7               	movwf	0+(?_sprintf)+01h
  4670  0F6F  0839               	movf	1+(??_UpdateDisplay+1)+0,w
  4671  0F70  00A8               	movwf	1+(?_sprintf)+01h
  4672  0F71  0865               	movf	(_lowByte),w
  4673  0F72  00BA               	movwf	(??_UpdateDisplay+3)+0
  4674  0F73  01BB               	clrf	(??_UpdateDisplay+3)+0+1
  4675  0F74  083A               	movf	0+(??_UpdateDisplay+3)+0,w
  4676  0F75  00A9               	movwf	0+(?_sprintf)+03h
  4677  0F76  083B               	movf	1+(??_UpdateDisplay+3)+0,w
  4678  0F77  00AA               	movwf	1+(?_sprintf)+03h
  4679  0F78  303C               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4680  0F79  120A  118A  2592   	fcall	_sprintf
              120A  158A         
  4681                           	line	226
  4682                           	
  4683  0F7E                     i1l10116:	
  4684                           ;HMI.c: 226: lcd_set_cursor(0x00);
  4685  0F7E  3000               	movlw	(0)
  4686  0F7F  120A  158A  2229   	fcall	_lcd_set_cursor
              120A  158A         
  4687                           	line	227
  4688                           	
  4689  0F84                     i1l10118:	
  4690                           ;HMI.c: 227: lcd_write_string(adcOutput);
  4691  0F84  303C               	movlw	(UpdateDisplay@adcOutput&0ffh)
  4692  0F85  00F7               	movwf	(?_lcd_write_string)
  4693  0F86  3000               	movlw	(0x0/2)
  4694  0F87  00F8               	movwf	(?_lcd_write_string+1)
  4695  0F88  120A  158A  236A   	fcall	_lcd_write_string
              120A  158A         
  4696                           	line	232
  4697                           	
  4698  0F8D                     i1l10120:	
  4699                           ;HMI.c: 232: lcd_set_cursor(0x40);
  4700  0F8D  3040               	movlw	(040h)
  4701  0F8E  120A  158A  2229   	fcall	_lcd_set_cursor
              120A  158A         
  4702                           	line	233
  4703                           	
  4704  0F93                     i1l10122:	
  4705                           ;HMI.c: 233: if (pos > 0)
  4706  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
  4707  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
  4708  0F95  085A               	movf	(_pos+1),w
  4709  0F96  3A80               	xorlw	80h
  4710  0F97  00FF               	movwf	btemp+1
  4711  0F98  3080               	movlw	(high(01h))^80h
  4712  0F99  027F               	subwf	btemp+1,w
  4713  0F9A  1D03               	skipz
  4714  0F9B  2F9E               	goto	u337_25
  4715  0F9C  3001               	movlw	low(01h)
  4716  0F9D  0259               	subwf	(_pos),w
  4717  0F9E                     u337_25:
  4718                           
  4719  0F9E  1C03               	skipc
  4720  0F9F  2FA1               	goto	u337_21
  4721  0FA0  2FA2               	goto	u337_20
  4722  0FA1                     u337_21:
  4723  0FA1  2FB3               	goto	i1l10126
  4724  0FA2                     u337_20:
  4725                           	line	234
  4726                           	
  4727  0FA2                     i1l10124:	
  4728                           ;HMI.c: 234: lcd_write_string(shortMenuStrings[pos - 1]);
  4729  0FA2  1283               	bcf	status, 5	;RP0=0, select bank0
  4730  0FA3  1303               	bcf	status, 6	;RP1=0, select bank0
  4731  0FA4  0859               	movf	(_pos),w
  4732  0FA5  3EFF               	addlw	0FFh
  4733  0FA6  3ED9               	addlw	_shortMenuStrings&0ffh
  4734  0FA7  0084               	movwf	fsr0
  4735  0FA8  1383               	bcf	status, 7	;select IRP bank1
  4736  0FA9  0800               	movf	indf,w
  4737  0FAA  00F7               	movwf	(?_lcd_write_string)
  4738  0FAB  3080               	movlw	80h
  4739  0FAC  00F8               	movwf	(?_lcd_write_string+1)
  4740  0FAD  120A  158A  236A   	fcall	_lcd_write_string
              120A  158A         
  4741  0FB2  2FC4               	goto	i1l10128
  4742                           	line	235
  4743                           	
  4744  0FB3                     i1l5197:	
  4745                           	line	236
  4746                           	
  4747  0FB3                     i1l10126:	
  4748                           ;HMI.c: 235: else
  4749                           ;HMI.c: 236: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  4750  0FB3  1283               	bcf	status, 5	;RP0=0, select bank0
  4751  0FB4  1303               	bcf	status, 6	;RP1=0, select bank0
  4752  0FB5  0859               	movf	(_pos),w
  4753  0FB6  3E04               	addlw	04h
  4754  0FB7  3ED9               	addlw	_shortMenuStrings&0ffh
  4755  0FB8  0084               	movwf	fsr0
  4756  0FB9  1383               	bcf	status, 7	;select IRP bank1
  4757  0FBA  0800               	movf	indf,w
  4758  0FBB  00F7               	movwf	(?_lcd_write_string)
  4759  0FBC  3080               	movlw	80h
  4760  0FBD  00F8               	movwf	(?_lcd_write_string+1)
  4761  0FBE  120A  158A  236A   	fcall	_lcd_write_string
              120A  158A         
  4762  0FC3  2FC4               	goto	i1l10128
  4763                           	
  4764  0FC4                     i1l5198:	
  4765                           	line	237
  4766                           	
  4767  0FC4                     i1l10128:	
  4768                           ;HMI.c: 237: lcd_set_cursor(0x44);
  4769  0FC4  3044               	movlw	(044h)
  4770  0FC5  120A  158A  2229   	fcall	_lcd_set_cursor
              120A  158A         
  4771                           	line	238
  4772                           	
  4773  0FCA                     i1l10130:	
  4774                           ;HMI.c: 238: lcd_write_string(menuStrings[pos]);
  4775  0FCA  1283               	bcf	status, 5	;RP0=0, select bank0
  4776  0FCB  1303               	bcf	status, 6	;RP1=0, select bank0
  4777  0FCC  0859               	movf	(_pos),w
  4778  0FCD  3ED4               	addlw	_menuStrings&0ffh
  4779  0FCE  0084               	movwf	fsr0
  4780  0FCF  1383               	bcf	status, 7	;select IRP bank1
  4781  0FD0  0800               	movf	indf,w
  4782  0FD1  00F7               	movwf	(?_lcd_write_string)
  4783  0FD2  3080               	movlw	80h
  4784  0FD3  00F8               	movwf	(?_lcd_write_string+1)
  4785  0FD4  120A  158A  236A   	fcall	_lcd_write_string
              120A  158A         
  4786                           	line	239
  4787                           ;HMI.c: 239: lcd_set_cursor(0x4D);
  4788  0FD9  304D               	movlw	(04Dh)
  4789  0FDA  120A  158A  2229   	fcall	_lcd_set_cursor
              120A  158A         
  4790                           	line	240
  4791                           	
  4792  0FDF                     i1l10132:	
  4793                           ;HMI.c: 240: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  4794  0FDF  3005               	movlw	low(05h)
  4795  0FE0  00F0               	movwf	(?___awmod)
  4796  0FE1  3000               	movlw	high(05h)
  4797  0FE2  00F1               	movwf	((?___awmod))+1
  4798  0FE3  1283               	bcf	status, 5	;RP0=0, select bank0
  4799  0FE4  1303               	bcf	status, 6	;RP1=0, select bank0
  4800  0FE5  0859               	movf	(_pos),w
  4801  0FE6  3E01               	addlw	low(01h)
  4802  0FE7  00F2               	movwf	0+(?___awmod)+02h
  4803  0FE8  085A               	movf	(_pos+1),w
  4804  0FE9  1803               	skipnc
  4805  0FEA  3E01               	addlw	1
  4806  0FEB  3E00               	addlw	high(01h)
  4807  0FEC  00F3               	movwf	1+0+(?___awmod)+02h
  4808  0FED  120A  158A  25E5   	fcall	___awmod
              120A  158A         
  4809  0FF2  0870               	movf	(0+(?___awmod)),w
  4810  0FF3  3ED9               	addlw	_shortMenuStrings&0ffh
  4811  0FF4  0084               	movwf	fsr0
  4812  0FF5  1383               	bcf	status, 7	;select IRP bank1
  4813  0FF6  0800               	movf	indf,w
  4814  0FF7  00F7               	movwf	(?_lcd_write_string)
  4815  0FF8  3080               	movlw	80h
  4816  0FF9  00F8               	movwf	(?_lcd_write_string+1)
  4817  0FFA  120A  158A  236A   	fcall	_lcd_write_string
              120A  158A         
  4818                           	line	241
  4819                           	
  4820  0FFF                     i1l5199:	
  4821  0FFF  0008               	return
  4822                           	opt stack 0
  4823                           GLOBAL	__end_of_UpdateDisplay
  4824  1000                     	__end_of_UpdateDisplay:
  4825 ;; =============== function _UpdateDisplay ends ============
  4826                           
  4827                           	signat	_UpdateDisplay,4216
  4828                           	global	_readAvgDistance
  4829                           psect	text726,local,class=CODE,delta=2
  4830                           global __ptext726
  4831  0D90                     __ptext726:
  4832                           
  4833 ;; *************** function _readAvgDistance *****************
  4834 ;; Defined at:
  4835 ;;		line 10 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  i               2    4[BANK0 ] int 
  4840 ;;  fullval         2    2[BANK0 ] unsigned int 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;		None               void
  4843 ;; Registers used:
  4844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4850 ;;      Params:         0       0       0       0       0
  4851 ;;      Locals:         0       4       0       0       0
  4852 ;;      Temps:          0       0       0       0       0
  4853 ;;      Totals:         0       4       0       0       0
  4854 ;;Total ram usage:        4 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    3
  4857 ;; This function calls:
  4858 ;;		_readDistance
  4859 ;;		___lwdiv
  4860 ;;		_ADCconvert
  4861 ;; This function is called by:
  4862 ;;		_isr1
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           psect	text726
  4866                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4867                           	line	10
  4868                           	global	__size_of_readAvgDistance
  4869  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4870                           	
  4871  0D90                     _readAvgDistance:	
  4872                           	opt	stack 0
  4873                           ; Regs used in _readAvgDistance: [allreg]
  4874                           	line	11
  4875                           	
  4876  0D90                     i1l10094:	
  4877                           ;infrared.c: 11: unsigned int fullval = 0;
  4878  0D90  1283               	bcf	status, 5	;RP0=0, select bank0
  4879  0D91  1303               	bcf	status, 6	;RP1=0, select bank0
  4880  0D92  01A2               	clrf	(readAvgDistance@fullval)
  4881  0D93  01A3               	clrf	(readAvgDistance@fullval+1)
  4882                           	line	14
  4883                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  4884  0D94  01A4               	clrf	(readAvgDistance@i)
  4885  0D95  01A5               	clrf	(readAvgDistance@i+1)
  4886                           	
  4887  0D96                     i1l10096:	
  4888  0D96  0825               	movf	(readAvgDistance@i+1),w
  4889  0D97  3A80               	xorlw	80h
  4890  0D98  00FF               	movwf	btemp+1
  4891  0D99  3080               	movlw	(high(0Ah))^80h
  4892  0D9A  027F               	subwf	btemp+1,w
  4893  0D9B  1D03               	skipz
  4894  0D9C  2D9F               	goto	u334_25
  4895  0D9D  300A               	movlw	low(0Ah)
  4896  0D9E  0224               	subwf	(readAvgDistance@i),w
  4897  0D9F                     u334_25:
  4898                           
  4899  0D9F  1C03               	skipc
  4900  0DA0  2DA2               	goto	u334_21
  4901  0DA1  2DA3               	goto	u334_20
  4902  0DA2                     u334_21:
  4903  0DA2  2DA5               	goto	i1l10100
  4904  0DA3                     u334_20:
  4905  0DA3  2DC6               	goto	i1l10106
  4906                           	
  4907  0DA4                     i1l10098:	
  4908  0DA4  2DC6               	goto	i1l10106
  4909                           	line	15
  4910                           	
  4911  0DA5                     i1l2932:	
  4912                           	line	16
  4913                           	
  4914  0DA5                     i1l10100:	
  4915                           ;infrared.c: 15: {
  4916                           ;infrared.c: 16: fullval += readDistance();
  4917  0DA5  120A  158A  2276   	fcall	_readDistance
              120A  158A         
  4918  0DAA  0878               	movf	(0+(?_readDistance)),w
  4919  0DAB  1283               	bcf	status, 5	;RP0=0, select bank0
  4920  0DAC  1303               	bcf	status, 6	;RP1=0, select bank0
  4921  0DAD  07A2               	addwf	(readAvgDistance@fullval),f
  4922  0DAE  1803               	skipnc
  4923  0DAF  0AA3               	incf	(readAvgDistance@fullval+1),f
  4924  0DB0  0879               	movf	(1+(?_readDistance)),w
  4925  0DB1  07A3               	addwf	(readAvgDistance@fullval+1),f
  4926                           	line	14
  4927                           	
  4928  0DB2                     i1l10102:	
  4929  0DB2  3001               	movlw	low(01h)
  4930  0DB3  07A4               	addwf	(readAvgDistance@i),f
  4931  0DB4  1803               	skipnc
  4932  0DB5  0AA5               	incf	(readAvgDistance@i+1),f
  4933  0DB6  3000               	movlw	high(01h)
  4934  0DB7  07A5               	addwf	(readAvgDistance@i+1),f
  4935                           	
  4936  0DB8                     i1l10104:	
  4937  0DB8  0825               	movf	(readAvgDistance@i+1),w
  4938  0DB9  3A80               	xorlw	80h
  4939  0DBA  00FF               	movwf	btemp+1
  4940  0DBB  3080               	movlw	(high(0Ah))^80h
  4941  0DBC  027F               	subwf	btemp+1,w
  4942  0DBD  1D03               	skipz
  4943  0DBE  2DC1               	goto	u335_25
  4944  0DBF  300A               	movlw	low(0Ah)
  4945  0DC0  0224               	subwf	(readAvgDistance@i),w
  4946  0DC1                     u335_25:
  4947                           
  4948  0DC1  1C03               	skipc
  4949  0DC2  2DC4               	goto	u335_21
  4950  0DC3  2DC5               	goto	u335_20
  4951  0DC4                     u335_21:
  4952  0DC4  2DA5               	goto	i1l10100
  4953  0DC5                     u335_20:
  4954  0DC5  2DC6               	goto	i1l10106
  4955                           	
  4956  0DC6                     i1l2933:	
  4957                           	line	19
  4958                           	
  4959  0DC6                     i1l10106:	
  4960                           ;infrared.c: 18: }
  4961                           ;infrared.c: 19: adcVal = fullval / 10;
  4962  0DC6  300A               	movlw	low(0Ah)
  4963  0DC7  00F6               	movwf	(?___lwdiv)
  4964  0DC8  3000               	movlw	high(0Ah)
  4965  0DC9  00F7               	movwf	((?___lwdiv))+1
  4966  0DCA  1283               	bcf	status, 5	;RP0=0, select bank0
  4967  0DCB  1303               	bcf	status, 6	;RP1=0, select bank0
  4968  0DCC  0823               	movf	(readAvgDistance@fullval+1),w
  4969  0DCD  01F9               	clrf	1+(?___lwdiv)+02h
  4970  0DCE  07F9               	addwf	1+(?___lwdiv)+02h
  4971  0DCF  0822               	movf	(readAvgDistance@fullval),w
  4972  0DD0  01F8               	clrf	0+(?___lwdiv)+02h
  4973  0DD1  07F8               	addwf	0+(?___lwdiv)+02h
  4974                           
  4975  0DD2  120A  158A  2542   	fcall	___lwdiv
              120A  158A         
  4976  0DD7  0877               	movf	(1+(?___lwdiv)),w
  4977  0DD8  1283               	bcf	status, 5	;RP0=0, select bank0
  4978  0DD9  1303               	bcf	status, 6	;RP1=0, select bank0
  4979  0DDA  01D4               	clrf	(_adcVal+1)	;volatile
  4980  0DDB  07D4               	addwf	(_adcVal+1)	;volatile
  4981  0DDC  0876               	movf	(0+(?___lwdiv)),w
  4982  0DDD  01D3               	clrf	(_adcVal)	;volatile
  4983  0DDE  07D3               	addwf	(_adcVal)	;volatile
  4984                           
  4985                           	line	20
  4986                           	
  4987  0DDF                     i1l10108:	
  4988                           ;infrared.c: 20: ADCconvert();
  4989  0DDF  120A  118A  23A7   	fcall	_ADCconvert
              120A  158A         
  4990                           	line	21
  4991                           	
  4992  0DE4                     i1l2934:	
  4993  0DE4  0008               	return
  4994                           	opt stack 0
  4995                           GLOBAL	__end_of_readAvgDistance
  4996  0DE5                     	__end_of_readAvgDistance:
  4997 ;; =============== function _readAvgDistance ends ============
  4998                           
  4999                           	signat	_readAvgDistance,88
  5000                           	global	_readDistance
  5001                           psect	text727,local,class=CODE,delta=2
  5002                           global __ptext727
  5003  0A76                     __ptext727:
  5004                           
  5005 ;; *************** function _readDistance *****************
  5006 ;; Defined at:
  5007 ;;		line 24 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  fullval         2   12[COMMON] unsigned int 
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  2    8[COMMON] unsigned int 
  5014 ;; Registers used:
  5015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5021 ;;      Params:         2       0       0       0       0
  5022 ;;      Locals:         2       0       0       0       0
  5023 ;;      Temps:          2       0       0       0       0
  5024 ;;      Totals:         6       0       0       0       0
  5025 ;;Total ram usage:        6 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:    2
  5028 ;; This function calls:
  5029 ;;		_adc_read_channel
  5030 ;; This function is called by:
  5031 ;;		_readAvgDistance
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           psect	text727
  5035                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  5036                           	line	24
  5037                           	global	__size_of_readDistance
  5038  0014                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  5039                           	
  5040  0A76                     _readDistance:	
  5041                           	opt	stack 0
  5042                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5043                           	line	27
  5044                           	
  5045  0A76                     i1l10246:	
  5046                           ;infrared.c: 25: unsigned int fullval ;
  5047                           ;infrared.c: 27: fullval = adc_read_channel(0);
  5048  0A76  3000               	movlw	(0)
  5049  0A77  120A  158A  2474   	fcall	_adc_read_channel
              120A  158A         
  5050  0A7C  00FA               	movwf	(??_readDistance+0)+0
  5051  0A7D  01FB               	clrf	(??_readDistance+0)+0+1
  5052  0A7E  087A               	movf	0+(??_readDistance+0)+0,w
  5053  0A7F  00FC               	movwf	(readDistance@fullval)
  5054  0A80  087B               	movf	1+(??_readDistance+0)+0,w
  5055  0A81  00FD               	movwf	(readDistance@fullval+1)
  5056                           	line	29
  5057                           	
  5058  0A82                     i1l10248:	
  5059                           ;infrared.c: 29: return fullval;
  5060  0A82  087D               	movf	(readDistance@fullval+1),w
  5061  0A83  01F9               	clrf	(?_readDistance+1)
  5062  0A84  07F9               	addwf	(?_readDistance+1)
  5063  0A85  087C               	movf	(readDistance@fullval),w
  5064  0A86  01F8               	clrf	(?_readDistance)
  5065  0A87  07F8               	addwf	(?_readDistance)
  5066                           
  5067  0A88  2A89               	goto	i1l2937
  5068                           	
  5069  0A89                     i1l10250:	
  5070                           	line	30
  5071                           	
  5072  0A89                     i1l2937:	
  5073  0A89  0008               	return
  5074                           	opt stack 0
  5075                           GLOBAL	__end_of_readDistance
  5076  0A8A                     	__end_of_readDistance:
  5077 ;; =============== function _readDistance ends ============
  5078                           
  5079                           	signat	_readDistance,90
  5080                           	global	_lcd_write_string
  5081                           psect	text728,local,class=CODE,delta=2
  5082                           global __ptext728
  5083  0B6A                     __ptext728:
  5084                           
  5085 ;; *************** function _lcd_write_string *****************
  5086 ;; Defined at:
  5087 ;;		line 48 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  s               2    7[COMMON] PTR unsigned char 
  5090 ;;		 -> UpdateDisplay@adcOutput(16), STR_10(4), STR_9(4), STR_8(4), 
  5091 ;;		 -> STR_7(4), STR_6(4), STR_5(7), STR_4(7), 
  5092 ;;		 -> STR_3(7), STR_2(7), STR_1(7), 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;		None               void
  5097 ;; Registers used:
  5098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5104 ;;      Params:         2       0       0       0       0
  5105 ;;      Locals:         0       0       0       0       0
  5106 ;;      Temps:          0       0       0       0       0
  5107 ;;      Totals:         2       0       0       0       0
  5108 ;;Total ram usage:        2 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    1
  5111 ;; This function calls:
  5112 ;;		_lcd_write_data
  5113 ;; This function is called by:
  5114 ;;		_UpdateDisplay
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           psect	text728
  5118                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  5119                           	line	48
  5120                           	global	__size_of_lcd_write_string
  5121  002A                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5122                           	
  5123  0B6A                     _lcd_write_string:	
  5124                           	opt	stack 1
  5125                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5126                           	line	50
  5127                           	
  5128  0B6A                     i1l10004:	
  5129                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5130  0B6A  2B82               	goto	i1l10010
  5131                           	
  5132  0B6B                     i1l1409:	
  5133                           	
  5134  0B6B                     i1l10006:	
  5135  0B6B  0878               	movf	(lcd_write_string@s+1),w
  5136  0B6C  1283               	bcf	status, 5	;RP0=0, select bank0
  5137  0B6D  1303               	bcf	status, 6	;RP1=0, select bank0
  5138  0B6E  00FF               	movwf	btemp+1
  5139  0B6F  0877               	movf	(lcd_write_string@s),w
  5140  0B70  0084               	movwf	fsr0
  5141  0B71  120A  158A  2000   	fcall	stringtab
              120A  158A         
  5142  0B76  120A  158A  223C   	fcall	_lcd_write_data
              120A  158A         
  5143                           	
  5144  0B7B                     i1l10008:	
  5145  0B7B  3001               	movlw	low(01h)
  5146  0B7C  07F7               	addwf	(lcd_write_string@s),f
  5147  0B7D  1803               	skipnc
  5148  0B7E  0AF8               	incf	(lcd_write_string@s+1),f
  5149  0B7F  3000               	movlw	high(01h)
  5150  0B80  07F8               	addwf	(lcd_write_string@s+1),f
  5151  0B81  2B82               	goto	i1l10010
  5152                           	
  5153  0B82                     i1l1408:	
  5154                           	
  5155  0B82                     i1l10010:	
  5156  0B82  0878               	movf	(lcd_write_string@s+1),w
  5157  0B83  1283               	bcf	status, 5	;RP0=0, select bank0
  5158  0B84  1303               	bcf	status, 6	;RP1=0, select bank0
  5159  0B85  00FF               	movwf	btemp+1
  5160  0B86  0877               	movf	(lcd_write_string@s),w
  5161  0B87  0084               	movwf	fsr0
  5162  0B88  120A  158A  2000   	fcall	stringtab
              120A  158A         
  5163  0B8D  3800               	iorlw	0
  5164  0B8E  1D03               	skipz
  5165  0B8F  2B91               	goto	u319_21
  5166  0B90  2B92               	goto	u319_20
  5167  0B91                     u319_21:
  5168  0B91  2B6B               	goto	i1l10006
  5169  0B92                     u319_20:
  5170  0B92  2B93               	goto	i1l1411
  5171                           	
  5172  0B93                     i1l1410:	
  5173                           	line	51
  5174                           	
  5175  0B93                     i1l1411:	
  5176  0B93  0008               	return
  5177                           	opt stack 0
  5178                           GLOBAL	__end_of_lcd_write_string
  5179  0B94                     	__end_of_lcd_write_string:
  5180 ;; =============== function _lcd_write_string ends ============
  5181                           
  5182                           	signat	_lcd_write_string,4216
  5183                           	global	_lcd_set_cursor
  5184                           psect	text729,local,class=CODE,delta=2
  5185                           global __ptext729
  5186  0A29                     __ptext729:
  5187                           
  5188 ;; *************** function _lcd_set_cursor *****************
  5189 ;; Defined at:
  5190 ;;		line 42 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  address         1    wreg     unsigned char 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  address         1    3[COMMON] unsigned char 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;		None               void
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0, pclath, cstack
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5204 ;;      Params:         0       0       0       0       0
  5205 ;;      Locals:         1       0       0       0       0
  5206 ;;      Temps:          0       0       0       0       0
  5207 ;;      Totals:         1       0       0       0       0
  5208 ;;Total ram usage:        1 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:    1
  5211 ;; This function calls:
  5212 ;;		i1_lcd_write_control
  5213 ;; This function is called by:
  5214 ;;		_UpdateDisplay
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           psect	text729
  5218                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  5219                           	line	42
  5220                           	global	__size_of_lcd_set_cursor
  5221  0009                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5222                           	
  5223  0A29                     _lcd_set_cursor:	
  5224                           	opt	stack 1
  5225                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5226                           ;lcd_set_cursor@address stored from wreg
  5227  0A29  00F3               	movwf	(lcd_set_cursor@address)
  5228                           	line	43
  5229                           	
  5230  0A2A                     i1l10000:	
  5231                           ;lcd.c: 43: address |= 0b10000000;
  5232  0A2A  17F3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5233                           	line	44
  5234                           	
  5235  0A2B                     i1l10002:	
  5236                           ;lcd.c: 44: lcd_write_control(address);
  5237  0A2B  0873               	movf	(lcd_set_cursor@address),w
  5238  0A2C  120A  158A  2262   	fcall	i1_lcd_write_control
              120A  158A         
  5239                           	line	45
  5240                           	
  5241  0A31                     i1l1405:	
  5242  0A31  0008               	return
  5243                           	opt stack 0
  5244                           GLOBAL	__end_of_lcd_set_cursor
  5245  0A32                     	__end_of_lcd_set_cursor:
  5246 ;; =============== function _lcd_set_cursor ends ============
  5247                           
  5248                           	signat	_lcd_set_cursor,4216
  5249                           	global	i1_lcd_write_control
  5250                           psect	text730,local,class=CODE,delta=2
  5251                           global __ptext730
  5252  0A62                     __ptext730:
  5253                           
  5254 ;; *************** function i1_lcd_write_control *****************
  5255 ;; Defined at:
  5256 ;;		line 18 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  lcd_write_co    1    wreg     unsigned char 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  lcd_write_co    1    2[COMMON] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;		None               void
  5263 ;; Registers used:
  5264 ;;		wreg
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5270 ;;      Params:         0       0       0       0       0
  5271 ;;      Locals:         1       0       0       0       0
  5272 ;;      Temps:          2       0       0       0       0
  5273 ;;      Totals:         3       0       0       0       0
  5274 ;;Total ram usage:        3 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; This function calls:
  5277 ;;		Nothing
  5278 ;; This function is called by:
  5279 ;;		_lcd_set_cursor
  5280 ;;		_UpdateDisplay
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           psect	text730
  5284                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  5285                           	line	18
  5286                           	global	__size_ofi1_lcd_write_control
  5287  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
  5288                           	
  5289  0A62                     i1_lcd_write_control:	
  5290                           	opt	stack 1
  5291                           ; Regs used in i1_lcd_write_control: [wreg]
  5292                           ;i1lcd_write_control@databyte stored from wreg
  5293  0A62  00F2               	movwf	(i1lcd_write_control@databyte)
  5294                           	line	19
  5295                           	
  5296  0A63                     i1l10626:	
  5297                           ;lcd.c: 19: RE2 = 0;
  5298  0A63  1283               	bcf	status, 5	;RP0=0, select bank0
  5299  0A64  1303               	bcf	status, 6	;RP1=0, select bank0
  5300  0A65  1109               	bcf	(74/8),(74)&7
  5301                           	line	20
  5302                           ;lcd.c: 20: RE1 = 0;
  5303  0A66  1089               	bcf	(73/8),(73)&7
  5304                           	line	21
  5305                           ;lcd.c: 21: RE0 = 0;
  5306  0A67  1009               	bcf	(72/8),(72)&7
  5307                           	line	22
  5308                           	
  5309  0A68                     i1l10628:	
  5310                           ;lcd.c: 22: PORTD = databyte;
  5311  0A68  0872               	movf	(i1lcd_write_control@databyte),w
  5312  0A69  0088               	movwf	(8)	;volatile
  5313                           	line	23
  5314                           	
  5315  0A6A                     i1l10630:	
  5316                           ;lcd.c: 23: RE2 = 1;
  5317  0A6A  1509               	bsf	(74/8),(74)&7
  5318                           	line	24
  5319                           	
  5320  0A6B                     i1l10632:	
  5321                           ;lcd.c: 24: RE2 = 0;
  5322  0A6B  1109               	bcf	(74/8),(74)&7
  5323                           	line	25
  5324                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  5325                           	opt asmopt_off
  5326  0A6C  300D               movlw	13
  5327  0A6D  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
  5328  0A6E  30FB               	movlw	251
  5329  0A6F  00F0               movwf	((??i1_lcd_write_control+0)+0),f
  5330  0A70                     u461_27:
  5331  0A70  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
  5332  0A71  2A70               	goto	u461_27
  5333  0A72  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
  5334  0A73  2A70               	goto	u461_27
  5335  0A74  2A75               	nop2
  5336                           opt asmopt_on
  5337                           
  5338                           	line	26
  5339                           	
  5340  0A75                     i1l1399:	
  5341  0A75  0008               	return
  5342                           	opt stack 0
  5343                           GLOBAL	__end_ofi1_lcd_write_control
  5344  0A76                     	__end_ofi1_lcd_write_control:
  5345 ;; =============== function i1_lcd_write_control ends ============
  5346                           
  5347                           	signat	i1_lcd_write_control,88
  5348                           	global	_sprintf
  5349                           psect	text731,local,class=CODE,delta=2
  5350                           global __ptext731
  5351  0592                     __ptext731:
  5352                           
  5353 ;; *************** function _sprintf *****************
  5354 ;; Defined at:
  5355 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  sp              1    wreg     PTR unsigned char 
  5358 ;;		 -> UpdateDisplay@adcOutput(16), 
  5359 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  5360 ;;		 -> STR_11(15), 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  5363 ;;		 -> UpdateDisplay@adcOutput(16), 
  5364 ;;  _val            4   17[BANK0 ] struct .
  5365 ;;  c               1   22[BANK0 ] char 
  5366 ;;  prec            1   16[BANK0 ] char 
  5367 ;;  flag            1   15[BANK0 ] unsigned char 
  5368 ;;  ap              1   14[BANK0 ] PTR void [1]
  5369 ;;		 -> ?_sprintf(2), 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  2    6[BANK0 ] int 
  5372 ;; Registers used:
  5373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5379 ;;      Params:         0       5       0       0       0
  5380 ;;      Locals:         0       9       0       0       0
  5381 ;;      Temps:          0       3       0       0       0
  5382 ;;      Totals:         0      17       0       0       0
  5383 ;;Total ram usage:       17 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    1
  5386 ;; This function calls:
  5387 ;;		___lwdiv
  5388 ;;		___lwmod
  5389 ;; This function is called by:
  5390 ;;		_UpdateDisplay
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           psect	text731
  5394                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  5395                           	line	488
  5396                           	global	__size_of_sprintf
  5397  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  5398                           	
  5399  0592                     _sprintf:	
  5400                           	opt	stack 1
  5401                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5402                           ;sprintf@sp stored from wreg
  5403                           	line	537
  5404  0592  1283               	bcf	status, 5	;RP0=0, select bank0
  5405  0593  1303               	bcf	status, 6	;RP1=0, select bank0
  5406  0594  00B5               	movwf	(sprintf@sp)
  5407                           	
  5408  0595                     i1l10474:	
  5409  0595  3027               	movlw	(?_sprintf+01h)&0ffh
  5410  0596  00AB               	movwf	(??_sprintf+0)+0
  5411  0597  082B               	movf	(??_sprintf+0)+0,w
  5412  0598  00AE               	movwf	(sprintf@ap)
  5413                           	line	540
  5414  0599  2E78               	goto	i1l10526
  5415                           	
  5416  059A                     i1l6659:	
  5417                           	line	542
  5418                           	
  5419  059A                     i1l10476:	
  5420  059A  0836               	movf	(sprintf@c),w
  5421  059B  3A25               	xorlw	025h
  5422  059C  1903               	skipnz
  5423  059D  2D9F               	goto	u390_21
  5424  059E  2DA0               	goto	u390_20
  5425  059F                     u390_21:
  5426  059F  2DAC               	goto	i1l6660
  5427  05A0                     u390_20:
  5428                           	line	545
  5429                           	
  5430  05A0                     i1l10478:	
  5431  05A0  0836               	movf	(sprintf@c),w
  5432  05A1  00AB               	movwf	(??_sprintf+0)+0
  5433  05A2  0835               	movf	(sprintf@sp),w
  5434  05A3  0084               	movwf	fsr0
  5435  05A4  082B               	movf	(??_sprintf+0)+0,w
  5436  05A5  1383               	bcf	status, 7	;select IRP bank0
  5437  05A6  0080               	movwf	indf
  5438                           	
  5439  05A7                     i1l10480:	
  5440  05A7  3001               	movlw	(01h)
  5441  05A8  00AB               	movwf	(??_sprintf+0)+0
  5442  05A9  082B               	movf	(??_sprintf+0)+0,w
  5443  05AA  07B5               	addwf	(sprintf@sp),f
  5444                           	line	546
  5445  05AB  2E78               	goto	i1l10526
  5446                           	line	547
  5447                           	
  5448  05AC                     i1l6660:	
  5449                           	line	552
  5450  05AC  01AF               	clrf	(sprintf@flag)
  5451                           	line	638
  5452  05AD  2DB3               	goto	i1l10484
  5453                           	line	640
  5454                           	
  5455  05AE                     i1l6662:	
  5456                           	line	641
  5457  05AE  2E8C               	goto	i1l10528
  5458                           	line	700
  5459                           	
  5460  05AF                     i1l6664:	
  5461  05AF  2DC8               	goto	i1l10486
  5462                           	line	701
  5463                           	
  5464  05B0                     i1l6665:	
  5465                           	line	702
  5466  05B0  2DC8               	goto	i1l10486
  5467                           	line	805
  5468                           	
  5469  05B1                     i1l6667:	
  5470                           	line	816
  5471  05B1  2E78               	goto	i1l10526
  5472                           	line	825
  5473                           	
  5474  05B2                     i1l10482:	
  5475  05B2  2DC8               	goto	i1l10486
  5476                           	line	638
  5477                           	
  5478  05B3                     i1l6661:	
  5479                           	
  5480  05B3                     i1l10484:	
  5481  05B3  3001               	movlw	01h
  5482  05B4  07A6               	addwf	(sprintf@f),f
  5483  05B5  30FF               	movlw	-01h
  5484  05B6  0726               	addwf	(sprintf@f),w
  5485  05B7  0084               	movwf	fsr0
  5486  05B8  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5487  05BD  00B6               	movwf	(sprintf@c)
  5488                           	; Switch size 1, requested type "space"
  5489                           ; Number of cases is 3, Range of values is 0 to 105
  5490                           ; switch strategies available:
  5491                           ; Name         Instructions Cycles
  5492                           ; simple_byte           10     6 (average)
  5493                           ; jumptable            260     6 (fixed)
  5494                           ; rangetable           110     6 (fixed)
  5495                           ; spacedrange          218     9 (fixed)
  5496                           ; locatedrange         106     3 (fixed)
  5497                           ;	Chosen strategy is simple_byte
  5498                           
  5499                           	opt asmopt_off
  5500  05BE  3A00               	xorlw	0^0	; case 0
  5501  05BF  1903               	skipnz
  5502  05C0  2E8C               	goto	i1l10528
  5503  05C1  3A64               	xorlw	100^0	; case 100
  5504  05C2  1903               	skipnz
  5505  05C3  2DC8               	goto	i1l10486
  5506  05C4  3A0D               	xorlw	105^100	; case 105
  5507  05C5  1903               	skipnz
  5508  05C6  2DC8               	goto	i1l10486
  5509  05C7  2E78               	goto	i1l10526
  5510                           	opt asmopt_on
  5511                           
  5512                           	line	825
  5513                           	
  5514  05C8                     i1l6666:	
  5515                           	line	1254
  5516                           	
  5517  05C8                     i1l10486:	
  5518  05C8  082E               	movf	(sprintf@ap),w
  5519  05C9  0084               	movwf	fsr0
  5520  05CA  1383               	bcf	status, 7	;select IRP bank0
  5521  05CB  0800               	movf	indf,w
  5522  05CC  00B1               	movwf	(sprintf@_val)
  5523  05CD  0A84               	incf	fsr0,f
  5524  05CE  0800               	movf	indf,w
  5525  05CF  00B2               	movwf	(sprintf@_val+1)
  5526                           	
  5527  05D0                     i1l10488:	
  5528  05D0  3002               	movlw	(02h)
  5529  05D1  00AB               	movwf	(??_sprintf+0)+0
  5530  05D2  082B               	movf	(??_sprintf+0)+0,w
  5531  05D3  07AE               	addwf	(sprintf@ap),f
  5532                           	line	1256
  5533                           	
  5534  05D4                     i1l10490:	
  5535  05D4  1FB2               	btfss	(sprintf@_val+1),7
  5536  05D5  2DD7               	goto	u391_21
  5537  05D6  2DD8               	goto	u391_20
  5538  05D7                     u391_21:
  5539  05D7  2DE2               	goto	i1l10496
  5540  05D8                     u391_20:
  5541                           	line	1257
  5542                           	
  5543  05D8                     i1l10492:	
  5544  05D8  3003               	movlw	(03h)
  5545  05D9  00AB               	movwf	(??_sprintf+0)+0
  5546  05DA  082B               	movf	(??_sprintf+0)+0,w
  5547  05DB  04AF               	iorwf	(sprintf@flag),f
  5548                           	line	1258
  5549                           	
  5550  05DC                     i1l10494:	
  5551  05DC  09B1               	comf	(sprintf@_val),f
  5552  05DD  09B2               	comf	(sprintf@_val+1),f
  5553  05DE  0AB1               	incf	(sprintf@_val),f
  5554  05DF  1903               	skipnz
  5555  05E0  0AB2               	incf	(sprintf@_val+1),f
  5556  05E1  2DE2               	goto	i1l10496
  5557                           	line	1259
  5558                           	
  5559  05E2                     i1l6668:	
  5560                           	line	1300
  5561                           	
  5562  05E2                     i1l10496:	
  5563  05E2  01B6               	clrf	(sprintf@c)
  5564  05E3  1403               	bsf	status,0
  5565  05E4  0DB6               	rlf	(sprintf@c),f
  5566                           	
  5567  05E5                     i1l10498:	
  5568  05E5  0836               	movf	(sprintf@c),w
  5569  05E6  3A05               	xorlw	05h
  5570  05E7  1D03               	skipz
  5571  05E8  2DEA               	goto	u392_21
  5572  05E9  2DEB               	goto	u392_20
  5573  05EA                     u392_21:
  5574  05EA  2DED               	goto	i1l10502
  5575  05EB                     u392_20:
  5576  05EB  2E15               	goto	i1l10510
  5577                           	
  5578  05EC                     i1l10500:	
  5579  05EC  2E15               	goto	i1l10510
  5580                           	line	1301
  5581                           	
  5582  05ED                     i1l6669:	
  5583                           	
  5584  05ED                     i1l10502:	
  5585  05ED  0836               	movf	(sprintf@c),w
  5586  05EE  00AB               	movwf	(??_sprintf+0)+0
  5587  05EF  072B               	addwf	(??_sprintf+0)+0,w
  5588  05F0  3E01               	addlw	low((_dpowers-__stringbase))
  5589  05F1  0084               	movwf	fsr0
  5590  05F2  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5591  05F7  00AC               	movwf	(??_sprintf+1)+0
  5592  05F8  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5593  05FD  00AD               	movwf	(??_sprintf+1)+0+1
  5594  05FE  082D               	movf	1+(??_sprintf+1)+0,w
  5595  05FF  0232               	subwf	(sprintf@_val+1),w
  5596  0600  1D03               	skipz
  5597  0601  2E04               	goto	u393_25
  5598  0602  082C               	movf	0+(??_sprintf+1)+0,w
  5599  0603  0231               	subwf	(sprintf@_val),w
  5600  0604                     u393_25:
  5601  0604  1803               	skipnc
  5602  0605  2E07               	goto	u393_21
  5603  0606  2E08               	goto	u393_20
  5604  0607                     u393_21:
  5605  0607  2E0A               	goto	i1l10506
  5606  0608                     u393_20:
  5607  0608  2E15               	goto	i1l10510
  5608                           	line	1302
  5609                           	
  5610  0609                     i1l10504:	
  5611  0609  2E15               	goto	i1l10510
  5612                           	
  5613  060A                     i1l6671:	
  5614                           	line	1300
  5615                           	
  5616  060A                     i1l10506:	
  5617  060A  3001               	movlw	(01h)
  5618  060B  00AB               	movwf	(??_sprintf+0)+0
  5619  060C  082B               	movf	(??_sprintf+0)+0,w
  5620  060D  07B6               	addwf	(sprintf@c),f
  5621                           	
  5622  060E                     i1l10508:	
  5623  060E  0836               	movf	(sprintf@c),w
  5624  060F  3A05               	xorlw	05h
  5625  0610  1D03               	skipz
  5626  0611  2E13               	goto	u394_21
  5627  0612  2E14               	goto	u394_20
  5628  0613                     u394_21:
  5629  0613  2DED               	goto	i1l10502
  5630  0614                     u394_20:
  5631  0614  2E15               	goto	i1l10510
  5632                           	
  5633  0615                     i1l6670:	
  5634                           	line	1433
  5635                           	
  5636  0615                     i1l10510:	
  5637  0615  082F               	movf	(sprintf@flag),w
  5638  0616  3903               	andlw	03h
  5639  0617  1903               	btfsc	status,2
  5640  0618  2E1A               	goto	u395_21
  5641  0619  2E1B               	goto	u395_20
  5642  061A                     u395_21:
  5643  061A  2E27               	goto	i1l10516
  5644  061B                     u395_20:
  5645                           	line	1434
  5646                           	
  5647  061B                     i1l10512:	
  5648  061B  302D               	movlw	(02Dh)
  5649  061C  00AB               	movwf	(??_sprintf+0)+0
  5650  061D  0835               	movf	(sprintf@sp),w
  5651  061E  0084               	movwf	fsr0
  5652  061F  082B               	movf	(??_sprintf+0)+0,w
  5653  0620  1383               	bcf	status, 7	;select IRP bank0
  5654  0621  0080               	movwf	indf
  5655                           	
  5656  0622                     i1l10514:	
  5657  0622  3001               	movlw	(01h)
  5658  0623  00AB               	movwf	(??_sprintf+0)+0
  5659  0624  082B               	movf	(??_sprintf+0)+0,w
  5660  0625  07B5               	addwf	(sprintf@sp),f
  5661  0626  2E27               	goto	i1l10516
  5662                           	
  5663  0627                     i1l6672:	
  5664                           	line	1467
  5665                           	
  5666  0627                     i1l10516:	
  5667  0627  0836               	movf	(sprintf@c),w
  5668  0628  00AB               	movwf	(??_sprintf+0)+0
  5669  0629  082B               	movf	(??_sprintf+0)+0,w
  5670  062A  00B0               	movwf	(sprintf@prec)
  5671                           	line	1469
  5672  062B  2E6C               	goto	i1l10524
  5673                           	
  5674  062C                     i1l6674:	
  5675                           	line	1484
  5676                           	
  5677  062C                     i1l10518:	
  5678  062C  300A               	movlw	low(0Ah)
  5679  062D  00A0               	movwf	(?___lwmod)
  5680  062E  3000               	movlw	high(0Ah)
  5681  062F  00A1               	movwf	((?___lwmod))+1
  5682  0630  0830               	movf	(sprintf@prec),w
  5683  0631  00AB               	movwf	(??_sprintf+0)+0
  5684  0632  072B               	addwf	(??_sprintf+0)+0,w
  5685  0633  3E01               	addlw	low((_dpowers-__stringbase))
  5686  0634  0084               	movwf	fsr0
  5687  0635  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5688  063A  00F6               	movwf	(?___lwdiv)
  5689  063B  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5690  0640  00F7               	movwf	(?___lwdiv+1)
  5691  0641  0832               	movf	(sprintf@_val+1),w
  5692  0642  01F9               	clrf	1+(?___lwdiv)+02h
  5693  0643  07F9               	addwf	1+(?___lwdiv)+02h
  5694  0644  0831               	movf	(sprintf@_val),w
  5695  0645  01F8               	clrf	0+(?___lwdiv)+02h
  5696  0646  07F8               	addwf	0+(?___lwdiv)+02h
  5697                           
  5698  0647  120A  158A  2542   	fcall	___lwdiv
              120A  118A         
  5699  064C  0877               	movf	(1+(?___lwdiv)),w
  5700  064D  1283               	bcf	status, 5	;RP0=0, select bank0
  5701  064E  1303               	bcf	status, 6	;RP1=0, select bank0
  5702  064F  01A3               	clrf	1+(?___lwmod)+02h
  5703  0650  07A3               	addwf	1+(?___lwmod)+02h
  5704  0651  0876               	movf	(0+(?___lwdiv)),w
  5705  0652  01A2               	clrf	0+(?___lwmod)+02h
  5706  0653  07A2               	addwf	0+(?___lwmod)+02h
  5707                           
  5708  0654  120A  158A  24B5   	fcall	___lwmod
              120A  118A         
  5709  0659  1283               	bcf	status, 5	;RP0=0, select bank0
  5710  065A  1303               	bcf	status, 6	;RP1=0, select bank0
  5711  065B  0820               	movf	(0+(?___lwmod)),w
  5712  065C  3E30               	addlw	030h
  5713  065D  00AC               	movwf	(??_sprintf+1)+0
  5714  065E  082C               	movf	(??_sprintf+1)+0,w
  5715  065F  00B6               	movwf	(sprintf@c)
  5716                           	line	1516
  5717                           	
  5718  0660                     i1l10520:	
  5719  0660  0836               	movf	(sprintf@c),w
  5720  0661  00AB               	movwf	(??_sprintf+0)+0
  5721  0662  0835               	movf	(sprintf@sp),w
  5722  0663  0084               	movwf	fsr0
  5723  0664  082B               	movf	(??_sprintf+0)+0,w
  5724  0665  1383               	bcf	status, 7	;select IRP bank0
  5725  0666  0080               	movwf	indf
  5726                           	
  5727  0667                     i1l10522:	
  5728  0667  3001               	movlw	(01h)
  5729  0668  00AB               	movwf	(??_sprintf+0)+0
  5730  0669  082B               	movf	(??_sprintf+0)+0,w
  5731  066A  07B5               	addwf	(sprintf@sp),f
  5732  066B  2E6C               	goto	i1l10524
  5733                           	line	1517
  5734                           	
  5735  066C                     i1l6673:	
  5736                           	line	1469
  5737                           	
  5738  066C                     i1l10524:	
  5739  066C  30FF               	movlw	(-1)
  5740  066D  00AB               	movwf	(??_sprintf+0)+0
  5741  066E  082B               	movf	(??_sprintf+0)+0,w
  5742  066F  07B0               	addwf	(sprintf@prec),f
  5743  0670  0830               	movf	((sprintf@prec)),w
  5744  0671  3AFF               	xorlw	-1
  5745  0672  1D03               	skipz
  5746  0673  2E75               	goto	u396_21
  5747  0674  2E76               	goto	u396_20
  5748  0675                     u396_21:
  5749  0675  2E2C               	goto	i1l10518
  5750  0676                     u396_20:
  5751  0676  2E78               	goto	i1l10526
  5752                           	
  5753  0677                     i1l6675:	
  5754  0677  2E78               	goto	i1l10526
  5755                           	line	1525
  5756                           	
  5757  0678                     i1l6658:	
  5758                           	line	540
  5759                           	
  5760  0678                     i1l10526:	
  5761  0678  3001               	movlw	01h
  5762  0679  07A6               	addwf	(sprintf@f),f
  5763  067A  30FF               	movlw	-01h
  5764  067B  0726               	addwf	(sprintf@f),w
  5765  067C  0084               	movwf	fsr0
  5766  067D  120A  158A  200A   	fcall	stringdir
              120A  118A         
  5767  0682  00AB               	movwf	(??_sprintf+0)+0
  5768  0683  082B               	movf	(??_sprintf+0)+0,w
  5769  0684  00B6               	movwf	(sprintf@c)
  5770  0685  08B6               	movf	((sprintf@c)),f
  5771  0686  1D03               	skipz
  5772  0687  2E89               	goto	u397_21
  5773  0688  2E8A               	goto	u397_20
  5774  0689                     u397_21:
  5775  0689  2D9A               	goto	i1l10476
  5776  068A                     u397_20:
  5777  068A  2E8C               	goto	i1l10528
  5778                           	
  5779  068B                     i1l6676:	
  5780  068B  2E8C               	goto	i1l10528
  5781                           	line	1527
  5782                           	
  5783  068C                     i1l6663:	
  5784                           	line	1530
  5785                           	
  5786  068C                     i1l10528:	
  5787  068C  0835               	movf	(sprintf@sp),w
  5788  068D  0084               	movwf	fsr0
  5789  068E  1383               	bcf	status, 7	;select IRP bank0
  5790  068F  0180               	clrf	indf
  5791  0690  2E91               	goto	i1l6677
  5792                           	line	1532
  5793                           	
  5794  0691                     i1l10530:	
  5795                           	line	1533
  5796                           ;	Return value of _sprintf is never used
  5797                           	
  5798  0691                     i1l6677:	
  5799  0691  0008               	return
  5800                           	opt stack 0
  5801                           GLOBAL	__end_of_sprintf
  5802  0692                     	__end_of_sprintf:
  5803 ;; =============== function _sprintf ends ============
  5804                           
  5805                           	signat	_sprintf,4698
  5806                           	global	_ADCconvert
  5807                           psect	text732,local,class=CODE,delta=2
  5808                           global __ptext732
  5809  03A7                     __ptext732:
  5810                           
  5811 ;; *************** function _ADCconvert *****************
  5812 ;; Defined at:
  5813 ;;		line 33 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;		None
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;		None
  5818 ;; Return value:  Size  Location     Type
  5819 ;;		None               void
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0, pclath, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5827 ;;      Params:         0       0       0       0       0
  5828 ;;      Locals:         0       0       0       0       0
  5829 ;;      Temps:          0       2       0       0       0
  5830 ;;      Totals:         0       2       0       0       0
  5831 ;;Total ram usage:        2 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    1
  5834 ;; This function calls:
  5835 ;;		___wmul
  5836 ;;		___lwdiv
  5837 ;; This function is called by:
  5838 ;;		_readAvgDistance
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           psect	text732
  5842                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  5843                           	line	33
  5844                           	global	__size_of_ADCconvert
  5845  01EB                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  5846                           	
  5847  03A7                     _ADCconvert:	
  5848                           	opt	stack 1
  5849                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  5850                           	line	39
  5851                           	
  5852  03A7                     i1l10252:	
  5853                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  5854  03A7  3000               	movlw	high(0D5h)
  5855  03A8  1283               	bcf	status, 5	;RP0=0, select bank0
  5856  03A9  1303               	bcf	status, 6	;RP1=0, select bank0
  5857  03AA  0254               	subwf	(_adcVal+1),w	;volatile
  5858  03AB  30D5               	movlw	low(0D5h)
  5859  03AC  1903               	skipnz
  5860  03AD  0253               	subwf	(_adcVal),w	;volatile
  5861  03AE  1C03               	skipc
  5862  03AF  2BB1               	goto	u347_21
  5863  03B0  2BB2               	goto	u347_20
  5864  03B1                     u347_21:
  5865  03B1  2BED               	goto	i1l10258
  5866  03B2                     u347_20:
  5867                           	
  5868  03B2                     i1l10254:	
  5869  03B2  3000               	movlw	high(0EAh)
  5870  03B3  0254               	subwf	(_adcVal+1),w	;volatile
  5871  03B4  30EA               	movlw	low(0EAh)
  5872  03B5  1903               	skipnz
  5873  03B6  0253               	subwf	(_adcVal),w	;volatile
  5874  03B7  1803               	skipnc
  5875  03B8  2BBA               	goto	u348_21
  5876  03B9  2BBB               	goto	u348_20
  5877  03BA                     u348_21:
  5878  03BA  2BED               	goto	i1l10258
  5879  03BB                     u348_20:
  5880                           	line	41
  5881                           	
  5882  03BB                     i1l10256:	
  5883                           ;infrared.c: 40: {
  5884                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  5885  03BB  3015               	movlw	low(015h)
  5886  03BC  00F6               	movwf	(?___lwdiv)
  5887  03BD  3000               	movlw	high(015h)
  5888  03BE  00F7               	movwf	((?___lwdiv))+1
  5889  03BF  0953               	comf	(_adcVal),w	;volatile
  5890  03C0  00A0               	movwf	(??_ADCconvert+0)+0
  5891  03C1  0954               	comf	(_adcVal+1),w	;volatile
  5892  03C2  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5893  03C3  0AA0               	incf	(??_ADCconvert+0)+0,f
  5894  03C4  1903               	skipnz
  5895  03C5  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5896  03C6  0820               	movf	0+(??_ADCconvert+0)+0,w
  5897  03C7  3EEA               	addlw	low(0EAh)
  5898  03C8  00F0               	movwf	(?___wmul)
  5899  03C9  0821               	movf	1+(??_ADCconvert+0)+0,w
  5900  03CA  1803               	skipnc
  5901  03CB  3E01               	addlw	1
  5902  03CC  3E00               	addlw	high(0EAh)
  5903  03CD  00F1               	movwf	1+(?___wmul)
  5904  03CE  3005               	movlw	low(05h)
  5905  03CF  00F2               	movwf	0+(?___wmul)+02h
  5906  03D0  3000               	movlw	high(05h)
  5907  03D1  00F3               	movwf	(0+(?___wmul)+02h)+1
  5908  03D2  120A  158A  2340   	fcall	___wmul
              120A  118A         
  5909  03D7  0871               	movf	(1+(?___wmul)),w
  5910  03D8  01F9               	clrf	1+(?___lwdiv)+02h
  5911  03D9  07F9               	addwf	1+(?___lwdiv)+02h
  5912  03DA  0870               	movf	(0+(?___wmul)),w
  5913  03DB  01F8               	clrf	0+(?___lwdiv)+02h
  5914  03DC  07F8               	addwf	0+(?___lwdiv)+02h
  5915                           
  5916  03DD  120A  158A  2542   	fcall	___lwdiv
              120A  118A         
  5917  03E2  0876               	movf	(0+(?___lwdiv)),w
  5918  03E3  3E0F               	addlw	low(0Fh)
  5919  03E4  1683               	bsf	status, 5	;RP0=1, select bank1
  5920  03E5  1303               	bcf	status, 6	;RP1=0, select bank1
  5921  03E6  00D0               	movwf	(_distance)^080h	;volatile
  5922  03E7  0877               	movf	(1+(?___lwdiv)),w
  5923  03E8  1803               	skipnc
  5924  03E9  3E01               	addlw	1
  5925  03EA  3E00               	addlw	high(0Fh)
  5926  03EB  00D1               	movwf	1+(_distance)^080h	;volatile
  5927                           	line	42
  5928                           ;infrared.c: 42: }
  5929  03EC  2D91               	goto	i1l2953
  5930                           	line	43
  5931                           	
  5932  03ED                     i1l2940:	
  5933                           	
  5934  03ED                     i1l10258:	
  5935                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  5936  03ED  3000               	movlw	high(0AAh)
  5937  03EE  1283               	bcf	status, 5	;RP0=0, select bank0
  5938  03EF  0254               	subwf	(_adcVal+1),w	;volatile
  5939  03F0  30AA               	movlw	low(0AAh)
  5940  03F1  1903               	skipnz
  5941  03F2  0253               	subwf	(_adcVal),w	;volatile
  5942  03F3  1C03               	skipc
  5943  03F4  2BF6               	goto	u349_21
  5944  03F5  2BF7               	goto	u349_20
  5945  03F6                     u349_21:
  5946  03F6  2C32               	goto	i1l10264
  5947  03F7                     u349_20:
  5948                           	
  5949  03F7                     i1l10260:	
  5950  03F7  3000               	movlw	high(0D5h)
  5951  03F8  0254               	subwf	(_adcVal+1),w	;volatile
  5952  03F9  30D5               	movlw	low(0D5h)
  5953  03FA  1903               	skipnz
  5954  03FB  0253               	subwf	(_adcVal),w	;volatile
  5955  03FC  1803               	skipnc
  5956  03FD  2BFF               	goto	u350_21
  5957  03FE  2C00               	goto	u350_20
  5958  03FF                     u350_21:
  5959  03FF  2C32               	goto	i1l10264
  5960  0400                     u350_20:
  5961                           	line	45
  5962                           	
  5963  0400                     i1l10262:	
  5964                           ;infrared.c: 44: {
  5965                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  5966  0400  302B               	movlw	low(02Bh)
  5967  0401  00F6               	movwf	(?___lwdiv)
  5968  0402  3000               	movlw	high(02Bh)
  5969  0403  00F7               	movwf	((?___lwdiv))+1
  5970  0404  0953               	comf	(_adcVal),w	;volatile
  5971  0405  00A0               	movwf	(??_ADCconvert+0)+0
  5972  0406  0954               	comf	(_adcVal+1),w	;volatile
  5973  0407  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5974  0408  0AA0               	incf	(??_ADCconvert+0)+0,f
  5975  0409  1903               	skipnz
  5976  040A  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5977  040B  0820               	movf	0+(??_ADCconvert+0)+0,w
  5978  040C  3ED5               	addlw	low(0D5h)
  5979  040D  00F0               	movwf	(?___wmul)
  5980  040E  0821               	movf	1+(??_ADCconvert+0)+0,w
  5981  040F  1803               	skipnc
  5982  0410  3E01               	addlw	1
  5983  0411  3E00               	addlw	high(0D5h)
  5984  0412  00F1               	movwf	1+(?___wmul)
  5985  0413  300A               	movlw	low(0Ah)
  5986  0414  00F2               	movwf	0+(?___wmul)+02h
  5987  0415  3000               	movlw	high(0Ah)
  5988  0416  00F3               	movwf	(0+(?___wmul)+02h)+1
  5989  0417  120A  158A  2340   	fcall	___wmul
              120A  118A         
  5990  041C  0871               	movf	(1+(?___wmul)),w
  5991  041D  01F9               	clrf	1+(?___lwdiv)+02h
  5992  041E  07F9               	addwf	1+(?___lwdiv)+02h
  5993  041F  0870               	movf	(0+(?___wmul)),w
  5994  0420  01F8               	clrf	0+(?___lwdiv)+02h
  5995  0421  07F8               	addwf	0+(?___lwdiv)+02h
  5996                           
  5997  0422  120A  158A  2542   	fcall	___lwdiv
              120A  118A         
  5998  0427  0876               	movf	(0+(?___lwdiv)),w
  5999  0428  3E14               	addlw	low(014h)
  6000  0429  1683               	bsf	status, 5	;RP0=1, select bank1
  6001  042A  1303               	bcf	status, 6	;RP1=0, select bank1
  6002  042B  00D0               	movwf	(_distance)^080h	;volatile
  6003  042C  0877               	movf	(1+(?___lwdiv)),w
  6004  042D  1803               	skipnc
  6005  042E  3E01               	addlw	1
  6006  042F  3E00               	addlw	high(014h)
  6007  0430  00D1               	movwf	1+(_distance)^080h	;volatile
  6008                           	line	46
  6009                           ;infrared.c: 46: }
  6010  0431  2D91               	goto	i1l2953
  6011                           	line	47
  6012                           	
  6013  0432                     i1l2942:	
  6014                           	
  6015  0432                     i1l10264:	
  6016                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  6017  0432  3000               	movlw	high(080h)
  6018  0433  1283               	bcf	status, 5	;RP0=0, select bank0
  6019  0434  0254               	subwf	(_adcVal+1),w	;volatile
  6020  0435  3080               	movlw	low(080h)
  6021  0436  1903               	skipnz
  6022  0437  0253               	subwf	(_adcVal),w	;volatile
  6023  0438  1C03               	skipc
  6024  0439  2C3B               	goto	u351_21
  6025  043A  2C3C               	goto	u351_20
  6026  043B                     u351_21:
  6027  043B  2C77               	goto	i1l10270
  6028  043C                     u351_20:
  6029                           	
  6030  043C                     i1l10266:	
  6031  043C  3000               	movlw	high(0AAh)
  6032  043D  0254               	subwf	(_adcVal+1),w	;volatile
  6033  043E  30AA               	movlw	low(0AAh)
  6034  043F  1903               	skipnz
  6035  0440  0253               	subwf	(_adcVal),w	;volatile
  6036  0441  1803               	skipnc
  6037  0442  2C44               	goto	u352_21
  6038  0443  2C45               	goto	u352_20
  6039  0444                     u352_21:
  6040  0444  2C77               	goto	i1l10270
  6041  0445                     u352_20:
  6042                           	line	49
  6043                           	
  6044  0445                     i1l10268:	
  6045                           ;infrared.c: 48: {
  6046                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  6047  0445  302A               	movlw	low(02Ah)
  6048  0446  00F6               	movwf	(?___lwdiv)
  6049  0447  3000               	movlw	high(02Ah)
  6050  0448  00F7               	movwf	((?___lwdiv))+1
  6051  0449  0953               	comf	(_adcVal),w	;volatile
  6052  044A  00A0               	movwf	(??_ADCconvert+0)+0
  6053  044B  0954               	comf	(_adcVal+1),w	;volatile
  6054  044C  00A1               	movwf	((??_ADCconvert+0)+0+1)
  6055  044D  0AA0               	incf	(??_ADCconvert+0)+0,f
  6056  044E  1903               	skipnz
  6057  044F  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  6058  0450  0820               	movf	0+(??_ADCconvert+0)+0,w
  6059  0451  3EAA               	addlw	low(0AAh)
  6060  0452  00F0               	movwf	(?___wmul)
  6061  0453  0821               	movf	1+(??_ADCconvert+0)+0,w
  6062  0454  1803               	skipnc
  6063  0455  3E01               	addlw	1
  6064  0456  3E00               	addlw	high(0AAh)
  6065  0457  00F1               	movwf	1+(?___wmul)
  6066  0458  300A               	movlw	low(0Ah)
  6067  0459  00F2               	movwf	0+(?___wmul)+02h
  6068  045A  3000               	movlw	high(0Ah)
  6069  045B  00F3               	movwf	(0+(?___wmul)+02h)+1
  6070  045C  120A  158A  2340   	fcall	___wmul
              120A  118A         
  6071  0461  0871               	movf	(1+(?___wmul)),w
  6072  0462  01F9               	clrf	1+(?___lwdiv)+02h
  6073  0463  07F9               	addwf	1+(?___lwdiv)+02h
  6074  0464  0870               	movf	(0+(?___wmul)),w
  6075  0465  01F8               	clrf	0+(?___lwdiv)+02h
  6076  0466  07F8               	addwf	0+(?___lwdiv)+02h
  6077                           
  6078  0467  120A  158A  2542   	fcall	___lwdiv
              120A  118A         
  6079  046C  0876               	movf	(0+(?___lwdiv)),w
  6080  046D  3E1E               	addlw	low(01Eh)
  6081  046E  1683               	bsf	status, 5	;RP0=1, select bank1
  6082  046F  1303               	bcf	status, 6	;RP1=0, select bank1
  6083  0470  00D0               	movwf	(_distance)^080h	;volatile
  6084  0471  0877               	movf	(1+(?___lwdiv)),w
  6085  0472  1803               	skipnc
  6086  0473  3E01               	addlw	1
  6087  0474  3E00               	addlw	high(01Eh)
  6088  0475  00D1               	movwf	1+(_distance)^080h	;volatile
  6089                           	line	50
  6090                           ;infrared.c: 50: }
  6091  0476  2D91               	goto	i1l2953
  6092                           	line	51
  6093                           	
  6094  0477                     i1l2944:	
  6095                           	
  6096  0477                     i1l10270:	
  6097                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  6098  0477  3000               	movlw	high(06Bh)
  6099  0478  1283               	bcf	status, 5	;RP0=0, select bank0
  6100  0479  0254               	subwf	(_adcVal+1),w	;volatile
  6101  047A  306B               	movlw	low(06Bh)
  6102  047B  1903               	skipnz
  6103  047C  0253               	subwf	(_adcVal),w	;volatile
  6104  047D  1C03               	skipc
  6105  047E  2C80               	goto	u353_21
  6106  047F  2C81               	goto	u353_20
  6107  0480                     u353_21:
  6108  0480  2CBC               	goto	i1l10276
  6109  0481                     u353_20:
  6110                           	
  6111  0481                     i1l10272:	
  6112  0481  3000               	movlw	high(080h)
  6113  0482  0254               	subwf	(_adcVal+1),w	;volatile
  6114  0483  3080               	movlw	low(080h)
  6115  0484  1903               	skipnz
  6116  0485  0253               	subwf	(_adcVal),w	;volatile
  6117  0486  1803               	skipnc
  6118  0487  2C89               	goto	u354_21
  6119  0488  2C8A               	goto	u354_20
  6120  0489                     u354_21:
  6121  0489  2CBC               	goto	i1l10276
  6122  048A                     u354_20:
  6123                           	line	53
  6124                           	
  6125  048A                     i1l10274:	
  6126                           ;infrared.c: 52: {
  6127                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  6128  048A  3015               	movlw	low(015h)
  6129  048B  00F6               	movwf	(?___lwdiv)
  6130  048C  3000               	movlw	high(015h)
  6131  048D  00F7               	movwf	((?___lwdiv))+1
  6132  048E  0953               	comf	(_adcVal),w	;volatile
  6133  048F  00A0               	movwf	(??_ADCconvert+0)+0
  6134  0490  0954               	comf	(_adcVal+1),w	;volatile
  6135  0491  00A1               	movwf	((??_ADCconvert+0)+0+1)
  6136  0492  0AA0               	incf	(??_ADCconvert+0)+0,f
  6137  0493  1903               	skipnz
  6138  0494  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  6139  0495  0820               	movf	0+(??_ADCconvert+0)+0,w
  6140  0496  3E80               	addlw	low(080h)
  6141  0497  00F0               	movwf	(?___wmul)
  6142  0498  0821               	movf	1+(??_ADCconvert+0)+0,w
  6143  0499  1803               	skipnc
  6144  049A  3E01               	addlw	1
  6145  049B  3E00               	addlw	high(080h)
  6146  049C  00F1               	movwf	1+(?___wmul)
  6147  049D  300A               	movlw	low(0Ah)
  6148  049E  00F2               	movwf	0+(?___wmul)+02h
  6149  049F  3000               	movlw	high(0Ah)
  6150  04A0  00F3               	movwf	(0+(?___wmul)+02h)+1
  6151  04A1  120A  158A  2340   	fcall	___wmul
              120A  118A         
  6152  04A6  0871               	movf	(1+(?___wmul)),w
  6153  04A7  01F9               	clrf	1+(?___lwdiv)+02h
  6154  04A8  07F9               	addwf	1+(?___lwdiv)+02h
  6155  04A9  0870               	movf	(0+(?___wmul)),w
  6156  04AA  01F8               	clrf	0+(?___lwdiv)+02h
  6157  04AB  07F8               	addwf	0+(?___lwdiv)+02h
  6158                           
  6159  04AC  120A  158A  2542   	fcall	___lwdiv
              120A  118A         
  6160  04B1  0876               	movf	(0+(?___lwdiv)),w
  6161  04B2  3E28               	addlw	low(028h)
  6162  04B3  1683               	bsf	status, 5	;RP0=1, select bank1
  6163  04B4  1303               	bcf	status, 6	;RP1=0, select bank1
  6164  04B5  00D0               	movwf	(_distance)^080h	;volatile
  6165  04B6  0877               	movf	(1+(?___lwdiv)),w
  6166  04B7  1803               	skipnc
  6167  04B8  3E01               	addlw	1
  6168  04B9  3E00               	addlw	high(028h)
  6169  04BA  00D1               	movwf	1+(_distance)^080h	;volatile
  6170                           	line	54
  6171                           ;infrared.c: 54: }
  6172  04BB  2D91               	goto	i1l2953
  6173                           	line	55
  6174                           	
  6175  04BC                     i1l2946:	
  6176                           	
  6177  04BC                     i1l10276:	
  6178                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  6179  04BC  3000               	movlw	high(04Dh)
  6180  04BD  1283               	bcf	status, 5	;RP0=0, select bank0
  6181  04BE  0254               	subwf	(_adcVal+1),w	;volatile
  6182  04BF  304D               	movlw	low(04Dh)
  6183  04C0  1903               	skipnz
  6184  04C1  0253               	subwf	(_adcVal),w	;volatile
  6185  04C2  1C03               	skipc
  6186  04C3  2CC5               	goto	u355_21
  6187  04C4  2CC6               	goto	u355_20
  6188  04C5                     u355_21:
  6189  04C5  2D01               	goto	i1l10282
  6190  04C6                     u355_20:
  6191                           	
  6192  04C6                     i1l10278:	
  6193  04C6  3000               	movlw	high(06Bh)
  6194  04C7  0254               	subwf	(_adcVal+1),w	;volatile
  6195  04C8  306B               	movlw	low(06Bh)
  6196  04C9  1903               	skipnz
  6197  04CA  0253               	subwf	(_adcVal),w	;volatile
  6198  04CB  1803               	skipnc
  6199  04CC  2CCE               	goto	u356_21
  6200  04CD  2CCF               	goto	u356_20
  6201  04CE                     u356_21:
  6202  04CE  2D01               	goto	i1l10282
  6203  04CF                     u356_20:
  6204                           	line	57
  6205                           	
  6206  04CF                     i1l10280:	
  6207                           ;infrared.c: 56: {
  6208                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  6209  04CF  301E               	movlw	low(01Eh)
  6210  04D0  00F6               	movwf	(?___lwdiv)
  6211  04D1  3000               	movlw	high(01Eh)
  6212  04D2  00F7               	movwf	((?___lwdiv))+1
  6213  04D3  0953               	comf	(_adcVal),w	;volatile
  6214  04D4  00A0               	movwf	(??_ADCconvert+0)+0
  6215  04D5  0954               	comf	(_adcVal+1),w	;volatile
  6216  04D6  00A1               	movwf	((??_ADCconvert+0)+0+1)
  6217  04D7  0AA0               	incf	(??_ADCconvert+0)+0,f
  6218  04D8  1903               	skipnz
  6219  04D9  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  6220  04DA  0820               	movf	0+(??_ADCconvert+0)+0,w
  6221  04DB  3E6B               	addlw	low(06Bh)
  6222  04DC  00F0               	movwf	(?___wmul)
  6223  04DD  0821               	movf	1+(??_ADCconvert+0)+0,w
  6224  04DE  1803               	skipnc
  6225  04DF  3E01               	addlw	1
  6226  04E0  3E00               	addlw	high(06Bh)
  6227  04E1  00F1               	movwf	1+(?___wmul)
  6228  04E2  300A               	movlw	low(0Ah)
  6229  04E3  00F2               	movwf	0+(?___wmul)+02h
  6230  04E4  3000               	movlw	high(0Ah)
  6231  04E5  00F3               	movwf	(0+(?___wmul)+02h)+1
  6232  04E6  120A  158A  2340   	fcall	___wmul
              120A  118A         
  6233  04EB  0871               	movf	(1+(?___wmul)),w
  6234  04EC  01F9               	clrf	1+(?___lwdiv)+02h
  6235  04ED  07F9               	addwf	1+(?___lwdiv)+02h
  6236  04EE  0870               	movf	(0+(?___wmul)),w
  6237  04EF  01F8               	clrf	0+(?___lwdiv)+02h
  6238  04F0  07F8               	addwf	0+(?___lwdiv)+02h
  6239                           
  6240  04F1  120A  158A  2542   	fcall	___lwdiv
              120A  118A         
  6241  04F6  0876               	movf	(0+(?___lwdiv)),w
  6242  04F7  3E32               	addlw	low(032h)
  6243  04F8  1683               	bsf	status, 5	;RP0=1, select bank1
  6244  04F9  1303               	bcf	status, 6	;RP1=0, select bank1
  6245  04FA  00D0               	movwf	(_distance)^080h	;volatile
  6246  04FB  0877               	movf	(1+(?___lwdiv)),w
  6247  04FC  1803               	skipnc
  6248  04FD  3E01               	addlw	1
  6249  04FE  3E00               	addlw	high(032h)
  6250  04FF  00D1               	movwf	1+(_distance)^080h	;volatile
  6251                           	line	58
  6252                           ;infrared.c: 58: }
  6253  0500  2D91               	goto	i1l2953
  6254                           	line	59
  6255                           	
  6256  0501                     i1l2948:	
  6257                           	
  6258  0501                     i1l10282:	
  6259                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  6260  0501  3000               	movlw	high(038h)
  6261  0502  1283               	bcf	status, 5	;RP0=0, select bank0
  6262  0503  0254               	subwf	(_adcVal+1),w	;volatile
  6263  0504  3038               	movlw	low(038h)
  6264  0505  1903               	skipnz
  6265  0506  0253               	subwf	(_adcVal),w	;volatile
  6266  0507  1C03               	skipc
  6267  0508  2D0A               	goto	u357_21
  6268  0509  2D0B               	goto	u357_20
  6269  050A                     u357_21:
  6270  050A  2D46               	goto	i1l10288
  6271  050B                     u357_20:
  6272                           	
  6273  050B                     i1l10284:	
  6274  050B  3000               	movlw	high(04Dh)
  6275  050C  0254               	subwf	(_adcVal+1),w	;volatile
  6276  050D  304D               	movlw	low(04Dh)
  6277  050E  1903               	skipnz
  6278  050F  0253               	subwf	(_adcVal),w	;volatile
  6279  0510  1803               	skipnc
  6280  0511  2D13               	goto	u358_21
  6281  0512  2D14               	goto	u358_20
  6282  0513                     u358_21:
  6283  0513  2D46               	goto	i1l10288
  6284  0514                     u358_20:
  6285                           	line	61
  6286                           	
  6287  0514                     i1l10286:	
  6288                           ;infrared.c: 60: {
  6289                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  6290  0514  3015               	movlw	low(015h)
  6291  0515  00F6               	movwf	(?___lwdiv)
  6292  0516  3000               	movlw	high(015h)
  6293  0517  00F7               	movwf	((?___lwdiv))+1
  6294  0518  0953               	comf	(_adcVal),w	;volatile
  6295  0519  00A0               	movwf	(??_ADCconvert+0)+0
  6296  051A  0954               	comf	(_adcVal+1),w	;volatile
  6297  051B  00A1               	movwf	((??_ADCconvert+0)+0+1)
  6298  051C  0AA0               	incf	(??_ADCconvert+0)+0,f
  6299  051D  1903               	skipnz
  6300  051E  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  6301  051F  0820               	movf	0+(??_ADCconvert+0)+0,w
  6302  0520  3E4D               	addlw	low(04Dh)
  6303  0521  00F0               	movwf	(?___wmul)
  6304  0522  0821               	movf	1+(??_ADCconvert+0)+0,w
  6305  0523  1803               	skipnc
  6306  0524  3E01               	addlw	1
  6307  0525  3E00               	addlw	high(04Dh)
  6308  0526  00F1               	movwf	1+(?___wmul)
  6309  0527  300A               	movlw	low(0Ah)
  6310  0528  00F2               	movwf	0+(?___wmul)+02h
  6311  0529  3000               	movlw	high(0Ah)
  6312  052A  00F3               	movwf	(0+(?___wmul)+02h)+1
  6313  052B  120A  158A  2340   	fcall	___wmul
              120A  118A         
  6314  0530  0871               	movf	(1+(?___wmul)),w
  6315  0531  01F9               	clrf	1+(?___lwdiv)+02h
  6316  0532  07F9               	addwf	1+(?___lwdiv)+02h
  6317  0533  0870               	movf	(0+(?___wmul)),w
  6318  0534  01F8               	clrf	0+(?___lwdiv)+02h
  6319  0535  07F8               	addwf	0+(?___lwdiv)+02h
  6320                           
  6321  0536  120A  158A  2542   	fcall	___lwdiv
              120A  118A         
  6322  053B  0876               	movf	(0+(?___lwdiv)),w
  6323  053C  3E3C               	addlw	low(03Ch)
  6324  053D  1683               	bsf	status, 5	;RP0=1, select bank1
  6325  053E  1303               	bcf	status, 6	;RP1=0, select bank1
  6326  053F  00D0               	movwf	(_distance)^080h	;volatile
  6327  0540  0877               	movf	(1+(?___lwdiv)),w
  6328  0541  1803               	skipnc
  6329  0542  3E01               	addlw	1
  6330  0543  3E00               	addlw	high(03Ch)
  6331  0544  00D1               	movwf	1+(_distance)^080h	;volatile
  6332                           	line	62
  6333                           ;infrared.c: 62: }
  6334  0545  2D91               	goto	i1l2953
  6335                           	line	63
  6336                           	
  6337  0546                     i1l2950:	
  6338                           	
  6339  0546                     i1l10288:	
  6340                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  6341  0546  3000               	movlw	high(02Bh)
  6342  0547  1283               	bcf	status, 5	;RP0=0, select bank0
  6343  0548  0254               	subwf	(_adcVal+1),w	;volatile
  6344  0549  302B               	movlw	low(02Bh)
  6345  054A  1903               	skipnz
  6346  054B  0253               	subwf	(_adcVal),w	;volatile
  6347  054C  1C03               	skipc
  6348  054D  2D4F               	goto	u359_21
  6349  054E  2D50               	goto	u359_20
  6350  054F                     u359_21:
  6351  054F  2D91               	goto	i1l2953
  6352  0550                     u359_20:
  6353                           	
  6354  0550                     i1l10290:	
  6355  0550  3000               	movlw	high(038h)
  6356  0551  0254               	subwf	(_adcVal+1),w	;volatile
  6357  0552  3038               	movlw	low(038h)
  6358  0553  1903               	skipnz
  6359  0554  0253               	subwf	(_adcVal),w	;volatile
  6360  0555  1803               	skipnc
  6361  0556  2D58               	goto	u360_21
  6362  0557  2D59               	goto	u360_20
  6363  0558                     u360_21:
  6364  0558  2D91               	goto	i1l2953
  6365  0559                     u360_20:
  6366                           	line	65
  6367                           	
  6368  0559                     i1l10292:	
  6369                           ;infrared.c: 64: {
  6370                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  6371  0559  300D               	movlw	low(0Dh)
  6372  055A  00F6               	movwf	(?___lwdiv)
  6373  055B  3000               	movlw	high(0Dh)
  6374  055C  00F7               	movwf	((?___lwdiv))+1
  6375  055D  0953               	comf	(_adcVal),w	;volatile
  6376  055E  00A0               	movwf	(??_ADCconvert+0)+0
  6377  055F  0954               	comf	(_adcVal+1),w	;volatile
  6378  0560  00A1               	movwf	((??_ADCconvert+0)+0+1)
  6379  0561  0AA0               	incf	(??_ADCconvert+0)+0,f
  6380  0562  1903               	skipnz
  6381  0563  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  6382  0564  0820               	movf	0+(??_ADCconvert+0)+0,w
  6383  0565  3E38               	addlw	low(038h)
  6384  0566  00F0               	movwf	(?___wmul)
  6385  0567  0821               	movf	1+(??_ADCconvert+0)+0,w
  6386  0568  1803               	skipnc
  6387  0569  3E01               	addlw	1
  6388  056A  3E00               	addlw	high(038h)
  6389  056B  00F1               	movwf	1+(?___wmul)
  6390  056C  300A               	movlw	low(0Ah)
  6391  056D  00F2               	movwf	0+(?___wmul)+02h
  6392  056E  3000               	movlw	high(0Ah)
  6393  056F  00F3               	movwf	(0+(?___wmul)+02h)+1
  6394  0570  120A  158A  2340   	fcall	___wmul
              120A  118A         
  6395  0575  0871               	movf	(1+(?___wmul)),w
  6396  0576  01F9               	clrf	1+(?___lwdiv)+02h
  6397  0577  07F9               	addwf	1+(?___lwdiv)+02h
  6398  0578  0870               	movf	(0+(?___wmul)),w
  6399  0579  01F8               	clrf	0+(?___lwdiv)+02h
  6400  057A  07F8               	addwf	0+(?___lwdiv)+02h
  6401                           
  6402  057B  120A  158A  2542   	fcall	___lwdiv
              120A  118A         
  6403  0580  0876               	movf	(0+(?___lwdiv)),w
  6404  0581  3E46               	addlw	low(046h)
  6405  0582  1683               	bsf	status, 5	;RP0=1, select bank1
  6406  0583  1303               	bcf	status, 6	;RP1=0, select bank1
  6407  0584  00D0               	movwf	(_distance)^080h	;volatile
  6408  0585  0877               	movf	(1+(?___lwdiv)),w
  6409  0586  1803               	skipnc
  6410  0587  3E01               	addlw	1
  6411  0588  3E00               	addlw	high(046h)
  6412  0589  00D1               	movwf	1+(_distance)^080h	;volatile
  6413  058A  2D91               	goto	i1l2953
  6414                           	line	66
  6415                           	
  6416  058B                     i1l2952:	
  6417  058B  2D91               	goto	i1l2953
  6418                           	line	67
  6419                           	
  6420  058C                     i1l2951:	
  6421  058C  2D91               	goto	i1l2953
  6422                           	
  6423  058D                     i1l2949:	
  6424  058D  2D91               	goto	i1l2953
  6425                           	
  6426  058E                     i1l2947:	
  6427  058E  2D91               	goto	i1l2953
  6428                           	
  6429  058F                     i1l2945:	
  6430  058F  2D91               	goto	i1l2953
  6431                           	
  6432  0590                     i1l2943:	
  6433  0590  2D91               	goto	i1l2953
  6434                           	
  6435  0591                     i1l2941:	
  6436                           	
  6437  0591                     i1l2953:	
  6438  0591  0008               	return
  6439                           	opt stack 0
  6440                           GLOBAL	__end_of_ADCconvert
  6441  0592                     	__end_of_ADCconvert:
  6442 ;; =============== function _ADCconvert ends ============
  6443                           
  6444                           	signat	_ADCconvert,88
  6445                           	global	_ReadButtons
  6446                           psect	text733,local,class=CODE,delta=2
  6447                           global __ptext733
  6448  0C42                     __ptext733:
  6449                           
  6450 ;; *************** function _ReadButtons *****************
  6451 ;; Defined at:
  6452 ;;		line 141 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      unsigned char 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0, pclath, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6466 ;;      Params:         0       0       0       0       0
  6467 ;;      Locals:         0       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0
  6469 ;;      Totals:         0       0       0       0       0
  6470 ;;Total ram usage:        0 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:    1
  6473 ;; This function calls:
  6474 ;;		_Debounce
  6475 ;; This function is called by:
  6476 ;;		_isr1
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           psect	text733
  6480                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  6481                           	line	141
  6482                           	global	__size_of_ReadButtons
  6483  0032                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  6484                           	
  6485  0C42                     _ReadButtons:	
  6486                           	opt	stack 2
  6487                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  6488                           	line	142
  6489                           	
  6490  0C42                     i1l10134:	
  6491                           ;HMI.c: 142: Debounce();
  6492  0C42  120A  158A  264B   	fcall	_Debounce
              120A  158A         
  6493                           	line	144
  6494                           	
  6495  0C47                     i1l10136:	
  6496                           ;HMI.c: 144: if(UpPressed)
  6497  0C47  1283               	bcf	status, 5	;RP0=0, select bank0
  6498  0C48  1303               	bcf	status, 6	;RP1=0, select bank0
  6499  0C49  1EED               	btfss	(_UpPressed/8),(_UpPressed)&7
  6500  0C4A  2C4C               	goto	u338_21
  6501  0C4B  2C4D               	goto	u338_20
  6502  0C4C                     u338_21:
  6503  0C4C  2C51               	goto	i1l5169
  6504  0C4D                     u338_20:
  6505                           	line	146
  6506                           	
  6507  0C4D                     i1l10138:	
  6508                           ;HMI.c: 145: {
  6509                           ;HMI.c: 146: UpPressed = 0;
  6510  0C4D  12ED               	bcf	(_UpPressed/8),(_UpPressed)&7
  6511                           	line	147
  6512                           	
  6513  0C4E                     i1l10140:	
  6514                           ;HMI.c: 147: return 1;
  6515  0C4E  3001               	movlw	(01h)
  6516  0C4F  2C73               	goto	i1l5170
  6517                           	
  6518  0C50                     i1l10142:	
  6519  0C50  2C73               	goto	i1l5170
  6520                           	line	149
  6521                           	
  6522  0C51                     i1l5169:	
  6523                           	line	151
  6524                           ;HMI.c: 149: }
  6525                           ;HMI.c: 151: if(DownPressed)
  6526  0C51  1D6C               	btfss	(_DownPressed/8),(_DownPressed)&7
  6527  0C52  2C54               	goto	u339_21
  6528  0C53  2C55               	goto	u339_20
  6529  0C54                     u339_21:
  6530  0C54  2C59               	goto	i1l5171
  6531  0C55                     u339_20:
  6532                           	line	153
  6533                           	
  6534  0C55                     i1l10144:	
  6535                           ;HMI.c: 152: {
  6536                           ;HMI.c: 153: DownPressed = 0;
  6537  0C55  116C               	bcf	(_DownPressed/8),(_DownPressed)&7
  6538                           	line	154
  6539                           	
  6540  0C56                     i1l10146:	
  6541                           ;HMI.c: 154: return 2;
  6542  0C56  3002               	movlw	(02h)
  6543  0C57  2C73               	goto	i1l5170
  6544                           	
  6545  0C58                     i1l10148:	
  6546  0C58  2C73               	goto	i1l5170
  6547                           	line	156
  6548                           	
  6549  0C59                     i1l5171:	
  6550                           	line	157
  6551                           ;HMI.c: 156: }
  6552                           ;HMI.c: 157: if(LeftPressed)
  6553  0C59  1E6C               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  6554  0C5A  2C5C               	goto	u340_21
  6555  0C5B  2C5D               	goto	u340_20
  6556  0C5C                     u340_21:
  6557  0C5C  2C61               	goto	i1l5172
  6558  0C5D                     u340_20:
  6559                           	line	159
  6560                           	
  6561  0C5D                     i1l10150:	
  6562                           ;HMI.c: 158: {
  6563                           ;HMI.c: 159: LeftPressed = 0;
  6564  0C5D  126C               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  6565                           	line	160
  6566                           	
  6567  0C5E                     i1l10152:	
  6568                           ;HMI.c: 160: return 3;
  6569  0C5E  3003               	movlw	(03h)
  6570  0C5F  2C73               	goto	i1l5170
  6571                           	
  6572  0C60                     i1l10154:	
  6573  0C60  2C73               	goto	i1l5170
  6574                           	line	162
  6575                           	
  6576  0C61                     i1l5172:	
  6577                           	line	163
  6578                           ;HMI.c: 162: }
  6579                           ;HMI.c: 163: if(RightPressed)
  6580  0C61  1DED               	btfss	(_RightPressed/8),(_RightPressed)&7
  6581  0C62  2C64               	goto	u341_21
  6582  0C63  2C65               	goto	u341_20
  6583  0C64                     u341_21:
  6584  0C64  2C69               	goto	i1l5173
  6585  0C65                     u341_20:
  6586                           	line	165
  6587                           	
  6588  0C65                     i1l10156:	
  6589                           ;HMI.c: 164: {
  6590                           ;HMI.c: 165: RightPressed = 0;
  6591  0C65  11ED               	bcf	(_RightPressed/8),(_RightPressed)&7
  6592                           	line	166
  6593                           	
  6594  0C66                     i1l10158:	
  6595                           ;HMI.c: 166: return 4;
  6596  0C66  3004               	movlw	(04h)
  6597  0C67  2C73               	goto	i1l5170
  6598                           	
  6599  0C68                     i1l10160:	
  6600  0C68  2C73               	goto	i1l5170
  6601                           	line	168
  6602                           	
  6603  0C69                     i1l5173:	
  6604                           	line	170
  6605                           ;HMI.c: 168: }
  6606                           ;HMI.c: 170: if(CenterPressed)
  6607  0C69  1C6C               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  6608  0C6A  2C6C               	goto	u342_21
  6609  0C6B  2C6D               	goto	u342_20
  6610  0C6C                     u342_21:
  6611  0C6C  2C71               	goto	i1l10168
  6612  0C6D                     u342_20:
  6613                           	line	172
  6614                           	
  6615  0C6D                     i1l10162:	
  6616                           ;HMI.c: 171: {
  6617                           ;HMI.c: 172: CenterPressed = 0;
  6618  0C6D  106C               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  6619                           	line	173
  6620                           	
  6621  0C6E                     i1l10164:	
  6622                           ;HMI.c: 173: return 5;
  6623  0C6E  3005               	movlw	(05h)
  6624  0C6F  2C73               	goto	i1l5170
  6625                           	
  6626  0C70                     i1l10166:	
  6627  0C70  2C73               	goto	i1l5170
  6628                           	line	175
  6629                           	
  6630  0C71                     i1l5174:	
  6631                           	line	176
  6632                           	
  6633  0C71                     i1l10168:	
  6634                           ;HMI.c: 175: }
  6635                           ;HMI.c: 176: return 0;
  6636  0C71  3000               	movlw	(0)
  6637  0C72  2C73               	goto	i1l5170
  6638                           	
  6639  0C73                     i1l10170:	
  6640                           	line	177
  6641                           	
  6642  0C73                     i1l5170:	
  6643  0C73  0008               	return
  6644                           	opt stack 0
  6645                           GLOBAL	__end_of_ReadButtons
  6646  0C74                     	__end_of_ReadButtons:
  6647 ;; =============== function _ReadButtons ends ============
  6648                           
  6649                           	signat	_ReadButtons,89
  6650                           	global	_lcd_write_data
  6651                           psect	text734,local,class=CODE,delta=2
  6652                           global __ptext734
  6653  0A3C                     __ptext734:
  6654                           
  6655 ;; *************** function _lcd_write_data *****************
  6656 ;; Defined at:
  6657 ;;		line 30 in file "H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  databyte        1    wreg     unsigned char 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  databyte        1    2[COMMON] unsigned char 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;		None               void
  6664 ;; Registers used:
  6665 ;;		wreg
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6671 ;;      Params:         0       0       0       0       0
  6672 ;;      Locals:         1       0       0       0       0
  6673 ;;      Temps:          2       0       0       0       0
  6674 ;;      Totals:         3       0       0       0       0
  6675 ;;Total ram usage:        3 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_lcd_write_string
  6681 ;;		_lcd_write_2_digit_bcd
  6682 ;;		_lcd_write_3_digit_bcd
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           psect	text734
  6686                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\lcd.c"
  6687                           	line	30
  6688                           	global	__size_of_lcd_write_data
  6689  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  6690                           	
  6691  0A3C                     _lcd_write_data:	
  6692                           	opt	stack 1
  6693                           ; Regs used in _lcd_write_data: [wreg]
  6694                           ;lcd_write_data@databyte stored from wreg
  6695  0A3C  00F2               	movwf	(lcd_write_data@databyte)
  6696                           	line	31
  6697                           	
  6698  0A3D                     i1l9992:	
  6699                           ;lcd.c: 31: RE2 = 0;
  6700  0A3D  1283               	bcf	status, 5	;RP0=0, select bank0
  6701  0A3E  1303               	bcf	status, 6	;RP1=0, select bank0
  6702  0A3F  1109               	bcf	(74/8),(74)&7
  6703                           	line	32
  6704                           ;lcd.c: 32: RE1 = 0;
  6705  0A40  1089               	bcf	(73/8),(73)&7
  6706                           	line	33
  6707                           ;lcd.c: 33: RE0 = 1;
  6708  0A41  1409               	bsf	(72/8),(72)&7
  6709                           	line	34
  6710                           	
  6711  0A42                     i1l9994:	
  6712                           ;lcd.c: 34: PORTD = databyte;
  6713  0A42  0872               	movf	(lcd_write_data@databyte),w
  6714  0A43  0088               	movwf	(8)	;volatile
  6715                           	line	35
  6716                           	
  6717  0A44                     i1l9996:	
  6718                           ;lcd.c: 35: RE2 = 1;
  6719  0A44  1509               	bsf	(74/8),(74)&7
  6720                           	line	36
  6721                           	
  6722  0A45                     i1l9998:	
  6723                           ;lcd.c: 36: RE2 = 0;
  6724  0A45  1109               	bcf	(74/8),(74)&7
  6725                           	line	37
  6726                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  6727                           	opt asmopt_off
  6728  0A46  3007               movlw	7
  6729  0A47  00F1               movwf	((??_lcd_write_data+0)+0+1),f
  6730  0A48  307D               	movlw	125
  6731  0A49  00F0               movwf	((??_lcd_write_data+0)+0),f
  6732  0A4A                     u462_27:
  6733  0A4A  0BF0               	decfsz	((??_lcd_write_data+0)+0),f
  6734  0A4B  2A4A               	goto	u462_27
  6735  0A4C  0BF1               	decfsz	((??_lcd_write_data+0)+0+1),f
  6736  0A4D  2A4A               	goto	u462_27
  6737                           opt asmopt_on
  6738                           
  6739                           	line	38
  6740                           	
  6741  0A4E                     i1l1402:	
  6742  0A4E  0008               	return
  6743                           	opt stack 0
  6744                           GLOBAL	__end_of_lcd_write_data
  6745  0A4F                     	__end_of_lcd_write_data:
  6746 ;; =============== function _lcd_write_data ends ============
  6747                           
  6748                           	signat	_lcd_write_data,4216
  6749                           	global	_adc_read_channel
  6750                           psect	text735,local,class=CODE,delta=2
  6751                           global __ptext735
  6752  0C74                     __ptext735:
  6753                           
  6754 ;; *************** function _adc_read_channel *****************
  6755 ;; Defined at:
  6756 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  channel         1    wreg     unsigned char 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  channel         1    7[COMMON] unsigned char 
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      unsigned char 
  6763 ;; Registers used:
  6764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6770 ;;      Params:         0       0       0       0       0
  6771 ;;      Locals:         1       0       0       0       0
  6772 ;;      Temps:          1       0       0       0       0
  6773 ;;      Totals:         2       0       0       0       0
  6774 ;;Total ram usage:        2 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    1
  6777 ;; This function calls:
  6778 ;;		_adc_read
  6779 ;; This function is called by:
  6780 ;;		_readDistance
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           psect	text735
  6784                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6785                           	line	5
  6786                           	global	__size_of_adc_read_channel
  6787  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  6788                           	
  6789  0C74                     _adc_read_channel:	
  6790                           	opt	stack 0
  6791                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6792                           ;adc_read_channel@channel stored from wreg
  6793  0C74  00F7               	movwf	(adc_read_channel@channel)
  6794                           	line	6
  6795                           	
  6796  0C75                     i1l9966:	
  6797                           ;adc.c: 6: switch(channel)
  6798  0C75  2C98               	goto	i1l9974
  6799                           	line	8
  6800                           ;adc.c: 7: {
  6801                           ;adc.c: 8: case 0:
  6802                           	
  6803  0C76                     i1l690:	
  6804                           	line	9
  6805                           ;adc.c: 9: CHS0 = 0;
  6806  0C76  1283               	bcf	status, 5	;RP0=0, select bank0
  6807  0C77  1303               	bcf	status, 6	;RP1=0, select bank0
  6808  0C78  119F               	bcf	(251/8),(251)&7
  6809                           	line	10
  6810                           ;adc.c: 10: CHS1 = 0;
  6811  0C79  121F               	bcf	(252/8),(252)&7
  6812                           	line	11
  6813                           ;adc.c: 11: CHS2 = 0;
  6814  0C7A  129F               	bcf	(253/8),(253)&7
  6815                           	line	12
  6816                           ;adc.c: 12: break;
  6817  0C7B  2CA9               	goto	i1l9976
  6818                           	line	13
  6819                           ;adc.c: 13: case 1:
  6820                           	
  6821  0C7C                     i1l692:	
  6822                           	line	14
  6823                           ;adc.c: 14: CHS0 = 1;
  6824  0C7C  1283               	bcf	status, 5	;RP0=0, select bank0
  6825  0C7D  1303               	bcf	status, 6	;RP1=0, select bank0
  6826  0C7E  159F               	bsf	(251/8),(251)&7
  6827                           	line	15
  6828                           ;adc.c: 15: CHS1 = 0;
  6829  0C7F  121F               	bcf	(252/8),(252)&7
  6830                           	line	16
  6831                           ;adc.c: 16: CHS2 = 0;
  6832  0C80  129F               	bcf	(253/8),(253)&7
  6833                           	line	17
  6834                           ;adc.c: 17: break;
  6835  0C81  2CA9               	goto	i1l9976
  6836                           	line	18
  6837                           ;adc.c: 18: case 2:
  6838                           	
  6839  0C82                     i1l693:	
  6840                           	line	19
  6841                           ;adc.c: 19: CHS0 = 0;
  6842  0C82  1283               	bcf	status, 5	;RP0=0, select bank0
  6843  0C83  1303               	bcf	status, 6	;RP1=0, select bank0
  6844  0C84  119F               	bcf	(251/8),(251)&7
  6845                           	line	20
  6846                           ;adc.c: 20: CHS1 = 1;
  6847  0C85  161F               	bsf	(252/8),(252)&7
  6848                           	line	21
  6849                           ;adc.c: 21: CHS2 = 0;
  6850  0C86  129F               	bcf	(253/8),(253)&7
  6851                           	line	22
  6852                           ;adc.c: 22: break;
  6853  0C87  2CA9               	goto	i1l9976
  6854                           	line	23
  6855                           ;adc.c: 23: case 3:
  6856                           	
  6857  0C88                     i1l694:	
  6858                           	line	24
  6859                           ;adc.c: 24: CHS0 = 1;
  6860  0C88  1283               	bcf	status, 5	;RP0=0, select bank0
  6861  0C89  1303               	bcf	status, 6	;RP1=0, select bank0
  6862  0C8A  159F               	bsf	(251/8),(251)&7
  6863                           	line	25
  6864                           ;adc.c: 25: CHS1 = 1;
  6865  0C8B  161F               	bsf	(252/8),(252)&7
  6866                           	line	26
  6867                           ;adc.c: 26: CHS2 = 0;
  6868  0C8C  129F               	bcf	(253/8),(253)&7
  6869                           	line	27
  6870                           ;adc.c: 27: break;
  6871  0C8D  2CA9               	goto	i1l9976
  6872                           	line	28
  6873                           ;adc.c: 28: case 4:
  6874                           	
  6875  0C8E                     i1l695:	
  6876                           	line	29
  6877                           ;adc.c: 29: CHS0 = 0;
  6878  0C8E  1283               	bcf	status, 5	;RP0=0, select bank0
  6879  0C8F  1303               	bcf	status, 6	;RP1=0, select bank0
  6880  0C90  119F               	bcf	(251/8),(251)&7
  6881                           	line	30
  6882                           ;adc.c: 30: CHS1 = 0;
  6883  0C91  121F               	bcf	(252/8),(252)&7
  6884                           	line	31
  6885                           ;adc.c: 31: CHS2 = 1;
  6886  0C92  169F               	bsf	(253/8),(253)&7
  6887                           	line	32
  6888                           ;adc.c: 32: break;
  6889  0C93  2CA9               	goto	i1l9976
  6890                           	line	35
  6891                           ;adc.c: 35: default:
  6892                           	
  6893  0C94                     i1l696:	
  6894                           	line	36
  6895                           	
  6896  0C94                     i1l9968:	
  6897                           ;adc.c: 36: return 0;
  6898  0C94  3000               	movlw	(0)
  6899  0C95  2CB4               	goto	i1l697
  6900                           	
  6901  0C96                     i1l9970:	
  6902  0C96  2CB4               	goto	i1l697
  6903                           	line	37
  6904                           	
  6905  0C97                     i1l9972:	
  6906                           ;adc.c: 37: }
  6907  0C97  2CA9               	goto	i1l9976
  6908                           	line	6
  6909                           	
  6910  0C98                     i1l689:	
  6911                           	
  6912  0C98                     i1l9974:	
  6913  0C98  0877               	movf	(adc_read_channel@channel),w
  6914                           	; Switch size 1, requested type "space"
  6915                           ; Number of cases is 5, Range of values is 0 to 4
  6916                           ; switch strategies available:
  6917                           ; Name         Instructions Cycles
  6918                           ; simple_byte           16     9 (average)
  6919                           ; direct_byte           23     8 (fixed)
  6920                           ; jumptable            260     6 (fixed)
  6921                           ; rangetable             9     6 (fixed)
  6922                           ; spacedrange           16     9 (fixed)
  6923                           ; locatedrange           5     3 (fixed)
  6924                           ;	Chosen strategy is simple_byte
  6925                           
  6926                           	opt asmopt_off
  6927  0C99  3A00               	xorlw	0^0	; case 0
  6928  0C9A  1903               	skipnz
  6929  0C9B  2C76               	goto	i1l690
  6930  0C9C  3A01               	xorlw	1^0	; case 1
  6931  0C9D  1903               	skipnz
  6932  0C9E  2C7C               	goto	i1l692
  6933  0C9F  3A03               	xorlw	2^1	; case 2
  6934  0CA0  1903               	skipnz
  6935  0CA1  2C82               	goto	i1l693
  6936  0CA2  3A01               	xorlw	3^2	; case 3
  6937  0CA3  1903               	skipnz
  6938  0CA4  2C88               	goto	i1l694
  6939  0CA5  3A07               	xorlw	4^3	; case 4
  6940  0CA6  1903               	skipnz
  6941  0CA7  2C8E               	goto	i1l695
  6942  0CA8  2C94               	goto	i1l9968
  6943                           	opt asmopt_on
  6944                           
  6945                           	line	37
  6946                           	
  6947  0CA9                     i1l691:	
  6948                           	line	39
  6949                           	
  6950  0CA9                     i1l9976:	
  6951                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6952                           	opt asmopt_off
  6953  0CA9  3053               movlw	83
  6954  0CAA  00F6               movwf	(??_adc_read_channel+0)+0,f
  6955  0CAB                     u463_27:
  6956  0CAB  0BF6               decfsz	(??_adc_read_channel+0)+0,f
  6957  0CAC  2CAB               	goto	u463_27
  6958                           opt asmopt_on
  6959                           
  6960                           	line	41
  6961                           	
  6962  0CAD                     i1l9978:	
  6963                           ;adc.c: 41: return adc_read();
  6964  0CAD  120A  158A  22F1   	fcall	_adc_read
              120A  158A         
  6965  0CB2  0870               	movf	(0+(?_adc_read)),w
  6966  0CB3  2CB4               	goto	i1l697
  6967                           	
  6968  0CB4                     i1l9980:	
  6969                           	line	43
  6970                           	
  6971  0CB4                     i1l697:	
  6972  0CB4  0008               	return
  6973                           	opt stack 0
  6974                           GLOBAL	__end_of_adc_read_channel
  6975  0CB5                     	__end_of_adc_read_channel:
  6976 ;; =============== function _adc_read_channel ends ============
  6977                           
  6978                           	signat	_adc_read_channel,4217
  6979                           	global	___awmod
  6980                           psect	text736,local,class=CODE,delta=2
  6981                           global __ptext736
  6982  0DE5                     __ptext736:
  6983                           
  6984 ;; *************** function ___awmod *****************
  6985 ;; Defined at:
  6986 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  divisor         2    0[COMMON] int 
  6989 ;;  dividend        2    2[COMMON] int 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  sign            1    6[COMMON] unsigned char 
  6992 ;;  counter         1    5[COMMON] unsigned char 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  2    0[COMMON] int 
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7002 ;;      Params:         4       0       0       0       0
  7003 ;;      Locals:         2       0       0       0       0
  7004 ;;      Temps:          1       0       0       0       0
  7005 ;;      Totals:         7       0       0       0       0
  7006 ;;Total ram usage:        7 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; This function calls:
  7009 ;;		Nothing
  7010 ;; This function is called by:
  7011 ;;		_UpdateDisplay
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           psect	text736
  7015                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7016                           	line	5
  7017                           	global	__size_of___awmod
  7018  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  7019                           	
  7020  0DE5                     ___awmod:	
  7021                           	opt	stack 2
  7022                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7023                           	line	8
  7024                           	
  7025  0DE5                     i1l10592:	
  7026  0DE5  01F6               	clrf	(___awmod@sign)
  7027                           	line	9
  7028  0DE6  1FF3               	btfss	(___awmod@dividend+1),7
  7029  0DE7  2DE9               	goto	u415_21
  7030  0DE8  2DEA               	goto	u415_20
  7031  0DE9                     u415_21:
  7032  0DE9  2DF3               	goto	i1l10596
  7033  0DEA                     u415_20:
  7034                           	line	10
  7035                           	
  7036  0DEA                     i1l10594:	
  7037  0DEA  09F2               	comf	(___awmod@dividend),f
  7038  0DEB  09F3               	comf	(___awmod@dividend+1),f
  7039  0DEC  0AF2               	incf	(___awmod@dividend),f
  7040  0DED  1903               	skipnz
  7041  0DEE  0AF3               	incf	(___awmod@dividend+1),f
  7042                           	line	11
  7043  0DEF  01F6               	clrf	(___awmod@sign)
  7044  0DF0  1403               	bsf	status,0
  7045  0DF1  0DF6               	rlf	(___awmod@sign),f
  7046  0DF2  2DF3               	goto	i1l10596
  7047                           	line	12
  7048                           	
  7049  0DF3                     i1l7568:	
  7050                           	line	13
  7051                           	
  7052  0DF3                     i1l10596:	
  7053  0DF3  1FF1               	btfss	(___awmod@divisor+1),7
  7054  0DF4  2DF6               	goto	u416_21
  7055  0DF5  2DF7               	goto	u416_20
  7056  0DF6                     u416_21:
  7057  0DF6  2DFD               	goto	i1l10600
  7058  0DF7                     u416_20:
  7059                           	line	14
  7060                           	
  7061  0DF7                     i1l10598:	
  7062  0DF7  09F0               	comf	(___awmod@divisor),f
  7063  0DF8  09F1               	comf	(___awmod@divisor+1),f
  7064  0DF9  0AF0               	incf	(___awmod@divisor),f
  7065  0DFA  1903               	skipnz
  7066  0DFB  0AF1               	incf	(___awmod@divisor+1),f
  7067  0DFC  2DFD               	goto	i1l10600
  7068                           	
  7069  0DFD                     i1l7569:	
  7070                           	line	15
  7071                           	
  7072  0DFD                     i1l10600:	
  7073  0DFD  0871               	movf	(___awmod@divisor+1),w
  7074  0DFE  0470               	iorwf	(___awmod@divisor),w
  7075  0DFF  1903               	skipnz
  7076  0E00  2E02               	goto	u417_21
  7077  0E01  2E03               	goto	u417_20
  7078  0E02                     u417_21:
  7079  0E02  2E39               	goto	i1l10618
  7080  0E03                     u417_20:
  7081                           	line	16
  7082                           	
  7083  0E03                     i1l10602:	
  7084  0E03  01F5               	clrf	(___awmod@counter)
  7085  0E04  1403               	bsf	status,0
  7086  0E05  0DF5               	rlf	(___awmod@counter),f
  7087                           	line	17
  7088  0E06  2E13               	goto	i1l10608
  7089                           	
  7090  0E07                     i1l7572:	
  7091                           	line	18
  7092                           	
  7093  0E07                     i1l10604:	
  7094  0E07  3001               	movlw	01h
  7095                           	
  7096  0E08                     u418_25:
  7097  0E08  1003               	clrc
  7098  0E09  0DF0               	rlf	(___awmod@divisor),f
  7099  0E0A  0DF1               	rlf	(___awmod@divisor+1),f
  7100  0E0B  3EFF               	addlw	-1
  7101  0E0C  1D03               	skipz
  7102  0E0D  2E08               	goto	u418_25
  7103                           	line	19
  7104                           	
  7105  0E0E                     i1l10606:	
  7106  0E0E  3001               	movlw	(01h)
  7107  0E0F  00F4               	movwf	(??___awmod+0)+0
  7108  0E10  0874               	movf	(??___awmod+0)+0,w
  7109  0E11  07F5               	addwf	(___awmod@counter),f
  7110  0E12  2E13               	goto	i1l10608
  7111                           	line	20
  7112                           	
  7113  0E13                     i1l7571:	
  7114                           	line	17
  7115                           	
  7116  0E13                     i1l10608:	
  7117  0E13  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  7118  0E14  2E16               	goto	u419_21
  7119  0E15  2E17               	goto	u419_20
  7120  0E16                     u419_21:
  7121  0E16  2E07               	goto	i1l10604
  7122  0E17                     u419_20:
  7123  0E17  2E19               	goto	i1l10610
  7124                           	
  7125  0E18                     i1l7573:	
  7126  0E18  2E19               	goto	i1l10610
  7127                           	line	21
  7128                           	
  7129  0E19                     i1l7574:	
  7130                           	line	22
  7131                           	
  7132  0E19                     i1l10610:	
  7133  0E19  0871               	movf	(___awmod@divisor+1),w
  7134  0E1A  0273               	subwf	(___awmod@dividend+1),w
  7135  0E1B  1D03               	skipz
  7136  0E1C  2E1F               	goto	u420_25
  7137  0E1D  0870               	movf	(___awmod@divisor),w
  7138  0E1E  0272               	subwf	(___awmod@dividend),w
  7139  0E1F                     u420_25:
  7140  0E1F  1C03               	skipc
  7141  0E20  2E22               	goto	u420_21
  7142  0E21  2E23               	goto	u420_20
  7143  0E22                     u420_21:
  7144  0E22  2E2A               	goto	i1l10614
  7145  0E23                     u420_20:
  7146                           	line	23
  7147                           	
  7148  0E23                     i1l10612:	
  7149  0E23  0870               	movf	(___awmod@divisor),w
  7150  0E24  02F2               	subwf	(___awmod@dividend),f
  7151  0E25  0871               	movf	(___awmod@divisor+1),w
  7152  0E26  1C03               	skipc
  7153  0E27  03F3               	decf	(___awmod@dividend+1),f
  7154  0E28  02F3               	subwf	(___awmod@dividend+1),f
  7155  0E29  2E2A               	goto	i1l10614
  7156                           	
  7157  0E2A                     i1l7575:	
  7158                           	line	24
  7159                           	
  7160  0E2A                     i1l10614:	
  7161  0E2A  3001               	movlw	01h
  7162                           	
  7163  0E2B                     u421_25:
  7164  0E2B  1003               	clrc
  7165  0E2C  0CF1               	rrf	(___awmod@divisor+1),f
  7166  0E2D  0CF0               	rrf	(___awmod@divisor),f
  7167  0E2E  3EFF               	addlw	-1
  7168  0E2F  1D03               	skipz
  7169  0E30  2E2B               	goto	u421_25
  7170                           	line	25
  7171                           	
  7172  0E31                     i1l10616:	
  7173  0E31  3001               	movlw	low(01h)
  7174  0E32  02F5               	subwf	(___awmod@counter),f
  7175  0E33  1D03               	btfss	status,2
  7176  0E34  2E36               	goto	u422_21
  7177  0E35  2E37               	goto	u422_20
  7178  0E36                     u422_21:
  7179  0E36  2E19               	goto	i1l10610
  7180  0E37                     u422_20:
  7181  0E37  2E39               	goto	i1l10618
  7182                           	
  7183  0E38                     i1l7576:	
  7184  0E38  2E39               	goto	i1l10618
  7185                           	line	26
  7186                           	
  7187  0E39                     i1l7570:	
  7188                           	line	27
  7189                           	
  7190  0E39                     i1l10618:	
  7191  0E39  0876               	movf	(___awmod@sign),w
  7192  0E3A  1D03               	skipz
  7193  0E3B  2E3D               	goto	u423_20
  7194  0E3C  2E43               	goto	i1l10622
  7195  0E3D                     u423_20:
  7196                           	line	28
  7197                           	
  7198  0E3D                     i1l10620:	
  7199  0E3D  09F2               	comf	(___awmod@dividend),f
  7200  0E3E  09F3               	comf	(___awmod@dividend+1),f
  7201  0E3F  0AF2               	incf	(___awmod@dividend),f
  7202  0E40  1903               	skipnz
  7203  0E41  0AF3               	incf	(___awmod@dividend+1),f
  7204  0E42  2E43               	goto	i1l10622
  7205                           	
  7206  0E43                     i1l7577:	
  7207                           	line	29
  7208                           	
  7209  0E43                     i1l10622:	
  7210  0E43  0873               	movf	(___awmod@dividend+1),w
  7211  0E44  01F1               	clrf	(?___awmod+1)
  7212  0E45  07F1               	addwf	(?___awmod+1)
  7213  0E46  0872               	movf	(___awmod@dividend),w
  7214  0E47  01F0               	clrf	(?___awmod)
  7215  0E48  07F0               	addwf	(?___awmod)
  7216                           
  7217  0E49  2E4A               	goto	i1l7578
  7218                           	
  7219  0E4A                     i1l10624:	
  7220                           	line	30
  7221                           	
  7222  0E4A                     i1l7578:	
  7223  0E4A  0008               	return
  7224                           	opt stack 0
  7225                           GLOBAL	__end_of___awmod
  7226  0E4B                     	__end_of___awmod:
  7227 ;; =============== function ___awmod ends ============
  7228                           
  7229                           	signat	___awmod,8314
  7230                           	global	___lwmod
  7231                           psect	text737,local,class=CODE,delta=2
  7232                           global __ptext737
  7233  0CB5                     __ptext737:
  7234                           
  7235 ;; *************** function ___lwmod *****************
  7236 ;; Defined at:
  7237 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;  divisor         2    0[BANK0 ] unsigned int 
  7240 ;;  dividend        2    2[BANK0 ] unsigned int 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  counter         1    5[BANK0 ] unsigned char 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  2    0[BANK0 ] unsigned int 
  7245 ;; Registers used:
  7246 ;;		wreg, status,2, status,0
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7252 ;;      Params:         0       4       0       0       0
  7253 ;;      Locals:         0       1       0       0       0
  7254 ;;      Temps:          0       1       0       0       0
  7255 ;;      Totals:         0       6       0       0       0
  7256 ;;Total ram usage:        6 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_isr1
  7262 ;;		_sprintf
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           psect	text737
  7266                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  7267                           	line	5
  7268                           	global	__size_of___lwmod
  7269  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  7270                           	
  7271  0CB5                     ___lwmod:	
  7272                           	opt	stack 1
  7273                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7274                           	line	8
  7275                           	
  7276  0CB5                     i1l10570:	
  7277  0CB5  1283               	bcf	status, 5	;RP0=0, select bank0
  7278  0CB6  1303               	bcf	status, 6	;RP1=0, select bank0
  7279  0CB7  0821               	movf	(___lwmod@divisor+1),w
  7280  0CB8  0420               	iorwf	(___lwmod@divisor),w
  7281  0CB9  1903               	skipnz
  7282  0CBA  2CBC               	goto	u409_21
  7283  0CBB  2CBD               	goto	u409_20
  7284  0CBC                     u409_21:
  7285  0CBC  2CF3               	goto	i1l10588
  7286  0CBD                     u409_20:
  7287                           	line	9
  7288                           	
  7289  0CBD                     i1l10572:	
  7290  0CBD  01A5               	clrf	(___lwmod@counter)
  7291  0CBE  1403               	bsf	status,0
  7292  0CBF  0DA5               	rlf	(___lwmod@counter),f
  7293                           	line	10
  7294  0CC0  2CCD               	goto	i1l10578
  7295                           	
  7296  0CC1                     i1l7378:	
  7297                           	line	11
  7298                           	
  7299  0CC1                     i1l10574:	
  7300  0CC1  3001               	movlw	01h
  7301                           	
  7302  0CC2                     u410_25:
  7303  0CC2  1003               	clrc
  7304  0CC3  0DA0               	rlf	(___lwmod@divisor),f
  7305  0CC4  0DA1               	rlf	(___lwmod@divisor+1),f
  7306  0CC5  3EFF               	addlw	-1
  7307  0CC6  1D03               	skipz
  7308  0CC7  2CC2               	goto	u410_25
  7309                           	line	12
  7310                           	
  7311  0CC8                     i1l10576:	
  7312  0CC8  3001               	movlw	(01h)
  7313  0CC9  00A4               	movwf	(??___lwmod+0)+0
  7314  0CCA  0824               	movf	(??___lwmod+0)+0,w
  7315  0CCB  07A5               	addwf	(___lwmod@counter),f
  7316  0CCC  2CCD               	goto	i1l10578
  7317                           	line	13
  7318                           	
  7319  0CCD                     i1l7377:	
  7320                           	line	10
  7321                           	
  7322  0CCD                     i1l10578:	
  7323  0CCD  1FA1               	btfss	(___lwmod@divisor+1),(15)&7
  7324  0CCE  2CD0               	goto	u411_21
  7325  0CCF  2CD1               	goto	u411_20
  7326  0CD0                     u411_21:
  7327  0CD0  2CC1               	goto	i1l10574
  7328  0CD1                     u411_20:
  7329  0CD1  2CD3               	goto	i1l10580
  7330                           	
  7331  0CD2                     i1l7379:	
  7332  0CD2  2CD3               	goto	i1l10580
  7333                           	line	14
  7334                           	
  7335  0CD3                     i1l7380:	
  7336                           	line	15
  7337                           	
  7338  0CD3                     i1l10580:	
  7339  0CD3  0821               	movf	(___lwmod@divisor+1),w
  7340  0CD4  0223               	subwf	(___lwmod@dividend+1),w
  7341  0CD5  1D03               	skipz
  7342  0CD6  2CD9               	goto	u412_25
  7343  0CD7  0820               	movf	(___lwmod@divisor),w
  7344  0CD8  0222               	subwf	(___lwmod@dividend),w
  7345  0CD9                     u412_25:
  7346  0CD9  1C03               	skipc
  7347  0CDA  2CDC               	goto	u412_21
  7348  0CDB  2CDD               	goto	u412_20
  7349  0CDC                     u412_21:
  7350  0CDC  2CE4               	goto	i1l10584
  7351  0CDD                     u412_20:
  7352                           	line	16
  7353                           	
  7354  0CDD                     i1l10582:	
  7355  0CDD  0820               	movf	(___lwmod@divisor),w
  7356  0CDE  02A2               	subwf	(___lwmod@dividend),f
  7357  0CDF  0821               	movf	(___lwmod@divisor+1),w
  7358  0CE0  1C03               	skipc
  7359  0CE1  03A3               	decf	(___lwmod@dividend+1),f
  7360  0CE2  02A3               	subwf	(___lwmod@dividend+1),f
  7361  0CE3  2CE4               	goto	i1l10584
  7362                           	
  7363  0CE4                     i1l7381:	
  7364                           	line	17
  7365                           	
  7366  0CE4                     i1l10584:	
  7367  0CE4  3001               	movlw	01h
  7368                           	
  7369  0CE5                     u413_25:
  7370  0CE5  1003               	clrc
  7371  0CE6  0CA1               	rrf	(___lwmod@divisor+1),f
  7372  0CE7  0CA0               	rrf	(___lwmod@divisor),f
  7373  0CE8  3EFF               	addlw	-1
  7374  0CE9  1D03               	skipz
  7375  0CEA  2CE5               	goto	u413_25
  7376                           	line	18
  7377                           	
  7378  0CEB                     i1l10586:	
  7379  0CEB  3001               	movlw	low(01h)
  7380  0CEC  02A5               	subwf	(___lwmod@counter),f
  7381  0CED  1D03               	btfss	status,2
  7382  0CEE  2CF0               	goto	u414_21
  7383  0CEF  2CF1               	goto	u414_20
  7384  0CF0                     u414_21:
  7385  0CF0  2CD3               	goto	i1l10580
  7386  0CF1                     u414_20:
  7387  0CF1  2CF3               	goto	i1l10588
  7388                           	
  7389  0CF2                     i1l7382:	
  7390  0CF2  2CF3               	goto	i1l10588
  7391                           	line	19
  7392                           	
  7393  0CF3                     i1l7376:	
  7394                           	line	20
  7395                           	
  7396  0CF3                     i1l10588:	
  7397  0CF3  0823               	movf	(___lwmod@dividend+1),w
  7398  0CF4  01A1               	clrf	(?___lwmod+1)
  7399  0CF5  07A1               	addwf	(?___lwmod+1)
  7400  0CF6  0822               	movf	(___lwmod@dividend),w
  7401  0CF7  01A0               	clrf	(?___lwmod)
  7402  0CF8  07A0               	addwf	(?___lwmod)
  7403                           
  7404  0CF9  2CFA               	goto	i1l7383
  7405                           	
  7406  0CFA                     i1l10590:	
  7407                           	line	21
  7408                           	
  7409  0CFA                     i1l7383:	
  7410  0CFA  0008               	return
  7411                           	opt stack 0
  7412                           GLOBAL	__end_of___lwmod
  7413  0CFB                     	__end_of___lwmod:
  7414 ;; =============== function ___lwmod ends ============
  7415                           
  7416                           	signat	___lwmod,8314
  7417                           	global	___lwdiv
  7418                           psect	text738,local,class=CODE,delta=2
  7419                           global __ptext738
  7420  0D42                     __ptext738:
  7421                           
  7422 ;; *************** function ___lwdiv *****************
  7423 ;; Defined at:
  7424 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  divisor         2    6[COMMON] unsigned int 
  7427 ;;  dividend        2    8[COMMON] unsigned int 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;  quotient        2   11[COMMON] unsigned int 
  7430 ;;  counter         1   13[COMMON] unsigned char 
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  2    6[COMMON] unsigned int 
  7433 ;; Registers used:
  7434 ;;		wreg, status,2, status,0
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7440 ;;      Params:         4       0       0       0       0
  7441 ;;      Locals:         3       0       0       0       0
  7442 ;;      Temps:          1       0       0       0       0
  7443 ;;      Totals:         8       0       0       0       0
  7444 ;;Total ram usage:        8 bytes
  7445 ;; Hardware stack levels used:    1
  7446 ;; This function calls:
  7447 ;;		Nothing
  7448 ;; This function is called by:
  7449 ;;		_readAvgDistance
  7450 ;;		_ADCconvert
  7451 ;;		_sprintf
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           psect	text738
  7455                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7456                           	line	5
  7457                           	global	__size_of___lwdiv
  7458  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7459                           	
  7460  0D42                     ___lwdiv:	
  7461                           	opt	stack 1
  7462                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7463                           	line	9
  7464                           	
  7465  0D42                     i1l10544:	
  7466  0D42  01FB               	clrf	(___lwdiv@quotient)
  7467  0D43  01FC               	clrf	(___lwdiv@quotient+1)
  7468                           	line	10
  7469                           	
  7470  0D44                     i1l10546:	
  7471  0D44  0877               	movf	(___lwdiv@divisor+1),w
  7472  0D45  0476               	iorwf	(___lwdiv@divisor),w
  7473  0D46  1903               	skipnz
  7474  0D47  2D49               	goto	u402_21
  7475  0D48  2D4A               	goto	u402_20
  7476  0D49                     u402_21:
  7477  0D49  2D88               	goto	i1l10566
  7478  0D4A                     u402_20:
  7479                           	line	11
  7480                           	
  7481  0D4A                     i1l10548:	
  7482  0D4A  01FD               	clrf	(___lwdiv@counter)
  7483  0D4B  1403               	bsf	status,0
  7484  0D4C  0DFD               	rlf	(___lwdiv@counter),f
  7485                           	line	12
  7486  0D4D  2D5A               	goto	i1l10554
  7487                           	
  7488  0D4E                     i1l7368:	
  7489                           	line	13
  7490                           	
  7491  0D4E                     i1l10550:	
  7492  0D4E  3001               	movlw	01h
  7493                           	
  7494  0D4F                     u403_25:
  7495  0D4F  1003               	clrc
  7496  0D50  0DF6               	rlf	(___lwdiv@divisor),f
  7497  0D51  0DF7               	rlf	(___lwdiv@divisor+1),f
  7498  0D52  3EFF               	addlw	-1
  7499  0D53  1D03               	skipz
  7500  0D54  2D4F               	goto	u403_25
  7501                           	line	14
  7502                           	
  7503  0D55                     i1l10552:	
  7504  0D55  3001               	movlw	(01h)
  7505  0D56  00FA               	movwf	(??___lwdiv+0)+0
  7506  0D57  087A               	movf	(??___lwdiv+0)+0,w
  7507  0D58  07FD               	addwf	(___lwdiv@counter),f
  7508  0D59  2D5A               	goto	i1l10554
  7509                           	line	15
  7510                           	
  7511  0D5A                     i1l7367:	
  7512                           	line	12
  7513                           	
  7514  0D5A                     i1l10554:	
  7515  0D5A  1FF7               	btfss	(___lwdiv@divisor+1),(15)&7
  7516  0D5B  2D5D               	goto	u404_21
  7517  0D5C  2D5E               	goto	u404_20
  7518  0D5D                     u404_21:
  7519  0D5D  2D4E               	goto	i1l10550
  7520  0D5E                     u404_20:
  7521  0D5E  2D60               	goto	i1l10556
  7522                           	
  7523  0D5F                     i1l7369:	
  7524  0D5F  2D60               	goto	i1l10556
  7525                           	line	16
  7526                           	
  7527  0D60                     i1l7370:	
  7528                           	line	17
  7529                           	
  7530  0D60                     i1l10556:	
  7531  0D60  3001               	movlw	01h
  7532                           	
  7533  0D61                     u405_25:
  7534  0D61  1003               	clrc
  7535  0D62  0DFB               	rlf	(___lwdiv@quotient),f
  7536  0D63  0DFC               	rlf	(___lwdiv@quotient+1),f
  7537  0D64  3EFF               	addlw	-1
  7538  0D65  1D03               	skipz
  7539  0D66  2D61               	goto	u405_25
  7540                           	line	18
  7541  0D67  0877               	movf	(___lwdiv@divisor+1),w
  7542  0D68  0279               	subwf	(___lwdiv@dividend+1),w
  7543  0D69  1D03               	skipz
  7544  0D6A  2D6D               	goto	u406_25
  7545  0D6B  0876               	movf	(___lwdiv@divisor),w
  7546  0D6C  0278               	subwf	(___lwdiv@dividend),w
  7547  0D6D                     u406_25:
  7548  0D6D  1C03               	skipc
  7549  0D6E  2D70               	goto	u406_21
  7550  0D6F  2D71               	goto	u406_20
  7551  0D70                     u406_21:
  7552  0D70  2D79               	goto	i1l10562
  7553  0D71                     u406_20:
  7554                           	line	19
  7555                           	
  7556  0D71                     i1l10558:	
  7557  0D71  0876               	movf	(___lwdiv@divisor),w
  7558  0D72  02F8               	subwf	(___lwdiv@dividend),f
  7559  0D73  0877               	movf	(___lwdiv@divisor+1),w
  7560  0D74  1C03               	skipc
  7561  0D75  03F9               	decf	(___lwdiv@dividend+1),f
  7562  0D76  02F9               	subwf	(___lwdiv@dividend+1),f
  7563                           	line	20
  7564                           	
  7565  0D77                     i1l10560:	
  7566  0D77  147B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  7567  0D78  2D79               	goto	i1l10562
  7568                           	line	21
  7569                           	
  7570  0D79                     i1l7371:	
  7571                           	line	22
  7572                           	
  7573  0D79                     i1l10562:	
  7574  0D79  3001               	movlw	01h
  7575                           	
  7576  0D7A                     u407_25:
  7577  0D7A  1003               	clrc
  7578  0D7B  0CF7               	rrf	(___lwdiv@divisor+1),f
  7579  0D7C  0CF6               	rrf	(___lwdiv@divisor),f
  7580  0D7D  3EFF               	addlw	-1
  7581  0D7E  1D03               	skipz
  7582  0D7F  2D7A               	goto	u407_25
  7583                           	line	23
  7584                           	
  7585  0D80                     i1l10564:	
  7586  0D80  3001               	movlw	low(01h)
  7587  0D81  02FD               	subwf	(___lwdiv@counter),f
  7588  0D82  1D03               	btfss	status,2
  7589  0D83  2D85               	goto	u408_21
  7590  0D84  2D86               	goto	u408_20
  7591  0D85                     u408_21:
  7592  0D85  2D60               	goto	i1l10556
  7593  0D86                     u408_20:
  7594  0D86  2D88               	goto	i1l10566
  7595                           	
  7596  0D87                     i1l7372:	
  7597  0D87  2D88               	goto	i1l10566
  7598                           	line	24
  7599                           	
  7600  0D88                     i1l7366:	
  7601                           	line	25
  7602                           	
  7603  0D88                     i1l10566:	
  7604  0D88  087C               	movf	(___lwdiv@quotient+1),w
  7605  0D89  01F7               	clrf	(?___lwdiv+1)
  7606  0D8A  07F7               	addwf	(?___lwdiv+1)
  7607  0D8B  087B               	movf	(___lwdiv@quotient),w
  7608  0D8C  01F6               	clrf	(?___lwdiv)
  7609  0D8D  07F6               	addwf	(?___lwdiv)
  7610                           
  7611  0D8E  2D8F               	goto	i1l7373
  7612                           	
  7613  0D8F                     i1l10568:	
  7614                           	line	26
  7615                           	
  7616  0D8F                     i1l7373:	
  7617  0D8F  0008               	return
  7618                           	opt stack 0
  7619                           GLOBAL	__end_of___lwdiv
  7620  0D90                     	__end_of___lwdiv:
  7621 ;; =============== function ___lwdiv ends ============
  7622                           
  7623                           	signat	___lwdiv,8314
  7624                           	global	___wmul
  7625                           psect	text739,local,class=CODE,delta=2
  7626                           global __ptext739
  7627  0B40                     __ptext739:
  7628                           
  7629 ;; *************** function ___wmul *****************
  7630 ;; Defined at:
  7631 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  multiplier      2    0[COMMON] unsigned int 
  7634 ;;  multiplicand    2    2[COMMON] unsigned int 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  product         2    4[COMMON] unsigned int 
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  2    0[COMMON] unsigned int 
  7639 ;; Registers used:
  7640 ;;		wreg, status,2, status,0
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7646 ;;      Params:         4       0       0       0       0
  7647 ;;      Locals:         2       0       0       0       0
  7648 ;;      Temps:          0       0       0       0       0
  7649 ;;      Totals:         6       0       0       0       0
  7650 ;;Total ram usage:        6 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; This function calls:
  7653 ;;		Nothing
  7654 ;; This function is called by:
  7655 ;;		_ADCconvert
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           psect	text739
  7659                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7660                           	line	3
  7661                           	global	__size_of___wmul
  7662  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7663                           	
  7664  0B40                     ___wmul:	
  7665                           	opt	stack 1
  7666                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7667                           	line	4
  7668                           	
  7669  0B40                     i1l10532:	
  7670  0B40  01F4               	clrf	(___wmul@product)
  7671  0B41  01F5               	clrf	(___wmul@product+1)
  7672  0B42  2B43               	goto	i1l10534
  7673                           	line	6
  7674                           	
  7675  0B43                     i1l7360:	
  7676                           	line	7
  7677                           	
  7678  0B43                     i1l10534:	
  7679  0B43  1C70               	btfss	(___wmul@multiplier),(0)&7
  7680  0B44  2B46               	goto	u398_21
  7681  0B45  2B47               	goto	u398_20
  7682  0B46                     u398_21:
  7683  0B46  2B4D               	goto	i1l7361
  7684  0B47                     u398_20:
  7685                           	line	8
  7686                           	
  7687  0B47                     i1l10536:	
  7688  0B47  0872               	movf	(___wmul@multiplicand),w
  7689  0B48  07F4               	addwf	(___wmul@product),f
  7690  0B49  1803               	skipnc
  7691  0B4A  0AF5               	incf	(___wmul@product+1),f
  7692  0B4B  0873               	movf	(___wmul@multiplicand+1),w
  7693  0B4C  07F5               	addwf	(___wmul@product+1),f
  7694                           	
  7695  0B4D                     i1l7361:	
  7696                           	line	9
  7697  0B4D  3001               	movlw	01h
  7698                           	
  7699  0B4E                     u399_25:
  7700  0B4E  1003               	clrc
  7701  0B4F  0DF2               	rlf	(___wmul@multiplicand),f
  7702  0B50  0DF3               	rlf	(___wmul@multiplicand+1),f
  7703  0B51  3EFF               	addlw	-1
  7704  0B52  1D03               	skipz
  7705  0B53  2B4E               	goto	u399_25
  7706                           	line	10
  7707                           	
  7708  0B54                     i1l10538:	
  7709  0B54  3001               	movlw	01h
  7710                           	
  7711  0B55                     u400_25:
  7712  0B55  1003               	clrc
  7713  0B56  0CF1               	rrf	(___wmul@multiplier+1),f
  7714  0B57  0CF0               	rrf	(___wmul@multiplier),f
  7715  0B58  3EFF               	addlw	-1
  7716  0B59  1D03               	skipz
  7717  0B5A  2B55               	goto	u400_25
  7718                           	line	11
  7719  0B5B  0871               	movf	((___wmul@multiplier+1)),w
  7720  0B5C  0470               	iorwf	((___wmul@multiplier)),w
  7721  0B5D  1D03               	skipz
  7722  0B5E  2B60               	goto	u401_21
  7723  0B5F  2B61               	goto	u401_20
  7724  0B60                     u401_21:
  7725  0B60  2B43               	goto	i1l10534
  7726  0B61                     u401_20:
  7727  0B61  2B62               	goto	i1l10540
  7728                           	
  7729  0B62                     i1l7362:	
  7730                           	line	12
  7731                           	
  7732  0B62                     i1l10540:	
  7733  0B62  0875               	movf	(___wmul@product+1),w
  7734  0B63  01F1               	clrf	(?___wmul+1)
  7735  0B64  07F1               	addwf	(?___wmul+1)
  7736  0B65  0874               	movf	(___wmul@product),w
  7737  0B66  01F0               	clrf	(?___wmul)
  7738  0B67  07F0               	addwf	(?___wmul)
  7739                           
  7740  0B68  2B69               	goto	i1l7363
  7741                           	
  7742  0B69                     i1l10542:	
  7743                           	line	13
  7744                           	
  7745  0B69                     i1l7363:	
  7746  0B69  0008               	return
  7747                           	opt stack 0
  7748                           GLOBAL	__end_of___wmul
  7749  0B6A                     	__end_of___wmul:
  7750 ;; =============== function ___wmul ends ============
  7751                           
  7752                           	signat	___wmul,8314
  7753                           	global	_Debounce
  7754                           psect	text740,local,class=CODE,delta=2
  7755                           global __ptext740
  7756  0E4B                     __ptext740:
  7757                           
  7758 ;; *************** function _Debounce *****************
  7759 ;; Defined at:
  7760 ;;		line 61 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;		None               void
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7774 ;;      Params:         0       0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0
  7776 ;;      Temps:          1       0       0       0       0
  7777 ;;      Totals:         1       0       0       0       0
  7778 ;;Total ram usage:        1 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_ReadButtons
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           psect	text740
  7787                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  7788                           	line	61
  7789                           	global	__size_of_Debounce
  7790  007C                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  7791                           	
  7792  0E4B                     _Debounce:	
  7793                           	opt	stack 2
  7794                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  7795                           	line	63
  7796                           	
  7797  0E4B                     i1l10418:	
  7798                           ;HMI.c: 63: if(!RB2)
  7799  0E4B  1283               	bcf	status, 5	;RP0=0, select bank0
  7800  0E4C  1303               	bcf	status, 6	;RP1=0, select bank0
  7801  0E4D  1906               	btfsc	(50/8),(50)&7
  7802  0E4E  2E50               	goto	u373_21
  7803  0E4F  2E51               	goto	u373_20
  7804  0E50                     u373_21:
  7805  0E50  2E63               	goto	i1l5151
  7806  0E51                     u373_20:
  7807                           	line	65
  7808                           	
  7809  0E51                     i1l10420:	
  7810                           ;HMI.c: 64: {
  7811                           ;HMI.c: 65: UpDebounceCount++;
  7812  0E51  3001               	movlw	(01h)
  7813  0E52  00F0               	movwf	(??_Debounce+0)+0
  7814  0E53  0870               	movf	(??_Debounce+0)+0,w
  7815  0E54  07E1               	addwf	(_UpDebounceCount),f	;volatile
  7816                           	line	66
  7817                           	
  7818  0E55                     i1l10422:	
  7819                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  7820  0E55  300A               	movlw	(0Ah)
  7821  0E56  0261               	subwf	(_UpDebounceCount),w	;volatile
  7822  0E57  1C03               	skipc
  7823  0E58  2E5A               	goto	u374_21
  7824  0E59  2E5B               	goto	u374_20
  7825  0E5A                     u374_21:
  7826  0E5A  2E65               	goto	i1l5153
  7827  0E5B                     u374_20:
  7828                           	
  7829  0E5B                     i1l10424:	
  7830  0E5B  1F6D               	btfss	(_UpReleased/8),(_UpReleased)&7
  7831  0E5C  2E5E               	goto	u375_21
  7832  0E5D  2E5F               	goto	u375_20
  7833  0E5E                     u375_21:
  7834  0E5E  2E65               	goto	i1l5153
  7835  0E5F                     u375_20:
  7836                           	line	68
  7837                           	
  7838  0E5F                     i1l10426:	
  7839                           ;HMI.c: 67: {
  7840                           ;HMI.c: 68: UpPressed = 1;
  7841  0E5F  16ED               	bsf	(_UpPressed/8),(_UpPressed)&7
  7842                           	line	69
  7843                           ;HMI.c: 69: UpReleased = 0;
  7844  0E60  136D               	bcf	(_UpReleased/8),(_UpReleased)&7
  7845  0E61  2E65               	goto	i1l5153
  7846                           	line	70
  7847                           	
  7848  0E62                     i1l5152:	
  7849                           	line	71
  7850                           ;HMI.c: 70: }
  7851                           ;HMI.c: 71: }
  7852  0E62  2E65               	goto	i1l5153
  7853                           	line	72
  7854                           	
  7855  0E63                     i1l5151:	
  7856                           	line	74
  7857                           ;HMI.c: 72: else
  7858                           ;HMI.c: 73: {
  7859                           ;HMI.c: 74: UpDebounceCount = 0;
  7860  0E63  01E1               	clrf	(_UpDebounceCount)	;volatile
  7861                           	line	75
  7862                           ;HMI.c: 75: UpReleased = 1;
  7863  0E64  176D               	bsf	(_UpReleased/8),(_UpReleased)&7
  7864                           	line	76
  7865                           	
  7866  0E65                     i1l5153:	
  7867                           	line	79
  7868                           ;HMI.c: 76: }
  7869                           ;HMI.c: 79: if(!RB3)
  7870  0E65  1986               	btfsc	(51/8),(51)&7
  7871  0E66  2E68               	goto	u376_21
  7872  0E67  2E69               	goto	u376_20
  7873  0E68                     u376_21:
  7874  0E68  2E7B               	goto	i1l5154
  7875  0E69                     u376_20:
  7876                           	line	81
  7877                           	
  7878  0E69                     i1l10428:	
  7879                           ;HMI.c: 80: {
  7880                           ;HMI.c: 81: DownDebounceCount++;
  7881  0E69  3001               	movlw	(01h)
  7882  0E6A  00F0               	movwf	(??_Debounce+0)+0
  7883  0E6B  0870               	movf	(??_Debounce+0)+0,w
  7884  0E6C  07DE               	addwf	(_DownDebounceCount),f	;volatile
  7885                           	line	82
  7886                           	
  7887  0E6D                     i1l10430:	
  7888                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  7889  0E6D  300A               	movlw	(0Ah)
  7890  0E6E  025E               	subwf	(_DownDebounceCount),w	;volatile
  7891  0E6F  1C03               	skipc
  7892  0E70  2E72               	goto	u377_21
  7893  0E71  2E73               	goto	u377_20
  7894  0E72                     u377_21:
  7895  0E72  2E7D               	goto	i1l5156
  7896  0E73                     u377_20:
  7897                           	
  7898  0E73                     i1l10432:	
  7899  0E73  1DEC               	btfss	(_DownReleased/8),(_DownReleased)&7
  7900  0E74  2E76               	goto	u378_21
  7901  0E75  2E77               	goto	u378_20
  7902  0E76                     u378_21:
  7903  0E76  2E7D               	goto	i1l5156
  7904  0E77                     u378_20:
  7905                           	line	84
  7906                           	
  7907  0E77                     i1l10434:	
  7908                           ;HMI.c: 83: {
  7909                           ;HMI.c: 84: DownPressed = 1;
  7910  0E77  156C               	bsf	(_DownPressed/8),(_DownPressed)&7
  7911                           	line	85
  7912                           ;HMI.c: 85: DownReleased = 0;
  7913  0E78  11EC               	bcf	(_DownReleased/8),(_DownReleased)&7
  7914  0E79  2E7D               	goto	i1l5156
  7915                           	line	86
  7916                           	
  7917  0E7A                     i1l5155:	
  7918                           	line	87
  7919                           ;HMI.c: 86: }
  7920                           ;HMI.c: 87: }
  7921  0E7A  2E7D               	goto	i1l5156
  7922                           	line	88
  7923                           	
  7924  0E7B                     i1l5154:	
  7925                           	line	90
  7926                           ;HMI.c: 88: else
  7927                           ;HMI.c: 89: {
  7928                           ;HMI.c: 90: DownDebounceCount = 0;
  7929  0E7B  01DE               	clrf	(_DownDebounceCount)	;volatile
  7930                           	line	91
  7931                           ;HMI.c: 91: DownReleased = 1;
  7932  0E7C  15EC               	bsf	(_DownReleased/8),(_DownReleased)&7
  7933                           	line	92
  7934                           	
  7935  0E7D                     i1l5156:	
  7936                           	line	94
  7937                           ;HMI.c: 92: }
  7938                           ;HMI.c: 94: if(!RB4)
  7939  0E7D  1A06               	btfsc	(52/8),(52)&7
  7940  0E7E  2E80               	goto	u379_21
  7941  0E7F  2E81               	goto	u379_20
  7942  0E80                     u379_21:
  7943  0E80  2E93               	goto	i1l5157
  7944  0E81                     u379_20:
  7945                           	line	96
  7946                           	
  7947  0E81                     i1l10436:	
  7948                           ;HMI.c: 95: {
  7949                           ;HMI.c: 96: LeftDebounceCount++;
  7950  0E81  3001               	movlw	(01h)
  7951  0E82  00F0               	movwf	(??_Debounce+0)+0
  7952  0E83  0870               	movf	(??_Debounce+0)+0,w
  7953  0E84  07DF               	addwf	(_LeftDebounceCount),f	;volatile
  7954                           	line	97
  7955                           	
  7956  0E85                     i1l10438:	
  7957                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  7958  0E85  300A               	movlw	(0Ah)
  7959  0E86  025F               	subwf	(_LeftDebounceCount),w	;volatile
  7960  0E87  1C03               	skipc
  7961  0E88  2E8A               	goto	u380_21
  7962  0E89  2E8B               	goto	u380_20
  7963  0E8A                     u380_21:
  7964  0E8A  2E95               	goto	i1l5159
  7965  0E8B                     u380_20:
  7966                           	
  7967  0E8B                     i1l10440:	
  7968  0E8B  1EEC               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  7969  0E8C  2E8E               	goto	u381_21
  7970  0E8D  2E8F               	goto	u381_20
  7971  0E8E                     u381_21:
  7972  0E8E  2E95               	goto	i1l5159
  7973  0E8F                     u381_20:
  7974                           	line	99
  7975                           	
  7976  0E8F                     i1l10442:	
  7977                           ;HMI.c: 98: {
  7978                           ;HMI.c: 99: LeftPressed = 1;
  7979  0E8F  166C               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  7980                           	line	100
  7981                           ;HMI.c: 100: LeftReleased = 0;
  7982  0E90  12EC               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  7983  0E91  2E95               	goto	i1l5159
  7984                           	line	101
  7985                           	
  7986  0E92                     i1l5158:	
  7987                           	line	102
  7988                           ;HMI.c: 101: }
  7989                           ;HMI.c: 102: }
  7990  0E92  2E95               	goto	i1l5159
  7991                           	line	103
  7992                           	
  7993  0E93                     i1l5157:	
  7994                           	line	105
  7995                           ;HMI.c: 103: else
  7996                           ;HMI.c: 104: {
  7997                           ;HMI.c: 105: LeftDebounceCount = 0;
  7998  0E93  01DF               	clrf	(_LeftDebounceCount)	;volatile
  7999                           	line	106
  8000                           ;HMI.c: 106: LeftReleased = 1;
  8001  0E94  16EC               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  8002                           	line	107
  8003                           	
  8004  0E95                     i1l5159:	
  8005                           	line	109
  8006                           ;HMI.c: 107: }
  8007                           ;HMI.c: 109: if(!RB5)
  8008  0E95  1A86               	btfsc	(53/8),(53)&7
  8009  0E96  2E98               	goto	u382_21
  8010  0E97  2E99               	goto	u382_20
  8011  0E98                     u382_21:
  8012  0E98  2EAB               	goto	i1l5160
  8013  0E99                     u382_20:
  8014                           	line	111
  8015                           	
  8016  0E99                     i1l10444:	
  8017                           ;HMI.c: 110: {
  8018                           ;HMI.c: 111: RightDebounceCount++;
  8019  0E99  3001               	movlw	(01h)
  8020  0E9A  00F0               	movwf	(??_Debounce+0)+0
  8021  0E9B  0870               	movf	(??_Debounce+0)+0,w
  8022  0E9C  07E0               	addwf	(_RightDebounceCount),f	;volatile
  8023                           	line	112
  8024                           	
  8025  0E9D                     i1l10446:	
  8026                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  8027  0E9D  300A               	movlw	(0Ah)
  8028  0E9E  0260               	subwf	(_RightDebounceCount),w	;volatile
  8029  0E9F  1C03               	skipc
  8030  0EA0  2EA2               	goto	u383_21
  8031  0EA1  2EA3               	goto	u383_20
  8032  0EA2                     u383_21:
  8033  0EA2  2EAD               	goto	i1l5162
  8034  0EA3                     u383_20:
  8035                           	
  8036  0EA3                     i1l10448:	
  8037  0EA3  1E6D               	btfss	(_RightReleased/8),(_RightReleased)&7
  8038  0EA4  2EA6               	goto	u384_21
  8039  0EA5  2EA7               	goto	u384_20
  8040  0EA6                     u384_21:
  8041  0EA6  2EAD               	goto	i1l5162
  8042  0EA7                     u384_20:
  8043                           	line	114
  8044                           	
  8045  0EA7                     i1l10450:	
  8046                           ;HMI.c: 113: {
  8047                           ;HMI.c: 114: RightPressed = 1;
  8048  0EA7  15ED               	bsf	(_RightPressed/8),(_RightPressed)&7
  8049                           	line	115
  8050                           ;HMI.c: 115: RightReleased = 0;
  8051  0EA8  126D               	bcf	(_RightReleased/8),(_RightReleased)&7
  8052  0EA9  2EAD               	goto	i1l5162
  8053                           	line	116
  8054                           	
  8055  0EAA                     i1l5161:	
  8056                           	line	117
  8057                           ;HMI.c: 116: }
  8058                           ;HMI.c: 117: }
  8059  0EAA  2EAD               	goto	i1l5162
  8060                           	line	118
  8061                           	
  8062  0EAB                     i1l5160:	
  8063                           	line	120
  8064                           ;HMI.c: 118: else
  8065                           ;HMI.c: 119: {
  8066                           ;HMI.c: 120: RightDebounceCount = 0;
  8067  0EAB  01E0               	clrf	(_RightDebounceCount)	;volatile
  8068                           	line	121
  8069                           ;HMI.c: 121: RightReleased = 1;
  8070  0EAC  166D               	bsf	(_RightReleased/8),(_RightReleased)&7
  8071                           	line	122
  8072                           	
  8073  0EAD                     i1l5162:	
  8074                           	line	124
  8075                           ;HMI.c: 122: }
  8076                           ;HMI.c: 124: if(!RB6)
  8077  0EAD  1B06               	btfsc	(54/8),(54)&7
  8078  0EAE  2EB0               	goto	u385_21
  8079  0EAF  2EB1               	goto	u385_20
  8080  0EB0                     u385_21:
  8081  0EB0  2EC3               	goto	i1l5163
  8082  0EB1                     u385_20:
  8083                           	line	126
  8084                           	
  8085  0EB1                     i1l10452:	
  8086                           ;HMI.c: 125: {
  8087                           ;HMI.c: 126: CenterDebounceCount++;
  8088  0EB1  3001               	movlw	(01h)
  8089  0EB2  00F0               	movwf	(??_Debounce+0)+0
  8090  0EB3  0870               	movf	(??_Debounce+0)+0,w
  8091  0EB4  07DD               	addwf	(_CenterDebounceCount),f	;volatile
  8092                           	line	127
  8093                           	
  8094  0EB5                     i1l10454:	
  8095                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  8096  0EB5  300A               	movlw	(0Ah)
  8097  0EB6  025D               	subwf	(_CenterDebounceCount),w	;volatile
  8098  0EB7  1C03               	skipc
  8099  0EB8  2EBA               	goto	u386_21
  8100  0EB9  2EBB               	goto	u386_20
  8101  0EBA                     u386_21:
  8102  0EBA  2EC6               	goto	i1l5166
  8103  0EBB                     u386_20:
  8104                           	
  8105  0EBB                     i1l10456:	
  8106  0EBB  1CEC               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  8107  0EBC  2EBE               	goto	u387_21
  8108  0EBD  2EBF               	goto	u387_20
  8109  0EBE                     u387_21:
  8110  0EBE  2EC6               	goto	i1l5166
  8111  0EBF                     u387_20:
  8112                           	line	129
  8113                           	
  8114  0EBF                     i1l10458:	
  8115                           ;HMI.c: 128: {
  8116                           ;HMI.c: 129: CenterPressed = 1;
  8117  0EBF  146C               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  8118                           	line	130
  8119                           ;HMI.c: 130: CenterReleased = 0;
  8120  0EC0  10EC               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  8121  0EC1  2EC6               	goto	i1l5166
  8122                           	line	131
  8123                           	
  8124  0EC2                     i1l5164:	
  8125                           	line	132
  8126                           ;HMI.c: 131: }
  8127                           ;HMI.c: 132: }
  8128  0EC2  2EC6               	goto	i1l5166
  8129                           	line	133
  8130                           	
  8131  0EC3                     i1l5163:	
  8132                           	line	135
  8133                           ;HMI.c: 133: else
  8134                           ;HMI.c: 134: {
  8135                           ;HMI.c: 135: CenterDebounceCount = 0;
  8136  0EC3  01DD               	clrf	(_CenterDebounceCount)	;volatile
  8137                           	line	136
  8138                           ;HMI.c: 136: CenterReleased = 1;
  8139  0EC4  14EC               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  8140  0EC5  2EC6               	goto	i1l5166
  8141                           	line	137
  8142                           	
  8143  0EC6                     i1l5165:	
  8144                           	line	138
  8145                           	
  8146  0EC6                     i1l5166:	
  8147  0EC6  0008               	return
  8148                           	opt stack 0
  8149                           GLOBAL	__end_of_Debounce
  8150  0EC7                     	__end_of_Debounce:
  8151 ;; =============== function _Debounce ends ============
  8152                           
  8153                           	signat	_Debounce,88
  8154                           	global	_adc_read
  8155                           psect	text741,local,class=CODE,delta=2
  8156                           global __ptext741
  8157  0AF1                     __ptext741:
  8158                           
  8159 ;; *************** function _adc_read *****************
  8160 ;; Defined at:
  8161 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;		None
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  adc_value       2    4[COMMON] volatile unsigned int 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  2    0[COMMON] unsigned int 
  8168 ;; Registers used:
  8169 ;;		wreg, status,2, status,0
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8175 ;;      Params:         2       0       0       0       0
  8176 ;;      Locals:         2       0       0       0       0
  8177 ;;      Temps:          2       0       0       0       0
  8178 ;;      Totals:         6       0       0       0       0
  8179 ;;Total ram usage:        6 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; This function calls:
  8182 ;;		Nothing
  8183 ;; This function is called by:
  8184 ;;		_adc_read_channel
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           psect	text741
  8188                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  8189                           	line	61
  8190                           	global	__size_of_adc_read
  8191  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  8192                           	
  8193  0AF1                     _adc_read:	
  8194                           	opt	stack 0
  8195                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  8196                           	line	64
  8197                           	
  8198  0AF1                     i1l9982:	
  8199                           ;adc.c: 62: volatile unsigned int adc_value;
  8200                           ;adc.c: 64: ADRESH = 0;
  8201  0AF1  1283               	bcf	status, 5	;RP0=0, select bank0
  8202  0AF2  1303               	bcf	status, 6	;RP1=0, select bank0
  8203  0AF3  019E               	clrf	(30)	;volatile
  8204                           	line	66
  8205                           	
  8206  0AF4                     i1l9984:	
  8207                           ;adc.c: 66: GO = 1;
  8208  0AF4  151F               	bsf	(250/8),(250)&7
  8209                           	line	67
  8210                           ;adc.c: 67: while(GO) continue;
  8211  0AF5  2AF6               	goto	i1l703
  8212                           	
  8213  0AF6                     i1l704:	
  8214                           	
  8215  0AF6                     i1l703:	
  8216  0AF6  191F               	btfsc	(250/8),(250)&7
  8217  0AF7  2AF9               	goto	u317_21
  8218  0AF8  2AFA               	goto	u317_20
  8219  0AF9                     u317_21:
  8220  0AF9  2AF6               	goto	i1l703
  8221  0AFA                     u317_20:
  8222                           	
  8223  0AFA                     i1l705:	
  8224                           	line	68
  8225                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  8226  0AFA  0000               nop ;#
  8227                           	line	69
  8228                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  8229  0AFB  0000               nop ;#
  8230                           	line	70
  8231                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  8232  0AFC  0000               nop ;#
  8233                           psect	text741
  8234                           	line	73
  8235                           	
  8236  0AFD                     i1l9986:	
  8237                           ;adc.c: 73: adc_value = ADRESH;
  8238  0AFD  1283               	bcf	status, 5	;RP0=0, select bank0
  8239  0AFE  1303               	bcf	status, 6	;RP1=0, select bank0
  8240  0AFF  081E               	movf	(30),w	;volatile
  8241  0B00  00F2               	movwf	(??_adc_read+0)+0
  8242  0B01  01F3               	clrf	(??_adc_read+0)+0+1
  8243  0B02  0872               	movf	0+(??_adc_read+0)+0,w
  8244  0B03  00F4               	movwf	(adc_read@adc_value)	;volatile
  8245  0B04  0873               	movf	1+(??_adc_read+0)+0,w
  8246  0B05  00F5               	movwf	(adc_read@adc_value+1)	;volatile
  8247                           	line	74
  8248                           ;adc.c: 74: adc_value <<= 1;
  8249  0B06  3001               	movlw	01h
  8250                           	
  8251  0B07                     u318_25:
  8252  0B07  1003               	clrc
  8253  0B08  0DF4               	rlf	(adc_read@adc_value),f	;volatile
  8254  0B09  0DF5               	rlf	(adc_read@adc_value+1),f	;volatile
  8255  0B0A  3EFF               	addlw	-1
  8256  0B0B  1D03               	skipz
  8257  0B0C  2B07               	goto	u318_25
  8258                           	line	75
  8259                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  8260  0B0D  1683               	bsf	status, 5	;RP0=1, select bank1
  8261  0B0E  1303               	bcf	status, 6	;RP1=0, select bank1
  8262  0B0F  081E               	movf	(158)^080h,w	;volatile
  8263                           	line	78
  8264                           	
  8265  0B10                     i1l9988:	
  8266                           ;adc.c: 78: return (adc_value);
  8267  0B10  0875               	movf	(adc_read@adc_value+1),w	;volatile
  8268  0B11  01F1               	clrf	(?_adc_read+1)
  8269  0B12  07F1               	addwf	(?_adc_read+1)
  8270  0B13  0874               	movf	(adc_read@adc_value),w	;volatile
  8271  0B14  01F0               	clrf	(?_adc_read)
  8272  0B15  07F0               	addwf	(?_adc_read)
  8273                           
  8274  0B16  2B17               	goto	i1l706
  8275                           	
  8276  0B17                     i1l9990:	
  8277                           	line	79
  8278                           	
  8279  0B17                     i1l706:	
  8280  0B17  0008               	return
  8281                           	opt stack 0
  8282                           GLOBAL	__end_of_adc_read
  8283  0B18                     	__end_of_adc_read:
  8284 ;; =============== function _adc_read ends ============
  8285                           
  8286                           	signat	_adc_read,90
  8287                           psect	text742,local,class=CODE,delta=2
  8288                           global __ptext742
  8289  0000                     __ptext742:
  8290                           	global	btemp
  8291  007E                     	btemp set 07Eh
  8292                           
  8293                           	DABS	1,126,2	;btemp
  8294                           	global	wtemp0
  8295  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Apr 20 16:12:51 2015

   __end_of_lcd_write_control 0AD3               ??_UpdateDisplay 0037                             pc 0002  
                          _GO 00FA                            _RD 0C60                            _WR 0C61  
                          fsr 0004           ___wmul@multiplicand 0072                           l700 0A9D  
                         _CS0 0038                           _CS1 0039                           _GIE 005F  
                         _RB0 0030                           _RC0 0038                           _RB2 0032  
                         _RC1 0039                           _RB3 0033                           _RC2 003A  
                         _RB4 0034                           _RB5 0035                           _RE0 0048  
                         _RB6 0036                           _RE1 0049                           _RE2 004A  
                         _RX9 00C6                           _TX9 04C6                           _pos 0059  
                         fsr0 0004                           indf 0000                  ___awmod@sign 0076  
             ?_lcd_set_cursor 0070                          l2203 0C13                          l2220 0059  
                        l2212 001B                          l2221 0389                          l2213 005B  
                        l2206 0AE1                          l2230 03A4                          l2222 006E  
                        l2214 0022                          l2207 0AE1                          l2231 03A4  
                        l2223 039C                          l2215 006D                          l2208 0AE6  
                        l2224 0082                          l2216 002C                          l2209 0AF0  
                        l2225 013D                          l2217 0036                          l2226 01F8  
                        l2218 0040                          l2227 0361                          l2219 004A  
                        l2228 0387                          l1429 0BE8                          l2229 03A3  
                        l1399 0AD2                          l4404 0B3F                          l5180 0D00  
                        l4380 0C18                          l5181 0D01                          l4381 0C22  
                        l5182 0D12                          l4382 0C41                          l5183 0D13  
                        l5184 0D24                          l5177 0D2C                          l5185 0D25  
                        l5186 0D41                          l5178 0CFF                          l5179 0D3F  
                        l5187 0D2A                          l4379 0C19                          l6642 07AC  
                        l6643 07CA                          l6644 07FE                          l6639 0AB6  
                        l6647 0EF4                          l6648 0F12                          l6649 0F46  
                        _CHS0 00FB                          _CHS1 00FC                          _CHS2 00FD  
                        STR_1 0829                          STR_2 0830                          STR_3 0837  
                        STR_4 083E                          STR_5 0845                          STR_6 084C  
                        STR_7 0850                          STR_8 0854                          STR_9 0858  
                        _BRGH 04C2                          _CREN 00C4                          u3430 0AE5  
                        u3431 0AE4                          u3440 0D0D                          u4240 078D  
                        u3441 0D0C                          u4241 078C                          u3450 0D21  
                        u4250 0ED5                          u3451 0D20                          u4251 0ED4  
                        u4307 00F9                          u3460 0C22                          u3461 0C21  
                        u4317 0112                          u4407 0206                          u4327 012B  
                        u4417 021B                          u4337 0150                          u4507 02CC  
                        u4427 022A                          u4347 0169                          u4267 0095  
                        u4517 02E1                          u4437 0239                          u4357 0182  
                        u4277 00AE                          u4607 0A9B                          u4527 02F6  
                        u4447 024E                          u4367 019B                          u4287 00C7  
                        u4537 030B                          u4457 0263                          u4377 01B4  
                        u4297 00E0                          u4547 0320                          u4467 0278  
                        u4387 01CD                          _RCIE 0465                          _RCIF 0065  
                        u4557 0335                          u4477 028D                          u4397 01E6  
                        u4567 034A                          u4487 02A2                          u4577 0359  
                        u4497 02B7                          u4587 0374                          u4597 0ACD  
                        _OERR 00C1                          _TMR0 0001                          _SPEN 00C7  
                        _TXIE 0464                          _WREN 0C62                          _TXEN 04C5  
                        _TXIF 0064                          _SYNC 04C4           __size_of_ADCconvert 01EB  
                        _Menu 0CFB        __end_of_lcd_write_data 0A4F                          _isr1 0692  
                        _main 0015                          _init 0BE9                          btemp 007E  
              _CenterReleased 0361                          start 0012                 ??_ReadButtons 0071  
__size_ofi1_lcd_write_control 0014                         ?_Menu 0070                         l10200 0ADA  
                       l10202 0AE6                         l10210 0D01                         l10204 0AEC  
                       l10220 0D25                         l10212 0D09                         l10206 0AF0  
                       l10222 0D28                         l10214 0D0D                         l10230 0D3F  
                       l10232 0D41                         l10224 0D29                         l10216 0D13  
                       l10208 0CFE                         l10240 0C31                         l10226 0D2B  
                       l10218 0D21                         l10242 0C3D                         l10234 0C17  
                       l10180 0B22                         l10172 0B18                         l10228 0D2C  
                       l10244 0C40                         l10236 0C19                         l10190 0B2D  
                       l10182 0B23                         l10174 0B1B                         l10238 0C23  
                       l10192 0B30                         l10184 0B26                         l10176 0B1F  
                       l10194 0B31                         l10186 0B29                         l10178 0B20  
                       l10196 0B32                         l10188 0B2C                         l10700 0C01  
                       l10198 0AD6                         l10710 0C0D                         l10702 0C05  
                       l10640 0A95                         l10712 0C11                         l10704 0C07  
                       l10800 01F8                         l10720 0022                         l10642 0A99  
                       l10634 0A8A                         l10650 0AC6                         l10714 0C12  
                       l10706 0C0B                         l10810 025B                         l10802 01FE  
                       l10730 003C                         l10722 0028                         l10636 0A8D  
                       l10644 0ABA                         l10652 0A9E                         l10660 078D  
                       l10708 0C0C                         l10820 02A9                         l10812 026A  
                       l10804 020D                         l10740 005A                         l10732 0040  
                       l10724 002C                         l10716 0015                         l10638 0A91  
                       l10646 0ABF                         l10662 07AC                         l10654 0777  
                       l10670 0ED5                         l10830 02FD                         l10822 02BE  
                       l10814 027F                         l10806 0240                         l10750 007C  
                       l10734 0046                         l10726 0032                         l10742 005B  
                       l10718 001B                         l10648 0AC5                         l10656 077F  
                       l10672 0EF4                         l10664 0EC7                         l10680 0BC6  
                       l10840 0342                         l10832 0303                         l10824 02C4  
                       l10816 0285                         l10808 0246                         l10760 009B  
                       l10752 007D                         l10744 0072                         l10736 004A  
                       l10728 0036                         l10658 0787                         l10666 0ECD  
                       l10690 0BDC                         l10682 0BC9                         l10674 0BBE  
                       l10850 0388                         l10842 0351                         l10834 0318  
                       l10826 02D9                         l10818 029A                         l10770 00FF  
                       l10762 00B4                         l10754 007E                         l10746 0078  
                       l10738 0055                         l10668 0ED1                         l10692 0BE2  
                       l10684 0BCA                         l10676 0BC2                         l10844 0361  
                       l10836 0327                         l10828 02E8                         l10780 0148  
                       l10772 010A                         l10764 00BF                         l10756 0082  
                       l10748 007B                         l10852 0389                         l10686 0BD0  
                       l10678 0BC5                         l10694 0BE9                         l10846 036C  
                       l10838 033C                         l10790 01A1                         l10782 0156  
                       l10774 0123                         l10766 00D8                         l10758 008D  
                       l10854 039C                         l10688 0BD6                         l10696 0BF8  
                       l10848 037B                         l10792 01BA                         l10784 016F  
                       l10776 0131                         l10768 00E6                         l10698 0BFD  
                       l10794 01C5                         l10786 017A                         l10778 013D  
                       l10796 01DE                         l10788 0193                         l10798 01EC  
                       ?_isr1 0070                         ?_main 0070                         ?_init 0070  
                       _EEADR 010D                         STR_10 085C                         STR_11 081A  
             __end_of___awmod 0E4B                         _CARRY 0018               __end_of___lwdiv 0D90  
             __end_of___lwmod 0CFB                         i1l703 0AF6                         i1l704 0AF6  
                       i1l705 0AFA                         i1l706 0B17                         i1l690 0C76  
                       i1l691 0CA9                         i1l692 0C7C                         i1l693 0C82  
                       i1l694 0C88                         i1l695 0C8E                         i1l696 0C94  
                       i1l689 0C98                         i1l697 0CB4                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _SSPIF 0063                         _TXREG 0019  
      lcd_write_data@databyte 0072                         _total 005B                         pclath 000A  
                 _turnlowByte 00D3               ?_lcd_write_data 0070             ?_adc_read_channel 0070  
                       status 0003                         wtemp0 007E               __end_of_sprintf 0692  
            __end_of_Debounce 0EC7            ??_adc_read_channel 0076              ?_readAvgDistance 0070  
                __end_of_Menu 0D42    __size_of_lcd_write_control 001C              _shortMenuStrings 00D9  
                __end_of_isr1 0777                  __end_of_main 03A7                  __end_of_init 0C14  
                      ??_Menu 00DE                 ?_readDistance 0078        readAvgDistance@fullval 0022  
                      ??_isr1 004C                        ??_main 00E3                        ??_init 00E1  
         __end_of_ReadButtons 0C74                        _ADCON0 001F                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E                        _EEDATA 010C  
                      _EECON1 018C                        _EECON2 018D              __end_of_adc_read 0B18  
                      i1l2200 076B                        i1l1402 0A4E                        i1l1410 0B93  
                      i1l1411 0B93                        i1l1405 0A31                        i1l1408 0B82  
                      i1l1409 0B6B                        i1l2190 06B0                        i1l2191 06AF  
                      i1l2192 06D4                        i1l2193 06D4                        i1l2194 076B  
                      i1l2195 06FC                        i1l2196 0715                        i1l2197 073D  
                      i1l2198 075A                        i1l1399 0A75                        i1l2199 076A  
                      i1l5151 0E63                        i1l5160 0EAB                        i1l5152 0E62  
                      i1l5161 0EAA                        i1l5153 0E65                        i1l5162 0EAD  
                      i1l5154 0E7B                        i1l5170 0C73                        i1l5163 0EC3  
                      i1l5155 0E7A                        i1l5171 0C59                        i1l5164 0EC2  
                      i1l5156 0E7D                        i1l5172 0C61                        i1l2940 03ED  
                      i1l2932 0DA5                        i1l5165 0EC6                        i1l5157 0E93  
                      i1l5173 0C69                        i1l2941 0591                        i1l2933 0DC6  
                      i1l5166 0EC6                        i1l5158 0E92                        i1l5174 0C71  
                      i1l2950 0546                        i1l2942 0432                        i1l2934 0DE4  
                      i1l5159 0E95                        i1l2943 0590                        i1l2951 058C  
                      i1l2952 058B                        i1l2944 0477                        i1l5169 0C51  
                      i1l2945 058F                        i1l2953 0591                        i1l2937 0A89  
                      i1l2946 04BC                        i1l2947 058E                        i1l2948 0501  
                      i1l2949 058D                        i1l5197 0FB3                        i1l5198 0FC4  
                      i1l5199 0FFF                        i1l7360 0B43                        i1l7361 0B4D  
                      i1l7362 0B62                        i1l7370 0D60                        i1l7363 0B69  
                      i1l7371 0D79                        i1l7372 0D87                        i1l7380 0CD3  
                      i1l6660 05AC                        i1l7373 0D8F                        i1l7381 0CE4  
                      i1l6661 05B3                        i1l7366 0D88                        i1l7382 0CF2  
                      i1l6670 0615                        i1l6662 05AE                        i1l7367 0D5A  
                      i1l7383 0CFA                        i1l6663 068C                        i1l6671 060A  
                      i1l7368 0D4E                        i1l7376 0CF3                        i1l6672 0627  
                      i1l6664 05AF                        i1l7369 0D5F                        i1l7377 0CCD  
                      i1l6673 066C                        i1l6665 05B0                        i1l7378 0CC1  
                      i1l7570 0E39                        i1l6658 0678                        i1l6674 062C  
                      i1l6666 05C8                        i1l7379 0CD2                        i1l7571 0E13  
                      i1l6675 0677                        i1l6667 05B1                        i1l6659 059A  
                      i1l7572 0E07                        i1l6676 068B                        i1l6668 05E2  
                      i1l7573 0E18                        i1l6677 0691                        i1l6669 05ED  
                      i1l7574 0E19                        i1l7575 0E2A                        i1l7576 0E38  
                      i1l7568 0DF3                        i1l7577 0E43                        i1l7569 0DFD  
                      i1l7578 0E4A                        u400_25 0B55                        u401_20 0B61  
                      u401_21 0B60                        u402_20 0D4A                        u330_20 0713  
                      u402_21 0D49                        u330_21 0712                        u410_25 0CC2  
                      u411_20 0CD1                        u331_20 072C                        u323_20 0696  
                      u411_21 0CD0                        u331_21 072B                        u323_21 0695  
                      i1l9970 0C96                        i1l9980 0CB4                        i1l9972 0C97  
                      u403_25 0D4F                        i1l9990 0B17                        i1l9982 0AF1  
                      i1l9974 0C98                        i1l9966 0C75                        i1l9984 0AF4  
                      u404_20 0D5E                        u412_20 0CDD                        u420_20 0E23  
                      i1l9968 0C94                        i1l9976 0CA9                        i1l9992 0A3D  
                      u340_20 0C5D                        u332_20 0754                        u324_20 06AA  
                      u404_21 0D5D                        u412_21 0CDC                        u420_21 0E22  
                      u340_21 0C5C                        u332_21 0753                        u324_21 06A9  
                      i1l9986 0AFD                        i1l9978 0CAD                        i1l9994 0A42  
                      i1l9988 0B10                        i1l9996 0A44                        u412_25 0CD9  
                      u420_25 0E1F                        i1l9998 0A45                        u317_20 0AFA  
                      u341_20 0C65                        u333_20 075F                        u325_20 06B4  
                      u317_21 0AF9                        u341_21 0C64                        u333_21 075E  
                      u325_21 06B3                        u405_25 0D61                        u413_25 0CE5  
                      u421_25 0E2B                        u406_20 0D71                        u414_20 0CF1  
                      u422_20 0E37                        u342_20 0C6D                        u350_20 0400  
                      u334_20 0DA3                        u326_20 06BA                        u406_21 0D70  
                      u414_21 0CF0                        u422_21 0E36                        u342_21 0C6C  
                      u350_21 03FF                        u334_21 0DA2                        u326_21 06B9  
                      u318_25 0B07                        u406_25 0D6D                        u334_25 0D9F  
                      u423_20 0E3D                        u415_20 0DEA                        u351_20 043C  
                      u319_20 0B92                        u335_20 0DC5                        u327_20 06D0  
                      u415_21 0DE9                        u351_21 043B                        u319_21 0B91  
                      u335_21 0DC4                        u327_21 06CF                        u407_25 0D7A  
                      u335_25 0DC1                        u408_20 0D86                        u416_20 0DF7  
                      u360_20 0559                        u352_20 0445                        u336_20 0F51  
                      u328_20 06D8                        u408_21 0D85                        u416_21 0DF6  
                      u360_21 0558                        u352_21 0444                        u328_21 06D7  
                      u409_20 0CBD                        u417_20 0E03                        u353_20 0481  
                      u337_20 0FA2                        u329_20 06FA                        u409_21 0CBC  
                      u417_21 0E02                        u353_21 0480                        u337_21 0FA1  
                      u329_21 06F9                        u337_25 0F9E                        u338_20 0C4D  
                      u354_20 048A                        u338_21 0C4C                        u354_21 0489  
                      u418_25 0E08                        u419_20 0E17                        u339_20 0C55  
                      u355_20 04C6                        u347_20 03B2                        u419_21 0E16  
                      u339_21 0C54                        u355_21 04C5                        u347_21 03B1  
                      u380_20 0E8B                        u356_20 04CF                        u348_20 03BB  
                      u380_21 0E8A                        u356_21 04CE                        u348_21 03BA  
                      u381_20 0E8F                        u373_20 0E51                        u357_20 050B  
                      u349_20 03F7                        u381_21 0E8E                        u373_21 0E50  
                      u357_21 050A                        u349_21 03F6                        u461_27 0A70  
                      u382_20 0E99                        u374_20 0E5B                        u358_20 0514  
                      u390_20 05A0                        u382_21 0E98                        u374_21 0E5A  
                      u358_21 0513                        u390_21 059F                        u462_27 0A4A  
                      u383_20 0EA3                        u375_20 0E5F                        u359_20 0550  
                      u391_20 05D8                        u383_21 0EA2                        u375_21 0E5E  
                      u359_21 054F                        u391_21 05D7                        u463_27 0CAB  
                      u384_20 0EA7                        u376_20 0E69                        u392_20 05EB  
                      u384_21 0EA6                        u376_21 0E68                        u392_21 05EA  
                      u385_20 0EB1                        u377_20 0E73                        u393_20 0608  
                      u385_21 0EB0                        u377_21 0E72                        u393_21 0607  
                      u393_25 0604                        u386_20 0EBB                        u378_20 0E77  
                      u394_20 0614                        u386_21 0EBA                        u378_21 0E76  
                      u394_21 0613                        u387_20 0EBF                        u379_20 0E81  
                      u395_20 061B                        u387_21 0EBE                        u379_21 0E80  
                      u395_21 061A                        u396_20 0676                        u396_21 0675  
                      u397_20 068A                        u397_21 0689                        u398_20 0B47  
                      u398_21 0B46                        u399_25 0B4E                        _TMR0IE 005D  
                      _TMR0IF 005A                        _SSPCON 0014                        _SSPBUF 0013  
                  _UpReleased 036E              __end_of_lcd_init 0BE9                        _adcVal 0053  
             _UpDebounceCount 0061                        ___wmul 0B40                     ??___awmod 0074  
                _turnhighByte 00D2                  ??_ADCconvert 0020                     ??___lwdiv 007A  
                   ??___lwmod 0024              __end_of_init_adc 0A9E                ??_readDistance 007A  
             ___awmod@divisor 0070      __end_of_lcd_write_string 0B94               ___awmod@counter 0075  
                      _rxfifo 00B0                        clrloop 0A22                        _txfifo 00C0  
                      _rxiptr 0066                        _rxoptr 0067                        _txiptr 006A  
                      _txoptr 006B              __end_of_ser_init 0B40                        saved_w 007E  
                 _LeftPressed 0364                     ??_sprintf 002B                   _DownPressed 0362  
           lcd_write_string@s 0077            __end_of_ADCconvert 0592                __pcstackCOMMON 0070  
                __pidataBANK0 07FF                  __pidataBANK1 0A32                   _ReadButtons 0C42  
            ??_lcd_set_cursor 0073                     ?_Debounce 0070                 _buttonPressed 0062  
         i1_lcd_write_control 0A62                    __pbssBANK0 0051                    __pbssBANK1 00A0  
           _DownDebounceCount 005E            _RightDebounceCount 0060                    __pmaintext 0015  
           robotTurn@distance 00E0                       ?___wmul 0070                    __pintentry 0004  
        ?i1_lcd_write_control 0070         __end_of_UpdateDisplay 1000                     ?_adc_read 0070  
          __size_of_ser_putch 002E            __size_of_robo_init 0019                       i1l10000 0A2A  
                     i1l10002 0A2B                       i1l10010 0B82                       i1l10004 0B6A  
                     i1l10100 0DA5                       i1l10006 0B6B                       i1l10102 0DB2  
                     i1l10110 0F47                       i1l10008 0B7B                       i1l10104 0DB8  
                     i1l10120 0F8D                       i1l10112 0F5E                       i1l10040 0696  
                     i1l10106 0DC6                       i1l10130 0FCA                       i1l10122 0F93  
                     i1l10114 0F64                       i1l10050 06B4                       i1l10042 069E  
                     i1l10140 0C4E                       i1l10108 0DDF                       i1l10132 0FDF  
                     i1l10124 0FA2                       i1l10116 0F7E                       i1l10060 06D0  
                     i1l10052 06BA                       i1l10044 06A4                       i1l10150 0C5D  
                     i1l10142 0C50                       i1l10134 0C42                       i1l10126 0FB3  
                     i1l10118 0F84                       i1l10070 06FA                       i1l10062 06D8  
                     i1l10054 06C2                       i1l10046 06AA                       i1l10038 0692  
                     i1l10160 0C68                       i1l10152 0C5E                       i1l10144 0C55  
                     i1l10136 0C47                       i1l10128 0FC4                       i1l10080 0739  
                     i1l10072 06FC                       i1l10064 06D9                       i1l10056 06C6  
                     i1l10048 06B0                       i1l10170 0C73                       i1l10162 0C6D  
                     i1l10154 0C60                       i1l10146 0C56                       i1l10138 0C4D  
                     i1l10250 0A89                       i1l10090 075A                       i1l10082 073D  
                     i1l10074 0713                       i1l10066 06E2                       i1l10058 06CA  
                     i1l10420 0E51                       i1l10164 0C6E                       i1l10156 0C65  
                     i1l10148 0C58                       i1l10260 03F7                       i1l10252 03A7  
                     i1l10500 05EC                       i1l10092 075F                       i1l10084 0754  
                     i1l10076 0715                       i1l10068 06E3                       i1l10430 0E6D  
                     i1l10422 0E55                       i1l10166 0C70                       i1l10158 0C66  
                     i1l10270 0477                       i1l10262 0400                       i1l10254 03B2  
                     i1l10510 0615                       i1l10502 05ED                       i1l10246 0A76  
                     i1l10094 0D90                       i1l10086 0755                       i1l10078 072C  
          __size_of_robotMove 0088                       i1l10440 0E8B                       i1l10432 0E73  
                     i1l10424 0E5B                       i1l10600 0DFD                       i1l10168 0C71  
                     i1l10280 04CF                       i1l10272 0481                       i1l10264 0432  
                     i1l10256 03BB                       i1l10520 0660                       i1l10512 061B  
                     i1l10504 0609                       i1l10248 0A82                       i1l10096 0D96  
                     i1l10088 0757                       i1l10450 0EA7                       i1l10442 0E8F  
                     i1l10434 0E77                       i1l10426 0E5F                       i1l10418 0E4B  
                     i1l10610 0E19                       i1l10602 0E03                       i1l10290 0550  
                     i1l10282 0501                       i1l10274 048A                       i1l10266 043C  
                     i1l10258 03ED                       i1l10530 0691                       i1l10522 0667  
                     i1l10514 0622                       i1l10506 060A                       i1l10098 0DA4  
                     i1l10452 0EB1                       i1l10444 0E99                       i1l10436 0E81  
                     i1l10428 0E69                       i1l10540 0B62                       i1l10532 0B40  
                     i1l10620 0E3D                       i1l10612 0E23                       i1l10604 0E07  
                     i1l10292 0559                       i1l10284 050B                       i1l10276 04BC  
                     i1l10268 0445                       i1l10524 066C                       i1l10516 0627  
                     i1l10508 060E                       i1l10454 0EB5                       i1l10446 0E9D  
                     i1l10438 0E85                       i1l10542 0B69                       i1l10534 0B43  
                     i1l10550 0D4E                       i1l10622 0E43                       i1l10614 0E2A  
                     i1l10606 0E0E                       i1l10286 0514                       i1l10278 04C6  
                     i1l10518 062C                       i1l10526 0678                       i1l10630 0A6A  
                     i1l10456 0EBB                       i1l10448 0EA3                       i1l10536 0B47  
                     i1l10560 0D77                       i1l10552 0D55                       i1l10544 0D42  
                     i1l10624 0E4A                       i1l10616 0E31                       i1l10608 0E13  
                     i1l10288 0546                       i1l10528 068C                       i1l10480 05A7  
                     i1l10632 0A6B                       i1l10458 0EBF                       i1l10538 0B54  
                     i1l10562 0D79                       i1l10554 0D5A                       i1l10546 0D44  
                     i1l10570 0CB5                       i1l10618 0E39                       i1l10490 05D4  
                     i1l10482 05B2                       i1l10474 0595                       i1l10626 0A63  
                     i1l10564 0D80                       i1l10556 0D60                       i1l10548 0D4A  
                     i1l10580 0CD3                       i1l10572 0CBD                       i1l10492 05D8  
                     i1l10484 05B3                       i1l10476 059A                       i1l10628 0A68  
                     i1l10558 0D71                       i1l10566 0D88                       i1l10590 0CFA  
                     i1l10582 0CDD                       i1l10574 0CC1                       i1l10494 05DC  
                     i1l10486 05C8                       i1l10478 05A0                       i1l10568 0D8F  
                     i1l10584 0CE4                       i1l10576 0CC8                       i1l10592 0DE5  
                     i1l10496 05E2                       i1l10488 05D0                       i1l10586 0CEB  
                     i1l10578 0CCD                       i1l10594 0DEA                       i1l10498 05E5  
                     i1l10588 0CF3                       i1l10596 0DF3                       i1l10598 0DF7  
          __size_of_robotTurn 0080                    ??_Debounce 0070              ??_lcd_write_data 0070  
                   ?_lcd_init 0070                       _SSPSTAT 0094          __end_of_readDistance 0A8A  
                   ?_init_adc 0070                     ?_ser_init 0070                       ___awmod 0DE5  
       ??i1_lcd_write_control 0070               __size_of___wmul 002A                       ___lwdiv 0D42  
                     ___lwmod 0CB5     __size_of_adc_read_channel 0041                    ??_adc_read 0072  
                     _dpowers 0810      UpdateDisplay@serialInput 0070              ___awmod@dividend 0072  
                     _lowByte 0065                       _ser_tmp 0068                       _sprintf 0592  
                  ??_lcd_init 00E1          end_of_initialization 0BBA                       init_ram 0A53  
                  ??_init_adc 00DE             __end_of_ser_putch 0C42             __end_of_robo_init 0AB7  
           __end_of_robotMove 07FF                  _LeftReleased 0365             __end_of_robotTurn 0F47  
                  ??_ser_init 00DE                  _DownReleased 0363                 _RightReleased 036C  
    __size_of_readAvgDistance 0055             ?_lcd_write_string 0077            ??_lcd_write_string 0079  
           adc_read@adc_value 0074                    main@choice 00E6                 ?_spi_transfer 0070  
                   Menu@input 00DE                 _CenterPressed 0360                  ?_ReadButtons 0070  
              __end_of___wmul 0B6A                 __pbitbssBANK0 0360           start_initialization 0B94  
       __size_of_readDistance 0014             __size_of_Debounce 007C                ??_spi_transfer 00DE  
       lcd_set_cursor@address 0073                     _UpPressed 036D                _RTC_FLAG_250MS 0368  
              _RTC_FLAG_500MS 0369                      ??___wmul 0074                   __pdataBANK0 006E  
                 __pdataBANK1 00D4              _adc_read_channel 0C74                  _readDistance 0A76  
           __size_of_adc_read 0027             ??_readAvgDistance 007E                 __pcstackBANK0 0020  
               __pcstackBANK1 00DE             __size_of_lcd_init 002B                   sprintf@_val 0031  
                 sprintf@flag 002F             robotMove@distance 00E0                   sprintf@prec 0030  
                _current_step 006E              readAvgDistance@i 0024             __size_of_init_adc 0014  
            ___lwdiv@dividend 0078                      ?___awmod 0070                     __ptext720 0C14  
                   __ptext721 0CFB                     __ptext713 0BE9                     __ptext730 0A62  
                   __ptext722 0AD3                     __ptext714 0BBE                     __ptext731 0592  
                   __ptext723 0B18                     __ptext715 0EC7                     __ptext740 0E4B  
                   __ptext732 03A7                     __ptext724 0692                     __ptext716 0777  
                   __ptext741 0AF1                     __ptext733 0C42                     __ptext725 0F47  
                   __ptext717 0A9E                     __ptext742 0000                     __ptext734 0A3C  
                   __ptext726 0D90                     __ptext718 0AB7                     __ptext735 0C74  
                   __ptext727 0A76                     __ptext719 0A8A                     __ptext736 0DE5  
                   __ptext728 0B6A                     __ptext737 0CB5                     __ptext729 0A29  
                   __ptext738 0D42                     __ptext739 0B40             __size_of_ser_init 0028  
                    ?___lwdiv 0076                      ?___lwmod 0020                     __pstrings 0800  
                   _dist_high 0055           readDistance@fullval 007C              ___lwdiv@quotient 007B  
                    ?_sprintf 0026       __size_of_lcd_set_cursor 0009             interrupt_function 0004  
      __size_of_UpdateDisplay 00B9                ___wmul@product 0074                    ser_putch@c 00DF  
 __end_ofi1_lcd_write_control 0A76                     _ser_putch 0C14                     _robo_init 0A9E  
                   _robotMove 0777                     _robotTurn 0EC7                  _RightPressed 036B  
        __size_of_ReadButtons 0032          __end_of_spi_transfer 0AF1                   __stringbase 080F  
           ___wmul@multiplier 0070        UpdateDisplay@adcOutput 003C              spi_transfer@data 00E0  
            spi_transfer@temp 00DF                      _Debounce 0E4B             _LeftDebounceCount 005F  
   __size_of_lcd_write_string 002A       __size_of_lcd_write_data 0013                    ?_ser_putch 0070  
     adc_read_channel@channel 0077                 _RTC_FLAG_10MS 0366                 _RTC_FLAG_50MS 036A  
                  ?_robo_init 0070                     init_fetch 0A4F                    ?_robotMove 00E0  
                  ?_robotTurn 00E0                    _ADCconvert 03A7              __size_of___awmod 0066  
            __size_of___lwdiv 004E              __size_of___lwmod 0046                 _UpdateDisplay 0F47  
                    _adc_read 0AF1               ___lwdiv@divisor 0076               ___lwdiv@counter 007D  
                 _menuStrings 00D4                      _highByte 0064                      _lcd_init 0BBE  
                    _distance 00D0                      _dist_low 0057              __size_of_sprintf 0100  
    __end_of_adc_read_channel 0CB5     lcd_write_control@databyte 00E0                 __size_of_Menu 0047  
                    _init_adc 0A8A                 __size_of_isr1 00E5                 __size_of_main 0392  
               __size_of_init 002B                      clear_ram 0A21                      _ser_init 0B18  
             _readAvgDistance 0D90                ?_UpdateDisplay 0070           _CenterDebounceCount 005D  
                _RTC_FLAG_1MS 0367            UpdateDisplay@F1223 00A0                      intlevel1 0000  
              _lcd_set_cursor 0A29                     sprintf@ap 002E                     sprintf@sp 0035  
            ___lwmod@dividend 0022                     stringcode 080A                   _serialInput 0069  
                 ??_ser_putch 00DE                   ??_robo_init 00E0         __size_of_spi_transfer 001E  
                 ??_robotMove 00E2                   ??_robotTurn 00E2                   ?_ADCconvert 0070  
           _lcd_write_control 0AB7   i1lcd_write_control@databyte 0072            ?_lcd_write_control 0070  
                  _OPTION_REG 0081                      sprintf@c 0036                      sprintf@f 0026  
             ___lwmod@divisor 0020               ___lwmod@counter 0025                      stringdir 080A  
                    stringtab 0800           ??_lcd_write_control 00DE        __end_of_lcd_set_cursor 0A32  
            _lcd_write_string 0B6A                  _spi_transfer 0AD3             _current_direction 0063  
                 _RTC_Counter 0051       __end_of_readAvgDistance 0DE5                _lcd_write_data 0A3C  
