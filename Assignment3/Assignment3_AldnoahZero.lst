

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 24 12:28:17 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_Menu
    48                           	FNCALL	_main,_calibrateIR
    49                           	FNCALL	_main,_rotate
    50                           	FNCALL	_main,_robotMove
    51                           	FNCALL	_main,_robotTurn
    52                           	FNCALL	_init,_init_adc
    53                           	FNCALL	_init,_lcd_init
    54                           	FNCALL	_init,_ser_init
    55                           	FNCALL	_init,_robo_init
    56                           	FNCALL	_calibrateIR,_rotate
    57                           	FNCALL	_lcd_init,_lcd_write_control
    58                           	FNCALL	_robotTurn,_ser_putch
    59                           	FNCALL	_robotMove,_ser_putch
    60                           	FNCALL	_rotate,_spi_transfer
    61                           	FNCALL	_robo_init,_ser_putch
    62                           	FNROOT	_main
    63                           	FNCALL	_isr1,___lwmod
    64                           	FNCALL	_isr1,_readAvgDistance
    65                           	FNCALL	_isr1,_UpdateDisplay
    66                           	FNCALL	_isr1,_ReadButtons
    67                           	FNCALL	_UpdateDisplay,i1_lcd_write_control
    68                           	FNCALL	_UpdateDisplay,_sprintf
    69                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    70                           	FNCALL	_UpdateDisplay,_lcd_write_string
    71                           	FNCALL	_UpdateDisplay,___awmod
    72                           	FNCALL	_readAvgDistance,_readDistance
    73                           	FNCALL	_readAvgDistance,___lwdiv
    74                           	FNCALL	_readAvgDistance,_ADCconvert
    75                           	FNCALL	_readDistance,_adc_read_channel
    76                           	FNCALL	_lcd_write_string,_lcd_write_data
    77                           	FNCALL	_lcd_set_cursor,i1_lcd_write_control
    78                           	FNCALL	_sprintf,___lwdiv
    79                           	FNCALL	_sprintf,___lwmod
    80                           	FNCALL	_ADCconvert,___wmul
    81                           	FNCALL	_ADCconvert,___lwdiv
    82                           	FNCALL	_ReadButtons,_Debounce
    83                           	FNCALL	_adc_read_channel,_adc_read
    84                           	FNCALL	intlevel1,_isr1
    85                           	global	intlevel1
    86                           	FNROOT	intlevel1
    87                           	global	_current_step
    88                           	global	_menuStrings
    89                           	global	_shortMenuStrings
    90                           psect	idataBANK0,class=CODE,space=0,delta=2
    91                           global __pidataBANK0
    92  07FE                     __pidataBANK0:
    93                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
    94                           	line	30
    95                           
    96                           ;initializer for _current_step
    97  07FE  343C               	retlw	03Ch
    98                           psect	idataBANK1,class=CODE,space=0,delta=2
    99                           global __pidataBANK1
   100  0B70                     __pidataBANK1:
   101                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   102                           	line	32
   103                           
   104                           ;initializer for _menuStrings
   105  0B70  3423               	retlw	(STR_1-__stringbase)&0ffh
   106  0B71  341A               	retlw	(STR_2-__stringbase)&0ffh
   107  0B72  3435               	retlw	(STR_3-__stringbase)&0ffh
   108  0B73  343E               	retlw	(STR_4-__stringbase)&0ffh
   109  0B74  342C               	retlw	(STR_5-__stringbase)&0ffh
   110                           	line	33
   111                           
   112                           ;initializer for _shortMenuStrings
   113  0B75  345E               	retlw	(STR_6-__stringbase)&0ffh
   114  0B76  3462               	retlw	(STR_7-__stringbase)&0ffh
   115  0B77  344E               	retlw	(STR_8-__stringbase)&0ffh
   116  0B78  345A               	retlw	(STR_9-__stringbase)&0ffh
   117  0B79  3466               	retlw	(STR_10-__stringbase)&0ffh
   118                           	global	_dpowers
   119                           psect	strings,class=STRING,delta=2
   120                           global __pstrings
   121  0767                     __pstrings:
   122                           ;	global	stringdir,stringtab,__stringbase
   123  0767                     stringtab:
   124                           ;	String table - string pointers are 1 byte each
   125  0767  1BFF               	btfsc	(btemp+1),7
   126  0768  2F71               	ljmp	stringcode
   127  0769  1383               	bcf	status,7
   128  076A  187F               	btfsc	(btemp+1),0
   129  076B  1783               	bsf	status,7
   130  076C  0800               	movf	indf,w
   131  076D  0A84               	incf fsr
   132  076E  1903               skipnz
   133  076F  0AFF               incf btemp+1
   134  0770  0008               	return
   135  0771                     stringcode:stringdir:
      + 0771                     stringdir:	
   136  0771  3007               movlw high(stringdir)
   137  0772  008A               movwf pclath
   138  0773  0804               movf fsr,w
   139  0774  0A84               incf fsr
   140  0775  0782               	addwf pc
   141  0776                     __stringbase:
   142  0776  3400               	retlw	0
   143                           psect	strings
   144                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   145                           	line	350
   146  0777                     _dpowers:
   147  0777  3401               	retlw	01h
   148  0778  3400               	retlw	0
   149                           
   150  0779  340A               	retlw	0Ah
   151  077A  3400               	retlw	0
   152                           
   153  077B  3464               	retlw	064h
   154  077C  3400               	retlw	0
   155                           
   156  077D  34E8               	retlw	0E8h
   157  077E  3403               	retlw	03h
   158                           
   159  077F  3410               	retlw	010h
   160  0780  3427               	retlw	027h
   161                           
   162                           	global	_dpowers
   163                           	global	_RTC_Counter
   164                           	global	_adcVal
   165                           	global	_dist_high
   166                           	global	_dist_low
   167                           	global	_pos
   168                           	global	_total
   169                           	global	_CenterDebounceCount
   170                           	global	_DownDebounceCount
   171                           	global	_LeftDebounceCount
   172                           	global	_RightDebounceCount
   173                           	global	_UpDebounceCount
   174                           	global	_buttonPressed
   175                           	global	_currentMenu
   176                           	global	_current_direction
   177                           	global	_highByte
   178                           	global	_lowByte
   179                           	global	_rxiptr
   180                           	global	_rxoptr
   181                           	global	_ser_tmp
   182                           	global	_serialInput
   183                           	global	_txiptr
   184                           	global	_txoptr
   185                           	global	_CenterPressed
   186                           	global	_CenterReleased
   187                           	global	_DownPressed
   188                           	global	_DownReleased
   189                           	global	_LeftPressed
   190                           	global	_LeftReleased
   191                           	global	_RTC_FLAG_10MS
   192                           	global	_RTC_FLAG_1MS
   193                           	global	_RTC_FLAG_250MS
   194                           	global	_RTC_FLAG_500MS
   195                           	global	_RTC_FLAG_50MS
   196                           	global	_RightPressed
   197                           	global	_RightReleased
   198                           	global	_UpPressed
   199                           	global	_UpReleased
   200                           	global	UpdateDisplay@F1222
   201                           	global	_rxfifo
   202                           	global	_txfifo
   203                           	global	_distance
   204                           	global	_totalSteps
   205                           	global	_turnhighByte
   206                           	global	_turnlowByte
   207                           	global	_ADCON0
   208  001F                     _ADCON0	set	31
   209                           	global	_ADRESH
   210  001E                     _ADRESH	set	30
   211                           	global	_PORTA
   212  0005                     _PORTA	set	5
   213                           	global	_PORTC
   214  0007                     _PORTC	set	7
   215                           	global	_PORTD
   216  0008                     _PORTD	set	8
   217                           	global	_PORTE
   218  0009                     _PORTE	set	9
   219                           	global	_RCREG
   220  001A                     _RCREG	set	26
   221                           	global	_SSPBUF
   222  0013                     _SSPBUF	set	19
   223                           	global	_SSPCON
   224  0014                     _SSPCON	set	20
   225                           	global	_TMR0
   226  0001                     _TMR0	set	1
   227                           	global	_TXREG
   228  0019                     _TXREG	set	25
   229                           	global	AT25256A@CS0
   230  0038                     AT25256A@CS0	set	56
   231                           	global	AT25256A@CS1
   232  0039                     AT25256A@CS1	set	57
   233                           	global	_CARRY
   234  0018                     _CARRY	set	24
   235                           	global	_CHS0
   236  00FB                     _CHS0	set	251
   237                           	global	_CHS1
   238  00FC                     _CHS1	set	252
   239                           	global	_CHS2
   240  00FD                     _CHS2	set	253
   241                           	global	_CREN
   242  00C4                     _CREN	set	196
   243                           	global	_GIE
   244  005F                     _GIE	set	95
   245                           	global	_GO
   246  00FA                     _GO	set	250
   247                           	global	_OERR
   248  00C1                     _OERR	set	193
   249                           	global	_RB0
   250  0030                     _RB0	set	48
   251                           	global	_RB2
   252  0032                     _RB2	set	50
   253                           	global	_RB3
   254  0033                     _RB3	set	51
   255                           	global	_RB4
   256  0034                     _RB4	set	52
   257                           	global	_RB5
   258  0035                     _RB5	set	53
   259                           	global	_RB6
   260  0036                     _RB6	set	54
   261                           	global	_RC0
   262  0038                     _RC0	set	56
   263                           	global	_RC1
   264  0039                     _RC1	set	57
   265                           	global	_RC2
   266  003A                     _RC2	set	58
   267                           	global	_RCIF
   268  0065                     _RCIF	set	101
   269                           	global	_RE0
   270  0048                     _RE0	set	72
   271                           	global	_RE1
   272  0049                     _RE1	set	73
   273                           	global	_RE2
   274  004A                     _RE2	set	74
   275                           	global	_RX9
   276  00C6                     _RX9	set	198
   277                           	global	_SPEN
   278  00C7                     _SPEN	set	199
   279                           	global	_SSPIF
   280  0063                     _SSPIF	set	99
   281                           	global	_TMR0IE
   282  005D                     _TMR0IE	set	93
   283                           	global	_TMR0IF
   284  005A                     _TMR0IF	set	90
   285                           	global	_TXIF
   286  0064                     _TXIF	set	100
   287                           	global	_ADCON1
   288  009F                     _ADCON1	set	159
   289                           	global	_ADRESL
   290  009E                     _ADRESL	set	158
   291                           	global	_OPTION_REG
   292  0081                     _OPTION_REG	set	129
   293                           	global	_SPBRG
   294  0099                     _SPBRG	set	153
   295                           	global	_SSPSTAT
   296  0094                     _SSPSTAT	set	148
   297                           	global	_TRISA
   298  0085                     _TRISA	set	133
   299                           	global	_TRISB
   300  0086                     _TRISB	set	134
   301                           	global	_TRISC
   302  0087                     _TRISC	set	135
   303                           	global	_TRISD
   304  0088                     _TRISD	set	136
   305                           	global	_TRISE
   306  0089                     _TRISE	set	137
   307                           	global	_BRGH
   308  04C2                     _BRGH	set	1218
   309                           	global	_RCIE
   310  0465                     _RCIE	set	1125
   311                           	global	_SYNC
   312  04C4                     _SYNC	set	1220
   313                           	global	_TX9
   314  04C6                     _TX9	set	1222
   315                           	global	_TXEN
   316  04C5                     _TXEN	set	1221
   317                           	global	_TXIE
   318  0464                     _TXIE	set	1124
   319                           	global	_EEADR
   320  010D                     _EEADR	set	269
   321                           	global	_EEDATA
   322  010C                     _EEDATA	set	268
   323                           	global	_EECON1
   324  018C                     _EECON1	set	396
   325                           	global	_EECON2
   326  018D                     _EECON2	set	397
   327                           	global	_RD
   328  0C60                     _RD	set	3168
   329                           	global	_WR
   330  0C61                     _WR	set	3169
   331                           	global	_WREN
   332  0C62                     _WREN	set	3170
   333                           	
   334  0781                     STR_11:	
   335  0781  3441               	retlw	65	;'A'
   336  0782  3444               	retlw	68	;'D'
   337  0783  3443               	retlw	67	;'C'
   338  0784  343A               	retlw	58	;':'
   339  0785  3425               	retlw	37	;'%'
   340  0786  3464               	retlw	100	;'d'
   341  0787  3420               	retlw	32	;' '
   342  0788  3444               	retlw	68	;'D'
   343  0789  3469               	retlw	105	;'i'
   344  078A  3473               	retlw	115	;'s'
   345  078B  3474               	retlw	116	;'t'
   346  078C  343A               	retlw	58	;':'
   347  078D  3425               	retlw	37	;'%'
   348  078E  3464               	retlw	100	;'d'
   349  078F  3400               	retlw	0
   350                           psect	strings
   351                           	
   352  0790                     STR_2:	
   353  0790  3453               	retlw	83	;'S'
   354  0791  3463               	retlw	99	;'c'
   355  0792  3461               	retlw	97	;'a'
   356  0793  346E               	retlw	110	;'n'
   357  0794  345F               	retlw	95	;'_'
   358  0795  3433               	retlw	51	;'3'
   359  0796  3436               	retlw	54	;'6'
   360  0797  3430               	retlw	48	;'0'
   361  0798  3400               	retlw	0
   362                           psect	strings
   363                           	
   364  0799                     STR_1:	
   365  0799  3443               	retlw	67	;'C'
   366  079A  3461               	retlw	97	;'a'
   367  079B  346C               	retlw	108	;'l'
   368  079C  3469               	retlw	105	;'i'
   369  079D  3462               	retlw	98	;'b'
   370  079E  345F               	retlw	95	;'_'
   371  079F  3449               	retlw	73	;'I'
   372  07A0  3452               	retlw	82	;'R'
   373  07A1  3400               	retlw	0
   374                           psect	strings
   375                           	
   376  07A2                     STR_5:	
   377  07A2  3446               	retlw	70	;'F'
   378  07A3  346C               	retlw	108	;'l'
   379  07A4  3477               	retlw	119	;'w'
   380  07A5  345F               	retlw	95	;'_'
   381  07A6  3457               	retlw	87	;'W'
   382  07A7  3461               	retlw	97	;'a'
   383  07A8  346C               	retlw	108	;'l'
   384  07A9  346C               	retlw	108	;'l'
   385  07AA  3400               	retlw	0
   386                           psect	strings
   387                           	
   388  07AB                     STR_3:	
   389  07AB  3444               	retlw	68	;'D'
   390  07AC  3472               	retlw	114	;'r'
   391  07AD  3469               	retlw	105	;'i'
   392  07AE  3476               	retlw	118	;'v'
   393  07AF  3465               	retlw	101	;'e'
   394  07B0  345F               	retlw	95	;'_'
   395  07B1  3432               	retlw	50	;'2'
   396  07B2  346D               	retlw	109	;'m'
   397  07B3  3400               	retlw	0
   398                           psect	strings
   399                           	
   400  07B4                     STR_4:	
   401  07B4  3444               	retlw	68	;'D'
   402  07B5  3472               	retlw	114	;'r'
   403  07B6  3469               	retlw	105	;'i'
   404  07B7  3476               	retlw	118	;'v'
   405  07B8  3465               	retlw	101	;'e'
   406  07B9  345F               	retlw	95	;'_'
   407  07BA  344C               	retlw	76	;'L'
   408  07BB  3400               	retlw	0
   409                           psect	strings
   410                           	
   411  07BC                     STR_14:	
   412  07BC  3443               	retlw	67	;'C'
   413  07BD  344F               	retlw	79	;'O'
   414  07BE  344E               	retlw	78	;'N'
   415  07BF  3446               	retlw	70	;'F'
   416  07C0  3449               	retlw	73	;'I'
   417  07C1  3452               	retlw	82	;'R'
   418  07C2  344D               	retlw	77	;'M'
   419  07C3  3400               	retlw	0
   420                           psect	strings
   421                           	
   422  07C4                     STR_8:	
   423  07C4  3444               	retlw	68	;'D'
   424  07C5  3472               	retlw	114	;'r'
   425  07C6  3432               	retlw	50	;'2'
   426  07C7  3400               	retlw	0
   427                           psect	strings
   428                           	
   429  07C8                     STR_13:	
   430  07C8  343C               	retlw	60	;'<'
   431  07C9  343C               	retlw	60	;'<'
   432  07CA  343C               	retlw	60	;'<'
   433  07CB  3400               	retlw	0
   434                           psect	strings
   435                           	
   436  07CC                     STR_15:	
   437  07CC  343E               	retlw	62	;'>'
   438  07CD  343E               	retlw	62	;'>'
   439  07CE  343E               	retlw	62	;'>'
   440  07CF  3400               	retlw	0
   441                           psect	strings
   442                           	
   443  07D0                     STR_9:	
   444  07D0  3444               	retlw	68	;'D'
   445  07D1  3472               	retlw	114	;'r'
   446  07D2  344C               	retlw	76	;'L'
   447  07D3  3400               	retlw	0
   448                           psect	strings
   449                           	
   450  07D4                     STR_6:	
   451  07D4  3443               	retlw	67	;'C'
   452  07D5  3461               	retlw	97	;'a'
   453  07D6  346C               	retlw	108	;'l'
   454  07D7  3400               	retlw	0
   455                           psect	strings
   456                           	
   457  07D8                     STR_7:	
   458  07D8  3453               	retlw	83	;'S'
   459  07D9  3463               	retlw	99	;'c'
   460  07DA  346E               	retlw	110	;'n'
   461  07DB  3400               	retlw	0
   462                           psect	strings
   463                           	
   464  07DC                     STR_10:	
   465  07DC  3446               	retlw	70	;'F'
   466  07DD  346C               	retlw	108	;'l'
   467  07DE  3477               	retlw	119	;'w'
   468  07DF  3400               	retlw	0
   469                           psect	strings
   470  0781                     STR_12	equ	STR_11+0
   471                           	file	"Assignment3_AldnoahZero.as"
   472                           	line	#
   473                           psect cinit,class=CODE,delta=2
   474                           global start_initialization
   475  0CDD                     start_initialization:
   476                           
   477                           psect	bitbssBANK0,class=BANK0,bit,space=1
   478                           global __pbitbssBANK0
   479  0368                     __pbitbssBANK0:
   480  0368                     _CenterPressed:
   481  0368                            ds      1
   482                           
   483  0369                     _CenterReleased:
   484  0369                            ds      1
   485                           
   486  036A                     _DownPressed:
   487  036A                            ds      1
   488                           
   489  036B                     _DownReleased:
   490  036B                            ds      1
   491                           
   492  036C                     _LeftPressed:
   493  036C                            ds      1
   494                           
   495  036D                     _LeftReleased:
   496  036D                            ds      1
   497                           
   498  036E                     _RTC_FLAG_10MS:
   499  036E                            ds      1
   500                           
   501  036F                     _RTC_FLAG_1MS:
   502  036F                            ds      1
   503                           
   504  0370                     _RTC_FLAG_250MS:
   505  0370                            ds      1
   506                           
   507  0371                     _RTC_FLAG_500MS:
   508  0371                            ds      1
   509                           
   510  0372                     _RTC_FLAG_50MS:
   511  0372                            ds      1
   512                           
   513  0373                     _RightPressed:
   514  0373                            ds      1
   515                           
   516  0374                     _RightReleased:
   517  0374                            ds      1
   518                           
   519  0375                     _UpPressed:
   520  0375                            ds      1
   521                           
   522  0376                     _UpReleased:
   523  0376                            ds      1
   524                           
   525                           psect	bssBANK0,class=BANK0,space=1
   526                           global __pbssBANK0
   527  0051                     __pbssBANK0:
   528  0051                     _RTC_Counter:
   529  0051                            ds      2
   530                           
   531  0053                     _adcVal:
   532  0053                            ds      2
   533                           
   534  0055                     _dist_high:
   535  0055                            ds      2
   536                           
   537  0057                     _dist_low:
   538  0057                            ds      2
   539                           
   540  0059                     _pos:
   541  0059                            ds      2
   542                           
   543  005B                     _total:
   544  005B                            ds      2
   545                           
   546  005D                     _CenterDebounceCount:
   547  005D                            ds      1
   548                           
   549  005E                     _DownDebounceCount:
   550  005E                            ds      1
   551                           
   552  005F                     _LeftDebounceCount:
   553  005F                            ds      1
   554                           
   555  0060                     _RightDebounceCount:
   556  0060                            ds      1
   557                           
   558  0061                     _UpDebounceCount:
   559  0061                            ds      1
   560                           
   561  0062                     _buttonPressed:
   562  0062                            ds      1
   563                           
   564  0063                     _currentMenu:
   565  0063                            ds      1
   566                           
   567  0064                     _current_direction:
   568  0064                            ds      1
   569                           
   570  0065                     _highByte:
   571  0065                            ds      1
   572                           
   573  0066                     _lowByte:
   574  0066                            ds      1
   575                           
   576  0067                     _rxiptr:
   577  0067                            ds      1
   578                           
   579  0068                     _rxoptr:
   580  0068                            ds      1
   581                           
   582  0069                     _ser_tmp:
   583  0069                            ds      1
   584                           
   585  006A                     _serialInput:
   586  006A                            ds      1
   587                           
   588  006B                     _txiptr:
   589  006B                            ds      1
   590                           
   591  006C                     _txoptr:
   592  006C                            ds      1
   593                           
   594                           psect	dataBANK0,class=BANK0,space=1
   595                           global __pdataBANK0
   596  006F                     __pdataBANK0:
   597                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
   598                           	line	30
   599  006F                     _current_step:
   600  006F                            ds      1
   601                           
   602                           psect	bssBANK1,class=BANK1,space=1
   603                           global __pbssBANK1
   604  00A0                     __pbssBANK1:
   605  00A0                     UpdateDisplay@F1222:
   606  00A0                            ds      16
   607                           
   608  00B0                     _rxfifo:
   609  00B0                            ds      16
   610                           
   611  00C0                     _txfifo:
   612  00C0                            ds      16
   613                           
   614  00D0                     _distance:
   615  00D0                            ds      2
   616                           
   617  00D2                     _totalSteps:
   618  00D2                            ds      2
   619                           
   620  00D4                     _turnhighByte:
   621  00D4                            ds      1
   622                           
   623  00D5                     _turnlowByte:
   624  00D5                            ds      1
   625                           
   626                           psect	dataBANK1,class=BANK1,space=1
   627                           global __pdataBANK1
   628  00E2                     __pdataBANK1:
   629                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   630                           	line	32
   631  00E2                     _menuStrings:
   632  00E2                            ds      5
   633                           
   634                           psect	dataBANK1
   635                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
   636                           	line	33
   637  00E7                     _shortMenuStrings:
   638  00E7                            ds      5
   639                           
   640                           psect clrtext,class=CODE,delta=2
   641                           global clear_ram
   642                           ;	Called with FSR containing the base address, and
   643                           ;	W with the last address+1
   644  0B5F                     clear_ram:
   645  0B5F  0064               	clrwdt			;clear the watchdog before getting into this loop
   646  0B60                     clrloop:
   647  0B60  0180               	clrf	indf		;clear RAM location pointed to by FSR
   648  0B61  0A84               	incf	fsr,f		;increment pointer
   649  0B62  0604               	xorwf	fsr,w		;XOR with final address
   650  0B63  1903               	btfsc	status,2	;have we reached the end yet?
   651  0B64  3400               	retlw	0		;all done for this memory range, return
   652  0B65  0604               	xorwf	fsr,w		;XOR again to restore value
   653  0B66  2B60               	goto	clrloop		;do the next byte
   654                           
   655                           ; Clear objects allocated to BITBANK0
   656                           psect cinit,class=CODE,delta=2
   657  0CDD  01ED               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   658  0CDE  01EE               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   659                           ; Clear objects allocated to BANK0
   660                           psect cinit,class=CODE,delta=2
   661  0CDF  1383               	bcf	status, 7	;select IRP bank0
   662  0CE0  3051               	movlw	low(__pbssBANK0)
   663  0CE1  0084               	movwf	fsr
   664  0CE2  306D               	movlw	low((__pbssBANK0)+01Ch)
   665  0CE3  120A  158A  235F   	fcall	clear_ram
              120A  158A         
   666                           ; Clear objects allocated to BANK1
   667                           psect cinit,class=CODE,delta=2
   668  0CE8  30A0               	movlw	low(__pbssBANK1)
   669  0CE9  0084               	movwf	fsr
   670  0CEA  30D6               	movlw	low((__pbssBANK1)+036h)
   671  0CEB  120A  158A  235F   	fcall	clear_ram
              120A  158A         
   672                           global btemp
   673                           psect inittext,class=CODE,delta=2
   674                           global init_fetch,btemp
   675                           ;	Called with low address in FSR and high address in W
   676  0B8D                     init_fetch:
   677  0B8D  087E               	movf btemp,w
   678  0B8E  008A               	movwf pclath
   679  0B8F  087F               	movf btemp+1,w
   680  0B90  0082               	movwf pc
   681                           global init_ram
   682                           ;Called with:
   683                           ;	high address of idata address in btemp 
   684                           ;	low address of idata address in btemp+1 
   685                           ;	low address of data in FSR
   686                           ;	high address + 1 of data in btemp-1
   687  0B91                     init_ram:
   688  0B91  120A  158A  238D   	fcall init_fetch
              120A  158A         
   689  0B96  0080               	movwf indf,f
   690  0B97  0A84               	incf fsr,f
   691  0B98  0804               	movf fsr,w
   692  0B99  067D               	xorwf btemp-1,w
   693  0B9A  1903               	btfsc status,2
   694  0B9B  3400               	retlw 0
   695  0B9C  0AFF               	incf btemp+1,f
   696  0B9D  1903               	btfsc status,2
   697  0B9E  0AFE               	incf btemp,f
   698  0B9F  2B91               	goto init_ram
   699                           ; Initialize objects allocated to BANK1
   700                           psect cinit,class=CODE,delta=2
   701                           global init_ram, __pidataBANK1
   702  0CF0  30EC               	movlw low(__pdataBANK1+10)
   703  0CF1  00FD               	movwf btemp-1,f
   704  0CF2  300B               	movlw high(__pidataBANK1)
   705  0CF3  00FE               	movwf btemp,f
   706  0CF4  3070               	movlw low(__pidataBANK1)
   707  0CF5  00FF               	movwf btemp+1,f
   708  0CF6  30E2               	movlw low(__pdataBANK1)
   709  0CF7  0084               	movwf fsr,f
   710  0CF8  120A  158A  2391   	fcall init_ram
              120A  158A         
   711                           ; Initialize objects allocated to BANK0
   712                           	global __pidataBANK0
   713                           psect cinit,class=CODE,delta=2
   714  0CFD  120A  118A  27FE   	fcall	__pidataBANK0+0		;fetch initializer
              120A  158A         
   715  0D02  00EF               	movwf	__pdataBANK0+0&07fh		
   716                           psect cinit,class=CODE,delta=2
   717                           global end_of_initialization
   718                           
   719                           ;End of C runtime variable initialization code
   720                           
   721  0D03                     end_of_initialization:
   722  0D03  0183               clrf status
   723  0D04  120A  118A  2D09   ljmp _main	;jump to C main() function
   724                           psect	cstackBANK1,class=BANK1,space=1
   725                           global __pcstackBANK1
   726  00D6                     __pcstackBANK1:
   727                           	global	??_ser_init
   728  00D6                     ??_ser_init:	; 0 bytes @ 0x0
   729                           	global	??_Menu
   730  00D6                     ??_Menu:	; 0 bytes @ 0x0
   731                           	global	??_init_adc
   732  00D6                     ??_init_adc:	; 0 bytes @ 0x0
   733                           	global	??_lcd_write_control
   734  00D6                     ??_lcd_write_control:	; 0 bytes @ 0x0
   735                           	global	??_spi_transfer
   736  00D6                     ??_spi_transfer:	; 0 bytes @ 0x0
   737                           	global	??_ser_putch
   738  00D6                     ??_ser_putch:	; 0 bytes @ 0x0
   739                           	global	Menu@input
   740  00D6                     Menu@input:	; 1 bytes @ 0x0
   741  00D6                     	ds	1
   742                           	global	spi_transfer@temp
   743  00D7                     spi_transfer@temp:	; 1 bytes @ 0x1
   744                           	global	ser_putch@c
   745  00D7                     ser_putch@c:	; 1 bytes @ 0x1
   746  00D7                     	ds	1
   747                           	global	??_robo_init
   748  00D8                     ??_robo_init:	; 0 bytes @ 0x2
   749                           	global	?_robotMove
   750  00D8                     ?_robotMove:	; 0 bytes @ 0x2
   751                           	global	?_robotTurn
   752  00D8                     ?_robotTurn:	; 0 bytes @ 0x2
   753                           	global	lcd_write_control@databyte
   754  00D8                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   755                           	global	spi_transfer@data
   756  00D8                     spi_transfer@data:	; 1 bytes @ 0x2
   757                           	global	robotMove@distance
   758  00D8                     robotMove@distance:	; 2 bytes @ 0x2
   759                           	global	robotTurn@distance
   760  00D8                     robotTurn@distance:	; 2 bytes @ 0x2
   761  00D8                     	ds	1
   762                           	global	?_rotate
   763  00D9                     ?_rotate:	; 0 bytes @ 0x3
   764                           	global	??_lcd_init
   765  00D9                     ??_lcd_init:	; 0 bytes @ 0x3
   766                           	global	??_init
   767  00D9                     ??_init:	; 0 bytes @ 0x3
   768                           	global	rotate@direction
   769  00D9                     rotate@direction:	; 1 bytes @ 0x3
   770  00D9                     	ds	1
   771                           	global	??_rotate
   772  00DA                     ??_rotate:	; 0 bytes @ 0x4
   773                           	global	??_robotMove
   774  00DA                     ??_robotMove:	; 0 bytes @ 0x4
   775                           	global	??_robotTurn
   776  00DA                     ??_robotTurn:	; 0 bytes @ 0x4
   777  00DA                     	ds	2
   778                           	global	rotate@steps
   779  00DC                     rotate@steps:	; 1 bytes @ 0x6
   780  00DC                     	ds	1
   781                           	global	rotate@i
   782  00DD                     rotate@i:	; 1 bytes @ 0x7
   783  00DD                     	ds	1
   784                           	global	??_calibrateIR
   785  00DE                     ??_calibrateIR:	; 0 bytes @ 0x8
   786                           	global	??_main
   787  00DE                     ??_main:	; 0 bytes @ 0x8
   788  00DE                     	ds	3
   789                           	global	main@choice
   790  00E1                     main@choice:	; 1 bytes @ 0xB
   791  00E1                     	ds	1
   792                           psect	cstackCOMMON,class=COMMON,space=1
   793                           global __pcstackCOMMON
   794  0070                     __pcstackCOMMON:
   795                           	global	?_readAvgDistance
   796  0070                     ?_readAvgDistance:	; 0 bytes @ 0x0
   797                           	global	?_UpdateDisplay
   798  0070                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   799                           	global	?_ser_init
   800  0070                     ?_ser_init:	; 0 bytes @ 0x0
   801                           	global	?_robo_init
   802  0070                     ?_robo_init:	; 0 bytes @ 0x0
   803                           	global	?_ADCconvert
   804  0070                     ?_ADCconvert:	; 0 bytes @ 0x0
   805                           	global	?_init_adc
   806  0070                     ?_init_adc:	; 0 bytes @ 0x0
   807                           	global	?_lcd_write_control
   808  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   809                           	global	?_lcd_write_data
   810  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   811                           	global	??_lcd_write_data
   812  0070                     ??_lcd_write_data:	; 0 bytes @ 0x0
   813                           	global	?_lcd_set_cursor
   814  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   815                           	global	?_lcd_init
   816  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   817                           	global	?_isr1
   818  0070                     ?_isr1:	; 0 bytes @ 0x0
   819                           	global	?_init
   820  0070                     ?_init:	; 0 bytes @ 0x0
   821                           	global	?_calibrateIR
   822  0070                     ?_calibrateIR:	; 0 bytes @ 0x0
   823                           	global	?_main
   824  0070                     ?_main:	; 0 bytes @ 0x0
   825                           	global	?_ser_putch
   826  0070                     ?_ser_putch:	; 0 bytes @ 0x0
   827                           	global	?_Debounce
   828  0070                     ?_Debounce:	; 0 bytes @ 0x0
   829                           	global	??_Debounce
   830  0070                     ??_Debounce:	; 0 bytes @ 0x0
   831                           	global	?i1_lcd_write_control
   832  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
   833                           	global	??i1_lcd_write_control
   834  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
   835                           	global	?_ReadButtons
   836  0070                     ?_ReadButtons:	; 1 bytes @ 0x0
   837                           	global	?_Menu
   838  0070                     ?_Menu:	; 1 bytes @ 0x0
   839                           	global	?_adc_read_channel
   840  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
   841                           	global	?_spi_transfer
   842  0070                     ?_spi_transfer:	; 1 bytes @ 0x0
   843                           	global	?_adc_read
   844  0070                     ?_adc_read:	; 2 bytes @ 0x0
   845                           	global	?___wmul
   846  0070                     ?___wmul:	; 2 bytes @ 0x0
   847                           	global	?___awmod
   848  0070                     ?___awmod:	; 2 bytes @ 0x0
   849                           	global	UpdateDisplay@serialInput
   850  0070                     UpdateDisplay@serialInput:	; 1 bytes @ 0x0
   851                           	global	___wmul@multiplier
   852  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   853                           	global	___awmod@divisor
   854  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   855  0070                     	ds	1
   856                           	global	??_ReadButtons
   857  0071                     ??_ReadButtons:	; 0 bytes @ 0x1
   858  0071                     	ds	1
   859                           	global	??_adc_read
   860  0072                     ??_adc_read:	; 0 bytes @ 0x2
   861                           	global	lcd_write_data@databyte
   862  0072                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   863                           	global	i1lcd_write_control@databyte
   864  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
   865                           	global	___wmul@multiplicand
   866  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   867                           	global	___awmod@dividend
   868  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   869  0072                     	ds	1
   870                           	global	??_lcd_set_cursor
   871  0073                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   872                           	global	lcd_set_cursor@address
   873  0073                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   874  0073                     	ds	1
   875                           	global	??___wmul
   876  0074                     ??___wmul:	; 0 bytes @ 0x4
   877                           	global	??___awmod
   878  0074                     ??___awmod:	; 0 bytes @ 0x4
   879                           	global	adc_read@adc_value
   880  0074                     adc_read@adc_value:	; 2 bytes @ 0x4
   881                           	global	___wmul@product
   882  0074                     ___wmul@product:	; 2 bytes @ 0x4
   883  0074                     	ds	1
   884                           	global	___awmod@counter
   885  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   886  0075                     	ds	1
   887                           	global	??_adc_read_channel
   888  0076                     ??_adc_read_channel:	; 0 bytes @ 0x6
   889                           	global	?___lwdiv
   890  0076                     ?___lwdiv:	; 2 bytes @ 0x6
   891                           	global	___awmod@sign
   892  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   893                           	global	___lwdiv@divisor
   894  0076                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   895  0076                     	ds	1
   896                           	global	?_lcd_write_string
   897  0077                     ?_lcd_write_string:	; 0 bytes @ 0x7
   898                           	global	adc_read_channel@channel
   899  0077                     adc_read_channel@channel:	; 1 bytes @ 0x7
   900                           	global	lcd_write_string@s
   901  0077                     lcd_write_string@s:	; 2 bytes @ 0x7
   902  0077                     	ds	1
   903                           	global	?_readDistance
   904  0078                     ?_readDistance:	; 2 bytes @ 0x8
   905                           	global	___lwdiv@dividend
   906  0078                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   907  0078                     	ds	1
   908                           	global	??_lcd_write_string
   909  0079                     ??_lcd_write_string:	; 0 bytes @ 0x9
   910  0079                     	ds	1
   911                           	global	??_readDistance
   912  007A                     ??_readDistance:	; 0 bytes @ 0xA
   913                           	global	??___lwdiv
   914  007A                     ??___lwdiv:	; 0 bytes @ 0xA
   915  007A                     	ds	1
   916                           	global	___lwdiv@quotient
   917  007B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
   918  007B                     	ds	1
   919                           	global	readDistance@fullval
   920  007C                     readDistance@fullval:	; 2 bytes @ 0xC
   921  007C                     	ds	1
   922                           	global	___lwdiv@counter
   923  007D                     ___lwdiv@counter:	; 1 bytes @ 0xD
   924  007D                     	ds	1
   925                           	global	??_readAvgDistance
   926  007E                     ??_readAvgDistance:	; 0 bytes @ 0xE
   927                           psect	cstackBANK0,class=BANK0,space=1
   928                           global __pcstackBANK0
   929  0020                     __pcstackBANK0:
   930                           	global	??_ADCconvert
   931  0020                     ??_ADCconvert:	; 0 bytes @ 0x0
   932                           	global	?___lwmod
   933  0020                     ?___lwmod:	; 2 bytes @ 0x0
   934                           	global	___lwmod@divisor
   935  0020                     ___lwmod@divisor:	; 2 bytes @ 0x0
   936  0020                     	ds	2
   937                           	global	readAvgDistance@fullval
   938  0022                     readAvgDistance@fullval:	; 2 bytes @ 0x2
   939                           	global	___lwmod@dividend
   940  0022                     ___lwmod@dividend:	; 2 bytes @ 0x2
   941  0022                     	ds	2
   942                           	global	??___lwmod
   943  0024                     ??___lwmod:	; 0 bytes @ 0x4
   944                           	global	readAvgDistance@i
   945  0024                     readAvgDistance@i:	; 2 bytes @ 0x4
   946  0024                     	ds	1
   947                           	global	___lwmod@counter
   948  0025                     ___lwmod@counter:	; 1 bytes @ 0x5
   949  0025                     	ds	1
   950                           	global	?_sprintf
   951  0026                     ?_sprintf:	; 2 bytes @ 0x6
   952                           	global	sprintf@f
   953  0026                     sprintf@f:	; 1 bytes @ 0x6
   954  0026                     	ds	5
   955                           	global	??_sprintf
   956  002B                     ??_sprintf:	; 0 bytes @ 0xB
   957  002B                     	ds	3
   958                           	global	sprintf@ap
   959  002E                     sprintf@ap:	; 1 bytes @ 0xE
   960  002E                     	ds	1
   961                           	global	sprintf@flag
   962  002F                     sprintf@flag:	; 1 bytes @ 0xF
   963  002F                     	ds	1
   964                           	global	sprintf@prec
   965  0030                     sprintf@prec:	; 1 bytes @ 0x10
   966  0030                     	ds	1
   967                           	global	sprintf@_val
   968  0031                     sprintf@_val:	; 4 bytes @ 0x11
   969  0031                     	ds	4
   970                           	global	sprintf@sp
   971  0035                     sprintf@sp:	; 1 bytes @ 0x15
   972  0035                     	ds	1
   973                           	global	sprintf@c
   974  0036                     sprintf@c:	; 1 bytes @ 0x16
   975  0036                     	ds	1
   976                           	global	??_UpdateDisplay
   977  0037                     ??_UpdateDisplay:	; 0 bytes @ 0x17
   978  0037                     	ds	5
   979                           	global	UpdateDisplay@adcOutput
   980  003C                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x1C
   981  003C                     	ds	16
   982                           	global	??_isr1
   983  004C                     ??_isr1:	; 0 bytes @ 0x2C
   984  004C                     	ds	5
   985 ;;Data sizes: Strings 95, constant 10, data 11, bss 82, persistent 0 stack 0
   986 ;;Auto spaces:   Size  Autos    Used
   987 ;; COMMON          14     14      14
   988 ;; BANK0           80     49      80
   989 ;; BANK1           80     12      76
   990 ;; BANK3           96      0       0
   991 ;; BANK2           96      0       0
   992                           
   993 ;;
   994 ;; Pointer list with targets:
   995                           
   996 ;; ?___awmod	int  size(1) Largest target is 0
   997 ;;
   998 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   999 ;;
  1000 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1001 ;;
  1002 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1003 ;;
  1004 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1005 ;;
  1006 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1007 ;;
  1008 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1009 ;;		 -> STR_12(CODE[15]), STR_11(CODE[15]), 
  1010 ;;
  1011 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1012 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1013 ;;
  1014 ;; ?_sprintf	int  size(1) Largest target is 0
  1015 ;;
  1016 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1017 ;;		 -> ?_sprintf(BANK0[2]), 
  1018 ;;
  1019 ;; S8107$_cp	PTR const unsigned char  size(1) Largest target is 0
  1020 ;;
  1021 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1022 ;;
  1023 ;; shortMenuStrings	PTR const unsigned char [5] size(1) Largest target is 4
  1024 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1025 ;;		 -> STR_6(CODE[4]), 
  1026 ;;
  1027 ;; menuStrings	PTR const unsigned char [5] size(1) Largest target is 9
  1028 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1029 ;;		 -> STR_1(CODE[9]), 
  1030 ;;
  1031 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1032 ;;		 -> STR_15(CODE[4]), STR_14(CODE[8]), STR_13(CODE[4]), UpdateDisplay@adcOutput(BANK0[16]), 
  1033 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1034 ;;		 -> STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1035 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1036 ;;
  1037                           
  1038                           
  1039 ;;
  1040 ;; Critical Paths under _main in COMMON
  1041 ;;
  1042 ;;   None.
  1043 ;;
  1044 ;; Critical Paths under _isr1 in COMMON
  1045 ;;
  1046 ;;   _readAvgDistance->_readDistance
  1047 ;;   _readAvgDistance->___lwdiv
  1048 ;;   _readDistance->_adc_read_channel
  1049 ;;   _lcd_write_string->___awmod
  1050 ;;   _lcd_set_cursor->i1_lcd_write_control
  1051 ;;   _sprintf->___lwdiv
  1052 ;;   _ADCconvert->___lwdiv
  1053 ;;   _ReadButtons->_Debounce
  1054 ;;   _adc_read_channel->_adc_read
  1055 ;;   ___lwmod->___lwdiv
  1056 ;;   ___lwdiv->___wmul
  1057 ;;
  1058 ;; Critical Paths under _main in BANK0
  1059 ;;
  1060 ;;   None.
  1061 ;;
  1062 ;; Critical Paths under _isr1 in BANK0
  1063 ;;
  1064 ;;   _isr1->_UpdateDisplay
  1065 ;;   _UpdateDisplay->_sprintf
  1066 ;;   _readAvgDistance->_ADCconvert
  1067 ;;   _sprintf->___lwmod
  1068 ;;
  1069 ;; Critical Paths under _main in BANK1
  1070 ;;
  1071 ;;   _main->_rotate
  1072 ;;   _calibrateIR->_rotate
  1073 ;;   _lcd_init->_lcd_write_control
  1074 ;;   _robotTurn->_ser_putch
  1075 ;;   _robotMove->_ser_putch
  1076 ;;   _rotate->_spi_transfer
  1077 ;;   _robo_init->_ser_putch
  1078 ;;
  1079 ;; Critical Paths under _isr1 in BANK1
  1080 ;;
  1081 ;;   None.
  1082 ;;
  1083 ;; Critical Paths under _main in BANK3
  1084 ;;
  1085 ;;   None.
  1086 ;;
  1087 ;; Critical Paths under _isr1 in BANK3
  1088 ;;
  1089 ;;   None.
  1090 ;;
  1091 ;; Critical Paths under _main in BANK2
  1092 ;;
  1093 ;;   None.
  1094 ;;
  1095 ;; Critical Paths under _isr1 in BANK2
  1096 ;;
  1097 ;;   None.
  1098                           
  1099 ;;
  1100 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1101 ;;
  1102                           
  1103 ;;
  1104 ;;Call Graph Tables:
  1105 ;;
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (0) _main                                                 4     4      0     463
  1110 ;;                                              8 BANK1      4     4      0
  1111 ;;                               _init
  1112 ;;                               _Menu
  1113 ;;                        _calibrateIR
  1114 ;;                             _rotate
  1115 ;;                          _robotMove
  1116 ;;                          _robotTurn
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (1) _init                                                 1     1      0      44
  1119 ;;                                              3 BANK1      1     1      0
  1120 ;;                           _init_adc
  1121 ;;                           _lcd_init
  1122 ;;                           _ser_init
  1123 ;;                          _robo_init
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; (1) _calibrateIR                                          0     0      0      98
  1126 ;;                             _rotate
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (2) _lcd_init                                             0     0      0      22
  1129 ;;                  _lcd_write_control
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (1) _robotTurn                                            3     1      2      88
  1132 ;;                                              2 BANK1      3     1      2
  1133 ;;                          _ser_putch
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (1) _robotMove                                            3     1      2      88
  1136 ;;                                              2 BANK1      3     1      2
  1137 ;;                          _ser_putch
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; (1) _rotate                                               5     4      1      98
  1140 ;;                                              3 BANK1      5     4      1
  1141 ;;                       _spi_transfer
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) _robo_init                                            0     0      0      22
  1144 ;;                          _ser_putch
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (3) _lcd_write_control                                    3     3      0      22
  1147 ;;                                              0 BANK1      3     3      0
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (2) _init_adc                                             1     1      0       0
  1150 ;;                                              0 BANK1      1     1      0
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (2) _ser_putch                                            2     2      0      22
  1153 ;;                                              0 BANK1      2     2      0
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (2) _spi_transfer                                         3     3      0      30
  1156 ;;                                              0 BANK1      3     3      0
  1157 ;; ---------------------------------------------------------------------------------
  1158 ;; (1) _Menu                                                 1     1      0      22
  1159 ;;                                              0 BANK1      1     1      0
  1160 ;; ---------------------------------------------------------------------------------
  1161 ;; (2) _ser_init                                             1     1      0       0
  1162 ;;                                              0 BANK1      1     1      0
  1163 ;; ---------------------------------------------------------------------------------
  1164 ;; Estimated maximum stack depth 3
  1165 ;; ---------------------------------------------------------------------------------
  1166 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (4) _isr1                                                 5     5      0    2143
  1169 ;;                                             44 BANK0      5     5      0
  1170 ;;                            ___lwmod
  1171 ;;                    _readAvgDistance
  1172 ;;                      _UpdateDisplay
  1173 ;;                        _ReadButtons
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; (5) _UpdateDisplay                                       22    22      0    1429
  1176 ;;                                             23 BANK0     21    21      0
  1177 ;;                i1_lcd_write_control
  1178 ;;                            _sprintf
  1179 ;;                     _lcd_set_cursor
  1180 ;;                   _lcd_write_string
  1181 ;;                            ___awmod
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (5) _readAvgDistance                                      4     4      0     555
  1184 ;;                                              2 BANK0      4     4      0
  1185 ;;                       _readDistance
  1186 ;;                            ___lwdiv
  1187 ;;                         _ADCconvert
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (6) _readDistance                                         6     4      2      69
  1190 ;;                                              8 COMMON     6     4      2
  1191 ;;                   _adc_read_channel
  1192 ;; ---------------------------------------------------------------------------------
  1193 ;; (6) _lcd_write_string                                     2     0      2      67
  1194 ;;                                              7 COMMON     2     0      2
  1195 ;;                     _lcd_write_data
  1196 ;;                            ___awmod (ARG)
  1197 ;; ---------------------------------------------------------------------------------
  1198 ;; (6) _lcd_set_cursor                                       1     1      0      96
  1199 ;;                                              3 COMMON     1     1      0
  1200 ;;                i1_lcd_write_control
  1201 ;; ---------------------------------------------------------------------------------
  1202 ;; (7) i1_lcd_write_control                                  3     3      0      73
  1203 ;;                                              0 COMMON     3     3      0
  1204 ;; ---------------------------------------------------------------------------------
  1205 ;; (6) _sprintf                                             17    12      5     798
  1206 ;;                                              6 BANK0     17    12      5
  1207 ;;                            ___lwdiv
  1208 ;;                            ___lwmod
  1209 ;; ---------------------------------------------------------------------------------
  1210 ;; (6) _ADCconvert                                           2     2      0     254
  1211 ;;                                              0 BANK0      2     2      0
  1212 ;;                             ___wmul
  1213 ;;                            ___lwdiv
  1214 ;; ---------------------------------------------------------------------------------
  1215 ;; (5) _ReadButtons                                          0     0      0       0
  1216 ;;                           _Debounce
  1217 ;; ---------------------------------------------------------------------------------
  1218 ;; (7) _lcd_write_data                                       3     3      0      22
  1219 ;;                                              0 COMMON     3     3      0
  1220 ;; ---------------------------------------------------------------------------------
  1221 ;; (7) _adc_read_channel                                     2     2      0      46
  1222 ;;                                              6 COMMON     2     2      0
  1223 ;;                           _adc_read
  1224 ;; ---------------------------------------------------------------------------------
  1225 ;; (6) ___awmod                                              7     3      4     296
  1226 ;;                                              0 COMMON     7     3      4
  1227 ;; ---------------------------------------------------------------------------------
  1228 ;; (7) ___lwmod                                              6     2      4     159
  1229 ;;                                              0 BANK0      6     2      4
  1230 ;;                            ___lwdiv (ARG)
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (7) ___lwdiv                                              8     4      4     162
  1233 ;;                                              6 COMMON     8     4      4
  1234 ;;                             ___wmul (ARG)
  1235 ;; ---------------------------------------------------------------------------------
  1236 ;; (7) ___wmul                                               6     2      4      92
  1237 ;;                                              0 COMMON     6     2      4
  1238 ;; ---------------------------------------------------------------------------------
  1239 ;; (6) _Debounce                                             1     1      0       0
  1240 ;;                                              0 COMMON     1     1      0
  1241 ;; ---------------------------------------------------------------------------------
  1242 ;; (8) _adc_read                                             6     4      2      24
  1243 ;;                                              0 COMMON     6     4      2
  1244 ;; ---------------------------------------------------------------------------------
  1245 ;; Estimated maximum stack depth 8
  1246 ;; ---------------------------------------------------------------------------------
  1247                           
  1248 ;; Call Graph Graphs:
  1249                           
  1250 ;; _main (ROOT)
  1251 ;;   _init
  1252 ;;     _init_adc
  1253 ;;     _lcd_init
  1254 ;;       _lcd_write_control
  1255 ;;     _ser_init
  1256 ;;     _robo_init
  1257 ;;       _ser_putch
  1258 ;;   _Menu
  1259 ;;   _calibrateIR
  1260 ;;     _rotate
  1261 ;;       _spi_transfer
  1262 ;;   _rotate
  1263 ;;     _spi_transfer
  1264 ;;   _robotMove
  1265 ;;     _ser_putch
  1266 ;;   _robotTurn
  1267 ;;     _ser_putch
  1268 ;;
  1269 ;; _isr1 (ROOT)
  1270 ;;   ___lwmod
  1271 ;;     ___lwdiv (ARG)
  1272 ;;       ___wmul (ARG)
  1273 ;;   _readAvgDistance
  1274 ;;     _readDistance
  1275 ;;       _adc_read_channel
  1276 ;;         _adc_read
  1277 ;;     ___lwdiv
  1278 ;;       ___wmul (ARG)
  1279 ;;     _ADCconvert
  1280 ;;       ___wmul
  1281 ;;       ___lwdiv
  1282 ;;         ___wmul (ARG)
  1283 ;;   _UpdateDisplay
  1284 ;;     i1_lcd_write_control
  1285 ;;     _sprintf
  1286 ;;       ___lwdiv
  1287 ;;         ___wmul (ARG)
  1288 ;;       ___lwmod
  1289 ;;         ___lwdiv (ARG)
  1290 ;;           ___wmul (ARG)
  1291 ;;     _lcd_set_cursor
  1292 ;;       i1_lcd_write_control
  1293 ;;     _lcd_write_string
  1294 ;;       _lcd_write_data
  1295 ;;       ___awmod (ARG)
  1296 ;;     ___awmod
  1297 ;;   _ReadButtons
  1298 ;;     _Debounce
  1299 ;;
  1300                           
  1301 ;; Address spaces:
  1302                           
  1303 ;;Name               Size   Autos  Total    Cost      Usage
  1304 ;;BANK3               60      0       0       9        0.0%
  1305 ;;BITBANK3            60      0       0       8        0.0%
  1306 ;;SFR3                 0      0       0       4        0.0%
  1307 ;;BITSFR3              0      0       0       4        0.0%
  1308 ;;BANK2               60      0       0      11        0.0%
  1309 ;;BITBANK2            60      0       0      10        0.0%
  1310 ;;SFR2                 0      0       0       5        0.0%
  1311 ;;BITSFR2              0      0       0       5        0.0%
  1312 ;;SFR1                 0      0       0       2        0.0%
  1313 ;;BITSFR1              0      0       0       2        0.0%
  1314 ;;BANK1               50      C      4C       7       95.0%
  1315 ;;BITBANK1            50      0       0       6        0.0%
  1316 ;;CODE                 0      0       0       0        0.0%
  1317 ;;DATA                 0      0      B7      12        0.0%
  1318 ;;ABS                  0      0      AA       3        0.0%
  1319 ;;NULL                 0      0       0       0        0.0%
  1320 ;;STACK                0      0       D       2        0.0%
  1321 ;;BANK0               50     31      50       5      100.0%
  1322 ;;BITBANK0            50      0       2       4        2.5%
  1323 ;;SFR0                 0      0       0       1        0.0%
  1324 ;;BITSFR0              0      0       0       1        0.0%
  1325 ;;COMMON               E      E       E       1      100.0%
  1326 ;;BITCOMMON            E      0       0       0        0.0%
  1327 ;;EEDATA             100      0       0       0        0.0%
  1328                           
  1329                           	global	_main
  1330                           psect	maintext,global,class=CODE,delta=2
  1331                           global __pmaintext
  1332  0509                     __pmaintext:
  1333                           
  1334 ;; *************** function _main *****************
  1335 ;; Defined at:
  1336 ;;		line 202 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  choice          1   11[BANK1 ] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;		None               void
  1343 ;; Registers used:
  1344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 17F/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         0       0       0       0       0
  1351 ;;      Locals:         0       0       1       0       0
  1352 ;;      Temps:          0       0       3       0       0
  1353 ;;      Totals:         0       0       4       0       0
  1354 ;;Total ram usage:        4 bytes
  1355 ;; Hardware stack levels required when called:    8
  1356 ;; This function calls:
  1357 ;;		_init
  1358 ;;		_Menu
  1359 ;;		_calibrateIR
  1360 ;;		_rotate
  1361 ;;		_robotMove
  1362 ;;		_robotTurn
  1363 ;; This function is called by:
  1364 ;;		Startup code after reset
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           psect	maintext
  1368                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1369                           	line	202
  1370                           	global	__size_of_main
  1371  00DA                     	__size_of_main	equ	__end_of_main-_main
  1372                           	
  1373  0509                     _main:	
  1374                           	opt	stack 0
  1375                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1376                           	line	207
  1377                           	
  1378  0509                     l10803:	
  1379                           ;Main.c: 207: init();
  1380  0509  120A  158A  2460   	fcall	_init
              120A  118A         
  1381  050E  2D0F               	goto	l10805
  1382                           	line	213
  1383                           ;Main.c: 213: while(1)
  1384                           	
  1385  050F                     l2222:	
  1386                           	line	215
  1387                           	
  1388  050F                     l10805:	
  1389                           ;Main.c: 214: {
  1390                           ;Main.c: 215: unsigned char choice = 255;
  1391  050F  30FF               	movlw	(0FFh)
  1392  0510  1683               	bsf	status, 5	;RP0=1, select bank1
  1393  0511  1303               	bcf	status, 6	;RP1=0, select bank1
  1394  0512  00DE               	movwf	(??_main+0)^080h+0
  1395  0513  085E               	movf	(??_main+0)^080h+0,w
  1396  0514  00E1               	movwf	(main@choice)^080h
  1397                           	line	216
  1398                           	
  1399  0515                     l10807:	
  1400                           ;Main.c: 216: currentMenu = 0;
  1401  0515  1283               	bcf	status, 5	;RP0=0, select bank0
  1402  0516  1303               	bcf	status, 6	;RP1=0, select bank0
  1403  0517  01E3               	clrf	(_currentMenu)
  1404                           	line	217
  1405                           ;Main.c: 217: switch (buttonPressed)
  1406  0518  2D52               	goto	l10831
  1407                           	line	219
  1408                           ;Main.c: 218: {
  1409                           ;Main.c: 219: case 1:
  1410                           	
  1411  0519                     l2224:	
  1412                           	line	220
  1413                           	
  1414  0519                     l10809:	
  1415                           ;Main.c: 220: Menu(1);
  1416  0519  3001               	movlw	(01h)
  1417  051A  120A  158A  265E   	fcall	_Menu
              120A  118A         
  1418                           	line	222
  1419                           	
  1420  051F                     l10811:	
  1421                           ;Main.c: 222: buttonPressed = 0;
  1422  051F  1283               	bcf	status, 5	;RP0=0, select bank0
  1423  0520  1303               	bcf	status, 6	;RP1=0, select bank0
  1424  0521  01E2               	clrf	(_buttonPressed)	;volatile
  1425                           	line	224
  1426                           ;Main.c: 224: break;
  1427  0522  2DC5               	goto	l10851
  1428                           	line	225
  1429                           ;Main.c: 225: case 2:
  1430                           	
  1431  0523                     l2226:	
  1432                           	line	226
  1433                           	
  1434  0523                     l10813:	
  1435                           ;Main.c: 226: Menu(2);
  1436  0523  3002               	movlw	(02h)
  1437  0524  120A  158A  265E   	fcall	_Menu
              120A  118A         
  1438                           	line	228
  1439                           	
  1440  0529                     l10815:	
  1441                           ;Main.c: 228: buttonPressed = 0;
  1442  0529  1283               	bcf	status, 5	;RP0=0, select bank0
  1443  052A  1303               	bcf	status, 6	;RP1=0, select bank0
  1444  052B  01E2               	clrf	(_buttonPressed)	;volatile
  1445                           	line	230
  1446                           ;Main.c: 230: break;
  1447  052C  2DC5               	goto	l10851
  1448                           	line	231
  1449                           ;Main.c: 231: case 3:
  1450                           	
  1451  052D                     l2227:	
  1452                           	line	232
  1453                           	
  1454  052D                     l10817:	
  1455                           ;Main.c: 232: Menu(3);
  1456  052D  3003               	movlw	(03h)
  1457  052E  120A  158A  265E   	fcall	_Menu
              120A  118A         
  1458                           	line	234
  1459                           	
  1460  0533                     l10819:	
  1461                           ;Main.c: 234: buttonPressed = 0;
  1462  0533  1283               	bcf	status, 5	;RP0=0, select bank0
  1463  0534  1303               	bcf	status, 6	;RP1=0, select bank0
  1464  0535  01E2               	clrf	(_buttonPressed)	;volatile
  1465                           	line	236
  1466                           ;Main.c: 236: break;
  1467  0536  2DC5               	goto	l10851
  1468                           	line	237
  1469                           ;Main.c: 237: case 4:
  1470                           	
  1471  0537                     l2228:	
  1472                           	line	238
  1473                           	
  1474  0537                     l10821:	
  1475                           ;Main.c: 238: Menu(4);
  1476  0537  3004               	movlw	(04h)
  1477  0538  120A  158A  265E   	fcall	_Menu
              120A  118A         
  1478                           	line	240
  1479                           	
  1480  053D                     l10823:	
  1481                           ;Main.c: 240: buttonPressed = 0;
  1482  053D  1283               	bcf	status, 5	;RP0=0, select bank0
  1483  053E  1303               	bcf	status, 6	;RP1=0, select bank0
  1484  053F  01E2               	clrf	(_buttonPressed)	;volatile
  1485                           	line	242
  1486                           ;Main.c: 242: break;
  1487  0540  2DC5               	goto	l10851
  1488                           	line	243
  1489                           ;Main.c: 243: case 5:
  1490                           	
  1491  0541                     l2229:	
  1492                           	line	244
  1493                           	
  1494  0541                     l10825:	
  1495                           ;Main.c: 244: choice = Menu(5);
  1496  0541  3005               	movlw	(05h)
  1497  0542  120A  158A  265E   	fcall	_Menu
              120A  118A         
  1498  0547  1683               	bsf	status, 5	;RP0=1, select bank1
  1499  0548  1303               	bcf	status, 6	;RP1=0, select bank1
  1500  0549  00DE               	movwf	(??_main+0)^080h+0
  1501  054A  085E               	movf	(??_main+0)^080h+0,w
  1502  054B  00E1               	movwf	(main@choice)^080h
  1503                           	line	246
  1504                           	
  1505  054C                     l10827:	
  1506                           ;Main.c: 246: buttonPressed = 0;
  1507  054C  1283               	bcf	status, 5	;RP0=0, select bank0
  1508  054D  1303               	bcf	status, 6	;RP1=0, select bank0
  1509  054E  01E2               	clrf	(_buttonPressed)	;volatile
  1510                           	line	248
  1511                           ;Main.c: 248: break;
  1512  054F  2DC5               	goto	l10851
  1513                           	line	249
  1514                           ;Main.c: 249: default:
  1515                           	
  1516  0550                     l2230:	
  1517                           	line	251
  1518                           ;Main.c: 251: break;
  1519  0550  2DC5               	goto	l10851
  1520                           	line	252
  1521                           	
  1522  0551                     l10829:	
  1523                           ;Main.c: 252: }
  1524  0551  2DC5               	goto	l10851
  1525                           	line	217
  1526                           	
  1527  0552                     l2223:	
  1528                           	
  1529  0552                     l10831:	
  1530  0552  0862               	movf	(_buttonPressed),w	;volatile
  1531                           	; Switch size 1, requested type "space"
  1532                           ; Number of cases is 5, Range of values is 1 to 5
  1533                           ; switch strategies available:
  1534                           ; Name         Instructions Cycles
  1535                           ; simple_byte           16     9 (average)
  1536                           ; direct_byte           26    11 (fixed)
  1537                           ; jumptable            263     9 (fixed)
  1538                           ;	Chosen strategy is simple_byte
  1539                           
  1540                           	opt asmopt_off
  1541  0553  3A01               	xorlw	1^0	; case 1
  1542  0554  1903               	skipnz
  1543  0555  2D19               	goto	l10809
  1544  0556  3A03               	xorlw	2^1	; case 2
  1545  0557  1903               	skipnz
  1546  0558  2D23               	goto	l10813
  1547  0559  3A01               	xorlw	3^2	; case 3
  1548  055A  1903               	skipnz
  1549  055B  2D2D               	goto	l10817
  1550  055C  3A07               	xorlw	4^3	; case 4
  1551  055D  1903               	skipnz
  1552  055E  2D37               	goto	l10821
  1553  055F  3A01               	xorlw	5^4	; case 5
  1554  0560  1903               	skipnz
  1555  0561  2D41               	goto	l10825
  1556  0562  2DC5               	goto	l10851
  1557                           	opt asmopt_on
  1558                           
  1559                           	line	252
  1560                           	
  1561  0563                     l2225:	
  1562                           	line	255
  1563                           ;Main.c: 255: switch (choice)
  1564  0563  2DC5               	goto	l10851
  1565                           	line	257
  1566                           ;Main.c: 256: {
  1567                           ;Main.c: 257: case 0:
  1568                           	
  1569  0564                     l2232:	
  1570                           	line	258
  1571                           	
  1572  0564                     l10833:	
  1573                           ;Main.c: 258: calibrateIR();
  1574  0564  120A  158A  26F3   	fcall	_calibrateIR
              120A  118A         
  1575                           	line	259
  1576                           ;Main.c: 259: break;
  1577  0569  2DD8               	goto	l10853
  1578                           	line	260
  1579                           ;Main.c: 260: case 1:
  1580                           	
  1581  056A                     l2234:	
  1582                           	line	261
  1583                           	
  1584  056A                     l10835:	
  1585                           ;Main.c: 261: rotate(100, 1);
  1586  056A  1683               	bsf	status, 5	;RP0=1, select bank1
  1587  056B  1303               	bcf	status, 6	;RP1=0, select bank1
  1588  056C  01D9               	clrf	(?_rotate)^080h
  1589  056D  1403               	bsf	status,0
  1590  056E  0DD9               	rlf	(?_rotate)^080h,f
  1591  056F  3064               	movlw	(064h)
  1592  0570  120A  158A  25D3   	fcall	_rotate
              120A  118A         
  1593                           	line	263
  1594                           ;Main.c: 263: break;
  1595  0575  2DD8               	goto	l10853
  1596                           	line	264
  1597                           ;Main.c: 264: case 2:
  1598                           	
  1599  0576                     l2235:	
  1600                           	line	265
  1601                           	
  1602  0576                     l10837:	
  1603                           ;Main.c: 265: _delay((unsigned long)((100)*(20000000/4000.0)));
  1604                           	opt asmopt_off
  1605  0576  3003               movlw  3
  1606  0577  1683               	bsf	status, 5	;RP0=1, select bank1
  1607  0578  1303               	bcf	status, 6	;RP1=0, select bank1
  1608  0579  00E0               movwf	((??_main+0)^080h+0+2),f
  1609  057A  308A               movlw	138
  1610  057B  00DF               movwf	((??_main+0)^080h+0+1),f
  1611  057C  3056               	movlw	86
  1612  057D  00DE               movwf	((??_main+0)^080h+0),f
  1613  057E                     u4307:
  1614  057E  0BDE               	decfsz	((??_main+0)^080h+0),f
  1615  057F  2D7E               	goto	u4307
  1616  0580  0BDF               	decfsz	((??_main+0)^080h+0+1),f
  1617  0581  2D7E               	goto	u4307
  1618  0582  0BE0               	decfsz	((??_main+0)^080h+0+2),f
  1619  0583  2D7E               	goto	u4307
  1620  0584  2D85               	nop2
  1621                           opt asmopt_on
  1622                           
  1623                           	line	266
  1624                           	
  1625  0585                     l10839:	
  1626                           ;Main.c: 266: robotMove(2000);
  1627  0585  30D0               	movlw	low(07D0h)
  1628  0586  1683               	bsf	status, 5	;RP0=1, select bank1
  1629  0587  1303               	bcf	status, 6	;RP1=0, select bank1
  1630  0588  00D8               	movwf	(?_robotMove)^080h
  1631  0589  3007               	movlw	high(07D0h)
  1632  058A  00D9               	movwf	((?_robotMove)^080h)+1
  1633  058B  120A  118A  25E3   	fcall	_robotMove
              120A  118A         
  1634                           	line	269
  1635                           ;Main.c: 269: break;
  1636  0590  2DD8               	goto	l10853
  1637                           	line	270
  1638                           ;Main.c: 270: case 3:
  1639                           	
  1640  0591                     l2236:	
  1641                           	line	271
  1642                           	
  1643  0591                     l10841:	
  1644                           ;Main.c: 271: _delay((unsigned long)((100)*(20000000/4000.0)));
  1645                           	opt asmopt_off
  1646  0591  3003               movlw  3
  1647  0592  1683               	bsf	status, 5	;RP0=1, select bank1
  1648  0593  1303               	bcf	status, 6	;RP1=0, select bank1
  1649  0594  00E0               movwf	((??_main+0)^080h+0+2),f
  1650  0595  308A               movlw	138
  1651  0596  00DF               movwf	((??_main+0)^080h+0+1),f
  1652  0597  3056               	movlw	86
  1653  0598  00DE               movwf	((??_main+0)^080h+0),f
  1654  0599                     u4317:
  1655  0599  0BDE               	decfsz	((??_main+0)^080h+0),f
  1656  059A  2D99               	goto	u4317
  1657  059B  0BDF               	decfsz	((??_main+0)^080h+0+1),f
  1658  059C  2D99               	goto	u4317
  1659  059D  0BE0               	decfsz	((??_main+0)^080h+0+2),f
  1660  059E  2D99               	goto	u4317
  1661  059F  2DA0               	nop2
  1662                           opt asmopt_on
  1663                           
  1664                           	line	272
  1665                           	
  1666  05A0                     l10843:	
  1667                           ;Main.c: 272: robotMove(1000);
  1668  05A0  30E8               	movlw	low(03E8h)
  1669  05A1  1683               	bsf	status, 5	;RP0=1, select bank1
  1670  05A2  1303               	bcf	status, 6	;RP1=0, select bank1
  1671  05A3  00D8               	movwf	(?_robotMove)^080h
  1672  05A4  3003               	movlw	high(03E8h)
  1673  05A5  00D9               	movwf	((?_robotMove)^080h)+1
  1674  05A6  120A  118A  25E3   	fcall	_robotMove
              120A  118A         
  1675                           	line	273
  1676                           	
  1677  05AB                     l10845:	
  1678                           ;Main.c: 273: robotTurn(-90);
  1679  05AB  30A6               	movlw	low(-90)
  1680  05AC  1683               	bsf	status, 5	;RP0=1, select bank1
  1681  05AD  1303               	bcf	status, 6	;RP1=0, select bank1
  1682  05AE  00D8               	movwf	(?_robotTurn)^080h
  1683  05AF  30FF               	movlw	high(-90)
  1684  05B0  00D9               	movwf	((?_robotTurn)^080h)+1
  1685  05B1  120A  118A  266B   	fcall	_robotTurn
              120A  118A         
  1686                           	line	274
  1687                           	
  1688  05B6                     l10847:	
  1689                           ;Main.c: 274: robotMove(1000);
  1690  05B6  30E8               	movlw	low(03E8h)
  1691  05B7  1683               	bsf	status, 5	;RP0=1, select bank1
  1692  05B8  1303               	bcf	status, 6	;RP1=0, select bank1
  1693  05B9  00D8               	movwf	(?_robotMove)^080h
  1694  05BA  3003               	movlw	high(03E8h)
  1695  05BB  00D9               	movwf	((?_robotMove)^080h)+1
  1696  05BC  120A  118A  25E3   	fcall	_robotMove
              120A  118A         
  1697                           	line	275
  1698                           ;Main.c: 275: break;
  1699  05C1  2DD8               	goto	l10853
  1700                           	line	276
  1701                           ;Main.c: 276: case 4:
  1702                           	
  1703  05C2                     l2237:	
  1704                           	line	278
  1705                           ;Main.c: 278: break;
  1706  05C2  2DD8               	goto	l10853
  1707                           	line	281
  1708                           ;Main.c: 281: default:
  1709                           	
  1710  05C3                     l2238:	
  1711                           	line	283
  1712                           ;Main.c: 283: break;
  1713  05C3  2DD8               	goto	l10853
  1714                           	line	284
  1715                           	
  1716  05C4                     l10849:	
  1717                           ;Main.c: 284: }
  1718  05C4  2DD8               	goto	l10853
  1719                           	line	255
  1720                           	
  1721  05C5                     l2231:	
  1722                           	
  1723  05C5                     l10851:	
  1724  05C5  1683               	bsf	status, 5	;RP0=1, select bank1
  1725  05C6  1303               	bcf	status, 6	;RP1=0, select bank1
  1726  05C7  0861               	movf	(main@choice)^080h,w
  1727                           	; Switch size 1, requested type "space"
  1728                           ; Number of cases is 5, Range of values is 0 to 4
  1729                           ; switch strategies available:
  1730                           ; Name         Instructions Cycles
  1731                           ; simple_byte           16     9 (average)
  1732                           ; direct_byte           23     8 (fixed)
  1733                           ; jumptable            260     6 (fixed)
  1734                           ; rangetable             9     6 (fixed)
  1735                           ; spacedrange           16     9 (fixed)
  1736                           ; locatedrange           5     3 (fixed)
  1737                           ;	Chosen strategy is simple_byte
  1738                           
  1739                           	opt asmopt_off
  1740  05C8  3A00               	xorlw	0^0	; case 0
  1741  05C9  1903               	skipnz
  1742  05CA  2D64               	goto	l10833
  1743  05CB  3A01               	xorlw	1^0	; case 1
  1744  05CC  1903               	skipnz
  1745  05CD  2D6A               	goto	l10835
  1746  05CE  3A03               	xorlw	2^1	; case 2
  1747  05CF  1903               	skipnz
  1748  05D0  2D76               	goto	l10837
  1749  05D1  3A01               	xorlw	3^2	; case 3
  1750  05D2  1903               	skipnz
  1751  05D3  2D91               	goto	l10841
  1752  05D4  3A07               	xorlw	4^3	; case 4
  1753  05D5  1903               	skipnz
  1754  05D6  2DD8               	goto	l10853
  1755  05D7  2DD8               	goto	l10853
  1756                           	opt asmopt_on
  1757                           
  1758                           	line	284
  1759                           	
  1760  05D8                     l2233:	
  1761                           	line	285
  1762                           	
  1763  05D8                     l10853:	
  1764                           ;Main.c: 285: choice = 255;
  1765  05D8  30FF               	movlw	(0FFh)
  1766  05D9  1683               	bsf	status, 5	;RP0=1, select bank1
  1767  05DA  1303               	bcf	status, 6	;RP1=0, select bank1
  1768  05DB  00DE               	movwf	(??_main+0)^080h+0
  1769  05DC  085E               	movf	(??_main+0)^080h+0,w
  1770  05DD  00E1               	movwf	(main@choice)^080h
  1771  05DE  2D0F               	goto	l10805
  1772                           	line	435
  1773                           	
  1774  05DF                     l2239:	
  1775                           	line	213
  1776  05DF  2D0F               	goto	l10805
  1777                           	
  1778  05E0                     l2240:	
  1779                           	line	436
  1780                           	
  1781  05E0                     l2241:	
  1782                           	global	start
  1783  05E0  120A  118A  2812   	ljmp	start
  1784                           	opt stack 0
  1785                           GLOBAL	__end_of_main
  1786  05E3                     	__end_of_main:
  1787 ;; =============== function _main ends ============
  1788                           
  1789                           	signat	_main,88
  1790                           	global	_init
  1791                           psect	text755,local,class=CODE,delta=2
  1792                           global __ptext755
  1793  0C60                     __ptext755:
  1794                           
  1795 ;; *************** function _init *****************
  1796 ;; Defined at:
  1797 ;;		line 127 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;		None               void
  1804 ;; Registers used:
  1805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1811 ;;      Params:         0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0
  1813 ;;      Temps:          0       0       1       0       0
  1814 ;;      Totals:         0       0       1       0       0
  1815 ;;Total ram usage:        1 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    7
  1818 ;; This function calls:
  1819 ;;		_init_adc
  1820 ;;		_lcd_init
  1821 ;;		_ser_init
  1822 ;;		_robo_init
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           psect	text755
  1828                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1829                           	line	127
  1830                           	global	__size_of_init
  1831  0029                     	__size_of_init	equ	__end_of_init-_init
  1832                           	
  1833  0C60                     _init:	
  1834                           	opt	stack 0
  1835                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1836                           	line	128
  1837                           	
  1838  0C60                     l10785:	
  1839                           ;Main.c: 128: init_adc();
  1840  0C60  120A  158A  23C8   	fcall	_init_adc
              120A  158A         
  1841                           	line	129
  1842                           ;Main.c: 129: lcd_init();
  1843  0C65  120A  158A  2507   	fcall	_lcd_init
              120A  158A         
  1844                           	line	130
  1845                           ;Main.c: 130: ser_init();
  1846  0C6A  120A  158A  2438   	fcall	_ser_init
              120A  158A         
  1847                           	line	131
  1848                           	
  1849  0C6F                     l10787:	
  1850                           ;Main.c: 131: robo_init();
  1851  0C6F  120A  158A  23DC   	fcall	_robo_init
              120A  158A         
  1852                           	line	133
  1853                           	
  1854  0C74                     l10789:	
  1855                           ;Main.c: 133: TRISB = 0b11111100;
  1856  0C74  30FC               	movlw	(0FCh)
  1857  0C75  1683               	bsf	status, 5	;RP0=1, select bank1
  1858  0C76  1303               	bcf	status, 6	;RP1=0, select bank1
  1859  0C77  0086               	movwf	(134)^080h	;volatile
  1860                           	line	135
  1861                           	
  1862  0C78                     l10791:	
  1863                           ;Main.c: 135: TRISC &= 0b10010000;
  1864  0C78  3090               	movlw	(090h)
  1865  0C79  00D9               	movwf	(??_init+0)^080h+0
  1866  0C7A  0859               	movf	(??_init+0)^080h+0,w
  1867  0C7B  0587               	andwf	(135)^080h,f	;volatile
  1868                           	line	137
  1869                           	
  1870  0C7C                     l10793:	
  1871                           ;Main.c: 137: SSPSTAT = 0b01000000;
  1872  0C7C  3040               	movlw	(040h)
  1873  0C7D  0094               	movwf	(148)^080h	;volatile
  1874                           	line	138
  1875                           	
  1876  0C7E                     l10795:	
  1877                           ;Main.c: 138: SSPCON = 0b10100001;
  1878  0C7E  30A1               	movlw	(0A1h)
  1879  0C7F  1283               	bcf	status, 5	;RP0=0, select bank0
  1880  0C80  1303               	bcf	status, 6	;RP1=0, select bank0
  1881  0C81  0094               	movwf	(20)	;volatile
  1882                           	line	140
  1883                           	
  1884  0C82                     l10797:	
  1885                           ;Main.c: 140: OPTION_REG = 0b00000100;
  1886  0C82  3004               	movlw	(04h)
  1887  0C83  1683               	bsf	status, 5	;RP0=1, select bank1
  1888  0C84  1303               	bcf	status, 6	;RP1=0, select bank1
  1889  0C85  0081               	movwf	(129)^080h	;volatile
  1890                           	line	143
  1891                           	
  1892  0C86                     l10799:	
  1893                           ;Main.c: 143: TMR0IE = 1;
  1894  0C86  168B               	bsf	(93/8),(93)&7
  1895                           	line	146
  1896                           	
  1897  0C87                     l10801:	
  1898                           ;Main.c: 146: (GIE = 1);
  1899  0C87  178B               	bsf	(95/8),(95)&7
  1900                           	line	147
  1901                           	
  1902  0C88                     l2205:	
  1903  0C88  0008               	return
  1904                           	opt stack 0
  1905                           GLOBAL	__end_of_init
  1906  0C89                     	__end_of_init:
  1907 ;; =============== function _init ends ============
  1908                           
  1909                           	signat	_init,88
  1910                           	global	_calibrateIR
  1911                           psect	text756,local,class=CODE,delta=2
  1912                           global __ptext756
  1913  0EF3                     __ptext756:
  1914                           
  1915 ;; *************** function _calibrateIR *****************
  1916 ;; Defined at:
  1917 ;;		line 152 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;		None               void
  1924 ;; Registers used:
  1925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0
  1934 ;;      Totals:         0       0       0       0       0
  1935 ;;Total ram usage:        0 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    7
  1938 ;; This function calls:
  1939 ;;		_rotate
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           psect	text756
  1945                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  1946                           	line	152
  1947                           	global	__size_of_calibrateIR
  1948  0052                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  1949                           	
  1950  0EF3                     _calibrateIR:	
  1951                           	opt	stack 0
  1952                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1953                           	line	154
  1954                           	
  1955  0EF3                     l10761:	
  1956                           ;Main.c: 154: currentMenu = 1;
  1957  0EF3  1283               	bcf	status, 5	;RP0=0, select bank0
  1958  0EF4  1303               	bcf	status, 6	;RP1=0, select bank0
  1959  0EF5  01E3               	clrf	(_currentMenu)
  1960  0EF6  1403               	bsf	status,0
  1961  0EF7  0DE3               	rlf	(_currentMenu),f
  1962                           	line	155
  1963                           	
  1964  0EF8                     l10763:	
  1965                           ;Main.c: 155: rotate(8, 0);
  1966  0EF8  1683               	bsf	status, 5	;RP0=1, select bank1
  1967  0EF9  1303               	bcf	status, 6	;RP1=0, select bank1
  1968  0EFA  01D9               	clrf	(?_rotate)^080h
  1969  0EFB  3008               	movlw	(08h)
  1970  0EFC  120A  158A  25D3   	fcall	_rotate
              120A  158A         
  1971  0F01  2F2F               	goto	l10783
  1972                           	line	156
  1973                           ;Main.c: 156: while (1)
  1974                           	
  1975  0F02                     l2208:	
  1976                           	line	158
  1977                           ;Main.c: 157: {
  1978                           ;Main.c: 158: switch (buttonPressed)
  1979  0F02  2F2F               	goto	l10783
  1980                           	line	160
  1981                           ;Main.c: 159: {
  1982                           ;Main.c: 160: case 1:
  1983                           	
  1984  0F03                     l2210:	
  1985                           	line	163
  1986                           ;Main.c: 163: buttonPressed = 0;
  1987  0F03  01E2               	clrf	(_buttonPressed)	;volatile
  1988                           	line	165
  1989                           ;Main.c: 165: break;
  1990  0F04  2F2F               	goto	l10783
  1991                           	line	166
  1992                           ;Main.c: 166: case 2:
  1993                           	
  1994  0F05                     l2212:	
  1995                           	line	169
  1996                           ;Main.c: 169: buttonPressed = 0;
  1997  0F05  01E2               	clrf	(_buttonPressed)	;volatile
  1998                           	line	171
  1999                           ;Main.c: 171: break;
  2000  0F06  2F2F               	goto	l10783
  2001                           	line	172
  2002                           ;Main.c: 172: case 3:
  2003                           	
  2004  0F07                     l2213:	
  2005                           	line	173
  2006                           	
  2007  0F07                     l10765:	
  2008                           ;Main.c: 173: rotate(1, 1);
  2009  0F07  1683               	bsf	status, 5	;RP0=1, select bank1
  2010  0F08  1303               	bcf	status, 6	;RP1=0, select bank1
  2011  0F09  01D9               	clrf	(?_rotate)^080h
  2012  0F0A  1403               	bsf	status,0
  2013  0F0B  0DD9               	rlf	(?_rotate)^080h,f
  2014  0F0C  3001               	movlw	(01h)
  2015  0F0D  120A  158A  25D3   	fcall	_rotate
              120A  158A         
  2016                           	line	175
  2017                           	
  2018  0F12                     l10767:	
  2019                           ;Main.c: 175: buttonPressed = 0;
  2020  0F12  1283               	bcf	status, 5	;RP0=0, select bank0
  2021  0F13  1303               	bcf	status, 6	;RP1=0, select bank0
  2022  0F14  01E2               	clrf	(_buttonPressed)	;volatile
  2023                           	line	177
  2024                           ;Main.c: 177: break;
  2025  0F15  2F2F               	goto	l10783
  2026                           	line	178
  2027                           ;Main.c: 178: case 4:
  2028                           	
  2029  0F16                     l2214:	
  2030                           	line	179
  2031                           	
  2032  0F16                     l10769:	
  2033                           ;Main.c: 179: rotate(1, 0);
  2034  0F16  1683               	bsf	status, 5	;RP0=1, select bank1
  2035  0F17  1303               	bcf	status, 6	;RP1=0, select bank1
  2036  0F18  01D9               	clrf	(?_rotate)^080h
  2037  0F19  3001               	movlw	(01h)
  2038  0F1A  120A  158A  25D3   	fcall	_rotate
              120A  158A         
  2039                           	line	181
  2040                           	
  2041  0F1F                     l10771:	
  2042                           ;Main.c: 181: buttonPressed = 0;
  2043  0F1F  1283               	bcf	status, 5	;RP0=0, select bank0
  2044  0F20  1303               	bcf	status, 6	;RP1=0, select bank0
  2045  0F21  01E2               	clrf	(_buttonPressed)	;volatile
  2046                           	line	183
  2047                           ;Main.c: 183: break;
  2048  0F22  2F2F               	goto	l10783
  2049                           	line	184
  2050                           ;Main.c: 184: case 5:
  2051                           	
  2052  0F23                     l2215:	
  2053                           	line	185
  2054                           	
  2055  0F23                     l10773:	
  2056                           ;Main.c: 185: totalSteps = 0;
  2057  0F23  1683               	bsf	status, 5	;RP0=1, select bank1
  2058  0F24  1303               	bcf	status, 6	;RP1=0, select bank1
  2059  0F25  01D2               	clrf	(_totalSteps)^080h
  2060  0F26  01D3               	clrf	(_totalSteps+1)^080h
  2061                           	line	187
  2062                           	
  2063  0F27                     l10775:	
  2064                           ;Main.c: 187: buttonPressed = 0;
  2065  0F27  1283               	bcf	status, 5	;RP0=0, select bank0
  2066  0F28  1303               	bcf	status, 6	;RP1=0, select bank0
  2067  0F29  01E2               	clrf	(_buttonPressed)	;volatile
  2068  0F2A  2F44               	goto	l2216
  2069                           	line	188
  2070                           	
  2071  0F2B                     l10777:	
  2072                           ;Main.c: 188: return;
  2073  0F2B  2F44               	goto	l2216
  2074                           	line	189
  2075                           	
  2076  0F2C                     l10779:	
  2077                           ;Main.c: 189: break;
  2078  0F2C  2F2F               	goto	l10783
  2079                           	line	190
  2080                           ;Main.c: 190: default:
  2081                           	
  2082  0F2D                     l2217:	
  2083                           	line	192
  2084                           ;Main.c: 192: break;
  2085  0F2D  2F2F               	goto	l10783
  2086                           	line	193
  2087                           	
  2088  0F2E                     l10781:	
  2089                           ;Main.c: 193: }
  2090  0F2E  2F2F               	goto	l10783
  2091                           	line	158
  2092                           	
  2093  0F2F                     l2209:	
  2094                           	
  2095  0F2F                     l10783:	
  2096  0F2F  1283               	bcf	status, 5	;RP0=0, select bank0
  2097  0F30  1303               	bcf	status, 6	;RP1=0, select bank0
  2098  0F31  0862               	movf	(_buttonPressed),w	;volatile
  2099                           	; Switch size 1, requested type "space"
  2100                           ; Number of cases is 5, Range of values is 1 to 5
  2101                           ; switch strategies available:
  2102                           ; Name         Instructions Cycles
  2103                           ; simple_byte           16     9 (average)
  2104                           ; direct_byte           26    11 (fixed)
  2105                           ; jumptable            263     9 (fixed)
  2106                           ;	Chosen strategy is simple_byte
  2107                           
  2108                           	opt asmopt_off
  2109  0F32  3A01               	xorlw	1^0	; case 1
  2110  0F33  1903               	skipnz
  2111  0F34  2F03               	goto	l2210
  2112  0F35  3A03               	xorlw	2^1	; case 2
  2113  0F36  1903               	skipnz
  2114  0F37  2F05               	goto	l2212
  2115  0F38  3A01               	xorlw	3^2	; case 3
  2116  0F39  1903               	skipnz
  2117  0F3A  2F07               	goto	l10765
  2118  0F3B  3A07               	xorlw	4^3	; case 4
  2119  0F3C  1903               	skipnz
  2120  0F3D  2F16               	goto	l10769
  2121  0F3E  3A01               	xorlw	5^4	; case 5
  2122  0F3F  1903               	skipnz
  2123  0F40  2F23               	goto	l10773
  2124  0F41  2F2F               	goto	l10783
  2125                           	opt asmopt_on
  2126                           
  2127                           	line	193
  2128                           	
  2129  0F42                     l2211:	
  2130  0F42  2F2F               	goto	l10783
  2131                           	line	194
  2132                           	
  2133  0F43                     l2218:	
  2134                           	line	156
  2135  0F43  2F2F               	goto	l10783
  2136                           	
  2137  0F44                     l2219:	
  2138                           	line	195
  2139                           	
  2140  0F44                     l2216:	
  2141  0F44  0008               	return
  2142                           	opt stack 0
  2143                           GLOBAL	__end_of_calibrateIR
  2144  0F45                     	__end_of_calibrateIR:
  2145 ;; =============== function _calibrateIR ends ============
  2146                           
  2147                           	signat	_calibrateIR,88
  2148                           	global	_lcd_init
  2149                           psect	text757,local,class=CODE,delta=2
  2150                           global __ptext757
  2151  0D07                     __ptext757:
  2152                           
  2153 ;; *************** function _lcd_init *****************
  2154 ;; Defined at:
  2155 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;		None               void
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         0       0       0       0       0
  2170 ;;      Locals:         0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0
  2172 ;;      Totals:         0       0       0       0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    6
  2176 ;; This function calls:
  2177 ;;		_lcd_write_control
  2178 ;; This function is called by:
  2179 ;;		_init
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           psect	text757
  2183                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  2184                           	line	101
  2185                           	global	__size_of_lcd_init
  2186  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  2187                           	
  2188  0D07                     _lcd_init:	
  2189                           	opt	stack 0
  2190                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2191                           	line	105
  2192                           	
  2193  0D07                     l10741:	
  2194                           ;lcd.c: 105: ADCON1 = 0b00000010;
  2195  0D07  3002               	movlw	(02h)
  2196  0D08  1683               	bsf	status, 5	;RP0=1, select bank1
  2197  0D09  1303               	bcf	status, 6	;RP1=0, select bank1
  2198  0D0A  009F               	movwf	(159)^080h	;volatile
  2199                           	line	108
  2200                           	
  2201  0D0B                     l10743:	
  2202                           ;lcd.c: 108: PORTD = 0;
  2203  0D0B  1283               	bcf	status, 5	;RP0=0, select bank0
  2204  0D0C  1303               	bcf	status, 6	;RP1=0, select bank0
  2205  0D0D  0188               	clrf	(8)	;volatile
  2206                           	line	109
  2207                           	
  2208  0D0E                     l10745:	
  2209                           ;lcd.c: 109: PORTE = 0;
  2210  0D0E  0189               	clrf	(9)	;volatile
  2211                           	line	111
  2212                           	
  2213  0D0F                     l10747:	
  2214                           ;lcd.c: 111: TRISD = 0b00000000;
  2215  0D0F  1683               	bsf	status, 5	;RP0=1, select bank1
  2216  0D10  1303               	bcf	status, 6	;RP1=0, select bank1
  2217  0D11  0188               	clrf	(136)^080h	;volatile
  2218                           	line	112
  2219                           	
  2220  0D12                     l10749:	
  2221                           ;lcd.c: 112: TRISE = 0b00000000;
  2222  0D12  0189               	clrf	(137)^080h	;volatile
  2223                           	line	115
  2224                           	
  2225  0D13                     l10751:	
  2226                           ;lcd.c: 115: lcd_write_control(0b00000001);
  2227  0D13  3001               	movlw	(01h)
  2228  0D14  120A  158A  23F5   	fcall	_lcd_write_control
              120A  158A         
  2229                           	line	116
  2230                           	
  2231  0D19                     l10753:	
  2232                           ;lcd.c: 116: lcd_write_control(0b00111000);
  2233  0D19  3038               	movlw	(038h)
  2234  0D1A  120A  158A  23F5   	fcall	_lcd_write_control
              120A  158A         
  2235                           	line	117
  2236                           	
  2237  0D1F                     l10755:	
  2238                           ;lcd.c: 117: lcd_write_control(0b00001100);
  2239  0D1F  300C               	movlw	(0Ch)
  2240  0D20  120A  158A  23F5   	fcall	_lcd_write_control
              120A  158A         
  2241                           	line	118
  2242                           	
  2243  0D25                     l10757:	
  2244                           ;lcd.c: 118: lcd_write_control(0b00000110);
  2245  0D25  3006               	movlw	(06h)
  2246  0D26  120A  158A  23F5   	fcall	_lcd_write_control
              120A  158A         
  2247                           	line	119
  2248                           	
  2249  0D2B                     l10759:	
  2250                           ;lcd.c: 119: lcd_write_control(0b00000010);
  2251  0D2B  3002               	movlw	(02h)
  2252  0D2C  120A  158A  23F5   	fcall	_lcd_write_control
              120A  158A         
  2253                           	line	121
  2254                           	
  2255  0D31                     l1429:	
  2256  0D31  0008               	return
  2257                           	opt stack 0
  2258                           GLOBAL	__end_of_lcd_init
  2259  0D32                     	__end_of_lcd_init:
  2260 ;; =============== function _lcd_init ends ============
  2261                           
  2262                           	signat	_lcd_init,88
  2263                           	global	_robotTurn
  2264                           psect	text758,local,class=CODE,delta=2
  2265                           global __ptext758
  2266  066B                     __ptext758:
  2267                           
  2268 ;; *************** function _robotTurn *****************
  2269 ;; Defined at:
  2270 ;;		line 75 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  distance        2    2[BANK1 ] int 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;		None               void
  2277 ;; Registers used:
  2278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         0       0       2       0       0
  2285 ;;      Locals:         0       0       0       0       0
  2286 ;;      Temps:          0       0       1       0       0
  2287 ;;      Totals:         0       0       3       0       0
  2288 ;;Total ram usage:        3 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    6
  2291 ;; This function calls:
  2292 ;;		_ser_putch
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           psect	text758
  2298                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2299                           	line	75
  2300                           	global	__size_of_robotTurn
  2301  0080                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  2302                           	
  2303  066B                     _robotTurn:	
  2304                           	opt	stack 1
  2305                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2306                           	line	78
  2307                           	
  2308  066B                     l10731:	
  2309                           ;robot.c: 78: turnlowByte = (unsigned char) (distance) ;
  2310  066B  1683               	bsf	status, 5	;RP0=1, select bank1
  2311  066C  1303               	bcf	status, 6	;RP1=0, select bank1
  2312  066D  0858               	movf	(robotTurn@distance)^080h,w
  2313  066E  00DA               	movwf	(??_robotTurn+0)^080h+0
  2314  066F  085A               	movf	(??_robotTurn+0)^080h+0,w
  2315  0670  00D5               	movwf	(_turnlowByte)^080h
  2316                           	line	79
  2317                           	
  2318  0671                     l10733:	
  2319                           ;robot.c: 79: turnhighByte = (unsigned char) (distance >> 8);
  2320  0671  0859               	movf	(robotTurn@distance+1)^080h,w
  2321  0672  00DA               	movwf	(??_robotTurn+0)^080h+0
  2322  0673  085A               	movf	(??_robotTurn+0)^080h+0,w
  2323  0674  00D4               	movwf	(_turnhighByte)^080h
  2324                           	line	80
  2325                           	
  2326  0675                     l10735:	
  2327                           ;robot.c: 80: if (distance >= 0)
  2328  0675  1BD9               	btfsc	(robotTurn@distance+1)^080h,7
  2329  0676  2E78               	goto	u4291
  2330  0677  2E79               	goto	u4290
  2331  0678                     u4291:
  2332  0678  2E98               	goto	l10739
  2333  0679                     u4290:
  2334                           	line	82
  2335                           	
  2336  0679                     l10737:	
  2337                           ;robot.c: 81: {
  2338                           ;robot.c: 82: ser_putch(137);
  2339  0679  3089               	movlw	(089h)
  2340  067A  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2341                           	line	84
  2342                           ;robot.c: 84: ser_putch(0);
  2343  067F  3000               	movlw	(0)
  2344  0680  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2345                           	line	86
  2346                           ;robot.c: 86: ser_putch(100);
  2347  0685  3064               	movlw	(064h)
  2348  0686  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2349                           	line	88
  2350                           ;robot.c: 88: ser_putch(0);
  2351  068B  3000               	movlw	(0)
  2352  068C  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2353                           	line	90
  2354                           ;robot.c: 90: ser_putch(1);
  2355  0691  3001               	movlw	(01h)
  2356  0692  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2357                           	line	91
  2358                           ;robot.c: 91: }
  2359  0697  2EB6               	goto	l6687
  2360                           	line	92
  2361                           	
  2362  0698                     l6686:	
  2363                           	line	94
  2364                           	
  2365  0698                     l10739:	
  2366                           ;robot.c: 92: else
  2367                           ;robot.c: 93: {
  2368                           ;robot.c: 94: ser_putch(137);
  2369  0698  3089               	movlw	(089h)
  2370  0699  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2371                           	line	96
  2372                           ;robot.c: 96: ser_putch(0);
  2373  069E  3000               	movlw	(0)
  2374  069F  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2375                           	line	98
  2376                           ;robot.c: 98: ser_putch(100);
  2377  06A4  3064               	movlw	(064h)
  2378  06A5  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2379                           	line	100
  2380                           ;robot.c: 100: ser_putch(255);
  2381  06AA  30FF               	movlw	(0FFh)
  2382  06AB  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2383                           	line	102
  2384                           ;robot.c: 102: ser_putch(255);
  2385  06B0  30FF               	movlw	(0FFh)
  2386  06B1  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2387                           	line	103
  2388                           	
  2389  06B6                     l6687:	
  2390                           	line	104
  2391                           ;robot.c: 103: }
  2392                           ;robot.c: 104: ser_putch(157);
  2393  06B6  309D               	movlw	(09Dh)
  2394  06B7  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2395                           	line	106
  2396                           ;robot.c: 106: ser_putch(turnhighByte);
  2397  06BC  1683               	bsf	status, 5	;RP0=1, select bank1
  2398  06BD  1303               	bcf	status, 6	;RP1=0, select bank1
  2399  06BE  0854               	movf	(_turnhighByte)^080h,w
  2400  06BF  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2401                           	line	108
  2402                           ;robot.c: 108: ser_putch(turnlowByte);
  2403  06C4  1683               	bsf	status, 5	;RP0=1, select bank1
  2404  06C5  1303               	bcf	status, 6	;RP1=0, select bank1
  2405  06C6  0855               	movf	(_turnlowByte)^080h,w
  2406  06C7  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2407                           	line	110
  2408                           ;robot.c: 110: ser_putch(137);
  2409  06CC  3089               	movlw	(089h)
  2410  06CD  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2411                           	line	112
  2412                           ;robot.c: 112: ser_putch(0);
  2413  06D2  3000               	movlw	(0)
  2414  06D3  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2415                           	line	114
  2416                           ;robot.c: 114: ser_putch(0);
  2417  06D8  3000               	movlw	(0)
  2418  06D9  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2419                           	line	116
  2420                           ;robot.c: 116: ser_putch(0);
  2421  06DE  3000               	movlw	(0)
  2422  06DF  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2423                           	line	118
  2424                           ;robot.c: 118: ser_putch(0);
  2425  06E4  3000               	movlw	(0)
  2426  06E5  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2427                           	line	120
  2428                           	
  2429  06EA                     l6688:	
  2430  06EA  0008               	return
  2431                           	opt stack 0
  2432                           GLOBAL	__end_of_robotTurn
  2433  06EB                     	__end_of_robotTurn:
  2434 ;; =============== function _robotTurn ends ============
  2435                           
  2436                           	signat	_robotTurn,4216
  2437                           	global	_robotMove
  2438                           psect	text759,local,class=CODE,delta=2
  2439                           global __ptext759
  2440  05E3                     __ptext759:
  2441                           
  2442 ;; *************** function _robotMove *****************
  2443 ;; Defined at:
  2444 ;;		line 28 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  distance        2    2[BANK1 ] int 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;		None               void
  2451 ;; Registers used:
  2452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       0       2       0       0
  2459 ;;      Locals:         0       0       0       0       0
  2460 ;;      Temps:          0       0       1       0       0
  2461 ;;      Totals:         0       0       3       0       0
  2462 ;;Total ram usage:        3 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    6
  2465 ;; This function calls:
  2466 ;;		_ser_putch
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           psect	text759
  2472                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2473                           	line	28
  2474                           	global	__size_of_robotMove
  2475  0088                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  2476                           	
  2477  05E3                     _robotMove:	
  2478                           	opt	stack 1
  2479                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2480                           	line	30
  2481                           	
  2482  05E3                     l10721:	
  2483                           ;robot.c: 30: lowByte = (unsigned char) (distance) ;
  2484  05E3  1683               	bsf	status, 5	;RP0=1, select bank1
  2485  05E4  1303               	bcf	status, 6	;RP1=0, select bank1
  2486  05E5  0858               	movf	(robotMove@distance)^080h,w
  2487  05E6  00DA               	movwf	(??_robotMove+0)^080h+0
  2488  05E7  085A               	movf	(??_robotMove+0)^080h+0,w
  2489  05E8  1283               	bcf	status, 5	;RP0=0, select bank0
  2490  05E9  1303               	bcf	status, 6	;RP1=0, select bank0
  2491  05EA  00E6               	movwf	(_lowByte)
  2492                           	line	31
  2493                           	
  2494  05EB                     l10723:	
  2495                           ;robot.c: 31: highByte = (unsigned char) (distance >> 8);
  2496  05EB  1683               	bsf	status, 5	;RP0=1, select bank1
  2497  05EC  1303               	bcf	status, 6	;RP1=0, select bank1
  2498  05ED  0859               	movf	(robotMove@distance+1)^080h,w
  2499  05EE  00DA               	movwf	(??_robotMove+0)^080h+0
  2500  05EF  085A               	movf	(??_robotMove+0)^080h+0,w
  2501  05F0  1283               	bcf	status, 5	;RP0=0, select bank0
  2502  05F1  1303               	bcf	status, 6	;RP1=0, select bank0
  2503  05F2  00E5               	movwf	(_highByte)
  2504                           	line	32
  2505                           	
  2506  05F3                     l10725:	
  2507                           ;robot.c: 32: if (distance >= 0)
  2508  05F3  1683               	bsf	status, 5	;RP0=1, select bank1
  2509  05F4  1303               	bcf	status, 6	;RP1=0, select bank1
  2510  05F5  1BD9               	btfsc	(robotMove@distance+1)^080h,7
  2511  05F6  2DF8               	goto	u4281
  2512  05F7  2DF9               	goto	u4280
  2513  05F8                     u4281:
  2514  05F8  2E18               	goto	l10729
  2515  05F9                     u4280:
  2516                           	line	34
  2517                           	
  2518  05F9                     l10727:	
  2519                           ;robot.c: 33: {
  2520                           ;robot.c: 34: ser_putch(137);
  2521  05F9  3089               	movlw	(089h)
  2522  05FA  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2523                           	line	36
  2524                           ;robot.c: 36: ser_putch(0);
  2525  05FF  3000               	movlw	(0)
  2526  0600  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2527                           	line	38
  2528                           ;robot.c: 38: ser_putch(200);
  2529  0605  30C8               	movlw	(0C8h)
  2530  0606  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2531                           	line	40
  2532                           ;robot.c: 40: ser_putch(128);
  2533  060B  3080               	movlw	(080h)
  2534  060C  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2535                           	line	42
  2536                           ;robot.c: 42: ser_putch(0);
  2537  0611  3000               	movlw	(0)
  2538  0612  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2539                           	line	43
  2540                           ;robot.c: 43: }
  2541  0617  2E36               	goto	l6682
  2542                           	line	44
  2543                           	
  2544  0618                     l6681:	
  2545                           	line	46
  2546                           	
  2547  0618                     l10729:	
  2548                           ;robot.c: 44: else
  2549                           ;robot.c: 45: {
  2550                           ;robot.c: 46: ser_putch(137);
  2551  0618  3089               	movlw	(089h)
  2552  0619  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2553                           	line	48
  2554                           ;robot.c: 48: ser_putch(0xff);
  2555  061E  30FF               	movlw	(0FFh)
  2556  061F  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2557                           	line	50
  2558                           ;robot.c: 50: ser_putch(0x38);
  2559  0624  3038               	movlw	(038h)
  2560  0625  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2561                           	line	52
  2562                           ;robot.c: 52: ser_putch(128);
  2563  062A  3080               	movlw	(080h)
  2564  062B  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2565                           	line	54
  2566                           ;robot.c: 54: ser_putch(0);
  2567  0630  3000               	movlw	(0)
  2568  0631  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2569                           	line	55
  2570                           	
  2571  0636                     l6682:	
  2572                           	line	56
  2573                           ;robot.c: 55: }
  2574                           ;robot.c: 56: ser_putch(156);
  2575  0636  309C               	movlw	(09Ch)
  2576  0637  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2577                           	line	58
  2578                           ;robot.c: 58: ser_putch(highByte);
  2579  063C  1283               	bcf	status, 5	;RP0=0, select bank0
  2580  063D  1303               	bcf	status, 6	;RP1=0, select bank0
  2581  063E  0865               	movf	(_highByte),w
  2582  063F  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2583                           	line	60
  2584                           ;robot.c: 60: ser_putch(lowByte);
  2585  0644  1283               	bcf	status, 5	;RP0=0, select bank0
  2586  0645  1303               	bcf	status, 6	;RP1=0, select bank0
  2587  0646  0866               	movf	(_lowByte),w
  2588  0647  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2589                           	line	62
  2590                           ;robot.c: 62: ser_putch(137);
  2591  064C  3089               	movlw	(089h)
  2592  064D  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2593                           	line	64
  2594                           ;robot.c: 64: ser_putch(0);
  2595  0652  3000               	movlw	(0)
  2596  0653  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2597                           	line	66
  2598                           ;robot.c: 66: ser_putch(0);
  2599  0658  3000               	movlw	(0)
  2600  0659  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2601                           	line	68
  2602                           ;robot.c: 68: ser_putch(0);
  2603  065E  3000               	movlw	(0)
  2604  065F  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2605                           	line	70
  2606                           ;robot.c: 70: ser_putch(0);
  2607  0664  3000               	movlw	(0)
  2608  0665  120A  158A  2532   	fcall	_ser_putch
              120A  118A         
  2609                           	line	72
  2610                           	
  2611  066A                     l6683:	
  2612  066A  0008               	return
  2613                           	opt stack 0
  2614                           GLOBAL	__end_of_robotMove
  2615  066B                     	__end_of_robotMove:
  2616 ;; =============== function _robotMove ends ============
  2617                           
  2618                           	signat	_robotMove,4216
  2619                           	global	_rotate
  2620                           psect	text760,local,class=CODE,delta=2
  2621                           global __ptext760
  2622  0DD3                     __ptext760:
  2623                           
  2624 ;; *************** function _rotate *****************
  2625 ;; Defined at:
  2626 ;;		line 48 in file "H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  steps           1    wreg     unsigned char 
  2629 ;;  direction       1    3[BANK1 ] unsigned char 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  steps           1    6[BANK1 ] unsigned char 
  2632 ;;  i               1    7[BANK1 ] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;		None               void
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         0       0       1       0       0
  2643 ;;      Locals:         0       0       2       0       0
  2644 ;;      Temps:          0       0       2       0       0
  2645 ;;      Totals:         0       0       5       0       0
  2646 ;;Total ram usage:        5 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    6
  2649 ;; This function calls:
  2650 ;;		_spi_transfer
  2651 ;; This function is called by:
  2652 ;;		_calibrateIR
  2653 ;;		_main
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           psect	text760
  2657                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  2658                           	line	48
  2659                           	global	__size_of_rotate
  2660  0045                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  2661                           	
  2662  0DD3                     _rotate:	
  2663                           	opt	stack 1
  2664                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  2665                           ;rotate@steps stored from wreg
  2666                           	line	50
  2667  0DD3  1683               	bsf	status, 5	;RP0=1, select bank1
  2668  0DD4  1303               	bcf	status, 6	;RP1=0, select bank1
  2669  0DD5  00DC               	movwf	(rotate@steps)^080h
  2670                           	
  2671  0DD6                     l10701:	
  2672                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  2673  0DD6  1283               	bcf	status, 5	;RP0=0, select bank0
  2674  0DD7  1303               	bcf	status, 6	;RP1=0, select bank0
  2675  0DD8  1407               	bsf	(56/8),(56)&7
  2676  0DD9  1487               	bsf	(57/8),(57)&7
  2677                           	line	51
  2678                           	
  2679  0DDA                     l10703:	
  2680                           ;steppermotor.c: 51: if (direction == 0)
  2681  0DDA  1683               	bsf	status, 5	;RP0=1, select bank1
  2682  0DDB  1303               	bcf	status, 6	;RP1=0, select bank1
  2683  0DDC  08D9               	movf	(rotate@direction)^080h,f
  2684  0DDD  1D03               	skipz
  2685  0DDE  2DE0               	goto	u4261
  2686  0DDF  2DE1               	goto	u4260
  2687  0DE0                     u4261:
  2688  0DE0  2DE8               	goto	l10707
  2689  0DE1                     u4260:
  2690                           	line	52
  2691                           	
  2692  0DE1                     l10705:	
  2693                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  2694  0DE1  300F               	movlw	(0Fh)
  2695  0DE2  120A  118A  27E0   	fcall	_spi_transfer
              120A  158A         
  2696  0DE7  2DEF               	goto	l10709
  2697                           	line	53
  2698                           	
  2699  0DE8                     l3664:	
  2700                           	line	54
  2701                           	
  2702  0DE8                     l10707:	
  2703                           ;steppermotor.c: 53: else
  2704                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  2705  0DE8  300D               	movlw	(0Dh)
  2706  0DE9  120A  118A  27E0   	fcall	_spi_transfer
              120A  158A         
  2707  0DEE  2DEF               	goto	l10709
  2708                           	
  2709  0DEF                     l3665:	
  2710                           	line	55
  2711                           	
  2712  0DEF                     l10709:	
  2713                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  2714  0DEF  1283               	bcf	status, 5	;RP0=0, select bank0
  2715  0DF0  1303               	bcf	status, 6	;RP1=0, select bank0
  2716  0DF1  1007               	bcf	(56/8),(56)&7
  2717                           	
  2718  0DF2                     l10711:	
  2719  0DF2  1087               	bcf	(57/8),(57)&7
  2720                           	line	56
  2721                           	
  2722  0DF3                     l10713:	
  2723                           ;steppermotor.c: 56: for (unsigned char i = 0; i <= steps; i++)
  2724  0DF3  1683               	bsf	status, 5	;RP0=1, select bank1
  2725  0DF4  1303               	bcf	status, 6	;RP1=0, select bank1
  2726  0DF5  01DD               	clrf	(rotate@i)^080h
  2727  0DF6  2E10               	goto	l10719
  2728                           	line	57
  2729                           	
  2730  0DF7                     l3667:	
  2731                           	line	58
  2732                           ;steppermotor.c: 57: {
  2733                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  2734  0DF7  1283               	bcf	status, 5	;RP0=0, select bank0
  2735  0DF8  1303               	bcf	status, 6	;RP1=0, select bank0
  2736  0DF9  1507               	bsf	(58/8),(58)&7
  2737  0DFA  0000               	nop
  2738  0DFB  1283               	bcf	status, 5	;RP0=0, select bank0
  2739  0DFC  1303               	bcf	status, 6	;RP1=0, select bank0
  2740  0DFD  1107               	bcf	(58/8),(58)&7
  2741                           	line	59
  2742                           	
  2743  0DFE                     l10715:	
  2744                           ;steppermotor.c: 59: _delay((unsigned long)((10)*(20000000/4000.0)));
  2745                           	opt asmopt_off
  2746  0DFE  3041               movlw	65
  2747  0DFF  1683               	bsf	status, 5	;RP0=1, select bank1
  2748  0E00  1303               	bcf	status, 6	;RP1=0, select bank1
  2749  0E01  00DB               movwf	((??_rotate+0)^080h+0+1),f
  2750  0E02  30EE               	movlw	238
  2751  0E03  00DA               movwf	((??_rotate+0)^080h+0),f
  2752  0E04                     u4327:
  2753  0E04  0BDA               	decfsz	((??_rotate+0)^080h+0),f
  2754  0E05  2E04               	goto	u4327
  2755  0E06  0BDB               	decfsz	((??_rotate+0)^080h+0+1),f
  2756  0E07  2E04               	goto	u4327
  2757  0E08  0064               	clrwdt
  2758                           opt asmopt_on
  2759                           
  2760                           	line	56
  2761                           	
  2762  0E09                     l10717:	
  2763  0E09  3001               	movlw	(01h)
  2764  0E0A  1683               	bsf	status, 5	;RP0=1, select bank1
  2765  0E0B  1303               	bcf	status, 6	;RP1=0, select bank1
  2766  0E0C  00DA               	movwf	(??_rotate+0)^080h+0
  2767  0E0D  085A               	movf	(??_rotate+0)^080h+0,w
  2768  0E0E  07DD               	addwf	(rotate@i)^080h,f
  2769  0E0F  2E10               	goto	l10719
  2770                           	
  2771  0E10                     l3666:	
  2772                           	
  2773  0E10                     l10719:	
  2774  0E10  085D               	movf	(rotate@i)^080h,w
  2775  0E11  025C               	subwf	(rotate@steps)^080h,w
  2776  0E12  1803               	skipnc
  2777  0E13  2E15               	goto	u4271
  2778  0E14  2E16               	goto	u4270
  2779  0E15                     u4271:
  2780  0E15  2DF7               	goto	l3667
  2781  0E16                     u4270:
  2782  0E16  2E17               	goto	l3669
  2783                           	
  2784  0E17                     l3668:	
  2785                           	line	61
  2786                           	
  2787  0E17                     l3669:	
  2788  0E17  0008               	return
  2789                           	opt stack 0
  2790                           GLOBAL	__end_of_rotate
  2791  0E18                     	__end_of_rotate:
  2792 ;; =============== function _rotate ends ============
  2793                           
  2794                           	signat	_rotate,8312
  2795                           	global	_robo_init
  2796                           psect	text761,local,class=CODE,delta=2
  2797                           global __ptext761
  2798  0BDC                     __ptext761:
  2799                           
  2800 ;; *************** function _robo_init *****************
  2801 ;; Defined at:
  2802 ;;		line 9 in file "H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         0       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0
  2819 ;;      Totals:         0       0       0       0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    6
  2823 ;; This function calls:
  2824 ;;		_ser_putch
  2825 ;; This function is called by:
  2826 ;;		_init
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           psect	text761
  2830                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\robot.c"
  2831                           	line	9
  2832                           	global	__size_of_robo_init
  2833  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  2834                           	
  2835  0BDC                     _robo_init:	
  2836                           	opt	stack 0
  2837                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2838                           	line	10
  2839                           	
  2840  0BDC                     l10699:	
  2841                           ;robot.c: 10: ser_putch(128);
  2842  0BDC  3080               	movlw	(080h)
  2843  0BDD  120A  158A  2532   	fcall	_ser_putch
              120A  158A         
  2844                           	line	11
  2845                           ;robot.c: 11: ser_putch(132);
  2846  0BE2  3084               	movlw	(084h)
  2847  0BE3  120A  158A  2532   	fcall	_ser_putch
              120A  158A         
  2848                           	line	14
  2849                           ;robot.c: 14: ser_putch (142);
  2850  0BE8  308E               	movlw	(08Eh)
  2851  0BE9  120A  158A  2532   	fcall	_ser_putch
              120A  158A         
  2852                           	line	15
  2853                           ;robot.c: 15: ser_putch (19);
  2854  0BEE  3013               	movlw	(013h)
  2855  0BEF  120A  158A  2532   	fcall	_ser_putch
              120A  158A         
  2856                           	line	16
  2857                           	
  2858  0BF4                     l6673:	
  2859  0BF4  0008               	return
  2860                           	opt stack 0
  2861                           GLOBAL	__end_of_robo_init
  2862  0BF5                     	__end_of_robo_init:
  2863 ;; =============== function _robo_init ends ============
  2864                           
  2865                           	signat	_robo_init,88
  2866                           	global	_lcd_write_control
  2867                           psect	text762,local,class=CODE,delta=2
  2868                           global __ptext762
  2869  0BF5                     __ptext762:
  2870                           
  2871 ;; *************** function _lcd_write_control *****************
  2872 ;; Defined at:
  2873 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  databyte        1    wreg     unsigned char 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  databyte        1    2[BANK1 ] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;		None               void
  2880 ;; Registers used:
  2881 ;;		wreg
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         0       0       1       0       0
  2889 ;;      Temps:          0       0       2       0       0
  2890 ;;      Totals:         0       0       3       0       0
  2891 ;;Total ram usage:        3 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    5
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_lcd_init
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           psect	text762
  2901                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  2902                           	line	18
  2903                           	global	__size_of_lcd_write_control
  2904  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  2905                           	
  2906  0BF5                     _lcd_write_control:	
  2907                           	opt	stack 0
  2908                           ; Regs used in _lcd_write_control: [wreg]
  2909                           ;lcd_write_control@databyte stored from wreg
  2910  0BF5  1683               	bsf	status, 5	;RP0=1, select bank1
  2911  0BF6  1303               	bcf	status, 6	;RP1=0, select bank1
  2912  0BF7  00D8               	movwf	(lcd_write_control@databyte)^080h
  2913                           	line	19
  2914                           	
  2915  0BF8                     l10691:	
  2916                           ;lcd.c: 19: RE2 = 0;
  2917  0BF8  1283               	bcf	status, 5	;RP0=0, select bank0
  2918  0BF9  1303               	bcf	status, 6	;RP1=0, select bank0
  2919  0BFA  1109               	bcf	(74/8),(74)&7
  2920                           	line	20
  2921                           ;lcd.c: 20: RE1 = 0;
  2922  0BFB  1089               	bcf	(73/8),(73)&7
  2923                           	line	21
  2924                           ;lcd.c: 21: RE0 = 0;
  2925  0BFC  1009               	bcf	(72/8),(72)&7
  2926                           	line	22
  2927                           	
  2928  0BFD                     l10693:	
  2929                           ;lcd.c: 22: PORTD = databyte;
  2930  0BFD  1683               	bsf	status, 5	;RP0=1, select bank1
  2931  0BFE  1303               	bcf	status, 6	;RP1=0, select bank1
  2932  0BFF  0858               	movf	(lcd_write_control@databyte)^080h,w
  2933  0C00  1283               	bcf	status, 5	;RP0=0, select bank0
  2934  0C01  1303               	bcf	status, 6	;RP1=0, select bank0
  2935  0C02  0088               	movwf	(8)	;volatile
  2936                           	line	23
  2937                           	
  2938  0C03                     l10695:	
  2939                           ;lcd.c: 23: RE2 = 1;
  2940  0C03  1509               	bsf	(74/8),(74)&7
  2941                           	line	24
  2942                           	
  2943  0C04                     l10697:	
  2944                           ;lcd.c: 24: RE2 = 0;
  2945  0C04  1109               	bcf	(74/8),(74)&7
  2946                           	line	25
  2947                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  2948                           	opt asmopt_off
  2949  0C05  300D               movlw	13
  2950  0C06  1683               	bsf	status, 5	;RP0=1, select bank1
  2951  0C07  1303               	bcf	status, 6	;RP1=0, select bank1
  2952  0C08  00D7               movwf	((??_lcd_write_control+0)^080h+0+1),f
  2953  0C09  30FB               	movlw	251
  2954  0C0A  00D6               movwf	((??_lcd_write_control+0)^080h+0),f
  2955  0C0B                     u4337:
  2956  0C0B  0BD6               	decfsz	((??_lcd_write_control+0)^080h+0),f
  2957  0C0C  2C0B               	goto	u4337
  2958  0C0D  0BD7               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  2959  0C0E  2C0B               	goto	u4337
  2960  0C0F  2C10               	nop2
  2961                           opt asmopt_on
  2962                           
  2963                           	line	26
  2964                           	
  2965  0C10                     l1399:	
  2966  0C10  0008               	return
  2967                           	opt stack 0
  2968                           GLOBAL	__end_of_lcd_write_control
  2969  0C11                     	__end_of_lcd_write_control:
  2970 ;; =============== function _lcd_write_control ends ============
  2971                           
  2972                           	signat	_lcd_write_control,4216
  2973                           	global	_init_adc
  2974                           psect	text763,local,class=CODE,delta=2
  2975                           global __ptext763
  2976  0BC8                     __ptext763:
  2977                           
  2978 ;; *************** function _init_adc *****************
  2979 ;; Defined at:
  2980 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;		None               void
  2987 ;; Registers used:
  2988 ;;		wreg, status,2
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0
  2996 ;;      Temps:          0       0       1       0       0
  2997 ;;      Totals:         0       0       1       0       0
  2998 ;;Total ram usage:        1 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    5
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_init
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           psect	text763
  3008                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  3009                           	line	46
  3010                           	global	__size_of_init_adc
  3011  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  3012                           	
  3013  0BC8                     _init_adc:	
  3014                           	opt	stack 1
  3015                           ; Regs used in _init_adc: [wreg+status,2]
  3016                           	line	48
  3017                           	
  3018  0BC8                     l10681:	
  3019                           ;adc.c: 48: PORTA = 0;
  3020  0BC8  1283               	bcf	status, 5	;RP0=0, select bank0
  3021  0BC9  1303               	bcf	status, 6	;RP1=0, select bank0
  3022  0BCA  0185               	clrf	(5)	;volatile
  3023                           	line	49
  3024                           	
  3025  0BCB                     l10683:	
  3026                           ;adc.c: 49: TRISA = 0b00111111;
  3027  0BCB  303F               	movlw	(03Fh)
  3028  0BCC  1683               	bsf	status, 5	;RP0=1, select bank1
  3029  0BCD  1303               	bcf	status, 6	;RP1=0, select bank1
  3030  0BCE  0085               	movwf	(133)^080h	;volatile
  3031                           	line	52
  3032                           	
  3033  0BCF                     l10685:	
  3034                           ;adc.c: 52: ADCON0 = 0b10100001;
  3035  0BCF  30A1               	movlw	(0A1h)
  3036  0BD0  1283               	bcf	status, 5	;RP0=0, select bank0
  3037  0BD1  1303               	bcf	status, 6	;RP1=0, select bank0
  3038  0BD2  009F               	movwf	(31)	;volatile
  3039                           	line	53
  3040                           	
  3041  0BD3                     l10687:	
  3042                           ;adc.c: 53: ADCON1 = 0b0000010;
  3043  0BD3  3002               	movlw	(02h)
  3044  0BD4  1683               	bsf	status, 5	;RP0=1, select bank1
  3045  0BD5  1303               	bcf	status, 6	;RP1=0, select bank1
  3046  0BD6  009F               	movwf	(159)^080h	;volatile
  3047                           	line	55
  3048                           	
  3049  0BD7                     l10689:	
  3050                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  3051                           	opt asmopt_off
  3052  0BD7  3053               movlw	83
  3053  0BD8  00D6               movwf	(??_init_adc+0)^080h+0,f
  3054  0BD9                     u4347:
  3055  0BD9  0BD6               decfsz	(??_init_adc+0)^080h+0,f
  3056  0BDA  2BD9               	goto	u4347
  3057                           opt asmopt_on
  3058                           
  3059                           	line	57
  3060                           	
  3061  0BDB                     l700:	
  3062  0BDB  0008               	return
  3063                           	opt stack 0
  3064                           GLOBAL	__end_of_init_adc
  3065  0BDC                     	__end_of_init_adc:
  3066 ;; =============== function _init_adc ends ============
  3067                           
  3068                           	signat	_init_adc,88
  3069                           	global	_ser_putch
  3070                           psect	text764,local,class=CODE,delta=2
  3071                           global __ptext764
  3072  0D32                     __ptext764:
  3073                           
  3074 ;; *************** function _ser_putch *****************
  3075 ;; Defined at:
  3076 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  c               1    wreg     unsigned char 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  c               1    1[BANK1 ] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;		None               void
  3083 ;; Registers used:
  3084 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       0       0       0       0
  3091 ;;      Locals:         0       0       1       0       0
  3092 ;;      Temps:          0       0       1       0       0
  3093 ;;      Totals:         0       0       2       0       0
  3094 ;;Total ram usage:        2 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    5
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_robo_init
  3101 ;;		_robotMove
  3102 ;;		_robotTurn
  3103 ;;		_ser_puts
  3104 ;;		_ser_puts2
  3105 ;;		_ser_puthex
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           psect	text764
  3109                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  3110                           	line	70
  3111                           	global	__size_of_ser_putch
  3112  002E                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  3113                           	
  3114  0D32                     _ser_putch:	
  3115                           	opt	stack 1
  3116                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  3117                           ;ser_putch@c stored from wreg
  3118  0D32  1683               	bsf	status, 5	;RP0=1, select bank1
  3119  0D33  1303               	bcf	status, 6	;RP1=0, select bank1
  3120  0D34  00D7               	movwf	(ser_putch@c)^080h
  3121                           	line	71
  3122                           	
  3123  0D35                     l10419:	
  3124                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  3125  0D35  2D37               	goto	l10421
  3126                           	
  3127  0D36                     l4410:	
  3128                           	line	72
  3129                           ;ser.c: 72: continue;
  3130  0D36  2D37               	goto	l10421
  3131                           	
  3132  0D37                     l4409:	
  3133                           	line	71
  3134                           	
  3135  0D37                     l10421:	
  3136  0D37  1283               	bcf	status, 5	;RP0=0, select bank0
  3137  0D38  086B               	movf	(_txiptr),w	;volatile
  3138  0D39  3E01               	addlw	01h
  3139  0D3A  390F               	andlw	0Fh
  3140  0D3B  066C               	xorwf	(_txoptr),w	;volatile
  3141  0D3C  1903               	skipnz
  3142  0D3D  2D3F               	goto	u3691
  3143  0D3E  2D40               	goto	u3690
  3144  0D3F                     u3691:
  3145  0D3F  2D37               	goto	l10421
  3146  0D40                     u3690:
  3147                           	
  3148  0D40                     l4411:	
  3149                           	line	73
  3150                           ;ser.c: 73: GIE=0;
  3151  0D40  138B               	bcf	(95/8),(95)&7
  3152                           	line	74
  3153                           	
  3154  0D41                     l10423:	
  3155                           ;ser.c: 74: txfifo[txiptr] = c;
  3156  0D41  1683               	bsf	status, 5	;RP0=1, select bank1
  3157  0D42  1303               	bcf	status, 6	;RP1=0, select bank1
  3158  0D43  0857               	movf	(ser_putch@c)^080h,w
  3159  0D44  00D6               	movwf	(??_ser_putch+0)^080h+0
  3160  0D45  1283               	bcf	status, 5	;RP0=0, select bank0
  3161  0D46  1303               	bcf	status, 6	;RP1=0, select bank0
  3162  0D47  086B               	movf	(_txiptr),w
  3163  0D48  3EC0               	addlw	_txfifo&0ffh
  3164  0D49  0084               	movwf	fsr0
  3165  0D4A  1683               	bsf	status, 5	;RP0=1, select bank1
  3166  0D4B  1303               	bcf	status, 6	;RP1=0, select bank1
  3167  0D4C  0856               	movf	(??_ser_putch+0)^080h+0,w
  3168  0D4D  1383               	bcf	status, 7	;select IRP bank1
  3169  0D4E  0080               	movwf	indf
  3170                           	line	75
  3171                           	
  3172  0D4F                     l10425:	
  3173                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  3174  0D4F  1283               	bcf	status, 5	;RP0=0, select bank0
  3175  0D50  1303               	bcf	status, 6	;RP1=0, select bank0
  3176  0D51  086B               	movf	(_txiptr),w	;volatile
  3177  0D52  3E01               	addlw	01h
  3178  0D53  390F               	andlw	0Fh
  3179  0D54  1683               	bsf	status, 5	;RP0=1, select bank1
  3180  0D55  1303               	bcf	status, 6	;RP1=0, select bank1
  3181  0D56  00D6               	movwf	(??_ser_putch+0)^080h+0
  3182  0D57  0856               	movf	(??_ser_putch+0)^080h+0,w
  3183  0D58  1283               	bcf	status, 5	;RP0=0, select bank0
  3184  0D59  1303               	bcf	status, 6	;RP1=0, select bank0
  3185  0D5A  00EB               	movwf	(_txiptr)	;volatile
  3186                           	line	76
  3187                           	
  3188  0D5B                     l10427:	
  3189                           ;ser.c: 76: TXIE=1;
  3190  0D5B  1683               	bsf	status, 5	;RP0=1, select bank1
  3191  0D5C  1303               	bcf	status, 6	;RP1=0, select bank1
  3192  0D5D  160C               	bsf	(1124/8)^080h,(1124)&7
  3193                           	line	77
  3194                           	
  3195  0D5E                     l10429:	
  3196                           ;ser.c: 77: GIE=1;
  3197  0D5E  178B               	bsf	(95/8),(95)&7
  3198                           	line	78
  3199                           	
  3200  0D5F                     l4412:	
  3201  0D5F  0008               	return
  3202                           	opt stack 0
  3203                           GLOBAL	__end_of_ser_putch
  3204  0D60                     	__end_of_ser_putch:
  3205 ;; =============== function _ser_putch ends ============
  3206                           
  3207                           	signat	_ser_putch,4216
  3208                           	global	_spi_transfer
  3209                           psect	text765,local,class=CODE,delta=2
  3210                           global __ptext765
  3211  07E0                     __ptext765:
  3212                           
  3213 ;; *************** function _spi_transfer *****************
  3214 ;; Defined at:
  3215 ;;		line 34 in file "H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  data            1    wreg     unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  data            1    2[BANK1 ] unsigned char 
  3220 ;;  temp            1    1[BANK1 ] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      unsigned char 
  3223 ;; Registers used:
  3224 ;;		wreg
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3230 ;;      Params:         0       0       0       0       0
  3231 ;;      Locals:         0       0       2       0       0
  3232 ;;      Temps:          0       0       1       0       0
  3233 ;;      Totals:         0       0       3       0       0
  3234 ;;Total ram usage:        3 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    5
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_rotate
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           psect	text765
  3244                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\steppermotor.c"
  3245                           	line	34
  3246                           	global	__size_of_spi_transfer
  3247  001E                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  3248                           	
  3249  07E0                     _spi_transfer:	
  3250                           	opt	stack 1
  3251                           ; Regs used in _spi_transfer: [wreg]
  3252                           ;spi_transfer@data stored from wreg
  3253  07E0  1683               	bsf	status, 5	;RP0=1, select bank1
  3254  07E1  1303               	bcf	status, 6	;RP1=0, select bank1
  3255  07E2  00D8               	movwf	(spi_transfer@data)^080h
  3256                           	line	35
  3257                           	
  3258  07E3                     l10315:	
  3259                           ;steppermotor.c: 35: unsigned char temp = 0;
  3260  07E3  01D7               	clrf	(spi_transfer@temp)^080h
  3261                           	line	37
  3262                           ;steppermotor.c: 37: SSPIF = 0;
  3263  07E4  1283               	bcf	status, 5	;RP0=0, select bank0
  3264  07E5  1303               	bcf	status, 6	;RP1=0, select bank0
  3265  07E6  118C               	bcf	(99/8),(99)&7
  3266                           	line	38
  3267                           	
  3268  07E7                     l10317:	
  3269                           ;steppermotor.c: 38: SSPBUF = data;
  3270  07E7  1683               	bsf	status, 5	;RP0=1, select bank1
  3271  07E8  1303               	bcf	status, 6	;RP1=0, select bank1
  3272  07E9  0858               	movf	(spi_transfer@data)^080h,w
  3273  07EA  1283               	bcf	status, 5	;RP0=0, select bank0
  3274  07EB  1303               	bcf	status, 6	;RP1=0, select bank0
  3275  07EC  0093               	movwf	(19)	;volatile
  3276                           	line	40
  3277                           ;steppermotor.c: 40: while (SSPIF == 0);
  3278  07ED  2FEE               	goto	l3658
  3279                           	
  3280  07EE                     l3659:	
  3281                           	
  3282  07EE                     l3658:	
  3283  07EE  1D8C               	btfss	(99/8),(99)&7
  3284  07EF  2FF1               	goto	u3611
  3285  07F0  2FF2               	goto	u3610
  3286  07F1                     u3611:
  3287  07F1  2FEE               	goto	l3658
  3288  07F2                     u3610:
  3289  07F2  2FF3               	goto	l10319
  3290                           	
  3291  07F3                     l3660:	
  3292                           	line	41
  3293                           	
  3294  07F3                     l10319:	
  3295                           ;steppermotor.c: 41: temp = SSPBUF;
  3296  07F3  0813               	movf	(19),w	;volatile
  3297  07F4  1683               	bsf	status, 5	;RP0=1, select bank1
  3298  07F5  1303               	bcf	status, 6	;RP1=0, select bank1
  3299  07F6  00D6               	movwf	(??_spi_transfer+0)^080h+0
  3300  07F7  0856               	movf	(??_spi_transfer+0)^080h+0,w
  3301  07F8  00D7               	movwf	(spi_transfer@temp)^080h
  3302                           	line	42
  3303                           	
  3304  07F9                     l10321:	
  3305                           ;steppermotor.c: 42: SSPIF = 0;
  3306  07F9  1283               	bcf	status, 5	;RP0=0, select bank0
  3307  07FA  1303               	bcf	status, 6	;RP1=0, select bank0
  3308  07FB  118C               	bcf	(99/8),(99)&7
  3309  07FC  2FFD               	goto	l3661
  3310                           	line	44
  3311                           	
  3312  07FD                     l10323:	
  3313                           	line	45
  3314                           ;steppermotor.c: 44: return temp;
  3315                           ;	Return value of _spi_transfer is never used
  3316                           	
  3317  07FD                     l3661:	
  3318  07FD  0008               	return
  3319                           	opt stack 0
  3320                           GLOBAL	__end_of_spi_transfer
  3321  07FE                     	__end_of_spi_transfer:
  3322 ;; =============== function _spi_transfer ends ============
  3323                           
  3324                           	signat	_spi_transfer,4217
  3325                           	global	_Menu
  3326                           psect	text766,local,class=CODE,delta=2
  3327                           global __ptext766
  3328  0E5E                     __ptext766:
  3329                           
  3330 ;; *************** function _Menu *****************
  3331 ;; Defined at:
  3332 ;;		line 180 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  input           1    wreg     unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  input           1    0[BANK1 ] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      unsigned char 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         0       0       0       0       0
  3347 ;;      Locals:         0       0       1       0       0
  3348 ;;      Temps:          0       0       0       0       0
  3349 ;;      Totals:         0       0       1       0       0
  3350 ;;Total ram usage:        1 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    5
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           psect	text766
  3360                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  3361                           	line	180
  3362                           	global	__size_of_Menu
  3363  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  3364                           	
  3365  0E5E                     _Menu:	
  3366                           	opt	stack 2
  3367                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  3368                           ;Menu@input stored from wreg
  3369  0E5E  1683               	bsf	status, 5	;RP0=1, select bank1
  3370  0E5F  1303               	bcf	status, 6	;RP1=0, select bank1
  3371  0E60  00D6               	movwf	(Menu@input)^080h
  3372                           	line	181
  3373                           	
  3374  0E61                     l10241:	
  3375                           ;HMI.c: 181: switch (input)
  3376  0E61  2E8F               	goto	l10261
  3377                           	line	183
  3378                           ;HMI.c: 182: {
  3379                           ;HMI.c: 183: case 1:
  3380                           	
  3381  0E62                     l5210:	
  3382                           	line	185
  3383                           ;HMI.c: 185: break;
  3384  0E62  2EA2               	goto	l10263
  3385                           	line	186
  3386                           ;HMI.c: 186: case 2:
  3387                           	
  3388  0E63                     l5212:	
  3389                           	line	188
  3390                           ;HMI.c: 188: break;
  3391  0E63  2EA2               	goto	l10263
  3392                           	line	189
  3393                           ;HMI.c: 189: case 3:
  3394                           	
  3395  0E64                     l5213:	
  3396                           	line	190
  3397                           	
  3398  0E64                     l10243:	
  3399                           ;HMI.c: 190: pos--;
  3400  0E64  30FF               	movlw	low(-1)
  3401  0E65  1283               	bcf	status, 5	;RP0=0, select bank0
  3402  0E66  1303               	bcf	status, 6	;RP1=0, select bank0
  3403  0E67  07D9               	addwf	(_pos),f
  3404  0E68  1803               	skipnc
  3405  0E69  0ADA               	incf	(_pos+1),f
  3406  0E6A  30FF               	movlw	high(-1)
  3407  0E6B  07DA               	addwf	(_pos+1),f
  3408                           	line	191
  3409                           	
  3410  0E6C                     l10245:	
  3411                           ;HMI.c: 191: if (pos < 0)
  3412  0E6C  1FDA               	btfss	(_pos+1),7
  3413  0E6D  2E6F               	goto	u3451
  3414  0E6E  2E70               	goto	u3450
  3415  0E6F                     u3451:
  3416  0E6F  2EA2               	goto	l10263
  3417  0E70                     u3450:
  3418                           	line	192
  3419                           	
  3420  0E70                     l10247:	
  3421                           ;HMI.c: 192: pos = 5 - 1;
  3422  0E70  3004               	movlw	low(04h)
  3423  0E71  00D9               	movwf	(_pos)
  3424  0E72  3000               	movlw	high(04h)
  3425  0E73  00DA               	movwf	((_pos))+1
  3426  0E74  2EA2               	goto	l10263
  3427                           	
  3428  0E75                     l5214:	
  3429                           	line	194
  3430                           ;HMI.c: 194: break;
  3431  0E75  2EA2               	goto	l10263
  3432                           	line	195
  3433                           ;HMI.c: 195: case 4:
  3434                           	
  3435  0E76                     l5215:	
  3436                           	line	196
  3437                           	
  3438  0E76                     l10249:	
  3439                           ;HMI.c: 196: pos++;
  3440  0E76  3001               	movlw	low(01h)
  3441  0E77  1283               	bcf	status, 5	;RP0=0, select bank0
  3442  0E78  07D9               	addwf	(_pos),f
  3443  0E79  1803               	skipnc
  3444  0E7A  0ADA               	incf	(_pos+1),f
  3445  0E7B  3000               	movlw	high(01h)
  3446  0E7C  07DA               	addwf	(_pos+1),f
  3447                           	line	197
  3448                           ;HMI.c: 197: if (pos == 5)
  3449  0E7D  3005               	movlw	05h
  3450  0E7E  0659               	xorwf	(_pos),w
  3451  0E7F  045A               	iorwf	(_pos+1),w
  3452  0E80  1D03               	skipz
  3453  0E81  2E83               	goto	u3461
  3454  0E82  2E84               	goto	u3460
  3455  0E83                     u3461:
  3456  0E83  2EA2               	goto	l10263
  3457  0E84                     u3460:
  3458                           	line	198
  3459                           	
  3460  0E84                     l10251:	
  3461                           ;HMI.c: 198: pos = 0;
  3462  0E84  01D9               	clrf	(_pos)
  3463  0E85  01DA               	clrf	(_pos+1)
  3464  0E86  2EA2               	goto	l10263
  3465                           	
  3466  0E87                     l5216:	
  3467                           	line	200
  3468                           ;HMI.c: 200: break;
  3469  0E87  2EA2               	goto	l10263
  3470                           	line	201
  3471                           ;HMI.c: 201: case 5:
  3472                           	
  3473  0E88                     l5217:	
  3474                           	line	202
  3475                           	
  3476  0E88                     l10253:	
  3477                           ;HMI.c: 202: return pos;
  3478  0E88  1283               	bcf	status, 5	;RP0=0, select bank0
  3479  0E89  0859               	movf	(_pos),w
  3480  0E8A  2EA4               	goto	l5218
  3481                           	
  3482  0E8B                     l10255:	
  3483  0E8B  2EA4               	goto	l5218
  3484                           	line	203
  3485                           	
  3486  0E8C                     l10257:	
  3487                           ;HMI.c: 203: break;
  3488  0E8C  2EA2               	goto	l10263
  3489                           	line	205
  3490                           ;HMI.c: 205: default:
  3491                           	
  3492  0E8D                     l5219:	
  3493                           	line	207
  3494                           ;HMI.c: 207: break;
  3495  0E8D  2EA2               	goto	l10263
  3496                           	line	208
  3497                           	
  3498  0E8E                     l10259:	
  3499                           ;HMI.c: 208: }
  3500  0E8E  2EA2               	goto	l10263
  3501                           	line	181
  3502                           	
  3503  0E8F                     l5209:	
  3504                           	
  3505  0E8F                     l10261:	
  3506  0E8F  1683               	bsf	status, 5	;RP0=1, select bank1
  3507  0E90  1303               	bcf	status, 6	;RP1=0, select bank1
  3508  0E91  0856               	movf	(Menu@input)^080h,w
  3509                           	; Switch size 1, requested type "space"
  3510                           ; Number of cases is 5, Range of values is 1 to 5
  3511                           ; switch strategies available:
  3512                           ; Name         Instructions Cycles
  3513                           ; simple_byte           16     9 (average)
  3514                           ; direct_byte           26    11 (fixed)
  3515                           ; jumptable            263     9 (fixed)
  3516                           ;	Chosen strategy is simple_byte
  3517                           
  3518                           	opt asmopt_off
  3519  0E92  3A01               	xorlw	1^0	; case 1
  3520  0E93  1903               	skipnz
  3521  0E94  2EA2               	goto	l10263
  3522  0E95  3A03               	xorlw	2^1	; case 2
  3523  0E96  1903               	skipnz
  3524  0E97  2EA2               	goto	l10263
  3525  0E98  3A01               	xorlw	3^2	; case 3
  3526  0E99  1903               	skipnz
  3527  0E9A  2E64               	goto	l10243
  3528  0E9B  3A07               	xorlw	4^3	; case 4
  3529  0E9C  1903               	skipnz
  3530  0E9D  2E76               	goto	l10249
  3531  0E9E  3A01               	xorlw	5^4	; case 5
  3532  0E9F  1903               	skipnz
  3533  0EA0  2E88               	goto	l10253
  3534  0EA1  2EA2               	goto	l10263
  3535                           	opt asmopt_on
  3536                           
  3537                           	line	208
  3538                           	
  3539  0EA2                     l5211:	
  3540                           	line	209
  3541                           	
  3542  0EA2                     l10263:	
  3543                           ;HMI.c: 209: return 255;
  3544  0EA2  30FF               	movlw	(0FFh)
  3545  0EA3  2EA4               	goto	l5218
  3546                           	
  3547  0EA4                     l10265:	
  3548                           	line	210
  3549                           	
  3550  0EA4                     l5218:	
  3551  0EA4  0008               	return
  3552                           	opt stack 0
  3553                           GLOBAL	__end_of_Menu
  3554  0EA5                     	__end_of_Menu:
  3555 ;; =============== function _Menu ends ============
  3556                           
  3557                           	signat	_Menu,4217
  3558                           	global	_ser_init
  3559                           psect	text767,local,class=CODE,delta=2
  3560                           global __ptext767
  3561  0C38                     __ptext767:
  3562                           
  3563 ;; *************** function _ser_init *****************
  3564 ;; Defined at:
  3565 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;		None               void
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3579 ;;      Params:         0       0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0
  3581 ;;      Temps:          0       0       1       0       0
  3582 ;;      Totals:         0       0       1       0       0
  3583 ;;Total ram usage:        1 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    5
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_init
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           psect	text767
  3593                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  3594                           	line	113
  3595                           	global	__size_of_ser_init
  3596  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  3597                           	
  3598  0C38                     _ser_init:	
  3599                           	opt	stack 1
  3600                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  3601                           	line	114
  3602                           	
  3603  0C38                     l10215:	
  3604                           ;ser.c: 114: TRISC |= 0b10000000;
  3605  0C38  1683               	bsf	status, 5	;RP0=1, select bank1
  3606  0C39  1303               	bcf	status, 6	;RP1=0, select bank1
  3607  0C3A  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  3608                           	line	115
  3609                           	
  3610  0C3B                     l10217:	
  3611                           ;ser.c: 115: TRISC &= 0b10111111;
  3612  0C3B  30BF               	movlw	(0BFh)
  3613  0C3C  00D6               	movwf	(??_ser_init+0)^080h+0
  3614  0C3D  0856               	movf	(??_ser_init+0)^080h+0,w
  3615  0C3E  0587               	andwf	(135)^080h,f	;volatile
  3616                           	line	116
  3617                           	
  3618  0C3F                     l10219:	
  3619                           ;ser.c: 116: BRGH=1;
  3620  0C3F  1518               	bsf	(1218/8)^080h,(1218)&7
  3621                           	line	118
  3622                           	
  3623  0C40                     l10221:	
  3624                           ;ser.c: 118: SPBRG=20;
  3625  0C40  3014               	movlw	(014h)
  3626  0C41  0099               	movwf	(153)^080h	;volatile
  3627                           	line	121
  3628                           	
  3629  0C42                     l10223:	
  3630                           ;ser.c: 121: TX9=0;
  3631  0C42  1318               	bcf	(1222/8)^080h,(1222)&7
  3632                           	line	122
  3633                           	
  3634  0C43                     l10225:	
  3635                           ;ser.c: 122: RX9=0;
  3636  0C43  1283               	bcf	status, 5	;RP0=0, select bank0
  3637  0C44  1303               	bcf	status, 6	;RP1=0, select bank0
  3638  0C45  1318               	bcf	(198/8),(198)&7
  3639                           	line	124
  3640                           	
  3641  0C46                     l10227:	
  3642                           ;ser.c: 124: SYNC=0;
  3643  0C46  1683               	bsf	status, 5	;RP0=1, select bank1
  3644  0C47  1303               	bcf	status, 6	;RP1=0, select bank1
  3645  0C48  1218               	bcf	(1220/8)^080h,(1220)&7
  3646                           	line	125
  3647                           	
  3648  0C49                     l10229:	
  3649                           ;ser.c: 125: SPEN=1;
  3650  0C49  1283               	bcf	status, 5	;RP0=0, select bank0
  3651  0C4A  1303               	bcf	status, 6	;RP1=0, select bank0
  3652  0C4B  1798               	bsf	(199/8),(199)&7
  3653                           	line	126
  3654                           	
  3655  0C4C                     l10231:	
  3656                           ;ser.c: 126: CREN=1;
  3657  0C4C  1618               	bsf	(196/8),(196)&7
  3658                           	line	127
  3659                           	
  3660  0C4D                     l10233:	
  3661                           ;ser.c: 127: TXIE=0;
  3662  0C4D  1683               	bsf	status, 5	;RP0=1, select bank1
  3663  0C4E  1303               	bcf	status, 6	;RP1=0, select bank1
  3664  0C4F  120C               	bcf	(1124/8)^080h,(1124)&7
  3665                           	line	128
  3666                           	
  3667  0C50                     l10235:	
  3668                           ;ser.c: 128: RCIE=1;
  3669  0C50  168C               	bsf	(1125/8)^080h,(1125)&7
  3670                           	line	129
  3671                           	
  3672  0C51                     l10237:	
  3673                           ;ser.c: 129: TXEN=1;
  3674  0C51  1698               	bsf	(1221/8)^080h,(1221)&7
  3675                           	line	132
  3676                           	
  3677  0C52                     l10239:	
  3678                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  3679  0C52  3000               	movlw	(0)
  3680  0C53  1283               	bcf	status, 5	;RP0=0, select bank0
  3681  0C54  1303               	bcf	status, 6	;RP1=0, select bank0
  3682  0C55  00EC               	movwf	(_txoptr)	;volatile
  3683  0C56  00EB               	movwf	(_txiptr)	;volatile
  3684  0C57  00E8               	movwf	(_rxoptr)	;volatile
  3685  0C58  1683               	bsf	status, 5	;RP0=1, select bank1
  3686  0C59  1303               	bcf	status, 6	;RP1=0, select bank1
  3687  0C5A  00D6               	movwf	(??_ser_init+0)^080h+0
  3688  0C5B  0856               	movf	(??_ser_init+0)^080h+0,w
  3689  0C5C  1283               	bcf	status, 5	;RP0=0, select bank0
  3690  0C5D  1303               	bcf	status, 6	;RP1=0, select bank0
  3691  0C5E  00E7               	movwf	(_rxiptr)	;volatile
  3692                           	line	133
  3693                           	
  3694  0C5F                     l4434:	
  3695  0C5F  0008               	return
  3696                           	opt stack 0
  3697                           GLOBAL	__end_of_ser_init
  3698  0C60                     	__end_of_ser_init:
  3699 ;; =============== function _ser_init ends ============
  3700                           
  3701                           	signat	_ser_init,88
  3702                           	global	_isr1
  3703                           psect	text768,local,class=CODE,delta=2
  3704                           global __ptext768
  3705  0424                     __ptext768:
  3706                           
  3707 ;; *************** function _isr1 *****************
  3708 ;; Defined at:
  3709 ;;		line 85 in file "H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;		None               void
  3716 ;; Registers used:
  3717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         0       0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0
  3725 ;;      Temps:          0       5       0       0       0
  3726 ;;      Totals:         0       5       0       0       0
  3727 ;;Total ram usage:        5 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    4
  3730 ;; This function calls:
  3731 ;;		___lwmod
  3732 ;;		_readAvgDistance
  3733 ;;		_UpdateDisplay
  3734 ;;		_ReadButtons
  3735 ;; This function is called by:
  3736 ;;		Interrupt level 1
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           psect	text768
  3740                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\Main.c"
  3741                           	line	85
  3742                           	global	__size_of_isr1
  3743  00E5                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  3744                           	
  3745  0424                     _isr1:	
  3746                           	opt	stack 0
  3747                           ; Regs used in _isr1: [allreg]
  3748                           psect	intentry,class=CODE,delta=2
  3749                           global __pintentry
  3750  0004                     __pintentry:
  3751                           global interrupt_function
  3752  0004                     interrupt_function:
  3753                           	global saved_w
  3754  007E                     	saved_w	set	btemp+0
  3755  0004  00FE               	movwf	saved_w
  3756  0005  0E03               	swapf	status,w
  3757  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  3758  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  3759  0008  00CD               	movwf	(??_isr1+1)
  3760  0009  0804               	movf	fsr0,w
  3761  000A  00CE               	movwf	(??_isr1+2)
  3762  000B  080A               	movf	pclath,w
  3763  000C  00CF               	movwf	(??_isr1+3)
  3764  000D  087F               	movf	btemp+1,w
  3765  000E  00D0               	movwf	(??_isr1+4)
  3766  000F  120A  118A  2C24   	ljmp	_isr1
  3767                           psect	text768
  3768                           	line	87
  3769                           	
  3770  0424                     i1l10057:	
  3771                           ;Main.c: 87: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  3772  0424  1E8C               	btfss	(101/8),(101)&7
  3773  0425  2C27               	goto	u325_21
  3774  0426  2C28               	goto	u325_20
  3775  0427                     u325_21:
  3776  0427  2C42               	goto	i1l10067
  3777  0428                     u325_20:
  3778                           	
  3779  0428                     i1l10059:	
  3780  0428  081A               	movf	(26),w	;volatile
  3781  0429  00CC               	movwf	(??_isr1+0)+0
  3782  042A  0867               	movf	(_rxiptr),w
  3783  042B  3EB0               	addlw	_rxfifo&0ffh
  3784  042C  0084               	movwf	fsr0
  3785  042D  084C               	movf	(??_isr1+0)+0,w
  3786  042E  1383               	bcf	status, 7	;select IRP bank1
  3787  042F  0080               	movwf	indf
  3788                           	
  3789  0430                     i1l10061:	
  3790  0430  0867               	movf	(_rxiptr),w	;volatile
  3791  0431  3E01               	addlw	01h
  3792  0432  390F               	andlw	0Fh
  3793  0433  00CC               	movwf	(??_isr1+0)+0
  3794  0434  084C               	movf	(??_isr1+0)+0,w
  3795  0435  00E9               	movwf	(_ser_tmp)
  3796                           	
  3797  0436                     i1l10063:	
  3798  0436  0869               	movf	(_ser_tmp),w
  3799  0437  0668               	xorwf	(_rxoptr),w	;volatile
  3800  0438  1903               	skipnz
  3801  0439  2C3B               	goto	u326_21
  3802  043A  2C3C               	goto	u326_20
  3803  043B                     u326_21:
  3804  043B  2C42               	goto	i1l10067
  3805  043C                     u326_20:
  3806                           	
  3807  043C                     i1l10065:	
  3808  043C  0869               	movf	(_ser_tmp),w
  3809  043D  00CC               	movwf	(??_isr1+0)+0
  3810  043E  084C               	movf	(??_isr1+0)+0,w
  3811  043F  00E7               	movwf	(_rxiptr)	;volatile
  3812  0440  2C42               	goto	i1l10067
  3813                           	
  3814  0441                     i1l2193:	
  3815  0441  2C42               	goto	i1l10067
  3816                           	
  3817  0442                     i1l2192:	
  3818                           	
  3819  0442                     i1l10067:	
  3820  0442  1E0C               	btfss	(100/8),(100)&7
  3821  0443  2C45               	goto	u327_21
  3822  0444  2C46               	goto	u327_20
  3823  0445                     u327_21:
  3824  0445  2C66               	goto	i1l2194
  3825  0446                     u327_20:
  3826                           	
  3827  0446                     i1l10069:	
  3828  0446  1683               	bsf	status, 5	;RP0=1, select bank1
  3829  0447  1303               	bcf	status, 6	;RP1=0, select bank1
  3830  0448  1E0C               	btfss	(1124/8)^080h,(1124)&7
  3831  0449  2C4B               	goto	u328_21
  3832  044A  2C4C               	goto	u328_20
  3833  044B                     u328_21:
  3834  044B  2C66               	goto	i1l2194
  3835  044C                     u328_20:
  3836                           	
  3837  044C                     i1l10071:	
  3838  044C  1283               	bcf	status, 5	;RP0=0, select bank0
  3839  044D  1303               	bcf	status, 6	;RP1=0, select bank0
  3840  044E  086C               	movf	(_txoptr),w
  3841  044F  3EC0               	addlw	_txfifo&0ffh
  3842  0450  0084               	movwf	fsr0
  3843  0451  1383               	bcf	status, 7	;select IRP bank1
  3844  0452  0800               	movf	indf,w
  3845  0453  0099               	movwf	(25)	;volatile
  3846                           	
  3847  0454                     i1l10073:	
  3848  0454  3001               	movlw	(01h)
  3849  0455  00CC               	movwf	(??_isr1+0)+0
  3850  0456  084C               	movf	(??_isr1+0)+0,w
  3851  0457  07EC               	addwf	(_txoptr),f	;volatile
  3852                           	
  3853  0458                     i1l10075:	
  3854  0458  300F               	movlw	(0Fh)
  3855  0459  00CC               	movwf	(??_isr1+0)+0
  3856  045A  084C               	movf	(??_isr1+0)+0,w
  3857  045B  05EC               	andwf	(_txoptr),f	;volatile
  3858                           	
  3859  045C                     i1l10077:	
  3860  045C  086C               	movf	(_txoptr),w	;volatile
  3861  045D  066B               	xorwf	(_txiptr),w	;volatile
  3862  045E  1D03               	skipz
  3863  045F  2C61               	goto	u329_21
  3864  0460  2C62               	goto	u329_20
  3865  0461                     u329_21:
  3866  0461  2C66               	goto	i1l2194
  3867  0462                     u329_20:
  3868                           	
  3869  0462                     i1l10079:	
  3870  0462  1683               	bsf	status, 5	;RP0=1, select bank1
  3871  0463  1303               	bcf	status, 6	;RP1=0, select bank1
  3872  0464  120C               	bcf	(1124/8)^080h,(1124)&7
  3873  0465  2C66               	goto	i1l2194
  3874                           	
  3875  0466                     i1l2195:	
  3876                           	
  3877  0466                     i1l2194:	
  3878                           	line	90
  3879                           ;Main.c: 90: if(TMR0IF)
  3880  0466  1D0B               	btfss	(90/8),(90)&7
  3881  0467  2C69               	goto	u330_21
  3882  0468  2C6A               	goto	u330_20
  3883  0469                     u330_21:
  3884  0469  2CFD               	goto	i1l2202
  3885  046A                     u330_20:
  3886                           	line	92
  3887                           	
  3888  046A                     i1l10081:	
  3889                           ;Main.c: 91: {
  3890                           ;Main.c: 92: TMR0IF = 0;
  3891  046A  110B               	bcf	(90/8),(90)&7
  3892                           	line	93
  3893                           	
  3894  046B                     i1l10083:	
  3895                           ;Main.c: 93: TMR0 = 100;
  3896  046B  3064               	movlw	(064h)
  3897  046C  1283               	bcf	status, 5	;RP0=0, select bank0
  3898  046D  0081               	movwf	(1)	;volatile
  3899                           	line	95
  3900                           ;Main.c: 95: RTC_Counter++;
  3901  046E  3001               	movlw	low(01h)
  3902  046F  07D1               	addwf	(_RTC_Counter),f	;volatile
  3903  0470  1803               	skipnc
  3904  0471  0AD2               	incf	(_RTC_Counter+1),f	;volatile
  3905  0472  3000               	movlw	high(01h)
  3906  0473  07D2               	addwf	(_RTC_Counter+1),f	;volatile
  3907                           	line	97
  3908                           	
  3909  0474                     i1l10085:	
  3910                           ;Main.c: 97: RTC_FLAG_1MS = 1;
  3911  0474  17ED               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  3912                           	line	98
  3913                           	
  3914  0475                     i1l10087:	
  3915                           ;Main.c: 98: if(RTC_Counter % 10 == 0)
  3916  0475  300A               	movlw	low(0Ah)
  3917  0476  00A0               	movwf	(?___lwmod)
  3918  0477  3000               	movlw	high(0Ah)
  3919  0478  00A1               	movwf	((?___lwmod))+1
  3920  0479  0852               	movf	(_RTC_Counter+1),w	;volatile
  3921  047A  01A3               	clrf	1+(?___lwmod)+02h
  3922  047B  07A3               	addwf	1+(?___lwmod)+02h
  3923  047C  0851               	movf	(_RTC_Counter),w	;volatile
  3924  047D  01A2               	clrf	0+(?___lwmod)+02h
  3925  047E  07A2               	addwf	0+(?___lwmod)+02h
  3926                           
  3927  047F  120A  158A  2618   	fcall	___lwmod
              120A  118A         
  3928  0484  1283               	bcf	status, 5	;RP0=0, select bank0
  3929  0485  1303               	bcf	status, 6	;RP1=0, select bank0
  3930  0486  0821               	movf	((1+(?___lwmod))),w
  3931  0487  0420               	iorwf	((0+(?___lwmod))),w
  3932  0488  1D03               	skipz
  3933  0489  2C8B               	goto	u331_21
  3934  048A  2C8C               	goto	u331_20
  3935  048B                     u331_21:
  3936  048B  2C8E               	goto	i1l10091
  3937  048C                     u331_20:
  3938                           	line	100
  3939                           	
  3940  048C                     i1l10089:	
  3941                           ;Main.c: 99: {
  3942                           ;Main.c: 100: RTC_FLAG_10MS = 1;
  3943  048C  176D               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  3944  048D  2C8E               	goto	i1l10091
  3945                           	line	103
  3946                           	
  3947  048E                     i1l2197:	
  3948                           	line	104
  3949                           	
  3950  048E                     i1l10091:	
  3951                           ;Main.c: 103: }
  3952                           ;Main.c: 104: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  3953  048E  3032               	movlw	low(032h)
  3954  048F  00A0               	movwf	(?___lwmod)
  3955  0490  3000               	movlw	high(032h)
  3956  0491  00A1               	movwf	((?___lwmod))+1
  3957  0492  0852               	movf	(_RTC_Counter+1),w	;volatile
  3958  0493  01A3               	clrf	1+(?___lwmod)+02h
  3959  0494  07A3               	addwf	1+(?___lwmod)+02h
  3960  0495  0851               	movf	(_RTC_Counter),w	;volatile
  3961  0496  01A2               	clrf	0+(?___lwmod)+02h
  3962  0497  07A2               	addwf	0+(?___lwmod)+02h
  3963                           
  3964  0498  120A  158A  2618   	fcall	___lwmod
              120A  118A         
  3965  049D  1283               	bcf	status, 5	;RP0=0, select bank0
  3966  049E  1303               	bcf	status, 6	;RP1=0, select bank0
  3967  049F  0821               	movf	((1+(?___lwmod))),w
  3968  04A0  0420               	iorwf	((0+(?___lwmod))),w
  3969  04A1  1D03               	skipz
  3970  04A2  2CA4               	goto	u332_21
  3971  04A3  2CA5               	goto	u332_20
  3972  04A4                     u332_21:
  3973  04A4  2CA7               	goto	i1l10095
  3974  04A5                     u332_20:
  3975                           	
  3976  04A5                     i1l10093:	
  3977  04A5  156E               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  3978  04A6  2CA7               	goto	i1l10095
  3979                           	
  3980  04A7                     i1l2198:	
  3981                           	line	105
  3982                           	
  3983  04A7                     i1l10095:	
  3984                           ;Main.c: 105: if(RTC_Counter % 250 == 0)
  3985  04A7  30FA               	movlw	low(0FAh)
  3986  04A8  00A0               	movwf	(?___lwmod)
  3987  04A9  3000               	movlw	high(0FAh)
  3988  04AA  00A1               	movwf	((?___lwmod))+1
  3989  04AB  0852               	movf	(_RTC_Counter+1),w	;volatile
  3990  04AC  01A3               	clrf	1+(?___lwmod)+02h
  3991  04AD  07A3               	addwf	1+(?___lwmod)+02h
  3992  04AE  0851               	movf	(_RTC_Counter),w	;volatile
  3993  04AF  01A2               	clrf	0+(?___lwmod)+02h
  3994  04B0  07A2               	addwf	0+(?___lwmod)+02h
  3995                           
  3996  04B1  120A  158A  2618   	fcall	___lwmod
              120A  118A         
  3997  04B6  1283               	bcf	status, 5	;RP0=0, select bank0
  3998  04B7  1303               	bcf	status, 6	;RP1=0, select bank0
  3999  04B8  0821               	movf	((1+(?___lwmod))),w
  4000  04B9  0420               	iorwf	((0+(?___lwmod))),w
  4001  04BA  1D03               	skipz
  4002  04BB  2CBD               	goto	u333_21
  4003  04BC  2CBE               	goto	u333_20
  4004  04BD                     u333_21:
  4005  04BD  2CCF               	goto	i1l10101
  4006  04BE                     u333_20:
  4007                           	line	107
  4008                           	
  4009  04BE                     i1l10097:	
  4010                           ;Main.c: 106: {
  4011                           ;Main.c: 107: readAvgDistance();
  4012  04BE  120A  158A  2745   	fcall	_readAvgDistance
              120A  118A         
  4013                           	line	108
  4014                           ;Main.c: 108: UpdateDisplay(serialInput);
  4015  04C3  1283               	bcf	status, 5	;RP0=0, select bank0
  4016  04C4  1303               	bcf	status, 6	;RP1=0, select bank0
  4017  04C5  086A               	movf	(_serialInput),w	;volatile
  4018  04C6  120A  118A  2200   	fcall	_UpdateDisplay
              120A  118A         
  4019                           	line	109
  4020                           	
  4021  04CB                     i1l10099:	
  4022                           ;Main.c: 109: RTC_FLAG_250MS = 1;
  4023  04CB  1283               	bcf	status, 5	;RP0=0, select bank0
  4024  04CC  1303               	bcf	status, 6	;RP1=0, select bank0
  4025  04CD  146E               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4026  04CE  2CCF               	goto	i1l10101
  4027                           	line	111
  4028                           	
  4029  04CF                     i1l2199:	
  4030                           	line	112
  4031                           	
  4032  04CF                     i1l10101:	
  4033                           ;Main.c: 111: }
  4034                           ;Main.c: 112: if(RTC_Counter % 500 == 0)
  4035  04CF  30F4               	movlw	low(01F4h)
  4036  04D0  00A0               	movwf	(?___lwmod)
  4037  04D1  3001               	movlw	high(01F4h)
  4038  04D2  00A1               	movwf	((?___lwmod))+1
  4039  04D3  0852               	movf	(_RTC_Counter+1),w	;volatile
  4040  04D4  01A3               	clrf	1+(?___lwmod)+02h
  4041  04D5  07A3               	addwf	1+(?___lwmod)+02h
  4042  04D6  0851               	movf	(_RTC_Counter),w	;volatile
  4043  04D7  01A2               	clrf	0+(?___lwmod)+02h
  4044  04D8  07A2               	addwf	0+(?___lwmod)+02h
  4045                           
  4046  04D9  120A  158A  2618   	fcall	___lwmod
              120A  118A         
  4047  04DE  1283               	bcf	status, 5	;RP0=0, select bank0
  4048  04DF  1303               	bcf	status, 6	;RP1=0, select bank0
  4049  04E0  0821               	movf	((1+(?___lwmod))),w
  4050  04E1  0420               	iorwf	((0+(?___lwmod))),w
  4051  04E2  1D03               	skipz
  4052  04E3  2CE5               	goto	u334_21
  4053  04E4  2CE6               	goto	u334_20
  4054  04E5                     u334_21:
  4055  04E5  2CEC               	goto	i1l10109
  4056  04E6                     u334_20:
  4057                           	line	114
  4058                           	
  4059  04E6                     i1l10103:	
  4060                           ;Main.c: 113: {
  4061                           ;Main.c: 114: RTC_FLAG_500MS = 1;
  4062  04E6  14EE               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  4063                           	line	115
  4064                           	
  4065  04E7                     i1l10105:	
  4066                           ;Main.c: 115: RTC_Counter = 0;
  4067  04E7  01D1               	clrf	(_RTC_Counter)	;volatile
  4068  04E8  01D2               	clrf	(_RTC_Counter+1)	;volatile
  4069                           	line	116
  4070                           	
  4071  04E9                     i1l10107:	
  4072                           ;Main.c: 116: RB0 ^= 0x01;
  4073  04E9  3001               	movlw	1<<((48)&7)
  4074  04EA  0686               	xorwf	((48)/8),f
  4075  04EB  2CEC               	goto	i1l10109
  4076                           	line	117
  4077                           	
  4078  04EC                     i1l2200:	
  4079                           	line	119
  4080                           	
  4081  04EC                     i1l10109:	
  4082                           ;Main.c: 117: }
  4083                           ;Main.c: 119: if (buttonPressed == 0)
  4084  04EC  08E2               	movf	(_buttonPressed),f
  4085  04ED  1D03               	skipz	;volatile
  4086  04EE  2CF0               	goto	u335_21
  4087  04EF  2CF1               	goto	u335_20
  4088  04F0                     u335_21:
  4089  04F0  2CFD               	goto	i1l2202
  4090  04F1                     u335_20:
  4091                           	line	121
  4092                           	
  4093  04F1                     i1l10111:	
  4094                           ;Main.c: 120: {
  4095                           ;Main.c: 121: buttonPressed = ReadButtons();
  4096  04F1  120A  158A  2560   	fcall	_ReadButtons
              120A  118A         
  4097  04F6  1283               	bcf	status, 5	;RP0=0, select bank0
  4098  04F7  1303               	bcf	status, 6	;RP1=0, select bank0
  4099  04F8  00CC               	movwf	(??_isr1+0)+0
  4100  04F9  084C               	movf	(??_isr1+0)+0,w
  4101  04FA  00E2               	movwf	(_buttonPressed)	;volatile
  4102  04FB  2CFD               	goto	i1l2202
  4103                           	line	122
  4104                           	
  4105  04FC                     i1l2201:	
  4106  04FC  2CFD               	goto	i1l2202
  4107                           	line	123
  4108                           	
  4109  04FD                     i1l2196:	
  4110                           	line	124
  4111                           	
  4112  04FD                     i1l2202:	
  4113  04FD  1283               	bcf	status, 5	;RP0=0, select bank0
  4114  04FE  0850               	movf	(??_isr1+4),w
  4115  04FF  00FF               	movwf	btemp+1
  4116  0500  084F               	movf	(??_isr1+3),w
  4117  0501  008A               	movwf	pclath
  4118  0502  084E               	movf	(??_isr1+2),w
  4119  0503  0084               	movwf	fsr0
  4120  0504  0E4D               	swapf	(??_isr1+1)^00h,w
  4121  0505  0083               	movwf	status
  4122  0506  0EFE               	swapf	saved_w,f
  4123  0507  0E7E               	swapf	saved_w,w
  4124  0508  0009               	retfie
  4125                           	opt stack 0
  4126                           GLOBAL	__end_of_isr1
  4127  0509                     	__end_of_isr1:
  4128 ;; =============== function _isr1 ends ============
  4129                           
  4130                           	signat	_isr1,88
  4131                           	global	_UpdateDisplay
  4132                           psect	text769,local,class=CODE,delta=2
  4133                           global __ptext769
  4134  0200                     __ptext769:
  4135                           
  4136 ;; *************** function _UpdateDisplay *****************
  4137 ;; Defined at:
  4138 ;;		line 215 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  serialInput     1    wreg     unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  serialInput     1    0[COMMON] unsigned char 
  4143 ;;  adcOutput      16   28[BANK0 ] unsigned char [16]
  4144 ;; Return value:  Size  Location     Type
  4145 ;;		None               void
  4146 ;; Registers used:
  4147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4153 ;;      Params:         0       0       0       0       0
  4154 ;;      Locals:         0      16       0       0       0
  4155 ;;      Temps:          0       5       0       0       0
  4156 ;;      Totals:         0      21       0       0       0
  4157 ;;Total ram usage:       21 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    2
  4160 ;; This function calls:
  4161 ;;		i1_lcd_write_control
  4162 ;;		_sprintf
  4163 ;;		_lcd_set_cursor
  4164 ;;		_lcd_write_string
  4165 ;;		___awmod
  4166 ;; This function is called by:
  4167 ;;		_isr1
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           psect	text769
  4171                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  4172                           	line	215
  4173                           	global	__size_of_UpdateDisplay
  4174  0124                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4175                           	
  4176  0200                     _UpdateDisplay:	
  4177                           	opt	stack 1
  4178                           ; Regs used in _UpdateDisplay: [allreg]
  4179                           	line	216
  4180                           	
  4181  0200                     i1l10129:	
  4182                           ;HMI.c: 216: char adcOutput[16] = "";
  4183  0200  303C               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4184  0201  0084               	movwf	fsr0
  4185  0202  30A0               	movlw	low(UpdateDisplay@F1222)
  4186  0203  1283               	bcf	status, 5	;RP0=0, select bank0
  4187  0204  1303               	bcf	status, 6	;RP1=0, select bank0
  4188  0205  00B7               	movwf	(??_UpdateDisplay+0)+0
  4189  0206  0804               	movf	fsr0,w
  4190  0207  00B8               	movwf	((??_UpdateDisplay+0)+0+1)
  4191  0208  3010               	movlw	16
  4192  0209  00B9               	movwf	((??_UpdateDisplay+0)+0+2)
  4193  020A                     u338_20:
  4194  020A  0837               	movf	(??_UpdateDisplay+0)+0,w
  4195  020B  0084               	movwf	fsr0
  4196  020C  1383               	bcf	status, 7	;select IRP bank1
  4197                           	
  4198  020D  0800               	movf	indf,w
  4199  020E  00BA               	movwf	((??_UpdateDisplay+0)+0+3)
  4200  020F  0AB7               	incf	(??_UpdateDisplay+0)+0,f
  4201  0210  0838               	movf	((??_UpdateDisplay+0)+0+1),w
  4202  0211  0084               	movwf	fsr0
  4203                           	
  4204  0212  083A               	movf	((??_UpdateDisplay+0)+0+3),w
  4205  0213  0080               	movwf	indf
  4206  0214  0AB8               	incf	((??_UpdateDisplay+0)+0+1),f
  4207  0215  0BB9               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4208  0216  2A0A               	goto	u338_20
  4209                           	line	217
  4210                           ;HMI.c: 217: switch (currentMenu)
  4211  0217  2B19               	goto	i1l10175
  4212                           	line	220
  4213                           ;HMI.c: 218: {
  4214                           ;HMI.c: 220: case 0:
  4215                           	
  4216  0218                     i1l5225:	
  4217                           	line	221
  4218                           	
  4219  0218                     i1l10131:	
  4220                           ;HMI.c: 221: lcd_write_control(0b00000001);
  4221  0218  3001               	movlw	(01h)
  4222  0219  120A  158A  23A0   	fcall	i1_lcd_write_control
              120A  118A         
  4223                           	line	223
  4224                           	
  4225  021E                     i1l10133:	
  4226                           ;HMI.c: 223: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  4227  021E  300B               	movlw	((STR_11-__stringbase))&0ffh
  4228  021F  1283               	bcf	status, 5	;RP0=0, select bank0
  4229  0220  1303               	bcf	status, 6	;RP1=0, select bank0
  4230  0221  00B7               	movwf	(??_UpdateDisplay+0)+0
  4231  0222  0837               	movf	(??_UpdateDisplay+0)+0,w
  4232  0223  00A6               	movwf	(?_sprintf)
  4233  0224  0865               	movf	(_highByte),w
  4234  0225  00B8               	movwf	(??_UpdateDisplay+1)+0
  4235  0226  01B9               	clrf	(??_UpdateDisplay+1)+0+1
  4236  0227  0838               	movf	0+(??_UpdateDisplay+1)+0,w
  4237  0228  00A7               	movwf	0+(?_sprintf)+01h
  4238  0229  0839               	movf	1+(??_UpdateDisplay+1)+0,w
  4239  022A  00A8               	movwf	1+(?_sprintf)+01h
  4240  022B  0866               	movf	(_lowByte),w
  4241  022C  00BA               	movwf	(??_UpdateDisplay+3)+0
  4242  022D  01BB               	clrf	(??_UpdateDisplay+3)+0+1
  4243  022E  083A               	movf	0+(??_UpdateDisplay+3)+0,w
  4244  022F  00A9               	movwf	0+(?_sprintf)+03h
  4245  0230  083B               	movf	1+(??_UpdateDisplay+3)+0,w
  4246  0231  00AA               	movwf	1+(?_sprintf)+03h
  4247  0232  303C               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4248  0233  120A  118A  2324   	fcall	_sprintf
              120A  118A         
  4249                           	line	225
  4250                           	
  4251  0238                     i1l10135:	
  4252                           ;HMI.c: 225: lcd_set_cursor(0x00);
  4253  0238  3000               	movlw	(0)
  4254  0239  120A  158A  2367   	fcall	_lcd_set_cursor
              120A  118A         
  4255                           	line	226
  4256                           	
  4257  023E                     i1l10137:	
  4258                           ;HMI.c: 226: lcd_write_string(adcOutput);
  4259  023E  303C               	movlw	(UpdateDisplay@adcOutput&0ffh)
  4260  023F  00F7               	movwf	(?_lcd_write_string)
  4261  0240  3000               	movlw	(0x0/2)
  4262  0241  00F8               	movwf	(?_lcd_write_string+1)
  4263  0242  120A  158A  24B3   	fcall	_lcd_write_string
              120A  118A         
  4264                           	line	231
  4265                           	
  4266  0247                     i1l10139:	
  4267                           ;HMI.c: 231: lcd_set_cursor(0x40);
  4268  0247  3040               	movlw	(040h)
  4269  0248  120A  158A  2367   	fcall	_lcd_set_cursor
              120A  118A         
  4270                           	line	232
  4271                           	
  4272  024D                     i1l10141:	
  4273                           ;HMI.c: 232: if (pos > 0)
  4274  024D  1283               	bcf	status, 5	;RP0=0, select bank0
  4275  024E  1303               	bcf	status, 6	;RP1=0, select bank0
  4276  024F  085A               	movf	(_pos+1),w
  4277  0250  3A80               	xorlw	80h
  4278  0251  00FF               	movwf	btemp+1
  4279  0252  3080               	movlw	(high(01h))^80h
  4280  0253  027F               	subwf	btemp+1,w
  4281  0254  1D03               	skipz
  4282  0255  2A58               	goto	u339_25
  4283  0256  3001               	movlw	low(01h)
  4284  0257  0259               	subwf	(_pos),w
  4285  0258                     u339_25:
  4286                           
  4287  0258  1C03               	skipc
  4288  0259  2A5B               	goto	u339_21
  4289  025A  2A5C               	goto	u339_20
  4290  025B                     u339_21:
  4291  025B  2A6D               	goto	i1l10145
  4292  025C                     u339_20:
  4293                           	line	233
  4294                           	
  4295  025C                     i1l10143:	
  4296                           ;HMI.c: 233: lcd_write_string(shortMenuStrings[pos - 1]);
  4297  025C  1283               	bcf	status, 5	;RP0=0, select bank0
  4298  025D  1303               	bcf	status, 6	;RP1=0, select bank0
  4299  025E  0859               	movf	(_pos),w
  4300  025F  3EFF               	addlw	0FFh
  4301  0260  3EE7               	addlw	_shortMenuStrings&0ffh
  4302  0261  0084               	movwf	fsr0
  4303  0262  1383               	bcf	status, 7	;select IRP bank1
  4304  0263  0800               	movf	indf,w
  4305  0264  00F7               	movwf	(?_lcd_write_string)
  4306  0265  3080               	movlw	80h
  4307  0266  00F8               	movwf	(?_lcd_write_string+1)
  4308  0267  120A  158A  24B3   	fcall	_lcd_write_string
              120A  118A         
  4309  026C  2A7E               	goto	i1l10147
  4310                           	line	234
  4311                           	
  4312  026D                     i1l5226:	
  4313                           	line	235
  4314                           	
  4315  026D                     i1l10145:	
  4316                           ;HMI.c: 234: else
  4317                           ;HMI.c: 235: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  4318  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  4319  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  4320  026F  0859               	movf	(_pos),w
  4321  0270  3E04               	addlw	04h
  4322  0271  3EE7               	addlw	_shortMenuStrings&0ffh
  4323  0272  0084               	movwf	fsr0
  4324  0273  1383               	bcf	status, 7	;select IRP bank1
  4325  0274  0800               	movf	indf,w
  4326  0275  00F7               	movwf	(?_lcd_write_string)
  4327  0276  3080               	movlw	80h
  4328  0277  00F8               	movwf	(?_lcd_write_string+1)
  4329  0278  120A  158A  24B3   	fcall	_lcd_write_string
              120A  118A         
  4330  027D  2A7E               	goto	i1l10147
  4331                           	
  4332  027E                     i1l5227:	
  4333                           	line	236
  4334                           	
  4335  027E                     i1l10147:	
  4336                           ;HMI.c: 236: lcd_set_cursor(0x44);
  4337  027E  3044               	movlw	(044h)
  4338  027F  120A  158A  2367   	fcall	_lcd_set_cursor
              120A  118A         
  4339                           	line	237
  4340                           	
  4341  0284                     i1l10149:	
  4342                           ;HMI.c: 237: lcd_write_string(menuStrings[pos]);
  4343  0284  1283               	bcf	status, 5	;RP0=0, select bank0
  4344  0285  1303               	bcf	status, 6	;RP1=0, select bank0
  4345  0286  0859               	movf	(_pos),w
  4346  0287  3EE2               	addlw	_menuStrings&0ffh
  4347  0288  0084               	movwf	fsr0
  4348  0289  1383               	bcf	status, 7	;select IRP bank1
  4349  028A  0800               	movf	indf,w
  4350  028B  00F7               	movwf	(?_lcd_write_string)
  4351  028C  3080               	movlw	80h
  4352  028D  00F8               	movwf	(?_lcd_write_string+1)
  4353  028E  120A  158A  24B3   	fcall	_lcd_write_string
              120A  118A         
  4354                           	line	238
  4355                           ;HMI.c: 238: lcd_set_cursor(0x4D);
  4356  0293  304D               	movlw	(04Dh)
  4357  0294  120A  158A  2367   	fcall	_lcd_set_cursor
              120A  118A         
  4358                           	line	239
  4359                           	
  4360  0299                     i1l10151:	
  4361                           ;HMI.c: 239: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  4362  0299  3005               	movlw	low(05h)
  4363  029A  00F0               	movwf	(?___awmod)
  4364  029B  3000               	movlw	high(05h)
  4365  029C  00F1               	movwf	((?___awmod))+1
  4366  029D  1283               	bcf	status, 5	;RP0=0, select bank0
  4367  029E  1303               	bcf	status, 6	;RP1=0, select bank0
  4368  029F  0859               	movf	(_pos),w
  4369  02A0  3E01               	addlw	low(01h)
  4370  02A1  00F2               	movwf	0+(?___awmod)+02h
  4371  02A2  085A               	movf	(_pos+1),w
  4372  02A3  1803               	skipnc
  4373  02A4  3E01               	addlw	1
  4374  02A5  3E00               	addlw	high(01h)
  4375  02A6  00F3               	movwf	1+0+(?___awmod)+02h
  4376  02A7  120A  158A  279A   	fcall	___awmod
              120A  118A         
  4377  02AC  0870               	movf	(0+(?___awmod)),w
  4378  02AD  3EE7               	addlw	_shortMenuStrings&0ffh
  4379  02AE  0084               	movwf	fsr0
  4380  02AF  1383               	bcf	status, 7	;select IRP bank1
  4381  02B0  0800               	movf	indf,w
  4382  02B1  00F7               	movwf	(?_lcd_write_string)
  4383  02B2  3080               	movlw	80h
  4384  02B3  00F8               	movwf	(?_lcd_write_string+1)
  4385  02B4  120A  158A  24B3   	fcall	_lcd_write_string
              120A  118A         
  4386                           	line	240
  4387                           ;HMI.c: 240: break;
  4388  02B9  2B23               	goto	i1l5231
  4389                           	line	241
  4390                           ;HMI.c: 241: case 1:
  4391                           	
  4392  02BA                     i1l5229:	
  4393                           	line	242
  4394                           	
  4395  02BA                     i1l10153:	
  4396                           ;HMI.c: 242: lcd_write_control(0b00000001);
  4397  02BA  3001               	movlw	(01h)
  4398  02BB  120A  158A  23A0   	fcall	i1_lcd_write_control
              120A  118A         
  4399                           	line	244
  4400                           	
  4401  02C0                     i1l10155:	
  4402                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  4403  02C0  300B               	movlw	((STR_12-__stringbase))&0ffh
  4404  02C1  1283               	bcf	status, 5	;RP0=0, select bank0
  4405  02C2  1303               	bcf	status, 6	;RP1=0, select bank0
  4406  02C3  00B7               	movwf	(??_UpdateDisplay+0)+0
  4407  02C4  0837               	movf	(??_UpdateDisplay+0)+0,w
  4408  02C5  00A6               	movwf	(?_sprintf)
  4409  02C6  0865               	movf	(_highByte),w
  4410  02C7  00B8               	movwf	(??_UpdateDisplay+1)+0
  4411  02C8  01B9               	clrf	(??_UpdateDisplay+1)+0+1
  4412  02C9  0838               	movf	0+(??_UpdateDisplay+1)+0,w
  4413  02CA  00A7               	movwf	0+(?_sprintf)+01h
  4414  02CB  0839               	movf	1+(??_UpdateDisplay+1)+0,w
  4415  02CC  00A8               	movwf	1+(?_sprintf)+01h
  4416  02CD  0866               	movf	(_lowByte),w
  4417  02CE  00BA               	movwf	(??_UpdateDisplay+3)+0
  4418  02CF  01BB               	clrf	(??_UpdateDisplay+3)+0+1
  4419  02D0  083A               	movf	0+(??_UpdateDisplay+3)+0,w
  4420  02D1  00A9               	movwf	0+(?_sprintf)+03h
  4421  02D2  083B               	movf	1+(??_UpdateDisplay+3)+0,w
  4422  02D3  00AA               	movwf	1+(?_sprintf)+03h
  4423  02D4  303C               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4424  02D5  120A  118A  2324   	fcall	_sprintf
              120A  118A         
  4425                           	line	246
  4426                           	
  4427  02DA                     i1l10157:	
  4428                           ;HMI.c: 246: lcd_set_cursor(0x00);
  4429  02DA  3000               	movlw	(0)
  4430  02DB  120A  158A  2367   	fcall	_lcd_set_cursor
              120A  118A         
  4431                           	line	247
  4432                           	
  4433  02E0                     i1l10159:	
  4434                           ;HMI.c: 247: lcd_write_string(adcOutput);
  4435  02E0  303C               	movlw	(UpdateDisplay@adcOutput&0ffh)
  4436  02E1  00F7               	movwf	(?_lcd_write_string)
  4437  02E2  3000               	movlw	(0x0/2)
  4438  02E3  00F8               	movwf	(?_lcd_write_string+1)
  4439  02E4  120A  158A  24B3   	fcall	_lcd_write_string
              120A  118A         
  4440                           	line	252
  4441                           	
  4442  02E9                     i1l10161:	
  4443                           ;HMI.c: 252: lcd_set_cursor(0x40);
  4444  02E9  3040               	movlw	(040h)
  4445  02EA  120A  158A  2367   	fcall	_lcd_set_cursor
              120A  118A         
  4446                           	line	254
  4447                           	
  4448  02EF                     i1l10163:	
  4449                           ;HMI.c: 254: lcd_write_string("<<<");
  4450  02EF  3052               	movlw	low((STR_13-__stringbase))
  4451  02F0  00F7               	movwf	(?_lcd_write_string)
  4452  02F1  3080               	movlw	80h
  4453  02F2  00F8               	movwf	(?_lcd_write_string+1)
  4454  02F3  120A  158A  24B3   	fcall	_lcd_write_string
              120A  118A         
  4455                           	line	257
  4456                           	
  4457  02F8                     i1l10165:	
  4458                           ;HMI.c: 257: lcd_set_cursor(0x44);
  4459  02F8  3044               	movlw	(044h)
  4460  02F9  120A  158A  2367   	fcall	_lcd_set_cursor
              120A  118A         
  4461                           	line	258
  4462                           	
  4463  02FE                     i1l10167:	
  4464                           ;HMI.c: 258: lcd_write_string("CONFIRM");
  4465  02FE  3046               	movlw	low((STR_14-__stringbase))
  4466  02FF  00F7               	movwf	(?_lcd_write_string)
  4467  0300  3080               	movlw	80h
  4468  0301  00F8               	movwf	(?_lcd_write_string+1)
  4469  0302  120A  158A  24B3   	fcall	_lcd_write_string
              120A  118A         
  4470                           	line	259
  4471                           	
  4472  0307                     i1l10169:	
  4473                           ;HMI.c: 259: lcd_set_cursor(0x4D);
  4474  0307  304D               	movlw	(04Dh)
  4475  0308  120A  158A  2367   	fcall	_lcd_set_cursor
              120A  118A         
  4476                           	line	260
  4477                           	
  4478  030D                     i1l10171:	
  4479                           ;HMI.c: 260: lcd_write_string(">>>");
  4480  030D  3056               	movlw	low((STR_15-__stringbase))
  4481  030E  00F7               	movwf	(?_lcd_write_string)
  4482  030F  3080               	movlw	80h
  4483  0310  00F8               	movwf	(?_lcd_write_string+1)
  4484  0311  120A  158A  24B3   	fcall	_lcd_write_string
              120A  118A         
  4485                           	line	261
  4486                           ;HMI.c: 261: break;
  4487  0316  2B23               	goto	i1l5231
  4488                           	line	263
  4489                           ;HMI.c: 263: default:
  4490                           	
  4491  0317                     i1l5230:	
  4492                           	line	265
  4493                           ;HMI.c: 265: break;
  4494  0317  2B23               	goto	i1l5231
  4495                           	line	268
  4496                           	
  4497  0318                     i1l10173:	
  4498                           ;HMI.c: 268: }
  4499  0318  2B23               	goto	i1l5231
  4500                           	line	217
  4501                           	
  4502  0319                     i1l5224:	
  4503                           	
  4504  0319                     i1l10175:	
  4505  0319  1283               	bcf	status, 5	;RP0=0, select bank0
  4506  031A  1303               	bcf	status, 6	;RP1=0, select bank0
  4507  031B  0863               	movf	(_currentMenu),w
  4508                           	; Switch size 1, requested type "space"
  4509                           ; Number of cases is 2, Range of values is 0 to 1
  4510                           ; switch strategies available:
  4511                           ; Name         Instructions Cycles
  4512                           ; simple_byte            7     4 (average)
  4513                           ; direct_byte           14     8 (fixed)
  4514                           ; jumptable            260     6 (fixed)
  4515                           ; rangetable             6     6 (fixed)
  4516                           ; spacedrange           10     9 (fixed)
  4517                           ; locatedrange           2     3 (fixed)
  4518                           ;	Chosen strategy is simple_byte
  4519                           
  4520                           	opt asmopt_off
  4521  031C  3A00               	xorlw	0^0	; case 0
  4522  031D  1903               	skipnz
  4523  031E  2A18               	goto	i1l10131
  4524  031F  3A01               	xorlw	1^0	; case 1
  4525  0320  1903               	skipnz
  4526  0321  2ABA               	goto	i1l10153
  4527  0322  2B23               	goto	i1l5231
  4528                           	opt asmopt_on
  4529                           
  4530                           	line	268
  4531                           	
  4532  0323                     i1l5228:	
  4533                           	line	269
  4534                           	
  4535  0323                     i1l5231:	
  4536  0323  0008               	return
  4537                           	opt stack 0
  4538                           GLOBAL	__end_of_UpdateDisplay
  4539  0324                     	__end_of_UpdateDisplay:
  4540 ;; =============== function _UpdateDisplay ends ============
  4541                           
  4542                           	signat	_UpdateDisplay,4216
  4543                           	global	_readAvgDistance
  4544                           psect	text770,local,class=CODE,delta=2
  4545                           global __ptext770
  4546  0F45                     __ptext770:
  4547                           
  4548 ;; *************** function _readAvgDistance *****************
  4549 ;; Defined at:
  4550 ;;		line 10 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;		None
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  i               2    4[BANK0 ] int 
  4555 ;;  fullval         2    2[BANK0 ] unsigned int 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;		None               void
  4558 ;; Registers used:
  4559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         0       0       0       0       0
  4566 ;;      Locals:         0       4       0       0       0
  4567 ;;      Temps:          0       0       0       0       0
  4568 ;;      Totals:         0       4       0       0       0
  4569 ;;Total ram usage:        4 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    3
  4572 ;; This function calls:
  4573 ;;		_readDistance
  4574 ;;		___lwdiv
  4575 ;;		_ADCconvert
  4576 ;; This function is called by:
  4577 ;;		_isr1
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           psect	text770
  4581                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4582                           	line	10
  4583                           	global	__size_of_readAvgDistance
  4584  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4585                           	
  4586  0F45                     _readAvgDistance:	
  4587                           	opt	stack 0
  4588                           ; Regs used in _readAvgDistance: [allreg]
  4589                           	line	11
  4590                           	
  4591  0F45                     i1l10113:	
  4592                           ;infrared.c: 11: unsigned int fullval = 0;
  4593  0F45  1283               	bcf	status, 5	;RP0=0, select bank0
  4594  0F46  1303               	bcf	status, 6	;RP1=0, select bank0
  4595  0F47  01A2               	clrf	(readAvgDistance@fullval)
  4596  0F48  01A3               	clrf	(readAvgDistance@fullval+1)
  4597                           	line	14
  4598                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  4599  0F49  01A4               	clrf	(readAvgDistance@i)
  4600  0F4A  01A5               	clrf	(readAvgDistance@i+1)
  4601                           	
  4602  0F4B                     i1l10115:	
  4603  0F4B  0825               	movf	(readAvgDistance@i+1),w
  4604  0F4C  3A80               	xorlw	80h
  4605  0F4D  00FF               	movwf	btemp+1
  4606  0F4E  3080               	movlw	(high(0Ah))^80h
  4607  0F4F  027F               	subwf	btemp+1,w
  4608  0F50  1D03               	skipz
  4609  0F51  2F54               	goto	u336_25
  4610  0F52  300A               	movlw	low(0Ah)
  4611  0F53  0224               	subwf	(readAvgDistance@i),w
  4612  0F54                     u336_25:
  4613                           
  4614  0F54  1C03               	skipc
  4615  0F55  2F57               	goto	u336_21
  4616  0F56  2F58               	goto	u336_20
  4617  0F57                     u336_21:
  4618  0F57  2F5A               	goto	i1l10119
  4619  0F58                     u336_20:
  4620  0F58  2F7B               	goto	i1l10125
  4621                           	
  4622  0F59                     i1l10117:	
  4623  0F59  2F7B               	goto	i1l10125
  4624                           	line	15
  4625                           	
  4626  0F5A                     i1l2942:	
  4627                           	line	16
  4628                           	
  4629  0F5A                     i1l10119:	
  4630                           ;infrared.c: 15: {
  4631                           ;infrared.c: 16: fullval += readDistance();
  4632  0F5A  120A  158A  23B4   	fcall	_readDistance
              120A  158A         
  4633  0F5F  0878               	movf	(0+(?_readDistance)),w
  4634  0F60  1283               	bcf	status, 5	;RP0=0, select bank0
  4635  0F61  1303               	bcf	status, 6	;RP1=0, select bank0
  4636  0F62  07A2               	addwf	(readAvgDistance@fullval),f
  4637  0F63  1803               	skipnc
  4638  0F64  0AA3               	incf	(readAvgDistance@fullval+1),f
  4639  0F65  0879               	movf	(1+(?_readDistance)),w
  4640  0F66  07A3               	addwf	(readAvgDistance@fullval+1),f
  4641                           	line	14
  4642                           	
  4643  0F67                     i1l10121:	
  4644  0F67  3001               	movlw	low(01h)
  4645  0F68  07A4               	addwf	(readAvgDistance@i),f
  4646  0F69  1803               	skipnc
  4647  0F6A  0AA5               	incf	(readAvgDistance@i+1),f
  4648  0F6B  3000               	movlw	high(01h)
  4649  0F6C  07A5               	addwf	(readAvgDistance@i+1),f
  4650                           	
  4651  0F6D                     i1l10123:	
  4652  0F6D  0825               	movf	(readAvgDistance@i+1),w
  4653  0F6E  3A80               	xorlw	80h
  4654  0F6F  00FF               	movwf	btemp+1
  4655  0F70  3080               	movlw	(high(0Ah))^80h
  4656  0F71  027F               	subwf	btemp+1,w
  4657  0F72  1D03               	skipz
  4658  0F73  2F76               	goto	u337_25
  4659  0F74  300A               	movlw	low(0Ah)
  4660  0F75  0224               	subwf	(readAvgDistance@i),w
  4661  0F76                     u337_25:
  4662                           
  4663  0F76  1C03               	skipc
  4664  0F77  2F79               	goto	u337_21
  4665  0F78  2F7A               	goto	u337_20
  4666  0F79                     u337_21:
  4667  0F79  2F5A               	goto	i1l10119
  4668  0F7A                     u337_20:
  4669  0F7A  2F7B               	goto	i1l10125
  4670                           	
  4671  0F7B                     i1l2943:	
  4672                           	line	19
  4673                           	
  4674  0F7B                     i1l10125:	
  4675                           ;infrared.c: 18: }
  4676                           ;infrared.c: 19: adcVal = fullval / 10;
  4677  0F7B  300A               	movlw	low(0Ah)
  4678  0F7C  00F6               	movwf	(?___lwdiv)
  4679  0F7D  3000               	movlw	high(0Ah)
  4680  0F7E  00F7               	movwf	((?___lwdiv))+1
  4681  0F7F  1283               	bcf	status, 5	;RP0=0, select bank0
  4682  0F80  1303               	bcf	status, 6	;RP1=0, select bank0
  4683  0F81  0823               	movf	(readAvgDistance@fullval+1),w
  4684  0F82  01F9               	clrf	1+(?___lwdiv)+02h
  4685  0F83  07F9               	addwf	1+(?___lwdiv)+02h
  4686  0F84  0822               	movf	(readAvgDistance@fullval),w
  4687  0F85  01F8               	clrf	0+(?___lwdiv)+02h
  4688  0F86  07F8               	addwf	0+(?___lwdiv)+02h
  4689                           
  4690  0F87  120A  158A  26A5   	fcall	___lwdiv
              120A  158A         
  4691  0F8C  0877               	movf	(1+(?___lwdiv)),w
  4692  0F8D  1283               	bcf	status, 5	;RP0=0, select bank0
  4693  0F8E  1303               	bcf	status, 6	;RP1=0, select bank0
  4694  0F8F  01D4               	clrf	(_adcVal+1)	;volatile
  4695  0F90  07D4               	addwf	(_adcVal+1)	;volatile
  4696  0F91  0876               	movf	(0+(?___lwdiv)),w
  4697  0F92  01D3               	clrf	(_adcVal)	;volatile
  4698  0F93  07D3               	addwf	(_adcVal)	;volatile
  4699                           
  4700                           	line	20
  4701                           	
  4702  0F94                     i1l10127:	
  4703                           ;infrared.c: 20: ADCconvert();
  4704  0F94  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  4705                           	line	21
  4706                           	
  4707  0F99                     i1l2944:	
  4708  0F99  0008               	return
  4709                           	opt stack 0
  4710                           GLOBAL	__end_of_readAvgDistance
  4711  0F9A                     	__end_of_readAvgDistance:
  4712 ;; =============== function _readAvgDistance ends ============
  4713                           
  4714                           	signat	_readAvgDistance,88
  4715                           	global	_readDistance
  4716                           psect	text771,local,class=CODE,delta=2
  4717                           global __ptext771
  4718  0BB4                     __ptext771:
  4719                           
  4720 ;; *************** function _readDistance *****************
  4721 ;; Defined at:
  4722 ;;		line 24 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;		None
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  fullval         2   12[COMMON] unsigned int 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  2    8[COMMON] unsigned int 
  4729 ;; Registers used:
  4730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4736 ;;      Params:         2       0       0       0       0
  4737 ;;      Locals:         2       0       0       0       0
  4738 ;;      Temps:          2       0       0       0       0
  4739 ;;      Totals:         6       0       0       0       0
  4740 ;;Total ram usage:        6 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    2
  4743 ;; This function calls:
  4744 ;;		_adc_read_channel
  4745 ;; This function is called by:
  4746 ;;		_readAvgDistance
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           psect	text771
  4750                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  4751                           	line	24
  4752                           	global	__size_of_readDistance
  4753  0014                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  4754                           	
  4755  0BB4                     _readDistance:	
  4756                           	opt	stack 0
  4757                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4758                           	line	27
  4759                           	
  4760  0BB4                     i1l10267:	
  4761                           ;infrared.c: 25: unsigned int fullval ;
  4762                           ;infrared.c: 27: fullval = adc_read_channel(0);
  4763  0BB4  3000               	movlw	(0)
  4764  0BB5  120A  158A  2592   	fcall	_adc_read_channel
              120A  158A         
  4765  0BBA  00FA               	movwf	(??_readDistance+0)+0
  4766  0BBB  01FB               	clrf	(??_readDistance+0)+0+1
  4767  0BBC  087A               	movf	0+(??_readDistance+0)+0,w
  4768  0BBD  00FC               	movwf	(readDistance@fullval)
  4769  0BBE  087B               	movf	1+(??_readDistance+0)+0,w
  4770  0BBF  00FD               	movwf	(readDistance@fullval+1)
  4771                           	line	29
  4772                           	
  4773  0BC0                     i1l10269:	
  4774                           ;infrared.c: 29: return fullval;
  4775  0BC0  087D               	movf	(readDistance@fullval+1),w
  4776  0BC1  01F9               	clrf	(?_readDistance+1)
  4777  0BC2  07F9               	addwf	(?_readDistance+1)
  4778  0BC3  087C               	movf	(readDistance@fullval),w
  4779  0BC4  01F8               	clrf	(?_readDistance)
  4780  0BC5  07F8               	addwf	(?_readDistance)
  4781                           
  4782  0BC6  2BC7               	goto	i1l2947
  4783                           	
  4784  0BC7                     i1l10271:	
  4785                           	line	30
  4786                           	
  4787  0BC7                     i1l2947:	
  4788  0BC7  0008               	return
  4789                           	opt stack 0
  4790                           GLOBAL	__end_of_readDistance
  4791  0BC8                     	__end_of_readDistance:
  4792 ;; =============== function _readDistance ends ============
  4793                           
  4794                           	signat	_readDistance,90
  4795                           	global	_lcd_write_string
  4796                           psect	text772,local,class=CODE,delta=2
  4797                           global __ptext772
  4798  0CB3                     __ptext772:
  4799                           
  4800 ;; *************** function _lcd_write_string *****************
  4801 ;; Defined at:
  4802 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  s               2    7[COMMON] PTR unsigned char 
  4805 ;;		 -> STR_15(4), STR_14(8), STR_13(4), UpdateDisplay@adcOutput(16), 
  4806 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4807 ;;		 -> STR_6(4), STR_5(9), STR_4(8), STR_3(9), 
  4808 ;;		 -> STR_2(9), STR_1(9), 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;		None               void
  4813 ;; Registers used:
  4814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         2       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0
  4823 ;;      Totals:         2       0       0       0       0
  4824 ;;Total ram usage:        2 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    1
  4827 ;; This function calls:
  4828 ;;		_lcd_write_data
  4829 ;; This function is called by:
  4830 ;;		_UpdateDisplay
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           psect	text772
  4834                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4835                           	line	48
  4836                           	global	__size_of_lcd_write_string
  4837  002A                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  4838                           	
  4839  0CB3                     _lcd_write_string:	
  4840                           	opt	stack 1
  4841                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4842                           	line	50
  4843                           	
  4844  0CB3                     i1l10023:	
  4845                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  4846  0CB3  2CCB               	goto	i1l10029
  4847                           	
  4848  0CB4                     i1l1409:	
  4849                           	
  4850  0CB4                     i1l10025:	
  4851  0CB4  0878               	movf	(lcd_write_string@s+1),w
  4852  0CB5  1283               	bcf	status, 5	;RP0=0, select bank0
  4853  0CB6  1303               	bcf	status, 6	;RP1=0, select bank0
  4854  0CB7  00FF               	movwf	btemp+1
  4855  0CB8  0877               	movf	(lcd_write_string@s),w
  4856  0CB9  0084               	movwf	fsr0
  4857  0CBA  120A  118A  2767   	fcall	stringtab
              120A  158A         
  4858  0CBF  120A  158A  237A   	fcall	_lcd_write_data
              120A  158A         
  4859                           	
  4860  0CC4                     i1l10027:	
  4861  0CC4  3001               	movlw	low(01h)
  4862  0CC5  07F7               	addwf	(lcd_write_string@s),f
  4863  0CC6  1803               	skipnc
  4864  0CC7  0AF8               	incf	(lcd_write_string@s+1),f
  4865  0CC8  3000               	movlw	high(01h)
  4866  0CC9  07F8               	addwf	(lcd_write_string@s+1),f
  4867  0CCA  2CCB               	goto	i1l10029
  4868                           	
  4869  0CCB                     i1l1408:	
  4870                           	
  4871  0CCB                     i1l10029:	
  4872  0CCB  0878               	movf	(lcd_write_string@s+1),w
  4873  0CCC  1283               	bcf	status, 5	;RP0=0, select bank0
  4874  0CCD  1303               	bcf	status, 6	;RP1=0, select bank0
  4875  0CCE  00FF               	movwf	btemp+1
  4876  0CCF  0877               	movf	(lcd_write_string@s),w
  4877  0CD0  0084               	movwf	fsr0
  4878  0CD1  120A  118A  2767   	fcall	stringtab
              120A  158A         
  4879  0CD6  3800               	iorlw	0
  4880  0CD7  1D03               	skipz
  4881  0CD8  2CDA               	goto	u321_21
  4882  0CD9  2CDB               	goto	u321_20
  4883  0CDA                     u321_21:
  4884  0CDA  2CB4               	goto	i1l10025
  4885  0CDB                     u321_20:
  4886  0CDB  2CDC               	goto	i1l1411
  4887                           	
  4888  0CDC                     i1l1410:	
  4889                           	line	51
  4890                           	
  4891  0CDC                     i1l1411:	
  4892  0CDC  0008               	return
  4893                           	opt stack 0
  4894                           GLOBAL	__end_of_lcd_write_string
  4895  0CDD                     	__end_of_lcd_write_string:
  4896 ;; =============== function _lcd_write_string ends ============
  4897                           
  4898                           	signat	_lcd_write_string,4216
  4899                           	global	_lcd_set_cursor
  4900                           psect	text773,local,class=CODE,delta=2
  4901                           global __ptext773
  4902  0B67                     __ptext773:
  4903                           
  4904 ;; *************** function _lcd_set_cursor *****************
  4905 ;; Defined at:
  4906 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  address         1    wreg     unsigned char 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  address         1    3[COMMON] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;		None               void
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0, pclath, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4920 ;;      Params:         0       0       0       0       0
  4921 ;;      Locals:         1       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0
  4923 ;;      Totals:         1       0       0       0       0
  4924 ;;Total ram usage:        1 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    1
  4927 ;; This function calls:
  4928 ;;		i1_lcd_write_control
  4929 ;; This function is called by:
  4930 ;;		_UpdateDisplay
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           psect	text773
  4934                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4935                           	line	42
  4936                           	global	__size_of_lcd_set_cursor
  4937  0009                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  4938                           	
  4939  0B67                     _lcd_set_cursor:	
  4940                           	opt	stack 1
  4941                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4942                           ;lcd_set_cursor@address stored from wreg
  4943  0B67  00F3               	movwf	(lcd_set_cursor@address)
  4944                           	line	43
  4945                           	
  4946  0B68                     i1l10019:	
  4947                           ;lcd.c: 43: address |= 0b10000000;
  4948  0B68  17F3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  4949                           	line	44
  4950                           	
  4951  0B69                     i1l10021:	
  4952                           ;lcd.c: 44: lcd_write_control(address);
  4953  0B69  0873               	movf	(lcd_set_cursor@address),w
  4954  0B6A  120A  158A  23A0   	fcall	i1_lcd_write_control
              120A  158A         
  4955                           	line	45
  4956                           	
  4957  0B6F                     i1l1405:	
  4958  0B6F  0008               	return
  4959                           	opt stack 0
  4960                           GLOBAL	__end_of_lcd_set_cursor
  4961  0B70                     	__end_of_lcd_set_cursor:
  4962 ;; =============== function _lcd_set_cursor ends ============
  4963                           
  4964                           	signat	_lcd_set_cursor,4216
  4965                           	global	i1_lcd_write_control
  4966                           psect	text774,local,class=CODE,delta=2
  4967                           global __ptext774
  4968  0BA0                     __ptext774:
  4969                           
  4970 ;; *************** function i1_lcd_write_control *****************
  4971 ;; Defined at:
  4972 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  lcd_write_co    1    wreg     unsigned char 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  lcd_write_co    1    2[COMMON] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;		None               void
  4979 ;; Registers used:
  4980 ;;		wreg
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4986 ;;      Params:         0       0       0       0       0
  4987 ;;      Locals:         1       0       0       0       0
  4988 ;;      Temps:          2       0       0       0       0
  4989 ;;      Totals:         3       0       0       0       0
  4990 ;;Total ram usage:        3 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_lcd_set_cursor
  4996 ;;		_UpdateDisplay
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           psect	text774
  5000                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5001                           	line	18
  5002                           	global	__size_ofi1_lcd_write_control
  5003  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
  5004                           	
  5005  0BA0                     i1_lcd_write_control:	
  5006                           	opt	stack 1
  5007                           ; Regs used in i1_lcd_write_control: [wreg]
  5008                           ;i1lcd_write_control@databyte stored from wreg
  5009  0BA0  00F2               	movwf	(i1lcd_write_control@databyte)
  5010                           	line	19
  5011                           	
  5012  0BA1                     i1l10673:	
  5013                           ;lcd.c: 19: RE2 = 0;
  5014  0BA1  1283               	bcf	status, 5	;RP0=0, select bank0
  5015  0BA2  1303               	bcf	status, 6	;RP1=0, select bank0
  5016  0BA3  1109               	bcf	(74/8),(74)&7
  5017                           	line	20
  5018                           ;lcd.c: 20: RE1 = 0;
  5019  0BA4  1089               	bcf	(73/8),(73)&7
  5020                           	line	21
  5021                           ;lcd.c: 21: RE0 = 0;
  5022  0BA5  1009               	bcf	(72/8),(72)&7
  5023                           	line	22
  5024                           	
  5025  0BA6                     i1l10675:	
  5026                           ;lcd.c: 22: PORTD = databyte;
  5027  0BA6  0872               	movf	(i1lcd_write_control@databyte),w
  5028  0BA7  0088               	movwf	(8)	;volatile
  5029                           	line	23
  5030                           	
  5031  0BA8                     i1l10677:	
  5032                           ;lcd.c: 23: RE2 = 1;
  5033  0BA8  1509               	bsf	(74/8),(74)&7
  5034                           	line	24
  5035                           	
  5036  0BA9                     i1l10679:	
  5037                           ;lcd.c: 24: RE2 = 0;
  5038  0BA9  1109               	bcf	(74/8),(74)&7
  5039                           	line	25
  5040                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  5041                           	opt asmopt_off
  5042  0BAA  300D               movlw	13
  5043  0BAB  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
  5044  0BAC  30FB               	movlw	251
  5045  0BAD  00F0               movwf	((??i1_lcd_write_control+0)+0),f
  5046  0BAE                     u435_27:
  5047  0BAE  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
  5048  0BAF  2BAE               	goto	u435_27
  5049  0BB0  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
  5050  0BB1  2BAE               	goto	u435_27
  5051  0BB2  2BB3               	nop2
  5052                           opt asmopt_on
  5053                           
  5054                           	line	26
  5055                           	
  5056  0BB3                     i1l1399:	
  5057  0BB3  0008               	return
  5058                           	opt stack 0
  5059                           GLOBAL	__end_ofi1_lcd_write_control
  5060  0BB4                     	__end_ofi1_lcd_write_control:
  5061 ;; =============== function i1_lcd_write_control ends ============
  5062                           
  5063                           	signat	i1_lcd_write_control,88
  5064                           	global	_sprintf
  5065                           psect	text775,local,class=CODE,delta=2
  5066                           global __ptext775
  5067  0324                     __ptext775:
  5068                           
  5069 ;; *************** function _sprintf *****************
  5070 ;; Defined at:
  5071 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  sp              1    wreg     PTR unsigned char 
  5074 ;;		 -> UpdateDisplay@adcOutput(16), 
  5075 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  5076 ;;		 -> STR_12(15), STR_11(15), 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  5079 ;;		 -> UpdateDisplay@adcOutput(16), 
  5080 ;;  _val            4   17[BANK0 ] struct .
  5081 ;;  c               1   22[BANK0 ] char 
  5082 ;;  prec            1   16[BANK0 ] char 
  5083 ;;  flag            1   15[BANK0 ] unsigned char 
  5084 ;;  ap              1   14[BANK0 ] PTR void [1]
  5085 ;;		 -> ?_sprintf(2), 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  2    6[BANK0 ] int 
  5088 ;; Registers used:
  5089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5095 ;;      Params:         0       5       0       0       0
  5096 ;;      Locals:         0       9       0       0       0
  5097 ;;      Temps:          0       3       0       0       0
  5098 ;;      Totals:         0      17       0       0       0
  5099 ;;Total ram usage:       17 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    1
  5102 ;; This function calls:
  5103 ;;		___lwdiv
  5104 ;;		___lwmod
  5105 ;; This function is called by:
  5106 ;;		_UpdateDisplay
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           psect	text775
  5110                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  5111                           	line	488
  5112                           	global	__size_of_sprintf
  5113  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  5114                           	
  5115  0324                     _sprintf:	
  5116                           	opt	stack 1
  5117                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5118                           ;sprintf@sp stored from wreg
  5119                           	line	537
  5120  0324  1283               	bcf	status, 5	;RP0=0, select bank0
  5121  0325  1303               	bcf	status, 6	;RP1=0, select bank0
  5122  0326  00B5               	movwf	(sprintf@sp)
  5123                           	
  5124  0327                     i1l10505:	
  5125  0327  3027               	movlw	(?_sprintf+01h)&0ffh
  5126  0328  00AB               	movwf	(??_sprintf+0)+0
  5127  0329  082B               	movf	(??_sprintf+0)+0,w
  5128  032A  00AE               	movwf	(sprintf@ap)
  5129                           	line	540
  5130  032B  2C0A               	goto	i1l10557
  5131                           	
  5132  032C                     i1l6698:	
  5133                           	line	542
  5134                           	
  5135  032C                     i1l10507:	
  5136  032C  0836               	movf	(sprintf@c),w
  5137  032D  3A25               	xorlw	025h
  5138  032E  1903               	skipnz
  5139  032F  2B31               	goto	u390_21
  5140  0330  2B32               	goto	u390_20
  5141  0331                     u390_21:
  5142  0331  2B3E               	goto	i1l6699
  5143  0332                     u390_20:
  5144                           	line	545
  5145                           	
  5146  0332                     i1l10509:	
  5147  0332  0836               	movf	(sprintf@c),w
  5148  0333  00AB               	movwf	(??_sprintf+0)+0
  5149  0334  0835               	movf	(sprintf@sp),w
  5150  0335  0084               	movwf	fsr0
  5151  0336  082B               	movf	(??_sprintf+0)+0,w
  5152  0337  1383               	bcf	status, 7	;select IRP bank0
  5153  0338  0080               	movwf	indf
  5154                           	
  5155  0339                     i1l10511:	
  5156  0339  3001               	movlw	(01h)
  5157  033A  00AB               	movwf	(??_sprintf+0)+0
  5158  033B  082B               	movf	(??_sprintf+0)+0,w
  5159  033C  07B5               	addwf	(sprintf@sp),f
  5160                           	line	546
  5161  033D  2C0A               	goto	i1l10557
  5162                           	line	547
  5163                           	
  5164  033E                     i1l6699:	
  5165                           	line	552
  5166  033E  01AF               	clrf	(sprintf@flag)
  5167                           	line	638
  5168  033F  2B45               	goto	i1l10515
  5169                           	line	640
  5170                           	
  5171  0340                     i1l6701:	
  5172                           	line	641
  5173  0340  2C1E               	goto	i1l10559
  5174                           	line	700
  5175                           	
  5176  0341                     i1l6703:	
  5177  0341  2B5A               	goto	i1l10517
  5178                           	line	701
  5179                           	
  5180  0342                     i1l6704:	
  5181                           	line	702
  5182  0342  2B5A               	goto	i1l10517
  5183                           	line	805
  5184                           	
  5185  0343                     i1l6706:	
  5186                           	line	816
  5187  0343  2C0A               	goto	i1l10557
  5188                           	line	825
  5189                           	
  5190  0344                     i1l10513:	
  5191  0344  2B5A               	goto	i1l10517
  5192                           	line	638
  5193                           	
  5194  0345                     i1l6700:	
  5195                           	
  5196  0345                     i1l10515:	
  5197  0345  3001               	movlw	01h
  5198  0346  07A6               	addwf	(sprintf@f),f
  5199  0347  30FF               	movlw	-01h
  5200  0348  0726               	addwf	(sprintf@f),w
  5201  0349  0084               	movwf	fsr0
  5202  034A  120A  118A  2771   	fcall	stringdir
              120A  118A         
  5203  034F  00B6               	movwf	(sprintf@c)
  5204                           	; Switch size 1, requested type "space"
  5205                           ; Number of cases is 3, Range of values is 0 to 105
  5206                           ; switch strategies available:
  5207                           ; Name         Instructions Cycles
  5208                           ; simple_byte           10     6 (average)
  5209                           ; jumptable            260     6 (fixed)
  5210                           ; rangetable           110     6 (fixed)
  5211                           ; spacedrange          218     9 (fixed)
  5212                           ; locatedrange         106     3 (fixed)
  5213                           ;	Chosen strategy is simple_byte
  5214                           
  5215                           	opt asmopt_off
  5216  0350  3A00               	xorlw	0^0	; case 0
  5217  0351  1903               	skipnz
  5218  0352  2C1E               	goto	i1l10559
  5219  0353  3A64               	xorlw	100^0	; case 100
  5220  0354  1903               	skipnz
  5221  0355  2B5A               	goto	i1l10517
  5222  0356  3A0D               	xorlw	105^100	; case 105
  5223  0357  1903               	skipnz
  5224  0358  2B5A               	goto	i1l10517
  5225  0359  2C0A               	goto	i1l10557
  5226                           	opt asmopt_on
  5227                           
  5228                           	line	825
  5229                           	
  5230  035A                     i1l6705:	
  5231                           	line	1254
  5232                           	
  5233  035A                     i1l10517:	
  5234  035A  082E               	movf	(sprintf@ap),w
  5235  035B  0084               	movwf	fsr0
  5236  035C  1383               	bcf	status, 7	;select IRP bank0
  5237  035D  0800               	movf	indf,w
  5238  035E  00B1               	movwf	(sprintf@_val)
  5239  035F  0A84               	incf	fsr0,f
  5240  0360  0800               	movf	indf,w
  5241  0361  00B2               	movwf	(sprintf@_val+1)
  5242                           	
  5243  0362                     i1l10519:	
  5244  0362  3002               	movlw	(02h)
  5245  0363  00AB               	movwf	(??_sprintf+0)+0
  5246  0364  082B               	movf	(??_sprintf+0)+0,w
  5247  0365  07AE               	addwf	(sprintf@ap),f
  5248                           	line	1256
  5249                           	
  5250  0366                     i1l10521:	
  5251  0366  1FB2               	btfss	(sprintf@_val+1),7
  5252  0367  2B69               	goto	u391_21
  5253  0368  2B6A               	goto	u391_20
  5254  0369                     u391_21:
  5255  0369  2B74               	goto	i1l10527
  5256  036A                     u391_20:
  5257                           	line	1257
  5258                           	
  5259  036A                     i1l10523:	
  5260  036A  3003               	movlw	(03h)
  5261  036B  00AB               	movwf	(??_sprintf+0)+0
  5262  036C  082B               	movf	(??_sprintf+0)+0,w
  5263  036D  04AF               	iorwf	(sprintf@flag),f
  5264                           	line	1258
  5265                           	
  5266  036E                     i1l10525:	
  5267  036E  09B1               	comf	(sprintf@_val),f
  5268  036F  09B2               	comf	(sprintf@_val+1),f
  5269  0370  0AB1               	incf	(sprintf@_val),f
  5270  0371  1903               	skipnz
  5271  0372  0AB2               	incf	(sprintf@_val+1),f
  5272  0373  2B74               	goto	i1l10527
  5273                           	line	1259
  5274                           	
  5275  0374                     i1l6707:	
  5276                           	line	1300
  5277                           	
  5278  0374                     i1l10527:	
  5279  0374  01B6               	clrf	(sprintf@c)
  5280  0375  1403               	bsf	status,0
  5281  0376  0DB6               	rlf	(sprintf@c),f
  5282                           	
  5283  0377                     i1l10529:	
  5284  0377  0836               	movf	(sprintf@c),w
  5285  0378  3A05               	xorlw	05h
  5286  0379  1D03               	skipz
  5287  037A  2B7C               	goto	u392_21
  5288  037B  2B7D               	goto	u392_20
  5289  037C                     u392_21:
  5290  037C  2B7F               	goto	i1l10533
  5291  037D                     u392_20:
  5292  037D  2BA7               	goto	i1l10541
  5293                           	
  5294  037E                     i1l10531:	
  5295  037E  2BA7               	goto	i1l10541
  5296                           	line	1301
  5297                           	
  5298  037F                     i1l6708:	
  5299                           	
  5300  037F                     i1l10533:	
  5301  037F  0836               	movf	(sprintf@c),w
  5302  0380  00AB               	movwf	(??_sprintf+0)+0
  5303  0381  072B               	addwf	(??_sprintf+0)+0,w
  5304  0382  3E01               	addlw	low((_dpowers-__stringbase))
  5305  0383  0084               	movwf	fsr0
  5306  0384  120A  118A  2771   	fcall	stringdir
              120A  118A         
  5307  0389  00AC               	movwf	(??_sprintf+1)+0
  5308  038A  120A  118A  2771   	fcall	stringdir
              120A  118A         
  5309  038F  00AD               	movwf	(??_sprintf+1)+0+1
  5310  0390  082D               	movf	1+(??_sprintf+1)+0,w
  5311  0391  0232               	subwf	(sprintf@_val+1),w
  5312  0392  1D03               	skipz
  5313  0393  2B96               	goto	u393_25
  5314  0394  082C               	movf	0+(??_sprintf+1)+0,w
  5315  0395  0231               	subwf	(sprintf@_val),w
  5316  0396                     u393_25:
  5317  0396  1803               	skipnc
  5318  0397  2B99               	goto	u393_21
  5319  0398  2B9A               	goto	u393_20
  5320  0399                     u393_21:
  5321  0399  2B9C               	goto	i1l10537
  5322  039A                     u393_20:
  5323  039A  2BA7               	goto	i1l10541
  5324                           	line	1302
  5325                           	
  5326  039B                     i1l10535:	
  5327  039B  2BA7               	goto	i1l10541
  5328                           	
  5329  039C                     i1l6710:	
  5330                           	line	1300
  5331                           	
  5332  039C                     i1l10537:	
  5333  039C  3001               	movlw	(01h)
  5334  039D  00AB               	movwf	(??_sprintf+0)+0
  5335  039E  082B               	movf	(??_sprintf+0)+0,w
  5336  039F  07B6               	addwf	(sprintf@c),f
  5337                           	
  5338  03A0                     i1l10539:	
  5339  03A0  0836               	movf	(sprintf@c),w
  5340  03A1  3A05               	xorlw	05h
  5341  03A2  1D03               	skipz
  5342  03A3  2BA5               	goto	u394_21
  5343  03A4  2BA6               	goto	u394_20
  5344  03A5                     u394_21:
  5345  03A5  2B7F               	goto	i1l10533
  5346  03A6                     u394_20:
  5347  03A6  2BA7               	goto	i1l10541
  5348                           	
  5349  03A7                     i1l6709:	
  5350                           	line	1433
  5351                           	
  5352  03A7                     i1l10541:	
  5353  03A7  082F               	movf	(sprintf@flag),w
  5354  03A8  3903               	andlw	03h
  5355  03A9  1903               	btfsc	status,2
  5356  03AA  2BAC               	goto	u395_21
  5357  03AB  2BAD               	goto	u395_20
  5358  03AC                     u395_21:
  5359  03AC  2BB9               	goto	i1l10547
  5360  03AD                     u395_20:
  5361                           	line	1434
  5362                           	
  5363  03AD                     i1l10543:	
  5364  03AD  302D               	movlw	(02Dh)
  5365  03AE  00AB               	movwf	(??_sprintf+0)+0
  5366  03AF  0835               	movf	(sprintf@sp),w
  5367  03B0  0084               	movwf	fsr0
  5368  03B1  082B               	movf	(??_sprintf+0)+0,w
  5369  03B2  1383               	bcf	status, 7	;select IRP bank0
  5370  03B3  0080               	movwf	indf
  5371                           	
  5372  03B4                     i1l10545:	
  5373  03B4  3001               	movlw	(01h)
  5374  03B5  00AB               	movwf	(??_sprintf+0)+0
  5375  03B6  082B               	movf	(??_sprintf+0)+0,w
  5376  03B7  07B5               	addwf	(sprintf@sp),f
  5377  03B8  2BB9               	goto	i1l10547
  5378                           	
  5379  03B9                     i1l6711:	
  5380                           	line	1467
  5381                           	
  5382  03B9                     i1l10547:	
  5383  03B9  0836               	movf	(sprintf@c),w
  5384  03BA  00AB               	movwf	(??_sprintf+0)+0
  5385  03BB  082B               	movf	(??_sprintf+0)+0,w
  5386  03BC  00B0               	movwf	(sprintf@prec)
  5387                           	line	1469
  5388  03BD  2BFE               	goto	i1l10555
  5389                           	
  5390  03BE                     i1l6713:	
  5391                           	line	1484
  5392                           	
  5393  03BE                     i1l10549:	
  5394  03BE  300A               	movlw	low(0Ah)
  5395  03BF  00A0               	movwf	(?___lwmod)
  5396  03C0  3000               	movlw	high(0Ah)
  5397  03C1  00A1               	movwf	((?___lwmod))+1
  5398  03C2  0830               	movf	(sprintf@prec),w
  5399  03C3  00AB               	movwf	(??_sprintf+0)+0
  5400  03C4  072B               	addwf	(??_sprintf+0)+0,w
  5401  03C5  3E01               	addlw	low((_dpowers-__stringbase))
  5402  03C6  0084               	movwf	fsr0
  5403  03C7  120A  118A  2771   	fcall	stringdir
              120A  118A         
  5404  03CC  00F6               	movwf	(?___lwdiv)
  5405  03CD  120A  118A  2771   	fcall	stringdir
              120A  118A         
  5406  03D2  00F7               	movwf	(?___lwdiv+1)
  5407  03D3  0832               	movf	(sprintf@_val+1),w
  5408  03D4  01F9               	clrf	1+(?___lwdiv)+02h
  5409  03D5  07F9               	addwf	1+(?___lwdiv)+02h
  5410  03D6  0831               	movf	(sprintf@_val),w
  5411  03D7  01F8               	clrf	0+(?___lwdiv)+02h
  5412  03D8  07F8               	addwf	0+(?___lwdiv)+02h
  5413                           
  5414  03D9  120A  158A  26A5   	fcall	___lwdiv
              120A  118A         
  5415  03DE  0877               	movf	(1+(?___lwdiv)),w
  5416  03DF  1283               	bcf	status, 5	;RP0=0, select bank0
  5417  03E0  1303               	bcf	status, 6	;RP1=0, select bank0
  5418  03E1  01A3               	clrf	1+(?___lwmod)+02h
  5419  03E2  07A3               	addwf	1+(?___lwmod)+02h
  5420  03E3  0876               	movf	(0+(?___lwdiv)),w
  5421  03E4  01A2               	clrf	0+(?___lwmod)+02h
  5422  03E5  07A2               	addwf	0+(?___lwmod)+02h
  5423                           
  5424  03E6  120A  158A  2618   	fcall	___lwmod
              120A  118A         
  5425  03EB  1283               	bcf	status, 5	;RP0=0, select bank0
  5426  03EC  1303               	bcf	status, 6	;RP1=0, select bank0
  5427  03ED  0820               	movf	(0+(?___lwmod)),w
  5428  03EE  3E30               	addlw	030h
  5429  03EF  00AC               	movwf	(??_sprintf+1)+0
  5430  03F0  082C               	movf	(??_sprintf+1)+0,w
  5431  03F1  00B6               	movwf	(sprintf@c)
  5432                           	line	1516
  5433                           	
  5434  03F2                     i1l10551:	
  5435  03F2  0836               	movf	(sprintf@c),w
  5436  03F3  00AB               	movwf	(??_sprintf+0)+0
  5437  03F4  0835               	movf	(sprintf@sp),w
  5438  03F5  0084               	movwf	fsr0
  5439  03F6  082B               	movf	(??_sprintf+0)+0,w
  5440  03F7  1383               	bcf	status, 7	;select IRP bank0
  5441  03F8  0080               	movwf	indf
  5442                           	
  5443  03F9                     i1l10553:	
  5444  03F9  3001               	movlw	(01h)
  5445  03FA  00AB               	movwf	(??_sprintf+0)+0
  5446  03FB  082B               	movf	(??_sprintf+0)+0,w
  5447  03FC  07B5               	addwf	(sprintf@sp),f
  5448  03FD  2BFE               	goto	i1l10555
  5449                           	line	1517
  5450                           	
  5451  03FE                     i1l6712:	
  5452                           	line	1469
  5453                           	
  5454  03FE                     i1l10555:	
  5455  03FE  30FF               	movlw	(-1)
  5456  03FF  00AB               	movwf	(??_sprintf+0)+0
  5457  0400  082B               	movf	(??_sprintf+0)+0,w
  5458  0401  07B0               	addwf	(sprintf@prec),f
  5459  0402  0830               	movf	((sprintf@prec)),w
  5460  0403  3AFF               	xorlw	-1
  5461  0404  1D03               	skipz
  5462  0405  2C07               	goto	u396_21
  5463  0406  2C08               	goto	u396_20
  5464  0407                     u396_21:
  5465  0407  2BBE               	goto	i1l10549
  5466  0408                     u396_20:
  5467  0408  2C0A               	goto	i1l10557
  5468                           	
  5469  0409                     i1l6714:	
  5470  0409  2C0A               	goto	i1l10557
  5471                           	line	1525
  5472                           	
  5473  040A                     i1l6697:	
  5474                           	line	540
  5475                           	
  5476  040A                     i1l10557:	
  5477  040A  3001               	movlw	01h
  5478  040B  07A6               	addwf	(sprintf@f),f
  5479  040C  30FF               	movlw	-01h
  5480  040D  0726               	addwf	(sprintf@f),w
  5481  040E  0084               	movwf	fsr0
  5482  040F  120A  118A  2771   	fcall	stringdir
              120A  118A         
  5483  0414  00AB               	movwf	(??_sprintf+0)+0
  5484  0415  082B               	movf	(??_sprintf+0)+0,w
  5485  0416  00B6               	movwf	(sprintf@c)
  5486  0417  08B6               	movf	((sprintf@c)),f
  5487  0418  1D03               	skipz
  5488  0419  2C1B               	goto	u397_21
  5489  041A  2C1C               	goto	u397_20
  5490  041B                     u397_21:
  5491  041B  2B2C               	goto	i1l10507
  5492  041C                     u397_20:
  5493  041C  2C1E               	goto	i1l10559
  5494                           	
  5495  041D                     i1l6715:	
  5496  041D  2C1E               	goto	i1l10559
  5497                           	line	1527
  5498                           	
  5499  041E                     i1l6702:	
  5500                           	line	1530
  5501                           	
  5502  041E                     i1l10559:	
  5503  041E  0835               	movf	(sprintf@sp),w
  5504  041F  0084               	movwf	fsr0
  5505  0420  1383               	bcf	status, 7	;select IRP bank0
  5506  0421  0180               	clrf	indf
  5507  0422  2C23               	goto	i1l6716
  5508                           	line	1532
  5509                           	
  5510  0423                     i1l10561:	
  5511                           	line	1533
  5512                           ;	Return value of _sprintf is never used
  5513                           	
  5514  0423                     i1l6716:	
  5515  0423  0008               	return
  5516                           	opt stack 0
  5517                           GLOBAL	__end_of_sprintf
  5518  0424                     	__end_of_sprintf:
  5519 ;; =============== function _sprintf ends ============
  5520                           
  5521                           	signat	_sprintf,4698
  5522                           	global	_ADCconvert
  5523                           psect	text776,local,class=CODE,delta=2
  5524                           global __ptext776
  5525  0015                     __ptext776:
  5526                           
  5527 ;; *************** function _ADCconvert *****************
  5528 ;; Defined at:
  5529 ;;		line 33 in file "H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;		None               void
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0, pclath, cstack
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5543 ;;      Params:         0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0
  5545 ;;      Temps:          0       2       0       0       0
  5546 ;;      Totals:         0       2       0       0       0
  5547 ;;Total ram usage:        2 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    1
  5550 ;; This function calls:
  5551 ;;		___wmul
  5552 ;;		___lwdiv
  5553 ;; This function is called by:
  5554 ;;		_readAvgDistance
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           psect	text776
  5558                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\infrared.c"
  5559                           	line	33
  5560                           	global	__size_of_ADCconvert
  5561  01EB                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  5562                           	
  5563  0015                     _ADCconvert:	
  5564                           	opt	stack 1
  5565                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  5566                           	line	39
  5567                           	
  5568  0015                     i1l10273:	
  5569                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  5570  0015  3000               	movlw	high(0D5h)
  5571  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  5572  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  5573  0018  0254               	subwf	(_adcVal+1),w	;volatile
  5574  0019  30D5               	movlw	low(0D5h)
  5575  001A  1903               	skipnz
  5576  001B  0253               	subwf	(_adcVal),w	;volatile
  5577  001C  1C03               	skipc
  5578  001D  281F               	goto	u347_21
  5579  001E  2820               	goto	u347_20
  5580  001F                     u347_21:
  5581  001F  285B               	goto	i1l10279
  5582  0020                     u347_20:
  5583                           	
  5584  0020                     i1l10275:	
  5585  0020  3000               	movlw	high(0EAh)
  5586  0021  0254               	subwf	(_adcVal+1),w	;volatile
  5587  0022  30EA               	movlw	low(0EAh)
  5588  0023  1903               	skipnz
  5589  0024  0253               	subwf	(_adcVal),w	;volatile
  5590  0025  1803               	skipnc
  5591  0026  2828               	goto	u348_21
  5592  0027  2829               	goto	u348_20
  5593  0028                     u348_21:
  5594  0028  285B               	goto	i1l10279
  5595  0029                     u348_20:
  5596                           	line	41
  5597                           	
  5598  0029                     i1l10277:	
  5599                           ;infrared.c: 40: {
  5600                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  5601  0029  3015               	movlw	low(015h)
  5602  002A  00F6               	movwf	(?___lwdiv)
  5603  002B  3000               	movlw	high(015h)
  5604  002C  00F7               	movwf	((?___lwdiv))+1
  5605  002D  0953               	comf	(_adcVal),w	;volatile
  5606  002E  00A0               	movwf	(??_ADCconvert+0)+0
  5607  002F  0954               	comf	(_adcVal+1),w	;volatile
  5608  0030  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5609  0031  0AA0               	incf	(??_ADCconvert+0)+0,f
  5610  0032  1903               	skipnz
  5611  0033  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5612  0034  0820               	movf	0+(??_ADCconvert+0)+0,w
  5613  0035  3EEA               	addlw	low(0EAh)
  5614  0036  00F0               	movwf	(?___wmul)
  5615  0037  0821               	movf	1+(??_ADCconvert+0)+0,w
  5616  0038  1803               	skipnc
  5617  0039  3E01               	addlw	1
  5618  003A  3E00               	addlw	high(0EAh)
  5619  003B  00F1               	movwf	1+(?___wmul)
  5620  003C  3005               	movlw	low(05h)
  5621  003D  00F2               	movwf	0+(?___wmul)+02h
  5622  003E  3000               	movlw	high(05h)
  5623  003F  00F3               	movwf	(0+(?___wmul)+02h)+1
  5624  0040  120A  158A  2489   	fcall	___wmul
              120A  118A         
  5625  0045  0871               	movf	(1+(?___wmul)),w
  5626  0046  01F9               	clrf	1+(?___lwdiv)+02h
  5627  0047  07F9               	addwf	1+(?___lwdiv)+02h
  5628  0048  0870               	movf	(0+(?___wmul)),w
  5629  0049  01F8               	clrf	0+(?___lwdiv)+02h
  5630  004A  07F8               	addwf	0+(?___lwdiv)+02h
  5631                           
  5632  004B  120A  158A  26A5   	fcall	___lwdiv
              120A  118A         
  5633  0050  0876               	movf	(0+(?___lwdiv)),w
  5634  0051  3E0F               	addlw	low(0Fh)
  5635  0052  1683               	bsf	status, 5	;RP0=1, select bank1
  5636  0053  1303               	bcf	status, 6	;RP1=0, select bank1
  5637  0054  00D0               	movwf	(_distance)^080h	;volatile
  5638  0055  0877               	movf	(1+(?___lwdiv)),w
  5639  0056  1803               	skipnc
  5640  0057  3E01               	addlw	1
  5641  0058  3E00               	addlw	high(0Fh)
  5642  0059  00D1               	movwf	1+(_distance)^080h	;volatile
  5643                           	line	42
  5644                           ;infrared.c: 42: }
  5645  005A  29FF               	goto	i1l2963
  5646                           	line	43
  5647                           	
  5648  005B                     i1l2950:	
  5649                           	
  5650  005B                     i1l10279:	
  5651                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  5652  005B  3000               	movlw	high(0AAh)
  5653  005C  1283               	bcf	status, 5	;RP0=0, select bank0
  5654  005D  0254               	subwf	(_adcVal+1),w	;volatile
  5655  005E  30AA               	movlw	low(0AAh)
  5656  005F  1903               	skipnz
  5657  0060  0253               	subwf	(_adcVal),w	;volatile
  5658  0061  1C03               	skipc
  5659  0062  2864               	goto	u349_21
  5660  0063  2865               	goto	u349_20
  5661  0064                     u349_21:
  5662  0064  28A0               	goto	i1l10285
  5663  0065                     u349_20:
  5664                           	
  5665  0065                     i1l10281:	
  5666  0065  3000               	movlw	high(0D5h)
  5667  0066  0254               	subwf	(_adcVal+1),w	;volatile
  5668  0067  30D5               	movlw	low(0D5h)
  5669  0068  1903               	skipnz
  5670  0069  0253               	subwf	(_adcVal),w	;volatile
  5671  006A  1803               	skipnc
  5672  006B  286D               	goto	u350_21
  5673  006C  286E               	goto	u350_20
  5674  006D                     u350_21:
  5675  006D  28A0               	goto	i1l10285
  5676  006E                     u350_20:
  5677                           	line	45
  5678                           	
  5679  006E                     i1l10283:	
  5680                           ;infrared.c: 44: {
  5681                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  5682  006E  302B               	movlw	low(02Bh)
  5683  006F  00F6               	movwf	(?___lwdiv)
  5684  0070  3000               	movlw	high(02Bh)
  5685  0071  00F7               	movwf	((?___lwdiv))+1
  5686  0072  0953               	comf	(_adcVal),w	;volatile
  5687  0073  00A0               	movwf	(??_ADCconvert+0)+0
  5688  0074  0954               	comf	(_adcVal+1),w	;volatile
  5689  0075  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5690  0076  0AA0               	incf	(??_ADCconvert+0)+0,f
  5691  0077  1903               	skipnz
  5692  0078  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5693  0079  0820               	movf	0+(??_ADCconvert+0)+0,w
  5694  007A  3ED5               	addlw	low(0D5h)
  5695  007B  00F0               	movwf	(?___wmul)
  5696  007C  0821               	movf	1+(??_ADCconvert+0)+0,w
  5697  007D  1803               	skipnc
  5698  007E  3E01               	addlw	1
  5699  007F  3E00               	addlw	high(0D5h)
  5700  0080  00F1               	movwf	1+(?___wmul)
  5701  0081  300A               	movlw	low(0Ah)
  5702  0082  00F2               	movwf	0+(?___wmul)+02h
  5703  0083  3000               	movlw	high(0Ah)
  5704  0084  00F3               	movwf	(0+(?___wmul)+02h)+1
  5705  0085  120A  158A  2489   	fcall	___wmul
              120A  118A         
  5706  008A  0871               	movf	(1+(?___wmul)),w
  5707  008B  01F9               	clrf	1+(?___lwdiv)+02h
  5708  008C  07F9               	addwf	1+(?___lwdiv)+02h
  5709  008D  0870               	movf	(0+(?___wmul)),w
  5710  008E  01F8               	clrf	0+(?___lwdiv)+02h
  5711  008F  07F8               	addwf	0+(?___lwdiv)+02h
  5712                           
  5713  0090  120A  158A  26A5   	fcall	___lwdiv
              120A  118A         
  5714  0095  0876               	movf	(0+(?___lwdiv)),w
  5715  0096  3E14               	addlw	low(014h)
  5716  0097  1683               	bsf	status, 5	;RP0=1, select bank1
  5717  0098  1303               	bcf	status, 6	;RP1=0, select bank1
  5718  0099  00D0               	movwf	(_distance)^080h	;volatile
  5719  009A  0877               	movf	(1+(?___lwdiv)),w
  5720  009B  1803               	skipnc
  5721  009C  3E01               	addlw	1
  5722  009D  3E00               	addlw	high(014h)
  5723  009E  00D1               	movwf	1+(_distance)^080h	;volatile
  5724                           	line	46
  5725                           ;infrared.c: 46: }
  5726  009F  29FF               	goto	i1l2963
  5727                           	line	47
  5728                           	
  5729  00A0                     i1l2952:	
  5730                           	
  5731  00A0                     i1l10285:	
  5732                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  5733  00A0  3000               	movlw	high(080h)
  5734  00A1  1283               	bcf	status, 5	;RP0=0, select bank0
  5735  00A2  0254               	subwf	(_adcVal+1),w	;volatile
  5736  00A3  3080               	movlw	low(080h)
  5737  00A4  1903               	skipnz
  5738  00A5  0253               	subwf	(_adcVal),w	;volatile
  5739  00A6  1C03               	skipc
  5740  00A7  28A9               	goto	u351_21
  5741  00A8  28AA               	goto	u351_20
  5742  00A9                     u351_21:
  5743  00A9  28E5               	goto	i1l10291
  5744  00AA                     u351_20:
  5745                           	
  5746  00AA                     i1l10287:	
  5747  00AA  3000               	movlw	high(0AAh)
  5748  00AB  0254               	subwf	(_adcVal+1),w	;volatile
  5749  00AC  30AA               	movlw	low(0AAh)
  5750  00AD  1903               	skipnz
  5751  00AE  0253               	subwf	(_adcVal),w	;volatile
  5752  00AF  1803               	skipnc
  5753  00B0  28B2               	goto	u352_21
  5754  00B1  28B3               	goto	u352_20
  5755  00B2                     u352_21:
  5756  00B2  28E5               	goto	i1l10291
  5757  00B3                     u352_20:
  5758                           	line	49
  5759                           	
  5760  00B3                     i1l10289:	
  5761                           ;infrared.c: 48: {
  5762                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  5763  00B3  302A               	movlw	low(02Ah)
  5764  00B4  00F6               	movwf	(?___lwdiv)
  5765  00B5  3000               	movlw	high(02Ah)
  5766  00B6  00F7               	movwf	((?___lwdiv))+1
  5767  00B7  0953               	comf	(_adcVal),w	;volatile
  5768  00B8  00A0               	movwf	(??_ADCconvert+0)+0
  5769  00B9  0954               	comf	(_adcVal+1),w	;volatile
  5770  00BA  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5771  00BB  0AA0               	incf	(??_ADCconvert+0)+0,f
  5772  00BC  1903               	skipnz
  5773  00BD  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5774  00BE  0820               	movf	0+(??_ADCconvert+0)+0,w
  5775  00BF  3EAA               	addlw	low(0AAh)
  5776  00C0  00F0               	movwf	(?___wmul)
  5777  00C1  0821               	movf	1+(??_ADCconvert+0)+0,w
  5778  00C2  1803               	skipnc
  5779  00C3  3E01               	addlw	1
  5780  00C4  3E00               	addlw	high(0AAh)
  5781  00C5  00F1               	movwf	1+(?___wmul)
  5782  00C6  300A               	movlw	low(0Ah)
  5783  00C7  00F2               	movwf	0+(?___wmul)+02h
  5784  00C8  3000               	movlw	high(0Ah)
  5785  00C9  00F3               	movwf	(0+(?___wmul)+02h)+1
  5786  00CA  120A  158A  2489   	fcall	___wmul
              120A  118A         
  5787  00CF  0871               	movf	(1+(?___wmul)),w
  5788  00D0  01F9               	clrf	1+(?___lwdiv)+02h
  5789  00D1  07F9               	addwf	1+(?___lwdiv)+02h
  5790  00D2  0870               	movf	(0+(?___wmul)),w
  5791  00D3  01F8               	clrf	0+(?___lwdiv)+02h
  5792  00D4  07F8               	addwf	0+(?___lwdiv)+02h
  5793                           
  5794  00D5  120A  158A  26A5   	fcall	___lwdiv
              120A  118A         
  5795  00DA  0876               	movf	(0+(?___lwdiv)),w
  5796  00DB  3E1E               	addlw	low(01Eh)
  5797  00DC  1683               	bsf	status, 5	;RP0=1, select bank1
  5798  00DD  1303               	bcf	status, 6	;RP1=0, select bank1
  5799  00DE  00D0               	movwf	(_distance)^080h	;volatile
  5800  00DF  0877               	movf	(1+(?___lwdiv)),w
  5801  00E0  1803               	skipnc
  5802  00E1  3E01               	addlw	1
  5803  00E2  3E00               	addlw	high(01Eh)
  5804  00E3  00D1               	movwf	1+(_distance)^080h	;volatile
  5805                           	line	50
  5806                           ;infrared.c: 50: }
  5807  00E4  29FF               	goto	i1l2963
  5808                           	line	51
  5809                           	
  5810  00E5                     i1l2954:	
  5811                           	
  5812  00E5                     i1l10291:	
  5813                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  5814  00E5  3000               	movlw	high(06Bh)
  5815  00E6  1283               	bcf	status, 5	;RP0=0, select bank0
  5816  00E7  0254               	subwf	(_adcVal+1),w	;volatile
  5817  00E8  306B               	movlw	low(06Bh)
  5818  00E9  1903               	skipnz
  5819  00EA  0253               	subwf	(_adcVal),w	;volatile
  5820  00EB  1C03               	skipc
  5821  00EC  28EE               	goto	u353_21
  5822  00ED  28EF               	goto	u353_20
  5823  00EE                     u353_21:
  5824  00EE  292A               	goto	i1l10297
  5825  00EF                     u353_20:
  5826                           	
  5827  00EF                     i1l10293:	
  5828  00EF  3000               	movlw	high(080h)
  5829  00F0  0254               	subwf	(_adcVal+1),w	;volatile
  5830  00F1  3080               	movlw	low(080h)
  5831  00F2  1903               	skipnz
  5832  00F3  0253               	subwf	(_adcVal),w	;volatile
  5833  00F4  1803               	skipnc
  5834  00F5  28F7               	goto	u354_21
  5835  00F6  28F8               	goto	u354_20
  5836  00F7                     u354_21:
  5837  00F7  292A               	goto	i1l10297
  5838  00F8                     u354_20:
  5839                           	line	53
  5840                           	
  5841  00F8                     i1l10295:	
  5842                           ;infrared.c: 52: {
  5843                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  5844  00F8  3015               	movlw	low(015h)
  5845  00F9  00F6               	movwf	(?___lwdiv)
  5846  00FA  3000               	movlw	high(015h)
  5847  00FB  00F7               	movwf	((?___lwdiv))+1
  5848  00FC  0953               	comf	(_adcVal),w	;volatile
  5849  00FD  00A0               	movwf	(??_ADCconvert+0)+0
  5850  00FE  0954               	comf	(_adcVal+1),w	;volatile
  5851  00FF  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5852  0100  0AA0               	incf	(??_ADCconvert+0)+0,f
  5853  0101  1903               	skipnz
  5854  0102  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5855  0103  0820               	movf	0+(??_ADCconvert+0)+0,w
  5856  0104  3E80               	addlw	low(080h)
  5857  0105  00F0               	movwf	(?___wmul)
  5858  0106  0821               	movf	1+(??_ADCconvert+0)+0,w
  5859  0107  1803               	skipnc
  5860  0108  3E01               	addlw	1
  5861  0109  3E00               	addlw	high(080h)
  5862  010A  00F1               	movwf	1+(?___wmul)
  5863  010B  300A               	movlw	low(0Ah)
  5864  010C  00F2               	movwf	0+(?___wmul)+02h
  5865  010D  3000               	movlw	high(0Ah)
  5866  010E  00F3               	movwf	(0+(?___wmul)+02h)+1
  5867  010F  120A  158A  2489   	fcall	___wmul
              120A  118A         
  5868  0114  0871               	movf	(1+(?___wmul)),w
  5869  0115  01F9               	clrf	1+(?___lwdiv)+02h
  5870  0116  07F9               	addwf	1+(?___lwdiv)+02h
  5871  0117  0870               	movf	(0+(?___wmul)),w
  5872  0118  01F8               	clrf	0+(?___lwdiv)+02h
  5873  0119  07F8               	addwf	0+(?___lwdiv)+02h
  5874                           
  5875  011A  120A  158A  26A5   	fcall	___lwdiv
              120A  118A         
  5876  011F  0876               	movf	(0+(?___lwdiv)),w
  5877  0120  3E28               	addlw	low(028h)
  5878  0121  1683               	bsf	status, 5	;RP0=1, select bank1
  5879  0122  1303               	bcf	status, 6	;RP1=0, select bank1
  5880  0123  00D0               	movwf	(_distance)^080h	;volatile
  5881  0124  0877               	movf	(1+(?___lwdiv)),w
  5882  0125  1803               	skipnc
  5883  0126  3E01               	addlw	1
  5884  0127  3E00               	addlw	high(028h)
  5885  0128  00D1               	movwf	1+(_distance)^080h	;volatile
  5886                           	line	54
  5887                           ;infrared.c: 54: }
  5888  0129  29FF               	goto	i1l2963
  5889                           	line	55
  5890                           	
  5891  012A                     i1l2956:	
  5892                           	
  5893  012A                     i1l10297:	
  5894                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  5895  012A  3000               	movlw	high(04Dh)
  5896  012B  1283               	bcf	status, 5	;RP0=0, select bank0
  5897  012C  0254               	subwf	(_adcVal+1),w	;volatile
  5898  012D  304D               	movlw	low(04Dh)
  5899  012E  1903               	skipnz
  5900  012F  0253               	subwf	(_adcVal),w	;volatile
  5901  0130  1C03               	skipc
  5902  0131  2933               	goto	u355_21
  5903  0132  2934               	goto	u355_20
  5904  0133                     u355_21:
  5905  0133  296F               	goto	i1l10303
  5906  0134                     u355_20:
  5907                           	
  5908  0134                     i1l10299:	
  5909  0134  3000               	movlw	high(06Bh)
  5910  0135  0254               	subwf	(_adcVal+1),w	;volatile
  5911  0136  306B               	movlw	low(06Bh)
  5912  0137  1903               	skipnz
  5913  0138  0253               	subwf	(_adcVal),w	;volatile
  5914  0139  1803               	skipnc
  5915  013A  293C               	goto	u356_21
  5916  013B  293D               	goto	u356_20
  5917  013C                     u356_21:
  5918  013C  296F               	goto	i1l10303
  5919  013D                     u356_20:
  5920                           	line	57
  5921                           	
  5922  013D                     i1l10301:	
  5923                           ;infrared.c: 56: {
  5924                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  5925  013D  301E               	movlw	low(01Eh)
  5926  013E  00F6               	movwf	(?___lwdiv)
  5927  013F  3000               	movlw	high(01Eh)
  5928  0140  00F7               	movwf	((?___lwdiv))+1
  5929  0141  0953               	comf	(_adcVal),w	;volatile
  5930  0142  00A0               	movwf	(??_ADCconvert+0)+0
  5931  0143  0954               	comf	(_adcVal+1),w	;volatile
  5932  0144  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5933  0145  0AA0               	incf	(??_ADCconvert+0)+0,f
  5934  0146  1903               	skipnz
  5935  0147  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5936  0148  0820               	movf	0+(??_ADCconvert+0)+0,w
  5937  0149  3E6B               	addlw	low(06Bh)
  5938  014A  00F0               	movwf	(?___wmul)
  5939  014B  0821               	movf	1+(??_ADCconvert+0)+0,w
  5940  014C  1803               	skipnc
  5941  014D  3E01               	addlw	1
  5942  014E  3E00               	addlw	high(06Bh)
  5943  014F  00F1               	movwf	1+(?___wmul)
  5944  0150  300A               	movlw	low(0Ah)
  5945  0151  00F2               	movwf	0+(?___wmul)+02h
  5946  0152  3000               	movlw	high(0Ah)
  5947  0153  00F3               	movwf	(0+(?___wmul)+02h)+1
  5948  0154  120A  158A  2489   	fcall	___wmul
              120A  118A         
  5949  0159  0871               	movf	(1+(?___wmul)),w
  5950  015A  01F9               	clrf	1+(?___lwdiv)+02h
  5951  015B  07F9               	addwf	1+(?___lwdiv)+02h
  5952  015C  0870               	movf	(0+(?___wmul)),w
  5953  015D  01F8               	clrf	0+(?___lwdiv)+02h
  5954  015E  07F8               	addwf	0+(?___lwdiv)+02h
  5955                           
  5956  015F  120A  158A  26A5   	fcall	___lwdiv
              120A  118A         
  5957  0164  0876               	movf	(0+(?___lwdiv)),w
  5958  0165  3E32               	addlw	low(032h)
  5959  0166  1683               	bsf	status, 5	;RP0=1, select bank1
  5960  0167  1303               	bcf	status, 6	;RP1=0, select bank1
  5961  0168  00D0               	movwf	(_distance)^080h	;volatile
  5962  0169  0877               	movf	(1+(?___lwdiv)),w
  5963  016A  1803               	skipnc
  5964  016B  3E01               	addlw	1
  5965  016C  3E00               	addlw	high(032h)
  5966  016D  00D1               	movwf	1+(_distance)^080h	;volatile
  5967                           	line	58
  5968                           ;infrared.c: 58: }
  5969  016E  29FF               	goto	i1l2963
  5970                           	line	59
  5971                           	
  5972  016F                     i1l2958:	
  5973                           	
  5974  016F                     i1l10303:	
  5975                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  5976  016F  3000               	movlw	high(038h)
  5977  0170  1283               	bcf	status, 5	;RP0=0, select bank0
  5978  0171  0254               	subwf	(_adcVal+1),w	;volatile
  5979  0172  3038               	movlw	low(038h)
  5980  0173  1903               	skipnz
  5981  0174  0253               	subwf	(_adcVal),w	;volatile
  5982  0175  1C03               	skipc
  5983  0176  2978               	goto	u357_21
  5984  0177  2979               	goto	u357_20
  5985  0178                     u357_21:
  5986  0178  29B4               	goto	i1l10309
  5987  0179                     u357_20:
  5988                           	
  5989  0179                     i1l10305:	
  5990  0179  3000               	movlw	high(04Dh)
  5991  017A  0254               	subwf	(_adcVal+1),w	;volatile
  5992  017B  304D               	movlw	low(04Dh)
  5993  017C  1903               	skipnz
  5994  017D  0253               	subwf	(_adcVal),w	;volatile
  5995  017E  1803               	skipnc
  5996  017F  2981               	goto	u358_21
  5997  0180  2982               	goto	u358_20
  5998  0181                     u358_21:
  5999  0181  29B4               	goto	i1l10309
  6000  0182                     u358_20:
  6001                           	line	61
  6002                           	
  6003  0182                     i1l10307:	
  6004                           ;infrared.c: 60: {
  6005                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  6006  0182  3015               	movlw	low(015h)
  6007  0183  00F6               	movwf	(?___lwdiv)
  6008  0184  3000               	movlw	high(015h)
  6009  0185  00F7               	movwf	((?___lwdiv))+1
  6010  0186  0953               	comf	(_adcVal),w	;volatile
  6011  0187  00A0               	movwf	(??_ADCconvert+0)+0
  6012  0188  0954               	comf	(_adcVal+1),w	;volatile
  6013  0189  00A1               	movwf	((??_ADCconvert+0)+0+1)
  6014  018A  0AA0               	incf	(??_ADCconvert+0)+0,f
  6015  018B  1903               	skipnz
  6016  018C  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  6017  018D  0820               	movf	0+(??_ADCconvert+0)+0,w
  6018  018E  3E4D               	addlw	low(04Dh)
  6019  018F  00F0               	movwf	(?___wmul)
  6020  0190  0821               	movf	1+(??_ADCconvert+0)+0,w
  6021  0191  1803               	skipnc
  6022  0192  3E01               	addlw	1
  6023  0193  3E00               	addlw	high(04Dh)
  6024  0194  00F1               	movwf	1+(?___wmul)
  6025  0195  300A               	movlw	low(0Ah)
  6026  0196  00F2               	movwf	0+(?___wmul)+02h
  6027  0197  3000               	movlw	high(0Ah)
  6028  0198  00F3               	movwf	(0+(?___wmul)+02h)+1
  6029  0199  120A  158A  2489   	fcall	___wmul
              120A  118A         
  6030  019E  0871               	movf	(1+(?___wmul)),w
  6031  019F  01F9               	clrf	1+(?___lwdiv)+02h
  6032  01A0  07F9               	addwf	1+(?___lwdiv)+02h
  6033  01A1  0870               	movf	(0+(?___wmul)),w
  6034  01A2  01F8               	clrf	0+(?___lwdiv)+02h
  6035  01A3  07F8               	addwf	0+(?___lwdiv)+02h
  6036                           
  6037  01A4  120A  158A  26A5   	fcall	___lwdiv
              120A  118A         
  6038  01A9  0876               	movf	(0+(?___lwdiv)),w
  6039  01AA  3E3C               	addlw	low(03Ch)
  6040  01AB  1683               	bsf	status, 5	;RP0=1, select bank1
  6041  01AC  1303               	bcf	status, 6	;RP1=0, select bank1
  6042  01AD  00D0               	movwf	(_distance)^080h	;volatile
  6043  01AE  0877               	movf	(1+(?___lwdiv)),w
  6044  01AF  1803               	skipnc
  6045  01B0  3E01               	addlw	1
  6046  01B1  3E00               	addlw	high(03Ch)
  6047  01B2  00D1               	movwf	1+(_distance)^080h	;volatile
  6048                           	line	62
  6049                           ;infrared.c: 62: }
  6050  01B3  29FF               	goto	i1l2963
  6051                           	line	63
  6052                           	
  6053  01B4                     i1l2960:	
  6054                           	
  6055  01B4                     i1l10309:	
  6056                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  6057  01B4  3000               	movlw	high(02Bh)
  6058  01B5  1283               	bcf	status, 5	;RP0=0, select bank0
  6059  01B6  0254               	subwf	(_adcVal+1),w	;volatile
  6060  01B7  302B               	movlw	low(02Bh)
  6061  01B8  1903               	skipnz
  6062  01B9  0253               	subwf	(_adcVal),w	;volatile
  6063  01BA  1C03               	skipc
  6064  01BB  29BD               	goto	u359_21
  6065  01BC  29BE               	goto	u359_20
  6066  01BD                     u359_21:
  6067  01BD  29FF               	goto	i1l2963
  6068  01BE                     u359_20:
  6069                           	
  6070  01BE                     i1l10311:	
  6071  01BE  3000               	movlw	high(038h)
  6072  01BF  0254               	subwf	(_adcVal+1),w	;volatile
  6073  01C0  3038               	movlw	low(038h)
  6074  01C1  1903               	skipnz
  6075  01C2  0253               	subwf	(_adcVal),w	;volatile
  6076  01C3  1803               	skipnc
  6077  01C4  29C6               	goto	u360_21
  6078  01C5  29C7               	goto	u360_20
  6079  01C6                     u360_21:
  6080  01C6  29FF               	goto	i1l2963
  6081  01C7                     u360_20:
  6082                           	line	65
  6083                           	
  6084  01C7                     i1l10313:	
  6085                           ;infrared.c: 64: {
  6086                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  6087  01C7  300D               	movlw	low(0Dh)
  6088  01C8  00F6               	movwf	(?___lwdiv)
  6089  01C9  3000               	movlw	high(0Dh)
  6090  01CA  00F7               	movwf	((?___lwdiv))+1
  6091  01CB  0953               	comf	(_adcVal),w	;volatile
  6092  01CC  00A0               	movwf	(??_ADCconvert+0)+0
  6093  01CD  0954               	comf	(_adcVal+1),w	;volatile
  6094  01CE  00A1               	movwf	((??_ADCconvert+0)+0+1)
  6095  01CF  0AA0               	incf	(??_ADCconvert+0)+0,f
  6096  01D0  1903               	skipnz
  6097  01D1  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  6098  01D2  0820               	movf	0+(??_ADCconvert+0)+0,w
  6099  01D3  3E38               	addlw	low(038h)
  6100  01D4  00F0               	movwf	(?___wmul)
  6101  01D5  0821               	movf	1+(??_ADCconvert+0)+0,w
  6102  01D6  1803               	skipnc
  6103  01D7  3E01               	addlw	1
  6104  01D8  3E00               	addlw	high(038h)
  6105  01D9  00F1               	movwf	1+(?___wmul)
  6106  01DA  300A               	movlw	low(0Ah)
  6107  01DB  00F2               	movwf	0+(?___wmul)+02h
  6108  01DC  3000               	movlw	high(0Ah)
  6109  01DD  00F3               	movwf	(0+(?___wmul)+02h)+1
  6110  01DE  120A  158A  2489   	fcall	___wmul
              120A  118A         
  6111  01E3  0871               	movf	(1+(?___wmul)),w
  6112  01E4  01F9               	clrf	1+(?___lwdiv)+02h
  6113  01E5  07F9               	addwf	1+(?___lwdiv)+02h
  6114  01E6  0870               	movf	(0+(?___wmul)),w
  6115  01E7  01F8               	clrf	0+(?___lwdiv)+02h
  6116  01E8  07F8               	addwf	0+(?___lwdiv)+02h
  6117                           
  6118  01E9  120A  158A  26A5   	fcall	___lwdiv
              120A  118A         
  6119  01EE  0876               	movf	(0+(?___lwdiv)),w
  6120  01EF  3E46               	addlw	low(046h)
  6121  01F0  1683               	bsf	status, 5	;RP0=1, select bank1
  6122  01F1  1303               	bcf	status, 6	;RP1=0, select bank1
  6123  01F2  00D0               	movwf	(_distance)^080h	;volatile
  6124  01F3  0877               	movf	(1+(?___lwdiv)),w
  6125  01F4  1803               	skipnc
  6126  01F5  3E01               	addlw	1
  6127  01F6  3E00               	addlw	high(046h)
  6128  01F7  00D1               	movwf	1+(_distance)^080h	;volatile
  6129  01F8  29FF               	goto	i1l2963
  6130                           	line	66
  6131                           	
  6132  01F9                     i1l2962:	
  6133  01F9  29FF               	goto	i1l2963
  6134                           	line	67
  6135                           	
  6136  01FA                     i1l2961:	
  6137  01FA  29FF               	goto	i1l2963
  6138                           	
  6139  01FB                     i1l2959:	
  6140  01FB  29FF               	goto	i1l2963
  6141                           	
  6142  01FC                     i1l2957:	
  6143  01FC  29FF               	goto	i1l2963
  6144                           	
  6145  01FD                     i1l2955:	
  6146  01FD  29FF               	goto	i1l2963
  6147                           	
  6148  01FE                     i1l2953:	
  6149  01FE  29FF               	goto	i1l2963
  6150                           	
  6151  01FF                     i1l2951:	
  6152                           	
  6153  01FF                     i1l2963:	
  6154  01FF  0008               	return
  6155                           	opt stack 0
  6156                           GLOBAL	__end_of_ADCconvert
  6157  0200                     	__end_of_ADCconvert:
  6158 ;; =============== function _ADCconvert ends ============
  6159                           
  6160                           	signat	_ADCconvert,88
  6161                           	global	_ReadButtons
  6162                           psect	text777,local,class=CODE,delta=2
  6163                           global __ptext777
  6164  0D60                     __ptext777:
  6165                           
  6166 ;; *************** function _ReadButtons *****************
  6167 ;; Defined at:
  6168 ;;		line 141 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;		None
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      unsigned char 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0, pclath, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6182 ;;      Params:         0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0
  6185 ;;      Totals:         0       0       0       0       0
  6186 ;;Total ram usage:        0 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    1
  6189 ;; This function calls:
  6190 ;;		_Debounce
  6191 ;; This function is called by:
  6192 ;;		_isr1
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           psect	text777
  6196                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  6197                           	line	141
  6198                           	global	__size_of_ReadButtons
  6199  0032                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  6200                           	
  6201  0D60                     _ReadButtons:	
  6202                           	opt	stack 2
  6203                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  6204                           	line	142
  6205                           	
  6206  0D60                     i1l10177:	
  6207                           ;HMI.c: 142: Debounce();
  6208  0D60  120A  118A  26EB   	fcall	_Debounce
              120A  158A         
  6209                           	line	144
  6210                           	
  6211  0D65                     i1l10179:	
  6212                           ;HMI.c: 144: if(UpPressed)
  6213  0D65  1283               	bcf	status, 5	;RP0=0, select bank0
  6214  0D66  1303               	bcf	status, 6	;RP1=0, select bank0
  6215  0D67  1EEE               	btfss	(_UpPressed/8),(_UpPressed)&7
  6216  0D68  2D6A               	goto	u340_21
  6217  0D69  2D6B               	goto	u340_20
  6218  0D6A                     u340_21:
  6219  0D6A  2D6F               	goto	i1l5201
  6220  0D6B                     u340_20:
  6221                           	line	146
  6222                           	
  6223  0D6B                     i1l10181:	
  6224                           ;HMI.c: 145: {
  6225                           ;HMI.c: 146: UpPressed = 0;
  6226  0D6B  12EE               	bcf	(_UpPressed/8),(_UpPressed)&7
  6227                           	line	147
  6228                           	
  6229  0D6C                     i1l10183:	
  6230                           ;HMI.c: 147: return 1;
  6231  0D6C  3001               	movlw	(01h)
  6232  0D6D  2D91               	goto	i1l5202
  6233                           	
  6234  0D6E                     i1l10185:	
  6235  0D6E  2D91               	goto	i1l5202
  6236                           	line	149
  6237                           	
  6238  0D6F                     i1l5201:	
  6239                           	line	151
  6240                           ;HMI.c: 149: }
  6241                           ;HMI.c: 151: if(DownPressed)
  6242  0D6F  1D6D               	btfss	(_DownPressed/8),(_DownPressed)&7
  6243  0D70  2D72               	goto	u341_21
  6244  0D71  2D73               	goto	u341_20
  6245  0D72                     u341_21:
  6246  0D72  2D77               	goto	i1l5203
  6247  0D73                     u341_20:
  6248                           	line	153
  6249                           	
  6250  0D73                     i1l10187:	
  6251                           ;HMI.c: 152: {
  6252                           ;HMI.c: 153: DownPressed = 0;
  6253  0D73  116D               	bcf	(_DownPressed/8),(_DownPressed)&7
  6254                           	line	154
  6255                           	
  6256  0D74                     i1l10189:	
  6257                           ;HMI.c: 154: return 2;
  6258  0D74  3002               	movlw	(02h)
  6259  0D75  2D91               	goto	i1l5202
  6260                           	
  6261  0D76                     i1l10191:	
  6262  0D76  2D91               	goto	i1l5202
  6263                           	line	156
  6264                           	
  6265  0D77                     i1l5203:	
  6266                           	line	157
  6267                           ;HMI.c: 156: }
  6268                           ;HMI.c: 157: if(LeftPressed)
  6269  0D77  1E6D               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  6270  0D78  2D7A               	goto	u342_21
  6271  0D79  2D7B               	goto	u342_20
  6272  0D7A                     u342_21:
  6273  0D7A  2D7F               	goto	i1l5204
  6274  0D7B                     u342_20:
  6275                           	line	159
  6276                           	
  6277  0D7B                     i1l10193:	
  6278                           ;HMI.c: 158: {
  6279                           ;HMI.c: 159: LeftPressed = 0;
  6280  0D7B  126D               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  6281                           	line	160
  6282                           	
  6283  0D7C                     i1l10195:	
  6284                           ;HMI.c: 160: return 3;
  6285  0D7C  3003               	movlw	(03h)
  6286  0D7D  2D91               	goto	i1l5202
  6287                           	
  6288  0D7E                     i1l10197:	
  6289  0D7E  2D91               	goto	i1l5202
  6290                           	line	162
  6291                           	
  6292  0D7F                     i1l5204:	
  6293                           	line	163
  6294                           ;HMI.c: 162: }
  6295                           ;HMI.c: 163: if(RightPressed)
  6296  0D7F  1DEE               	btfss	(_RightPressed/8),(_RightPressed)&7
  6297  0D80  2D82               	goto	u343_21
  6298  0D81  2D83               	goto	u343_20
  6299  0D82                     u343_21:
  6300  0D82  2D87               	goto	i1l5205
  6301  0D83                     u343_20:
  6302                           	line	165
  6303                           	
  6304  0D83                     i1l10199:	
  6305                           ;HMI.c: 164: {
  6306                           ;HMI.c: 165: RightPressed = 0;
  6307  0D83  11EE               	bcf	(_RightPressed/8),(_RightPressed)&7
  6308                           	line	166
  6309                           	
  6310  0D84                     i1l10201:	
  6311                           ;HMI.c: 166: return 4;
  6312  0D84  3004               	movlw	(04h)
  6313  0D85  2D91               	goto	i1l5202
  6314                           	
  6315  0D86                     i1l10203:	
  6316  0D86  2D91               	goto	i1l5202
  6317                           	line	168
  6318                           	
  6319  0D87                     i1l5205:	
  6320                           	line	170
  6321                           ;HMI.c: 168: }
  6322                           ;HMI.c: 170: if(CenterPressed)
  6323  0D87  1C6D               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  6324  0D88  2D8A               	goto	u344_21
  6325  0D89  2D8B               	goto	u344_20
  6326  0D8A                     u344_21:
  6327  0D8A  2D8F               	goto	i1l10211
  6328  0D8B                     u344_20:
  6329                           	line	172
  6330                           	
  6331  0D8B                     i1l10205:	
  6332                           ;HMI.c: 171: {
  6333                           ;HMI.c: 172: CenterPressed = 0;
  6334  0D8B  106D               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  6335                           	line	173
  6336                           	
  6337  0D8C                     i1l10207:	
  6338                           ;HMI.c: 173: return 5;
  6339  0D8C  3005               	movlw	(05h)
  6340  0D8D  2D91               	goto	i1l5202
  6341                           	
  6342  0D8E                     i1l10209:	
  6343  0D8E  2D91               	goto	i1l5202
  6344                           	line	175
  6345                           	
  6346  0D8F                     i1l5206:	
  6347                           	line	176
  6348                           	
  6349  0D8F                     i1l10211:	
  6350                           ;HMI.c: 175: }
  6351                           ;HMI.c: 176: return 0;
  6352  0D8F  3000               	movlw	(0)
  6353  0D90  2D91               	goto	i1l5202
  6354                           	
  6355  0D91                     i1l10213:	
  6356                           	line	177
  6357                           	
  6358  0D91                     i1l5202:	
  6359  0D91  0008               	return
  6360                           	opt stack 0
  6361                           GLOBAL	__end_of_ReadButtons
  6362  0D92                     	__end_of_ReadButtons:
  6363 ;; =============== function _ReadButtons ends ============
  6364                           
  6365                           	signat	_ReadButtons,89
  6366                           	global	_lcd_write_data
  6367                           psect	text778,local,class=CODE,delta=2
  6368                           global __ptext778
  6369  0B7A                     __ptext778:
  6370                           
  6371 ;; *************** function _lcd_write_data *****************
  6372 ;; Defined at:
  6373 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  databyte        1    wreg     unsigned char 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  databyte        1    2[COMMON] unsigned char 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;		None               void
  6380 ;; Registers used:
  6381 ;;		wreg
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6387 ;;      Params:         0       0       0       0       0
  6388 ;;      Locals:         1       0       0       0       0
  6389 ;;      Temps:          2       0       0       0       0
  6390 ;;      Totals:         3       0       0       0       0
  6391 ;;Total ram usage:        3 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_lcd_write_string
  6397 ;;		_lcd_write_2_digit_bcd
  6398 ;;		_lcd_write_3_digit_bcd
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           psect	text778
  6402                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6403                           	line	30
  6404                           	global	__size_of_lcd_write_data
  6405  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  6406                           	
  6407  0B7A                     _lcd_write_data:	
  6408                           	opt	stack 1
  6409                           ; Regs used in _lcd_write_data: [wreg]
  6410                           ;lcd_write_data@databyte stored from wreg
  6411  0B7A  00F2               	movwf	(lcd_write_data@databyte)
  6412                           	line	31
  6413                           	
  6414  0B7B                     i1l10011:	
  6415                           ;lcd.c: 31: RE2 = 0;
  6416  0B7B  1283               	bcf	status, 5	;RP0=0, select bank0
  6417  0B7C  1303               	bcf	status, 6	;RP1=0, select bank0
  6418  0B7D  1109               	bcf	(74/8),(74)&7
  6419                           	line	32
  6420                           ;lcd.c: 32: RE1 = 0;
  6421  0B7E  1089               	bcf	(73/8),(73)&7
  6422                           	line	33
  6423                           ;lcd.c: 33: RE0 = 1;
  6424  0B7F  1409               	bsf	(72/8),(72)&7
  6425                           	line	34
  6426                           	
  6427  0B80                     i1l10013:	
  6428                           ;lcd.c: 34: PORTD = databyte;
  6429  0B80  0872               	movf	(lcd_write_data@databyte),w
  6430  0B81  0088               	movwf	(8)	;volatile
  6431                           	line	35
  6432                           	
  6433  0B82                     i1l10015:	
  6434                           ;lcd.c: 35: RE2 = 1;
  6435  0B82  1509               	bsf	(74/8),(74)&7
  6436                           	line	36
  6437                           	
  6438  0B83                     i1l10017:	
  6439                           ;lcd.c: 36: RE2 = 0;
  6440  0B83  1109               	bcf	(74/8),(74)&7
  6441                           	line	37
  6442                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  6443                           	opt asmopt_off
  6444  0B84  3007               movlw	7
  6445  0B85  00F1               movwf	((??_lcd_write_data+0)+0+1),f
  6446  0B86  307D               	movlw	125
  6447  0B87  00F0               movwf	((??_lcd_write_data+0)+0),f
  6448  0B88                     u436_27:
  6449  0B88  0BF0               	decfsz	((??_lcd_write_data+0)+0),f
  6450  0B89  2B88               	goto	u436_27
  6451  0B8A  0BF1               	decfsz	((??_lcd_write_data+0)+0+1),f
  6452  0B8B  2B88               	goto	u436_27
  6453                           opt asmopt_on
  6454                           
  6455                           	line	38
  6456                           	
  6457  0B8C                     i1l1402:	
  6458  0B8C  0008               	return
  6459                           	opt stack 0
  6460                           GLOBAL	__end_of_lcd_write_data
  6461  0B8D                     	__end_of_lcd_write_data:
  6462 ;; =============== function _lcd_write_data ends ============
  6463                           
  6464                           	signat	_lcd_write_data,4216
  6465                           	global	_adc_read_channel
  6466                           psect	text779,local,class=CODE,delta=2
  6467                           global __ptext779
  6468  0D92                     __ptext779:
  6469                           
  6470 ;; *************** function _adc_read_channel *****************
  6471 ;; Defined at:
  6472 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  channel         1    wreg     unsigned char 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  channel         1    7[COMMON] unsigned char 
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  1    wreg      unsigned char 
  6479 ;; Registers used:
  6480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6486 ;;      Params:         0       0       0       0       0
  6487 ;;      Locals:         1       0       0       0       0
  6488 ;;      Temps:          1       0       0       0       0
  6489 ;;      Totals:         2       0       0       0       0
  6490 ;;Total ram usage:        2 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:    1
  6493 ;; This function calls:
  6494 ;;		_adc_read
  6495 ;; This function is called by:
  6496 ;;		_readDistance
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           psect	text779
  6500                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6501                           	line	5
  6502                           	global	__size_of_adc_read_channel
  6503  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  6504                           	
  6505  0D92                     _adc_read_channel:	
  6506                           	opt	stack 0
  6507                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6508                           ;adc_read_channel@channel stored from wreg
  6509  0D92  00F7               	movwf	(adc_read_channel@channel)
  6510                           	line	6
  6511                           	
  6512  0D93                     i1l9985:	
  6513                           ;adc.c: 6: switch(channel)
  6514  0D93  2DB6               	goto	i1l9993
  6515                           	line	8
  6516                           ;adc.c: 7: {
  6517                           ;adc.c: 8: case 0:
  6518                           	
  6519  0D94                     i1l690:	
  6520                           	line	9
  6521                           ;adc.c: 9: CHS0 = 0;
  6522  0D94  1283               	bcf	status, 5	;RP0=0, select bank0
  6523  0D95  1303               	bcf	status, 6	;RP1=0, select bank0
  6524  0D96  119F               	bcf	(251/8),(251)&7
  6525                           	line	10
  6526                           ;adc.c: 10: CHS1 = 0;
  6527  0D97  121F               	bcf	(252/8),(252)&7
  6528                           	line	11
  6529                           ;adc.c: 11: CHS2 = 0;
  6530  0D98  129F               	bcf	(253/8),(253)&7
  6531                           	line	12
  6532                           ;adc.c: 12: break;
  6533  0D99  2DC7               	goto	i1l9995
  6534                           	line	13
  6535                           ;adc.c: 13: case 1:
  6536                           	
  6537  0D9A                     i1l692:	
  6538                           	line	14
  6539                           ;adc.c: 14: CHS0 = 1;
  6540  0D9A  1283               	bcf	status, 5	;RP0=0, select bank0
  6541  0D9B  1303               	bcf	status, 6	;RP1=0, select bank0
  6542  0D9C  159F               	bsf	(251/8),(251)&7
  6543                           	line	15
  6544                           ;adc.c: 15: CHS1 = 0;
  6545  0D9D  121F               	bcf	(252/8),(252)&7
  6546                           	line	16
  6547                           ;adc.c: 16: CHS2 = 0;
  6548  0D9E  129F               	bcf	(253/8),(253)&7
  6549                           	line	17
  6550                           ;adc.c: 17: break;
  6551  0D9F  2DC7               	goto	i1l9995
  6552                           	line	18
  6553                           ;adc.c: 18: case 2:
  6554                           	
  6555  0DA0                     i1l693:	
  6556                           	line	19
  6557                           ;adc.c: 19: CHS0 = 0;
  6558  0DA0  1283               	bcf	status, 5	;RP0=0, select bank0
  6559  0DA1  1303               	bcf	status, 6	;RP1=0, select bank0
  6560  0DA2  119F               	bcf	(251/8),(251)&7
  6561                           	line	20
  6562                           ;adc.c: 20: CHS1 = 1;
  6563  0DA3  161F               	bsf	(252/8),(252)&7
  6564                           	line	21
  6565                           ;adc.c: 21: CHS2 = 0;
  6566  0DA4  129F               	bcf	(253/8),(253)&7
  6567                           	line	22
  6568                           ;adc.c: 22: break;
  6569  0DA5  2DC7               	goto	i1l9995
  6570                           	line	23
  6571                           ;adc.c: 23: case 3:
  6572                           	
  6573  0DA6                     i1l694:	
  6574                           	line	24
  6575                           ;adc.c: 24: CHS0 = 1;
  6576  0DA6  1283               	bcf	status, 5	;RP0=0, select bank0
  6577  0DA7  1303               	bcf	status, 6	;RP1=0, select bank0
  6578  0DA8  159F               	bsf	(251/8),(251)&7
  6579                           	line	25
  6580                           ;adc.c: 25: CHS1 = 1;
  6581  0DA9  161F               	bsf	(252/8),(252)&7
  6582                           	line	26
  6583                           ;adc.c: 26: CHS2 = 0;
  6584  0DAA  129F               	bcf	(253/8),(253)&7
  6585                           	line	27
  6586                           ;adc.c: 27: break;
  6587  0DAB  2DC7               	goto	i1l9995
  6588                           	line	28
  6589                           ;adc.c: 28: case 4:
  6590                           	
  6591  0DAC                     i1l695:	
  6592                           	line	29
  6593                           ;adc.c: 29: CHS0 = 0;
  6594  0DAC  1283               	bcf	status, 5	;RP0=0, select bank0
  6595  0DAD  1303               	bcf	status, 6	;RP1=0, select bank0
  6596  0DAE  119F               	bcf	(251/8),(251)&7
  6597                           	line	30
  6598                           ;adc.c: 30: CHS1 = 0;
  6599  0DAF  121F               	bcf	(252/8),(252)&7
  6600                           	line	31
  6601                           ;adc.c: 31: CHS2 = 1;
  6602  0DB0  169F               	bsf	(253/8),(253)&7
  6603                           	line	32
  6604                           ;adc.c: 32: break;
  6605  0DB1  2DC7               	goto	i1l9995
  6606                           	line	35
  6607                           ;adc.c: 35: default:
  6608                           	
  6609  0DB2                     i1l696:	
  6610                           	line	36
  6611                           	
  6612  0DB2                     i1l9987:	
  6613                           ;adc.c: 36: return 0;
  6614  0DB2  3000               	movlw	(0)
  6615  0DB3  2DD2               	goto	i1l697
  6616                           	
  6617  0DB4                     i1l9989:	
  6618  0DB4  2DD2               	goto	i1l697
  6619                           	line	37
  6620                           	
  6621  0DB5                     i1l9991:	
  6622                           ;adc.c: 37: }
  6623  0DB5  2DC7               	goto	i1l9995
  6624                           	line	6
  6625                           	
  6626  0DB6                     i1l689:	
  6627                           	
  6628  0DB6                     i1l9993:	
  6629  0DB6  0877               	movf	(adc_read_channel@channel),w
  6630                           	; Switch size 1, requested type "space"
  6631                           ; Number of cases is 5, Range of values is 0 to 4
  6632                           ; switch strategies available:
  6633                           ; Name         Instructions Cycles
  6634                           ; simple_byte           16     9 (average)
  6635                           ; direct_byte           23     8 (fixed)
  6636                           ; jumptable            260     6 (fixed)
  6637                           ; rangetable             9     6 (fixed)
  6638                           ; spacedrange           16     9 (fixed)
  6639                           ; locatedrange           5     3 (fixed)
  6640                           ;	Chosen strategy is simple_byte
  6641                           
  6642                           	opt asmopt_off
  6643  0DB7  3A00               	xorlw	0^0	; case 0
  6644  0DB8  1903               	skipnz
  6645  0DB9  2D94               	goto	i1l690
  6646  0DBA  3A01               	xorlw	1^0	; case 1
  6647  0DBB  1903               	skipnz
  6648  0DBC  2D9A               	goto	i1l692
  6649  0DBD  3A03               	xorlw	2^1	; case 2
  6650  0DBE  1903               	skipnz
  6651  0DBF  2DA0               	goto	i1l693
  6652  0DC0  3A01               	xorlw	3^2	; case 3
  6653  0DC1  1903               	skipnz
  6654  0DC2  2DA6               	goto	i1l694
  6655  0DC3  3A07               	xorlw	4^3	; case 4
  6656  0DC4  1903               	skipnz
  6657  0DC5  2DAC               	goto	i1l695
  6658  0DC6  2DB2               	goto	i1l9987
  6659                           	opt asmopt_on
  6660                           
  6661                           	line	37
  6662                           	
  6663  0DC7                     i1l691:	
  6664                           	line	39
  6665                           	
  6666  0DC7                     i1l9995:	
  6667                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6668                           	opt asmopt_off
  6669  0DC7  3053               movlw	83
  6670  0DC8  00F6               movwf	(??_adc_read_channel+0)+0,f
  6671  0DC9                     u437_27:
  6672  0DC9  0BF6               decfsz	(??_adc_read_channel+0)+0,f
  6673  0DCA  2DC9               	goto	u437_27
  6674                           opt asmopt_on
  6675                           
  6676                           	line	41
  6677                           	
  6678  0DCB                     i1l9997:	
  6679                           ;adc.c: 41: return adc_read();
  6680  0DCB  120A  158A  2411   	fcall	_adc_read
              120A  158A         
  6681  0DD0  0870               	movf	(0+(?_adc_read)),w
  6682  0DD1  2DD2               	goto	i1l697
  6683                           	
  6684  0DD2                     i1l9999:	
  6685                           	line	43
  6686                           	
  6687  0DD2                     i1l697:	
  6688  0DD2  0008               	return
  6689                           	opt stack 0
  6690                           GLOBAL	__end_of_adc_read_channel
  6691  0DD3                     	__end_of_adc_read_channel:
  6692 ;; =============== function _adc_read_channel ends ============
  6693                           
  6694                           	signat	_adc_read_channel,4217
  6695                           	global	___awmod
  6696                           psect	text780,local,class=CODE,delta=2
  6697                           global __ptext780
  6698  0F9A                     __ptext780:
  6699                           
  6700 ;; *************** function ___awmod *****************
  6701 ;; Defined at:
  6702 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  divisor         2    0[COMMON] int 
  6705 ;;  dividend        2    2[COMMON] int 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  sign            1    6[COMMON] unsigned char 
  6708 ;;  counter         1    5[COMMON] unsigned char 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  2    0[COMMON] int 
  6711 ;; Registers used:
  6712 ;;		wreg, status,2, status,0
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6718 ;;      Params:         4       0       0       0       0
  6719 ;;      Locals:         2       0       0       0       0
  6720 ;;      Temps:          1       0       0       0       0
  6721 ;;      Totals:         7       0       0       0       0
  6722 ;;Total ram usage:        7 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_UpdateDisplay
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           psect	text780
  6731                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6732                           	line	5
  6733                           	global	__size_of___awmod
  6734  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6735                           	
  6736  0F9A                     ___awmod:	
  6737                           	opt	stack 2
  6738                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6739                           	line	8
  6740                           	
  6741  0F9A                     i1l10639:	
  6742  0F9A  01F6               	clrf	(___awmod@sign)
  6743                           	line	9
  6744  0F9B  1FF3               	btfss	(___awmod@dividend+1),7
  6745  0F9C  2F9E               	goto	u417_21
  6746  0F9D  2F9F               	goto	u417_20
  6747  0F9E                     u417_21:
  6748  0F9E  2FA8               	goto	i1l10643
  6749  0F9F                     u417_20:
  6750                           	line	10
  6751                           	
  6752  0F9F                     i1l10641:	
  6753  0F9F  09F2               	comf	(___awmod@dividend),f
  6754  0FA0  09F3               	comf	(___awmod@dividend+1),f
  6755  0FA1  0AF2               	incf	(___awmod@dividend),f
  6756  0FA2  1903               	skipnz
  6757  0FA3  0AF3               	incf	(___awmod@dividend+1),f
  6758                           	line	11
  6759  0FA4  01F6               	clrf	(___awmod@sign)
  6760  0FA5  1403               	bsf	status,0
  6761  0FA6  0DF6               	rlf	(___awmod@sign),f
  6762  0FA7  2FA8               	goto	i1l10643
  6763                           	line	12
  6764                           	
  6765  0FA8                     i1l7607:	
  6766                           	line	13
  6767                           	
  6768  0FA8                     i1l10643:	
  6769  0FA8  1FF1               	btfss	(___awmod@divisor+1),7
  6770  0FA9  2FAB               	goto	u418_21
  6771  0FAA  2FAC               	goto	u418_20
  6772  0FAB                     u418_21:
  6773  0FAB  2FB2               	goto	i1l10647
  6774  0FAC                     u418_20:
  6775                           	line	14
  6776                           	
  6777  0FAC                     i1l10645:	
  6778  0FAC  09F0               	comf	(___awmod@divisor),f
  6779  0FAD  09F1               	comf	(___awmod@divisor+1),f
  6780  0FAE  0AF0               	incf	(___awmod@divisor),f
  6781  0FAF  1903               	skipnz
  6782  0FB0  0AF1               	incf	(___awmod@divisor+1),f
  6783  0FB1  2FB2               	goto	i1l10647
  6784                           	
  6785  0FB2                     i1l7608:	
  6786                           	line	15
  6787                           	
  6788  0FB2                     i1l10647:	
  6789  0FB2  0871               	movf	(___awmod@divisor+1),w
  6790  0FB3  0470               	iorwf	(___awmod@divisor),w
  6791  0FB4  1903               	skipnz
  6792  0FB5  2FB7               	goto	u419_21
  6793  0FB6  2FB8               	goto	u419_20
  6794  0FB7                     u419_21:
  6795  0FB7  2FEE               	goto	i1l10665
  6796  0FB8                     u419_20:
  6797                           	line	16
  6798                           	
  6799  0FB8                     i1l10649:	
  6800  0FB8  01F5               	clrf	(___awmod@counter)
  6801  0FB9  1403               	bsf	status,0
  6802  0FBA  0DF5               	rlf	(___awmod@counter),f
  6803                           	line	17
  6804  0FBB  2FC8               	goto	i1l10655
  6805                           	
  6806  0FBC                     i1l7611:	
  6807                           	line	18
  6808                           	
  6809  0FBC                     i1l10651:	
  6810  0FBC  3001               	movlw	01h
  6811                           	
  6812  0FBD                     u420_25:
  6813  0FBD  1003               	clrc
  6814  0FBE  0DF0               	rlf	(___awmod@divisor),f
  6815  0FBF  0DF1               	rlf	(___awmod@divisor+1),f
  6816  0FC0  3EFF               	addlw	-1
  6817  0FC1  1D03               	skipz
  6818  0FC2  2FBD               	goto	u420_25
  6819                           	line	19
  6820                           	
  6821  0FC3                     i1l10653:	
  6822  0FC3  3001               	movlw	(01h)
  6823  0FC4  00F4               	movwf	(??___awmod+0)+0
  6824  0FC5  0874               	movf	(??___awmod+0)+0,w
  6825  0FC6  07F5               	addwf	(___awmod@counter),f
  6826  0FC7  2FC8               	goto	i1l10655
  6827                           	line	20
  6828                           	
  6829  0FC8                     i1l7610:	
  6830                           	line	17
  6831                           	
  6832  0FC8                     i1l10655:	
  6833  0FC8  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  6834  0FC9  2FCB               	goto	u421_21
  6835  0FCA  2FCC               	goto	u421_20
  6836  0FCB                     u421_21:
  6837  0FCB  2FBC               	goto	i1l10651
  6838  0FCC                     u421_20:
  6839  0FCC  2FCE               	goto	i1l10657
  6840                           	
  6841  0FCD                     i1l7612:	
  6842  0FCD  2FCE               	goto	i1l10657
  6843                           	line	21
  6844                           	
  6845  0FCE                     i1l7613:	
  6846                           	line	22
  6847                           	
  6848  0FCE                     i1l10657:	
  6849  0FCE  0871               	movf	(___awmod@divisor+1),w
  6850  0FCF  0273               	subwf	(___awmod@dividend+1),w
  6851  0FD0  1D03               	skipz
  6852  0FD1  2FD4               	goto	u422_25
  6853  0FD2  0870               	movf	(___awmod@divisor),w
  6854  0FD3  0272               	subwf	(___awmod@dividend),w
  6855  0FD4                     u422_25:
  6856  0FD4  1C03               	skipc
  6857  0FD5  2FD7               	goto	u422_21
  6858  0FD6  2FD8               	goto	u422_20
  6859  0FD7                     u422_21:
  6860  0FD7  2FDF               	goto	i1l10661
  6861  0FD8                     u422_20:
  6862                           	line	23
  6863                           	
  6864  0FD8                     i1l10659:	
  6865  0FD8  0870               	movf	(___awmod@divisor),w
  6866  0FD9  02F2               	subwf	(___awmod@dividend),f
  6867  0FDA  0871               	movf	(___awmod@divisor+1),w
  6868  0FDB  1C03               	skipc
  6869  0FDC  03F3               	decf	(___awmod@dividend+1),f
  6870  0FDD  02F3               	subwf	(___awmod@dividend+1),f
  6871  0FDE  2FDF               	goto	i1l10661
  6872                           	
  6873  0FDF                     i1l7614:	
  6874                           	line	24
  6875                           	
  6876  0FDF                     i1l10661:	
  6877  0FDF  3001               	movlw	01h
  6878                           	
  6879  0FE0                     u423_25:
  6880  0FE0  1003               	clrc
  6881  0FE1  0CF1               	rrf	(___awmod@divisor+1),f
  6882  0FE2  0CF0               	rrf	(___awmod@divisor),f
  6883  0FE3  3EFF               	addlw	-1
  6884  0FE4  1D03               	skipz
  6885  0FE5  2FE0               	goto	u423_25
  6886                           	line	25
  6887                           	
  6888  0FE6                     i1l10663:	
  6889  0FE6  3001               	movlw	low(01h)
  6890  0FE7  02F5               	subwf	(___awmod@counter),f
  6891  0FE8  1D03               	btfss	status,2
  6892  0FE9  2FEB               	goto	u424_21
  6893  0FEA  2FEC               	goto	u424_20
  6894  0FEB                     u424_21:
  6895  0FEB  2FCE               	goto	i1l10657
  6896  0FEC                     u424_20:
  6897  0FEC  2FEE               	goto	i1l10665
  6898                           	
  6899  0FED                     i1l7615:	
  6900  0FED  2FEE               	goto	i1l10665
  6901                           	line	26
  6902                           	
  6903  0FEE                     i1l7609:	
  6904                           	line	27
  6905                           	
  6906  0FEE                     i1l10665:	
  6907  0FEE  0876               	movf	(___awmod@sign),w
  6908  0FEF  1D03               	skipz
  6909  0FF0  2FF2               	goto	u425_20
  6910  0FF1  2FF8               	goto	i1l10669
  6911  0FF2                     u425_20:
  6912                           	line	28
  6913                           	
  6914  0FF2                     i1l10667:	
  6915  0FF2  09F2               	comf	(___awmod@dividend),f
  6916  0FF3  09F3               	comf	(___awmod@dividend+1),f
  6917  0FF4  0AF2               	incf	(___awmod@dividend),f
  6918  0FF5  1903               	skipnz
  6919  0FF6  0AF3               	incf	(___awmod@dividend+1),f
  6920  0FF7  2FF8               	goto	i1l10669
  6921                           	
  6922  0FF8                     i1l7616:	
  6923                           	line	29
  6924                           	
  6925  0FF8                     i1l10669:	
  6926  0FF8  0873               	movf	(___awmod@dividend+1),w
  6927  0FF9  01F1               	clrf	(?___awmod+1)
  6928  0FFA  07F1               	addwf	(?___awmod+1)
  6929  0FFB  0872               	movf	(___awmod@dividend),w
  6930  0FFC  01F0               	clrf	(?___awmod)
  6931  0FFD  07F0               	addwf	(?___awmod)
  6932                           
  6933  0FFE  2FFF               	goto	i1l7617
  6934                           	
  6935  0FFF                     i1l10671:	
  6936                           	line	30
  6937                           	
  6938  0FFF                     i1l7617:	
  6939  0FFF  0008               	return
  6940                           	opt stack 0
  6941                           GLOBAL	__end_of___awmod
  6942  1000                     	__end_of___awmod:
  6943 ;; =============== function ___awmod ends ============
  6944                           
  6945                           	signat	___awmod,8314
  6946                           	global	___lwmod
  6947                           psect	text781,local,class=CODE,delta=2
  6948                           global __ptext781
  6949  0E18                     __ptext781:
  6950                           
  6951 ;; *************** function ___lwmod *****************
  6952 ;; Defined at:
  6953 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  divisor         2    0[BANK0 ] unsigned int 
  6956 ;;  dividend        2    2[BANK0 ] unsigned int 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  counter         1    5[BANK0 ] unsigned char 
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  2    0[BANK0 ] unsigned int 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2, status,0
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6968 ;;      Params:         0       4       0       0       0
  6969 ;;      Locals:         0       1       0       0       0
  6970 ;;      Temps:          0       1       0       0       0
  6971 ;;      Totals:         0       6       0       0       0
  6972 ;;Total ram usage:        6 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; This function calls:
  6975 ;;		Nothing
  6976 ;; This function is called by:
  6977 ;;		_isr1
  6978 ;;		_sprintf
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           psect	text781
  6982                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6983                           	line	5
  6984                           	global	__size_of___lwmod
  6985  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6986                           	
  6987  0E18                     ___lwmod:	
  6988                           	opt	stack 1
  6989                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6990                           	line	8
  6991                           	
  6992  0E18                     i1l10617:	
  6993  0E18  1283               	bcf	status, 5	;RP0=0, select bank0
  6994  0E19  1303               	bcf	status, 6	;RP1=0, select bank0
  6995  0E1A  0821               	movf	(___lwmod@divisor+1),w
  6996  0E1B  0420               	iorwf	(___lwmod@divisor),w
  6997  0E1C  1903               	skipnz
  6998  0E1D  2E1F               	goto	u411_21
  6999  0E1E  2E20               	goto	u411_20
  7000  0E1F                     u411_21:
  7001  0E1F  2E56               	goto	i1l10635
  7002  0E20                     u411_20:
  7003                           	line	9
  7004                           	
  7005  0E20                     i1l10619:	
  7006  0E20  01A5               	clrf	(___lwmod@counter)
  7007  0E21  1403               	bsf	status,0
  7008  0E22  0DA5               	rlf	(___lwmod@counter),f
  7009                           	line	10
  7010  0E23  2E30               	goto	i1l10625
  7011                           	
  7012  0E24                     i1l7417:	
  7013                           	line	11
  7014                           	
  7015  0E24                     i1l10621:	
  7016  0E24  3001               	movlw	01h
  7017                           	
  7018  0E25                     u412_25:
  7019  0E25  1003               	clrc
  7020  0E26  0DA0               	rlf	(___lwmod@divisor),f
  7021  0E27  0DA1               	rlf	(___lwmod@divisor+1),f
  7022  0E28  3EFF               	addlw	-1
  7023  0E29  1D03               	skipz
  7024  0E2A  2E25               	goto	u412_25
  7025                           	line	12
  7026                           	
  7027  0E2B                     i1l10623:	
  7028  0E2B  3001               	movlw	(01h)
  7029  0E2C  00A4               	movwf	(??___lwmod+0)+0
  7030  0E2D  0824               	movf	(??___lwmod+0)+0,w
  7031  0E2E  07A5               	addwf	(___lwmod@counter),f
  7032  0E2F  2E30               	goto	i1l10625
  7033                           	line	13
  7034                           	
  7035  0E30                     i1l7416:	
  7036                           	line	10
  7037                           	
  7038  0E30                     i1l10625:	
  7039  0E30  1FA1               	btfss	(___lwmod@divisor+1),(15)&7
  7040  0E31  2E33               	goto	u413_21
  7041  0E32  2E34               	goto	u413_20
  7042  0E33                     u413_21:
  7043  0E33  2E24               	goto	i1l10621
  7044  0E34                     u413_20:
  7045  0E34  2E36               	goto	i1l10627
  7046                           	
  7047  0E35                     i1l7418:	
  7048  0E35  2E36               	goto	i1l10627
  7049                           	line	14
  7050                           	
  7051  0E36                     i1l7419:	
  7052                           	line	15
  7053                           	
  7054  0E36                     i1l10627:	
  7055  0E36  0821               	movf	(___lwmod@divisor+1),w
  7056  0E37  0223               	subwf	(___lwmod@dividend+1),w
  7057  0E38  1D03               	skipz
  7058  0E39  2E3C               	goto	u414_25
  7059  0E3A  0820               	movf	(___lwmod@divisor),w
  7060  0E3B  0222               	subwf	(___lwmod@dividend),w
  7061  0E3C                     u414_25:
  7062  0E3C  1C03               	skipc
  7063  0E3D  2E3F               	goto	u414_21
  7064  0E3E  2E40               	goto	u414_20
  7065  0E3F                     u414_21:
  7066  0E3F  2E47               	goto	i1l10631
  7067  0E40                     u414_20:
  7068                           	line	16
  7069                           	
  7070  0E40                     i1l10629:	
  7071  0E40  0820               	movf	(___lwmod@divisor),w
  7072  0E41  02A2               	subwf	(___lwmod@dividend),f
  7073  0E42  0821               	movf	(___lwmod@divisor+1),w
  7074  0E43  1C03               	skipc
  7075  0E44  03A3               	decf	(___lwmod@dividend+1),f
  7076  0E45  02A3               	subwf	(___lwmod@dividend+1),f
  7077  0E46  2E47               	goto	i1l10631
  7078                           	
  7079  0E47                     i1l7420:	
  7080                           	line	17
  7081                           	
  7082  0E47                     i1l10631:	
  7083  0E47  3001               	movlw	01h
  7084                           	
  7085  0E48                     u415_25:
  7086  0E48  1003               	clrc
  7087  0E49  0CA1               	rrf	(___lwmod@divisor+1),f
  7088  0E4A  0CA0               	rrf	(___lwmod@divisor),f
  7089  0E4B  3EFF               	addlw	-1
  7090  0E4C  1D03               	skipz
  7091  0E4D  2E48               	goto	u415_25
  7092                           	line	18
  7093                           	
  7094  0E4E                     i1l10633:	
  7095  0E4E  3001               	movlw	low(01h)
  7096  0E4F  02A5               	subwf	(___lwmod@counter),f
  7097  0E50  1D03               	btfss	status,2
  7098  0E51  2E53               	goto	u416_21
  7099  0E52  2E54               	goto	u416_20
  7100  0E53                     u416_21:
  7101  0E53  2E36               	goto	i1l10627
  7102  0E54                     u416_20:
  7103  0E54  2E56               	goto	i1l10635
  7104                           	
  7105  0E55                     i1l7421:	
  7106  0E55  2E56               	goto	i1l10635
  7107                           	line	19
  7108                           	
  7109  0E56                     i1l7415:	
  7110                           	line	20
  7111                           	
  7112  0E56                     i1l10635:	
  7113  0E56  0823               	movf	(___lwmod@dividend+1),w
  7114  0E57  01A1               	clrf	(?___lwmod+1)
  7115  0E58  07A1               	addwf	(?___lwmod+1)
  7116  0E59  0822               	movf	(___lwmod@dividend),w
  7117  0E5A  01A0               	clrf	(?___lwmod)
  7118  0E5B  07A0               	addwf	(?___lwmod)
  7119                           
  7120  0E5C  2E5D               	goto	i1l7422
  7121                           	
  7122  0E5D                     i1l10637:	
  7123                           	line	21
  7124                           	
  7125  0E5D                     i1l7422:	
  7126  0E5D  0008               	return
  7127                           	opt stack 0
  7128                           GLOBAL	__end_of___lwmod
  7129  0E5E                     	__end_of___lwmod:
  7130 ;; =============== function ___lwmod ends ============
  7131                           
  7132                           	signat	___lwmod,8314
  7133                           	global	___lwdiv
  7134                           psect	text782,local,class=CODE,delta=2
  7135                           global __ptext782
  7136  0EA5                     __ptext782:
  7137                           
  7138 ;; *************** function ___lwdiv *****************
  7139 ;; Defined at:
  7140 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;  divisor         2    6[COMMON] unsigned int 
  7143 ;;  dividend        2    8[COMMON] unsigned int 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;  quotient        2   11[COMMON] unsigned int 
  7146 ;;  counter         1   13[COMMON] unsigned char 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  2    6[COMMON] unsigned int 
  7149 ;; Registers used:
  7150 ;;		wreg, status,2, status,0
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7156 ;;      Params:         4       0       0       0       0
  7157 ;;      Locals:         3       0       0       0       0
  7158 ;;      Temps:          1       0       0       0       0
  7159 ;;      Totals:         8       0       0       0       0
  7160 ;;Total ram usage:        8 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_readAvgDistance
  7166 ;;		_ADCconvert
  7167 ;;		_sprintf
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           psect	text782
  7171                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  7172                           	line	5
  7173                           	global	__size_of___lwdiv
  7174  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7175                           	
  7176  0EA5                     ___lwdiv:	
  7177                           	opt	stack 1
  7178                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7179                           	line	9
  7180                           	
  7181  0EA5                     i1l10591:	
  7182  0EA5  01FB               	clrf	(___lwdiv@quotient)
  7183  0EA6  01FC               	clrf	(___lwdiv@quotient+1)
  7184                           	line	10
  7185                           	
  7186  0EA7                     i1l10593:	
  7187  0EA7  0877               	movf	(___lwdiv@divisor+1),w
  7188  0EA8  0476               	iorwf	(___lwdiv@divisor),w
  7189  0EA9  1903               	skipnz
  7190  0EAA  2EAC               	goto	u404_21
  7191  0EAB  2EAD               	goto	u404_20
  7192  0EAC                     u404_21:
  7193  0EAC  2EEB               	goto	i1l10613
  7194  0EAD                     u404_20:
  7195                           	line	11
  7196                           	
  7197  0EAD                     i1l10595:	
  7198  0EAD  01FD               	clrf	(___lwdiv@counter)
  7199  0EAE  1403               	bsf	status,0
  7200  0EAF  0DFD               	rlf	(___lwdiv@counter),f
  7201                           	line	12
  7202  0EB0  2EBD               	goto	i1l10601
  7203                           	
  7204  0EB1                     i1l7407:	
  7205                           	line	13
  7206                           	
  7207  0EB1                     i1l10597:	
  7208  0EB1  3001               	movlw	01h
  7209                           	
  7210  0EB2                     u405_25:
  7211  0EB2  1003               	clrc
  7212  0EB3  0DF6               	rlf	(___lwdiv@divisor),f
  7213  0EB4  0DF7               	rlf	(___lwdiv@divisor+1),f
  7214  0EB5  3EFF               	addlw	-1
  7215  0EB6  1D03               	skipz
  7216  0EB7  2EB2               	goto	u405_25
  7217                           	line	14
  7218                           	
  7219  0EB8                     i1l10599:	
  7220  0EB8  3001               	movlw	(01h)
  7221  0EB9  00FA               	movwf	(??___lwdiv+0)+0
  7222  0EBA  087A               	movf	(??___lwdiv+0)+0,w
  7223  0EBB  07FD               	addwf	(___lwdiv@counter),f
  7224  0EBC  2EBD               	goto	i1l10601
  7225                           	line	15
  7226                           	
  7227  0EBD                     i1l7406:	
  7228                           	line	12
  7229                           	
  7230  0EBD                     i1l10601:	
  7231  0EBD  1FF7               	btfss	(___lwdiv@divisor+1),(15)&7
  7232  0EBE  2EC0               	goto	u406_21
  7233  0EBF  2EC1               	goto	u406_20
  7234  0EC0                     u406_21:
  7235  0EC0  2EB1               	goto	i1l10597
  7236  0EC1                     u406_20:
  7237  0EC1  2EC3               	goto	i1l10603
  7238                           	
  7239  0EC2                     i1l7408:	
  7240  0EC2  2EC3               	goto	i1l10603
  7241                           	line	16
  7242                           	
  7243  0EC3                     i1l7409:	
  7244                           	line	17
  7245                           	
  7246  0EC3                     i1l10603:	
  7247  0EC3  3001               	movlw	01h
  7248                           	
  7249  0EC4                     u407_25:
  7250  0EC4  1003               	clrc
  7251  0EC5  0DFB               	rlf	(___lwdiv@quotient),f
  7252  0EC6  0DFC               	rlf	(___lwdiv@quotient+1),f
  7253  0EC7  3EFF               	addlw	-1
  7254  0EC8  1D03               	skipz
  7255  0EC9  2EC4               	goto	u407_25
  7256                           	line	18
  7257  0ECA  0877               	movf	(___lwdiv@divisor+1),w
  7258  0ECB  0279               	subwf	(___lwdiv@dividend+1),w
  7259  0ECC  1D03               	skipz
  7260  0ECD  2ED0               	goto	u408_25
  7261  0ECE  0876               	movf	(___lwdiv@divisor),w
  7262  0ECF  0278               	subwf	(___lwdiv@dividend),w
  7263  0ED0                     u408_25:
  7264  0ED0  1C03               	skipc
  7265  0ED1  2ED3               	goto	u408_21
  7266  0ED2  2ED4               	goto	u408_20
  7267  0ED3                     u408_21:
  7268  0ED3  2EDC               	goto	i1l10609
  7269  0ED4                     u408_20:
  7270                           	line	19
  7271                           	
  7272  0ED4                     i1l10605:	
  7273  0ED4  0876               	movf	(___lwdiv@divisor),w
  7274  0ED5  02F8               	subwf	(___lwdiv@dividend),f
  7275  0ED6  0877               	movf	(___lwdiv@divisor+1),w
  7276  0ED7  1C03               	skipc
  7277  0ED8  03F9               	decf	(___lwdiv@dividend+1),f
  7278  0ED9  02F9               	subwf	(___lwdiv@dividend+1),f
  7279                           	line	20
  7280                           	
  7281  0EDA                     i1l10607:	
  7282  0EDA  147B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  7283  0EDB  2EDC               	goto	i1l10609
  7284                           	line	21
  7285                           	
  7286  0EDC                     i1l7410:	
  7287                           	line	22
  7288                           	
  7289  0EDC                     i1l10609:	
  7290  0EDC  3001               	movlw	01h
  7291                           	
  7292  0EDD                     u409_25:
  7293  0EDD  1003               	clrc
  7294  0EDE  0CF7               	rrf	(___lwdiv@divisor+1),f
  7295  0EDF  0CF6               	rrf	(___lwdiv@divisor),f
  7296  0EE0  3EFF               	addlw	-1
  7297  0EE1  1D03               	skipz
  7298  0EE2  2EDD               	goto	u409_25
  7299                           	line	23
  7300                           	
  7301  0EE3                     i1l10611:	
  7302  0EE3  3001               	movlw	low(01h)
  7303  0EE4  02FD               	subwf	(___lwdiv@counter),f
  7304  0EE5  1D03               	btfss	status,2
  7305  0EE6  2EE8               	goto	u410_21
  7306  0EE7  2EE9               	goto	u410_20
  7307  0EE8                     u410_21:
  7308  0EE8  2EC3               	goto	i1l10603
  7309  0EE9                     u410_20:
  7310  0EE9  2EEB               	goto	i1l10613
  7311                           	
  7312  0EEA                     i1l7411:	
  7313  0EEA  2EEB               	goto	i1l10613
  7314                           	line	24
  7315                           	
  7316  0EEB                     i1l7405:	
  7317                           	line	25
  7318                           	
  7319  0EEB                     i1l10613:	
  7320  0EEB  087C               	movf	(___lwdiv@quotient+1),w
  7321  0EEC  01F7               	clrf	(?___lwdiv+1)
  7322  0EED  07F7               	addwf	(?___lwdiv+1)
  7323  0EEE  087B               	movf	(___lwdiv@quotient),w
  7324  0EEF  01F6               	clrf	(?___lwdiv)
  7325  0EF0  07F6               	addwf	(?___lwdiv)
  7326                           
  7327  0EF1  2EF2               	goto	i1l7412
  7328                           	
  7329  0EF2                     i1l10615:	
  7330                           	line	26
  7331                           	
  7332  0EF2                     i1l7412:	
  7333  0EF2  0008               	return
  7334                           	opt stack 0
  7335                           GLOBAL	__end_of___lwdiv
  7336  0EF3                     	__end_of___lwdiv:
  7337 ;; =============== function ___lwdiv ends ============
  7338                           
  7339                           	signat	___lwdiv,8314
  7340                           	global	___wmul
  7341                           psect	text783,local,class=CODE,delta=2
  7342                           global __ptext783
  7343  0C89                     __ptext783:
  7344                           
  7345 ;; *************** function ___wmul *****************
  7346 ;; Defined at:
  7347 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  multiplier      2    0[COMMON] unsigned int 
  7350 ;;  multiplicand    2    2[COMMON] unsigned int 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  product         2    4[COMMON] unsigned int 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  2    0[COMMON] unsigned int 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2, status,0
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7362 ;;      Params:         4       0       0       0       0
  7363 ;;      Locals:         2       0       0       0       0
  7364 ;;      Temps:          0       0       0       0       0
  7365 ;;      Totals:         6       0       0       0       0
  7366 ;;Total ram usage:        6 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_ADCconvert
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           psect	text783
  7375                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7376                           	line	3
  7377                           	global	__size_of___wmul
  7378  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7379                           	
  7380  0C89                     ___wmul:	
  7381                           	opt	stack 1
  7382                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7383                           	line	4
  7384                           	
  7385  0C89                     i1l10579:	
  7386  0C89  01F4               	clrf	(___wmul@product)
  7387  0C8A  01F5               	clrf	(___wmul@product+1)
  7388  0C8B  2C8C               	goto	i1l10581
  7389                           	line	6
  7390                           	
  7391  0C8C                     i1l7399:	
  7392                           	line	7
  7393                           	
  7394  0C8C                     i1l10581:	
  7395  0C8C  1C70               	btfss	(___wmul@multiplier),(0)&7
  7396  0C8D  2C8F               	goto	u400_21
  7397  0C8E  2C90               	goto	u400_20
  7398  0C8F                     u400_21:
  7399  0C8F  2C96               	goto	i1l7400
  7400  0C90                     u400_20:
  7401                           	line	8
  7402                           	
  7403  0C90                     i1l10583:	
  7404  0C90  0872               	movf	(___wmul@multiplicand),w
  7405  0C91  07F4               	addwf	(___wmul@product),f
  7406  0C92  1803               	skipnc
  7407  0C93  0AF5               	incf	(___wmul@product+1),f
  7408  0C94  0873               	movf	(___wmul@multiplicand+1),w
  7409  0C95  07F5               	addwf	(___wmul@product+1),f
  7410                           	
  7411  0C96                     i1l7400:	
  7412                           	line	9
  7413  0C96  3001               	movlw	01h
  7414                           	
  7415  0C97                     u401_25:
  7416  0C97  1003               	clrc
  7417  0C98  0DF2               	rlf	(___wmul@multiplicand),f
  7418  0C99  0DF3               	rlf	(___wmul@multiplicand+1),f
  7419  0C9A  3EFF               	addlw	-1
  7420  0C9B  1D03               	skipz
  7421  0C9C  2C97               	goto	u401_25
  7422                           	line	10
  7423                           	
  7424  0C9D                     i1l10585:	
  7425  0C9D  3001               	movlw	01h
  7426                           	
  7427  0C9E                     u402_25:
  7428  0C9E  1003               	clrc
  7429  0C9F  0CF1               	rrf	(___wmul@multiplier+1),f
  7430  0CA0  0CF0               	rrf	(___wmul@multiplier),f
  7431  0CA1  3EFF               	addlw	-1
  7432  0CA2  1D03               	skipz
  7433  0CA3  2C9E               	goto	u402_25
  7434                           	line	11
  7435  0CA4  0871               	movf	((___wmul@multiplier+1)),w
  7436  0CA5  0470               	iorwf	((___wmul@multiplier)),w
  7437  0CA6  1D03               	skipz
  7438  0CA7  2CA9               	goto	u403_21
  7439  0CA8  2CAA               	goto	u403_20
  7440  0CA9                     u403_21:
  7441  0CA9  2C8C               	goto	i1l10581
  7442  0CAA                     u403_20:
  7443  0CAA  2CAB               	goto	i1l10587
  7444                           	
  7445  0CAB                     i1l7401:	
  7446                           	line	12
  7447                           	
  7448  0CAB                     i1l10587:	
  7449  0CAB  0875               	movf	(___wmul@product+1),w
  7450  0CAC  01F1               	clrf	(?___wmul+1)
  7451  0CAD  07F1               	addwf	(?___wmul+1)
  7452  0CAE  0874               	movf	(___wmul@product),w
  7453  0CAF  01F0               	clrf	(?___wmul)
  7454  0CB0  07F0               	addwf	(?___wmul)
  7455                           
  7456  0CB1  2CB2               	goto	i1l7402
  7457                           	
  7458  0CB2                     i1l10589:	
  7459                           	line	13
  7460                           	
  7461  0CB2                     i1l7402:	
  7462  0CB2  0008               	return
  7463                           	opt stack 0
  7464                           GLOBAL	__end_of___wmul
  7465  0CB3                     	__end_of___wmul:
  7466 ;; =============== function ___wmul ends ============
  7467                           
  7468                           	signat	___wmul,8314
  7469                           	global	_Debounce
  7470                           psect	text784,local,class=CODE,delta=2
  7471                           global __ptext784
  7472  06EB                     __ptext784:
  7473                           
  7474 ;; *************** function _Debounce *****************
  7475 ;; Defined at:
  7476 ;;		line 61 in file "H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;		None
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;		None               void
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7490 ;;      Params:         0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0
  7492 ;;      Temps:          1       0       0       0       0
  7493 ;;      Totals:         1       0       0       0       0
  7494 ;;Total ram usage:        1 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; This function calls:
  7497 ;;		Nothing
  7498 ;; This function is called by:
  7499 ;;		_ReadButtons
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           psect	text784
  7503                           	file	"H:\Aldnoah.Zero\trunk\Assignment3\HMI.c"
  7504                           	line	61
  7505                           	global	__size_of_Debounce
  7506  007C                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  7507                           	
  7508  06EB                     _Debounce:	
  7509                           	opt	stack 2
  7510                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  7511                           	line	63
  7512                           	
  7513  06EB                     i1l10463:	
  7514                           ;HMI.c: 63: if(!RB2)
  7515  06EB  1283               	bcf	status, 5	;RP0=0, select bank0
  7516  06EC  1303               	bcf	status, 6	;RP1=0, select bank0
  7517  06ED  1906               	btfsc	(50/8),(50)&7
  7518  06EE  2EF0               	goto	u375_21
  7519  06EF  2EF1               	goto	u375_20
  7520  06F0                     u375_21:
  7521  06F0  2F03               	goto	i1l5183
  7522  06F1                     u375_20:
  7523                           	line	65
  7524                           	
  7525  06F1                     i1l10465:	
  7526                           ;HMI.c: 64: {
  7527                           ;HMI.c: 65: UpDebounceCount++;
  7528  06F1  3001               	movlw	(01h)
  7529  06F2  00F0               	movwf	(??_Debounce+0)+0
  7530  06F3  0870               	movf	(??_Debounce+0)+0,w
  7531  06F4  07E1               	addwf	(_UpDebounceCount),f	;volatile
  7532                           	line	66
  7533                           	
  7534  06F5                     i1l10467:	
  7535                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  7536  06F5  300A               	movlw	(0Ah)
  7537  06F6  0261               	subwf	(_UpDebounceCount),w	;volatile
  7538  06F7  1C03               	skipc
  7539  06F8  2EFA               	goto	u376_21
  7540  06F9  2EFB               	goto	u376_20
  7541  06FA                     u376_21:
  7542  06FA  2F05               	goto	i1l5185
  7543  06FB                     u376_20:
  7544                           	
  7545  06FB                     i1l10469:	
  7546  06FB  1F6E               	btfss	(_UpReleased/8),(_UpReleased)&7
  7547  06FC  2EFE               	goto	u377_21
  7548  06FD  2EFF               	goto	u377_20
  7549  06FE                     u377_21:
  7550  06FE  2F05               	goto	i1l5185
  7551  06FF                     u377_20:
  7552                           	line	68
  7553                           	
  7554  06FF                     i1l10471:	
  7555                           ;HMI.c: 67: {
  7556                           ;HMI.c: 68: UpPressed = 1;
  7557  06FF  16EE               	bsf	(_UpPressed/8),(_UpPressed)&7
  7558                           	line	69
  7559                           ;HMI.c: 69: UpReleased = 0;
  7560  0700  136E               	bcf	(_UpReleased/8),(_UpReleased)&7
  7561  0701  2F05               	goto	i1l5185
  7562                           	line	70
  7563                           	
  7564  0702                     i1l5184:	
  7565                           	line	71
  7566                           ;HMI.c: 70: }
  7567                           ;HMI.c: 71: }
  7568  0702  2F05               	goto	i1l5185
  7569                           	line	72
  7570                           	
  7571  0703                     i1l5183:	
  7572                           	line	74
  7573                           ;HMI.c: 72: else
  7574                           ;HMI.c: 73: {
  7575                           ;HMI.c: 74: UpDebounceCount = 0;
  7576  0703  01E1               	clrf	(_UpDebounceCount)	;volatile
  7577                           	line	75
  7578                           ;HMI.c: 75: UpReleased = 1;
  7579  0704  176E               	bsf	(_UpReleased/8),(_UpReleased)&7
  7580                           	line	76
  7581                           	
  7582  0705                     i1l5185:	
  7583                           	line	79
  7584                           ;HMI.c: 76: }
  7585                           ;HMI.c: 79: if(!RB3)
  7586  0705  1986               	btfsc	(51/8),(51)&7
  7587  0706  2F08               	goto	u378_21
  7588  0707  2F09               	goto	u378_20
  7589  0708                     u378_21:
  7590  0708  2F1B               	goto	i1l5186
  7591  0709                     u378_20:
  7592                           	line	81
  7593                           	
  7594  0709                     i1l10473:	
  7595                           ;HMI.c: 80: {
  7596                           ;HMI.c: 81: DownDebounceCount++;
  7597  0709  3001               	movlw	(01h)
  7598  070A  00F0               	movwf	(??_Debounce+0)+0
  7599  070B  0870               	movf	(??_Debounce+0)+0,w
  7600  070C  07DE               	addwf	(_DownDebounceCount),f	;volatile
  7601                           	line	82
  7602                           	
  7603  070D                     i1l10475:	
  7604                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  7605  070D  300A               	movlw	(0Ah)
  7606  070E  025E               	subwf	(_DownDebounceCount),w	;volatile
  7607  070F  1C03               	skipc
  7608  0710  2F12               	goto	u379_21
  7609  0711  2F13               	goto	u379_20
  7610  0712                     u379_21:
  7611  0712  2F1D               	goto	i1l5188
  7612  0713                     u379_20:
  7613                           	
  7614  0713                     i1l10477:	
  7615  0713  1DED               	btfss	(_DownReleased/8),(_DownReleased)&7
  7616  0714  2F16               	goto	u380_21
  7617  0715  2F17               	goto	u380_20
  7618  0716                     u380_21:
  7619  0716  2F1D               	goto	i1l5188
  7620  0717                     u380_20:
  7621                           	line	84
  7622                           	
  7623  0717                     i1l10479:	
  7624                           ;HMI.c: 83: {
  7625                           ;HMI.c: 84: DownPressed = 1;
  7626  0717  156D               	bsf	(_DownPressed/8),(_DownPressed)&7
  7627                           	line	85
  7628                           ;HMI.c: 85: DownReleased = 0;
  7629  0718  11ED               	bcf	(_DownReleased/8),(_DownReleased)&7
  7630  0719  2F1D               	goto	i1l5188
  7631                           	line	86
  7632                           	
  7633  071A                     i1l5187:	
  7634                           	line	87
  7635                           ;HMI.c: 86: }
  7636                           ;HMI.c: 87: }
  7637  071A  2F1D               	goto	i1l5188
  7638                           	line	88
  7639                           	
  7640  071B                     i1l5186:	
  7641                           	line	90
  7642                           ;HMI.c: 88: else
  7643                           ;HMI.c: 89: {
  7644                           ;HMI.c: 90: DownDebounceCount = 0;
  7645  071B  01DE               	clrf	(_DownDebounceCount)	;volatile
  7646                           	line	91
  7647                           ;HMI.c: 91: DownReleased = 1;
  7648  071C  15ED               	bsf	(_DownReleased/8),(_DownReleased)&7
  7649                           	line	92
  7650                           	
  7651  071D                     i1l5188:	
  7652                           	line	94
  7653                           ;HMI.c: 92: }
  7654                           ;HMI.c: 94: if(!RB4)
  7655  071D  1A06               	btfsc	(52/8),(52)&7
  7656  071E  2F20               	goto	u381_21
  7657  071F  2F21               	goto	u381_20
  7658  0720                     u381_21:
  7659  0720  2F33               	goto	i1l5189
  7660  0721                     u381_20:
  7661                           	line	96
  7662                           	
  7663  0721                     i1l10481:	
  7664                           ;HMI.c: 95: {
  7665                           ;HMI.c: 96: LeftDebounceCount++;
  7666  0721  3001               	movlw	(01h)
  7667  0722  00F0               	movwf	(??_Debounce+0)+0
  7668  0723  0870               	movf	(??_Debounce+0)+0,w
  7669  0724  07DF               	addwf	(_LeftDebounceCount),f	;volatile
  7670                           	line	97
  7671                           	
  7672  0725                     i1l10483:	
  7673                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  7674  0725  300A               	movlw	(0Ah)
  7675  0726  025F               	subwf	(_LeftDebounceCount),w	;volatile
  7676  0727  1C03               	skipc
  7677  0728  2F2A               	goto	u382_21
  7678  0729  2F2B               	goto	u382_20
  7679  072A                     u382_21:
  7680  072A  2F35               	goto	i1l5191
  7681  072B                     u382_20:
  7682                           	
  7683  072B                     i1l10485:	
  7684  072B  1EED               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  7685  072C  2F2E               	goto	u383_21
  7686  072D  2F2F               	goto	u383_20
  7687  072E                     u383_21:
  7688  072E  2F35               	goto	i1l5191
  7689  072F                     u383_20:
  7690                           	line	99
  7691                           	
  7692  072F                     i1l10487:	
  7693                           ;HMI.c: 98: {
  7694                           ;HMI.c: 99: LeftPressed = 1;
  7695  072F  166D               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  7696                           	line	100
  7697                           ;HMI.c: 100: LeftReleased = 0;
  7698  0730  12ED               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  7699  0731  2F35               	goto	i1l5191
  7700                           	line	101
  7701                           	
  7702  0732                     i1l5190:	
  7703                           	line	102
  7704                           ;HMI.c: 101: }
  7705                           ;HMI.c: 102: }
  7706  0732  2F35               	goto	i1l5191
  7707                           	line	103
  7708                           	
  7709  0733                     i1l5189:	
  7710                           	line	105
  7711                           ;HMI.c: 103: else
  7712                           ;HMI.c: 104: {
  7713                           ;HMI.c: 105: LeftDebounceCount = 0;
  7714  0733  01DF               	clrf	(_LeftDebounceCount)	;volatile
  7715                           	line	106
  7716                           ;HMI.c: 106: LeftReleased = 1;
  7717  0734  16ED               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  7718                           	line	107
  7719                           	
  7720  0735                     i1l5191:	
  7721                           	line	109
  7722                           ;HMI.c: 107: }
  7723                           ;HMI.c: 109: if(!RB5)
  7724  0735  1A86               	btfsc	(53/8),(53)&7
  7725  0736  2F38               	goto	u384_21
  7726  0737  2F39               	goto	u384_20
  7727  0738                     u384_21:
  7728  0738  2F4B               	goto	i1l5192
  7729  0739                     u384_20:
  7730                           	line	111
  7731                           	
  7732  0739                     i1l10489:	
  7733                           ;HMI.c: 110: {
  7734                           ;HMI.c: 111: RightDebounceCount++;
  7735  0739  3001               	movlw	(01h)
  7736  073A  00F0               	movwf	(??_Debounce+0)+0
  7737  073B  0870               	movf	(??_Debounce+0)+0,w
  7738  073C  07E0               	addwf	(_RightDebounceCount),f	;volatile
  7739                           	line	112
  7740                           	
  7741  073D                     i1l10491:	
  7742                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  7743  073D  300A               	movlw	(0Ah)
  7744  073E  0260               	subwf	(_RightDebounceCount),w	;volatile
  7745  073F  1C03               	skipc
  7746  0740  2F42               	goto	u385_21
  7747  0741  2F43               	goto	u385_20
  7748  0742                     u385_21:
  7749  0742  2F4D               	goto	i1l5194
  7750  0743                     u385_20:
  7751                           	
  7752  0743                     i1l10493:	
  7753  0743  1E6E               	btfss	(_RightReleased/8),(_RightReleased)&7
  7754  0744  2F46               	goto	u386_21
  7755  0745  2F47               	goto	u386_20
  7756  0746                     u386_21:
  7757  0746  2F4D               	goto	i1l5194
  7758  0747                     u386_20:
  7759                           	line	114
  7760                           	
  7761  0747                     i1l10495:	
  7762                           ;HMI.c: 113: {
  7763                           ;HMI.c: 114: RightPressed = 1;
  7764  0747  15EE               	bsf	(_RightPressed/8),(_RightPressed)&7
  7765                           	line	115
  7766                           ;HMI.c: 115: RightReleased = 0;
  7767  0748  126E               	bcf	(_RightReleased/8),(_RightReleased)&7
  7768  0749  2F4D               	goto	i1l5194
  7769                           	line	116
  7770                           	
  7771  074A                     i1l5193:	
  7772                           	line	117
  7773                           ;HMI.c: 116: }
  7774                           ;HMI.c: 117: }
  7775  074A  2F4D               	goto	i1l5194
  7776                           	line	118
  7777                           	
  7778  074B                     i1l5192:	
  7779                           	line	120
  7780                           ;HMI.c: 118: else
  7781                           ;HMI.c: 119: {
  7782                           ;HMI.c: 120: RightDebounceCount = 0;
  7783  074B  01E0               	clrf	(_RightDebounceCount)	;volatile
  7784                           	line	121
  7785                           ;HMI.c: 121: RightReleased = 1;
  7786  074C  166E               	bsf	(_RightReleased/8),(_RightReleased)&7
  7787                           	line	122
  7788                           	
  7789  074D                     i1l5194:	
  7790                           	line	124
  7791                           ;HMI.c: 122: }
  7792                           ;HMI.c: 124: if(!RB6)
  7793  074D  1B06               	btfsc	(54/8),(54)&7
  7794  074E  2F50               	goto	u387_21
  7795  074F  2F51               	goto	u387_20
  7796  0750                     u387_21:
  7797  0750  2F63               	goto	i1l5195
  7798  0751                     u387_20:
  7799                           	line	126
  7800                           	
  7801  0751                     i1l10497:	
  7802                           ;HMI.c: 125: {
  7803                           ;HMI.c: 126: CenterDebounceCount++;
  7804  0751  3001               	movlw	(01h)
  7805  0752  00F0               	movwf	(??_Debounce+0)+0
  7806  0753  0870               	movf	(??_Debounce+0)+0,w
  7807  0754  07DD               	addwf	(_CenterDebounceCount),f	;volatile
  7808                           	line	127
  7809                           	
  7810  0755                     i1l10499:	
  7811                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  7812  0755  300A               	movlw	(0Ah)
  7813  0756  025D               	subwf	(_CenterDebounceCount),w	;volatile
  7814  0757  1C03               	skipc
  7815  0758  2F5A               	goto	u388_21
  7816  0759  2F5B               	goto	u388_20
  7817  075A                     u388_21:
  7818  075A  2F66               	goto	i1l5198
  7819  075B                     u388_20:
  7820                           	
  7821  075B                     i1l10501:	
  7822  075B  1CED               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  7823  075C  2F5E               	goto	u389_21
  7824  075D  2F5F               	goto	u389_20
  7825  075E                     u389_21:
  7826  075E  2F66               	goto	i1l5198
  7827  075F                     u389_20:
  7828                           	line	129
  7829                           	
  7830  075F                     i1l10503:	
  7831                           ;HMI.c: 128: {
  7832                           ;HMI.c: 129: CenterPressed = 1;
  7833  075F  146D               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  7834                           	line	130
  7835                           ;HMI.c: 130: CenterReleased = 0;
  7836  0760  10ED               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  7837  0761  2F66               	goto	i1l5198
  7838                           	line	131
  7839                           	
  7840  0762                     i1l5196:	
  7841                           	line	132
  7842                           ;HMI.c: 131: }
  7843                           ;HMI.c: 132: }
  7844  0762  2F66               	goto	i1l5198
  7845                           	line	133
  7846                           	
  7847  0763                     i1l5195:	
  7848                           	line	135
  7849                           ;HMI.c: 133: else
  7850                           ;HMI.c: 134: {
  7851                           ;HMI.c: 135: CenterDebounceCount = 0;
  7852  0763  01DD               	clrf	(_CenterDebounceCount)	;volatile
  7853                           	line	136
  7854                           ;HMI.c: 136: CenterReleased = 1;
  7855  0764  14ED               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  7856  0765  2F66               	goto	i1l5198
  7857                           	line	137
  7858                           	
  7859  0766                     i1l5197:	
  7860                           	line	138
  7861                           	
  7862  0766                     i1l5198:	
  7863  0766  0008               	return
  7864                           	opt stack 0
  7865                           GLOBAL	__end_of_Debounce
  7866  0767                     	__end_of_Debounce:
  7867 ;; =============== function _Debounce ends ============
  7868                           
  7869                           	signat	_Debounce,88
  7870                           	global	_adc_read
  7871                           psect	text785,local,class=CODE,delta=2
  7872                           global __ptext785
  7873  0C11                     __ptext785:
  7874                           
  7875 ;; *************** function _adc_read *****************
  7876 ;; Defined at:
  7877 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;		None
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  adc_value       2    4[COMMON] volatile unsigned int 
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  2    0[COMMON] unsigned int 
  7884 ;; Registers used:
  7885 ;;		wreg, status,2, status,0
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7891 ;;      Params:         2       0       0       0       0
  7892 ;;      Locals:         2       0       0       0       0
  7893 ;;      Temps:          2       0       0       0       0
  7894 ;;      Totals:         6       0       0       0       0
  7895 ;;Total ram usage:        6 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; This function calls:
  7898 ;;		Nothing
  7899 ;; This function is called by:
  7900 ;;		_adc_read_channel
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           psect	text785
  7904                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7905                           	line	61
  7906                           	global	__size_of_adc_read
  7907  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7908                           	
  7909  0C11                     _adc_read:	
  7910                           	opt	stack 0
  7911                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  7912                           	line	64
  7913                           	
  7914  0C11                     i1l10001:	
  7915                           ;adc.c: 62: volatile unsigned int adc_value;
  7916                           ;adc.c: 64: ADRESH = 0;
  7917  0C11  1283               	bcf	status, 5	;RP0=0, select bank0
  7918  0C12  1303               	bcf	status, 6	;RP1=0, select bank0
  7919  0C13  019E               	clrf	(30)	;volatile
  7920                           	line	66
  7921                           	
  7922  0C14                     i1l10003:	
  7923                           ;adc.c: 66: GO = 1;
  7924  0C14  151F               	bsf	(250/8),(250)&7
  7925                           	line	67
  7926                           ;adc.c: 67: while(GO) continue;
  7927  0C15  2C16               	goto	i1l703
  7928                           	
  7929  0C16                     i1l704:	
  7930                           	
  7931  0C16                     i1l703:	
  7932  0C16  191F               	btfsc	(250/8),(250)&7
  7933  0C17  2C19               	goto	u319_21
  7934  0C18  2C1A               	goto	u319_20
  7935  0C19                     u319_21:
  7936  0C19  2C16               	goto	i1l703
  7937  0C1A                     u319_20:
  7938                           	
  7939  0C1A                     i1l705:	
  7940                           	line	68
  7941                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7942  0C1A  0000               nop ;#
  7943                           	line	69
  7944                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7945  0C1B  0000               nop ;#
  7946                           	line	70
  7947                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7948  0C1C  0000               nop ;#
  7949                           psect	text785
  7950                           	line	73
  7951                           	
  7952  0C1D                     i1l10005:	
  7953                           ;adc.c: 73: adc_value = ADRESH;
  7954  0C1D  1283               	bcf	status, 5	;RP0=0, select bank0
  7955  0C1E  1303               	bcf	status, 6	;RP1=0, select bank0
  7956  0C1F  081E               	movf	(30),w	;volatile
  7957  0C20  00F2               	movwf	(??_adc_read+0)+0
  7958  0C21  01F3               	clrf	(??_adc_read+0)+0+1
  7959  0C22  0872               	movf	0+(??_adc_read+0)+0,w
  7960  0C23  00F4               	movwf	(adc_read@adc_value)	;volatile
  7961  0C24  0873               	movf	1+(??_adc_read+0)+0,w
  7962  0C25  00F5               	movwf	(adc_read@adc_value+1)	;volatile
  7963                           	line	74
  7964                           ;adc.c: 74: adc_value <<= 1;
  7965  0C26  3001               	movlw	01h
  7966                           	
  7967  0C27                     u320_25:
  7968  0C27  1003               	clrc
  7969  0C28  0DF4               	rlf	(adc_read@adc_value),f	;volatile
  7970  0C29  0DF5               	rlf	(adc_read@adc_value+1),f	;volatile
  7971  0C2A  3EFF               	addlw	-1
  7972  0C2B  1D03               	skipz
  7973  0C2C  2C27               	goto	u320_25
  7974                           	line	75
  7975                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  7976  0C2D  1683               	bsf	status, 5	;RP0=1, select bank1
  7977  0C2E  1303               	bcf	status, 6	;RP1=0, select bank1
  7978  0C2F  081E               	movf	(158)^080h,w	;volatile
  7979                           	line	78
  7980                           	
  7981  0C30                     i1l10007:	
  7982                           ;adc.c: 78: return (adc_value);
  7983  0C30  0875               	movf	(adc_read@adc_value+1),w	;volatile
  7984  0C31  01F1               	clrf	(?_adc_read+1)
  7985  0C32  07F1               	addwf	(?_adc_read+1)
  7986  0C33  0874               	movf	(adc_read@adc_value),w	;volatile
  7987  0C34  01F0               	clrf	(?_adc_read)
  7988  0C35  07F0               	addwf	(?_adc_read)
  7989                           
  7990  0C36  2C37               	goto	i1l706
  7991                           	
  7992  0C37                     i1l10009:	
  7993                           	line	79
  7994                           	
  7995  0C37                     i1l706:	
  7996  0C37  0008               	return
  7997                           	opt stack 0
  7998                           GLOBAL	__end_of_adc_read
  7999  0C38                     	__end_of_adc_read:
  8000 ;; =============== function _adc_read ends ============
  8001                           
  8002                           	signat	_adc_read,90
  8003                           psect	text786,local,class=CODE,delta=2
  8004                           global __ptext786
  8005  0000                     __ptext786:
  8006                           	global	btemp
  8007  007E                     	btemp set 07Eh
  8008                           
  8009                           	DABS	1,126,2	;btemp
  8010                           	global	wtemp0
  8011  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 24 12:28:17 2015

   __end_of_lcd_write_control 0C11               ??_UpdateDisplay 0037                             pc 0002  
                          _GO 00FA                            _RD 0C60                            _WR 0C61  
                          fsr 0004           ___wmul@multiplicand 0072                           l700 0BDB  
                         _GIE 005F                           _RB0 0030                           _RC0 0038  
                         _RB2 0032                           _RC1 0039                           _RB3 0033  
                         _RC2 003A                           _RB4 0034                           _RB5 0035  
                         _RE0 0048                           _RB6 0036                           _RE1 0049  
                         _RE2 004A                           _RX9 00C6                           _TX9 04C6  
                         _pos 0059                           fsr0 0004                           indf 0000  
                ___awmod@sign 0076               ?_lcd_set_cursor 0070                          l2210 0F03  
                        l2211 0F42                          l2212 0F05                          l2213 0F07  
                        l2205 0C88                          l2214 0F16                          l2230 0550  
                        l2222 050F                          l2215 0F23                          l2231 05C5  
                        l2223 0552                          l2216 0F44                          l2208 0F02  
                        l2240 05E0                          l2232 0564                          l2224 0519  
                        l2209 0F2F                          l2217 0F2D                          l2241 05E0  
                        l2233 05D8                          l2225 0563                          l2218 0F43  
                        l2234 056A                          l2226 0523                          l2219 0F44  
                        l2235 0576                          l2227 052D                          l2236 0591  
                        l2228 0537                          l1429 0D31                          l2237 05C2  
                        l2229 0541                          l2238 05C3                          l2239 05DF  
                        l1399 0C10                          l5210 0E62                          l4410 0D36  
                        l5211 0EA2                          l4411 0D40                          l5212 0E63  
                        l4412 0D5F                          l5213 0E64                          l5214 0E75  
                        l5215 0E76                          l5216 0E87                          l5209 0E8F  
                        l5217 0E88                          l4409 0D37                          l4434 0C5F  
                        l5218 0EA4                          l5219 0E8D                          l3660 07F3  
                        l3661 07FD                          l3664 0DE8                          l3665 0DEF  
                        l3658 07EE                          l3666 0E10                          l3659 07EE  
                        l3667 0DF7                          l3668 0E17                          l3669 0E17  
                        l6673 0BF4                          l6681 0618                          l6682 0636  
                        l6683 066A                          l6686 0698                          l6687 06B6  
                        l6688 06EA                          _CHS0 00FB                          _CHS1 00FC  
                        _CHS2 00FD                          STR_1 0799                          STR_2 0790  
                        STR_3 07AB                          STR_4 07B4                          STR_5 07A2  
                        STR_6 07D4                          STR_7 07D8                          STR_8 07C4  
                        STR_9 07D0                          _BRGH 04C2                          _CREN 00C4  
                        u3450 0E70                          u3610 07F2                          u3451 0E6F  
                        u3611 07F1                          u4307 057E                          u3460 0E84  
                        u4260 0DE1                          u3461 0E83                          u4261 0DE0  
                        u4317 0599                          u4270 0E16                          u4271 0E15  
                        u4327 0E04                          u4280 05F9                          u4337 0C0B  
                        u4281 05F8                          u4290 0679                          u4347 0BD9  
                        u4291 0678                          u3690 0D40                          u3691 0D3F  
                        _RCIE 0465                          _RCIF 0065                          _OERR 00C1  
                        _TMR0 0001                          _SPEN 00C7                          _TXIE 0464  
                        _WREN 0C62                          _TXEN 04C5                          _TXIF 0064  
                        _SYNC 04C4           __size_of_ADCconvert 01EB                          _Menu 0E5E  
      __end_of_lcd_write_data 0B8D                          _isr1 0424                          _main 0509  
                        _init 0C60                          btemp 007E                _CenterReleased 0369  
                        start 0012                 ??_ReadButtons 0071  __size_ofi1_lcd_write_control 0014  
                       ?_Menu 0070                         l10221 0C40                         l10231 0C4C  
                       l10223 0C42                         l10215 0C38                         l10233 0C4D  
                       l10225 0C43                         l10217 0C3B                         l10241 0E61  
                       l10321 07F9                         l10235 0C50                         l10227 0C46  
                       l10219 0C3F                         l10251 0E84                         l10243 0E64  
                       l10323 07FD                         l10315 07E3                         l10237 0C51  
                       l10229 0C49                         l10253 0E88                         l10245 0E6C  
                       l10261 0E8F                         l10317 07E7                         l10421 0D37  
                       l10239 0C52                         l10255 0E8B                         l10247 0E70  
                       l10263 0EA2                         l10319 07F3                         l10423 0D41  
                       l10265 0EA4                         l10257 0E8C                         l10249 0E76  
                       l10425 0D4F                         l10259 0E8E                         l10427 0D5B  
                       l10419 0D35                         l10429 0D5E                         l10701 0DD6  
                       l10711 0DF2                         l10703 0DDA                         l10713 0DF3  
                       l10705 0DE1                         l10721 05E3                         l10801 0C87  
                       l10715 0DFE                         l10707 0DE8                         l10723 05EB  
                       l10731 066B                         l10811 051F                         l10803 0509  
                       l10717 0E09                         l10709 0DEF                         l10725 05F3  
                       l10733 0671                         l10741 0D07                         l10821 0537  
                       l10813 0523                         l10805 050F                         l10719 0E10  
                       l10727 05F9                         l10735 0675                         l10751 0D13  
                       l10743 0D0B                         l10823 053D                         l10815 0529  
                       l10831 0552                         l10807 0515                         l10681 0BC8  
                       l10729 0618                         l10737 0679                         l10753 0D19  
                       l10745 0D0E                         l10761 0EF3                         l10841 0591  
                       l10833 0564                         l10825 0541                         l10817 052D  
                       l10809 0519                         l10683 0BCB                         l10691 0BF8  
                       l10739 0698                         l10755 0D1F                         l10747 0D0F  
                       l10771 0F1F                         l10763 0EF8                         l10843 05A0  
                       l10835 056A                         l10827 054C                         l10819 0533  
                       l10851 05C5                         l10685 0BCF                         l10693 0BFD  
                       l10757 0D25                         l10749 0D12                         l10781 0F2E  
                       l10773 0F23                         l10765 0F07                         l10845 05AB  
                       l10837 0576                         l10853 05D8                         l10829 0551  
                       l10687 0BD3                         l10695 0C03                         l10759 0D2B  
                       l10775 0F27                         l10767 0F12                         l10783 0F2F  
                       l10791 0C78                         l10847 05B6                         l10839 0585  
                       l10689 0BD7                         l10697 0C04                         l10777 0F2B  
                       l10769 0F16                         l10793 0C7C                         l10785 0C60  
                       l10849 05C4                         l10699 0BDC                         l10779 0F2C  
                       l10795 0C7E                         l10787 0C6F                         l10797 0C82  
                       l10789 0C74                         l10799 0C86          __size_of_calibrateIR 0052  
                       ?_isr1 0070                         ?_main 0070                         ?_init 0070  
                       _EEADR 010D                         STR_10 07DC                         STR_11 0781  
                       STR_12 0781                         STR_13 07C8                         STR_14 07BC  
                       STR_15 07CC               __end_of___awmod 1000                         _CARRY 0018  
             __end_of___lwdiv 0EF3               __end_of___lwmod 0E5E                         i1l703 0C16  
                       i1l704 0C16                         i1l705 0C1A                         i1l706 0C37  
                       i1l690 0D94                         i1l691 0DC7                         i1l692 0D9A  
                       i1l693 0DA0                         i1l694 0DA6                         i1l695 0DAC  
                       i1l696 0DB2                         i1l689 0DB6                         i1l697 0DD2  
                       _RCREG 001A                         _SPBRG 0099                         _PORTA 0005  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _TRISE 0089                         _SSPIF 0063  
                       _TXREG 0019        lcd_write_data@databyte 0072                         _total 005B  
                       pclath 000A                   _turnlowByte 00D5               ?_lcd_write_data 0070  
           ?_adc_read_channel 0070                         status 0003                         wtemp0 007E  
             __end_of_sprintf 0424              __end_of_Debounce 0767            ??_adc_read_channel 0076  
            ?_readAvgDistance 0070                  __end_of_Menu 0EA5    __size_of_lcd_write_control 001C  
            _shortMenuStrings 00E7                  __end_of_isr1 0509                  __end_of_main 05E3  
                __end_of_init 0C89               rotate@direction 00D9                        ??_Menu 00D6  
               ?_readDistance 0078        readAvgDistance@fullval 0022                        ??_isr1 004C  
                      ??_main 00DE                        ??_init 00D9           __end_of_ReadButtons 0D92  
                      _ADCON0 001F                        _ADCON1 009F                        _ADRESH 001E  
                      _ADRESL 009E                        _EEDATA 010C                        _EECON1 018C  
                      _EECON2 018D              __end_of_adc_read 0C38                        i1l2200 04EC  
                      i1l2201 04FC                        i1l1402 0B8C                        i1l1410 0CDC  
                      i1l2202 04FD                        i1l1411 0CDC                        i1l1405 0B6F  
                      i1l1408 0CCB                        i1l1409 0CB4                        i1l2192 0442  
                      i1l2193 0441                        i1l2194 0466                        i1l2195 0466  
                      i1l2196 04FD                        i1l2197 048E                        i1l2198 04A7  
                      i1l1399 0BB3                        i1l2199 04CF                        i1l5201 0D6F  
                      i1l5202 0D91                        i1l5203 0D77                        i1l5204 0D7F  
                      i1l5205 0D87                        i1l5206 0D8F                        i1l5230 0317  
                      i1l5231 0323                        i1l5224 0319                        i1l5225 0218  
                      i1l5226 026D                        i1l5227 027E                        i1l5228 0323  
                      i1l5229 02BA                        i1l5190 0732                        i1l2950 005B  
                      i1l2942 0F5A                        i1l5191 0735                        i1l5183 0703  
                      i1l2951 01FF                        i1l2943 0F7B                        i1l5192 074B  
                      i1l5184 0702                        i1l2960 01B4                        i1l2952 00A0  
                      i1l2944 0F99                        i1l5193 074A                        i1l5185 0705  
                      i1l2953 01FE                        i1l2961 01FA                        i1l5194 074D  
                      i1l5186 071B                        i1l2962 01F9                        i1l2954 00E5  
                      i1l5195 0763                        i1l5187 071A                        i1l2955 01FD  
                      i1l2963 01FF                        i1l2947 0BC7                        i1l5196 0762  
                      i1l5188 071D                        i1l2956 012A                        i1l5197 0766  
                      i1l5189 0733                        i1l2957 01FC                        i1l5198 0766  
                      i1l2958 016F                        i1l2959 01FB                        i1l7400 0C96  
                      i1l7401 0CAB                        i1l7402 0CB2                        i1l7410 0EDC  
                      i1l7411 0EEA                        i1l7412 0EF2                        i1l7420 0E47  
                      i1l6700 0345                        i1l7405 0EEB                        i1l7421 0E55  
                      i1l6701 0340                        i1l7406 0EBD                        i1l7422 0E5D  
                      i1l6702 041E                        i1l6710 039C                        i1l7407 0EB1  
                      i1l7415 0E56                        i1l6711 03B9                        i1l6703 0341  
                      i1l7408 0EC2                        i1l7416 0E30                        i1l6712 03FE  
                      i1l6704 0342                        i1l7409 0EC3                        i1l7417 0E24  
                      i1l6713 03BE                        i1l6705 035A                        i1l7418 0E35  
                      i1l7610 0FC8                        i1l6714 0409                        i1l6706 0343  
                      i1l7419 0E36                        i1l7611 0FBC                        i1l6715 041D  
                      i1l6707 0374                        i1l7612 0FCD                        i1l6716 0423  
                      i1l6708 037F                        i1l7613 0FCE                        i1l6709 03A7  
                      i1l7614 0FDF                        i1l7615 0FED                        i1l7607 0FA8  
                      i1l7616 0FF8                        i1l7608 0FB2                        i1l7617 0FFF  
                      i1l7609 0FEE                        i1l7399 0C8C                        u400_20 0C90  
                      u400_21 0C8F                        i1l6697 040A                        i1l6698 032C  
                      i1l6699 033E                        u320_25 0C27                        u321_20 0CDB  
                      u321_21 0CDA                        u401_25 0C97                        u410_20 0EE9  
                      u330_20 046A                        u410_21 0EE8                        u330_21 0469  
                      u402_25 0C9E                        u403_20 0CAA                        u411_20 0E20  
                      u331_20 048C                        u403_21 0CA9                        u411_21 0E1F  
                      u331_21 048B                        i1l9991 0DB5                        u404_20 0EAD  
                      u340_20 0D6B                        u332_20 04A5                        u404_21 0EAC  
                      i1l9993 0DB6                        i1l9985 0D93                        u340_21 0D6A  
                      u332_21 04A4                        i1l9987 0DB2                        i1l9995 0DC7  
                      u412_25 0E25                        u420_25 0FBD                        i1l9997 0DCB  
                      i1l9989 0DB4                        i1l9999 0DD2                        u413_20 0E34  
                      u421_20 0FCC                        u341_20 0D73                        u333_20 04BE  
                      u325_20 0428                        u413_21 0E33                        u421_21 0FCB  
                      u341_21 0D72                        u333_21 04BD                        u325_21 0427  
                      u405_25 0EB2                        u406_20 0EC1                        u414_20 0E40  
                      u422_20 0FD8                        u342_20 0D7B                        u350_20 006E  
                      u334_20 04E6                        u326_20 043C                        u406_21 0EC0  
                      u414_21 0E3F                        u422_21 0FD7                        u342_21 0D7A  
                      u350_21 006D                        u334_21 04E5                        u326_21 043B  
                      u414_25 0E3C                        u422_25 0FD4                        u319_20 0C1A  
                      u343_20 0D83                        u351_20 00AA                        u335_20 04F1  
                      u327_20 0446                        u319_21 0C19                        u343_21 0D82  
                      u351_21 00A9                        u335_21 04F0                        u327_21 0445  
                      u407_25 0EC4                        u415_25 0E48                        u423_25 0FE0  
                      u408_20 0ED4                        u416_20 0E54                        u424_20 0FEC  
                      u344_20 0D8B                        u360_20 01C7                        u352_20 00B3  
                      u336_20 0F58                        u328_20 044C                        u408_21 0ED3  
                      u416_21 0E53                        u424_21 0FEB                        u344_21 0D8A  
                      u360_21 01C6                        u352_21 00B2                        u336_21 0F57  
                      u328_21 044B                        u408_25 0ED0                        u336_25 0F54  
                      u425_20 0FF2                        u417_20 0F9F                        u353_20 00EF  
                      u337_20 0F7A                        u329_20 0462                        u417_21 0F9E  
                      u353_21 00EE                        u337_21 0F79                        u329_21 0461  
                      u409_25 0EDD                        u337_25 0F76                        u418_20 0FAC  
                      u354_20 00F8                        u338_20 020A                        u418_21 0FAB  
                      u354_21 00F7                        u419_20 0FB8                        u355_20 0134  
                      u347_20 0020                        u339_20 025C                        u419_21 0FB7  
                      u355_21 0133                        u347_21 001F                        u339_21 025B  
                      u339_25 0258                        u435_27 0BAE                        u380_20 0717  
                      u356_20 013D                        u348_20 0029                        u380_21 0716  
                      u356_21 013C                        u348_21 0028                        u436_27 0B88  
                      u381_20 0721                        u357_20 0179                        u349_20 0065  
                      u381_21 0720                        u357_21 0178                        u349_21 0064  
                      u437_27 0DC9                        u382_20 072B                        u358_20 0182  
                      u390_20 0332                        u382_21 072A                        u358_21 0181  
                      u390_21 0331                        u383_20 072F                        u375_20 06F1  
                      u359_20 01BE                        u391_20 036A                        u383_21 072E  
                      u375_21 06F0                        u359_21 01BD                        u391_21 0369  
                      u384_20 0739                        u376_20 06FB                        u392_20 037D  
                      u384_21 0738                        u376_21 06FA                        u392_21 037C  
                      u385_20 0743                        u377_20 06FF                        u393_20 039A  
                      u385_21 0742                        u377_21 06FE                        u393_21 0399  
                      u393_25 0396                        u386_20 0747                        u378_20 0709  
                      u394_20 03A6                        u386_21 0746                        u378_21 0708  
                      u394_21 03A5                        u387_20 0751                        u379_20 0713  
                      u395_20 03AD                        u387_21 0750                        u379_21 0712  
                      u395_21 03AC                        u388_20 075B                        u396_20 0408  
                      u388_21 075A                        u396_21 0407                        u389_20 075F  
                      u397_20 041C                        u389_21 075E                        u397_21 041B  
                      _TMR0IE 005D                        _TMR0IF 005A                        _SSPCON 0014  
                      _SSPBUF 0013                    _UpReleased 0376              __end_of_lcd_init 0D32  
                      _adcVal 0053               _UpDebounceCount 0061                        ___wmul 0C89  
                   ??___awmod 0074                  _turnhighByte 00D4                  ??_ADCconvert 0020  
                   ??___lwdiv 007A                     ??___lwmod 0024              __end_of_init_adc 0BDC  
              ??_readDistance 007A               ___awmod@divisor 0070      __end_of_lcd_write_string 0CDD  
             ___awmod@counter 0075                        _rotate 0DD3                        _rxfifo 00B0  
                      clrloop 0B60                        _txfifo 00C0                        _rxiptr 0067  
                      _rxoptr 0068                        _txiptr 006B                        _txoptr 006C  
            __end_of_ser_init 0C60                        saved_w 007E                   _LeftPressed 036C  
                   ??_sprintf 002B                   _DownPressed 036A             lcd_write_string@s 0077  
          __end_of_ADCconvert 0200                __pcstackCOMMON 0070                  __pidataBANK0 07FE  
                __pidataBANK1 0B70                   _ReadButtons 0D60              ??_lcd_set_cursor 0073  
                   ?_Debounce 0070                 _buttonPressed 0062           i1_lcd_write_control 0BA0  
                  __pbssBANK0 0051                    __pbssBANK1 00A0             _DownDebounceCount 005E  
          _RightDebounceCount 0060                    __pmaintext 0509             robotTurn@distance 00D8  
                     ?___wmul 0070                    __pintentry 0004          ?i1_lcd_write_control 0070  
       __end_of_UpdateDisplay 0324                     ?_adc_read 0070                       ?_rotate 00D9  
          __size_of_ser_putch 002E            __size_of_robo_init 0019                       i1l10001 0C11  
                     i1l10003 0C14                       i1l10011 0B7B                       i1l10005 0C1D  
                     i1l10013 0B80                       i1l10021 0B69                       i1l10101 04CF  
                     i1l10007 0C30                       i1l10015 0B82                       i1l10023 0CB3  
                     i1l10111 04F1                       i1l10103 04E6                       i1l10009 0C37  
                     i1l10017 0B83                       i1l10201 0D84                       i1l10025 0CB4  
                     i1l10121 0F67                       i1l10113 0F45                       i1l10105 04E7  
                     i1l10211 0D8F                       i1l10203 0D86                       i1l10019 0B68  
                     i1l10027 0CC4                       i1l10123 0F6D                       i1l10115 0F4B  
                     i1l10131 0218                       i1l10107 04E9                       i1l10213 0D91  
                     i1l10205 0D8B                       i1l10301 013D                       i1l10029 0CCB  
                     i1l10117 0F59                       i1l10125 0F7B                       i1l10141 024D  
                     i1l10133 021E                       i1l10109 04EC                       i1l10061 0430  
                     i1l10207 0D8C                       i1l10311 01BE                       i1l10303 016F  
                     i1l10127 0F94                       i1l10119 0F5A                       i1l10151 0299  
                     i1l10143 025C                       i1l10135 0238                       i1l10071 044C  
                     i1l10063 0436                       i1l10209 0D8E                       i1l10313 01C7  
                     i1l10305 0179                       i1l10161 02E9                       i1l10153 02BA  
                     i1l10145 026D                       i1l10137 023E                       i1l10129 0200  
                     i1l10081 046A                       i1l10073 0454                       i1l10065 043C  
                     i1l10057 0424                       i1l10307 0182                       i1l10171 030D  
                     i1l10163 02EF                       i1l10155 02C0                       i1l10147 027E  
                     i1l10139 0247                       i1l10091 048E                       i1l10083 046B  
                     i1l10075 0458                       i1l10059 0428                       i1l10067 0442  
                     i1l10501 075B                       i1l10181 0D6B                       i1l10309 01B4  
                     i1l10173 0318                       i1l10165 02F8                       i1l10157 02DA  
                     i1l10149 0284                       i1l10093 04A5                       i1l10085 0474  
                     i1l10077 045C                       i1l10069 0446            __size_of_robotMove 0088  
                     i1l10503 075F                       i1l10191 0D76                       i1l10183 0D6C  
                     i1l10511 0339                       i1l10271 0BC7                       i1l10167 02FE  
                     i1l10159 02E0                       i1l10175 0319                       i1l10095 04A7  
                     i1l10087 0475                       i1l10079 0462                       i1l10601 0EBD  
                     i1l10193 0D7B                       i1l10185 0D6E                       i1l10177 0D60  
                     i1l10281 0065                       i1l10273 0015                       i1l10521 0366  
                     i1l10513 0344                       i1l10505 0327                       i1l10169 0307  
                     i1l10097 04BE                       i1l10089 048C                       i1l10611 0EE3  
                     i1l10603 0EC3                       i1l10195 0D7C                       i1l10187 0D73  
                     i1l10179 0D65                       i1l10291 00E5                       i1l10283 006E  
                     i1l10275 0020                       i1l10531 037E                       i1l10523 036A  
                     i1l10515 0345                       i1l10507 032C                       i1l10267 0BB4  
                     i1l10099 04CB                       i1l10605 0ED4                       i1l10613 0EEB  
                     i1l10621 0E24                       i1l10197 0D7E                       i1l10189 0D74  
                     i1l10293 00EF                       i1l10285 00A0                       i1l10277 0029  
                     i1l10541 03A7                       i1l10533 037F                       i1l10525 036E  
                     i1l10517 035A                       i1l10509 0332                       i1l10269 0BC0  
                     i1l10471 06FF                       i1l10463 06EB                       i1l10615 0EF2  
                     i1l10607 0EDA                       i1l10631 0E47                       i1l10623 0E2B  
                     i1l10199 0D83                       i1l10295 00F8                       i1l10287 00AA  
                     i1l10279 005B                       i1l10551 03F2                       i1l10543 03AD  
                     i1l10535 039B                       i1l10527 0374                       i1l10519 0362  
                     i1l10481 0721                       i1l10473 0709                       i1l10465 06F1  
                     i1l10609 0EDC                       i1l10633 0E4E                       i1l10625 0E30  
                     i1l10617 0E18                       i1l10641 0F9F                       i1l10297 012A  
                     i1l10289 00B3                       i1l10561 0423                       i1l10553 03F9  
                     i1l10545 03B4                       i1l10537 039C                       i1l10529 0377  
                     i1l10491 073D                       i1l10483 0725                       i1l10475 070D  
                     i1l10467 06F5                       i1l10627 0E36                       i1l10619 0E20  
                     i1l10635 0E56                       i1l10651 0FBC                       i1l10643 0FA8  
                     i1l10299 0134                       i1l10555 03FE                       i1l10547 03B9  
                     i1l10539 03A0                       i1l10493 0743                       i1l10485 072B  
                     i1l10477 0713                       i1l10469 06FB                       i1l10581 0C8C  
                     i1l10637 0E5D                       i1l10629 0E40                       i1l10661 0FDF  
                     i1l10653 0FC3                       i1l10645 0FAC                       i1l10549 03BE  
                     i1l10557 040A                       i1l10495 0747                       i1l10487 072F  
                     i1l10479 0717                       i1l10583 0C90                       i1l10591 0EA5  
                     i1l10671 0FFF                       i1l10663 0FE6                       i1l10655 0FC8  
                     i1l10647 0FB2                       i1l10639 0F9A                       i1l10559 041E  
                     i1l10497 0751                       i1l10489 0739                       i1l10585 0C9D  
                     i1l10593 0EA7                       i1l10657 0FCE                       i1l10649 0FB8  
                     i1l10665 0FEE                       i1l10673 0BA1                       i1l10499 0755  
                     i1l10587 0CAB                       i1l10579 0C89                       i1l10595 0EAD  
                     i1l10667 0FF2                       i1l10659 0FD8                       i1l10675 0BA6  
                     i1l10589 0CB2                       i1l10597 0EB1                       i1l10669 0FF8  
                     i1l10677 0BA8                       i1l10599 0EB8                       i1l10679 0BA9  
          __size_of_robotTurn 0080                    ??_Debounce 0070              ??_lcd_write_data 0070  
                   ?_lcd_init 0070                       _SSPSTAT 0094          __end_of_readDistance 0BC8  
                   ?_init_adc 0070                     ?_ser_init 0070                 ??_calibrateIR 00DE  
                     ___awmod 0F9A         ??i1_lcd_write_control 0070               __size_of___wmul 002A  
                     ___lwdiv 0EA5                       ___lwmod 0E18     __size_of_adc_read_channel 0041  
                  ??_adc_read 0072               __size_of_rotate 0045                       _dpowers 0777  
    UpdateDisplay@serialInput 0070              ___awmod@dividend 0072                       _lowByte 0066  
                     _ser_tmp 0069                       _sprintf 0324                    ??_lcd_init 00D9  
        end_of_initialization 0D03                       init_ram 0B91                    ??_init_adc 00D6  
           __end_of_ser_putch 0D60             __end_of_robo_init 0BF5             __end_of_robotMove 066B  
                _LeftReleased 036D             __end_of_robotTurn 06EB                    ??_ser_init 00D6  
                     rotate@i 00DD                  _DownReleased 036B                 _RightReleased 0374  
    __size_of_readAvgDistance 0055             ?_lcd_write_string 0077           __end_of_calibrateIR 0F45  
          ??_lcd_write_string 0079                   AT25256A@CS0 0038                   AT25256A@CS1 0039  
           adc_read@adc_value 0074                    _totalSteps 00D2                    main@choice 00E1  
               ?_spi_transfer 0070                     Menu@input 00D6                 _CenterPressed 0368  
                ?_ReadButtons 0070                __end_of___wmul 0CB3                 __pbitbssBANK0 0368  
              __end_of_rotate 0E18           start_initialization 0CDD         __size_of_readDistance 0014  
           __size_of_Debounce 007C                   rotate@steps 00DC                ??_spi_transfer 00D6  
       lcd_set_cursor@address 0073                     _UpPressed 0375                _RTC_FLAG_250MS 0370  
              _RTC_FLAG_500MS 0371                      ??___wmul 0074                   _calibrateIR 0EF3  
                 __pdataBANK0 006F                   __pdataBANK1 00E2              _adc_read_channel 0D92  
                    ??_rotate 00DA                  _readDistance 0BB4             __size_of_adc_read 0027  
           ??_readAvgDistance 007E                 __pcstackBANK0 0020                 __pcstackBANK1 00D6  
           __size_of_lcd_init 002B                   sprintf@_val 0031                   sprintf@flag 002F  
           robotMove@distance 00D8                   sprintf@prec 0030                  _current_step 006F  
            readAvgDistance@i 0024             __size_of_init_adc 0014              ___lwdiv@dividend 0078  
                    ?___awmod 0070                     __ptext760 0DD3                     __ptext761 0BDC  
                   __ptext770 0F45                     __ptext762 0BF5                     __ptext771 0BB4  
                   __ptext763 0BC8                     __ptext755 0C60                     __ptext780 0F9A  
                   __ptext772 0CB3                     __ptext764 0D32                     __ptext756 0EF3  
                   __ptext781 0E18                     __ptext773 0B67                     __ptext765 07E0  
                   __ptext757 0D07                     __ptext782 0EA5                     __ptext774 0BA0  
                   __ptext766 0E5E                     __ptext758 066B                     __ptext783 0C89  
                   __ptext775 0324                     __ptext767 0C38                     __ptext759 05E3  
                   __ptext784 06EB                     __ptext776 0015                     __ptext768 0424  
                   __ptext785 0C11                     __ptext777 0D60                     __ptext769 0200  
                   __ptext786 0000                     __ptext778 0B7A                     __ptext779 0D92  
           __size_of_ser_init 0028                      ?___lwdiv 0076                      ?___lwmod 0020  
                   __pstrings 0767                     _dist_high 0055           readDistance@fullval 007C  
            ___lwdiv@quotient 007B                      ?_sprintf 0026       __size_of_lcd_set_cursor 0009  
           interrupt_function 0004        __size_of_UpdateDisplay 0124                ___wmul@product 0074  
                  ser_putch@c 00D7   __end_ofi1_lcd_write_control 0BB4                     _ser_putch 0D32  
                   _robo_init 0BDC                     _robotMove 05E3                     _robotTurn 066B  
                _RightPressed 0373          __size_of_ReadButtons 0032          __end_of_spi_transfer 07FE  
                 __stringbase 0776             ___wmul@multiplier 0070        UpdateDisplay@adcOutput 003C  
            spi_transfer@data 00D8              spi_transfer@temp 00D7                      _Debounce 06EB  
           _LeftDebounceCount 005F     __size_of_lcd_write_string 002A       __size_of_lcd_write_data 0013  
                  ?_ser_putch 0070       adc_read_channel@channel 0077                 _RTC_FLAG_10MS 036E  
               _RTC_FLAG_50MS 0372                    ?_robo_init 0070                     init_fetch 0B8D  
                  ?_robotMove 00D8                    ?_robotTurn 00D8                    _ADCconvert 0015  
            __size_of___awmod 0066              __size_of___lwdiv 004E              __size_of___lwmod 0046  
               _UpdateDisplay 0200                      _adc_read 0C11                   _currentMenu 0063  
             ___lwdiv@divisor 0076               ___lwdiv@counter 007D                   _menuStrings 00E2  
                    _highByte 0065                      _lcd_init 0D07                      _distance 00D0  
                    _dist_low 0057              __size_of_sprintf 0100      __end_of_adc_read_channel 0DD3  
   lcd_write_control@databyte 00D8                 __size_of_Menu 0047                      _init_adc 0BC8  
               __size_of_isr1 00E5                 __size_of_main 00DA                 __size_of_init 0029  
                    clear_ram 0B5F                      _ser_init 0C38               _readAvgDistance 0F45  
                ?_calibrateIR 0070                ?_UpdateDisplay 0070           _CenterDebounceCount 005D  
                _RTC_FLAG_1MS 036F            UpdateDisplay@F1222 00A0                      intlevel1 0000  
              _lcd_set_cursor 0B67                     sprintf@ap 002E                     sprintf@sp 0035  
            ___lwmod@dividend 0022                     stringcode 0771                   _serialInput 006A  
                 ??_ser_putch 00D6                   ??_robo_init 00D8         __size_of_spi_transfer 001E  
                 ??_robotMove 00DA                   ??_robotTurn 00DA                   ?_ADCconvert 0070  
           _lcd_write_control 0BF5   i1lcd_write_control@databyte 0072            ?_lcd_write_control 0070  
                  _OPTION_REG 0081                      sprintf@c 0036                      sprintf@f 0026  
             ___lwmod@divisor 0020               ___lwmod@counter 0025                      stringdir 0771  
                    stringtab 0767           ??_lcd_write_control 00D6        __end_of_lcd_set_cursor 0B70  
            _lcd_write_string 0CB3                  _spi_transfer 07E0             _current_direction 0064  
                 _RTC_Counter 0051       __end_of_readAvgDistance 0F9A                _lcd_write_data 0B7A  
