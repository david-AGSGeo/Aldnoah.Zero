

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 18 12:32:55 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_calibrateIR
    52                           	FNCALL	_main,_robotTurnSpeed
    53                           	FNCALL	_main,_robotMoveSpeed
    54                           	FNCALL	_main,_robotFollow
    55                           	FNCALL	_main,_ChargeMode
    56                           	FNCALL	_ChargeMode,_ser_putch
    57                           	FNCALL	_ChargeMode,_UpdateDisplay
    58                           	FNCALL	_robotFollow,_RobotDrive
    59                           	FNCALL	_robotFollow,_readAvgDistance
    60                           	FNCALL	_robotFollow,_robot_read
    61                           	FNCALL	_robotFollow,_UpdateDisplay
    62                           	FNCALL	_robotFollow,_abs
    63                           	FNCALL	_robotMoveSpeed,_RobotDrive
    64                           	FNCALL	_robotMoveSpeed,_robot_read
    65                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    66                           	FNCALL	_robotMoveSpeed,_abs
    67                           	FNCALL	_robotTurnSpeed,_robotTurn
    68                           	FNCALL	_robotTurnSpeed,_robot_read
    69                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    70                           	FNCALL	_robotTurnSpeed,_abs
    71                           	FNCALL	_calibrateIR,_rotate
    72                           	FNCALL	_calibrateIR,_UpdateDisplay
    73                           	FNCALL	_UpdateDisplay,_lcd_write_control
    74                           	FNCALL	_UpdateDisplay,_sprintf
    75                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    76                           	FNCALL	_UpdateDisplay,_lcd_write_string
    77                           	FNCALL	_UpdateDisplay,___awmod
    78                           	FNCALL	_readAvgDistance,_readDistance
    79                           	FNCALL	_init,_ser_init
    80                           	FNCALL	_init,_init_adc
    81                           	FNCALL	_init,_lcd_init
    82                           	FNCALL	_init,_robo_init
    83                           	FNCALL	_readDistance,_adc_read_channel
    84                           	FNCALL	_robot_read,_ser_putch
    85                           	FNCALL	_robot_read,_ser_getch
    86                           	FNCALL	_lcd_init,_lcd_write_control
    87                           	FNCALL	_lcd_write_string,_lcd_write_data
    88                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    89                           	FNCALL	_abs,___wmul
    90                           	FNCALL	_robotTurn,_ser_putch
    91                           	FNCALL	_RobotDrive,_ser_putch
    92                           	FNCALL	_ser_getch,_ser_isrx
    93                           	FNCALL	_sprintf,___lwdiv
    94                           	FNCALL	_sprintf,___lwmod
    95                           	FNCALL	_rotate,_spi_transfer
    96                           	FNCALL	_robo_init,_ser_putch
    97                           	FNCALL	_adc_read_channel,_adc_read
    98                           	FNROOT	_main
    99                           	FNCALL	_isr1,i1___lwmod
   100                           	FNCALL	_isr1,_ReadButtons
   101                           	FNCALL	_ReadButtons,_Debounce
   102                           	FNCALL	intlevel1,_isr1
   103                           	global	intlevel1
   104                           	FNROOT	intlevel1
   105                           	global	_menuStrings
   106                           	global	_shortMenuStrings
   107                           	global	_current_step
   108                           psect	idataBANK1,class=CODE,space=0,delta=2
   109                           global __pidataBANK1
   110  1654                     __pidataBANK1:
   111                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   112                           	line	49
   113                           
   114                           ;initializer for _menuStrings
   115  1654  3453               	retlw	(STR_1-__stringbase)&0ffh
   116  1655  344A               	retlw	(STR_2-__stringbase)&0ffh
   117  1656  3465               	retlw	(STR_3-__stringbase)&0ffh
   118  1657  346E               	retlw	(STR_4-__stringbase)&0ffh
   119  1658  345C               	retlw	(STR_5-__stringbase)&0ffh
   120  1659  3441               	retlw	(STR_6-__stringbase)&0ffh
   121                           	line	50
   122                           
   123                           ;initializer for _shortMenuStrings
   124  165A  3492               	retlw	(STR_7-__stringbase)&0ffh
   125  165B  3496               	retlw	(STR_8-__stringbase)&0ffh
   126  165C  347E               	retlw	(STR_9-__stringbase)&0ffh
   127  165D  348A               	retlw	(STR_10-__stringbase)&0ffh
   128  165E  349A               	retlw	(STR_11-__stringbase)&0ffh
   129  165F  348E               	retlw	(STR_12-__stringbase)&0ffh
   130                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   131                           	line	45
   132                           
   133                           ;initializer for _current_step
   134  1660  343C               	retlw	03Ch
   135                           	global	_dpowers
   136                           psect	strings,class=STRING,delta=2
   137                           global __pstrings
   138  0800                     __pstrings:
   139                           ;	global	stringdir,stringtab,__stringbase
   140  0800                     stringtab:
   141                           ;	String table - string pointers are 1 byte each
   142  0800  1BFF               	btfsc	(btemp+1),7
   143  0801  280A               	ljmp	stringcode
   144  0802  1383               	bcf	status,7
   145  0803  187F               	btfsc	(btemp+1),0
   146  0804  1783               	bsf	status,7
   147  0805  0800               	movf	indf,w
   148  0806  0A84               	incf fsr
   149  0807  1903               skipnz
   150  0808  0AFF               incf btemp+1
   151  0809  0008               	return
   152  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   153  080A  3008               movlw high(stringdir)
   154  080B  008A               movwf pclath
   155  080C  0804               movf fsr,w
   156  080D  0A84               incf fsr
   157  080E  0782               	addwf pc
   158  080F                     __stringbase:
   159  080F  3400               	retlw	0
   160                           psect	strings
   161                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   162                           	line	350
   163  0810                     _dpowers:
   164  0810  3401               	retlw	01h
   165  0811  3400               	retlw	0
   166                           
   167  0812  340A               	retlw	0Ah
   168  0813  3400               	retlw	0
   169                           
   170  0814  3464               	retlw	064h
   171  0815  3400               	retlw	0
   172                           
   173  0816  34E8               	retlw	0E8h
   174  0817  3403               	retlw	03h
   175                           
   176  0818  3410               	retlw	010h
   177  0819  3427               	retlw	027h
   178                           
   179                           	global	_dpowers
   180                           	global	_adcVal
   181                           	global	_pos
   182                           	global	_BumpSensors
   183                           	global	_VwallSensor
   184                           	global	_rxiptr
   185                           	global	_rxoptr
   186                           	global	_txiptr
   187                           	global	_txoptr
   188                           	global	UpdateDisplay@F1250
   189                           	global	_txfifo
   190                           	global	_buttonPressed
   191                           	global	_CenterPressed
   192                           	global	_CenterReleased
   193                           	global	_DownPressed
   194                           	global	_DownReleased
   195                           	global	_LeftPressed
   196                           	global	_LeftReleased
   197                           	global	_RTC_FLAG_1MS
   198                           	global	_RTC_FLAG_250MS
   199                           	global	_RTC_FLAG_500MS
   200                           	global	_RightPressed
   201                           	global	_RightReleased
   202                           	global	_UpPressed
   203                           	global	_UpReleased
   204                           	global	_rxfifo
   205                           	global	_Disp1
   206                           	global	_Disp2
   207                           	global	_IRdistance
   208                           	global	_RTC_Counter
   209                           	global	_TotalDistTravelled
   210                           	global	_angleTurned
   211                           	global	_distTravelled
   212                           	global	_dist_high
   213                           	global	_dist_low
   214                           	global	_total
   215                           	global	_totalSteps
   216                           	global	_AngleHighByte
   217                           	global	_AngleLowByte
   218                           	global	_CenterDebounceCount
   219                           	global	_CliffSensors
   220                           	global	_DistHighByte
   221                           	global	_DistLowByte
   222                           	global	_DownDebounceCount
   223                           	global	_LeftDebounceCount
   224                           	global	_ROBOTerror
   225                           	global	_RightDebounceCount
   226                           	global	_UpDebounceCount
   227                           	global	_currentMenu
   228                           	global	_highByte
   229                           	global	_lowByte
   230                           	global	_ser_tmp
   231                           	global	_turnhighByte
   232                           	global	_turnlowByte
   233                           	global	_ADCON0
   234  001F                     _ADCON0	set	31
   235                           	global	_ADRESH
   236  001E                     _ADRESH	set	30
   237                           	global	_PORTA
   238  0005                     _PORTA	set	5
   239                           	global	_PORTD
   240  0008                     _PORTD	set	8
   241                           	global	_PORTE
   242  0009                     _PORTE	set	9
   243                           	global	_RCREG
   244  001A                     _RCREG	set	26
   245                           	global	_SSPBUF
   246  0013                     _SSPBUF	set	19
   247                           	global	_SSPCON
   248  0014                     _SSPCON	set	20
   249                           	global	_TMR0
   250  0001                     _TMR0	set	1
   251                           	global	_TXREG
   252  0019                     _TXREG	set	25
   253                           	global	AT25256A@CS0
   254  0038                     AT25256A@CS0	set	56
   255                           	global	AT25256A@CS1
   256  0039                     AT25256A@CS1	set	57
   257                           	global	_CARRY
   258  0018                     _CARRY	set	24
   259                           	global	_CHS0
   260  00FB                     _CHS0	set	251
   261                           	global	_CHS1
   262  00FC                     _CHS1	set	252
   263                           	global	_CHS2
   264  00FD                     _CHS2	set	253
   265                           	global	_CREN
   266  00C4                     _CREN	set	196
   267                           	global	_GIE
   268  005F                     _GIE	set	95
   269                           	global	_GO
   270  00FA                     _GO	set	250
   271                           	global	_OERR
   272  00C1                     _OERR	set	193
   273                           	global	_PEIE
   274  005E                     _PEIE	set	94
   275                           	global	_RB0
   276  0030                     _RB0	set	48
   277                           	global	_RB2
   278  0032                     _RB2	set	50
   279                           	global	_RB3
   280  0033                     _RB3	set	51
   281                           	global	_RB4
   282  0034                     _RB4	set	52
   283                           	global	_RB5
   284  0035                     _RB5	set	53
   285                           	global	_RB6
   286  0036                     _RB6	set	54
   287                           	global	_RC0
   288  0038                     _RC0	set	56
   289                           	global	_RC1
   290  0039                     _RC1	set	57
   291                           	global	_RC2
   292  003A                     _RC2	set	58
   293                           	global	_RCIF
   294  0065                     _RCIF	set	101
   295                           	global	_RE0
   296  0048                     _RE0	set	72
   297                           	global	_RE1
   298  0049                     _RE1	set	73
   299                           	global	_RE2
   300  004A                     _RE2	set	74
   301                           	global	_RX9
   302  00C6                     _RX9	set	198
   303                           	global	_SPEN
   304  00C7                     _SPEN	set	199
   305                           	global	_SSPIF
   306  0063                     _SSPIF	set	99
   307                           	global	_TMR0IE
   308  005D                     _TMR0IE	set	93
   309                           	global	_TMR0IF
   310  005A                     _TMR0IF	set	90
   311                           	global	_TXIF
   312  0064                     _TXIF	set	100
   313                           	global	_ADCON1
   314  009F                     _ADCON1	set	159
   315                           	global	_ADRESL
   316  009E                     _ADRESL	set	158
   317                           	global	_OPTION_REG
   318  0081                     _OPTION_REG	set	129
   319                           	global	_SPBRG
   320  0099                     _SPBRG	set	153
   321                           	global	_SSPSTAT
   322  0094                     _SSPSTAT	set	148
   323                           	global	_TRISA
   324  0085                     _TRISA	set	133
   325                           	global	_TRISB
   326  0086                     _TRISB	set	134
   327                           	global	_TRISC
   328  0087                     _TRISC	set	135
   329                           	global	_TRISD
   330  0088                     _TRISD	set	136
   331                           	global	_TRISE
   332  0089                     _TRISE	set	137
   333                           	global	_BRGH
   334  04C2                     _BRGH	set	1218
   335                           	global	_RCIE
   336  0465                     _RCIE	set	1125
   337                           	global	_SYNC
   338  04C4                     _SYNC	set	1220
   339                           	global	_TX9
   340  04C6                     _TX9	set	1222
   341                           	global	_TXEN
   342  04C5                     _TXEN	set	1221
   343                           	global	_TXIE
   344  0464                     _TXIE	set	1124
   345                           	global	_EEADR
   346  010D                     _EEADR	set	269
   347                           	global	_EEDATA
   348  010C                     _EEDATA	set	268
   349                           	global	_EECON1
   350  018C                     _EECON1	set	396
   351                           	global	_EECON2
   352  018D                     _EECON2	set	397
   353                           	global	_RD
   354  0C60                     _RD	set	3168
   355                           	global	_WR
   356  0C61                     _WR	set	3169
   357                           	global	_WREN
   358  0C62                     _WREN	set	3170
   359                           	
   360  081A                     STR_18:	
   361  081A  3420               	retlw	32	;' '
   362  081B  3443               	retlw	67	;'C'
   363  081C  3468               	retlw	104	;'h'
   364  081D  3461               	retlw	97	;'a'
   365  081E  3472               	retlw	114	;'r'
   366  081F  3467               	retlw	103	;'g'
   367  0820  3469               	retlw	105	;'i'
   368  0821  346E               	retlw	110	;'n'
   369  0822  3467               	retlw	103	;'g'
   370  0823  3420               	retlw	32	;' '
   371  0824  344D               	retlw	77	;'M'
   372  0825  346F               	retlw	111	;'o'
   373  0826  3464               	retlw	100	;'d'
   374  0827  3465               	retlw	101	;'e'
   375  0828  3420               	retlw	32	;' '
   376  0829  3400               	retlw	0
   377                           psect	strings
   378                           	
   379  082A                     STR_14:	
   380  082A  345A               	retlw	90	;'Z'
   381  082B  3465               	retlw	101	;'e'
   382  082C  3472               	retlw	114	;'r'
   383  082D  346F               	retlw	111	;'o'
   384  082E  3420               	retlw	32	;' '
   385  082F  3453               	retlw	83	;'S'
   386  0830  3474               	retlw	116	;'t'
   387  0831  3465               	retlw	101	;'e'
   388  0832  3470               	retlw	112	;'p'
   389  0833  345F               	retlw	95	;'_'
   390  0834  344D               	retlw	77	;'M'
   391  0835  346F               	retlw	111	;'o'
   392  0836  3474               	retlw	116	;'t'
   393  0837  346F               	retlw	111	;'o'
   394  0838  3472               	retlw	114	;'r'
   395  0839  3400               	retlw	0
   396                           psect	strings
   397                           	
   398  083A                     STR_13:	
   399  083A  3449               	retlw	73	;'I'
   400  083B  3452               	retlw	82	;'R'
   401  083C  343A               	retlw	58	;':'
   402  083D  3425               	retlw	37	;'%'
   403  083E  3464               	retlw	100	;'d'
   404  083F  3463               	retlw	99	;'c'
   405  0840  346D               	retlw	109	;'m'
   406  0841  3420               	retlw	32	;' '
   407  0842  3444               	retlw	68	;'D'
   408  0843  343A               	retlw	58	;':'
   409  0844  3425               	retlw	37	;'%'
   410  0845  3464               	retlw	100	;'d'
   411  0846  3400               	retlw	0
   412                           psect	strings
   413                           	
   414  0847                     STR_19:	
   415  0847  3420               	retlw	32	;' '
   416  0848  3420               	retlw	32	;' '
   417  0849  3445               	retlw	69	;'E'
   418  084A  3458               	retlw	88	;'X'
   419  084B  3449               	retlw	73	;'I'
   420  084C  3454               	retlw	84	;'T'
   421  084D  3420               	retlw	32	;' '
   422  084E  3420               	retlw	32	;' '
   423  084F  3400               	retlw	0
   424                           psect	strings
   425                           	
   426  0850                     STR_6:	
   427  0850  3420               	retlw	32	;' '
   428  0851  3443               	retlw	67	;'C'
   429  0852  3468               	retlw	104	;'h'
   430  0853  3461               	retlw	97	;'a'
   431  0854  3472               	retlw	114	;'r'
   432  0855  3467               	retlw	103	;'g'
   433  0856  3465               	retlw	101	;'e'
   434  0857  3420               	retlw	32	;' '
   435  0858  3400               	retlw	0
   436                           psect	strings
   437                           	
   438  0859                     STR_2:	
   439  0859  3453               	retlw	83	;'S'
   440  085A  3463               	retlw	99	;'c'
   441  085B  3461               	retlw	97	;'a'
   442  085C  346E               	retlw	110	;'n'
   443  085D  345F               	retlw	95	;'_'
   444  085E  3433               	retlw	51	;'3'
   445  085F  3436               	retlw	54	;'6'
   446  0860  3430               	retlw	48	;'0'
   447  0861  3400               	retlw	0
   448                           psect	strings
   449                           	
   450  0862                     STR_1:	
   451  0862  3443               	retlw	67	;'C'
   452  0863  3461               	retlw	97	;'a'
   453  0864  346C               	retlw	108	;'l'
   454  0865  3469               	retlw	105	;'i'
   455  0866  3462               	retlw	98	;'b'
   456  0867  345F               	retlw	95	;'_'
   457  0868  3449               	retlw	73	;'I'
   458  0869  3452               	retlw	82	;'R'
   459  086A  3400               	retlw	0
   460                           psect	strings
   461                           	
   462  086B                     STR_5:	
   463  086B  3446               	retlw	70	;'F'
   464  086C  346C               	retlw	108	;'l'
   465  086D  3477               	retlw	119	;'w'
   466  086E  345F               	retlw	95	;'_'
   467  086F  3457               	retlw	87	;'W'
   468  0870  3461               	retlw	97	;'a'
   469  0871  346C               	retlw	108	;'l'
   470  0872  346C               	retlw	108	;'l'
   471  0873  3400               	retlw	0
   472                           psect	strings
   473                           	
   474  0874                     STR_3:	
   475  0874  3444               	retlw	68	;'D'
   476  0875  3472               	retlw	114	;'r'
   477  0876  3469               	retlw	105	;'i'
   478  0877  3476               	retlw	118	;'v'
   479  0878  3465               	retlw	101	;'e'
   480  0879  345F               	retlw	95	;'_'
   481  087A  3432               	retlw	50	;'2'
   482  087B  346D               	retlw	109	;'m'
   483  087C  3400               	retlw	0
   484                           psect	strings
   485                           	
   486  087D                     STR_4:	
   487  087D  3444               	retlw	68	;'D'
   488  087E  3472               	retlw	114	;'r'
   489  087F  3469               	retlw	105	;'i'
   490  0880  3476               	retlw	118	;'v'
   491  0881  3465               	retlw	101	;'e'
   492  0882  345F               	retlw	95	;'_'
   493  0883  344C               	retlw	76	;'L'
   494  0884  3400               	retlw	0
   495                           psect	strings
   496                           	
   497  0885                     STR_16:	
   498  0885  3443               	retlw	67	;'C'
   499  0886  344F               	retlw	79	;'O'
   500  0887  344E               	retlw	78	;'N'
   501  0888  3446               	retlw	70	;'F'
   502  0889  3449               	retlw	73	;'I'
   503  088A  3452               	retlw	82	;'R'
   504  088B  344D               	retlw	77	;'M'
   505  088C  3400               	retlw	0
   506                           psect	strings
   507                           	
   508  088D                     STR_9:	
   509  088D  3444               	retlw	68	;'D'
   510  088E  3472               	retlw	114	;'r'
   511  088F  3432               	retlw	50	;'2'
   512  0890  3400               	retlw	0
   513                           psect	strings
   514                           	
   515  0891                     STR_15:	
   516  0891  343C               	retlw	60	;'<'
   517  0892  343C               	retlw	60	;'<'
   518  0893  343C               	retlw	60	;'<'
   519  0894  3400               	retlw	0
   520                           psect	strings
   521                           	
   522  0895                     STR_17:	
   523  0895  343E               	retlw	62	;'>'
   524  0896  343E               	retlw	62	;'>'
   525  0897  343E               	retlw	62	;'>'
   526  0898  3400               	retlw	0
   527                           psect	strings
   528                           	
   529  0899                     STR_10:	
   530  0899  3444               	retlw	68	;'D'
   531  089A  3472               	retlw	114	;'r'
   532  089B  344C               	retlw	76	;'L'
   533  089C  3400               	retlw	0
   534                           psect	strings
   535                           	
   536  089D                     STR_12:	
   537  089D  3443               	retlw	67	;'C'
   538  089E  3468               	retlw	104	;'h'
   539  089F  3467               	retlw	103	;'g'
   540  08A0  3400               	retlw	0
   541                           psect	strings
   542                           	
   543  08A1                     STR_7:	
   544  08A1  3443               	retlw	67	;'C'
   545  08A2  3461               	retlw	97	;'a'
   546  08A3  346C               	retlw	108	;'l'
   547  08A4  3400               	retlw	0
   548                           psect	strings
   549                           	
   550  08A5                     STR_8:	
   551  08A5  3453               	retlw	83	;'S'
   552  08A6  3463               	retlw	99	;'c'
   553  08A7  346E               	retlw	110	;'n'
   554  08A8  3400               	retlw	0
   555                           psect	strings
   556                           	
   557  08A9                     STR_11:	
   558  08A9  3446               	retlw	70	;'F'
   559  08AA  346C               	retlw	108	;'l'
   560  08AB  3477               	retlw	119	;'w'
   561  08AC  3400               	retlw	0
   562                           psect	strings
   563                           	file	"Assignment3_AldnoahZero.as"
   564                           	line	#
   565                           psect cinit,class=CODE,delta=2
   566                           global start_initialization
   567  0900                     start_initialization:
   568                           
   569                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   570                           global __pbitbssCOMMON
   571  0380                     __pbitbssCOMMON:
   572  0380                     _CenterPressed:
   573  0380                            ds      1
   574                           
   575  0381                     _CenterReleased:
   576  0381                            ds      1
   577                           
   578  0382                     _DownPressed:
   579  0382                            ds      1
   580                           
   581  0383                     _DownReleased:
   582  0383                            ds      1
   583                           
   584  0384                     _LeftPressed:
   585  0384                            ds      1
   586                           
   587  0385                     _LeftReleased:
   588  0385                            ds      1
   589                           
   590  0386                     _RTC_FLAG_1MS:
   591  0386                            ds      1
   592                           
   593  0387                     _RTC_FLAG_250MS:
   594  0387                            ds      1
   595                           
   596  0388                     _RTC_FLAG_500MS:
   597  0388                            ds      1
   598                           
   599  0389                     _RightPressed:
   600  0389                            ds      1
   601                           
   602  038A                     _RightReleased:
   603  038A                            ds      1
   604                           
   605  038B                     _UpPressed:
   606  038B                            ds      1
   607                           
   608  038C                     _UpReleased:
   609  038C                            ds      1
   610                           
   611                           psect	bssCOMMON,class=COMMON,space=1
   612                           global __pbssCOMMON
   613  007D                     __pbssCOMMON:
   614  007D                     _buttonPressed:
   615  007D                            ds      1
   616                           
   617                           psect	bssBANK0,class=BANK0,space=1
   618                           global __pbssBANK0
   619  0066                     __pbssBANK0:
   620  0066                     _adcVal:
   621  0066                            ds      2
   622                           
   623  0068                     _pos:
   624  0068                            ds      2
   625                           
   626  006A                     _BumpSensors:
   627  006A                            ds      1
   628                           
   629  006B                     _VwallSensor:
   630  006B                            ds      1
   631                           
   632  006C                     _rxiptr:
   633  006C                            ds      1
   634                           
   635  006D                     _rxoptr:
   636  006D                            ds      1
   637                           
   638  006E                     _txiptr:
   639  006E                            ds      1
   640                           
   641  006F                     _txoptr:
   642  006F                            ds      1
   643                           
   644                           psect	bssBANK1,class=BANK1,space=1
   645                           global __pbssBANK1
   646  00A0                     __pbssBANK1:
   647  00A0                     _rxfifo:
   648  00A0                            ds      16
   649                           
   650  00B0                     _Disp1:
   651  00B0                            ds      2
   652                           
   653  00B2                     _Disp2:
   654  00B2                            ds      2
   655                           
   656  00B4                     _IRdistance:
   657  00B4                            ds      2
   658                           
   659  00B6                     _RTC_Counter:
   660  00B6                            ds      2
   661                           
   662  00B8                     _TotalDistTravelled:
   663  00B8                            ds      2
   664                           
   665  00BA                     _angleTurned:
   666  00BA                            ds      2
   667                           
   668  00BC                     _distTravelled:
   669  00BC                            ds      2
   670                           
   671  00BE                     _dist_high:
   672  00BE                            ds      2
   673                           
   674  00C0                     _dist_low:
   675  00C0                            ds      2
   676                           
   677  00C2                     _total:
   678  00C2                            ds      2
   679                           
   680  00C4                     _totalSteps:
   681  00C4                            ds      2
   682                           
   683  00C6                     _AngleHighByte:
   684  00C6                            ds      1
   685                           
   686  00C7                     _AngleLowByte:
   687  00C7                            ds      1
   688                           
   689  00C8                     _CenterDebounceCount:
   690  00C8                            ds      1
   691                           
   692  00C9                     _CliffSensors:
   693  00C9                            ds      1
   694                           
   695  00CA                     _DistHighByte:
   696  00CA                            ds      1
   697                           
   698  00CB                     _DistLowByte:
   699  00CB                            ds      1
   700                           
   701  00CC                     _DownDebounceCount:
   702  00CC                            ds      1
   703                           
   704  00CD                     _LeftDebounceCount:
   705  00CD                            ds      1
   706                           
   707  00CE                     _ROBOTerror:
   708  00CE                            ds      1
   709                           
   710  00CF                     _RightDebounceCount:
   711  00CF                            ds      1
   712                           
   713  00D0                     _UpDebounceCount:
   714  00D0                            ds      1
   715                           
   716  00D1                     _currentMenu:
   717  00D1                            ds      1
   718                           
   719  00D2                     _highByte:
   720  00D2                            ds      1
   721                           
   722  00D3                     _lowByte:
   723  00D3                            ds      1
   724                           
   725  00D4                     _ser_tmp:
   726  00D4                            ds      1
   727                           
   728  00D5                     _turnhighByte:
   729  00D5                            ds      1
   730                           
   731  00D6                     _turnlowByte:
   732  00D6                            ds      1
   733                           
   734                           psect	dataBANK1,class=BANK1,space=1
   735                           global __pdataBANK1
   736  00D7                     __pdataBANK1:
   737                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   738                           	line	49
   739  00D7                     _menuStrings:
   740  00D7                            ds      6
   741                           
   742                           psect	dataBANK1
   743                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   744                           	line	50
   745  00DD                     _shortMenuStrings:
   746  00DD                            ds      6
   747                           
   748                           psect	dataBANK1
   749                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   750                           	line	45
   751  00E3                     _current_step:
   752  00E3                            ds      1
   753                           
   754                           psect	bssBANK3,class=BANK3,space=1
   755                           global __pbssBANK3
   756  0190                     __pbssBANK3:
   757  0190                     UpdateDisplay@F1250:
   758  0190                            ds      16
   759                           
   760  01A0                     _txfifo:
   761  01A0                            ds      16
   762                           
   763                           psect clrtext,class=CODE,delta=2
   764                           global clear_ram
   765                           ;	Called with FSR containing the base address, and
   766                           ;	W with the last address+1
   767  07F8                     clear_ram:
   768  07F8  0064               	clrwdt			;clear the watchdog before getting into this loop
   769  07F9                     clrloop:
   770  07F9  0180               	clrf	indf		;clear RAM location pointed to by FSR
   771  07FA  0A84               	incf	fsr,f		;increment pointer
   772  07FB  0604               	xorwf	fsr,w		;XOR with final address
   773  07FC  1903               	btfsc	status,2	;have we reached the end yet?
   774  07FD  3400               	retlw	0		;all done for this memory range, return
   775  07FE  0604               	xorwf	fsr,w		;XOR again to restore value
   776  07FF  2FF9               	goto	clrloop		;do the next byte
   777                           
   778                           ; Clear objects allocated to BITCOMMON
   779                           psect cinit,class=CODE,delta=2
   780  0900  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   781  0901  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   782                           ; Clear objects allocated to COMMON
   783                           psect cinit,class=CODE,delta=2
   784  0902  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   785                           ; Clear objects allocated to BANK0
   786                           psect cinit,class=CODE,delta=2
   787  0903  1383               	bcf	status, 7	;select IRP bank0
   788  0904  3066               	movlw	low(__pbssBANK0)
   789  0905  0084               	movwf	fsr
   790  0906  3070               	movlw	low((__pbssBANK0)+0Ah)
   791  0907  120A  118A  27F8   	fcall	clear_ram
              120A  158A         
   792                           ; Clear objects allocated to BANK1
   793                           psect cinit,class=CODE,delta=2
   794  090C  30A0               	movlw	low(__pbssBANK1)
   795  090D  0084               	movwf	fsr
   796  090E  30D7               	movlw	low((__pbssBANK1)+037h)
   797  090F  120A  118A  27F8   	fcall	clear_ram
              120A  158A         
   798                           ; Clear objects allocated to BANK3
   799                           psect cinit,class=CODE,delta=2
   800  0914  1783               	bsf	status, 7	;select IRP bank2
   801  0915  3090               	movlw	low(__pbssBANK3)
   802  0916  0084               	movwf	fsr
   803  0917  30B0               	movlw	low((__pbssBANK3)+020h)
   804  0918  120A  118A  27F8   	fcall	clear_ram
              120A  158A         
   805                           global btemp
   806                           psect inittext,class=CODE,delta=2
   807                           global init_fetch,btemp
   808                           ;	Called with low address in FSR and high address in W
   809  1674                     init_fetch:
   810  1674  087E               	movf btemp,w
   811  1675  008A               	movwf pclath
   812  1676  087F               	movf btemp+1,w
   813  1677  0082               	movwf pc
   814                           global init_ram
   815                           ;Called with:
   816                           ;	high address of idata address in btemp 
   817                           ;	low address of idata address in btemp+1 
   818                           ;	low address of data in FSR
   819                           ;	high address + 1 of data in btemp-1
   820  1678                     init_ram:
   821  1678  160A  118A  2674   	fcall init_fetch
              160A  118A         
   822  167D  0080               	movwf indf,f
   823  167E  0A84               	incf fsr,f
   824  167F  0804               	movf fsr,w
   825  1680  067D               	xorwf btemp-1,w
   826  1681  1903               	btfsc status,2
   827  1682  3400               	retlw 0
   828  1683  0AFF               	incf btemp+1,f
   829  1684  1903               	btfsc status,2
   830  1685  0AFE               	incf btemp,f
   831  1686  2E78               	goto init_ram
   832                           ; Initialize objects allocated to BANK1
   833                           psect cinit,class=CODE,delta=2
   834                           global init_ram, __pidataBANK1
   835  091D  1383               	bcf	status, 7	;select IRP bank0
   836  091E  30E4               	movlw low(__pdataBANK1+13)
   837  091F  00FD               	movwf btemp-1,f
   838  0920  3016               	movlw high(__pidataBANK1)
   839  0921  00FE               	movwf btemp,f
   840  0922  3054               	movlw low(__pidataBANK1)
   841  0923  00FF               	movwf btemp+1,f
   842  0924  30D7               	movlw low(__pdataBANK1)
   843  0925  0084               	movwf fsr,f
   844  0926  160A  118A  2678   	fcall init_ram
              120A  158A         
   845                           psect cinit,class=CODE,delta=2
   846                           global end_of_initialization
   847                           
   848                           ;End of C runtime variable initialization code
   849                           
   850  092B                     end_of_initialization:
   851  092B  0183               clrf status
   852  092C  120A  118A  2815   ljmp _main	;jump to C main() function
   853                           psect	cstackCOMMON,class=COMMON,space=1
   854                           global __pcstackCOMMON
   855  0072                     __pcstackCOMMON:
   856                           	global	?_ser_init
   857  0072                     ?_ser_init:	; 0 bytes @ 0x0
   858                           	global	?_robo_init
   859  0072                     ?_robo_init:	; 0 bytes @ 0x0
   860                           	global	?_robot_read
   861  0072                     ?_robot_read:	; 0 bytes @ 0x0
   862                           	global	?_readAvgDistance
   863  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   864                           	global	?_UpdateDisplay
   865  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   866                           	global	?_calibrateIR
   867  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   868                           	global	?_ChargeMode
   869  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   870                           	global	?_ser_putch
   871  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   872                           	global	?_init_adc
   873  0072                     ?_init_adc:	; 0 bytes @ 0x0
   874                           	global	?_lcd_write_control
   875  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   876                           	global	?_lcd_write_data
   877  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   878                           	global	?_lcd_set_cursor
   879  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   880                           	global	?_lcd_init
   881  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   882                           	global	?_isr1
   883  0072                     ?_isr1:	; 0 bytes @ 0x0
   884                           	global	?_init
   885  0072                     ?_init:	; 0 bytes @ 0x0
   886                           	global	?_main
   887  0072                     ?_main:	; 0 bytes @ 0x0
   888                           	global	?_Debounce
   889  0072                     ?_Debounce:	; 0 bytes @ 0x0
   890                           	global	??_Debounce
   891  0072                     ??_Debounce:	; 0 bytes @ 0x0
   892                           	global	?_ser_isrx
   893  0072                     ?_ser_isrx:	; 1 bit 
   894                           	global	?_ReadButtons
   895  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   896                           	global	?_Menu
   897  0072                     ?_Menu:	; 1 bytes @ 0x0
   898                           	global	?_ser_getch
   899  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   900                           	global	?_adc_read_channel
   901  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   902                           	global	?_spi_transfer
   903  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   904                           	global	?i1___lwmod
   905  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   906                           	global	i1___lwmod@divisor
   907  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   908  0072                     	ds	1
   909                           	global	??_ReadButtons
   910  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   911  0073                     	ds	1
   912                           	global	i1___lwmod@dividend
   913  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   914  0074                     	ds	2
   915                           	global	??i1___lwmod
   916  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   917  0076                     	ds	1
   918                           	global	i1___lwmod@counter
   919  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   920  0077                     	ds	1
   921                           	global	??_isr1
   922  0078                     ??_isr1:	; 0 bytes @ 0x6
   923  0078                     	ds	5
   924                           psect	cstackBANK0,class=BANK0,space=1
   925                           global __pcstackBANK0
   926  0020                     __pcstackBANK0:
   927                           	global	??_ser_init
   928  0020                     ??_ser_init:	; 0 bytes @ 0x0
   929                           	global	??_Menu
   930  0020                     ??_Menu:	; 0 bytes @ 0x0
   931                           	global	??_ser_putch
   932  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   933                           	global	??_ser_getch
   934  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   935                           	global	??_init_adc
   936  0020                     ??_init_adc:	; 0 bytes @ 0x0
   937                           	global	??_lcd_write_control
   938  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   939                           	global	??_lcd_write_data
   940  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   941                           	global	??_spi_transfer
   942  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   943                           	global	??_ser_isrx
   944  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
   945                           	global	?_adc_read
   946  0020                     ?_adc_read:	; 2 bytes @ 0x0
   947                           	global	?___wmul
   948  0020                     ?___wmul:	; 2 bytes @ 0x0
   949                           	global	?___lwdiv
   950  0020                     ?___lwdiv:	; 2 bytes @ 0x0
   951                           	global	?___awmod
   952  0020                     ?___awmod:	; 2 bytes @ 0x0
   953                           	global	Menu@BTN_input
   954  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
   955                           	global	___wmul@multiplier
   956  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   957                           	global	___lwdiv@divisor
   958  0020                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   959                           	global	___awmod@divisor
   960  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   961  0020                     	ds	1
   962                           	global	spi_transfer@temp
   963  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   964                           	global	ser_getch@c
   965  0021                     ser_getch@c:	; 1 bytes @ 0x1
   966                           	global	ser_putch@c
   967  0021                     ser_putch@c:	; 1 bytes @ 0x1
   968  0021                     	ds	1
   969                           	global	??_adc_read
   970  0022                     ??_adc_read:	; 0 bytes @ 0x2
   971                           	global	??_robo_init
   972  0022                     ??_robo_init:	; 0 bytes @ 0x2
   973                           	global	??_robot_read
   974  0022                     ??_robot_read:	; 0 bytes @ 0x2
   975                           	global	?_RobotDrive
   976  0022                     ?_RobotDrive:	; 0 bytes @ 0x2
   977                           	global	?_robotTurn
   978  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   979                           	global	lcd_write_control@databyte
   980  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   981                           	global	lcd_write_data@databyte
   982  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   983                           	global	spi_transfer@data
   984  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   985                           	global	RobotDrive@speed
   986  0022                     RobotDrive@speed:	; 2 bytes @ 0x2
   987                           	global	robotTurn@angle
   988  0022                     robotTurn@angle:	; 2 bytes @ 0x2
   989                           	global	___wmul@multiplicand
   990  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   991                           	global	___lwdiv@dividend
   992  0022                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   993                           	global	___awmod@dividend
   994  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   995  0022                     	ds	1
   996                           	global	?_rotate
   997  0023                     ?_rotate:	; 0 bytes @ 0x3
   998                           	global	??_lcd_set_cursor
   999  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1000                           	global	??_lcd_init
  1001  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1002                           	global	??_init
  1003  0023                     ??_init:	; 0 bytes @ 0x3
  1004                           	global	lcd_set_cursor@address
  1005  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1006                           	global	rotate@numsteps
  1007  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1008  0023                     	ds	1
  1009                           	global	??_robotTurn
  1010  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1011                           	global	??___wmul
  1012  0024                     ??___wmul:	; 0 bytes @ 0x4
  1013                           	global	??___lwdiv
  1014  0024                     ??___lwdiv:	; 0 bytes @ 0x4
  1015                           	global	??___awmod
  1016  0024                     ??___awmod:	; 0 bytes @ 0x4
  1017                           	global	robot_read@readType
  1018  0024                     robot_read@readType:	; 1 bytes @ 0x4
  1019                           	global	adc_read@adc_value
  1020  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1021                           	global	RobotDrive@radius
  1022  0024                     RobotDrive@radius:	; 2 bytes @ 0x4
  1023                           	global	___wmul@product
  1024  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1025  0024                     	ds	1
  1026                           	global	rotate@direction
  1027  0025                     rotate@direction:	; 1 bytes @ 0x5
  1028                           	global	___awmod@counter
  1029  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1030                           	global	___lwdiv@quotient
  1031  0025                     ___lwdiv@quotient:	; 2 bytes @ 0x5
  1032  0025                     	ds	1
  1033                           	global	??_rotate
  1034  0026                     ??_rotate:	; 0 bytes @ 0x6
  1035                           	global	??_adc_read_channel
  1036  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1037                           	global	??_RobotDrive
  1038  0026                     ??_RobotDrive:	; 0 bytes @ 0x6
  1039                           	global	?_abs
  1040  0026                     ?_abs:	; 2 bytes @ 0x6
  1041                           	global	___awmod@sign
  1042  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1043                           	global	abs@v
  1044  0026                     abs@v:	; 2 bytes @ 0x6
  1045  0026                     	ds	1
  1046                           	global	?_lcd_write_string
  1047  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1048                           	global	adc_read_channel@channel
  1049  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1050                           	global	RobotDrive@speedlowByte
  1051  0027                     RobotDrive@speedlowByte:	; 1 bytes @ 0x7
  1052                           	global	___lwdiv@counter
  1053  0027                     ___lwdiv@counter:	; 1 bytes @ 0x7
  1054                           	global	lcd_write_string@s
  1055  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1056  0027                     	ds	1
  1057                           	global	??_abs
  1058  0028                     ??_abs:	; 0 bytes @ 0x8
  1059                           	global	?_readDistance
  1060  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1061                           	global	?___lwmod
  1062  0028                     ?___lwmod:	; 2 bytes @ 0x8
  1063                           	global	RobotDrive@speedhighByte
  1064  0028                     RobotDrive@speedhighByte:	; 1 bytes @ 0x8
  1065                           	global	rotate@i
  1066  0028                     rotate@i:	; 2 bytes @ 0x8
  1067                           	global	___lwmod@divisor
  1068  0028                     ___lwmod@divisor:	; 2 bytes @ 0x8
  1069  0028                     	ds	1
  1070                           	global	??_lcd_write_string
  1071  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1072                           	global	RobotDrive@radiuslowByte
  1073  0029                     RobotDrive@radiuslowByte:	; 1 bytes @ 0x9
  1074  0029                     	ds	1
  1075                           	global	??_readDistance
  1076  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1077                           	global	RobotDrive@radiushighByte
  1078  002A                     RobotDrive@radiushighByte:	; 1 bytes @ 0xA
  1079                           	global	___lwmod@dividend
  1080  002A                     ___lwmod@dividend:	; 2 bytes @ 0xA
  1081  002A                     	ds	2
  1082                           	global	??___lwmod
  1083  002C                     ??___lwmod:	; 0 bytes @ 0xC
  1084                           	global	readDistance@readVal
  1085  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1086  002C                     	ds	1
  1087                           	global	___lwmod@counter
  1088  002D                     ___lwmod@counter:	; 1 bytes @ 0xD
  1089  002D                     	ds	1
  1090                           	global	??_readAvgDistance
  1091  002E                     ??_readAvgDistance:	; 0 bytes @ 0xE
  1092                           	global	?_sprintf
  1093  002E                     ?_sprintf:	; 2 bytes @ 0xE
  1094                           	global	sprintf@f
  1095  002E                     sprintf@f:	; 1 bytes @ 0xE
  1096  002E                     	ds	5
  1097                           	global	??_sprintf
  1098  0033                     ??_sprintf:	; 0 bytes @ 0x13
  1099  0033                     	ds	1
  1100                           	global	readAvgDistance@fullval
  1101  0034                     readAvgDistance@fullval:	; 2 bytes @ 0x14
  1102  0034                     	ds	2
  1103                           	global	sprintf@ap
  1104  0036                     sprintf@ap:	; 1 bytes @ 0x16
  1105                           	global	readAvgDistance@values
  1106  0036                     readAvgDistance@values:	; 14 bytes @ 0x16
  1107  0036                     	ds	1
  1108                           	global	sprintf@flag
  1109  0037                     sprintf@flag:	; 1 bytes @ 0x17
  1110  0037                     	ds	1
  1111                           	global	sprintf@prec
  1112  0038                     sprintf@prec:	; 1 bytes @ 0x18
  1113  0038                     	ds	1
  1114                           	global	sprintf@_val
  1115  0039                     sprintf@_val:	; 4 bytes @ 0x19
  1116  0039                     	ds	4
  1117                           	global	sprintf@sp
  1118  003D                     sprintf@sp:	; 1 bytes @ 0x1D
  1119  003D                     	ds	1
  1120                           	global	sprintf@c
  1121  003E                     sprintf@c:	; 1 bytes @ 0x1E
  1122  003E                     	ds	1
  1123                           	global	??_UpdateDisplay
  1124  003F                     ??_UpdateDisplay:	; 0 bytes @ 0x1F
  1125  003F                     	ds	4
  1126                           	global	UpdateDisplay@LCDOutput
  1127  0043                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x23
  1128  0043                     	ds	1
  1129                           	global	readAvgDistance@tempIR
  1130  0044                     readAvgDistance@tempIR:	; 2 bytes @ 0x24
  1131  0044                     	ds	2
  1132                           	global	readAvgDistance@j
  1133  0046                     readAvgDistance@j:	; 1 bytes @ 0x26
  1134  0046                     	ds	1
  1135                           	global	readAvgDistance@i
  1136  0047                     readAvgDistance@i:	; 1 bytes @ 0x27
  1137  0047                     	ds	12
  1138                           	global	??_calibrateIR
  1139  0053                     ??_calibrateIR:	; 0 bytes @ 0x33
  1140                           	global	?_robotTurnSpeed
  1141  0053                     ?_robotTurnSpeed:	; 0 bytes @ 0x33
  1142                           	global	?_robotMoveSpeed
  1143  0053                     ?_robotMoveSpeed:	; 0 bytes @ 0x33
  1144                           	global	?_robotFollow
  1145  0053                     ?_robotFollow:	; 0 bytes @ 0x33
  1146                           	global	??_ChargeMode
  1147  0053                     ??_ChargeMode:	; 0 bytes @ 0x33
  1148                           	global	robotFollow@distance
  1149  0053                     robotFollow@distance:	; 2 bytes @ 0x33
  1150                           	global	robotMoveSpeed@distance
  1151  0053                     robotMoveSpeed@distance:	; 2 bytes @ 0x33
  1152                           	global	robotTurnSpeed@angle
  1153  0053                     robotTurnSpeed@angle:	; 2 bytes @ 0x33
  1154  0053                     	ds	2
  1155                           	global	robotFollow@speed
  1156  0055                     robotFollow@speed:	; 2 bytes @ 0x35
  1157                           	global	robotMoveSpeed@speed
  1158  0055                     robotMoveSpeed@speed:	; 2 bytes @ 0x35
  1159                           	global	robotTurnSpeed@speed
  1160  0055                     robotTurnSpeed@speed:	; 2 bytes @ 0x35
  1161  0055                     	ds	2
  1162                           	global	??_robotTurnSpeed
  1163  0057                     ??_robotTurnSpeed:	; 0 bytes @ 0x37
  1164                           	global	??_robotMoveSpeed
  1165  0057                     ??_robotMoveSpeed:	; 0 bytes @ 0x37
  1166                           	global	robotFollow@AdcTarget
  1167  0057                     robotFollow@AdcTarget:	; 2 bytes @ 0x37
  1168  0057                     	ds	2
  1169                           	global	??_robotFollow
  1170  0059                     ??_robotFollow:	; 0 bytes @ 0x39
  1171  0059                     	ds	1
  1172                           	global	robotMoveSpeed@temp1
  1173  005A                     robotMoveSpeed@temp1:	; 2 bytes @ 0x3A
  1174                           	global	robotTurnSpeed@temp1
  1175  005A                     robotTurnSpeed@temp1:	; 2 bytes @ 0x3A
  1176  005A                     	ds	2
  1177                           	global	robotFollow@temp1
  1178  005C                     robotFollow@temp1:	; 2 bytes @ 0x3C
  1179  005C                     	ds	2
  1180                           	global	??_main
  1181  005E                     ??_main:	; 0 bytes @ 0x3E
  1182  005E                     	ds	3
  1183                           	global	main@shortwall
  1184  0061                     main@shortwall:	; 2 bytes @ 0x41
  1185  0061                     	ds	2
  1186                           	global	main@a
  1187  0063                     main@a:	; 2 bytes @ 0x43
  1188  0063                     	ds	2
  1189                           	global	main@choice
  1190  0065                     main@choice:	; 1 bytes @ 0x45
  1191  0065                     	ds	1
  1192 ;;Data sizes: Strings 147, constant 10, data 13, bss 98, persistent 0 stack 0
  1193 ;;Auto spaces:   Size  Autos    Used
  1194 ;; COMMON          14     11      14
  1195 ;; BANK0           80     70      80
  1196 ;; BANK1           80      0      68
  1197 ;; BANK3           96      0      32
  1198 ;; BANK2           96      0       0
  1199                           
  1200 ;;
  1201 ;; Pointer list with targets:
  1202                           
  1203 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1204 ;;
  1205 ;; ?_abs	int  size(1) Largest target is 0
  1206 ;;
  1207 ;; ?___awmod	int  size(1) Largest target is 0
  1208 ;;
  1209 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1210 ;;
  1211 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1212 ;;
  1213 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1214 ;;
  1215 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1216 ;;
  1217 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1218 ;;
  1219 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1220 ;;		 -> STR_13(CODE[13]), 
  1221 ;;
  1222 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1223 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1224 ;;
  1225 ;; ?_sprintf	int  size(1) Largest target is 0
  1226 ;;
  1227 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1228 ;;		 -> ?_sprintf(BANK0[2]), 
  1229 ;;
  1230 ;; S8211$_cp	PTR const unsigned char  size(1) Largest target is 0
  1231 ;;
  1232 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1233 ;;
  1234 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1235 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1236 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1237 ;;
  1238 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1239 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1240 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1241 ;;
  1242 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1243 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1244 ;;		 -> STR_15(CODE[4]), STR_14(CODE[16]), UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), 
  1245 ;;		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
  1246 ;;		 -> STR_7(CODE[4]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
  1247 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
  1248 ;;
  1249                           
  1250                           
  1251 ;;
  1252 ;; Critical Paths under _main in COMMON
  1253 ;;
  1254 ;;   None.
  1255 ;;
  1256 ;; Critical Paths under _isr1 in COMMON
  1257 ;;
  1258 ;;   _isr1->i1___lwmod
  1259 ;;   _ReadButtons->_Debounce
  1260 ;;
  1261 ;; Critical Paths under _main in BANK0
  1262 ;;
  1263 ;;   _main->_robotFollow
  1264 ;;   _ChargeMode->_UpdateDisplay
  1265 ;;   _robotFollow->_UpdateDisplay
  1266 ;;   _robotMoveSpeed->_UpdateDisplay
  1267 ;;   _robotTurnSpeed->_UpdateDisplay
  1268 ;;   _calibrateIR->_UpdateDisplay
  1269 ;;   _UpdateDisplay->_sprintf
  1270 ;;   _readAvgDistance->_readDistance
  1271 ;;   _readDistance->_adc_read_channel
  1272 ;;   _robot_read->_ser_putch
  1273 ;;   _robot_read->_ser_getch
  1274 ;;   _lcd_init->_lcd_write_control
  1275 ;;   _lcd_write_string->___awmod
  1276 ;;   _lcd_set_cursor->_lcd_write_control
  1277 ;;   _abs->___wmul
  1278 ;;   _robotTurn->_ser_putch
  1279 ;;   _RobotDrive->_ser_putch
  1280 ;;   _sprintf->___lwmod
  1281 ;;   _rotate->_spi_transfer
  1282 ;;   _robo_init->_ser_putch
  1283 ;;   _adc_read_channel->_adc_read
  1284 ;;   ___lwmod->___lwdiv
  1285 ;;
  1286 ;; Critical Paths under _isr1 in BANK0
  1287 ;;
  1288 ;;   None.
  1289 ;;
  1290 ;; Critical Paths under _main in BANK1
  1291 ;;
  1292 ;;   None.
  1293 ;;
  1294 ;; Critical Paths under _isr1 in BANK1
  1295 ;;
  1296 ;;   None.
  1297 ;;
  1298 ;; Critical Paths under _main in BANK3
  1299 ;;
  1300 ;;   None.
  1301 ;;
  1302 ;; Critical Paths under _isr1 in BANK3
  1303 ;;
  1304 ;;   None.
  1305 ;;
  1306 ;; Critical Paths under _main in BANK2
  1307 ;;
  1308 ;;   None.
  1309 ;;
  1310 ;; Critical Paths under _isr1 in BANK2
  1311 ;;
  1312 ;;   None.
  1313                           
  1314 ;;
  1315 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1316 ;;
  1317                           
  1318 ;;
  1319 ;;Call Graph Tables:
  1320 ;;
  1321 ;; ---------------------------------------------------------------------------------
  1322 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1323 ;; ---------------------------------------------------------------------------------
  1324 ;; (0) _main                                                 8     8      0   11027
  1325 ;;                                             62 BANK0      8     8      0
  1326 ;;                               _init
  1327 ;;                         _robot_read
  1328 ;;                    _readAvgDistance
  1329 ;;                      _UpdateDisplay
  1330 ;;                               _Menu
  1331 ;;                        _calibrateIR
  1332 ;;                     _robotTurnSpeed
  1333 ;;                     _robotMoveSpeed
  1334 ;;                        _robotFollow
  1335 ;;                         _ChargeMode
  1336 ;; ---------------------------------------------------------------------------------
  1337 ;; (1) _ChargeMode                                           1     1      0    1305
  1338 ;;                                             51 BANK0      1     1      0
  1339 ;;                          _ser_putch
  1340 ;;                      _UpdateDisplay
  1341 ;; ---------------------------------------------------------------------------------
  1342 ;; (1) _robotFollow                                         11     5      6    2660
  1343 ;;                                             51 BANK0     11     5      6
  1344 ;;                         _RobotDrive
  1345 ;;                    _readAvgDistance
  1346 ;;                         _robot_read
  1347 ;;                      _UpdateDisplay
  1348 ;;                                _abs
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (1) _robotMoveSpeed                                       9     5      4    1867
  1351 ;;                                             51 BANK0      9     5      4
  1352 ;;                         _RobotDrive
  1353 ;;                         _robot_read
  1354 ;;                      _UpdateDisplay
  1355 ;;                                _abs
  1356 ;; ---------------------------------------------------------------------------------
  1357 ;; (1) _robotTurnSpeed                                       9     5      4    1710
  1358 ;;                                             51 BANK0      9     5      4
  1359 ;;                          _robotTurn
  1360 ;;                         _robot_read
  1361 ;;                      _UpdateDisplay
  1362 ;;                                _abs
  1363 ;; ---------------------------------------------------------------------------------
  1364 ;; (1) _calibrateIR                                          0     0      0    1381
  1365 ;;                             _rotate
  1366 ;;                      _UpdateDisplay
  1367 ;; ---------------------------------------------------------------------------------
  1368 ;; (2) _UpdateDisplay                                       20    20      0    1283
  1369 ;;                                             31 BANK0     20    20      0
  1370 ;;                  _lcd_write_control
  1371 ;;                            _sprintf
  1372 ;;                     _lcd_set_cursor
  1373 ;;                   _lcd_write_string
  1374 ;;                            ___awmod
  1375 ;; ---------------------------------------------------------------------------------
  1376 ;; (2) _readAvgDistance                                     26    26      0     595
  1377 ;;                                             14 BANK0     26    26      0
  1378 ;;                       _readDistance
  1379 ;; ---------------------------------------------------------------------------------
  1380 ;; (1) _init                                                 1     1      0      44
  1381 ;;                                              3 BANK0      1     1      0
  1382 ;;                           _ser_init
  1383 ;;                           _init_adc
  1384 ;;                           _lcd_init
  1385 ;;                          _robo_init
  1386 ;; ---------------------------------------------------------------------------------
  1387 ;; (3) _readDistance                                         6     4      2      69
  1388 ;;                                              8 BANK0      6     4      2
  1389 ;;                   _adc_read_channel
  1390 ;; ---------------------------------------------------------------------------------
  1391 ;; (2) _robot_read                                           3     3      0     111
  1392 ;;                                              2 BANK0      3     3      0
  1393 ;;                          _ser_putch
  1394 ;;                          _ser_getch
  1395 ;; ---------------------------------------------------------------------------------
  1396 ;; (2) _lcd_init                                             0     0      0      22
  1397 ;;                  _lcd_write_control
  1398 ;; ---------------------------------------------------------------------------------
  1399 ;; (3) _lcd_write_string                                     2     0      2      67
  1400 ;;                                              7 BANK0      2     0      2
  1401 ;;                     _lcd_write_data
  1402 ;;                            ___awmod (ARG)
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1405 ;;                                              3 BANK0      1     1      0
  1406 ;;                  _lcd_write_control
  1407 ;; ---------------------------------------------------------------------------------
  1408 ;; (2) _abs                                                  4     2      2     158
  1409 ;;                                              6 BANK0      4     2      2
  1410 ;;                             ___wmul
  1411 ;; ---------------------------------------------------------------------------------
  1412 ;; (2) _robotTurn                                            2     0      2      66
  1413 ;;                                              2 BANK0      2     0      2
  1414 ;;                          _ser_putch
  1415 ;; ---------------------------------------------------------------------------------
  1416 ;; (2) _RobotDrive                                           9     5      4     202
  1417 ;;                                              2 BANK0      9     5      4
  1418 ;;                          _ser_putch
  1419 ;; ---------------------------------------------------------------------------------
  1420 ;; (3) _ser_getch                                            2     2      0      23
  1421 ;;                                              0 BANK0      2     2      0
  1422 ;;                           _ser_isrx
  1423 ;; ---------------------------------------------------------------------------------
  1424 ;; (3) _sprintf                                             17    12      5     798
  1425 ;;                                             14 BANK0     17    12      5
  1426 ;;                            ___lwdiv
  1427 ;;                            ___lwmod
  1428 ;; ---------------------------------------------------------------------------------
  1429 ;; (2) _rotate                                               7     4      3      98
  1430 ;;                                              3 BANK0      7     4      3
  1431 ;;                       _spi_transfer
  1432 ;; ---------------------------------------------------------------------------------
  1433 ;; (2) _robo_init                                            0     0      0      22
  1434 ;;                          _ser_putch
  1435 ;; ---------------------------------------------------------------------------------
  1436 ;; (4) _lcd_write_data                                       3     3      0      22
  1437 ;;                                              0 BANK0      3     3      0
  1438 ;; ---------------------------------------------------------------------------------
  1439 ;; (4) _lcd_write_control                                    3     3      0      22
  1440 ;;                                              0 BANK0      3     3      0
  1441 ;; ---------------------------------------------------------------------------------
  1442 ;; (2) _init_adc                                             1     1      0       0
  1443 ;;                                              0 BANK0      1     1      0
  1444 ;; ---------------------------------------------------------------------------------
  1445 ;; (4) _adc_read_channel                                     2     2      0      46
  1446 ;;                                              6 BANK0      2     2      0
  1447 ;;                           _adc_read
  1448 ;; ---------------------------------------------------------------------------------
  1449 ;; (3) ___awmod                                              7     3      4     296
  1450 ;;                                              0 BANK0      7     3      4
  1451 ;; ---------------------------------------------------------------------------------
  1452 ;; (4) ___lwmod                                              6     2      4     159
  1453 ;;                                              8 BANK0      6     2      4
  1454 ;;                            ___lwdiv (ARG)
  1455 ;; ---------------------------------------------------------------------------------
  1456 ;; (4) ___lwdiv                                              8     4      4     162
  1457 ;;                                              0 BANK0      8     4      4
  1458 ;; ---------------------------------------------------------------------------------
  1459 ;; (3) ___wmul                                               6     2      4      92
  1460 ;;                                              0 BANK0      6     2      4
  1461 ;; ---------------------------------------------------------------------------------
  1462 ;; (4) _ser_isrx                                             0     0      0       0
  1463 ;; ---------------------------------------------------------------------------------
  1464 ;; (3) _spi_transfer                                         3     3      0      30
  1465 ;;                                              0 BANK0      3     3      0
  1466 ;; ---------------------------------------------------------------------------------
  1467 ;; (2) _ser_putch                                            2     2      0      22
  1468 ;;                                              0 BANK0      2     2      0
  1469 ;; ---------------------------------------------------------------------------------
  1470 ;; (1) _Menu                                                 1     1      0      22
  1471 ;;                                              0 BANK0      1     1      0
  1472 ;; ---------------------------------------------------------------------------------
  1473 ;; (2) _ser_init                                             1     1      0       0
  1474 ;;                                              0 BANK0      1     1      0
  1475 ;; ---------------------------------------------------------------------------------
  1476 ;; (5) _adc_read                                             6     4      2      24
  1477 ;;                                              0 BANK0      6     4      2
  1478 ;; ---------------------------------------------------------------------------------
  1479 ;; Estimated maximum stack depth 5
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1482 ;; ---------------------------------------------------------------------------------
  1483 ;; (6) _isr1                                                 5     5      0     521
  1484 ;;                                              6 COMMON     5     5      0
  1485 ;;                          i1___lwmod
  1486 ;;                        _ReadButtons
  1487 ;; ---------------------------------------------------------------------------------
  1488 ;; (7) _ReadButtons                                          0     0      0       0
  1489 ;;                           _Debounce
  1490 ;; ---------------------------------------------------------------------------------
  1491 ;; (7) i1___lwmod                                            6     2      4     521
  1492 ;;                                              0 COMMON     6     2      4
  1493 ;; ---------------------------------------------------------------------------------
  1494 ;; (8) _Debounce                                             1     1      0       0
  1495 ;;                                              0 COMMON     1     1      0
  1496 ;; ---------------------------------------------------------------------------------
  1497 ;; Estimated maximum stack depth 8
  1498 ;; ---------------------------------------------------------------------------------
  1499                           
  1500 ;; Call Graph Graphs:
  1501                           
  1502 ;; _main (ROOT)
  1503 ;;   _init
  1504 ;;     _ser_init
  1505 ;;     _init_adc
  1506 ;;     _lcd_init
  1507 ;;       _lcd_write_control
  1508 ;;     _robo_init
  1509 ;;       _ser_putch
  1510 ;;   _robot_read
  1511 ;;     _ser_putch
  1512 ;;     _ser_getch
  1513 ;;       _ser_isrx
  1514 ;;   _readAvgDistance
  1515 ;;     _readDistance
  1516 ;;       _adc_read_channel
  1517 ;;         _adc_read
  1518 ;;   _UpdateDisplay
  1519 ;;     _lcd_write_control
  1520 ;;     _sprintf
  1521 ;;       ___lwdiv
  1522 ;;       ___lwmod
  1523 ;;         ___lwdiv (ARG)
  1524 ;;     _lcd_set_cursor
  1525 ;;       _lcd_write_control
  1526 ;;     _lcd_write_string
  1527 ;;       _lcd_write_data
  1528 ;;       ___awmod (ARG)
  1529 ;;     ___awmod
  1530 ;;   _Menu
  1531 ;;   _calibrateIR
  1532 ;;     _rotate
  1533 ;;       _spi_transfer
  1534 ;;     _UpdateDisplay
  1535 ;;       _lcd_write_control
  1536 ;;       _sprintf
  1537 ;;         ___lwdiv
  1538 ;;         ___lwmod
  1539 ;;           ___lwdiv (ARG)
  1540 ;;       _lcd_set_cursor
  1541 ;;         _lcd_write_control
  1542 ;;       _lcd_write_string
  1543 ;;         _lcd_write_data
  1544 ;;         ___awmod (ARG)
  1545 ;;       ___awmod
  1546 ;;   _robotTurnSpeed
  1547 ;;     _robotTurn
  1548 ;;       _ser_putch
  1549 ;;     _robot_read
  1550 ;;       _ser_putch
  1551 ;;       _ser_getch
  1552 ;;         _ser_isrx
  1553 ;;     _UpdateDisplay
  1554 ;;       _lcd_write_control
  1555 ;;       _sprintf
  1556 ;;         ___lwdiv
  1557 ;;         ___lwmod
  1558 ;;           ___lwdiv (ARG)
  1559 ;;       _lcd_set_cursor
  1560 ;;         _lcd_write_control
  1561 ;;       _lcd_write_string
  1562 ;;         _lcd_write_data
  1563 ;;         ___awmod (ARG)
  1564 ;;       ___awmod
  1565 ;;     _abs
  1566 ;;       ___wmul
  1567 ;;   _robotMoveSpeed
  1568 ;;     _RobotDrive
  1569 ;;       _ser_putch
  1570 ;;     _robot_read
  1571 ;;       _ser_putch
  1572 ;;       _ser_getch
  1573 ;;         _ser_isrx
  1574 ;;     _UpdateDisplay
  1575 ;;       _lcd_write_control
  1576 ;;       _sprintf
  1577 ;;         ___lwdiv
  1578 ;;         ___lwmod
  1579 ;;           ___lwdiv (ARG)
  1580 ;;       _lcd_set_cursor
  1581 ;;         _lcd_write_control
  1582 ;;       _lcd_write_string
  1583 ;;         _lcd_write_data
  1584 ;;         ___awmod (ARG)
  1585 ;;       ___awmod
  1586 ;;     _abs
  1587 ;;       ___wmul
  1588 ;;   _robotFollow
  1589 ;;     _RobotDrive
  1590 ;;       _ser_putch
  1591 ;;     _readAvgDistance
  1592 ;;       _readDistance
  1593 ;;         _adc_read_channel
  1594 ;;           _adc_read
  1595 ;;     _robot_read
  1596 ;;       _ser_putch
  1597 ;;       _ser_getch
  1598 ;;         _ser_isrx
  1599 ;;     _UpdateDisplay
  1600 ;;       _lcd_write_control
  1601 ;;       _sprintf
  1602 ;;         ___lwdiv
  1603 ;;         ___lwmod
  1604 ;;           ___lwdiv (ARG)
  1605 ;;       _lcd_set_cursor
  1606 ;;         _lcd_write_control
  1607 ;;       _lcd_write_string
  1608 ;;         _lcd_write_data
  1609 ;;         ___awmod (ARG)
  1610 ;;       ___awmod
  1611 ;;     _abs
  1612 ;;       ___wmul
  1613 ;;   _ChargeMode
  1614 ;;     _ser_putch
  1615 ;;     _UpdateDisplay
  1616 ;;       _lcd_write_control
  1617 ;;       _sprintf
  1618 ;;         ___lwdiv
  1619 ;;         ___lwmod
  1620 ;;           ___lwdiv (ARG)
  1621 ;;       _lcd_set_cursor
  1622 ;;         _lcd_write_control
  1623 ;;       _lcd_write_string
  1624 ;;         _lcd_write_data
  1625 ;;         ___awmod (ARG)
  1626 ;;       ___awmod
  1627 ;;
  1628 ;; _isr1 (ROOT)
  1629 ;;   i1___lwmod
  1630 ;;   _ReadButtons
  1631 ;;     _Debounce
  1632 ;;
  1633                           
  1634 ;; Address spaces:
  1635                           
  1636 ;;Name               Size   Autos  Total    Cost      Usage
  1637 ;;BANK3               60      0      20       9       33.3%
  1638 ;;BITBANK3            60      0       0       8        0.0%
  1639 ;;SFR3                 0      0       0       4        0.0%
  1640 ;;BITSFR3              0      0       0       4        0.0%
  1641 ;;BANK2               60      0       0      11        0.0%
  1642 ;;BITBANK2            60      0       0      10        0.0%
  1643 ;;SFR2                 0      0       0       5        0.0%
  1644 ;;BITSFR2              0      0       0       5        0.0%
  1645 ;;SFR1                 0      0       0       2        0.0%
  1646 ;;BITSFR1              0      0       0       2        0.0%
  1647 ;;BANK1               50      0      44       7       85.0%
  1648 ;;BITBANK1            50      0       0       6        0.0%
  1649 ;;CODE                 0      0       0       0        0.0%
  1650 ;;DATA                 0      0      CD      12        0.0%
  1651 ;;ABS                  0      0      C2       3        0.0%
  1652 ;;NULL                 0      0       0       0        0.0%
  1653 ;;STACK                0      0       B       2        0.0%
  1654 ;;BANK0               50     46      50       5      100.0%
  1655 ;;BITBANK0            50      0       0       4        0.0%
  1656 ;;SFR0                 0      0       0       1        0.0%
  1657 ;;BITSFR0              0      0       0       1        0.0%
  1658 ;;COMMON               E      B       E       1      100.0%
  1659 ;;BITCOMMON            E      0       2       0       14.3%
  1660 ;;EEDATA             100      0       0       0        0.0%
  1661                           
  1662                           	global	_main
  1663                           psect	maintext,global,class=CODE,delta=2
  1664                           global __pmaintext
  1665  0015                     __pmaintext:
  1666                           
  1667 ;; *************** function _main *****************
  1668 ;; Defined at:
  1669 ;;		line 172 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  a               2   67[BANK0 ] int 
  1674 ;;  shortwall       2   65[BANK0 ] int 
  1675 ;;  choice          1   69[BANK0 ] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;		None               void
  1678 ;; Registers used:
  1679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 17F/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         0       5       0       0       0
  1687 ;;      Temps:          0       3       0       0       0
  1688 ;;      Totals:         0       8       0       0       0
  1689 ;;Total ram usage:        8 bytes
  1690 ;; Hardware stack levels required when called:    8
  1691 ;; This function calls:
  1692 ;;		_init
  1693 ;;		_robot_read
  1694 ;;		_readAvgDistance
  1695 ;;		_UpdateDisplay
  1696 ;;		_Menu
  1697 ;;		_calibrateIR
  1698 ;;		_robotTurnSpeed
  1699 ;;		_robotMoveSpeed
  1700 ;;		_robotFollow
  1701 ;;		_ChargeMode
  1702 ;; This function is called by:
  1703 ;;		Startup code after reset
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           psect	maintext
  1707                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1708                           	line	172
  1709                           	global	__size_of_main
  1710  0219                     	__size_of_main	equ	__end_of_main-_main
  1711                           	
  1712  0015                     _main:	
  1713                           	opt	stack 0
  1714                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1715                           	line	173
  1716                           	
  1717  0015                     l11388:	
  1718                           ;Main.c: 173: unsigned char choice = 255;
  1719  0015  30FF               	movlw	(0FFh)
  1720  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  1721  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  1722  0018  00DE               	movwf	(??_main+0)+0
  1723  0019  085E               	movf	(??_main+0)+0,w
  1724  001A  00E5               	movwf	(main@choice)
  1725                           	line	174
  1726                           	
  1727  001B                     l11390:	
  1728                           ;Main.c: 174: int shortwall = 0;
  1729  001B  01E1               	clrf	(main@shortwall)
  1730  001C  01E2               	clrf	(main@shortwall+1)
  1731                           	line	177
  1732                           	
  1733  001D                     l11392:	
  1734                           ;Main.c: 177: init();
  1735  001D  120A  158A  20D1   	fcall	_init
              120A  118A         
  1736  0022  2823               	goto	l11394
  1737                           	line	180
  1738                           ;Main.c: 180: while(1)
  1739                           	
  1740  0023                     l2234:	
  1741                           	line	182
  1742                           	
  1743  0023                     l11394:	
  1744                           ;Main.c: 181: {
  1745                           ;Main.c: 182: if (RTC_FLAG_250MS == 1)
  1746  0023  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1747  0024  2826               	goto	u4991
  1748  0025  2827               	goto	u4990
  1749  0026                     u4991:
  1750  0026  2839               	goto	l11402
  1751  0027                     u4990:
  1752                           	line	184
  1753                           	
  1754  0027                     l11396:	
  1755                           ;Main.c: 183: {
  1756                           ;Main.c: 184: RTC_FLAG_250MS = 0;
  1757  0027  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1758                           	line	185
  1759                           	
  1760  0028                     l11398:	
  1761                           ;Main.c: 185: robot_read(2);
  1762  0028  3002               	movlw	(02h)
  1763  0029  120A  118A  23D1   	fcall	_robot_read
              120A  118A         
  1764                           	line	186
  1765                           ;Main.c: 186: readAvgDistance();
  1766  002E  120A  158A  266A   	fcall	_readAvgDistance
              120A  118A         
  1767                           	line	187
  1768                           	
  1769  0033                     l11400:	
  1770                           ;Main.c: 187: UpdateDisplay();
  1771  0033  120A  118A  2533   	fcall	_UpdateDisplay
              120A  118A         
  1772  0038  2839               	goto	l11402
  1773                           	line	188
  1774                           	
  1775  0039                     l2235:	
  1776                           	line	189
  1777                           	
  1778  0039                     l11402:	
  1779                           ;Main.c: 188: }
  1780                           ;Main.c: 189: if (buttonPressed)
  1781  0039  087D               	movf	(_buttonPressed),w	;volatile
  1782  003A  1D03               	skipz
  1783  003B  283D               	goto	u5000
  1784  003C  2A0D               	goto	l11470
  1785  003D                     u5000:
  1786                           	line	192
  1787                           	
  1788  003D                     l11404:	
  1789                           ;Main.c: 191: {
  1790                           ;Main.c: 192: choice = Menu(buttonPressed);
  1791  003D  087D               	movf	(_buttonPressed),w	;volatile
  1792  003E  120A  158A  2208   	fcall	_Menu
              120A  118A         
  1793  0043  1283               	bcf	status, 5	;RP0=0, select bank0
  1794  0044  1303               	bcf	status, 6	;RP1=0, select bank0
  1795  0045  00DE               	movwf	(??_main+0)+0
  1796  0046  085E               	movf	(??_main+0)+0,w
  1797  0047  00E5               	movwf	(main@choice)
  1798                           	line	193
  1799                           	
  1800  0048                     l11406:	
  1801                           ;Main.c: 193: buttonPressed = 0;
  1802  0048  01FD               	clrf	(_buttonPressed)	;volatile
  1803  0049  2A0D               	goto	l11470
  1804                           	line	194
  1805                           	
  1806  004A                     l2236:	
  1807                           	line	198
  1808                           ;Main.c: 194: }
  1809                           ;Main.c: 198: switch (choice)
  1810  004A  2A0D               	goto	l11470
  1811                           	line	200
  1812                           ;Main.c: 199: {
  1813                           ;Main.c: 200: case 0:
  1814                           	
  1815  004B                     l2238:	
  1816                           	line	201
  1817                           	
  1818  004B                     l11408:	
  1819                           ;Main.c: 201: calibrateIR();
  1820  004B  120A  158A  23B8   	fcall	_calibrateIR
              120A  118A         
  1821                           	line	202
  1822                           ;Main.c: 202: break;
  1823  0050  2A23               	goto	l11472
  1824                           	line	203
  1825                           ;Main.c: 203: case 1:
  1826                           	
  1827  0051                     l2240:	
  1828                           	line	209
  1829                           ;Main.c: 209: break;
  1830  0051  2A23               	goto	l11472
  1831                           	line	210
  1832                           ;Main.c: 210: case 2:
  1833                           	
  1834  0052                     l2241:	
  1835                           	line	215
  1836                           	
  1837  0052                     l11410:	
  1838                           ;Main.c: 215: robotTurnSpeed(-90,400);
  1839  0052  30A6               	movlw	low(-90)
  1840  0053  1283               	bcf	status, 5	;RP0=0, select bank0
  1841  0054  1303               	bcf	status, 6	;RP1=0, select bank0
  1842  0055  00D3               	movwf	(?_robotTurnSpeed)
  1843  0056  30FF               	movlw	high(-90)
  1844  0057  00D4               	movwf	((?_robotTurnSpeed))+1
  1845  0058  3090               	movlw	low(0190h)
  1846  0059  00D5               	movwf	0+(?_robotTurnSpeed)+02h
  1847  005A  3001               	movlw	high(0190h)
  1848  005B  00D6               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  1849  005C  120A  158A  2516   	fcall	_robotTurnSpeed
              120A  118A         
  1850                           	line	216
  1851                           	
  1852  0061                     l11412:	
  1853                           ;Main.c: 216: readAvgDistance();
  1854  0061  120A  158A  266A   	fcall	_readAvgDistance
              120A  118A         
  1855                           	line	217
  1856                           	
  1857  0066                     l11414:	
  1858                           ;Main.c: 217: int a = adcVal;
  1859  0066  1283               	bcf	status, 5	;RP0=0, select bank0
  1860  0067  1303               	bcf	status, 6	;RP1=0, select bank0
  1861  0068  0867               	movf	(_adcVal+1),w	;volatile
  1862  0069  01E4               	clrf	(main@a+1)	;volatile
  1863  006A  07E4               	addwf	(main@a+1)	;volatile
  1864  006B  0866               	movf	(_adcVal),w	;volatile
  1865  006C  01E3               	clrf	(main@a)	;volatile
  1866  006D  07E3               	addwf	(main@a)	;volatile
  1867                           
  1868                           	line	218
  1869                           	
  1870  006E                     l11416:	
  1871                           ;Main.c: 218: robotMoveSpeed(1500 - a,400);
  1872  006E  0963               	comf	(main@a),w
  1873  006F  00DE               	movwf	(??_main+0)+0
  1874  0070  0964               	comf	(main@a+1),w
  1875  0071  00DF               	movwf	((??_main+0)+0+1)
  1876  0072  0ADE               	incf	(??_main+0)+0,f
  1877  0073  1903               	skipnz
  1878  0074  0ADF               	incf	((??_main+0)+0+1),f
  1879  0075  085E               	movf	0+(??_main+0)+0,w
  1880  0076  3EDC               	addlw	low(05DCh)
  1881  0077  00D3               	movwf	(?_robotMoveSpeed)
  1882  0078  085F               	movf	1+(??_main+0)+0,w
  1883  0079  1803               	skipnc
  1884  007A  3E01               	addlw	1
  1885  007B  3E05               	addlw	high(05DCh)
  1886  007C  00D4               	movwf	1+(?_robotMoveSpeed)
  1887  007D  3090               	movlw	low(0190h)
  1888  007E  00D5               	movwf	0+(?_robotMoveSpeed)+02h
  1889  007F  3001               	movlw	high(0190h)
  1890  0080  00D6               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  1891  0081  120A  158A  271B   	fcall	_robotMoveSpeed
              120A  118A         
  1892                           	line	220
  1893                           	
  1894  0086                     l11418:	
  1895                           ;Main.c: 220: robotTurnSpeed(-90,400);
  1896  0086  30A6               	movlw	low(-90)
  1897  0087  1283               	bcf	status, 5	;RP0=0, select bank0
  1898  0088  1303               	bcf	status, 6	;RP1=0, select bank0
  1899  0089  00D3               	movwf	(?_robotTurnSpeed)
  1900  008A  30FF               	movlw	high(-90)
  1901  008B  00D4               	movwf	((?_robotTurnSpeed))+1
  1902  008C  3090               	movlw	low(0190h)
  1903  008D  00D5               	movwf	0+(?_robotTurnSpeed)+02h
  1904  008E  3001               	movlw	high(0190h)
  1905  008F  00D6               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  1906  0090  120A  158A  2516   	fcall	_robotTurnSpeed
              120A  118A         
  1907                           	line	221
  1908                           	
  1909  0095                     l11420:	
  1910                           ;Main.c: 221: robotMoveSpeed(4000,400);
  1911  0095  30A0               	movlw	low(0FA0h)
  1912  0096  1283               	bcf	status, 5	;RP0=0, select bank0
  1913  0097  1303               	bcf	status, 6	;RP1=0, select bank0
  1914  0098  00D3               	movwf	(?_robotMoveSpeed)
  1915  0099  300F               	movlw	high(0FA0h)
  1916  009A  00D4               	movwf	((?_robotMoveSpeed))+1
  1917  009B  3090               	movlw	low(0190h)
  1918  009C  00D5               	movwf	0+(?_robotMoveSpeed)+02h
  1919  009D  3001               	movlw	high(0190h)
  1920  009E  00D6               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  1921  009F  120A  158A  271B   	fcall	_robotMoveSpeed
              120A  118A         
  1922                           	line	223
  1923                           	
  1924  00A4                     l11422:	
  1925                           ;Main.c: 223: robotTurnSpeed(90,400);
  1926  00A4  305A               	movlw	low(05Ah)
  1927  00A5  1283               	bcf	status, 5	;RP0=0, select bank0
  1928  00A6  1303               	bcf	status, 6	;RP1=0, select bank0
  1929  00A7  00D3               	movwf	(?_robotTurnSpeed)
  1930  00A8  3000               	movlw	high(05Ah)
  1931  00A9  00D4               	movwf	((?_robotTurnSpeed))+1
  1932  00AA  3090               	movlw	low(0190h)
  1933  00AB  00D5               	movwf	0+(?_robotTurnSpeed)+02h
  1934  00AC  3001               	movlw	high(0190h)
  1935  00AD  00D6               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  1936  00AE  120A  158A  2516   	fcall	_robotTurnSpeed
              120A  118A         
  1937                           	line	224
  1938                           	
  1939  00B3                     l11424:	
  1940                           ;Main.c: 224: robotMoveSpeed(1000,400);
  1941  00B3  30E8               	movlw	low(03E8h)
  1942  00B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1943  00B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1944  00B6  00D3               	movwf	(?_robotMoveSpeed)
  1945  00B7  3003               	movlw	high(03E8h)
  1946  00B8  00D4               	movwf	((?_robotMoveSpeed))+1
  1947  00B9  3090               	movlw	low(0190h)
  1948  00BA  00D5               	movwf	0+(?_robotMoveSpeed)+02h
  1949  00BB  3001               	movlw	high(0190h)
  1950  00BC  00D6               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  1951  00BD  120A  158A  271B   	fcall	_robotMoveSpeed
              120A  118A         
  1952                           	line	225
  1953                           	
  1954  00C2                     l11426:	
  1955                           ;Main.c: 225: robotTurnSpeed(90,400);
  1956  00C2  305A               	movlw	low(05Ah)
  1957  00C3  1283               	bcf	status, 5	;RP0=0, select bank0
  1958  00C4  1303               	bcf	status, 6	;RP1=0, select bank0
  1959  00C5  00D3               	movwf	(?_robotTurnSpeed)
  1960  00C6  3000               	movlw	high(05Ah)
  1961  00C7  00D4               	movwf	((?_robotTurnSpeed))+1
  1962  00C8  3090               	movlw	low(0190h)
  1963  00C9  00D5               	movwf	0+(?_robotTurnSpeed)+02h
  1964  00CA  3001               	movlw	high(0190h)
  1965  00CB  00D6               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  1966  00CC  120A  158A  2516   	fcall	_robotTurnSpeed
              120A  118A         
  1967                           	line	226
  1968                           	
  1969  00D1                     l11428:	
  1970                           ;Main.c: 226: robotMoveSpeed(1000,400);
  1971  00D1  30E8               	movlw	low(03E8h)
  1972  00D2  1283               	bcf	status, 5	;RP0=0, select bank0
  1973  00D3  1303               	bcf	status, 6	;RP1=0, select bank0
  1974  00D4  00D3               	movwf	(?_robotMoveSpeed)
  1975  00D5  3003               	movlw	high(03E8h)
  1976  00D6  00D4               	movwf	((?_robotMoveSpeed))+1
  1977  00D7  3090               	movlw	low(0190h)
  1978  00D8  00D5               	movwf	0+(?_robotMoveSpeed)+02h
  1979  00D9  3001               	movlw	high(0190h)
  1980  00DA  00D6               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  1981  00DB  120A  158A  271B   	fcall	_robotMoveSpeed
              120A  118A         
  1982                           	line	229
  1983                           ;Main.c: 229: break;
  1984  00E0  2A23               	goto	l11472
  1985                           	line	230
  1986                           ;Main.c: 230: case 3:
  1987                           	
  1988  00E1                     l2242:	
  1989                           	line	237
  1990                           	
  1991  00E1                     l11430:	
  1992                           ;Main.c: 237: _delay((unsigned long)((100)*(20000000/4000.0)));
  1993                           	opt asmopt_off
  1994  00E1  3003               movlw  3
  1995  00E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1996  00E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1997  00E4  00E0               movwf	((??_main+0)+0+2),f
  1998  00E5  308A               movlw	138
  1999  00E6  00DF               movwf	((??_main+0)+0+1),f
  2000  00E7  3056               	movlw	86
  2001  00E8  00DE               movwf	((??_main+0)+0),f
  2002  00E9                     u5027:
  2003  00E9  0BDE               	decfsz	((??_main+0)+0),f
  2004  00EA  28E9               	goto	u5027
  2005  00EB  0BDF               	decfsz	((??_main+0)+0+1),f
  2006  00EC  28E9               	goto	u5027
  2007  00ED  0BE0               	decfsz	((??_main+0)+0+2),f
  2008  00EE  28E9               	goto	u5027
  2009  00EF  28F0               	nop2
  2010                           opt asmopt_on
  2011                           
  2012                           	line	238
  2013                           	
  2014  00F0                     l11432:	
  2015                           ;Main.c: 238: robotMoveSpeed(1000,400);
  2016  00F0  30E8               	movlw	low(03E8h)
  2017  00F1  1283               	bcf	status, 5	;RP0=0, select bank0
  2018  00F2  1303               	bcf	status, 6	;RP1=0, select bank0
  2019  00F3  00D3               	movwf	(?_robotMoveSpeed)
  2020  00F4  3003               	movlw	high(03E8h)
  2021  00F5  00D4               	movwf	((?_robotMoveSpeed))+1
  2022  00F6  3090               	movlw	low(0190h)
  2023  00F7  00D5               	movwf	0+(?_robotMoveSpeed)+02h
  2024  00F8  3001               	movlw	high(0190h)
  2025  00F9  00D6               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2026  00FA  120A  158A  271B   	fcall	_robotMoveSpeed
              120A  118A         
  2027                           	line	239
  2028                           	
  2029  00FF                     l11434:	
  2030                           ;Main.c: 239: robotTurnSpeed(80,200);
  2031  00FF  3050               	movlw	low(050h)
  2032  0100  1283               	bcf	status, 5	;RP0=0, select bank0
  2033  0101  1303               	bcf	status, 6	;RP1=0, select bank0
  2034  0102  00D3               	movwf	(?_robotTurnSpeed)
  2035  0103  3000               	movlw	high(050h)
  2036  0104  00D4               	movwf	((?_robotTurnSpeed))+1
  2037  0105  30C8               	movlw	low(0C8h)
  2038  0106  00D5               	movwf	0+(?_robotTurnSpeed)+02h
  2039  0107  3000               	movlw	high(0C8h)
  2040  0108  00D6               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2041  0109  120A  158A  2516   	fcall	_robotTurnSpeed
              120A  118A         
  2042                           	line	240
  2043                           	
  2044  010E                     l11436:	
  2045                           ;Main.c: 240: robotMoveSpeed(1000,400);
  2046  010E  30E8               	movlw	low(03E8h)
  2047  010F  1283               	bcf	status, 5	;RP0=0, select bank0
  2048  0110  1303               	bcf	status, 6	;RP1=0, select bank0
  2049  0111  00D3               	movwf	(?_robotMoveSpeed)
  2050  0112  3003               	movlw	high(03E8h)
  2051  0113  00D4               	movwf	((?_robotMoveSpeed))+1
  2052  0114  3090               	movlw	low(0190h)
  2053  0115  00D5               	movwf	0+(?_robotMoveSpeed)+02h
  2054  0116  3001               	movlw	high(0190h)
  2055  0117  00D6               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2056  0118  120A  158A  271B   	fcall	_robotMoveSpeed
              120A  118A         
  2057                           	line	241
  2058                           	
  2059  011D                     l11438:	
  2060                           ;Main.c: 241: robotTurnSpeed(80,200);
  2061  011D  3050               	movlw	low(050h)
  2062  011E  1283               	bcf	status, 5	;RP0=0, select bank0
  2063  011F  1303               	bcf	status, 6	;RP1=0, select bank0
  2064  0120  00D3               	movwf	(?_robotTurnSpeed)
  2065  0121  3000               	movlw	high(050h)
  2066  0122  00D4               	movwf	((?_robotTurnSpeed))+1
  2067  0123  30C8               	movlw	low(0C8h)
  2068  0124  00D5               	movwf	0+(?_robotTurnSpeed)+02h
  2069  0125  3000               	movlw	high(0C8h)
  2070  0126  00D6               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2071  0127  120A  158A  2516   	fcall	_robotTurnSpeed
              120A  118A         
  2072                           	line	242
  2073                           	
  2074  012C                     l11440:	
  2075                           ;Main.c: 242: robotMoveSpeed(2000,400);
  2076  012C  30D0               	movlw	low(07D0h)
  2077  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  2078  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  2079  012F  00D3               	movwf	(?_robotMoveSpeed)
  2080  0130  3007               	movlw	high(07D0h)
  2081  0131  00D4               	movwf	((?_robotMoveSpeed))+1
  2082  0132  3090               	movlw	low(0190h)
  2083  0133  00D5               	movwf	0+(?_robotMoveSpeed)+02h
  2084  0134  3001               	movlw	high(0190h)
  2085  0135  00D6               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2086  0136  120A  158A  271B   	fcall	_robotMoveSpeed
              120A  118A         
  2087                           	line	243
  2088                           	
  2089  013B                     l11442:	
  2090                           ;Main.c: 243: robotTurnSpeed(-80,200);
  2091  013B  30B0               	movlw	low(-80)
  2092  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  2093  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  2094  013E  00D3               	movwf	(?_robotTurnSpeed)
  2095  013F  30FF               	movlw	high(-80)
  2096  0140  00D4               	movwf	((?_robotTurnSpeed))+1
  2097  0141  30C8               	movlw	low(0C8h)
  2098  0142  00D5               	movwf	0+(?_robotTurnSpeed)+02h
  2099  0143  3000               	movlw	high(0C8h)
  2100  0144  00D6               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2101  0145  120A  158A  2516   	fcall	_robotTurnSpeed
              120A  118A         
  2102                           	line	244
  2103                           ;Main.c: 244: break;
  2104  014A  2A23               	goto	l11472
  2105                           	line	245
  2106                           ;Main.c: 245: case 4:
  2107                           	
  2108  014B                     l2243:	
  2109                           	line	246
  2110                           ;Main.c: 246: while (ROBOTerror != 1)
  2111  014B  29FB               	goto	l11464
  2112                           	
  2113  014C                     l2245:	
  2114                           	line	248
  2115                           ;Main.c: 247: {
  2116                           ;Main.c: 248: switch (ROBOTerror)
  2117  014C  29E4               	goto	l11462
  2118                           	line	250
  2119                           ;Main.c: 249: {
  2120                           ;Main.c: 250: case 0:
  2121                           	
  2122  014D                     l2247:	
  2123                           	line	251
  2124                           	
  2125  014D                     l11444:	
  2126                           ;Main.c: 251: robotFollow(1000, 300, adcVal);
  2127  014D  30E8               	movlw	low(03E8h)
  2128  014E  1283               	bcf	status, 5	;RP0=0, select bank0
  2129  014F  1303               	bcf	status, 6	;RP1=0, select bank0
  2130  0150  00D3               	movwf	(?_robotFollow)
  2131  0151  3003               	movlw	high(03E8h)
  2132  0152  00D4               	movwf	((?_robotFollow))+1
  2133  0153  302C               	movlw	low(012Ch)
  2134  0154  00D5               	movwf	0+(?_robotFollow)+02h
  2135  0155  3001               	movlw	high(012Ch)
  2136  0156  00D6               	movwf	(0+(?_robotFollow)+02h)+1
  2137  0157  0867               	movf	(_adcVal+1),w	;volatile
  2138  0158  01D8               	clrf	1+(?_robotFollow)+04h
  2139  0159  07D8               	addwf	1+(?_robotFollow)+04h
  2140  015A  0866               	movf	(_adcVal),w	;volatile
  2141  015B  01D7               	clrf	0+(?_robotFollow)+04h
  2142  015C  07D7               	addwf	0+(?_robotFollow)+04h
  2143                           
  2144  015D  120A  118A  222E   	fcall	_robotFollow
              120A  118A         
  2145                           	line	252
  2146                           ;Main.c: 252: break;
  2147  0162  29FB               	goto	l11464
  2148                           	line	253
  2149                           ;Main.c: 253: case 1:
  2150                           	
  2151  0163                     l2249:	
  2152                           	line	255
  2153                           ;Main.c: 255: break;
  2154  0163  29FB               	goto	l11464
  2155                           	line	256
  2156                           ;Main.c: 256: case 2:
  2157                           	
  2158  0164                     l2250:	
  2159                           	line	258
  2160                           ;Main.c: 258: break;
  2161  0164  29FB               	goto	l11464
  2162                           	line	259
  2163                           ;Main.c: 259: case 3:
  2164                           	
  2165  0165                     l2251:	
  2166                           	line	261
  2167                           ;Main.c: 261: break;
  2168  0165  29FB               	goto	l11464
  2169                           	line	262
  2170                           ;Main.c: 262: case 10:
  2171                           	
  2172  0166                     l2252:	
  2173                           	line	263
  2174                           	
  2175  0166                     l11446:	
  2176                           ;Main.c: 263: robotTurnSpeed(90,400);
  2177  0166  305A               	movlw	low(05Ah)
  2178  0167  1283               	bcf	status, 5	;RP0=0, select bank0
  2179  0168  1303               	bcf	status, 6	;RP1=0, select bank0
  2180  0169  00D3               	movwf	(?_robotTurnSpeed)
  2181  016A  3000               	movlw	high(05Ah)
  2182  016B  00D4               	movwf	((?_robotTurnSpeed))+1
  2183  016C  3090               	movlw	low(0190h)
  2184  016D  00D5               	movwf	0+(?_robotTurnSpeed)+02h
  2185  016E  3001               	movlw	high(0190h)
  2186  016F  00D6               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2187  0170  120A  158A  2516   	fcall	_robotTurnSpeed
              120A  118A         
  2188                           	line	265
  2189                           	
  2190  0175                     l11448:	
  2191                           ;Main.c: 265: readAvgDistance();
  2192  0175  120A  158A  266A   	fcall	_readAvgDistance
              120A  118A         
  2193                           	line	266
  2194                           	
  2195  017A                     l11450:	
  2196                           ;Main.c: 266: robotFollow(1000, 300, adcVal - 10);
  2197  017A  30E8               	movlw	low(03E8h)
  2198  017B  1283               	bcf	status, 5	;RP0=0, select bank0
  2199  017C  1303               	bcf	status, 6	;RP1=0, select bank0
  2200  017D  00D3               	movwf	(?_robotFollow)
  2201  017E  3003               	movlw	high(03E8h)
  2202  017F  00D4               	movwf	((?_robotFollow))+1
  2203  0180  302C               	movlw	low(012Ch)
  2204  0181  00D5               	movwf	0+(?_robotFollow)+02h
  2205  0182  3001               	movlw	high(012Ch)
  2206  0183  00D6               	movwf	(0+(?_robotFollow)+02h)+1
  2207  0184  0866               	movf	(_adcVal),w	;volatile
  2208  0185  3EF6               	addlw	low(-10)
  2209  0186  00D7               	movwf	0+(?_robotFollow)+04h
  2210  0187  0867               	movf	(_adcVal+1),w	;volatile
  2211  0188  1803               	skipnc
  2212  0189  3E01               	addlw	1
  2213  018A  3EFF               	addlw	high(-10)
  2214  018B  00D8               	movwf	1+0+(?_robotFollow)+04h
  2215  018C  120A  118A  222E   	fcall	_robotFollow
              120A  118A         
  2216                           	line	267
  2217                           ;Main.c: 267: break;
  2218  0191  29FB               	goto	l11464
  2219                           	line	268
  2220                           ;Main.c: 268: case 11:
  2221                           	
  2222  0192                     l2253:	
  2223                           	line	270
  2224                           	
  2225  0192                     l11452:	
  2226                           ;Main.c: 270: robotMoveSpeed(700,300);
  2227  0192  30BC               	movlw	low(02BCh)
  2228  0193  1283               	bcf	status, 5	;RP0=0, select bank0
  2229  0194  1303               	bcf	status, 6	;RP1=0, select bank0
  2230  0195  00D3               	movwf	(?_robotMoveSpeed)
  2231  0196  3002               	movlw	high(02BCh)
  2232  0197  00D4               	movwf	((?_robotMoveSpeed))+1
  2233  0198  302C               	movlw	low(012Ch)
  2234  0199  00D5               	movwf	0+(?_robotMoveSpeed)+02h
  2235  019A  3001               	movlw	high(012Ch)
  2236  019B  00D6               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2237  019C  120A  158A  271B   	fcall	_robotMoveSpeed
              120A  118A         
  2238                           	line	271
  2239                           ;Main.c: 271: robotTurnSpeed(-90,400);
  2240  01A1  30A6               	movlw	low(-90)
  2241  01A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2242  01A3  1303               	bcf	status, 6	;RP1=0, select bank0
  2243  01A4  00D3               	movwf	(?_robotTurnSpeed)
  2244  01A5  30FF               	movlw	high(-90)
  2245  01A6  00D4               	movwf	((?_robotTurnSpeed))+1
  2246  01A7  3090               	movlw	low(0190h)
  2247  01A8  00D5               	movwf	0+(?_robotTurnSpeed)+02h
  2248  01A9  3001               	movlw	high(0190h)
  2249  01AA  00D6               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2250  01AB  120A  158A  2516   	fcall	_robotTurnSpeed
              120A  118A         
  2251                           	line	272
  2252                           	
  2253  01B0                     l11454:	
  2254                           ;Main.c: 272: readAvgDistance();
  2255  01B0  120A  158A  266A   	fcall	_readAvgDistance
              120A  118A         
  2256                           	line	273
  2257                           	
  2258  01B5                     l11456:	
  2259                           ;Main.c: 273: robotFollow(1000, 300, adcVal - 10);
  2260  01B5  30E8               	movlw	low(03E8h)
  2261  01B6  1283               	bcf	status, 5	;RP0=0, select bank0
  2262  01B7  1303               	bcf	status, 6	;RP1=0, select bank0
  2263  01B8  00D3               	movwf	(?_robotFollow)
  2264  01B9  3003               	movlw	high(03E8h)
  2265  01BA  00D4               	movwf	((?_robotFollow))+1
  2266  01BB  302C               	movlw	low(012Ch)
  2267  01BC  00D5               	movwf	0+(?_robotFollow)+02h
  2268  01BD  3001               	movlw	high(012Ch)
  2269  01BE  00D6               	movwf	(0+(?_robotFollow)+02h)+1
  2270  01BF  0866               	movf	(_adcVal),w	;volatile
  2271  01C0  3EF6               	addlw	low(-10)
  2272  01C1  00D7               	movwf	0+(?_robotFollow)+04h
  2273  01C2  0867               	movf	(_adcVal+1),w	;volatile
  2274  01C3  1803               	skipnc
  2275  01C4  3E01               	addlw	1
  2276  01C5  3EFF               	addlw	high(-10)
  2277  01C6  00D8               	movwf	1+0+(?_robotFollow)+04h
  2278  01C7  120A  118A  222E   	fcall	_robotFollow
              120A  118A         
  2279                           	line	274
  2280                           ;Main.c: 274: break;
  2281  01CC  29FB               	goto	l11464
  2282                           	line	275
  2283                           ;Main.c: 275: default:
  2284                           	
  2285  01CD                     l2254:	
  2286                           	line	276
  2287                           	
  2288  01CD                     l11458:	
  2289                           ;Main.c: 276: robotFollow(1000, 300, adcVal);
  2290  01CD  30E8               	movlw	low(03E8h)
  2291  01CE  1283               	bcf	status, 5	;RP0=0, select bank0
  2292  01CF  1303               	bcf	status, 6	;RP1=0, select bank0
  2293  01D0  00D3               	movwf	(?_robotFollow)
  2294  01D1  3003               	movlw	high(03E8h)
  2295  01D2  00D4               	movwf	((?_robotFollow))+1
  2296  01D3  302C               	movlw	low(012Ch)
  2297  01D4  00D5               	movwf	0+(?_robotFollow)+02h
  2298  01D5  3001               	movlw	high(012Ch)
  2299  01D6  00D6               	movwf	(0+(?_robotFollow)+02h)+1
  2300  01D7  0867               	movf	(_adcVal+1),w	;volatile
  2301  01D8  01D8               	clrf	1+(?_robotFollow)+04h
  2302  01D9  07D8               	addwf	1+(?_robotFollow)+04h
  2303  01DA  0866               	movf	(_adcVal),w	;volatile
  2304  01DB  01D7               	clrf	0+(?_robotFollow)+04h
  2305  01DC  07D7               	addwf	0+(?_robotFollow)+04h
  2306                           
  2307  01DD  120A  118A  222E   	fcall	_robotFollow
              120A  118A         
  2308                           	line	277
  2309                           ;Main.c: 277: break;
  2310  01E2  29FB               	goto	l11464
  2311                           	line	279
  2312                           	
  2313  01E3                     l11460:	
  2314                           ;Main.c: 279: }
  2315  01E3  29FB               	goto	l11464
  2316                           	line	248
  2317                           	
  2318  01E4                     l2246:	
  2319                           	
  2320  01E4                     l11462:	
  2321  01E4  1683               	bsf	status, 5	;RP0=1, select bank1
  2322  01E5  1303               	bcf	status, 6	;RP1=0, select bank1
  2323  01E6  084E               	movf	(_ROBOTerror)^080h,w
  2324                           	; Switch size 1, requested type "space"
  2325                           ; Number of cases is 6, Range of values is 0 to 11
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte           19    10 (average)
  2329                           ; direct_byte           44     8 (fixed)
  2330                           ; jumptable            260     6 (fixed)
  2331                           ; rangetable            16     6 (fixed)
  2332                           ; spacedrange           30     9 (fixed)
  2333                           ; locatedrange          12     3 (fixed)
  2334                           ;	Chosen strategy is simple_byte
  2335                           
  2336                           	opt asmopt_off
  2337  01E7  3A00               	xorlw	0^0	; case 0
  2338  01E8  1903               	skipnz
  2339  01E9  294D               	goto	l11444
  2340  01EA  3A01               	xorlw	1^0	; case 1
  2341  01EB  1903               	skipnz
  2342  01EC  29FB               	goto	l11464
  2343  01ED  3A03               	xorlw	2^1	; case 2
  2344  01EE  1903               	skipnz
  2345  01EF  29FB               	goto	l11464
  2346  01F0  3A01               	xorlw	3^2	; case 3
  2347  01F1  1903               	skipnz
  2348  01F2  29FB               	goto	l11464
  2349  01F3  3A09               	xorlw	10^3	; case 10
  2350  01F4  1903               	skipnz
  2351  01F5  2966               	goto	l11446
  2352  01F6  3A01               	xorlw	11^10	; case 11
  2353  01F7  1903               	skipnz
  2354  01F8  2992               	goto	l11452
  2355  01F9  29CD               	goto	l11458
  2356                           	opt asmopt_on
  2357                           
  2358                           	line	279
  2359                           	
  2360  01FA                     l2248:	
  2361  01FA  29FB               	goto	l11464
  2362                           	line	280
  2363                           	
  2364  01FB                     l2244:	
  2365                           	line	246
  2366                           	
  2367  01FB                     l11464:	
  2368  01FB  1683               	bsf	status, 5	;RP0=1, select bank1
  2369  01FC  1303               	bcf	status, 6	;RP1=0, select bank1
  2370  01FD  084E               	movf	(_ROBOTerror)^080h,w
  2371  01FE  3A01               	xorlw	01h
  2372  01FF  1D03               	skipz
  2373  0200  2A02               	goto	u5011
  2374  0201  2A03               	goto	u5010
  2375  0202                     u5011:
  2376  0202  29E4               	goto	l11462
  2377  0203                     u5010:
  2378  0203  2A23               	goto	l11472
  2379                           	
  2380  0204                     l2255:	
  2381                           	line	281
  2382                           ;Main.c: 280: }
  2383                           ;Main.c: 281: break;
  2384  0204  2A23               	goto	l11472
  2385                           	line	283
  2386                           ;Main.c: 283: case 5:
  2387                           	
  2388  0205                     l2256:	
  2389                           	line	284
  2390                           	
  2391  0205                     l11466:	
  2392                           ;Main.c: 284: ChargeMode();
  2393  0205  120A  158A  22D2   	fcall	_ChargeMode
              120A  118A         
  2394                           	line	285
  2395                           ;Main.c: 285: break;
  2396  020A  2A23               	goto	l11472
  2397                           	line	286
  2398                           ;Main.c: 286: default:
  2399                           	
  2400  020B                     l2257:	
  2401                           	line	288
  2402                           ;Main.c: 288: break;
  2403  020B  2A23               	goto	l11472
  2404                           	line	289
  2405                           	
  2406  020C                     l11468:	
  2407                           ;Main.c: 289: }
  2408  020C  2A23               	goto	l11472
  2409                           	line	198
  2410                           	
  2411  020D                     l2237:	
  2412                           	
  2413  020D                     l11470:	
  2414  020D  1283               	bcf	status, 5	;RP0=0, select bank0
  2415  020E  1303               	bcf	status, 6	;RP1=0, select bank0
  2416  020F  0865               	movf	(main@choice),w
  2417                           	; Switch size 1, requested type "space"
  2418                           ; Number of cases is 6, Range of values is 0 to 5
  2419                           ; switch strategies available:
  2420                           ; Name         Instructions Cycles
  2421                           ; simple_byte           19    10 (average)
  2422                           ; direct_byte           26     8 (fixed)
  2423                           ; jumptable            260     6 (fixed)
  2424                           ; rangetable            10     6 (fixed)
  2425                           ; spacedrange           18     9 (fixed)
  2426                           ; locatedrange           6     3 (fixed)
  2427                           ;	Chosen strategy is simple_byte
  2428                           
  2429                           	opt asmopt_off
  2430  0210  3A00               	xorlw	0^0	; case 0
  2431  0211  1903               	skipnz
  2432  0212  284B               	goto	l11408
  2433  0213  3A01               	xorlw	1^0	; case 1
  2434  0214  1903               	skipnz
  2435  0215  2A23               	goto	l11472
  2436  0216  3A03               	xorlw	2^1	; case 2
  2437  0217  1903               	skipnz
  2438  0218  2852               	goto	l11410
  2439  0219  3A01               	xorlw	3^2	; case 3
  2440  021A  1903               	skipnz
  2441  021B  28E1               	goto	l11430
  2442  021C  3A07               	xorlw	4^3	; case 4
  2443  021D  1903               	skipnz
  2444  021E  29FB               	goto	l11464
  2445  021F  3A01               	xorlw	5^4	; case 5
  2446  0220  1903               	skipnz
  2447  0221  2A05               	goto	l11466
  2448  0222  2A23               	goto	l11472
  2449                           	opt asmopt_on
  2450                           
  2451                           	line	289
  2452                           	
  2453  0223                     l2239:	
  2454                           	line	290
  2455                           	
  2456  0223                     l11472:	
  2457                           ;Main.c: 290: choice = 255;
  2458  0223  30FF               	movlw	(0FFh)
  2459  0224  1283               	bcf	status, 5	;RP0=0, select bank0
  2460  0225  1303               	bcf	status, 6	;RP1=0, select bank0
  2461  0226  00DE               	movwf	(??_main+0)+0
  2462  0227  085E               	movf	(??_main+0)+0,w
  2463  0228  00E5               	movwf	(main@choice)
  2464  0229  2823               	goto	l11394
  2465                           	line	291
  2466                           	
  2467  022A                     l2258:	
  2468                           	line	180
  2469  022A  2823               	goto	l11394
  2470                           	
  2471  022B                     l2259:	
  2472                           	line	292
  2473                           	
  2474  022B                     l2260:	
  2475                           	global	start
  2476  022B  120A  118A  2812   	ljmp	start
  2477                           	opt stack 0
  2478                           GLOBAL	__end_of_main
  2479  022E                     	__end_of_main:
  2480 ;; =============== function _main ends ============
  2481                           
  2482                           	signat	_main,88
  2483                           	global	_ChargeMode
  2484                           psect	text951,local,class=CODE,delta=2
  2485                           global __ptext951
  2486  0AD2                     __ptext951:
  2487                           
  2488 ;; *************** function _ChargeMode *****************
  2489 ;; Defined at:
  2490 ;;		line 439 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;		None               void
  2497 ;; Registers used:
  2498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0
  2506 ;;      Temps:          0       1       0       0       0
  2507 ;;      Totals:         0       1       0       0       0
  2508 ;;Total ram usage:        1 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    6
  2511 ;; This function calls:
  2512 ;;		_ser_putch
  2513 ;;		_UpdateDisplay
  2514 ;; This function is called by:
  2515 ;;		_main
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           psect	text951
  2519                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2520                           	line	439
  2521                           	global	__size_of_ChargeMode
  2522  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2523                           	
  2524  0AD2                     _ChargeMode:	
  2525                           	opt	stack 1
  2526                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2527                           	line	441
  2528                           	
  2529  0AD2                     l11366:	
  2530                           ;Main.c: 441: currentMenu = 2;
  2531  0AD2  3002               	movlw	(02h)
  2532  0AD3  1283               	bcf	status, 5	;RP0=0, select bank0
  2533  0AD4  1303               	bcf	status, 6	;RP1=0, select bank0
  2534  0AD5  00D3               	movwf	(??_ChargeMode+0)+0
  2535  0AD6  0853               	movf	(??_ChargeMode+0)+0,w
  2536  0AD7  1683               	bsf	status, 5	;RP0=1, select bank1
  2537  0AD8  1303               	bcf	status, 6	;RP1=0, select bank1
  2538  0AD9  00D1               	movwf	(_currentMenu)^080h	;volatile
  2539                           	line	442
  2540                           	
  2541  0ADA                     l11368:	
  2542                           ;Main.c: 442: ser_putch(128);
  2543  0ADA  3080               	movlw	(080h)
  2544  0ADB  160A  118A  270B   	fcall	_ser_putch
              120A  158A         
  2545  0AE0  2AE1               	goto	l11370
  2546                           	line	444
  2547                           ;Main.c: 444: while (1)
  2548                           	
  2549  0AE1                     l2281:	
  2550                           	line	446
  2551                           	
  2552  0AE1                     l11370:	
  2553                           ;Main.c: 445: {
  2554                           ;Main.c: 446: if (RTC_FLAG_250MS == 1)
  2555  0AE1  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2556  0AE2  2AE4               	goto	u4981
  2557  0AE3  2AE5               	goto	u4980
  2558  0AE4                     u4981:
  2559  0AE4  2B04               	goto	l11386
  2560  0AE5                     u4980:
  2561                           	line	448
  2562                           	
  2563  0AE5                     l11372:	
  2564                           ;Main.c: 447: {
  2565                           ;Main.c: 448: RTC_FLAG_250MS = 0;
  2566  0AE5  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2567                           	line	449
  2568                           	
  2569  0AE6                     l11374:	
  2570                           ;Main.c: 449: UpdateDisplay();
  2571  0AE6  120A  118A  2533   	fcall	_UpdateDisplay
              120A  158A         
  2572  0AEB  2B04               	goto	l11386
  2573                           	line	450
  2574                           	
  2575  0AEC                     l2282:	
  2576                           	line	451
  2577                           ;Main.c: 450: }
  2578                           ;Main.c: 451: switch (buttonPressed)
  2579  0AEC  2B04               	goto	l11386
  2580                           	line	453
  2581                           ;Main.c: 452: {
  2582                           ;Main.c: 453: case 1:
  2583                           	
  2584  0AED                     l2284:	
  2585                           	line	454
  2586                           ;Main.c: 454: buttonPressed = 0;
  2587  0AED  01FD               	clrf	(_buttonPressed)	;volatile
  2588                           	line	455
  2589                           ;Main.c: 455: break;
  2590  0AEE  2AE1               	goto	l11370
  2591                           	line	456
  2592                           ;Main.c: 456: case 2:
  2593                           	
  2594  0AEF                     l2286:	
  2595                           	line	457
  2596                           ;Main.c: 457: buttonPressed = 0;
  2597  0AEF  01FD               	clrf	(_buttonPressed)	;volatile
  2598                           	line	458
  2599                           ;Main.c: 458: break;
  2600  0AF0  2AE1               	goto	l11370
  2601                           	line	459
  2602                           ;Main.c: 459: case 3:
  2603                           	
  2604  0AF1                     l2287:	
  2605                           	line	460
  2606                           ;Main.c: 460: buttonPressed = 0;
  2607  0AF1  01FD               	clrf	(_buttonPressed)	;volatile
  2608                           	line	461
  2609                           ;Main.c: 461: break;
  2610  0AF2  2AE1               	goto	l11370
  2611                           	line	462
  2612                           ;Main.c: 462: case 4:
  2613                           	
  2614  0AF3                     l2288:	
  2615                           	line	463
  2616                           ;Main.c: 463: buttonPressed = 0;
  2617  0AF3  01FD               	clrf	(_buttonPressed)	;volatile
  2618                           	line	464
  2619                           ;Main.c: 464: break;
  2620  0AF4  2AE1               	goto	l11370
  2621                           	line	465
  2622                           ;Main.c: 465: case 5:
  2623                           	
  2624  0AF5                     l2289:	
  2625                           	line	466
  2626                           	
  2627  0AF5                     l11376:	
  2628                           ;Main.c: 466: ser_putch(132);
  2629  0AF5  3084               	movlw	(084h)
  2630  0AF6  160A  118A  270B   	fcall	_ser_putch
              120A  158A         
  2631                           	line	467
  2632                           	
  2633  0AFB                     l11378:	
  2634                           ;Main.c: 467: buttonPressed = 0;
  2635  0AFB  01FD               	clrf	(_buttonPressed)	;volatile
  2636                           	line	468
  2637                           	
  2638  0AFC                     l11380:	
  2639                           ;Main.c: 468: currentMenu = 0;
  2640  0AFC  1683               	bsf	status, 5	;RP0=1, select bank1
  2641  0AFD  1303               	bcf	status, 6	;RP1=0, select bank1
  2642  0AFE  01D1               	clrf	(_currentMenu)^080h	;volatile
  2643  0AFF  2B17               	goto	l2290
  2644                           	line	469
  2645                           	
  2646  0B00                     l11382:	
  2647                           ;Main.c: 469: return;
  2648  0B00  2B17               	goto	l2290
  2649                           	line	470
  2650                           ;Main.c: 470: default:
  2651                           	
  2652  0B01                     l2291:	
  2653                           	line	471
  2654                           ;Main.c: 471: buttonPressed = 0;
  2655  0B01  01FD               	clrf	(_buttonPressed)	;volatile
  2656                           	line	472
  2657                           ;Main.c: 472: break;
  2658  0B02  2AE1               	goto	l11370
  2659                           	line	473
  2660                           	
  2661  0B03                     l11384:	
  2662                           ;Main.c: 473: }
  2663  0B03  2AE1               	goto	l11370
  2664                           	line	451
  2665                           	
  2666  0B04                     l2283:	
  2667                           	
  2668  0B04                     l11386:	
  2669  0B04  087D               	movf	(_buttonPressed),w	;volatile
  2670                           	; Switch size 1, requested type "space"
  2671                           ; Number of cases is 5, Range of values is 1 to 5
  2672                           ; switch strategies available:
  2673                           ; Name         Instructions Cycles
  2674                           ; simple_byte           16     9 (average)
  2675                           ; direct_byte           26    11 (fixed)
  2676                           ; jumptable            263     9 (fixed)
  2677                           ;	Chosen strategy is simple_byte
  2678                           
  2679                           	opt asmopt_off
  2680  0B05  3A01               	xorlw	1^0	; case 1
  2681  0B06  1903               	skipnz
  2682  0B07  2AED               	goto	l2284
  2683  0B08  3A03               	xorlw	2^1	; case 2
  2684  0B09  1903               	skipnz
  2685  0B0A  2AEF               	goto	l2286
  2686  0B0B  3A01               	xorlw	3^2	; case 3
  2687  0B0C  1903               	skipnz
  2688  0B0D  2AF1               	goto	l2287
  2689  0B0E  3A07               	xorlw	4^3	; case 4
  2690  0B0F  1903               	skipnz
  2691  0B10  2AF3               	goto	l2288
  2692  0B11  3A01               	xorlw	5^4	; case 5
  2693  0B12  1903               	skipnz
  2694  0B13  2AF5               	goto	l11376
  2695  0B14  2B01               	goto	l2291
  2696                           	opt asmopt_on
  2697                           
  2698                           	line	473
  2699                           	
  2700  0B15                     l2285:	
  2701  0B15  2AE1               	goto	l11370
  2702                           	line	474
  2703                           	
  2704  0B16                     l2292:	
  2705                           	line	444
  2706  0B16  2AE1               	goto	l11370
  2707                           	
  2708  0B17                     l2293:	
  2709                           	line	475
  2710                           	
  2711  0B17                     l2290:	
  2712  0B17  0008               	return
  2713                           	opt stack 0
  2714                           GLOBAL	__end_of_ChargeMode
  2715  0B18                     	__end_of_ChargeMode:
  2716 ;; =============== function _ChargeMode ends ============
  2717                           
  2718                           	signat	_ChargeMode,88
  2719                           	global	_robotFollow
  2720                           psect	text952,local,class=CODE,delta=2
  2721                           global __ptext952
  2722  022E                     __ptext952:
  2723                           
  2724 ;; *************** function _robotFollow *****************
  2725 ;; Defined at:
  2726 ;;		line 167 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  distance        2   51[BANK0 ] int 
  2729 ;;  speed           2   53[BANK0 ] int 
  2730 ;;  AdcTarget       2   55[BANK0 ] int 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  temp1           2   60[BANK0 ] int 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2742 ;;      Params:         0       6       0       0       0
  2743 ;;      Locals:         0       2       0       0       0
  2744 ;;      Temps:          0       3       0       0       0
  2745 ;;      Totals:         0      11       0       0       0
  2746 ;;Total ram usage:       11 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    7
  2749 ;; This function calls:
  2750 ;;		_RobotDrive
  2751 ;;		_readAvgDistance
  2752 ;;		_robot_read
  2753 ;;		_UpdateDisplay
  2754 ;;		_abs
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           psect	text952
  2760                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  2761                           	line	167
  2762                           	global	__size_of_robotFollow
  2763  01A3                     	__size_of_robotFollow	equ	__end_of_robotFollow-_robotFollow
  2764                           	
  2765  022E                     _robotFollow:	
  2766                           	opt	stack 0
  2767                           ; Regs used in _robotFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2768                           	line	168
  2769                           	
  2770  022E                     l11298:	
  2771                           ;robot.c: 168: distTravelled = 0;
  2772  022E  1683               	bsf	status, 5	;RP0=1, select bank1
  2773  022F  1303               	bcf	status, 6	;RP1=0, select bank1
  2774  0230  01BC               	clrf	(_distTravelled)^080h
  2775  0231  01BD               	clrf	(_distTravelled+1)^080h
  2776                           	line	170
  2777                           	
  2778  0232                     l11300:	
  2779                           ;robot.c: 169: int temp1;
  2780                           ;robot.c: 170: RobotDrive(speed, 0x7FFF);
  2781  0232  1283               	bcf	status, 5	;RP0=0, select bank0
  2782  0233  1303               	bcf	status, 6	;RP1=0, select bank0
  2783  0234  0856               	movf	(robotFollow@speed+1),w
  2784  0235  01A3               	clrf	(?_RobotDrive+1)
  2785  0236  07A3               	addwf	(?_RobotDrive+1)
  2786  0237  0855               	movf	(robotFollow@speed),w
  2787  0238  01A2               	clrf	(?_RobotDrive)
  2788  0239  07A2               	addwf	(?_RobotDrive)
  2789                           
  2790  023A  30FF               	movlw	low(07FFFh)
  2791  023B  00A4               	movwf	0+(?_RobotDrive)+02h
  2792  023C  307F               	movlw	high(07FFFh)
  2793  023D  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  2794  023E  120A  158A  2194   	fcall	_RobotDrive
              120A  118A         
  2795                           	line	171
  2796                           	
  2797  0243                     l11302:	
  2798                           ;robot.c: 171: ROBOTerror = 0;
  2799  0243  1683               	bsf	status, 5	;RP0=1, select bank1
  2800  0244  1303               	bcf	status, 6	;RP1=0, select bank1
  2801  0245  01CE               	clrf	(_ROBOTerror)^080h
  2802                           	line	174
  2803                           ;robot.c: 174: while (abs(distTravelled) < abs(distance))
  2804  0246  2B76               	goto	l11358
  2805                           	
  2806  0247                     l6065:	
  2807                           	line	177
  2808                           	
  2809  0247                     l11304:	
  2810                           ;robot.c: 175: {
  2811                           ;robot.c: 177: readAvgDistance();
  2812  0247  120A  158A  266A   	fcall	_readAvgDistance
              120A  118A         
  2813                           	line	178
  2814                           	
  2815  024C                     l11306:	
  2816                           ;robot.c: 178: if (adcVal > (AdcTarget + 5) && adcVal < (AdcTarget + 30))
  2817  024C  1283               	bcf	status, 5	;RP0=0, select bank0
  2818  024D  1303               	bcf	status, 6	;RP1=0, select bank0
  2819  024E  0857               	movf	(robotFollow@AdcTarget),w
  2820  024F  3E05               	addlw	low(05h)
  2821  0250  00D9               	movwf	(??_robotFollow+0)+0
  2822  0251  0858               	movf	(robotFollow@AdcTarget+1),w
  2823  0252  1803               	skipnc
  2824  0253  3E01               	addlw	1
  2825  0254  3E00               	addlw	high(05h)
  2826  0255  00DA               	movwf	1+(??_robotFollow+0)+0
  2827  0256  0867               	movf	(_adcVal+1),w	;volatile
  2828  0257  025A               	subwf	1+(??_robotFollow+0)+0,w
  2829  0258  1D03               	skipz
  2830  0259  2A5C               	goto	u4885
  2831  025A  0866               	movf	(_adcVal),w	;volatile
  2832  025B  0259               	subwf	0+(??_robotFollow+0)+0,w
  2833  025C                     u4885:
  2834  025C  1803               	skipnc
  2835  025D  2A5F               	goto	u4881
  2836  025E  2A60               	goto	u4880
  2837  025F                     u4881:
  2838  025F  2A82               	goto	l11312
  2839  0260                     u4880:
  2840                           	
  2841  0260                     l11308:	
  2842  0260  0857               	movf	(robotFollow@AdcTarget),w
  2843  0261  3E1E               	addlw	low(01Eh)
  2844  0262  00D9               	movwf	(??_robotFollow+0)+0
  2845  0263  0858               	movf	(robotFollow@AdcTarget+1),w
  2846  0264  1803               	skipnc
  2847  0265  3E01               	addlw	1
  2848  0266  3E00               	addlw	high(01Eh)
  2849  0267  00DA               	movwf	1+(??_robotFollow+0)+0
  2850  0268  085A               	movf	1+(??_robotFollow+0)+0,w
  2851  0269  0267               	subwf	(_adcVal+1),w	;volatile
  2852  026A  1D03               	skipz
  2853  026B  2A6E               	goto	u4895
  2854  026C  0859               	movf	0+(??_robotFollow+0)+0,w
  2855  026D  0266               	subwf	(_adcVal),w	;volatile
  2856  026E                     u4895:
  2857  026E  1803               	skipnc
  2858  026F  2A71               	goto	u4891
  2859  0270  2A72               	goto	u4890
  2860  0271                     u4891:
  2861  0271  2A82               	goto	l11312
  2862  0272                     u4890:
  2863                           	line	180
  2864                           	
  2865  0272                     l11310:	
  2866                           ;robot.c: 179: {
  2867                           ;robot.c: 180: RobotDrive(speed, 1800);
  2868  0272  0856               	movf	(robotFollow@speed+1),w
  2869  0273  01A3               	clrf	(?_RobotDrive+1)
  2870  0274  07A3               	addwf	(?_RobotDrive+1)
  2871  0275  0855               	movf	(robotFollow@speed),w
  2872  0276  01A2               	clrf	(?_RobotDrive)
  2873  0277  07A2               	addwf	(?_RobotDrive)
  2874                           
  2875  0278  3008               	movlw	low(0708h)
  2876  0279  00A4               	movwf	0+(?_RobotDrive)+02h
  2877  027A  3007               	movlw	high(0708h)
  2878  027B  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  2879  027C  120A  158A  2194   	fcall	_RobotDrive
              120A  118A         
  2880                           	line	181
  2881                           ;robot.c: 181: }
  2882  0281  2B02               	goto	l6067
  2883                           	line	182
  2884                           	
  2885  0282                     l6066:	
  2886                           	
  2887  0282                     l11312:	
  2888                           ;robot.c: 182: else if (adcVal < (AdcTarget - 5) && adcVal > (AdcTarget - 30))
  2889  0282  1283               	bcf	status, 5	;RP0=0, select bank0
  2890  0283  1303               	bcf	status, 6	;RP1=0, select bank0
  2891  0284  0857               	movf	(robotFollow@AdcTarget),w
  2892  0285  3EFB               	addlw	low(0FFFBh)
  2893  0286  00D9               	movwf	(??_robotFollow+0)+0
  2894  0287  0858               	movf	(robotFollow@AdcTarget+1),w
  2895  0288  1803               	skipnc
  2896  0289  3E01               	addlw	1
  2897  028A  3EFF               	addlw	high(0FFFBh)
  2898  028B  00DA               	movwf	1+(??_robotFollow+0)+0
  2899  028C  085A               	movf	1+(??_robotFollow+0)+0,w
  2900  028D  0267               	subwf	(_adcVal+1),w	;volatile
  2901  028E  1D03               	skipz
  2902  028F  2A92               	goto	u4905
  2903  0290  0859               	movf	0+(??_robotFollow+0)+0,w
  2904  0291  0266               	subwf	(_adcVal),w	;volatile
  2905  0292                     u4905:
  2906  0292  1803               	skipnc
  2907  0293  2A95               	goto	u4901
  2908  0294  2A96               	goto	u4900
  2909  0295                     u4901:
  2910  0295  2AB8               	goto	l11318
  2911  0296                     u4900:
  2912                           	
  2913  0296                     l11314:	
  2914  0296  0857               	movf	(robotFollow@AdcTarget),w
  2915  0297  3EE2               	addlw	low(0FFE2h)
  2916  0298  00D9               	movwf	(??_robotFollow+0)+0
  2917  0299  0858               	movf	(robotFollow@AdcTarget+1),w
  2918  029A  1803               	skipnc
  2919  029B  3E01               	addlw	1
  2920  029C  3EFF               	addlw	high(0FFE2h)
  2921  029D  00DA               	movwf	1+(??_robotFollow+0)+0
  2922  029E  0867               	movf	(_adcVal+1),w	;volatile
  2923  029F  025A               	subwf	1+(??_robotFollow+0)+0,w
  2924  02A0  1D03               	skipz
  2925  02A1  2AA4               	goto	u4915
  2926  02A2  0866               	movf	(_adcVal),w	;volatile
  2927  02A3  0259               	subwf	0+(??_robotFollow+0)+0,w
  2928  02A4                     u4915:
  2929  02A4  1803               	skipnc
  2930  02A5  2AA7               	goto	u4911
  2931  02A6  2AA8               	goto	u4910
  2932  02A7                     u4911:
  2933  02A7  2AB8               	goto	l11318
  2934  02A8                     u4910:
  2935                           	line	184
  2936                           	
  2937  02A8                     l11316:	
  2938                           ;robot.c: 183: {
  2939                           ;robot.c: 184: RobotDrive(speed, -1800);
  2940  02A8  0856               	movf	(robotFollow@speed+1),w
  2941  02A9  01A3               	clrf	(?_RobotDrive+1)
  2942  02AA  07A3               	addwf	(?_RobotDrive+1)
  2943  02AB  0855               	movf	(robotFollow@speed),w
  2944  02AC  01A2               	clrf	(?_RobotDrive)
  2945  02AD  07A2               	addwf	(?_RobotDrive)
  2946                           
  2947  02AE  30F8               	movlw	low(-1800)
  2948  02AF  00A4               	movwf	0+(?_RobotDrive)+02h
  2949  02B0  30F8               	movlw	high(-1800)
  2950  02B1  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  2951  02B2  120A  158A  2194   	fcall	_RobotDrive
              120A  118A         
  2952                           	line	185
  2953                           ;robot.c: 185: }
  2954  02B7  2B02               	goto	l6067
  2955                           	line	186
  2956                           	
  2957  02B8                     l6068:	
  2958                           	
  2959  02B8                     l11318:	
  2960                           ;robot.c: 186: else if (adcVal <= (AdcTarget - 30))
  2961  02B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2962  02B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2963  02BA  0857               	movf	(robotFollow@AdcTarget),w
  2964  02BB  3EE2               	addlw	low(0FFE2h)
  2965  02BC  00D9               	movwf	(??_robotFollow+0)+0
  2966  02BD  0858               	movf	(robotFollow@AdcTarget+1),w
  2967  02BE  1803               	skipnc
  2968  02BF  3E01               	addlw	1
  2969  02C0  3EFF               	addlw	high(0FFE2h)
  2970  02C1  00DA               	movwf	1+(??_robotFollow+0)+0
  2971  02C2  0867               	movf	(_adcVal+1),w	;volatile
  2972  02C3  025A               	subwf	1+(??_robotFollow+0)+0,w
  2973  02C4  1D03               	skipz
  2974  02C5  2AC8               	goto	u4925
  2975  02C6  0866               	movf	(_adcVal),w	;volatile
  2976  02C7  0259               	subwf	0+(??_robotFollow+0)+0,w
  2977  02C8                     u4925:
  2978  02C8  1C03               	skipc
  2979  02C9  2ACB               	goto	u4921
  2980  02CA  2ACC               	goto	u4920
  2981  02CB                     u4921:
  2982  02CB  2AD4               	goto	l11324
  2983  02CC                     u4920:
  2984                           	line	188
  2985                           	
  2986  02CC                     l11320:	
  2987                           ;robot.c: 187: {
  2988                           ;robot.c: 188: ROBOTerror = 10;
  2989  02CC  300A               	movlw	(0Ah)
  2990  02CD  00D9               	movwf	(??_robotFollow+0)+0
  2991  02CE  0859               	movf	(??_robotFollow+0)+0,w
  2992  02CF  1683               	bsf	status, 5	;RP0=1, select bank1
  2993  02D0  1303               	bcf	status, 6	;RP1=0, select bank1
  2994  02D1  00CE               	movwf	(_ROBOTerror)^080h
  2995                           	line	189
  2996                           ;robot.c: 189: break;
  2997  02D2  2BAB               	goto	l11360
  2998                           	line	190
  2999                           	
  3000  02D3                     l11322:	
  3001                           ;robot.c: 190: }
  3002  02D3  2B02               	goto	l6067
  3003                           	line	191
  3004                           	
  3005  02D4                     l6070:	
  3006                           	
  3007  02D4                     l11324:	
  3008                           ;robot.c: 191: else if (adcVal >= (AdcTarget + 30))
  3009  02D4  1283               	bcf	status, 5	;RP0=0, select bank0
  3010  02D5  0857               	movf	(robotFollow@AdcTarget),w
  3011  02D6  3E1E               	addlw	low(01Eh)
  3012  02D7  00D9               	movwf	(??_robotFollow+0)+0
  3013  02D8  0858               	movf	(robotFollow@AdcTarget+1),w
  3014  02D9  1803               	skipnc
  3015  02DA  3E01               	addlw	1
  3016  02DB  3E00               	addlw	high(01Eh)
  3017  02DC  00DA               	movwf	1+(??_robotFollow+0)+0
  3018  02DD  085A               	movf	1+(??_robotFollow+0)+0,w
  3019  02DE  0267               	subwf	(_adcVal+1),w	;volatile
  3020  02DF  1D03               	skipz
  3021  02E0  2AE3               	goto	u4935
  3022  02E1  0859               	movf	0+(??_robotFollow+0)+0,w
  3023  02E2  0266               	subwf	(_adcVal),w	;volatile
  3024  02E3                     u4935:
  3025  02E3  1C03               	skipc
  3026  02E4  2AE6               	goto	u4931
  3027  02E5  2AE7               	goto	u4930
  3028  02E6                     u4931:
  3029  02E6  2AEF               	goto	l11330
  3030  02E7                     u4930:
  3031                           	line	193
  3032                           	
  3033  02E7                     l11326:	
  3034                           ;robot.c: 192: {
  3035                           ;robot.c: 193: ROBOTerror = 11;
  3036  02E7  300B               	movlw	(0Bh)
  3037  02E8  00D9               	movwf	(??_robotFollow+0)+0
  3038  02E9  0859               	movf	(??_robotFollow+0)+0,w
  3039  02EA  1683               	bsf	status, 5	;RP0=1, select bank1
  3040  02EB  1303               	bcf	status, 6	;RP1=0, select bank1
  3041  02EC  00CE               	movwf	(_ROBOTerror)^080h
  3042                           	line	194
  3043                           ;robot.c: 194: break;
  3044  02ED  2BAB               	goto	l11360
  3045                           	line	195
  3046                           	
  3047  02EE                     l11328:	
  3048                           ;robot.c: 195: }
  3049  02EE  2B02               	goto	l6067
  3050                           	line	196
  3051                           	
  3052  02EF                     l6073:	
  3053                           	line	198
  3054                           	
  3055  02EF                     l11330:	
  3056                           ;robot.c: 196: else
  3057                           ;robot.c: 197: {
  3058                           ;robot.c: 198: RobotDrive(speed, 0x7FFF);
  3059  02EF  1283               	bcf	status, 5	;RP0=0, select bank0
  3060  02F0  0856               	movf	(robotFollow@speed+1),w
  3061  02F1  01A3               	clrf	(?_RobotDrive+1)
  3062  02F2  07A3               	addwf	(?_RobotDrive+1)
  3063  02F3  0855               	movf	(robotFollow@speed),w
  3064  02F4  01A2               	clrf	(?_RobotDrive)
  3065  02F5  07A2               	addwf	(?_RobotDrive)
  3066                           
  3067  02F6  30FF               	movlw	low(07FFFh)
  3068  02F7  00A4               	movwf	0+(?_RobotDrive)+02h
  3069  02F8  307F               	movlw	high(07FFFh)
  3070  02F9  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3071  02FA  120A  158A  2194   	fcall	_RobotDrive
              120A  118A         
  3072  02FF  2B02               	goto	l6067
  3073                           	line	199
  3074                           	
  3075  0300                     l6074:	
  3076  0300  2B02               	goto	l6067
  3077                           	
  3078  0301                     l6072:	
  3079  0301  2B02               	goto	l6067
  3080                           	
  3081  0302                     l6069:	
  3082                           	
  3083  0302                     l6067:	
  3084                           	line	200
  3085                           ;robot.c: 199: }
  3086                           ;robot.c: 200: robot_read(0);
  3087  0302  3000               	movlw	(0)
  3088  0303  120A  118A  23D1   	fcall	_robot_read
              120A  118A         
  3089                           	line	201
  3090                           	
  3091  0308                     l11332:	
  3092                           ;robot.c: 201: if (BumpSensors)
  3093  0308  1283               	bcf	status, 5	;RP0=0, select bank0
  3094  0309  1303               	bcf	status, 6	;RP1=0, select bank0
  3095  030A  086A               	movf	(_BumpSensors),w	;volatile
  3096  030B  1D03               	skipz
  3097  030C  2B0E               	goto	u4940
  3098  030D  2B14               	goto	l11336
  3099  030E                     u4940:
  3100                           	line	203
  3101                           	
  3102  030E                     l11334:	
  3103                           ;robot.c: 202: {
  3104                           ;robot.c: 203: ROBOTerror = 1;
  3105  030E  1683               	bsf	status, 5	;RP0=1, select bank1
  3106  030F  1303               	bcf	status, 6	;RP1=0, select bank1
  3107  0310  01CE               	clrf	(_ROBOTerror)^080h
  3108  0311  1403               	bsf	status,0
  3109  0312  0DCE               	rlf	(_ROBOTerror)^080h,f
  3110                           	line	204
  3111                           ;robot.c: 204: break;
  3112  0313  2BAB               	goto	l11360
  3113                           	line	205
  3114                           	
  3115  0314                     l6075:	
  3116                           	line	206
  3117                           	
  3118  0314                     l11336:	
  3119                           ;robot.c: 205: }
  3120                           ;robot.c: 206: if (VwallSensor)
  3121  0314  1283               	bcf	status, 5	;RP0=0, select bank0
  3122  0315  086B               	movf	(_VwallSensor),w	;volatile
  3123  0316  1D03               	skipz
  3124  0317  2B19               	goto	u4950
  3125  0318  2B20               	goto	l11340
  3126  0319                     u4950:
  3127                           	line	208
  3128                           	
  3129  0319                     l11338:	
  3130                           ;robot.c: 207: {
  3131                           ;robot.c: 208: ROBOTerror = 2;
  3132  0319  3002               	movlw	(02h)
  3133  031A  00D9               	movwf	(??_robotFollow+0)+0
  3134  031B  0859               	movf	(??_robotFollow+0)+0,w
  3135  031C  1683               	bsf	status, 5	;RP0=1, select bank1
  3136  031D  1303               	bcf	status, 6	;RP1=0, select bank1
  3137  031E  00CE               	movwf	(_ROBOTerror)^080h
  3138                           	line	209
  3139                           ;robot.c: 209: break;
  3140  031F  2BAB               	goto	l11360
  3141                           	line	210
  3142                           	
  3143  0320                     l6076:	
  3144                           	line	211
  3145                           	
  3146  0320                     l11340:	
  3147                           ;robot.c: 210: }
  3148                           ;robot.c: 211: if (CliffSensors)
  3149  0320  1683               	bsf	status, 5	;RP0=1, select bank1
  3150  0321  1303               	bcf	status, 6	;RP1=0, select bank1
  3151  0322  0849               	movf	(_CliffSensors)^080h,w	;volatile
  3152  0323  1D03               	skipz
  3153  0324  2B26               	goto	u4960
  3154  0325  2B2F               	goto	l11344
  3155  0326                     u4960:
  3156                           	line	213
  3157                           	
  3158  0326                     l11342:	
  3159                           ;robot.c: 212: {
  3160                           ;robot.c: 213: ROBOTerror = 3;
  3161  0326  3003               	movlw	(03h)
  3162  0327  1283               	bcf	status, 5	;RP0=0, select bank0
  3163  0328  1303               	bcf	status, 6	;RP1=0, select bank0
  3164  0329  00D9               	movwf	(??_robotFollow+0)+0
  3165  032A  0859               	movf	(??_robotFollow+0)+0,w
  3166  032B  1683               	bsf	status, 5	;RP0=1, select bank1
  3167  032C  1303               	bcf	status, 6	;RP1=0, select bank1
  3168  032D  00CE               	movwf	(_ROBOTerror)^080h
  3169                           	line	214
  3170                           ;robot.c: 214: break;
  3171  032E  2BAB               	goto	l11360
  3172                           	line	215
  3173                           	
  3174  032F                     l6077:	
  3175                           	line	216
  3176                           	
  3177  032F                     l11344:	
  3178                           ;robot.c: 215: }
  3179                           ;robot.c: 216: temp1 = DistHighByte;
  3180  032F  084A               	movf	(_DistHighByte)^080h,w	;volatile
  3181  0330  1283               	bcf	status, 5	;RP0=0, select bank0
  3182  0331  1303               	bcf	status, 6	;RP1=0, select bank0
  3183  0332  00D9               	movwf	(??_robotFollow+0)+0
  3184  0333  01DA               	clrf	(??_robotFollow+0)+0+1
  3185  0334  0859               	movf	0+(??_robotFollow+0)+0,w
  3186  0335  00DC               	movwf	(robotFollow@temp1)
  3187  0336  085A               	movf	1+(??_robotFollow+0)+0,w
  3188  0337  00DD               	movwf	(robotFollow@temp1+1)
  3189                           	line	217
  3190                           	
  3191  0338                     l11346:	
  3192                           ;robot.c: 217: temp1 = temp1 << 8;
  3193  0338  085D               	movf	(robotFollow@temp1+1),w
  3194  0339  00DA               	movwf	(??_robotFollow+0)+0+1
  3195  033A  085C               	movf	(robotFollow@temp1),w
  3196  033B  00D9               	movwf	(??_robotFollow+0)+0
  3197  033C  0859               	movf	(??_robotFollow+0)+0,w
  3198  033D  00DA               	movwf	(??_robotFollow+0)+1
  3199  033E  01D9               	clrf	(??_robotFollow+0)+0
  3200  033F  0859               	movf	0+(??_robotFollow+0)+0,w
  3201  0340  00DC               	movwf	(robotFollow@temp1)
  3202  0341  085A               	movf	1+(??_robotFollow+0)+0,w
  3203  0342  00DD               	movwf	(robotFollow@temp1+1)
  3204                           	line	218
  3205                           	
  3206  0343                     l11348:	
  3207                           ;robot.c: 218: temp1 += DistLowByte;
  3208  0343  1683               	bsf	status, 5	;RP0=1, select bank1
  3209  0344  1303               	bcf	status, 6	;RP1=0, select bank1
  3210  0345  084B               	movf	(_DistLowByte)^080h,w	;volatile
  3211  0346  1283               	bcf	status, 5	;RP0=0, select bank0
  3212  0347  1303               	bcf	status, 6	;RP1=0, select bank0
  3213  0348  00D9               	movwf	(??_robotFollow+0)+0
  3214  0349  01DA               	clrf	(??_robotFollow+0)+0+1
  3215  034A  0859               	movf	0+(??_robotFollow+0)+0,w
  3216  034B  07DC               	addwf	(robotFollow@temp1),f
  3217  034C  1803               	skipnc
  3218  034D  0ADD               	incf	(robotFollow@temp1+1),f
  3219  034E  085A               	movf	1+(??_robotFollow+0)+0,w
  3220  034F  07DD               	addwf	(robotFollow@temp1+1),f
  3221                           	line	219
  3222                           	
  3223  0350                     l11350:	
  3224                           ;robot.c: 219: distTravelled += temp1;
  3225  0350  085C               	movf	(robotFollow@temp1),w
  3226  0351  1683               	bsf	status, 5	;RP0=1, select bank1
  3227  0352  1303               	bcf	status, 6	;RP1=0, select bank1
  3228  0353  07BC               	addwf	(_distTravelled)^080h,f
  3229  0354  1803               	skipnc
  3230  0355  0ABD               	incf	(_distTravelled+1)^080h,f
  3231  0356  1283               	bcf	status, 5	;RP0=0, select bank0
  3232  0357  1303               	bcf	status, 6	;RP1=0, select bank0
  3233  0358  085D               	movf	(robotFollow@temp1+1),w
  3234  0359  1683               	bsf	status, 5	;RP0=1, select bank1
  3235  035A  1303               	bcf	status, 6	;RP1=0, select bank1
  3236  035B  07BD               	addwf	(_distTravelled+1)^080h,f
  3237                           	line	220
  3238                           	
  3239  035C                     l11352:	
  3240                           ;robot.c: 220: TotalDistTravelled += temp1;
  3241  035C  1283               	bcf	status, 5	;RP0=0, select bank0
  3242  035D  1303               	bcf	status, 6	;RP1=0, select bank0
  3243  035E  085C               	movf	(robotFollow@temp1),w
  3244  035F  1683               	bsf	status, 5	;RP0=1, select bank1
  3245  0360  1303               	bcf	status, 6	;RP1=0, select bank1
  3246  0361  07B8               	addwf	(_TotalDistTravelled)^080h,f
  3247  0362  1803               	skipnc
  3248  0363  0AB9               	incf	(_TotalDistTravelled+1)^080h,f
  3249  0364  1283               	bcf	status, 5	;RP0=0, select bank0
  3250  0365  1303               	bcf	status, 6	;RP1=0, select bank0
  3251  0366  085D               	movf	(robotFollow@temp1+1),w
  3252  0367  1683               	bsf	status, 5	;RP0=1, select bank1
  3253  0368  1303               	bcf	status, 6	;RP1=0, select bank1
  3254  0369  07B9               	addwf	(_TotalDistTravelled+1)^080h,f
  3255                           	line	221
  3256                           	
  3257  036A                     l11354:	
  3258                           ;robot.c: 221: Disp2 = distTravelled;
  3259  036A  083D               	movf	(_distTravelled+1)^080h,w
  3260  036B  01B3               	clrf	(_Disp2+1)^080h
  3261  036C  07B3               	addwf	(_Disp2+1)^080h
  3262  036D  083C               	movf	(_distTravelled)^080h,w
  3263  036E  01B2               	clrf	(_Disp2)^080h
  3264  036F  07B2               	addwf	(_Disp2)^080h
  3265                           
  3266                           	line	222
  3267                           	
  3268  0370                     l11356:	
  3269                           ;robot.c: 222: UpdateDisplay();
  3270  0370  120A  118A  2533   	fcall	_UpdateDisplay
              120A  118A         
  3271  0375  2B76               	goto	l11358
  3272                           	line	228
  3273                           	
  3274  0376                     l6064:	
  3275                           	line	174
  3276                           	
  3277  0376                     l11358:	
  3278  0376  1683               	bsf	status, 5	;RP0=1, select bank1
  3279  0377  1303               	bcf	status, 6	;RP1=0, select bank1
  3280  0378  083D               	movf	(_distTravelled+1)^080h,w
  3281  0379  1283               	bcf	status, 5	;RP0=0, select bank0
  3282  037A  1303               	bcf	status, 6	;RP1=0, select bank0
  3283  037B  01A7               	clrf	(?_abs+1)
  3284  037C  07A7               	addwf	(?_abs+1)
  3285  037D  1683               	bsf	status, 5	;RP0=1, select bank1
  3286  037E  1303               	bcf	status, 6	;RP1=0, select bank1
  3287  037F  083C               	movf	(_distTravelled)^080h,w
  3288  0380  1283               	bcf	status, 5	;RP0=0, select bank0
  3289  0381  1303               	bcf	status, 6	;RP1=0, select bank0
  3290  0382  01A6               	clrf	(?_abs)
  3291  0383  07A6               	addwf	(?_abs)
  3292                           
  3293  0384  120A  158A  215F   	fcall	_abs
              120A  118A         
  3294  0389  1283               	bcf	status, 5	;RP0=0, select bank0
  3295  038A  1303               	bcf	status, 6	;RP1=0, select bank0
  3296  038B  0826               	movf	(0+?_abs),w
  3297  038C  00D9               	movwf	(??_robotFollow+0)+0
  3298  038D  0827               	movf	(1+?_abs),w
  3299  038E  00DA               	movwf	((??_robotFollow+0)+0+1)
  3300  038F  0854               	movf	(robotFollow@distance+1),w
  3301  0390  01A7               	clrf	(?_abs+1)
  3302  0391  07A7               	addwf	(?_abs+1)
  3303  0392  0853               	movf	(robotFollow@distance),w
  3304  0393  01A6               	clrf	(?_abs)
  3305  0394  07A6               	addwf	(?_abs)
  3306                           
  3307  0395  120A  158A  215F   	fcall	_abs
              120A  118A         
  3308  039A  1283               	bcf	status, 5	;RP0=0, select bank0
  3309  039B  1303               	bcf	status, 6	;RP1=0, select bank0
  3310  039C  085A               	movf	1+(??_robotFollow+0)+0,w
  3311  039D  3A80               	xorlw	80h
  3312  039E  00DB               	movwf	(??_robotFollow+2)+0
  3313  039F  0827               	movf	(1+(?_abs)),w
  3314  03A0  3A80               	xorlw	80h
  3315  03A1  025B               	subwf	(??_robotFollow+2)+0,w
  3316  03A2  1D03               	skipz
  3317  03A3  2BA6               	goto	u4975
  3318  03A4  0826               	movf	(0+(?_abs)),w
  3319  03A5  0259               	subwf	0+(??_robotFollow+0)+0,w
  3320  03A6                     u4975:
  3321                           
  3322  03A6  1C03               	skipc
  3323  03A7  2BA9               	goto	u4971
  3324  03A8  2BAA               	goto	u4970
  3325  03A9                     u4971:
  3326  03A9  2A47               	goto	l11304
  3327  03AA                     u4970:
  3328  03AA  2BAB               	goto	l11360
  3329                           	
  3330  03AB                     l6071:	
  3331                           	line	229
  3332                           	
  3333  03AB                     l11360:	
  3334                           ;robot.c: 228: }
  3335                           ;robot.c: 229: Disp2 = ROBOTerror;
  3336  03AB  1683               	bsf	status, 5	;RP0=1, select bank1
  3337  03AC  1303               	bcf	status, 6	;RP1=0, select bank1
  3338  03AD  084E               	movf	(_ROBOTerror)^080h,w
  3339  03AE  1283               	bcf	status, 5	;RP0=0, select bank0
  3340  03AF  1303               	bcf	status, 6	;RP1=0, select bank0
  3341  03B0  00D9               	movwf	(??_robotFollow+0)+0
  3342  03B1  01DA               	clrf	(??_robotFollow+0)+0+1
  3343  03B2  0859               	movf	0+(??_robotFollow+0)+0,w
  3344  03B3  1683               	bsf	status, 5	;RP0=1, select bank1
  3345  03B4  1303               	bcf	status, 6	;RP1=0, select bank1
  3346  03B5  00B2               	movwf	(_Disp2)^080h
  3347  03B6  1283               	bcf	status, 5	;RP0=0, select bank0
  3348  03B7  1303               	bcf	status, 6	;RP1=0, select bank0
  3349  03B8  085A               	movf	1+(??_robotFollow+0)+0,w
  3350  03B9  1683               	bsf	status, 5	;RP0=1, select bank1
  3351  03BA  1303               	bcf	status, 6	;RP1=0, select bank1
  3352  03BB  00B3               	movwf	(_Disp2+1)^080h
  3353                           	line	230
  3354                           	
  3355  03BC                     l11362:	
  3356                           ;robot.c: 230: UpdateDisplay();
  3357  03BC  120A  118A  2533   	fcall	_UpdateDisplay
              120A  118A         
  3358                           	line	231
  3359                           	
  3360  03C1                     l11364:	
  3361                           ;robot.c: 231: RobotDrive(0, 0x7FFF);
  3362  03C1  3000               	movlw	low(0)
  3363  03C2  1283               	bcf	status, 5	;RP0=0, select bank0
  3364  03C3  1303               	bcf	status, 6	;RP1=0, select bank0
  3365  03C4  00A2               	movwf	(?_RobotDrive)
  3366  03C5  3000               	movlw	high(0)
  3367  03C6  00A3               	movwf	((?_RobotDrive))+1
  3368  03C7  30FF               	movlw	low(07FFFh)
  3369  03C8  00A4               	movwf	0+(?_RobotDrive)+02h
  3370  03C9  307F               	movlw	high(07FFFh)
  3371  03CA  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3372  03CB  120A  158A  2194   	fcall	_RobotDrive
              120A  118A         
  3373                           	line	233
  3374                           	
  3375  03D0                     l6078:	
  3376  03D0  0008               	return
  3377                           	opt stack 0
  3378                           GLOBAL	__end_of_robotFollow
  3379  03D1                     	__end_of_robotFollow:
  3380 ;; =============== function _robotFollow ends ============
  3381                           
  3382                           	signat	_robotFollow,12408
  3383                           	global	_robotMoveSpeed
  3384                           psect	text953,local,class=CODE,delta=2
  3385                           global __ptext953
  3386  0F1B                     __ptext953:
  3387                           
  3388 ;; *************** function _robotMoveSpeed *****************
  3389 ;; Defined at:
  3390 ;;		line 240 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  distance        2   51[BANK0 ] int 
  3393 ;;  speed           2   53[BANK0 ] int 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  temp1           2   58[BANK0 ] int 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;		None               void
  3398 ;; Registers used:
  3399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         0       4       0       0       0
  3406 ;;      Locals:         0       2       0       0       0
  3407 ;;      Temps:          0       3       0       0       0
  3408 ;;      Totals:         0       9       0       0       0
  3409 ;;Total ram usage:        9 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    6
  3412 ;; This function calls:
  3413 ;;		_RobotDrive
  3414 ;;		_robot_read
  3415 ;;		_UpdateDisplay
  3416 ;;		_abs
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           psect	text953
  3422                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3423                           	line	240
  3424                           	global	__size_of_robotMoveSpeed
  3425  00E5                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  3426                           	
  3427  0F1B                     _robotMoveSpeed:	
  3428                           	opt	stack 1
  3429                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3430                           	line	241
  3431                           	
  3432  0F1B                     l11258:	
  3433                           ;robot.c: 241: distTravelled = 0;
  3434  0F1B  1683               	bsf	status, 5	;RP0=1, select bank1
  3435  0F1C  1303               	bcf	status, 6	;RP1=0, select bank1
  3436  0F1D  01BC               	clrf	(_distTravelled)^080h
  3437  0F1E  01BD               	clrf	(_distTravelled+1)^080h
  3438                           	line	243
  3439                           	
  3440  0F1F                     l11260:	
  3441                           ;robot.c: 242: int temp1;
  3442                           ;robot.c: 243: RobotDrive(speed, 0x7FFF);
  3443  0F1F  1283               	bcf	status, 5	;RP0=0, select bank0
  3444  0F20  1303               	bcf	status, 6	;RP1=0, select bank0
  3445  0F21  0856               	movf	(robotMoveSpeed@speed+1),w
  3446  0F22  01A3               	clrf	(?_RobotDrive+1)
  3447  0F23  07A3               	addwf	(?_RobotDrive+1)
  3448  0F24  0855               	movf	(robotMoveSpeed@speed),w
  3449  0F25  01A2               	clrf	(?_RobotDrive)
  3450  0F26  07A2               	addwf	(?_RobotDrive)
  3451                           
  3452  0F27  30FF               	movlw	low(07FFFh)
  3453  0F28  00A4               	movwf	0+(?_RobotDrive)+02h
  3454  0F29  307F               	movlw	high(07FFFh)
  3455  0F2A  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3456  0F2B  120A  158A  2194   	fcall	_RobotDrive
              120A  158A         
  3457                           	line	246
  3458                           ;robot.c: 246: while (abs(distTravelled) < abs(distance))
  3459  0F30  2FA5               	goto	l11290
  3460                           	
  3461  0F31                     l6082:	
  3462                           	line	248
  3463                           	
  3464  0F31                     l11262:	
  3465                           ;robot.c: 247: {
  3466                           ;robot.c: 248: robot_read(0);
  3467  0F31  3000               	movlw	(0)
  3468  0F32  120A  118A  23D1   	fcall	_robot_read
              120A  158A         
  3469                           	line	249
  3470                           	
  3471  0F37                     l11264:	
  3472                           ;robot.c: 249: if (BumpSensors)
  3473  0F37  1283               	bcf	status, 5	;RP0=0, select bank0
  3474  0F38  1303               	bcf	status, 6	;RP1=0, select bank0
  3475  0F39  086A               	movf	(_BumpSensors),w	;volatile
  3476  0F3A  1D03               	skipz
  3477  0F3B  2F3D               	goto	u4840
  3478  0F3C  2F43               	goto	l11268
  3479  0F3D                     u4840:
  3480                           	line	251
  3481                           	
  3482  0F3D                     l11266:	
  3483                           ;robot.c: 250: {
  3484                           ;robot.c: 251: ROBOTerror = 1;
  3485  0F3D  1683               	bsf	status, 5	;RP0=1, select bank1
  3486  0F3E  1303               	bcf	status, 6	;RP1=0, select bank1
  3487  0F3F  01CE               	clrf	(_ROBOTerror)^080h
  3488  0F40  1403               	bsf	status,0
  3489  0F41  0DCE               	rlf	(_ROBOTerror)^080h,f
  3490                           	line	252
  3491                           ;robot.c: 252: break;
  3492  0F42  2FDA               	goto	l11292
  3493                           	line	253
  3494                           	
  3495  0F43                     l6083:	
  3496                           	line	254
  3497                           	
  3498  0F43                     l11268:	
  3499                           ;robot.c: 253: }
  3500                           ;robot.c: 254: if (VwallSensor)
  3501  0F43  1283               	bcf	status, 5	;RP0=0, select bank0
  3502  0F44  086B               	movf	(_VwallSensor),w	;volatile
  3503  0F45  1D03               	skipz
  3504  0F46  2F48               	goto	u4850
  3505  0F47  2F4F               	goto	l11272
  3506  0F48                     u4850:
  3507                           	line	256
  3508                           	
  3509  0F48                     l11270:	
  3510                           ;robot.c: 255: {
  3511                           ;robot.c: 256: ROBOTerror = 2;
  3512  0F48  3002               	movlw	(02h)
  3513  0F49  00D7               	movwf	(??_robotMoveSpeed+0)+0
  3514  0F4A  0857               	movf	(??_robotMoveSpeed+0)+0,w
  3515  0F4B  1683               	bsf	status, 5	;RP0=1, select bank1
  3516  0F4C  1303               	bcf	status, 6	;RP1=0, select bank1
  3517  0F4D  00CE               	movwf	(_ROBOTerror)^080h
  3518                           	line	257
  3519                           ;robot.c: 257: break;
  3520  0F4E  2FDA               	goto	l11292
  3521                           	line	258
  3522                           	
  3523  0F4F                     l6085:	
  3524                           	line	259
  3525                           	
  3526  0F4F                     l11272:	
  3527                           ;robot.c: 258: }
  3528                           ;robot.c: 259: if (CliffSensors)
  3529  0F4F  1683               	bsf	status, 5	;RP0=1, select bank1
  3530  0F50  1303               	bcf	status, 6	;RP1=0, select bank1
  3531  0F51  0849               	movf	(_CliffSensors)^080h,w	;volatile
  3532  0F52  1D03               	skipz
  3533  0F53  2F55               	goto	u4860
  3534  0F54  2F5E               	goto	l11276
  3535  0F55                     u4860:
  3536                           	line	261
  3537                           	
  3538  0F55                     l11274:	
  3539                           ;robot.c: 260: {
  3540                           ;robot.c: 261: ROBOTerror = 3;
  3541  0F55  3003               	movlw	(03h)
  3542  0F56  1283               	bcf	status, 5	;RP0=0, select bank0
  3543  0F57  1303               	bcf	status, 6	;RP1=0, select bank0
  3544  0F58  00D7               	movwf	(??_robotMoveSpeed+0)+0
  3545  0F59  0857               	movf	(??_robotMoveSpeed+0)+0,w
  3546  0F5A  1683               	bsf	status, 5	;RP0=1, select bank1
  3547  0F5B  1303               	bcf	status, 6	;RP1=0, select bank1
  3548  0F5C  00CE               	movwf	(_ROBOTerror)^080h
  3549                           	line	262
  3550                           ;robot.c: 262: break;
  3551  0F5D  2FDA               	goto	l11292
  3552                           	line	263
  3553                           	
  3554  0F5E                     l6086:	
  3555                           	line	264
  3556                           	
  3557  0F5E                     l11276:	
  3558                           ;robot.c: 263: }
  3559                           ;robot.c: 264: temp1 = DistHighByte;
  3560  0F5E  084A               	movf	(_DistHighByte)^080h,w	;volatile
  3561  0F5F  1283               	bcf	status, 5	;RP0=0, select bank0
  3562  0F60  1303               	bcf	status, 6	;RP1=0, select bank0
  3563  0F61  00D7               	movwf	(??_robotMoveSpeed+0)+0
  3564  0F62  01D8               	clrf	(??_robotMoveSpeed+0)+0+1
  3565  0F63  0857               	movf	0+(??_robotMoveSpeed+0)+0,w
  3566  0F64  00DA               	movwf	(robotMoveSpeed@temp1)
  3567  0F65  0858               	movf	1+(??_robotMoveSpeed+0)+0,w
  3568  0F66  00DB               	movwf	(robotMoveSpeed@temp1+1)
  3569                           	line	265
  3570                           	
  3571  0F67                     l11278:	
  3572                           ;robot.c: 265: temp1 = temp1 << 8;
  3573  0F67  085B               	movf	(robotMoveSpeed@temp1+1),w
  3574  0F68  00D8               	movwf	(??_robotMoveSpeed+0)+0+1
  3575  0F69  085A               	movf	(robotMoveSpeed@temp1),w
  3576  0F6A  00D7               	movwf	(??_robotMoveSpeed+0)+0
  3577  0F6B  0857               	movf	(??_robotMoveSpeed+0)+0,w
  3578  0F6C  00D8               	movwf	(??_robotMoveSpeed+0)+1
  3579  0F6D  01D7               	clrf	(??_robotMoveSpeed+0)+0
  3580  0F6E  0857               	movf	0+(??_robotMoveSpeed+0)+0,w
  3581  0F6F  00DA               	movwf	(robotMoveSpeed@temp1)
  3582  0F70  0858               	movf	1+(??_robotMoveSpeed+0)+0,w
  3583  0F71  00DB               	movwf	(robotMoveSpeed@temp1+1)
  3584                           	line	266
  3585                           	
  3586  0F72                     l11280:	
  3587                           ;robot.c: 266: temp1 += DistLowByte;
  3588  0F72  1683               	bsf	status, 5	;RP0=1, select bank1
  3589  0F73  1303               	bcf	status, 6	;RP1=0, select bank1
  3590  0F74  084B               	movf	(_DistLowByte)^080h,w	;volatile
  3591  0F75  1283               	bcf	status, 5	;RP0=0, select bank0
  3592  0F76  1303               	bcf	status, 6	;RP1=0, select bank0
  3593  0F77  00D7               	movwf	(??_robotMoveSpeed+0)+0
  3594  0F78  01D8               	clrf	(??_robotMoveSpeed+0)+0+1
  3595  0F79  0857               	movf	0+(??_robotMoveSpeed+0)+0,w
  3596  0F7A  07DA               	addwf	(robotMoveSpeed@temp1),f
  3597  0F7B  1803               	skipnc
  3598  0F7C  0ADB               	incf	(robotMoveSpeed@temp1+1),f
  3599  0F7D  0858               	movf	1+(??_robotMoveSpeed+0)+0,w
  3600  0F7E  07DB               	addwf	(robotMoveSpeed@temp1+1),f
  3601                           	line	267
  3602                           	
  3603  0F7F                     l11282:	
  3604                           ;robot.c: 267: distTravelled += temp1;
  3605  0F7F  085A               	movf	(robotMoveSpeed@temp1),w
  3606  0F80  1683               	bsf	status, 5	;RP0=1, select bank1
  3607  0F81  1303               	bcf	status, 6	;RP1=0, select bank1
  3608  0F82  07BC               	addwf	(_distTravelled)^080h,f
  3609  0F83  1803               	skipnc
  3610  0F84  0ABD               	incf	(_distTravelled+1)^080h,f
  3611  0F85  1283               	bcf	status, 5	;RP0=0, select bank0
  3612  0F86  1303               	bcf	status, 6	;RP1=0, select bank0
  3613  0F87  085B               	movf	(robotMoveSpeed@temp1+1),w
  3614  0F88  1683               	bsf	status, 5	;RP0=1, select bank1
  3615  0F89  1303               	bcf	status, 6	;RP1=0, select bank1
  3616  0F8A  07BD               	addwf	(_distTravelled+1)^080h,f
  3617                           	line	268
  3618                           	
  3619  0F8B                     l11284:	
  3620                           ;robot.c: 268: TotalDistTravelled += temp1;
  3621  0F8B  1283               	bcf	status, 5	;RP0=0, select bank0
  3622  0F8C  1303               	bcf	status, 6	;RP1=0, select bank0
  3623  0F8D  085A               	movf	(robotMoveSpeed@temp1),w
  3624  0F8E  1683               	bsf	status, 5	;RP0=1, select bank1
  3625  0F8F  1303               	bcf	status, 6	;RP1=0, select bank1
  3626  0F90  07B8               	addwf	(_TotalDistTravelled)^080h,f
  3627  0F91  1803               	skipnc
  3628  0F92  0AB9               	incf	(_TotalDistTravelled+1)^080h,f
  3629  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
  3630  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
  3631  0F95  085B               	movf	(robotMoveSpeed@temp1+1),w
  3632  0F96  1683               	bsf	status, 5	;RP0=1, select bank1
  3633  0F97  1303               	bcf	status, 6	;RP1=0, select bank1
  3634  0F98  07B9               	addwf	(_TotalDistTravelled+1)^080h,f
  3635                           	line	269
  3636                           	
  3637  0F99                     l11286:	
  3638                           ;robot.c: 269: Disp2 = distTravelled;
  3639  0F99  083D               	movf	(_distTravelled+1)^080h,w
  3640  0F9A  01B3               	clrf	(_Disp2+1)^080h
  3641  0F9B  07B3               	addwf	(_Disp2+1)^080h
  3642  0F9C  083C               	movf	(_distTravelled)^080h,w
  3643  0F9D  01B2               	clrf	(_Disp2)^080h
  3644  0F9E  07B2               	addwf	(_Disp2)^080h
  3645                           
  3646                           	line	270
  3647                           	
  3648  0F9F                     l11288:	
  3649                           ;robot.c: 270: UpdateDisplay();
  3650  0F9F  120A  118A  2533   	fcall	_UpdateDisplay
              120A  158A         
  3651  0FA4  2FA5               	goto	l11290
  3652                           	line	276
  3653                           	
  3654  0FA5                     l6081:	
  3655                           	line	246
  3656                           	
  3657  0FA5                     l11290:	
  3658  0FA5  1683               	bsf	status, 5	;RP0=1, select bank1
  3659  0FA6  1303               	bcf	status, 6	;RP1=0, select bank1
  3660  0FA7  083D               	movf	(_distTravelled+1)^080h,w
  3661  0FA8  1283               	bcf	status, 5	;RP0=0, select bank0
  3662  0FA9  1303               	bcf	status, 6	;RP1=0, select bank0
  3663  0FAA  01A7               	clrf	(?_abs+1)
  3664  0FAB  07A7               	addwf	(?_abs+1)
  3665  0FAC  1683               	bsf	status, 5	;RP0=1, select bank1
  3666  0FAD  1303               	bcf	status, 6	;RP1=0, select bank1
  3667  0FAE  083C               	movf	(_distTravelled)^080h,w
  3668  0FAF  1283               	bcf	status, 5	;RP0=0, select bank0
  3669  0FB0  1303               	bcf	status, 6	;RP1=0, select bank0
  3670  0FB1  01A6               	clrf	(?_abs)
  3671  0FB2  07A6               	addwf	(?_abs)
  3672                           
  3673  0FB3  120A  158A  215F   	fcall	_abs
              120A  158A         
  3674  0FB8  1283               	bcf	status, 5	;RP0=0, select bank0
  3675  0FB9  1303               	bcf	status, 6	;RP1=0, select bank0
  3676  0FBA  0826               	movf	(0+?_abs),w
  3677  0FBB  00D7               	movwf	(??_robotMoveSpeed+0)+0
  3678  0FBC  0827               	movf	(1+?_abs),w
  3679  0FBD  00D8               	movwf	((??_robotMoveSpeed+0)+0+1)
  3680  0FBE  0854               	movf	(robotMoveSpeed@distance+1),w
  3681  0FBF  01A7               	clrf	(?_abs+1)
  3682  0FC0  07A7               	addwf	(?_abs+1)
  3683  0FC1  0853               	movf	(robotMoveSpeed@distance),w
  3684  0FC2  01A6               	clrf	(?_abs)
  3685  0FC3  07A6               	addwf	(?_abs)
  3686                           
  3687  0FC4  120A  158A  215F   	fcall	_abs
              120A  158A         
  3688  0FC9  1283               	bcf	status, 5	;RP0=0, select bank0
  3689  0FCA  1303               	bcf	status, 6	;RP1=0, select bank0
  3690  0FCB  0858               	movf	1+(??_robotMoveSpeed+0)+0,w
  3691  0FCC  3A80               	xorlw	80h
  3692  0FCD  00D9               	movwf	(??_robotMoveSpeed+2)+0
  3693  0FCE  0827               	movf	(1+(?_abs)),w
  3694  0FCF  3A80               	xorlw	80h
  3695  0FD0  0259               	subwf	(??_robotMoveSpeed+2)+0,w
  3696  0FD1  1D03               	skipz
  3697  0FD2  2FD5               	goto	u4875
  3698  0FD3  0826               	movf	(0+(?_abs)),w
  3699  0FD4  0257               	subwf	0+(??_robotMoveSpeed+0)+0,w
  3700  0FD5                     u4875:
  3701                           
  3702  0FD5  1C03               	skipc
  3703  0FD6  2FD8               	goto	u4871
  3704  0FD7  2FD9               	goto	u4870
  3705  0FD8                     u4871:
  3706  0FD8  2F31               	goto	l11262
  3707  0FD9                     u4870:
  3708  0FD9  2FDA               	goto	l11292
  3709                           	
  3710  0FDA                     l6084:	
  3711                           	line	277
  3712                           	
  3713  0FDA                     l11292:	
  3714                           ;robot.c: 276: }
  3715                           ;robot.c: 277: Disp2 = ROBOTerror;
  3716  0FDA  1683               	bsf	status, 5	;RP0=1, select bank1
  3717  0FDB  1303               	bcf	status, 6	;RP1=0, select bank1
  3718  0FDC  084E               	movf	(_ROBOTerror)^080h,w
  3719  0FDD  1283               	bcf	status, 5	;RP0=0, select bank0
  3720  0FDE  1303               	bcf	status, 6	;RP1=0, select bank0
  3721  0FDF  00D7               	movwf	(??_robotMoveSpeed+0)+0
  3722  0FE0  01D8               	clrf	(??_robotMoveSpeed+0)+0+1
  3723  0FE1  0857               	movf	0+(??_robotMoveSpeed+0)+0,w
  3724  0FE2  1683               	bsf	status, 5	;RP0=1, select bank1
  3725  0FE3  1303               	bcf	status, 6	;RP1=0, select bank1
  3726  0FE4  00B2               	movwf	(_Disp2)^080h
  3727  0FE5  1283               	bcf	status, 5	;RP0=0, select bank0
  3728  0FE6  1303               	bcf	status, 6	;RP1=0, select bank0
  3729  0FE7  0858               	movf	1+(??_robotMoveSpeed+0)+0,w
  3730  0FE8  1683               	bsf	status, 5	;RP0=1, select bank1
  3731  0FE9  1303               	bcf	status, 6	;RP1=0, select bank1
  3732  0FEA  00B3               	movwf	(_Disp2+1)^080h
  3733                           	line	278
  3734                           	
  3735  0FEB                     l11294:	
  3736                           ;robot.c: 278: UpdateDisplay();
  3737  0FEB  120A  118A  2533   	fcall	_UpdateDisplay
              120A  158A         
  3738                           	line	279
  3739                           	
  3740  0FF0                     l11296:	
  3741                           ;robot.c: 279: RobotDrive(0, 0x7FFF);
  3742  0FF0  3000               	movlw	low(0)
  3743  0FF1  1283               	bcf	status, 5	;RP0=0, select bank0
  3744  0FF2  1303               	bcf	status, 6	;RP1=0, select bank0
  3745  0FF3  00A2               	movwf	(?_RobotDrive)
  3746  0FF4  3000               	movlw	high(0)
  3747  0FF5  00A3               	movwf	((?_RobotDrive))+1
  3748  0FF6  30FF               	movlw	low(07FFFh)
  3749  0FF7  00A4               	movwf	0+(?_RobotDrive)+02h
  3750  0FF8  307F               	movlw	high(07FFFh)
  3751  0FF9  00A5               	movwf	(0+(?_RobotDrive)+02h)+1
  3752  0FFA  120A  158A  2194   	fcall	_RobotDrive
              120A  158A         
  3753                           	line	281
  3754                           	
  3755  0FFF                     l6087:	
  3756  0FFF  0008               	return
  3757                           	opt stack 0
  3758                           GLOBAL	__end_of_robotMoveSpeed
  3759  1000                     	__end_of_robotMoveSpeed:
  3760 ;; =============== function _robotMoveSpeed ends ============
  3761                           
  3762                           	signat	_robotMoveSpeed,8312
  3763                           	global	_robotTurnSpeed
  3764                           psect	text954,local,class=CODE,delta=2
  3765                           global __ptext954
  3766  0D16                     __ptext954:
  3767                           
  3768 ;; *************** function _robotTurnSpeed *****************
  3769 ;; Defined at:
  3770 ;;		line 288 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  angle           2   51[BANK0 ] int 
  3773 ;;  speed           2   53[BANK0 ] int 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  temp1           2   58[BANK0 ] int 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;		None               void
  3778 ;; Registers used:
  3779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3785 ;;      Params:         0       4       0       0       0
  3786 ;;      Locals:         0       2       0       0       0
  3787 ;;      Temps:          0       3       0       0       0
  3788 ;;      Totals:         0       9       0       0       0
  3789 ;;Total ram usage:        9 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    6
  3792 ;; This function calls:
  3793 ;;		_robotTurn
  3794 ;;		_robot_read
  3795 ;;		_UpdateDisplay
  3796 ;;		_abs
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           psect	text954
  3802                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3803                           	line	288
  3804                           	global	__size_of_robotTurnSpeed
  3805  00A8                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  3806                           	
  3807  0D16                     _robotTurnSpeed:	
  3808                           	opt	stack 1
  3809                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3810                           	line	289
  3811                           	
  3812  0D16                     l11230:	
  3813                           ;robot.c: 289: angleTurned = 0;
  3814  0D16  1683               	bsf	status, 5	;RP0=1, select bank1
  3815  0D17  1303               	bcf	status, 6	;RP1=0, select bank1
  3816  0D18  01BA               	clrf	(_angleTurned)^080h
  3817  0D19  01BB               	clrf	(_angleTurned+1)^080h
  3818                           	line	290
  3819                           ;robot.c: 290: int temp1 = 0;
  3820  0D1A  1283               	bcf	status, 5	;RP0=0, select bank0
  3821  0D1B  1303               	bcf	status, 6	;RP1=0, select bank0
  3822  0D1C  01DA               	clrf	(robotTurnSpeed@temp1)
  3823  0D1D  01DB               	clrf	(robotTurnSpeed@temp1+1)
  3824                           	line	292
  3825                           	
  3826  0D1E                     l11232:	
  3827                           ;robot.c: 292: robotTurn(angle);
  3828  0D1E  0854               	movf	(robotTurnSpeed@angle+1),w
  3829  0D1F  01A3               	clrf	(?_robotTurn+1)
  3830  0D20  07A3               	addwf	(?_robotTurn+1)
  3831  0D21  0853               	movf	(robotTurnSpeed@angle),w
  3832  0D22  01A2               	clrf	(?_robotTurn)
  3833  0D23  07A2               	addwf	(?_robotTurn)
  3834                           
  3835  0D24  120A  118A  2784   	fcall	_robotTurn
              120A  158A         
  3836                           	line	295
  3837                           ;robot.c: 295: while (abs(angleTurned) < abs(angle))
  3838  0D29  2D7D               	goto	l11254
  3839                           	
  3840  0D2A                     l6091:	
  3841                           	line	297
  3842                           	
  3843  0D2A                     l11234:	
  3844                           ;robot.c: 296: {
  3845                           ;robot.c: 297: robot_read(1);
  3846  0D2A  3001               	movlw	(01h)
  3847  0D2B  120A  118A  23D1   	fcall	_robot_read
              120A  158A         
  3848                           	line	298
  3849                           	
  3850  0D30                     l11236:	
  3851                           ;robot.c: 298: if (BumpSensors || VwallSensor)
  3852  0D30  1283               	bcf	status, 5	;RP0=0, select bank0
  3853  0D31  1303               	bcf	status, 6	;RP1=0, select bank0
  3854  0D32  08EA               	movf	(_BumpSensors),f
  3855  0D33  1D03               	skipz	;volatile
  3856  0D34  2D36               	goto	u4811
  3857  0D35  2D37               	goto	u4810
  3858  0D36                     u4811:
  3859  0D36  2D3C               	goto	l11240
  3860  0D37                     u4810:
  3861                           	
  3862  0D37                     l11238:	
  3863  0D37  086B               	movf	(_VwallSensor),w	;volatile
  3864  0D38  1D03               	skipz
  3865  0D39  2D3B               	goto	u4820
  3866  0D3A  2D42               	goto	l11242
  3867  0D3B                     u4820:
  3868  0D3B  2D3C               	goto	l11240
  3869                           	
  3870  0D3C                     l6094:	
  3871                           	line	300
  3872                           	
  3873  0D3C                     l11240:	
  3874                           ;robot.c: 299: {
  3875                           ;robot.c: 300: ROBOTerror = 1;
  3876  0D3C  1683               	bsf	status, 5	;RP0=1, select bank1
  3877  0D3D  1303               	bcf	status, 6	;RP1=0, select bank1
  3878  0D3E  01CE               	clrf	(_ROBOTerror)^080h
  3879  0D3F  1403               	bsf	status,0
  3880  0D40  0DCE               	rlf	(_ROBOTerror)^080h,f
  3881                           	line	301
  3882                           ;robot.c: 301: break;
  3883  0D41  2DB2               	goto	l11256
  3884                           	line	302
  3885                           	
  3886  0D42                     l6092:	
  3887                           	line	303
  3888                           	
  3889  0D42                     l11242:	
  3890                           ;robot.c: 302: }
  3891                           ;robot.c: 303: temp1 = AngleHighByte;
  3892  0D42  1683               	bsf	status, 5	;RP0=1, select bank1
  3893  0D43  1303               	bcf	status, 6	;RP1=0, select bank1
  3894  0D44  0846               	movf	(_AngleHighByte)^080h,w	;volatile
  3895  0D45  1283               	bcf	status, 5	;RP0=0, select bank0
  3896  0D46  1303               	bcf	status, 6	;RP1=0, select bank0
  3897  0D47  00D7               	movwf	(??_robotTurnSpeed+0)+0
  3898  0D48  01D8               	clrf	(??_robotTurnSpeed+0)+0+1
  3899  0D49  0857               	movf	0+(??_robotTurnSpeed+0)+0,w
  3900  0D4A  00DA               	movwf	(robotTurnSpeed@temp1)
  3901  0D4B  0858               	movf	1+(??_robotTurnSpeed+0)+0,w
  3902  0D4C  00DB               	movwf	(robotTurnSpeed@temp1+1)
  3903                           	line	304
  3904                           	
  3905  0D4D                     l11244:	
  3906                           ;robot.c: 304: temp1 = temp1 << 8;
  3907  0D4D  085B               	movf	(robotTurnSpeed@temp1+1),w
  3908  0D4E  00D8               	movwf	(??_robotTurnSpeed+0)+0+1
  3909  0D4F  085A               	movf	(robotTurnSpeed@temp1),w
  3910  0D50  00D7               	movwf	(??_robotTurnSpeed+0)+0
  3911  0D51  0857               	movf	(??_robotTurnSpeed+0)+0,w
  3912  0D52  00D8               	movwf	(??_robotTurnSpeed+0)+1
  3913  0D53  01D7               	clrf	(??_robotTurnSpeed+0)+0
  3914  0D54  0857               	movf	0+(??_robotTurnSpeed+0)+0,w
  3915  0D55  00DA               	movwf	(robotTurnSpeed@temp1)
  3916  0D56  0858               	movf	1+(??_robotTurnSpeed+0)+0,w
  3917  0D57  00DB               	movwf	(robotTurnSpeed@temp1+1)
  3918                           	line	305
  3919                           	
  3920  0D58                     l11246:	
  3921                           ;robot.c: 305: temp1 += AngleLowByte;
  3922  0D58  1683               	bsf	status, 5	;RP0=1, select bank1
  3923  0D59  1303               	bcf	status, 6	;RP1=0, select bank1
  3924  0D5A  0847               	movf	(_AngleLowByte)^080h,w	;volatile
  3925  0D5B  1283               	bcf	status, 5	;RP0=0, select bank0
  3926  0D5C  1303               	bcf	status, 6	;RP1=0, select bank0
  3927  0D5D  00D7               	movwf	(??_robotTurnSpeed+0)+0
  3928  0D5E  01D8               	clrf	(??_robotTurnSpeed+0)+0+1
  3929  0D5F  0857               	movf	0+(??_robotTurnSpeed+0)+0,w
  3930  0D60  07DA               	addwf	(robotTurnSpeed@temp1),f
  3931  0D61  1803               	skipnc
  3932  0D62  0ADB               	incf	(robotTurnSpeed@temp1+1),f
  3933  0D63  0858               	movf	1+(??_robotTurnSpeed+0)+0,w
  3934  0D64  07DB               	addwf	(robotTurnSpeed@temp1+1),f
  3935                           	line	306
  3936                           	
  3937  0D65                     l11248:	
  3938                           ;robot.c: 306: angleTurned += temp1;
  3939  0D65  085A               	movf	(robotTurnSpeed@temp1),w
  3940  0D66  1683               	bsf	status, 5	;RP0=1, select bank1
  3941  0D67  1303               	bcf	status, 6	;RP1=0, select bank1
  3942  0D68  07BA               	addwf	(_angleTurned)^080h,f
  3943  0D69  1803               	skipnc
  3944  0D6A  0ABB               	incf	(_angleTurned+1)^080h,f
  3945  0D6B  1283               	bcf	status, 5	;RP0=0, select bank0
  3946  0D6C  1303               	bcf	status, 6	;RP1=0, select bank0
  3947  0D6D  085B               	movf	(robotTurnSpeed@temp1+1),w
  3948  0D6E  1683               	bsf	status, 5	;RP0=1, select bank1
  3949  0D6F  1303               	bcf	status, 6	;RP1=0, select bank1
  3950  0D70  07BB               	addwf	(_angleTurned+1)^080h,f
  3951                           	line	307
  3952                           	
  3953  0D71                     l11250:	
  3954                           ;robot.c: 307: Disp2 = angleTurned;
  3955  0D71  083B               	movf	(_angleTurned+1)^080h,w
  3956  0D72  01B3               	clrf	(_Disp2+1)^080h
  3957  0D73  07B3               	addwf	(_Disp2+1)^080h
  3958  0D74  083A               	movf	(_angleTurned)^080h,w
  3959  0D75  01B2               	clrf	(_Disp2)^080h
  3960  0D76  07B2               	addwf	(_Disp2)^080h
  3961                           
  3962                           	line	308
  3963                           	
  3964  0D77                     l11252:	
  3965                           ;robot.c: 308: UpdateDisplay();
  3966  0D77  120A  118A  2533   	fcall	_UpdateDisplay
              120A  158A         
  3967  0D7C  2D7D               	goto	l11254
  3968                           	line	309
  3969                           	
  3970  0D7D                     l6090:	
  3971                           	line	295
  3972                           	
  3973  0D7D                     l11254:	
  3974  0D7D  1683               	bsf	status, 5	;RP0=1, select bank1
  3975  0D7E  1303               	bcf	status, 6	;RP1=0, select bank1
  3976  0D7F  083B               	movf	(_angleTurned+1)^080h,w
  3977  0D80  1283               	bcf	status, 5	;RP0=0, select bank0
  3978  0D81  1303               	bcf	status, 6	;RP1=0, select bank0
  3979  0D82  01A7               	clrf	(?_abs+1)
  3980  0D83  07A7               	addwf	(?_abs+1)
  3981  0D84  1683               	bsf	status, 5	;RP0=1, select bank1
  3982  0D85  1303               	bcf	status, 6	;RP1=0, select bank1
  3983  0D86  083A               	movf	(_angleTurned)^080h,w
  3984  0D87  1283               	bcf	status, 5	;RP0=0, select bank0
  3985  0D88  1303               	bcf	status, 6	;RP1=0, select bank0
  3986  0D89  01A6               	clrf	(?_abs)
  3987  0D8A  07A6               	addwf	(?_abs)
  3988                           
  3989  0D8B  120A  158A  215F   	fcall	_abs
              120A  158A         
  3990  0D90  1283               	bcf	status, 5	;RP0=0, select bank0
  3991  0D91  1303               	bcf	status, 6	;RP1=0, select bank0
  3992  0D92  0826               	movf	(0+?_abs),w
  3993  0D93  00D7               	movwf	(??_robotTurnSpeed+0)+0
  3994  0D94  0827               	movf	(1+?_abs),w
  3995  0D95  00D8               	movwf	((??_robotTurnSpeed+0)+0+1)
  3996  0D96  0854               	movf	(robotTurnSpeed@angle+1),w
  3997  0D97  01A7               	clrf	(?_abs+1)
  3998  0D98  07A7               	addwf	(?_abs+1)
  3999  0D99  0853               	movf	(robotTurnSpeed@angle),w
  4000  0D9A  01A6               	clrf	(?_abs)
  4001  0D9B  07A6               	addwf	(?_abs)
  4002                           
  4003  0D9C  120A  158A  215F   	fcall	_abs
              120A  158A         
  4004  0DA1  1283               	bcf	status, 5	;RP0=0, select bank0
  4005  0DA2  1303               	bcf	status, 6	;RP1=0, select bank0
  4006  0DA3  0858               	movf	1+(??_robotTurnSpeed+0)+0,w
  4007  0DA4  3A80               	xorlw	80h
  4008  0DA5  00D9               	movwf	(??_robotTurnSpeed+2)+0
  4009  0DA6  0827               	movf	(1+(?_abs)),w
  4010  0DA7  3A80               	xorlw	80h
  4011  0DA8  0259               	subwf	(??_robotTurnSpeed+2)+0,w
  4012  0DA9  1D03               	skipz
  4013  0DAA  2DAD               	goto	u4835
  4014  0DAB  0826               	movf	(0+(?_abs)),w
  4015  0DAC  0257               	subwf	0+(??_robotTurnSpeed+0)+0,w
  4016  0DAD                     u4835:
  4017                           
  4018  0DAD  1C03               	skipc
  4019  0DAE  2DB0               	goto	u4831
  4020  0DAF  2DB1               	goto	u4830
  4021  0DB0                     u4831:
  4022  0DB0  2D2A               	goto	l11234
  4023  0DB1                     u4830:
  4024  0DB1  2DB2               	goto	l11256
  4025                           	
  4026  0DB2                     l6095:	
  4027                           	line	311
  4028                           	
  4029  0DB2                     l11256:	
  4030                           ;robot.c: 309: }
  4031                           ;robot.c: 311: robotTurn(0);
  4032  0DB2  3000               	movlw	low(0)
  4033  0DB3  1283               	bcf	status, 5	;RP0=0, select bank0
  4034  0DB4  1303               	bcf	status, 6	;RP1=0, select bank0
  4035  0DB5  00A2               	movwf	(?_robotTurn)
  4036  0DB6  3000               	movlw	high(0)
  4037  0DB7  00A3               	movwf	((?_robotTurn))+1
  4038  0DB8  120A  118A  2784   	fcall	_robotTurn
              120A  158A         
  4039                           	line	312
  4040                           	
  4041  0DBD                     l6096:	
  4042  0DBD  0008               	return
  4043                           	opt stack 0
  4044                           GLOBAL	__end_of_robotTurnSpeed
  4045  0DBE                     	__end_of_robotTurnSpeed:
  4046 ;; =============== function _robotTurnSpeed ends ============
  4047                           
  4048                           	signat	_robotTurnSpeed,8312
  4049                           	global	_calibrateIR
  4050                           psect	text955,local,class=CODE,delta=2
  4051                           global __ptext955
  4052  0BB8                     __ptext955:
  4053                           
  4054 ;; *************** function _calibrateIR *****************
  4055 ;; Defined at:
  4056 ;;		line 399 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;		None               void
  4063 ;; Registers used:
  4064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         0       0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0
  4073 ;;      Totals:         0       0       0       0       0
  4074 ;;Total ram usage:        0 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    6
  4077 ;; This function calls:
  4078 ;;		_rotate
  4079 ;;		_UpdateDisplay
  4080 ;; This function is called by:
  4081 ;;		_main
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           psect	text955
  4085                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  4086                           	line	399
  4087                           	global	__size_of_calibrateIR
  4088  005E                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  4089                           	
  4090  0BB8                     _calibrateIR:	
  4091                           	opt	stack 1
  4092                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4093                           	line	400
  4094                           	
  4095  0BB8                     l11200:	
  4096                           ;Main.c: 400: currentMenu = 1;
  4097  0BB8  1683               	bsf	status, 5	;RP0=1, select bank1
  4098  0BB9  1303               	bcf	status, 6	;RP1=0, select bank1
  4099  0BBA  01D1               	clrf	(_currentMenu)^080h	;volatile
  4100  0BBB  1403               	bsf	status,0
  4101  0BBC  0DD1               	rlf	(_currentMenu)^080h,f	;volatile
  4102                           	line	401
  4103                           	
  4104  0BBD                     l11202:	
  4105                           ;Main.c: 401: rotate(8, 0);
  4106  0BBD  3008               	movlw	low(08h)
  4107  0BBE  1283               	bcf	status, 5	;RP0=0, select bank0
  4108  0BBF  1303               	bcf	status, 6	;RP1=0, select bank0
  4109  0BC0  00A3               	movwf	(?_rotate)
  4110  0BC1  3000               	movlw	high(08h)
  4111  0BC2  00A4               	movwf	((?_rotate))+1
  4112  0BC3  01A5               	clrf	0+(?_rotate)+02h
  4113  0BC4  120A  158A  2368   	fcall	_rotate
              120A  158A         
  4114  0BC9  2BCA               	goto	l11204
  4115                           	line	402
  4116                           ;Main.c: 402: while (1)
  4117                           	
  4118  0BCA                     l2266:	
  4119                           	line	404
  4120                           	
  4121  0BCA                     l11204:	
  4122                           ;Main.c: 403: {
  4123                           ;Main.c: 404: if (RTC_FLAG_250MS == 1)
  4124  0BCA  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4125  0BCB  2BCD               	goto	u4801
  4126  0BCC  2BCE               	goto	u4800
  4127  0BCD                     u4801:
  4128  0BCD  2C02               	goto	l11228
  4129  0BCE                     u4800:
  4130                           	line	406
  4131                           	
  4132  0BCE                     l11206:	
  4133                           ;Main.c: 405: {
  4134                           ;Main.c: 406: RTC_FLAG_250MS = 0;
  4135  0BCE  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  4136                           	line	407
  4137                           	
  4138  0BCF                     l11208:	
  4139                           ;Main.c: 407: UpdateDisplay();
  4140  0BCF  120A  118A  2533   	fcall	_UpdateDisplay
              120A  158A         
  4141  0BD4  2C02               	goto	l11228
  4142                           	line	408
  4143                           	
  4144  0BD5                     l2267:	
  4145                           	line	409
  4146                           ;Main.c: 408: }
  4147                           ;Main.c: 409: switch (buttonPressed)
  4148  0BD5  2C02               	goto	l11228
  4149                           	line	411
  4150                           ;Main.c: 410: {
  4151                           ;Main.c: 411: case 1:
  4152                           	
  4153  0BD6                     l2269:	
  4154                           	line	412
  4155                           ;Main.c: 412: buttonPressed = 0;
  4156  0BD6  01FD               	clrf	(_buttonPressed)	;volatile
  4157                           	line	413
  4158                           ;Main.c: 413: break;
  4159  0BD7  2BCA               	goto	l11204
  4160                           	line	414
  4161                           ;Main.c: 414: case 2:
  4162                           	
  4163  0BD8                     l2271:	
  4164                           	line	415
  4165                           ;Main.c: 415: buttonPressed = 0;
  4166  0BD8  01FD               	clrf	(_buttonPressed)	;volatile
  4167                           	line	416
  4168                           ;Main.c: 416: break;
  4169  0BD9  2BCA               	goto	l11204
  4170                           	line	417
  4171                           ;Main.c: 417: case 3:
  4172                           	
  4173  0BDA                     l2272:	
  4174                           	line	418
  4175                           	
  4176  0BDA                     l11210:	
  4177                           ;Main.c: 418: rotate(1, 1);
  4178  0BDA  3001               	movlw	low(01h)
  4179  0BDB  1283               	bcf	status, 5	;RP0=0, select bank0
  4180  0BDC  1303               	bcf	status, 6	;RP1=0, select bank0
  4181  0BDD  00A3               	movwf	(?_rotate)
  4182  0BDE  3000               	movlw	high(01h)
  4183  0BDF  00A4               	movwf	((?_rotate))+1
  4184  0BE0  01A5               	clrf	0+(?_rotate)+02h
  4185  0BE1  1403               	bsf	status,0
  4186  0BE2  0DA5               	rlf	0+(?_rotate)+02h,f
  4187  0BE3  120A  158A  2368   	fcall	_rotate
              120A  158A         
  4188                           	line	419
  4189                           	
  4190  0BE8                     l11212:	
  4191                           ;Main.c: 419: buttonPressed = 0;
  4192  0BE8  01FD               	clrf	(_buttonPressed)	;volatile
  4193                           	line	420
  4194                           ;Main.c: 420: break;
  4195  0BE9  2BCA               	goto	l11204
  4196                           	line	421
  4197                           ;Main.c: 421: case 4:
  4198                           	
  4199  0BEA                     l2273:	
  4200                           	line	422
  4201                           	
  4202  0BEA                     l11214:	
  4203                           ;Main.c: 422: rotate(1, 0);
  4204  0BEA  3001               	movlw	low(01h)
  4205  0BEB  1283               	bcf	status, 5	;RP0=0, select bank0
  4206  0BEC  1303               	bcf	status, 6	;RP1=0, select bank0
  4207  0BED  00A3               	movwf	(?_rotate)
  4208  0BEE  3000               	movlw	high(01h)
  4209  0BEF  00A4               	movwf	((?_rotate))+1
  4210  0BF0  01A5               	clrf	0+(?_rotate)+02h
  4211  0BF1  120A  158A  2368   	fcall	_rotate
              120A  158A         
  4212                           	line	423
  4213                           	
  4214  0BF6                     l11216:	
  4215                           ;Main.c: 423: buttonPressed = 0;
  4216  0BF6  01FD               	clrf	(_buttonPressed)	;volatile
  4217                           	line	424
  4218                           ;Main.c: 424: break;
  4219  0BF7  2BCA               	goto	l11204
  4220                           	line	425
  4221                           ;Main.c: 425: case 5:
  4222                           	
  4223  0BF8                     l2274:	
  4224                           	line	426
  4225                           	
  4226  0BF8                     l11218:	
  4227                           ;Main.c: 426: totalSteps = 0;
  4228  0BF8  1683               	bsf	status, 5	;RP0=1, select bank1
  4229  0BF9  1303               	bcf	status, 6	;RP1=0, select bank1
  4230  0BFA  01C4               	clrf	(_totalSteps)^080h
  4231  0BFB  01C5               	clrf	(_totalSteps+1)^080h
  4232                           	line	427
  4233                           	
  4234  0BFC                     l11220:	
  4235                           ;Main.c: 427: buttonPressed = 0;
  4236  0BFC  01FD               	clrf	(_buttonPressed)	;volatile
  4237                           	line	428
  4238                           	
  4239  0BFD                     l11222:	
  4240                           ;Main.c: 428: currentMenu = 0;
  4241  0BFD  01D1               	clrf	(_currentMenu)^080h	;volatile
  4242  0BFE  2C15               	goto	l2275
  4243                           	line	429
  4244                           	
  4245  0BFF                     l11224:	
  4246                           ;Main.c: 429: return;
  4247  0BFF  2C15               	goto	l2275
  4248                           	line	430
  4249                           ;Main.c: 430: default:
  4250                           	
  4251  0C00                     l2276:	
  4252                           	line	431
  4253                           ;Main.c: 431: break;
  4254  0C00  2BCA               	goto	l11204
  4255                           	line	432
  4256                           	
  4257  0C01                     l11226:	
  4258                           ;Main.c: 432: }
  4259  0C01  2BCA               	goto	l11204
  4260                           	line	409
  4261                           	
  4262  0C02                     l2268:	
  4263                           	
  4264  0C02                     l11228:	
  4265  0C02  087D               	movf	(_buttonPressed),w	;volatile
  4266                           	; Switch size 1, requested type "space"
  4267                           ; Number of cases is 5, Range of values is 1 to 5
  4268                           ; switch strategies available:
  4269                           ; Name         Instructions Cycles
  4270                           ; simple_byte           16     9 (average)
  4271                           ; direct_byte           26    11 (fixed)
  4272                           ; jumptable            263     9 (fixed)
  4273                           ;	Chosen strategy is simple_byte
  4274                           
  4275                           	opt asmopt_off
  4276  0C03  3A01               	xorlw	1^0	; case 1
  4277  0C04  1903               	skipnz
  4278  0C05  2BD6               	goto	l2269
  4279  0C06  3A03               	xorlw	2^1	; case 2
  4280  0C07  1903               	skipnz
  4281  0C08  2BD8               	goto	l2271
  4282  0C09  3A01               	xorlw	3^2	; case 3
  4283  0C0A  1903               	skipnz
  4284  0C0B  2BDA               	goto	l11210
  4285  0C0C  3A07               	xorlw	4^3	; case 4
  4286  0C0D  1903               	skipnz
  4287  0C0E  2BEA               	goto	l11214
  4288  0C0F  3A01               	xorlw	5^4	; case 5
  4289  0C10  1903               	skipnz
  4290  0C11  2BF8               	goto	l11218
  4291  0C12  2BCA               	goto	l11204
  4292                           	opt asmopt_on
  4293                           
  4294                           	line	432
  4295                           	
  4296  0C13                     l2270:	
  4297  0C13  2BCA               	goto	l11204
  4298                           	line	433
  4299                           	
  4300  0C14                     l2277:	
  4301                           	line	402
  4302  0C14  2BCA               	goto	l11204
  4303                           	
  4304  0C15                     l2278:	
  4305                           	line	434
  4306                           	
  4307  0C15                     l2275:	
  4308  0C15  0008               	return
  4309                           	opt stack 0
  4310                           GLOBAL	__end_of_calibrateIR
  4311  0C16                     	__end_of_calibrateIR:
  4312 ;; =============== function _calibrateIR ends ============
  4313                           
  4314                           	signat	_calibrateIR,88
  4315                           	global	_UpdateDisplay
  4316                           psect	text956,local,class=CODE,delta=2
  4317                           global __ptext956
  4318  0533                     __ptext956:
  4319                           
  4320 ;; *************** function _UpdateDisplay *****************
  4321 ;; Defined at:
  4322 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;		None
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  LCDOutput      16   35[BANK0 ] unsigned char [16]
  4327 ;; Return value:  Size  Location     Type
  4328 ;;		None               void
  4329 ;; Registers used:
  4330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4336 ;;      Params:         0       0       0       0       0
  4337 ;;      Locals:         0      16       0       0       0
  4338 ;;      Temps:          0       4       0       0       0
  4339 ;;      Totals:         0      20       0       0       0
  4340 ;;Total ram usage:       20 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    5
  4343 ;; This function calls:
  4344 ;;		_lcd_write_control
  4345 ;;		_sprintf
  4346 ;;		_lcd_set_cursor
  4347 ;;		_lcd_write_string
  4348 ;;		___awmod
  4349 ;; This function is called by:
  4350 ;;		_main
  4351 ;;		_calibrateIR
  4352 ;;		_ChargeMode
  4353 ;;		_robotFollow
  4354 ;;		_robotMoveSpeed
  4355 ;;		_robotTurnSpeed
  4356 ;;		_scan360
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           psect	text956
  4360                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  4361                           	line	236
  4362                           	global	__size_of_UpdateDisplay
  4363  0151                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4364                           	
  4365  0533                     _UpdateDisplay:	
  4366                           	opt	stack 1
  4367                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4368                           	line	237
  4369                           	
  4370  0533                     l11156:	
  4371                           ;HMI.c: 237: char LCDOutput[16] = "";
  4372  0533  3043               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4373  0534  0084               	movwf	fsr0
  4374  0535  3090               	movlw	low(UpdateDisplay@F1250)
  4375  0536  1283               	bcf	status, 5	;RP0=0, select bank0
  4376  0537  1303               	bcf	status, 6	;RP1=0, select bank0
  4377  0538  00BF               	movwf	(??_UpdateDisplay+0)+0
  4378  0539  0804               	movf	fsr0,w
  4379  053A  00C0               	movwf	((??_UpdateDisplay+0)+0+1)
  4380  053B  3010               	movlw	16
  4381  053C  00C1               	movwf	((??_UpdateDisplay+0)+0+2)
  4382  053D                     u4780:
  4383  053D  083F               	movf	(??_UpdateDisplay+0)+0,w
  4384  053E  0084               	movwf	fsr0
  4385  053F  1783               	bsf	status, 7	;select IRP bank3
  4386                           	
  4387  0540  0800               	movf	indf,w
  4388  0541  00C2               	movwf	((??_UpdateDisplay+0)+0+3)
  4389  0542  0ABF               	incf	(??_UpdateDisplay+0)+0,f
  4390  0543  0840               	movf	((??_UpdateDisplay+0)+0+1),w
  4391  0544  0084               	movwf	fsr0
  4392  0545  1383               	bcf	status, 7	;select IRP bank0
  4393                           	
  4394  0546  0842               	movf	((??_UpdateDisplay+0)+0+3),w
  4395  0547  0080               	movwf	indf
  4396  0548  0AC0               	incf	((??_UpdateDisplay+0)+0+1),f
  4397  0549  0BC1               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4398  054A  2D3D               	goto	u4780
  4399                           	line	238
  4400                           ;HMI.c: 238: switch (currentMenu)
  4401  054B  2E76               	goto	l11198
  4402                           	line	240
  4403                           ;HMI.c: 239: {
  4404                           ;HMI.c: 240: case 0:
  4405                           	
  4406  054C                     l4554:	
  4407                           	line	241
  4408                           	
  4409  054C                     l11158:	
  4410                           ;HMI.c: 241: lcd_write_control(0b00000001);
  4411  054C  3001               	movlw	(01h)
  4412  054D  160A  118A  269B   	fcall	_lcd_write_control
              120A  118A         
  4413                           	line	242
  4414                           	
  4415  0552                     l11160:	
  4416                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",Disp1, Disp2);
  4417  0552  302B               	movlw	((STR_13-__stringbase))&0ffh
  4418  0553  1283               	bcf	status, 5	;RP0=0, select bank0
  4419  0554  1303               	bcf	status, 6	;RP1=0, select bank0
  4420  0555  00BF               	movwf	(??_UpdateDisplay+0)+0
  4421  0556  083F               	movf	(??_UpdateDisplay+0)+0,w
  4422  0557  00AE               	movwf	(?_sprintf)
  4423  0558  1683               	bsf	status, 5	;RP0=1, select bank1
  4424  0559  1303               	bcf	status, 6	;RP1=0, select bank1
  4425  055A  0831               	movf	(_Disp1+1)^080h,w
  4426  055B  1283               	bcf	status, 5	;RP0=0, select bank0
  4427  055C  1303               	bcf	status, 6	;RP1=0, select bank0
  4428  055D  01B0               	clrf	1+(?_sprintf)+01h
  4429  055E  07B0               	addwf	1+(?_sprintf)+01h
  4430  055F  1683               	bsf	status, 5	;RP0=1, select bank1
  4431  0560  1303               	bcf	status, 6	;RP1=0, select bank1
  4432  0561  0830               	movf	(_Disp1)^080h,w
  4433  0562  1283               	bcf	status, 5	;RP0=0, select bank0
  4434  0563  1303               	bcf	status, 6	;RP1=0, select bank0
  4435  0564  01AF               	clrf	0+(?_sprintf)+01h
  4436  0565  07AF               	addwf	0+(?_sprintf)+01h
  4437                           
  4438  0566  1683               	bsf	status, 5	;RP0=1, select bank1
  4439  0567  1303               	bcf	status, 6	;RP1=0, select bank1
  4440  0568  0833               	movf	(_Disp2+1)^080h,w
  4441  0569  1283               	bcf	status, 5	;RP0=0, select bank0
  4442  056A  1303               	bcf	status, 6	;RP1=0, select bank0
  4443  056B  01B2               	clrf	1+(?_sprintf)+03h
  4444  056C  07B2               	addwf	1+(?_sprintf)+03h
  4445  056D  1683               	bsf	status, 5	;RP0=1, select bank1
  4446  056E  1303               	bcf	status, 6	;RP1=0, select bank1
  4447  056F  0832               	movf	(_Disp2)^080h,w
  4448  0570  1283               	bcf	status, 5	;RP0=0, select bank0
  4449  0571  1303               	bcf	status, 6	;RP1=0, select bank0
  4450  0572  01B1               	clrf	0+(?_sprintf)+03h
  4451  0573  07B1               	addwf	0+(?_sprintf)+03h
  4452                           
  4453  0574  3043               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  4454  0575  120A  118A  2684   	fcall	_sprintf
              120A  118A         
  4455                           	line	243
  4456                           	
  4457  057A                     l11162:	
  4458                           ;HMI.c: 243: lcd_set_cursor(0x00);
  4459  057A  3000               	movlw	(0)
  4460  057B  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4461                           	line	244
  4462                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  4463  0580  3043               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  4464  0581  1283               	bcf	status, 5	;RP0=0, select bank0
  4465  0582  1303               	bcf	status, 6	;RP1=0, select bank0
  4466  0583  00A7               	movwf	(?_lcd_write_string)
  4467  0584  3000               	movlw	(0x0/2)
  4468  0585  00A8               	movwf	(?_lcd_write_string+1)
  4469  0586  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4470                           	line	245
  4471                           	
  4472  058B                     l11164:	
  4473                           ;HMI.c: 245: lcd_set_cursor(0x40);
  4474  058B  3040               	movlw	(040h)
  4475  058C  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4476                           	line	246
  4477                           	
  4478  0591                     l11166:	
  4479                           ;HMI.c: 246: if (pos > 0)
  4480  0591  1283               	bcf	status, 5	;RP0=0, select bank0
  4481  0592  1303               	bcf	status, 6	;RP1=0, select bank0
  4482  0593  0869               	movf	(_pos+1),w
  4483  0594  3A80               	xorlw	80h
  4484  0595  00FF               	movwf	btemp+1
  4485  0596  3080               	movlw	(high(01h))^80h
  4486  0597  027F               	subwf	btemp+1,w
  4487  0598  1D03               	skipz
  4488  0599  2D9C               	goto	u4795
  4489  059A  3001               	movlw	low(01h)
  4490  059B  0268               	subwf	(_pos),w
  4491  059C                     u4795:
  4492                           
  4493  059C  1C03               	skipc
  4494  059D  2D9F               	goto	u4791
  4495  059E  2DA0               	goto	u4790
  4496  059F                     u4791:
  4497  059F  2DB1               	goto	l11170
  4498  05A0                     u4790:
  4499                           	line	247
  4500                           	
  4501  05A0                     l11168:	
  4502                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  4503  05A0  1283               	bcf	status, 5	;RP0=0, select bank0
  4504  05A1  1303               	bcf	status, 6	;RP1=0, select bank0
  4505  05A2  0868               	movf	(_pos),w
  4506  05A3  3EFF               	addlw	0FFh
  4507  05A4  3EDD               	addlw	_shortMenuStrings&0ffh
  4508  05A5  0084               	movwf	fsr0
  4509  05A6  1383               	bcf	status, 7	;select IRP bank1
  4510  05A7  0800               	movf	indf,w
  4511  05A8  00A7               	movwf	(?_lcd_write_string)
  4512  05A9  3080               	movlw	80h
  4513  05AA  00A8               	movwf	(?_lcd_write_string+1)
  4514  05AB  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4515  05B0  2DC2               	goto	l11172
  4516                           	line	248
  4517                           	
  4518  05B1                     l4555:	
  4519                           	line	249
  4520                           	
  4521  05B1                     l11170:	
  4522                           ;HMI.c: 248: else
  4523                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4524  05B1  1283               	bcf	status, 5	;RP0=0, select bank0
  4525  05B2  1303               	bcf	status, 6	;RP1=0, select bank0
  4526  05B3  0868               	movf	(_pos),w
  4527  05B4  3E05               	addlw	05h
  4528  05B5  3EDD               	addlw	_shortMenuStrings&0ffh
  4529  05B6  0084               	movwf	fsr0
  4530  05B7  1383               	bcf	status, 7	;select IRP bank1
  4531  05B8  0800               	movf	indf,w
  4532  05B9  00A7               	movwf	(?_lcd_write_string)
  4533  05BA  3080               	movlw	80h
  4534  05BB  00A8               	movwf	(?_lcd_write_string+1)
  4535  05BC  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4536  05C1  2DC2               	goto	l11172
  4537                           	
  4538  05C2                     l4556:	
  4539                           	line	250
  4540                           	
  4541  05C2                     l11172:	
  4542                           ;HMI.c: 250: lcd_set_cursor(0x44);
  4543  05C2  3044               	movlw	(044h)
  4544  05C3  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4545                           	line	251
  4546                           	
  4547  05C8                     l11174:	
  4548                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  4549  05C8  1283               	bcf	status, 5	;RP0=0, select bank0
  4550  05C9  1303               	bcf	status, 6	;RP1=0, select bank0
  4551  05CA  0868               	movf	(_pos),w
  4552  05CB  3ED7               	addlw	_menuStrings&0ffh
  4553  05CC  0084               	movwf	fsr0
  4554  05CD  1383               	bcf	status, 7	;select IRP bank1
  4555  05CE  0800               	movf	indf,w
  4556  05CF  00A7               	movwf	(?_lcd_write_string)
  4557  05D0  3080               	movlw	80h
  4558  05D1  00A8               	movwf	(?_lcd_write_string+1)
  4559  05D2  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4560                           	line	252
  4561                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  4562  05D7  304D               	movlw	(04Dh)
  4563  05D8  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4564                           	line	253
  4565                           	
  4566  05DD                     l11176:	
  4567                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4568  05DD  3006               	movlw	low(06h)
  4569  05DE  1283               	bcf	status, 5	;RP0=0, select bank0
  4570  05DF  1303               	bcf	status, 6	;RP1=0, select bank0
  4571  05E0  00A0               	movwf	(?___awmod)
  4572  05E1  3000               	movlw	high(06h)
  4573  05E2  00A1               	movwf	((?___awmod))+1
  4574  05E3  0868               	movf	(_pos),w
  4575  05E4  3E01               	addlw	low(01h)
  4576  05E5  00A2               	movwf	0+(?___awmod)+02h
  4577  05E6  0869               	movf	(_pos+1),w
  4578  05E7  1803               	skipnc
  4579  05E8  3E01               	addlw	1
  4580  05E9  3E00               	addlw	high(01h)
  4581  05EA  00A3               	movwf	1+0+(?___awmod)+02h
  4582  05EB  120A  158A  2416   	fcall	___awmod
              120A  118A         
  4583  05F0  1283               	bcf	status, 5	;RP0=0, select bank0
  4584  05F1  1303               	bcf	status, 6	;RP1=0, select bank0
  4585  05F2  0820               	movf	(0+(?___awmod)),w
  4586  05F3  3EDD               	addlw	_shortMenuStrings&0ffh
  4587  05F4  0084               	movwf	fsr0
  4588  05F5  1383               	bcf	status, 7	;select IRP bank1
  4589  05F6  0800               	movf	indf,w
  4590  05F7  00A7               	movwf	(?_lcd_write_string)
  4591  05F8  3080               	movlw	80h
  4592  05F9  00A8               	movwf	(?_lcd_write_string+1)
  4593  05FA  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4594                           	line	254
  4595                           ;HMI.c: 254: break;
  4596  05FF  2E83               	goto	l4561
  4597                           	line	255
  4598                           ;HMI.c: 255: case 1:
  4599                           	
  4600  0600                     l4558:	
  4601                           	line	256
  4602                           	
  4603  0600                     l11178:	
  4604                           ;HMI.c: 256: lcd_write_control(0b00000001);
  4605  0600  3001               	movlw	(01h)
  4606  0601  160A  118A  269B   	fcall	_lcd_write_control
              120A  118A         
  4607                           	line	257
  4608                           ;HMI.c: 257: lcd_set_cursor(0x00);
  4609  0606  3000               	movlw	(0)
  4610  0607  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4611                           	line	258
  4612                           	
  4613  060C                     l11180:	
  4614                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  4615  060C  301B               	movlw	low((STR_14-__stringbase))
  4616  060D  1283               	bcf	status, 5	;RP0=0, select bank0
  4617  060E  1303               	bcf	status, 6	;RP1=0, select bank0
  4618  060F  00A7               	movwf	(?_lcd_write_string)
  4619  0610  3080               	movlw	80h
  4620  0611  00A8               	movwf	(?_lcd_write_string+1)
  4621  0612  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4622                           	line	259
  4623                           	
  4624  0617                     l11182:	
  4625                           ;HMI.c: 259: lcd_set_cursor(0x40);
  4626  0617  3040               	movlw	(040h)
  4627  0618  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4628                           	line	260
  4629                           ;HMI.c: 260: lcd_write_string("<<<");
  4630  061D  3082               	movlw	low((STR_15-__stringbase))
  4631  061E  1283               	bcf	status, 5	;RP0=0, select bank0
  4632  061F  1303               	bcf	status, 6	;RP1=0, select bank0
  4633  0620  00A7               	movwf	(?_lcd_write_string)
  4634  0621  3080               	movlw	80h
  4635  0622  00A8               	movwf	(?_lcd_write_string+1)
  4636  0623  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4637                           	line	261
  4638                           	
  4639  0628                     l11184:	
  4640                           ;HMI.c: 261: lcd_set_cursor(0x44);
  4641  0628  3044               	movlw	(044h)
  4642  0629  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4643                           	line	262
  4644                           	
  4645  062E                     l11186:	
  4646                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  4647  062E  3076               	movlw	low((STR_16-__stringbase))
  4648  062F  1283               	bcf	status, 5	;RP0=0, select bank0
  4649  0630  1303               	bcf	status, 6	;RP1=0, select bank0
  4650  0631  00A7               	movwf	(?_lcd_write_string)
  4651  0632  3080               	movlw	80h
  4652  0633  00A8               	movwf	(?_lcd_write_string+1)
  4653  0634  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4654                           	line	263
  4655                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  4656  0639  304D               	movlw	(04Dh)
  4657  063A  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4658                           	line	264
  4659                           	
  4660  063F                     l11188:	
  4661                           ;HMI.c: 264: lcd_write_string(">>>");
  4662  063F  3086               	movlw	low((STR_17-__stringbase))
  4663  0640  1283               	bcf	status, 5	;RP0=0, select bank0
  4664  0641  1303               	bcf	status, 6	;RP1=0, select bank0
  4665  0642  00A7               	movwf	(?_lcd_write_string)
  4666  0643  3080               	movlw	80h
  4667  0644  00A8               	movwf	(?_lcd_write_string+1)
  4668  0645  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4669                           	line	265
  4670                           ;HMI.c: 265: break;
  4671  064A  2E83               	goto	l4561
  4672                           	line	266
  4673                           ;HMI.c: 266: case 2:
  4674                           	
  4675  064B                     l4559:	
  4676                           	line	267
  4677                           	
  4678  064B                     l11190:	
  4679                           ;HMI.c: 267: lcd_write_control(0b00000001);
  4680  064B  3001               	movlw	(01h)
  4681  064C  160A  118A  269B   	fcall	_lcd_write_control
              120A  118A         
  4682                           	line	268
  4683                           ;HMI.c: 268: lcd_set_cursor(0x00);
  4684  0651  3000               	movlw	(0)
  4685  0652  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4686                           	line	269
  4687                           	
  4688  0657                     l11192:	
  4689                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  4690  0657  300B               	movlw	low((STR_18-__stringbase))
  4691  0658  1283               	bcf	status, 5	;RP0=0, select bank0
  4692  0659  1303               	bcf	status, 6	;RP1=0, select bank0
  4693  065A  00A7               	movwf	(?_lcd_write_string)
  4694  065B  3080               	movlw	80h
  4695  065C  00A8               	movwf	(?_lcd_write_string+1)
  4696  065D  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4697                           	line	270
  4698                           	
  4699  0662                     l11194:	
  4700                           ;HMI.c: 270: lcd_set_cursor(0x44);
  4701  0662  3044               	movlw	(044h)
  4702  0663  160A  118A  2649   	fcall	_lcd_set_cursor
              120A  118A         
  4703                           	line	271
  4704                           ;HMI.c: 271: lcd_write_string("  EXIT  ");
  4705  0668  3038               	movlw	low((STR_19-__stringbase))
  4706  0669  1283               	bcf	status, 5	;RP0=0, select bank0
  4707  066A  1303               	bcf	status, 6	;RP1=0, select bank0
  4708  066B  00A7               	movwf	(?_lcd_write_string)
  4709  066C  3080               	movlw	80h
  4710  066D  00A8               	movwf	(?_lcd_write_string+1)
  4711  066E  160A  118A  27D4   	fcall	_lcd_write_string
              120A  118A         
  4712                           	line	272
  4713                           ;HMI.c: 272: break;
  4714  0673  2E83               	goto	l4561
  4715                           	line	273
  4716                           ;HMI.c: 273: default:
  4717                           	
  4718  0674                     l4560:	
  4719                           	line	274
  4720                           ;HMI.c: 274: break;
  4721  0674  2E83               	goto	l4561
  4722                           	line	275
  4723                           	
  4724  0675                     l11196:	
  4725                           ;HMI.c: 275: }
  4726  0675  2E83               	goto	l4561
  4727                           	line	238
  4728                           	
  4729  0676                     l4553:	
  4730                           	
  4731  0676                     l11198:	
  4732  0676  1683               	bsf	status, 5	;RP0=1, select bank1
  4733  0677  1303               	bcf	status, 6	;RP1=0, select bank1
  4734  0678  0851               	movf	(_currentMenu)^080h,w	;volatile
  4735                           	; Switch size 1, requested type "space"
  4736                           ; Number of cases is 3, Range of values is 0 to 2
  4737                           ; switch strategies available:
  4738                           ; Name         Instructions Cycles
  4739                           ; simple_byte           10     6 (average)
  4740                           ; direct_byte           17     8 (fixed)
  4741                           ; jumptable            260     6 (fixed)
  4742                           ; rangetable             7     6 (fixed)
  4743                           ; spacedrange           12     9 (fixed)
  4744                           ; locatedrange           3     3 (fixed)
  4745                           ;	Chosen strategy is simple_byte
  4746                           
  4747                           	opt asmopt_off
  4748  0679  3A00               	xorlw	0^0	; case 0
  4749  067A  1903               	skipnz
  4750  067B  2D4C               	goto	l11158
  4751  067C  3A01               	xorlw	1^0	; case 1
  4752  067D  1903               	skipnz
  4753  067E  2E00               	goto	l11178
  4754  067F  3A03               	xorlw	2^1	; case 2
  4755  0680  1903               	skipnz
  4756  0681  2E4B               	goto	l11190
  4757  0682  2E83               	goto	l4561
  4758                           	opt asmopt_on
  4759                           
  4760                           	line	275
  4761                           	
  4762  0683                     l4557:	
  4763                           	line	276
  4764                           	
  4765  0683                     l4561:	
  4766  0683  0008               	return
  4767                           	opt stack 0
  4768                           GLOBAL	__end_of_UpdateDisplay
  4769  0684                     	__end_of_UpdateDisplay:
  4770 ;; =============== function _UpdateDisplay ends ============
  4771                           
  4772                           	signat	_UpdateDisplay,88
  4773                           	global	_readAvgDistance
  4774                           psect	text957,local,class=CODE,delta=2
  4775                           global __ptext957
  4776  0E6A                     __ptext957:
  4777                           
  4778 ;; *************** function _readAvgDistance *****************
  4779 ;; Defined at:
  4780 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  values         14   22[BANK0 ] unsigned int [7]
  4785 ;;  tempIR          2   36[BANK0 ] unsigned int 
  4786 ;;  fullval         2   20[BANK0 ] unsigned int 
  4787 ;;  i               1   39[BANK0 ] unsigned char 
  4788 ;;  j               1   38[BANK0 ] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;		None               void
  4791 ;; Registers used:
  4792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4798 ;;      Params:         0       0       0       0       0
  4799 ;;      Locals:         0      20       0       0       0
  4800 ;;      Temps:          0       6       0       0       0
  4801 ;;      Totals:         0      26       0       0       0
  4802 ;;Total ram usage:       26 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    6
  4805 ;; This function calls:
  4806 ;;		_readDistance
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;;		_robotFollow
  4810 ;;		_scan360
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           psect	text957
  4814                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4815                           	line	28
  4816                           	global	__size_of_readAvgDistance
  4817  00B1                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4818                           	
  4819  0E6A                     _readAvgDistance:	
  4820                           	opt	stack 0
  4821                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4822                           	line	29
  4823                           	
  4824  0E6A                     l11120:	
  4825                           ;infrared.c: 29: unsigned int fullval = 0, tempIR = 0;
  4826  0E6A  1283               	bcf	status, 5	;RP0=0, select bank0
  4827  0E6B  1303               	bcf	status, 6	;RP1=0, select bank0
  4828  0E6C  01B4               	clrf	(readAvgDistance@fullval)
  4829  0E6D  01B5               	clrf	(readAvgDistance@fullval+1)
  4830  0E6E  01C4               	clrf	(readAvgDistance@tempIR)
  4831  0E6F  01C5               	clrf	(readAvgDistance@tempIR+1)
  4832                           	line	33
  4833                           	
  4834  0E70                     l11122:	
  4835                           ;infrared.c: 30: unsigned char j, i;
  4836                           ;infrared.c: 31: unsigned int values[7];
  4837                           ;infrared.c: 33: for (i = 0; i < 7; i++)
  4838  0E70  01C7               	clrf	(readAvgDistance@i)
  4839                           	
  4840  0E71                     l11124:	
  4841  0E71  3007               	movlw	(07h)
  4842  0E72  0247               	subwf	(readAvgDistance@i),w
  4843  0E73  1C03               	skipc
  4844  0E74  2E76               	goto	u4711
  4845  0E75  2E77               	goto	u4710
  4846  0E76                     u4711:
  4847  0E76  2E79               	goto	l11128
  4848  0E77                     u4710:
  4849  0E77  2E95               	goto	l3006
  4850                           	
  4851  0E78                     l11126:	
  4852  0E78  2E95               	goto	l3006
  4853                           	line	34
  4854                           	
  4855  0E79                     l3005:	
  4856                           	line	35
  4857                           	
  4858  0E79                     l11128:	
  4859                           ;infrared.c: 34: {
  4860                           ;infrared.c: 35: values[i] = readDistance();
  4861  0E79  160A  118A  26C5   	fcall	_readDistance
              120A  158A         
  4862  0E7E  1283               	bcf	status, 5	;RP0=0, select bank0
  4863  0E7F  1303               	bcf	status, 6	;RP1=0, select bank0
  4864  0E80  0847               	movf	(readAvgDistance@i),w
  4865  0E81  00AE               	movwf	(??_readAvgDistance+0)+0
  4866  0E82  072E               	addwf	(??_readAvgDistance+0)+0,w
  4867  0E83  3E36               	addlw	readAvgDistance@values&0ffh
  4868  0E84  0084               	movwf	fsr0
  4869  0E85  0828               	movf	(0+(?_readDistance)),w
  4870  0E86  1383               	bcf	status, 7	;select IRP bank0
  4871  0E87  0080               	movwf	indf
  4872  0E88  0A84               	incf	fsr0,f
  4873  0E89  0829               	movf	(1+(?_readDistance)),w
  4874  0E8A  0080               	movwf	indf
  4875                           	line	33
  4876                           	
  4877  0E8B                     l11130:	
  4878  0E8B  3001               	movlw	(01h)
  4879  0E8C  00AE               	movwf	(??_readAvgDistance+0)+0
  4880  0E8D  082E               	movf	(??_readAvgDistance+0)+0,w
  4881  0E8E  07C7               	addwf	(readAvgDistance@i),f
  4882                           	
  4883  0E8F                     l11132:	
  4884  0E8F  3007               	movlw	(07h)
  4885  0E90  0247               	subwf	(readAvgDistance@i),w
  4886  0E91  1C03               	skipc
  4887  0E92  2E94               	goto	u4721
  4888  0E93  2E95               	goto	u4720
  4889  0E94                     u4721:
  4890  0E94  2E79               	goto	l11128
  4891  0E95                     u4720:
  4892                           	
  4893  0E95                     l3006:	
  4894                           	line	37
  4895                           ;infrared.c: 36: }
  4896                           ;infrared.c: 37: for (i = 0; i < 7; i++)
  4897  0E95  01C7               	clrf	(readAvgDistance@i)
  4898                           	
  4899  0E96                     l11134:	
  4900  0E96  3007               	movlw	(07h)
  4901  0E97  0247               	subwf	(readAvgDistance@i),w
  4902  0E98  1C03               	skipc
  4903  0E99  2E9B               	goto	u4731
  4904  0E9A  2E9C               	goto	u4730
  4905  0E9B                     u4731:
  4906  0E9B  2E9E               	goto	l11138
  4907  0E9C                     u4730:
  4908  0E9C  2F08               	goto	l11154
  4909                           	
  4910  0E9D                     l11136:	
  4911  0E9D  2F08               	goto	l11154
  4912                           	line	38
  4913                           	
  4914  0E9E                     l3007:	
  4915                           	line	39
  4916                           	
  4917  0E9E                     l11138:	
  4918                           ;infrared.c: 38: {
  4919                           ;infrared.c: 39: for (j = i ; j < 7; j++)
  4920  0E9E  0847               	movf	(readAvgDistance@i),w
  4921  0E9F  00AE               	movwf	(??_readAvgDistance+0)+0
  4922  0EA0  082E               	movf	(??_readAvgDistance+0)+0,w
  4923  0EA1  00C6               	movwf	(readAvgDistance@j)
  4924  0EA2  3007               	movlw	(07h)
  4925  0EA3  0246               	subwf	(readAvgDistance@j),w
  4926  0EA4  1C03               	skipc
  4927  0EA5  2EA7               	goto	u4741
  4928  0EA6  2EA8               	goto	u4740
  4929  0EA7                     u4741:
  4930  0EA7  2EAA               	goto	l11142
  4931  0EA8                     u4740:
  4932  0EA8  2EFD               	goto	l11150
  4933                           	
  4934  0EA9                     l11140:	
  4935  0EA9  2EFD               	goto	l11150
  4936                           	line	40
  4937                           	
  4938  0EAA                     l3009:	
  4939                           	line	41
  4940                           	
  4941  0EAA                     l11142:	
  4942                           ;infrared.c: 40: {
  4943                           ;infrared.c: 41: if (values[i] > values[j])
  4944  0EAA  0847               	movf	(readAvgDistance@i),w
  4945  0EAB  00AE               	movwf	(??_readAvgDistance+0)+0
  4946  0EAC  072E               	addwf	(??_readAvgDistance+0)+0,w
  4947  0EAD  3E36               	addlw	readAvgDistance@values&0ffh
  4948  0EAE  0084               	movwf	fsr0
  4949  0EAF  1383               	bcf	status, 7	;select IRP bank0
  4950  0EB0  0800               	movf	indf,w
  4951  0EB1  00AF               	movwf	(??_readAvgDistance+1)+0+0
  4952  0EB2  0A84               	incf	fsr0,f
  4953  0EB3  0800               	movf	indf,w
  4954  0EB4  00B0               	movwf	(??_readAvgDistance+1)+0+1
  4955  0EB5  0846               	movf	(readAvgDistance@j),w
  4956  0EB6  00B1               	movwf	(??_readAvgDistance+3)+0
  4957  0EB7  0731               	addwf	(??_readAvgDistance+3)+0,w
  4958  0EB8  3E36               	addlw	readAvgDistance@values&0ffh
  4959  0EB9  0084               	movwf	fsr0
  4960  0EBA  0800               	movf	indf,w
  4961  0EBB  00B2               	movwf	(??_readAvgDistance+4)+0+0
  4962  0EBC  0A84               	incf	fsr0,f
  4963  0EBD  0800               	movf	indf,w
  4964  0EBE  00B3               	movwf	(??_readAvgDistance+4)+0+1
  4965  0EBF  0830               	movf	1+(??_readAvgDistance+1)+0,w
  4966  0EC0  0233               	subwf	1+(??_readAvgDistance+4)+0,w
  4967  0EC1  1D03               	skipz
  4968  0EC2  2EC5               	goto	u4755
  4969  0EC3  082F               	movf	0+(??_readAvgDistance+1)+0,w
  4970  0EC4  0232               	subwf	0+(??_readAvgDistance+4)+0,w
  4971  0EC5                     u4755:
  4972  0EC5  1803               	skipnc
  4973  0EC6  2EC8               	goto	u4751
  4974  0EC7  2EC9               	goto	u4750
  4975  0EC8                     u4751:
  4976  0EC8  2EF2               	goto	l11146
  4977  0EC9                     u4750:
  4978                           	line	43
  4979                           	
  4980  0EC9                     l11144:	
  4981                           ;infrared.c: 42: {
  4982                           ;infrared.c: 43: tempIR = values[i];
  4983  0EC9  0847               	movf	(readAvgDistance@i),w
  4984  0ECA  00AE               	movwf	(??_readAvgDistance+0)+0
  4985  0ECB  072E               	addwf	(??_readAvgDistance+0)+0,w
  4986  0ECC  3E36               	addlw	readAvgDistance@values&0ffh
  4987  0ECD  0084               	movwf	fsr0
  4988  0ECE  0800               	movf	indf,w
  4989  0ECF  00C4               	movwf	(readAvgDistance@tempIR)
  4990  0ED0  0A84               	incf	fsr0,f
  4991  0ED1  0800               	movf	indf,w
  4992  0ED2  00C5               	movwf	(readAvgDistance@tempIR+1)
  4993                           	line	44
  4994                           ;infrared.c: 44: values[i] = values[j];
  4995  0ED3  0846               	movf	(readAvgDistance@j),w
  4996  0ED4  00AE               	movwf	(??_readAvgDistance+0)+0
  4997  0ED5  072E               	addwf	(??_readAvgDistance+0)+0,w
  4998  0ED6  3E36               	addlw	readAvgDistance@values&0ffh
  4999  0ED7  0084               	movwf	fsr0
  5000  0ED8  0800               	movf	indf,w
  5001  0ED9  00AF               	movwf	(??_readAvgDistance+1)+0+0
  5002  0EDA  0A84               	incf	fsr0,f
  5003  0EDB  0800               	movf	indf,w
  5004  0EDC  00B0               	movwf	(??_readAvgDistance+1)+0+1
  5005  0EDD  0847               	movf	(readAvgDistance@i),w
  5006  0EDE  00B1               	movwf	(??_readAvgDistance+3)+0
  5007  0EDF  0731               	addwf	(??_readAvgDistance+3)+0,w
  5008  0EE0  3E36               	addlw	readAvgDistance@values&0ffh
  5009  0EE1  0084               	movwf	fsr0
  5010  0EE2  082F               	movf	0+(??_readAvgDistance+1)+0,w
  5011  0EE3  0080               	movwf	indf
  5012  0EE4  0A84               	incf	fsr0,f
  5013  0EE5  0830               	movf	1+(??_readAvgDistance+1)+0,w
  5014  0EE6  0080               	movwf	indf
  5015                           	line	45
  5016                           ;infrared.c: 45: values[j] = tempIR;
  5017  0EE7  0846               	movf	(readAvgDistance@j),w
  5018  0EE8  00AE               	movwf	(??_readAvgDistance+0)+0
  5019  0EE9  072E               	addwf	(??_readAvgDistance+0)+0,w
  5020  0EEA  3E36               	addlw	readAvgDistance@values&0ffh
  5021  0EEB  0084               	movwf	fsr0
  5022  0EEC  0844               	movf	(readAvgDistance@tempIR),w
  5023  0EED  0080               	movwf	indf
  5024  0EEE  0A84               	incf	fsr0,f
  5025  0EEF  0845               	movf	(readAvgDistance@tempIR+1),w
  5026  0EF0  0080               	movwf	indf
  5027  0EF1  2EF2               	goto	l11146
  5028                           	line	46
  5029                           	
  5030  0EF2                     l3011:	
  5031                           	line	39
  5032                           	
  5033  0EF2                     l11146:	
  5034  0EF2  3001               	movlw	(01h)
  5035  0EF3  00AE               	movwf	(??_readAvgDistance+0)+0
  5036  0EF4  082E               	movf	(??_readAvgDistance+0)+0,w
  5037  0EF5  07C6               	addwf	(readAvgDistance@j),f
  5038                           	
  5039  0EF6                     l11148:	
  5040  0EF6  3007               	movlw	(07h)
  5041  0EF7  0246               	subwf	(readAvgDistance@j),w
  5042  0EF8  1C03               	skipc
  5043  0EF9  2EFB               	goto	u4761
  5044  0EFA  2EFC               	goto	u4760
  5045  0EFB                     u4761:
  5046  0EFB  2EAA               	goto	l11142
  5047  0EFC                     u4760:
  5048  0EFC  2EFD               	goto	l11150
  5049                           	
  5050  0EFD                     l3010:	
  5051                           	line	37
  5052                           	
  5053  0EFD                     l11150:	
  5054  0EFD  3001               	movlw	(01h)
  5055  0EFE  00AE               	movwf	(??_readAvgDistance+0)+0
  5056  0EFF  082E               	movf	(??_readAvgDistance+0)+0,w
  5057  0F00  07C7               	addwf	(readAvgDistance@i),f
  5058                           	
  5059  0F01                     l11152:	
  5060  0F01  3007               	movlw	(07h)
  5061  0F02  0247               	subwf	(readAvgDistance@i),w
  5062  0F03  1C03               	skipc
  5063  0F04  2F06               	goto	u4771
  5064  0F05  2F07               	goto	u4770
  5065  0F06                     u4771:
  5066  0F06  2E9E               	goto	l11138
  5067  0F07                     u4770:
  5068  0F07  2F08               	goto	l11154
  5069                           	
  5070  0F08                     l3008:	
  5071                           	line	49
  5072                           	
  5073  0F08                     l11154:	
  5074                           ;infrared.c: 46: }
  5075                           ;infrared.c: 47: }
  5076                           ;infrared.c: 48: }
  5077                           ;infrared.c: 49: adcVal = values[7/2];
  5078  0F08  083D               	movf	1+(readAvgDistance@values)+06h,w
  5079  0F09  01E7               	clrf	(_adcVal+1)	;volatile
  5080  0F0A  07E7               	addwf	(_adcVal+1)	;volatile
  5081  0F0B  083C               	movf	0+(readAvgDistance@values)+06h,w
  5082  0F0C  01E6               	clrf	(_adcVal)	;volatile
  5083  0F0D  07E6               	addwf	(_adcVal)	;volatile
  5084                           
  5085                           	line	51
  5086                           ;infrared.c: 51: Disp1 = adcVal;
  5087  0F0E  0867               	movf	(_adcVal+1),w	;volatile
  5088  0F0F  1683               	bsf	status, 5	;RP0=1, select bank1
  5089  0F10  1303               	bcf	status, 6	;RP1=0, select bank1
  5090  0F11  01B1               	clrf	(_Disp1+1)^080h	;volatile
  5091  0F12  07B1               	addwf	(_Disp1+1)^080h	;volatile
  5092  0F13  1283               	bcf	status, 5	;RP0=0, select bank0
  5093  0F14  1303               	bcf	status, 6	;RP1=0, select bank0
  5094  0F15  0866               	movf	(_adcVal),w	;volatile
  5095  0F16  1683               	bsf	status, 5	;RP0=1, select bank1
  5096  0F17  1303               	bcf	status, 6	;RP1=0, select bank1
  5097  0F18  01B0               	clrf	(_Disp1)^080h	;volatile
  5098  0F19  07B0               	addwf	(_Disp1)^080h	;volatile
  5099                           
  5100                           	line	52
  5101                           	
  5102  0F1A                     l3012:	
  5103  0F1A  0008               	return
  5104                           	opt stack 0
  5105                           GLOBAL	__end_of_readAvgDistance
  5106  0F1B                     	__end_of_readAvgDistance:
  5107 ;; =============== function _readAvgDistance ends ============
  5108                           
  5109                           	signat	_readAvgDistance,88
  5110                           	global	_init
  5111                           psect	text958,local,class=CODE,delta=2
  5112                           global __ptext958
  5113  08D1                     __ptext958:
  5114                           
  5115 ;; *************** function _init *****************
  5116 ;; Defined at:
  5117 ;;		line 139 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;		None
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;		None
  5122 ;; Return value:  Size  Location     Type
  5123 ;;		None               void
  5124 ;; Registers used:
  5125 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5131 ;;      Params:         0       0       0       0       0
  5132 ;;      Locals:         0       0       0       0       0
  5133 ;;      Temps:          0       1       0       0       0
  5134 ;;      Totals:         0       1       0       0       0
  5135 ;;Total ram usage:        1 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    5
  5138 ;; This function calls:
  5139 ;;		_ser_init
  5140 ;;		_init_adc
  5141 ;;		_lcd_init
  5142 ;;		_robo_init
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           psect	text958
  5148                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  5149                           	line	139
  5150                           	global	__size_of_init
  5151  002F                     	__size_of_init	equ	__end_of_init-_init
  5152                           	
  5153  08D1                     _init:	
  5154                           	opt	stack 2
  5155                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5156                           	line	140
  5157                           	
  5158  08D1                     l11094:	
  5159                           ;Main.c: 140: buttonPressed = 0;
  5160  08D1  01FD               	clrf	(_buttonPressed)	;volatile
  5161                           	line	142
  5162                           	
  5163  08D2                     l11096:	
  5164                           ;Main.c: 142: TRISB = 0b11111100;
  5165  08D2  30FC               	movlw	(0FCh)
  5166  08D3  1683               	bsf	status, 5	;RP0=1, select bank1
  5167  08D4  1303               	bcf	status, 6	;RP1=0, select bank1
  5168  08D5  0086               	movwf	(134)^080h	;volatile
  5169                           	line	143
  5170                           	
  5171  08D6                     l11098:	
  5172                           ;Main.c: 143: TRISC &= 0b10010000;
  5173  08D6  3090               	movlw	(090h)
  5174  08D7  1283               	bcf	status, 5	;RP0=0, select bank0
  5175  08D8  1303               	bcf	status, 6	;RP1=0, select bank0
  5176  08D9  00A3               	movwf	(??_init+0)+0
  5177  08DA  0823               	movf	(??_init+0)+0,w
  5178  08DB  1683               	bsf	status, 5	;RP0=1, select bank1
  5179  08DC  1303               	bcf	status, 6	;RP1=0, select bank1
  5180  08DD  0587               	andwf	(135)^080h,f	;volatile
  5181                           	line	146
  5182                           	
  5183  08DE                     l11100:	
  5184                           ;Main.c: 146: SSPSTAT = 0b01000000;
  5185  08DE  3040               	movlw	(040h)
  5186  08DF  0094               	movwf	(148)^080h	;volatile
  5187                           	line	147
  5188                           	
  5189  08E0                     l11102:	
  5190                           ;Main.c: 147: SSPCON = 0b10100001;
  5191  08E0  30A1               	movlw	(0A1h)
  5192  08E1  1283               	bcf	status, 5	;RP0=0, select bank0
  5193  08E2  1303               	bcf	status, 6	;RP1=0, select bank0
  5194  08E3  0094               	movwf	(20)	;volatile
  5195                           	line	150
  5196                           	
  5197  08E4                     l11104:	
  5198                           ;Main.c: 150: OPTION_REG = 0b00000100;
  5199  08E4  3004               	movlw	(04h)
  5200  08E5  1683               	bsf	status, 5	;RP0=1, select bank1
  5201  08E6  1303               	bcf	status, 6	;RP1=0, select bank1
  5202  08E7  0081               	movwf	(129)^080h	;volatile
  5203                           	line	153
  5204                           	
  5205  08E8                     l11106:	
  5206                           ;Main.c: 153: ser_init();
  5207  08E8  160A  118A  272C   	fcall	_ser_init
              120A  158A         
  5208                           	line	154
  5209                           	
  5210  08ED                     l11108:	
  5211                           ;Main.c: 154: init_adc();
  5212  08ED  160A  118A  26AF   	fcall	_init_adc
              120A  158A         
  5213                           	line	155
  5214                           	
  5215  08F2                     l11110:	
  5216                           ;Main.c: 155: lcd_init();
  5217  08F2  160A  118A  277D   	fcall	_lcd_init
              120A  158A         
  5218                           	line	156
  5219                           	
  5220  08F7                     l11112:	
  5221                           ;Main.c: 156: robo_init();
  5222  08F7  160A  118A  26F2   	fcall	_robo_init
              120A  158A         
  5223                           	line	160
  5224                           	
  5225  08FC                     l11114:	
  5226                           ;Main.c: 160: TMR0IE = 1;
  5227  08FC  168B               	bsf	(93/8),(93)&7
  5228                           	line	162
  5229                           	
  5230  08FD                     l11116:	
  5231                           ;Main.c: 162: PEIE=1;
  5232  08FD  170B               	bsf	(94/8),(94)&7
  5233                           	line	164
  5234                           	
  5235  08FE                     l11118:	
  5236                           ;Main.c: 164: (GIE = 1);
  5237  08FE  178B               	bsf	(95/8),(95)&7
  5238                           	line	165
  5239                           	
  5240  08FF                     l2231:	
  5241  08FF  0008               	return
  5242                           	opt stack 0
  5243                           GLOBAL	__end_of_init
  5244  0900                     	__end_of_init:
  5245 ;; =============== function _init ends ============
  5246                           
  5247                           	signat	_init,88
  5248                           	global	_readDistance
  5249                           psect	text959,local,class=CODE,delta=2
  5250                           global __ptext959
  5251  16C5                     __ptext959:
  5252                           
  5253 ;; *************** function _readDistance *****************
  5254 ;; Defined at:
  5255 ;;		line 57 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  readVal         2   12[BANK0 ] unsigned int 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  2    8[BANK0 ] unsigned int 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5269 ;;      Params:         0       2       0       0       0
  5270 ;;      Locals:         0       2       0       0       0
  5271 ;;      Temps:          0       2       0       0       0
  5272 ;;      Totals:         0       6       0       0       0
  5273 ;;Total ram usage:        6 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    5
  5276 ;; This function calls:
  5277 ;;		_adc_read_channel
  5278 ;; This function is called by:
  5279 ;;		_readAvgDistance
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           psect	text959
  5283                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  5284                           	line	57
  5285                           	global	__size_of_readDistance
  5286  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  5287                           	
  5288  16C5                     _readDistance:	
  5289                           	opt	stack 0
  5290                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5291                           	line	60
  5292                           	
  5293  16C5                     l11088:	
  5294                           ;infrared.c: 58: unsigned int readVal;
  5295                           ;infrared.c: 60: readVal = adc_read_channel(0);
  5296  16C5  3000               	movlw	(0)
  5297  16C6  120A  158A  21CD   	fcall	_adc_read_channel
              160A  118A         
  5298  16CB  1283               	bcf	status, 5	;RP0=0, select bank0
  5299  16CC  1303               	bcf	status, 6	;RP1=0, select bank0
  5300  16CD  00AA               	movwf	(??_readDistance+0)+0
  5301  16CE  01AB               	clrf	(??_readDistance+0)+0+1
  5302  16CF  082A               	movf	0+(??_readDistance+0)+0,w
  5303  16D0  00AC               	movwf	(readDistance@readVal)
  5304  16D1  082B               	movf	1+(??_readDistance+0)+0,w
  5305  16D2  00AD               	movwf	(readDistance@readVal+1)
  5306                           	line	62
  5307                           	
  5308  16D3                     l11090:	
  5309                           ;infrared.c: 62: return readVal;
  5310  16D3  082D               	movf	(readDistance@readVal+1),w
  5311  16D4  01A9               	clrf	(?_readDistance+1)
  5312  16D5  07A9               	addwf	(?_readDistance+1)
  5313  16D6  082C               	movf	(readDistance@readVal),w
  5314  16D7  01A8               	clrf	(?_readDistance)
  5315  16D8  07A8               	addwf	(?_readDistance)
  5316                           
  5317  16D9  2EDA               	goto	l3015
  5318                           	
  5319  16DA                     l11092:	
  5320                           	line	63
  5321                           	
  5322  16DA                     l3015:	
  5323  16DA  0008               	return
  5324                           	opt stack 0
  5325                           GLOBAL	__end_of_readDistance
  5326  16DB                     	__end_of_readDistance:
  5327 ;; =============== function _readDistance ends ============
  5328                           
  5329                           	signat	_readDistance,90
  5330                           	global	_robot_read
  5331                           psect	text960,local,class=CODE,delta=2
  5332                           global __ptext960
  5333  03D1                     __ptext960:
  5334                           
  5335 ;; *************** function _robot_read *****************
  5336 ;; Defined at:
  5337 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  readType        1    wreg     unsigned char 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  readType        1    4[BANK0 ] unsigned char 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;		None               void
  5344 ;; Registers used:
  5345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5351 ;;      Params:         0       0       0       0       0
  5352 ;;      Locals:         0       1       0       0       0
  5353 ;;      Temps:          0       2       0       0       0
  5354 ;;      Totals:         0       3       0       0       0
  5355 ;;Total ram usage:        3 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    5
  5358 ;; This function calls:
  5359 ;;		_ser_putch
  5360 ;;		_ser_getch
  5361 ;; This function is called by:
  5362 ;;		_main
  5363 ;;		_robotFollow
  5364 ;;		_robotMoveSpeed
  5365 ;;		_robotTurnSpeed
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           psect	text960
  5369                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5370                           	line	46
  5371                           	global	__size_of_robot_read
  5372  0162                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  5373                           	
  5374  03D1                     _robot_read:	
  5375                           	opt	stack 1
  5376                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5377                           ;robot_read@readType stored from wreg
  5378  03D1  1283               	bcf	status, 5	;RP0=0, select bank0
  5379  03D2  1303               	bcf	status, 6	;RP1=0, select bank0
  5380  03D3  00A4               	movwf	(robot_read@readType)
  5381                           	line	47
  5382                           	
  5383  03D4                     l11030:	
  5384                           ;robot.c: 47: ser_putch(142);
  5385  03D4  308E               	movlw	(08Eh)
  5386  03D5  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5387                           	line	48
  5388                           ;robot.c: 48: ser_putch(7);
  5389  03DA  3007               	movlw	(07h)
  5390  03DB  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5391                           	line	49
  5392                           	
  5393  03E0                     l11032:	
  5394                           ;robot.c: 49: _delay((unsigned long)((5)*(20000000/4000.0)));
  5395                           	opt asmopt_off
  5396  03E0  3021               movlw	33
  5397  03E1  1283               	bcf	status, 5	;RP0=0, select bank0
  5398  03E2  1303               	bcf	status, 6	;RP1=0, select bank0
  5399  03E3  00A3               movwf	((??_robot_read+0)+0+1),f
  5400  03E4  3076               	movlw	118
  5401  03E5  00A2               movwf	((??_robot_read+0)+0),f
  5402  03E6                     u5037:
  5403  03E6  0BA2               	decfsz	((??_robot_read+0)+0),f
  5404  03E7  2BE6               	goto	u5037
  5405  03E8  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5406  03E9  2BE6               	goto	u5037
  5407  03EA  0064               	clrwdt
  5408                           opt asmopt_on
  5409                           
  5410                           	line	50
  5411                           	
  5412  03EB                     l11034:	
  5413                           ;robot.c: 50: BumpSensors = ser_getch();
  5414  03EB  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5415  03F0  1283               	bcf	status, 5	;RP0=0, select bank0
  5416  03F1  1303               	bcf	status, 6	;RP1=0, select bank0
  5417  03F2  00A2               	movwf	(??_robot_read+0)+0
  5418  03F3  0822               	movf	(??_robot_read+0)+0,w
  5419  03F4  00EA               	movwf	(_BumpSensors)	;volatile
  5420                           	line	52
  5421                           	
  5422  03F5                     l11036:	
  5423                           ;robot.c: 52: ser_putch(142);
  5424  03F5  308E               	movlw	(08Eh)
  5425  03F6  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5426                           	line	53
  5427                           	
  5428  03FB                     l11038:	
  5429                           ;robot.c: 53: ser_putch(13);
  5430  03FB  300D               	movlw	(0Dh)
  5431  03FC  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5432                           	line	54
  5433                           ;robot.c: 54: _delay((unsigned long)((5)*(20000000/4000.0)));
  5434                           	opt asmopt_off
  5435  0401  3021               movlw	33
  5436  0402  1283               	bcf	status, 5	;RP0=0, select bank0
  5437  0403  1303               	bcf	status, 6	;RP1=0, select bank0
  5438  0404  00A3               movwf	((??_robot_read+0)+0+1),f
  5439  0405  3076               	movlw	118
  5440  0406  00A2               movwf	((??_robot_read+0)+0),f
  5441  0407                     u5047:
  5442  0407  0BA2               	decfsz	((??_robot_read+0)+0),f
  5443  0408  2C07               	goto	u5047
  5444  0409  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5445  040A  2C07               	goto	u5047
  5446  040B  0064               	clrwdt
  5447                           opt asmopt_on
  5448                           
  5449                           	line	55
  5450                           	
  5451  040C                     l11040:	
  5452                           ;robot.c: 55: VwallSensor = ser_getch();
  5453  040C  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5454  0411  1283               	bcf	status, 5	;RP0=0, select bank0
  5455  0412  1303               	bcf	status, 6	;RP1=0, select bank0
  5456  0413  00A2               	movwf	(??_robot_read+0)+0
  5457  0414  0822               	movf	(??_robot_read+0)+0,w
  5458  0415  00EB               	movwf	(_VwallSensor)	;volatile
  5459                           	line	57
  5460                           	
  5461  0416                     l11042:	
  5462                           ;robot.c: 57: ser_putch(142);
  5463  0416  308E               	movlw	(08Eh)
  5464  0417  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5465                           	line	58
  5466                           	
  5467  041C                     l11044:	
  5468                           ;robot.c: 58: ser_putch(10);
  5469  041C  300A               	movlw	(0Ah)
  5470  041D  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5471                           	line	59
  5472                           	
  5473  0422                     l11046:	
  5474                           ;robot.c: 59: _delay((unsigned long)((5)*(20000000/4000.0)));
  5475                           	opt asmopt_off
  5476  0422  3021               movlw	33
  5477  0423  1283               	bcf	status, 5	;RP0=0, select bank0
  5478  0424  1303               	bcf	status, 6	;RP1=0, select bank0
  5479  0425  00A3               movwf	((??_robot_read+0)+0+1),f
  5480  0426  3076               	movlw	118
  5481  0427  00A2               movwf	((??_robot_read+0)+0),f
  5482  0428                     u5057:
  5483  0428  0BA2               	decfsz	((??_robot_read+0)+0),f
  5484  0429  2C28               	goto	u5057
  5485  042A  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5486  042B  2C28               	goto	u5057
  5487  042C  0064               	clrwdt
  5488                           opt asmopt_on
  5489                           
  5490                           	line	60
  5491                           ;robot.c: 60: CliffSensors = ser_getch();
  5492  042D  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5493  0432  1283               	bcf	status, 5	;RP0=0, select bank0
  5494  0433  1303               	bcf	status, 6	;RP1=0, select bank0
  5495  0434  00A2               	movwf	(??_robot_read+0)+0
  5496  0435  0822               	movf	(??_robot_read+0)+0,w
  5497  0436  1683               	bsf	status, 5	;RP0=1, select bank1
  5498  0437  1303               	bcf	status, 6	;RP1=0, select bank1
  5499  0438  00C9               	movwf	(_CliffSensors)^080h	;volatile
  5500                           	line	62
  5501                           ;robot.c: 62: ser_putch(142);
  5502  0439  308E               	movlw	(08Eh)
  5503  043A  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5504                           	line	63
  5505                           ;robot.c: 63: ser_putch(11);
  5506  043F  300B               	movlw	(0Bh)
  5507  0440  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5508                           	line	64
  5509                           	
  5510  0445                     l11048:	
  5511                           ;robot.c: 64: _delay((unsigned long)((5)*(20000000/4000.0)));
  5512                           	opt asmopt_off
  5513  0445  3021               movlw	33
  5514  0446  1283               	bcf	status, 5	;RP0=0, select bank0
  5515  0447  1303               	bcf	status, 6	;RP1=0, select bank0
  5516  0448  00A3               movwf	((??_robot_read+0)+0+1),f
  5517  0449  3076               	movlw	118
  5518  044A  00A2               movwf	((??_robot_read+0)+0),f
  5519  044B                     u5067:
  5520  044B  0BA2               	decfsz	((??_robot_read+0)+0),f
  5521  044C  2C4B               	goto	u5067
  5522  044D  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5523  044E  2C4B               	goto	u5067
  5524  044F  0064               	clrwdt
  5525                           opt asmopt_on
  5526                           
  5527                           	line	65
  5528                           	
  5529  0450                     l11050:	
  5530                           ;robot.c: 65: CliffSensors += ser_getch();
  5531  0450  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5532  0455  1283               	bcf	status, 5	;RP0=0, select bank0
  5533  0456  1303               	bcf	status, 6	;RP1=0, select bank0
  5534  0457  00A2               	movwf	(??_robot_read+0)+0
  5535  0458  0822               	movf	(??_robot_read+0)+0,w
  5536  0459  1683               	bsf	status, 5	;RP0=1, select bank1
  5537  045A  1303               	bcf	status, 6	;RP1=0, select bank1
  5538  045B  07C9               	addwf	(_CliffSensors)^080h,f	;volatile
  5539                           	line	67
  5540                           	
  5541  045C                     l11052:	
  5542                           ;robot.c: 67: if (readType == 0)
  5543  045C  1283               	bcf	status, 5	;RP0=0, select bank0
  5544  045D  1303               	bcf	status, 6	;RP1=0, select bank0
  5545  045E  08A4               	movf	(robot_read@readType),f
  5546  045F  1D03               	skipz
  5547  0460  2C62               	goto	u4681
  5548  0461  2C63               	goto	u4680
  5549  0462                     u4681:
  5550  0462  2C93               	goto	l11062
  5551  0463                     u4680:
  5552                           	line	69
  5553                           	
  5554  0463                     l11054:	
  5555                           ;robot.c: 68: {
  5556                           ;robot.c: 69: ser_putch(142);
  5557  0463  308E               	movlw	(08Eh)
  5558  0464  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5559                           	line	70
  5560                           ;robot.c: 70: ser_putch(19);
  5561  0469  3013               	movlw	(013h)
  5562  046A  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5563                           	line	71
  5564                           	
  5565  046F                     l11056:	
  5566                           ;robot.c: 71: _delay((unsigned long)((5)*(20000000/4000.0)));
  5567                           	opt asmopt_off
  5568  046F  3021               movlw	33
  5569  0470  1283               	bcf	status, 5	;RP0=0, select bank0
  5570  0471  1303               	bcf	status, 6	;RP1=0, select bank0
  5571  0472  00A3               movwf	((??_robot_read+0)+0+1),f
  5572  0473  3076               	movlw	118
  5573  0474  00A2               movwf	((??_robot_read+0)+0),f
  5574  0475                     u5077:
  5575  0475  0BA2               	decfsz	((??_robot_read+0)+0),f
  5576  0476  2C75               	goto	u5077
  5577  0477  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5578  0478  2C75               	goto	u5077
  5579  0479  0064               	clrwdt
  5580                           opt asmopt_on
  5581                           
  5582                           	line	72
  5583                           	
  5584  047A                     l11058:	
  5585                           ;robot.c: 72: DistHighByte = ser_getch();
  5586  047A  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5587  047F  1283               	bcf	status, 5	;RP0=0, select bank0
  5588  0480  1303               	bcf	status, 6	;RP1=0, select bank0
  5589  0481  00A2               	movwf	(??_robot_read+0)+0
  5590  0482  0822               	movf	(??_robot_read+0)+0,w
  5591  0483  1683               	bsf	status, 5	;RP0=1, select bank1
  5592  0484  1303               	bcf	status, 6	;RP1=0, select bank1
  5593  0485  00CA               	movwf	(_DistHighByte)^080h	;volatile
  5594                           	line	73
  5595                           	
  5596  0486                     l11060:	
  5597                           ;robot.c: 73: DistLowByte = ser_getch();
  5598  0486  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5599  048B  1283               	bcf	status, 5	;RP0=0, select bank0
  5600  048C  1303               	bcf	status, 6	;RP1=0, select bank0
  5601  048D  00A2               	movwf	(??_robot_read+0)+0
  5602  048E  0822               	movf	(??_robot_read+0)+0,w
  5603  048F  1683               	bsf	status, 5	;RP0=1, select bank1
  5604  0490  1303               	bcf	status, 6	;RP1=0, select bank1
  5605  0491  00CB               	movwf	(_DistLowByte)^080h	;volatile
  5606                           	line	74
  5607                           ;robot.c: 74: }
  5608  0492  2D32               	goto	l6051
  5609                           	line	75
  5610                           	
  5611  0493                     l6046:	
  5612                           	
  5613  0493                     l11062:	
  5614                           ;robot.c: 75: else if (readType == 1)
  5615  0493  1283               	bcf	status, 5	;RP0=0, select bank0
  5616  0494  0824               	movf	(robot_read@readType),w
  5617  0495  3A01               	xorlw	01h
  5618  0496  1D03               	skipz
  5619  0497  2C99               	goto	u4691
  5620  0498  2C9A               	goto	u4690
  5621  0499                     u4691:
  5622  0499  2CCA               	goto	l11072
  5623  049A                     u4690:
  5624                           	line	77
  5625                           	
  5626  049A                     l11064:	
  5627                           ;robot.c: 76: {
  5628                           ;robot.c: 77: ser_putch(142);
  5629  049A  308E               	movlw	(08Eh)
  5630  049B  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5631                           	line	78
  5632                           ;robot.c: 78: ser_putch(20);
  5633  04A0  3014               	movlw	(014h)
  5634  04A1  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5635                           	line	79
  5636                           	
  5637  04A6                     l11066:	
  5638                           ;robot.c: 79: _delay((unsigned long)((5)*(20000000/4000.0)));
  5639                           	opt asmopt_off
  5640  04A6  3021               movlw	33
  5641  04A7  1283               	bcf	status, 5	;RP0=0, select bank0
  5642  04A8  1303               	bcf	status, 6	;RP1=0, select bank0
  5643  04A9  00A3               movwf	((??_robot_read+0)+0+1),f
  5644  04AA  3076               	movlw	118
  5645  04AB  00A2               movwf	((??_robot_read+0)+0),f
  5646  04AC                     u5087:
  5647  04AC  0BA2               	decfsz	((??_robot_read+0)+0),f
  5648  04AD  2CAC               	goto	u5087
  5649  04AE  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5650  04AF  2CAC               	goto	u5087
  5651  04B0  0064               	clrwdt
  5652                           opt asmopt_on
  5653                           
  5654                           	line	80
  5655                           	
  5656  04B1                     l11068:	
  5657                           ;robot.c: 80: AngleHighByte = ser_getch();
  5658  04B1  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5659  04B6  1283               	bcf	status, 5	;RP0=0, select bank0
  5660  04B7  1303               	bcf	status, 6	;RP1=0, select bank0
  5661  04B8  00A2               	movwf	(??_robot_read+0)+0
  5662  04B9  0822               	movf	(??_robot_read+0)+0,w
  5663  04BA  1683               	bsf	status, 5	;RP0=1, select bank1
  5664  04BB  1303               	bcf	status, 6	;RP1=0, select bank1
  5665  04BC  00C6               	movwf	(_AngleHighByte)^080h	;volatile
  5666                           	line	81
  5667                           	
  5668  04BD                     l11070:	
  5669                           ;robot.c: 81: AngleLowByte = ser_getch();
  5670  04BD  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5671  04C2  1283               	bcf	status, 5	;RP0=0, select bank0
  5672  04C3  1303               	bcf	status, 6	;RP1=0, select bank0
  5673  04C4  00A2               	movwf	(??_robot_read+0)+0
  5674  04C5  0822               	movf	(??_robot_read+0)+0,w
  5675  04C6  1683               	bsf	status, 5	;RP0=1, select bank1
  5676  04C7  1303               	bcf	status, 6	;RP1=0, select bank1
  5677  04C8  00C7               	movwf	(_AngleLowByte)^080h	;volatile
  5678                           	line	82
  5679                           ;robot.c: 82: }
  5680  04C9  2D32               	goto	l6051
  5681                           	line	83
  5682                           	
  5683  04CA                     l6048:	
  5684                           	
  5685  04CA                     l11072:	
  5686                           ;robot.c: 83: else if (readType == 2)
  5687  04CA  1283               	bcf	status, 5	;RP0=0, select bank0
  5688  04CB  0824               	movf	(robot_read@readType),w
  5689  04CC  3A02               	xorlw	02h
  5690  04CD  1D03               	skipz
  5691  04CE  2CD0               	goto	u4701
  5692  04CF  2CD1               	goto	u4700
  5693  04D0                     u4701:
  5694  04D0  2D32               	goto	l6051
  5695  04D1                     u4700:
  5696                           	line	86
  5697                           	
  5698  04D1                     l11074:	
  5699                           ;robot.c: 84: {
  5700                           ;robot.c: 86: ser_putch(142);
  5701  04D1  308E               	movlw	(08Eh)
  5702  04D2  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5703                           	line	87
  5704                           ;robot.c: 87: ser_putch(19);
  5705  04D7  3013               	movlw	(013h)
  5706  04D8  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5707                           	line	88
  5708                           	
  5709  04DD                     l11076:	
  5710                           ;robot.c: 88: _delay((unsigned long)((5)*(20000000/4000.0)));
  5711                           	opt asmopt_off
  5712  04DD  3021               movlw	33
  5713  04DE  1283               	bcf	status, 5	;RP0=0, select bank0
  5714  04DF  1303               	bcf	status, 6	;RP1=0, select bank0
  5715  04E0  00A3               movwf	((??_robot_read+0)+0+1),f
  5716  04E1  3076               	movlw	118
  5717  04E2  00A2               movwf	((??_robot_read+0)+0),f
  5718  04E3                     u5097:
  5719  04E3  0BA2               	decfsz	((??_robot_read+0)+0),f
  5720  04E4  2CE3               	goto	u5097
  5721  04E5  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5722  04E6  2CE3               	goto	u5097
  5723  04E7  0064               	clrwdt
  5724                           opt asmopt_on
  5725                           
  5726                           	line	89
  5727                           	
  5728  04E8                     l11078:	
  5729                           ;robot.c: 89: DistHighByte = ser_getch();
  5730  04E8  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5731  04ED  1283               	bcf	status, 5	;RP0=0, select bank0
  5732  04EE  1303               	bcf	status, 6	;RP1=0, select bank0
  5733  04EF  00A2               	movwf	(??_robot_read+0)+0
  5734  04F0  0822               	movf	(??_robot_read+0)+0,w
  5735  04F1  1683               	bsf	status, 5	;RP0=1, select bank1
  5736  04F2  1303               	bcf	status, 6	;RP1=0, select bank1
  5737  04F3  00CA               	movwf	(_DistHighByte)^080h	;volatile
  5738                           	line	90
  5739                           	
  5740  04F4                     l11080:	
  5741                           ;robot.c: 90: DistLowByte = ser_getch();
  5742  04F4  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5743  04F9  1283               	bcf	status, 5	;RP0=0, select bank0
  5744  04FA  1303               	bcf	status, 6	;RP1=0, select bank0
  5745  04FB  00A2               	movwf	(??_robot_read+0)+0
  5746  04FC  0822               	movf	(??_robot_read+0)+0,w
  5747  04FD  1683               	bsf	status, 5	;RP0=1, select bank1
  5748  04FE  1303               	bcf	status, 6	;RP1=0, select bank1
  5749  04FF  00CB               	movwf	(_DistLowByte)^080h	;volatile
  5750                           	line	91
  5751                           	
  5752  0500                     l11082:	
  5753                           ;robot.c: 91: ser_putch(142);
  5754  0500  308E               	movlw	(08Eh)
  5755  0501  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5756                           	line	92
  5757                           	
  5758  0506                     l11084:	
  5759                           ;robot.c: 92: ser_putch(20);
  5760  0506  3014               	movlw	(014h)
  5761  0507  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  5762                           	line	93
  5763                           	
  5764  050C                     l11086:	
  5765                           ;robot.c: 93: _delay((unsigned long)((5)*(20000000/4000.0)));
  5766                           	opt asmopt_off
  5767  050C  3021               movlw	33
  5768  050D  1283               	bcf	status, 5	;RP0=0, select bank0
  5769  050E  1303               	bcf	status, 6	;RP1=0, select bank0
  5770  050F  00A3               movwf	((??_robot_read+0)+0+1),f
  5771  0510  3076               	movlw	118
  5772  0511  00A2               movwf	((??_robot_read+0)+0),f
  5773  0512                     u5107:
  5774  0512  0BA2               	decfsz	((??_robot_read+0)+0),f
  5775  0513  2D12               	goto	u5107
  5776  0514  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5777  0515  2D12               	goto	u5107
  5778  0516  0064               	clrwdt
  5779                           opt asmopt_on
  5780                           
  5781                           	line	94
  5782                           ;robot.c: 94: AngleHighByte = ser_getch();
  5783  0517  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5784  051C  1283               	bcf	status, 5	;RP0=0, select bank0
  5785  051D  1303               	bcf	status, 6	;RP1=0, select bank0
  5786  051E  00A2               	movwf	(??_robot_read+0)+0
  5787  051F  0822               	movf	(??_robot_read+0)+0,w
  5788  0520  1683               	bsf	status, 5	;RP0=1, select bank1
  5789  0521  1303               	bcf	status, 6	;RP1=0, select bank1
  5790  0522  00C6               	movwf	(_AngleHighByte)^080h	;volatile
  5791                           	line	95
  5792                           ;robot.c: 95: AngleLowByte = ser_getch();
  5793  0523  120A  158A  20AF   	fcall	_ser_getch
              120A  118A         
  5794  0528  1283               	bcf	status, 5	;RP0=0, select bank0
  5795  0529  1303               	bcf	status, 6	;RP1=0, select bank0
  5796  052A  00A2               	movwf	(??_robot_read+0)+0
  5797  052B  0822               	movf	(??_robot_read+0)+0,w
  5798  052C  1683               	bsf	status, 5	;RP0=1, select bank1
  5799  052D  1303               	bcf	status, 6	;RP1=0, select bank1
  5800  052E  00C7               	movwf	(_AngleLowByte)^080h	;volatile
  5801  052F  2D32               	goto	l6051
  5802                           	line	96
  5803                           	
  5804  0530                     l6050:	
  5805  0530  2D32               	goto	l6051
  5806                           	line	97
  5807                           	
  5808  0531                     l6049:	
  5809  0531  2D32               	goto	l6051
  5810                           	
  5811  0532                     l6047:	
  5812                           	
  5813  0532                     l6051:	
  5814  0532  0008               	return
  5815                           	opt stack 0
  5816                           GLOBAL	__end_of_robot_read
  5817  0533                     	__end_of_robot_read:
  5818 ;; =============== function _robot_read ends ============
  5819                           
  5820                           	signat	_robot_read,4216
  5821                           	global	_lcd_init
  5822                           psect	text961,local,class=CODE,delta=2
  5823                           global __ptext961
  5824  177D                     __ptext961:
  5825                           
  5826 ;; *************** function _lcd_init *****************
  5827 ;; Defined at:
  5828 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;		None               void
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, pclath, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5842 ;;      Params:         0       0       0       0       0
  5843 ;;      Locals:         0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0
  5845 ;;      Totals:         0       0       0       0       0
  5846 ;;Total ram usage:        0 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    4
  5849 ;; This function calls:
  5850 ;;		_lcd_write_control
  5851 ;; This function is called by:
  5852 ;;		_init
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           psect	text961
  5856                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5857                           	line	101
  5858                           	global	__size_of_lcd_init
  5859  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5860                           	
  5861  177D                     _lcd_init:	
  5862                           	opt	stack 2
  5863                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5864                           	line	105
  5865                           	
  5866  177D                     l11010:	
  5867                           ;lcd.c: 105: ADCON1 = 0b00000010;
  5868  177D  3002               	movlw	(02h)
  5869  177E  1683               	bsf	status, 5	;RP0=1, select bank1
  5870  177F  1303               	bcf	status, 6	;RP1=0, select bank1
  5871  1780  009F               	movwf	(159)^080h	;volatile
  5872                           	line	108
  5873                           	
  5874  1781                     l11012:	
  5875                           ;lcd.c: 108: PORTD = 0;
  5876  1781  1283               	bcf	status, 5	;RP0=0, select bank0
  5877  1782  1303               	bcf	status, 6	;RP1=0, select bank0
  5878  1783  0188               	clrf	(8)	;volatile
  5879                           	line	109
  5880                           	
  5881  1784                     l11014:	
  5882                           ;lcd.c: 109: PORTE = 0;
  5883  1784  0189               	clrf	(9)	;volatile
  5884                           	line	111
  5885                           	
  5886  1785                     l11016:	
  5887                           ;lcd.c: 111: TRISD = 0b00000000;
  5888  1785  1683               	bsf	status, 5	;RP0=1, select bank1
  5889  1786  1303               	bcf	status, 6	;RP1=0, select bank1
  5890  1787  0188               	clrf	(136)^080h	;volatile
  5891                           	line	112
  5892                           	
  5893  1788                     l11018:	
  5894                           ;lcd.c: 112: TRISE = 0b00000000;
  5895  1788  0189               	clrf	(137)^080h	;volatile
  5896                           	line	115
  5897                           	
  5898  1789                     l11020:	
  5899                           ;lcd.c: 115: lcd_write_control(0b00000001);
  5900  1789  3001               	movlw	(01h)
  5901  178A  160A  118A  269B   	fcall	_lcd_write_control
              160A  118A         
  5902                           	line	116
  5903                           	
  5904  178F                     l11022:	
  5905                           ;lcd.c: 116: lcd_write_control(0b00111000);
  5906  178F  3038               	movlw	(038h)
  5907  1790  160A  118A  269B   	fcall	_lcd_write_control
              160A  118A         
  5908                           	line	117
  5909                           	
  5910  1795                     l11024:	
  5911                           ;lcd.c: 117: lcd_write_control(0b00001100);
  5912  1795  300C               	movlw	(0Ch)
  5913  1796  160A  118A  269B   	fcall	_lcd_write_control
              160A  118A         
  5914                           	line	118
  5915                           	
  5916  179B                     l11026:	
  5917                           ;lcd.c: 118: lcd_write_control(0b00000110);
  5918  179B  3006               	movlw	(06h)
  5919  179C  160A  118A  269B   	fcall	_lcd_write_control
              160A  118A         
  5920                           	line	119
  5921                           	
  5922  17A1                     l11028:	
  5923                           ;lcd.c: 119: lcd_write_control(0b00000010);
  5924  17A1  3002               	movlw	(02h)
  5925  17A2  160A  118A  269B   	fcall	_lcd_write_control
              160A  118A         
  5926                           	line	121
  5927                           	
  5928  17A7                     l1429:	
  5929  17A7  0008               	return
  5930                           	opt stack 0
  5931                           GLOBAL	__end_of_lcd_init
  5932  17A8                     	__end_of_lcd_init:
  5933 ;; =============== function _lcd_init ends ============
  5934                           
  5935                           	signat	_lcd_init,88
  5936                           	global	_lcd_write_string
  5937                           psect	text962,local,class=CODE,delta=2
  5938                           global __ptext962
  5939  17D4                     __ptext962:
  5940                           
  5941 ;; *************** function _lcd_write_string *****************
  5942 ;; Defined at:
  5943 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  s               2    7[BANK0 ] PTR unsigned char 
  5946 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  5947 ;;		 -> STR_15(4), STR_14(16), UpdateDisplay@LCDOutput(16), STR_12(4), 
  5948 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  5949 ;;		 -> STR_7(4), STR_6(9), STR_5(9), STR_4(8), 
  5950 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;		None
  5953 ;; Return value:  Size  Location     Type
  5954 ;;		None               void
  5955 ;; Registers used:
  5956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5962 ;;      Params:         0       2       0       0       0
  5963 ;;      Locals:         0       0       0       0       0
  5964 ;;      Temps:          0       0       0       0       0
  5965 ;;      Totals:         0       2       0       0       0
  5966 ;;Total ram usage:        2 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    4
  5969 ;; This function calls:
  5970 ;;		_lcd_write_data
  5971 ;; This function is called by:
  5972 ;;		_UpdateDisplay
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           psect	text962
  5976                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5977                           	line	48
  5978                           	global	__size_of_lcd_write_string
  5979  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5980                           	
  5981  17D4                     _lcd_write_string:	
  5982                           	opt	stack 1
  5983                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5984                           	line	50
  5985                           	
  5986  17D4                     l11002:	
  5987                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5988  17D4  2FEE               	goto	l11008
  5989                           	
  5990  17D5                     l1409:	
  5991                           	
  5992  17D5                     l11004:	
  5993  17D5  1283               	bcf	status, 5	;RP0=0, select bank0
  5994  17D6  1303               	bcf	status, 6	;RP1=0, select bank0
  5995  17D7  0828               	movf	(lcd_write_string@s+1),w
  5996  17D8  00FF               	movwf	btemp+1
  5997  17D9  0827               	movf	(lcd_write_string@s),w
  5998  17DA  0084               	movwf	fsr0
  5999  17DB  120A  158A  2000   	fcall	stringtab
              160A  118A         
  6000  17E0  160A  118A  2661   	fcall	_lcd_write_data
              160A  118A         
  6001                           	
  6002  17E5                     l11006:	
  6003  17E5  3001               	movlw	low(01h)
  6004  17E6  1283               	bcf	status, 5	;RP0=0, select bank0
  6005  17E7  1303               	bcf	status, 6	;RP1=0, select bank0
  6006  17E8  07A7               	addwf	(lcd_write_string@s),f
  6007  17E9  1803               	skipnc
  6008  17EA  0AA8               	incf	(lcd_write_string@s+1),f
  6009  17EB  3000               	movlw	high(01h)
  6010  17EC  07A8               	addwf	(lcd_write_string@s+1),f
  6011  17ED  2FEE               	goto	l11008
  6012                           	
  6013  17EE                     l1408:	
  6014                           	
  6015  17EE                     l11008:	
  6016  17EE  1283               	bcf	status, 5	;RP0=0, select bank0
  6017  17EF  1303               	bcf	status, 6	;RP1=0, select bank0
  6018  17F0  0828               	movf	(lcd_write_string@s+1),w
  6019  17F1  00FF               	movwf	btemp+1
  6020  17F2  0827               	movf	(lcd_write_string@s),w
  6021  17F3  0084               	movwf	fsr0
  6022  17F4  120A  158A  2000   	fcall	stringtab
              160A  118A         
  6023  17F9  3800               	iorlw	0
  6024  17FA  1D03               	skipz
  6025  17FB  2FFD               	goto	u4671
  6026  17FC  2FFE               	goto	u4670
  6027  17FD                     u4671:
  6028  17FD  2FD5               	goto	l11004
  6029  17FE                     u4670:
  6030  17FE  2FFF               	goto	l1411
  6031                           	
  6032  17FF                     l1410:	
  6033                           	line	51
  6034                           	
  6035  17FF                     l1411:	
  6036  17FF  0008               	return
  6037                           	opt stack 0
  6038                           GLOBAL	__end_of_lcd_write_string
  6039  1800                     	__end_of_lcd_write_string:
  6040 ;; =============== function _lcd_write_string ends ============
  6041                           
  6042                           	signat	_lcd_write_string,4216
  6043                           	global	_lcd_set_cursor
  6044                           psect	text963,local,class=CODE,delta=2
  6045                           global __ptext963
  6046  1649                     __ptext963:
  6047                           
  6048 ;; *************** function _lcd_set_cursor *****************
  6049 ;; Defined at:
  6050 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  address         1    wreg     unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  address         1    3[BANK0 ] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;		None               void
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0, pclath, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6064 ;;      Params:         0       0       0       0       0
  6065 ;;      Locals:         0       1       0       0       0
  6066 ;;      Temps:          0       0       0       0       0
  6067 ;;      Totals:         0       1       0       0       0
  6068 ;;Total ram usage:        1 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    4
  6071 ;; This function calls:
  6072 ;;		_lcd_write_control
  6073 ;; This function is called by:
  6074 ;;		_UpdateDisplay
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           psect	text963
  6078                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  6079                           	line	42
  6080                           	global	__size_of_lcd_set_cursor
  6081  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  6082                           	
  6083  1649                     _lcd_set_cursor:	
  6084                           	opt	stack 1
  6085                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  6086                           ;lcd_set_cursor@address stored from wreg
  6087  1649  1283               	bcf	status, 5	;RP0=0, select bank0
  6088  164A  1303               	bcf	status, 6	;RP1=0, select bank0
  6089  164B  00A3               	movwf	(lcd_set_cursor@address)
  6090                           	line	43
  6091                           	
  6092  164C                     l10998:	
  6093                           ;lcd.c: 43: address |= 0b10000000;
  6094  164C  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  6095                           	line	44
  6096                           	
  6097  164D                     l11000:	
  6098                           ;lcd.c: 44: lcd_write_control(address);
  6099  164D  0823               	movf	(lcd_set_cursor@address),w
  6100  164E  160A  118A  269B   	fcall	_lcd_write_control
              160A  118A         
  6101                           	line	45
  6102                           	
  6103  1653                     l1405:	
  6104  1653  0008               	return
  6105                           	opt stack 0
  6106                           GLOBAL	__end_of_lcd_set_cursor
  6107  1654                     	__end_of_lcd_set_cursor:
  6108 ;; =============== function _lcd_set_cursor ends ============
  6109                           
  6110                           	signat	_lcd_set_cursor,4216
  6111                           	global	_abs
  6112                           psect	text964,local,class=CODE,delta=2
  6113                           global __ptext964
  6114  095F                     __ptext964:
  6115                           
  6116 ;; *************** function _abs *****************
  6117 ;; Defined at:
  6118 ;;		line 317 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  v               2    6[BANK0 ] int 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  2    6[BANK0 ] int 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6132 ;;      Params:         0       2       0       0       0
  6133 ;;      Locals:         0       0       0       0       0
  6134 ;;      Temps:          0       2       0       0       0
  6135 ;;      Totals:         0       4       0       0       0
  6136 ;;Total ram usage:        4 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    4
  6139 ;; This function calls:
  6140 ;;		___wmul
  6141 ;; This function is called by:
  6142 ;;		_robotFollow
  6143 ;;		_robotMoveSpeed
  6144 ;;		_robotTurnSpeed
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           psect	text964
  6148                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6149                           	line	317
  6150                           	global	__size_of_abs
  6151  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  6152                           	
  6153  095F                     _abs:	
  6154                           	opt	stack 2
  6155                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6156                           	line	318
  6157                           	
  6158  095F                     l10994:	
  6159                           ;robot.c: 318: return (v * ((v > 0) - (v < 0)));
  6160  095F  3000               	movlw	0
  6161  0960  1283               	bcf	status, 5	;RP0=0, select bank0
  6162  0961  1303               	bcf	status, 6	;RP1=0, select bank0
  6163  0962  1BA7               	btfsc	(abs@v+1),7
  6164  0963  3001               	movlw	1
  6165  0964  00A8               	movwf	(??_abs+0)+0
  6166  0965  01A9               	clrf	(??_abs+0)+0+1
  6167  0966  09A8               	comf	(??_abs+0)+0,f
  6168  0967  09A9               	comf	(??_abs+0)+1,f
  6169  0968  0AA8               	incf	(??_abs+0)+0,f
  6170  0969  1903               	skipnz
  6171  096A  0AA9               	incf	(??_abs+0)+1,f
  6172  096B  0827               	movf	(abs@v+1),w
  6173  096C  3A80               	xorlw	80h
  6174  096D  00FF               	movwf	btemp+1
  6175  096E  3080               	movlw	(high(01h))^80h
  6176  096F  027F               	subwf	btemp+1,w
  6177  0970  1D03               	skipz
  6178  0971  2974               	goto	u4665
  6179  0972  3001               	movlw	low(01h)
  6180  0973  0226               	subwf	(abs@v),w
  6181  0974                     u4665:
  6182                           
  6183  0974  3000               	movlw	0
  6184  0975  1803               	skipnc
  6185  0976  3001               	movlw	1
  6186  0977  1283               	bcf	status, 5	;RP0=0, select bank0
  6187  0978  1303               	bcf	status, 6	;RP1=0, select bank0
  6188  0979  0728               	addwf	0+(??_abs+0)+0,w
  6189  097A  00A0               	movwf	(?___wmul)
  6190  097B  0829               	movf	1+(??_abs+0)+0,w
  6191  097C  1803               	skipnc
  6192  097D  0A29               	incf	1+(??_abs+0)+0,w
  6193  097E  00A1               	movwf	((?___wmul))+1
  6194  097F  0827               	movf	(abs@v+1),w
  6195  0980  01A3               	clrf	1+(?___wmul)+02h
  6196  0981  07A3               	addwf	1+(?___wmul)+02h
  6197  0982  0826               	movf	(abs@v),w
  6198  0983  01A2               	clrf	0+(?___wmul)+02h
  6199  0984  07A2               	addwf	0+(?___wmul)+02h
  6200                           
  6201  0985  160A  118A  27A8   	fcall	___wmul
              120A  158A         
  6202  098A  1283               	bcf	status, 5	;RP0=0, select bank0
  6203  098B  1303               	bcf	status, 6	;RP1=0, select bank0
  6204  098C  0821               	movf	(1+(?___wmul)),w
  6205  098D  01A7               	clrf	(?_abs+1)
  6206  098E  07A7               	addwf	(?_abs+1)
  6207  098F  0820               	movf	(0+(?___wmul)),w
  6208  0990  01A6               	clrf	(?_abs)
  6209  0991  07A6               	addwf	(?_abs)
  6210                           
  6211  0992  2993               	goto	l6099
  6212                           	
  6213  0993                     l10996:	
  6214                           	line	319
  6215                           	
  6216  0993                     l6099:	
  6217  0993  0008               	return
  6218                           	opt stack 0
  6219                           GLOBAL	__end_of_abs
  6220  0994                     	__end_of_abs:
  6221 ;; =============== function _abs ends ============
  6222                           
  6223                           	signat	_abs,4218
  6224                           	global	_robotTurn
  6225                           psect	text965,local,class=CODE,delta=2
  6226                           global __ptext965
  6227  0784                     __ptext965:
  6228                           
  6229 ;; *************** function _robotTurn *****************
  6230 ;; Defined at:
  6231 ;;		line 123 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  angle           2    2[BANK0 ] int 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;		None               void
  6238 ;; Registers used:
  6239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6245 ;;      Params:         0       2       0       0       0
  6246 ;;      Locals:         0       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0
  6248 ;;      Totals:         0       2       0       0       0
  6249 ;;Total ram usage:        2 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    4
  6252 ;; This function calls:
  6253 ;;		_ser_putch
  6254 ;; This function is called by:
  6255 ;;		_robotTurnSpeed
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           psect	text965
  6259                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6260                           	line	123
  6261                           	global	__size_of_robotTurn
  6262  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  6263                           	
  6264  0784                     _robotTurn:	
  6265                           	opt	stack 2
  6266                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6267                           	line	125
  6268                           	
  6269  0784                     l10986:	
  6270                           ;robot.c: 125: if (angle > 0)
  6271  0784  1283               	bcf	status, 5	;RP0=0, select bank0
  6272  0785  1303               	bcf	status, 6	;RP1=0, select bank0
  6273  0786  0823               	movf	(robotTurn@angle+1),w
  6274  0787  3A80               	xorlw	80h
  6275  0788  00FF               	movwf	btemp+1
  6276  0789  3080               	movlw	(high(01h))^80h
  6277  078A  027F               	subwf	btemp+1,w
  6278  078B  1D03               	skipz
  6279  078C  2F8F               	goto	u4645
  6280  078D  3001               	movlw	low(01h)
  6281  078E  0222               	subwf	(robotTurn@angle),w
  6282  078F                     u4645:
  6283                           
  6284  078F  1C03               	skipc
  6285  0790  2F92               	goto	u4641
  6286  0791  2F93               	goto	u4640
  6287  0792                     u4641:
  6288  0792  2FB2               	goto	l6057
  6289  0793                     u4640:
  6290                           	line	127
  6291                           	
  6292  0793                     l10988:	
  6293                           ;robot.c: 126: {
  6294                           ;robot.c: 127: ser_putch(137);
  6295  0793  3089               	movlw	(089h)
  6296  0794  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6297                           	line	129
  6298                           ;robot.c: 129: ser_putch(0);
  6299  0799  3000               	movlw	(0)
  6300  079A  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6301                           	line	131
  6302                           ;robot.c: 131: ser_putch(200);
  6303  079F  30C8               	movlw	(0C8h)
  6304  07A0  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6305                           	line	133
  6306                           ;robot.c: 133: ser_putch(0);
  6307  07A5  3000               	movlw	(0)
  6308  07A6  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6309                           	line	135
  6310                           ;robot.c: 135: ser_putch(1);
  6311  07AB  3001               	movlw	(01h)
  6312  07AC  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6313                           	line	136
  6314                           ;robot.c: 136: }
  6315  07B1  2FF7               	goto	l6061
  6316                           	line	137
  6317                           	
  6318  07B2                     l6057:	
  6319                           ;robot.c: 137: else if (angle < 0)
  6320  07B2  1283               	bcf	status, 5	;RP0=0, select bank0
  6321  07B3  1303               	bcf	status, 6	;RP1=0, select bank0
  6322  07B4  1FA3               	btfss	(robotTurn@angle+1),7
  6323  07B5  2FB7               	goto	u4651
  6324  07B6  2FB8               	goto	u4650
  6325  07B7                     u4651:
  6326  07B7  2FD7               	goto	l10992
  6327  07B8                     u4650:
  6328                           	line	139
  6329                           	
  6330  07B8                     l10990:	
  6331                           ;robot.c: 138: {
  6332                           ;robot.c: 139: ser_putch(137);
  6333  07B8  3089               	movlw	(089h)
  6334  07B9  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6335                           	line	141
  6336                           ;robot.c: 141: ser_putch(0);
  6337  07BE  3000               	movlw	(0)
  6338  07BF  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6339                           	line	143
  6340                           ;robot.c: 143: ser_putch(200);
  6341  07C4  30C8               	movlw	(0C8h)
  6342  07C5  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6343                           	line	145
  6344                           ;robot.c: 145: ser_putch(255);
  6345  07CA  30FF               	movlw	(0FFh)
  6346  07CB  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6347                           	line	147
  6348                           ;robot.c: 147: ser_putch(255);
  6349  07D0  30FF               	movlw	(0FFh)
  6350  07D1  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6351                           	line	148
  6352                           ;robot.c: 148: }
  6353  07D6  2FF7               	goto	l6061
  6354                           	line	149
  6355                           	
  6356  07D7                     l6059:	
  6357                           	line	151
  6358                           	
  6359  07D7                     l10992:	
  6360                           ;robot.c: 149: else
  6361                           ;robot.c: 150: {
  6362                           ;robot.c: 151: ser_putch(137);
  6363  07D7  3089               	movlw	(089h)
  6364  07D8  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6365                           	line	153
  6366                           ;robot.c: 153: ser_putch(0);
  6367  07DD  3000               	movlw	(0)
  6368  07DE  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6369                           	line	155
  6370                           ;robot.c: 155: ser_putch(0);
  6371  07E3  3000               	movlw	(0)
  6372  07E4  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6373                           	line	157
  6374                           ;robot.c: 157: ser_putch(0);
  6375  07E9  3000               	movlw	(0)
  6376  07EA  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6377                           	line	159
  6378                           ;robot.c: 159: ser_putch(0);
  6379  07EF  3000               	movlw	(0)
  6380  07F0  160A  118A  270B   	fcall	_ser_putch
              120A  118A         
  6381  07F5  2FF7               	goto	l6061
  6382                           	line	160
  6383                           	
  6384  07F6                     l6060:	
  6385  07F6  2FF7               	goto	l6061
  6386                           	
  6387  07F7                     l6058:	
  6388                           	line	161
  6389                           	
  6390  07F7                     l6061:	
  6391  07F7  0008               	return
  6392                           	opt stack 0
  6393                           GLOBAL	__end_of_robotTurn
  6394  07F8                     	__end_of_robotTurn:
  6395 ;; =============== function _robotTurn ends ============
  6396                           
  6397                           	signat	_robotTurn,4216
  6398                           	global	_RobotDrive
  6399                           psect	text966,local,class=CODE,delta=2
  6400                           global __ptext966
  6401  0994                     __ptext966:
  6402                           
  6403 ;; *************** function _RobotDrive *****************
  6404 ;; Defined at:
  6405 ;;		line 102 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  speed           2    2[BANK0 ] int 
  6408 ;;  radius          2    4[BANK0 ] int 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  radiushighBy    1   10[BANK0 ] unsigned char 
  6411 ;;  radiuslowByt    1    9[BANK0 ] unsigned char 
  6412 ;;  speedhighByt    1    8[BANK0 ] unsigned char 
  6413 ;;  speedlowByte    1    7[BANK0 ] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;		None               void
  6416 ;; Registers used:
  6417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6423 ;;      Params:         0       4       0       0       0
  6424 ;;      Locals:         0       4       0       0       0
  6425 ;;      Temps:          0       1       0       0       0
  6426 ;;      Totals:         0       9       0       0       0
  6427 ;;Total ram usage:        9 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    4
  6430 ;; This function calls:
  6431 ;;		_ser_putch
  6432 ;; This function is called by:
  6433 ;;		_robotFollow
  6434 ;;		_robotMoveSpeed
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           psect	text966
  6438                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  6439                           	line	102
  6440                           	global	__size_of_RobotDrive
  6441  0039                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  6442                           	
  6443  0994                     _RobotDrive:	
  6444                           	opt	stack 2
  6445                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6446                           	line	104
  6447                           	
  6448  0994                     l10970:	
  6449                           ;robot.c: 104: unsigned char speedlowByte = (unsigned char)(speed);
  6450  0994  1283               	bcf	status, 5	;RP0=0, select bank0
  6451  0995  1303               	bcf	status, 6	;RP1=0, select bank0
  6452  0996  0822               	movf	(RobotDrive@speed),w
  6453  0997  00A6               	movwf	(??_RobotDrive+0)+0
  6454  0998  0826               	movf	(??_RobotDrive+0)+0,w
  6455  0999  00A7               	movwf	(RobotDrive@speedlowByte)
  6456                           	line	105
  6457                           	
  6458  099A                     l10972:	
  6459                           ;robot.c: 105: unsigned char speedhighByte = (unsigned char)(speed >> 8);
  6460  099A  0823               	movf	(RobotDrive@speed+1),w
  6461  099B  00A6               	movwf	(??_RobotDrive+0)+0
  6462  099C  0826               	movf	(??_RobotDrive+0)+0,w
  6463  099D  00A8               	movwf	(RobotDrive@speedhighByte)
  6464                           	line	106
  6465                           	
  6466  099E                     l10974:	
  6467                           ;robot.c: 106: unsigned char radiuslowByte = (unsigned char)(radius);
  6468  099E  0824               	movf	(RobotDrive@radius),w
  6469  099F  00A6               	movwf	(??_RobotDrive+0)+0
  6470  09A0  0826               	movf	(??_RobotDrive+0)+0,w
  6471  09A1  00A9               	movwf	(RobotDrive@radiuslowByte)
  6472                           	line	107
  6473                           ;robot.c: 107: unsigned char radiushighByte = (unsigned char)(radius >> 8);
  6474  09A2  0825               	movf	(RobotDrive@radius+1),w
  6475  09A3  00A6               	movwf	(??_RobotDrive+0)+0
  6476  09A4  0826               	movf	(??_RobotDrive+0)+0,w
  6477  09A5  00AA               	movwf	(RobotDrive@radiushighByte)
  6478                           	line	109
  6479                           	
  6480  09A6                     l10976:	
  6481                           ;robot.c: 109: ser_putch(137);
  6482  09A6  3089               	movlw	(089h)
  6483  09A7  160A  118A  270B   	fcall	_ser_putch
              120A  158A         
  6484                           	line	111
  6485                           	
  6486  09AC                     l10978:	
  6487                           ;robot.c: 111: ser_putch(speedhighByte);
  6488  09AC  1283               	bcf	status, 5	;RP0=0, select bank0
  6489  09AD  1303               	bcf	status, 6	;RP1=0, select bank0
  6490  09AE  0828               	movf	(RobotDrive@speedhighByte),w
  6491  09AF  160A  118A  270B   	fcall	_ser_putch
              120A  158A         
  6492                           	line	113
  6493                           	
  6494  09B4                     l10980:	
  6495                           ;robot.c: 113: ser_putch(speedlowByte);
  6496  09B4  1283               	bcf	status, 5	;RP0=0, select bank0
  6497  09B5  1303               	bcf	status, 6	;RP1=0, select bank0
  6498  09B6  0827               	movf	(RobotDrive@speedlowByte),w
  6499  09B7  160A  118A  270B   	fcall	_ser_putch
              120A  158A         
  6500                           	line	115
  6501                           	
  6502  09BC                     l10982:	
  6503                           ;robot.c: 115: ser_putch(radiushighByte);
  6504  09BC  1283               	bcf	status, 5	;RP0=0, select bank0
  6505  09BD  1303               	bcf	status, 6	;RP1=0, select bank0
  6506  09BE  082A               	movf	(RobotDrive@radiushighByte),w
  6507  09BF  160A  118A  270B   	fcall	_ser_putch
              120A  158A         
  6508                           	line	117
  6509                           	
  6510  09C4                     l10984:	
  6511                           ;robot.c: 117: ser_putch(radiuslowByte);
  6512  09C4  1283               	bcf	status, 5	;RP0=0, select bank0
  6513  09C5  1303               	bcf	status, 6	;RP1=0, select bank0
  6514  09C6  0829               	movf	(RobotDrive@radiuslowByte),w
  6515  09C7  160A  118A  270B   	fcall	_ser_putch
              120A  158A         
  6516                           	line	118
  6517                           	
  6518  09CC                     l6054:	
  6519  09CC  0008               	return
  6520                           	opt stack 0
  6521                           GLOBAL	__end_of_RobotDrive
  6522  09CD                     	__end_of_RobotDrive:
  6523 ;; =============== function _RobotDrive ends ============
  6524                           
  6525                           	signat	_RobotDrive,8312
  6526                           	global	_ser_getch
  6527                           psect	text967,local,class=CODE,delta=2
  6528                           global __ptext967
  6529  08AF                     __ptext967:
  6530                           
  6531 ;; *************** function _ser_getch *****************
  6532 ;; Defined at:
  6533 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;		None
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;  c               1    1[BANK0 ] unsigned char 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  1    wreg      unsigned char 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6547 ;;      Params:         0       0       0       0       0
  6548 ;;      Locals:         0       1       0       0       0
  6549 ;;      Temps:          0       1       0       0       0
  6550 ;;      Totals:         0       2       0       0       0
  6551 ;;Total ram usage:        2 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    4
  6554 ;; This function calls:
  6555 ;;		_ser_isrx
  6556 ;; This function is called by:
  6557 ;;		_robot_read
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           psect	text967
  6561                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  6562                           	line	55
  6563                           	global	__size_of_ser_getch
  6564  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  6565                           	
  6566  08AF                     _ser_getch:	
  6567                           	opt	stack 1
  6568                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6569                           	line	58
  6570                           	
  6571  08AF                     l10954:	
  6572                           ;ser.c: 56: unsigned char c;
  6573                           ;ser.c: 58: while (ser_isrx()==0)
  6574  08AF  28B1               	goto	l10956
  6575                           	
  6576  08B0                     l6803:	
  6577                           	line	59
  6578                           ;ser.c: 59: continue;
  6579  08B0  28B1               	goto	l10956
  6580                           	
  6581  08B1                     l6802:	
  6582                           	line	58
  6583                           	
  6584  08B1                     l10956:	
  6585  08B1  160A  118A  26DB   	fcall	_ser_isrx
              120A  158A         
  6586  08B6  1C03               	btfss	status,0
  6587  08B7  28B9               	goto	u4631
  6588  08B8  28BA               	goto	u4630
  6589  08B9                     u4631:
  6590  08B9  28B1               	goto	l10956
  6591  08BA                     u4630:
  6592                           	
  6593  08BA                     l6804:	
  6594                           	line	61
  6595                           ;ser.c: 61: GIE=0;
  6596  08BA  138B               	bcf	(95/8),(95)&7
  6597                           	line	62
  6598                           	
  6599  08BB                     l10958:	
  6600                           ;ser.c: 62: c=rxfifo[rxoptr];
  6601  08BB  1283               	bcf	status, 5	;RP0=0, select bank0
  6602  08BC  1303               	bcf	status, 6	;RP1=0, select bank0
  6603  08BD  086D               	movf	(_rxoptr),w
  6604  08BE  3EA0               	addlw	_rxfifo&0ffh
  6605  08BF  0084               	movwf	fsr0
  6606  08C0  1383               	bcf	status, 7	;select IRP bank1
  6607  08C1  0800               	movf	indf,w
  6608  08C2  00A0               	movwf	(??_ser_getch+0)+0
  6609  08C3  0820               	movf	(??_ser_getch+0)+0,w
  6610  08C4  00A1               	movwf	(ser_getch@c)
  6611                           	line	63
  6612                           	
  6613  08C5                     l10960:	
  6614                           ;ser.c: 63: ++rxoptr;
  6615  08C5  3001               	movlw	(01h)
  6616  08C6  00A0               	movwf	(??_ser_getch+0)+0
  6617  08C7  0820               	movf	(??_ser_getch+0)+0,w
  6618  08C8  07ED               	addwf	(_rxoptr),f	;volatile
  6619                           	line	64
  6620                           	
  6621  08C9                     l10962:	
  6622                           ;ser.c: 64: rxoptr &= (16-1);
  6623  08C9  300F               	movlw	(0Fh)
  6624  08CA  00A0               	movwf	(??_ser_getch+0)+0
  6625  08CB  0820               	movf	(??_ser_getch+0)+0,w
  6626  08CC  05ED               	andwf	(_rxoptr),f	;volatile
  6627                           	line	65
  6628                           	
  6629  08CD                     l10964:	
  6630                           ;ser.c: 65: GIE=1;
  6631  08CD  178B               	bsf	(95/8),(95)&7
  6632                           	line	66
  6633                           	
  6634  08CE                     l10966:	
  6635                           ;ser.c: 66: return c;
  6636  08CE  0821               	movf	(ser_getch@c),w
  6637  08CF  28D0               	goto	l6805
  6638                           	
  6639  08D0                     l10968:	
  6640                           	line	67
  6641                           	
  6642  08D0                     l6805:	
  6643  08D0  0008               	return
  6644                           	opt stack 0
  6645                           GLOBAL	__end_of_ser_getch
  6646  08D1                     	__end_of_ser_getch:
  6647 ;; =============== function _ser_getch ends ============
  6648                           
  6649                           	signat	_ser_getch,89
  6650                           	global	_sprintf
  6651                           psect	text968,local,class=CODE,delta=2
  6652                           global __ptext968
  6653  0684                     __ptext968:
  6654                           
  6655 ;; *************** function _sprintf *****************
  6656 ;; Defined at:
  6657 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  sp              1    wreg     PTR unsigned char 
  6660 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6661 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  6662 ;;		 -> STR_13(13), 
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;  sp              1   29[BANK0 ] PTR unsigned char 
  6665 ;;		 -> UpdateDisplay@LCDOutput(16), 
  6666 ;;  _val            4   25[BANK0 ] struct .
  6667 ;;  c               1   30[BANK0 ] char 
  6668 ;;  prec            1   24[BANK0 ] char 
  6669 ;;  flag            1   23[BANK0 ] unsigned char 
  6670 ;;  ap              1   22[BANK0 ] PTR void [1]
  6671 ;;		 -> ?_sprintf(2), 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  2   14[BANK0 ] int 
  6674 ;; Registers used:
  6675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6681 ;;      Params:         0       5       0       0       0
  6682 ;;      Locals:         0       9       0       0       0
  6683 ;;      Temps:          0       3       0       0       0
  6684 ;;      Totals:         0      17       0       0       0
  6685 ;;Total ram usage:       17 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    4
  6688 ;; This function calls:
  6689 ;;		___lwdiv
  6690 ;;		___lwmod
  6691 ;; This function is called by:
  6692 ;;		_UpdateDisplay
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           psect	text968
  6696                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  6697                           	line	488
  6698                           	global	__size_of_sprintf
  6699  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  6700                           	
  6701  0684                     _sprintf:	
  6702                           	opt	stack 1
  6703                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6704                           ;sprintf@sp stored from wreg
  6705                           	line	537
  6706  0684  1283               	bcf	status, 5	;RP0=0, select bank0
  6707  0685  1303               	bcf	status, 6	;RP1=0, select bank0
  6708  0686  00BD               	movwf	(sprintf@sp)
  6709                           	
  6710  0687                     l10896:	
  6711  0687  302F               	movlw	(?_sprintf+01h)&0ffh
  6712  0688  00B3               	movwf	(??_sprintf+0)+0
  6713  0689  0833               	movf	(??_sprintf+0)+0,w
  6714  068A  00B6               	movwf	(sprintf@ap)
  6715                           	line	540
  6716  068B  2F6A               	goto	l10948
  6717                           	
  6718  068C                     l6843:	
  6719                           	line	542
  6720                           	
  6721  068C                     l10898:	
  6722  068C  083E               	movf	(sprintf@c),w
  6723  068D  3A25               	xorlw	025h
  6724  068E  1903               	skipnz
  6725  068F  2E91               	goto	u4551
  6726  0690  2E92               	goto	u4550
  6727  0691                     u4551:
  6728  0691  2E9E               	goto	l6844
  6729  0692                     u4550:
  6730                           	line	545
  6731                           	
  6732  0692                     l10900:	
  6733  0692  083E               	movf	(sprintf@c),w
  6734  0693  00B3               	movwf	(??_sprintf+0)+0
  6735  0694  083D               	movf	(sprintf@sp),w
  6736  0695  0084               	movwf	fsr0
  6737  0696  0833               	movf	(??_sprintf+0)+0,w
  6738  0697  1383               	bcf	status, 7	;select IRP bank0
  6739  0698  0080               	movwf	indf
  6740                           	
  6741  0699                     l10902:	
  6742  0699  3001               	movlw	(01h)
  6743  069A  00B3               	movwf	(??_sprintf+0)+0
  6744  069B  0833               	movf	(??_sprintf+0)+0,w
  6745  069C  07BD               	addwf	(sprintf@sp),f
  6746                           	line	546
  6747  069D  2F6A               	goto	l10948
  6748                           	line	547
  6749                           	
  6750  069E                     l6844:	
  6751                           	line	552
  6752  069E  01B7               	clrf	(sprintf@flag)
  6753                           	line	638
  6754  069F  2EA5               	goto	l10906
  6755                           	line	640
  6756                           	
  6757  06A0                     l6846:	
  6758                           	line	641
  6759  06A0  2F7E               	goto	l10950
  6760                           	line	700
  6761                           	
  6762  06A1                     l6848:	
  6763  06A1  2EBA               	goto	l10908
  6764                           	line	701
  6765                           	
  6766  06A2                     l6849:	
  6767                           	line	702
  6768  06A2  2EBA               	goto	l10908
  6769                           	line	805
  6770                           	
  6771  06A3                     l6851:	
  6772                           	line	816
  6773  06A3  2F6A               	goto	l10948
  6774                           	line	825
  6775                           	
  6776  06A4                     l10904:	
  6777  06A4  2EBA               	goto	l10908
  6778                           	line	638
  6779                           	
  6780  06A5                     l6845:	
  6781                           	
  6782  06A5                     l10906:	
  6783  06A5  3001               	movlw	01h
  6784  06A6  07AE               	addwf	(sprintf@f),f
  6785  06A7  30FF               	movlw	-01h
  6786  06A8  072E               	addwf	(sprintf@f),w
  6787  06A9  0084               	movwf	fsr0
  6788  06AA  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6789  06AF  00BE               	movwf	(sprintf@c)
  6790                           	; Switch size 1, requested type "space"
  6791                           ; Number of cases is 3, Range of values is 0 to 105
  6792                           ; switch strategies available:
  6793                           ; Name         Instructions Cycles
  6794                           ; simple_byte           10     6 (average)
  6795                           ; jumptable            260     6 (fixed)
  6796                           ; rangetable           110     6 (fixed)
  6797                           ; spacedrange          218     9 (fixed)
  6798                           ; locatedrange         106     3 (fixed)
  6799                           ;	Chosen strategy is simple_byte
  6800                           
  6801                           	opt asmopt_off
  6802  06B0  3A00               	xorlw	0^0	; case 0
  6803  06B1  1903               	skipnz
  6804  06B2  2F7E               	goto	l10950
  6805  06B3  3A64               	xorlw	100^0	; case 100
  6806  06B4  1903               	skipnz
  6807  06B5  2EBA               	goto	l10908
  6808  06B6  3A0D               	xorlw	105^100	; case 105
  6809  06B7  1903               	skipnz
  6810  06B8  2EBA               	goto	l10908
  6811  06B9  2F6A               	goto	l10948
  6812                           	opt asmopt_on
  6813                           
  6814                           	line	825
  6815                           	
  6816  06BA                     l6850:	
  6817                           	line	1254
  6818                           	
  6819  06BA                     l10908:	
  6820  06BA  0836               	movf	(sprintf@ap),w
  6821  06BB  0084               	movwf	fsr0
  6822  06BC  1383               	bcf	status, 7	;select IRP bank0
  6823  06BD  0800               	movf	indf,w
  6824  06BE  00B9               	movwf	(sprintf@_val)
  6825  06BF  0A84               	incf	fsr0,f
  6826  06C0  0800               	movf	indf,w
  6827  06C1  00BA               	movwf	(sprintf@_val+1)
  6828                           	
  6829  06C2                     l10910:	
  6830  06C2  3002               	movlw	(02h)
  6831  06C3  00B3               	movwf	(??_sprintf+0)+0
  6832  06C4  0833               	movf	(??_sprintf+0)+0,w
  6833  06C5  07B6               	addwf	(sprintf@ap),f
  6834                           	line	1256
  6835                           	
  6836  06C6                     l10912:	
  6837  06C6  1FBA               	btfss	(sprintf@_val+1),7
  6838  06C7  2EC9               	goto	u4561
  6839  06C8  2ECA               	goto	u4560
  6840  06C9                     u4561:
  6841  06C9  2ED4               	goto	l10918
  6842  06CA                     u4560:
  6843                           	line	1257
  6844                           	
  6845  06CA                     l10914:	
  6846  06CA  3003               	movlw	(03h)
  6847  06CB  00B3               	movwf	(??_sprintf+0)+0
  6848  06CC  0833               	movf	(??_sprintf+0)+0,w
  6849  06CD  04B7               	iorwf	(sprintf@flag),f
  6850                           	line	1258
  6851                           	
  6852  06CE                     l10916:	
  6853  06CE  09B9               	comf	(sprintf@_val),f
  6854  06CF  09BA               	comf	(sprintf@_val+1),f
  6855  06D0  0AB9               	incf	(sprintf@_val),f
  6856  06D1  1903               	skipnz
  6857  06D2  0ABA               	incf	(sprintf@_val+1),f
  6858  06D3  2ED4               	goto	l10918
  6859                           	line	1259
  6860                           	
  6861  06D4                     l6852:	
  6862                           	line	1300
  6863                           	
  6864  06D4                     l10918:	
  6865  06D4  01BE               	clrf	(sprintf@c)
  6866  06D5  1403               	bsf	status,0
  6867  06D6  0DBE               	rlf	(sprintf@c),f
  6868                           	
  6869  06D7                     l10920:	
  6870  06D7  083E               	movf	(sprintf@c),w
  6871  06D8  3A05               	xorlw	05h
  6872  06D9  1D03               	skipz
  6873  06DA  2EDC               	goto	u4571
  6874  06DB  2EDD               	goto	u4570
  6875  06DC                     u4571:
  6876  06DC  2EDF               	goto	l10924
  6877  06DD                     u4570:
  6878  06DD  2F07               	goto	l10932
  6879                           	
  6880  06DE                     l10922:	
  6881  06DE  2F07               	goto	l10932
  6882                           	line	1301
  6883                           	
  6884  06DF                     l6853:	
  6885                           	
  6886  06DF                     l10924:	
  6887  06DF  083E               	movf	(sprintf@c),w
  6888  06E0  00B3               	movwf	(??_sprintf+0)+0
  6889  06E1  0733               	addwf	(??_sprintf+0)+0,w
  6890  06E2  3E01               	addlw	low((_dpowers-__stringbase))
  6891  06E3  0084               	movwf	fsr0
  6892  06E4  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6893  06E9  00B4               	movwf	(??_sprintf+1)+0
  6894  06EA  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6895  06EF  00B5               	movwf	(??_sprintf+1)+0+1
  6896  06F0  0835               	movf	1+(??_sprintf+1)+0,w
  6897  06F1  023A               	subwf	(sprintf@_val+1),w
  6898  06F2  1D03               	skipz
  6899  06F3  2EF6               	goto	u4585
  6900  06F4  0834               	movf	0+(??_sprintf+1)+0,w
  6901  06F5  0239               	subwf	(sprintf@_val),w
  6902  06F6                     u4585:
  6903  06F6  1803               	skipnc
  6904  06F7  2EF9               	goto	u4581
  6905  06F8  2EFA               	goto	u4580
  6906  06F9                     u4581:
  6907  06F9  2EFC               	goto	l10928
  6908  06FA                     u4580:
  6909  06FA  2F07               	goto	l10932
  6910                           	line	1302
  6911                           	
  6912  06FB                     l10926:	
  6913  06FB  2F07               	goto	l10932
  6914                           	
  6915  06FC                     l6855:	
  6916                           	line	1300
  6917                           	
  6918  06FC                     l10928:	
  6919  06FC  3001               	movlw	(01h)
  6920  06FD  00B3               	movwf	(??_sprintf+0)+0
  6921  06FE  0833               	movf	(??_sprintf+0)+0,w
  6922  06FF  07BE               	addwf	(sprintf@c),f
  6923                           	
  6924  0700                     l10930:	
  6925  0700  083E               	movf	(sprintf@c),w
  6926  0701  3A05               	xorlw	05h
  6927  0702  1D03               	skipz
  6928  0703  2F05               	goto	u4591
  6929  0704  2F06               	goto	u4590
  6930  0705                     u4591:
  6931  0705  2EDF               	goto	l10924
  6932  0706                     u4590:
  6933  0706  2F07               	goto	l10932
  6934                           	
  6935  0707                     l6854:	
  6936                           	line	1433
  6937                           	
  6938  0707                     l10932:	
  6939  0707  0837               	movf	(sprintf@flag),w
  6940  0708  3903               	andlw	03h
  6941  0709  1903               	btfsc	status,2
  6942  070A  2F0C               	goto	u4601
  6943  070B  2F0D               	goto	u4600
  6944  070C                     u4601:
  6945  070C  2F19               	goto	l10938
  6946  070D                     u4600:
  6947                           	line	1434
  6948                           	
  6949  070D                     l10934:	
  6950  070D  302D               	movlw	(02Dh)
  6951  070E  00B3               	movwf	(??_sprintf+0)+0
  6952  070F  083D               	movf	(sprintf@sp),w
  6953  0710  0084               	movwf	fsr0
  6954  0711  0833               	movf	(??_sprintf+0)+0,w
  6955  0712  1383               	bcf	status, 7	;select IRP bank0
  6956  0713  0080               	movwf	indf
  6957                           	
  6958  0714                     l10936:	
  6959  0714  3001               	movlw	(01h)
  6960  0715  00B3               	movwf	(??_sprintf+0)+0
  6961  0716  0833               	movf	(??_sprintf+0)+0,w
  6962  0717  07BD               	addwf	(sprintf@sp),f
  6963  0718  2F19               	goto	l10938
  6964                           	
  6965  0719                     l6856:	
  6966                           	line	1467
  6967                           	
  6968  0719                     l10938:	
  6969  0719  083E               	movf	(sprintf@c),w
  6970  071A  00B3               	movwf	(??_sprintf+0)+0
  6971  071B  0833               	movf	(??_sprintf+0)+0,w
  6972  071C  00B8               	movwf	(sprintf@prec)
  6973                           	line	1469
  6974  071D  2F5E               	goto	l10946
  6975                           	
  6976  071E                     l6858:	
  6977                           	line	1484
  6978                           	
  6979  071E                     l10940:	
  6980  071E  300A               	movlw	low(0Ah)
  6981  071F  00A8               	movwf	(?___lwmod)
  6982  0720  3000               	movlw	high(0Ah)
  6983  0721  00A9               	movwf	((?___lwmod))+1
  6984  0722  0838               	movf	(sprintf@prec),w
  6985  0723  00B3               	movwf	(??_sprintf+0)+0
  6986  0724  0733               	addwf	(??_sprintf+0)+0,w
  6987  0725  3E01               	addlw	low((_dpowers-__stringbase))
  6988  0726  0084               	movwf	fsr0
  6989  0727  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6990  072C  00A0               	movwf	(?___lwdiv)
  6991  072D  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6992  0732  00A1               	movwf	(?___lwdiv+1)
  6993  0733  083A               	movf	(sprintf@_val+1),w
  6994  0734  01A3               	clrf	1+(?___lwdiv)+02h
  6995  0735  07A3               	addwf	1+(?___lwdiv)+02h
  6996  0736  0839               	movf	(sprintf@_val),w
  6997  0737  01A2               	clrf	0+(?___lwdiv)+02h
  6998  0738  07A2               	addwf	0+(?___lwdiv)+02h
  6999                           
  7000  0739  120A  158A  2318   	fcall	___lwdiv
              120A  118A         
  7001  073E  1283               	bcf	status, 5	;RP0=0, select bank0
  7002  073F  1303               	bcf	status, 6	;RP1=0, select bank0
  7003  0740  0821               	movf	(1+(?___lwdiv)),w
  7004  0741  01AB               	clrf	1+(?___lwmod)+02h
  7005  0742  07AB               	addwf	1+(?___lwmod)+02h
  7006  0743  0820               	movf	(0+(?___lwdiv)),w
  7007  0744  01AA               	clrf	0+(?___lwmod)+02h
  7008  0745  07AA               	addwf	0+(?___lwmod)+02h
  7009                           
  7010  0746  120A  158A  228C   	fcall	___lwmod
              120A  118A         
  7011  074B  1283               	bcf	status, 5	;RP0=0, select bank0
  7012  074C  1303               	bcf	status, 6	;RP1=0, select bank0
  7013  074D  0828               	movf	(0+(?___lwmod)),w
  7014  074E  3E30               	addlw	030h
  7015  074F  00B4               	movwf	(??_sprintf+1)+0
  7016  0750  0834               	movf	(??_sprintf+1)+0,w
  7017  0751  00BE               	movwf	(sprintf@c)
  7018                           	line	1516
  7019                           	
  7020  0752                     l10942:	
  7021  0752  083E               	movf	(sprintf@c),w
  7022  0753  00B3               	movwf	(??_sprintf+0)+0
  7023  0754  083D               	movf	(sprintf@sp),w
  7024  0755  0084               	movwf	fsr0
  7025  0756  0833               	movf	(??_sprintf+0)+0,w
  7026  0757  1383               	bcf	status, 7	;select IRP bank0
  7027  0758  0080               	movwf	indf
  7028                           	
  7029  0759                     l10944:	
  7030  0759  3001               	movlw	(01h)
  7031  075A  00B3               	movwf	(??_sprintf+0)+0
  7032  075B  0833               	movf	(??_sprintf+0)+0,w
  7033  075C  07BD               	addwf	(sprintf@sp),f
  7034  075D  2F5E               	goto	l10946
  7035                           	line	1517
  7036                           	
  7037  075E                     l6857:	
  7038                           	line	1469
  7039                           	
  7040  075E                     l10946:	
  7041  075E  30FF               	movlw	(-1)
  7042  075F  00B3               	movwf	(??_sprintf+0)+0
  7043  0760  0833               	movf	(??_sprintf+0)+0,w
  7044  0761  07B8               	addwf	(sprintf@prec),f
  7045  0762  0838               	movf	((sprintf@prec)),w
  7046  0763  3AFF               	xorlw	-1
  7047  0764  1D03               	skipz
  7048  0765  2F67               	goto	u4611
  7049  0766  2F68               	goto	u4610
  7050  0767                     u4611:
  7051  0767  2F1E               	goto	l10940
  7052  0768                     u4610:
  7053  0768  2F6A               	goto	l10948
  7054                           	
  7055  0769                     l6859:	
  7056  0769  2F6A               	goto	l10948
  7057                           	line	1525
  7058                           	
  7059  076A                     l6842:	
  7060                           	line	540
  7061                           	
  7062  076A                     l10948:	
  7063  076A  3001               	movlw	01h
  7064  076B  07AE               	addwf	(sprintf@f),f
  7065  076C  30FF               	movlw	-01h
  7066  076D  072E               	addwf	(sprintf@f),w
  7067  076E  0084               	movwf	fsr0
  7068  076F  120A  158A  200A   	fcall	stringdir
              120A  118A         
  7069  0774  00B3               	movwf	(??_sprintf+0)+0
  7070  0775  0833               	movf	(??_sprintf+0)+0,w
  7071  0776  00BE               	movwf	(sprintf@c)
  7072  0777  08BE               	movf	((sprintf@c)),f
  7073  0778  1D03               	skipz
  7074  0779  2F7B               	goto	u4621
  7075  077A  2F7C               	goto	u4620
  7076  077B                     u4621:
  7077  077B  2E8C               	goto	l10898
  7078  077C                     u4620:
  7079  077C  2F7E               	goto	l10950
  7080                           	
  7081  077D                     l6860:	
  7082  077D  2F7E               	goto	l10950
  7083                           	line	1527
  7084                           	
  7085  077E                     l6847:	
  7086                           	line	1530
  7087                           	
  7088  077E                     l10950:	
  7089  077E  083D               	movf	(sprintf@sp),w
  7090  077F  0084               	movwf	fsr0
  7091  0780  1383               	bcf	status, 7	;select IRP bank0
  7092  0781  0180               	clrf	indf
  7093  0782  2F83               	goto	l6861
  7094                           	line	1532
  7095                           	
  7096  0783                     l10952:	
  7097                           	line	1533
  7098                           ;	Return value of _sprintf is never used
  7099                           	
  7100  0783                     l6861:	
  7101  0783  0008               	return
  7102                           	opt stack 0
  7103                           GLOBAL	__end_of_sprintf
  7104  0784                     	__end_of_sprintf:
  7105 ;; =============== function _sprintf ends ============
  7106                           
  7107                           	signat	_sprintf,4698
  7108                           	global	_rotate
  7109                           psect	text969,local,class=CODE,delta=2
  7110                           global __ptext969
  7111  0B68                     __ptext969:
  7112                           
  7113 ;; *************** function _rotate *****************
  7114 ;; Defined at:
  7115 ;;		line 66 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  numsteps        2    3[BANK0 ] unsigned int 
  7118 ;;  direction       1    5[BANK0 ] unsigned char 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  i               2    8[BANK0 ] unsigned int 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;		None               void
  7123 ;; Registers used:
  7124 ;;		wreg, status,2, status,0, pclath, cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7130 ;;      Params:         0       3       0       0       0
  7131 ;;      Locals:         0       2       0       0       0
  7132 ;;      Temps:          0       2       0       0       0
  7133 ;;      Totals:         0       7       0       0       0
  7134 ;;Total ram usage:        7 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:    4
  7137 ;; This function calls:
  7138 ;;		_spi_transfer
  7139 ;; This function is called by:
  7140 ;;		_calibrateIR
  7141 ;;		_scan360
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           psect	text969
  7145                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7146                           	line	66
  7147                           	global	__size_of_rotate
  7148  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  7149                           	
  7150  0B68                     _rotate:	
  7151                           	opt	stack 2
  7152                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  7153                           	line	68
  7154                           	
  7155  0B68                     l10868:	
  7156                           ;steppermotor.c: 68: RC0 = 1; RC1 = 1;;
  7157  0B68  1283               	bcf	status, 5	;RP0=0, select bank0
  7158  0B69  1303               	bcf	status, 6	;RP1=0, select bank0
  7159  0B6A  1407               	bsf	(56/8),(56)&7
  7160  0B6B  1487               	bsf	(57/8),(57)&7
  7161                           	line	69
  7162                           	
  7163  0B6C                     l10870:	
  7164                           ;steppermotor.c: 69: if (direction == 0)
  7165  0B6C  08A5               	movf	(rotate@direction),f
  7166  0B6D  1D03               	skipz
  7167  0B6E  2B70               	goto	u4531
  7168  0B6F  2B71               	goto	u4530
  7169  0B70                     u4531:
  7170  0B70  2B78               	goto	l10874
  7171  0B71                     u4530:
  7172                           	line	70
  7173                           	
  7174  0B71                     l10872:	
  7175                           ;steppermotor.c: 70: spi_transfer(0b00001011);
  7176  0B71  300B               	movlw	(0Bh)
  7177  0B72  160A  118A  2687   	fcall	_spi_transfer
              120A  158A         
  7178  0B77  2B7F               	goto	l10876
  7179                           	line	71
  7180                           	
  7181  0B78                     l3732:	
  7182                           	line	72
  7183                           	
  7184  0B78                     l10874:	
  7185                           ;steppermotor.c: 71: else
  7186                           ;steppermotor.c: 72: spi_transfer(0b00001001);
  7187  0B78  3009               	movlw	(09h)
  7188  0B79  160A  118A  2687   	fcall	_spi_transfer
              120A  158A         
  7189  0B7E  2B7F               	goto	l10876
  7190                           	
  7191  0B7F                     l3733:	
  7192                           	line	73
  7193                           	
  7194  0B7F                     l10876:	
  7195                           ;steppermotor.c: 73: RC0 = 0; RC1 = 0;;
  7196  0B7F  1283               	bcf	status, 5	;RP0=0, select bank0
  7197  0B80  1303               	bcf	status, 6	;RP1=0, select bank0
  7198  0B81  1007               	bcf	(56/8),(56)&7
  7199                           	
  7200  0B82                     l10878:	
  7201  0B82  1087               	bcf	(57/8),(57)&7
  7202                           	line	74
  7203                           	
  7204  0B83                     l10880:	
  7205                           ;steppermotor.c: 74: for (unsigned int i = 0; i < numsteps; i++)
  7206  0B83  01A8               	clrf	(rotate@i)
  7207  0B84  01A9               	clrf	(rotate@i+1)
  7208  0B85  2B9C               	goto	l3734
  7209                           	line	75
  7210                           	
  7211  0B86                     l3735:	
  7212                           	line	76
  7213                           ;steppermotor.c: 75: {
  7214                           ;steppermotor.c: 76: RC2 = 1; _nop(); RC2 = 0;;
  7215  0B86  1507               	bsf	(58/8),(58)&7
  7216  0B87  0000               	nop
  7217  0B88  1283               	bcf	status, 5	;RP0=0, select bank0
  7218  0B89  1303               	bcf	status, 6	;RP1=0, select bank0
  7219  0B8A  1107               	bcf	(58/8),(58)&7
  7220                           	line	77
  7221                           	
  7222  0B8B                     l10882:	
  7223                           ;steppermotor.c: 77: _delay((unsigned long)((15)*(20000000/4000.0)));
  7224                           	opt asmopt_off
  7225  0B8B  3062               movlw	98
  7226  0B8C  00A7               movwf	((??_rotate+0)+0+1),f
  7227  0B8D  3065               	movlw	101
  7228  0B8E  00A6               movwf	((??_rotate+0)+0),f
  7229  0B8F                     u5117:
  7230  0B8F  0BA6               	decfsz	((??_rotate+0)+0),f
  7231  0B90  2B8F               	goto	u5117
  7232  0B91  0BA7               	decfsz	((??_rotate+0)+0+1),f
  7233  0B92  2B8F               	goto	u5117
  7234  0B93  2B94               	nop2
  7235                           opt asmopt_on
  7236                           
  7237                           	line	74
  7238  0B94  3001               	movlw	low(01h)
  7239  0B95  1283               	bcf	status, 5	;RP0=0, select bank0
  7240  0B96  1303               	bcf	status, 6	;RP1=0, select bank0
  7241  0B97  07A8               	addwf	(rotate@i),f
  7242  0B98  1803               	skipnc
  7243  0B99  0AA9               	incf	(rotate@i+1),f
  7244  0B9A  3000               	movlw	high(01h)
  7245  0B9B  07A9               	addwf	(rotate@i+1),f
  7246                           	
  7247  0B9C                     l3734:	
  7248  0B9C  0824               	movf	(rotate@numsteps+1),w
  7249  0B9D  0229               	subwf	(rotate@i+1),w
  7250  0B9E  1D03               	skipz
  7251  0B9F  2BA2               	goto	u4545
  7252  0BA0  0823               	movf	(rotate@numsteps),w
  7253  0BA1  0228               	subwf	(rotate@i),w
  7254  0BA2                     u4545:
  7255  0BA2  1C03               	skipc
  7256  0BA3  2BA5               	goto	u4541
  7257  0BA4  2BA6               	goto	u4540
  7258  0BA5                     u4541:
  7259  0BA5  2B86               	goto	l3735
  7260  0BA6                     u4540:
  7261                           	
  7262  0BA6                     l3736:	
  7263                           	line	79
  7264                           ;steppermotor.c: 78: }
  7265                           ;steppermotor.c: 79: RC0 = 1; RC1 = 1;;
  7266  0BA6  1407               	bsf	(56/8),(56)&7
  7267  0BA7  1487               	bsf	(57/8),(57)&7
  7268                           	line	80
  7269                           	
  7270  0BA8                     l10884:	
  7271                           ;steppermotor.c: 80: spi_transfer(0b00000000);
  7272  0BA8  3000               	movlw	(0)
  7273  0BA9  160A  118A  2687   	fcall	_spi_transfer
              120A  158A         
  7274                           	line	81
  7275                           	
  7276  0BAE                     l10886:	
  7277                           ;steppermotor.c: 81: RC0 = 0; RC1 = 0;;
  7278  0BAE  1283               	bcf	status, 5	;RP0=0, select bank0
  7279  0BAF  1303               	bcf	status, 6	;RP1=0, select bank0
  7280  0BB0  1007               	bcf	(56/8),(56)&7
  7281                           	
  7282  0BB1                     l10888:	
  7283  0BB1  1087               	bcf	(57/8),(57)&7
  7284                           	line	82
  7285                           	
  7286  0BB2                     l10890:	
  7287                           ;steppermotor.c: 82: RC2 = 1; _nop(); RC2 = 0;;
  7288  0BB2  1507               	bsf	(58/8),(58)&7
  7289                           	
  7290  0BB3                     l10892:	
  7291  0BB3  0000               	nop
  7292                           	
  7293  0BB4                     l10894:	
  7294  0BB4  1283               	bcf	status, 5	;RP0=0, select bank0
  7295  0BB5  1303               	bcf	status, 6	;RP1=0, select bank0
  7296  0BB6  1107               	bcf	(58/8),(58)&7
  7297                           	line	83
  7298                           	
  7299  0BB7                     l3737:	
  7300  0BB7  0008               	return
  7301                           	opt stack 0
  7302                           GLOBAL	__end_of_rotate
  7303  0BB8                     	__end_of_rotate:
  7304 ;; =============== function _rotate ends ============
  7305                           
  7306                           	signat	_rotate,8312
  7307                           	global	_robo_init
  7308                           psect	text970,local,class=CODE,delta=2
  7309                           global __ptext970
  7310  16F2                     __ptext970:
  7311                           
  7312 ;; *************** function _robo_init *****************
  7313 ;; Defined at:
  7314 ;;		line 36 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7315 ;; Parameters:    Size  Location     Type
  7316 ;;		None
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;		None
  7319 ;; Return value:  Size  Location     Type
  7320 ;;		None               void
  7321 ;; Registers used:
  7322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7328 ;;      Params:         0       0       0       0       0
  7329 ;;      Locals:         0       0       0       0       0
  7330 ;;      Temps:          0       0       0       0       0
  7331 ;;      Totals:         0       0       0       0       0
  7332 ;;Total ram usage:        0 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; Hardware stack levels required when called:    4
  7335 ;; This function calls:
  7336 ;;		_ser_putch
  7337 ;; This function is called by:
  7338 ;;		_init
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           psect	text970
  7342                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7343                           	line	36
  7344                           	global	__size_of_robo_init
  7345  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  7346                           	
  7347  16F2                     _robo_init:	
  7348                           	opt	stack 2
  7349                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7350                           	line	37
  7351                           	
  7352  16F2                     l10866:	
  7353                           ;robot.c: 37: ser_putch(128);
  7354  16F2  3080               	movlw	(080h)
  7355  16F3  160A  118A  270B   	fcall	_ser_putch
              160A  118A         
  7356                           	line	38
  7357                           ;robot.c: 38: ser_putch(132);
  7358  16F8  3084               	movlw	(084h)
  7359  16F9  160A  118A  270B   	fcall	_ser_putch
              160A  118A         
  7360                           	line	39
  7361                           ;robot.c: 39: ser_putch(150);
  7362  16FE  3096               	movlw	(096h)
  7363  16FF  160A  118A  270B   	fcall	_ser_putch
              160A  118A         
  7364                           	line	40
  7365                           ;robot.c: 40: ser_putch(0);
  7366  1704  3000               	movlw	(0)
  7367  1705  160A  118A  270B   	fcall	_ser_putch
              160A  118A         
  7368                           	line	41
  7369                           	
  7370  170A                     l6043:	
  7371  170A  0008               	return
  7372                           	opt stack 0
  7373                           GLOBAL	__end_of_robo_init
  7374  170B                     	__end_of_robo_init:
  7375 ;; =============== function _robo_init ends ============
  7376                           
  7377                           	signat	_robo_init,88
  7378                           	global	_lcd_write_data
  7379                           psect	text971,local,class=CODE,delta=2
  7380                           global __ptext971
  7381  1661                     __ptext971:
  7382                           
  7383 ;; *************** function _lcd_write_data *****************
  7384 ;; Defined at:
  7385 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;  databyte        1    wreg     unsigned char 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;  databyte        1    2[BANK0 ] unsigned char 
  7390 ;; Return value:  Size  Location     Type
  7391 ;;		None               void
  7392 ;; Registers used:
  7393 ;;		wreg
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7399 ;;      Params:         0       0       0       0       0
  7400 ;;      Locals:         0       1       0       0       0
  7401 ;;      Temps:          0       2       0       0       0
  7402 ;;      Totals:         0       3       0       0       0
  7403 ;;Total ram usage:        3 bytes
  7404 ;; Hardware stack levels used:    1
  7405 ;; Hardware stack levels required when called:    3
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_lcd_write_string
  7410 ;;		_lcd_write_2_digit_bcd
  7411 ;;		_lcd_write_3_digit_bcd
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           psect	text971
  7415                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7416                           	line	30
  7417                           	global	__size_of_lcd_write_data
  7418  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  7419                           	
  7420  1661                     _lcd_write_data:	
  7421                           	opt	stack 1
  7422                           ; Regs used in _lcd_write_data: [wreg]
  7423                           ;lcd_write_data@databyte stored from wreg
  7424  1661  1283               	bcf	status, 5	;RP0=0, select bank0
  7425  1662  1303               	bcf	status, 6	;RP1=0, select bank0
  7426  1663  00A2               	movwf	(lcd_write_data@databyte)
  7427                           	line	31
  7428                           	
  7429  1664                     l10858:	
  7430                           ;lcd.c: 31: RE2 = 0;
  7431  1664  1109               	bcf	(74/8),(74)&7
  7432                           	line	32
  7433                           ;lcd.c: 32: RE1 = 0;
  7434  1665  1089               	bcf	(73/8),(73)&7
  7435                           	line	33
  7436                           ;lcd.c: 33: RE0 = 1;
  7437  1666  1409               	bsf	(72/8),(72)&7
  7438                           	line	34
  7439                           	
  7440  1667                     l10860:	
  7441                           ;lcd.c: 34: PORTD = databyte;
  7442  1667  0822               	movf	(lcd_write_data@databyte),w
  7443  1668  0088               	movwf	(8)	;volatile
  7444                           	line	35
  7445                           	
  7446  1669                     l10862:	
  7447                           ;lcd.c: 35: RE2 = 1;
  7448  1669  1509               	bsf	(74/8),(74)&7
  7449                           	line	36
  7450                           	
  7451  166A                     l10864:	
  7452                           ;lcd.c: 36: RE2 = 0;
  7453  166A  1109               	bcf	(74/8),(74)&7
  7454                           	line	37
  7455                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  7456                           	opt asmopt_off
  7457  166B  3007               movlw	7
  7458  166C  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  7459  166D  307D               	movlw	125
  7460  166E  00A0               movwf	((??_lcd_write_data+0)+0),f
  7461  166F                     u5127:
  7462  166F  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  7463  1670  2E6F               	goto	u5127
  7464  1671  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  7465  1672  2E6F               	goto	u5127
  7466                           opt asmopt_on
  7467                           
  7468                           	line	38
  7469                           	
  7470  1673                     l1402:	
  7471  1673  0008               	return
  7472                           	opt stack 0
  7473                           GLOBAL	__end_of_lcd_write_data
  7474  1674                     	__end_of_lcd_write_data:
  7475 ;; =============== function _lcd_write_data ends ============
  7476                           
  7477                           	signat	_lcd_write_data,4216
  7478                           	global	_lcd_write_control
  7479                           psect	text972,local,class=CODE,delta=2
  7480                           global __ptext972
  7481  169B                     __ptext972:
  7482                           
  7483 ;; *************** function _lcd_write_control *****************
  7484 ;; Defined at:
  7485 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  databyte        1    wreg     unsigned char 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  databyte        1    2[BANK0 ] unsigned char 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;		None               void
  7492 ;; Registers used:
  7493 ;;		wreg
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7499 ;;      Params:         0       0       0       0       0
  7500 ;;      Locals:         0       1       0       0       0
  7501 ;;      Temps:          0       2       0       0       0
  7502 ;;      Totals:         0       3       0       0       0
  7503 ;;Total ram usage:        3 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:    3
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_lcd_set_cursor
  7510 ;;		_lcd_init
  7511 ;;		_UpdateDisplay
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           psect	text972
  7515                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7516                           	line	18
  7517                           	global	__size_of_lcd_write_control
  7518  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  7519                           	
  7520  169B                     _lcd_write_control:	
  7521                           	opt	stack 1
  7522                           ; Regs used in _lcd_write_control: [wreg]
  7523                           ;lcd_write_control@databyte stored from wreg
  7524  169B  1283               	bcf	status, 5	;RP0=0, select bank0
  7525  169C  1303               	bcf	status, 6	;RP1=0, select bank0
  7526  169D  00A2               	movwf	(lcd_write_control@databyte)
  7527                           	line	19
  7528                           	
  7529  169E                     l10850:	
  7530                           ;lcd.c: 19: RE2 = 0;
  7531  169E  1109               	bcf	(74/8),(74)&7
  7532                           	line	20
  7533                           ;lcd.c: 20: RE1 = 0;
  7534  169F  1089               	bcf	(73/8),(73)&7
  7535                           	line	21
  7536                           ;lcd.c: 21: RE0 = 0;
  7537  16A0  1009               	bcf	(72/8),(72)&7
  7538                           	line	22
  7539                           	
  7540  16A1                     l10852:	
  7541                           ;lcd.c: 22: PORTD = databyte;
  7542  16A1  0822               	movf	(lcd_write_control@databyte),w
  7543  16A2  0088               	movwf	(8)	;volatile
  7544                           	line	23
  7545                           	
  7546  16A3                     l10854:	
  7547                           ;lcd.c: 23: RE2 = 1;
  7548  16A3  1509               	bsf	(74/8),(74)&7
  7549                           	line	24
  7550                           	
  7551  16A4                     l10856:	
  7552                           ;lcd.c: 24: RE2 = 0;
  7553  16A4  1109               	bcf	(74/8),(74)&7
  7554                           	line	25
  7555                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  7556                           	opt asmopt_off
  7557  16A5  300D               movlw	13
  7558  16A6  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  7559  16A7  30FB               	movlw	251
  7560  16A8  00A0               movwf	((??_lcd_write_control+0)+0),f
  7561  16A9                     u5137:
  7562  16A9  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  7563  16AA  2EA9               	goto	u5137
  7564  16AB  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  7565  16AC  2EA9               	goto	u5137
  7566  16AD  2EAE               	nop2
  7567                           opt asmopt_on
  7568                           
  7569                           	line	26
  7570                           	
  7571  16AE                     l1399:	
  7572  16AE  0008               	return
  7573                           	opt stack 0
  7574                           GLOBAL	__end_of_lcd_write_control
  7575  16AF                     	__end_of_lcd_write_control:
  7576 ;; =============== function _lcd_write_control ends ============
  7577                           
  7578                           	signat	_lcd_write_control,4216
  7579                           	global	_init_adc
  7580                           psect	text973,local,class=CODE,delta=2
  7581                           global __ptext973
  7582  16AF                     __ptext973:
  7583                           
  7584 ;; *************** function _init_adc *****************
  7585 ;; Defined at:
  7586 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;		None
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;		None
  7591 ;; Return value:  Size  Location     Type
  7592 ;;		None               void
  7593 ;; Registers used:
  7594 ;;		wreg, status,2
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7600 ;;      Params:         0       0       0       0       0
  7601 ;;      Locals:         0       0       0       0       0
  7602 ;;      Temps:          0       1       0       0       0
  7603 ;;      Totals:         0       1       0       0       0
  7604 ;;Total ram usage:        1 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:    3
  7607 ;; This function calls:
  7608 ;;		Nothing
  7609 ;; This function is called by:
  7610 ;;		_init
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           psect	text973
  7614                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7615                           	line	61
  7616                           	global	__size_of_init_adc
  7617  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  7618                           	
  7619  16AF                     _init_adc:	
  7620                           	opt	stack 3
  7621                           ; Regs used in _init_adc: [wreg+status,2]
  7622                           	line	63
  7623                           	
  7624  16AF                     l10840:	
  7625                           ;adc.c: 63: PORTA = 0;
  7626  16AF  1283               	bcf	status, 5	;RP0=0, select bank0
  7627  16B0  1303               	bcf	status, 6	;RP1=0, select bank0
  7628  16B1  0185               	clrf	(5)	;volatile
  7629                           	line	64
  7630                           	
  7631  16B2                     l10842:	
  7632                           ;adc.c: 64: TRISA = 0b00111111;
  7633  16B2  303F               	movlw	(03Fh)
  7634  16B3  1683               	bsf	status, 5	;RP0=1, select bank1
  7635  16B4  1303               	bcf	status, 6	;RP1=0, select bank1
  7636  16B5  0085               	movwf	(133)^080h	;volatile
  7637                           	line	67
  7638                           	
  7639  16B6                     l10844:	
  7640                           ;adc.c: 67: ADCON0 = 0b10100001;
  7641  16B6  30A1               	movlw	(0A1h)
  7642  16B7  1283               	bcf	status, 5	;RP0=0, select bank0
  7643  16B8  1303               	bcf	status, 6	;RP1=0, select bank0
  7644  16B9  009F               	movwf	(31)	;volatile
  7645                           	line	68
  7646                           	
  7647  16BA                     l10846:	
  7648                           ;adc.c: 68: ADCON1 = 0b0000010;
  7649  16BA  3002               	movlw	(02h)
  7650  16BB  1683               	bsf	status, 5	;RP0=1, select bank1
  7651  16BC  1303               	bcf	status, 6	;RP1=0, select bank1
  7652  16BD  009F               	movwf	(159)^080h	;volatile
  7653                           	line	70
  7654                           	
  7655  16BE                     l10848:	
  7656                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
  7657                           	opt asmopt_off
  7658  16BE  3053               movlw	83
  7659  16BF  1283               	bcf	status, 5	;RP0=0, select bank0
  7660  16C0  1303               	bcf	status, 6	;RP1=0, select bank0
  7661  16C1  00A0               movwf	(??_init_adc+0)+0,f
  7662  16C2                     u5147:
  7663  16C2  0BA0               decfsz	(??_init_adc+0)+0,f
  7664  16C3  2EC2               	goto	u5147
  7665                           opt asmopt_on
  7666                           
  7667                           	line	72
  7668                           	
  7669  16C4                     l700:	
  7670  16C4  0008               	return
  7671                           	opt stack 0
  7672                           GLOBAL	__end_of_init_adc
  7673  16C5                     	__end_of_init_adc:
  7674 ;; =============== function _init_adc ends ============
  7675                           
  7676                           	signat	_init_adc,88
  7677                           	global	_adc_read_channel
  7678                           psect	text974,local,class=CODE,delta=2
  7679                           global __ptext974
  7680  09CD                     __ptext974:
  7681                           
  7682 ;; *************** function _adc_read_channel *****************
  7683 ;; Defined at:
  7684 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  channel         1    wreg     unsigned char 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  channel         1    7[BANK0 ] unsigned char 
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      unsigned char 
  7691 ;; Registers used:
  7692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7698 ;;      Params:         0       0       0       0       0
  7699 ;;      Locals:         0       1       0       0       0
  7700 ;;      Temps:          0       1       0       0       0
  7701 ;;      Totals:         0       2       0       0       0
  7702 ;;Total ram usage:        2 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:    4
  7705 ;; This function calls:
  7706 ;;		_adc_read
  7707 ;; This function is called by:
  7708 ;;		_readDistance
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           psect	text974
  7712                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7713                           	line	20
  7714                           	global	__size_of_adc_read_channel
  7715  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  7716                           	
  7717  09CD                     _adc_read_channel:	
  7718                           	opt	stack 0
  7719                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7720                           ;adc_read_channel@channel stored from wreg
  7721  09CD  1283               	bcf	status, 5	;RP0=0, select bank0
  7722  09CE  1303               	bcf	status, 6	;RP1=0, select bank0
  7723  09CF  00A7               	movwf	(adc_read_channel@channel)
  7724                           	line	21
  7725                           	
  7726  09D0                     l10824:	
  7727                           ;adc.c: 21: switch(channel)
  7728  09D0  29E9               	goto	l10832
  7729                           	line	23
  7730                           ;adc.c: 22: {
  7731                           ;adc.c: 23: case 0:
  7732                           	
  7733  09D1                     l690:	
  7734                           	line	24
  7735                           ;adc.c: 24: CHS0 = 0;
  7736  09D1  119F               	bcf	(251/8),(251)&7
  7737                           	line	25
  7738                           ;adc.c: 25: CHS1 = 0;
  7739  09D2  121F               	bcf	(252/8),(252)&7
  7740                           	line	26
  7741                           ;adc.c: 26: CHS2 = 0;
  7742  09D3  129F               	bcf	(253/8),(253)&7
  7743                           	line	27
  7744                           ;adc.c: 27: break;
  7745  09D4  29FA               	goto	l10834
  7746                           	line	28
  7747                           ;adc.c: 28: case 1:
  7748                           	
  7749  09D5                     l692:	
  7750                           	line	29
  7751                           ;adc.c: 29: CHS0 = 1;
  7752  09D5  159F               	bsf	(251/8),(251)&7
  7753                           	line	30
  7754                           ;adc.c: 30: CHS1 = 0;
  7755  09D6  121F               	bcf	(252/8),(252)&7
  7756                           	line	31
  7757                           ;adc.c: 31: CHS2 = 0;
  7758  09D7  129F               	bcf	(253/8),(253)&7
  7759                           	line	32
  7760                           ;adc.c: 32: break;
  7761  09D8  29FA               	goto	l10834
  7762                           	line	33
  7763                           ;adc.c: 33: case 2:
  7764                           	
  7765  09D9                     l693:	
  7766                           	line	34
  7767                           ;adc.c: 34: CHS0 = 0;
  7768  09D9  119F               	bcf	(251/8),(251)&7
  7769                           	line	35
  7770                           ;adc.c: 35: CHS1 = 1;
  7771  09DA  161F               	bsf	(252/8),(252)&7
  7772                           	line	36
  7773                           ;adc.c: 36: CHS2 = 0;
  7774  09DB  129F               	bcf	(253/8),(253)&7
  7775                           	line	37
  7776                           ;adc.c: 37: break;
  7777  09DC  29FA               	goto	l10834
  7778                           	line	38
  7779                           ;adc.c: 38: case 3:
  7780                           	
  7781  09DD                     l694:	
  7782                           	line	39
  7783                           ;adc.c: 39: CHS0 = 1;
  7784  09DD  159F               	bsf	(251/8),(251)&7
  7785                           	line	40
  7786                           ;adc.c: 40: CHS1 = 1;
  7787  09DE  161F               	bsf	(252/8),(252)&7
  7788                           	line	41
  7789                           ;adc.c: 41: CHS2 = 0;
  7790  09DF  129F               	bcf	(253/8),(253)&7
  7791                           	line	42
  7792                           ;adc.c: 42: break;
  7793  09E0  29FA               	goto	l10834
  7794                           	line	43
  7795                           ;adc.c: 43: case 4:
  7796                           	
  7797  09E1                     l695:	
  7798                           	line	44
  7799                           ;adc.c: 44: CHS0 = 0;
  7800  09E1  119F               	bcf	(251/8),(251)&7
  7801                           	line	45
  7802                           ;adc.c: 45: CHS1 = 0;
  7803  09E2  121F               	bcf	(252/8),(252)&7
  7804                           	line	46
  7805                           ;adc.c: 46: CHS2 = 1;
  7806  09E3  169F               	bsf	(253/8),(253)&7
  7807                           	line	47
  7808                           ;adc.c: 47: break;
  7809  09E4  29FA               	goto	l10834
  7810                           	line	50
  7811                           ;adc.c: 50: default:
  7812                           	
  7813  09E5                     l696:	
  7814                           	line	51
  7815                           	
  7816  09E5                     l10826:	
  7817                           ;adc.c: 51: return 0;
  7818  09E5  3000               	movlw	(0)
  7819  09E6  2A07               	goto	l697
  7820                           	
  7821  09E7                     l10828:	
  7822  09E7  2A07               	goto	l697
  7823                           	line	52
  7824                           	
  7825  09E8                     l10830:	
  7826                           ;adc.c: 52: }
  7827  09E8  29FA               	goto	l10834
  7828                           	line	21
  7829                           	
  7830  09E9                     l689:	
  7831                           	
  7832  09E9                     l10832:	
  7833  09E9  0827               	movf	(adc_read_channel@channel),w
  7834                           	; Switch size 1, requested type "space"
  7835                           ; Number of cases is 5, Range of values is 0 to 4
  7836                           ; switch strategies available:
  7837                           ; Name         Instructions Cycles
  7838                           ; simple_byte           16     9 (average)
  7839                           ; direct_byte           23     8 (fixed)
  7840                           ; jumptable            260     6 (fixed)
  7841                           ; rangetable             9     6 (fixed)
  7842                           ; spacedrange           16     9 (fixed)
  7843                           ; locatedrange           5     3 (fixed)
  7844                           ;	Chosen strategy is simple_byte
  7845                           
  7846                           	opt asmopt_off
  7847  09EA  3A00               	xorlw	0^0	; case 0
  7848  09EB  1903               	skipnz
  7849  09EC  29D1               	goto	l690
  7850  09ED  3A01               	xorlw	1^0	; case 1
  7851  09EE  1903               	skipnz
  7852  09EF  29D5               	goto	l692
  7853  09F0  3A03               	xorlw	2^1	; case 2
  7854  09F1  1903               	skipnz
  7855  09F2  29D9               	goto	l693
  7856  09F3  3A01               	xorlw	3^2	; case 3
  7857  09F4  1903               	skipnz
  7858  09F5  29DD               	goto	l694
  7859  09F6  3A07               	xorlw	4^3	; case 4
  7860  09F7  1903               	skipnz
  7861  09F8  29E1               	goto	l695
  7862  09F9  29E5               	goto	l10826
  7863                           	opt asmopt_on
  7864                           
  7865                           	line	52
  7866                           	
  7867  09FA                     l691:	
  7868                           	line	54
  7869                           	
  7870  09FA                     l10834:	
  7871                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
  7872                           	opt asmopt_off
  7873  09FA  3053               movlw	83
  7874  09FB  00A6               movwf	(??_adc_read_channel+0)+0,f
  7875  09FC                     u5157:
  7876  09FC  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  7877  09FD  29FC               	goto	u5157
  7878                           opt asmopt_on
  7879                           
  7880                           	line	56
  7881                           	
  7882  09FE                     l10836:	
  7883                           ;adc.c: 56: return adc_read();
  7884  09FE  160A  118A  2754   	fcall	_adc_read
              120A  158A         
  7885  0A03  1283               	bcf	status, 5	;RP0=0, select bank0
  7886  0A04  1303               	bcf	status, 6	;RP1=0, select bank0
  7887  0A05  0820               	movf	(0+(?_adc_read)),w
  7888  0A06  2A07               	goto	l697
  7889                           	
  7890  0A07                     l10838:	
  7891                           	line	58
  7892                           	
  7893  0A07                     l697:	
  7894  0A07  0008               	return
  7895                           	opt stack 0
  7896                           GLOBAL	__end_of_adc_read_channel
  7897  0A08                     	__end_of_adc_read_channel:
  7898 ;; =============== function _adc_read_channel ends ============
  7899                           
  7900                           	signat	_adc_read_channel,4217
  7901                           	global	___awmod
  7902                           psect	text975,local,class=CODE,delta=2
  7903                           global __ptext975
  7904  0C16                     __ptext975:
  7905                           
  7906 ;; *************** function ___awmod *****************
  7907 ;; Defined at:
  7908 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  divisor         2    0[BANK0 ] int 
  7911 ;;  dividend        2    2[BANK0 ] int 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  sign            1    6[BANK0 ] unsigned char 
  7914 ;;  counter         1    5[BANK0 ] unsigned char 
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  2    0[BANK0 ] int 
  7917 ;; Registers used:
  7918 ;;		wreg, status,2, status,0
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7924 ;;      Params:         0       4       0       0       0
  7925 ;;      Locals:         0       2       0       0       0
  7926 ;;      Temps:          0       1       0       0       0
  7927 ;;      Totals:         0       7       0       0       0
  7928 ;;Total ram usage:        7 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:    3
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_UpdateDisplay
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           psect	text975
  7938                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7939                           	line	5
  7940                           	global	__size_of___awmod
  7941  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  7942                           	
  7943  0C16                     ___awmod:	
  7944                           	opt	stack 2
  7945                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7946                           	line	8
  7947                           	
  7948  0C16                     l10768:	
  7949  0C16  1283               	bcf	status, 5	;RP0=0, select bank0
  7950  0C17  1303               	bcf	status, 6	;RP1=0, select bank0
  7951  0C18  01A6               	clrf	(___awmod@sign)
  7952                           	line	9
  7953  0C19  1FA3               	btfss	(___awmod@dividend+1),7
  7954  0C1A  2C1C               	goto	u4381
  7955  0C1B  2C1D               	goto	u4380
  7956  0C1C                     u4381:
  7957  0C1C  2C26               	goto	l10772
  7958  0C1D                     u4380:
  7959                           	line	10
  7960                           	
  7961  0C1D                     l10770:	
  7962  0C1D  09A2               	comf	(___awmod@dividend),f
  7963  0C1E  09A3               	comf	(___awmod@dividend+1),f
  7964  0C1F  0AA2               	incf	(___awmod@dividend),f
  7965  0C20  1903               	skipnz
  7966  0C21  0AA3               	incf	(___awmod@dividend+1),f
  7967                           	line	11
  7968  0C22  01A6               	clrf	(___awmod@sign)
  7969  0C23  1403               	bsf	status,0
  7970  0C24  0DA6               	rlf	(___awmod@sign),f
  7971  0C25  2C26               	goto	l10772
  7972                           	line	12
  7973                           	
  7974  0C26                     l7752:	
  7975                           	line	13
  7976                           	
  7977  0C26                     l10772:	
  7978  0C26  1FA1               	btfss	(___awmod@divisor+1),7
  7979  0C27  2C29               	goto	u4391
  7980  0C28  2C2A               	goto	u4390
  7981  0C29                     u4391:
  7982  0C29  2C30               	goto	l10776
  7983  0C2A                     u4390:
  7984                           	line	14
  7985                           	
  7986  0C2A                     l10774:	
  7987  0C2A  09A0               	comf	(___awmod@divisor),f
  7988  0C2B  09A1               	comf	(___awmod@divisor+1),f
  7989  0C2C  0AA0               	incf	(___awmod@divisor),f
  7990  0C2D  1903               	skipnz
  7991  0C2E  0AA1               	incf	(___awmod@divisor+1),f
  7992  0C2F  2C30               	goto	l10776
  7993                           	
  7994  0C30                     l7753:	
  7995                           	line	15
  7996                           	
  7997  0C30                     l10776:	
  7998  0C30  0821               	movf	(___awmod@divisor+1),w
  7999  0C31  0420               	iorwf	(___awmod@divisor),w
  8000  0C32  1903               	skipnz
  8001  0C33  2C35               	goto	u4401
  8002  0C34  2C36               	goto	u4400
  8003  0C35                     u4401:
  8004  0C35  2C6C               	goto	l10794
  8005  0C36                     u4400:
  8006                           	line	16
  8007                           	
  8008  0C36                     l10778:	
  8009  0C36  01A5               	clrf	(___awmod@counter)
  8010  0C37  1403               	bsf	status,0
  8011  0C38  0DA5               	rlf	(___awmod@counter),f
  8012                           	line	17
  8013  0C39  2C46               	goto	l10784
  8014                           	
  8015  0C3A                     l7756:	
  8016                           	line	18
  8017                           	
  8018  0C3A                     l10780:	
  8019  0C3A  3001               	movlw	01h
  8020                           	
  8021  0C3B                     u4415:
  8022  0C3B  1003               	clrc
  8023  0C3C  0DA0               	rlf	(___awmod@divisor),f
  8024  0C3D  0DA1               	rlf	(___awmod@divisor+1),f
  8025  0C3E  3EFF               	addlw	-1
  8026  0C3F  1D03               	skipz
  8027  0C40  2C3B               	goto	u4415
  8028                           	line	19
  8029                           	
  8030  0C41                     l10782:	
  8031  0C41  3001               	movlw	(01h)
  8032  0C42  00A4               	movwf	(??___awmod+0)+0
  8033  0C43  0824               	movf	(??___awmod+0)+0,w
  8034  0C44  07A5               	addwf	(___awmod@counter),f
  8035  0C45  2C46               	goto	l10784
  8036                           	line	20
  8037                           	
  8038  0C46                     l7755:	
  8039                           	line	17
  8040                           	
  8041  0C46                     l10784:	
  8042  0C46  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  8043  0C47  2C49               	goto	u4421
  8044  0C48  2C4A               	goto	u4420
  8045  0C49                     u4421:
  8046  0C49  2C3A               	goto	l10780
  8047  0C4A                     u4420:
  8048  0C4A  2C4C               	goto	l10786
  8049                           	
  8050  0C4B                     l7757:	
  8051  0C4B  2C4C               	goto	l10786
  8052                           	line	21
  8053                           	
  8054  0C4C                     l7758:	
  8055                           	line	22
  8056                           	
  8057  0C4C                     l10786:	
  8058  0C4C  0821               	movf	(___awmod@divisor+1),w
  8059  0C4D  0223               	subwf	(___awmod@dividend+1),w
  8060  0C4E  1D03               	skipz
  8061  0C4F  2C52               	goto	u4435
  8062  0C50  0820               	movf	(___awmod@divisor),w
  8063  0C51  0222               	subwf	(___awmod@dividend),w
  8064  0C52                     u4435:
  8065  0C52  1C03               	skipc
  8066  0C53  2C55               	goto	u4431
  8067  0C54  2C56               	goto	u4430
  8068  0C55                     u4431:
  8069  0C55  2C5D               	goto	l10790
  8070  0C56                     u4430:
  8071                           	line	23
  8072                           	
  8073  0C56                     l10788:	
  8074  0C56  0820               	movf	(___awmod@divisor),w
  8075  0C57  02A2               	subwf	(___awmod@dividend),f
  8076  0C58  0821               	movf	(___awmod@divisor+1),w
  8077  0C59  1C03               	skipc
  8078  0C5A  03A3               	decf	(___awmod@dividend+1),f
  8079  0C5B  02A3               	subwf	(___awmod@dividend+1),f
  8080  0C5C  2C5D               	goto	l10790
  8081                           	
  8082  0C5D                     l7759:	
  8083                           	line	24
  8084                           	
  8085  0C5D                     l10790:	
  8086  0C5D  3001               	movlw	01h
  8087                           	
  8088  0C5E                     u4445:
  8089  0C5E  1003               	clrc
  8090  0C5F  0CA1               	rrf	(___awmod@divisor+1),f
  8091  0C60  0CA0               	rrf	(___awmod@divisor),f
  8092  0C61  3EFF               	addlw	-1
  8093  0C62  1D03               	skipz
  8094  0C63  2C5E               	goto	u4445
  8095                           	line	25
  8096                           	
  8097  0C64                     l10792:	
  8098  0C64  3001               	movlw	low(01h)
  8099  0C65  02A5               	subwf	(___awmod@counter),f
  8100  0C66  1D03               	btfss	status,2
  8101  0C67  2C69               	goto	u4451
  8102  0C68  2C6A               	goto	u4450
  8103  0C69                     u4451:
  8104  0C69  2C4C               	goto	l10786
  8105  0C6A                     u4450:
  8106  0C6A  2C6C               	goto	l10794
  8107                           	
  8108  0C6B                     l7760:	
  8109  0C6B  2C6C               	goto	l10794
  8110                           	line	26
  8111                           	
  8112  0C6C                     l7754:	
  8113                           	line	27
  8114                           	
  8115  0C6C                     l10794:	
  8116  0C6C  0826               	movf	(___awmod@sign),w
  8117  0C6D  1D03               	skipz
  8118  0C6E  2C70               	goto	u4460
  8119  0C6F  2C76               	goto	l10798
  8120  0C70                     u4460:
  8121                           	line	28
  8122                           	
  8123  0C70                     l10796:	
  8124  0C70  09A2               	comf	(___awmod@dividend),f
  8125  0C71  09A3               	comf	(___awmod@dividend+1),f
  8126  0C72  0AA2               	incf	(___awmod@dividend),f
  8127  0C73  1903               	skipnz
  8128  0C74  0AA3               	incf	(___awmod@dividend+1),f
  8129  0C75  2C76               	goto	l10798
  8130                           	
  8131  0C76                     l7761:	
  8132                           	line	29
  8133                           	
  8134  0C76                     l10798:	
  8135  0C76  0823               	movf	(___awmod@dividend+1),w
  8136  0C77  01A1               	clrf	(?___awmod+1)
  8137  0C78  07A1               	addwf	(?___awmod+1)
  8138  0C79  0822               	movf	(___awmod@dividend),w
  8139  0C7A  01A0               	clrf	(?___awmod)
  8140  0C7B  07A0               	addwf	(?___awmod)
  8141                           
  8142  0C7C  2C7D               	goto	l7762
  8143                           	
  8144  0C7D                     l10800:	
  8145                           	line	30
  8146                           	
  8147  0C7D                     l7762:	
  8148  0C7D  0008               	return
  8149                           	opt stack 0
  8150                           GLOBAL	__end_of___awmod
  8151  0C7E                     	__end_of___awmod:
  8152 ;; =============== function ___awmod ends ============
  8153                           
  8154                           	signat	___awmod,8314
  8155                           	global	___lwmod
  8156                           psect	text976,local,class=CODE,delta=2
  8157                           global __ptext976
  8158  0A8C                     __ptext976:
  8159                           
  8160 ;; *************** function ___lwmod *****************
  8161 ;; Defined at:
  8162 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  divisor         2    8[BANK0 ] unsigned int 
  8165 ;;  dividend        2   10[BANK0 ] unsigned int 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  counter         1   13[BANK0 ] unsigned char 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  2    8[BANK0 ] unsigned int 
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8177 ;;      Params:         0       4       0       0       0
  8178 ;;      Locals:         0       1       0       0       0
  8179 ;;      Temps:          0       1       0       0       0
  8180 ;;      Totals:         0       6       0       0       0
  8181 ;;Total ram usage:        6 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:    3
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_sprintf
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           psect	text976
  8191                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8192                           	line	5
  8193                           	global	__size_of___lwmod
  8194  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  8195                           	
  8196  0A8C                     ___lwmod:	
  8197                           	opt	stack 1
  8198                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8199                           	line	8
  8200                           	
  8201  0A8C                     l10746:	
  8202  0A8C  1283               	bcf	status, 5	;RP0=0, select bank0
  8203  0A8D  1303               	bcf	status, 6	;RP1=0, select bank0
  8204  0A8E  0829               	movf	(___lwmod@divisor+1),w
  8205  0A8F  0428               	iorwf	(___lwmod@divisor),w
  8206  0A90  1903               	skipnz
  8207  0A91  2A93               	goto	u4321
  8208  0A92  2A94               	goto	u4320
  8209  0A93                     u4321:
  8210  0A93  2ACA               	goto	l10764
  8211  0A94                     u4320:
  8212                           	line	9
  8213                           	
  8214  0A94                     l10748:	
  8215  0A94  01AD               	clrf	(___lwmod@counter)
  8216  0A95  1403               	bsf	status,0
  8217  0A96  0DAD               	rlf	(___lwmod@counter),f
  8218                           	line	10
  8219  0A97  2AA4               	goto	l10754
  8220                           	
  8221  0A98                     l7562:	
  8222                           	line	11
  8223                           	
  8224  0A98                     l10750:	
  8225  0A98  3001               	movlw	01h
  8226                           	
  8227  0A99                     u4335:
  8228  0A99  1003               	clrc
  8229  0A9A  0DA8               	rlf	(___lwmod@divisor),f
  8230  0A9B  0DA9               	rlf	(___lwmod@divisor+1),f
  8231  0A9C  3EFF               	addlw	-1
  8232  0A9D  1D03               	skipz
  8233  0A9E  2A99               	goto	u4335
  8234                           	line	12
  8235                           	
  8236  0A9F                     l10752:	
  8237  0A9F  3001               	movlw	(01h)
  8238  0AA0  00AC               	movwf	(??___lwmod+0)+0
  8239  0AA1  082C               	movf	(??___lwmod+0)+0,w
  8240  0AA2  07AD               	addwf	(___lwmod@counter),f
  8241  0AA3  2AA4               	goto	l10754
  8242                           	line	13
  8243                           	
  8244  0AA4                     l7561:	
  8245                           	line	10
  8246                           	
  8247  0AA4                     l10754:	
  8248  0AA4  1FA9               	btfss	(___lwmod@divisor+1),(15)&7
  8249  0AA5  2AA7               	goto	u4341
  8250  0AA6  2AA8               	goto	u4340
  8251  0AA7                     u4341:
  8252  0AA7  2A98               	goto	l10750
  8253  0AA8                     u4340:
  8254  0AA8  2AAA               	goto	l10756
  8255                           	
  8256  0AA9                     l7563:	
  8257  0AA9  2AAA               	goto	l10756
  8258                           	line	14
  8259                           	
  8260  0AAA                     l7564:	
  8261                           	line	15
  8262                           	
  8263  0AAA                     l10756:	
  8264  0AAA  0829               	movf	(___lwmod@divisor+1),w
  8265  0AAB  022B               	subwf	(___lwmod@dividend+1),w
  8266  0AAC  1D03               	skipz
  8267  0AAD  2AB0               	goto	u4355
  8268  0AAE  0828               	movf	(___lwmod@divisor),w
  8269  0AAF  022A               	subwf	(___lwmod@dividend),w
  8270  0AB0                     u4355:
  8271  0AB0  1C03               	skipc
  8272  0AB1  2AB3               	goto	u4351
  8273  0AB2  2AB4               	goto	u4350
  8274  0AB3                     u4351:
  8275  0AB3  2ABB               	goto	l10760
  8276  0AB4                     u4350:
  8277                           	line	16
  8278                           	
  8279  0AB4                     l10758:	
  8280  0AB4  0828               	movf	(___lwmod@divisor),w
  8281  0AB5  02AA               	subwf	(___lwmod@dividend),f
  8282  0AB6  0829               	movf	(___lwmod@divisor+1),w
  8283  0AB7  1C03               	skipc
  8284  0AB8  03AB               	decf	(___lwmod@dividend+1),f
  8285  0AB9  02AB               	subwf	(___lwmod@dividend+1),f
  8286  0ABA  2ABB               	goto	l10760
  8287                           	
  8288  0ABB                     l7565:	
  8289                           	line	17
  8290                           	
  8291  0ABB                     l10760:	
  8292  0ABB  3001               	movlw	01h
  8293                           	
  8294  0ABC                     u4365:
  8295  0ABC  1003               	clrc
  8296  0ABD  0CA9               	rrf	(___lwmod@divisor+1),f
  8297  0ABE  0CA8               	rrf	(___lwmod@divisor),f
  8298  0ABF  3EFF               	addlw	-1
  8299  0AC0  1D03               	skipz
  8300  0AC1  2ABC               	goto	u4365
  8301                           	line	18
  8302                           	
  8303  0AC2                     l10762:	
  8304  0AC2  3001               	movlw	low(01h)
  8305  0AC3  02AD               	subwf	(___lwmod@counter),f
  8306  0AC4  1D03               	btfss	status,2
  8307  0AC5  2AC7               	goto	u4371
  8308  0AC6  2AC8               	goto	u4370
  8309  0AC7                     u4371:
  8310  0AC7  2AAA               	goto	l10756
  8311  0AC8                     u4370:
  8312  0AC8  2ACA               	goto	l10764
  8313                           	
  8314  0AC9                     l7566:	
  8315  0AC9  2ACA               	goto	l10764
  8316                           	line	19
  8317                           	
  8318  0ACA                     l7560:	
  8319                           	line	20
  8320                           	
  8321  0ACA                     l10764:	
  8322  0ACA  082B               	movf	(___lwmod@dividend+1),w
  8323  0ACB  01A9               	clrf	(?___lwmod+1)
  8324  0ACC  07A9               	addwf	(?___lwmod+1)
  8325  0ACD  082A               	movf	(___lwmod@dividend),w
  8326  0ACE  01A8               	clrf	(?___lwmod)
  8327  0ACF  07A8               	addwf	(?___lwmod)
  8328                           
  8329  0AD0  2AD1               	goto	l7567
  8330                           	
  8331  0AD1                     l10766:	
  8332                           	line	21
  8333                           	
  8334  0AD1                     l7567:	
  8335  0AD1  0008               	return
  8336                           	opt stack 0
  8337                           GLOBAL	__end_of___lwmod
  8338  0AD2                     	__end_of___lwmod:
  8339 ;; =============== function ___lwmod ends ============
  8340                           
  8341                           	signat	___lwmod,8314
  8342                           	global	___lwdiv
  8343                           psect	text977,local,class=CODE,delta=2
  8344                           global __ptext977
  8345  0B18                     __ptext977:
  8346                           
  8347 ;; *************** function ___lwdiv *****************
  8348 ;; Defined at:
  8349 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  divisor         2    0[BANK0 ] unsigned int 
  8352 ;;  dividend        2    2[BANK0 ] unsigned int 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;  quotient        2    5[BANK0 ] unsigned int 
  8355 ;;  counter         1    7[BANK0 ] unsigned char 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  2    0[BANK0 ] unsigned int 
  8358 ;; Registers used:
  8359 ;;		wreg, status,2, status,0
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8365 ;;      Params:         0       4       0       0       0
  8366 ;;      Locals:         0       3       0       0       0
  8367 ;;      Temps:          0       1       0       0       0
  8368 ;;      Totals:         0       8       0       0       0
  8369 ;;Total ram usage:        8 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:    3
  8372 ;; This function calls:
  8373 ;;		Nothing
  8374 ;; This function is called by:
  8375 ;;		_sprintf
  8376 ;;		_ADCconvert
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           psect	text977
  8380                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  8381                           	line	5
  8382                           	global	__size_of___lwdiv
  8383  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  8384                           	
  8385  0B18                     ___lwdiv:	
  8386                           	opt	stack 1
  8387                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8388                           	line	9
  8389                           	
  8390  0B18                     l10720:	
  8391  0B18  1283               	bcf	status, 5	;RP0=0, select bank0
  8392  0B19  1303               	bcf	status, 6	;RP1=0, select bank0
  8393  0B1A  01A5               	clrf	(___lwdiv@quotient)
  8394  0B1B  01A6               	clrf	(___lwdiv@quotient+1)
  8395                           	line	10
  8396                           	
  8397  0B1C                     l10722:	
  8398  0B1C  0821               	movf	(___lwdiv@divisor+1),w
  8399  0B1D  0420               	iorwf	(___lwdiv@divisor),w
  8400  0B1E  1903               	skipnz
  8401  0B1F  2B21               	goto	u4251
  8402  0B20  2B22               	goto	u4250
  8403  0B21                     u4251:
  8404  0B21  2B60               	goto	l10742
  8405  0B22                     u4250:
  8406                           	line	11
  8407                           	
  8408  0B22                     l10724:	
  8409  0B22  01A7               	clrf	(___lwdiv@counter)
  8410  0B23  1403               	bsf	status,0
  8411  0B24  0DA7               	rlf	(___lwdiv@counter),f
  8412                           	line	12
  8413  0B25  2B32               	goto	l10730
  8414                           	
  8415  0B26                     l7552:	
  8416                           	line	13
  8417                           	
  8418  0B26                     l10726:	
  8419  0B26  3001               	movlw	01h
  8420                           	
  8421  0B27                     u4265:
  8422  0B27  1003               	clrc
  8423  0B28  0DA0               	rlf	(___lwdiv@divisor),f
  8424  0B29  0DA1               	rlf	(___lwdiv@divisor+1),f
  8425  0B2A  3EFF               	addlw	-1
  8426  0B2B  1D03               	skipz
  8427  0B2C  2B27               	goto	u4265
  8428                           	line	14
  8429                           	
  8430  0B2D                     l10728:	
  8431  0B2D  3001               	movlw	(01h)
  8432  0B2E  00A4               	movwf	(??___lwdiv+0)+0
  8433  0B2F  0824               	movf	(??___lwdiv+0)+0,w
  8434  0B30  07A7               	addwf	(___lwdiv@counter),f
  8435  0B31  2B32               	goto	l10730
  8436                           	line	15
  8437                           	
  8438  0B32                     l7551:	
  8439                           	line	12
  8440                           	
  8441  0B32                     l10730:	
  8442  0B32  1FA1               	btfss	(___lwdiv@divisor+1),(15)&7
  8443  0B33  2B35               	goto	u4271
  8444  0B34  2B36               	goto	u4270
  8445  0B35                     u4271:
  8446  0B35  2B26               	goto	l10726
  8447  0B36                     u4270:
  8448  0B36  2B38               	goto	l10732
  8449                           	
  8450  0B37                     l7553:	
  8451  0B37  2B38               	goto	l10732
  8452                           	line	16
  8453                           	
  8454  0B38                     l7554:	
  8455                           	line	17
  8456                           	
  8457  0B38                     l10732:	
  8458  0B38  3001               	movlw	01h
  8459                           	
  8460  0B39                     u4285:
  8461  0B39  1003               	clrc
  8462  0B3A  0DA5               	rlf	(___lwdiv@quotient),f
  8463  0B3B  0DA6               	rlf	(___lwdiv@quotient+1),f
  8464  0B3C  3EFF               	addlw	-1
  8465  0B3D  1D03               	skipz
  8466  0B3E  2B39               	goto	u4285
  8467                           	line	18
  8468  0B3F  0821               	movf	(___lwdiv@divisor+1),w
  8469  0B40  0223               	subwf	(___lwdiv@dividend+1),w
  8470  0B41  1D03               	skipz
  8471  0B42  2B45               	goto	u4295
  8472  0B43  0820               	movf	(___lwdiv@divisor),w
  8473  0B44  0222               	subwf	(___lwdiv@dividend),w
  8474  0B45                     u4295:
  8475  0B45  1C03               	skipc
  8476  0B46  2B48               	goto	u4291
  8477  0B47  2B49               	goto	u4290
  8478  0B48                     u4291:
  8479  0B48  2B51               	goto	l10738
  8480  0B49                     u4290:
  8481                           	line	19
  8482                           	
  8483  0B49                     l10734:	
  8484  0B49  0820               	movf	(___lwdiv@divisor),w
  8485  0B4A  02A2               	subwf	(___lwdiv@dividend),f
  8486  0B4B  0821               	movf	(___lwdiv@divisor+1),w
  8487  0B4C  1C03               	skipc
  8488  0B4D  03A3               	decf	(___lwdiv@dividend+1),f
  8489  0B4E  02A3               	subwf	(___lwdiv@dividend+1),f
  8490                           	line	20
  8491                           	
  8492  0B4F                     l10736:	
  8493  0B4F  1425               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  8494  0B50  2B51               	goto	l10738
  8495                           	line	21
  8496                           	
  8497  0B51                     l7555:	
  8498                           	line	22
  8499                           	
  8500  0B51                     l10738:	
  8501  0B51  3001               	movlw	01h
  8502                           	
  8503  0B52                     u4305:
  8504  0B52  1003               	clrc
  8505  0B53  0CA1               	rrf	(___lwdiv@divisor+1),f
  8506  0B54  0CA0               	rrf	(___lwdiv@divisor),f
  8507  0B55  3EFF               	addlw	-1
  8508  0B56  1D03               	skipz
  8509  0B57  2B52               	goto	u4305
  8510                           	line	23
  8511                           	
  8512  0B58                     l10740:	
  8513  0B58  3001               	movlw	low(01h)
  8514  0B59  02A7               	subwf	(___lwdiv@counter),f
  8515  0B5A  1D03               	btfss	status,2
  8516  0B5B  2B5D               	goto	u4311
  8517  0B5C  2B5E               	goto	u4310
  8518  0B5D                     u4311:
  8519  0B5D  2B38               	goto	l10732
  8520  0B5E                     u4310:
  8521  0B5E  2B60               	goto	l10742
  8522                           	
  8523  0B5F                     l7556:	
  8524  0B5F  2B60               	goto	l10742
  8525                           	line	24
  8526                           	
  8527  0B60                     l7550:	
  8528                           	line	25
  8529                           	
  8530  0B60                     l10742:	
  8531  0B60  0826               	movf	(___lwdiv@quotient+1),w
  8532  0B61  01A1               	clrf	(?___lwdiv+1)
  8533  0B62  07A1               	addwf	(?___lwdiv+1)
  8534  0B63  0825               	movf	(___lwdiv@quotient),w
  8535  0B64  01A0               	clrf	(?___lwdiv)
  8536  0B65  07A0               	addwf	(?___lwdiv)
  8537                           
  8538  0B66  2B67               	goto	l7557
  8539                           	
  8540  0B67                     l10744:	
  8541                           	line	26
  8542                           	
  8543  0B67                     l7557:	
  8544  0B67  0008               	return
  8545                           	opt stack 0
  8546                           GLOBAL	__end_of___lwdiv
  8547  0B68                     	__end_of___lwdiv:
  8548 ;; =============== function ___lwdiv ends ============
  8549                           
  8550                           	signat	___lwdiv,8314
  8551                           	global	___wmul
  8552                           psect	text978,local,class=CODE,delta=2
  8553                           global __ptext978
  8554  17A8                     __ptext978:
  8555                           
  8556 ;; *************** function ___wmul *****************
  8557 ;; Defined at:
  8558 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8561 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  product         2    4[BANK0 ] unsigned int 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  2    0[BANK0 ] unsigned int 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8573 ;;      Params:         0       4       0       0       0
  8574 ;;      Locals:         0       2       0       0       0
  8575 ;;      Temps:          0       0       0       0       0
  8576 ;;      Totals:         0       6       0       0       0
  8577 ;;Total ram usage:        6 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    3
  8580 ;; This function calls:
  8581 ;;		Nothing
  8582 ;; This function is called by:
  8583 ;;		_abs
  8584 ;;		_ADCconvert
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           psect	text978
  8588                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  8589                           	line	3
  8590                           	global	__size_of___wmul
  8591  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  8592                           	
  8593  17A8                     ___wmul:	
  8594                           	opt	stack 2
  8595                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8596                           	line	4
  8597                           	
  8598  17A8                     l10708:	
  8599  17A8  1283               	bcf	status, 5	;RP0=0, select bank0
  8600  17A9  1303               	bcf	status, 6	;RP1=0, select bank0
  8601  17AA  01A4               	clrf	(___wmul@product)
  8602  17AB  01A5               	clrf	(___wmul@product+1)
  8603  17AC  2FAD               	goto	l10710
  8604                           	line	6
  8605                           	
  8606  17AD                     l7544:	
  8607                           	line	7
  8608                           	
  8609  17AD                     l10710:	
  8610  17AD  1C20               	btfss	(___wmul@multiplier),(0)&7
  8611  17AE  2FB0               	goto	u4211
  8612  17AF  2FB1               	goto	u4210
  8613  17B0                     u4211:
  8614  17B0  2FB7               	goto	l7545
  8615  17B1                     u4210:
  8616                           	line	8
  8617                           	
  8618  17B1                     l10712:	
  8619  17B1  0822               	movf	(___wmul@multiplicand),w
  8620  17B2  07A4               	addwf	(___wmul@product),f
  8621  17B3  1803               	skipnc
  8622  17B4  0AA5               	incf	(___wmul@product+1),f
  8623  17B5  0823               	movf	(___wmul@multiplicand+1),w
  8624  17B6  07A5               	addwf	(___wmul@product+1),f
  8625                           	
  8626  17B7                     l7545:	
  8627                           	line	9
  8628  17B7  3001               	movlw	01h
  8629                           	
  8630  17B8                     u4225:
  8631  17B8  1003               	clrc
  8632  17B9  0DA2               	rlf	(___wmul@multiplicand),f
  8633  17BA  0DA3               	rlf	(___wmul@multiplicand+1),f
  8634  17BB  3EFF               	addlw	-1
  8635  17BC  1D03               	skipz
  8636  17BD  2FB8               	goto	u4225
  8637                           	line	10
  8638                           	
  8639  17BE                     l10714:	
  8640  17BE  3001               	movlw	01h
  8641                           	
  8642  17BF                     u4235:
  8643  17BF  1003               	clrc
  8644  17C0  0CA1               	rrf	(___wmul@multiplier+1),f
  8645  17C1  0CA0               	rrf	(___wmul@multiplier),f
  8646  17C2  3EFF               	addlw	-1
  8647  17C3  1D03               	skipz
  8648  17C4  2FBF               	goto	u4235
  8649                           	line	11
  8650  17C5  0821               	movf	((___wmul@multiplier+1)),w
  8651  17C6  0420               	iorwf	((___wmul@multiplier)),w
  8652  17C7  1D03               	skipz
  8653  17C8  2FCA               	goto	u4241
  8654  17C9  2FCB               	goto	u4240
  8655  17CA                     u4241:
  8656  17CA  2FAD               	goto	l10710
  8657  17CB                     u4240:
  8658  17CB  2FCC               	goto	l10716
  8659                           	
  8660  17CC                     l7546:	
  8661                           	line	12
  8662                           	
  8663  17CC                     l10716:	
  8664  17CC  0825               	movf	(___wmul@product+1),w
  8665  17CD  01A1               	clrf	(?___wmul+1)
  8666  17CE  07A1               	addwf	(?___wmul+1)
  8667  17CF  0824               	movf	(___wmul@product),w
  8668  17D0  01A0               	clrf	(?___wmul)
  8669  17D1  07A0               	addwf	(?___wmul)
  8670                           
  8671  17D2  2FD3               	goto	l7547
  8672                           	
  8673  17D3                     l10718:	
  8674                           	line	13
  8675                           	
  8676  17D3                     l7547:	
  8677  17D3  0008               	return
  8678                           	opt stack 0
  8679                           GLOBAL	__end_of___wmul
  8680  17D4                     	__end_of___wmul:
  8681 ;; =============== function ___wmul ends ============
  8682                           
  8683                           	signat	___wmul,8314
  8684                           	global	_ser_isrx
  8685                           psect	text979,local,class=CODE,delta=2
  8686                           global __ptext979
  8687  16DB                     __ptext979:
  8688                           
  8689 ;; *************** function _ser_isrx *****************
  8690 ;; Defined at:
  8691 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;		None
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;		None               void
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8705 ;;      Params:         0       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0
  8708 ;;      Totals:         0       0       0       0       0
  8709 ;;Total ram usage:        0 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    3
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_ser_getch
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           psect	text979
  8719                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  8720                           	line	45
  8721                           	global	__size_of_ser_isrx
  8722  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
  8723                           	
  8724  16DB                     _ser_isrx:	
  8725                           	opt	stack 1
  8726                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
  8727                           	line	46
  8728                           	
  8729  16DB                     l10660:	
  8730                           ;ser.c: 46: if(OERR) {
  8731  16DB  1283               	bcf	status, 5	;RP0=0, select bank0
  8732  16DC  1303               	bcf	status, 6	;RP1=0, select bank0
  8733  16DD  1C98               	btfss	(193/8),(193)&7
  8734  16DE  2EE0               	goto	u4141
  8735  16DF  2EE1               	goto	u4140
  8736  16E0                     u4141:
  8737  16E0  2EE6               	goto	l10668
  8738  16E1                     u4140:
  8739                           	line	47
  8740                           	
  8741  16E1                     l10662:	
  8742                           ;ser.c: 47: CREN = 0;
  8743  16E1  1218               	bcf	(196/8),(196)&7
  8744                           	line	48
  8745                           ;ser.c: 48: CREN = 1;
  8746  16E2  1618               	bsf	(196/8),(196)&7
  8747                           	line	49
  8748                           	
  8749  16E3                     l10664:	
  8750                           ;ser.c: 49: return 0;
  8751  16E3  1003               	clrc
  8752                           	
  8753  16E4  2EF1               	goto	l6799
  8754                           	
  8755  16E5                     l10666:	
  8756  16E5  2EF1               	goto	l6799
  8757                           	line	50
  8758                           	
  8759  16E6                     l6798:	
  8760                           	line	51
  8761                           	
  8762  16E6                     l10668:	
  8763                           ;ser.c: 50: }
  8764                           ;ser.c: 51: return (rxiptr!=rxoptr);
  8765  16E6  086C               	movf	(_rxiptr),w	;volatile
  8766  16E7  066D               	xorwf	(_rxoptr),w	;volatile
  8767  16E8  1D03               	skipz
  8768  16E9  2EEB               	goto	u4151
  8769  16EA  2EEC               	goto	u4150
  8770  16EB                     u4151:
  8771  16EB  2EEE               	goto	l10672
  8772  16EC                     u4150:
  8773                           	
  8774  16EC                     l10670:	
  8775  16EC  1003               	clrc
  8776                           	
  8777  16ED  2EF1               	goto	l6799
  8778                           	
  8779  16EE                     l10352:	
  8780                           	
  8781  16EE                     l10672:	
  8782  16EE  1403               	setc
  8783                           	
  8784  16EF  2EF1               	goto	l6799
  8785                           	
  8786  16F0                     l10354:	
  8787  16F0  2EF1               	goto	l6799
  8788                           	
  8789  16F1                     l10674:	
  8790                           	line	52
  8791                           	
  8792  16F1                     l6799:	
  8793  16F1  0008               	return
  8794                           	opt stack 0
  8795                           GLOBAL	__end_of_ser_isrx
  8796  16F2                     	__end_of_ser_isrx:
  8797 ;; =============== function _ser_isrx ends ============
  8798                           
  8799                           	signat	_ser_isrx,88
  8800                           	global	_spi_transfer
  8801                           psect	text980,local,class=CODE,delta=2
  8802                           global __ptext980
  8803  1687                     __ptext980:
  8804                           
  8805 ;; *************** function _spi_transfer *****************
  8806 ;; Defined at:
  8807 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  8808 ;; Parameters:    Size  Location     Type
  8809 ;;  data            1    wreg     unsigned char 
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;  data            1    2[BANK0 ] unsigned char 
  8812 ;;  temp            1    1[BANK0 ] unsigned char 
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      unsigned char 
  8815 ;; Registers used:
  8816 ;;		wreg
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8822 ;;      Params:         0       0       0       0       0
  8823 ;;      Locals:         0       2       0       0       0
  8824 ;;      Temps:          0       1       0       0       0
  8825 ;;      Totals:         0       3       0       0       0
  8826 ;;Total ram usage:        3 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; Hardware stack levels required when called:    3
  8829 ;; This function calls:
  8830 ;;		Nothing
  8831 ;; This function is called by:
  8832 ;;		_rotate
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           psect	text980
  8836                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  8837                           	line	50
  8838                           	global	__size_of_spi_transfer
  8839  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  8840                           	
  8841  1687                     _spi_transfer:	
  8842                           	opt	stack 2
  8843                           ; Regs used in _spi_transfer: [wreg]
  8844                           ;spi_transfer@data stored from wreg
  8845  1687  1283               	bcf	status, 5	;RP0=0, select bank0
  8846  1688  1303               	bcf	status, 6	;RP1=0, select bank0
  8847  1689  00A2               	movwf	(spi_transfer@data)
  8848                           	line	51
  8849                           	
  8850  168A                     l10608:	
  8851                           ;steppermotor.c: 51: unsigned char temp = 0;
  8852  168A  01A1               	clrf	(spi_transfer@temp)
  8853                           	line	53
  8854                           ;steppermotor.c: 53: SSPIF = 0;
  8855  168B  118C               	bcf	(99/8),(99)&7
  8856                           	line	54
  8857                           	
  8858  168C                     l10610:	
  8859                           ;steppermotor.c: 54: SSPBUF = data;
  8860  168C  0822               	movf	(spi_transfer@data),w
  8861  168D  0093               	movwf	(19)	;volatile
  8862                           	line	56
  8863                           ;steppermotor.c: 56: while (SSPIF == 0);
  8864  168E  2E8F               	goto	l3726
  8865                           	
  8866  168F                     l3727:	
  8867                           	
  8868  168F                     l3726:	
  8869  168F  1D8C               	btfss	(99/8),(99)&7
  8870  1690  2E92               	goto	u3981
  8871  1691  2E93               	goto	u3980
  8872  1692                     u3981:
  8873  1692  2E8F               	goto	l3726
  8874  1693                     u3980:
  8875  1693  2E94               	goto	l10612
  8876                           	
  8877  1694                     l3728:	
  8878                           	line	57
  8879                           	
  8880  1694                     l10612:	
  8881                           ;steppermotor.c: 57: temp = SSPBUF;
  8882  1694  0813               	movf	(19),w	;volatile
  8883  1695  00A0               	movwf	(??_spi_transfer+0)+0
  8884  1696  0820               	movf	(??_spi_transfer+0)+0,w
  8885  1697  00A1               	movwf	(spi_transfer@temp)
  8886                           	line	58
  8887                           	
  8888  1698                     l10614:	
  8889                           ;steppermotor.c: 58: SSPIF = 0;
  8890  1698  118C               	bcf	(99/8),(99)&7
  8891  1699  2E9A               	goto	l3729
  8892                           	line	60
  8893                           	
  8894  169A                     l10616:	
  8895                           	line	61
  8896                           ;steppermotor.c: 60: return temp;
  8897                           ;	Return value of _spi_transfer is never used
  8898                           	
  8899  169A                     l3729:	
  8900  169A  0008               	return
  8901                           	opt stack 0
  8902                           GLOBAL	__end_of_spi_transfer
  8903  169B                     	__end_of_spi_transfer:
  8904 ;; =============== function _spi_transfer ends ============
  8905                           
  8906                           	signat	_spi_transfer,4217
  8907                           	global	_ser_putch
  8908                           psect	text981,local,class=CODE,delta=2
  8909                           global __ptext981
  8910  170B                     __ptext981:
  8911                           
  8912 ;; *************** function _ser_putch *****************
  8913 ;; Defined at:
  8914 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  c               1    wreg     unsigned char 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  c               1    1[BANK0 ] unsigned char 
  8919 ;; Return value:  Size  Location     Type
  8920 ;;		None               void
  8921 ;; Registers used:
  8922 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8928 ;;      Params:         0       0       0       0       0
  8929 ;;      Locals:         0       1       0       0       0
  8930 ;;      Temps:          0       1       0       0       0
  8931 ;;      Totals:         0       2       0       0       0
  8932 ;;Total ram usage:        2 bytes
  8933 ;; Hardware stack levels used:    1
  8934 ;; Hardware stack levels required when called:    3
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_ChargeMode
  8939 ;;		_robo_init
  8940 ;;		_robot_read
  8941 ;;		_RobotDrive
  8942 ;;		_robotTurn
  8943 ;;		_ser_puts
  8944 ;;		_ser_puts2
  8945 ;;		_ser_puthex
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           psect	text981
  8949                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  8950                           	line	70
  8951                           	global	__size_of_ser_putch
  8952  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  8953                           	
  8954  170B                     _ser_putch:	
  8955                           	opt	stack 3
  8956                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  8957                           ;ser_putch@c stored from wreg
  8958  170B  1283               	bcf	status, 5	;RP0=0, select bank0
  8959  170C  1303               	bcf	status, 6	;RP1=0, select bank0
  8960  170D  00A1               	movwf	(ser_putch@c)
  8961                           	line	71
  8962                           	
  8963  170E                     l10530:	
  8964                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
  8965  170E  2F10               	goto	l10532
  8966                           	
  8967  170F                     l6809:	
  8968                           	line	72
  8969                           ;ser.c: 72: continue;
  8970  170F  2F10               	goto	l10532
  8971                           	
  8972  1710                     l6808:	
  8973                           	line	71
  8974                           	
  8975  1710                     l10532:	
  8976  1710  086E               	movf	(_txiptr),w	;volatile
  8977  1711  3E01               	addlw	01h
  8978  1712  390F               	andlw	0Fh
  8979  1713  066F               	xorwf	(_txoptr),w	;volatile
  8980  1714  1903               	skipnz
  8981  1715  2F17               	goto	u3791
  8982  1716  2F18               	goto	u3790
  8983  1717                     u3791:
  8984  1717  2F10               	goto	l10532
  8985  1718                     u3790:
  8986                           	
  8987  1718                     l6810:	
  8988                           	line	73
  8989                           ;ser.c: 73: GIE=0;
  8990  1718  138B               	bcf	(95/8),(95)&7
  8991                           	line	74
  8992                           	
  8993  1719                     l10534:	
  8994                           ;ser.c: 74: txfifo[txiptr] = c;
  8995  1719  0821               	movf	(ser_putch@c),w
  8996  171A  00A0               	movwf	(??_ser_putch+0)+0
  8997  171B  086E               	movf	(_txiptr),w
  8998  171C  3EA0               	addlw	_txfifo&0ffh
  8999  171D  0084               	movwf	fsr0
  9000  171E  0820               	movf	(??_ser_putch+0)+0,w
  9001  171F  1783               	bsf	status, 7	;select IRP bank3
  9002  1720  0080               	movwf	indf
  9003                           	line	75
  9004                           	
  9005  1721                     l10536:	
  9006                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
  9007  1721  086E               	movf	(_txiptr),w	;volatile
  9008  1722  3E01               	addlw	01h
  9009  1723  390F               	andlw	0Fh
  9010  1724  00A0               	movwf	(??_ser_putch+0)+0
  9011  1725  0820               	movf	(??_ser_putch+0)+0,w
  9012  1726  00EE               	movwf	(_txiptr)	;volatile
  9013                           	line	76
  9014                           	
  9015  1727                     l10538:	
  9016                           ;ser.c: 76: TXIE=1;
  9017  1727  1683               	bsf	status, 5	;RP0=1, select bank1
  9018  1728  1303               	bcf	status, 6	;RP1=0, select bank1
  9019  1729  160C               	bsf	(1124/8)^080h,(1124)&7
  9020                           	line	77
  9021                           	
  9022  172A                     l10540:	
  9023                           ;ser.c: 77: GIE=1;
  9024  172A  178B               	bsf	(95/8),(95)&7
  9025                           	line	78
  9026                           	
  9027  172B                     l6811:	
  9028  172B  0008               	return
  9029                           	opt stack 0
  9030                           GLOBAL	__end_of_ser_putch
  9031  172C                     	__end_of_ser_putch:
  9032 ;; =============== function _ser_putch ends ============
  9033                           
  9034                           	signat	_ser_putch,4216
  9035                           	global	_Menu
  9036                           psect	text982,local,class=CODE,delta=2
  9037                           global __ptext982
  9038  0A08                     __ptext982:
  9039                           
  9040 ;; *************** function _Menu *****************
  9041 ;; Defined at:
  9042 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  BTN_input       1    wreg     unsigned char 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  BTN_input       1    0[BANK0 ] unsigned char 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1    wreg      unsigned char 
  9049 ;; Registers used:
  9050 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9056 ;;      Params:         0       0       0       0       0
  9057 ;;      Locals:         0       1       0       0       0
  9058 ;;      Temps:          0       0       0       0       0
  9059 ;;      Totals:         0       1       0       0       0
  9060 ;;Total ram usage:        1 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    3
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_main
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           psect	text982
  9070                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  9071                           	line	201
  9072                           	global	__size_of_Menu
  9073  0040                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  9074                           	
  9075  0A08                     _Menu:	
  9076                           	opt	stack 4
  9077                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  9078                           ;Menu@BTN_input stored from wreg
  9079  0A08  1283               	bcf	status, 5	;RP0=0, select bank0
  9080  0A09  1303               	bcf	status, 6	;RP1=0, select bank0
  9081  0A0A  00A0               	movwf	(Menu@BTN_input)
  9082                           	line	202
  9083                           	
  9084  0A0B                     l10506:	
  9085                           ;HMI.c: 202: switch (BTN_input)
  9086  0A0B  2A34               	goto	l10524
  9087                           	line	204
  9088                           ;HMI.c: 203: {
  9089                           ;HMI.c: 204: case 1:
  9090                           	
  9091  0A0C                     l4539:	
  9092                           	line	206
  9093                           ;HMI.c: 206: break;
  9094  0A0C  2A45               	goto	l10526
  9095                           	line	207
  9096                           ;HMI.c: 207: case 2:
  9097                           	
  9098  0A0D                     l4541:	
  9099                           	line	209
  9100                           ;HMI.c: 209: break;
  9101  0A0D  2A45               	goto	l10526
  9102                           	line	210
  9103                           ;HMI.c: 210: case 3:
  9104                           	
  9105  0A0E                     l4542:	
  9106                           	line	211
  9107                           	
  9108  0A0E                     l10508:	
  9109                           ;HMI.c: 211: pos--;
  9110  0A0E  30FF               	movlw	low(-1)
  9111  0A0F  07E8               	addwf	(_pos),f
  9112  0A10  1803               	skipnc
  9113  0A11  0AE9               	incf	(_pos+1),f
  9114  0A12  30FF               	movlw	high(-1)
  9115  0A13  07E9               	addwf	(_pos+1),f
  9116                           	line	212
  9117                           	
  9118  0A14                     l10510:	
  9119                           ;HMI.c: 212: if (pos < 0)
  9120  0A14  1FE9               	btfss	(_pos+1),7
  9121  0A15  2A17               	goto	u3771
  9122  0A16  2A18               	goto	u3770
  9123  0A17                     u3771:
  9124  0A17  2A45               	goto	l10526
  9125  0A18                     u3770:
  9126                           	line	213
  9127                           	
  9128  0A18                     l10512:	
  9129                           ;HMI.c: 213: pos = 6 - 1;
  9130  0A18  3005               	movlw	low(05h)
  9131  0A19  00E8               	movwf	(_pos)
  9132  0A1A  3000               	movlw	high(05h)
  9133  0A1B  00E9               	movwf	((_pos))+1
  9134  0A1C  2A45               	goto	l10526
  9135                           	
  9136  0A1D                     l4543:	
  9137                           	line	215
  9138                           ;HMI.c: 215: break;
  9139  0A1D  2A45               	goto	l10526
  9140                           	line	216
  9141                           ;HMI.c: 216: case 4:
  9142                           	
  9143  0A1E                     l4544:	
  9144                           	line	217
  9145                           	
  9146  0A1E                     l10514:	
  9147                           ;HMI.c: 217: pos++;
  9148  0A1E  3001               	movlw	low(01h)
  9149  0A1F  07E8               	addwf	(_pos),f
  9150  0A20  1803               	skipnc
  9151  0A21  0AE9               	incf	(_pos+1),f
  9152  0A22  3000               	movlw	high(01h)
  9153  0A23  07E9               	addwf	(_pos+1),f
  9154                           	line	218
  9155                           ;HMI.c: 218: if (pos == 6)
  9156  0A24  3006               	movlw	06h
  9157  0A25  0668               	xorwf	(_pos),w
  9158  0A26  0469               	iorwf	(_pos+1),w
  9159  0A27  1D03               	skipz
  9160  0A28  2A2A               	goto	u3781
  9161  0A29  2A2B               	goto	u3780
  9162  0A2A                     u3781:
  9163  0A2A  2A45               	goto	l10526
  9164  0A2B                     u3780:
  9165                           	line	219
  9166                           	
  9167  0A2B                     l10516:	
  9168                           ;HMI.c: 219: pos = 0;
  9169  0A2B  01E8               	clrf	(_pos)
  9170  0A2C  01E9               	clrf	(_pos+1)
  9171  0A2D  2A45               	goto	l10526
  9172                           	
  9173  0A2E                     l4545:	
  9174                           	line	221
  9175                           ;HMI.c: 221: break;
  9176  0A2E  2A45               	goto	l10526
  9177                           	line	222
  9178                           ;HMI.c: 222: case 5:
  9179                           	
  9180  0A2F                     l4546:	
  9181                           	line	223
  9182                           	
  9183  0A2F                     l10518:	
  9184                           ;HMI.c: 223: return pos;
  9185  0A2F  0868               	movf	(_pos),w
  9186  0A30  2A47               	goto	l4547
  9187                           	
  9188  0A31                     l10520:	
  9189  0A31  2A47               	goto	l4547
  9190                           	line	226
  9191                           ;HMI.c: 226: default:
  9192                           	
  9193  0A32                     l4548:	
  9194                           	line	228
  9195                           ;HMI.c: 228: break;
  9196  0A32  2A45               	goto	l10526
  9197                           	line	229
  9198                           	
  9199  0A33                     l10522:	
  9200                           ;HMI.c: 229: }
  9201  0A33  2A45               	goto	l10526
  9202                           	line	202
  9203                           	
  9204  0A34                     l4538:	
  9205                           	
  9206  0A34                     l10524:	
  9207  0A34  0820               	movf	(Menu@BTN_input),w
  9208                           	; Switch size 1, requested type "space"
  9209                           ; Number of cases is 5, Range of values is 1 to 5
  9210                           ; switch strategies available:
  9211                           ; Name         Instructions Cycles
  9212                           ; simple_byte           16     9 (average)
  9213                           ; direct_byte           26    11 (fixed)
  9214                           ; jumptable            263     9 (fixed)
  9215                           ;	Chosen strategy is simple_byte
  9216                           
  9217                           	opt asmopt_off
  9218  0A35  3A01               	xorlw	1^0	; case 1
  9219  0A36  1903               	skipnz
  9220  0A37  2A45               	goto	l10526
  9221  0A38  3A03               	xorlw	2^1	; case 2
  9222  0A39  1903               	skipnz
  9223  0A3A  2A45               	goto	l10526
  9224  0A3B  3A01               	xorlw	3^2	; case 3
  9225  0A3C  1903               	skipnz
  9226  0A3D  2A0E               	goto	l10508
  9227  0A3E  3A07               	xorlw	4^3	; case 4
  9228  0A3F  1903               	skipnz
  9229  0A40  2A1E               	goto	l10514
  9230  0A41  3A01               	xorlw	5^4	; case 5
  9231  0A42  1903               	skipnz
  9232  0A43  2A2F               	goto	l10518
  9233  0A44  2A45               	goto	l10526
  9234                           	opt asmopt_on
  9235                           
  9236                           	line	229
  9237                           	
  9238  0A45                     l4540:	
  9239                           	line	230
  9240                           	
  9241  0A45                     l10526:	
  9242                           ;HMI.c: 230: return 255;
  9243  0A45  30FF               	movlw	(0FFh)
  9244  0A46  2A47               	goto	l4547
  9245                           	
  9246  0A47                     l10528:	
  9247                           	line	231
  9248                           	
  9249  0A47                     l4547:	
  9250  0A47  0008               	return
  9251                           	opt stack 0
  9252                           GLOBAL	__end_of_Menu
  9253  0A48                     	__end_of_Menu:
  9254 ;; =============== function _Menu ends ============
  9255                           
  9256                           	signat	_Menu,4217
  9257                           	global	_ser_init
  9258                           psect	text983,local,class=CODE,delta=2
  9259                           global __ptext983
  9260  172C                     __ptext983:
  9261                           
  9262 ;; *************** function _ser_init *****************
  9263 ;; Defined at:
  9264 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;		None
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;		None
  9269 ;; Return value:  Size  Location     Type
  9270 ;;		None               void
  9271 ;; Registers used:
  9272 ;;		wreg, status,2, status,0
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9278 ;;      Params:         0       0       0       0       0
  9279 ;;      Locals:         0       0       0       0       0
  9280 ;;      Temps:          0       1       0       0       0
  9281 ;;      Totals:         0       1       0       0       0
  9282 ;;Total ram usage:        1 bytes
  9283 ;; Hardware stack levels used:    1
  9284 ;; Hardware stack levels required when called:    3
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_init
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           psect	text983
  9292                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  9293                           	line	113
  9294                           	global	__size_of_ser_init
  9295  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  9296                           	
  9297  172C                     _ser_init:	
  9298                           	opt	stack 3
  9299                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  9300                           	line	114
  9301                           	
  9302  172C                     l10480:	
  9303                           ;ser.c: 114: TRISC |= 0b10000000;
  9304  172C  1683               	bsf	status, 5	;RP0=1, select bank1
  9305  172D  1303               	bcf	status, 6	;RP1=0, select bank1
  9306  172E  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  9307                           	line	115
  9308                           	
  9309  172F                     l10482:	
  9310                           ;ser.c: 115: TRISC &= 0b10111111;
  9311  172F  30BF               	movlw	(0BFh)
  9312  1730  1283               	bcf	status, 5	;RP0=0, select bank0
  9313  1731  1303               	bcf	status, 6	;RP1=0, select bank0
  9314  1732  00A0               	movwf	(??_ser_init+0)+0
  9315  1733  0820               	movf	(??_ser_init+0)+0,w
  9316  1734  1683               	bsf	status, 5	;RP0=1, select bank1
  9317  1735  1303               	bcf	status, 6	;RP1=0, select bank1
  9318  1736  0587               	andwf	(135)^080h,f	;volatile
  9319                           	line	116
  9320                           	
  9321  1737                     l10484:	
  9322                           ;ser.c: 116: BRGH=1;
  9323  1737  1518               	bsf	(1218/8)^080h,(1218)&7
  9324                           	line	118
  9325                           	
  9326  1738                     l10486:	
  9327                           ;ser.c: 118: SPBRG=20;
  9328  1738  3014               	movlw	(014h)
  9329  1739  0099               	movwf	(153)^080h	;volatile
  9330                           	line	121
  9331                           	
  9332  173A                     l10488:	
  9333                           ;ser.c: 121: TX9=0;
  9334  173A  1318               	bcf	(1222/8)^080h,(1222)&7
  9335                           	line	122
  9336                           	
  9337  173B                     l10490:	
  9338                           ;ser.c: 122: RX9=0;
  9339  173B  1283               	bcf	status, 5	;RP0=0, select bank0
  9340  173C  1303               	bcf	status, 6	;RP1=0, select bank0
  9341  173D  1318               	bcf	(198/8),(198)&7
  9342                           	line	124
  9343                           	
  9344  173E                     l10492:	
  9345                           ;ser.c: 124: SYNC=0;
  9346  173E  1683               	bsf	status, 5	;RP0=1, select bank1
  9347  173F  1303               	bcf	status, 6	;RP1=0, select bank1
  9348  1740  1218               	bcf	(1220/8)^080h,(1220)&7
  9349                           	line	125
  9350                           	
  9351  1741                     l10494:	
  9352                           ;ser.c: 125: SPEN=1;
  9353  1741  1283               	bcf	status, 5	;RP0=0, select bank0
  9354  1742  1303               	bcf	status, 6	;RP1=0, select bank0
  9355  1743  1798               	bsf	(199/8),(199)&7
  9356                           	line	126
  9357                           	
  9358  1744                     l10496:	
  9359                           ;ser.c: 126: CREN=1;
  9360  1744  1618               	bsf	(196/8),(196)&7
  9361                           	line	127
  9362                           	
  9363  1745                     l10498:	
  9364                           ;ser.c: 127: TXIE=0;
  9365  1745  1683               	bsf	status, 5	;RP0=1, select bank1
  9366  1746  1303               	bcf	status, 6	;RP1=0, select bank1
  9367  1747  120C               	bcf	(1124/8)^080h,(1124)&7
  9368                           	line	128
  9369                           	
  9370  1748                     l10500:	
  9371                           ;ser.c: 128: RCIE=1;
  9372  1748  168C               	bsf	(1125/8)^080h,(1125)&7
  9373                           	line	129
  9374                           	
  9375  1749                     l10502:	
  9376                           ;ser.c: 129: TXEN=1;
  9377  1749  1698               	bsf	(1221/8)^080h,(1221)&7
  9378                           	line	132
  9379                           	
  9380  174A                     l10504:	
  9381                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
  9382  174A  3000               	movlw	(0)
  9383  174B  1283               	bcf	status, 5	;RP0=0, select bank0
  9384  174C  1303               	bcf	status, 6	;RP1=0, select bank0
  9385  174D  00EF               	movwf	(_txoptr)	;volatile
  9386  174E  00EE               	movwf	(_txiptr)	;volatile
  9387  174F  00ED               	movwf	(_rxoptr)	;volatile
  9388  1750  00A0               	movwf	(??_ser_init+0)+0
  9389  1751  0820               	movf	(??_ser_init+0)+0,w
  9390  1752  00EC               	movwf	(_rxiptr)	;volatile
  9391                           	line	133
  9392                           	
  9393  1753                     l6833:	
  9394  1753  0008               	return
  9395                           	opt stack 0
  9396                           GLOBAL	__end_of_ser_init
  9397  1754                     	__end_of_ser_init:
  9398 ;; =============== function _ser_init ends ============
  9399                           
  9400                           	signat	_ser_init,88
  9401                           	global	_adc_read
  9402                           psect	text984,local,class=CODE,delta=2
  9403                           global __ptext984
  9404  1754                     __ptext984:
  9405                           
  9406 ;; *************** function _adc_read *****************
  9407 ;; Defined at:
  9408 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;		None
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  9413 ;; Return value:  Size  Location     Type
  9414 ;;                  2    0[BANK0 ] unsigned int 
  9415 ;; Registers used:
  9416 ;;		wreg, status,2, status,0
  9417 ;; Tracked objects:
  9418 ;;		On entry : 0/0
  9419 ;;		On exit  : 0/0
  9420 ;;		Unchanged: 0/0
  9421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9422 ;;      Params:         0       2       0       0       0
  9423 ;;      Locals:         0       2       0       0       0
  9424 ;;      Temps:          0       2       0       0       0
  9425 ;;      Totals:         0       6       0       0       0
  9426 ;;Total ram usage:        6 bytes
  9427 ;; Hardware stack levels used:    1
  9428 ;; Hardware stack levels required when called:    3
  9429 ;; This function calls:
  9430 ;;		Nothing
  9431 ;; This function is called by:
  9432 ;;		_adc_read_channel
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           psect	text984
  9436                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  9437                           	line	76
  9438                           	global	__size_of_adc_read
  9439  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  9440                           	
  9441  1754                     _adc_read:	
  9442                           	opt	stack 0
  9443                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  9444                           	line	79
  9445                           	
  9446  1754                     l10360:	
  9447                           ;adc.c: 77: volatile unsigned int adc_value;
  9448                           ;adc.c: 79: ADRESH = 0;
  9449  1754  1283               	bcf	status, 5	;RP0=0, select bank0
  9450  1755  1303               	bcf	status, 6	;RP1=0, select bank0
  9451  1756  019E               	clrf	(30)	;volatile
  9452                           	line	81
  9453                           	
  9454  1757                     l10362:	
  9455                           ;adc.c: 81: GO = 1;
  9456  1757  151F               	bsf	(250/8),(250)&7
  9457                           	line	82
  9458                           ;adc.c: 82: while(GO) continue;
  9459  1758  2F59               	goto	l703
  9460                           	
  9461  1759                     l704:	
  9462                           	
  9463  1759                     l703:	
  9464  1759  191F               	btfsc	(250/8),(250)&7
  9465  175A  2F5C               	goto	u3581
  9466  175B  2F5D               	goto	u3580
  9467  175C                     u3581:
  9468  175C  2F59               	goto	l703
  9469  175D                     u3580:
  9470                           	
  9471  175D                     l705:	
  9472                           	line	83
  9473                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
  9474  175D  0000               nop ;#
  9475                           	line	84
  9476                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
  9477  175E  0000               nop ;#
  9478                           	line	85
  9479                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
  9480  175F  0000               nop ;#
  9481                           psect	text984
  9482                           	line	88
  9483                           	
  9484  1760                     l10364:	
  9485                           ;adc.c: 88: adc_value = ADRESH;
  9486  1760  1283               	bcf	status, 5	;RP0=0, select bank0
  9487  1761  1303               	bcf	status, 6	;RP1=0, select bank0
  9488  1762  081E               	movf	(30),w	;volatile
  9489  1763  00A2               	movwf	(??_adc_read+0)+0
  9490  1764  01A3               	clrf	(??_adc_read+0)+0+1
  9491  1765  0822               	movf	0+(??_adc_read+0)+0,w
  9492  1766  00A4               	movwf	(adc_read@adc_value)	;volatile
  9493  1767  0823               	movf	1+(??_adc_read+0)+0,w
  9494  1768  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  9495                           	line	89
  9496                           ;adc.c: 89: adc_value <<= 1;
  9497  1769  3001               	movlw	01h
  9498                           	
  9499  176A                     u3595:
  9500  176A  1003               	clrc
  9501  176B  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  9502  176C  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  9503  176D  3EFF               	addlw	-1
  9504  176E  1D03               	skipz
  9505  176F  2F6A               	goto	u3595
  9506                           	line	90
  9507                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
  9508  1770  1683               	bsf	status, 5	;RP0=1, select bank1
  9509  1771  1303               	bcf	status, 6	;RP1=0, select bank1
  9510  1772  081E               	movf	(158)^080h,w	;volatile
  9511                           	line	93
  9512                           	
  9513  1773                     l10366:	
  9514                           ;adc.c: 93: return (adc_value);
  9515  1773  1283               	bcf	status, 5	;RP0=0, select bank0
  9516  1774  1303               	bcf	status, 6	;RP1=0, select bank0
  9517  1775  0825               	movf	(adc_read@adc_value+1),w	;volatile
  9518  1776  01A1               	clrf	(?_adc_read+1)
  9519  1777  07A1               	addwf	(?_adc_read+1)
  9520  1778  0824               	movf	(adc_read@adc_value),w	;volatile
  9521  1779  01A0               	clrf	(?_adc_read)
  9522  177A  07A0               	addwf	(?_adc_read)
  9523                           
  9524  177B  2F7C               	goto	l706
  9525                           	
  9526  177C                     l10368:	
  9527                           	line	94
  9528                           	
  9529  177C                     l706:	
  9530  177C  0008               	return
  9531                           	opt stack 0
  9532                           GLOBAL	__end_of_adc_read
  9533  177D                     	__end_of_adc_read:
  9534 ;; =============== function _adc_read ends ============
  9535                           
  9536                           	signat	_adc_read,90
  9537                           	global	_isr1
  9538                           psect	text985,local,class=CODE,delta=2
  9539                           global __ptext985
  9540  0DBE                     __ptext985:
  9541                           
  9542 ;; *************** function _isr1 *****************
  9543 ;; Defined at:
  9544 ;;		line 109 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;		None               void
  9551 ;; Registers used:
  9552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9558 ;;      Params:         0       0       0       0       0
  9559 ;;      Locals:         0       0       0       0       0
  9560 ;;      Temps:          5       0       0       0       0
  9561 ;;      Totals:         5       0       0       0       0
  9562 ;;Total ram usage:        5 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    2
  9565 ;; This function calls:
  9566 ;;		i1___lwmod
  9567 ;;		_ReadButtons
  9568 ;; This function is called by:
  9569 ;;		Interrupt level 1
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           psect	text985
  9573                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  9574                           	line	109
  9575                           	global	__size_of_isr1
  9576  00AC                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  9577                           	
  9578  0DBE                     _isr1:	
  9579                           	opt	stack 0
  9580                           ; Regs used in _isr1: [allreg]
  9581                           psect	intentry,class=CODE,delta=2
  9582                           global __pintentry
  9583  0004                     __pintentry:
  9584                           global interrupt_function
  9585  0004                     interrupt_function:
  9586                           	global saved_w
  9587  007E                     	saved_w	set	btemp+0
  9588  0004  00FE               	movwf	saved_w
  9589  0005  0E03               	swapf	status,w
  9590  0006  00F9               	movwf	(??_isr1+1)
  9591  0007  0804               	movf	fsr0,w
  9592  0008  00FA               	movwf	(??_isr1+2)
  9593  0009  080A               	movf	pclath,w
  9594  000A  00FB               	movwf	(??_isr1+3)
  9595  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  9596  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  9597  000D  087F               	movf	btemp+1,w
  9598  000E  00FC               	movwf	(??_isr1+4)
  9599  000F  120A  158A  2DBE   	ljmp	_isr1
  9600                           psect	text985
  9601                           	line	110
  9602                           	
  9603  0DBE                     i1l10396:	
  9604                           ;Main.c: 110: if(TMR0IF)
  9605  0DBE  1D0B               	btfss	(90/8),(90)&7
  9606  0DBF  2DC1               	goto	u363_21
  9607  0DC0  2DC2               	goto	u363_20
  9608  0DC1                     u363_21:
  9609  0DC1  2E11               	goto	i1l10418
  9610  0DC2                     u363_20:
  9611                           	line	112
  9612                           	
  9613  0DC2                     i1l10398:	
  9614                           ;Main.c: 111: {
  9615                           ;Main.c: 112: TMR0IF = 0;
  9616  0DC2  110B               	bcf	(90/8),(90)&7
  9617                           	line	113
  9618                           	
  9619  0DC3                     i1l10400:	
  9620                           ;Main.c: 113: TMR0 = 100;
  9621  0DC3  3064               	movlw	(064h)
  9622  0DC4  0081               	movwf	(1)	;volatile
  9623                           	line	115
  9624                           ;Main.c: 115: RTC_Counter++;
  9625  0DC5  3001               	movlw	low(01h)
  9626  0DC6  1683               	bsf	status, 5	;RP0=1, select bank1
  9627  0DC7  1303               	bcf	status, 6	;RP1=0, select bank1
  9628  0DC8  07B6               	addwf	(_RTC_Counter)^080h,f	;volatile
  9629  0DC9  1803               	skipnc
  9630  0DCA  0AB7               	incf	(_RTC_Counter+1)^080h,f	;volatile
  9631  0DCB  3000               	movlw	high(01h)
  9632  0DCC  07B7               	addwf	(_RTC_Counter+1)^080h,f	;volatile
  9633                           	line	118
  9634                           	
  9635  0DCD                     i1l10402:	
  9636                           ;Main.c: 118: RTC_FLAG_1MS = 1;
  9637  0DCD  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  9638                           	line	119
  9639                           	
  9640  0DCE                     i1l10404:	
  9641                           ;Main.c: 119: if(RTC_Counter % 250 == 0)
  9642  0DCE  30FA               	movlw	low(0FAh)
  9643  0DCF  00F2               	movwf	(?i1___lwmod)
  9644  0DD0  3000               	movlw	high(0FAh)
  9645  0DD1  00F3               	movwf	((?i1___lwmod))+1
  9646  0DD2  0837               	movf	(_RTC_Counter+1)^080h,w	;volatile
  9647  0DD3  01F5               	clrf	1+(?i1___lwmod)+02h
  9648  0DD4  07F5               	addwf	1+(?i1___lwmod)+02h
  9649  0DD5  0836               	movf	(_RTC_Counter)^080h,w	;volatile
  9650  0DD6  01F4               	clrf	0+(?i1___lwmod)+02h
  9651  0DD7  07F4               	addwf	0+(?i1___lwmod)+02h
  9652                           
  9653  0DD8  120A  158A  2248   	fcall	i1___lwmod
              120A  158A         
  9654  0DDD  0873               	movf	((1+(?i1___lwmod))),w
  9655  0DDE  0472               	iorwf	((0+(?i1___lwmod))),w
  9656  0DDF  1D03               	skipz
  9657  0DE0  2DE2               	goto	u364_21
  9658  0DE1  2DE3               	goto	u364_20
  9659  0DE2                     u364_21:
  9660  0DE2  2DE5               	goto	i1l10408
  9661  0DE3                     u364_20:
  9662                           	line	121
  9663                           	
  9664  0DE3                     i1l10406:	
  9665                           ;Main.c: 120: {
  9666                           ;Main.c: 121: RTC_FLAG_250MS = 1;
  9667  0DE3  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  9668  0DE4  2DE5               	goto	i1l10408
  9669                           	line	122
  9670                           	
  9671  0DE5                     i1l2221:	
  9672                           	line	123
  9673                           	
  9674  0DE5                     i1l10408:	
  9675                           ;Main.c: 122: }
  9676                           ;Main.c: 123: if(RTC_Counter % 500 == 0)
  9677  0DE5  30F4               	movlw	low(01F4h)
  9678  0DE6  00F2               	movwf	(?i1___lwmod)
  9679  0DE7  3001               	movlw	high(01F4h)
  9680  0DE8  00F3               	movwf	((?i1___lwmod))+1
  9681  0DE9  1683               	bsf	status, 5	;RP0=1, select bank1
  9682  0DEA  1303               	bcf	status, 6	;RP1=0, select bank1
  9683  0DEB  0837               	movf	(_RTC_Counter+1)^080h,w	;volatile
  9684  0DEC  01F5               	clrf	1+(?i1___lwmod)+02h
  9685  0DED  07F5               	addwf	1+(?i1___lwmod)+02h
  9686  0DEE  0836               	movf	(_RTC_Counter)^080h,w	;volatile
  9687  0DEF  01F4               	clrf	0+(?i1___lwmod)+02h
  9688  0DF0  07F4               	addwf	0+(?i1___lwmod)+02h
  9689                           
  9690  0DF1  120A  158A  2248   	fcall	i1___lwmod
              120A  158A         
  9691  0DF6  0873               	movf	((1+(?i1___lwmod))),w
  9692  0DF7  0472               	iorwf	((0+(?i1___lwmod))),w
  9693  0DF8  1D03               	skipz
  9694  0DF9  2DFB               	goto	u365_21
  9695  0DFA  2DFC               	goto	u365_20
  9696  0DFB                     u365_21:
  9697  0DFB  2E02               	goto	i1l10414
  9698  0DFC                     u365_20:
  9699                           	line	125
  9700                           	
  9701  0DFC                     i1l10410:	
  9702                           ;Main.c: 124: {
  9703                           ;Main.c: 125: RTC_FLAG_500MS = 1;
  9704  0DFC  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  9705                           	line	126
  9706                           	
  9707  0DFD                     i1l10412:	
  9708                           ;Main.c: 126: RB0 ^= 0x01;
  9709  0DFD  1283               	bcf	status, 5	;RP0=0, select bank0
  9710  0DFE  1303               	bcf	status, 6	;RP1=0, select bank0
  9711  0DFF  3001               	movlw	1<<((48)&7)
  9712  0E00  0686               	xorwf	((48)/8),f
  9713  0E01  2E02               	goto	i1l10414
  9714                           	line	127
  9715                           	
  9716  0E02                     i1l2222:	
  9717                           	line	128
  9718                           	
  9719  0E02                     i1l10414:	
  9720                           ;Main.c: 127: }
  9721                           ;Main.c: 128: if (buttonPressed == 0)
  9722  0E02  08FD               	movf	(_buttonPressed),f
  9723  0E03  1D03               	skipz	;volatile
  9724  0E04  2E06               	goto	u366_21
  9725  0E05  2E07               	goto	u366_20
  9726  0E06                     u366_21:
  9727  0E06  2E11               	goto	i1l10418
  9728  0E07                     u366_20:
  9729                           	line	130
  9730                           	
  9731  0E07                     i1l10416:	
  9732                           ;Main.c: 129: {
  9733                           ;Main.c: 130: buttonPressed = ReadButtons();
  9734  0E07  120A  158A  212F   	fcall	_ReadButtons
              120A  158A         
  9735  0E0C  00F8               	movwf	(??_isr1+0)+0
  9736  0E0D  0878               	movf	(??_isr1+0)+0,w
  9737  0E0E  00FD               	movwf	(_buttonPressed)	;volatile
  9738  0E0F  2E11               	goto	i1l10418
  9739                           	line	131
  9740                           	
  9741  0E10                     i1l2223:	
  9742  0E10  2E11               	goto	i1l10418
  9743                           	line	132
  9744                           	
  9745  0E11                     i1l2220:	
  9746                           	line	133
  9747                           	
  9748  0E11                     i1l10418:	
  9749                           ;Main.c: 131: }
  9750                           ;Main.c: 132: }
  9751                           ;Main.c: 133: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  9752  0E11  1283               	bcf	status, 5	;RP0=0, select bank0
  9753  0E12  1303               	bcf	status, 6	;RP1=0, select bank0
  9754  0E13  1E8C               	btfss	(101/8),(101)&7
  9755  0E14  2E16               	goto	u367_21
  9756  0E15  2E17               	goto	u367_20
  9757  0E16                     u367_21:
  9758  0E16  2E39               	goto	i1l10428
  9759  0E17                     u367_20:
  9760                           	
  9761  0E17                     i1l10420:	
  9762  0E17  081A               	movf	(26),w	;volatile
  9763  0E18  00F8               	movwf	(??_isr1+0)+0
  9764  0E19  086C               	movf	(_rxiptr),w
  9765  0E1A  3EA0               	addlw	_rxfifo&0ffh
  9766  0E1B  0084               	movwf	fsr0
  9767  0E1C  0878               	movf	(??_isr1+0)+0,w
  9768  0E1D  1383               	bcf	status, 7	;select IRP bank1
  9769  0E1E  0080               	movwf	indf
  9770                           	
  9771  0E1F                     i1l10422:	
  9772  0E1F  086C               	movf	(_rxiptr),w	;volatile
  9773  0E20  3E01               	addlw	01h
  9774  0E21  390F               	andlw	0Fh
  9775  0E22  00F8               	movwf	(??_isr1+0)+0
  9776  0E23  0878               	movf	(??_isr1+0)+0,w
  9777  0E24  1683               	bsf	status, 5	;RP0=1, select bank1
  9778  0E25  1303               	bcf	status, 6	;RP1=0, select bank1
  9779  0E26  00D4               	movwf	(_ser_tmp)^080h
  9780                           	
  9781  0E27                     i1l10424:	
  9782  0E27  0854               	movf	(_ser_tmp)^080h,w
  9783  0E28  1283               	bcf	status, 5	;RP0=0, select bank0
  9784  0E29  1303               	bcf	status, 6	;RP1=0, select bank0
  9785  0E2A  066D               	xorwf	(_rxoptr),w	;volatile
  9786  0E2B  1903               	skipnz
  9787  0E2C  2E2E               	goto	u368_21
  9788  0E2D  2E2F               	goto	u368_20
  9789  0E2E                     u368_21:
  9790  0E2E  2E39               	goto	i1l10428
  9791  0E2F                     u368_20:
  9792                           	
  9793  0E2F                     i1l10426:	
  9794  0E2F  1683               	bsf	status, 5	;RP0=1, select bank1
  9795  0E30  1303               	bcf	status, 6	;RP1=0, select bank1
  9796  0E31  0854               	movf	(_ser_tmp)^080h,w
  9797  0E32  00F8               	movwf	(??_isr1+0)+0
  9798  0E33  0878               	movf	(??_isr1+0)+0,w
  9799  0E34  1283               	bcf	status, 5	;RP0=0, select bank0
  9800  0E35  1303               	bcf	status, 6	;RP1=0, select bank0
  9801  0E36  00EC               	movwf	(_rxiptr)	;volatile
  9802  0E37  2E39               	goto	i1l10428
  9803                           	
  9804  0E38                     i1l2225:	
  9805  0E38  2E39               	goto	i1l10428
  9806                           	
  9807  0E39                     i1l2224:	
  9808                           	
  9809  0E39                     i1l10428:	
  9810  0E39  1E0C               	btfss	(100/8),(100)&7
  9811  0E3A  2E3C               	goto	u369_21
  9812  0E3B  2E3D               	goto	u369_20
  9813  0E3C                     u369_21:
  9814  0E3C  2E5E               	goto	i1l2228
  9815  0E3D                     u369_20:
  9816                           	
  9817  0E3D                     i1l10430:	
  9818  0E3D  1683               	bsf	status, 5	;RP0=1, select bank1
  9819  0E3E  1303               	bcf	status, 6	;RP1=0, select bank1
  9820  0E3F  1E0C               	btfss	(1124/8)^080h,(1124)&7
  9821  0E40  2E42               	goto	u370_21
  9822  0E41  2E43               	goto	u370_20
  9823  0E42                     u370_21:
  9824  0E42  2E5E               	goto	i1l2228
  9825  0E43                     u370_20:
  9826                           	
  9827  0E43                     i1l10432:	
  9828  0E43  1283               	bcf	status, 5	;RP0=0, select bank0
  9829  0E44  1303               	bcf	status, 6	;RP1=0, select bank0
  9830  0E45  086F               	movf	(_txoptr),w
  9831  0E46  3EA0               	addlw	_txfifo&0ffh
  9832  0E47  0084               	movwf	fsr0
  9833  0E48  1783               	bsf	status, 7	;select IRP bank3
  9834  0E49  0800               	movf	indf,w
  9835  0E4A  0099               	movwf	(25)	;volatile
  9836                           	
  9837  0E4B                     i1l10434:	
  9838  0E4B  3001               	movlw	(01h)
  9839  0E4C  00F8               	movwf	(??_isr1+0)+0
  9840  0E4D  0878               	movf	(??_isr1+0)+0,w
  9841  0E4E  07EF               	addwf	(_txoptr),f	;volatile
  9842                           	
  9843  0E4F                     i1l10436:	
  9844  0E4F  300F               	movlw	(0Fh)
  9845  0E50  00F8               	movwf	(??_isr1+0)+0
  9846  0E51  0878               	movf	(??_isr1+0)+0,w
  9847  0E52  05EF               	andwf	(_txoptr),f	;volatile
  9848                           	
  9849  0E53                     i1l10438:	
  9850  0E53  086F               	movf	(_txoptr),w	;volatile
  9851  0E54  066E               	xorwf	(_txiptr),w	;volatile
  9852  0E55  1D03               	skipz
  9853  0E56  2E58               	goto	u371_21
  9854  0E57  2E59               	goto	u371_20
  9855  0E58                     u371_21:
  9856  0E58  2E5E               	goto	i1l2228
  9857  0E59                     u371_20:
  9858                           	
  9859  0E59                     i1l10440:	
  9860  0E59  1683               	bsf	status, 5	;RP0=1, select bank1
  9861  0E5A  1303               	bcf	status, 6	;RP1=0, select bank1
  9862  0E5B  120C               	bcf	(1124/8)^080h,(1124)&7
  9863  0E5C  2E5E               	goto	i1l2228
  9864                           	
  9865  0E5D                     i1l2227:	
  9866  0E5D  2E5E               	goto	i1l2228
  9867                           	
  9868  0E5E                     i1l2226:	
  9869                           	line	134
  9870                           	
  9871  0E5E                     i1l2228:	
  9872  0E5E  087C               	movf	(??_isr1+4),w
  9873  0E5F  1283               	bcf	status, 5	;RP0=0, select bank0
  9874  0E60  00FF               	movwf	btemp+1
  9875  0E61  087B               	movf	(??_isr1+3),w
  9876  0E62  008A               	movwf	pclath
  9877  0E63  087A               	movf	(??_isr1+2),w
  9878  0E64  0084               	movwf	fsr0
  9879  0E65  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
  9880  0E66  0083               	movwf	status
  9881  0E67  0EFE               	swapf	saved_w,f
  9882  0E68  0E7E               	swapf	saved_w,w
  9883  0E69  0009               	retfie
  9884                           	opt stack 0
  9885                           GLOBAL	__end_of_isr1
  9886  0E6A                     	__end_of_isr1:
  9887 ;; =============== function _isr1 ends ============
  9888                           
  9889                           	signat	_isr1,88
  9890                           	global	_ReadButtons
  9891                           psect	text986,local,class=CODE,delta=2
  9892                           global __ptext986
  9893  092F                     __ptext986:
  9894                           
  9895 ;; *************** function _ReadButtons *****************
  9896 ;; Defined at:
  9897 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;		None
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;		None
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  1    wreg      unsigned char 
  9904 ;; Registers used:
  9905 ;;		wreg, status,2, status,0, pclath, cstack
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9911 ;;      Params:         0       0       0       0       0
  9912 ;;      Locals:         0       0       0       0       0
  9913 ;;      Temps:          0       0       0       0       0
  9914 ;;      Totals:         0       0       0       0       0
  9915 ;;Total ram usage:        0 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; Hardware stack levels required when called:    1
  9918 ;; This function calls:
  9919 ;;		_Debounce
  9920 ;; This function is called by:
  9921 ;;		_isr1
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           psect	text986
  9925                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  9926                           	line	159
  9927                           	global	__size_of_ReadButtons
  9928  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  9929                           	
  9930  092F                     _ReadButtons:	
  9931                           	opt	stack 0
  9932                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  9933                           	line	161
  9934                           	
  9935  092F                     i1l10442:	
  9936                           ;HMI.c: 161: Debounce();
  9937  092F  120A  158A  247E   	fcall	_Debounce
              120A  158A         
  9938                           	line	163
  9939                           	
  9940  0934                     i1l10444:	
  9941                           ;HMI.c: 163: if(UpPressed)
  9942  0934  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
  9943  0935  2937               	goto	u372_21
  9944  0936  2938               	goto	u372_20
  9945  0937                     u372_21:
  9946  0937  293C               	goto	i1l4530
  9947  0938                     u372_20:
  9948                           	line	165
  9949                           	
  9950  0938                     i1l10446:	
  9951                           ;HMI.c: 164: {
  9952                           ;HMI.c: 165: UpPressed = 0;
  9953  0938  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
  9954                           	line	166
  9955                           	
  9956  0939                     i1l10448:	
  9957                           ;HMI.c: 166: return 1;
  9958  0939  3001               	movlw	(01h)
  9959  093A  295E               	goto	i1l4531
  9960                           	
  9961  093B                     i1l10450:	
  9962  093B  295E               	goto	i1l4531
  9963                           	line	168
  9964                           	
  9965  093C                     i1l4530:	
  9966                           	line	170
  9967                           ;HMI.c: 168: }
  9968                           ;HMI.c: 170: if(DownPressed)
  9969  093C  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
  9970  093D  293F               	goto	u373_21
  9971  093E  2940               	goto	u373_20
  9972  093F                     u373_21:
  9973  093F  2944               	goto	i1l4532
  9974  0940                     u373_20:
  9975                           	line	172
  9976                           	
  9977  0940                     i1l10452:	
  9978                           ;HMI.c: 171: {
  9979                           ;HMI.c: 172: DownPressed = 0;
  9980  0940  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
  9981                           	line	173
  9982                           	
  9983  0941                     i1l10454:	
  9984                           ;HMI.c: 173: return 2;
  9985  0941  3002               	movlw	(02h)
  9986  0942  295E               	goto	i1l4531
  9987                           	
  9988  0943                     i1l10456:	
  9989  0943  295E               	goto	i1l4531
  9990                           	line	175
  9991                           	
  9992  0944                     i1l4532:	
  9993                           	line	176
  9994                           ;HMI.c: 175: }
  9995                           ;HMI.c: 176: if(LeftPressed)
  9996  0944  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  9997  0945  2947               	goto	u374_21
  9998  0946  2948               	goto	u374_20
  9999  0947                     u374_21:
 10000  0947  294C               	goto	i1l4533
 10001  0948                     u374_20:
 10002                           	line	178
 10003                           	
 10004  0948                     i1l10458:	
 10005                           ;HMI.c: 177: {
 10006                           ;HMI.c: 178: LeftPressed = 0;
 10007  0948  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 10008                           	line	179
 10009                           	
 10010  0949                     i1l10460:	
 10011                           ;HMI.c: 179: return 3;
 10012  0949  3003               	movlw	(03h)
 10013  094A  295E               	goto	i1l4531
 10014                           	
 10015  094B                     i1l10462:	
 10016  094B  295E               	goto	i1l4531
 10017                           	line	181
 10018                           	
 10019  094C                     i1l4533:	
 10020                           	line	182
 10021                           ;HMI.c: 181: }
 10022                           ;HMI.c: 182: if(RightPressed)
 10023  094C  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 10024  094D  294F               	goto	u375_21
 10025  094E  2950               	goto	u375_20
 10026  094F                     u375_21:
 10027  094F  2954               	goto	i1l4534
 10028  0950                     u375_20:
 10029                           	line	184
 10030                           	
 10031  0950                     i1l10464:	
 10032                           ;HMI.c: 183: {
 10033                           ;HMI.c: 184: RightPressed = 0;
 10034  0950  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 10035                           	line	185
 10036                           	
 10037  0951                     i1l10466:	
 10038                           ;HMI.c: 185: return 4;
 10039  0951  3004               	movlw	(04h)
 10040  0952  295E               	goto	i1l4531
 10041                           	
 10042  0953                     i1l10468:	
 10043  0953  295E               	goto	i1l4531
 10044                           	line	187
 10045                           	
 10046  0954                     i1l4534:	
 10047                           	line	189
 10048                           ;HMI.c: 187: }
 10049                           ;HMI.c: 189: if(CenterPressed)
 10050  0954  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 10051  0955  2957               	goto	u376_21
 10052  0956  2958               	goto	u376_20
 10053  0957                     u376_21:
 10054  0957  295C               	goto	i1l10476
 10055  0958                     u376_20:
 10056                           	line	191
 10057                           	
 10058  0958                     i1l10470:	
 10059                           ;HMI.c: 190: {
 10060                           ;HMI.c: 191: CenterPressed = 0;
 10061  0958  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 10062                           	line	192
 10063                           	
 10064  0959                     i1l10472:	
 10065                           ;HMI.c: 192: return 5;
 10066  0959  3005               	movlw	(05h)
 10067  095A  295E               	goto	i1l4531
 10068                           	
 10069  095B                     i1l10474:	
 10070  095B  295E               	goto	i1l4531
 10071                           	line	194
 10072                           	
 10073  095C                     i1l4535:	
 10074                           	line	195
 10075                           	
 10076  095C                     i1l10476:	
 10077                           ;HMI.c: 194: }
 10078                           ;HMI.c: 195: return 0;
 10079  095C  3000               	movlw	(0)
 10080  095D  295E               	goto	i1l4531
 10081                           	
 10082  095E                     i1l10478:	
 10083                           	line	196
 10084                           	
 10085  095E                     i1l4531:	
 10086  095E  0008               	return
 10087                           	opt stack 0
 10088                           GLOBAL	__end_of_ReadButtons
 10089  095F                     	__end_of_ReadButtons:
 10090 ;; =============== function _ReadButtons ends ============
 10091                           
 10092                           	signat	_ReadButtons,89
 10093                           	global	i1___lwmod
 10094                           psect	text987,local,class=CODE,delta=2
 10095                           global __ptext987
 10096  0A48                     __ptext987:
 10097                           
 10098 ;; *************** function i1___lwmod *****************
 10099 ;; Defined at:
 10100 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  __lwmod         2    0[COMMON] unsigned int 
 10103 ;;  __lwmod         2    2[COMMON] unsigned int 
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;  __lwmod         1    5[COMMON] unsigned char 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  2    0[COMMON] unsigned int 
 10108 ;; Registers used:
 10109 ;;		wreg, status,2, status,0
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10115 ;;      Params:         4       0       0       0       0
 10116 ;;      Locals:         1       0       0       0       0
 10117 ;;      Temps:          1       0       0       0       0
 10118 ;;      Totals:         6       0       0       0       0
 10119 ;;Total ram usage:        6 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; This function calls:
 10122 ;;		Nothing
 10123 ;; This function is called by:
 10124 ;;		_isr1
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           psect	text987
 10128                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 10129                           	line	5
 10130                           	global	__size_ofi1___lwmod
 10131  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 10132                           	
 10133  0A48                     i1___lwmod:	
 10134                           	opt	stack 1
 10135                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 10136                           	line	8
 10137                           	
 10138  0A48                     i1l10802:	
 10139  0A48  0873               	movf	(i1___lwmod@divisor+1),w
 10140  0A49  0472               	iorwf	(i1___lwmod@divisor),w
 10141  0A4A  1903               	skipnz
 10142  0A4B  2A4D               	goto	u447_21
 10143  0A4C  2A4E               	goto	u447_20
 10144  0A4D                     u447_21:
 10145  0A4D  2A84               	goto	i1l10820
 10146  0A4E                     u447_20:
 10147                           	line	9
 10148                           	
 10149  0A4E                     i1l10804:	
 10150  0A4E  01F7               	clrf	(i1___lwmod@counter)
 10151  0A4F  1403               	bsf	status,0
 10152  0A50  0DF7               	rlf	(i1___lwmod@counter),f
 10153                           	line	10
 10154  0A51  2A5E               	goto	i1l10810
 10155                           	
 10156  0A52                     i1l7562:	
 10157                           	line	11
 10158                           	
 10159  0A52                     i1l10806:	
 10160  0A52  3001               	movlw	01h
 10161                           	
 10162  0A53                     u448_25:
 10163  0A53  1003               	clrc
 10164  0A54  0DF2               	rlf	(i1___lwmod@divisor),f
 10165  0A55  0DF3               	rlf	(i1___lwmod@divisor+1),f
 10166  0A56  3EFF               	addlw	-1
 10167  0A57  1D03               	skipz
 10168  0A58  2A53               	goto	u448_25
 10169                           	line	12
 10170                           	
 10171  0A59                     i1l10808:	
 10172  0A59  3001               	movlw	(01h)
 10173  0A5A  00F6               	movwf	(??i1___lwmod+0)+0
 10174  0A5B  0876               	movf	(??i1___lwmod+0)+0,w
 10175  0A5C  07F7               	addwf	(i1___lwmod@counter),f
 10176  0A5D  2A5E               	goto	i1l10810
 10177                           	line	13
 10178                           	
 10179  0A5E                     i1l7561:	
 10180                           	line	10
 10181                           	
 10182  0A5E                     i1l10810:	
 10183  0A5E  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 10184  0A5F  2A61               	goto	u449_21
 10185  0A60  2A62               	goto	u449_20
 10186  0A61                     u449_21:
 10187  0A61  2A52               	goto	i1l10806
 10188  0A62                     u449_20:
 10189  0A62  2A64               	goto	i1l10812
 10190                           	
 10191  0A63                     i1l7563:	
 10192  0A63  2A64               	goto	i1l10812
 10193                           	line	14
 10194                           	
 10195  0A64                     i1l7564:	
 10196                           	line	15
 10197                           	
 10198  0A64                     i1l10812:	
 10199  0A64  0873               	movf	(i1___lwmod@divisor+1),w
 10200  0A65  0275               	subwf	(i1___lwmod@dividend+1),w
 10201  0A66  1D03               	skipz
 10202  0A67  2A6A               	goto	u450_25
 10203  0A68  0872               	movf	(i1___lwmod@divisor),w
 10204  0A69  0274               	subwf	(i1___lwmod@dividend),w
 10205  0A6A                     u450_25:
 10206  0A6A  1C03               	skipc
 10207  0A6B  2A6D               	goto	u450_21
 10208  0A6C  2A6E               	goto	u450_20
 10209  0A6D                     u450_21:
 10210  0A6D  2A75               	goto	i1l10816
 10211  0A6E                     u450_20:
 10212                           	line	16
 10213                           	
 10214  0A6E                     i1l10814:	
 10215  0A6E  0872               	movf	(i1___lwmod@divisor),w
 10216  0A6F  02F4               	subwf	(i1___lwmod@dividend),f
 10217  0A70  0873               	movf	(i1___lwmod@divisor+1),w
 10218  0A71  1C03               	skipc
 10219  0A72  03F5               	decf	(i1___lwmod@dividend+1),f
 10220  0A73  02F5               	subwf	(i1___lwmod@dividend+1),f
 10221  0A74  2A75               	goto	i1l10816
 10222                           	
 10223  0A75                     i1l7565:	
 10224                           	line	17
 10225                           	
 10226  0A75                     i1l10816:	
 10227  0A75  3001               	movlw	01h
 10228                           	
 10229  0A76                     u451_25:
 10230  0A76  1003               	clrc
 10231  0A77  0CF3               	rrf	(i1___lwmod@divisor+1),f
 10232  0A78  0CF2               	rrf	(i1___lwmod@divisor),f
 10233  0A79  3EFF               	addlw	-1
 10234  0A7A  1D03               	skipz
 10235  0A7B  2A76               	goto	u451_25
 10236                           	line	18
 10237                           	
 10238  0A7C                     i1l10818:	
 10239  0A7C  3001               	movlw	low(01h)
 10240  0A7D  02F7               	subwf	(i1___lwmod@counter),f
 10241  0A7E  1D03               	btfss	status,2
 10242  0A7F  2A81               	goto	u452_21
 10243  0A80  2A82               	goto	u452_20
 10244  0A81                     u452_21:
 10245  0A81  2A64               	goto	i1l10812
 10246  0A82                     u452_20:
 10247  0A82  2A84               	goto	i1l10820
 10248                           	
 10249  0A83                     i1l7566:	
 10250  0A83  2A84               	goto	i1l10820
 10251                           	line	19
 10252                           	
 10253  0A84                     i1l7560:	
 10254                           	line	20
 10255                           	
 10256  0A84                     i1l10820:	
 10257  0A84  0875               	movf	(i1___lwmod@dividend+1),w
 10258  0A85  01F3               	clrf	(?i1___lwmod+1)
 10259  0A86  07F3               	addwf	(?i1___lwmod+1)
 10260  0A87  0874               	movf	(i1___lwmod@dividend),w
 10261  0A88  01F2               	clrf	(?i1___lwmod)
 10262  0A89  07F2               	addwf	(?i1___lwmod)
 10263                           
 10264  0A8A  2A8B               	goto	i1l7567
 10265                           	
 10266  0A8B                     i1l10822:	
 10267                           	line	21
 10268                           	
 10269  0A8B                     i1l7567:	
 10270  0A8B  0008               	return
 10271                           	opt stack 0
 10272                           GLOBAL	__end_ofi1___lwmod
 10273  0A8C                     	__end_ofi1___lwmod:
 10274 ;; =============== function i1___lwmod ends ============
 10275                           
 10276                           	signat	i1___lwmod,90
 10277                           	global	_Debounce
 10278                           psect	text988,local,class=CODE,delta=2
 10279                           global __ptext988
 10280  0C7E                     __ptext988:
 10281                           
 10282 ;; *************** function _Debounce *****************
 10283 ;; Defined at:
 10284 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;		None
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;		None
 10289 ;; Return value:  Size  Location     Type
 10290 ;;		None               void
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10298 ;;      Params:         0       0       0       0       0
 10299 ;;      Locals:         0       0       0       0       0
 10300 ;;      Temps:          1       0       0       0       0
 10301 ;;      Totals:         1       0       0       0       0
 10302 ;;Total ram usage:        1 bytes
 10303 ;; Hardware stack levels used:    1
 10304 ;; This function calls:
 10305 ;;		Nothing
 10306 ;; This function is called by:
 10307 ;;		_ReadButtons
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           psect	text988
 10311                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 10312                           	line	77
 10313                           	global	__size_of_Debounce
 10314  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 10315                           	
 10316  0C7E                     _Debounce:	
 10317                           	opt	stack 0
 10318                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 10319                           	line	79
 10320                           	
 10321  0C7E                     i1l10618:	
 10322                           ;HMI.c: 79: if(!RB2)
 10323  0C7E  1283               	bcf	status, 5	;RP0=0, select bank0
 10324  0C7F  1303               	bcf	status, 6	;RP1=0, select bank0
 10325  0C80  1906               	btfsc	(50/8),(50)&7
 10326  0C81  2C83               	goto	u399_21
 10327  0C82  2C84               	goto	u399_20
 10328  0C83                     u399_21:
 10329  0C83  2C98               	goto	i1l4512
 10330  0C84                     u399_20:
 10331                           	line	81
 10332                           	
 10333  0C84                     i1l10620:	
 10334                           ;HMI.c: 80: {
 10335                           ;HMI.c: 81: UpDebounceCount++;
 10336  0C84  3001               	movlw	(01h)
 10337  0C85  00F2               	movwf	(??_Debounce+0)+0
 10338  0C86  0872               	movf	(??_Debounce+0)+0,w
 10339  0C87  1683               	bsf	status, 5	;RP0=1, select bank1
 10340  0C88  1303               	bcf	status, 6	;RP1=0, select bank1
 10341  0C89  07D0               	addwf	(_UpDebounceCount)^080h,f	;volatile
 10342                           	line	82
 10343                           	
 10344  0C8A                     i1l10622:	
 10345                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 10346  0C8A  300A               	movlw	(0Ah)
 10347  0C8B  0250               	subwf	(_UpDebounceCount)^080h,w	;volatile
 10348  0C8C  1C03               	skipc
 10349  0C8D  2C8F               	goto	u400_21
 10350  0C8E  2C90               	goto	u400_20
 10351  0C8F                     u400_21:
 10352  0C8F  2C9C               	goto	i1l4514
 10353  0C90                     u400_20:
 10354                           	
 10355  0C90                     i1l10624:	
 10356  0C90  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 10357  0C91  2C93               	goto	u401_21
 10358  0C92  2C94               	goto	u401_20
 10359  0C93                     u401_21:
 10360  0C93  2C9C               	goto	i1l4514
 10361  0C94                     u401_20:
 10362                           	line	84
 10363                           	
 10364  0C94                     i1l10626:	
 10365                           ;HMI.c: 83: {
 10366                           ;HMI.c: 84: UpPressed = 1;
 10367  0C94  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 10368                           	line	85
 10369                           ;HMI.c: 85: UpReleased = 0;
 10370  0C95  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 10371  0C96  2C9C               	goto	i1l4514
 10372                           	line	86
 10373                           	
 10374  0C97                     i1l4513:	
 10375                           	line	87
 10376                           ;HMI.c: 86: }
 10377                           ;HMI.c: 87: }
 10378  0C97  2C9C               	goto	i1l4514
 10379                           	line	88
 10380                           	
 10381  0C98                     i1l4512:	
 10382                           	line	90
 10383                           ;HMI.c: 88: else
 10384                           ;HMI.c: 89: {
 10385                           ;HMI.c: 90: UpDebounceCount = 0;
 10386  0C98  1683               	bsf	status, 5	;RP0=1, select bank1
 10387  0C99  1303               	bcf	status, 6	;RP1=0, select bank1
 10388  0C9A  01D0               	clrf	(_UpDebounceCount)^080h	;volatile
 10389                           	line	91
 10390                           ;HMI.c: 91: UpReleased = 1;
 10391  0C9B  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 10392                           	line	92
 10393                           	
 10394  0C9C                     i1l4514:	
 10395                           	line	95
 10396                           ;HMI.c: 92: }
 10397                           ;HMI.c: 95: if(!RB3)
 10398  0C9C  1283               	bcf	status, 5	;RP0=0, select bank0
 10399  0C9D  1303               	bcf	status, 6	;RP1=0, select bank0
 10400  0C9E  1986               	btfsc	(51/8),(51)&7
 10401  0C9F  2CA1               	goto	u402_21
 10402  0CA0  2CA2               	goto	u402_20
 10403  0CA1                     u402_21:
 10404  0CA1  2CB6               	goto	i1l4515
 10405  0CA2                     u402_20:
 10406                           	line	97
 10407                           	
 10408  0CA2                     i1l10628:	
 10409                           ;HMI.c: 96: {
 10410                           ;HMI.c: 97: DownDebounceCount++;
 10411  0CA2  3001               	movlw	(01h)
 10412  0CA3  00F2               	movwf	(??_Debounce+0)+0
 10413  0CA4  0872               	movf	(??_Debounce+0)+0,w
 10414  0CA5  1683               	bsf	status, 5	;RP0=1, select bank1
 10415  0CA6  1303               	bcf	status, 6	;RP1=0, select bank1
 10416  0CA7  07CC               	addwf	(_DownDebounceCount)^080h,f	;volatile
 10417                           	line	98
 10418                           	
 10419  0CA8                     i1l10630:	
 10420                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 10421  0CA8  300A               	movlw	(0Ah)
 10422  0CA9  024C               	subwf	(_DownDebounceCount)^080h,w	;volatile
 10423  0CAA  1C03               	skipc
 10424  0CAB  2CAD               	goto	u403_21
 10425  0CAC  2CAE               	goto	u403_20
 10426  0CAD                     u403_21:
 10427  0CAD  2CBA               	goto	i1l4517
 10428  0CAE                     u403_20:
 10429                           	
 10430  0CAE                     i1l10632:	
 10431  0CAE  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 10432  0CAF  2CB1               	goto	u404_21
 10433  0CB0  2CB2               	goto	u404_20
 10434  0CB1                     u404_21:
 10435  0CB1  2CBA               	goto	i1l4517
 10436  0CB2                     u404_20:
 10437                           	line	100
 10438                           	
 10439  0CB2                     i1l10634:	
 10440                           ;HMI.c: 99: {
 10441                           ;HMI.c: 100: DownPressed = 1;
 10442  0CB2  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 10443                           	line	101
 10444                           ;HMI.c: 101: DownReleased = 0;
 10445  0CB3  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 10446  0CB4  2CBA               	goto	i1l4517
 10447                           	line	102
 10448                           	
 10449  0CB5                     i1l4516:	
 10450                           	line	103
 10451                           ;HMI.c: 102: }
 10452                           ;HMI.c: 103: }
 10453  0CB5  2CBA               	goto	i1l4517
 10454                           	line	104
 10455                           	
 10456  0CB6                     i1l4515:	
 10457                           	line	106
 10458                           ;HMI.c: 104: else
 10459                           ;HMI.c: 105: {
 10460                           ;HMI.c: 106: DownDebounceCount = 0;
 10461  0CB6  1683               	bsf	status, 5	;RP0=1, select bank1
 10462  0CB7  1303               	bcf	status, 6	;RP1=0, select bank1
 10463  0CB8  01CC               	clrf	(_DownDebounceCount)^080h	;volatile
 10464                           	line	107
 10465                           ;HMI.c: 107: DownReleased = 1;
 10466  0CB9  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 10467                           	line	108
 10468                           	
 10469  0CBA                     i1l4517:	
 10470                           	line	110
 10471                           ;HMI.c: 108: }
 10472                           ;HMI.c: 110: if(!RB4)
 10473  0CBA  1283               	bcf	status, 5	;RP0=0, select bank0
 10474  0CBB  1303               	bcf	status, 6	;RP1=0, select bank0
 10475  0CBC  1A06               	btfsc	(52/8),(52)&7
 10476  0CBD  2CBF               	goto	u405_21
 10477  0CBE  2CC0               	goto	u405_20
 10478  0CBF                     u405_21:
 10479  0CBF  2CD4               	goto	i1l4518
 10480  0CC0                     u405_20:
 10481                           	line	112
 10482                           	
 10483  0CC0                     i1l10636:	
 10484                           ;HMI.c: 111: {
 10485                           ;HMI.c: 112: LeftDebounceCount++;
 10486  0CC0  3001               	movlw	(01h)
 10487  0CC1  00F2               	movwf	(??_Debounce+0)+0
 10488  0CC2  0872               	movf	(??_Debounce+0)+0,w
 10489  0CC3  1683               	bsf	status, 5	;RP0=1, select bank1
 10490  0CC4  1303               	bcf	status, 6	;RP1=0, select bank1
 10491  0CC5  07CD               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 10492                           	line	113
 10493                           	
 10494  0CC6                     i1l10638:	
 10495                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 10496  0CC6  300A               	movlw	(0Ah)
 10497  0CC7  024D               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 10498  0CC8  1C03               	skipc
 10499  0CC9  2CCB               	goto	u406_21
 10500  0CCA  2CCC               	goto	u406_20
 10501  0CCB                     u406_21:
 10502  0CCB  2CD8               	goto	i1l4520
 10503  0CCC                     u406_20:
 10504                           	
 10505  0CCC                     i1l10640:	
 10506  0CCC  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 10507  0CCD  2CCF               	goto	u407_21
 10508  0CCE  2CD0               	goto	u407_20
 10509  0CCF                     u407_21:
 10510  0CCF  2CD8               	goto	i1l4520
 10511  0CD0                     u407_20:
 10512                           	line	115
 10513                           	
 10514  0CD0                     i1l10642:	
 10515                           ;HMI.c: 114: {
 10516                           ;HMI.c: 115: LeftPressed = 1;
 10517  0CD0  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 10518                           	line	116
 10519                           ;HMI.c: 116: LeftReleased = 0;
 10520  0CD1  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 10521  0CD2  2CD8               	goto	i1l4520
 10522                           	line	117
 10523                           	
 10524  0CD3                     i1l4519:	
 10525                           	line	118
 10526                           ;HMI.c: 117: }
 10527                           ;HMI.c: 118: }
 10528  0CD3  2CD8               	goto	i1l4520
 10529                           	line	119
 10530                           	
 10531  0CD4                     i1l4518:	
 10532                           	line	121
 10533                           ;HMI.c: 119: else
 10534                           ;HMI.c: 120: {
 10535                           ;HMI.c: 121: LeftDebounceCount = 0;
 10536  0CD4  1683               	bsf	status, 5	;RP0=1, select bank1
 10537  0CD5  1303               	bcf	status, 6	;RP1=0, select bank1
 10538  0CD6  01CD               	clrf	(_LeftDebounceCount)^080h	;volatile
 10539                           	line	122
 10540                           ;HMI.c: 122: LeftReleased = 1;
 10541  0CD7  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 10542                           	line	123
 10543                           	
 10544  0CD8                     i1l4520:	
 10545                           	line	125
 10546                           ;HMI.c: 123: }
 10547                           ;HMI.c: 125: if(!RB5)
 10548  0CD8  1283               	bcf	status, 5	;RP0=0, select bank0
 10549  0CD9  1303               	bcf	status, 6	;RP1=0, select bank0
 10550  0CDA  1A86               	btfsc	(53/8),(53)&7
 10551  0CDB  2CDD               	goto	u408_21
 10552  0CDC  2CDE               	goto	u408_20
 10553  0CDD                     u408_21:
 10554  0CDD  2CF2               	goto	i1l4521
 10555  0CDE                     u408_20:
 10556                           	line	127
 10557                           	
 10558  0CDE                     i1l10644:	
 10559                           ;HMI.c: 126: {
 10560                           ;HMI.c: 127: RightDebounceCount++;
 10561  0CDE  3001               	movlw	(01h)
 10562  0CDF  00F2               	movwf	(??_Debounce+0)+0
 10563  0CE0  0872               	movf	(??_Debounce+0)+0,w
 10564  0CE1  1683               	bsf	status, 5	;RP0=1, select bank1
 10565  0CE2  1303               	bcf	status, 6	;RP1=0, select bank1
 10566  0CE3  07CF               	addwf	(_RightDebounceCount)^080h,f	;volatile
 10567                           	line	128
 10568                           	
 10569  0CE4                     i1l10646:	
 10570                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 10571  0CE4  300A               	movlw	(0Ah)
 10572  0CE5  024F               	subwf	(_RightDebounceCount)^080h,w	;volatile
 10573  0CE6  1C03               	skipc
 10574  0CE7  2CE9               	goto	u409_21
 10575  0CE8  2CEA               	goto	u409_20
 10576  0CE9                     u409_21:
 10577  0CE9  2CF6               	goto	i1l4523
 10578  0CEA                     u409_20:
 10579                           	
 10580  0CEA                     i1l10648:	
 10581  0CEA  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 10582  0CEB  2CED               	goto	u410_21
 10583  0CEC  2CEE               	goto	u410_20
 10584  0CED                     u410_21:
 10585  0CED  2CF6               	goto	i1l4523
 10586  0CEE                     u410_20:
 10587                           	line	130
 10588                           	
 10589  0CEE                     i1l10650:	
 10590                           ;HMI.c: 129: {
 10591                           ;HMI.c: 130: RightPressed = 1;
 10592  0CEE  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 10593                           	line	131
 10594                           ;HMI.c: 131: RightReleased = 0;
 10595  0CEF  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 10596  0CF0  2CF6               	goto	i1l4523
 10597                           	line	132
 10598                           	
 10599  0CF1                     i1l4522:	
 10600                           	line	133
 10601                           ;HMI.c: 132: }
 10602                           ;HMI.c: 133: }
 10603  0CF1  2CF6               	goto	i1l4523
 10604                           	line	134
 10605                           	
 10606  0CF2                     i1l4521:	
 10607                           	line	136
 10608                           ;HMI.c: 134: else
 10609                           ;HMI.c: 135: {
 10610                           ;HMI.c: 136: RightDebounceCount = 0;
 10611  0CF2  1683               	bsf	status, 5	;RP0=1, select bank1
 10612  0CF3  1303               	bcf	status, 6	;RP1=0, select bank1
 10613  0CF4  01CF               	clrf	(_RightDebounceCount)^080h	;volatile
 10614                           	line	137
 10615                           ;HMI.c: 137: RightReleased = 1;
 10616  0CF5  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 10617                           	line	138
 10618                           	
 10619  0CF6                     i1l4523:	
 10620                           	line	140
 10621                           ;HMI.c: 138: }
 10622                           ;HMI.c: 140: if(!RB6)
 10623  0CF6  1283               	bcf	status, 5	;RP0=0, select bank0
 10624  0CF7  1303               	bcf	status, 6	;RP1=0, select bank0
 10625  0CF8  1B06               	btfsc	(54/8),(54)&7
 10626  0CF9  2CFB               	goto	u411_21
 10627  0CFA  2CFC               	goto	u411_20
 10628  0CFB                     u411_21:
 10629  0CFB  2D10               	goto	i1l4524
 10630  0CFC                     u411_20:
 10631                           	line	142
 10632                           	
 10633  0CFC                     i1l10652:	
 10634                           ;HMI.c: 141: {
 10635                           ;HMI.c: 142: CenterDebounceCount++;
 10636  0CFC  3001               	movlw	(01h)
 10637  0CFD  00F2               	movwf	(??_Debounce+0)+0
 10638  0CFE  0872               	movf	(??_Debounce+0)+0,w
 10639  0CFF  1683               	bsf	status, 5	;RP0=1, select bank1
 10640  0D00  1303               	bcf	status, 6	;RP1=0, select bank1
 10641  0D01  07C8               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 10642                           	line	143
 10643                           	
 10644  0D02                     i1l10654:	
 10645                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 10646  0D02  300A               	movlw	(0Ah)
 10647  0D03  0248               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 10648  0D04  1C03               	skipc
 10649  0D05  2D07               	goto	u412_21
 10650  0D06  2D08               	goto	u412_20
 10651  0D07                     u412_21:
 10652  0D07  2D15               	goto	i1l4527
 10653  0D08                     u412_20:
 10654                           	
 10655  0D08                     i1l10656:	
 10656  0D08  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 10657  0D09  2D0B               	goto	u413_21
 10658  0D0A  2D0C               	goto	u413_20
 10659  0D0B                     u413_21:
 10660  0D0B  2D15               	goto	i1l4527
 10661  0D0C                     u413_20:
 10662                           	line	145
 10663                           	
 10664  0D0C                     i1l10658:	
 10665                           ;HMI.c: 144: {
 10666                           ;HMI.c: 145: CenterPressed = 1;
 10667  0D0C  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 10668                           	line	146
 10669                           ;HMI.c: 146: CenterReleased = 0;
 10670  0D0D  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 10671  0D0E  2D15               	goto	i1l4527
 10672                           	line	147
 10673                           	
 10674  0D0F                     i1l4525:	
 10675                           	line	148
 10676                           ;HMI.c: 147: }
 10677                           ;HMI.c: 148: }
 10678  0D0F  2D15               	goto	i1l4527
 10679                           	line	149
 10680                           	
 10681  0D10                     i1l4524:	
 10682                           	line	151
 10683                           ;HMI.c: 149: else
 10684                           ;HMI.c: 150: {
 10685                           ;HMI.c: 151: CenterDebounceCount = 0;
 10686  0D10  1683               	bsf	status, 5	;RP0=1, select bank1
 10687  0D11  1303               	bcf	status, 6	;RP1=0, select bank1
 10688  0D12  01C8               	clrf	(_CenterDebounceCount)^080h	;volatile
 10689                           	line	152
 10690                           ;HMI.c: 152: CenterReleased = 1;
 10691  0D13  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 10692  0D14  2D15               	goto	i1l4527
 10693                           	line	153
 10694                           	
 10695  0D15                     i1l4526:	
 10696                           	line	154
 10697                           	
 10698  0D15                     i1l4527:	
 10699  0D15  0008               	return
 10700                           	opt stack 0
 10701                           GLOBAL	__end_of_Debounce
 10702  0D16                     	__end_of_Debounce:
 10703 ;; =============== function _Debounce ends ============
 10704                           
 10705                           	signat	_Debounce,88
 10706                           psect	text989,local,class=CODE,delta=2
 10707                           global __ptext989
 10708  0000                     __ptext989:
 10709                           	global	btemp
 10710  007E                     	btemp set 07Eh
 10711                           
 10712                           	DABS	1,126,2	;btemp
 10713                           	global	wtemp0
 10714  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 18 12:32:55 2015

   RobotDrive@radiuslowByte 0029   __end_of_lcd_write_control 16AF             ??_UpdateDisplay 003F  
                         pc 0002                          _GO 00FA                          _RD 0C60  
                        _WR 0C61                  _IRdistance 00B4                          fsr 0004  
       ___wmul@multiplicand 0022                         l700 16C4                         l703 1759  
                       l704 1759                         l705 175D                         l706 177C  
                       l690 09D1                         l691 09FA                         l692 09D5  
                       l693 09D9                         l694 09DD                         l695 09E1  
                       l696 09E5                         l689 09E9                         l697 0A07  
                       _GIE 005F                         _RB0 0030                         _RC0 0038  
                       _RB2 0032                         _RC1 0039                         _RB3 0033  
                       _RC2 003A                         _RB4 0034                         _RB5 0035  
                       _RE0 0048                         _RB6 0036                         _RE1 0049  
                       _RE2 004A                         _RX9 00C6                         _TX9 04C6  
                       _abs 095F                         _pos 0068                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026         robotFollow@distance 0053  
          ??_robotMoveSpeed 0057             ?_lcd_set_cursor 0072                        ?_abs 0026  
                      l1402 1673                        l1410 17FF                        l3010 0EFD  
                      l1411 17FF                        l3011 0EF2                        l3012 0F1A  
                      l1405 1653                        l3005 0E79                        l3006 0E95  
                      l3015 16DA                        l2231 08FF                        l3007 0E9E  
                      l1408 17EE                        l3008 0F08                        l2240 0051  
                      l1409 17D5                        l3009 0EAA                        l2241 0052  
                      l2250 0164                        l2242 00E1                        l2234 0023  
                      l2251 0165                        l2243 014B                        l2235 0039  
                      l2260 022B                        l2244 01FB                        l2252 0166  
                      l2236 004A                        l1429 17A7                        l2237 020D  
                      l2253 0192                        l2245 014C                        l2270 0C13  
                      l2246 01E4                        l2254 01CD                        l2238 004B  
                      l2271 0BD8                        l2239 0223                        l2255 0204  
                      l2247 014D                        l2272 0BDA                        l2256 0205  
                      l2248 01FA                        l2273 0BEA                        l2281 0AE1  
                      l2257 020B                        l2249 0163                        l2274 0BF8  
                      l2266 0BCA                        l2290 0B17                        l2282 0AEC  
                      l2258 022A                        l2275 0C15                        l2267 0BD5  
                      l2283 0B04                        l2291 0B01                        l2259 022B  
                      l2268 0C02                        l2276 0C00                        l2292 0B16  
                      l2284 0AED                        l2277 0C14                        l2269 0BD6  
                      l2293 0B17                        l2285 0B15                        l2278 0C15  
                      l2286 0AEF                        l1399 16AE                        l2287 0AF1  
                      l2288 0AF3                        l2289 0AF5                        l6050 0530  
                      l6043 170A                        l6051 0532                        l4540 0A45  
                      l3732 0B78                        l6060 07F6                        l4541 0A0D  
                      l3733 0B7F                        l6061 07F7                        l4542 0A0E  
                      l3726 168F                        l3734 0B9C                        l6054 09CC  
                      l6046 0493                        l6070 02D4                        l4543 0A1D  
                      l3727 168F                        l3735 0B86                        l6047 0532  
                      l6071 03AB                        l4544 0A1E                        l3728 1694  
                      l3736 0BA6                        l6048 04CA                        l4560 0674  
                      l6064 0376                        l6072 0301                        l4545 0A2E  
                      l3729 169A                        l3737 0BB7                        l6057 07B2  
                      l6049 0531                        l4553 0676                        l4561 0683  
                      l6081 0FA5                        l6073 02EF                        l6065 0247  
                      l4538 0A34                        l4546 0A2F                        l6058 07F7  
                      l4554 054C                        l6090 0D7D                        l6082 0F31  
                      l6074 0300                        l6066 0282                        l4547 0A47  
                      l4539 0A0C                        l6059 07D7                        l4555 05B1  
                      l6091 0D2A                        l6083 0F43                        l6075 0314  
                      l6067 0302                        l4548 0A32                        l4556 05C2  
                      l6092 0D42                        l6084 0FDA                        l6076 0320  
                      l6068 02B8                        l4557 0683                        l6085 0F4F  
                      l6077 032F                        l6069 0302                        l4558 0600  
                      l6094 0D3C                        l6086 0F5E                        l6078 03D0  
                      l4559 064B                        l6095 0DB2                        l6087 0FFF  
                      l6096 0DBD                        l6099 0993                        l6810 1718  
                      l6802 08B1                        l6811 172B                        l6803 08B0  
                      l6804 08BA                        l6805 08D0                        l7550 0B60  
                      l7551 0B32                        l6808 1710                        l7544 17AD  
                      l7552 0B26                        l7560 0ACA                        l6833 1753  
                      l6809 170F                        l7545 17B7                        l7553 0B37  
                      l7561 0AA4                        l7546 17CC                        l7554 0B38  
                      l7562 0A98                        l6842 076A                        l6850 06BA  
                      l7547 17D3                        l7555 0B51                        l7563 0AA9  
                      l6851 06A3                        l6843 068C                        l7556 0B5F  
                      l7564 0AAA                        l6860 077D                        l6852 06D4  
                      l6844 069E                        l7557 0B67                        l7565 0ABB  
                      l6861 0783                        l6853 06DF                        l6845 06A5  
                      l7566 0AC9                        l6854 0707                        l6846 06A0  
                      l7567 0AD1                        l6847 077E                        l6855 06FC  
                      l7760 0C6B                        l7752 0C26                        l6856 0719  
                      l6848 06A1                        l7761 0C76                        l7753 0C30  
                      l6857 075E                        l6849 06A2                        l7762 0C7D  
                      l7754 0C6C                        l6858 071E                        l7755 0C46  
                      l6859 0769                        l7756 0C3A                        l7757 0C4B  
                      l6798 16E6                        l7758 0C4C                        l6799 16F1  
                      l7759 0C5D                        _CHS0 00FB                        _CHS1 00FC  
                      _CHS2 00FD                        STR_1 0862                        STR_2 0859  
                      STR_3 0874                        STR_4 087D                        STR_5 086B  
                      STR_6 0850                        STR_7 08A1                        STR_8 08A5  
                      STR_9 088D                        _BRGH 04C2                        _CREN 00C4  
                      u5000 003D                        u4210 17B1                        u5010 0203  
                      u4211 17B0                        u5011 0202                        u4140 16E1  
                      u4141 16E0                        u4150 16EC                        u4310 0B5E  
                      u4151 16EB                        u4311 0B5D                        u4240 17CB  
                      u4320 0A94                        u4400 0C36                        u4241 17CA  
                      u4225 17B8                        u4305 0B52                        u4321 0A93  
                      u4401 0C35                        u4250 0B22                        u4235 17BF  
                      u4251 0B21                        u5107 0512                        u5027 00E9  
                      u4340 0AA8                        u4420 0C4A                        u4341 0AA7  
                      u4421 0C49                        u5117 0B8F                        u5037 03E6  
                      u4270 0B36                        u4350 0AB4                        u4430 0C56  
                      u4271 0B35                        u4351 0AB3                        u4335 0A99  
                      u4431 0C55                        u4415 0C3B                        u5127 166F  
                      u5047 0407                        u4600 070D                        u4265 0B27  
                      u5137 16A9                        u4601 070C                        u5057 0428  
                      u4290 0B49                        u4370 0AC8                        u4450 0C6A  
                      u4530 0B71                        u4610 0768                        u4291 0B48  
                      u4371 0AC7                        u4355 0AB0                        u4451 0C69  
                      u4435 0C52                        u5147 16C2                        u4531 0B70  
                      u4611 0767                        u5067 044B                        _PEIE 005E  
                      u3580 175D                        u4460 0C70                        u4380 0C1D  
                      u4540 0BA6                        u4620 077C                        u4700 04D1  
                      u3581 175C                        u4285 0B39                        u4365 0ABC  
                      u4445 0C5E                        u4381 0C1C                        u5157 09FC  
                      u4541 0BA5                        u4621 077B                        u4701 04D0  
                      u5077 0475                        u4390 0C2A                        u4550 0692  
                      u4630 08BA                        u4710 0E77                        u4295 0B45  
                      u4391 0C29                        u4551 0691                        u4631 08B9  
                      u5087 04AC                        u4711 0E76                        u4560 06CA  
                      u4640 0793                        u4720 0E95                        u4800 0BCE  
                      u4545 0BA2                        u4561 06C9                        u4641 0792  
                      u5097 04E3                        u4721 0E94                        u4801 0BCD  
                      u3770 0A18                        u4570 06DD                        u4650 07B8  
                      u4730 0E9C                        u4810 0D37                        u3595 176A  
                      u3771 0A17                        u4571 06DC                        u4651 07B7  
                      u4731 0E9B                        u4811 0D36                        _RCIE 0465  
                      u3780 0A2B                        u4580 06FA                        u4740 0EA8  
                      u4820 0D3B                        u4900 0296                        _RCIF 0065  
                      u3781 0A2A                        u4581 06F9                        u4645 078F  
                      u4741 0EA7                        u4901 0295                        u3790 1718  
                      u4590 0706                        u4670 17FE                        u4750 0EC9  
                      u4830 0DB1                        u4910 02A8                        u3791 1717  
                      u4591 0705                        u4671 17FD                        u4751 0EC8  
                      u4831 0DB0                        u4911 02A7                        u4680 0463  
                      u4760 0EFC                        u4840 0F3D                        u4920 02CC  
                      u4585 06F6                        u4665 0974                        u4681 0462  
                      u4761 0EFB                        u4921 02CB                        u4905 0292  
                      u4690 049A                        u4770 0F07                        u4850 0F48  
                      u4930 02E7                        u4691 0499                        u4771 0F06  
                      u4755 0EC5                        u4835 0DAD                        u4931 02E6  
                      u4915 02A4                        u3980 1693                        u4780 053D  
                      u4860 0F55                        u4940 030E                        u3981 1692  
                      u4925 02C8                        u4790 05A0                        u4870 0FD9  
                      u4950 0319                        u4791 059F                        u4871 0FD8  
                      u4935 02E3                        u4960 0326                        u4880 0260  
                      u4881 025F                        u4970 03AA                        u4890 0272  
                      _OERR 00C1                        u4795 059C                        u4875 0FD5  
                      u4971 03A9                        u4891 0271                        u4980 0AE5  
                      u4885 025C                        u4981 0AE4                        u4990 0027  
                      u4975 03A6                        u4895 026E                        u4991 0026  
                      _TMR0 0001                  _ChargeMode 0AD2                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4                        _Menu 0A08  
    __end_of_lcd_write_data 1674                        abs@v 0026                        _isr1 0DBE  
                      _main 0015                        _init 08D1                        btemp 007E  
            _CenterReleased 0381                        start 0012               ??_ReadButtons 0073  
          ??_robotTurnSpeed 0057                       ??_abs 0028       readAvgDistance@tempIR 0044  
     readAvgDistance@values 0036                       ?_Menu 0072                       l11000 164D  
                     l11002 17D4                       l11010 177D                       l11004 17D5  
                     l11020 1789                       l11012 1781                       l11100 08DE  
                     l11006 17E5                       l11022 178F                       l11014 1784  
                     l11030 03D4                       l11110 08F2                       l11102 08E0  
                     l11008 17EE                       l11024 1795                       l11016 1785  
                     l11040 040C                       l11032 03E0                       l11112 08F7  
                     l11104 08E4                       l11120 0E6A                       l11200 0BB8  
                     l11026 179B                       l11018 1788                       l11050 0450  
                     l11042 0416                       l11034 03EB                       l11114 08FC  
                     l11106 08E8                       l11130 0E8B                       l11122 0E70  
                     l11210 0BDA                       l11202 0BBD                       l10500 1748  
                     l11028 17A1                       l11060 0486                       l11052 045C  
                     l11044 041C                       l11036 03F5                       l11116 08FD  
                     l11108 08ED                       l11140 0EA9                       l11132 0E8F  
                     l11124 0E71                       l11220 0BFC                       l11212 0BE8  
                     l11204 0BCA                       l11300 0232                       l10502 1749  
                     l10510 0A14                       l11070 04BD                       l11054 0463  
                     l11062 0493                       l11046 0422                       l11038 03FB  
                     l11118 08FE                       l11150 0EFD                       l11142 0EAA  
                     l11134 0E96                       l11126 0E78                       l11222 0BFD  
                     l11214 0BEA                       l11206 0BCE                       l11230 0D16  
                     l11310 0272                       l11302 0243                       l10360 1754  
                     l10504 174A                       l10520 0A31                       l10512 0A18  
                     l10352 16EE                       l11080 04F4                       l11064 049A  
                     l11072 04CA                       l11056 046F                       l11048 0445  
                     l11152 0F01                       l11144 0EC9                       l11136 0E9D  
                     l11128 0E79                       l11160 0552                       l11224 0BFF  
                     l11216 0BF6                       l11208 0BCF                       l11240 0D3C  
                     l11232 0D1E                       l11320 02CC                       l11312 0282  
                     l11304 0247                       l11400 0033                       l10362 1757  
                     l10522 0A33                       l10514 0A1E                       l10506 0A0B  
                     l10530 170E                       l10610 168C                       l10354 16F0  
                     l11082 0500                       l11074 04D1                       l11066 04A6  
                     l11058 047A                       l11090 16D3                       l11146 0EF2  
                     l11154 0F08                       l11138 0E9E                       l11170 05B1  
                     l11162 057A                       l11226 0C01                       l11218 0BF8  
                     l11250 0D71                       l11242 0D42                       l11234 0D2A  
                     l11330 02EF                       l11322 02D3                       l11314 0296  
                     l11306 024C                       l11410 0052                       l11402 0039  
                     l10364 1760                       l10516 0A2B                       l10508 0A0E  
                     l10524 0A34                       l10540 172A                       l10532 1710  
                     l10612 1694                       l11084 0506                       l11076 04DD  
                     l11068 04B1                       l11092 16DA                       l11148 0EF6  
                     l11180 060C                       l11172 05C2                       l11164 058B  
                     l11156 0533                       l11228 0C02                       l11252 0D77  
                     l11244 0D4D                       l11236 0D30                       l11260 0F1F  
                     l11340 0320                       l11332 0308                       l11324 02D4  
                     l11316 02A8                       l11308 0260                       l11420 0095  
                     l11412 0061                       l11404 003D                       l10366 1773  
                     l10518 0A2F                       l10526 0A45                       l10534 1719  
                     l10614 1698                       l10710 17AD                       l11086 050C  
                     l11078 04E8                       l11094 08D1                       l11190 064B  
                     l11182 0617                       l11174 05C8                       l11166 0591  
                     l11158 054C                       l11246 0D58                       l11238 0D37  
                     l11254 0D7D                       l11270 0F48                       l11262 0F31  
                     l11350 0350                       l11342 0326                       l11334 030E  
                     l11326 02E7                       l11318 02B8                       l11430 00E1  
                     l11422 00A4                       l11414 0066                       l11406 0048  
                     l10368 177C                       l10480 172C                       l10528 0A47  
                     l10536 1721                       l10616 169A                       l10608 168A  
                     l10712 17B1                       l10720 0B18                       l10800 0C7D  
                     l11088 16C5                       l11096 08D2                       l11192 0657  
                     l11184 0628                       l11176 05DD                       l11168 05A0  
                     l11248 0D65                       l11256 0DB2                       l11280 0F72  
                     l11272 0F4F                       l11264 0F37                       l11352 035C  
                     l11344 032F                       l11336 0314                       l11328 02EE  
                     l11360 03AB                       l11440 012C                       l11432 00F0  
                     l11424 00B3                       l11416 006E                       l11408 004B  
                     l10490 173B                       l10482 172F                       l10538 1727  
                     l10714 17BE                       l10730 0B32                       l10722 0B1C  
                     l11098 08D6                       l11194 0662                       l11186 062E  
                     l11178 0600                       l11282 0F7F                       l11274 0F55  
                     l11266 0F3D                       l11290 0FA5                       l11258 0F1B  
                     l11362 03BC                       l11354 036A                       l11346 0338  
                     l11338 0319                       l11370 0AE1                       l11450 017A  
                     l11442 013B                       l11434 00FF                       l11426 00C2  
                     l11418 0086                       l10492 173E                       l10484 1737  
                     l10660 16DB                       l10716 17CC                       l10708 17A8  
                     l10740 0B58                       l10732 0B38                       l10724 0B22  
                     l10900 0692                       l11196 0675                       l11188 063F  
                     l11284 0F8B                       l11276 0F5E                       l11292 0FDA  
                     l11268 0F43                       l11364 03C1                       l11356 0370  
                     l11348 0343                       l11380 0AFC                       l11372 0AE5  
                     l11460 01E3                       l11452 0192                       l11444 014D  
                     l11436 010E                       l11428 00D1                       l10494 1741  
                     l10486 1738                       l10670 16EC                       l10662 16E1  
                     l10718 17D3                       l10734 0B49                       l10726 0B26  
                     l10742 0B60                       l10750 0A98                       l10830 09E8  
                     l10910 06C2                       l10902 0699                       l11198 0676  
                     l11294 0FEB                       l11286 0F99                       l11278 0F67  
                     l11358 0376                       l11382 0B00                       l11374 0AE6  
                     l11366 0AD2                       l11454 01B0                       l11446 0166  
                     l11462 01E4                       l11438 011D                       l11470 020D  
                     l11390 001B                       l10496 1744                       l10488 173A  
                     l10672 16EE                       l10664 16E3                       l10744 0B67  
                     l10736 0B4F                       l10728 0B2D                       l10760 0ABB  
                     l10752 0A9F                       l10832 09E9                       l10824 09D0  
                     l10840 16AF                       l10920 06D7                       l10912 06C6  
                     l10904 06A4                       l11296 0FF0                       l11288 0F9F  
                     l11384 0B03                       l11376 0AF5                       l11368 0ADA  
                     l11456 01B5                       l11448 0175                       l11464 01FB  
                     l11472 0223                       l11392 001D                       l10498 1745  
                     l10674 16F1                       l10666 16E5                       l10738 0B51  
                     l10762 0AC2                       l10754 0AA4                       l10746 0A8C  
                     l10770 0C1D                       l10826 09E5                       l10834 09FA  
                     l10842 16B2                       l10850 169E                       l10930 0700  
                     l10922 06DE                       l10914 06CA                       l10906 06A5  
                     l11298 022E                       l11378 0AFB                       l11386 0B04  
                     l11466 0205                       l11458 01CD                       l11394 0023  
                     l10668 16E6                       l10756 0AAA                       l10748 0A94  
                     l10764 0ACA                       l10780 0C3A                       l10772 0C26  
                     l10836 09FE                       l10828 09E7                       l10844 16B6  
                     l10852 16A1                       l10860 1667                       l10940 071E  
                     l10932 0707                       l10924 06DF                       l10916 06CE  
                     l10908 06BA                       l11468 020C                       l11396 0027  
                     l11388 0015                       l10766 0AD1                       l10758 0AB4  
                     l10790 0C5D                       l10782 0C41                       l10774 0C2A  
                     l10838 0A07                       l10846 16BA                       l10854 16A3  
                     l10862 1669                       l10870 0B6C                       l10942 0752  
                     l10934 070D                       l10926 06FB                       l10918 06D4  
                     l10950 077E                       l11398 0028                       l10792 0C64  
                     l10784 0C46                       l10776 0C30                       l10768 0C16  
                     l10848 16BE                       l10856 16A4                       l10864 166A  
                     l10880 0B83                       l10872 0B71                       l10952 0783  
                     l10944 0759                       l10936 0714                       l10928 06FC  
                     l10960 08C5                       l10786 0C4C                       l10778 0C36  
                     l10794 0C6C                       l10858 1664                       l10866 16F2  
                     l10890 0BB2                       l10882 0B8B                       l10874 0B78  
                     l10946 075E                       l10938 0719                       l10962 08C9  
                     l10954 08AF                       l10970 0994                       l10796 0C70  
                     l10788 0C56                       l10892 0BB3                       l10884 0BA8  
                     l10876 0B7F                       l10868 0B68                       l10948 076A  
                     l10964 08CD                       l10956 08B1                       l10980 09B4  
                     l10972 099A                       l10798 0C76                       l10894 0BB4  
                     l10886 0BAE                       l10878 0B82                       l10966 08CE  
                     l10958 08BB                       l10982 09BC                       l10974 099E  
                     l10990 07B8                       l10888 0BB1                       l10896 0687  
                     l10968 08D0                       l10984 09C4                       l10976 09A6  
                     l10992 07D7                       l10898 068C                       l10978 09AC  
                     l10986 0784                       l10994 095F                       l10988 0793  
                     l10996 0993                       l10998 164C        __size_of_calibrateIR 005E  
                     ?_isr1 0072                       ?_main 0072                       ?_init 0072  
                     _EEADR 010D                       STR_10 0899                       STR_11 08A9  
                     STR_12 089D                       STR_13 083A                       STR_14 082A  
                     STR_15 0891                       STR_16 0885                       STR_17 0895  
                     STR_18 081A                       STR_19 0847             __end_of___awmod 0C7E  
                     _CARRY 0018             __end_of___lwdiv 0B68             __end_of___lwmod 0AD2  
                     _RCREG 001A                       _SPBRG 0099                       _PORTA 0005  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
                     _Disp1 00B0                       _Disp2 00B2      lcd_write_data@databyte 0022  
        i1___lwmod@dividend 0074                       main@a 0063                       _total 00C2  
            __pbitbssCOMMON 0380                       pclath 000A                 _turnlowByte 00D6  
           ?_lcd_write_data 0072           ?_adc_read_channel 0072                       status 0003  
                     wtemp0 007E             __end_of_sprintf 0784            __end_of_Debounce 0D16  
        __size_ofi1___lwmod 0044          ??_adc_read_channel 0026            ?_readAvgDistance 0072  
          robotFollow@temp1 005C            robotFollow@speed 0055                __end_of_Menu 0A48  
__size_of_lcd_write_control 0014            _shortMenuStrings 00DD                __end_of_isr1 0E6A  
              __end_of_main 022E                __end_of_init 0900             rotate@direction 0025  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0034  
                    ??_isr1 0078                      ??_main 005E                      ??_init 0023  
       __end_of_ReadButtons 095F               Menu@BTN_input 0020                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
          __end_of_adc_read 177D                 ?_ChargeMode 0072                      i1l2220 0E11  
                    i1l2221 0DE5                      i1l2222 0E02                      i1l2223 0E10  
                    i1l2224 0E39                      i1l2225 0E38                      i1l2226 0E5E  
                    i1l2227 0E5D                      i1l2228 0E5E                      i1l4520 0CD8  
                    i1l4512 0C98                      i1l4521 0CF2                      i1l4513 0C97  
                    i1l4522 0CF1                      i1l4514 0C9C                      i1l4530 093C  
                    i1l4523 0CF6                      i1l4515 0CB6                      i1l4531 095E  
                    i1l4524 0D10                      i1l4516 0CB5                      i1l4532 0944  
                    i1l4525 0D0F                      i1l4517 0CBA                      i1l4533 094C  
                    i1l4526 0D15                      i1l4518 0CD4                      i1l4534 0954  
                    i1l4527 0D15                      i1l4519 0CD3                      i1l4535 095C  
                    i1l7560 0A84                      i1l7561 0A5E                      i1l7562 0A52  
                    i1l7563 0A63                      i1l7564 0A64                      i1l7565 0A75  
                    i1l7566 0A83                      i1l7567 0A8B                      u400_20 0C90  
                    u400_21 0C8F                      u401_20 0C94                      u401_21 0C93  
                    u410_20 0CEE                      u402_20 0CA2                      u410_21 0CED  
                    u402_21 0CA1                      u411_20 0CFC                      u403_20 0CAE  
                    u411_21 0CFB                      u403_21 0CAD                      u412_20 0D08  
                    u404_20 0CB2                      u412_21 0D07                      u404_21 0CB1  
                    u413_20 0D0C                      u405_20 0CC0                      u413_21 0D0B  
                    u405_21 0CBF                      u406_20 0CCC                      u406_21 0CCB  
                    u407_20 0CD0                      u407_21 0CCF                      u408_20 0CDE  
                    u408_21 0CDD                      u409_20 0CEA                      u409_21 0CE9  
                    u450_20 0A6E                      u370_20 0E43                      u450_21 0A6D  
                    u370_21 0E42                      u450_25 0A6A                      u371_20 0E59  
                    u363_20 0DC2                      u371_21 0E58                      u363_21 0DC1  
                    u451_25 0A76                      u452_20 0A82                      u372_20 0938  
                    u364_20 0DE3                      u452_21 0A81                      u372_21 0937  
                    u364_21 0DE2                      u373_20 0940                      u365_20 0DFC  
                    u373_21 093F                      u365_21 0DFB                      u374_20 0948  
                    u366_20 0E07                      u374_21 0947                      u366_21 0E06  
               _DistLowByte 00CB                      u447_20 0A4E                      u375_20 0950  
                    u367_20 0E17                      u447_21 0A4D                      u375_21 094F  
                    u367_21 0E16                      u376_20 0958                      u368_20 0E2F  
                    u376_21 0957                      u368_21 0E2E                      u448_25 0A53  
                    u449_20 0A62                      u369_20 0E3D                      u449_21 0A61  
                    u369_21 0E3C                      u399_20 0C84                      u399_21 0C83  
                    _TMR0IE 005D                      _TMR0IF 005A                      _SSPCON 0014  
                    _SSPBUF 0013                  _UpReleased 038C            __end_of_lcd_init 17A8  
                    _adcVal 0066             _UpDebounceCount 00D0             RobotDrive@speed 0022  
                _RobotDrive 0994                      ___wmul 17A8                   ??___awmod 0024  
              _turnhighByte 00D5                   ??___lwdiv 0024                   ??___lwmod 002C  
          __end_of_init_adc 16C5              ??_readDistance 002A             ___awmod@divisor 0020  
  __end_of_lcd_write_string 1800             ___awmod@counter 0025                ?_robotFollow 0053  
                    _rotate 0B68                      _rxfifo 00A0                      clrloop 07F9  
                    _txfifo 01A0                      _rxiptr 006C                      _rxoptr 006D  
               _BumpSensors 006A                      _txiptr 006E                      _txoptr 006F  
          __end_of_ser_init 1754            __end_of_ser_isrx 16F2           __end_ofi1___lwmod 0A8C  
                    saved_w 007E               main@shortwall 0061                _AngleLowByte 00C7  
               _LeftPressed 0384      RobotDrive@speedlowByte 0027                   ??_sprintf 0033  
               _DownPressed 0382           lcd_write_string@s 0027                _CliffSensors 00C9  
            __pcstackCOMMON 0072                __pidataBANK1 1654                 _ReadButtons 092F  
       __size_of_ChargeMode 0046            ??_lcd_set_cursor 0023                   ?_Debounce 0072  
             _buttonPressed 007D                  __pbssBANK0 0066                  __pbssBANK1 00A0  
                __pbssBANK3 0190           _DownDebounceCount 00CC          _RightDebounceCount 00CF  
                __pmaintext 0015                 ?_RobotDrive 0022                     ?___wmul 0020  
                __pintentry 0004                _DistHighByte 00CA       __end_of_UpdateDisplay 0684  
        __size_of_ser_getch 0022                   ?_adc_read 0020                     ?_rotate 0023  
        __size_of_ser_putch 0021          __size_of_robo_init 0019                     i1l10400 0DC3  
                   i1l10410 0DFC                     i1l10402 0DCD                     i1l10420 0E17  
                   i1l10412 0DFD                     i1l10404 0DCE                     i1l10430 0E3D  
                   i1l10422 0E1F                     i1l10414 0E02                     i1l10406 0DE3  
                   i1l10440 0E59                     i1l10432 0E43                     i1l10424 0E27  
                   i1l10416 0E07                     i1l10408 0DE5                     i1l10450 093B  
                   i1l10442 092F                     i1l10434 0E4B                     i1l10426 0E2F  
                   i1l10418 0E11                     i1l10620 0C84                     i1l10460 0949  
                   i1l10452 0940                     i1l10444 0934                     i1l10436 0E4F  
                   i1l10428 0E39                     i1l10630 0CA8                     i1l10622 0C8A  
                   i1l10470 0958                     i1l10462 094B                     i1l10454 0941  
                   i1l10446 0938                     i1l10438 0E53                     i1l10640 0CCC  
                   i1l10632 0CAE                     i1l10624 0C90                     i1l10472 0959  
                   i1l10464 0950                     i1l10456 0943                     i1l10448 0939  
                   i1l10650 0CEE                     i1l10642 0CD0                     i1l10634 0CB2  
                   i1l10626 0C94                     i1l10618 0C7E                     i1l10810 0A5E  
                   i1l10802 0A48                     i1l10474 095B                     i1l10466 0951  
                   i1l10458 0948                     i1l10652 0CFC                     i1l10644 0CDE  
                   i1l10636 0CC0                     i1l10628 0CA2                     i1l10812 0A64  
                   i1l10804 0A4E                     i1l10820 0A84                     i1l10476 095C  
                   i1l10468 0953                     i1l10396 0DBE                     i1l10654 0D02  
                   i1l10646 0CE4                     i1l10638 0CC6                     i1l10822 0A8B  
                   i1l10814 0A6E                     i1l10806 0A52                     i1l10478 095E  
                   i1l10398 0DC2                     i1l10656 0D08                     i1l10648 0CEA  
                   i1l10816 0A75                     i1l10808 0A59                     i1l10658 0D0C  
                   i1l10818 0A7C          __size_of_robotTurn 0074                  ??_Debounce 0072  
          ??_lcd_write_data 0020                   ?_lcd_init 0072                     _SSPSTAT 0094  
      __end_of_readDistance 16DB                   ?_init_adc 0072                   ?_ser_init 0072  
                 ?_ser_isrx 0072            RobotDrive@radius 0024               ??_calibrateIR 0053  
                   ___awmod 0C16             __size_of___wmul 002C                     ___lwdiv 0B18  
                   ___lwmod 0A8C   __size_of_adc_read_channel 003B                  ??_adc_read 0022  
           __size_of_rotate 0050                     _dpowers 0810                __size_of_abs 0035  
      __size_of_robotFollow 01A3            ___awmod@dividend 0022                     _lowByte 00D3  
                   _ser_tmp 00D4                     _sprintf 0684                  ??_lcd_init 0023  
       __size_of_RobotDrive 0039        end_of_initialization 092B               _AngleHighByte 00C6  
              ??_ChargeMode 0053          robot_read@readType 0024           __end_of_ser_getch 08D1  
                   init_ram 1678                  ??_init_adc 0020     __size_of_robotMoveSpeed 00E5  
         __end_of_ser_putch 172C     RobotDrive@speedhighByte 0028           __end_of_robo_init 170B  
              _LeftReleased 0385           __end_of_robotTurn 07F8                  ??_ser_init 0020  
                ??_ser_isrx 0020                     rotate@i 0028                _DownReleased 0383  
             _RightReleased 038A    __size_of_readAvgDistance 00B1                  _robot_read 03D1  
         ?_lcd_write_string 0027          __end_of_ChargeMode 0B18         __end_of_calibrateIR 0C16  
        ??_lcd_write_string 0029                 AT25256A@CS0 0038                 AT25256A@CS1 0039  
         adc_read@adc_value 0024     __size_of_robotTurnSpeed 00A8                   i1___lwmod 0A48  
                _totalSteps 00C4                  main@choice 0065               ?_spi_transfer 0072  
               _VwallSensor 006B               _CenterPressed 0380                ?_ReadButtons 0072  
            __end_of___wmul 17D4           i1___lwmod@divisor 0072           i1___lwmod@counter 0077  
            __end_of_rotate 0BB8         start_initialization 0900      UpdateDisplay@LCDOutput 0043  
               __end_of_abs 0994       __size_of_readDistance 0016           __size_of_Debounce 0098  
                ?i1___lwmod 0072          _TotalDistTravelled 00B8              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038B                ??_RobotDrive 0026  
            _RTC_FLAG_250MS 0387              _RTC_FLAG_500MS 0388                    ??___wmul 0024  
            rotate@numsteps 0023                 _calibrateIR 0BB8                 __pdataBANK1 00D7  
          _adc_read_channel 09CD                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 16C5           __size_of_adc_read 0029                 __pbssCOMMON 007D  
         ??_readAvgDistance 002E               __pcstackBANK0 0020      robotMoveSpeed@distance 0053  
        __end_of_RobotDrive 09CD           __size_of_lcd_init 002B              _robotMoveSpeed 0F1B  
               sprintf@_val 0039                 sprintf@flag 0037                 sprintf@prec 0038  
              _current_step 00E3            readAvgDistance@i 0047            readAvgDistance@j 0046  
         __size_of_init_adc 0016            ___lwdiv@dividend 0022                 _angleTurned 00BA  
                  ?___awmod 0020                   __ptext951 0AD2                   __ptext960 03D1  
                 __ptext952 022E                   __ptext961 177D                   __ptext953 0F1B  
                 __ptext970 16F2                   __ptext962 17D4                   __ptext954 0D16  
                 __ptext971 1661                   __ptext963 1649                   __ptext955 0BB8  
                 __ptext980 1687                   __ptext972 169B                   __ptext964 095F  
                 __ptext956 0533                   __ptext981 170B                   __ptext973 16AF  
                 __ptext965 0784                   __ptext957 0E6A                   __ptext982 0A08  
                 __ptext974 09CD                   __ptext966 0994                   __ptext958 08D1  
                 __ptext983 172C                   __ptext975 0C16                   __ptext967 08AF  
                 __ptext959 16C5                   __ptext984 1754                   __ptext976 0A8C  
                 __ptext968 0684                   __ptext985 0DBE                   __ptext977 0B18  
                 __ptext969 0B68                   __ptext986 092F                   __ptext978 17A8  
                 __ptext987 0A48                   __ptext979 16DB                   __ptext988 0C7E  
                 __ptext989 0000           __size_of_ser_init 0028           __size_of_ser_isrx 0017  
                  ?___lwdiv 0020                    ?___lwmod 0028                   __pstrings 0800  
                 _dist_high 00BE         readDistance@readVal 002C              _robotTurnSpeed 0D16  
       robotTurnSpeed@angle 0053         robotTurnSpeed@temp1 005A         robotTurnSpeed@speed 0055  
                ser_getch@c 0021            ___lwdiv@quotient 0025                 ??i1___lwmod 0076  
                  ?_sprintf 002E      __end_of_robotMoveSpeed 1000     __size_of_lcd_set_cursor 000B  
         interrupt_function 0004      __size_of_UpdateDisplay 0151              ___wmul@product 0024  
       __size_of_robot_read 0162                  ser_putch@c 0021                   _ser_getch 08AF  
                 _ser_putch 170B                   _robo_init 16F2                   _robotTurn 0784  
              _RightPressed 0389        __size_of_ReadButtons 0030               ??_robotFollow 0059  
      __end_of_spi_transfer 169B      __end_of_robotTurnSpeed 0DBE                 __stringbase 080F  
         ___wmul@multiplier 0020            spi_transfer@data 0022            spi_transfer@temp 0021  
                  _Debounce 0C7E           _LeftDebounceCount 00CD             ?_robotMoveSpeed 0053  
 __size_of_lcd_write_string 002C     __size_of_lcd_write_data 0013                  ?_ser_getch 0072  
                ?_ser_putch 0072     adc_read_channel@channel 0027                  ?_robo_init 0072  
                 init_fetch 1674                  ?_robotTurn 0022            __size_of___awmod 0068  
          __size_of___lwdiv 0050            __size_of___lwmod 0046               _UpdateDisplay 0533  
                  _adc_read 1754             ?_robotTurnSpeed 0053                 _currentMenu 00D1  
           ___lwdiv@divisor 0020         __end_of_robotFollow 03D1             ___lwdiv@counter 0027  
               _menuStrings 00D7                    _highByte 00D2                    _lcd_init 177D  
                  _dist_low 00C0            __size_of_sprintf 0100    __end_of_adc_read_channel 0A08  
 lcd_write_control@databyte 0022               __size_of_Menu 0040                    _init_adc 16AF  
             __size_of_isr1 00AC               __size_of_main 0219               __size_of_init 002F  
                  clear_ram 07F8                    _ser_init 172C        robotFollow@AdcTarget 0057  
                  _ser_isrx 16DB             _readAvgDistance 0E6A                ?_calibrateIR 0072  
            ?_UpdateDisplay 0072                ??_robot_read 0022         _CenterDebounceCount 00C8  
              _RTC_FLAG_1MS 0386          UpdateDisplay@F1250 0190                    intlevel1 0000  
            _lcd_set_cursor 1649                   sprintf@ap 0036                   sprintf@sp 003D  
            robotTurn@angle 0022            ___lwmod@dividend 002A          __end_of_robot_read 0533  
                 stringcode 080A                 ??_ser_getch 0020                 ??_ser_putch 0020  
             _distTravelled 00BC                 ??_robo_init 0022       __size_of_spi_transfer 0014  
               ??_robotTurn 0024           _lcd_write_control 169B                 _robotFollow 022E  
        ?_lcd_write_control 0072                  _OPTION_REG 0081                    sprintf@c 003E  
                  sprintf@f 002E         robotMoveSpeed@temp1 005A         robotMoveSpeed@speed 0055  
           ___lwmod@divisor 0028                  _ROBOTerror 00CE             ___lwmod@counter 002D  
                  stringdir 080A                    stringtab 0800         ??_lcd_write_control 0020  
    __end_of_lcd_set_cursor 1654            _lcd_write_string 17D4    RobotDrive@radiushighByte 002A  
              _spi_transfer 1687                 _RTC_Counter 00B6     __end_of_readAvgDistance 0F1B  
            _lcd_write_data 1661  
