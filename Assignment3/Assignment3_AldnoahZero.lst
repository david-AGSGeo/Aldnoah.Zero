

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed May 20 15:41:50 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 52 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robotLoadSong
    48                           	FNCALL	_main,_robot_read
    49                           	FNCALL	_main,_readAvgDistance
    50                           	FNCALL	_main,_UpdateDisplay
    51                           	FNCALL	_main,_Menu
    52                           	FNCALL	_main,_calibrateIR
    53                           	FNCALL	_main,_Init_Follow_IR
    54                           	FNCALL	_main,_robotFollow
    55                           	FNCALL	_main,_RobotDrive
    56                           	FNCALL	_main,_robotTurnSpeed
    57                           	FNCALL	_main,_robotMoveSpeed
    58                           	FNCALL	_main,_ser_putch
    59                           	FNCALL	_main,_rotate
    60                           	FNCALL	_main,_robot_turnRight
    61                           	FNCALL	_main,_ChargeMode
    62                           	FNCALL	_Init_Follow_IR,_calibrateIR
    63                           	FNCALL	_Init_Follow_IR,_rotate
    64                           	FNCALL	_ChargeMode,_ser_putch
    65                           	FNCALL	_ChargeMode,_RobotBattRead
    66                           	FNCALL	_ChargeMode,_UpdateDisplay
    67                           	FNCALL	_robot_turnRight,_RobotDrive
    68                           	FNCALL	_robot_turnRight,_readAvgDistance
    69                           	FNCALL	_robot_turnRight,_ser_putch
    70                           	FNCALL	_robot_turnRight,_robot_read
    71                           	FNCALL	_robot_turnRight,_UpdateDisplay
    72                           	FNCALL	_robot_turnRight,___wmul
    73                           	FNCALL	_robot_turnRight,___awdiv
    74                           	FNCALL	_robot_turnRight,_abs
    75                           	FNCALL	_robotMoveSpeed,_RobotDrive
    76                           	FNCALL	_robotMoveSpeed,_robot_read
    77                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    78                           	FNCALL	_robotMoveSpeed,_abs
    79                           	FNCALL	_robotTurnSpeed,_robotTurn
    80                           	FNCALL	_robotTurnSpeed,_robot_read
    81                           	FNCALL	_robotTurnSpeed,_UpdateDisplay
    82                           	FNCALL	_robotTurnSpeed,_abs
    83                           	FNCALL	_robotFollow,_RobotDrive
    84                           	FNCALL	_robotFollow,_readAvgDistance
    85                           	FNCALL	_robotFollow,_rotate
    86                           	FNCALL	_robotFollow,_robot_read
    87                           	FNCALL	_robotFollow,_UpdateDisplay
    88                           	FNCALL	_calibrateIR,_rotate
    89                           	FNCALL	_calibrateIR,_UpdateDisplay
    90                           	FNCALL	_UpdateDisplay,_lcd_write_control
    91                           	FNCALL	_UpdateDisplay,_sprintf
    92                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    93                           	FNCALL	_UpdateDisplay,_lcd_write_string
    94                           	FNCALL	_UpdateDisplay,___awmod
    95                           	FNCALL	_readAvgDistance,_readDistance
    96                           	FNCALL	_readAvgDistance,___lwdiv
    97                           	FNCALL	_readAvgDistance,_ADCconvert
    98                           	FNCALL	_init,_ser_init
    99                           	FNCALL	_init,_init_adc
   100                           	FNCALL	_init,_lcd_init
   101                           	FNCALL	_init,_robo_init
   102                           	FNCALL	_readDistance,_adc_read_channel
   103                           	FNCALL	_RobotBattRead,_ser_putch
   104                           	FNCALL	_RobotBattRead,_ser_getch
   105                           	FNCALL	_robot_read,_ser_putch
   106                           	FNCALL	_robot_read,_ser_getch
   107                           	FNCALL	_lcd_init,_lcd_write_control
   108                           	FNCALL	_lcd_write_string,_lcd_write_data
   109                           	FNCALL	_lcd_set_cursor,_lcd_write_control
   110                           	FNCALL	_abs,___wmul
   111                           	FNCALL	_robotTurn,_ser_putch
   112                           	FNCALL	_ser_getch,_ser_isrx
   113                           	FNCALL	_sprintf,___lwdiv
   114                           	FNCALL	_sprintf,___lwmod
   115                           	FNCALL	_ADCconvert,___wmul
   116                           	FNCALL	_ADCconvert,___lwdiv
   117                           	FNCALL	_rotate,_spi_transfer
   118                           	FNCALL	_RobotDrive,_ser_putch
   119                           	FNCALL	_robotLoadSong,_ser_putch
   120                           	FNCALL	_robo_init,_ser_putch
   121                           	FNCALL	_adc_read_channel,_adc_read
   122                           	FNROOT	_main
   123                           	FNCALL	_isr1,i1___lwmod
   124                           	FNCALL	_isr1,_ReadButtons
   125                           	FNCALL	_ReadButtons,_Debounce
   126                           	FNCALL	intlevel1,_isr1
   127                           	global	intlevel1
   128                           	FNROOT	intlevel1
   129                           	global	_menuStrings
   130                           	global	_shortMenuStrings
   131                           	global	_current_step
   132                           psect	idataBANK1,class=CODE,space=0,delta=2
   133                           global __pidataBANK1
   134  1EFD                     __pidataBANK1:
   135                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   136                           	line	49
   137                           
   138                           ;initializer for _menuStrings
   139  1EFD  3453               	retlw	(STR_1-__stringbase)&0ffh
   140  1EFE  344A               	retlw	(STR_2-__stringbase)&0ffh
   141  1EFF  3465               	retlw	(STR_3-__stringbase)&0ffh
   142  1F00  346E               	retlw	(STR_4-__stringbase)&0ffh
   143  1F01  345C               	retlw	(STR_5-__stringbase)&0ffh
   144  1F02  3441               	retlw	(STR_6-__stringbase)&0ffh
   145                           	line	50
   146                           
   147                           ;initializer for _shortMenuStrings
   148  1F03  3497               	retlw	(STR_7-__stringbase)&0ffh
   149  1F04  349B               	retlw	(STR_8-__stringbase)&0ffh
   150  1F05  3483               	retlw	(STR_9-__stringbase)&0ffh
   151  1F06  348F               	retlw	(STR_10-__stringbase)&0ffh
   152  1F07  349F               	retlw	(STR_11-__stringbase)&0ffh
   153  1F08  3493               	retlw	(STR_12-__stringbase)&0ffh
   154                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   155                           	line	45
   156                           
   157                           ;initializer for _current_step
   158  1F09  343C               	retlw	03Ch
   159                           	global	_dpowers
   160                           psect	strings,class=STRING,delta=2
   161                           global __pstrings
   162  073C                     __pstrings:
   163                           ;	global	stringdir,stringtab,__stringbase
   164  073C                     stringtab:
   165                           ;	String table - string pointers are 1 byte each
   166  073C  1BFF               	btfsc	(btemp+1),7
   167  073D  2F46               	ljmp	stringcode
   168  073E  1383               	bcf	status,7
   169  073F  187F               	btfsc	(btemp+1),0
   170  0740  1783               	bsf	status,7
   171  0741  0800               	movf	indf,w
   172  0742  0A84               	incf fsr
   173  0743  1903               skipnz
   174  0744  0AFF               incf btemp+1
   175  0745  0008               	return
   176  0746                     stringcode:stringdir:
      + 0746                     stringdir:	
   177  0746  3007               movlw high(stringdir)
   178  0747  008A               movwf pclath
   179  0748  0804               movf fsr,w
   180  0749  0A84               incf fsr
   181  074A  0782               	addwf pc
   182  074B                     __stringbase:
   183  074B  3400               	retlw	0
   184                           psect	strings
   185                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   186                           	line	350
   187  074C                     _dpowers:
   188  074C  3401               	retlw	01h
   189  074D  3400               	retlw	0
   190                           
   191  074E  340A               	retlw	0Ah
   192  074F  3400               	retlw	0
   193                           
   194  0750  3464               	retlw	064h
   195  0751  3400               	retlw	0
   196                           
   197  0752  34E8               	retlw	0E8h
   198  0753  3403               	retlw	03h
   199                           
   200  0754  3410               	retlw	010h
   201  0755  3427               	retlw	027h
   202                           
   203                           	global	_dpowers
   204                           	global	_adcVal
   205                           	global	_BumpSensors
   206                           	global	_VwallSensor
   207                           	global	UpdateDisplay@F1264
   208                           	global	_txfifo
   209                           	global	_buttonPressed
   210                           	global	_CenterPressed
   211                           	global	_CenterReleased
   212                           	global	_DownPressed
   213                           	global	_DownReleased
   214                           	global	_LeftPressed
   215                           	global	_LeftReleased
   216                           	global	_RTC_FLAG_1MS
   217                           	global	_RTC_FLAG_250MS
   218                           	global	_RTC_FLAG_500MS
   219                           	global	_RightPressed
   220                           	global	_RightReleased
   221                           	global	_UpPressed
   222                           	global	_UpReleased
   223                           	global	_rxfifo
   224                           	global	_BattCharge
   225                           	global	_BattState
   226                           	global	_Disp1
   227                           	global	_Disp2
   228                           	global	_IRdistance
   229                           	global	_RTC_Counter
   230                           	global	_TotalDistTravelled
   231                           	global	_angleTurned
   232                           	global	_distTravelled
   233                           	global	_dist_high
   234                           	global	_dist_low
   235                           	global	_pos
   236                           	global	_total
   237                           	global	_totalSteps
   238                           	global	_AngleHighByte
   239                           	global	_AngleLowByte
   240                           	global	_CenterDebounceCount
   241                           	global	_CliffSensors
   242                           	global	_DistHighByte
   243                           	global	_DistLowByte
   244                           	global	_DownDebounceCount
   245                           	global	_LeftDebounceCount
   246                           	global	_ROBOTerror
   247                           	global	_RightDebounceCount
   248                           	global	_RobotPos
   249                           	global	_UpDebounceCount
   250                           	global	_VictimSensor
   251                           	global	_currentMenu
   252                           	global	_highByte
   253                           	global	_lowByte
   254                           	global	_rxiptr
   255                           	global	_rxoptr
   256                           	global	_ser_tmp
   257                           	global	_turnhighByte
   258                           	global	_turnlowByte
   259                           	global	_txiptr
   260                           	global	_txoptr
   261                           	global	_ADCON0
   262  001F                     _ADCON0	set	31
   263                           	global	_ADRESH
   264  001E                     _ADRESH	set	30
   265                           	global	_PORTA
   266  0005                     _PORTA	set	5
   267                           	global	_PORTD
   268  0008                     _PORTD	set	8
   269                           	global	_PORTE
   270  0009                     _PORTE	set	9
   271                           	global	_RCREG
   272  001A                     _RCREG	set	26
   273                           	global	_SSPBUF
   274  0013                     _SSPBUF	set	19
   275                           	global	_SSPCON
   276  0014                     _SSPCON	set	20
   277                           	global	_TMR0
   278  0001                     _TMR0	set	1
   279                           	global	_TXREG
   280  0019                     _TXREG	set	25
   281                           	global	AT25256A@CS0
   282  0038                     AT25256A@CS0	set	56
   283                           	global	AT25256A@CS1
   284  0039                     AT25256A@CS1	set	57
   285                           	global	_CARRY
   286  0018                     _CARRY	set	24
   287                           	global	_CHS0
   288  00FB                     _CHS0	set	251
   289                           	global	_CHS1
   290  00FC                     _CHS1	set	252
   291                           	global	_CHS2
   292  00FD                     _CHS2	set	253
   293                           	global	_CREN
   294  00C4                     _CREN	set	196
   295                           	global	_GIE
   296  005F                     _GIE	set	95
   297                           	global	_GO
   298  00FA                     _GO	set	250
   299                           	global	_OERR
   300  00C1                     _OERR	set	193
   301                           	global	_PEIE
   302  005E                     _PEIE	set	94
   303                           	global	_RB0
   304  0030                     _RB0	set	48
   305                           	global	_RB2
   306  0032                     _RB2	set	50
   307                           	global	_RB3
   308  0033                     _RB3	set	51
   309                           	global	_RB4
   310  0034                     _RB4	set	52
   311                           	global	_RB5
   312  0035                     _RB5	set	53
   313                           	global	_RB6
   314  0036                     _RB6	set	54
   315                           	global	_RC0
   316  0038                     _RC0	set	56
   317                           	global	_RC1
   318  0039                     _RC1	set	57
   319                           	global	_RC2
   320  003A                     _RC2	set	58
   321                           	global	_RCIF
   322  0065                     _RCIF	set	101
   323                           	global	_RE0
   324  0048                     _RE0	set	72
   325                           	global	_RE1
   326  0049                     _RE1	set	73
   327                           	global	_RE2
   328  004A                     _RE2	set	74
   329                           	global	_RX9
   330  00C6                     _RX9	set	198
   331                           	global	_SPEN
   332  00C7                     _SPEN	set	199
   333                           	global	_SSPIF
   334  0063                     _SSPIF	set	99
   335                           	global	_TMR0IE
   336  005D                     _TMR0IE	set	93
   337                           	global	_TMR0IF
   338  005A                     _TMR0IF	set	90
   339                           	global	_TXIF
   340  0064                     _TXIF	set	100
   341                           	global	_ADCON1
   342  009F                     _ADCON1	set	159
   343                           	global	_ADRESL
   344  009E                     _ADRESL	set	158
   345                           	global	_OPTION_REG
   346  0081                     _OPTION_REG	set	129
   347                           	global	_SPBRG
   348  0099                     _SPBRG	set	153
   349                           	global	_SSPSTAT
   350  0094                     _SSPSTAT	set	148
   351                           	global	_TRISA
   352  0085                     _TRISA	set	133
   353                           	global	_TRISB
   354  0086                     _TRISB	set	134
   355                           	global	_TRISC
   356  0087                     _TRISC	set	135
   357                           	global	_TRISD
   358  0088                     _TRISD	set	136
   359                           	global	_TRISE
   360  0089                     _TRISE	set	137
   361                           	global	_BRGH
   362  04C2                     _BRGH	set	1218
   363                           	global	_RCIE
   364  0465                     _RCIE	set	1125
   365                           	global	_SYNC
   366  04C4                     _SYNC	set	1220
   367                           	global	_TX9
   368  04C6                     _TX9	set	1222
   369                           	global	_TXEN
   370  04C5                     _TXEN	set	1221
   371                           	global	_TXIE
   372  0464                     _TXIE	set	1124
   373                           	global	_EEADR
   374  010D                     _EEADR	set	269
   375                           	global	_EEDATA
   376  010C                     _EEDATA	set	268
   377                           	global	_EECON1
   378  018C                     _EECON1	set	396
   379                           	global	_EECON2
   380  018D                     _EECON2	set	397
   381                           	global	_RD
   382  0C60                     _RD	set	3168
   383                           	global	_WR
   384  0C61                     _WR	set	3169
   385                           	global	_WREN
   386  0C62                     _WREN	set	3170
   387                           	
   388  0756                     STR_18:	
   389  0756  3420               	retlw	32	;' '
   390  0757  3443               	retlw	67	;'C'
   391  0758  3468               	retlw	104	;'h'
   392  0759  3461               	retlw	97	;'a'
   393  075A  3472               	retlw	114	;'r'
   394  075B  3467               	retlw	103	;'g'
   395  075C  3469               	retlw	105	;'i'
   396  075D  346E               	retlw	110	;'n'
   397  075E  3467               	retlw	103	;'g'
   398  075F  3420               	retlw	32	;' '
   399  0760  344D               	retlw	77	;'M'
   400  0761  346F               	retlw	111	;'o'
   401  0762  3464               	retlw	100	;'d'
   402  0763  3465               	retlw	101	;'e'
   403  0764  3420               	retlw	32	;' '
   404  0765  3400               	retlw	0
   405                           psect	strings
   406                           	
   407  0766                     STR_14:	
   408  0766  345A               	retlw	90	;'Z'
   409  0767  3465               	retlw	101	;'e'
   410  0768  3472               	retlw	114	;'r'
   411  0769  346F               	retlw	111	;'o'
   412  076A  3420               	retlw	32	;' '
   413  076B  3453               	retlw	83	;'S'
   414  076C  3474               	retlw	116	;'t'
   415  076D  3465               	retlw	101	;'e'
   416  076E  3470               	retlw	112	;'p'
   417  076F  345F               	retlw	95	;'_'
   418  0770  344D               	retlw	77	;'M'
   419  0771  346F               	retlw	111	;'o'
   420  0772  3474               	retlw	116	;'t'
   421  0773  346F               	retlw	111	;'o'
   422  0774  3472               	retlw	114	;'r'
   423  0775  3400               	retlw	0
   424                           psect	strings
   425                           	
   426  0776                     STR_13:	
   427  0776  3449               	retlw	73	;'I'
   428  0777  3452               	retlw	82	;'R'
   429  0778  343A               	retlw	58	;':'
   430  0779  3425               	retlw	37	;'%'
   431  077A  3464               	retlw	100	;'d'
   432  077B  3463               	retlw	99	;'c'
   433  077C  346D               	retlw	109	;'m'
   434  077D  3420               	retlw	32	;' '
   435  077E  3444               	retlw	68	;'D'
   436  077F  343A               	retlw	58	;':'
   437  0780  3425               	retlw	37	;'%'
   438  0781  3464               	retlw	100	;'d'
   439  0782  3400               	retlw	0
   440                           psect	strings
   441                           	
   442  0783                     STR_26:	
   443  0783  3420               	retlw	32	;' '
   444  0784  3420               	retlw	32	;' '
   445  0785  3445               	retlw	69	;'E'
   446  0786  3458               	retlw	88	;'X'
   447  0787  3449               	retlw	73	;'I'
   448  0788  3454               	retlw	84	;'T'
   449  0789  3420               	retlw	32	;' '
   450  078A  3420               	retlw	32	;' '
   451  078B  3400               	retlw	0
   452                           psect	strings
   453                           	
   454  078C                     STR_6:	
   455  078C  3420               	retlw	32	;' '
   456  078D  3443               	retlw	67	;'C'
   457  078E  3468               	retlw	104	;'h'
   458  078F  3461               	retlw	97	;'a'
   459  0790  3472               	retlw	114	;'r'
   460  0791  3467               	retlw	103	;'g'
   461  0792  3465               	retlw	101	;'e'
   462  0793  3420               	retlw	32	;' '
   463  0794  3400               	retlw	0
   464                           psect	strings
   465                           	
   466  0795                     STR_2:	
   467  0795  3453               	retlw	83	;'S'
   468  0796  3463               	retlw	99	;'c'
   469  0797  3461               	retlw	97	;'a'
   470  0798  346E               	retlw	110	;'n'
   471  0799  345F               	retlw	95	;'_'
   472  079A  3433               	retlw	51	;'3'
   473  079B  3436               	retlw	54	;'6'
   474  079C  3430               	retlw	48	;'0'
   475  079D  3400               	retlw	0
   476                           psect	strings
   477                           	
   478  079E                     STR_1:	
   479  079E  3443               	retlw	67	;'C'
   480  079F  3461               	retlw	97	;'a'
   481  07A0  346C               	retlw	108	;'l'
   482  07A1  3469               	retlw	105	;'i'
   483  07A2  3462               	retlw	98	;'b'
   484  07A3  345F               	retlw	95	;'_'
   485  07A4  3449               	retlw	73	;'I'
   486  07A5  3452               	retlw	82	;'R'
   487  07A6  3400               	retlw	0
   488                           psect	strings
   489                           	
   490  07A7                     STR_5:	
   491  07A7  3446               	retlw	70	;'F'
   492  07A8  346C               	retlw	108	;'l'
   493  07A9  3477               	retlw	119	;'w'
   494  07AA  345F               	retlw	95	;'_'
   495  07AB  3457               	retlw	87	;'W'
   496  07AC  3461               	retlw	97	;'a'
   497  07AD  346C               	retlw	108	;'l'
   498  07AE  346C               	retlw	108	;'l'
   499  07AF  3400               	retlw	0
   500                           psect	strings
   501                           	
   502  07B0                     STR_3:	
   503  07B0  3444               	retlw	68	;'D'
   504  07B1  3472               	retlw	114	;'r'
   505  07B2  3469               	retlw	105	;'i'
   506  07B3  3476               	retlw	118	;'v'
   507  07B4  3465               	retlw	101	;'e'
   508  07B5  345F               	retlw	95	;'_'
   509  07B6  3432               	retlw	50	;'2'
   510  07B7  346D               	retlw	109	;'m'
   511  07B8  3400               	retlw	0
   512                           psect	strings
   513                           	
   514  07B9                     STR_4:	
   515  07B9  3444               	retlw	68	;'D'
   516  07BA  3472               	retlw	114	;'r'
   517  07BB  3469               	retlw	105	;'i'
   518  07BC  3476               	retlw	118	;'v'
   519  07BD  3465               	retlw	101	;'e'
   520  07BE  345F               	retlw	95	;'_'
   521  07BF  344C               	retlw	76	;'L'
   522  07C0  3400               	retlw	0
   523                           psect	strings
   524                           	
   525  07C1                     STR_16:	
   526  07C1  3443               	retlw	67	;'C'
   527  07C2  344F               	retlw	79	;'O'
   528  07C3  344E               	retlw	78	;'N'
   529  07C4  3446               	retlw	70	;'F'
   530  07C5  3449               	retlw	73	;'I'
   531  07C6  3452               	retlw	82	;'R'
   532  07C7  344D               	retlw	77	;'M'
   533  07C8  3400               	retlw	0
   534                           psect	strings
   535                           	
   536  07C9                     STR_19:	
   537  07C9  3425               	retlw	37	;'%'
   538  07CA  3464               	retlw	100	;'d'
   539  07CB  346D               	retlw	109	;'m'
   540  07CC  3441               	retlw	65	;'A'
   541  07CD  3400               	retlw	0
   542                           psect	strings
   543                           	
   544  07CE                     STR_9:	
   545  07CE  3444               	retlw	68	;'D'
   546  07CF  3472               	retlw	114	;'r'
   547  07D0  3432               	retlw	50	;'2'
   548  07D1  3400               	retlw	0
   549                           psect	strings
   550                           	
   551  07D2                     STR_15:	
   552  07D2  343C               	retlw	60	;'<'
   553  07D3  343C               	retlw	60	;'<'
   554  07D4  343C               	retlw	60	;'<'
   555  07D5  3400               	retlw	0
   556                           psect	strings
   557                           	
   558  07D6                     STR_17:	
   559  07D6  343E               	retlw	62	;'>'
   560  07D7  343E               	retlw	62	;'>'
   561  07D8  343E               	retlw	62	;'>'
   562  07D9  3400               	retlw	0
   563                           psect	strings
   564                           	
   565  07DA                     STR_10:	
   566  07DA  3444               	retlw	68	;'D'
   567  07DB  3472               	retlw	114	;'r'
   568  07DC  344C               	retlw	76	;'L'
   569  07DD  3400               	retlw	0
   570                           psect	strings
   571                           	
   572  07DE                     STR_12:	
   573  07DE  3443               	retlw	67	;'C'
   574  07DF  3468               	retlw	104	;'h'
   575  07E0  3467               	retlw	103	;'g'
   576  07E1  3400               	retlw	0
   577                           psect	strings
   578                           	
   579  07E2                     STR_7:	
   580  07E2  3443               	retlw	67	;'C'
   581  07E3  3461               	retlw	97	;'a'
   582  07E4  346C               	retlw	108	;'l'
   583  07E5  3400               	retlw	0
   584                           psect	strings
   585                           	
   586  07E6                     STR_8:	
   587  07E6  3453               	retlw	83	;'S'
   588  07E7  3463               	retlw	99	;'c'
   589  07E8  346E               	retlw	110	;'n'
   590  07E9  3400               	retlw	0
   591                           psect	strings
   592                           	
   593  07EA                     STR_11:	
   594  07EA  3446               	retlw	70	;'F'
   595  07EB  346C               	retlw	108	;'l'
   596  07EC  3477               	retlw	119	;'w'
   597  07ED  3400               	retlw	0
   598                           psect	strings
   599                           	
   600  07EE                     STR_22:	
   601  07EE  3446               	retlw	70	;'F'
   602  07EF  3443               	retlw	67	;'C'
   603  07F0  3400               	retlw	0
   604                           psect	strings
   605                           	
   606  07F1                     STR_20:	
   607  07F1  344E               	retlw	78	;'N'
   608  07F2  3443               	retlw	67	;'C'
   609  07F3  3400               	retlw	0
   610                           psect	strings
   611                           	
   612  07F4                     STR_21:	
   613  07F4  3452               	retlw	82	;'R'
   614  07F5  3443               	retlw	67	;'C'
   615  07F6  3400               	retlw	0
   616                           psect	strings
   617                           	
   618  07F7                     STR_23:	
   619  07F7  3454               	retlw	84	;'T'
   620  07F8  3443               	retlw	67	;'C'
   621  07F9  3400               	retlw	0
   622                           psect	strings
   623                           	
   624  07FA                     STR_24:	
   625  07FA  3457               	retlw	87	;'W'
   626  07FB  3461               	retlw	97	;'a'
   627  07FC  3400               	retlw	0
   628                           psect	strings
   629  07EE                     STR_25	equ	STR_22+0
   630                           	file	"Assignment3_AldnoahZero.as"
   631                           	line	#
   632                           psect cinit,class=CODE,delta=2
   633                           global start_initialization
   634  1056                     start_initialization:
   635                           
   636                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   637                           global __pbitbssCOMMON
   638  0380                     __pbitbssCOMMON:
   639  0380                     _CenterPressed:
   640  0380                            ds      1
   641                           
   642  0381                     _CenterReleased:
   643  0381                            ds      1
   644                           
   645  0382                     _DownPressed:
   646  0382                            ds      1
   647                           
   648  0383                     _DownReleased:
   649  0383                            ds      1
   650                           
   651  0384                     _LeftPressed:
   652  0384                            ds      1
   653                           
   654  0385                     _LeftReleased:
   655  0385                            ds      1
   656                           
   657  0386                     _RTC_FLAG_1MS:
   658  0386                            ds      1
   659                           
   660  0387                     _RTC_FLAG_250MS:
   661  0387                            ds      1
   662                           
   663  0388                     _RTC_FLAG_500MS:
   664  0388                            ds      1
   665                           
   666  0389                     _RightPressed:
   667  0389                            ds      1
   668                           
   669  038A                     _RightReleased:
   670  038A                            ds      1
   671                           
   672  038B                     _UpPressed:
   673  038B                            ds      1
   674                           
   675  038C                     _UpReleased:
   676  038C                            ds      1
   677                           
   678                           psect	bssCOMMON,class=COMMON,space=1
   679                           global __pbssCOMMON
   680  007D                     __pbssCOMMON:
   681  007D                     _buttonPressed:
   682  007D                            ds      1
   683                           
   684                           psect	bssBANK0,class=BANK0,space=1
   685                           global __pbssBANK0
   686  006C                     __pbssBANK0:
   687  006C                     _adcVal:
   688  006C                            ds      2
   689                           
   690  006E                     _BumpSensors:
   691  006E                            ds      1
   692                           
   693  006F                     _VwallSensor:
   694  006F                            ds      1
   695                           
   696                           psect	bssBANK1,class=BANK1,space=1
   697                           global __pbssBANK1
   698  00A0                     __pbssBANK1:
   699  00A0                     _rxfifo:
   700  00A0                            ds      16
   701                           
   702  00B0                     _BattCharge:
   703  00B0                            ds      2
   704                           
   705  00B2                     _BattState:
   706  00B2                            ds      2
   707                           
   708  00B4                     _Disp1:
   709  00B4                            ds      2
   710                           
   711  00B6                     _Disp2:
   712  00B6                            ds      2
   713                           
   714  00B8                     _IRdistance:
   715  00B8                            ds      2
   716                           
   717  00BA                     _RTC_Counter:
   718  00BA                            ds      2
   719                           
   720  00BC                     _TotalDistTravelled:
   721  00BC                            ds      2
   722                           
   723  00BE                     _angleTurned:
   724  00BE                            ds      2
   725                           
   726  00C0                     _distTravelled:
   727  00C0                            ds      2
   728                           
   729  00C2                     _dist_high:
   730  00C2                            ds      2
   731                           
   732  00C4                     _dist_low:
   733  00C4                            ds      2
   734                           
   735  00C6                     _pos:
   736  00C6                            ds      2
   737                           
   738  00C8                     _total:
   739  00C8                            ds      2
   740                           
   741  00CA                     _totalSteps:
   742  00CA                            ds      2
   743                           
   744  00CC                     _AngleHighByte:
   745  00CC                            ds      1
   746                           
   747  00CD                     _AngleLowByte:
   748  00CD                            ds      1
   749                           
   750  00CE                     _CenterDebounceCount:
   751  00CE                            ds      1
   752                           
   753  00CF                     _CliffSensors:
   754  00CF                            ds      1
   755                           
   756  00D0                     _DistHighByte:
   757  00D0                            ds      1
   758                           
   759  00D1                     _DistLowByte:
   760  00D1                            ds      1
   761                           
   762  00D2                     _DownDebounceCount:
   763  00D2                            ds      1
   764                           
   765  00D3                     _LeftDebounceCount:
   766  00D3                            ds      1
   767                           
   768  00D4                     _ROBOTerror:
   769  00D4                            ds      1
   770                           
   771  00D5                     _RightDebounceCount:
   772  00D5                            ds      1
   773                           
   774  00D6                     _RobotPos:
   775  00D6                            ds      1
   776                           
   777  00D7                     _UpDebounceCount:
   778  00D7                            ds      1
   779                           
   780  00D8                     _VictimSensor:
   781  00D8                            ds      1
   782                           
   783  00D9                     _currentMenu:
   784  00D9                            ds      1
   785                           
   786  00DA                     _highByte:
   787  00DA                            ds      1
   788                           
   789  00DB                     _lowByte:
   790  00DB                            ds      1
   791                           
   792  00DC                     _rxiptr:
   793  00DC                            ds      1
   794                           
   795  00DD                     _rxoptr:
   796  00DD                            ds      1
   797                           
   798  00DE                     _ser_tmp:
   799  00DE                            ds      1
   800                           
   801  00DF                     _turnhighByte:
   802  00DF                            ds      1
   803                           
   804  00E0                     _turnlowByte:
   805  00E0                            ds      1
   806                           
   807  00E1                     _txiptr:
   808  00E1                            ds      1
   809                           
   810  00E2                     _txoptr:
   811  00E2                            ds      1
   812                           
   813                           psect	dataBANK1,class=BANK1,space=1
   814                           global __pdataBANK1
   815  00E3                     __pdataBANK1:
   816                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   817                           	line	49
   818  00E3                     _menuStrings:
   819  00E3                            ds      6
   820                           
   821                           psect	dataBANK1
   822                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   823                           	line	50
   824  00E9                     _shortMenuStrings:
   825  00E9                            ds      6
   826                           
   827                           psect	dataBANK1
   828                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   829                           	line	45
   830  00EF                     _current_step:
   831  00EF                            ds      1
   832                           
   833                           psect	bssBANK3,class=BANK3,space=1
   834                           global __pbssBANK3
   835  0190                     __pbssBANK3:
   836  0190                     UpdateDisplay@F1264:
   837  0190                            ds      16
   838                           
   839  01A0                     _txfifo:
   840  01A0                            ds      16
   841                           
   842                           psect clrtext,class=CODE,delta=2
   843                           global clear_ram
   844                           ;	Called with FSR containing the base address, and
   845                           ;	W with the last address+1
   846  1EEA                     clear_ram:
   847  1EEA  0064               	clrwdt			;clear the watchdog before getting into this loop
   848  1EEB                     clrloop:
   849  1EEB  0180               	clrf	indf		;clear RAM location pointed to by FSR
   850  1EEC  0A84               	incf	fsr,f		;increment pointer
   851  1EED  0604               	xorwf	fsr,w		;XOR with final address
   852  1EEE  1903               	btfsc	status,2	;have we reached the end yet?
   853  1EEF  3400               	retlw	0		;all done for this memory range, return
   854  1EF0  0604               	xorwf	fsr,w		;XOR again to restore value
   855  1EF1  2EEB               	goto	clrloop		;do the next byte
   856                           
   857                           ; Clear objects allocated to BITCOMMON
   858                           psect cinit,class=CODE,delta=2
   859  1056  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   860  1057  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   861                           ; Clear objects allocated to COMMON
   862                           psect cinit,class=CODE,delta=2
   863  1058  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   864                           ; Clear objects allocated to BANK0
   865                           psect cinit,class=CODE,delta=2
   866  1059  01EC               	clrf	((__pbssBANK0)+0)&07Fh
   867  105A  01ED               	clrf	((__pbssBANK0)+1)&07Fh
   868  105B  01EE               	clrf	((__pbssBANK0)+2)&07Fh
   869  105C  01EF               	clrf	((__pbssBANK0)+3)&07Fh
   870                           ; Clear objects allocated to BANK1
   871                           psect cinit,class=CODE,delta=2
   872  105D  1383               	bcf	status, 7	;select IRP bank0
   873  105E  30A0               	movlw	low(__pbssBANK1)
   874  105F  0084               	movwf	fsr
   875  1060  30E3               	movlw	low((__pbssBANK1)+043h)
   876  1061  160A  158A  26EA   	fcall	clear_ram
              160A  118A         
   877                           ; Clear objects allocated to BANK3
   878                           psect cinit,class=CODE,delta=2
   879  1066  1783               	bsf	status, 7	;select IRP bank2
   880  1067  3090               	movlw	low(__pbssBANK3)
   881  1068  0084               	movwf	fsr
   882  1069  30B0               	movlw	low((__pbssBANK3)+020h)
   883  106A  160A  158A  26EA   	fcall	clear_ram
              160A  118A         
   884                           global btemp
   885                           psect inittext,class=CODE,delta=2
   886                           global init_fetch,btemp
   887                           ;	Called with low address in FSR and high address in W
   888  1F1D                     init_fetch:
   889  1F1D  087E               	movf btemp,w
   890  1F1E  008A               	movwf pclath
   891  1F1F  087F               	movf btemp+1,w
   892  1F20  0082               	movwf pc
   893                           global init_ram
   894                           ;Called with:
   895                           ;	high address of idata address in btemp 
   896                           ;	low address of idata address in btemp+1 
   897                           ;	low address of data in FSR
   898                           ;	high address + 1 of data in btemp-1
   899  1F21                     init_ram:
   900  1F21  160A  158A  271D   	fcall init_fetch
              160A  158A         
   901  1F26  0080               	movwf indf,f
   902  1F27  0A84               	incf fsr,f
   903  1F28  0804               	movf fsr,w
   904  1F29  067D               	xorwf btemp-1,w
   905  1F2A  1903               	btfsc status,2
   906  1F2B  3400               	retlw 0
   907  1F2C  0AFF               	incf btemp+1,f
   908  1F2D  1903               	btfsc status,2
   909  1F2E  0AFE               	incf btemp,f
   910  1F2F  2F21               	goto init_ram
   911                           ; Initialize objects allocated to BANK1
   912                           psect cinit,class=CODE,delta=2
   913                           global init_ram, __pidataBANK1
   914  106F  1383               	bcf	status, 7	;select IRP bank0
   915  1070  30F0               	movlw low(__pdataBANK1+13)
   916  1071  00FD               	movwf btemp-1,f
   917  1072  301E               	movlw high(__pidataBANK1)
   918  1073  00FE               	movwf btemp,f
   919  1074  30FD               	movlw low(__pidataBANK1)
   920  1075  00FF               	movwf btemp+1,f
   921  1076  30E3               	movlw low(__pdataBANK1)
   922  1077  0084               	movwf fsr,f
   923  1078  160A  158A  2721   	fcall init_ram
              160A  118A         
   924                           psect cinit,class=CODE,delta=2
   925                           global end_of_initialization
   926                           
   927                           ;End of C runtime variable initialization code
   928                           
   929  107D                     end_of_initialization:
   930  107D  0183               clrf status
   931  107E  120A  118A  2ABA   ljmp _main	;jump to C main() function
   932                           psect	cstackCOMMON,class=COMMON,space=1
   933                           global __pcstackCOMMON
   934  0072                     __pcstackCOMMON:
   935                           	global	?_ser_init
   936  0072                     ?_ser_init:	; 0 bytes @ 0x0
   937                           	global	?_robo_init
   938  0072                     ?_robo_init:	; 0 bytes @ 0x0
   939                           	global	?_robotLoadSong
   940  0072                     ?_robotLoadSong:	; 0 bytes @ 0x0
   941                           	global	?_robot_read
   942  0072                     ?_robot_read:	; 0 bytes @ 0x0
   943                           	global	?_readAvgDistance
   944  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   945                           	global	?_UpdateDisplay
   946  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   947                           	global	?_calibrateIR
   948  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   949                           	global	?_Init_Follow_IR
   950  0072                     ?_Init_Follow_IR:	; 0 bytes @ 0x0
   951                           	global	?_ser_putch
   952  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   953                           	global	?_ChargeMode
   954  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   955                           	global	?_RobotBattRead
   956  0072                     ?_RobotBattRead:	; 0 bytes @ 0x0
   957                           	global	?_ADCconvert
   958  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   959                           	global	?_init_adc
   960  0072                     ?_init_adc:	; 0 bytes @ 0x0
   961                           	global	?_lcd_write_control
   962  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   963                           	global	?_lcd_write_data
   964  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   965                           	global	?_lcd_set_cursor
   966  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   967                           	global	?_lcd_init
   968  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   969                           	global	?_isr1
   970  0072                     ?_isr1:	; 0 bytes @ 0x0
   971                           	global	?_init
   972  0072                     ?_init:	; 0 bytes @ 0x0
   973                           	global	?_main
   974  0072                     ?_main:	; 0 bytes @ 0x0
   975                           	global	?_Debounce
   976  0072                     ?_Debounce:	; 0 bytes @ 0x0
   977                           	global	??_Debounce
   978  0072                     ??_Debounce:	; 0 bytes @ 0x0
   979                           	global	?_ser_isrx
   980  0072                     ?_ser_isrx:	; 1 bit 
   981                           	global	?_ReadButtons
   982  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   983                           	global	?_Menu
   984  0072                     ?_Menu:	; 1 bytes @ 0x0
   985                           	global	?_ser_getch
   986  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   987                           	global	?_adc_read_channel
   988  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   989                           	global	?_spi_transfer
   990  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   991                           	global	?i1___lwmod
   992  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   993                           	global	i1___lwmod@divisor
   994  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   995  0072                     	ds	1
   996                           	global	??_ReadButtons
   997  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   998  0073                     	ds	1
   999                           	global	i1___lwmod@dividend
  1000  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
  1001  0074                     	ds	2
  1002                           	global	??i1___lwmod
  1003  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
  1004  0076                     	ds	1
  1005                           	global	i1___lwmod@counter
  1006  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
  1007  0077                     	ds	1
  1008                           	global	??_isr1
  1009  0078                     ??_isr1:	; 0 bytes @ 0x6
  1010  0078                     	ds	5
  1011                           psect	cstackBANK0,class=BANK0,space=1
  1012                           global __pcstackBANK0
  1013  0020                     __pcstackBANK0:
  1014                           	global	??_ser_init
  1015  0020                     ??_ser_init:	; 0 bytes @ 0x0
  1016                           	global	??_Menu
  1017  0020                     ??_Menu:	; 0 bytes @ 0x0
  1018                           	global	??_ser_putch
  1019  0020                     ??_ser_putch:	; 0 bytes @ 0x0
  1020                           	global	??_ser_getch
  1021  0020                     ??_ser_getch:	; 0 bytes @ 0x0
  1022                           	global	??_init_adc
  1023  0020                     ??_init_adc:	; 0 bytes @ 0x0
  1024                           	global	??_lcd_write_control
  1025  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
  1026                           	global	??_lcd_write_data
  1027  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
  1028                           	global	??_spi_transfer
  1029  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
  1030                           	global	??_ser_isrx
  1031  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
  1032                           	global	?_adc_read
  1033  0020                     ?_adc_read:	; 2 bytes @ 0x0
  1034                           	global	?___wmul
  1035  0020                     ?___wmul:	; 2 bytes @ 0x0
  1036                           	global	?___awmod
  1037  0020                     ?___awmod:	; 2 bytes @ 0x0
  1038                           	global	Menu@BTN_input
  1039  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
  1040                           	global	___wmul@multiplier
  1041  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1042                           	global	___awmod@divisor
  1043  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
  1044  0020                     	ds	1
  1045                           	global	spi_transfer@temp
  1046  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
  1047                           	global	ser_getch@c
  1048  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1049                           	global	ser_putch@c
  1050  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1051  0021                     	ds	1
  1052                           	global	??_adc_read
  1053  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1054                           	global	??_robo_init
  1055  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1056                           	global	??_robotLoadSong
  1057  0022                     ??_robotLoadSong:	; 0 bytes @ 0x2
  1058                           	global	??_robot_read
  1059  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1060                           	global	??_RobotBattRead
  1061  0022                     ??_RobotBattRead:	; 0 bytes @ 0x2
  1062                           	global	?_robotTurn
  1063  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1064                           	global	lcd_write_control@databyte
  1065  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1066                           	global	lcd_write_data@databyte
  1067  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1068                           	global	spi_transfer@data
  1069  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1070                           	global	robotTurn@angle
  1071  0022                     robotTurn@angle:	; 2 bytes @ 0x2
  1072                           	global	___wmul@multiplicand
  1073  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1074                           	global	___awmod@dividend
  1075  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1076  0022                     	ds	1
  1077                           	global	?_rotate
  1078  0023                     ?_rotate:	; 0 bytes @ 0x3
  1079                           	global	??_lcd_set_cursor
  1080  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1081                           	global	??_lcd_init
  1082  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1083                           	global	??_init
  1084  0023                     ??_init:	; 0 bytes @ 0x3
  1085                           	global	lcd_set_cursor@address
  1086  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1087                           	global	robot_read@readType
  1088  0023                     robot_read@readType:	; 1 bytes @ 0x3
  1089                           	global	rotate@numsteps
  1090  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1091  0023                     	ds	1
  1092                           	global	??_robotTurn
  1093  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1094                           	global	??___wmul
  1095  0024                     ??___wmul:	; 0 bytes @ 0x4
  1096                           	global	??___awmod
  1097  0024                     ??___awmod:	; 0 bytes @ 0x4
  1098                           	global	adc_read@adc_value
  1099  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1100                           	global	RobotBattRead@temp1
  1101  0024                     RobotBattRead@temp1:	; 2 bytes @ 0x4
  1102                           	global	___wmul@product
  1103  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1104  0024                     	ds	1
  1105                           	global	rotate@direction
  1106  0025                     rotate@direction:	; 1 bytes @ 0x5
  1107                           	global	___awmod@counter
  1108  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1109  0025                     	ds	1
  1110                           	global	??_rotate
  1111  0026                     ??_rotate:	; 0 bytes @ 0x6
  1112                           	global	??_adc_read_channel
  1113  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1114                           	global	?_abs
  1115  0026                     ?_abs:	; 2 bytes @ 0x6
  1116                           	global	?___lwdiv
  1117  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1118                           	global	?___awdiv
  1119  0026                     ?___awdiv:	; 2 bytes @ 0x6
  1120                           	global	___awmod@sign
  1121  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1122                           	global	abs@v
  1123  0026                     abs@v:	; 2 bytes @ 0x6
  1124                           	global	___lwdiv@divisor
  1125  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1126                           	global	___awdiv@divisor
  1127  0026                     ___awdiv@divisor:	; 2 bytes @ 0x6
  1128  0026                     	ds	1
  1129                           	global	?_lcd_write_string
  1130  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1131                           	global	adc_read_channel@channel
  1132  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1133                           	global	lcd_write_string@s
  1134  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1135  0027                     	ds	1
  1136                           	global	??_abs
  1137  0028                     ??_abs:	; 0 bytes @ 0x8
  1138                           	global	?_readDistance
  1139  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1140                           	global	rotate@i
  1141  0028                     rotate@i:	; 2 bytes @ 0x8
  1142                           	global	___lwdiv@dividend
  1143  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1144                           	global	___awdiv@dividend
  1145  0028                     ___awdiv@dividend:	; 2 bytes @ 0x8
  1146  0028                     	ds	1
  1147                           	global	??_lcd_write_string
  1148  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1149  0029                     	ds	1
  1150                           	global	??_readDistance
  1151  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1152                           	global	??___lwdiv
  1153  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1154                           	global	??___awdiv
  1155  002A                     ??___awdiv:	; 0 bytes @ 0xA
  1156  002A                     	ds	1
  1157                           	global	___awdiv@counter
  1158  002B                     ___awdiv@counter:	; 1 bytes @ 0xB
  1159                           	global	___lwdiv@quotient
  1160  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1161  002B                     	ds	1
  1162                           	global	___awdiv@sign
  1163  002C                     ___awdiv@sign:	; 1 bytes @ 0xC
  1164                           	global	readDistance@readVal
  1165  002C                     readDistance@readVal:	; 2 bytes @ 0xC
  1166  002C                     	ds	1
  1167                           	global	___lwdiv@counter
  1168  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1169                           	global	___awdiv@quotient
  1170  002D                     ___awdiv@quotient:	; 2 bytes @ 0xD
  1171  002D                     	ds	1
  1172                           	global	??_ADCconvert
  1173  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1174                           	global	?___lwmod
  1175  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1176                           	global	___lwmod@divisor
  1177  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1178  002E                     	ds	1
  1179                           	global	?_RobotDrive
  1180  002F                     ?_RobotDrive:	; 0 bytes @ 0xF
  1181                           	global	RobotDrive@speed
  1182  002F                     RobotDrive@speed:	; 2 bytes @ 0xF
  1183  002F                     	ds	1
  1184                           	global	??_readAvgDistance
  1185  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1186                           	global	readAvgDistance@fullval
  1187  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1188                           	global	___lwmod@dividend
  1189  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1190  0030                     	ds	1
  1191                           	global	RobotDrive@radius
  1192  0031                     RobotDrive@radius:	; 2 bytes @ 0x11
  1193  0031                     	ds	1
  1194                           	global	??___lwmod
  1195  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1196                           	global	readAvgDistance@j
  1197  0032                     readAvgDistance@j:	; 2 bytes @ 0x12
  1198  0032                     	ds	1
  1199                           	global	??_RobotDrive
  1200  0033                     ??_RobotDrive:	; 0 bytes @ 0x13
  1201                           	global	___lwmod@counter
  1202  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1203  0033                     	ds	1
  1204                           	global	?_sprintf
  1205  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1206                           	global	RobotDrive@speedlowByte
  1207  0034                     RobotDrive@speedlowByte:	; 1 bytes @ 0x14
  1208                           	global	sprintf@f
  1209  0034                     sprintf@f:	; 1 bytes @ 0x14
  1210                           	global	readAvgDistance@tempIR
  1211  0034                     readAvgDistance@tempIR:	; 2 bytes @ 0x14
  1212  0034                     	ds	1
  1213                           	global	RobotDrive@speedhighByte
  1214  0035                     RobotDrive@speedhighByte:	; 1 bytes @ 0x15
  1215  0035                     	ds	1
  1216                           	global	RobotDrive@radiuslowByte
  1217  0036                     RobotDrive@radiuslowByte:	; 1 bytes @ 0x16
  1218                           	global	readAvgDistance@i
  1219  0036                     readAvgDistance@i:	; 2 bytes @ 0x16
  1220  0036                     	ds	1
  1221                           	global	RobotDrive@radiushighByte
  1222  0037                     RobotDrive@radiushighByte:	; 1 bytes @ 0x17
  1223  0037                     	ds	2
  1224                           	global	??_sprintf
  1225  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1226  0039                     	ds	3
  1227                           	global	sprintf@ap
  1228  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1229  003C                     	ds	1
  1230                           	global	sprintf@flag
  1231  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1232  003D                     	ds	1
  1233                           	global	sprintf@prec
  1234  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1235  003E                     	ds	1
  1236                           	global	sprintf@_val
  1237  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1238  003F                     	ds	4
  1239                           	global	sprintf@sp
  1240  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1241  0043                     	ds	1
  1242                           	global	sprintf@c
  1243  0044                     sprintf@c:	; 1 bytes @ 0x24
  1244  0044                     	ds	1
  1245                           	global	??_UpdateDisplay
  1246  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1247  0045                     	ds	4
  1248                           	global	UpdateDisplay@LCDOutput
  1249  0049                     UpdateDisplay@LCDOutput:	; 16 bytes @ 0x29
  1250  0049                     	ds	16
  1251                           	global	??_calibrateIR
  1252  0059                     ??_calibrateIR:	; 0 bytes @ 0x39
  1253                           	global	??_Init_Follow_IR
  1254  0059                     ??_Init_Follow_IR:	; 0 bytes @ 0x39
  1255                           	global	?_robotFollow
  1256  0059                     ?_robotFollow:	; 0 bytes @ 0x39
  1257                           	global	?_robotTurnSpeed
  1258  0059                     ?_robotTurnSpeed:	; 0 bytes @ 0x39
  1259                           	global	?_robotMoveSpeed
  1260  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1261                           	global	?_robot_turnRight
  1262  0059                     ?_robot_turnRight:	; 0 bytes @ 0x39
  1263                           	global	??_ChargeMode
  1264  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1265                           	global	robotFollow@speed
  1266  0059                     robotFollow@speed:	; 2 bytes @ 0x39
  1267                           	global	robot_turnRight@speed
  1268  0059                     robot_turnRight@speed:	; 2 bytes @ 0x39
  1269                           	global	robotMoveSpeed@distance
  1270  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1271                           	global	robotTurnSpeed@angle
  1272  0059                     robotTurnSpeed@angle:	; 2 bytes @ 0x39
  1273  0059                     	ds	2
  1274                           	global	robotFollow@AdcTarget
  1275  005B                     robotFollow@AdcTarget:	; 2 bytes @ 0x3B
  1276                           	global	robot_turnRight@AdcTarget
  1277  005B                     robot_turnRight@AdcTarget:	; 2 bytes @ 0x3B
  1278                           	global	robotMoveSpeed@speed
  1279  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1280                           	global	robotTurnSpeed@speed
  1281  005B                     robotTurnSpeed@speed:	; 2 bytes @ 0x3B
  1282  005B                     	ds	2
  1283                           	global	??_robotTurnSpeed
  1284  005D                     ??_robotTurnSpeed:	; 0 bytes @ 0x3D
  1285                           	global	??_robotMoveSpeed
  1286  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1287                           	global	??_robot_turnRight
  1288  005D                     ??_robot_turnRight:	; 0 bytes @ 0x3D
  1289                           	global	robotFollow@followDir
  1290  005D                     robotFollow@followDir:	; 1 bytes @ 0x3D
  1291  005D                     	ds	1
  1292                           	global	??_robotFollow
  1293  005E                     ??_robotFollow:	; 0 bytes @ 0x3E
  1294  005E                     	ds	2
  1295                           	global	robot_turnRight@turnTarget
  1296  0060                     robot_turnRight@turnTarget:	; 2 bytes @ 0x40
  1297                           	global	robotMoveSpeed@temp1
  1298  0060                     robotMoveSpeed@temp1:	; 2 bytes @ 0x40
  1299                           	global	robotTurnSpeed@temp1
  1300  0060                     robotTurnSpeed@temp1:	; 2 bytes @ 0x40
  1301  0060                     	ds	2
  1302                           	global	robotFollow@temp1
  1303  0062                     robotFollow@temp1:	; 2 bytes @ 0x42
  1304                           	global	robot_turnRight@temp1
  1305  0062                     robot_turnRight@temp1:	; 2 bytes @ 0x42
  1306  0062                     	ds	2
  1307                           	global	robotFollow@hysterysis
  1308  0064                     robotFollow@hysterysis:	; 1 bytes @ 0x44
  1309  0064                     	ds	1
  1310                           	global	??_main
  1311  0065                     ??_main:	; 0 bytes @ 0x45
  1312  0065                     	ds	3
  1313                           	global	main@shortwall
  1314  0068                     main@shortwall:	; 2 bytes @ 0x48
  1315  0068                     	ds	2
  1316                           	global	main@choice
  1317  006A                     main@choice:	; 1 bytes @ 0x4A
  1318  006A                     	ds	1
  1319                           	global	main@currentFlw
  1320  006B                     main@currentFlw:	; 1 bytes @ 0x4B
  1321  006B                     	ds	1
  1322 ;;Data sizes: Strings 167, constant 10, data 13, bss 104, persistent 0 stack 0
  1323 ;;Auto spaces:   Size  Autos    Used
  1324 ;; COMMON          14     11      14
  1325 ;; BANK0           80     76      80
  1326 ;; BANK1           80      0      80
  1327 ;; BANK3           96      0      32
  1328 ;; BANK2           96      0       0
  1329                           
  1330 ;;
  1331 ;; Pointer list with targets:
  1332                           
  1333 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1334 ;;
  1335 ;; ?_abs	int  size(1) Largest target is 0
  1336 ;;
  1337 ;; ?___awdiv	int  size(1) Largest target is 0
  1338 ;;
  1339 ;; ?___awmod	int  size(1) Largest target is 0
  1340 ;;
  1341 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1342 ;;
  1343 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1344 ;;
  1345 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1346 ;;
  1347 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1348 ;;
  1349 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1350 ;;
  1351 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
  1352 ;;		 -> STR_19(CODE[5]), STR_13(CODE[13]), 
  1353 ;;
  1354 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1355 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), 
  1356 ;;
  1357 ;; ?_sprintf	int  size(1) Largest target is 0
  1358 ;;
  1359 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1360 ;;		 -> ?_sprintf(BANK0[2]), 
  1361 ;;
  1362 ;; S8270$_cp	PTR const unsigned char  size(1) Largest target is 0
  1363 ;;
  1364 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1365 ;;
  1366 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1367 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1368 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1369 ;;
  1370 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1371 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1372 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1373 ;;
  1374 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1375 ;;		 -> STR_26(CODE[9]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[3]), 
  1376 ;;		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_18(CODE[16]), 
  1377 ;;		 -> STR_17(CODE[4]), STR_16(CODE[8]), STR_15(CODE[4]), STR_14(CODE[16]), 
  1378 ;;		 -> UpdateDisplay@LCDOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1379 ;;		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[9]), 
  1380 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1381 ;;		 -> STR_1(CODE[9]), 
  1382 ;;
  1383                           
  1384                           
  1385 ;;
  1386 ;; Critical Paths under _main in COMMON
  1387 ;;
  1388 ;;   None.
  1389 ;;
  1390 ;; Critical Paths under _isr1 in COMMON
  1391 ;;
  1392 ;;   _isr1->i1___lwmod
  1393 ;;   _ReadButtons->_Debounce
  1394 ;;
  1395 ;; Critical Paths under _main in BANK0
  1396 ;;
  1397 ;;   _main->_robotFollow
  1398 ;;   _ChargeMode->_UpdateDisplay
  1399 ;;   _robot_turnRight->_UpdateDisplay
  1400 ;;   _robotMoveSpeed->_UpdateDisplay
  1401 ;;   _robotTurnSpeed->_UpdateDisplay
  1402 ;;   _robotFollow->_UpdateDisplay
  1403 ;;   _calibrateIR->_UpdateDisplay
  1404 ;;   _UpdateDisplay->_sprintf
  1405 ;;   _readAvgDistance->_ADCconvert
  1406 ;;   _readDistance->_adc_read_channel
  1407 ;;   _RobotBattRead->_ser_putch
  1408 ;;   _RobotBattRead->_ser_getch
  1409 ;;   _robot_read->_ser_putch
  1410 ;;   _robot_read->_ser_getch
  1411 ;;   _lcd_init->_lcd_write_control
  1412 ;;   _lcd_write_string->___awmod
  1413 ;;   _lcd_set_cursor->_lcd_write_control
  1414 ;;   _abs->___wmul
  1415 ;;   _robotTurn->_ser_putch
  1416 ;;   _sprintf->___lwmod
  1417 ;;   _ADCconvert->___lwdiv
  1418 ;;   _rotate->_spi_transfer
  1419 ;;   _RobotDrive->___awdiv
  1420 ;;   _robotLoadSong->_ser_putch
  1421 ;;   _robo_init->_ser_putch
  1422 ;;   _adc_read_channel->_adc_read
  1423 ;;   ___awdiv->___wmul
  1424 ;;   ___lwmod->___lwdiv
  1425 ;;   ___lwdiv->___wmul
  1426 ;;
  1427 ;; Critical Paths under _isr1 in BANK0
  1428 ;;
  1429 ;;   None.
  1430 ;;
  1431 ;; Critical Paths under _main in BANK1
  1432 ;;
  1433 ;;   None.
  1434 ;;
  1435 ;; Critical Paths under _isr1 in BANK1
  1436 ;;
  1437 ;;   None.
  1438 ;;
  1439 ;; Critical Paths under _main in BANK3
  1440 ;;
  1441 ;;   None.
  1442 ;;
  1443 ;; Critical Paths under _isr1 in BANK3
  1444 ;;
  1445 ;;   None.
  1446 ;;
  1447 ;; Critical Paths under _main in BANK2
  1448 ;;
  1449 ;;   None.
  1450 ;;
  1451 ;; Critical Paths under _isr1 in BANK2
  1452 ;;
  1453 ;;   None.
  1454                           
  1455 ;;
  1456 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1457 ;;
  1458                           
  1459 ;;
  1460 ;;Call Graph Tables:
  1461 ;;
  1462 ;; ---------------------------------------------------------------------------------
  1463 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1464 ;; ---------------------------------------------------------------------------------
  1465 ;; (0) _main                                                 7     7      0   16940
  1466 ;;                                             69 BANK0      7     7      0
  1467 ;;                               _init
  1468 ;;                      _robotLoadSong
  1469 ;;                         _robot_read
  1470 ;;                    _readAvgDistance
  1471 ;;                      _UpdateDisplay
  1472 ;;                               _Menu
  1473 ;;                        _calibrateIR
  1474 ;;                     _Init_Follow_IR
  1475 ;;                        _robotFollow
  1476 ;;                         _RobotDrive
  1477 ;;                     _robotTurnSpeed
  1478 ;;                     _robotMoveSpeed
  1479 ;;                          _ser_putch
  1480 ;;                             _rotate
  1481 ;;                    _robot_turnRight
  1482 ;;                         _ChargeMode
  1483 ;; ---------------------------------------------------------------------------------
  1484 ;; (1) _Init_Follow_IR                                       3     3      0    1567
  1485 ;;                                             57 BANK0      3     3      0
  1486 ;;                        _calibrateIR
  1487 ;;                             _rotate
  1488 ;; ---------------------------------------------------------------------------------
  1489 ;; (1) _ChargeMode                                           1     1      0    1442
  1490 ;;                                             57 BANK0      1     1      0
  1491 ;;                          _ser_putch
  1492 ;;                      _RobotBattRead
  1493 ;;                      _UpdateDisplay
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (1) _robot_turnRight                                     11     7      4    3290
  1496 ;;                                             57 BANK0     11     7      4
  1497 ;;                         _RobotDrive
  1498 ;;                    _readAvgDistance
  1499 ;;                          _ser_putch
  1500 ;;                         _robot_read
  1501 ;;                      _UpdateDisplay
  1502 ;;                             ___wmul
  1503 ;;                            ___awdiv
  1504 ;;                                _abs
  1505 ;; ---------------------------------------------------------------------------------
  1506 ;; (1) _robotMoveSpeed                                       9     5      4    1933
  1507 ;;                                             57 BANK0      9     5      4
  1508 ;;                         _RobotDrive
  1509 ;;                         _robot_read
  1510 ;;                      _UpdateDisplay
  1511 ;;                                _abs
  1512 ;; ---------------------------------------------------------------------------------
  1513 ;; (1) _robotTurnSpeed                                       9     5      4    1776
  1514 ;;                                             57 BANK0      9     5      4
  1515 ;;                          _robotTurn
  1516 ;;                         _robot_read
  1517 ;;                      _UpdateDisplay
  1518 ;;                                _abs
  1519 ;; ---------------------------------------------------------------------------------
  1520 ;; (1) _robotFollow                                         12     7      5    2831
  1521 ;;                                             57 BANK0     12     7      5
  1522 ;;                         _RobotDrive
  1523 ;;                    _readAvgDistance
  1524 ;;                             _rotate
  1525 ;;                         _robot_read
  1526 ;;                      _UpdateDisplay
  1527 ;; ---------------------------------------------------------------------------------
  1528 ;; (2) _calibrateIR                                          0     0      0    1447
  1529 ;;                             _rotate
  1530 ;;                      _UpdateDisplay
  1531 ;; ---------------------------------------------------------------------------------
  1532 ;; (2) _UpdateDisplay                                       20    20      0    1327
  1533 ;;                                             37 BANK0     20    20      0
  1534 ;;                  _lcd_write_control
  1535 ;;                            _sprintf
  1536 ;;                     _lcd_set_cursor
  1537 ;;                   _lcd_write_string
  1538 ;;                            ___awmod
  1539 ;; ---------------------------------------------------------------------------------
  1540 ;; (2) _readAvgDistance                                      8     8      0     625
  1541 ;;                                             16 BANK0      8     8      0
  1542 ;;                       _readDistance
  1543 ;;                            ___lwdiv
  1544 ;;                         _ADCconvert
  1545 ;; ---------------------------------------------------------------------------------
  1546 ;; (1) _init                                                 1     1      0      44
  1547 ;;                                              3 BANK0      1     1      0
  1548 ;;                           _ser_init
  1549 ;;                           _init_adc
  1550 ;;                           _lcd_init
  1551 ;;                          _robo_init
  1552 ;; ---------------------------------------------------------------------------------
  1553 ;; (3) _readDistance                                         6     4      2      69
  1554 ;;                                              8 BANK0      6     4      2
  1555 ;;                   _adc_read_channel
  1556 ;; ---------------------------------------------------------------------------------
  1557 ;; (2) _RobotBattRead                                        4     4      0      93
  1558 ;;                                              2 BANK0      4     4      0
  1559 ;;                          _ser_putch
  1560 ;;                          _ser_getch
  1561 ;; ---------------------------------------------------------------------------------
  1562 ;; (2) _robot_read                                           2     2      0     133
  1563 ;;                                              2 BANK0      2     2      0
  1564 ;;                          _ser_putch
  1565 ;;                          _ser_getch
  1566 ;; ---------------------------------------------------------------------------------
  1567 ;; (2) _lcd_init                                             0     0      0      22
  1568 ;;                  _lcd_write_control
  1569 ;; ---------------------------------------------------------------------------------
  1570 ;; (3) _lcd_write_string                                     2     0      2      67
  1571 ;;                                              7 BANK0      2     0      2
  1572 ;;                     _lcd_write_data
  1573 ;;                            ___awmod (ARG)
  1574 ;; ---------------------------------------------------------------------------------
  1575 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1576 ;;                                              3 BANK0      1     1      0
  1577 ;;                  _lcd_write_control
  1578 ;; ---------------------------------------------------------------------------------
  1579 ;; (2) _abs                                                  4     2      2     158
  1580 ;;                                              6 BANK0      4     2      2
  1581 ;;                             ___wmul
  1582 ;; ---------------------------------------------------------------------------------
  1583 ;; (2) _robotTurn                                            2     0      2      66
  1584 ;;                                              2 BANK0      2     0      2
  1585 ;;                          _ser_putch
  1586 ;; ---------------------------------------------------------------------------------
  1587 ;; (3) _ser_getch                                            2     2      0      23
  1588 ;;                                              0 BANK0      2     2      0
  1589 ;;                           _ser_isrx
  1590 ;; ---------------------------------------------------------------------------------
  1591 ;; (3) _sprintf                                             17    12      5     798
  1592 ;;                                             20 BANK0     17    12      5
  1593 ;;                            ___lwdiv
  1594 ;;                            ___lwmod
  1595 ;; ---------------------------------------------------------------------------------
  1596 ;; (3) _ADCconvert                                           2     2      0     254
  1597 ;;                                             14 BANK0      2     2      0
  1598 ;;                             ___wmul
  1599 ;;                            ___lwdiv
  1600 ;; ---------------------------------------------------------------------------------
  1601 ;; (1) _rotate                                               7     4      3     120
  1602 ;;                                              3 BANK0      7     4      3
  1603 ;;                       _spi_transfer
  1604 ;; ---------------------------------------------------------------------------------
  1605 ;; (2) _RobotDrive                                           9     5      4     202
  1606 ;;                                             15 BANK0      9     5      4
  1607 ;;                          _ser_putch
  1608 ;;                            ___awdiv (ARG)
  1609 ;;                             ___wmul (ARG)
  1610 ;; ---------------------------------------------------------------------------------
  1611 ;; (1) _robotLoadSong                                        0     0      0      22
  1612 ;;                          _ser_putch
  1613 ;; ---------------------------------------------------------------------------------
  1614 ;; (2) _robo_init                                            0     0      0      22
  1615 ;;                          _ser_putch
  1616 ;; ---------------------------------------------------------------------------------
  1617 ;; (4) _lcd_write_data                                       3     3      0      22
  1618 ;;                                              0 BANK0      3     3      0
  1619 ;; ---------------------------------------------------------------------------------
  1620 ;; (4) _lcd_write_control                                    3     3      0      22
  1621 ;;                                              0 BANK0      3     3      0
  1622 ;; ---------------------------------------------------------------------------------
  1623 ;; (2) _init_adc                                             1     1      0       0
  1624 ;;                                              0 BANK0      1     1      0
  1625 ;; ---------------------------------------------------------------------------------
  1626 ;; (4) _adc_read_channel                                     2     2      0      46
  1627 ;;                                              6 BANK0      2     2      0
  1628 ;;                           _adc_read
  1629 ;; ---------------------------------------------------------------------------------
  1630 ;; (3) ___awmod                                              7     3      4     296
  1631 ;;                                              0 BANK0      7     3      4
  1632 ;; ---------------------------------------------------------------------------------
  1633 ;; (2) ___awdiv                                              9     5      4     300
  1634 ;;                                              6 BANK0      9     5      4
  1635 ;;                             ___wmul (ARG)
  1636 ;; ---------------------------------------------------------------------------------
  1637 ;; (4) ___lwmod                                              6     2      4     159
  1638 ;;                                             14 BANK0      6     2      4
  1639 ;;                            ___lwdiv (ARG)
  1640 ;; ---------------------------------------------------------------------------------
  1641 ;; (4) ___lwdiv                                              8     4      4     162
  1642 ;;                                              6 BANK0      8     4      4
  1643 ;;                             ___wmul (ARG)
  1644 ;; ---------------------------------------------------------------------------------
  1645 ;; (3) ___wmul                                               6     2      4      92
  1646 ;;                                              0 BANK0      6     2      4
  1647 ;; ---------------------------------------------------------------------------------
  1648 ;; (4) _ser_isrx                                             0     0      0       0
  1649 ;; ---------------------------------------------------------------------------------
  1650 ;; (2) _spi_transfer                                         3     3      0      30
  1651 ;;                                              0 BANK0      3     3      0
  1652 ;; ---------------------------------------------------------------------------------
  1653 ;; (3) _ser_putch                                            2     2      0      22
  1654 ;;                                              0 BANK0      2     2      0
  1655 ;; ---------------------------------------------------------------------------------
  1656 ;; (1) _Menu                                                 1     1      0      22
  1657 ;;                                              0 BANK0      1     1      0
  1658 ;; ---------------------------------------------------------------------------------
  1659 ;; (2) _ser_init                                             1     1      0       0
  1660 ;;                                              0 BANK0      1     1      0
  1661 ;; ---------------------------------------------------------------------------------
  1662 ;; (5) _adc_read                                             6     4      2      24
  1663 ;;                                              0 BANK0      6     4      2
  1664 ;; ---------------------------------------------------------------------------------
  1665 ;; Estimated maximum stack depth 5
  1666 ;; ---------------------------------------------------------------------------------
  1667 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1668 ;; ---------------------------------------------------------------------------------
  1669 ;; (6) _isr1                                                 5     5      0     521
  1670 ;;                                              6 COMMON     5     5      0
  1671 ;;                          i1___lwmod
  1672 ;;                        _ReadButtons
  1673 ;; ---------------------------------------------------------------------------------
  1674 ;; (7) _ReadButtons                                          0     0      0       0
  1675 ;;                           _Debounce
  1676 ;; ---------------------------------------------------------------------------------
  1677 ;; (7) i1___lwmod                                            6     2      4     521
  1678 ;;                                              0 COMMON     6     2      4
  1679 ;; ---------------------------------------------------------------------------------
  1680 ;; (8) _Debounce                                             1     1      0       0
  1681 ;;                                              0 COMMON     1     1      0
  1682 ;; ---------------------------------------------------------------------------------
  1683 ;; Estimated maximum stack depth 8
  1684 ;; ---------------------------------------------------------------------------------
  1685                           
  1686 ;; Call Graph Graphs:
  1687                           
  1688 ;; _main (ROOT)
  1689 ;;   _init
  1690 ;;     _ser_init
  1691 ;;     _init_adc
  1692 ;;     _lcd_init
  1693 ;;       _lcd_write_control
  1694 ;;     _robo_init
  1695 ;;       _ser_putch
  1696 ;;   _robotLoadSong
  1697 ;;     _ser_putch
  1698 ;;   _robot_read
  1699 ;;     _ser_putch
  1700 ;;     _ser_getch
  1701 ;;       _ser_isrx
  1702 ;;   _readAvgDistance
  1703 ;;     _readDistance
  1704 ;;       _adc_read_channel
  1705 ;;         _adc_read
  1706 ;;     ___lwdiv
  1707 ;;       ___wmul (ARG)
  1708 ;;     _ADCconvert
  1709 ;;       ___wmul
  1710 ;;       ___lwdiv
  1711 ;;         ___wmul (ARG)
  1712 ;;   _UpdateDisplay
  1713 ;;     _lcd_write_control
  1714 ;;     _sprintf
  1715 ;;       ___lwdiv
  1716 ;;         ___wmul (ARG)
  1717 ;;       ___lwmod
  1718 ;;         ___lwdiv (ARG)
  1719 ;;           ___wmul (ARG)
  1720 ;;     _lcd_set_cursor
  1721 ;;       _lcd_write_control
  1722 ;;     _lcd_write_string
  1723 ;;       _lcd_write_data
  1724 ;;       ___awmod (ARG)
  1725 ;;     ___awmod
  1726 ;;   _Menu
  1727 ;;   _calibrateIR
  1728 ;;     _rotate
  1729 ;;       _spi_transfer
  1730 ;;     _UpdateDisplay
  1731 ;;       _lcd_write_control
  1732 ;;       _sprintf
  1733 ;;         ___lwdiv
  1734 ;;           ___wmul (ARG)
  1735 ;;         ___lwmod
  1736 ;;           ___lwdiv (ARG)
  1737 ;;             ___wmul (ARG)
  1738 ;;       _lcd_set_cursor
  1739 ;;         _lcd_write_control
  1740 ;;       _lcd_write_string
  1741 ;;         _lcd_write_data
  1742 ;;         ___awmod (ARG)
  1743 ;;       ___awmod
  1744 ;;   _Init_Follow_IR
  1745 ;;     _calibrateIR
  1746 ;;       _rotate
  1747 ;;         _spi_transfer
  1748 ;;       _UpdateDisplay
  1749 ;;         _lcd_write_control
  1750 ;;         _sprintf
  1751 ;;           ___lwdiv
  1752 ;;             ___wmul (ARG)
  1753 ;;           ___lwmod
  1754 ;;             ___lwdiv (ARG)
  1755 ;;               ___wmul (ARG)
  1756 ;;         _lcd_set_cursor
  1757 ;;           _lcd_write_control
  1758 ;;         _lcd_write_string
  1759 ;;           _lcd_write_data
  1760 ;;           ___awmod (ARG)
  1761 ;;         ___awmod
  1762 ;;     _rotate
  1763 ;;       _spi_transfer
  1764 ;;   _robotFollow
  1765 ;;     _RobotDrive
  1766 ;;       _ser_putch
  1767 ;;       ___awdiv (ARG)
  1768 ;;         ___wmul (ARG)
  1769 ;;       ___wmul (ARG)
  1770 ;;     _readAvgDistance
  1771 ;;       _readDistance
  1772 ;;         _adc_read_channel
  1773 ;;           _adc_read
  1774 ;;       ___lwdiv
  1775 ;;         ___wmul (ARG)
  1776 ;;       _ADCconvert
  1777 ;;         ___wmul
  1778 ;;         ___lwdiv
  1779 ;;           ___wmul (ARG)
  1780 ;;     _rotate
  1781 ;;       _spi_transfer
  1782 ;;     _robot_read
  1783 ;;       _ser_putch
  1784 ;;       _ser_getch
  1785 ;;         _ser_isrx
  1786 ;;     _UpdateDisplay
  1787 ;;       _lcd_write_control
  1788 ;;       _sprintf
  1789 ;;         ___lwdiv
  1790 ;;           ___wmul (ARG)
  1791 ;;         ___lwmod
  1792 ;;           ___lwdiv (ARG)
  1793 ;;             ___wmul (ARG)
  1794 ;;       _lcd_set_cursor
  1795 ;;         _lcd_write_control
  1796 ;;       _lcd_write_string
  1797 ;;         _lcd_write_data
  1798 ;;         ___awmod (ARG)
  1799 ;;       ___awmod
  1800 ;;   _RobotDrive
  1801 ;;     _ser_putch
  1802 ;;     ___awdiv (ARG)
  1803 ;;       ___wmul (ARG)
  1804 ;;     ___wmul (ARG)
  1805 ;;   _robotTurnSpeed
  1806 ;;     _robotTurn
  1807 ;;       _ser_putch
  1808 ;;     _robot_read
  1809 ;;       _ser_putch
  1810 ;;       _ser_getch
  1811 ;;         _ser_isrx
  1812 ;;     _UpdateDisplay
  1813 ;;       _lcd_write_control
  1814 ;;       _sprintf
  1815 ;;         ___lwdiv
  1816 ;;           ___wmul (ARG)
  1817 ;;         ___lwmod
  1818 ;;           ___lwdiv (ARG)
  1819 ;;             ___wmul (ARG)
  1820 ;;       _lcd_set_cursor
  1821 ;;         _lcd_write_control
  1822 ;;       _lcd_write_string
  1823 ;;         _lcd_write_data
  1824 ;;         ___awmod (ARG)
  1825 ;;       ___awmod
  1826 ;;     _abs
  1827 ;;       ___wmul
  1828 ;;   _robotMoveSpeed
  1829 ;;     _RobotDrive
  1830 ;;       _ser_putch
  1831 ;;       ___awdiv (ARG)
  1832 ;;         ___wmul (ARG)
  1833 ;;       ___wmul (ARG)
  1834 ;;     _robot_read
  1835 ;;       _ser_putch
  1836 ;;       _ser_getch
  1837 ;;         _ser_isrx
  1838 ;;     _UpdateDisplay
  1839 ;;       _lcd_write_control
  1840 ;;       _sprintf
  1841 ;;         ___lwdiv
  1842 ;;           ___wmul (ARG)
  1843 ;;         ___lwmod
  1844 ;;           ___lwdiv (ARG)
  1845 ;;             ___wmul (ARG)
  1846 ;;       _lcd_set_cursor
  1847 ;;         _lcd_write_control
  1848 ;;       _lcd_write_string
  1849 ;;         _lcd_write_data
  1850 ;;         ___awmod (ARG)
  1851 ;;       ___awmod
  1852 ;;     _abs
  1853 ;;       ___wmul
  1854 ;;   _ser_putch
  1855 ;;   _rotate
  1856 ;;     _spi_transfer
  1857 ;;   _robot_turnRight
  1858 ;;     _RobotDrive
  1859 ;;       _ser_putch
  1860 ;;       ___awdiv (ARG)
  1861 ;;         ___wmul (ARG)
  1862 ;;       ___wmul (ARG)
  1863 ;;     _readAvgDistance
  1864 ;;       _readDistance
  1865 ;;         _adc_read_channel
  1866 ;;           _adc_read
  1867 ;;       ___lwdiv
  1868 ;;         ___wmul (ARG)
  1869 ;;       _ADCconvert
  1870 ;;         ___wmul
  1871 ;;         ___lwdiv
  1872 ;;           ___wmul (ARG)
  1873 ;;     _ser_putch
  1874 ;;     _robot_read
  1875 ;;       _ser_putch
  1876 ;;       _ser_getch
  1877 ;;         _ser_isrx
  1878 ;;     _UpdateDisplay
  1879 ;;       _lcd_write_control
  1880 ;;       _sprintf
  1881 ;;         ___lwdiv
  1882 ;;           ___wmul (ARG)
  1883 ;;         ___lwmod
  1884 ;;           ___lwdiv (ARG)
  1885 ;;             ___wmul (ARG)
  1886 ;;       _lcd_set_cursor
  1887 ;;         _lcd_write_control
  1888 ;;       _lcd_write_string
  1889 ;;         _lcd_write_data
  1890 ;;         ___awmod (ARG)
  1891 ;;       ___awmod
  1892 ;;     ___wmul
  1893 ;;     ___awdiv
  1894 ;;       ___wmul (ARG)
  1895 ;;     _abs
  1896 ;;       ___wmul
  1897 ;;   _ChargeMode
  1898 ;;     _ser_putch
  1899 ;;     _RobotBattRead
  1900 ;;       _ser_putch
  1901 ;;       _ser_getch
  1902 ;;         _ser_isrx
  1903 ;;     _UpdateDisplay
  1904 ;;       _lcd_write_control
  1905 ;;       _sprintf
  1906 ;;         ___lwdiv
  1907 ;;           ___wmul (ARG)
  1908 ;;         ___lwmod
  1909 ;;           ___lwdiv (ARG)
  1910 ;;             ___wmul (ARG)
  1911 ;;       _lcd_set_cursor
  1912 ;;         _lcd_write_control
  1913 ;;       _lcd_write_string
  1914 ;;         _lcd_write_data
  1915 ;;         ___awmod (ARG)
  1916 ;;       ___awmod
  1917 ;;
  1918 ;; _isr1 (ROOT)
  1919 ;;   i1___lwmod
  1920 ;;   _ReadButtons
  1921 ;;     _Debounce
  1922 ;;
  1923                           
  1924 ;; Address spaces:
  1925                           
  1926 ;;Name               Size   Autos  Total    Cost      Usage
  1927 ;;BANK3               60      0      20       9       33.3%
  1928 ;;BITBANK3            60      0       0       8        0.0%
  1929 ;;SFR3                 0      0       0       4        0.0%
  1930 ;;BITSFR3              0      0       0       4        0.0%
  1931 ;;BANK2               60      0       0      11        0.0%
  1932 ;;BITBANK2            60      0       0      10        0.0%
  1933 ;;SFR2                 0      0       0       5        0.0%
  1934 ;;BITSFR2              0      0       0       5        0.0%
  1935 ;;SFR1                 0      0       0       2        0.0%
  1936 ;;BITSFR1              0      0       0       2        0.0%
  1937 ;;BANK1               50      0      50       7      100.0%
  1938 ;;BITBANK1            50      0       0       6        0.0%
  1939 ;;CODE                 0      0       0       0        0.0%
  1940 ;;DATA                 0      0      D9      12        0.0%
  1941 ;;ABS                  0      0      CE       3        0.0%
  1942 ;;NULL                 0      0       0       0        0.0%
  1943 ;;STACK                0      0       B       2        0.0%
  1944 ;;BANK0               50     4C      50       5      100.0%
  1945 ;;BITBANK0            50      0       0       4        0.0%
  1946 ;;SFR0                 0      0       0       1        0.0%
  1947 ;;BITSFR0              0      0       0       1        0.0%
  1948 ;;COMMON               E      B       E       1      100.0%
  1949 ;;BITCOMMON            E      0       2       0       14.3%
  1950 ;;EEDATA             100      0       0       0        0.0%
  1951                           
  1952                           	global	_main
  1953                           psect	maintext,global,class=CODE,delta=2
  1954                           global __pmaintext
  1955  02BA                     __pmaintext:
  1956                           
  1957 ;; *************** function _main *****************
  1958 ;; Defined at:
  1959 ;;		line 170 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  currentFlw      1   75[BANK0 ] unsigned char 
  1964 ;;  shortwall       2   72[BANK0 ] int 
  1965 ;;  choice          1   74[BANK0 ] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;		None               void
  1968 ;; Registers used:
  1969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 17F/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         0       0       0       0       0
  1976 ;;      Locals:         0       4       0       0       0
  1977 ;;      Temps:          0       3       0       0       0
  1978 ;;      Totals:         0       7       0       0       0
  1979 ;;Total ram usage:        7 bytes
  1980 ;; Hardware stack levels required when called:    8
  1981 ;; This function calls:
  1982 ;;		_init
  1983 ;;		_robotLoadSong
  1984 ;;		_robot_read
  1985 ;;		_readAvgDistance
  1986 ;;		_UpdateDisplay
  1987 ;;		_Menu
  1988 ;;		_calibrateIR
  1989 ;;		_Init_Follow_IR
  1990 ;;		_robotFollow
  1991 ;;		_RobotDrive
  1992 ;;		_robotTurnSpeed
  1993 ;;		_robotMoveSpeed
  1994 ;;		_ser_putch
  1995 ;;		_rotate
  1996 ;;		_robot_turnRight
  1997 ;;		_ChargeMode
  1998 ;; This function is called by:
  1999 ;;		Startup code after reset
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           psect	maintext
  2003                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2004                           	line	170
  2005                           	global	__size_of_main
  2006  025F                     	__size_of_main	equ	__end_of_main-_main
  2007                           	
  2008  02BA                     _main:	
  2009                           	opt	stack 0
  2010                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2011                           	line	171
  2012                           	
  2013  02BA                     l11917:	
  2014                           ;Main.c: 171: unsigned char choice = 255;
  2015  02BA  30FF               	movlw	(0FFh)
  2016  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2017  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2018  02BD  00E5               	movwf	(??_main+0)+0
  2019  02BE  0865               	movf	(??_main+0)+0,w
  2020  02BF  00EA               	movwf	(main@choice)
  2021                           	line	172
  2022                           	
  2023  02C0                     l11919:	
  2024                           ;Main.c: 172: int shortwall = 0;
  2025  02C0  01E8               	clrf	(main@shortwall)
  2026  02C1  01E9               	clrf	(main@shortwall+1)
  2027                           	line	175
  2028                           	
  2029  02C2                     l11921:	
  2030                           ;Main.c: 175: init();
  2031  02C2  160A  118A  2132   	fcall	_init
              120A  118A         
  2032                           	line	176
  2033                           	
  2034  02C7                     l11923:	
  2035                           ;Main.c: 176: robotLoadSong();
  2036  02C7  160A  118A  23A6   	fcall	_robotLoadSong
              120A  118A         
  2037  02CC  2ACD               	goto	l11925
  2038                           	line	178
  2039                           ;Main.c: 178: while(1)
  2040                           	
  2041  02CD                     l2252:	
  2042                           	line	180
  2043                           	
  2044  02CD                     l11925:	
  2045                           ;Main.c: 179: {
  2046                           ;Main.c: 180: if (RTC_FLAG_250MS == 1)
  2047  02CD  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2048  02CE  2AD0               	goto	u5431
  2049  02CF  2AD1               	goto	u5430
  2050  02D0                     u5431:
  2051  02D0  2AE3               	goto	l11935
  2052  02D1                     u5430:
  2053                           	line	182
  2054                           	
  2055  02D1                     l11927:	
  2056                           ;Main.c: 181: {
  2057                           ;Main.c: 182: RTC_FLAG_250MS = 0;
  2058  02D1  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2059                           	line	183
  2060                           	
  2061  02D2                     l11929:	
  2062                           ;Main.c: 183: robot_read(2);
  2063  02D2  3002               	movlw	(02h)
  2064  02D3  120A  158A  2305   	fcall	_robot_read
              120A  118A         
  2065                           	line	184
  2066                           	
  2067  02D8                     l11931:	
  2068                           ;Main.c: 184: readAvgDistance();
  2069  02D8  160A  118A  25B8   	fcall	_readAvgDistance
              120A  118A         
  2070                           	line	185
  2071                           	
  2072  02DD                     l11933:	
  2073                           ;Main.c: 185: UpdateDisplay();
  2074  02DD  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  2075  02E2  2AE3               	goto	l11935
  2076                           	line	186
  2077                           	
  2078  02E3                     l2253:	
  2079                           	line	187
  2080                           	
  2081  02E3                     l11935:	
  2082                           ;Main.c: 186: }
  2083                           ;Main.c: 187: if (buttonPressed)
  2084  02E3  087D               	movf	(_buttonPressed),w	;volatile
  2085  02E4  1D03               	skipz
  2086  02E5  2AE7               	goto	u5440
  2087  02E6  2CF8               	goto	l12021
  2088  02E7                     u5440:
  2089                           	line	190
  2090                           	
  2091  02E7                     l11937:	
  2092                           ;Main.c: 189: {
  2093                           ;Main.c: 190: choice = Menu(buttonPressed);
  2094  02E7  087D               	movf	(_buttonPressed),w	;volatile
  2095  02E8  160A  118A  22C4   	fcall	_Menu
              120A  118A         
  2096  02ED  1283               	bcf	status, 5	;RP0=0, select bank0
  2097  02EE  1303               	bcf	status, 6	;RP1=0, select bank0
  2098  02EF  00E5               	movwf	(??_main+0)+0
  2099  02F0  0865               	movf	(??_main+0)+0,w
  2100  02F1  00EA               	movwf	(main@choice)
  2101                           	line	191
  2102                           	
  2103  02F2                     l11939:	
  2104                           ;Main.c: 191: buttonPressed = 0;
  2105  02F2  01FD               	clrf	(_buttonPressed)	;volatile
  2106  02F3  2CF8               	goto	l12021
  2107                           	line	192
  2108                           	
  2109  02F4                     l2254:	
  2110                           	line	196
  2111                           ;Main.c: 192: }
  2112                           ;Main.c: 196: switch (choice)
  2113  02F4  2CF8               	goto	l12021
  2114                           	line	198
  2115                           ;Main.c: 197: {
  2116                           ;Main.c: 198: case 0:
  2117                           	
  2118  02F5                     l2256:	
  2119                           	line	199
  2120                           	
  2121  02F5                     l11941:	
  2122                           ;Main.c: 199: calibrateIR();
  2123  02F5  160A  118A  2462   	fcall	_calibrateIR
              120A  118A         
  2124                           	line	200
  2125                           ;Main.c: 200: break;
  2126  02FA  2D0E               	goto	l12023
  2127                           	line	201
  2128                           ;Main.c: 201: case 1:
  2129                           	
  2130  02FB                     l2258:	
  2131                           	line	207
  2132                           ;Main.c: 207: break;
  2133  02FB  2D0E               	goto	l12023
  2134                           	line	208
  2135                           ;Main.c: 208: case 2:
  2136                           	
  2137  02FC                     l2259:	
  2138                           	line	211
  2139                           ;Main.c: 211: break;
  2140  02FC  2D0E               	goto	l12023
  2141                           	line	212
  2142                           ;Main.c: 212: case 3:
  2143                           	
  2144  02FD                     l2260:	
  2145                           	line	215
  2146                           ;Main.c: 215: break;
  2147  02FD  2D0E               	goto	l12023
  2148                           	line	216
  2149                           ;Main.c: 216: case 4:
  2150                           	
  2151  02FE                     l2261:	
  2152                           	line	217
  2153                           ;Main.c: 217: RobotPos = 0;
  2154  02FE  1683               	bsf	status, 5	;RP0=1, select bank1
  2155  02FF  1303               	bcf	status, 6	;RP1=0, select bank1
  2156  0300  01D6               	clrf	(_RobotPos)^080h
  2157                           	line	218
  2158                           ;Main.c: 218: unsigned char currentFlw = 0;
  2159  0301  1283               	bcf	status, 5	;RP0=0, select bank0
  2160  0302  1303               	bcf	status, 6	;RP1=0, select bank0
  2161  0303  01EB               	clrf	(main@currentFlw)
  2162                           	line	219
  2163                           	
  2164  0304                     l11943:	
  2165                           ;Main.c: 219: Init_Follow_IR();
  2166  0304  160A  158A  27B6   	fcall	_Init_Follow_IR
              120A  118A         
  2167                           	line	220
  2168                           ;Main.c: 220: while (ROBOTerror != 9)
  2169  0309  2CE6               	goto	l12015
  2170                           	
  2171  030A                     l2263:	
  2172                           	line	222
  2173                           ;Main.c: 221: {
  2174                           ;Main.c: 222: switch (ROBOTerror)
  2175  030A  2CC9               	goto	l12013
  2176                           	line	224
  2177                           ;Main.c: 223: {
  2178                           ;Main.c: 224: case 0:
  2179                           	
  2180  030B                     l2265:	
  2181                           	line	225
  2182                           	
  2183  030B                     l11945:	
  2184                           ;Main.c: 225: readAvgDistance();
  2185  030B  160A  118A  25B8   	fcall	_readAvgDistance
              120A  118A         
  2186                           	line	226
  2187                           ;Main.c: 226: robotFollow(200, adcVal, currentFlw);
  2188  0310  30C8               	movlw	low(0C8h)
  2189  0311  1283               	bcf	status, 5	;RP0=0, select bank0
  2190  0312  1303               	bcf	status, 6	;RP1=0, select bank0
  2191  0313  00D9               	movwf	(?_robotFollow)
  2192  0314  3000               	movlw	high(0C8h)
  2193  0315  00DA               	movwf	((?_robotFollow))+1
  2194  0316  086D               	movf	(_adcVal+1),w	;volatile
  2195  0317  01DC               	clrf	1+(?_robotFollow)+02h
  2196  0318  07DC               	addwf	1+(?_robotFollow)+02h
  2197  0319  086C               	movf	(_adcVal),w	;volatile
  2198  031A  01DB               	clrf	0+(?_robotFollow)+02h
  2199  031B  07DB               	addwf	0+(?_robotFollow)+02h
  2200                           
  2201  031C  086B               	movf	(main@currentFlw),w
  2202  031D  00E5               	movwf	(??_main+0)+0
  2203  031E  0865               	movf	(??_main+0)+0,w
  2204  031F  00DD               	movwf	0+(?_robotFollow)+04h
  2205  0320  120A  158A  242A   	fcall	_robotFollow
              120A  118A         
  2206                           	line	227
  2207                           ;Main.c: 227: break;
  2208  0325  2CE6               	goto	l12015
  2209                           	line	228
  2210                           ;Main.c: 228: case 1:
  2211                           	
  2212  0326                     l2267:	
  2213                           	line	229
  2214                           	
  2215  0326                     l11947:	
  2216                           ;Main.c: 229: if (RobotPos == 10 || RobotPos == 11)
  2217  0326  1683               	bsf	status, 5	;RP0=1, select bank1
  2218  0327  1303               	bcf	status, 6	;RP1=0, select bank1
  2219  0328  0856               	movf	(_RobotPos)^080h,w
  2220  0329  3A0A               	xorlw	0Ah
  2221  032A  1903               	skipnz
  2222  032B  2B2D               	goto	u5451
  2223  032C  2B2E               	goto	u5450
  2224  032D                     u5451:
  2225  032D  2B35               	goto	l11951
  2226  032E                     u5450:
  2227                           	
  2228  032E                     l11949:	
  2229  032E  0856               	movf	(_RobotPos)^080h,w
  2230  032F  3A0B               	xorlw	0Bh
  2231  0330  1D03               	skipz
  2232  0331  2B33               	goto	u5461
  2233  0332  2B34               	goto	u5460
  2234  0333                     u5461:
  2235  0333  2B77               	goto	l11959
  2236  0334                     u5460:
  2237  0334  2B35               	goto	l11951
  2238                           	
  2239  0335                     l2270:	
  2240                           	line	231
  2241                           	
  2242  0335                     l11951:	
  2243                           ;Main.c: 230: {
  2244                           ;Main.c: 231: RobotDrive(-200, 0x7FFF);
  2245  0335  3038               	movlw	low(-200)
  2246  0336  1283               	bcf	status, 5	;RP0=0, select bank0
  2247  0337  1303               	bcf	status, 6	;RP1=0, select bank0
  2248  0338  00AF               	movwf	(?_RobotDrive)
  2249  0339  30FF               	movlw	high(-200)
  2250  033A  00B0               	movwf	((?_RobotDrive))+1
  2251  033B  30FF               	movlw	low(07FFFh)
  2252  033C  00B1               	movwf	0+(?_RobotDrive)+02h
  2253  033D  307F               	movlw	high(07FFFh)
  2254  033E  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  2255  033F  160A  118A  21C6   	fcall	_RobotDrive
              120A  118A         
  2256                           	line	232
  2257                           	
  2258  0344                     l11953:	
  2259                           ;Main.c: 232: _delay((unsigned long)((100)*(20000000/4000.0)));
  2260                           	opt asmopt_off
  2261  0344  3003               movlw  3
  2262  0345  1283               	bcf	status, 5	;RP0=0, select bank0
  2263  0346  1303               	bcf	status, 6	;RP1=0, select bank0
  2264  0347  00E7               movwf	((??_main+0)+0+2),f
  2265  0348  308A               movlw	138
  2266  0349  00E6               movwf	((??_main+0)+0+1),f
  2267  034A  3056               	movlw	86
  2268  034B  00E5               movwf	((??_main+0)+0),f
  2269  034C                     u5487:
  2270  034C  0BE5               	decfsz	((??_main+0)+0),f
  2271  034D  2B4C               	goto	u5487
  2272  034E  0BE6               	decfsz	((??_main+0)+0+1),f
  2273  034F  2B4C               	goto	u5487
  2274  0350  0BE7               	decfsz	((??_main+0)+0+2),f
  2275  0351  2B4C               	goto	u5487
  2276  0352  2B53               	nop2
  2277                           opt asmopt_on
  2278                           
  2279                           	line	234
  2280                           	
  2281  0353                     l11955:	
  2282                           ;Main.c: 234: ROBOTerror = 0;
  2283  0353  1683               	bsf	status, 5	;RP0=1, select bank1
  2284  0354  1303               	bcf	status, 6	;RP1=0, select bank1
  2285  0355  01D4               	clrf	(_ROBOTerror)^080h
  2286                           	line	235
  2287                           	
  2288  0356                     l11957:	
  2289                           ;Main.c: 235: robotTurnSpeed((-(angleTurned - 75)),400);
  2290  0356  083E               	movf	(_angleTurned)^080h,w
  2291  0357  3EB5               	addlw	low(-75)
  2292  0358  1283               	bcf	status, 5	;RP0=0, select bank0
  2293  0359  1303               	bcf	status, 6	;RP1=0, select bank0
  2294  035A  00E5               	movwf	(??_main+0)+0
  2295  035B  1683               	bsf	status, 5	;RP0=1, select bank1
  2296  035C  1303               	bcf	status, 6	;RP1=0, select bank1
  2297  035D  083F               	movf	(_angleTurned+1)^080h,w
  2298  035E  1803               	skipnc
  2299  035F  3E01               	addlw	1
  2300  0360  3EFF               	addlw	high(-75)
  2301  0361  1283               	bcf	status, 5	;RP0=0, select bank0
  2302  0362  1303               	bcf	status, 6	;RP1=0, select bank0
  2303  0363  00E6               	movwf	1+(??_main+0)+0
  2304  0364  09E5               	comf	(??_main+0)+0,f
  2305  0365  09E6               	comf	(??_main+0)+1,f
  2306  0366  0AE5               	incf	(??_main+0)+0,f
  2307  0367  1903               	skipnz
  2308  0368  0AE6               	incf	(??_main+0)+1,f
  2309  0369  0865               	movf	0+(??_main+0)+0,w
  2310  036A  00D9               	movwf	(?_robotTurnSpeed)
  2311  036B  0866               	movf	1+(??_main+0)+0,w
  2312  036C  00DA               	movwf	(?_robotTurnSpeed+1)
  2313  036D  3090               	movlw	low(0190h)
  2314  036E  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2315  036F  3001               	movlw	high(0190h)
  2316  0370  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2317  0371  120A  158A  2069   	fcall	_robotTurnSpeed
              120A  118A         
  2318                           	line	236
  2319                           ;Main.c: 236: }
  2320  0376  2CE6               	goto	l12015
  2321                           	line	237
  2322                           	
  2323  0377                     l2268:	
  2324                           	line	238
  2325                           	
  2326  0377                     l11959:	
  2327                           ;Main.c: 237: else
  2328                           ;Main.c: 238: ROBOTerror = 9;
  2329  0377  3009               	movlw	(09h)
  2330  0378  1283               	bcf	status, 5	;RP0=0, select bank0
  2331  0379  1303               	bcf	status, 6	;RP1=0, select bank0
  2332  037A  00E5               	movwf	(??_main+0)+0
  2333  037B  0865               	movf	(??_main+0)+0,w
  2334  037C  1683               	bsf	status, 5	;RP0=1, select bank1
  2335  037D  1303               	bcf	status, 6	;RP1=0, select bank1
  2336  037E  00D4               	movwf	(_ROBOTerror)^080h
  2337  037F  2CE6               	goto	l12015
  2338                           	
  2339  0380                     l2271:	
  2340                           	line	239
  2341                           ;Main.c: 239: break;
  2342  0380  2CE6               	goto	l12015
  2343                           	line	240
  2344                           ;Main.c: 240: case 2:
  2345                           	
  2346  0381                     l2272:	
  2347                           	line	241
  2348                           	
  2349  0381                     l11961:	
  2350                           ;Main.c: 241: ROBOTerror = 9;
  2351  0381  3009               	movlw	(09h)
  2352  0382  1283               	bcf	status, 5	;RP0=0, select bank0
  2353  0383  1303               	bcf	status, 6	;RP1=0, select bank0
  2354  0384  00E5               	movwf	(??_main+0)+0
  2355  0385  0865               	movf	(??_main+0)+0,w
  2356  0386  1683               	bsf	status, 5	;RP0=1, select bank1
  2357  0387  1303               	bcf	status, 6	;RP1=0, select bank1
  2358  0388  00D4               	movwf	(_ROBOTerror)^080h
  2359                           	line	242
  2360                           ;Main.c: 242: break;
  2361  0389  2CE6               	goto	l12015
  2362                           	line	243
  2363                           ;Main.c: 243: case 3:
  2364                           	
  2365  038A                     l2273:	
  2366                           	line	244
  2367                           	
  2368  038A                     l11963:	
  2369                           ;Main.c: 244: RobotPos++;
  2370  038A  3001               	movlw	(01h)
  2371  038B  1283               	bcf	status, 5	;RP0=0, select bank0
  2372  038C  1303               	bcf	status, 6	;RP1=0, select bank0
  2373  038D  00E5               	movwf	(??_main+0)+0
  2374  038E  0865               	movf	(??_main+0)+0,w
  2375  038F  1683               	bsf	status, 5	;RP0=1, select bank1
  2376  0390  1303               	bcf	status, 6	;RP1=0, select bank1
  2377  0391  07D6               	addwf	(_RobotPos)^080h,f
  2378                           	line	245
  2379                           	
  2380  0392                     l11965:	
  2381                           ;Main.c: 245: ROBOTerror = 0;
  2382  0392  01D4               	clrf	(_ROBOTerror)^080h
  2383                           	line	246
  2384                           	
  2385  0393                     l11967:	
  2386                           ;Main.c: 246: RobotDrive(-200, 0x7FFF);
  2387  0393  3038               	movlw	low(-200)
  2388  0394  1283               	bcf	status, 5	;RP0=0, select bank0
  2389  0395  1303               	bcf	status, 6	;RP1=0, select bank0
  2390  0396  00AF               	movwf	(?_RobotDrive)
  2391  0397  30FF               	movlw	high(-200)
  2392  0398  00B0               	movwf	((?_RobotDrive))+1
  2393  0399  30FF               	movlw	low(07FFFh)
  2394  039A  00B1               	movwf	0+(?_RobotDrive)+02h
  2395  039B  307F               	movlw	high(07FFFh)
  2396  039C  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  2397  039D  160A  118A  21C6   	fcall	_RobotDrive
              120A  118A         
  2398                           	line	247
  2399                           	
  2400  03A2                     l11969:	
  2401                           ;Main.c: 247: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2402                           	opt asmopt_off
  2403  03A2  301A               movlw  26
  2404  03A3  1283               	bcf	status, 5	;RP0=0, select bank0
  2405  03A4  1303               	bcf	status, 6	;RP1=0, select bank0
  2406  03A5  00E7               movwf	((??_main+0)+0+2),f
  2407  03A6  305E               movlw	94
  2408  03A7  00E6               movwf	((??_main+0)+0+1),f
  2409  03A8  3086               	movlw	134
  2410  03A9  00E5               movwf	((??_main+0)+0),f
  2411  03AA                     u5497:
  2412  03AA  0BE5               	decfsz	((??_main+0)+0),f
  2413  03AB  2BAA               	goto	u5497
  2414  03AC  0BE6               	decfsz	((??_main+0)+0+1),f
  2415  03AD  2BAA               	goto	u5497
  2416  03AE  0BE7               	decfsz	((??_main+0)+0+2),f
  2417  03AF  2BAA               	goto	u5497
  2418  03B0  0064               	clrwdt
  2419                           opt asmopt_on
  2420                           
  2421                           	line	248
  2422                           	
  2423  03B1                     l11971:	
  2424                           ;Main.c: 248: robotMoveSpeed(-200,-200);
  2425  03B1  3038               	movlw	low(-200)
  2426  03B2  1283               	bcf	status, 5	;RP0=0, select bank0
  2427  03B3  1303               	bcf	status, 6	;RP1=0, select bank0
  2428  03B4  00D9               	movwf	(?_robotMoveSpeed)
  2429  03B5  30FF               	movlw	high(-200)
  2430  03B6  00DA               	movwf	((?_robotMoveSpeed))+1
  2431  03B7  3038               	movlw	low(-200)
  2432  03B8  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2433  03B9  30FF               	movlw	high(-200)
  2434  03BA  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2435  03BB  120A  158A  2111   	fcall	_robotMoveSpeed
              120A  118A         
  2436                           	line	249
  2437                           	
  2438  03C0                     l11973:	
  2439                           ;Main.c: 249: robotTurnSpeed((-angleTurned),400);
  2440  03C0  1683               	bsf	status, 5	;RP0=1, select bank1
  2441  03C1  1303               	bcf	status, 6	;RP1=0, select bank1
  2442  03C2  093E               	comf	(_angleTurned)^080h,w
  2443  03C3  1283               	bcf	status, 5	;RP0=0, select bank0
  2444  03C4  1303               	bcf	status, 6	;RP1=0, select bank0
  2445  03C5  00E5               	movwf	(??_main+0)+0
  2446  03C6  1683               	bsf	status, 5	;RP0=1, select bank1
  2447  03C7  1303               	bcf	status, 6	;RP1=0, select bank1
  2448  03C8  093F               	comf	(_angleTurned+1)^080h,w
  2449  03C9  1283               	bcf	status, 5	;RP0=0, select bank0
  2450  03CA  1303               	bcf	status, 6	;RP1=0, select bank0
  2451  03CB  00E6               	movwf	((??_main+0)+0+1)
  2452  03CC  0AE5               	incf	(??_main+0)+0,f
  2453  03CD  1903               	skipnz
  2454  03CE  0AE6               	incf	((??_main+0)+0+1),f
  2455  03CF  0865               	movf	0+(??_main+0)+0,w
  2456  03D0  00D9               	movwf	(?_robotTurnSpeed)
  2457  03D1  0866               	movf	1+(??_main+0)+0,w
  2458  03D2  00DA               	movwf	(?_robotTurnSpeed+1)
  2459  03D3  3090               	movlw	low(0190h)
  2460  03D4  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2461  03D5  3001               	movlw	high(0190h)
  2462  03D6  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2463  03D7  120A  158A  2069   	fcall	_robotTurnSpeed
              120A  118A         
  2464                           	line	250
  2465                           	
  2466  03DC                     l11975:	
  2467                           ;Main.c: 250: robotMoveSpeed(300,200);
  2468  03DC  302C               	movlw	low(012Ch)
  2469  03DD  1283               	bcf	status, 5	;RP0=0, select bank0
  2470  03DE  1303               	bcf	status, 6	;RP1=0, select bank0
  2471  03DF  00D9               	movwf	(?_robotMoveSpeed)
  2472  03E0  3001               	movlw	high(012Ch)
  2473  03E1  00DA               	movwf	((?_robotMoveSpeed))+1
  2474  03E2  30C8               	movlw	low(0C8h)
  2475  03E3  00DB               	movwf	0+(?_robotMoveSpeed)+02h
  2476  03E4  3000               	movlw	high(0C8h)
  2477  03E5  00DC               	movwf	(0+(?_robotMoveSpeed)+02h)+1
  2478  03E6  120A  158A  2111   	fcall	_robotMoveSpeed
              120A  118A         
  2479                           	line	251
  2480                           	
  2481  03EB                     l11977:	
  2482                           ;Main.c: 251: readAvgDistance();
  2483  03EB  160A  118A  25B8   	fcall	_readAvgDistance
              120A  118A         
  2484                           	line	252
  2485                           	
  2486  03F0                     l11979:	
  2487                           ;Main.c: 252: robotFollow(200, adcVal - 10, currentFlw);
  2488  03F0  30C8               	movlw	low(0C8h)
  2489  03F1  1283               	bcf	status, 5	;RP0=0, select bank0
  2490  03F2  1303               	bcf	status, 6	;RP1=0, select bank0
  2491  03F3  00D9               	movwf	(?_robotFollow)
  2492  03F4  3000               	movlw	high(0C8h)
  2493  03F5  00DA               	movwf	((?_robotFollow))+1
  2494  03F6  086C               	movf	(_adcVal),w	;volatile
  2495  03F7  3EF6               	addlw	low(-10)
  2496  03F8  00DB               	movwf	0+(?_robotFollow)+02h
  2497  03F9  086D               	movf	(_adcVal+1),w	;volatile
  2498  03FA  1803               	skipnc
  2499  03FB  3E01               	addlw	1
  2500  03FC  3EFF               	addlw	high(-10)
  2501  03FD  00DC               	movwf	1+0+(?_robotFollow)+02h
  2502  03FE  086B               	movf	(main@currentFlw),w
  2503  03FF  00E5               	movwf	(??_main+0)+0
  2504  0400  0865               	movf	(??_main+0)+0,w
  2505  0401  00DD               	movwf	0+(?_robotFollow)+04h
  2506  0402  120A  158A  242A   	fcall	_robotFollow
              120A  118A         
  2507                           	line	253
  2508                           ;Main.c: 253: break;
  2509  0407  2CE6               	goto	l12015
  2510                           	line	254
  2511                           ;Main.c: 254: case 4:
  2512                           	
  2513  0408                     l2274:	
  2514                           	line	255
  2515                           	
  2516  0408                     l11981:	
  2517                           ;Main.c: 255: ser_putch(141);
  2518  0408  308D               	movlw	(08Dh)
  2519  0409  160A  118A  2105   	fcall	_ser_putch
              120A  118A         
  2520                           	line	256
  2521                           ;Main.c: 256: ser_putch(1);
  2522  040E  3001               	movlw	(01h)
  2523  040F  160A  118A  2105   	fcall	_ser_putch
              120A  118A         
  2524                           	line	257
  2525                           	
  2526  0414                     l11983:	
  2527                           ;Main.c: 257: ROBOTerror = 9;
  2528  0414  3009               	movlw	(09h)
  2529  0415  1283               	bcf	status, 5	;RP0=0, select bank0
  2530  0416  1303               	bcf	status, 6	;RP1=0, select bank0
  2531  0417  00E5               	movwf	(??_main+0)+0
  2532  0418  0865               	movf	(??_main+0)+0,w
  2533  0419  1683               	bsf	status, 5	;RP0=1, select bank1
  2534  041A  1303               	bcf	status, 6	;RP1=0, select bank1
  2535  041B  00D4               	movwf	(_ROBOTerror)^080h
  2536                           	line	258
  2537                           ;Main.c: 258: break;
  2538  041C  2CE6               	goto	l12015
  2539                           	line	259
  2540                           ;Main.c: 259: case 9:
  2541                           	
  2542  041D                     l2275:	
  2543                           	line	260
  2544                           	
  2545  041D                     l11985:	
  2546                           ;Main.c: 260: ROBOTerror = 9;
  2547  041D  3009               	movlw	(09h)
  2548  041E  1283               	bcf	status, 5	;RP0=0, select bank0
  2549  041F  1303               	bcf	status, 6	;RP1=0, select bank0
  2550  0420  00E5               	movwf	(??_main+0)+0
  2551  0421  0865               	movf	(??_main+0)+0,w
  2552  0422  1683               	bsf	status, 5	;RP0=1, select bank1
  2553  0423  1303               	bcf	status, 6	;RP1=0, select bank1
  2554  0424  00D4               	movwf	(_ROBOTerror)^080h
  2555                           	line	261
  2556                           ;Main.c: 261: break;
  2557  0425  2CE6               	goto	l12015
  2558                           	line	262
  2559                           ;Main.c: 262: case 10:
  2560                           	
  2561  0426                     l2276:	
  2562                           	line	263
  2563                           	
  2564  0426                     l11987:	
  2565                           ;Main.c: 263: RobotPos++;
  2566  0426  3001               	movlw	(01h)
  2567  0427  1283               	bcf	status, 5	;RP0=0, select bank0
  2568  0428  1303               	bcf	status, 6	;RP1=0, select bank0
  2569  0429  00E5               	movwf	(??_main+0)+0
  2570  042A  0865               	movf	(??_main+0)+0,w
  2571  042B  1683               	bsf	status, 5	;RP0=1, select bank1
  2572  042C  1303               	bcf	status, 6	;RP1=0, select bank1
  2573  042D  07D6               	addwf	(_RobotPos)^080h,f
  2574                           	line	265
  2575                           	
  2576  042E                     l11989:	
  2577                           ;Main.c: 265: robotTurnSpeed(75,400);
  2578  042E  304B               	movlw	low(04Bh)
  2579  042F  1283               	bcf	status, 5	;RP0=0, select bank0
  2580  0430  1303               	bcf	status, 6	;RP1=0, select bank0
  2581  0431  00D9               	movwf	(?_robotTurnSpeed)
  2582  0432  3000               	movlw	high(04Bh)
  2583  0433  00DA               	movwf	((?_robotTurnSpeed))+1
  2584  0434  3090               	movlw	low(0190h)
  2585  0435  00DB               	movwf	0+(?_robotTurnSpeed)+02h
  2586  0436  3001               	movlw	high(0190h)
  2587  0437  00DC               	movwf	(0+(?_robotTurnSpeed)+02h)+1
  2588  0438  120A  158A  2069   	fcall	_robotTurnSpeed
              120A  118A         
  2589                           	line	267
  2590                           	
  2591  043D                     l11991:	
  2592                           ;Main.c: 267: readAvgDistance();
  2593  043D  160A  118A  25B8   	fcall	_readAvgDistance
              120A  118A         
  2594                           	line	268
  2595                           	
  2596  0442                     l11993:	
  2597                           ;Main.c: 268: robotFollow(200, adcVal - 10, currentFlw);
  2598  0442  30C8               	movlw	low(0C8h)
  2599  0443  1283               	bcf	status, 5	;RP0=0, select bank0
  2600  0444  1303               	bcf	status, 6	;RP1=0, select bank0
  2601  0445  00D9               	movwf	(?_robotFollow)
  2602  0446  3000               	movlw	high(0C8h)
  2603  0447  00DA               	movwf	((?_robotFollow))+1
  2604  0448  086C               	movf	(_adcVal),w	;volatile
  2605  0449  3EF6               	addlw	low(-10)
  2606  044A  00DB               	movwf	0+(?_robotFollow)+02h
  2607  044B  086D               	movf	(_adcVal+1),w	;volatile
  2608  044C  1803               	skipnc
  2609  044D  3E01               	addlw	1
  2610  044E  3EFF               	addlw	high(-10)
  2611  044F  00DC               	movwf	1+0+(?_robotFollow)+02h
  2612  0450  086B               	movf	(main@currentFlw),w
  2613  0451  00E5               	movwf	(??_main+0)+0
  2614  0452  0865               	movf	(??_main+0)+0,w
  2615  0453  00DD               	movwf	0+(?_robotFollow)+04h
  2616  0454  120A  158A  242A   	fcall	_robotFollow
              120A  118A         
  2617                           	line	269
  2618                           ;Main.c: 269: break;
  2619  0459  2CE6               	goto	l12015
  2620                           	line	270
  2621                           ;Main.c: 270: case 11:
  2622                           	
  2623  045A                     l2277:	
  2624                           	line	271
  2625                           	
  2626  045A                     l11995:	
  2627                           ;Main.c: 271: RobotPos++;
  2628  045A  3001               	movlw	(01h)
  2629  045B  1283               	bcf	status, 5	;RP0=0, select bank0
  2630  045C  1303               	bcf	status, 6	;RP1=0, select bank0
  2631  045D  00E5               	movwf	(??_main+0)+0
  2632  045E  0865               	movf	(??_main+0)+0,w
  2633  045F  1683               	bsf	status, 5	;RP0=1, select bank1
  2634  0460  1303               	bcf	status, 6	;RP1=0, select bank1
  2635  0461  07D6               	addwf	(_RobotPos)^080h,f
  2636                           	line	272
  2637                           	
  2638  0462                     l11997:	
  2639                           ;Main.c: 272: rotate(25, 0);
  2640  0462  3019               	movlw	low(019h)
  2641  0463  1283               	bcf	status, 5	;RP0=0, select bank0
  2642  0464  1303               	bcf	status, 6	;RP1=0, select bank0
  2643  0465  00A3               	movwf	(?_rotate)
  2644  0466  3000               	movlw	high(019h)
  2645  0467  00A4               	movwf	((?_rotate))+1
  2646  0468  01A5               	clrf	0+(?_rotate)+02h
  2647  0469  160A  118A  23FB   	fcall	_rotate
              120A  118A         
  2648                           	line	273
  2649                           	
  2650  046E                     l11999:	
  2651                           ;Main.c: 273: readAvgDistance();
  2652  046E  160A  118A  25B8   	fcall	_readAvgDistance
              120A  118A         
  2653                           	line	274
  2654                           	
  2655  0473                     l12001:	
  2656                           ;Main.c: 274: robot_turnRight(200, adcVal);
  2657  0473  30C8               	movlw	low(0C8h)
  2658  0474  1283               	bcf	status, 5	;RP0=0, select bank0
  2659  0475  1303               	bcf	status, 6	;RP1=0, select bank0
  2660  0476  00D9               	movwf	(?_robot_turnRight)
  2661  0477  3000               	movlw	high(0C8h)
  2662  0478  00DA               	movwf	((?_robot_turnRight))+1
  2663  0479  086D               	movf	(_adcVal+1),w	;volatile
  2664  047A  01DC               	clrf	1+(?_robot_turnRight)+02h
  2665  047B  07DC               	addwf	1+(?_robot_turnRight)+02h
  2666  047C  086C               	movf	(_adcVal),w	;volatile
  2667  047D  01DB               	clrf	0+(?_robot_turnRight)+02h
  2668  047E  07DB               	addwf	0+(?_robot_turnRight)+02h
  2669                           
  2670  047F  120A  118A  2015   	fcall	_robot_turnRight
              120A  118A         
  2671                           	line	275
  2672                           	
  2673  0484                     l12003:	
  2674                           ;Main.c: 275: rotate(25, 1);
  2675  0484  3019               	movlw	low(019h)
  2676  0485  1283               	bcf	status, 5	;RP0=0, select bank0
  2677  0486  1303               	bcf	status, 6	;RP1=0, select bank0
  2678  0487  00A3               	movwf	(?_rotate)
  2679  0488  3000               	movlw	high(019h)
  2680  0489  00A4               	movwf	((?_rotate))+1
  2681  048A  01A5               	clrf	0+(?_rotate)+02h
  2682  048B  1403               	bsf	status,0
  2683  048C  0DA5               	rlf	0+(?_rotate)+02h,f
  2684  048D  160A  118A  23FB   	fcall	_rotate
              120A  118A         
  2685                           	line	276
  2686                           	
  2687  0492                     l12005:	
  2688                           ;Main.c: 276: readAvgDistance();
  2689  0492  160A  118A  25B8   	fcall	_readAvgDistance
              120A  118A         
  2690                           	line	277
  2691                           	
  2692  0497                     l12007:	
  2693                           ;Main.c: 277: robotFollow(200, adcVal, currentFlw);
  2694  0497  30C8               	movlw	low(0C8h)
  2695  0498  1283               	bcf	status, 5	;RP0=0, select bank0
  2696  0499  1303               	bcf	status, 6	;RP1=0, select bank0
  2697  049A  00D9               	movwf	(?_robotFollow)
  2698  049B  3000               	movlw	high(0C8h)
  2699  049C  00DA               	movwf	((?_robotFollow))+1
  2700  049D  086D               	movf	(_adcVal+1),w	;volatile
  2701  049E  01DC               	clrf	1+(?_robotFollow)+02h
  2702  049F  07DC               	addwf	1+(?_robotFollow)+02h
  2703  04A0  086C               	movf	(_adcVal),w	;volatile
  2704  04A1  01DB               	clrf	0+(?_robotFollow)+02h
  2705  04A2  07DB               	addwf	0+(?_robotFollow)+02h
  2706                           
  2707  04A3  086B               	movf	(main@currentFlw),w
  2708  04A4  00E5               	movwf	(??_main+0)+0
  2709  04A5  0865               	movf	(??_main+0)+0,w
  2710  04A6  00DD               	movwf	0+(?_robotFollow)+04h
  2711  04A7  120A  158A  242A   	fcall	_robotFollow
              120A  118A         
  2712                           	line	279
  2713                           ;Main.c: 279: break;
  2714  04AC  2CE6               	goto	l12015
  2715                           	line	280
  2716                           ;Main.c: 280: default:
  2717                           	
  2718  04AD                     l2278:	
  2719                           	line	281
  2720                           	
  2721  04AD                     l12009:	
  2722                           ;Main.c: 281: readAvgDistance();
  2723  04AD  160A  118A  25B8   	fcall	_readAvgDistance
              120A  118A         
  2724                           	line	282
  2725                           ;Main.c: 282: robotFollow(200, adcVal, currentFlw);
  2726  04B2  30C8               	movlw	low(0C8h)
  2727  04B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2728  04B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2729  04B5  00D9               	movwf	(?_robotFollow)
  2730  04B6  3000               	movlw	high(0C8h)
  2731  04B7  00DA               	movwf	((?_robotFollow))+1
  2732  04B8  086D               	movf	(_adcVal+1),w	;volatile
  2733  04B9  01DC               	clrf	1+(?_robotFollow)+02h
  2734  04BA  07DC               	addwf	1+(?_robotFollow)+02h
  2735  04BB  086C               	movf	(_adcVal),w	;volatile
  2736  04BC  01DB               	clrf	0+(?_robotFollow)+02h
  2737  04BD  07DB               	addwf	0+(?_robotFollow)+02h
  2738                           
  2739  04BE  086B               	movf	(main@currentFlw),w
  2740  04BF  00E5               	movwf	(??_main+0)+0
  2741  04C0  0865               	movf	(??_main+0)+0,w
  2742  04C1  00DD               	movwf	0+(?_robotFollow)+04h
  2743  04C2  120A  158A  242A   	fcall	_robotFollow
              120A  118A         
  2744                           	line	283
  2745                           ;Main.c: 283: break;
  2746  04C7  2CE6               	goto	l12015
  2747                           	line	285
  2748                           	
  2749  04C8                     l12011:	
  2750                           ;Main.c: 285: }
  2751  04C8  2CE6               	goto	l12015
  2752                           	line	222
  2753                           	
  2754  04C9                     l2264:	
  2755                           	
  2756  04C9                     l12013:	
  2757  04C9  1683               	bsf	status, 5	;RP0=1, select bank1
  2758  04CA  1303               	bcf	status, 6	;RP1=0, select bank1
  2759  04CB  0854               	movf	(_ROBOTerror)^080h,w
  2760                           	; Switch size 1, requested type "space"
  2761                           ; Number of cases is 8, Range of values is 0 to 11
  2762                           ; switch strategies available:
  2763                           ; Name         Instructions Cycles
  2764                           ; simple_byte           25    13 (average)
  2765                           ; direct_byte           44     8 (fixed)
  2766                           ; jumptable            260     6 (fixed)
  2767                           ; rangetable            16     6 (fixed)
  2768                           ; spacedrange           30     9 (fixed)
  2769                           ; locatedrange          12     3 (fixed)
  2770                           ;	Chosen strategy is simple_byte
  2771                           
  2772                           	opt asmopt_off
  2773  04CC  3A00               	xorlw	0^0	; case 0
  2774  04CD  1903               	skipnz
  2775  04CE  2B0B               	goto	l11945
  2776  04CF  3A01               	xorlw	1^0	; case 1
  2777  04D0  1903               	skipnz
  2778  04D1  2B26               	goto	l11947
  2779  04D2  3A03               	xorlw	2^1	; case 2
  2780  04D3  1903               	skipnz
  2781  04D4  2B81               	goto	l11961
  2782  04D5  3A01               	xorlw	3^2	; case 3
  2783  04D6  1903               	skipnz
  2784  04D7  2B8A               	goto	l11963
  2785  04D8  3A07               	xorlw	4^3	; case 4
  2786  04D9  1903               	skipnz
  2787  04DA  2C08               	goto	l11981
  2788  04DB  3A0D               	xorlw	9^4	; case 9
  2789  04DC  1903               	skipnz
  2790  04DD  2C1D               	goto	l11985
  2791  04DE  3A03               	xorlw	10^9	; case 10
  2792  04DF  1903               	skipnz
  2793  04E0  2C26               	goto	l11987
  2794  04E1  3A01               	xorlw	11^10	; case 11
  2795  04E2  1903               	skipnz
  2796  04E3  2C5A               	goto	l11995
  2797  04E4  2CAD               	goto	l12009
  2798                           	opt asmopt_on
  2799                           
  2800                           	line	285
  2801                           	
  2802  04E5                     l2266:	
  2803  04E5  2CE6               	goto	l12015
  2804                           	line	286
  2805                           	
  2806  04E6                     l2262:	
  2807                           	line	220
  2808                           	
  2809  04E6                     l12015:	
  2810  04E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2811  04E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2812  04E8  0854               	movf	(_ROBOTerror)^080h,w
  2813  04E9  3A09               	xorlw	09h
  2814  04EA  1D03               	skipz
  2815  04EB  2CED               	goto	u5471
  2816  04EC  2CEE               	goto	u5470
  2817  04ED                     u5471:
  2818  04ED  2CC9               	goto	l12013
  2819  04EE                     u5470:
  2820                           	
  2821  04EE                     l2279:	
  2822                           	line	287
  2823                           ;Main.c: 286: }
  2824                           ;Main.c: 287: ROBOTerror = 0;
  2825  04EE  01D4               	clrf	(_ROBOTerror)^080h
  2826                           	line	288
  2827                           ;Main.c: 288: break;
  2828  04EF  2D0E               	goto	l12023
  2829                           	line	290
  2830                           ;Main.c: 290: case 5:
  2831                           	
  2832  04F0                     l2280:	
  2833                           	line	291
  2834                           	
  2835  04F0                     l12017:	
  2836                           ;Main.c: 291: ChargeMode();
  2837  04F0  160A  118A  230B   	fcall	_ChargeMode
              120A  118A         
  2838                           	line	292
  2839                           ;Main.c: 292: break;
  2840  04F5  2D0E               	goto	l12023
  2841                           	line	293
  2842                           ;Main.c: 293: default:
  2843                           	
  2844  04F6                     l2281:	
  2845                           	line	295
  2846                           ;Main.c: 295: break;
  2847  04F6  2D0E               	goto	l12023
  2848                           	line	296
  2849                           	
  2850  04F7                     l12019:	
  2851                           ;Main.c: 296: }
  2852  04F7  2D0E               	goto	l12023
  2853                           	line	196
  2854                           	
  2855  04F8                     l2255:	
  2856                           	
  2857  04F8                     l12021:	
  2858  04F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2859  04F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2860  04FA  086A               	movf	(main@choice),w
  2861                           	; Switch size 1, requested type "space"
  2862                           ; Number of cases is 6, Range of values is 0 to 5
  2863                           ; switch strategies available:
  2864                           ; Name         Instructions Cycles
  2865                           ; simple_byte           19    10 (average)
  2866                           ; direct_byte           26     8 (fixed)
  2867                           ; jumptable            260     6 (fixed)
  2868                           ; rangetable            10     6 (fixed)
  2869                           ; spacedrange           18     9 (fixed)
  2870                           ; locatedrange           6     3 (fixed)
  2871                           ;	Chosen strategy is simple_byte
  2872                           
  2873                           	opt asmopt_off
  2874  04FB  3A00               	xorlw	0^0	; case 0
  2875  04FC  1903               	skipnz
  2876  04FD  2AF5               	goto	l11941
  2877  04FE  3A01               	xorlw	1^0	; case 1
  2878  04FF  1903               	skipnz
  2879  0500  2D0E               	goto	l12023
  2880  0501  3A03               	xorlw	2^1	; case 2
  2881  0502  1903               	skipnz
  2882  0503  2D0E               	goto	l12023
  2883  0504  3A01               	xorlw	3^2	; case 3
  2884  0505  1903               	skipnz
  2885  0506  2D0E               	goto	l12023
  2886  0507  3A07               	xorlw	4^3	; case 4
  2887  0508  1903               	skipnz
  2888  0509  2AFE               	goto	l2261
  2889  050A  3A01               	xorlw	5^4	; case 5
  2890  050B  1903               	skipnz
  2891  050C  2CF0               	goto	l12017
  2892  050D  2D0E               	goto	l12023
  2893                           	opt asmopt_on
  2894                           
  2895                           	line	296
  2896                           	
  2897  050E                     l2257:	
  2898                           	line	297
  2899                           	
  2900  050E                     l12023:	
  2901                           ;Main.c: 297: choice = 255;
  2902  050E  30FF               	movlw	(0FFh)
  2903  050F  1283               	bcf	status, 5	;RP0=0, select bank0
  2904  0510  1303               	bcf	status, 6	;RP1=0, select bank0
  2905  0511  00E5               	movwf	(??_main+0)+0
  2906  0512  0865               	movf	(??_main+0)+0,w
  2907  0513  00EA               	movwf	(main@choice)
  2908  0514  2ACD               	goto	l11925
  2909                           	line	298
  2910                           	
  2911  0515                     l2282:	
  2912                           	line	178
  2913  0515  2ACD               	goto	l11925
  2914                           	
  2915  0516                     l2283:	
  2916                           	line	299
  2917                           	
  2918  0516                     l2284:	
  2919                           	global	start
  2920  0516  120A  118A  2812   	ljmp	start
  2921                           	opt stack 0
  2922                           GLOBAL	__end_of_main
  2923  0519                     	__end_of_main:
  2924 ;; =============== function _main ends ============
  2925                           
  2926                           	signat	_main,88
  2927                           	global	_Init_Follow_IR
  2928                           psect	text1062,local,class=CODE,delta=2
  2929                           global __ptext1062
  2930  1FB6                     __ptext1062:
  2931                           
  2932 ;; *************** function _Init_Follow_IR *****************
  2933 ;; Defined at:
  2934 ;;		line 302 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;		None               void
  2941 ;; Registers used:
  2942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2948 ;;      Params:         0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0
  2950 ;;      Temps:          0       3       0       0       0
  2951 ;;      Totals:         0       3       0       0       0
  2952 ;;Total ram usage:        3 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    7
  2955 ;; This function calls:
  2956 ;;		_calibrateIR
  2957 ;;		_rotate
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           psect	text1062
  2963                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2964                           	line	302
  2965                           	global	__size_of_Init_Follow_IR
  2966  0021                     	__size_of_Init_Follow_IR	equ	__end_of_Init_Follow_IR-_Init_Follow_IR
  2967                           	
  2968  1FB6                     _Init_Follow_IR:	
  2969                           	opt	stack 0
  2970                           ; Regs used in _Init_Follow_IR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2971                           	line	303
  2972                           	
  2973  1FB6                     l11911:	
  2974                           ;Main.c: 303: calibrateIR();
  2975  1FB6  160A  118A  2462   	fcall	_calibrateIR
              160A  158A         
  2976                           	line	304
  2977                           	
  2978  1FBB                     l11913:	
  2979                           ;Main.c: 304: _delay((unsigned long)((500)*(20000000/4000.0)));
  2980                           	opt asmopt_off
  2981  1FBB  300D               movlw  13
  2982  1FBC  1283               	bcf	status, 5	;RP0=0, select bank0
  2983  1FBD  1303               	bcf	status, 6	;RP1=0, select bank0
  2984  1FBE  00DB               movwf	((??_Init_Follow_IR+0)+0+2),f
  2985  1FBF  30AF               movlw	175
  2986  1FC0  00DA               movwf	((??_Init_Follow_IR+0)+0+1),f
  2987  1FC1  30C1               	movlw	193
  2988  1FC2  00D9               movwf	((??_Init_Follow_IR+0)+0),f
  2989  1FC3                     u5507:
  2990  1FC3  0BD9               	decfsz	((??_Init_Follow_IR+0)+0),f
  2991  1FC4  2FC3               	goto	u5507
  2992  1FC5  0BDA               	decfsz	((??_Init_Follow_IR+0)+0+1),f
  2993  1FC6  2FC3               	goto	u5507
  2994  1FC7  0BDB               	decfsz	((??_Init_Follow_IR+0)+0+2),f
  2995  1FC8  2FC3               	goto	u5507
  2996  1FC9  0064               	clrwdt
  2997                           opt asmopt_on
  2998                           
  2999                           	line	305
  3000                           	
  3001  1FCA                     l11915:	
  3002                           ;Main.c: 305: rotate(25, 0);
  3003  1FCA  3019               	movlw	low(019h)
  3004  1FCB  1283               	bcf	status, 5	;RP0=0, select bank0
  3005  1FCC  1303               	bcf	status, 6	;RP1=0, select bank0
  3006  1FCD  00A3               	movwf	(?_rotate)
  3007  1FCE  3000               	movlw	high(019h)
  3008  1FCF  00A4               	movwf	((?_rotate))+1
  3009  1FD0  01A5               	clrf	0+(?_rotate)+02h
  3010  1FD1  160A  118A  23FB   	fcall	_rotate
              160A  158A         
  3011                           	line	306
  3012                           	
  3013  1FD6                     l2287:	
  3014  1FD6  0008               	return
  3015                           	opt stack 0
  3016                           GLOBAL	__end_of_Init_Follow_IR
  3017  1FD7                     	__end_of_Init_Follow_IR:
  3018 ;; =============== function _Init_Follow_IR ends ============
  3019                           
  3020                           	signat	_Init_Follow_IR,88
  3021                           	global	_ChargeMode
  3022                           psect	text1063,local,class=CODE,delta=2
  3023                           global __ptext1063
  3024  130B                     __ptext1063:
  3025                           
  3026 ;; *************** function _ChargeMode *****************
  3027 ;; Defined at:
  3028 ;;		line 361 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;		None               void
  3035 ;; Registers used:
  3036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3042 ;;      Params:         0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0
  3044 ;;      Temps:          0       1       0       0       0
  3045 ;;      Totals:         0       1       0       0       0
  3046 ;;Total ram usage:        1 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    6
  3049 ;; This function calls:
  3050 ;;		_ser_putch
  3051 ;;		_RobotBattRead
  3052 ;;		_UpdateDisplay
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           psect	text1063
  3058                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3059                           	line	361
  3060                           	global	__size_of_ChargeMode
  3061  004B                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  3062                           	
  3063  130B                     _ChargeMode:	
  3064                           	opt	stack 1
  3065                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3066                           	line	363
  3067                           	
  3068  130B                     l11889:	
  3069                           ;Main.c: 363: currentMenu = 2;
  3070  130B  3002               	movlw	(02h)
  3071  130C  1283               	bcf	status, 5	;RP0=0, select bank0
  3072  130D  1303               	bcf	status, 6	;RP1=0, select bank0
  3073  130E  00D9               	movwf	(??_ChargeMode+0)+0
  3074  130F  0859               	movf	(??_ChargeMode+0)+0,w
  3075  1310  1683               	bsf	status, 5	;RP0=1, select bank1
  3076  1311  1303               	bcf	status, 6	;RP1=0, select bank1
  3077  1312  00D9               	movwf	(_currentMenu)^080h	;volatile
  3078                           	line	364
  3079                           	
  3080  1313                     l11891:	
  3081                           ;Main.c: 364: ser_putch(128);
  3082  1313  3080               	movlw	(080h)
  3083  1314  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  3084  1319  2B1A               	goto	l11893
  3085                           	line	366
  3086                           ;Main.c: 366: while (1)
  3087                           	
  3088  131A                     l2308:	
  3089                           	line	368
  3090                           	
  3091  131A                     l11893:	
  3092                           ;Main.c: 367: {
  3093                           ;Main.c: 368: if (RTC_FLAG_250MS == 1)
  3094  131A  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3095  131B  2B1D               	goto	u5421
  3096  131C  2B1E               	goto	u5420
  3097  131D                     u5421:
  3098  131D  2B42               	goto	l11909
  3099  131E                     u5420:
  3100                           	line	370
  3101                           	
  3102  131E                     l11895:	
  3103                           ;Main.c: 369: {
  3104                           ;Main.c: 370: RTC_FLAG_250MS = 0;
  3105  131E  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3106                           	line	371
  3107                           	
  3108  131F                     l11897:	
  3109                           ;Main.c: 371: RobotBattRead();
  3110  131F  160A  118A  2636   	fcall	_RobotBattRead
              160A  118A         
  3111                           	line	372
  3112                           ;Main.c: 372: UpdateDisplay();
  3113  1324  120A  158A  260B   	fcall	_UpdateDisplay
              160A  118A         
  3114  1329  2B42               	goto	l11909
  3115                           	line	373
  3116                           	
  3117  132A                     l2309:	
  3118                           	line	374
  3119                           ;Main.c: 373: }
  3120                           ;Main.c: 374: switch (buttonPressed)
  3121  132A  2B42               	goto	l11909
  3122                           	line	376
  3123                           ;Main.c: 375: {
  3124                           ;Main.c: 376: case 1:
  3125                           	
  3126  132B                     l2311:	
  3127                           	line	377
  3128                           ;Main.c: 377: buttonPressed = 0;
  3129  132B  01FD               	clrf	(_buttonPressed)	;volatile
  3130                           	line	378
  3131                           ;Main.c: 378: break;
  3132  132C  2B1A               	goto	l11893
  3133                           	line	379
  3134                           ;Main.c: 379: case 2:
  3135                           	
  3136  132D                     l2313:	
  3137                           	line	380
  3138                           ;Main.c: 380: buttonPressed = 0;
  3139  132D  01FD               	clrf	(_buttonPressed)	;volatile
  3140                           	line	381
  3141                           ;Main.c: 381: break;
  3142  132E  2B1A               	goto	l11893
  3143                           	line	382
  3144                           ;Main.c: 382: case 3:
  3145                           	
  3146  132F                     l2314:	
  3147                           	line	383
  3148                           ;Main.c: 383: buttonPressed = 0;
  3149  132F  01FD               	clrf	(_buttonPressed)	;volatile
  3150                           	line	384
  3151                           ;Main.c: 384: break;
  3152  1330  2B1A               	goto	l11893
  3153                           	line	385
  3154                           ;Main.c: 385: case 4:
  3155                           	
  3156  1331                     l2315:	
  3157                           	line	386
  3158                           ;Main.c: 386: buttonPressed = 0;
  3159  1331  01FD               	clrf	(_buttonPressed)	;volatile
  3160                           	line	387
  3161                           ;Main.c: 387: break;
  3162  1332  2B1A               	goto	l11893
  3163                           	line	388
  3164                           ;Main.c: 388: case 5:
  3165                           	
  3166  1333                     l2316:	
  3167                           	line	389
  3168                           	
  3169  1333                     l11899:	
  3170                           ;Main.c: 389: ser_putch(132);
  3171  1333  3084               	movlw	(084h)
  3172  1334  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  3173                           	line	390
  3174                           	
  3175  1339                     l11901:	
  3176                           ;Main.c: 390: buttonPressed = 0;
  3177  1339  01FD               	clrf	(_buttonPressed)	;volatile
  3178                           	line	391
  3179                           	
  3180  133A                     l11903:	
  3181                           ;Main.c: 391: currentMenu = 0;
  3182  133A  1683               	bsf	status, 5	;RP0=1, select bank1
  3183  133B  1303               	bcf	status, 6	;RP1=0, select bank1
  3184  133C  01D9               	clrf	(_currentMenu)^080h	;volatile
  3185  133D  2B55               	goto	l2317
  3186                           	line	392
  3187                           	
  3188  133E                     l11905:	
  3189                           ;Main.c: 392: return;
  3190  133E  2B55               	goto	l2317
  3191                           	line	393
  3192                           ;Main.c: 393: default:
  3193                           	
  3194  133F                     l2318:	
  3195                           	line	394
  3196                           ;Main.c: 394: buttonPressed = 0;
  3197  133F  01FD               	clrf	(_buttonPressed)	;volatile
  3198                           	line	395
  3199                           ;Main.c: 395: break;
  3200  1340  2B1A               	goto	l11893
  3201                           	line	396
  3202                           	
  3203  1341                     l11907:	
  3204                           ;Main.c: 396: }
  3205  1341  2B1A               	goto	l11893
  3206                           	line	374
  3207                           	
  3208  1342                     l2310:	
  3209                           	
  3210  1342                     l11909:	
  3211  1342  087D               	movf	(_buttonPressed),w	;volatile
  3212                           	; Switch size 1, requested type "space"
  3213                           ; Number of cases is 5, Range of values is 1 to 5
  3214                           ; switch strategies available:
  3215                           ; Name         Instructions Cycles
  3216                           ; simple_byte           16     9 (average)
  3217                           ; direct_byte           26    11 (fixed)
  3218                           ; jumptable            263     9 (fixed)
  3219                           ;	Chosen strategy is simple_byte
  3220                           
  3221                           	opt asmopt_off
  3222  1343  3A01               	xorlw	1^0	; case 1
  3223  1344  1903               	skipnz
  3224  1345  2B2B               	goto	l2311
  3225  1346  3A03               	xorlw	2^1	; case 2
  3226  1347  1903               	skipnz
  3227  1348  2B2D               	goto	l2313
  3228  1349  3A01               	xorlw	3^2	; case 3
  3229  134A  1903               	skipnz
  3230  134B  2B2F               	goto	l2314
  3231  134C  3A07               	xorlw	4^3	; case 4
  3232  134D  1903               	skipnz
  3233  134E  2B31               	goto	l2315
  3234  134F  3A01               	xorlw	5^4	; case 5
  3235  1350  1903               	skipnz
  3236  1351  2B33               	goto	l11899
  3237  1352  2B3F               	goto	l2318
  3238                           	opt asmopt_on
  3239                           
  3240                           	line	396
  3241                           	
  3242  1353                     l2312:	
  3243  1353  2B1A               	goto	l11893
  3244                           	line	397
  3245                           	
  3246  1354                     l2319:	
  3247                           	line	366
  3248  1354  2B1A               	goto	l11893
  3249                           	
  3250  1355                     l2320:	
  3251                           	line	398
  3252                           	
  3253  1355                     l2317:	
  3254  1355  0008               	return
  3255                           	opt stack 0
  3256                           GLOBAL	__end_of_ChargeMode
  3257  1356                     	__end_of_ChargeMode:
  3258 ;; =============== function _ChargeMode ends ============
  3259                           
  3260                           	signat	_ChargeMode,88
  3261                           	global	_robot_turnRight
  3262                           psect	text1064,local,class=CODE,delta=2
  3263                           global __ptext1064
  3264  0015                     __ptext1064:
  3265                           
  3266 ;; *************** function _robot_turnRight *****************
  3267 ;; Defined at:
  3268 ;;		line 268 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  speed           2   57[BANK0 ] int 
  3271 ;;  AdcTarget       2   59[BANK0 ] int 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  temp1           2   66[BANK0 ] int 
  3274 ;;  turnTarget      2   64[BANK0 ] int 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;		None               void
  3277 ;; Registers used:
  3278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       4       0       0       0
  3285 ;;      Locals:         0       4       0       0       0
  3286 ;;      Temps:          0       3       0       0       0
  3287 ;;      Totals:         0      11       0       0       0
  3288 ;;Total ram usage:       11 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    7
  3291 ;; This function calls:
  3292 ;;		_RobotDrive
  3293 ;;		_readAvgDistance
  3294 ;;		_ser_putch
  3295 ;;		_robot_read
  3296 ;;		_UpdateDisplay
  3297 ;;		___wmul
  3298 ;;		___awdiv
  3299 ;;		_abs
  3300 ;; This function is called by:
  3301 ;;		_main
  3302 ;;		_RightTurn
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           psect	text1064
  3306                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  3307                           	line	268
  3308                           	global	__size_of_robot_turnRight
  3309  02A5                     	__size_of_robot_turnRight	equ	__end_of_robot_turnRight-_robot_turnRight
  3310                           	
  3311  0015                     _robot_turnRight:	
  3312                           	opt	stack 0
  3313                           ; Regs used in _robot_turnRight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3314                           	line	269
  3315                           	
  3316  0015                     l11775:	
  3317                           ;robot.c: 269: angleTurned = 0;
  3318  0015  1683               	bsf	status, 5	;RP0=1, select bank1
  3319  0016  1303               	bcf	status, 6	;RP1=0, select bank1
  3320  0017  01BE               	clrf	(_angleTurned)^080h
  3321  0018  01BF               	clrf	(_angleTurned+1)^080h
  3322                           	line	271
  3323                           ;robot.c: 270: int temp1;
  3324                           ;robot.c: 271: int turnTarget = 0;
  3325  0019  1283               	bcf	status, 5	;RP0=0, select bank0
  3326  001A  1303               	bcf	status, 6	;RP1=0, select bank0
  3327  001B  01E0               	clrf	(robot_turnRight@turnTarget)
  3328  001C  01E1               	clrf	(robot_turnRight@turnTarget+1)
  3329                           	line	272
  3330                           	
  3331  001D                     l11777:	
  3332                           ;robot.c: 272: RobotDrive(speed, 0x7FFF);
  3333  001D  085A               	movf	(robot_turnRight@speed+1),w
  3334  001E  01B0               	clrf	(?_RobotDrive+1)
  3335  001F  07B0               	addwf	(?_RobotDrive+1)
  3336  0020  0859               	movf	(robot_turnRight@speed),w
  3337  0021  01AF               	clrf	(?_RobotDrive)
  3338  0022  07AF               	addwf	(?_RobotDrive)
  3339                           
  3340  0023  30FF               	movlw	low(07FFFh)
  3341  0024  00B1               	movwf	0+(?_RobotDrive)+02h
  3342  0025  307F               	movlw	high(07FFFh)
  3343  0026  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3344  0027  160A  118A  21C6   	fcall	_RobotDrive
              120A  118A         
  3345                           	line	273
  3346                           	
  3347  002C                     l11779:	
  3348                           ;robot.c: 273: ROBOTerror = 0;
  3349  002C  1683               	bsf	status, 5	;RP0=1, select bank1
  3350  002D  1303               	bcf	status, 6	;RP1=0, select bank1
  3351  002E  01D4               	clrf	(_ROBOTerror)^080h
  3352  002F  2830               	goto	l11781
  3353                           	line	276
  3354                           ;robot.c: 276: while (1)
  3355                           	
  3356  0030                     l6145:	
  3357                           	line	278
  3358                           	
  3359  0030                     l11781:	
  3360                           ;robot.c: 277: {
  3361                           ;robot.c: 278: readAvgDistance();
  3362  0030  160A  118A  25B8   	fcall	_readAvgDistance
              120A  118A         
  3363                           	line	279
  3364                           	
  3365  0035                     l11783:	
  3366                           ;robot.c: 279: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + 15))
  3367  0035  1283               	bcf	status, 5	;RP0=0, select bank0
  3368  0036  1303               	bcf	status, 6	;RP1=0, select bank0
  3369  0037  086D               	movf	(_adcVal+1),w	;volatile
  3370  0038  025C               	subwf	(robot_turnRight@AdcTarget+1),w
  3371  0039  1D03               	skipz
  3372  003A  283D               	goto	u5275
  3373  003B  086C               	movf	(_adcVal),w	;volatile
  3374  003C  025B               	subwf	(robot_turnRight@AdcTarget),w
  3375  003D                     u5275:
  3376  003D  1803               	skipnc
  3377  003E  2840               	goto	u5271
  3378  003F  2841               	goto	u5270
  3379  0040                     u5271:
  3380  0040  2863               	goto	l11789
  3381  0041                     u5270:
  3382                           	
  3383  0041                     l11785:	
  3384  0041  085B               	movf	(robot_turnRight@AdcTarget),w
  3385  0042  3E0F               	addlw	low(0Fh)
  3386  0043  00DD               	movwf	(??_robot_turnRight+0)+0
  3387  0044  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3388  0045  1803               	skipnc
  3389  0046  3E01               	addlw	1
  3390  0047  3E00               	addlw	high(0Fh)
  3391  0048  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3392  0049  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3393  004A  026D               	subwf	(_adcVal+1),w	;volatile
  3394  004B  1D03               	skipz
  3395  004C  284F               	goto	u5285
  3396  004D  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3397  004E  026C               	subwf	(_adcVal),w	;volatile
  3398  004F                     u5285:
  3399  004F  1803               	skipnc
  3400  0050  2852               	goto	u5281
  3401  0051  2853               	goto	u5280
  3402  0052                     u5281:
  3403  0052  2863               	goto	l11789
  3404  0053                     u5280:
  3405                           	line	281
  3406                           	
  3407  0053                     l11787:	
  3408                           ;robot.c: 280: {
  3409                           ;robot.c: 281: RobotDrive(speed, 1700);
  3410  0053  085A               	movf	(robot_turnRight@speed+1),w
  3411  0054  01B0               	clrf	(?_RobotDrive+1)
  3412  0055  07B0               	addwf	(?_RobotDrive+1)
  3413  0056  0859               	movf	(robot_turnRight@speed),w
  3414  0057  01AF               	clrf	(?_RobotDrive)
  3415  0058  07AF               	addwf	(?_RobotDrive)
  3416                           
  3417  0059  30A4               	movlw	low(06A4h)
  3418  005A  00B1               	movwf	0+(?_RobotDrive)+02h
  3419  005B  3006               	movlw	high(06A4h)
  3420  005C  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3421  005D  160A  118A  21C6   	fcall	_RobotDrive
              120A  118A         
  3422                           	line	282
  3423                           ;robot.c: 282: }
  3424  0062  28D9               	goto	l6147
  3425                           	line	283
  3426                           	
  3427  0063                     l6146:	
  3428                           	
  3429  0063                     l11789:	
  3430                           ;robot.c: 283: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - 15))
  3431  0063  1283               	bcf	status, 5	;RP0=0, select bank0
  3432  0064  1303               	bcf	status, 6	;RP1=0, select bank0
  3433  0065  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3434  0066  026D               	subwf	(_adcVal+1),w	;volatile
  3435  0067  1D03               	skipz
  3436  0068  286B               	goto	u5295
  3437  0069  085B               	movf	(robot_turnRight@AdcTarget),w
  3438  006A  026C               	subwf	(_adcVal),w	;volatile
  3439  006B                     u5295:
  3440  006B  1803               	skipnc
  3441  006C  286E               	goto	u5291
  3442  006D  286F               	goto	u5290
  3443  006E                     u5291:
  3444  006E  2891               	goto	l11795
  3445  006F                     u5290:
  3446                           	
  3447  006F                     l11791:	
  3448  006F  085B               	movf	(robot_turnRight@AdcTarget),w
  3449  0070  3EF1               	addlw	low(0FFF1h)
  3450  0071  00DD               	movwf	(??_robot_turnRight+0)+0
  3451  0072  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3452  0073  1803               	skipnc
  3453  0074  3E01               	addlw	1
  3454  0075  3EFF               	addlw	high(0FFF1h)
  3455  0076  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3456  0077  086D               	movf	(_adcVal+1),w	;volatile
  3457  0078  025E               	subwf	1+(??_robot_turnRight+0)+0,w
  3458  0079  1D03               	skipz
  3459  007A  287D               	goto	u5305
  3460  007B  086C               	movf	(_adcVal),w	;volatile
  3461  007C  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  3462  007D                     u5305:
  3463  007D  1803               	skipnc
  3464  007E  2880               	goto	u5301
  3465  007F  2881               	goto	u5300
  3466  0080                     u5301:
  3467  0080  2891               	goto	l11795
  3468  0081                     u5300:
  3469                           	line	285
  3470                           	
  3471  0081                     l11793:	
  3472                           ;robot.c: 284: {
  3473                           ;robot.c: 285: RobotDrive(speed, -1700);
  3474  0081  085A               	movf	(robot_turnRight@speed+1),w
  3475  0082  01B0               	clrf	(?_RobotDrive+1)
  3476  0083  07B0               	addwf	(?_RobotDrive+1)
  3477  0084  0859               	movf	(robot_turnRight@speed),w
  3478  0085  01AF               	clrf	(?_RobotDrive)
  3479  0086  07AF               	addwf	(?_RobotDrive)
  3480                           
  3481  0087  305C               	movlw	low(-1700)
  3482  0088  00B1               	movwf	0+(?_RobotDrive)+02h
  3483  0089  30F9               	movlw	high(-1700)
  3484  008A  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3485  008B  160A  118A  21C6   	fcall	_RobotDrive
              120A  118A         
  3486                           	line	286
  3487                           ;robot.c: 286: }
  3488  0090  28D9               	goto	l6147
  3489                           	line	287
  3490                           	
  3491  0091                     l6148:	
  3492                           	
  3493  0091                     l11795:	
  3494                           ;robot.c: 287: else if (adcVal <= (AdcTarget - 50) || adcVal >= (AdcTarget + 15))
  3495  0091  1283               	bcf	status, 5	;RP0=0, select bank0
  3496  0092  1303               	bcf	status, 6	;RP1=0, select bank0
  3497  0093  085B               	movf	(robot_turnRight@AdcTarget),w
  3498  0094  3ECE               	addlw	low(0FFCEh)
  3499  0095  00DD               	movwf	(??_robot_turnRight+0)+0
  3500  0096  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3501  0097  1803               	skipnc
  3502  0098  3E01               	addlw	1
  3503  0099  3EFF               	addlw	high(0FFCEh)
  3504  009A  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3505  009B  086D               	movf	(_adcVal+1),w	;volatile
  3506  009C  025E               	subwf	1+(??_robot_turnRight+0)+0,w
  3507  009D  1D03               	skipz
  3508  009E  28A1               	goto	u5315
  3509  009F  086C               	movf	(_adcVal),w	;volatile
  3510  00A0  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  3511  00A1                     u5315:
  3512  00A1  1803               	skipnc
  3513  00A2  28A4               	goto	u5311
  3514  00A3  28A5               	goto	u5310
  3515  00A4                     u5311:
  3516  00A4  28B8               	goto	l11799
  3517  00A5                     u5310:
  3518                           	
  3519  00A5                     l11797:	
  3520  00A5  085B               	movf	(robot_turnRight@AdcTarget),w
  3521  00A6  3E0F               	addlw	low(0Fh)
  3522  00A7  00DD               	movwf	(??_robot_turnRight+0)+0
  3523  00A8  085C               	movf	(robot_turnRight@AdcTarget+1),w
  3524  00A9  1803               	skipnc
  3525  00AA  3E01               	addlw	1
  3526  00AB  3E00               	addlw	high(0Fh)
  3527  00AC  00DE               	movwf	1+(??_robot_turnRight+0)+0
  3528  00AD  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3529  00AE  026D               	subwf	(_adcVal+1),w	;volatile
  3530  00AF  1D03               	skipz
  3531  00B0  28B3               	goto	u5325
  3532  00B1  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3533  00B2  026C               	subwf	(_adcVal),w	;volatile
  3534  00B3                     u5325:
  3535  00B3  1C03               	skipc
  3536  00B4  28B6               	goto	u5321
  3537  00B5  28B7               	goto	u5320
  3538  00B6                     u5321:
  3539  00B6  28C6               	goto	l11803
  3540  00B7                     u5320:
  3541  00B7  28B8               	goto	l11799
  3542                           	
  3543  00B8                     l6152:	
  3544                           	line	294
  3545                           	
  3546  00B8                     l11799:	
  3547                           ;robot.c: 288: {
  3548                           ;robot.c: 294: ser_putch(141);
  3549  00B8  308D               	movlw	(08Dh)
  3550  00B9  160A  118A  2105   	fcall	_ser_putch
              120A  118A         
  3551                           	line	295
  3552                           ;robot.c: 295: ser_putch(0);
  3553  00BE  3000               	movlw	(0)
  3554  00BF  160A  118A  2105   	fcall	_ser_putch
              120A  118A         
  3555                           	line	296
  3556                           ;robot.c: 296: break;
  3557  00C4  2993               	goto	l11837
  3558                           	line	298
  3559                           	
  3560  00C5                     l11801:	
  3561                           ;robot.c: 298: }
  3562  00C5  28D9               	goto	l6147
  3563                           	line	300
  3564                           	
  3565  00C6                     l6150:	
  3566                           	line	302
  3567                           	
  3568  00C6                     l11803:	
  3569                           ;robot.c: 300: else
  3570                           ;robot.c: 301: {
  3571                           ;robot.c: 302: RobotDrive(speed, 0x7FFF);
  3572  00C6  1283               	bcf	status, 5	;RP0=0, select bank0
  3573  00C7  1303               	bcf	status, 6	;RP1=0, select bank0
  3574  00C8  085A               	movf	(robot_turnRight@speed+1),w
  3575  00C9  01B0               	clrf	(?_RobotDrive+1)
  3576  00CA  07B0               	addwf	(?_RobotDrive+1)
  3577  00CB  0859               	movf	(robot_turnRight@speed),w
  3578  00CC  01AF               	clrf	(?_RobotDrive)
  3579  00CD  07AF               	addwf	(?_RobotDrive)
  3580                           
  3581  00CE  30FF               	movlw	low(07FFFh)
  3582  00CF  00B1               	movwf	0+(?_RobotDrive)+02h
  3583  00D0  307F               	movlw	high(07FFFh)
  3584  00D1  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3585  00D2  160A  118A  21C6   	fcall	_RobotDrive
              120A  118A         
  3586  00D7  28D9               	goto	l6147
  3587                           	line	303
  3588                           	
  3589  00D8                     l6154:	
  3590  00D8  28D9               	goto	l6147
  3591                           	
  3592  00D9                     l6149:	
  3593                           	
  3594  00D9                     l6147:	
  3595                           	line	304
  3596                           ;robot.c: 303: }
  3597                           ;robot.c: 304: robot_read(2);
  3598  00D9  3002               	movlw	(02h)
  3599  00DA  120A  158A  2305   	fcall	_robot_read
              120A  118A         
  3600                           	line	305
  3601                           	
  3602  00DF                     l11805:	
  3603                           ;robot.c: 305: if (BumpSensors)
  3604  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  3605  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  3606  00E1  086E               	movf	(_BumpSensors),w	;volatile
  3607  00E2  1D03               	skipz
  3608  00E3  28E5               	goto	u5330
  3609  00E4  28EB               	goto	l11809
  3610  00E5                     u5330:
  3611                           	line	307
  3612                           	
  3613  00E5                     l11807:	
  3614                           ;robot.c: 306: {
  3615                           ;robot.c: 307: ROBOTerror = 1;
  3616  00E5  1683               	bsf	status, 5	;RP0=1, select bank1
  3617  00E6  1303               	bcf	status, 6	;RP1=0, select bank1
  3618  00E7  01D4               	clrf	(_ROBOTerror)^080h
  3619  00E8  1403               	bsf	status,0
  3620  00E9  0DD4               	rlf	(_ROBOTerror)^080h,f
  3621                           	line	308
  3622                           ;robot.c: 308: break;
  3623  00EA  2993               	goto	l11837
  3624                           	line	309
  3625                           	
  3626  00EB                     l6155:	
  3627                           	line	310
  3628                           	
  3629  00EB                     l11809:	
  3630                           ;robot.c: 309: }
  3631                           ;robot.c: 310: if (VwallSensor)
  3632  00EB  1283               	bcf	status, 5	;RP0=0, select bank0
  3633  00EC  086F               	movf	(_VwallSensor),w	;volatile
  3634  00ED  1D03               	skipz
  3635  00EE  28F0               	goto	u5340
  3636  00EF  28F7               	goto	l11813
  3637  00F0                     u5340:
  3638                           	line	312
  3639                           	
  3640  00F0                     l11811:	
  3641                           ;robot.c: 311: {
  3642                           ;robot.c: 312: ROBOTerror = 2;
  3643  00F0  3002               	movlw	(02h)
  3644  00F1  00DD               	movwf	(??_robot_turnRight+0)+0
  3645  00F2  085D               	movf	(??_robot_turnRight+0)+0,w
  3646  00F3  1683               	bsf	status, 5	;RP0=1, select bank1
  3647  00F4  1303               	bcf	status, 6	;RP1=0, select bank1
  3648  00F5  00D4               	movwf	(_ROBOTerror)^080h
  3649                           	line	313
  3650                           ;robot.c: 313: break;
  3651  00F6  2993               	goto	l11837
  3652                           	line	314
  3653                           	
  3654  00F7                     l6156:	
  3655                           	line	315
  3656                           	
  3657  00F7                     l11813:	
  3658                           ;robot.c: 314: }
  3659                           ;robot.c: 315: if (CliffSensors)
  3660  00F7  1683               	bsf	status, 5	;RP0=1, select bank1
  3661  00F8  1303               	bcf	status, 6	;RP1=0, select bank1
  3662  00F9  084F               	movf	(_CliffSensors)^080h,w	;volatile
  3663  00FA  1D03               	skipz
  3664  00FB  28FD               	goto	u5350
  3665  00FC  2906               	goto	l11817
  3666  00FD                     u5350:
  3667                           	line	317
  3668                           	
  3669  00FD                     l11815:	
  3670                           ;robot.c: 316: {
  3671                           ;robot.c: 317: ROBOTerror = 3;
  3672  00FD  3003               	movlw	(03h)
  3673  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  3674  00FF  1303               	bcf	status, 6	;RP1=0, select bank0
  3675  0100  00DD               	movwf	(??_robot_turnRight+0)+0
  3676  0101  085D               	movf	(??_robot_turnRight+0)+0,w
  3677  0102  1683               	bsf	status, 5	;RP0=1, select bank1
  3678  0103  1303               	bcf	status, 6	;RP1=0, select bank1
  3679  0104  00D4               	movwf	(_ROBOTerror)^080h
  3680                           	line	318
  3681                           ;robot.c: 318: break;
  3682  0105  2993               	goto	l11837
  3683                           	line	319
  3684                           	
  3685  0106                     l6157:	
  3686                           	line	320
  3687                           	
  3688  0106                     l11817:	
  3689                           ;robot.c: 319: }
  3690                           ;robot.c: 320: if (VictimSensor != 255)
  3691  0106  0858               	movf	(_VictimSensor)^080h,w	;volatile
  3692  0107  3AFF               	xorlw	0FFh
  3693  0108  1903               	skipnz
  3694  0109  290B               	goto	u5361
  3695  010A  290C               	goto	u5360
  3696  010B                     u5361:
  3697  010B  2915               	goto	l11821
  3698  010C                     u5360:
  3699                           	line	322
  3700                           	
  3701  010C                     l11819:	
  3702                           ;robot.c: 321: {
  3703                           ;robot.c: 322: ROBOTerror = 4;
  3704  010C  3004               	movlw	(04h)
  3705  010D  1283               	bcf	status, 5	;RP0=0, select bank0
  3706  010E  1303               	bcf	status, 6	;RP1=0, select bank0
  3707  010F  00DD               	movwf	(??_robot_turnRight+0)+0
  3708  0110  085D               	movf	(??_robot_turnRight+0)+0,w
  3709  0111  1683               	bsf	status, 5	;RP0=1, select bank1
  3710  0112  1303               	bcf	status, 6	;RP1=0, select bank1
  3711  0113  00D4               	movwf	(_ROBOTerror)^080h
  3712                           	line	323
  3713                           ;robot.c: 323: break;
  3714  0114  2993               	goto	l11837
  3715                           	line	324
  3716                           	
  3717  0115                     l6158:	
  3718                           	line	325
  3719                           	
  3720  0115                     l11821:	
  3721                           ;robot.c: 324: }
  3722                           ;robot.c: 325: temp1 = DistHighByte;
  3723  0115  0850               	movf	(_DistHighByte)^080h,w	;volatile
  3724  0116  1283               	bcf	status, 5	;RP0=0, select bank0
  3725  0117  1303               	bcf	status, 6	;RP1=0, select bank0
  3726  0118  00DD               	movwf	(??_robot_turnRight+0)+0
  3727  0119  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3728  011A  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3729  011B  00E2               	movwf	(robot_turnRight@temp1)
  3730  011C  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3731  011D  00E3               	movwf	(robot_turnRight@temp1+1)
  3732                           	line	326
  3733                           	
  3734  011E                     l11823:	
  3735                           ;robot.c: 326: temp1 = temp1 << 8;
  3736  011E  0863               	movf	(robot_turnRight@temp1+1),w
  3737  011F  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3738  0120  0862               	movf	(robot_turnRight@temp1),w
  3739  0121  00DD               	movwf	(??_robot_turnRight+0)+0
  3740  0122  085D               	movf	(??_robot_turnRight+0)+0,w
  3741  0123  00DE               	movwf	(??_robot_turnRight+0)+1
  3742  0124  01DD               	clrf	(??_robot_turnRight+0)+0
  3743  0125  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3744  0126  00E2               	movwf	(robot_turnRight@temp1)
  3745  0127  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3746  0128  00E3               	movwf	(robot_turnRight@temp1+1)
  3747                           	line	327
  3748                           	
  3749  0129                     l11825:	
  3750                           ;robot.c: 327: temp1 += DistLowByte;
  3751  0129  1683               	bsf	status, 5	;RP0=1, select bank1
  3752  012A  1303               	bcf	status, 6	;RP1=0, select bank1
  3753  012B  0851               	movf	(_DistLowByte)^080h,w	;volatile
  3754  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  3755  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  3756  012E  00DD               	movwf	(??_robot_turnRight+0)+0
  3757  012F  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3758  0130  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3759  0131  07E2               	addwf	(robot_turnRight@temp1),f
  3760  0132  1803               	skipnc
  3761  0133  0AE3               	incf	(robot_turnRight@temp1+1),f
  3762  0134  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3763  0135  07E3               	addwf	(robot_turnRight@temp1+1),f
  3764                           	line	328
  3765                           	
  3766  0136                     l11827:	
  3767                           ;robot.c: 328: distTravelled += temp1;
  3768  0136  0862               	movf	(robot_turnRight@temp1),w
  3769  0137  1683               	bsf	status, 5	;RP0=1, select bank1
  3770  0138  1303               	bcf	status, 6	;RP1=0, select bank1
  3771  0139  07C0               	addwf	(_distTravelled)^080h,f
  3772  013A  1803               	skipnc
  3773  013B  0AC1               	incf	(_distTravelled+1)^080h,f
  3774  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  3775  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  3776  013E  0863               	movf	(robot_turnRight@temp1+1),w
  3777  013F  1683               	bsf	status, 5	;RP0=1, select bank1
  3778  0140  1303               	bcf	status, 6	;RP1=0, select bank1
  3779  0141  07C1               	addwf	(_distTravelled+1)^080h,f
  3780                           	line	329
  3781                           	
  3782  0142                     l11829:	
  3783                           ;robot.c: 329: TotalDistTravelled += temp1;
  3784  0142  1283               	bcf	status, 5	;RP0=0, select bank0
  3785  0143  1303               	bcf	status, 6	;RP1=0, select bank0
  3786  0144  0862               	movf	(robot_turnRight@temp1),w
  3787  0145  1683               	bsf	status, 5	;RP0=1, select bank1
  3788  0146  1303               	bcf	status, 6	;RP1=0, select bank1
  3789  0147  07BC               	addwf	(_TotalDistTravelled)^080h,f
  3790  0148  1803               	skipnc
  3791  0149  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  3792  014A  1283               	bcf	status, 5	;RP0=0, select bank0
  3793  014B  1303               	bcf	status, 6	;RP1=0, select bank0
  3794  014C  0863               	movf	(robot_turnRight@temp1+1),w
  3795  014D  1683               	bsf	status, 5	;RP0=1, select bank1
  3796  014E  1303               	bcf	status, 6	;RP1=0, select bank1
  3797  014F  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  3798                           	line	330
  3799                           	
  3800  0150                     l11831:	
  3801                           ;robot.c: 330: temp1 = AngleHighByte;
  3802  0150  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  3803  0151  1283               	bcf	status, 5	;RP0=0, select bank0
  3804  0152  1303               	bcf	status, 6	;RP1=0, select bank0
  3805  0153  00DD               	movwf	(??_robot_turnRight+0)+0
  3806  0154  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3807  0155  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3808  0156  00E2               	movwf	(robot_turnRight@temp1)
  3809  0157  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3810  0158  00E3               	movwf	(robot_turnRight@temp1+1)
  3811                           	line	331
  3812                           	
  3813  0159                     l11833:	
  3814                           ;robot.c: 331: temp1 = temp1 << 8;
  3815  0159  0863               	movf	(robot_turnRight@temp1+1),w
  3816  015A  00DE               	movwf	(??_robot_turnRight+0)+0+1
  3817  015B  0862               	movf	(robot_turnRight@temp1),w
  3818  015C  00DD               	movwf	(??_robot_turnRight+0)+0
  3819  015D  085D               	movf	(??_robot_turnRight+0)+0,w
  3820  015E  00DE               	movwf	(??_robot_turnRight+0)+1
  3821  015F  01DD               	clrf	(??_robot_turnRight+0)+0
  3822  0160  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3823  0161  00E2               	movwf	(robot_turnRight@temp1)
  3824  0162  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3825  0163  00E3               	movwf	(robot_turnRight@temp1+1)
  3826                           	line	332
  3827                           ;robot.c: 332: temp1 += AngleLowByte;
  3828  0164  1683               	bsf	status, 5	;RP0=1, select bank1
  3829  0165  1303               	bcf	status, 6	;RP1=0, select bank1
  3830  0166  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  3831  0167  1283               	bcf	status, 5	;RP0=0, select bank0
  3832  0168  1303               	bcf	status, 6	;RP1=0, select bank0
  3833  0169  00DD               	movwf	(??_robot_turnRight+0)+0
  3834  016A  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3835  016B  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3836  016C  07E2               	addwf	(robot_turnRight@temp1),f
  3837  016D  1803               	skipnc
  3838  016E  0AE3               	incf	(robot_turnRight@temp1+1),f
  3839  016F  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3840  0170  07E3               	addwf	(robot_turnRight@temp1+1),f
  3841                           	line	333
  3842                           ;robot.c: 333: angleTurned += temp1;
  3843  0171  0862               	movf	(robot_turnRight@temp1),w
  3844  0172  1683               	bsf	status, 5	;RP0=1, select bank1
  3845  0173  1303               	bcf	status, 6	;RP1=0, select bank1
  3846  0174  07BE               	addwf	(_angleTurned)^080h,f
  3847  0175  1803               	skipnc
  3848  0176  0ABF               	incf	(_angleTurned+1)^080h,f
  3849  0177  1283               	bcf	status, 5	;RP0=0, select bank0
  3850  0178  1303               	bcf	status, 6	;RP1=0, select bank0
  3851  0179  0863               	movf	(robot_turnRight@temp1+1),w
  3852  017A  1683               	bsf	status, 5	;RP0=1, select bank1
  3853  017B  1303               	bcf	status, 6	;RP1=0, select bank1
  3854  017C  07BF               	addwf	(_angleTurned+1)^080h,f
  3855                           	line	334
  3856                           ;robot.c: 334: Disp2 = RobotPos;
  3857  017D  0856               	movf	(_RobotPos)^080h,w
  3858  017E  1283               	bcf	status, 5	;RP0=0, select bank0
  3859  017F  1303               	bcf	status, 6	;RP1=0, select bank0
  3860  0180  00DD               	movwf	(??_robot_turnRight+0)+0
  3861  0181  01DE               	clrf	(??_robot_turnRight+0)+0+1
  3862  0182  085D               	movf	0+(??_robot_turnRight+0)+0,w
  3863  0183  1683               	bsf	status, 5	;RP0=1, select bank1
  3864  0184  1303               	bcf	status, 6	;RP1=0, select bank1
  3865  0185  00B6               	movwf	(_Disp2)^080h
  3866  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  3867  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  3868  0188  085E               	movf	1+(??_robot_turnRight+0)+0,w
  3869  0189  1683               	bsf	status, 5	;RP0=1, select bank1
  3870  018A  1303               	bcf	status, 6	;RP1=0, select bank1
  3871  018B  00B7               	movwf	(_Disp2+1)^080h
  3872                           	line	335
  3873                           	
  3874  018C                     l11835:	
  3875                           ;robot.c: 335: UpdateDisplay();
  3876  018C  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  3877  0191  2830               	goto	l11781
  3878                           	line	336
  3879                           	
  3880  0192                     l6159:	
  3881                           	line	276
  3882  0192  2830               	goto	l11781
  3883                           	
  3884  0193                     l6153:	
  3885                           	line	337
  3886                           	
  3887  0193                     l11837:	
  3888                           ;robot.c: 336: }
  3889                           ;robot.c: 337: RobotDrive((speed * 3/4), -400);
  3890  0193  3004               	movlw	low(04h)
  3891  0194  1283               	bcf	status, 5	;RP0=0, select bank0
  3892  0195  1303               	bcf	status, 6	;RP1=0, select bank0
  3893  0196  00A6               	movwf	(?___awdiv)
  3894  0197  3000               	movlw	high(04h)
  3895  0198  00A7               	movwf	((?___awdiv))+1
  3896  0199  085A               	movf	(robot_turnRight@speed+1),w
  3897  019A  01A1               	clrf	(?___wmul+1)
  3898  019B  07A1               	addwf	(?___wmul+1)
  3899  019C  0859               	movf	(robot_turnRight@speed),w
  3900  019D  01A0               	clrf	(?___wmul)
  3901  019E  07A0               	addwf	(?___wmul)
  3902                           
  3903  019F  3003               	movlw	low(03h)
  3904  01A0  00A2               	movwf	0+(?___wmul)+02h
  3905  01A1  3000               	movlw	high(03h)
  3906  01A2  00A3               	movwf	(0+(?___wmul)+02h)+1
  3907  01A3  160A  118A  2081   	fcall	___wmul
              120A  118A         
  3908  01A8  1283               	bcf	status, 5	;RP0=0, select bank0
  3909  01A9  1303               	bcf	status, 6	;RP1=0, select bank0
  3910  01AA  0821               	movf	(1+(?___wmul)),w
  3911  01AB  01A9               	clrf	1+(?___awdiv)+02h
  3912  01AC  07A9               	addwf	1+(?___awdiv)+02h
  3913  01AD  0820               	movf	(0+(?___wmul)),w
  3914  01AE  01A8               	clrf	0+(?___awdiv)+02h
  3915  01AF  07A8               	addwf	0+(?___awdiv)+02h
  3916                           
  3917  01B0  160A  118A  2542   	fcall	___awdiv
              120A  118A         
  3918  01B5  1283               	bcf	status, 5	;RP0=0, select bank0
  3919  01B6  1303               	bcf	status, 6	;RP1=0, select bank0
  3920  01B7  0827               	movf	(1+(?___awdiv)),w
  3921  01B8  01B0               	clrf	(?_RobotDrive+1)
  3922  01B9  07B0               	addwf	(?_RobotDrive+1)
  3923  01BA  0826               	movf	(0+(?___awdiv)),w
  3924  01BB  01AF               	clrf	(?_RobotDrive)
  3925  01BC  07AF               	addwf	(?_RobotDrive)
  3926                           
  3927  01BD  3070               	movlw	low(-400)
  3928  01BE  00B1               	movwf	0+(?_RobotDrive)+02h
  3929  01BF  30FE               	movlw	high(-400)
  3930  01C0  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  3931  01C1  160A  118A  21C6   	fcall	_RobotDrive
              120A  118A         
  3932                           	line	338
  3933                           	
  3934  01C6                     l11839:	
  3935                           ;robot.c: 338: angleTurned = 0;
  3936  01C6  1683               	bsf	status, 5	;RP0=1, select bank1
  3937  01C7  1303               	bcf	status, 6	;RP1=0, select bank1
  3938  01C8  01BE               	clrf	(_angleTurned)^080h
  3939  01C9  01BF               	clrf	(_angleTurned+1)^080h
  3940                           	line	339
  3941                           ;robot.c: 339: switch (RobotPos)
  3942  01CA  29DF               	goto	l11849
  3943                           	line	341
  3944                           ;robot.c: 340: {
  3945                           ;robot.c: 341: case 7:
  3946                           	
  3947  01CB                     l6161:	
  3948                           	line	342
  3949                           	
  3950  01CB                     l11841:	
  3951                           ;robot.c: 342: turnTarget = -175;
  3952  01CB  3051               	movlw	low(-175)
  3953  01CC  1283               	bcf	status, 5	;RP0=0, select bank0
  3954  01CD  1303               	bcf	status, 6	;RP1=0, select bank0
  3955  01CE  00E0               	movwf	(robot_turnRight@turnTarget)
  3956  01CF  30FF               	movlw	high(-175)
  3957  01D0  00E1               	movwf	((robot_turnRight@turnTarget))+1
  3958                           	line	343
  3959                           ;robot.c: 343: break;
  3960  01D1  2A5F               	goto	l11881
  3961                           	line	344
  3962                           ;robot.c: 344: case 11:
  3963                           	
  3964  01D2                     l6163:	
  3965                           	line	345
  3966                           	
  3967  01D2                     l11843:	
  3968                           ;robot.c: 345: turnTarget = -175;
  3969  01D2  3051               	movlw	low(-175)
  3970  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
  3971  01D4  00E0               	movwf	(robot_turnRight@turnTarget)
  3972  01D5  30FF               	movlw	high(-175)
  3973  01D6  00E1               	movwf	((robot_turnRight@turnTarget))+1
  3974                           	line	346
  3975                           ;robot.c: 346: break;
  3976  01D7  2A5F               	goto	l11881
  3977                           	line	347
  3978                           ;robot.c: 347: default:
  3979                           	
  3980  01D8                     l6164:	
  3981                           	line	348
  3982                           	
  3983  01D8                     l11845:	
  3984                           ;robot.c: 348: turnTarget = -75;
  3985  01D8  30B5               	movlw	low(-75)
  3986  01D9  1283               	bcf	status, 5	;RP0=0, select bank0
  3987  01DA  00E0               	movwf	(robot_turnRight@turnTarget)
  3988  01DB  30FF               	movlw	high(-75)
  3989  01DC  00E1               	movwf	((robot_turnRight@turnTarget))+1
  3990                           	line	349
  3991                           ;robot.c: 349: break;
  3992  01DD  2A5F               	goto	l11881
  3993                           	line	350
  3994                           	
  3995  01DE                     l11847:	
  3996                           ;robot.c: 350: }
  3997  01DE  2A5F               	goto	l11881
  3998                           	line	339
  3999                           	
  4000  01DF                     l6160:	
  4001                           	
  4002  01DF                     l11849:	
  4003  01DF  1683               	bsf	status, 5	;RP0=1, select bank1
  4004  01E0  1303               	bcf	status, 6	;RP1=0, select bank1
  4005  01E1  0856               	movf	(_RobotPos)^080h,w
  4006                           	; Switch size 1, requested type "space"
  4007                           ; Number of cases is 2, Range of values is 7 to 11
  4008                           ; switch strategies available:
  4009                           ; Name         Instructions Cycles
  4010                           ; simple_byte            7     4 (average)
  4011                           ; direct_byte           26    11 (fixed)
  4012                           ; jumptable            263     9 (fixed)
  4013                           ;	Chosen strategy is simple_byte
  4014                           
  4015                           	opt asmopt_off
  4016  01E2  3A07               	xorlw	7^0	; case 7
  4017  01E3  1903               	skipnz
  4018  01E4  29CB               	goto	l11841
  4019  01E5  3A0C               	xorlw	11^7	; case 11
  4020  01E6  1903               	skipnz
  4021  01E7  29D2               	goto	l11843
  4022  01E8  29D8               	goto	l11845
  4023                           	opt asmopt_on
  4024                           
  4025                           	line	350
  4026                           	
  4027  01E9                     l6162:	
  4028                           	line	351
  4029                           ;robot.c: 351: while (abs(angleTurned) < abs(turnTarget))
  4030  01E9  2A5F               	goto	l11881
  4031                           	
  4032  01EA                     l6166:	
  4033                           	line	353
  4034                           	
  4035  01EA                     l11851:	
  4036                           ;robot.c: 352: {
  4037                           ;robot.c: 353: robot_read(1);
  4038  01EA  3001               	movlw	(01h)
  4039  01EB  120A  158A  2305   	fcall	_robot_read
              120A  118A         
  4040                           	line	354
  4041                           	
  4042  01F0                     l11853:	
  4043                           ;robot.c: 354: if (BumpSensors)
  4044  01F0  1283               	bcf	status, 5	;RP0=0, select bank0
  4045  01F1  1303               	bcf	status, 6	;RP1=0, select bank0
  4046  01F2  086E               	movf	(_BumpSensors),w	;volatile
  4047  01F3  1D03               	skipz
  4048  01F4  29F6               	goto	u5370
  4049  01F5  29FC               	goto	l11857
  4050  01F6                     u5370:
  4051                           	line	356
  4052                           	
  4053  01F6                     l11855:	
  4054                           ;robot.c: 355: {
  4055                           ;robot.c: 356: ROBOTerror = 1;
  4056  01F6  1683               	bsf	status, 5	;RP0=1, select bank1
  4057  01F7  1303               	bcf	status, 6	;RP1=0, select bank1
  4058  01F8  01D4               	clrf	(_ROBOTerror)^080h
  4059  01F9  1403               	bsf	status,0
  4060  01FA  0DD4               	rlf	(_ROBOTerror)^080h,f
  4061                           	line	357
  4062                           ;robot.c: 357: break;
  4063  01FB  2A94               	goto	l11883
  4064                           	line	358
  4065                           	
  4066  01FC                     l6167:	
  4067                           	line	359
  4068                           	
  4069  01FC                     l11857:	
  4070                           ;robot.c: 358: }
  4071                           ;robot.c: 359: if (VwallSensor)
  4072  01FC  1283               	bcf	status, 5	;RP0=0, select bank0
  4073  01FD  086F               	movf	(_VwallSensor),w	;volatile
  4074  01FE  1D03               	skipz
  4075  01FF  2A01               	goto	u5380
  4076  0200  2A08               	goto	l11861
  4077  0201                     u5380:
  4078                           	line	361
  4079                           	
  4080  0201                     l11859:	
  4081                           ;robot.c: 360: {
  4082                           ;robot.c: 361: ROBOTerror = 2;
  4083  0201  3002               	movlw	(02h)
  4084  0202  00DD               	movwf	(??_robot_turnRight+0)+0
  4085  0203  085D               	movf	(??_robot_turnRight+0)+0,w
  4086  0204  1683               	bsf	status, 5	;RP0=1, select bank1
  4087  0205  1303               	bcf	status, 6	;RP1=0, select bank1
  4088  0206  00D4               	movwf	(_ROBOTerror)^080h
  4089                           	line	362
  4090                           ;robot.c: 362: break;
  4091  0207  2A94               	goto	l11883
  4092                           	line	363
  4093                           	
  4094  0208                     l6169:	
  4095                           	line	364
  4096                           	
  4097  0208                     l11861:	
  4098                           ;robot.c: 363: }
  4099                           ;robot.c: 364: if (CliffSensors)
  4100  0208  1683               	bsf	status, 5	;RP0=1, select bank1
  4101  0209  1303               	bcf	status, 6	;RP1=0, select bank1
  4102  020A  084F               	movf	(_CliffSensors)^080h,w	;volatile
  4103  020B  1D03               	skipz
  4104  020C  2A0E               	goto	u5390
  4105  020D  2A17               	goto	l11865
  4106  020E                     u5390:
  4107                           	line	366
  4108                           	
  4109  020E                     l11863:	
  4110                           ;robot.c: 365: {
  4111                           ;robot.c: 366: ROBOTerror = 3;
  4112  020E  3003               	movlw	(03h)
  4113  020F  1283               	bcf	status, 5	;RP0=0, select bank0
  4114  0210  1303               	bcf	status, 6	;RP1=0, select bank0
  4115  0211  00DD               	movwf	(??_robot_turnRight+0)+0
  4116  0212  085D               	movf	(??_robot_turnRight+0)+0,w
  4117  0213  1683               	bsf	status, 5	;RP0=1, select bank1
  4118  0214  1303               	bcf	status, 6	;RP1=0, select bank1
  4119  0215  00D4               	movwf	(_ROBOTerror)^080h
  4120                           	line	367
  4121                           ;robot.c: 367: break;
  4122  0216  2A94               	goto	l11883
  4123                           	line	368
  4124                           	
  4125  0217                     l6170:	
  4126                           	line	369
  4127                           	
  4128  0217                     l11865:	
  4129                           ;robot.c: 368: }
  4130                           ;robot.c: 369: if (VictimSensor != 255)
  4131  0217  0858               	movf	(_VictimSensor)^080h,w	;volatile
  4132  0218  3AFF               	xorlw	0FFh
  4133  0219  1903               	skipnz
  4134  021A  2A1C               	goto	u5401
  4135  021B  2A1D               	goto	u5400
  4136  021C                     u5401:
  4137  021C  2A26               	goto	l11869
  4138  021D                     u5400:
  4139                           	line	371
  4140                           	
  4141  021D                     l11867:	
  4142                           ;robot.c: 370: {
  4143                           ;robot.c: 371: ROBOTerror = 4;
  4144  021D  3004               	movlw	(04h)
  4145  021E  1283               	bcf	status, 5	;RP0=0, select bank0
  4146  021F  1303               	bcf	status, 6	;RP1=0, select bank0
  4147  0220  00DD               	movwf	(??_robot_turnRight+0)+0
  4148  0221  085D               	movf	(??_robot_turnRight+0)+0,w
  4149  0222  1683               	bsf	status, 5	;RP0=1, select bank1
  4150  0223  1303               	bcf	status, 6	;RP1=0, select bank1
  4151  0224  00D4               	movwf	(_ROBOTerror)^080h
  4152                           	line	372
  4153                           ;robot.c: 372: break;
  4154  0225  2A94               	goto	l11883
  4155                           	line	373
  4156                           	
  4157  0226                     l6171:	
  4158                           	line	374
  4159                           	
  4160  0226                     l11869:	
  4161                           ;robot.c: 373: }
  4162                           ;robot.c: 374: temp1 = AngleHighByte;
  4163  0226  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  4164  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  4165  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  4166  0229  00DD               	movwf	(??_robot_turnRight+0)+0
  4167  022A  01DE               	clrf	(??_robot_turnRight+0)+0+1
  4168  022B  085D               	movf	0+(??_robot_turnRight+0)+0,w
  4169  022C  00E2               	movwf	(robot_turnRight@temp1)
  4170  022D  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4171  022E  00E3               	movwf	(robot_turnRight@temp1+1)
  4172                           	line	375
  4173                           	
  4174  022F                     l11871:	
  4175                           ;robot.c: 375: temp1 = temp1 << 8;
  4176  022F  0863               	movf	(robot_turnRight@temp1+1),w
  4177  0230  00DE               	movwf	(??_robot_turnRight+0)+0+1
  4178  0231  0862               	movf	(robot_turnRight@temp1),w
  4179  0232  00DD               	movwf	(??_robot_turnRight+0)+0
  4180  0233  085D               	movf	(??_robot_turnRight+0)+0,w
  4181  0234  00DE               	movwf	(??_robot_turnRight+0)+1
  4182  0235  01DD               	clrf	(??_robot_turnRight+0)+0
  4183  0236  085D               	movf	0+(??_robot_turnRight+0)+0,w
  4184  0237  00E2               	movwf	(robot_turnRight@temp1)
  4185  0238  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4186  0239  00E3               	movwf	(robot_turnRight@temp1+1)
  4187                           	line	376
  4188                           	
  4189  023A                     l11873:	
  4190                           ;robot.c: 376: temp1 += AngleLowByte;
  4191  023A  1683               	bsf	status, 5	;RP0=1, select bank1
  4192  023B  1303               	bcf	status, 6	;RP1=0, select bank1
  4193  023C  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  4194  023D  1283               	bcf	status, 5	;RP0=0, select bank0
  4195  023E  1303               	bcf	status, 6	;RP1=0, select bank0
  4196  023F  00DD               	movwf	(??_robot_turnRight+0)+0
  4197  0240  01DE               	clrf	(??_robot_turnRight+0)+0+1
  4198  0241  085D               	movf	0+(??_robot_turnRight+0)+0,w
  4199  0242  07E2               	addwf	(robot_turnRight@temp1),f
  4200  0243  1803               	skipnc
  4201  0244  0AE3               	incf	(robot_turnRight@temp1+1),f
  4202  0245  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4203  0246  07E3               	addwf	(robot_turnRight@temp1+1),f
  4204                           	line	377
  4205                           	
  4206  0247                     l11875:	
  4207                           ;robot.c: 377: angleTurned += temp1;
  4208  0247  0862               	movf	(robot_turnRight@temp1),w
  4209  0248  1683               	bsf	status, 5	;RP0=1, select bank1
  4210  0249  1303               	bcf	status, 6	;RP1=0, select bank1
  4211  024A  07BE               	addwf	(_angleTurned)^080h,f
  4212  024B  1803               	skipnc
  4213  024C  0ABF               	incf	(_angleTurned+1)^080h,f
  4214  024D  1283               	bcf	status, 5	;RP0=0, select bank0
  4215  024E  1303               	bcf	status, 6	;RP1=0, select bank0
  4216  024F  0863               	movf	(robot_turnRight@temp1+1),w
  4217  0250  1683               	bsf	status, 5	;RP0=1, select bank1
  4218  0251  1303               	bcf	status, 6	;RP1=0, select bank1
  4219  0252  07BF               	addwf	(_angleTurned+1)^080h,f
  4220                           	line	378
  4221                           	
  4222  0253                     l11877:	
  4223                           ;robot.c: 378: Disp2 = angleTurned;
  4224  0253  083F               	movf	(_angleTurned+1)^080h,w
  4225  0254  01B7               	clrf	(_Disp2+1)^080h
  4226  0255  07B7               	addwf	(_Disp2+1)^080h
  4227  0256  083E               	movf	(_angleTurned)^080h,w
  4228  0257  01B6               	clrf	(_Disp2)^080h
  4229  0258  07B6               	addwf	(_Disp2)^080h
  4230                           
  4231                           	line	379
  4232                           	
  4233  0259                     l11879:	
  4234                           ;robot.c: 379: UpdateDisplay();
  4235  0259  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  4236  025E  2A5F               	goto	l11881
  4237                           	line	380
  4238                           	
  4239  025F                     l6165:	
  4240                           	line	351
  4241                           	
  4242  025F                     l11881:	
  4243  025F  1683               	bsf	status, 5	;RP0=1, select bank1
  4244  0260  1303               	bcf	status, 6	;RP1=0, select bank1
  4245  0261  083F               	movf	(_angleTurned+1)^080h,w
  4246  0262  1283               	bcf	status, 5	;RP0=0, select bank0
  4247  0263  1303               	bcf	status, 6	;RP1=0, select bank0
  4248  0264  01A7               	clrf	(?_abs+1)
  4249  0265  07A7               	addwf	(?_abs+1)
  4250  0266  1683               	bsf	status, 5	;RP0=1, select bank1
  4251  0267  1303               	bcf	status, 6	;RP1=0, select bank1
  4252  0268  083E               	movf	(_angleTurned)^080h,w
  4253  0269  1283               	bcf	status, 5	;RP0=0, select bank0
  4254  026A  1303               	bcf	status, 6	;RP1=0, select bank0
  4255  026B  01A6               	clrf	(?_abs)
  4256  026C  07A6               	addwf	(?_abs)
  4257                           
  4258  026D  160A  118A  2191   	fcall	_abs
              120A  118A         
  4259  0272  1283               	bcf	status, 5	;RP0=0, select bank0
  4260  0273  1303               	bcf	status, 6	;RP1=0, select bank0
  4261  0274  0826               	movf	(0+?_abs),w
  4262  0275  00DD               	movwf	(??_robot_turnRight+0)+0
  4263  0276  0827               	movf	(1+?_abs),w
  4264  0277  00DE               	movwf	((??_robot_turnRight+0)+0+1)
  4265  0278  0861               	movf	(robot_turnRight@turnTarget+1),w
  4266  0279  01A7               	clrf	(?_abs+1)
  4267  027A  07A7               	addwf	(?_abs+1)
  4268  027B  0860               	movf	(robot_turnRight@turnTarget),w
  4269  027C  01A6               	clrf	(?_abs)
  4270  027D  07A6               	addwf	(?_abs)
  4271                           
  4272  027E  160A  118A  2191   	fcall	_abs
              120A  118A         
  4273  0283  1283               	bcf	status, 5	;RP0=0, select bank0
  4274  0284  1303               	bcf	status, 6	;RP1=0, select bank0
  4275  0285  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4276  0286  3A80               	xorlw	80h
  4277  0287  00DF               	movwf	(??_robot_turnRight+2)+0
  4278  0288  0827               	movf	(1+(?_abs)),w
  4279  0289  3A80               	xorlw	80h
  4280  028A  025F               	subwf	(??_robot_turnRight+2)+0,w
  4281  028B  1D03               	skipz
  4282  028C  2A8F               	goto	u5415
  4283  028D  0826               	movf	(0+(?_abs)),w
  4284  028E  025D               	subwf	0+(??_robot_turnRight+0)+0,w
  4285  028F                     u5415:
  4286                           
  4287  028F  1C03               	skipc
  4288  0290  2A92               	goto	u5411
  4289  0291  2A93               	goto	u5410
  4290  0292                     u5411:
  4291  0292  29EA               	goto	l11851
  4292  0293                     u5410:
  4293  0293  2A94               	goto	l11883
  4294                           	
  4295  0294                     l6168:	
  4296                           	line	381
  4297                           	
  4298  0294                     l11883:	
  4299                           ;robot.c: 380: }
  4300                           ;robot.c: 381: RobotDrive(0, 0x7FFF);
  4301  0294  3000               	movlw	low(0)
  4302  0295  1283               	bcf	status, 5	;RP0=0, select bank0
  4303  0296  1303               	bcf	status, 6	;RP1=0, select bank0
  4304  0297  00AF               	movwf	(?_RobotDrive)
  4305  0298  3000               	movlw	high(0)
  4306  0299  00B0               	movwf	((?_RobotDrive))+1
  4307  029A  30FF               	movlw	low(07FFFh)
  4308  029B  00B1               	movwf	0+(?_RobotDrive)+02h
  4309  029C  307F               	movlw	high(07FFFh)
  4310  029D  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4311  029E  160A  118A  21C6   	fcall	_RobotDrive
              120A  118A         
  4312                           	line	382
  4313                           	
  4314  02A3                     l11885:	
  4315                           ;robot.c: 382: Disp2 = ROBOTerror;
  4316  02A3  1683               	bsf	status, 5	;RP0=1, select bank1
  4317  02A4  1303               	bcf	status, 6	;RP1=0, select bank1
  4318  02A5  0854               	movf	(_ROBOTerror)^080h,w
  4319  02A6  1283               	bcf	status, 5	;RP0=0, select bank0
  4320  02A7  1303               	bcf	status, 6	;RP1=0, select bank0
  4321  02A8  00DD               	movwf	(??_robot_turnRight+0)+0
  4322  02A9  01DE               	clrf	(??_robot_turnRight+0)+0+1
  4323  02AA  085D               	movf	0+(??_robot_turnRight+0)+0,w
  4324  02AB  1683               	bsf	status, 5	;RP0=1, select bank1
  4325  02AC  1303               	bcf	status, 6	;RP1=0, select bank1
  4326  02AD  00B6               	movwf	(_Disp2)^080h
  4327  02AE  1283               	bcf	status, 5	;RP0=0, select bank0
  4328  02AF  1303               	bcf	status, 6	;RP1=0, select bank0
  4329  02B0  085E               	movf	1+(??_robot_turnRight+0)+0,w
  4330  02B1  1683               	bsf	status, 5	;RP0=1, select bank1
  4331  02B2  1303               	bcf	status, 6	;RP1=0, select bank1
  4332  02B3  00B7               	movwf	(_Disp2+1)^080h
  4333                           	line	383
  4334                           	
  4335  02B4                     l11887:	
  4336                           ;robot.c: 383: UpdateDisplay();
  4337  02B4  120A  158A  260B   	fcall	_UpdateDisplay
              120A  118A         
  4338                           	line	386
  4339                           	
  4340  02B9                     l6172:	
  4341  02B9  0008               	return
  4342                           	opt stack 0
  4343                           GLOBAL	__end_of_robot_turnRight
  4344  02BA                     	__end_of_robot_turnRight:
  4345 ;; =============== function _robot_turnRight ends ============
  4346                           
  4347                           	signat	_robot_turnRight,8312
  4348                           	global	_robotMoveSpeed
  4349                           psect	text1065,local,class=CODE,delta=2
  4350                           global __ptext1065
  4351  0911                     __ptext1065:
  4352                           
  4353 ;; *************** function _robotMoveSpeed *****************
  4354 ;; Defined at:
  4355 ;;		line 391 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  distance        2   57[BANK0 ] int 
  4358 ;;  speed           2   59[BANK0 ] int 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  temp1           2   64[BANK0 ] int 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;		None               void
  4363 ;; Registers used:
  4364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4370 ;;      Params:         0       4       0       0       0
  4371 ;;      Locals:         0       2       0       0       0
  4372 ;;      Temps:          0       3       0       0       0
  4373 ;;      Totals:         0       9       0       0       0
  4374 ;;Total ram usage:        9 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    6
  4377 ;; This function calls:
  4378 ;;		_RobotDrive
  4379 ;;		_robot_read
  4380 ;;		_UpdateDisplay
  4381 ;;		_abs
  4382 ;; This function is called by:
  4383 ;;		_main
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           psect	text1065
  4387                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4388                           	line	391
  4389                           	global	__size_of_robotMoveSpeed
  4390  00F4                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  4391                           	
  4392  0911                     _robotMoveSpeed:	
  4393                           	opt	stack 1
  4394                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4395                           	line	392
  4396                           	
  4397  0911                     l11731:	
  4398                           ;robot.c: 392: distTravelled = 0;
  4399  0911  1683               	bsf	status, 5	;RP0=1, select bank1
  4400  0912  1303               	bcf	status, 6	;RP1=0, select bank1
  4401  0913  01C0               	clrf	(_distTravelled)^080h
  4402  0914  01C1               	clrf	(_distTravelled+1)^080h
  4403                           	line	394
  4404                           	
  4405  0915                     l11733:	
  4406                           ;robot.c: 393: int temp1;
  4407                           ;robot.c: 394: RobotDrive(speed, 0x7FFF);
  4408  0915  1283               	bcf	status, 5	;RP0=0, select bank0
  4409  0916  1303               	bcf	status, 6	;RP1=0, select bank0
  4410  0917  085C               	movf	(robotMoveSpeed@speed+1),w
  4411  0918  01B0               	clrf	(?_RobotDrive+1)
  4412  0919  07B0               	addwf	(?_RobotDrive+1)
  4413  091A  085B               	movf	(robotMoveSpeed@speed),w
  4414  091B  01AF               	clrf	(?_RobotDrive)
  4415  091C  07AF               	addwf	(?_RobotDrive)
  4416                           
  4417  091D  30FF               	movlw	low(07FFFh)
  4418  091E  00B1               	movwf	0+(?_RobotDrive)+02h
  4419  091F  307F               	movlw	high(07FFFh)
  4420  0920  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4421  0921  160A  118A  21C6   	fcall	_RobotDrive
              120A  158A         
  4422                           	line	397
  4423                           ;robot.c: 397: while (abs(distTravelled) < abs(distance))
  4424  0926  29AA               	goto	l11767
  4425                           	
  4426  0927                     l6176:	
  4427                           	line	399
  4428                           	
  4429  0927                     l11735:	
  4430                           ;robot.c: 398: {
  4431                           ;robot.c: 399: robot_read(0);
  4432  0927  3000               	movlw	(0)
  4433  0928  120A  158A  2305   	fcall	_robot_read
              120A  158A         
  4434                           	line	400
  4435                           	
  4436  092D                     l11737:	
  4437                           ;robot.c: 400: if (BumpSensors)
  4438  092D  1283               	bcf	status, 5	;RP0=0, select bank0
  4439  092E  1303               	bcf	status, 6	;RP1=0, select bank0
  4440  092F  086E               	movf	(_BumpSensors),w	;volatile
  4441  0930  1D03               	skipz
  4442  0931  2933               	goto	u5220
  4443  0932  2939               	goto	l11741
  4444  0933                     u5220:
  4445                           	line	402
  4446                           	
  4447  0933                     l11739:	
  4448                           ;robot.c: 401: {
  4449                           ;robot.c: 402: ROBOTerror = 1;
  4450  0933  1683               	bsf	status, 5	;RP0=1, select bank1
  4451  0934  1303               	bcf	status, 6	;RP1=0, select bank1
  4452  0935  01D4               	clrf	(_ROBOTerror)^080h
  4453  0936  1403               	bsf	status,0
  4454  0937  0DD4               	rlf	(_ROBOTerror)^080h,f
  4455                           	line	403
  4456                           ;robot.c: 403: break;
  4457  0938  29DF               	goto	l11769
  4458                           	line	404
  4459                           	
  4460  0939                     l6177:	
  4461                           	line	405
  4462                           	
  4463  0939                     l11741:	
  4464                           ;robot.c: 404: }
  4465                           ;robot.c: 405: if (VwallSensor)
  4466  0939  1283               	bcf	status, 5	;RP0=0, select bank0
  4467  093A  086F               	movf	(_VwallSensor),w	;volatile
  4468  093B  1D03               	skipz
  4469  093C  293E               	goto	u5230
  4470  093D  2945               	goto	l11745
  4471  093E                     u5230:
  4472                           	line	407
  4473                           	
  4474  093E                     l11743:	
  4475                           ;robot.c: 406: {
  4476                           ;robot.c: 407: ROBOTerror = 2;
  4477  093E  3002               	movlw	(02h)
  4478  093F  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4479  0940  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4480  0941  1683               	bsf	status, 5	;RP0=1, select bank1
  4481  0942  1303               	bcf	status, 6	;RP1=0, select bank1
  4482  0943  00D4               	movwf	(_ROBOTerror)^080h
  4483                           	line	408
  4484                           ;robot.c: 408: break;
  4485  0944  29DF               	goto	l11769
  4486                           	line	409
  4487                           	
  4488  0945                     l6179:	
  4489                           	line	410
  4490                           	
  4491  0945                     l11745:	
  4492                           ;robot.c: 409: }
  4493                           ;robot.c: 410: if (CliffSensors)
  4494  0945  1683               	bsf	status, 5	;RP0=1, select bank1
  4495  0946  1303               	bcf	status, 6	;RP1=0, select bank1
  4496  0947  084F               	movf	(_CliffSensors)^080h,w	;volatile
  4497  0948  1D03               	skipz
  4498  0949  294B               	goto	u5240
  4499  094A  2954               	goto	l11749
  4500  094B                     u5240:
  4501                           	line	412
  4502                           	
  4503  094B                     l11747:	
  4504                           ;robot.c: 411: {
  4505                           ;robot.c: 412: ROBOTerror = 3;
  4506  094B  3003               	movlw	(03h)
  4507  094C  1283               	bcf	status, 5	;RP0=0, select bank0
  4508  094D  1303               	bcf	status, 6	;RP1=0, select bank0
  4509  094E  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4510  094F  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4511  0950  1683               	bsf	status, 5	;RP0=1, select bank1
  4512  0951  1303               	bcf	status, 6	;RP1=0, select bank1
  4513  0952  00D4               	movwf	(_ROBOTerror)^080h
  4514                           	line	413
  4515                           ;robot.c: 413: break;
  4516  0953  29DF               	goto	l11769
  4517                           	line	414
  4518                           	
  4519  0954                     l6180:	
  4520                           	line	415
  4521                           	
  4522  0954                     l11749:	
  4523                           ;robot.c: 414: }
  4524                           ;robot.c: 415: if (VictimSensor != 255)
  4525  0954  0858               	movf	(_VictimSensor)^080h,w	;volatile
  4526  0955  3AFF               	xorlw	0FFh
  4527  0956  1903               	skipnz
  4528  0957  2959               	goto	u5251
  4529  0958  295A               	goto	u5250
  4530  0959                     u5251:
  4531  0959  2963               	goto	l11753
  4532  095A                     u5250:
  4533                           	line	417
  4534                           	
  4535  095A                     l11751:	
  4536                           ;robot.c: 416: {
  4537                           ;robot.c: 417: ROBOTerror = 4;
  4538  095A  3004               	movlw	(04h)
  4539  095B  1283               	bcf	status, 5	;RP0=0, select bank0
  4540  095C  1303               	bcf	status, 6	;RP1=0, select bank0
  4541  095D  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4542  095E  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4543  095F  1683               	bsf	status, 5	;RP0=1, select bank1
  4544  0960  1303               	bcf	status, 6	;RP1=0, select bank1
  4545  0961  00D4               	movwf	(_ROBOTerror)^080h
  4546                           	line	418
  4547                           ;robot.c: 418: break;
  4548  0962  29DF               	goto	l11769
  4549                           	line	419
  4550                           	
  4551  0963                     l6181:	
  4552                           	line	420
  4553                           	
  4554  0963                     l11753:	
  4555                           ;robot.c: 419: }
  4556                           ;robot.c: 420: temp1 = DistHighByte;
  4557  0963  0850               	movf	(_DistHighByte)^080h,w	;volatile
  4558  0964  1283               	bcf	status, 5	;RP0=0, select bank0
  4559  0965  1303               	bcf	status, 6	;RP1=0, select bank0
  4560  0966  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4561  0967  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4562  0968  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4563  0969  00E0               	movwf	(robotMoveSpeed@temp1)
  4564  096A  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4565  096B  00E1               	movwf	(robotMoveSpeed@temp1+1)
  4566                           	line	421
  4567                           	
  4568  096C                     l11755:	
  4569                           ;robot.c: 421: temp1 = temp1 << 8;
  4570  096C  0861               	movf	(robotMoveSpeed@temp1+1),w
  4571  096D  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  4572  096E  0860               	movf	(robotMoveSpeed@temp1),w
  4573  096F  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4574  0970  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4575  0971  00DE               	movwf	(??_robotMoveSpeed+0)+1
  4576  0972  01DD               	clrf	(??_robotMoveSpeed+0)+0
  4577  0973  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4578  0974  00E0               	movwf	(robotMoveSpeed@temp1)
  4579  0975  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4580  0976  00E1               	movwf	(robotMoveSpeed@temp1+1)
  4581                           	line	422
  4582                           	
  4583  0977                     l11757:	
  4584                           ;robot.c: 422: temp1 += DistLowByte;
  4585  0977  1683               	bsf	status, 5	;RP0=1, select bank1
  4586  0978  1303               	bcf	status, 6	;RP1=0, select bank1
  4587  0979  0851               	movf	(_DistLowByte)^080h,w	;volatile
  4588  097A  1283               	bcf	status, 5	;RP0=0, select bank0
  4589  097B  1303               	bcf	status, 6	;RP1=0, select bank0
  4590  097C  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4591  097D  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4592  097E  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4593  097F  07E0               	addwf	(robotMoveSpeed@temp1),f
  4594  0980  1803               	skipnc
  4595  0981  0AE1               	incf	(robotMoveSpeed@temp1+1),f
  4596  0982  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4597  0983  07E1               	addwf	(robotMoveSpeed@temp1+1),f
  4598                           	line	423
  4599                           	
  4600  0984                     l11759:	
  4601                           ;robot.c: 423: distTravelled += temp1;
  4602  0984  0860               	movf	(robotMoveSpeed@temp1),w
  4603  0985  1683               	bsf	status, 5	;RP0=1, select bank1
  4604  0986  1303               	bcf	status, 6	;RP1=0, select bank1
  4605  0987  07C0               	addwf	(_distTravelled)^080h,f
  4606  0988  1803               	skipnc
  4607  0989  0AC1               	incf	(_distTravelled+1)^080h,f
  4608  098A  1283               	bcf	status, 5	;RP0=0, select bank0
  4609  098B  1303               	bcf	status, 6	;RP1=0, select bank0
  4610  098C  0861               	movf	(robotMoveSpeed@temp1+1),w
  4611  098D  1683               	bsf	status, 5	;RP0=1, select bank1
  4612  098E  1303               	bcf	status, 6	;RP1=0, select bank1
  4613  098F  07C1               	addwf	(_distTravelled+1)^080h,f
  4614                           	line	424
  4615                           	
  4616  0990                     l11761:	
  4617                           ;robot.c: 424: TotalDistTravelled += temp1;
  4618  0990  1283               	bcf	status, 5	;RP0=0, select bank0
  4619  0991  1303               	bcf	status, 6	;RP1=0, select bank0
  4620  0992  0860               	movf	(robotMoveSpeed@temp1),w
  4621  0993  1683               	bsf	status, 5	;RP0=1, select bank1
  4622  0994  1303               	bcf	status, 6	;RP1=0, select bank1
  4623  0995  07BC               	addwf	(_TotalDistTravelled)^080h,f
  4624  0996  1803               	skipnc
  4625  0997  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  4626  0998  1283               	bcf	status, 5	;RP0=0, select bank0
  4627  0999  1303               	bcf	status, 6	;RP1=0, select bank0
  4628  099A  0861               	movf	(robotMoveSpeed@temp1+1),w
  4629  099B  1683               	bsf	status, 5	;RP0=1, select bank1
  4630  099C  1303               	bcf	status, 6	;RP1=0, select bank1
  4631  099D  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  4632                           	line	425
  4633                           	
  4634  099E                     l11763:	
  4635                           ;robot.c: 425: Disp2 = distTravelled;
  4636  099E  0841               	movf	(_distTravelled+1)^080h,w
  4637  099F  01B7               	clrf	(_Disp2+1)^080h
  4638  09A0  07B7               	addwf	(_Disp2+1)^080h
  4639  09A1  0840               	movf	(_distTravelled)^080h,w
  4640  09A2  01B6               	clrf	(_Disp2)^080h
  4641  09A3  07B6               	addwf	(_Disp2)^080h
  4642                           
  4643                           	line	426
  4644                           	
  4645  09A4                     l11765:	
  4646                           ;robot.c: 426: UpdateDisplay();
  4647  09A4  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4648  09A9  29AA               	goto	l11767
  4649                           	line	432
  4650                           	
  4651  09AA                     l6175:	
  4652                           	line	397
  4653                           	
  4654  09AA                     l11767:	
  4655  09AA  1683               	bsf	status, 5	;RP0=1, select bank1
  4656  09AB  1303               	bcf	status, 6	;RP1=0, select bank1
  4657  09AC  0841               	movf	(_distTravelled+1)^080h,w
  4658  09AD  1283               	bcf	status, 5	;RP0=0, select bank0
  4659  09AE  1303               	bcf	status, 6	;RP1=0, select bank0
  4660  09AF  01A7               	clrf	(?_abs+1)
  4661  09B0  07A7               	addwf	(?_abs+1)
  4662  09B1  1683               	bsf	status, 5	;RP0=1, select bank1
  4663  09B2  1303               	bcf	status, 6	;RP1=0, select bank1
  4664  09B3  0840               	movf	(_distTravelled)^080h,w
  4665  09B4  1283               	bcf	status, 5	;RP0=0, select bank0
  4666  09B5  1303               	bcf	status, 6	;RP1=0, select bank0
  4667  09B6  01A6               	clrf	(?_abs)
  4668  09B7  07A6               	addwf	(?_abs)
  4669                           
  4670  09B8  160A  118A  2191   	fcall	_abs
              120A  158A         
  4671  09BD  1283               	bcf	status, 5	;RP0=0, select bank0
  4672  09BE  1303               	bcf	status, 6	;RP1=0, select bank0
  4673  09BF  0826               	movf	(0+?_abs),w
  4674  09C0  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4675  09C1  0827               	movf	(1+?_abs),w
  4676  09C2  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  4677  09C3  085A               	movf	(robotMoveSpeed@distance+1),w
  4678  09C4  01A7               	clrf	(?_abs+1)
  4679  09C5  07A7               	addwf	(?_abs+1)
  4680  09C6  0859               	movf	(robotMoveSpeed@distance),w
  4681  09C7  01A6               	clrf	(?_abs)
  4682  09C8  07A6               	addwf	(?_abs)
  4683                           
  4684  09C9  160A  118A  2191   	fcall	_abs
              120A  158A         
  4685  09CE  1283               	bcf	status, 5	;RP0=0, select bank0
  4686  09CF  1303               	bcf	status, 6	;RP1=0, select bank0
  4687  09D0  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4688  09D1  3A80               	xorlw	80h
  4689  09D2  00DF               	movwf	(??_robotMoveSpeed+2)+0
  4690  09D3  0827               	movf	(1+(?_abs)),w
  4691  09D4  3A80               	xorlw	80h
  4692  09D5  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  4693  09D6  1D03               	skipz
  4694  09D7  29DA               	goto	u5265
  4695  09D8  0826               	movf	(0+(?_abs)),w
  4696  09D9  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  4697  09DA                     u5265:
  4698                           
  4699  09DA  1C03               	skipc
  4700  09DB  29DD               	goto	u5261
  4701  09DC  29DE               	goto	u5260
  4702  09DD                     u5261:
  4703  09DD  2927               	goto	l11735
  4704  09DE                     u5260:
  4705  09DE  29DF               	goto	l11769
  4706                           	
  4707  09DF                     l6178:	
  4708                           	line	433
  4709                           	
  4710  09DF                     l11769:	
  4711                           ;robot.c: 432: }
  4712                           ;robot.c: 433: Disp2 = ROBOTerror;
  4713  09DF  1683               	bsf	status, 5	;RP0=1, select bank1
  4714  09E0  1303               	bcf	status, 6	;RP1=0, select bank1
  4715  09E1  0854               	movf	(_ROBOTerror)^080h,w
  4716  09E2  1283               	bcf	status, 5	;RP0=0, select bank0
  4717  09E3  1303               	bcf	status, 6	;RP1=0, select bank0
  4718  09E4  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4719  09E5  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4720  09E6  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4721  09E7  1683               	bsf	status, 5	;RP0=1, select bank1
  4722  09E8  1303               	bcf	status, 6	;RP1=0, select bank1
  4723  09E9  00B6               	movwf	(_Disp2)^080h
  4724  09EA  1283               	bcf	status, 5	;RP0=0, select bank0
  4725  09EB  1303               	bcf	status, 6	;RP1=0, select bank0
  4726  09EC  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4727  09ED  1683               	bsf	status, 5	;RP0=1, select bank1
  4728  09EE  1303               	bcf	status, 6	;RP1=0, select bank1
  4729  09EF  00B7               	movwf	(_Disp2+1)^080h
  4730                           	line	434
  4731                           	
  4732  09F0                     l11771:	
  4733                           ;robot.c: 434: UpdateDisplay();
  4734  09F0  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4735                           	line	435
  4736                           	
  4737  09F5                     l11773:	
  4738                           ;robot.c: 435: RobotDrive(0, 0x7FFF);
  4739  09F5  3000               	movlw	low(0)
  4740  09F6  1283               	bcf	status, 5	;RP0=0, select bank0
  4741  09F7  1303               	bcf	status, 6	;RP1=0, select bank0
  4742  09F8  00AF               	movwf	(?_RobotDrive)
  4743  09F9  3000               	movlw	high(0)
  4744  09FA  00B0               	movwf	((?_RobotDrive))+1
  4745  09FB  30FF               	movlw	low(07FFFh)
  4746  09FC  00B1               	movwf	0+(?_RobotDrive)+02h
  4747  09FD  307F               	movlw	high(07FFFh)
  4748  09FE  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  4749  09FF  160A  118A  21C6   	fcall	_RobotDrive
              120A  158A         
  4750                           	line	437
  4751                           	
  4752  0A04                     l6182:	
  4753  0A04  0008               	return
  4754                           	opt stack 0
  4755                           GLOBAL	__end_of_robotMoveSpeed
  4756  0A05                     	__end_of_robotMoveSpeed:
  4757 ;; =============== function _robotMoveSpeed ends ============
  4758                           
  4759                           	signat	_robotMoveSpeed,8312
  4760                           	global	_robotTurnSpeed
  4761                           psect	text1066,local,class=CODE,delta=2
  4762                           global __ptext1066
  4763  0869                     __ptext1066:
  4764                           
  4765 ;; *************** function _robotTurnSpeed *****************
  4766 ;; Defined at:
  4767 ;;		line 444 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  angle           2   57[BANK0 ] int 
  4770 ;;  speed           2   59[BANK0 ] int 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  temp1           2   64[BANK0 ] int 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;		None               void
  4775 ;; Registers used:
  4776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4782 ;;      Params:         0       4       0       0       0
  4783 ;;      Locals:         0       2       0       0       0
  4784 ;;      Temps:          0       3       0       0       0
  4785 ;;      Totals:         0       9       0       0       0
  4786 ;;Total ram usage:        9 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    6
  4789 ;; This function calls:
  4790 ;;		_robotTurn
  4791 ;;		_robot_read
  4792 ;;		_UpdateDisplay
  4793 ;;		_abs
  4794 ;; This function is called by:
  4795 ;;		_main
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           psect	text1066
  4799                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  4800                           	line	444
  4801                           	global	__size_of_robotTurnSpeed
  4802  00A8                     	__size_of_robotTurnSpeed	equ	__end_of_robotTurnSpeed-_robotTurnSpeed
  4803                           	
  4804  0869                     _robotTurnSpeed:	
  4805                           	opt	stack 1
  4806                           ; Regs used in _robotTurnSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4807                           	line	445
  4808                           	
  4809  0869                     l11703:	
  4810                           ;robot.c: 445: angleTurned = 0;
  4811  0869  1683               	bsf	status, 5	;RP0=1, select bank1
  4812  086A  1303               	bcf	status, 6	;RP1=0, select bank1
  4813  086B  01BE               	clrf	(_angleTurned)^080h
  4814  086C  01BF               	clrf	(_angleTurned+1)^080h
  4815                           	line	446
  4816                           ;robot.c: 446: int temp1 = 0;
  4817  086D  1283               	bcf	status, 5	;RP0=0, select bank0
  4818  086E  1303               	bcf	status, 6	;RP1=0, select bank0
  4819  086F  01E0               	clrf	(robotTurnSpeed@temp1)
  4820  0870  01E1               	clrf	(robotTurnSpeed@temp1+1)
  4821                           	line	448
  4822                           	
  4823  0871                     l11705:	
  4824                           ;robot.c: 448: robotTurn(angle);
  4825  0871  085A               	movf	(robotTurnSpeed@angle+1),w
  4826  0872  01A3               	clrf	(?_robotTurn+1)
  4827  0873  07A3               	addwf	(?_robotTurn+1)
  4828  0874  0859               	movf	(robotTurnSpeed@angle),w
  4829  0875  01A2               	clrf	(?_robotTurn)
  4830  0876  07A2               	addwf	(?_robotTurn)
  4831                           
  4832  0877  160A  118A  24CE   	fcall	_robotTurn
              120A  158A         
  4833                           	line	451
  4834                           ;robot.c: 451: while (abs(angleTurned) < abs(angle))
  4835  087C  28D0               	goto	l11727
  4836                           	
  4837  087D                     l6186:	
  4838                           	line	453
  4839                           	
  4840  087D                     l11707:	
  4841                           ;robot.c: 452: {
  4842                           ;robot.c: 453: robot_read(1);
  4843  087D  3001               	movlw	(01h)
  4844  087E  120A  158A  2305   	fcall	_robot_read
              120A  158A         
  4845                           	line	454
  4846                           	
  4847  0883                     l11709:	
  4848                           ;robot.c: 454: if (BumpSensors || VwallSensor)
  4849  0883  1283               	bcf	status, 5	;RP0=0, select bank0
  4850  0884  1303               	bcf	status, 6	;RP1=0, select bank0
  4851  0885  08EE               	movf	(_BumpSensors),f
  4852  0886  1D03               	skipz	;volatile
  4853  0887  2889               	goto	u5191
  4854  0888  288A               	goto	u5190
  4855  0889                     u5191:
  4856  0889  288F               	goto	l11713
  4857  088A                     u5190:
  4858                           	
  4859  088A                     l11711:	
  4860  088A  086F               	movf	(_VwallSensor),w	;volatile
  4861  088B  1D03               	skipz
  4862  088C  288E               	goto	u5200
  4863  088D  2895               	goto	l11715
  4864  088E                     u5200:
  4865  088E  288F               	goto	l11713
  4866                           	
  4867  088F                     l6189:	
  4868                           	line	456
  4869                           	
  4870  088F                     l11713:	
  4871                           ;robot.c: 455: {
  4872                           ;robot.c: 456: ROBOTerror = 1;
  4873  088F  1683               	bsf	status, 5	;RP0=1, select bank1
  4874  0890  1303               	bcf	status, 6	;RP1=0, select bank1
  4875  0891  01D4               	clrf	(_ROBOTerror)^080h
  4876  0892  1403               	bsf	status,0
  4877  0893  0DD4               	rlf	(_ROBOTerror)^080h,f
  4878                           	line	457
  4879                           ;robot.c: 457: break;
  4880  0894  2905               	goto	l11729
  4881                           	line	458
  4882                           	
  4883  0895                     l6187:	
  4884                           	line	459
  4885                           	
  4886  0895                     l11715:	
  4887                           ;robot.c: 458: }
  4888                           ;robot.c: 459: temp1 = AngleHighByte;
  4889  0895  1683               	bsf	status, 5	;RP0=1, select bank1
  4890  0896  1303               	bcf	status, 6	;RP1=0, select bank1
  4891  0897  084C               	movf	(_AngleHighByte)^080h,w	;volatile
  4892  0898  1283               	bcf	status, 5	;RP0=0, select bank0
  4893  0899  1303               	bcf	status, 6	;RP1=0, select bank0
  4894  089A  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4895  089B  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  4896  089C  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4897  089D  00E0               	movwf	(robotTurnSpeed@temp1)
  4898  089E  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4899  089F  00E1               	movwf	(robotTurnSpeed@temp1+1)
  4900                           	line	460
  4901                           	
  4902  08A0                     l11717:	
  4903                           ;robot.c: 460: temp1 = temp1 << 8;
  4904  08A0  0861               	movf	(robotTurnSpeed@temp1+1),w
  4905  08A1  00DE               	movwf	(??_robotTurnSpeed+0)+0+1
  4906  08A2  0860               	movf	(robotTurnSpeed@temp1),w
  4907  08A3  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4908  08A4  085D               	movf	(??_robotTurnSpeed+0)+0,w
  4909  08A5  00DE               	movwf	(??_robotTurnSpeed+0)+1
  4910  08A6  01DD               	clrf	(??_robotTurnSpeed+0)+0
  4911  08A7  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4912  08A8  00E0               	movwf	(robotTurnSpeed@temp1)
  4913  08A9  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4914  08AA  00E1               	movwf	(robotTurnSpeed@temp1+1)
  4915                           	line	461
  4916                           	
  4917  08AB                     l11719:	
  4918                           ;robot.c: 461: temp1 += AngleLowByte;
  4919  08AB  1683               	bsf	status, 5	;RP0=1, select bank1
  4920  08AC  1303               	bcf	status, 6	;RP1=0, select bank1
  4921  08AD  084D               	movf	(_AngleLowByte)^080h,w	;volatile
  4922  08AE  1283               	bcf	status, 5	;RP0=0, select bank0
  4923  08AF  1303               	bcf	status, 6	;RP1=0, select bank0
  4924  08B0  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4925  08B1  01DE               	clrf	(??_robotTurnSpeed+0)+0+1
  4926  08B2  085D               	movf	0+(??_robotTurnSpeed+0)+0,w
  4927  08B3  07E0               	addwf	(robotTurnSpeed@temp1),f
  4928  08B4  1803               	skipnc
  4929  08B5  0AE1               	incf	(robotTurnSpeed@temp1+1),f
  4930  08B6  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  4931  08B7  07E1               	addwf	(robotTurnSpeed@temp1+1),f
  4932                           	line	462
  4933                           	
  4934  08B8                     l11721:	
  4935                           ;robot.c: 462: angleTurned += temp1;
  4936  08B8  0860               	movf	(robotTurnSpeed@temp1),w
  4937  08B9  1683               	bsf	status, 5	;RP0=1, select bank1
  4938  08BA  1303               	bcf	status, 6	;RP1=0, select bank1
  4939  08BB  07BE               	addwf	(_angleTurned)^080h,f
  4940  08BC  1803               	skipnc
  4941  08BD  0ABF               	incf	(_angleTurned+1)^080h,f
  4942  08BE  1283               	bcf	status, 5	;RP0=0, select bank0
  4943  08BF  1303               	bcf	status, 6	;RP1=0, select bank0
  4944  08C0  0861               	movf	(robotTurnSpeed@temp1+1),w
  4945  08C1  1683               	bsf	status, 5	;RP0=1, select bank1
  4946  08C2  1303               	bcf	status, 6	;RP1=0, select bank1
  4947  08C3  07BF               	addwf	(_angleTurned+1)^080h,f
  4948                           	line	463
  4949                           	
  4950  08C4                     l11723:	
  4951                           ;robot.c: 463: Disp2 = angleTurned;
  4952  08C4  083F               	movf	(_angleTurned+1)^080h,w
  4953  08C5  01B7               	clrf	(_Disp2+1)^080h
  4954  08C6  07B7               	addwf	(_Disp2+1)^080h
  4955  08C7  083E               	movf	(_angleTurned)^080h,w
  4956  08C8  01B6               	clrf	(_Disp2)^080h
  4957  08C9  07B6               	addwf	(_Disp2)^080h
  4958                           
  4959                           	line	464
  4960                           	
  4961  08CA                     l11725:	
  4962                           ;robot.c: 464: UpdateDisplay();
  4963  08CA  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  4964  08CF  28D0               	goto	l11727
  4965                           	line	465
  4966                           	
  4967  08D0                     l6185:	
  4968                           	line	451
  4969                           	
  4970  08D0                     l11727:	
  4971  08D0  1683               	bsf	status, 5	;RP0=1, select bank1
  4972  08D1  1303               	bcf	status, 6	;RP1=0, select bank1
  4973  08D2  083F               	movf	(_angleTurned+1)^080h,w
  4974  08D3  1283               	bcf	status, 5	;RP0=0, select bank0
  4975  08D4  1303               	bcf	status, 6	;RP1=0, select bank0
  4976  08D5  01A7               	clrf	(?_abs+1)
  4977  08D6  07A7               	addwf	(?_abs+1)
  4978  08D7  1683               	bsf	status, 5	;RP0=1, select bank1
  4979  08D8  1303               	bcf	status, 6	;RP1=0, select bank1
  4980  08D9  083E               	movf	(_angleTurned)^080h,w
  4981  08DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4982  08DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4983  08DC  01A6               	clrf	(?_abs)
  4984  08DD  07A6               	addwf	(?_abs)
  4985                           
  4986  08DE  160A  118A  2191   	fcall	_abs
              120A  158A         
  4987  08E3  1283               	bcf	status, 5	;RP0=0, select bank0
  4988  08E4  1303               	bcf	status, 6	;RP1=0, select bank0
  4989  08E5  0826               	movf	(0+?_abs),w
  4990  08E6  00DD               	movwf	(??_robotTurnSpeed+0)+0
  4991  08E7  0827               	movf	(1+?_abs),w
  4992  08E8  00DE               	movwf	((??_robotTurnSpeed+0)+0+1)
  4993  08E9  085A               	movf	(robotTurnSpeed@angle+1),w
  4994  08EA  01A7               	clrf	(?_abs+1)
  4995  08EB  07A7               	addwf	(?_abs+1)
  4996  08EC  0859               	movf	(robotTurnSpeed@angle),w
  4997  08ED  01A6               	clrf	(?_abs)
  4998  08EE  07A6               	addwf	(?_abs)
  4999                           
  5000  08EF  160A  118A  2191   	fcall	_abs
              120A  158A         
  5001  08F4  1283               	bcf	status, 5	;RP0=0, select bank0
  5002  08F5  1303               	bcf	status, 6	;RP1=0, select bank0
  5003  08F6  085E               	movf	1+(??_robotTurnSpeed+0)+0,w
  5004  08F7  3A80               	xorlw	80h
  5005  08F8  00DF               	movwf	(??_robotTurnSpeed+2)+0
  5006  08F9  0827               	movf	(1+(?_abs)),w
  5007  08FA  3A80               	xorlw	80h
  5008  08FB  025F               	subwf	(??_robotTurnSpeed+2)+0,w
  5009  08FC  1D03               	skipz
  5010  08FD  2900               	goto	u5215
  5011  08FE  0826               	movf	(0+(?_abs)),w
  5012  08FF  025D               	subwf	0+(??_robotTurnSpeed+0)+0,w
  5013  0900                     u5215:
  5014                           
  5015  0900  1C03               	skipc
  5016  0901  2903               	goto	u5211
  5017  0902  2904               	goto	u5210
  5018  0903                     u5211:
  5019  0903  287D               	goto	l11707
  5020  0904                     u5210:
  5021  0904  2905               	goto	l11729
  5022                           	
  5023  0905                     l6190:	
  5024                           	line	467
  5025                           	
  5026  0905                     l11729:	
  5027                           ;robot.c: 465: }
  5028                           ;robot.c: 467: robotTurn(0);
  5029  0905  3000               	movlw	low(0)
  5030  0906  1283               	bcf	status, 5	;RP0=0, select bank0
  5031  0907  1303               	bcf	status, 6	;RP1=0, select bank0
  5032  0908  00A2               	movwf	(?_robotTurn)
  5033  0909  3000               	movlw	high(0)
  5034  090A  00A3               	movwf	((?_robotTurn))+1
  5035  090B  160A  118A  24CE   	fcall	_robotTurn
              120A  158A         
  5036                           	line	468
  5037                           	
  5038  0910                     l6191:	
  5039  0910  0008               	return
  5040                           	opt stack 0
  5041                           GLOBAL	__end_of_robotTurnSpeed
  5042  0911                     	__end_of_robotTurnSpeed:
  5043 ;; =============== function _robotTurnSpeed ends ============
  5044                           
  5045                           	signat	_robotTurnSpeed,8312
  5046                           	global	_robotFollow
  5047                           psect	text1067,local,class=CODE,delta=2
  5048                           global __ptext1067
  5049  0C2A                     __ptext1067:
  5050                           
  5051 ;; *************** function _robotFollow *****************
  5052 ;; Defined at:
  5053 ;;		line 187 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  speed           2   57[BANK0 ] int 
  5056 ;;  AdcTarget       2   59[BANK0 ] int 
  5057 ;;  followDir       1   61[BANK0 ] unsigned char 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  temp1           2   66[BANK0 ] int 
  5060 ;;  hysterysis      1   68[BANK0 ] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;		None               void
  5063 ;; Registers used:
  5064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5070 ;;      Params:         0       5       0       0       0
  5071 ;;      Locals:         0       3       0       0       0
  5072 ;;      Temps:          0       4       0       0       0
  5073 ;;      Totals:         0      12       0       0       0
  5074 ;;Total ram usage:       12 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    7
  5077 ;; This function calls:
  5078 ;;		_RobotDrive
  5079 ;;		_readAvgDistance
  5080 ;;		_rotate
  5081 ;;		_robot_read
  5082 ;;		_UpdateDisplay
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           psect	text1067
  5088                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5089                           	line	187
  5090                           	global	__size_of_robotFollow
  5091  01E1                     	__size_of_robotFollow	equ	__end_of_robotFollow-_robotFollow
  5092                           	
  5093  0C2A                     _robotFollow:	
  5094                           	opt	stack 0
  5095                           ; Regs used in _robotFollow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5096                           	line	188
  5097                           	
  5098  0C2A                     l11617:	
  5099                           ;robot.c: 188: distTravelled = 0;
  5100  0C2A  1683               	bsf	status, 5	;RP0=1, select bank1
  5101  0C2B  1303               	bcf	status, 6	;RP1=0, select bank1
  5102  0C2C  01C0               	clrf	(_distTravelled)^080h
  5103  0C2D  01C1               	clrf	(_distTravelled+1)^080h
  5104                           	line	190
  5105                           	
  5106  0C2E                     l11619:	
  5107                           ;robot.c: 189: int temp1;
  5108                           ;robot.c: 190: unsigned char hysterysis = 20;
  5109  0C2E  3014               	movlw	(014h)
  5110  0C2F  1283               	bcf	status, 5	;RP0=0, select bank0
  5111  0C30  1303               	bcf	status, 6	;RP1=0, select bank0
  5112  0C31  00DE               	movwf	(??_robotFollow+0)+0
  5113  0C32  085E               	movf	(??_robotFollow+0)+0,w
  5114  0C33  00E4               	movwf	(robotFollow@hysterysis)
  5115                           	line	191
  5116                           	
  5117  0C34                     l11621:	
  5118                           ;robot.c: 191: RobotDrive(speed, 0x7FFF);
  5119  0C34  085A               	movf	(robotFollow@speed+1),w
  5120  0C35  01B0               	clrf	(?_RobotDrive+1)
  5121  0C36  07B0               	addwf	(?_RobotDrive+1)
  5122  0C37  0859               	movf	(robotFollow@speed),w
  5123  0C38  01AF               	clrf	(?_RobotDrive)
  5124  0C39  07AF               	addwf	(?_RobotDrive)
  5125                           
  5126  0C3A  30FF               	movlw	low(07FFFh)
  5127  0C3B  00B1               	movwf	0+(?_RobotDrive)+02h
  5128  0C3C  307F               	movlw	high(07FFFh)
  5129  0C3D  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5130  0C3E  160A  118A  21C6   	fcall	_RobotDrive
              120A  158A         
  5131                           	line	192
  5132                           	
  5133  0C43                     l11623:	
  5134                           ;robot.c: 192: ROBOTerror = 0;
  5135  0C43  1683               	bsf	status, 5	;RP0=1, select bank1
  5136  0C44  1303               	bcf	status, 6	;RP1=0, select bank1
  5137  0C45  01D4               	clrf	(_ROBOTerror)^080h
  5138  0C46  2C47               	goto	l11625
  5139                           	line	195
  5140                           ;robot.c: 195: while (1)
  5141                           	
  5142  0C47                     l6123:	
  5143                           	line	199
  5144                           	
  5145  0C47                     l11625:	
  5146                           ;robot.c: 196: {
  5147                           ;robot.c: 199: if (AdcTarget > 100)
  5148  0C47  1283               	bcf	status, 5	;RP0=0, select bank0
  5149  0C48  1303               	bcf	status, 6	;RP1=0, select bank0
  5150  0C49  085C               	movf	(robotFollow@AdcTarget+1),w
  5151  0C4A  3A80               	xorlw	80h
  5152  0C4B  00FF               	movwf	btemp+1
  5153  0C4C  3080               	movlw	(high(065h))^80h
  5154  0C4D  027F               	subwf	btemp+1,w
  5155  0C4E  1D03               	skipz
  5156  0C4F  2C52               	goto	u5065
  5157  0C50  3065               	movlw	low(065h)
  5158  0C51  025B               	subwf	(robotFollow@AdcTarget),w
  5159  0C52                     u5065:
  5160                           
  5161  0C52  1C03               	skipc
  5162  0C53  2C55               	goto	u5061
  5163  0C54  2C56               	goto	u5060
  5164  0C55                     u5061:
  5165  0C55  2C5F               	goto	l11629
  5166  0C56                     u5060:
  5167                           	line	200
  5168                           	
  5169  0C56                     l11627:	
  5170                           ;robot.c: 200: AdcTarget--;
  5171  0C56  30FF               	movlw	low(-1)
  5172  0C57  1283               	bcf	status, 5	;RP0=0, select bank0
  5173  0C58  1303               	bcf	status, 6	;RP1=0, select bank0
  5174  0C59  07DB               	addwf	(robotFollow@AdcTarget),f
  5175  0C5A  1803               	skipnc
  5176  0C5B  0ADC               	incf	(robotFollow@AdcTarget+1),f
  5177  0C5C  30FF               	movlw	high(-1)
  5178  0C5D  07DC               	addwf	(robotFollow@AdcTarget+1),f
  5179  0C5E  2C5F               	goto	l11629
  5180                           	
  5181  0C5F                     l6124:	
  5182                           	line	201
  5183                           	
  5184  0C5F                     l11629:	
  5185                           ;robot.c: 201: if (AdcTarget < 100)
  5186  0C5F  1283               	bcf	status, 5	;RP0=0, select bank0
  5187  0C60  1303               	bcf	status, 6	;RP1=0, select bank0
  5188  0C61  085C               	movf	(robotFollow@AdcTarget+1),w
  5189  0C62  3A80               	xorlw	80h
  5190  0C63  00FF               	movwf	btemp+1
  5191  0C64  3080               	movlw	(high(064h))^80h
  5192  0C65  027F               	subwf	btemp+1,w
  5193  0C66  1D03               	skipz
  5194  0C67  2C6A               	goto	u5075
  5195  0C68  3064               	movlw	low(064h)
  5196  0C69  025B               	subwf	(robotFollow@AdcTarget),w
  5197  0C6A                     u5075:
  5198                           
  5199  0C6A  1803               	skipnc
  5200  0C6B  2C6D               	goto	u5071
  5201  0C6C  2C6E               	goto	u5070
  5202  0C6D                     u5071:
  5203  0C6D  2C77               	goto	l11633
  5204  0C6E                     u5070:
  5205                           	line	202
  5206                           	
  5207  0C6E                     l11631:	
  5208                           ;robot.c: 202: AdcTarget++;
  5209  0C6E  3001               	movlw	low(01h)
  5210  0C6F  1283               	bcf	status, 5	;RP0=0, select bank0
  5211  0C70  1303               	bcf	status, 6	;RP1=0, select bank0
  5212  0C71  07DB               	addwf	(robotFollow@AdcTarget),f
  5213  0C72  1803               	skipnc
  5214  0C73  0ADC               	incf	(robotFollow@AdcTarget+1),f
  5215  0C74  3000               	movlw	high(01h)
  5216  0C75  07DC               	addwf	(robotFollow@AdcTarget+1),f
  5217  0C76  2C77               	goto	l11633
  5218                           	
  5219  0C77                     l6125:	
  5220                           	line	203
  5221                           	
  5222  0C77                     l11633:	
  5223                           ;robot.c: 203: readAvgDistance();
  5224  0C77  160A  118A  25B8   	fcall	_readAvgDistance
              120A  158A         
  5225                           	line	204
  5226                           	
  5227  0C7C                     l11635:	
  5228                           ;robot.c: 204: if (adcVal > (AdcTarget) && adcVal < (AdcTarget + hysterysis))
  5229  0C7C  1283               	bcf	status, 5	;RP0=0, select bank0
  5230  0C7D  1303               	bcf	status, 6	;RP1=0, select bank0
  5231  0C7E  086D               	movf	(_adcVal+1),w	;volatile
  5232  0C7F  025C               	subwf	(robotFollow@AdcTarget+1),w
  5233  0C80  1D03               	skipz
  5234  0C81  2C84               	goto	u5085
  5235  0C82  086C               	movf	(_adcVal),w	;volatile
  5236  0C83  025B               	subwf	(robotFollow@AdcTarget),w
  5237  0C84                     u5085:
  5238  0C84  1803               	skipnc
  5239  0C85  2C87               	goto	u5081
  5240  0C86  2C88               	goto	u5080
  5241  0C87                     u5081:
  5242  0C87  2CA9               	goto	l11641
  5243  0C88                     u5080:
  5244                           	
  5245  0C88                     l11637:	
  5246  0C88  0864               	movf	(robotFollow@hysterysis),w
  5247  0C89  075B               	addwf	(robotFollow@AdcTarget),w
  5248  0C8A  00DE               	movwf	(??_robotFollow+0)+0
  5249  0C8B  085C               	movf	(robotFollow@AdcTarget+1),w
  5250  0C8C  1803               	skipnc
  5251  0C8D  0A5C               	incf	(robotFollow@AdcTarget+1),w
  5252  0C8E  00DF               	movwf	((??_robotFollow+0)+0)+1
  5253  0C8F  085F               	movf	1+(??_robotFollow+0)+0,w
  5254  0C90  026D               	subwf	(_adcVal+1),w	;volatile
  5255  0C91  1D03               	skipz
  5256  0C92  2C95               	goto	u5095
  5257  0C93  085E               	movf	0+(??_robotFollow+0)+0,w
  5258  0C94  026C               	subwf	(_adcVal),w	;volatile
  5259  0C95                     u5095:
  5260  0C95  1803               	skipnc
  5261  0C96  2C98               	goto	u5091
  5262  0C97  2C99               	goto	u5090
  5263  0C98                     u5091:
  5264  0C98  2CA9               	goto	l11641
  5265  0C99                     u5090:
  5266                           	line	206
  5267                           	
  5268  0C99                     l11639:	
  5269                           ;robot.c: 205: {
  5270                           ;robot.c: 206: RobotDrive(speed, 1700);
  5271  0C99  085A               	movf	(robotFollow@speed+1),w
  5272  0C9A  01B0               	clrf	(?_RobotDrive+1)
  5273  0C9B  07B0               	addwf	(?_RobotDrive+1)
  5274  0C9C  0859               	movf	(robotFollow@speed),w
  5275  0C9D  01AF               	clrf	(?_RobotDrive)
  5276  0C9E  07AF               	addwf	(?_RobotDrive)
  5277                           
  5278  0C9F  30A4               	movlw	low(06A4h)
  5279  0CA0  00B1               	movwf	0+(?_RobotDrive)+02h
  5280  0CA1  3006               	movlw	high(06A4h)
  5281  0CA2  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5282  0CA3  160A  118A  21C6   	fcall	_RobotDrive
              120A  158A         
  5283                           	line	207
  5284                           ;robot.c: 207: }
  5285  0CA8  2D58               	goto	l6127
  5286                           	line	208
  5287                           	
  5288  0CA9                     l6126:	
  5289                           	
  5290  0CA9                     l11641:	
  5291                           ;robot.c: 208: else if (adcVal < (AdcTarget) && adcVal > (AdcTarget - hysterysis))
  5292  0CA9  1283               	bcf	status, 5	;RP0=0, select bank0
  5293  0CAA  1303               	bcf	status, 6	;RP1=0, select bank0
  5294  0CAB  085C               	movf	(robotFollow@AdcTarget+1),w
  5295  0CAC  026D               	subwf	(_adcVal+1),w	;volatile
  5296  0CAD  1D03               	skipz
  5297  0CAE  2CB1               	goto	u5105
  5298  0CAF  085B               	movf	(robotFollow@AdcTarget),w
  5299  0CB0  026C               	subwf	(_adcVal),w	;volatile
  5300  0CB1                     u5105:
  5301  0CB1  1803               	skipnc
  5302  0CB2  2CB4               	goto	u5101
  5303  0CB3  2CB5               	goto	u5100
  5304  0CB4                     u5101:
  5305  0CB4  2CDF               	goto	l11647
  5306  0CB5                     u5100:
  5307                           	
  5308  0CB5                     l11643:	
  5309  0CB5  0864               	movf	(robotFollow@hysterysis),w
  5310  0CB6  00DE               	movwf	(??_robotFollow+0)+0
  5311  0CB7  01DF               	clrf	(??_robotFollow+0)+0+1
  5312  0CB8  09DE               	comf	(??_robotFollow+0)+0,f
  5313  0CB9  09DF               	comf	(??_robotFollow+0)+1,f
  5314  0CBA  0ADE               	incf	(??_robotFollow+0)+0,f
  5315  0CBB  1903               	skipnz
  5316  0CBC  0ADF               	incf	(??_robotFollow+0)+1,f
  5317  0CBD  085B               	movf	(robotFollow@AdcTarget),w
  5318  0CBE  075E               	addwf	0+(??_robotFollow+0)+0,w
  5319  0CBF  00E0               	movwf	(??_robotFollow+2)+0
  5320  0CC0  085C               	movf	(robotFollow@AdcTarget+1),w
  5321  0CC1  1803               	skipnc
  5322  0CC2  0A5C               	incf	(robotFollow@AdcTarget+1),w
  5323  0CC3  075F               	addwf	1+(??_robotFollow+0)+0,w
  5324  0CC4  00E1               	movwf	1+(??_robotFollow+2)+0
  5325  0CC5  086D               	movf	(_adcVal+1),w	;volatile
  5326  0CC6  0261               	subwf	1+(??_robotFollow+2)+0,w
  5327  0CC7  1D03               	skipz
  5328  0CC8  2CCB               	goto	u5115
  5329  0CC9  086C               	movf	(_adcVal),w	;volatile
  5330  0CCA  0260               	subwf	0+(??_robotFollow+2)+0,w
  5331  0CCB                     u5115:
  5332  0CCB  1803               	skipnc
  5333  0CCC  2CCE               	goto	u5111
  5334  0CCD  2CCF               	goto	u5110
  5335  0CCE                     u5111:
  5336  0CCE  2CDF               	goto	l11647
  5337  0CCF                     u5110:
  5338                           	line	210
  5339                           	
  5340  0CCF                     l11645:	
  5341                           ;robot.c: 209: {
  5342                           ;robot.c: 210: RobotDrive(speed, -1700);
  5343  0CCF  085A               	movf	(robotFollow@speed+1),w
  5344  0CD0  01B0               	clrf	(?_RobotDrive+1)
  5345  0CD1  07B0               	addwf	(?_RobotDrive+1)
  5346  0CD2  0859               	movf	(robotFollow@speed),w
  5347  0CD3  01AF               	clrf	(?_RobotDrive)
  5348  0CD4  07AF               	addwf	(?_RobotDrive)
  5349                           
  5350  0CD5  305C               	movlw	low(-1700)
  5351  0CD6  00B1               	movwf	0+(?_RobotDrive)+02h
  5352  0CD7  30F9               	movlw	high(-1700)
  5353  0CD8  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5354  0CD9  160A  118A  21C6   	fcall	_RobotDrive
              120A  158A         
  5355                           	line	211
  5356                           ;robot.c: 211: }
  5357  0CDE  2D58               	goto	l6127
  5358                           	line	212
  5359                           	
  5360  0CDF                     l6128:	
  5361                           	
  5362  0CDF                     l11647:	
  5363                           ;robot.c: 212: else if (adcVal <= (AdcTarget - hysterysis) || adcVal >= (AdcTarget + hys
                                 terysis))
  5364  0CDF  1283               	bcf	status, 5	;RP0=0, select bank0
  5365  0CE0  1303               	bcf	status, 6	;RP1=0, select bank0
  5366  0CE1  0864               	movf	(robotFollow@hysterysis),w
  5367  0CE2  00DE               	movwf	(??_robotFollow+0)+0
  5368  0CE3  01DF               	clrf	(??_robotFollow+0)+0+1
  5369  0CE4  09DE               	comf	(??_robotFollow+0)+0,f
  5370  0CE5  09DF               	comf	(??_robotFollow+0)+1,f
  5371  0CE6  0ADE               	incf	(??_robotFollow+0)+0,f
  5372  0CE7  1903               	skipnz
  5373  0CE8  0ADF               	incf	(??_robotFollow+0)+1,f
  5374  0CE9  085B               	movf	(robotFollow@AdcTarget),w
  5375  0CEA  075E               	addwf	0+(??_robotFollow+0)+0,w
  5376  0CEB  00E0               	movwf	(??_robotFollow+2)+0
  5377  0CEC  085C               	movf	(robotFollow@AdcTarget+1),w
  5378  0CED  1803               	skipnc
  5379  0CEE  0A5C               	incf	(robotFollow@AdcTarget+1),w
  5380  0CEF  075F               	addwf	1+(??_robotFollow+0)+0,w
  5381  0CF0  00E1               	movwf	1+(??_robotFollow+2)+0
  5382  0CF1  086D               	movf	(_adcVal+1),w	;volatile
  5383  0CF2  0261               	subwf	1+(??_robotFollow+2)+0,w
  5384  0CF3  1D03               	skipz
  5385  0CF4  2CF7               	goto	u5125
  5386  0CF5  086C               	movf	(_adcVal),w	;volatile
  5387  0CF6  0260               	subwf	0+(??_robotFollow+2)+0,w
  5388  0CF7                     u5125:
  5389  0CF7  1803               	skipnc
  5390  0CF8  2CFA               	goto	u5121
  5391  0CF9  2CFB               	goto	u5120
  5392  0CFA                     u5121:
  5393  0CFA  2D0D               	goto	l11651
  5394  0CFB                     u5120:
  5395                           	
  5396  0CFB                     l11649:	
  5397  0CFB  0864               	movf	(robotFollow@hysterysis),w
  5398  0CFC  075B               	addwf	(robotFollow@AdcTarget),w
  5399  0CFD  00DE               	movwf	(??_robotFollow+0)+0
  5400  0CFE  085C               	movf	(robotFollow@AdcTarget+1),w
  5401  0CFF  1803               	skipnc
  5402  0D00  0A5C               	incf	(robotFollow@AdcTarget+1),w
  5403  0D01  00DF               	movwf	((??_robotFollow+0)+0)+1
  5404  0D02  085F               	movf	1+(??_robotFollow+0)+0,w
  5405  0D03  026D               	subwf	(_adcVal+1),w	;volatile
  5406  0D04  1D03               	skipz
  5407  0D05  2D08               	goto	u5135
  5408  0D06  085E               	movf	0+(??_robotFollow+0)+0,w
  5409  0D07  026C               	subwf	(_adcVal),w	;volatile
  5410  0D08                     u5135:
  5411  0D08  1C03               	skipc
  5412  0D09  2D0B               	goto	u5131
  5413  0D0A  2D0C               	goto	u5130
  5414  0D0B                     u5131:
  5415  0D0B  2D46               	goto	l11665
  5416  0D0C                     u5130:
  5417  0D0C  2D0D               	goto	l11651
  5418                           	
  5419  0D0D                     l6132:	
  5420                           	line	214
  5421                           	
  5422  0D0D                     l11651:	
  5423                           ;robot.c: 213: {
  5424                           ;robot.c: 214: rotate(10,1);
  5425  0D0D  300A               	movlw	low(0Ah)
  5426  0D0E  00A3               	movwf	(?_rotate)
  5427  0D0F  3000               	movlw	high(0Ah)
  5428  0D10  00A4               	movwf	((?_rotate))+1
  5429  0D11  01A5               	clrf	0+(?_rotate)+02h
  5430  0D12  1403               	bsf	status,0
  5431  0D13  0DA5               	rlf	0+(?_rotate)+02h,f
  5432  0D14  160A  118A  23FB   	fcall	_rotate
              120A  158A         
  5433                           	line	215
  5434                           	
  5435  0D19                     l11653:	
  5436                           ;robot.c: 215: readAvgDistance();
  5437  0D19  160A  118A  25B8   	fcall	_readAvgDistance
              120A  158A         
  5438                           	line	216
  5439                           	
  5440  0D1E                     l11655:	
  5441                           ;robot.c: 216: rotate(10,0);
  5442  0D1E  300A               	movlw	low(0Ah)
  5443  0D1F  1283               	bcf	status, 5	;RP0=0, select bank0
  5444  0D20  1303               	bcf	status, 6	;RP1=0, select bank0
  5445  0D21  00A3               	movwf	(?_rotate)
  5446  0D22  3000               	movlw	high(0Ah)
  5447  0D23  00A4               	movwf	((?_rotate))+1
  5448  0D24  01A5               	clrf	0+(?_rotate)+02h
  5449  0D25  160A  118A  23FB   	fcall	_rotate
              120A  158A         
  5450                           	line	217
  5451                           	
  5452  0D2A                     l11657:	
  5453                           ;robot.c: 217: if (adcVal < 50)
  5454  0D2A  3000               	movlw	high(032h)
  5455  0D2B  1283               	bcf	status, 5	;RP0=0, select bank0
  5456  0D2C  1303               	bcf	status, 6	;RP1=0, select bank0
  5457  0D2D  026D               	subwf	(_adcVal+1),w	;volatile
  5458  0D2E  3032               	movlw	low(032h)
  5459  0D2F  1903               	skipnz
  5460  0D30  026C               	subwf	(_adcVal),w	;volatile
  5461  0D31  1803               	skipnc
  5462  0D32  2D34               	goto	u5141
  5463  0D33  2D35               	goto	u5140
  5464  0D34                     u5141:
  5465  0D34  2D3C               	goto	l11661
  5466  0D35                     u5140:
  5467                           	line	218
  5468                           	
  5469  0D35                     l11659:	
  5470                           ;robot.c: 218: ROBOTerror = 11;
  5471  0D35  300B               	movlw	(0Bh)
  5472  0D36  00DE               	movwf	(??_robotFollow+0)+0
  5473  0D37  085E               	movf	(??_robotFollow+0)+0,w
  5474  0D38  1683               	bsf	status, 5	;RP0=1, select bank1
  5475  0D39  1303               	bcf	status, 6	;RP1=0, select bank1
  5476  0D3A  00D4               	movwf	(_ROBOTerror)^080h
  5477  0D3B  2DE5               	goto	l11697
  5478                           	line	219
  5479                           	
  5480  0D3C                     l6133:	
  5481                           	line	220
  5482                           	
  5483  0D3C                     l11661:	
  5484                           ;robot.c: 219: else
  5485                           ;robot.c: 220: ROBOTerror = 10;
  5486  0D3C  300A               	movlw	(0Ah)
  5487  0D3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5488  0D3E  00DE               	movwf	(??_robotFollow+0)+0
  5489  0D3F  085E               	movf	(??_robotFollow+0)+0,w
  5490  0D40  1683               	bsf	status, 5	;RP0=1, select bank1
  5491  0D41  1303               	bcf	status, 6	;RP1=0, select bank1
  5492  0D42  00D4               	movwf	(_ROBOTerror)^080h
  5493  0D43  2DE5               	goto	l11697
  5494                           	
  5495  0D44                     l6134:	
  5496                           	line	222
  5497                           ;robot.c: 222: break;
  5498  0D44  2DE5               	goto	l11697
  5499                           	line	223
  5500                           	
  5501  0D45                     l11663:	
  5502                           ;robot.c: 223: }
  5503  0D45  2D58               	goto	l6127
  5504                           	line	224
  5505                           	
  5506  0D46                     l6130:	
  5507                           	line	226
  5508                           	
  5509  0D46                     l11665:	
  5510                           ;robot.c: 224: else
  5511                           ;robot.c: 225: {
  5512                           ;robot.c: 226: RobotDrive(speed, 0x7FFF);
  5513  0D46  1283               	bcf	status, 5	;RP0=0, select bank0
  5514  0D47  085A               	movf	(robotFollow@speed+1),w
  5515  0D48  01B0               	clrf	(?_RobotDrive+1)
  5516  0D49  07B0               	addwf	(?_RobotDrive+1)
  5517  0D4A  0859               	movf	(robotFollow@speed),w
  5518  0D4B  01AF               	clrf	(?_RobotDrive)
  5519  0D4C  07AF               	addwf	(?_RobotDrive)
  5520                           
  5521  0D4D  30FF               	movlw	low(07FFFh)
  5522  0D4E  00B1               	movwf	0+(?_RobotDrive)+02h
  5523  0D4F  307F               	movlw	high(07FFFh)
  5524  0D50  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5525  0D51  160A  118A  21C6   	fcall	_RobotDrive
              120A  158A         
  5526  0D56  2D58               	goto	l6127
  5527                           	line	227
  5528                           	
  5529  0D57                     l6136:	
  5530  0D57  2D58               	goto	l6127
  5531                           	
  5532  0D58                     l6129:	
  5533                           	
  5534  0D58                     l6127:	
  5535                           	line	228
  5536                           ;robot.c: 227: }
  5537                           ;robot.c: 228: robot_read(0);
  5538  0D58  3000               	movlw	(0)
  5539  0D59  120A  158A  2305   	fcall	_robot_read
              120A  158A         
  5540                           	line	229
  5541                           	
  5542  0D5E                     l11667:	
  5543                           ;robot.c: 229: if (BumpSensors)
  5544  0D5E  1283               	bcf	status, 5	;RP0=0, select bank0
  5545  0D5F  1303               	bcf	status, 6	;RP1=0, select bank0
  5546  0D60  086E               	movf	(_BumpSensors),w	;volatile
  5547  0D61  1D03               	skipz
  5548  0D62  2D64               	goto	u5150
  5549  0D63  2D6A               	goto	l11671
  5550  0D64                     u5150:
  5551                           	line	231
  5552                           	
  5553  0D64                     l11669:	
  5554                           ;robot.c: 230: {
  5555                           ;robot.c: 231: ROBOTerror = 1;
  5556  0D64  1683               	bsf	status, 5	;RP0=1, select bank1
  5557  0D65  1303               	bcf	status, 6	;RP1=0, select bank1
  5558  0D66  01D4               	clrf	(_ROBOTerror)^080h
  5559  0D67  1403               	bsf	status,0
  5560  0D68  0DD4               	rlf	(_ROBOTerror)^080h,f
  5561                           	line	232
  5562                           ;robot.c: 232: break;
  5563  0D69  2DE5               	goto	l11697
  5564                           	line	233
  5565                           	
  5566  0D6A                     l6137:	
  5567                           	line	234
  5568                           	
  5569  0D6A                     l11671:	
  5570                           ;robot.c: 233: }
  5571                           ;robot.c: 234: if (VwallSensor)
  5572  0D6A  1283               	bcf	status, 5	;RP0=0, select bank0
  5573  0D6B  086F               	movf	(_VwallSensor),w	;volatile
  5574  0D6C  1D03               	skipz
  5575  0D6D  2D6F               	goto	u5160
  5576  0D6E  2D76               	goto	l11675
  5577  0D6F                     u5160:
  5578                           	line	236
  5579                           	
  5580  0D6F                     l11673:	
  5581                           ;robot.c: 235: {
  5582                           ;robot.c: 236: ROBOTerror = 2;
  5583  0D6F  3002               	movlw	(02h)
  5584  0D70  00DE               	movwf	(??_robotFollow+0)+0
  5585  0D71  085E               	movf	(??_robotFollow+0)+0,w
  5586  0D72  1683               	bsf	status, 5	;RP0=1, select bank1
  5587  0D73  1303               	bcf	status, 6	;RP1=0, select bank1
  5588  0D74  00D4               	movwf	(_ROBOTerror)^080h
  5589                           	line	237
  5590                           ;robot.c: 237: break;
  5591  0D75  2DE5               	goto	l11697
  5592                           	line	238
  5593                           	
  5594  0D76                     l6138:	
  5595                           	line	239
  5596                           	
  5597  0D76                     l11675:	
  5598                           ;robot.c: 238: }
  5599                           ;robot.c: 239: if (CliffSensors)
  5600  0D76  1683               	bsf	status, 5	;RP0=1, select bank1
  5601  0D77  1303               	bcf	status, 6	;RP1=0, select bank1
  5602  0D78  084F               	movf	(_CliffSensors)^080h,w	;volatile
  5603  0D79  1D03               	skipz
  5604  0D7A  2D7C               	goto	u5170
  5605  0D7B  2D85               	goto	l11679
  5606  0D7C                     u5170:
  5607                           	line	241
  5608                           	
  5609  0D7C                     l11677:	
  5610                           ;robot.c: 240: {
  5611                           ;robot.c: 241: ROBOTerror = 3;
  5612  0D7C  3003               	movlw	(03h)
  5613  0D7D  1283               	bcf	status, 5	;RP0=0, select bank0
  5614  0D7E  1303               	bcf	status, 6	;RP1=0, select bank0
  5615  0D7F  00DE               	movwf	(??_robotFollow+0)+0
  5616  0D80  085E               	movf	(??_robotFollow+0)+0,w
  5617  0D81  1683               	bsf	status, 5	;RP0=1, select bank1
  5618  0D82  1303               	bcf	status, 6	;RP1=0, select bank1
  5619  0D83  00D4               	movwf	(_ROBOTerror)^080h
  5620                           	line	242
  5621                           ;robot.c: 242: break;
  5622  0D84  2DE5               	goto	l11697
  5623                           	line	243
  5624                           	
  5625  0D85                     l6139:	
  5626                           	line	244
  5627                           	
  5628  0D85                     l11679:	
  5629                           ;robot.c: 243: }
  5630                           ;robot.c: 244: if (VictimSensor != 255)
  5631  0D85  0858               	movf	(_VictimSensor)^080h,w	;volatile
  5632  0D86  3AFF               	xorlw	0FFh
  5633  0D87  1903               	skipnz
  5634  0D88  2D8A               	goto	u5181
  5635  0D89  2D8B               	goto	u5180
  5636  0D8A                     u5181:
  5637  0D8A  2D94               	goto	l11683
  5638  0D8B                     u5180:
  5639                           	line	246
  5640                           	
  5641  0D8B                     l11681:	
  5642                           ;robot.c: 245: {
  5643                           ;robot.c: 246: ROBOTerror = 4;
  5644  0D8B  3004               	movlw	(04h)
  5645  0D8C  1283               	bcf	status, 5	;RP0=0, select bank0
  5646  0D8D  1303               	bcf	status, 6	;RP1=0, select bank0
  5647  0D8E  00DE               	movwf	(??_robotFollow+0)+0
  5648  0D8F  085E               	movf	(??_robotFollow+0)+0,w
  5649  0D90  1683               	bsf	status, 5	;RP0=1, select bank1
  5650  0D91  1303               	bcf	status, 6	;RP1=0, select bank1
  5651  0D92  00D4               	movwf	(_ROBOTerror)^080h
  5652                           	line	247
  5653                           ;robot.c: 247: break;
  5654  0D93  2DE5               	goto	l11697
  5655                           	line	248
  5656                           	
  5657  0D94                     l6140:	
  5658                           	line	249
  5659                           	
  5660  0D94                     l11683:	
  5661                           ;robot.c: 248: }
  5662                           ;robot.c: 249: temp1 = DistHighByte;
  5663  0D94  0850               	movf	(_DistHighByte)^080h,w	;volatile
  5664  0D95  1283               	bcf	status, 5	;RP0=0, select bank0
  5665  0D96  1303               	bcf	status, 6	;RP1=0, select bank0
  5666  0D97  00DE               	movwf	(??_robotFollow+0)+0
  5667  0D98  01DF               	clrf	(??_robotFollow+0)+0+1
  5668  0D99  085E               	movf	0+(??_robotFollow+0)+0,w
  5669  0D9A  00E2               	movwf	(robotFollow@temp1)
  5670  0D9B  085F               	movf	1+(??_robotFollow+0)+0,w
  5671  0D9C  00E3               	movwf	(robotFollow@temp1+1)
  5672                           	line	250
  5673                           	
  5674  0D9D                     l11685:	
  5675                           ;robot.c: 250: temp1 = temp1 << 8;
  5676  0D9D  0863               	movf	(robotFollow@temp1+1),w
  5677  0D9E  00DF               	movwf	(??_robotFollow+0)+0+1
  5678  0D9F  0862               	movf	(robotFollow@temp1),w
  5679  0DA0  00DE               	movwf	(??_robotFollow+0)+0
  5680  0DA1  085E               	movf	(??_robotFollow+0)+0,w
  5681  0DA2  00DF               	movwf	(??_robotFollow+0)+1
  5682  0DA3  01DE               	clrf	(??_robotFollow+0)+0
  5683  0DA4  085E               	movf	0+(??_robotFollow+0)+0,w
  5684  0DA5  00E2               	movwf	(robotFollow@temp1)
  5685  0DA6  085F               	movf	1+(??_robotFollow+0)+0,w
  5686  0DA7  00E3               	movwf	(robotFollow@temp1+1)
  5687                           	line	251
  5688                           	
  5689  0DA8                     l11687:	
  5690                           ;robot.c: 251: temp1 += DistLowByte;
  5691  0DA8  1683               	bsf	status, 5	;RP0=1, select bank1
  5692  0DA9  1303               	bcf	status, 6	;RP1=0, select bank1
  5693  0DAA  0851               	movf	(_DistLowByte)^080h,w	;volatile
  5694  0DAB  1283               	bcf	status, 5	;RP0=0, select bank0
  5695  0DAC  1303               	bcf	status, 6	;RP1=0, select bank0
  5696  0DAD  00DE               	movwf	(??_robotFollow+0)+0
  5697  0DAE  01DF               	clrf	(??_robotFollow+0)+0+1
  5698  0DAF  085E               	movf	0+(??_robotFollow+0)+0,w
  5699  0DB0  07E2               	addwf	(robotFollow@temp1),f
  5700  0DB1  1803               	skipnc
  5701  0DB2  0AE3               	incf	(robotFollow@temp1+1),f
  5702  0DB3  085F               	movf	1+(??_robotFollow+0)+0,w
  5703  0DB4  07E3               	addwf	(robotFollow@temp1+1),f
  5704                           	line	252
  5705                           	
  5706  0DB5                     l11689:	
  5707                           ;robot.c: 252: distTravelled += temp1;
  5708  0DB5  0862               	movf	(robotFollow@temp1),w
  5709  0DB6  1683               	bsf	status, 5	;RP0=1, select bank1
  5710  0DB7  1303               	bcf	status, 6	;RP1=0, select bank1
  5711  0DB8  07C0               	addwf	(_distTravelled)^080h,f
  5712  0DB9  1803               	skipnc
  5713  0DBA  0AC1               	incf	(_distTravelled+1)^080h,f
  5714  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  5715  0DBC  1303               	bcf	status, 6	;RP1=0, select bank0
  5716  0DBD  0863               	movf	(robotFollow@temp1+1),w
  5717  0DBE  1683               	bsf	status, 5	;RP0=1, select bank1
  5718  0DBF  1303               	bcf	status, 6	;RP1=0, select bank1
  5719  0DC0  07C1               	addwf	(_distTravelled+1)^080h,f
  5720                           	line	253
  5721                           	
  5722  0DC1                     l11691:	
  5723                           ;robot.c: 253: TotalDistTravelled += temp1;
  5724  0DC1  1283               	bcf	status, 5	;RP0=0, select bank0
  5725  0DC2  1303               	bcf	status, 6	;RP1=0, select bank0
  5726  0DC3  0862               	movf	(robotFollow@temp1),w
  5727  0DC4  1683               	bsf	status, 5	;RP0=1, select bank1
  5728  0DC5  1303               	bcf	status, 6	;RP1=0, select bank1
  5729  0DC6  07BC               	addwf	(_TotalDistTravelled)^080h,f
  5730  0DC7  1803               	skipnc
  5731  0DC8  0ABD               	incf	(_TotalDistTravelled+1)^080h,f
  5732  0DC9  1283               	bcf	status, 5	;RP0=0, select bank0
  5733  0DCA  1303               	bcf	status, 6	;RP1=0, select bank0
  5734  0DCB  0863               	movf	(robotFollow@temp1+1),w
  5735  0DCC  1683               	bsf	status, 5	;RP0=1, select bank1
  5736  0DCD  1303               	bcf	status, 6	;RP1=0, select bank1
  5737  0DCE  07BD               	addwf	(_TotalDistTravelled+1)^080h,f
  5738                           	line	255
  5739                           	
  5740  0DCF                     l11693:	
  5741                           ;robot.c: 255: Disp2 = RobotPos;
  5742  0DCF  0856               	movf	(_RobotPos)^080h,w
  5743  0DD0  1283               	bcf	status, 5	;RP0=0, select bank0
  5744  0DD1  1303               	bcf	status, 6	;RP1=0, select bank0
  5745  0DD2  00DE               	movwf	(??_robotFollow+0)+0
  5746  0DD3  01DF               	clrf	(??_robotFollow+0)+0+1
  5747  0DD4  085E               	movf	0+(??_robotFollow+0)+0,w
  5748  0DD5  1683               	bsf	status, 5	;RP0=1, select bank1
  5749  0DD6  1303               	bcf	status, 6	;RP1=0, select bank1
  5750  0DD7  00B6               	movwf	(_Disp2)^080h
  5751  0DD8  1283               	bcf	status, 5	;RP0=0, select bank0
  5752  0DD9  1303               	bcf	status, 6	;RP1=0, select bank0
  5753  0DDA  085F               	movf	1+(??_robotFollow+0)+0,w
  5754  0DDB  1683               	bsf	status, 5	;RP0=1, select bank1
  5755  0DDC  1303               	bcf	status, 6	;RP1=0, select bank1
  5756  0DDD  00B7               	movwf	(_Disp2+1)^080h
  5757                           	line	256
  5758                           	
  5759  0DDE                     l11695:	
  5760                           ;robot.c: 256: UpdateDisplay();
  5761  0DDE  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  5762  0DE3  2C47               	goto	l11625
  5763                           	line	257
  5764                           	
  5765  0DE4                     l6141:	
  5766                           	line	195
  5767  0DE4  2C47               	goto	l11625
  5768                           	
  5769  0DE5                     l6135:	
  5770                           	line	258
  5771                           	
  5772  0DE5                     l11697:	
  5773                           ;robot.c: 257: }
  5774                           ;robot.c: 258: RobotDrive(0, 0x7FFF);
  5775  0DE5  3000               	movlw	low(0)
  5776  0DE6  1283               	bcf	status, 5	;RP0=0, select bank0
  5777  0DE7  1303               	bcf	status, 6	;RP1=0, select bank0
  5778  0DE8  00AF               	movwf	(?_RobotDrive)
  5779  0DE9  3000               	movlw	high(0)
  5780  0DEA  00B0               	movwf	((?_RobotDrive))+1
  5781  0DEB  30FF               	movlw	low(07FFFh)
  5782  0DEC  00B1               	movwf	0+(?_RobotDrive)+02h
  5783  0DED  307F               	movlw	high(07FFFh)
  5784  0DEE  00B2               	movwf	(0+(?_RobotDrive)+02h)+1
  5785  0DEF  160A  118A  21C6   	fcall	_RobotDrive
              120A  158A         
  5786                           	line	259
  5787                           	
  5788  0DF4                     l11699:	
  5789                           ;robot.c: 259: Disp2 = RobotPos;
  5790  0DF4  1683               	bsf	status, 5	;RP0=1, select bank1
  5791  0DF5  1303               	bcf	status, 6	;RP1=0, select bank1
  5792  0DF6  0856               	movf	(_RobotPos)^080h,w
  5793  0DF7  1283               	bcf	status, 5	;RP0=0, select bank0
  5794  0DF8  1303               	bcf	status, 6	;RP1=0, select bank0
  5795  0DF9  00DE               	movwf	(??_robotFollow+0)+0
  5796  0DFA  01DF               	clrf	(??_robotFollow+0)+0+1
  5797  0DFB  085E               	movf	0+(??_robotFollow+0)+0,w
  5798  0DFC  1683               	bsf	status, 5	;RP0=1, select bank1
  5799  0DFD  1303               	bcf	status, 6	;RP1=0, select bank1
  5800  0DFE  00B6               	movwf	(_Disp2)^080h
  5801  0DFF  1283               	bcf	status, 5	;RP0=0, select bank0
  5802  0E00  1303               	bcf	status, 6	;RP1=0, select bank0
  5803  0E01  085F               	movf	1+(??_robotFollow+0)+0,w
  5804  0E02  1683               	bsf	status, 5	;RP0=1, select bank1
  5805  0E03  1303               	bcf	status, 6	;RP1=0, select bank1
  5806  0E04  00B7               	movwf	(_Disp2+1)^080h
  5807                           	line	260
  5808                           	
  5809  0E05                     l11701:	
  5810                           ;robot.c: 260: UpdateDisplay();
  5811  0E05  120A  158A  260B   	fcall	_UpdateDisplay
              120A  158A         
  5812                           	line	263
  5813                           	
  5814  0E0A                     l6142:	
  5815  0E0A  0008               	return
  5816                           	opt stack 0
  5817                           GLOBAL	__end_of_robotFollow
  5818  0E0B                     	__end_of_robotFollow:
  5819 ;; =============== function _robotFollow ends ============
  5820                           
  5821                           	signat	_robotFollow,12408
  5822                           	global	_calibrateIR
  5823                           psect	text1068,local,class=CODE,delta=2
  5824                           global __ptext1068
  5825  1462                     __ptext1068:
  5826                           
  5827 ;; *************** function _calibrateIR *****************
  5828 ;; Defined at:
  5829 ;;		line 319 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;		None
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;		None               void
  5836 ;; Registers used:
  5837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5843 ;;      Params:         0       0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0
  5846 ;;      Totals:         0       0       0       0       0
  5847 ;;Total ram usage:        0 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    6
  5850 ;; This function calls:
  5851 ;;		_rotate
  5852 ;;		_UpdateDisplay
  5853 ;; This function is called by:
  5854 ;;		_main
  5855 ;;		_Init_Follow_IR
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           psect	text1068
  5859                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  5860                           	line	319
  5861                           	global	__size_of_calibrateIR
  5862  006C                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  5863                           	
  5864  1462                     _calibrateIR:	
  5865                           	opt	stack 0
  5866                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5867                           	line	320
  5868                           	
  5869  1462                     l11585:	
  5870                           ;Main.c: 320: currentMenu = 1;
  5871  1462  1683               	bsf	status, 5	;RP0=1, select bank1
  5872  1463  1303               	bcf	status, 6	;RP1=0, select bank1
  5873  1464  01D9               	clrf	(_currentMenu)^080h	;volatile
  5874  1465  1403               	bsf	status,0
  5875  1466  0DD9               	rlf	(_currentMenu)^080h,f	;volatile
  5876                           	line	321
  5877                           	
  5878  1467                     l11587:	
  5879                           ;Main.c: 321: rotate(8, 0);
  5880  1467  3008               	movlw	low(08h)
  5881  1468  1283               	bcf	status, 5	;RP0=0, select bank0
  5882  1469  1303               	bcf	status, 6	;RP1=0, select bank0
  5883  146A  00A3               	movwf	(?_rotate)
  5884  146B  3000               	movlw	high(08h)
  5885  146C  00A4               	movwf	((?_rotate))+1
  5886  146D  01A5               	clrf	0+(?_rotate)+02h
  5887  146E  160A  118A  23FB   	fcall	_rotate
              160A  118A         
  5888                           	line	322
  5889                           	
  5890  1473                     l11589:	
  5891                           ;Main.c: 322: rotate(8, 1);
  5892  1473  3008               	movlw	low(08h)
  5893  1474  1283               	bcf	status, 5	;RP0=0, select bank0
  5894  1475  1303               	bcf	status, 6	;RP1=0, select bank0
  5895  1476  00A3               	movwf	(?_rotate)
  5896  1477  3000               	movlw	high(08h)
  5897  1478  00A4               	movwf	((?_rotate))+1
  5898  1479  01A5               	clrf	0+(?_rotate)+02h
  5899  147A  1403               	bsf	status,0
  5900  147B  0DA5               	rlf	0+(?_rotate)+02h,f
  5901  147C  160A  118A  23FB   	fcall	_rotate
              160A  118A         
  5902  1481  2C82               	goto	l11591
  5903                           	line	323
  5904                           ;Main.c: 323: while (1)
  5905                           	
  5906  1482                     l2293:	
  5907                           	line	325
  5908                           	
  5909  1482                     l11591:	
  5910                           ;Main.c: 324: {
  5911                           ;Main.c: 325: if (RTC_FLAG_250MS == 1)
  5912  1482  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  5913  1483  2C85               	goto	u5051
  5914  1484  2C86               	goto	u5050
  5915  1485                     u5051:
  5916  1485  2CBA               	goto	l11615
  5917  1486                     u5050:
  5918                           	line	327
  5919                           	
  5920  1486                     l11593:	
  5921                           ;Main.c: 326: {
  5922                           ;Main.c: 327: RTC_FLAG_250MS = 0;
  5923  1486  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  5924                           	line	328
  5925                           	
  5926  1487                     l11595:	
  5927                           ;Main.c: 328: UpdateDisplay();
  5928  1487  120A  158A  260B   	fcall	_UpdateDisplay
              160A  118A         
  5929  148C  2CBA               	goto	l11615
  5930                           	line	329
  5931                           	
  5932  148D                     l2294:	
  5933                           	line	330
  5934                           ;Main.c: 329: }
  5935                           ;Main.c: 330: switch (buttonPressed)
  5936  148D  2CBA               	goto	l11615
  5937                           	line	332
  5938                           ;Main.c: 331: {
  5939                           ;Main.c: 332: case 1:
  5940                           	
  5941  148E                     l2296:	
  5942                           	line	333
  5943                           ;Main.c: 333: buttonPressed = 0;
  5944  148E  01FD               	clrf	(_buttonPressed)	;volatile
  5945                           	line	334
  5946                           ;Main.c: 334: break;
  5947  148F  2C82               	goto	l11591
  5948                           	line	335
  5949                           ;Main.c: 335: case 2:
  5950                           	
  5951  1490                     l2298:	
  5952                           	line	336
  5953                           ;Main.c: 336: buttonPressed = 0;
  5954  1490  01FD               	clrf	(_buttonPressed)	;volatile
  5955                           	line	337
  5956                           ;Main.c: 337: break;
  5957  1491  2C82               	goto	l11591
  5958                           	line	338
  5959                           ;Main.c: 338: case 3:
  5960                           	
  5961  1492                     l2299:	
  5962                           	line	339
  5963                           	
  5964  1492                     l11597:	
  5965                           ;Main.c: 339: rotate(1, 1);
  5966  1492  3001               	movlw	low(01h)
  5967  1493  1283               	bcf	status, 5	;RP0=0, select bank0
  5968  1494  1303               	bcf	status, 6	;RP1=0, select bank0
  5969  1495  00A3               	movwf	(?_rotate)
  5970  1496  3000               	movlw	high(01h)
  5971  1497  00A4               	movwf	((?_rotate))+1
  5972  1498  01A5               	clrf	0+(?_rotate)+02h
  5973  1499  1403               	bsf	status,0
  5974  149A  0DA5               	rlf	0+(?_rotate)+02h,f
  5975  149B  160A  118A  23FB   	fcall	_rotate
              160A  118A         
  5976                           	line	340
  5977                           	
  5978  14A0                     l11599:	
  5979                           ;Main.c: 340: buttonPressed = 0;
  5980  14A0  01FD               	clrf	(_buttonPressed)	;volatile
  5981                           	line	341
  5982                           ;Main.c: 341: break;
  5983  14A1  2C82               	goto	l11591
  5984                           	line	342
  5985                           ;Main.c: 342: case 4:
  5986                           	
  5987  14A2                     l2300:	
  5988                           	line	343
  5989                           	
  5990  14A2                     l11601:	
  5991                           ;Main.c: 343: rotate(1, 0);
  5992  14A2  3001               	movlw	low(01h)
  5993  14A3  1283               	bcf	status, 5	;RP0=0, select bank0
  5994  14A4  1303               	bcf	status, 6	;RP1=0, select bank0
  5995  14A5  00A3               	movwf	(?_rotate)
  5996  14A6  3000               	movlw	high(01h)
  5997  14A7  00A4               	movwf	((?_rotate))+1
  5998  14A8  01A5               	clrf	0+(?_rotate)+02h
  5999  14A9  160A  118A  23FB   	fcall	_rotate
              160A  118A         
  6000                           	line	344
  6001                           	
  6002  14AE                     l11603:	
  6003                           ;Main.c: 344: buttonPressed = 0;
  6004  14AE  01FD               	clrf	(_buttonPressed)	;volatile
  6005                           	line	345
  6006                           ;Main.c: 345: break;
  6007  14AF  2C82               	goto	l11591
  6008                           	line	346
  6009                           ;Main.c: 346: case 5:
  6010                           	
  6011  14B0                     l2301:	
  6012                           	line	348
  6013                           	
  6014  14B0                     l11605:	
  6015                           ;Main.c: 348: totalSteps = 0;
  6016  14B0  1683               	bsf	status, 5	;RP0=1, select bank1
  6017  14B1  1303               	bcf	status, 6	;RP1=0, select bank1
  6018  14B2  01CA               	clrf	(_totalSteps)^080h
  6019  14B3  01CB               	clrf	(_totalSteps+1)^080h
  6020                           	line	349
  6021                           	
  6022  14B4                     l11607:	
  6023                           ;Main.c: 349: buttonPressed = 0;
  6024  14B4  01FD               	clrf	(_buttonPressed)	;volatile
  6025                           	line	350
  6026                           	
  6027  14B5                     l11609:	
  6028                           ;Main.c: 350: currentMenu = 0;
  6029  14B5  01D9               	clrf	(_currentMenu)^080h	;volatile
  6030  14B6  2CCD               	goto	l2302
  6031                           	line	351
  6032                           	
  6033  14B7                     l11611:	
  6034                           ;Main.c: 351: return;
  6035  14B7  2CCD               	goto	l2302
  6036                           	line	352
  6037                           ;Main.c: 352: default:
  6038                           	
  6039  14B8                     l2303:	
  6040                           	line	353
  6041                           ;Main.c: 353: break;
  6042  14B8  2C82               	goto	l11591
  6043                           	line	354
  6044                           	
  6045  14B9                     l11613:	
  6046                           ;Main.c: 354: }
  6047  14B9  2C82               	goto	l11591
  6048                           	line	330
  6049                           	
  6050  14BA                     l2295:	
  6051                           	
  6052  14BA                     l11615:	
  6053  14BA  087D               	movf	(_buttonPressed),w	;volatile
  6054                           	; Switch size 1, requested type "space"
  6055                           ; Number of cases is 5, Range of values is 1 to 5
  6056                           ; switch strategies available:
  6057                           ; Name         Instructions Cycles
  6058                           ; simple_byte           16     9 (average)
  6059                           ; direct_byte           26    11 (fixed)
  6060                           ; jumptable            263     9 (fixed)
  6061                           ;	Chosen strategy is simple_byte
  6062                           
  6063                           	opt asmopt_off
  6064  14BB  3A01               	xorlw	1^0	; case 1
  6065  14BC  1903               	skipnz
  6066  14BD  2C8E               	goto	l2296
  6067  14BE  3A03               	xorlw	2^1	; case 2
  6068  14BF  1903               	skipnz
  6069  14C0  2C90               	goto	l2298
  6070  14C1  3A01               	xorlw	3^2	; case 3
  6071  14C2  1903               	skipnz
  6072  14C3  2C92               	goto	l11597
  6073  14C4  3A07               	xorlw	4^3	; case 4
  6074  14C5  1903               	skipnz
  6075  14C6  2CA2               	goto	l11601
  6076  14C7  3A01               	xorlw	5^4	; case 5
  6077  14C8  1903               	skipnz
  6078  14C9  2CB0               	goto	l11605
  6079  14CA  2C82               	goto	l11591
  6080                           	opt asmopt_on
  6081                           
  6082                           	line	354
  6083                           	
  6084  14CB                     l2297:	
  6085  14CB  2C82               	goto	l11591
  6086                           	line	355
  6087                           	
  6088  14CC                     l2304:	
  6089                           	line	323
  6090  14CC  2C82               	goto	l11591
  6091                           	
  6092  14CD                     l2305:	
  6093                           	line	356
  6094                           	
  6095  14CD                     l2302:	
  6096  14CD  0008               	return
  6097                           	opt stack 0
  6098                           GLOBAL	__end_of_calibrateIR
  6099  14CE                     	__end_of_calibrateIR:
  6100 ;; =============== function _calibrateIR ends ============
  6101                           
  6102                           	signat	_calibrateIR,88
  6103                           	global	_UpdateDisplay
  6104                           psect	text1069,local,class=CODE,delta=2
  6105                           global __ptext1069
  6106  0E0B                     __ptext1069:
  6107                           
  6108 ;; *************** function _UpdateDisplay *****************
  6109 ;; Defined at:
  6110 ;;		line 236 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  LCDOutput      16   41[BANK0 ] unsigned char [16]
  6115 ;; Return value:  Size  Location     Type
  6116 ;;		None               void
  6117 ;; Registers used:
  6118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6124 ;;      Params:         0       0       0       0       0
  6125 ;;      Locals:         0      16       0       0       0
  6126 ;;      Temps:          0       4       0       0       0
  6127 ;;      Totals:         0      20       0       0       0
  6128 ;;Total ram usage:       20 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    5
  6131 ;; This function calls:
  6132 ;;		_lcd_write_control
  6133 ;;		_sprintf
  6134 ;;		_lcd_set_cursor
  6135 ;;		_lcd_write_string
  6136 ;;		___awmod
  6137 ;; This function is called by:
  6138 ;;		_main
  6139 ;;		_calibrateIR
  6140 ;;		_ChargeMode
  6141 ;;		_robotFollow
  6142 ;;		_robot_turnRight
  6143 ;;		_robotMoveSpeed
  6144 ;;		_robotTurnSpeed
  6145 ;;		_scan360
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           psect	text1069
  6149                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  6150                           	line	236
  6151                           	global	__size_of_UpdateDisplay
  6152  01F5                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  6153                           	
  6154  0E0B                     _UpdateDisplay:	
  6155                           	opt	stack 1
  6156                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6157                           	line	237
  6158                           	
  6159  0E0B                     l11515:	
  6160                           ;HMI.c: 237: char LCDOutput[16] = "";
  6161  0E0B  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  6162  0E0C  0084               	movwf	fsr0
  6163  0E0D  3090               	movlw	low(UpdateDisplay@F1264)
  6164  0E0E  1283               	bcf	status, 5	;RP0=0, select bank0
  6165  0E0F  1303               	bcf	status, 6	;RP1=0, select bank0
  6166  0E10  00C5               	movwf	(??_UpdateDisplay+0)+0
  6167  0E11  0804               	movf	fsr0,w
  6168  0E12  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  6169  0E13  3010               	movlw	16
  6170  0E14  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  6171  0E15                     u5030:
  6172  0E15  0845               	movf	(??_UpdateDisplay+0)+0,w
  6173  0E16  0084               	movwf	fsr0
  6174  0E17  1783               	bsf	status, 7	;select IRP bank3
  6175                           	
  6176  0E18  0800               	movf	indf,w
  6177  0E19  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  6178  0E1A  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  6179  0E1B  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  6180  0E1C  0084               	movwf	fsr0
  6181  0E1D  1383               	bcf	status, 7	;select IRP bank0
  6182                           	
  6183  0E1E  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  6184  0E1F  0080               	movwf	indf
  6185  0E20  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  6186  0E21  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  6187  0E22  2E15               	goto	u5030
  6188                           	line	238
  6189                           ;HMI.c: 238: switch (currentMenu)
  6190  0E23  2FF2               	goto	l11579
  6191                           	line	240
  6192                           ;HMI.c: 239: {
  6193                           ;HMI.c: 240: case 0:
  6194                           	
  6195  0E24                     l4591:	
  6196                           	line	241
  6197                           	
  6198  0E24                     l11517:	
  6199                           ;HMI.c: 241: lcd_write_control(0b00000001);
  6200  0E24  3001               	movlw	(01h)
  6201  0E25  160A  158A  2744   	fcall	_lcd_write_control
              120A  158A         
  6202                           	line	242
  6203                           	
  6204  0E2A                     l11519:	
  6205                           ;HMI.c: 242: sprintf(LCDOutput,"IR:%dcm D:%d",Disp1, Disp2);
  6206  0E2A  302B               	movlw	((STR_13-__stringbase))&0ffh
  6207  0E2B  1283               	bcf	status, 5	;RP0=0, select bank0
  6208  0E2C  1303               	bcf	status, 6	;RP1=0, select bank0
  6209  0E2D  00C5               	movwf	(??_UpdateDisplay+0)+0
  6210  0E2E  0845               	movf	(??_UpdateDisplay+0)+0,w
  6211  0E2F  00B4               	movwf	(?_sprintf)
  6212  0E30  1683               	bsf	status, 5	;RP0=1, select bank1
  6213  0E31  1303               	bcf	status, 6	;RP1=0, select bank1
  6214  0E32  0835               	movf	(_Disp1+1)^080h,w
  6215  0E33  1283               	bcf	status, 5	;RP0=0, select bank0
  6216  0E34  1303               	bcf	status, 6	;RP1=0, select bank0
  6217  0E35  01B6               	clrf	1+(?_sprintf)+01h
  6218  0E36  07B6               	addwf	1+(?_sprintf)+01h
  6219  0E37  1683               	bsf	status, 5	;RP0=1, select bank1
  6220  0E38  1303               	bcf	status, 6	;RP1=0, select bank1
  6221  0E39  0834               	movf	(_Disp1)^080h,w
  6222  0E3A  1283               	bcf	status, 5	;RP0=0, select bank0
  6223  0E3B  1303               	bcf	status, 6	;RP1=0, select bank0
  6224  0E3C  01B5               	clrf	0+(?_sprintf)+01h
  6225  0E3D  07B5               	addwf	0+(?_sprintf)+01h
  6226                           
  6227  0E3E  1683               	bsf	status, 5	;RP0=1, select bank1
  6228  0E3F  1303               	bcf	status, 6	;RP1=0, select bank1
  6229  0E40  0837               	movf	(_Disp2+1)^080h,w
  6230  0E41  1283               	bcf	status, 5	;RP0=0, select bank0
  6231  0E42  1303               	bcf	status, 6	;RP1=0, select bank0
  6232  0E43  01B8               	clrf	1+(?_sprintf)+03h
  6233  0E44  07B8               	addwf	1+(?_sprintf)+03h
  6234  0E45  1683               	bsf	status, 5	;RP0=1, select bank1
  6235  0E46  1303               	bcf	status, 6	;RP1=0, select bank1
  6236  0E47  0836               	movf	(_Disp2)^080h,w
  6237  0E48  1283               	bcf	status, 5	;RP0=0, select bank0
  6238  0E49  1303               	bcf	status, 6	;RP1=0, select bank0
  6239  0E4A  01B7               	clrf	0+(?_sprintf)+03h
  6240  0E4B  07B7               	addwf	0+(?_sprintf)+03h
  6241                           
  6242  0E4C  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  6243  0E4D  120A  158A  2205   	fcall	_sprintf
              120A  158A         
  6244                           	line	243
  6245                           	
  6246  0E52                     l11521:	
  6247                           ;HMI.c: 243: lcd_set_cursor(0x00);
  6248  0E52  3000               	movlw	(0)
  6249  0E53  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6250                           	line	244
  6251                           ;HMI.c: 244: lcd_write_string(LCDOutput);
  6252  0E58  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  6253  0E59  1283               	bcf	status, 5	;RP0=0, select bank0
  6254  0E5A  1303               	bcf	status, 6	;RP1=0, select bank0
  6255  0E5B  00A7               	movwf	(?_lcd_write_string)
  6256  0E5C  3000               	movlw	(0x0/2)
  6257  0E5D  00A8               	movwf	(?_lcd_write_string+1)
  6258  0E5E  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6259                           	line	245
  6260                           	
  6261  0E63                     l11523:	
  6262                           ;HMI.c: 245: lcd_set_cursor(0x40);
  6263  0E63  3040               	movlw	(040h)
  6264  0E64  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6265                           	line	246
  6266                           	
  6267  0E69                     l11525:	
  6268                           ;HMI.c: 246: if (pos > 0)
  6269  0E69  1683               	bsf	status, 5	;RP0=1, select bank1
  6270  0E6A  1303               	bcf	status, 6	;RP1=0, select bank1
  6271  0E6B  0847               	movf	(_pos+1)^080h,w
  6272  0E6C  3A80               	xorlw	80h
  6273  0E6D  00FF               	movwf	btemp+1
  6274  0E6E  3080               	movlw	(high(01h))^80h
  6275  0E6F  027F               	subwf	btemp+1,w
  6276  0E70  1D03               	skipz
  6277  0E71  2E74               	goto	u5045
  6278  0E72  3001               	movlw	low(01h)
  6279  0E73  0246               	subwf	(_pos)^080h,w
  6280  0E74                     u5045:
  6281                           
  6282  0E74  1C03               	skipc
  6283  0E75  2E77               	goto	u5041
  6284  0E76  2E78               	goto	u5040
  6285  0E77                     u5041:
  6286  0E77  2E8B               	goto	l11529
  6287  0E78                     u5040:
  6288                           	line	247
  6289                           	
  6290  0E78                     l11527:	
  6291                           ;HMI.c: 247: lcd_write_string(shortMenuStrings[pos - 1]);
  6292  0E78  1683               	bsf	status, 5	;RP0=1, select bank1
  6293  0E79  1303               	bcf	status, 6	;RP1=0, select bank1
  6294  0E7A  0846               	movf	(_pos)^080h,w
  6295  0E7B  3EFF               	addlw	0FFh
  6296  0E7C  3EE9               	addlw	_shortMenuStrings&0ffh
  6297  0E7D  0084               	movwf	fsr0
  6298  0E7E  1383               	bcf	status, 7	;select IRP bank1
  6299  0E7F  0800               	movf	indf,w
  6300  0E80  1283               	bcf	status, 5	;RP0=0, select bank0
  6301  0E81  1303               	bcf	status, 6	;RP1=0, select bank0
  6302  0E82  00A7               	movwf	(?_lcd_write_string)
  6303  0E83  3080               	movlw	80h
  6304  0E84  00A8               	movwf	(?_lcd_write_string+1)
  6305  0E85  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6306  0E8A  2E9E               	goto	l11531
  6307                           	line	248
  6308                           	
  6309  0E8B                     l4592:	
  6310                           	line	249
  6311                           	
  6312  0E8B                     l11529:	
  6313                           ;HMI.c: 248: else
  6314                           ;HMI.c: 249: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  6315  0E8B  1683               	bsf	status, 5	;RP0=1, select bank1
  6316  0E8C  1303               	bcf	status, 6	;RP1=0, select bank1
  6317  0E8D  0846               	movf	(_pos)^080h,w
  6318  0E8E  3E05               	addlw	05h
  6319  0E8F  3EE9               	addlw	_shortMenuStrings&0ffh
  6320  0E90  0084               	movwf	fsr0
  6321  0E91  1383               	bcf	status, 7	;select IRP bank1
  6322  0E92  0800               	movf	indf,w
  6323  0E93  1283               	bcf	status, 5	;RP0=0, select bank0
  6324  0E94  1303               	bcf	status, 6	;RP1=0, select bank0
  6325  0E95  00A7               	movwf	(?_lcd_write_string)
  6326  0E96  3080               	movlw	80h
  6327  0E97  00A8               	movwf	(?_lcd_write_string+1)
  6328  0E98  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6329  0E9D  2E9E               	goto	l11531
  6330                           	
  6331  0E9E                     l4593:	
  6332                           	line	250
  6333                           	
  6334  0E9E                     l11531:	
  6335                           ;HMI.c: 250: lcd_set_cursor(0x44);
  6336  0E9E  3044               	movlw	(044h)
  6337  0E9F  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6338                           	line	251
  6339                           	
  6340  0EA4                     l11533:	
  6341                           ;HMI.c: 251: lcd_write_string(menuStrings[pos]);
  6342  0EA4  1683               	bsf	status, 5	;RP0=1, select bank1
  6343  0EA5  1303               	bcf	status, 6	;RP1=0, select bank1
  6344  0EA6  0846               	movf	(_pos)^080h,w
  6345  0EA7  3EE3               	addlw	_menuStrings&0ffh
  6346  0EA8  0084               	movwf	fsr0
  6347  0EA9  1383               	bcf	status, 7	;select IRP bank1
  6348  0EAA  0800               	movf	indf,w
  6349  0EAB  1283               	bcf	status, 5	;RP0=0, select bank0
  6350  0EAC  1303               	bcf	status, 6	;RP1=0, select bank0
  6351  0EAD  00A7               	movwf	(?_lcd_write_string)
  6352  0EAE  3080               	movlw	80h
  6353  0EAF  00A8               	movwf	(?_lcd_write_string+1)
  6354  0EB0  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6355                           	line	252
  6356                           ;HMI.c: 252: lcd_set_cursor(0x4D);
  6357  0EB5  304D               	movlw	(04Dh)
  6358  0EB6  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6359                           	line	253
  6360                           	
  6361  0EBB                     l11535:	
  6362                           ;HMI.c: 253: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  6363  0EBB  3006               	movlw	low(06h)
  6364  0EBC  1283               	bcf	status, 5	;RP0=0, select bank0
  6365  0EBD  1303               	bcf	status, 6	;RP1=0, select bank0
  6366  0EBE  00A0               	movwf	(?___awmod)
  6367  0EBF  3000               	movlw	high(06h)
  6368  0EC0  00A1               	movwf	((?___awmod))+1
  6369  0EC1  1683               	bsf	status, 5	;RP0=1, select bank1
  6370  0EC2  1303               	bcf	status, 6	;RP1=0, select bank1
  6371  0EC3  0846               	movf	(_pos)^080h,w
  6372  0EC4  3E01               	addlw	low(01h)
  6373  0EC5  1283               	bcf	status, 5	;RP0=0, select bank0
  6374  0EC6  1303               	bcf	status, 6	;RP1=0, select bank0
  6375  0EC7  00A2               	movwf	0+(?___awmod)+02h
  6376  0EC8  1683               	bsf	status, 5	;RP0=1, select bank1
  6377  0EC9  1303               	bcf	status, 6	;RP1=0, select bank1
  6378  0ECA  0847               	movf	(_pos+1)^080h,w
  6379  0ECB  1803               	skipnc
  6380  0ECC  3E01               	addlw	1
  6381  0ECD  3E00               	addlw	high(01h)
  6382  0ECE  1283               	bcf	status, 5	;RP0=0, select bank0
  6383  0ECF  1303               	bcf	status, 6	;RP1=0, select bank0
  6384  0ED0  00A3               	movwf	1+0+(?___awmod)+02h
  6385  0ED1  120A  158A  2001   	fcall	___awmod
              120A  158A         
  6386  0ED6  1283               	bcf	status, 5	;RP0=0, select bank0
  6387  0ED7  1303               	bcf	status, 6	;RP1=0, select bank0
  6388  0ED8  0820               	movf	(0+(?___awmod)),w
  6389  0ED9  3EE9               	addlw	_shortMenuStrings&0ffh
  6390  0EDA  0084               	movwf	fsr0
  6391  0EDB  1383               	bcf	status, 7	;select IRP bank1
  6392  0EDC  0800               	movf	indf,w
  6393  0EDD  00A7               	movwf	(?_lcd_write_string)
  6394  0EDE  3080               	movlw	80h
  6395  0EDF  00A8               	movwf	(?_lcd_write_string+1)
  6396  0EE0  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6397                           	line	254
  6398                           ;HMI.c: 254: break;
  6399  0EE5  2FFF               	goto	l4606
  6400                           	line	255
  6401                           ;HMI.c: 255: case 1:
  6402                           	
  6403  0EE6                     l4595:	
  6404                           	line	256
  6405                           	
  6406  0EE6                     l11537:	
  6407                           ;HMI.c: 256: lcd_write_control(0b00000001);
  6408  0EE6  3001               	movlw	(01h)
  6409  0EE7  160A  158A  2744   	fcall	_lcd_write_control
              120A  158A         
  6410                           	line	257
  6411                           ;HMI.c: 257: lcd_set_cursor(0x00);
  6412  0EEC  3000               	movlw	(0)
  6413  0EED  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6414                           	line	258
  6415                           	
  6416  0EF2                     l11539:	
  6417                           ;HMI.c: 258: lcd_write_string("Zero Step_Motor");
  6418  0EF2  301B               	movlw	low((STR_14-__stringbase))
  6419  0EF3  1283               	bcf	status, 5	;RP0=0, select bank0
  6420  0EF4  1303               	bcf	status, 6	;RP1=0, select bank0
  6421  0EF5  00A7               	movwf	(?_lcd_write_string)
  6422  0EF6  3080               	movlw	80h
  6423  0EF7  00A8               	movwf	(?_lcd_write_string+1)
  6424  0EF8  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6425                           	line	259
  6426                           	
  6427  0EFD                     l11541:	
  6428                           ;HMI.c: 259: lcd_set_cursor(0x40);
  6429  0EFD  3040               	movlw	(040h)
  6430  0EFE  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6431                           	line	260
  6432                           ;HMI.c: 260: lcd_write_string("<<<");
  6433  0F03  3087               	movlw	low((STR_15-__stringbase))
  6434  0F04  1283               	bcf	status, 5	;RP0=0, select bank0
  6435  0F05  1303               	bcf	status, 6	;RP1=0, select bank0
  6436  0F06  00A7               	movwf	(?_lcd_write_string)
  6437  0F07  3080               	movlw	80h
  6438  0F08  00A8               	movwf	(?_lcd_write_string+1)
  6439  0F09  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6440                           	line	261
  6441                           	
  6442  0F0E                     l11543:	
  6443                           ;HMI.c: 261: lcd_set_cursor(0x44);
  6444  0F0E  3044               	movlw	(044h)
  6445  0F0F  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6446                           	line	262
  6447                           	
  6448  0F14                     l11545:	
  6449                           ;HMI.c: 262: lcd_write_string("CONFIRM");
  6450  0F14  3076               	movlw	low((STR_16-__stringbase))
  6451  0F15  1283               	bcf	status, 5	;RP0=0, select bank0
  6452  0F16  1303               	bcf	status, 6	;RP1=0, select bank0
  6453  0F17  00A7               	movwf	(?_lcd_write_string)
  6454  0F18  3080               	movlw	80h
  6455  0F19  00A8               	movwf	(?_lcd_write_string+1)
  6456  0F1A  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6457                           	line	263
  6458                           ;HMI.c: 263: lcd_set_cursor(0x4D);
  6459  0F1F  304D               	movlw	(04Dh)
  6460  0F20  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6461                           	line	264
  6462                           	
  6463  0F25                     l11547:	
  6464                           ;HMI.c: 264: lcd_write_string(">>>");
  6465  0F25  308B               	movlw	low((STR_17-__stringbase))
  6466  0F26  1283               	bcf	status, 5	;RP0=0, select bank0
  6467  0F27  1303               	bcf	status, 6	;RP1=0, select bank0
  6468  0F28  00A7               	movwf	(?_lcd_write_string)
  6469  0F29  3080               	movlw	80h
  6470  0F2A  00A8               	movwf	(?_lcd_write_string+1)
  6471  0F2B  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6472                           	line	265
  6473                           ;HMI.c: 265: break;
  6474  0F30  2FFF               	goto	l4606
  6475                           	line	266
  6476                           ;HMI.c: 266: case 2:
  6477                           	
  6478  0F31                     l4596:	
  6479                           	line	267
  6480                           	
  6481  0F31                     l11549:	
  6482                           ;HMI.c: 267: lcd_write_control(0b00000001);
  6483  0F31  3001               	movlw	(01h)
  6484  0F32  160A  158A  2744   	fcall	_lcd_write_control
              120A  158A         
  6485                           	line	268
  6486                           ;HMI.c: 268: lcd_set_cursor(0x00);
  6487  0F37  3000               	movlw	(0)
  6488  0F38  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6489                           	line	269
  6490                           	
  6491  0F3D                     l11551:	
  6492                           ;HMI.c: 269: lcd_write_string(" Charging Mode ");
  6493  0F3D  300B               	movlw	low((STR_18-__stringbase))
  6494  0F3E  1283               	bcf	status, 5	;RP0=0, select bank0
  6495  0F3F  1303               	bcf	status, 6	;RP1=0, select bank0
  6496  0F40  00A7               	movwf	(?_lcd_write_string)
  6497  0F41  3080               	movlw	80h
  6498  0F42  00A8               	movwf	(?_lcd_write_string+1)
  6499  0F43  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6500                           	line	270
  6501                           	
  6502  0F48                     l11553:	
  6503                           ;HMI.c: 270: lcd_set_cursor(0x40);
  6504  0F48  3040               	movlw	(040h)
  6505  0F49  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6506                           	line	271
  6507                           ;HMI.c: 271: sprintf(LCDOutput,"%dmA", BattCharge);
  6508  0F4E  307E               	movlw	((STR_19-__stringbase))&0ffh
  6509  0F4F  1283               	bcf	status, 5	;RP0=0, select bank0
  6510  0F50  1303               	bcf	status, 6	;RP1=0, select bank0
  6511  0F51  00C5               	movwf	(??_UpdateDisplay+0)+0
  6512  0F52  0845               	movf	(??_UpdateDisplay+0)+0,w
  6513  0F53  00B4               	movwf	(?_sprintf)
  6514  0F54  1683               	bsf	status, 5	;RP0=1, select bank1
  6515  0F55  1303               	bcf	status, 6	;RP1=0, select bank1
  6516  0F56  0831               	movf	(_BattCharge+1)^080h,w
  6517  0F57  1283               	bcf	status, 5	;RP0=0, select bank0
  6518  0F58  1303               	bcf	status, 6	;RP1=0, select bank0
  6519  0F59  01B6               	clrf	1+(?_sprintf)+01h
  6520  0F5A  07B6               	addwf	1+(?_sprintf)+01h
  6521  0F5B  1683               	bsf	status, 5	;RP0=1, select bank1
  6522  0F5C  1303               	bcf	status, 6	;RP1=0, select bank1
  6523  0F5D  0830               	movf	(_BattCharge)^080h,w
  6524  0F5E  1283               	bcf	status, 5	;RP0=0, select bank0
  6525  0F5F  1303               	bcf	status, 6	;RP1=0, select bank0
  6526  0F60  01B5               	clrf	0+(?_sprintf)+01h
  6527  0F61  07B5               	addwf	0+(?_sprintf)+01h
  6528                           
  6529  0F62  3049               	movlw	(UpdateDisplay@LCDOutput)&0ffh
  6530  0F63  120A  158A  2205   	fcall	_sprintf
              120A  158A         
  6531                           	line	272
  6532                           ;HMI.c: 272: lcd_write_string(LCDOutput);
  6533  0F68  3049               	movlw	(UpdateDisplay@LCDOutput&0ffh)
  6534  0F69  1283               	bcf	status, 5	;RP0=0, select bank0
  6535  0F6A  1303               	bcf	status, 6	;RP1=0, select bank0
  6536  0F6B  00A7               	movwf	(?_lcd_write_string)
  6537  0F6C  3000               	movlw	(0x0/2)
  6538  0F6D  00A8               	movwf	(?_lcd_write_string+1)
  6539  0F6E  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6540                           	line	273
  6541                           	
  6542  0F73                     l11555:	
  6543                           ;HMI.c: 273: lcd_set_cursor(0x4D);
  6544  0F73  304D               	movlw	(04Dh)
  6545  0F74  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6546                           	line	274
  6547                           ;HMI.c: 274: switch(BattState)
  6548  0F79  2FC3               	goto	l11571
  6549                           	line	276
  6550                           ;HMI.c: 275: {
  6551                           ;HMI.c: 276: case 0:
  6552                           	
  6553  0F7A                     l4598:	
  6554                           	line	277
  6555                           	
  6556  0F7A                     l11557:	
  6557                           ;HMI.c: 277: lcd_write_string("NC");
  6558  0F7A  30A6               	movlw	low((STR_20-__stringbase))
  6559  0F7B  1283               	bcf	status, 5	;RP0=0, select bank0
  6560  0F7C  1303               	bcf	status, 6	;RP1=0, select bank0
  6561  0F7D  00A7               	movwf	(?_lcd_write_string)
  6562  0F7E  3080               	movlw	80h
  6563  0F7F  00A8               	movwf	(?_lcd_write_string+1)
  6564  0F80  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6565                           	line	278
  6566                           ;HMI.c: 278: break;
  6567  0F85  2FDE               	goto	l11573
  6568                           	line	279
  6569                           ;HMI.c: 279: case 1:
  6570                           	
  6571  0F86                     l4600:	
  6572                           	line	280
  6573                           	
  6574  0F86                     l11559:	
  6575                           ;HMI.c: 280: lcd_write_string("RC");
  6576  0F86  30A9               	movlw	low((STR_21-__stringbase))
  6577  0F87  1283               	bcf	status, 5	;RP0=0, select bank0
  6578  0F88  1303               	bcf	status, 6	;RP1=0, select bank0
  6579  0F89  00A7               	movwf	(?_lcd_write_string)
  6580  0F8A  3080               	movlw	80h
  6581  0F8B  00A8               	movwf	(?_lcd_write_string+1)
  6582  0F8C  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6583                           	line	281
  6584                           ;HMI.c: 281: break;
  6585  0F91  2FDE               	goto	l11573
  6586                           	line	282
  6587                           ;HMI.c: 282: case 2:
  6588                           	
  6589  0F92                     l4601:	
  6590                           	line	283
  6591                           	
  6592  0F92                     l11561:	
  6593                           ;HMI.c: 283: lcd_write_string("FC");
  6594  0F92  30A3               	movlw	low((STR_22-__stringbase))
  6595  0F93  1283               	bcf	status, 5	;RP0=0, select bank0
  6596  0F94  1303               	bcf	status, 6	;RP1=0, select bank0
  6597  0F95  00A7               	movwf	(?_lcd_write_string)
  6598  0F96  3080               	movlw	80h
  6599  0F97  00A8               	movwf	(?_lcd_write_string+1)
  6600  0F98  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6601                           	line	284
  6602                           ;HMI.c: 284: break;
  6603  0F9D  2FDE               	goto	l11573
  6604                           	line	285
  6605                           ;HMI.c: 285: case 3:
  6606                           	
  6607  0F9E                     l4602:	
  6608                           	line	286
  6609                           	
  6610  0F9E                     l11563:	
  6611                           ;HMI.c: 286: lcd_write_string("TC");
  6612  0F9E  30AC               	movlw	low((STR_23-__stringbase))
  6613  0F9F  1283               	bcf	status, 5	;RP0=0, select bank0
  6614  0FA0  1303               	bcf	status, 6	;RP1=0, select bank0
  6615  0FA1  00A7               	movwf	(?_lcd_write_string)
  6616  0FA2  3080               	movlw	80h
  6617  0FA3  00A8               	movwf	(?_lcd_write_string+1)
  6618  0FA4  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6619                           	line	287
  6620                           ;HMI.c: 287: break;
  6621  0FA9  2FDE               	goto	l11573
  6622                           	line	288
  6623                           ;HMI.c: 288: case 4:
  6624                           	
  6625  0FAA                     l4603:	
  6626                           	line	289
  6627                           	
  6628  0FAA                     l11565:	
  6629                           ;HMI.c: 289: lcd_write_string("Wa");
  6630  0FAA  30AF               	movlw	low((STR_24-__stringbase))
  6631  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  6632  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  6633  0FAD  00A7               	movwf	(?_lcd_write_string)
  6634  0FAE  3080               	movlw	80h
  6635  0FAF  00A8               	movwf	(?_lcd_write_string+1)
  6636  0FB0  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6637                           	line	290
  6638                           ;HMI.c: 290: break;
  6639  0FB5  2FDE               	goto	l11573
  6640                           	line	291
  6641                           ;HMI.c: 291: case 5:
  6642                           	
  6643  0FB6                     l4604:	
  6644                           	line	292
  6645                           	
  6646  0FB6                     l11567:	
  6647                           ;HMI.c: 292: lcd_write_string("FC");
  6648  0FB6  30A3               	movlw	low((STR_25-__stringbase))
  6649  0FB7  1283               	bcf	status, 5	;RP0=0, select bank0
  6650  0FB8  1303               	bcf	status, 6	;RP1=0, select bank0
  6651  0FB9  00A7               	movwf	(?_lcd_write_string)
  6652  0FBA  3080               	movlw	80h
  6653  0FBB  00A8               	movwf	(?_lcd_write_string+1)
  6654  0FBC  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6655                           	line	293
  6656                           ;HMI.c: 293: break;
  6657  0FC1  2FDE               	goto	l11573
  6658                           	line	294
  6659                           	
  6660  0FC2                     l11569:	
  6661                           ;HMI.c: 294: }
  6662  0FC2  2FDE               	goto	l11573
  6663                           	line	274
  6664                           	
  6665  0FC3                     l4597:	
  6666                           	
  6667  0FC3                     l11571:	
  6668                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6669                           ; Switch size 1, requested type "space"
  6670                           ; Number of cases is 1, Range of values is 0 to 0
  6671                           ; switch strategies available:
  6672                           ; Name         Instructions Cycles
  6673                           ; simple_byte            4     3 (average)
  6674                           ; direct_byte           11     8 (fixed)
  6675                           ; jumptable            260     6 (fixed)
  6676                           ; rangetable             5     6 (fixed)
  6677                           ; spacedrange            8     9 (fixed)
  6678                           ; locatedrange           1     3 (fixed)
  6679                           ;	Chosen strategy is simple_byte
  6680                           
  6681  0FC3  1683               	bsf	status, 5	;RP0=1, select bank1
  6682  0FC4  1303               	bcf	status, 6	;RP1=0, select bank1
  6683  0FC5  0833               	movf (_BattState+1)^080h,w
  6684                           	opt asmopt_off
  6685  0FC6  3A00               	xorlw	0^0	; case 0
  6686  0FC7  1903               	skipnz
  6687  0FC8  2FCA               	goto	l12045
  6688  0FC9  2FDE               	goto	l11573
  6689                           	opt asmopt_on
  6690                           	
  6691  0FCA                     l12045:	
  6692                           ; Switch size 1, requested type "space"
  6693                           ; Number of cases is 6, Range of values is 0 to 5
  6694                           ; switch strategies available:
  6695                           ; Name         Instructions Cycles
  6696                           ; simple_byte           19    10 (average)
  6697                           ; direct_byte           26     8 (fixed)
  6698                           ; jumptable            260     6 (fixed)
  6699                           ; rangetable            10     6 (fixed)
  6700                           ; spacedrange           18     9 (fixed)
  6701                           ; locatedrange           6     3 (fixed)
  6702                           ;	Chosen strategy is simple_byte
  6703                           
  6704  0FCA  0832               	movf (_BattState)^080h,w
  6705                           	opt asmopt_off
  6706  0FCB  3A00               	xorlw	0^0	; case 0
  6707  0FCC  1903               	skipnz
  6708  0FCD  2F7A               	goto	l11557
  6709  0FCE  3A01               	xorlw	1^0	; case 1
  6710  0FCF  1903               	skipnz
  6711  0FD0  2F86               	goto	l11559
  6712  0FD1  3A03               	xorlw	2^1	; case 2
  6713  0FD2  1903               	skipnz
  6714  0FD3  2F92               	goto	l11561
  6715  0FD4  3A01               	xorlw	3^2	; case 3
  6716  0FD5  1903               	skipnz
  6717  0FD6  2F9E               	goto	l11563
  6718  0FD7  3A07               	xorlw	4^3	; case 4
  6719  0FD8  1903               	skipnz
  6720  0FD9  2FAA               	goto	l11565
  6721  0FDA  3A01               	xorlw	5^4	; case 5
  6722  0FDB  1903               	skipnz
  6723  0FDC  2FB6               	goto	l11567
  6724  0FDD  2FDE               	goto	l11573
  6725                           	opt asmopt_on
  6726                           
  6727                           	line	294
  6728                           	
  6729  0FDE                     l4599:	
  6730                           	line	296
  6731                           	
  6732  0FDE                     l11573:	
  6733                           ;HMI.c: 296: lcd_set_cursor(0x44);
  6734  0FDE  3044               	movlw	(044h)
  6735  0FDF  160A  158A  26F2   	fcall	_lcd_set_cursor
              120A  158A         
  6736                           	line	297
  6737                           	
  6738  0FE4                     l11575:	
  6739                           ;HMI.c: 297: lcd_write_string("  EXIT  ");
  6740  0FE4  3038               	movlw	low((STR_26-__stringbase))
  6741  0FE5  1283               	bcf	status, 5	;RP0=0, select bank0
  6742  0FE6  1303               	bcf	status, 6	;RP1=0, select bank0
  6743  0FE7  00A7               	movwf	(?_lcd_write_string)
  6744  0FE8  3080               	movlw	80h
  6745  0FE9  00A8               	movwf	(?_lcd_write_string+1)
  6746  0FEA  160A  118A  20D9   	fcall	_lcd_write_string
              120A  158A         
  6747                           	line	298
  6748                           ;HMI.c: 298: break;
  6749  0FEF  2FFF               	goto	l4606
  6750                           	line	299
  6751                           ;HMI.c: 299: default:
  6752                           	
  6753  0FF0                     l4605:	
  6754                           	line	300
  6755                           ;HMI.c: 300: break;
  6756  0FF0  2FFF               	goto	l4606
  6757                           	line	301
  6758                           	
  6759  0FF1                     l11577:	
  6760                           ;HMI.c: 301: }
  6761  0FF1  2FFF               	goto	l4606
  6762                           	line	238
  6763                           	
  6764  0FF2                     l4590:	
  6765                           	
  6766  0FF2                     l11579:	
  6767  0FF2  1683               	bsf	status, 5	;RP0=1, select bank1
  6768  0FF3  1303               	bcf	status, 6	;RP1=0, select bank1
  6769  0FF4  0859               	movf	(_currentMenu)^080h,w	;volatile
  6770                           	; Switch size 1, requested type "space"
  6771                           ; Number of cases is 3, Range of values is 0 to 2
  6772                           ; switch strategies available:
  6773                           ; Name         Instructions Cycles
  6774                           ; simple_byte           10     6 (average)
  6775                           ; direct_byte           17     8 (fixed)
  6776                           ; jumptable            260     6 (fixed)
  6777                           ; rangetable             7     6 (fixed)
  6778                           ; spacedrange           12     9 (fixed)
  6779                           ; locatedrange           3     3 (fixed)
  6780                           ;	Chosen strategy is simple_byte
  6781                           
  6782                           	opt asmopt_off
  6783  0FF5  3A00               	xorlw	0^0	; case 0
  6784  0FF6  1903               	skipnz
  6785  0FF7  2E24               	goto	l11517
  6786  0FF8  3A01               	xorlw	1^0	; case 1
  6787  0FF9  1903               	skipnz
  6788  0FFA  2EE6               	goto	l11537
  6789  0FFB  3A03               	xorlw	2^1	; case 2
  6790  0FFC  1903               	skipnz
  6791  0FFD  2F31               	goto	l11549
  6792  0FFE  2FFF               	goto	l4606
  6793                           	opt asmopt_on
  6794                           
  6795                           	line	301
  6796                           	
  6797  0FFF                     l4594:	
  6798                           	line	302
  6799                           	
  6800  0FFF                     l4606:	
  6801  0FFF  0008               	return
  6802                           	opt stack 0
  6803                           GLOBAL	__end_of_UpdateDisplay
  6804  1000                     	__end_of_UpdateDisplay:
  6805 ;; =============== function _UpdateDisplay ends ============
  6806                           
  6807                           	signat	_UpdateDisplay,88
  6808                           	global	_readAvgDistance
  6809                           psect	text1070,local,class=CODE,delta=2
  6810                           global __ptext1070
  6811  15B8                     __ptext1070:
  6812                           
  6813 ;; *************** function _readAvgDistance *****************
  6814 ;; Defined at:
  6815 ;;		line 28 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;		None
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  i               2   22[BANK0 ] int 
  6820 ;;  tempIR          2   20[BANK0 ] unsigned int 
  6821 ;;  j               2   18[BANK0 ] int 
  6822 ;;  fullval         2   16[BANK0 ] unsigned int 
  6823 ;; Return value:  Size  Location     Type
  6824 ;;		None               void
  6825 ;; Registers used:
  6826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6832 ;;      Params:         0       0       0       0       0
  6833 ;;      Locals:         0       8       0       0       0
  6834 ;;      Temps:          0       0       0       0       0
  6835 ;;      Totals:         0       8       0       0       0
  6836 ;;Total ram usage:        8 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    6
  6839 ;; This function calls:
  6840 ;;		_readDistance
  6841 ;;		___lwdiv
  6842 ;;		_ADCconvert
  6843 ;; This function is called by:
  6844 ;;		_main
  6845 ;;		_robotFollow
  6846 ;;		_robot_turnRight
  6847 ;;		_RightTurn
  6848 ;;		_scan360
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           psect	text1070
  6852                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  6853                           	line	28
  6854                           	global	__size_of_readAvgDistance
  6855  007E                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  6856                           	
  6857  15B8                     _readAvgDistance:	
  6858                           	opt	stack 0
  6859                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6860                           	line	29
  6861                           	
  6862  15B8                     l11497:	
  6863                           ;infrared.c: 29: unsigned int fullval = 0, tempIR = 0;
  6864  15B8  1283               	bcf	status, 5	;RP0=0, select bank0
  6865  15B9  1303               	bcf	status, 6	;RP1=0, select bank0
  6866  15BA  01B0               	clrf	(readAvgDistance@fullval)
  6867  15BB  01B1               	clrf	(readAvgDistance@fullval+1)
  6868  15BC  01B4               	clrf	(readAvgDistance@tempIR)
  6869  15BD  01B5               	clrf	(readAvgDistance@tempIR+1)
  6870                           	line	30
  6871                           ;infrared.c: 30: int j = 0;
  6872  15BE  01B2               	clrf	(readAvgDistance@j)
  6873  15BF  01B3               	clrf	(readAvgDistance@j+1)
  6874                           	line	32
  6875                           ;infrared.c: 32: for (int i = 0; i < 8; i++)
  6876  15C0  01B6               	clrf	(readAvgDistance@i)
  6877  15C1  01B7               	clrf	(readAvgDistance@i+1)
  6878                           	
  6879  15C2                     l11499:	
  6880  15C2  0837               	movf	(readAvgDistance@i+1),w
  6881  15C3  3A80               	xorlw	80h
  6882  15C4  00FF               	movwf	btemp+1
  6883  15C5  3080               	movlw	(high(08h))^80h
  6884  15C6  027F               	subwf	btemp+1,w
  6885  15C7  1D03               	skipz
  6886  15C8  2DCB               	goto	u5005
  6887  15C9  3008               	movlw	low(08h)
  6888  15CA  0236               	subwf	(readAvgDistance@i),w
  6889  15CB                     u5005:
  6890                           
  6891  15CB  1C03               	skipc
  6892  15CC  2DCE               	goto	u5001
  6893  15CD  2DCF               	goto	u5000
  6894  15CE                     u5001:
  6895  15CE  2DD1               	goto	l11503
  6896  15CF                     u5000:
  6897  15CF  2E07               	goto	l11511
  6898                           	
  6899  15D0                     l11501:	
  6900  15D0  2E07               	goto	l11511
  6901                           	line	33
  6902                           	
  6903  15D1                     l3034:	
  6904                           	line	34
  6905                           	
  6906  15D1                     l11503:	
  6907                           ;infrared.c: 33: {
  6908                           ;infrared.c: 34: tempIR = readDistance();
  6909  15D1  160A  158A  276E   	fcall	_readDistance
              160A  118A         
  6910  15D6  1283               	bcf	status, 5	;RP0=0, select bank0
  6911  15D7  1303               	bcf	status, 6	;RP1=0, select bank0
  6912  15D8  0829               	movf	(1+(?_readDistance)),w
  6913  15D9  01B5               	clrf	(readAvgDistance@tempIR+1)
  6914  15DA  07B5               	addwf	(readAvgDistance@tempIR+1)
  6915  15DB  0828               	movf	(0+(?_readDistance)),w
  6916  15DC  01B4               	clrf	(readAvgDistance@tempIR)
  6917  15DD  07B4               	addwf	(readAvgDistance@tempIR)
  6918                           
  6919                           	line	35
  6920                           	
  6921  15DE                     l11505:	
  6922                           ;infrared.c: 35: if (tempIR <= 1000)
  6923  15DE  3003               	movlw	high(03E9h)
  6924  15DF  0235               	subwf	(readAvgDistance@tempIR+1),w
  6925  15E0  30E9               	movlw	low(03E9h)
  6926  15E1  1903               	skipnz
  6927  15E2  0234               	subwf	(readAvgDistance@tempIR),w
  6928  15E3  1803               	skipnc
  6929  15E4  2DE6               	goto	u5011
  6930  15E5  2DE7               	goto	u5010
  6931  15E6                     u5011:
  6932  15E6  2DF3               	goto	l3036
  6933  15E7                     u5010:
  6934                           	line	37
  6935                           	
  6936  15E7                     l11507:	
  6937                           ;infrared.c: 36: {
  6938                           ;infrared.c: 37: fullval += tempIR;
  6939  15E7  0834               	movf	(readAvgDistance@tempIR),w
  6940  15E8  07B0               	addwf	(readAvgDistance@fullval),f
  6941  15E9  1803               	skipnc
  6942  15EA  0AB1               	incf	(readAvgDistance@fullval+1),f
  6943  15EB  0835               	movf	(readAvgDistance@tempIR+1),w
  6944  15EC  07B1               	addwf	(readAvgDistance@fullval+1),f
  6945                           	line	38
  6946                           ;infrared.c: 38: j++;
  6947  15ED  3001               	movlw	low(01h)
  6948  15EE  07B2               	addwf	(readAvgDistance@j),f
  6949  15EF  1803               	skipnc
  6950  15F0  0AB3               	incf	(readAvgDistance@j+1),f
  6951  15F1  3000               	movlw	high(01h)
  6952  15F2  07B3               	addwf	(readAvgDistance@j+1),f
  6953                           	line	39
  6954                           	
  6955  15F3                     l3036:	
  6956                           	line	32
  6957  15F3  3001               	movlw	low(01h)
  6958  15F4  07B6               	addwf	(readAvgDistance@i),f
  6959  15F5  1803               	skipnc
  6960  15F6  0AB7               	incf	(readAvgDistance@i+1),f
  6961  15F7  3000               	movlw	high(01h)
  6962  15F8  07B7               	addwf	(readAvgDistance@i+1),f
  6963                           	
  6964  15F9                     l11509:	
  6965  15F9  0837               	movf	(readAvgDistance@i+1),w
  6966  15FA  3A80               	xorlw	80h
  6967  15FB  00FF               	movwf	btemp+1
  6968  15FC  3080               	movlw	(high(08h))^80h
  6969  15FD  027F               	subwf	btemp+1,w
  6970  15FE  1D03               	skipz
  6971  15FF  2E02               	goto	u5025
  6972  1600  3008               	movlw	low(08h)
  6973  1601  0236               	subwf	(readAvgDistance@i),w
  6974  1602                     u5025:
  6975                           
  6976  1602  1C03               	skipc
  6977  1603  2E05               	goto	u5021
  6978  1604  2E06               	goto	u5020
  6979  1605                     u5021:
  6980  1605  2DD1               	goto	l11503
  6981  1606                     u5020:
  6982  1606  2E07               	goto	l11511
  6983                           	
  6984  1607                     l3035:	
  6985                           	line	41
  6986                           	
  6987  1607                     l11511:	
  6988                           ;infrared.c: 39: }
  6989                           ;infrared.c: 40: }
  6990                           ;infrared.c: 41: adcVal = fullval / j;
  6991  1607  1283               	bcf	status, 5	;RP0=0, select bank0
  6992  1608  1303               	bcf	status, 6	;RP1=0, select bank0
  6993  1609  0833               	movf	(readAvgDistance@j+1),w
  6994  160A  01A7               	clrf	(?___lwdiv+1)
  6995  160B  07A7               	addwf	(?___lwdiv+1)
  6996  160C  0832               	movf	(readAvgDistance@j),w
  6997  160D  01A6               	clrf	(?___lwdiv)
  6998  160E  07A6               	addwf	(?___lwdiv)
  6999                           
  7000  160F  0831               	movf	(readAvgDistance@fullval+1),w
  7001  1610  01A9               	clrf	1+(?___lwdiv)+02h
  7002  1611  07A9               	addwf	1+(?___lwdiv)+02h
  7003  1612  0830               	movf	(readAvgDistance@fullval),w
  7004  1613  01A8               	clrf	0+(?___lwdiv)+02h
  7005  1614  07A8               	addwf	0+(?___lwdiv)+02h
  7006                           
  7007  1615  160A  118A  2356   	fcall	___lwdiv
              160A  118A         
  7008  161A  1283               	bcf	status, 5	;RP0=0, select bank0
  7009  161B  1303               	bcf	status, 6	;RP1=0, select bank0
  7010  161C  0827               	movf	(1+(?___lwdiv)),w
  7011  161D  01ED               	clrf	(_adcVal+1)	;volatile
  7012  161E  07ED               	addwf	(_adcVal+1)	;volatile
  7013  161F  0826               	movf	(0+(?___lwdiv)),w
  7014  1620  01EC               	clrf	(_adcVal)	;volatile
  7015  1621  07EC               	addwf	(_adcVal)	;volatile
  7016                           
  7017                           	line	42
  7018                           ;infrared.c: 42: ADCconvert();
  7019  1622  120A  118A  2519   	fcall	_ADCconvert
              160A  118A         
  7020                           	line	43
  7021                           	
  7022  1627                     l11513:	
  7023                           ;infrared.c: 43: Disp1 = adcVal;
  7024  1627  1283               	bcf	status, 5	;RP0=0, select bank0
  7025  1628  1303               	bcf	status, 6	;RP1=0, select bank0
  7026  1629  086D               	movf	(_adcVal+1),w	;volatile
  7027  162A  1683               	bsf	status, 5	;RP0=1, select bank1
  7028  162B  1303               	bcf	status, 6	;RP1=0, select bank1
  7029  162C  01B5               	clrf	(_Disp1+1)^080h	;volatile
  7030  162D  07B5               	addwf	(_Disp1+1)^080h	;volatile
  7031  162E  1283               	bcf	status, 5	;RP0=0, select bank0
  7032  162F  1303               	bcf	status, 6	;RP1=0, select bank0
  7033  1630  086C               	movf	(_adcVal),w	;volatile
  7034  1631  1683               	bsf	status, 5	;RP0=1, select bank1
  7035  1632  1303               	bcf	status, 6	;RP1=0, select bank1
  7036  1633  01B4               	clrf	(_Disp1)^080h	;volatile
  7037  1634  07B4               	addwf	(_Disp1)^080h	;volatile
  7038                           
  7039                           	line	44
  7040                           	
  7041  1635                     l3037:	
  7042  1635  0008               	return
  7043                           	opt stack 0
  7044                           GLOBAL	__end_of_readAvgDistance
  7045  1636                     	__end_of_readAvgDistance:
  7046 ;; =============== function _readAvgDistance ends ============
  7047                           
  7048                           	signat	_readAvgDistance,88
  7049                           	global	_init
  7050                           psect	text1071,local,class=CODE,delta=2
  7051                           global __ptext1071
  7052  1132                     __ptext1071:
  7053                           
  7054 ;; *************** function _init *****************
  7055 ;; Defined at:
  7056 ;;		line 137 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;		None               void
  7063 ;; Registers used:
  7064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7070 ;;      Params:         0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0
  7072 ;;      Temps:          0       1       0       0       0
  7073 ;;      Totals:         0       1       0       0       0
  7074 ;;Total ram usage:        1 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    5
  7077 ;; This function calls:
  7078 ;;		_ser_init
  7079 ;;		_init_adc
  7080 ;;		_lcd_init
  7081 ;;		_robo_init
  7082 ;; This function is called by:
  7083 ;;		_main
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           psect	text1071
  7087                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  7088                           	line	137
  7089                           	global	__size_of_init
  7090  002F                     	__size_of_init	equ	__end_of_init-_init
  7091                           	
  7092  1132                     _init:	
  7093                           	opt	stack 2
  7094                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7095                           	line	138
  7096                           	
  7097  1132                     l11471:	
  7098                           ;Main.c: 138: buttonPressed = 0;
  7099  1132  01FD               	clrf	(_buttonPressed)	;volatile
  7100                           	line	140
  7101                           	
  7102  1133                     l11473:	
  7103                           ;Main.c: 140: TRISB = 0b11111100;
  7104  1133  30FC               	movlw	(0FCh)
  7105  1134  1683               	bsf	status, 5	;RP0=1, select bank1
  7106  1135  1303               	bcf	status, 6	;RP1=0, select bank1
  7107  1136  0086               	movwf	(134)^080h	;volatile
  7108                           	line	141
  7109                           	
  7110  1137                     l11475:	
  7111                           ;Main.c: 141: TRISC &= 0b10010000;
  7112  1137  3090               	movlw	(090h)
  7113  1138  1283               	bcf	status, 5	;RP0=0, select bank0
  7114  1139  1303               	bcf	status, 6	;RP1=0, select bank0
  7115  113A  00A3               	movwf	(??_init+0)+0
  7116  113B  0823               	movf	(??_init+0)+0,w
  7117  113C  1683               	bsf	status, 5	;RP0=1, select bank1
  7118  113D  1303               	bcf	status, 6	;RP1=0, select bank1
  7119  113E  0587               	andwf	(135)^080h,f	;volatile
  7120                           	line	144
  7121                           	
  7122  113F                     l11477:	
  7123                           ;Main.c: 144: SSPSTAT = 0b01000000;
  7124  113F  3040               	movlw	(040h)
  7125  1140  0094               	movwf	(148)^080h	;volatile
  7126                           	line	145
  7127                           	
  7128  1141                     l11479:	
  7129                           ;Main.c: 145: SSPCON = 0b10100001;
  7130  1141  30A1               	movlw	(0A1h)
  7131  1142  1283               	bcf	status, 5	;RP0=0, select bank0
  7132  1143  1303               	bcf	status, 6	;RP1=0, select bank0
  7133  1144  0094               	movwf	(20)	;volatile
  7134                           	line	148
  7135                           	
  7136  1145                     l11481:	
  7137                           ;Main.c: 148: OPTION_REG = 0b00000100;
  7138  1145  3004               	movlw	(04h)
  7139  1146  1683               	bsf	status, 5	;RP0=1, select bank1
  7140  1147  1303               	bcf	status, 6	;RP1=0, select bank1
  7141  1148  0081               	movwf	(129)^080h	;volatile
  7142                           	line	151
  7143                           	
  7144  1149                     l11483:	
  7145                           ;Main.c: 151: ser_init();
  7146  1149  160A  118A  2001   	fcall	_ser_init
              160A  118A         
  7147                           	line	152
  7148                           	
  7149  114E                     l11485:	
  7150                           ;Main.c: 152: init_adc();
  7151  114E  160A  158A  2758   	fcall	_init_adc
              160A  118A         
  7152                           	line	153
  7153                           	
  7154  1153                     l11487:	
  7155                           ;Main.c: 153: lcd_init();
  7156  1153  160A  118A  202B   	fcall	_lcd_init
              160A  118A         
  7157                           	line	154
  7158                           	
  7159  1158                     l11489:	
  7160                           ;Main.c: 154: robo_init();
  7161  1158  160A  158A  279D   	fcall	_robo_init
              160A  118A         
  7162                           	line	158
  7163                           	
  7164  115D                     l11491:	
  7165                           ;Main.c: 158: TMR0IE = 1;
  7166  115D  168B               	bsf	(93/8),(93)&7
  7167                           	line	160
  7168                           	
  7169  115E                     l11493:	
  7170                           ;Main.c: 160: PEIE=1;
  7171  115E  170B               	bsf	(94/8),(94)&7
  7172                           	line	162
  7173                           	
  7174  115F                     l11495:	
  7175                           ;Main.c: 162: (GIE = 1);
  7176  115F  178B               	bsf	(95/8),(95)&7
  7177                           	line	163
  7178                           	
  7179  1160                     l2249:	
  7180  1160  0008               	return
  7181                           	opt stack 0
  7182                           GLOBAL	__end_of_init
  7183  1161                     	__end_of_init:
  7184 ;; =============== function _init ends ============
  7185                           
  7186                           	signat	_init,88
  7187                           	global	_readDistance
  7188                           psect	text1072,local,class=CODE,delta=2
  7189                           global __ptext1072
  7190  1F6E                     __ptext1072:
  7191                           
  7192 ;; *************** function _readDistance *****************
  7193 ;; Defined at:
  7194 ;;		line 78 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;		None
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;  readVal         2   12[BANK0 ] unsigned int 
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  2    8[BANK0 ] unsigned int 
  7201 ;; Registers used:
  7202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7208 ;;      Params:         0       2       0       0       0
  7209 ;;      Locals:         0       2       0       0       0
  7210 ;;      Temps:          0       2       0       0       0
  7211 ;;      Totals:         0       6       0       0       0
  7212 ;;Total ram usage:        6 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    5
  7215 ;; This function calls:
  7216 ;;		_adc_read_channel
  7217 ;; This function is called by:
  7218 ;;		_readAvgDistance
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           psect	text1072
  7222                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  7223                           	line	78
  7224                           	global	__size_of_readDistance
  7225  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  7226                           	
  7227  1F6E                     _readDistance:	
  7228                           	opt	stack 0
  7229                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7230                           	line	81
  7231                           	
  7232  1F6E                     l11465:	
  7233                           ;infrared.c: 79: unsigned int readVal;
  7234                           ;infrared.c: 81: readVal = adc_read_channel(0);
  7235  1F6E  3000               	movlw	(0)
  7236  1F6F  160A  118A  21FF   	fcall	_adc_read_channel
              160A  158A         
  7237  1F74  1283               	bcf	status, 5	;RP0=0, select bank0
  7238  1F75  1303               	bcf	status, 6	;RP1=0, select bank0
  7239  1F76  00AA               	movwf	(??_readDistance+0)+0
  7240  1F77  01AB               	clrf	(??_readDistance+0)+0+1
  7241  1F78  082A               	movf	0+(??_readDistance+0)+0,w
  7242  1F79  00AC               	movwf	(readDistance@readVal)
  7243  1F7A  082B               	movf	1+(??_readDistance+0)+0,w
  7244  1F7B  00AD               	movwf	(readDistance@readVal+1)
  7245                           	line	83
  7246                           	
  7247  1F7C                     l11467:	
  7248                           ;infrared.c: 83: return readVal;
  7249  1F7C  082D               	movf	(readDistance@readVal+1),w
  7250  1F7D  01A9               	clrf	(?_readDistance+1)
  7251  1F7E  07A9               	addwf	(?_readDistance+1)
  7252  1F7F  082C               	movf	(readDistance@readVal),w
  7253  1F80  01A8               	clrf	(?_readDistance)
  7254  1F81  07A8               	addwf	(?_readDistance)
  7255                           
  7256  1F82  2F83               	goto	l3040
  7257                           	
  7258  1F83                     l11469:	
  7259                           	line	84
  7260                           	
  7261  1F83                     l3040:	
  7262  1F83  0008               	return
  7263                           	opt stack 0
  7264                           GLOBAL	__end_of_readDistance
  7265  1F84                     	__end_of_readDistance:
  7266 ;; =============== function _readDistance ends ============
  7267                           
  7268                           	signat	_readDistance,90
  7269                           	global	_RobotBattRead
  7270                           psect	text1073,local,class=CODE,delta=2
  7271                           global __ptext1073
  7272  1636                     __ptext1073:
  7273                           
  7274 ;; *************** function _RobotBattRead *****************
  7275 ;; Defined at:
  7276 ;;		line 471 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  temp1           2    4[BANK0 ] int 
  7281 ;; Return value:  Size  Location     Type
  7282 ;;		None               void
  7283 ;; Registers used:
  7284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7290 ;;      Params:         0       0       0       0       0
  7291 ;;      Locals:         0       2       0       0       0
  7292 ;;      Temps:          0       2       0       0       0
  7293 ;;      Totals:         0       4       0       0       0
  7294 ;;Total ram usage:        4 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:    5
  7297 ;; This function calls:
  7298 ;;		_ser_putch
  7299 ;;		_ser_getch
  7300 ;; This function is called by:
  7301 ;;		_ChargeMode
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           psect	text1073
  7305                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7306                           	line	471
  7307                           	global	__size_of_RobotBattRead
  7308  008B                     	__size_of_RobotBattRead	equ	__end_of_RobotBattRead-_RobotBattRead
  7309                           	
  7310  1636                     _RobotBattRead:	
  7311                           	opt	stack 1
  7312                           ; Regs used in _RobotBattRead: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7313                           	line	472
  7314                           	
  7315  1636                     l11437:	
  7316                           ;robot.c: 472: int temp1 = 0;
  7317  1636  1283               	bcf	status, 5	;RP0=0, select bank0
  7318  1637  1303               	bcf	status, 6	;RP1=0, select bank0
  7319  1638  01A4               	clrf	(RobotBattRead@temp1)
  7320  1639  01A5               	clrf	(RobotBattRead@temp1+1)
  7321                           	line	473
  7322                           	
  7323  163A                     l11439:	
  7324                           ;robot.c: 473: ser_putch(142);
  7325  163A  308E               	movlw	(08Eh)
  7326  163B  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  7327                           	line	474
  7328                           	
  7329  1640                     l11441:	
  7330                           ;robot.c: 474: ser_putch(25);
  7331  1640  3019               	movlw	(019h)
  7332  1641  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  7333                           	line	475
  7334                           	
  7335  1646                     l11443:	
  7336                           ;robot.c: 475: _delay((unsigned long)((5)*(20000000/4000.0)));
  7337                           	opt asmopt_off
  7338  1646  3021               movlw	33
  7339  1647  1283               	bcf	status, 5	;RP0=0, select bank0
  7340  1648  1303               	bcf	status, 6	;RP1=0, select bank0
  7341  1649  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  7342  164A  3076               	movlw	118
  7343  164B  00A2               movwf	((??_RobotBattRead+0)+0),f
  7344  164C                     u5517:
  7345  164C  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  7346  164D  2E4C               	goto	u5517
  7347  164E  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  7348  164F  2E4C               	goto	u5517
  7349  1650  0064               	clrwdt
  7350                           opt asmopt_on
  7351                           
  7352                           	line	476
  7353                           	
  7354  1651                     l11445:	
  7355                           ;robot.c: 476: DistHighByte = ser_getch();
  7356  1651  160A  118A  20AD   	fcall	_ser_getch
              160A  118A         
  7357  1656  1283               	bcf	status, 5	;RP0=0, select bank0
  7358  1657  1303               	bcf	status, 6	;RP1=0, select bank0
  7359  1658  00A2               	movwf	(??_RobotBattRead+0)+0
  7360  1659  0822               	movf	(??_RobotBattRead+0)+0,w
  7361  165A  1683               	bsf	status, 5	;RP0=1, select bank1
  7362  165B  1303               	bcf	status, 6	;RP1=0, select bank1
  7363  165C  00D0               	movwf	(_DistHighByte)^080h	;volatile
  7364                           	line	477
  7365                           	
  7366  165D                     l11447:	
  7367                           ;robot.c: 477: DistLowByte = ser_getch();
  7368  165D  160A  118A  20AD   	fcall	_ser_getch
              160A  118A         
  7369  1662  1283               	bcf	status, 5	;RP0=0, select bank0
  7370  1663  1303               	bcf	status, 6	;RP1=0, select bank0
  7371  1664  00A2               	movwf	(??_RobotBattRead+0)+0
  7372  1665  0822               	movf	(??_RobotBattRead+0)+0,w
  7373  1666  1683               	bsf	status, 5	;RP0=1, select bank1
  7374  1667  1303               	bcf	status, 6	;RP1=0, select bank1
  7375  1668  00D1               	movwf	(_DistLowByte)^080h	;volatile
  7376                           	line	478
  7377                           	
  7378  1669                     l11449:	
  7379                           ;robot.c: 478: ser_putch(142);
  7380  1669  308E               	movlw	(08Eh)
  7381  166A  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  7382                           	line	479
  7383                           	
  7384  166F                     l11451:	
  7385                           ;robot.c: 479: ser_putch(21);
  7386  166F  3015               	movlw	(015h)
  7387  1670  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  7388                           	line	480
  7389                           	
  7390  1675                     l11453:	
  7391                           ;robot.c: 480: _delay((unsigned long)((5)*(20000000/4000.0)));
  7392                           	opt asmopt_off
  7393  1675  3021               movlw	33
  7394  1676  1283               	bcf	status, 5	;RP0=0, select bank0
  7395  1677  1303               	bcf	status, 6	;RP1=0, select bank0
  7396  1678  00A3               movwf	((??_RobotBattRead+0)+0+1),f
  7397  1679  3076               	movlw	118
  7398  167A  00A2               movwf	((??_RobotBattRead+0)+0),f
  7399  167B                     u5527:
  7400  167B  0BA2               	decfsz	((??_RobotBattRead+0)+0),f
  7401  167C  2E7B               	goto	u5527
  7402  167D  0BA3               	decfsz	((??_RobotBattRead+0)+0+1),f
  7403  167E  2E7B               	goto	u5527
  7404  167F  0064               	clrwdt
  7405                           opt asmopt_on
  7406                           
  7407                           	line	481
  7408                           	
  7409  1680                     l11455:	
  7410                           ;robot.c: 481: BattState = ser_getch();
  7411  1680  160A  118A  20AD   	fcall	_ser_getch
              160A  118A         
  7412  1685  1283               	bcf	status, 5	;RP0=0, select bank0
  7413  1686  1303               	bcf	status, 6	;RP1=0, select bank0
  7414  1687  00A2               	movwf	(??_RobotBattRead+0)+0
  7415  1688  01A3               	clrf	(??_RobotBattRead+0)+0+1
  7416  1689  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7417  168A  1683               	bsf	status, 5	;RP0=1, select bank1
  7418  168B  1303               	bcf	status, 6	;RP1=0, select bank1
  7419  168C  00B2               	movwf	(_BattState)^080h
  7420  168D  1283               	bcf	status, 5	;RP0=0, select bank0
  7421  168E  1303               	bcf	status, 6	;RP1=0, select bank0
  7422  168F  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7423  1690  1683               	bsf	status, 5	;RP0=1, select bank1
  7424  1691  1303               	bcf	status, 6	;RP1=0, select bank1
  7425  1692  00B3               	movwf	(_BattState+1)^080h
  7426                           	line	484
  7427                           	
  7428  1693                     l11457:	
  7429                           ;robot.c: 484: temp1 = DistHighByte;
  7430  1693  0850               	movf	(_DistHighByte)^080h,w	;volatile
  7431  1694  1283               	bcf	status, 5	;RP0=0, select bank0
  7432  1695  1303               	bcf	status, 6	;RP1=0, select bank0
  7433  1696  00A2               	movwf	(??_RobotBattRead+0)+0
  7434  1697  01A3               	clrf	(??_RobotBattRead+0)+0+1
  7435  1698  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7436  1699  00A4               	movwf	(RobotBattRead@temp1)
  7437  169A  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7438  169B  00A5               	movwf	(RobotBattRead@temp1+1)
  7439                           	line	485
  7440                           	
  7441  169C                     l11459:	
  7442                           ;robot.c: 485: temp1 = temp1 << 8;
  7443  169C  0825               	movf	(RobotBattRead@temp1+1),w
  7444  169D  00A3               	movwf	(??_RobotBattRead+0)+0+1
  7445  169E  0824               	movf	(RobotBattRead@temp1),w
  7446  169F  00A2               	movwf	(??_RobotBattRead+0)+0
  7447  16A0  0822               	movf	(??_RobotBattRead+0)+0,w
  7448  16A1  00A3               	movwf	(??_RobotBattRead+0)+1
  7449  16A2  01A2               	clrf	(??_RobotBattRead+0)+0
  7450  16A3  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7451  16A4  00A4               	movwf	(RobotBattRead@temp1)
  7452  16A5  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7453  16A6  00A5               	movwf	(RobotBattRead@temp1+1)
  7454                           	line	486
  7455                           	
  7456  16A7                     l11461:	
  7457                           ;robot.c: 486: temp1 += DistLowByte;
  7458  16A7  1683               	bsf	status, 5	;RP0=1, select bank1
  7459  16A8  1303               	bcf	status, 6	;RP1=0, select bank1
  7460  16A9  0851               	movf	(_DistLowByte)^080h,w	;volatile
  7461  16AA  1283               	bcf	status, 5	;RP0=0, select bank0
  7462  16AB  1303               	bcf	status, 6	;RP1=0, select bank0
  7463  16AC  00A2               	movwf	(??_RobotBattRead+0)+0
  7464  16AD  01A3               	clrf	(??_RobotBattRead+0)+0+1
  7465  16AE  0822               	movf	0+(??_RobotBattRead+0)+0,w
  7466  16AF  07A4               	addwf	(RobotBattRead@temp1),f
  7467  16B0  1803               	skipnc
  7468  16B1  0AA5               	incf	(RobotBattRead@temp1+1),f
  7469  16B2  0823               	movf	1+(??_RobotBattRead+0)+0,w
  7470  16B3  07A5               	addwf	(RobotBattRead@temp1+1),f
  7471                           	line	487
  7472                           	
  7473  16B4                     l11463:	
  7474                           ;robot.c: 487: BattCharge = temp1;
  7475  16B4  0825               	movf	(RobotBattRead@temp1+1),w
  7476  16B5  1683               	bsf	status, 5	;RP0=1, select bank1
  7477  16B6  1303               	bcf	status, 6	;RP1=0, select bank1
  7478  16B7  01B1               	clrf	(_BattCharge+1)^080h
  7479  16B8  07B1               	addwf	(_BattCharge+1)^080h
  7480  16B9  1283               	bcf	status, 5	;RP0=0, select bank0
  7481  16BA  1303               	bcf	status, 6	;RP1=0, select bank0
  7482  16BB  0824               	movf	(RobotBattRead@temp1),w
  7483  16BC  1683               	bsf	status, 5	;RP0=1, select bank1
  7484  16BD  1303               	bcf	status, 6	;RP1=0, select bank1
  7485  16BE  01B0               	clrf	(_BattCharge)^080h
  7486  16BF  07B0               	addwf	(_BattCharge)^080h
  7487                           
  7488                           	line	488
  7489                           	
  7490  16C0                     l6194:	
  7491  16C0  0008               	return
  7492                           	opt stack 0
  7493                           GLOBAL	__end_of_RobotBattRead
  7494  16C1                     	__end_of_RobotBattRead:
  7495 ;; =============== function _RobotBattRead ends ============
  7496                           
  7497                           	signat	_RobotBattRead,88
  7498                           	global	_robot_read
  7499                           psect	text1074,local,class=CODE,delta=2
  7500                           global __ptext1074
  7501  0B05                     __ptext1074:
  7502                           
  7503 ;; *************** function _robot_read *****************
  7504 ;; Defined at:
  7505 ;;		line 52 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  readType        1    wreg     unsigned char 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  readType        1    3[BANK0 ] unsigned char 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;		None               void
  7512 ;; Registers used:
  7513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7519 ;;      Params:         0       0       0       0       0
  7520 ;;      Locals:         0       1       0       0       0
  7521 ;;      Temps:          0       1       0       0       0
  7522 ;;      Totals:         0       2       0       0       0
  7523 ;;Total ram usage:        2 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    5
  7526 ;; This function calls:
  7527 ;;		_ser_putch
  7528 ;;		_ser_getch
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;;		_robotFollow
  7532 ;;		_robot_turnRight
  7533 ;;		_robotMoveSpeed
  7534 ;;		_robotTurnSpeed
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           psect	text1074
  7538                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  7539                           	line	52
  7540                           	global	__size_of_robot_read
  7541  0125                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  7542                           	
  7543  0B05                     _robot_read:	
  7544                           	opt	stack 1
  7545                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7546                           ;robot_read@readType stored from wreg
  7547  0B05  1283               	bcf	status, 5	;RP0=0, select bank0
  7548  0B06  1303               	bcf	status, 6	;RP1=0, select bank0
  7549  0B07  00A3               	movwf	(robot_read@readType)
  7550                           	line	53
  7551                           	
  7552  0B08                     l11421:	
  7553                           ;robot.c: 53: ser_putch(142);
  7554  0B08  308E               	movlw	(08Eh)
  7555  0B09  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7556                           	line	54
  7557                           ;robot.c: 54: ser_putch(10);
  7558  0B0E  300A               	movlw	(0Ah)
  7559  0B0F  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7560                           	line	56
  7561                           ;robot.c: 56: CliffSensors = ser_getch();
  7562  0B14  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7563  0B19  1283               	bcf	status, 5	;RP0=0, select bank0
  7564  0B1A  1303               	bcf	status, 6	;RP1=0, select bank0
  7565  0B1B  00A2               	movwf	(??_robot_read+0)+0
  7566  0B1C  0822               	movf	(??_robot_read+0)+0,w
  7567  0B1D  1683               	bsf	status, 5	;RP0=1, select bank1
  7568  0B1E  1303               	bcf	status, 6	;RP1=0, select bank1
  7569  0B1F  00CF               	movwf	(_CliffSensors)^080h	;volatile
  7570                           	line	58
  7571                           ;robot.c: 58: ser_putch(142);
  7572  0B20  308E               	movlw	(08Eh)
  7573  0B21  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7574                           	line	59
  7575                           ;robot.c: 59: ser_putch(11);
  7576  0B26  300B               	movlw	(0Bh)
  7577  0B27  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7578                           	line	61
  7579                           ;robot.c: 61: CliffSensors += ser_getch();
  7580  0B2C  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7581  0B31  1283               	bcf	status, 5	;RP0=0, select bank0
  7582  0B32  1303               	bcf	status, 6	;RP1=0, select bank0
  7583  0B33  00A2               	movwf	(??_robot_read+0)+0
  7584  0B34  0822               	movf	(??_robot_read+0)+0,w
  7585  0B35  1683               	bsf	status, 5	;RP0=1, select bank1
  7586  0B36  1303               	bcf	status, 6	;RP1=0, select bank1
  7587  0B37  07CF               	addwf	(_CliffSensors)^080h,f	;volatile
  7588                           	line	65
  7589                           ;robot.c: 65: ser_putch(142);
  7590  0B38  308E               	movlw	(08Eh)
  7591  0B39  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7592                           	line	66
  7593                           ;robot.c: 66: ser_putch(7);
  7594  0B3E  3007               	movlw	(07h)
  7595  0B3F  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7596                           	line	68
  7597                           ;robot.c: 68: BumpSensors = ser_getch();
  7598  0B44  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7599  0B49  1283               	bcf	status, 5	;RP0=0, select bank0
  7600  0B4A  1303               	bcf	status, 6	;RP1=0, select bank0
  7601  0B4B  00A2               	movwf	(??_robot_read+0)+0
  7602  0B4C  0822               	movf	(??_robot_read+0)+0,w
  7603  0B4D  00EE               	movwf	(_BumpSensors)	;volatile
  7604                           	line	70
  7605                           ;robot.c: 70: ser_putch(142);
  7606  0B4E  308E               	movlw	(08Eh)
  7607  0B4F  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7608                           	line	71
  7609                           ;robot.c: 71: ser_putch(13);
  7610  0B54  300D               	movlw	(0Dh)
  7611  0B55  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7612                           	line	73
  7613                           ;robot.c: 73: VwallSensor = ser_getch();
  7614  0B5A  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7615  0B5F  1283               	bcf	status, 5	;RP0=0, select bank0
  7616  0B60  1303               	bcf	status, 6	;RP1=0, select bank0
  7617  0B61  00A2               	movwf	(??_robot_read+0)+0
  7618  0B62  0822               	movf	(??_robot_read+0)+0,w
  7619  0B63  00EF               	movwf	(_VwallSensor)	;volatile
  7620                           	line	75
  7621                           ;robot.c: 75: ser_putch(142);
  7622  0B64  308E               	movlw	(08Eh)
  7623  0B65  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7624                           	line	76
  7625                           ;robot.c: 76: ser_putch(17);
  7626  0B6A  3011               	movlw	(011h)
  7627  0B6B  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7628                           	line	78
  7629                           ;robot.c: 78: VictimSensor = ser_getch();
  7630  0B70  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7631  0B75  1283               	bcf	status, 5	;RP0=0, select bank0
  7632  0B76  1303               	bcf	status, 6	;RP1=0, select bank0
  7633  0B77  00A2               	movwf	(??_robot_read+0)+0
  7634  0B78  0822               	movf	(??_robot_read+0)+0,w
  7635  0B79  1683               	bsf	status, 5	;RP0=1, select bank1
  7636  0B7A  1303               	bcf	status, 6	;RP1=0, select bank1
  7637  0B7B  00D8               	movwf	(_VictimSensor)^080h	;volatile
  7638                           	line	82
  7639                           	
  7640  0B7C                     l11423:	
  7641                           ;robot.c: 82: if (readType == 0)
  7642  0B7C  1283               	bcf	status, 5	;RP0=0, select bank0
  7643  0B7D  1303               	bcf	status, 6	;RP1=0, select bank0
  7644  0B7E  08A3               	movf	(robot_read@readType),f
  7645  0B7F  1D03               	skipz
  7646  0B80  2B82               	goto	u4971
  7647  0B81  2B83               	goto	u4970
  7648  0B82                     u4971:
  7649  0B82  2BA8               	goto	l11427
  7650  0B83                     u4970:
  7651                           	line	84
  7652                           	
  7653  0B83                     l11425:	
  7654                           ;robot.c: 83: {
  7655                           ;robot.c: 84: ser_putch(142);
  7656  0B83  308E               	movlw	(08Eh)
  7657  0B84  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7658                           	line	85
  7659                           ;robot.c: 85: ser_putch(19);
  7660  0B89  3013               	movlw	(013h)
  7661  0B8A  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7662                           	line	87
  7663                           ;robot.c: 87: DistHighByte = ser_getch();
  7664  0B8F  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7665  0B94  1283               	bcf	status, 5	;RP0=0, select bank0
  7666  0B95  1303               	bcf	status, 6	;RP1=0, select bank0
  7667  0B96  00A2               	movwf	(??_robot_read+0)+0
  7668  0B97  0822               	movf	(??_robot_read+0)+0,w
  7669  0B98  1683               	bsf	status, 5	;RP0=1, select bank1
  7670  0B99  1303               	bcf	status, 6	;RP1=0, select bank1
  7671  0B9A  00D0               	movwf	(_DistHighByte)^080h	;volatile
  7672                           	line	88
  7673                           ;robot.c: 88: DistLowByte = ser_getch();
  7674  0B9B  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7675  0BA0  1283               	bcf	status, 5	;RP0=0, select bank0
  7676  0BA1  1303               	bcf	status, 6	;RP1=0, select bank0
  7677  0BA2  00A2               	movwf	(??_robot_read+0)+0
  7678  0BA3  0822               	movf	(??_robot_read+0)+0,w
  7679  0BA4  1683               	bsf	status, 5	;RP0=1, select bank1
  7680  0BA5  1303               	bcf	status, 6	;RP1=0, select bank1
  7681  0BA6  00D1               	movwf	(_DistLowByte)^080h	;volatile
  7682                           	line	89
  7683                           ;robot.c: 89: }
  7684  0BA7  2C29               	goto	l6110
  7685                           	line	90
  7686                           	
  7687  0BA8                     l6103:	
  7688                           	
  7689  0BA8                     l11427:	
  7690                           ;robot.c: 90: else if (readType == 1)
  7691  0BA8  1283               	bcf	status, 5	;RP0=0, select bank0
  7692  0BA9  0823               	movf	(robot_read@readType),w
  7693  0BAA  3A01               	xorlw	01h
  7694  0BAB  1D03               	skipz
  7695  0BAC  2BAE               	goto	u4981
  7696  0BAD  2BAF               	goto	u4980
  7697  0BAE                     u4981:
  7698  0BAE  2BD4               	goto	l11431
  7699  0BAF                     u4980:
  7700                           	line	92
  7701                           	
  7702  0BAF                     l11429:	
  7703                           ;robot.c: 91: {
  7704                           ;robot.c: 92: ser_putch(142);
  7705  0BAF  308E               	movlw	(08Eh)
  7706  0BB0  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7707                           	line	93
  7708                           ;robot.c: 93: ser_putch(20);
  7709  0BB5  3014               	movlw	(014h)
  7710  0BB6  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7711                           	line	95
  7712                           ;robot.c: 95: AngleHighByte = ser_getch();
  7713  0BBB  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7714  0BC0  1283               	bcf	status, 5	;RP0=0, select bank0
  7715  0BC1  1303               	bcf	status, 6	;RP1=0, select bank0
  7716  0BC2  00A2               	movwf	(??_robot_read+0)+0
  7717  0BC3  0822               	movf	(??_robot_read+0)+0,w
  7718  0BC4  1683               	bsf	status, 5	;RP0=1, select bank1
  7719  0BC5  1303               	bcf	status, 6	;RP1=0, select bank1
  7720  0BC6  00CC               	movwf	(_AngleHighByte)^080h	;volatile
  7721                           	line	96
  7722                           ;robot.c: 96: AngleLowByte = ser_getch();
  7723  0BC7  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7724  0BCC  1283               	bcf	status, 5	;RP0=0, select bank0
  7725  0BCD  1303               	bcf	status, 6	;RP1=0, select bank0
  7726  0BCE  00A2               	movwf	(??_robot_read+0)+0
  7727  0BCF  0822               	movf	(??_robot_read+0)+0,w
  7728  0BD0  1683               	bsf	status, 5	;RP0=1, select bank1
  7729  0BD1  1303               	bcf	status, 6	;RP1=0, select bank1
  7730  0BD2  00CD               	movwf	(_AngleLowByte)^080h	;volatile
  7731                           	line	97
  7732                           ;robot.c: 97: }
  7733  0BD3  2C29               	goto	l6110
  7734                           	line	98
  7735                           	
  7736  0BD4                     l6105:	
  7737                           	
  7738  0BD4                     l11431:	
  7739                           ;robot.c: 98: else if (readType == 2)
  7740  0BD4  1283               	bcf	status, 5	;RP0=0, select bank0
  7741  0BD5  0823               	movf	(robot_read@readType),w
  7742  0BD6  3A02               	xorlw	02h
  7743  0BD7  1D03               	skipz
  7744  0BD8  2BDA               	goto	u4991
  7745  0BD9  2BDB               	goto	u4990
  7746  0BDA                     u4991:
  7747  0BDA  2C29               	goto	l6110
  7748  0BDB                     u4990:
  7749                           	line	101
  7750                           	
  7751  0BDB                     l11433:	
  7752                           ;robot.c: 99: {
  7753                           ;robot.c: 101: ser_putch(142);
  7754  0BDB  308E               	movlw	(08Eh)
  7755  0BDC  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7756                           	line	102
  7757                           ;robot.c: 102: ser_putch(19);
  7758  0BE1  3013               	movlw	(013h)
  7759  0BE2  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7760                           	line	104
  7761                           ;robot.c: 104: DistHighByte = ser_getch();
  7762  0BE7  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7763  0BEC  1283               	bcf	status, 5	;RP0=0, select bank0
  7764  0BED  1303               	bcf	status, 6	;RP1=0, select bank0
  7765  0BEE  00A2               	movwf	(??_robot_read+0)+0
  7766  0BEF  0822               	movf	(??_robot_read+0)+0,w
  7767  0BF0  1683               	bsf	status, 5	;RP0=1, select bank1
  7768  0BF1  1303               	bcf	status, 6	;RP1=0, select bank1
  7769  0BF2  00D0               	movwf	(_DistHighByte)^080h	;volatile
  7770                           	line	105
  7771                           ;robot.c: 105: DistLowByte = ser_getch();
  7772  0BF3  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7773  0BF8  1283               	bcf	status, 5	;RP0=0, select bank0
  7774  0BF9  1303               	bcf	status, 6	;RP1=0, select bank0
  7775  0BFA  00A2               	movwf	(??_robot_read+0)+0
  7776  0BFB  0822               	movf	(??_robot_read+0)+0,w
  7777  0BFC  1683               	bsf	status, 5	;RP0=1, select bank1
  7778  0BFD  1303               	bcf	status, 6	;RP1=0, select bank1
  7779  0BFE  00D1               	movwf	(_DistLowByte)^080h	;volatile
  7780                           	line	106
  7781                           ;robot.c: 106: ser_putch(142);
  7782  0BFF  308E               	movlw	(08Eh)
  7783  0C00  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7784                           	line	107
  7785                           ;robot.c: 107: ser_putch(20);
  7786  0C05  3014               	movlw	(014h)
  7787  0C06  160A  118A  2105   	fcall	_ser_putch
              120A  158A         
  7788                           	line	109
  7789                           ;robot.c: 109: AngleHighByte = ser_getch();
  7790  0C0B  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7791  0C10  1283               	bcf	status, 5	;RP0=0, select bank0
  7792  0C11  1303               	bcf	status, 6	;RP1=0, select bank0
  7793  0C12  00A2               	movwf	(??_robot_read+0)+0
  7794  0C13  0822               	movf	(??_robot_read+0)+0,w
  7795  0C14  1683               	bsf	status, 5	;RP0=1, select bank1
  7796  0C15  1303               	bcf	status, 6	;RP1=0, select bank1
  7797  0C16  00CC               	movwf	(_AngleHighByte)^080h	;volatile
  7798                           	line	110
  7799                           ;robot.c: 110: AngleLowByte = ser_getch();
  7800  0C17  160A  118A  20AD   	fcall	_ser_getch
              120A  158A         
  7801  0C1C  1283               	bcf	status, 5	;RP0=0, select bank0
  7802  0C1D  1303               	bcf	status, 6	;RP1=0, select bank0
  7803  0C1E  00A2               	movwf	(??_robot_read+0)+0
  7804  0C1F  0822               	movf	(??_robot_read+0)+0,w
  7805  0C20  1683               	bsf	status, 5	;RP0=1, select bank1
  7806  0C21  1303               	bcf	status, 6	;RP1=0, select bank1
  7807  0C22  00CD               	movwf	(_AngleLowByte)^080h	;volatile
  7808                           	line	111
  7809                           ;robot.c: 111: }
  7810  0C23  2C29               	goto	l6110
  7811                           	line	113
  7812                           	
  7813  0C24                     l6107:	
  7814  0C24  2C29               	goto	l6110
  7815                           	
  7816  0C25                     l11435:	
  7817  0C25  2C29               	goto	l6110
  7818                           	line	116
  7819                           ;robot.c: 114: {
  7820                           	
  7821  0C26                     l6109:	
  7822  0C26  2C29               	goto	l6110
  7823                           	line	117
  7824                           	
  7825  0C27                     l6108:	
  7826  0C27  2C29               	goto	l6110
  7827                           	
  7828  0C28                     l6106:	
  7829  0C28  2C29               	goto	l6110
  7830                           	
  7831  0C29                     l6104:	
  7832                           	
  7833  0C29                     l6110:	
  7834  0C29  0008               	return
  7835                           	opt stack 0
  7836                           GLOBAL	__end_of_robot_read
  7837  0C2A                     	__end_of_robot_read:
  7838 ;; =============== function _robot_read ends ============
  7839                           
  7840                           	signat	_robot_read,4216
  7841                           	global	_lcd_init
  7842                           psect	text1075,local,class=CODE,delta=2
  7843                           global __ptext1075
  7844  102B                     __ptext1075:
  7845                           
  7846 ;; *************** function _lcd_init *****************
  7847 ;; Defined at:
  7848 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;		None
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;		None
  7853 ;; Return value:  Size  Location     Type
  7854 ;;		None               void
  7855 ;; Registers used:
  7856 ;;		wreg, status,2, status,0, pclath, cstack
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7862 ;;      Params:         0       0       0       0       0
  7863 ;;      Locals:         0       0       0       0       0
  7864 ;;      Temps:          0       0       0       0       0
  7865 ;;      Totals:         0       0       0       0       0
  7866 ;;Total ram usage:        0 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; Hardware stack levels required when called:    4
  7869 ;; This function calls:
  7870 ;;		_lcd_write_control
  7871 ;; This function is called by:
  7872 ;;		_init
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           psect	text1075
  7876                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7877                           	line	101
  7878                           	global	__size_of_lcd_init
  7879  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  7880                           	
  7881  102B                     _lcd_init:	
  7882                           	opt	stack 2
  7883                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7884                           	line	105
  7885                           	
  7886  102B                     l11401:	
  7887                           ;lcd.c: 105: ADCON1 = 0b00000010;
  7888  102B  3002               	movlw	(02h)
  7889  102C  1683               	bsf	status, 5	;RP0=1, select bank1
  7890  102D  1303               	bcf	status, 6	;RP1=0, select bank1
  7891  102E  009F               	movwf	(159)^080h	;volatile
  7892                           	line	108
  7893                           	
  7894  102F                     l11403:	
  7895                           ;lcd.c: 108: PORTD = 0;
  7896  102F  1283               	bcf	status, 5	;RP0=0, select bank0
  7897  1030  1303               	bcf	status, 6	;RP1=0, select bank0
  7898  1031  0188               	clrf	(8)	;volatile
  7899                           	line	109
  7900                           	
  7901  1032                     l11405:	
  7902                           ;lcd.c: 109: PORTE = 0;
  7903  1032  0189               	clrf	(9)	;volatile
  7904                           	line	111
  7905                           	
  7906  1033                     l11407:	
  7907                           ;lcd.c: 111: TRISD = 0b00000000;
  7908  1033  1683               	bsf	status, 5	;RP0=1, select bank1
  7909  1034  1303               	bcf	status, 6	;RP1=0, select bank1
  7910  1035  0188               	clrf	(136)^080h	;volatile
  7911                           	line	112
  7912                           	
  7913  1036                     l11409:	
  7914                           ;lcd.c: 112: TRISE = 0b00000000;
  7915  1036  0189               	clrf	(137)^080h	;volatile
  7916                           	line	115
  7917                           	
  7918  1037                     l11411:	
  7919                           ;lcd.c: 115: lcd_write_control(0b00000001);
  7920  1037  3001               	movlw	(01h)
  7921  1038  160A  158A  2744   	fcall	_lcd_write_control
              160A  118A         
  7922                           	line	116
  7923                           	
  7924  103D                     l11413:	
  7925                           ;lcd.c: 116: lcd_write_control(0b00111000);
  7926  103D  3038               	movlw	(038h)
  7927  103E  160A  158A  2744   	fcall	_lcd_write_control
              160A  118A         
  7928                           	line	117
  7929                           	
  7930  1043                     l11415:	
  7931                           ;lcd.c: 117: lcd_write_control(0b00001100);
  7932  1043  300C               	movlw	(0Ch)
  7933  1044  160A  158A  2744   	fcall	_lcd_write_control
              160A  118A         
  7934                           	line	118
  7935                           	
  7936  1049                     l11417:	
  7937                           ;lcd.c: 118: lcd_write_control(0b00000110);
  7938  1049  3006               	movlw	(06h)
  7939  104A  160A  158A  2744   	fcall	_lcd_write_control
              160A  118A         
  7940                           	line	119
  7941                           	
  7942  104F                     l11419:	
  7943                           ;lcd.c: 119: lcd_write_control(0b00000010);
  7944  104F  3002               	movlw	(02h)
  7945  1050  160A  158A  2744   	fcall	_lcd_write_control
              160A  118A         
  7946                           	line	121
  7947                           	
  7948  1055                     l1429:	
  7949  1055  0008               	return
  7950                           	opt stack 0
  7951                           GLOBAL	__end_of_lcd_init
  7952  1056                     	__end_of_lcd_init:
  7953 ;; =============== function _lcd_init ends ============
  7954                           
  7955                           	signat	_lcd_init,88
  7956                           	global	_lcd_write_string
  7957                           psect	text1076,local,class=CODE,delta=2
  7958                           global __ptext1076
  7959  10D9                     __ptext1076:
  7960                           
  7961 ;; *************** function _lcd_write_string *****************
  7962 ;; Defined at:
  7963 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;  s               2    7[BANK0 ] PTR unsigned char 
  7966 ;;		 -> STR_26(9), STR_25(3), STR_24(3), STR_23(3), 
  7967 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_18(16), 
  7968 ;;		 -> STR_17(4), STR_16(8), STR_15(4), STR_14(16), 
  7969 ;;		 -> UpdateDisplay@LCDOutput(16), STR_12(4), STR_11(4), STR_10(4), 
  7970 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(9), 
  7971 ;;		 -> STR_5(9), STR_4(8), STR_3(9), STR_2(9), 
  7972 ;;		 -> STR_1(9), 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;		None
  7975 ;; Return value:  Size  Location     Type
  7976 ;;		None               void
  7977 ;; Registers used:
  7978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7984 ;;      Params:         0       2       0       0       0
  7985 ;;      Locals:         0       0       0       0       0
  7986 ;;      Temps:          0       0       0       0       0
  7987 ;;      Totals:         0       2       0       0       0
  7988 ;;Total ram usage:        2 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    4
  7991 ;; This function calls:
  7992 ;;		_lcd_write_data
  7993 ;; This function is called by:
  7994 ;;		_UpdateDisplay
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           psect	text1076
  7998                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  7999                           	line	48
  8000                           	global	__size_of_lcd_write_string
  8001  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  8002                           	
  8003  10D9                     _lcd_write_string:	
  8004                           	opt	stack 1
  8005                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8006                           	line	50
  8007                           	
  8008  10D9                     l11393:	
  8009                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  8010  10D9  28F3               	goto	l11399
  8011                           	
  8012  10DA                     l1409:	
  8013                           	
  8014  10DA                     l11395:	
  8015  10DA  1283               	bcf	status, 5	;RP0=0, select bank0
  8016  10DB  1303               	bcf	status, 6	;RP1=0, select bank0
  8017  10DC  0828               	movf	(lcd_write_string@s+1),w
  8018  10DD  00FF               	movwf	btemp+1
  8019  10DE  0827               	movf	(lcd_write_string@s),w
  8020  10DF  0084               	movwf	fsr0
  8021  10E0  120A  118A  273C   	fcall	stringtab
              160A  118A         
  8022  10E5  160A  158A  270A   	fcall	_lcd_write_data
              160A  118A         
  8023                           	
  8024  10EA                     l11397:	
  8025  10EA  3001               	movlw	low(01h)
  8026  10EB  1283               	bcf	status, 5	;RP0=0, select bank0
  8027  10EC  1303               	bcf	status, 6	;RP1=0, select bank0
  8028  10ED  07A7               	addwf	(lcd_write_string@s),f
  8029  10EE  1803               	skipnc
  8030  10EF  0AA8               	incf	(lcd_write_string@s+1),f
  8031  10F0  3000               	movlw	high(01h)
  8032  10F1  07A8               	addwf	(lcd_write_string@s+1),f
  8033  10F2  28F3               	goto	l11399
  8034                           	
  8035  10F3                     l1408:	
  8036                           	
  8037  10F3                     l11399:	
  8038  10F3  1283               	bcf	status, 5	;RP0=0, select bank0
  8039  10F4  1303               	bcf	status, 6	;RP1=0, select bank0
  8040  10F5  0828               	movf	(lcd_write_string@s+1),w
  8041  10F6  00FF               	movwf	btemp+1
  8042  10F7  0827               	movf	(lcd_write_string@s),w
  8043  10F8  0084               	movwf	fsr0
  8044  10F9  120A  118A  273C   	fcall	stringtab
              160A  118A         
  8045  10FE  3800               	iorlw	0
  8046  10FF  1D03               	skipz
  8047  1100  2902               	goto	u4961
  8048  1101  2903               	goto	u4960
  8049  1102                     u4961:
  8050  1102  28DA               	goto	l11395
  8051  1103                     u4960:
  8052  1103  2904               	goto	l1411
  8053                           	
  8054  1104                     l1410:	
  8055                           	line	51
  8056                           	
  8057  1104                     l1411:	
  8058  1104  0008               	return
  8059                           	opt stack 0
  8060                           GLOBAL	__end_of_lcd_write_string
  8061  1105                     	__end_of_lcd_write_string:
  8062 ;; =============== function _lcd_write_string ends ============
  8063                           
  8064                           	signat	_lcd_write_string,4216
  8065                           	global	_lcd_set_cursor
  8066                           psect	text1077,local,class=CODE,delta=2
  8067                           global __ptext1077
  8068  1EF2                     __ptext1077:
  8069                           
  8070 ;; *************** function _lcd_set_cursor *****************
  8071 ;; Defined at:
  8072 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;  address         1    wreg     unsigned char 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  address         1    3[BANK0 ] unsigned char 
  8077 ;; Return value:  Size  Location     Type
  8078 ;;		None               void
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0, pclath, cstack
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8086 ;;      Params:         0       0       0       0       0
  8087 ;;      Locals:         0       1       0       0       0
  8088 ;;      Temps:          0       0       0       0       0
  8089 ;;      Totals:         0       1       0       0       0
  8090 ;;Total ram usage:        1 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:    4
  8093 ;; This function calls:
  8094 ;;		_lcd_write_control
  8095 ;; This function is called by:
  8096 ;;		_UpdateDisplay
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           psect	text1077
  8100                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  8101                           	line	42
  8102                           	global	__size_of_lcd_set_cursor
  8103  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  8104                           	
  8105  1EF2                     _lcd_set_cursor:	
  8106                           	opt	stack 1
  8107                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  8108                           ;lcd_set_cursor@address stored from wreg
  8109  1EF2  1283               	bcf	status, 5	;RP0=0, select bank0
  8110  1EF3  1303               	bcf	status, 6	;RP1=0, select bank0
  8111  1EF4  00A3               	movwf	(lcd_set_cursor@address)
  8112                           	line	43
  8113                           	
  8114  1EF5                     l11389:	
  8115                           ;lcd.c: 43: address |= 0b10000000;
  8116  1EF5  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  8117                           	line	44
  8118                           	
  8119  1EF6                     l11391:	
  8120                           ;lcd.c: 44: lcd_write_control(address);
  8121  1EF6  0823               	movf	(lcd_set_cursor@address),w
  8122  1EF7  160A  158A  2744   	fcall	_lcd_write_control
              160A  158A         
  8123                           	line	45
  8124                           	
  8125  1EFC                     l1405:	
  8126  1EFC  0008               	return
  8127                           	opt stack 0
  8128                           GLOBAL	__end_of_lcd_set_cursor
  8129  1EFD                     	__end_of_lcd_set_cursor:
  8130 ;; =============== function _lcd_set_cursor ends ============
  8131                           
  8132                           	signat	_lcd_set_cursor,4216
  8133                           	global	_abs
  8134                           psect	text1078,local,class=CODE,delta=2
  8135                           global __ptext1078
  8136  1191                     __ptext1078:
  8137                           
  8138 ;; *************** function _abs *****************
  8139 ;; Defined at:
  8140 ;;		line 493 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;  v               2    6[BANK0 ] int 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  2    6[BANK0 ] int 
  8147 ;; Registers used:
  8148 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8154 ;;      Params:         0       2       0       0       0
  8155 ;;      Locals:         0       0       0       0       0
  8156 ;;      Temps:          0       2       0       0       0
  8157 ;;      Totals:         0       4       0       0       0
  8158 ;;Total ram usage:        4 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; Hardware stack levels required when called:    4
  8161 ;; This function calls:
  8162 ;;		___wmul
  8163 ;; This function is called by:
  8164 ;;		_robot_turnRight
  8165 ;;		_robotMoveSpeed
  8166 ;;		_robotTurnSpeed
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           psect	text1078
  8170                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  8171                           	line	493
  8172                           	global	__size_of_abs
  8173  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  8174                           	
  8175  1191                     _abs:	
  8176                           	opt	stack 2
  8177                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8178                           	line	494
  8179                           	
  8180  1191                     l11385:	
  8181                           ;robot.c: 494: return (v * ((v > 0) - (v < 0)));
  8182  1191  3000               	movlw	0
  8183  1192  1283               	bcf	status, 5	;RP0=0, select bank0
  8184  1193  1303               	bcf	status, 6	;RP1=0, select bank0
  8185  1194  1BA7               	btfsc	(abs@v+1),7
  8186  1195  3001               	movlw	1
  8187  1196  00A8               	movwf	(??_abs+0)+0
  8188  1197  01A9               	clrf	(??_abs+0)+0+1
  8189  1198  09A8               	comf	(??_abs+0)+0,f
  8190  1199  09A9               	comf	(??_abs+0)+1,f
  8191  119A  0AA8               	incf	(??_abs+0)+0,f
  8192  119B  1903               	skipnz
  8193  119C  0AA9               	incf	(??_abs+0)+1,f
  8194  119D  0827               	movf	(abs@v+1),w
  8195  119E  3A80               	xorlw	80h
  8196  119F  00FF               	movwf	btemp+1
  8197  11A0  3080               	movlw	(high(01h))^80h
  8198  11A1  027F               	subwf	btemp+1,w
  8199  11A2  1D03               	skipz
  8200  11A3  29A6               	goto	u4955
  8201  11A4  3001               	movlw	low(01h)
  8202  11A5  0226               	subwf	(abs@v),w
  8203  11A6                     u4955:
  8204                           
  8205  11A6  3000               	movlw	0
  8206  11A7  1803               	skipnc
  8207  11A8  3001               	movlw	1
  8208  11A9  1283               	bcf	status, 5	;RP0=0, select bank0
  8209  11AA  1303               	bcf	status, 6	;RP1=0, select bank0
  8210  11AB  0728               	addwf	0+(??_abs+0)+0,w
  8211  11AC  00A0               	movwf	(?___wmul)
  8212  11AD  0829               	movf	1+(??_abs+0)+0,w
  8213  11AE  1803               	skipnc
  8214  11AF  0A29               	incf	1+(??_abs+0)+0,w
  8215  11B0  00A1               	movwf	((?___wmul))+1
  8216  11B1  0827               	movf	(abs@v+1),w
  8217  11B2  01A3               	clrf	1+(?___wmul)+02h
  8218  11B3  07A3               	addwf	1+(?___wmul)+02h
  8219  11B4  0826               	movf	(abs@v),w
  8220  11B5  01A2               	clrf	0+(?___wmul)+02h
  8221  11B6  07A2               	addwf	0+(?___wmul)+02h
  8222                           
  8223  11B7  160A  118A  2081   	fcall	___wmul
              160A  118A         
  8224  11BC  1283               	bcf	status, 5	;RP0=0, select bank0
  8225  11BD  1303               	bcf	status, 6	;RP1=0, select bank0
  8226  11BE  0821               	movf	(1+(?___wmul)),w
  8227  11BF  01A7               	clrf	(?_abs+1)
  8228  11C0  07A7               	addwf	(?_abs+1)
  8229  11C1  0820               	movf	(0+(?___wmul)),w
  8230  11C2  01A6               	clrf	(?_abs)
  8231  11C3  07A6               	addwf	(?_abs)
  8232                           
  8233  11C4  29C5               	goto	l6197
  8234                           	
  8235  11C5                     l11387:	
  8236                           	line	495
  8237                           	
  8238  11C5                     l6197:	
  8239  11C5  0008               	return
  8240                           	opt stack 0
  8241                           GLOBAL	__end_of_abs
  8242  11C6                     	__end_of_abs:
  8243 ;; =============== function _abs ends ============
  8244                           
  8245                           	signat	_abs,4218
  8246                           	global	_robotTurn
  8247                           psect	text1079,local,class=CODE,delta=2
  8248                           global __ptext1079
  8249  14CE                     __ptext1079:
  8250                           
  8251 ;; *************** function _robotTurn *****************
  8252 ;; Defined at:
  8253 ;;		line 143 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  angle           2    2[BANK0 ] int 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;		None               void
  8260 ;; Registers used:
  8261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8267 ;;      Params:         0       2       0       0       0
  8268 ;;      Locals:         0       0       0       0       0
  8269 ;;      Temps:          0       0       0       0       0
  8270 ;;      Totals:         0       2       0       0       0
  8271 ;;Total ram usage:        2 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; Hardware stack levels required when called:    4
  8274 ;; This function calls:
  8275 ;;		_ser_putch
  8276 ;; This function is called by:
  8277 ;;		_robotTurnSpeed
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           psect	text1079
  8281                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  8282                           	line	143
  8283                           	global	__size_of_robotTurn
  8284  0074                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  8285                           	
  8286  14CE                     _robotTurn:	
  8287                           	opt	stack 2
  8288                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8289                           	line	145
  8290                           	
  8291  14CE                     l11377:	
  8292                           ;robot.c: 145: if (angle > 0)
  8293  14CE  1283               	bcf	status, 5	;RP0=0, select bank0
  8294  14CF  1303               	bcf	status, 6	;RP1=0, select bank0
  8295  14D0  0823               	movf	(robotTurn@angle+1),w
  8296  14D1  3A80               	xorlw	80h
  8297  14D2  00FF               	movwf	btemp+1
  8298  14D3  3080               	movlw	(high(01h))^80h
  8299  14D4  027F               	subwf	btemp+1,w
  8300  14D5  1D03               	skipz
  8301  14D6  2CD9               	goto	u4935
  8302  14D7  3001               	movlw	low(01h)
  8303  14D8  0222               	subwf	(robotTurn@angle),w
  8304  14D9                     u4935:
  8305                           
  8306  14D9  1C03               	skipc
  8307  14DA  2CDC               	goto	u4931
  8308  14DB  2CDD               	goto	u4930
  8309  14DC                     u4931:
  8310  14DC  2CFC               	goto	l6116
  8311  14DD                     u4930:
  8312                           	line	147
  8313                           	
  8314  14DD                     l11379:	
  8315                           ;robot.c: 146: {
  8316                           ;robot.c: 147: ser_putch(137);
  8317  14DD  3089               	movlw	(089h)
  8318  14DE  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8319                           	line	149
  8320                           ;robot.c: 149: ser_putch(0);
  8321  14E3  3000               	movlw	(0)
  8322  14E4  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8323                           	line	151
  8324                           ;robot.c: 151: ser_putch(200);
  8325  14E9  30C8               	movlw	(0C8h)
  8326  14EA  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8327                           	line	153
  8328                           ;robot.c: 153: ser_putch(0);
  8329  14EF  3000               	movlw	(0)
  8330  14F0  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8331                           	line	155
  8332                           ;robot.c: 155: ser_putch(1);
  8333  14F5  3001               	movlw	(01h)
  8334  14F6  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8335                           	line	156
  8336                           ;robot.c: 156: }
  8337  14FB  2D41               	goto	l6120
  8338                           	line	157
  8339                           	
  8340  14FC                     l6116:	
  8341                           ;robot.c: 157: else if (angle < 0)
  8342  14FC  1283               	bcf	status, 5	;RP0=0, select bank0
  8343  14FD  1303               	bcf	status, 6	;RP1=0, select bank0
  8344  14FE  1FA3               	btfss	(robotTurn@angle+1),7
  8345  14FF  2D01               	goto	u4941
  8346  1500  2D02               	goto	u4940
  8347  1501                     u4941:
  8348  1501  2D21               	goto	l11383
  8349  1502                     u4940:
  8350                           	line	159
  8351                           	
  8352  1502                     l11381:	
  8353                           ;robot.c: 158: {
  8354                           ;robot.c: 159: ser_putch(137);
  8355  1502  3089               	movlw	(089h)
  8356  1503  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8357                           	line	161
  8358                           ;robot.c: 161: ser_putch(0);
  8359  1508  3000               	movlw	(0)
  8360  1509  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8361                           	line	163
  8362                           ;robot.c: 163: ser_putch(200);
  8363  150E  30C8               	movlw	(0C8h)
  8364  150F  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8365                           	line	165
  8366                           ;robot.c: 165: ser_putch(255);
  8367  1514  30FF               	movlw	(0FFh)
  8368  1515  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8369                           	line	167
  8370                           ;robot.c: 167: ser_putch(255);
  8371  151A  30FF               	movlw	(0FFh)
  8372  151B  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8373                           	line	168
  8374                           ;robot.c: 168: }
  8375  1520  2D41               	goto	l6120
  8376                           	line	169
  8377                           	
  8378  1521                     l6118:	
  8379                           	line	171
  8380                           	
  8381  1521                     l11383:	
  8382                           ;robot.c: 169: else
  8383                           ;robot.c: 170: {
  8384                           ;robot.c: 171: ser_putch(137);
  8385  1521  3089               	movlw	(089h)
  8386  1522  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8387                           	line	173
  8388                           ;robot.c: 173: ser_putch(0);
  8389  1527  3000               	movlw	(0)
  8390  1528  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8391                           	line	175
  8392                           ;robot.c: 175: ser_putch(0);
  8393  152D  3000               	movlw	(0)
  8394  152E  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8395                           	line	177
  8396                           ;robot.c: 177: ser_putch(0);
  8397  1533  3000               	movlw	(0)
  8398  1534  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8399                           	line	179
  8400                           ;robot.c: 179: ser_putch(0);
  8401  1539  3000               	movlw	(0)
  8402  153A  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
  8403  153F  2D41               	goto	l6120
  8404                           	line	180
  8405                           	
  8406  1540                     l6119:	
  8407  1540  2D41               	goto	l6120
  8408                           	
  8409  1541                     l6117:	
  8410                           	line	181
  8411                           	
  8412  1541                     l6120:	
  8413  1541  0008               	return
  8414                           	opt stack 0
  8415                           GLOBAL	__end_of_robotTurn
  8416  1542                     	__end_of_robotTurn:
  8417 ;; =============== function _robotTurn ends ============
  8418                           
  8419                           	signat	_robotTurn,4216
  8420                           	global	_ser_getch
  8421                           psect	text1080,local,class=CODE,delta=2
  8422                           global __ptext1080
  8423  10AD                     __ptext1080:
  8424                           
  8425 ;; *************** function _ser_getch *****************
  8426 ;; Defined at:
  8427 ;;		line 55 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;		None
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  c               1    1[BANK0 ] unsigned char 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      unsigned char 
  8434 ;; Registers used:
  8435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8441 ;;      Params:         0       0       0       0       0
  8442 ;;      Locals:         0       1       0       0       0
  8443 ;;      Temps:          0       1       0       0       0
  8444 ;;      Totals:         0       2       0       0       0
  8445 ;;Total ram usage:        2 bytes
  8446 ;; Hardware stack levels used:    1
  8447 ;; Hardware stack levels required when called:    4
  8448 ;; This function calls:
  8449 ;;		_ser_isrx
  8450 ;; This function is called by:
  8451 ;;		_robot_read
  8452 ;;		_RobotBattRead
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           psect	text1080
  8456                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  8457                           	line	55
  8458                           	global	__size_of_ser_getch
  8459  002C                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  8460                           	
  8461  10AD                     _ser_getch:	
  8462                           	opt	stack 1
  8463                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8464                           	line	58
  8465                           	
  8466  10AD                     l11361:	
  8467                           ;ser.c: 56: unsigned char c;
  8468                           ;ser.c: 58: while (ser_isrx()==0)
  8469  10AD  28AF               	goto	l11363
  8470                           	
  8471  10AE                     l6904:	
  8472                           	line	59
  8473                           ;ser.c: 59: continue;
  8474  10AE  28AF               	goto	l11363
  8475                           	
  8476  10AF                     l6903:	
  8477                           	line	58
  8478                           	
  8479  10AF                     l11363:	
  8480  10AF  160A  158A  2784   	fcall	_ser_isrx
              160A  118A         
  8481  10B4  1C03               	btfss	status,0
  8482  10B5  28B7               	goto	u4921
  8483  10B6  28B8               	goto	u4920
  8484  10B7                     u4921:
  8485  10B7  28AF               	goto	l11363
  8486  10B8                     u4920:
  8487                           	
  8488  10B8                     l6905:	
  8489                           	line	61
  8490                           ;ser.c: 61: GIE=0;
  8491  10B8  138B               	bcf	(95/8),(95)&7
  8492                           	line	62
  8493                           	
  8494  10B9                     l11365:	
  8495                           ;ser.c: 62: c=rxfifo[rxoptr];
  8496  10B9  1683               	bsf	status, 5	;RP0=1, select bank1
  8497  10BA  1303               	bcf	status, 6	;RP1=0, select bank1
  8498  10BB  085D               	movf	(_rxoptr)^080h,w
  8499  10BC  3EA0               	addlw	_rxfifo&0ffh
  8500  10BD  0084               	movwf	fsr0
  8501  10BE  1383               	bcf	status, 7	;select IRP bank1
  8502  10BF  0800               	movf	indf,w
  8503  10C0  1283               	bcf	status, 5	;RP0=0, select bank0
  8504  10C1  1303               	bcf	status, 6	;RP1=0, select bank0
  8505  10C2  00A0               	movwf	(??_ser_getch+0)+0
  8506  10C3  0820               	movf	(??_ser_getch+0)+0,w
  8507  10C4  00A1               	movwf	(ser_getch@c)
  8508                           	line	63
  8509                           	
  8510  10C5                     l11367:	
  8511                           ;ser.c: 63: ++rxoptr;
  8512  10C5  3001               	movlw	(01h)
  8513  10C6  00A0               	movwf	(??_ser_getch+0)+0
  8514  10C7  0820               	movf	(??_ser_getch+0)+0,w
  8515  10C8  1683               	bsf	status, 5	;RP0=1, select bank1
  8516  10C9  1303               	bcf	status, 6	;RP1=0, select bank1
  8517  10CA  07DD               	addwf	(_rxoptr)^080h,f	;volatile
  8518                           	line	64
  8519                           	
  8520  10CB                     l11369:	
  8521                           ;ser.c: 64: rxoptr &= (16-1);
  8522  10CB  300F               	movlw	(0Fh)
  8523  10CC  1283               	bcf	status, 5	;RP0=0, select bank0
  8524  10CD  1303               	bcf	status, 6	;RP1=0, select bank0
  8525  10CE  00A0               	movwf	(??_ser_getch+0)+0
  8526  10CF  0820               	movf	(??_ser_getch+0)+0,w
  8527  10D0  1683               	bsf	status, 5	;RP0=1, select bank1
  8528  10D1  1303               	bcf	status, 6	;RP1=0, select bank1
  8529  10D2  05DD               	andwf	(_rxoptr)^080h,f	;volatile
  8530                           	line	65
  8531                           	
  8532  10D3                     l11371:	
  8533                           ;ser.c: 65: GIE=1;
  8534  10D3  178B               	bsf	(95/8),(95)&7
  8535                           	line	66
  8536                           	
  8537  10D4                     l11373:	
  8538                           ;ser.c: 66: return c;
  8539  10D4  1283               	bcf	status, 5	;RP0=0, select bank0
  8540  10D5  1303               	bcf	status, 6	;RP1=0, select bank0
  8541  10D6  0821               	movf	(ser_getch@c),w
  8542  10D7  28D8               	goto	l6906
  8543                           	
  8544  10D8                     l11375:	
  8545                           	line	67
  8546                           	
  8547  10D8                     l6906:	
  8548  10D8  0008               	return
  8549                           	opt stack 0
  8550                           GLOBAL	__end_of_ser_getch
  8551  10D9                     	__end_of_ser_getch:
  8552 ;; =============== function _ser_getch ends ============
  8553                           
  8554                           	signat	_ser_getch,89
  8555                           	global	_sprintf
  8556                           psect	text1081,local,class=CODE,delta=2
  8557                           global __ptext1081
  8558  0A05                     __ptext1081:
  8559                           
  8560 ;; *************** function _sprintf *****************
  8561 ;; Defined at:
  8562 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  sp              1    wreg     PTR unsigned char 
  8565 ;;		 -> UpdateDisplay@LCDOutput(16), 
  8566 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  8567 ;;		 -> STR_19(5), STR_13(13), 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  8570 ;;		 -> UpdateDisplay@LCDOutput(16), 
  8571 ;;  _val            4   31[BANK0 ] struct .
  8572 ;;  c               1   36[BANK0 ] char 
  8573 ;;  prec            1   30[BANK0 ] char 
  8574 ;;  flag            1   29[BANK0 ] unsigned char 
  8575 ;;  ap              1   28[BANK0 ] PTR void [1]
  8576 ;;		 -> ?_sprintf(2), 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  2   20[BANK0 ] int 
  8579 ;; Registers used:
  8580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8586 ;;      Params:         0       5       0       0       0
  8587 ;;      Locals:         0       9       0       0       0
  8588 ;;      Temps:          0       3       0       0       0
  8589 ;;      Totals:         0      17       0       0       0
  8590 ;;Total ram usage:       17 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; Hardware stack levels required when called:    4
  8593 ;; This function calls:
  8594 ;;		___lwdiv
  8595 ;;		___lwmod
  8596 ;; This function is called by:
  8597 ;;		_UpdateDisplay
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           psect	text1081
  8601                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  8602                           	line	488
  8603                           	global	__size_of_sprintf
  8604  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  8605                           	
  8606  0A05                     _sprintf:	
  8607                           	opt	stack 1
  8608                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8609                           ;sprintf@sp stored from wreg
  8610                           	line	537
  8611  0A05  1283               	bcf	status, 5	;RP0=0, select bank0
  8612  0A06  1303               	bcf	status, 6	;RP1=0, select bank0
  8613  0A07  00C3               	movwf	(sprintf@sp)
  8614                           	
  8615  0A08                     l11303:	
  8616  0A08  3035               	movlw	(?_sprintf+01h)&0ffh
  8617  0A09  00B9               	movwf	(??_sprintf+0)+0
  8618  0A0A  0839               	movf	(??_sprintf+0)+0,w
  8619  0A0B  00BC               	movwf	(sprintf@ap)
  8620                           	line	540
  8621  0A0C  2AEB               	goto	l11355
  8622                           	
  8623  0A0D                     l6944:	
  8624                           	line	542
  8625                           	
  8626  0A0D                     l11305:	
  8627  0A0D  0844               	movf	(sprintf@c),w
  8628  0A0E  3A25               	xorlw	025h
  8629  0A0F  1903               	skipnz
  8630  0A10  2A12               	goto	u4841
  8631  0A11  2A13               	goto	u4840
  8632  0A12                     u4841:
  8633  0A12  2A1F               	goto	l6945
  8634  0A13                     u4840:
  8635                           	line	545
  8636                           	
  8637  0A13                     l11307:	
  8638  0A13  0844               	movf	(sprintf@c),w
  8639  0A14  00B9               	movwf	(??_sprintf+0)+0
  8640  0A15  0843               	movf	(sprintf@sp),w
  8641  0A16  0084               	movwf	fsr0
  8642  0A17  0839               	movf	(??_sprintf+0)+0,w
  8643  0A18  1383               	bcf	status, 7	;select IRP bank0
  8644  0A19  0080               	movwf	indf
  8645                           	
  8646  0A1A                     l11309:	
  8647  0A1A  3001               	movlw	(01h)
  8648  0A1B  00B9               	movwf	(??_sprintf+0)+0
  8649  0A1C  0839               	movf	(??_sprintf+0)+0,w
  8650  0A1D  07C3               	addwf	(sprintf@sp),f
  8651                           	line	546
  8652  0A1E  2AEB               	goto	l11355
  8653                           	line	547
  8654                           	
  8655  0A1F                     l6945:	
  8656                           	line	552
  8657  0A1F  01BD               	clrf	(sprintf@flag)
  8658                           	line	638
  8659  0A20  2A26               	goto	l11313
  8660                           	line	640
  8661                           	
  8662  0A21                     l6947:	
  8663                           	line	641
  8664  0A21  2AFF               	goto	l11357
  8665                           	line	700
  8666                           	
  8667  0A22                     l6949:	
  8668  0A22  2A3B               	goto	l11315
  8669                           	line	701
  8670                           	
  8671  0A23                     l6950:	
  8672                           	line	702
  8673  0A23  2A3B               	goto	l11315
  8674                           	line	805
  8675                           	
  8676  0A24                     l6952:	
  8677                           	line	816
  8678  0A24  2AEB               	goto	l11355
  8679                           	line	825
  8680                           	
  8681  0A25                     l11311:	
  8682  0A25  2A3B               	goto	l11315
  8683                           	line	638
  8684                           	
  8685  0A26                     l6946:	
  8686                           	
  8687  0A26                     l11313:	
  8688  0A26  3001               	movlw	01h
  8689  0A27  07B4               	addwf	(sprintf@f),f
  8690  0A28  30FF               	movlw	-01h
  8691  0A29  0734               	addwf	(sprintf@f),w
  8692  0A2A  0084               	movwf	fsr0
  8693  0A2B  120A  118A  2746   	fcall	stringdir
              120A  158A         
  8694  0A30  00C4               	movwf	(sprintf@c)
  8695                           	; Switch size 1, requested type "space"
  8696                           ; Number of cases is 3, Range of values is 0 to 105
  8697                           ; switch strategies available:
  8698                           ; Name         Instructions Cycles
  8699                           ; simple_byte           10     6 (average)
  8700                           ; jumptable            260     6 (fixed)
  8701                           ; rangetable           110     6 (fixed)
  8702                           ; spacedrange          218     9 (fixed)
  8703                           ; locatedrange         106     3 (fixed)
  8704                           ;	Chosen strategy is simple_byte
  8705                           
  8706                           	opt asmopt_off
  8707  0A31  3A00               	xorlw	0^0	; case 0
  8708  0A32  1903               	skipnz
  8709  0A33  2AFF               	goto	l11357
  8710  0A34  3A64               	xorlw	100^0	; case 100
  8711  0A35  1903               	skipnz
  8712  0A36  2A3B               	goto	l11315
  8713  0A37  3A0D               	xorlw	105^100	; case 105
  8714  0A38  1903               	skipnz
  8715  0A39  2A3B               	goto	l11315
  8716  0A3A  2AEB               	goto	l11355
  8717                           	opt asmopt_on
  8718                           
  8719                           	line	825
  8720                           	
  8721  0A3B                     l6951:	
  8722                           	line	1254
  8723                           	
  8724  0A3B                     l11315:	
  8725  0A3B  083C               	movf	(sprintf@ap),w
  8726  0A3C  0084               	movwf	fsr0
  8727  0A3D  1383               	bcf	status, 7	;select IRP bank0
  8728  0A3E  0800               	movf	indf,w
  8729  0A3F  00BF               	movwf	(sprintf@_val)
  8730  0A40  0A84               	incf	fsr0,f
  8731  0A41  0800               	movf	indf,w
  8732  0A42  00C0               	movwf	(sprintf@_val+1)
  8733                           	
  8734  0A43                     l11317:	
  8735  0A43  3002               	movlw	(02h)
  8736  0A44  00B9               	movwf	(??_sprintf+0)+0
  8737  0A45  0839               	movf	(??_sprintf+0)+0,w
  8738  0A46  07BC               	addwf	(sprintf@ap),f
  8739                           	line	1256
  8740                           	
  8741  0A47                     l11319:	
  8742  0A47  1FC0               	btfss	(sprintf@_val+1),7
  8743  0A48  2A4A               	goto	u4851
  8744  0A49  2A4B               	goto	u4850
  8745  0A4A                     u4851:
  8746  0A4A  2A55               	goto	l11325
  8747  0A4B                     u4850:
  8748                           	line	1257
  8749                           	
  8750  0A4B                     l11321:	
  8751  0A4B  3003               	movlw	(03h)
  8752  0A4C  00B9               	movwf	(??_sprintf+0)+0
  8753  0A4D  0839               	movf	(??_sprintf+0)+0,w
  8754  0A4E  04BD               	iorwf	(sprintf@flag),f
  8755                           	line	1258
  8756                           	
  8757  0A4F                     l11323:	
  8758  0A4F  09BF               	comf	(sprintf@_val),f
  8759  0A50  09C0               	comf	(sprintf@_val+1),f
  8760  0A51  0ABF               	incf	(sprintf@_val),f
  8761  0A52  1903               	skipnz
  8762  0A53  0AC0               	incf	(sprintf@_val+1),f
  8763  0A54  2A55               	goto	l11325
  8764                           	line	1259
  8765                           	
  8766  0A55                     l6953:	
  8767                           	line	1300
  8768                           	
  8769  0A55                     l11325:	
  8770  0A55  01C4               	clrf	(sprintf@c)
  8771  0A56  1403               	bsf	status,0
  8772  0A57  0DC4               	rlf	(sprintf@c),f
  8773                           	
  8774  0A58                     l11327:	
  8775  0A58  0844               	movf	(sprintf@c),w
  8776  0A59  3A05               	xorlw	05h
  8777  0A5A  1D03               	skipz
  8778  0A5B  2A5D               	goto	u4861
  8779  0A5C  2A5E               	goto	u4860
  8780  0A5D                     u4861:
  8781  0A5D  2A60               	goto	l11331
  8782  0A5E                     u4860:
  8783  0A5E  2A88               	goto	l11339
  8784                           	
  8785  0A5F                     l11329:	
  8786  0A5F  2A88               	goto	l11339
  8787                           	line	1301
  8788                           	
  8789  0A60                     l6954:	
  8790                           	
  8791  0A60                     l11331:	
  8792  0A60  0844               	movf	(sprintf@c),w
  8793  0A61  00B9               	movwf	(??_sprintf+0)+0
  8794  0A62  0739               	addwf	(??_sprintf+0)+0,w
  8795  0A63  3E01               	addlw	low((_dpowers-__stringbase))
  8796  0A64  0084               	movwf	fsr0
  8797  0A65  120A  118A  2746   	fcall	stringdir
              120A  158A         
  8798  0A6A  00BA               	movwf	(??_sprintf+1)+0
  8799  0A6B  120A  118A  2746   	fcall	stringdir
              120A  158A         
  8800  0A70  00BB               	movwf	(??_sprintf+1)+0+1
  8801  0A71  083B               	movf	1+(??_sprintf+1)+0,w
  8802  0A72  0240               	subwf	(sprintf@_val+1),w
  8803  0A73  1D03               	skipz
  8804  0A74  2A77               	goto	u4875
  8805  0A75  083A               	movf	0+(??_sprintf+1)+0,w
  8806  0A76  023F               	subwf	(sprintf@_val),w
  8807  0A77                     u4875:
  8808  0A77  1803               	skipnc
  8809  0A78  2A7A               	goto	u4871
  8810  0A79  2A7B               	goto	u4870
  8811  0A7A                     u4871:
  8812  0A7A  2A7D               	goto	l11335
  8813  0A7B                     u4870:
  8814  0A7B  2A88               	goto	l11339
  8815                           	line	1302
  8816                           	
  8817  0A7C                     l11333:	
  8818  0A7C  2A88               	goto	l11339
  8819                           	
  8820  0A7D                     l6956:	
  8821                           	line	1300
  8822                           	
  8823  0A7D                     l11335:	
  8824  0A7D  3001               	movlw	(01h)
  8825  0A7E  00B9               	movwf	(??_sprintf+0)+0
  8826  0A7F  0839               	movf	(??_sprintf+0)+0,w
  8827  0A80  07C4               	addwf	(sprintf@c),f
  8828                           	
  8829  0A81                     l11337:	
  8830  0A81  0844               	movf	(sprintf@c),w
  8831  0A82  3A05               	xorlw	05h
  8832  0A83  1D03               	skipz
  8833  0A84  2A86               	goto	u4881
  8834  0A85  2A87               	goto	u4880
  8835  0A86                     u4881:
  8836  0A86  2A60               	goto	l11331
  8837  0A87                     u4880:
  8838  0A87  2A88               	goto	l11339
  8839                           	
  8840  0A88                     l6955:	
  8841                           	line	1433
  8842                           	
  8843  0A88                     l11339:	
  8844  0A88  083D               	movf	(sprintf@flag),w
  8845  0A89  3903               	andlw	03h
  8846  0A8A  1903               	btfsc	status,2
  8847  0A8B  2A8D               	goto	u4891
  8848  0A8C  2A8E               	goto	u4890
  8849  0A8D                     u4891:
  8850  0A8D  2A9A               	goto	l11345
  8851  0A8E                     u4890:
  8852                           	line	1434
  8853                           	
  8854  0A8E                     l11341:	
  8855  0A8E  302D               	movlw	(02Dh)
  8856  0A8F  00B9               	movwf	(??_sprintf+0)+0
  8857  0A90  0843               	movf	(sprintf@sp),w
  8858  0A91  0084               	movwf	fsr0
  8859  0A92  0839               	movf	(??_sprintf+0)+0,w
  8860  0A93  1383               	bcf	status, 7	;select IRP bank0
  8861  0A94  0080               	movwf	indf
  8862                           	
  8863  0A95                     l11343:	
  8864  0A95  3001               	movlw	(01h)
  8865  0A96  00B9               	movwf	(??_sprintf+0)+0
  8866  0A97  0839               	movf	(??_sprintf+0)+0,w
  8867  0A98  07C3               	addwf	(sprintf@sp),f
  8868  0A99  2A9A               	goto	l11345
  8869                           	
  8870  0A9A                     l6957:	
  8871                           	line	1467
  8872                           	
  8873  0A9A                     l11345:	
  8874  0A9A  0844               	movf	(sprintf@c),w
  8875  0A9B  00B9               	movwf	(??_sprintf+0)+0
  8876  0A9C  0839               	movf	(??_sprintf+0)+0,w
  8877  0A9D  00BE               	movwf	(sprintf@prec)
  8878                           	line	1469
  8879  0A9E  2ADF               	goto	l11353
  8880                           	
  8881  0A9F                     l6959:	
  8882                           	line	1484
  8883                           	
  8884  0A9F                     l11347:	
  8885  0A9F  300A               	movlw	low(0Ah)
  8886  0AA0  00AE               	movwf	(?___lwmod)
  8887  0AA1  3000               	movlw	high(0Ah)
  8888  0AA2  00AF               	movwf	((?___lwmod))+1
  8889  0AA3  083E               	movf	(sprintf@prec),w
  8890  0AA4  00B9               	movwf	(??_sprintf+0)+0
  8891  0AA5  0739               	addwf	(??_sprintf+0)+0,w
  8892  0AA6  3E01               	addlw	low((_dpowers-__stringbase))
  8893  0AA7  0084               	movwf	fsr0
  8894  0AA8  120A  118A  2746   	fcall	stringdir
              120A  158A         
  8895  0AAD  00A6               	movwf	(?___lwdiv)
  8896  0AAE  120A  118A  2746   	fcall	stringdir
              120A  158A         
  8897  0AB3  00A7               	movwf	(?___lwdiv+1)
  8898  0AB4  0840               	movf	(sprintf@_val+1),w
  8899  0AB5  01A9               	clrf	1+(?___lwdiv)+02h
  8900  0AB6  07A9               	addwf	1+(?___lwdiv)+02h
  8901  0AB7  083F               	movf	(sprintf@_val),w
  8902  0AB8  01A8               	clrf	0+(?___lwdiv)+02h
  8903  0AB9  07A8               	addwf	0+(?___lwdiv)+02h
  8904                           
  8905  0ABA  160A  118A  2356   	fcall	___lwdiv
              120A  158A         
  8906  0ABF  1283               	bcf	status, 5	;RP0=0, select bank0
  8907  0AC0  1303               	bcf	status, 6	;RP1=0, select bank0
  8908  0AC1  0827               	movf	(1+(?___lwdiv)),w
  8909  0AC2  01B1               	clrf	1+(?___lwmod)+02h
  8910  0AC3  07B1               	addwf	1+(?___lwmod)+02h
  8911  0AC4  0826               	movf	(0+(?___lwdiv)),w
  8912  0AC5  01B0               	clrf	0+(?___lwmod)+02h
  8913  0AC6  07B0               	addwf	0+(?___lwmod)+02h
  8914                           
  8915  0AC7  160A  118A  227E   	fcall	___lwmod
              120A  158A         
  8916  0ACC  1283               	bcf	status, 5	;RP0=0, select bank0
  8917  0ACD  1303               	bcf	status, 6	;RP1=0, select bank0
  8918  0ACE  082E               	movf	(0+(?___lwmod)),w
  8919  0ACF  3E30               	addlw	030h
  8920  0AD0  00BA               	movwf	(??_sprintf+1)+0
  8921  0AD1  083A               	movf	(??_sprintf+1)+0,w
  8922  0AD2  00C4               	movwf	(sprintf@c)
  8923                           	line	1516
  8924                           	
  8925  0AD3                     l11349:	
  8926  0AD3  0844               	movf	(sprintf@c),w
  8927  0AD4  00B9               	movwf	(??_sprintf+0)+0
  8928  0AD5  0843               	movf	(sprintf@sp),w
  8929  0AD6  0084               	movwf	fsr0
  8930  0AD7  0839               	movf	(??_sprintf+0)+0,w
  8931  0AD8  1383               	bcf	status, 7	;select IRP bank0
  8932  0AD9  0080               	movwf	indf
  8933                           	
  8934  0ADA                     l11351:	
  8935  0ADA  3001               	movlw	(01h)
  8936  0ADB  00B9               	movwf	(??_sprintf+0)+0
  8937  0ADC  0839               	movf	(??_sprintf+0)+0,w
  8938  0ADD  07C3               	addwf	(sprintf@sp),f
  8939  0ADE  2ADF               	goto	l11353
  8940                           	line	1517
  8941                           	
  8942  0ADF                     l6958:	
  8943                           	line	1469
  8944                           	
  8945  0ADF                     l11353:	
  8946  0ADF  30FF               	movlw	(-1)
  8947  0AE0  00B9               	movwf	(??_sprintf+0)+0
  8948  0AE1  0839               	movf	(??_sprintf+0)+0,w
  8949  0AE2  07BE               	addwf	(sprintf@prec),f
  8950  0AE3  083E               	movf	((sprintf@prec)),w
  8951  0AE4  3AFF               	xorlw	-1
  8952  0AE5  1D03               	skipz
  8953  0AE6  2AE8               	goto	u4901
  8954  0AE7  2AE9               	goto	u4900
  8955  0AE8                     u4901:
  8956  0AE8  2A9F               	goto	l11347
  8957  0AE9                     u4900:
  8958  0AE9  2AEB               	goto	l11355
  8959                           	
  8960  0AEA                     l6960:	
  8961  0AEA  2AEB               	goto	l11355
  8962                           	line	1525
  8963                           	
  8964  0AEB                     l6943:	
  8965                           	line	540
  8966                           	
  8967  0AEB                     l11355:	
  8968  0AEB  3001               	movlw	01h
  8969  0AEC  07B4               	addwf	(sprintf@f),f
  8970  0AED  30FF               	movlw	-01h
  8971  0AEE  0734               	addwf	(sprintf@f),w
  8972  0AEF  0084               	movwf	fsr0
  8973  0AF0  120A  118A  2746   	fcall	stringdir
              120A  158A         
  8974  0AF5  00B9               	movwf	(??_sprintf+0)+0
  8975  0AF6  0839               	movf	(??_sprintf+0)+0,w
  8976  0AF7  00C4               	movwf	(sprintf@c)
  8977  0AF8  08C4               	movf	((sprintf@c)),f
  8978  0AF9  1D03               	skipz
  8979  0AFA  2AFC               	goto	u4911
  8980  0AFB  2AFD               	goto	u4910
  8981  0AFC                     u4911:
  8982  0AFC  2A0D               	goto	l11305
  8983  0AFD                     u4910:
  8984  0AFD  2AFF               	goto	l11357
  8985                           	
  8986  0AFE                     l6961:	
  8987  0AFE  2AFF               	goto	l11357
  8988                           	line	1527
  8989                           	
  8990  0AFF                     l6948:	
  8991                           	line	1530
  8992                           	
  8993  0AFF                     l11357:	
  8994  0AFF  0843               	movf	(sprintf@sp),w
  8995  0B00  0084               	movwf	fsr0
  8996  0B01  1383               	bcf	status, 7	;select IRP bank0
  8997  0B02  0180               	clrf	indf
  8998  0B03  2B04               	goto	l6962
  8999                           	line	1532
  9000                           	
  9001  0B04                     l11359:	
  9002                           	line	1533
  9003                           ;	Return value of _sprintf is never used
  9004                           	
  9005  0B04                     l6962:	
  9006  0B04  0008               	return
  9007                           	opt stack 0
  9008                           GLOBAL	__end_of_sprintf
  9009  0B05                     	__end_of_sprintf:
  9010 ;; =============== function _sprintf ends ============
  9011                           
  9012                           	signat	_sprintf,4698
  9013                           	global	_ADCconvert
  9014                           psect	text1082,local,class=CODE,delta=2
  9015                           global __ptext1082
  9016  0519                     __ptext1082:
  9017                           
  9018 ;; *************** function _ADCconvert *****************
  9019 ;; Defined at:
  9020 ;;		line 89 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;		None
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;		None
  9025 ;; Return value:  Size  Location     Type
  9026 ;;		None               void
  9027 ;; Registers used:
  9028 ;;		wreg, status,2, status,0, pclath, cstack
  9029 ;; Tracked objects:
  9030 ;;		On entry : 0/0
  9031 ;;		On exit  : 0/0
  9032 ;;		Unchanged: 0/0
  9033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9034 ;;      Params:         0       0       0       0       0
  9035 ;;      Locals:         0       0       0       0       0
  9036 ;;      Temps:          0       2       0       0       0
  9037 ;;      Totals:         0       2       0       0       0
  9038 ;;Total ram usage:        2 bytes
  9039 ;; Hardware stack levels used:    1
  9040 ;; Hardware stack levels required when called:    4
  9041 ;; This function calls:
  9042 ;;		___wmul
  9043 ;;		___lwdiv
  9044 ;; This function is called by:
  9045 ;;		_readAvgDistance
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           psect	text1082
  9049                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  9050                           	line	89
  9051                           	global	__size_of_ADCconvert
  9052  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  9053                           	
  9054  0519                     _ADCconvert:	
  9055                           	opt	stack 1
  9056                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  9057                           	line	95
  9058                           	
  9059  0519                     l11261:	
  9060                           ;infrared.c: 95: if (adcVal >= 213 && adcVal < 234)
  9061  0519  3000               	movlw	high(0D5h)
  9062  051A  1283               	bcf	status, 5	;RP0=0, select bank0
  9063  051B  1303               	bcf	status, 6	;RP1=0, select bank0
  9064  051C  026D               	subwf	(_adcVal+1),w	;volatile
  9065  051D  30D5               	movlw	low(0D5h)
  9066  051E  1903               	skipnz
  9067  051F  026C               	subwf	(_adcVal),w	;volatile
  9068  0520  1C03               	skipc
  9069  0521  2D23               	goto	u4701
  9070  0522  2D24               	goto	u4700
  9071  0523                     u4701:
  9072  0523  2D67               	goto	l11267
  9073  0524                     u4700:
  9074                           	
  9075  0524                     l11263:	
  9076  0524  3000               	movlw	high(0EAh)
  9077  0525  026D               	subwf	(_adcVal+1),w	;volatile
  9078  0526  30EA               	movlw	low(0EAh)
  9079  0527  1903               	skipnz
  9080  0528  026C               	subwf	(_adcVal),w	;volatile
  9081  0529  1803               	skipnc
  9082  052A  2D2C               	goto	u4711
  9083  052B  2D2D               	goto	u4710
  9084  052C                     u4711:
  9085  052C  2D67               	goto	l11267
  9086  052D                     u4710:
  9087                           	line	97
  9088                           	
  9089  052D                     l11265:	
  9090                           ;infrared.c: 96: {
  9091                           ;infrared.c: 97: IRdistance = 15 + ((20 - 15)*(234 - adcVal)) / (234 - 213);
  9092  052D  3015               	movlw	low(015h)
  9093  052E  00A6               	movwf	(?___lwdiv)
  9094  052F  3000               	movlw	high(015h)
  9095  0530  00A7               	movwf	((?___lwdiv))+1
  9096  0531  096C               	comf	(_adcVal),w	;volatile
  9097  0532  00AE               	movwf	(??_ADCconvert+0)+0
  9098  0533  096D               	comf	(_adcVal+1),w	;volatile
  9099  0534  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9100  0535  0AAE               	incf	(??_ADCconvert+0)+0,f
  9101  0536  1903               	skipnz
  9102  0537  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9103  0538  082E               	movf	0+(??_ADCconvert+0)+0,w
  9104  0539  3EEA               	addlw	low(0EAh)
  9105  053A  00A0               	movwf	(?___wmul)
  9106  053B  082F               	movf	1+(??_ADCconvert+0)+0,w
  9107  053C  1803               	skipnc
  9108  053D  3E01               	addlw	1
  9109  053E  3E00               	addlw	high(0EAh)
  9110  053F  00A1               	movwf	1+(?___wmul)
  9111  0540  3005               	movlw	low(05h)
  9112  0541  00A2               	movwf	0+(?___wmul)+02h
  9113  0542  3000               	movlw	high(05h)
  9114  0543  00A3               	movwf	(0+(?___wmul)+02h)+1
  9115  0544  160A  118A  2081   	fcall	___wmul
              120A  118A         
  9116  0549  1283               	bcf	status, 5	;RP0=0, select bank0
  9117  054A  1303               	bcf	status, 6	;RP1=0, select bank0
  9118  054B  0821               	movf	(1+(?___wmul)),w
  9119  054C  01A9               	clrf	1+(?___lwdiv)+02h
  9120  054D  07A9               	addwf	1+(?___lwdiv)+02h
  9121  054E  0820               	movf	(0+(?___wmul)),w
  9122  054F  01A8               	clrf	0+(?___lwdiv)+02h
  9123  0550  07A8               	addwf	0+(?___lwdiv)+02h
  9124                           
  9125  0551  160A  118A  2356   	fcall	___lwdiv
              120A  118A         
  9126  0556  1283               	bcf	status, 5	;RP0=0, select bank0
  9127  0557  1303               	bcf	status, 6	;RP1=0, select bank0
  9128  0558  0826               	movf	(0+(?___lwdiv)),w
  9129  0559  3E0F               	addlw	low(0Fh)
  9130  055A  1683               	bsf	status, 5	;RP0=1, select bank1
  9131  055B  1303               	bcf	status, 6	;RP1=0, select bank1
  9132  055C  00B8               	movwf	(_IRdistance)^080h	;volatile
  9133  055D  1283               	bcf	status, 5	;RP0=0, select bank0
  9134  055E  1303               	bcf	status, 6	;RP1=0, select bank0
  9135  055F  0827               	movf	(1+(?___lwdiv)),w
  9136  0560  1803               	skipnc
  9137  0561  3E01               	addlw	1
  9138  0562  3E00               	addlw	high(0Fh)
  9139  0563  1683               	bsf	status, 5	;RP0=1, select bank1
  9140  0564  1303               	bcf	status, 6	;RP1=0, select bank1
  9141  0565  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9142                           	line	98
  9143                           ;infrared.c: 98: }
  9144  0566  2F3B               	goto	l3056
  9145                           	line	99
  9146                           	
  9147  0567                     l3043:	
  9148                           	
  9149  0567                     l11267:	
  9150                           ;infrared.c: 99: else if (adcVal >= 170 && adcVal < 213)
  9151  0567  3000               	movlw	high(0AAh)
  9152  0568  1283               	bcf	status, 5	;RP0=0, select bank0
  9153  0569  026D               	subwf	(_adcVal+1),w	;volatile
  9154  056A  30AA               	movlw	low(0AAh)
  9155  056B  1903               	skipnz
  9156  056C  026C               	subwf	(_adcVal),w	;volatile
  9157  056D  1C03               	skipc
  9158  056E  2D70               	goto	u4721
  9159  056F  2D71               	goto	u4720
  9160  0570                     u4721:
  9161  0570  2DB4               	goto	l11273
  9162  0571                     u4720:
  9163                           	
  9164  0571                     l11269:	
  9165  0571  3000               	movlw	high(0D5h)
  9166  0572  026D               	subwf	(_adcVal+1),w	;volatile
  9167  0573  30D5               	movlw	low(0D5h)
  9168  0574  1903               	skipnz
  9169  0575  026C               	subwf	(_adcVal),w	;volatile
  9170  0576  1803               	skipnc
  9171  0577  2D79               	goto	u4731
  9172  0578  2D7A               	goto	u4730
  9173  0579                     u4731:
  9174  0579  2DB4               	goto	l11273
  9175  057A                     u4730:
  9176                           	line	101
  9177                           	
  9178  057A                     l11271:	
  9179                           ;infrared.c: 100: {
  9180                           ;infrared.c: 101: IRdistance = 20 + ((30 - 20)*(213 - adcVal)) / (213 - 170);
  9181  057A  302B               	movlw	low(02Bh)
  9182  057B  00A6               	movwf	(?___lwdiv)
  9183  057C  3000               	movlw	high(02Bh)
  9184  057D  00A7               	movwf	((?___lwdiv))+1
  9185  057E  096C               	comf	(_adcVal),w	;volatile
  9186  057F  00AE               	movwf	(??_ADCconvert+0)+0
  9187  0580  096D               	comf	(_adcVal+1),w	;volatile
  9188  0581  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9189  0582  0AAE               	incf	(??_ADCconvert+0)+0,f
  9190  0583  1903               	skipnz
  9191  0584  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9192  0585  082E               	movf	0+(??_ADCconvert+0)+0,w
  9193  0586  3ED5               	addlw	low(0D5h)
  9194  0587  00A0               	movwf	(?___wmul)
  9195  0588  082F               	movf	1+(??_ADCconvert+0)+0,w
  9196  0589  1803               	skipnc
  9197  058A  3E01               	addlw	1
  9198  058B  3E00               	addlw	high(0D5h)
  9199  058C  00A1               	movwf	1+(?___wmul)
  9200  058D  300A               	movlw	low(0Ah)
  9201  058E  00A2               	movwf	0+(?___wmul)+02h
  9202  058F  3000               	movlw	high(0Ah)
  9203  0590  00A3               	movwf	(0+(?___wmul)+02h)+1
  9204  0591  160A  118A  2081   	fcall	___wmul
              120A  118A         
  9205  0596  1283               	bcf	status, 5	;RP0=0, select bank0
  9206  0597  1303               	bcf	status, 6	;RP1=0, select bank0
  9207  0598  0821               	movf	(1+(?___wmul)),w
  9208  0599  01A9               	clrf	1+(?___lwdiv)+02h
  9209  059A  07A9               	addwf	1+(?___lwdiv)+02h
  9210  059B  0820               	movf	(0+(?___wmul)),w
  9211  059C  01A8               	clrf	0+(?___lwdiv)+02h
  9212  059D  07A8               	addwf	0+(?___lwdiv)+02h
  9213                           
  9214  059E  160A  118A  2356   	fcall	___lwdiv
              120A  118A         
  9215  05A3  1283               	bcf	status, 5	;RP0=0, select bank0
  9216  05A4  1303               	bcf	status, 6	;RP1=0, select bank0
  9217  05A5  0826               	movf	(0+(?___lwdiv)),w
  9218  05A6  3E14               	addlw	low(014h)
  9219  05A7  1683               	bsf	status, 5	;RP0=1, select bank1
  9220  05A8  1303               	bcf	status, 6	;RP1=0, select bank1
  9221  05A9  00B8               	movwf	(_IRdistance)^080h	;volatile
  9222  05AA  1283               	bcf	status, 5	;RP0=0, select bank0
  9223  05AB  1303               	bcf	status, 6	;RP1=0, select bank0
  9224  05AC  0827               	movf	(1+(?___lwdiv)),w
  9225  05AD  1803               	skipnc
  9226  05AE  3E01               	addlw	1
  9227  05AF  3E00               	addlw	high(014h)
  9228  05B0  1683               	bsf	status, 5	;RP0=1, select bank1
  9229  05B1  1303               	bcf	status, 6	;RP1=0, select bank1
  9230  05B2  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9231                           	line	102
  9232                           ;infrared.c: 102: }
  9233  05B3  2F3B               	goto	l3056
  9234                           	line	103
  9235                           	
  9236  05B4                     l3045:	
  9237                           	
  9238  05B4                     l11273:	
  9239                           ;infrared.c: 103: else if (adcVal >= 128 && adcVal < 170)
  9240  05B4  3000               	movlw	high(080h)
  9241  05B5  1283               	bcf	status, 5	;RP0=0, select bank0
  9242  05B6  026D               	subwf	(_adcVal+1),w	;volatile
  9243  05B7  3080               	movlw	low(080h)
  9244  05B8  1903               	skipnz
  9245  05B9  026C               	subwf	(_adcVal),w	;volatile
  9246  05BA  1C03               	skipc
  9247  05BB  2DBD               	goto	u4741
  9248  05BC  2DBE               	goto	u4740
  9249  05BD                     u4741:
  9250  05BD  2E01               	goto	l11279
  9251  05BE                     u4740:
  9252                           	
  9253  05BE                     l11275:	
  9254  05BE  3000               	movlw	high(0AAh)
  9255  05BF  026D               	subwf	(_adcVal+1),w	;volatile
  9256  05C0  30AA               	movlw	low(0AAh)
  9257  05C1  1903               	skipnz
  9258  05C2  026C               	subwf	(_adcVal),w	;volatile
  9259  05C3  1803               	skipnc
  9260  05C4  2DC6               	goto	u4751
  9261  05C5  2DC7               	goto	u4750
  9262  05C6                     u4751:
  9263  05C6  2E01               	goto	l11279
  9264  05C7                     u4750:
  9265                           	line	105
  9266                           	
  9267  05C7                     l11277:	
  9268                           ;infrared.c: 104: {
  9269                           ;infrared.c: 105: IRdistance = 30 + ((40 - 30)*(170 - adcVal)) / (170 - 128);
  9270  05C7  302A               	movlw	low(02Ah)
  9271  05C8  00A6               	movwf	(?___lwdiv)
  9272  05C9  3000               	movlw	high(02Ah)
  9273  05CA  00A7               	movwf	((?___lwdiv))+1
  9274  05CB  096C               	comf	(_adcVal),w	;volatile
  9275  05CC  00AE               	movwf	(??_ADCconvert+0)+0
  9276  05CD  096D               	comf	(_adcVal+1),w	;volatile
  9277  05CE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9278  05CF  0AAE               	incf	(??_ADCconvert+0)+0,f
  9279  05D0  1903               	skipnz
  9280  05D1  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9281  05D2  082E               	movf	0+(??_ADCconvert+0)+0,w
  9282  05D3  3EAA               	addlw	low(0AAh)
  9283  05D4  00A0               	movwf	(?___wmul)
  9284  05D5  082F               	movf	1+(??_ADCconvert+0)+0,w
  9285  05D6  1803               	skipnc
  9286  05D7  3E01               	addlw	1
  9287  05D8  3E00               	addlw	high(0AAh)
  9288  05D9  00A1               	movwf	1+(?___wmul)
  9289  05DA  300A               	movlw	low(0Ah)
  9290  05DB  00A2               	movwf	0+(?___wmul)+02h
  9291  05DC  3000               	movlw	high(0Ah)
  9292  05DD  00A3               	movwf	(0+(?___wmul)+02h)+1
  9293  05DE  160A  118A  2081   	fcall	___wmul
              120A  118A         
  9294  05E3  1283               	bcf	status, 5	;RP0=0, select bank0
  9295  05E4  1303               	bcf	status, 6	;RP1=0, select bank0
  9296  05E5  0821               	movf	(1+(?___wmul)),w
  9297  05E6  01A9               	clrf	1+(?___lwdiv)+02h
  9298  05E7  07A9               	addwf	1+(?___lwdiv)+02h
  9299  05E8  0820               	movf	(0+(?___wmul)),w
  9300  05E9  01A8               	clrf	0+(?___lwdiv)+02h
  9301  05EA  07A8               	addwf	0+(?___lwdiv)+02h
  9302                           
  9303  05EB  160A  118A  2356   	fcall	___lwdiv
              120A  118A         
  9304  05F0  1283               	bcf	status, 5	;RP0=0, select bank0
  9305  05F1  1303               	bcf	status, 6	;RP1=0, select bank0
  9306  05F2  0826               	movf	(0+(?___lwdiv)),w
  9307  05F3  3E1E               	addlw	low(01Eh)
  9308  05F4  1683               	bsf	status, 5	;RP0=1, select bank1
  9309  05F5  1303               	bcf	status, 6	;RP1=0, select bank1
  9310  05F6  00B8               	movwf	(_IRdistance)^080h	;volatile
  9311  05F7  1283               	bcf	status, 5	;RP0=0, select bank0
  9312  05F8  1303               	bcf	status, 6	;RP1=0, select bank0
  9313  05F9  0827               	movf	(1+(?___lwdiv)),w
  9314  05FA  1803               	skipnc
  9315  05FB  3E01               	addlw	1
  9316  05FC  3E00               	addlw	high(01Eh)
  9317  05FD  1683               	bsf	status, 5	;RP0=1, select bank1
  9318  05FE  1303               	bcf	status, 6	;RP1=0, select bank1
  9319  05FF  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9320                           	line	106
  9321                           ;infrared.c: 106: }
  9322  0600  2F3B               	goto	l3056
  9323                           	line	107
  9324                           	
  9325  0601                     l3047:	
  9326                           	
  9327  0601                     l11279:	
  9328                           ;infrared.c: 107: else if (adcVal >= 107 && adcVal < 128)
  9329  0601  3000               	movlw	high(06Bh)
  9330  0602  1283               	bcf	status, 5	;RP0=0, select bank0
  9331  0603  026D               	subwf	(_adcVal+1),w	;volatile
  9332  0604  306B               	movlw	low(06Bh)
  9333  0605  1903               	skipnz
  9334  0606  026C               	subwf	(_adcVal),w	;volatile
  9335  0607  1C03               	skipc
  9336  0608  2E0A               	goto	u4761
  9337  0609  2E0B               	goto	u4760
  9338  060A                     u4761:
  9339  060A  2E4E               	goto	l11285
  9340  060B                     u4760:
  9341                           	
  9342  060B                     l11281:	
  9343  060B  3000               	movlw	high(080h)
  9344  060C  026D               	subwf	(_adcVal+1),w	;volatile
  9345  060D  3080               	movlw	low(080h)
  9346  060E  1903               	skipnz
  9347  060F  026C               	subwf	(_adcVal),w	;volatile
  9348  0610  1803               	skipnc
  9349  0611  2E13               	goto	u4771
  9350  0612  2E14               	goto	u4770
  9351  0613                     u4771:
  9352  0613  2E4E               	goto	l11285
  9353  0614                     u4770:
  9354                           	line	109
  9355                           	
  9356  0614                     l11283:	
  9357                           ;infrared.c: 108: {
  9358                           ;infrared.c: 109: IRdistance = 40 + ((50 - 40)*(128 - adcVal)) / (128 - 107);
  9359  0614  3015               	movlw	low(015h)
  9360  0615  00A6               	movwf	(?___lwdiv)
  9361  0616  3000               	movlw	high(015h)
  9362  0617  00A7               	movwf	((?___lwdiv))+1
  9363  0618  096C               	comf	(_adcVal),w	;volatile
  9364  0619  00AE               	movwf	(??_ADCconvert+0)+0
  9365  061A  096D               	comf	(_adcVal+1),w	;volatile
  9366  061B  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9367  061C  0AAE               	incf	(??_ADCconvert+0)+0,f
  9368  061D  1903               	skipnz
  9369  061E  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9370  061F  082E               	movf	0+(??_ADCconvert+0)+0,w
  9371  0620  3E80               	addlw	low(080h)
  9372  0621  00A0               	movwf	(?___wmul)
  9373  0622  082F               	movf	1+(??_ADCconvert+0)+0,w
  9374  0623  1803               	skipnc
  9375  0624  3E01               	addlw	1
  9376  0625  3E00               	addlw	high(080h)
  9377  0626  00A1               	movwf	1+(?___wmul)
  9378  0627  300A               	movlw	low(0Ah)
  9379  0628  00A2               	movwf	0+(?___wmul)+02h
  9380  0629  3000               	movlw	high(0Ah)
  9381  062A  00A3               	movwf	(0+(?___wmul)+02h)+1
  9382  062B  160A  118A  2081   	fcall	___wmul
              120A  118A         
  9383  0630  1283               	bcf	status, 5	;RP0=0, select bank0
  9384  0631  1303               	bcf	status, 6	;RP1=0, select bank0
  9385  0632  0821               	movf	(1+(?___wmul)),w
  9386  0633  01A9               	clrf	1+(?___lwdiv)+02h
  9387  0634  07A9               	addwf	1+(?___lwdiv)+02h
  9388  0635  0820               	movf	(0+(?___wmul)),w
  9389  0636  01A8               	clrf	0+(?___lwdiv)+02h
  9390  0637  07A8               	addwf	0+(?___lwdiv)+02h
  9391                           
  9392  0638  160A  118A  2356   	fcall	___lwdiv
              120A  118A         
  9393  063D  1283               	bcf	status, 5	;RP0=0, select bank0
  9394  063E  1303               	bcf	status, 6	;RP1=0, select bank0
  9395  063F  0826               	movf	(0+(?___lwdiv)),w
  9396  0640  3E28               	addlw	low(028h)
  9397  0641  1683               	bsf	status, 5	;RP0=1, select bank1
  9398  0642  1303               	bcf	status, 6	;RP1=0, select bank1
  9399  0643  00B8               	movwf	(_IRdistance)^080h	;volatile
  9400  0644  1283               	bcf	status, 5	;RP0=0, select bank0
  9401  0645  1303               	bcf	status, 6	;RP1=0, select bank0
  9402  0646  0827               	movf	(1+(?___lwdiv)),w
  9403  0647  1803               	skipnc
  9404  0648  3E01               	addlw	1
  9405  0649  3E00               	addlw	high(028h)
  9406  064A  1683               	bsf	status, 5	;RP0=1, select bank1
  9407  064B  1303               	bcf	status, 6	;RP1=0, select bank1
  9408  064C  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9409                           	line	110
  9410                           ;infrared.c: 110: }
  9411  064D  2F3B               	goto	l3056
  9412                           	line	111
  9413                           	
  9414  064E                     l3049:	
  9415                           	
  9416  064E                     l11285:	
  9417                           ;infrared.c: 111: else if (adcVal >= 77 && adcVal < 107)
  9418  064E  3000               	movlw	high(04Dh)
  9419  064F  1283               	bcf	status, 5	;RP0=0, select bank0
  9420  0650  026D               	subwf	(_adcVal+1),w	;volatile
  9421  0651  304D               	movlw	low(04Dh)
  9422  0652  1903               	skipnz
  9423  0653  026C               	subwf	(_adcVal),w	;volatile
  9424  0654  1C03               	skipc
  9425  0655  2E57               	goto	u4781
  9426  0656  2E58               	goto	u4780
  9427  0657                     u4781:
  9428  0657  2E9B               	goto	l11291
  9429  0658                     u4780:
  9430                           	
  9431  0658                     l11287:	
  9432  0658  3000               	movlw	high(06Bh)
  9433  0659  026D               	subwf	(_adcVal+1),w	;volatile
  9434  065A  306B               	movlw	low(06Bh)
  9435  065B  1903               	skipnz
  9436  065C  026C               	subwf	(_adcVal),w	;volatile
  9437  065D  1803               	skipnc
  9438  065E  2E60               	goto	u4791
  9439  065F  2E61               	goto	u4790
  9440  0660                     u4791:
  9441  0660  2E9B               	goto	l11291
  9442  0661                     u4790:
  9443                           	line	113
  9444                           	
  9445  0661                     l11289:	
  9446                           ;infrared.c: 112: {
  9447                           ;infrared.c: 113: IRdistance = 50 + ((60 - 50)*(107 - adcVal)) / (107 - 77);
  9448  0661  301E               	movlw	low(01Eh)
  9449  0662  00A6               	movwf	(?___lwdiv)
  9450  0663  3000               	movlw	high(01Eh)
  9451  0664  00A7               	movwf	((?___lwdiv))+1
  9452  0665  096C               	comf	(_adcVal),w	;volatile
  9453  0666  00AE               	movwf	(??_ADCconvert+0)+0
  9454  0667  096D               	comf	(_adcVal+1),w	;volatile
  9455  0668  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9456  0669  0AAE               	incf	(??_ADCconvert+0)+0,f
  9457  066A  1903               	skipnz
  9458  066B  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9459  066C  082E               	movf	0+(??_ADCconvert+0)+0,w
  9460  066D  3E6B               	addlw	low(06Bh)
  9461  066E  00A0               	movwf	(?___wmul)
  9462  066F  082F               	movf	1+(??_ADCconvert+0)+0,w
  9463  0670  1803               	skipnc
  9464  0671  3E01               	addlw	1
  9465  0672  3E00               	addlw	high(06Bh)
  9466  0673  00A1               	movwf	1+(?___wmul)
  9467  0674  300A               	movlw	low(0Ah)
  9468  0675  00A2               	movwf	0+(?___wmul)+02h
  9469  0676  3000               	movlw	high(0Ah)
  9470  0677  00A3               	movwf	(0+(?___wmul)+02h)+1
  9471  0678  160A  118A  2081   	fcall	___wmul
              120A  118A         
  9472  067D  1283               	bcf	status, 5	;RP0=0, select bank0
  9473  067E  1303               	bcf	status, 6	;RP1=0, select bank0
  9474  067F  0821               	movf	(1+(?___wmul)),w
  9475  0680  01A9               	clrf	1+(?___lwdiv)+02h
  9476  0681  07A9               	addwf	1+(?___lwdiv)+02h
  9477  0682  0820               	movf	(0+(?___wmul)),w
  9478  0683  01A8               	clrf	0+(?___lwdiv)+02h
  9479  0684  07A8               	addwf	0+(?___lwdiv)+02h
  9480                           
  9481  0685  160A  118A  2356   	fcall	___lwdiv
              120A  118A         
  9482  068A  1283               	bcf	status, 5	;RP0=0, select bank0
  9483  068B  1303               	bcf	status, 6	;RP1=0, select bank0
  9484  068C  0826               	movf	(0+(?___lwdiv)),w
  9485  068D  3E32               	addlw	low(032h)
  9486  068E  1683               	bsf	status, 5	;RP0=1, select bank1
  9487  068F  1303               	bcf	status, 6	;RP1=0, select bank1
  9488  0690  00B8               	movwf	(_IRdistance)^080h	;volatile
  9489  0691  1283               	bcf	status, 5	;RP0=0, select bank0
  9490  0692  1303               	bcf	status, 6	;RP1=0, select bank0
  9491  0693  0827               	movf	(1+(?___lwdiv)),w
  9492  0694  1803               	skipnc
  9493  0695  3E01               	addlw	1
  9494  0696  3E00               	addlw	high(032h)
  9495  0697  1683               	bsf	status, 5	;RP0=1, select bank1
  9496  0698  1303               	bcf	status, 6	;RP1=0, select bank1
  9497  0699  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9498                           	line	114
  9499                           ;infrared.c: 114: }
  9500  069A  2F3B               	goto	l3056
  9501                           	line	115
  9502                           	
  9503  069B                     l3051:	
  9504                           	
  9505  069B                     l11291:	
  9506                           ;infrared.c: 115: else if (adcVal >= 56 && adcVal < 77)
  9507  069B  3000               	movlw	high(038h)
  9508  069C  1283               	bcf	status, 5	;RP0=0, select bank0
  9509  069D  026D               	subwf	(_adcVal+1),w	;volatile
  9510  069E  3038               	movlw	low(038h)
  9511  069F  1903               	skipnz
  9512  06A0  026C               	subwf	(_adcVal),w	;volatile
  9513  06A1  1C03               	skipc
  9514  06A2  2EA4               	goto	u4801
  9515  06A3  2EA5               	goto	u4800
  9516  06A4                     u4801:
  9517  06A4  2EE8               	goto	l11297
  9518  06A5                     u4800:
  9519                           	
  9520  06A5                     l11293:	
  9521  06A5  3000               	movlw	high(04Dh)
  9522  06A6  026D               	subwf	(_adcVal+1),w	;volatile
  9523  06A7  304D               	movlw	low(04Dh)
  9524  06A8  1903               	skipnz
  9525  06A9  026C               	subwf	(_adcVal),w	;volatile
  9526  06AA  1803               	skipnc
  9527  06AB  2EAD               	goto	u4811
  9528  06AC  2EAE               	goto	u4810
  9529  06AD                     u4811:
  9530  06AD  2EE8               	goto	l11297
  9531  06AE                     u4810:
  9532                           	line	117
  9533                           	
  9534  06AE                     l11295:	
  9535                           ;infrared.c: 116: {
  9536                           ;infrared.c: 117: IRdistance = 60 + ((70 - 60)*(77 - adcVal)) / (77 - 56);
  9537  06AE  3015               	movlw	low(015h)
  9538  06AF  00A6               	movwf	(?___lwdiv)
  9539  06B0  3000               	movlw	high(015h)
  9540  06B1  00A7               	movwf	((?___lwdiv))+1
  9541  06B2  096C               	comf	(_adcVal),w	;volatile
  9542  06B3  00AE               	movwf	(??_ADCconvert+0)+0
  9543  06B4  096D               	comf	(_adcVal+1),w	;volatile
  9544  06B5  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9545  06B6  0AAE               	incf	(??_ADCconvert+0)+0,f
  9546  06B7  1903               	skipnz
  9547  06B8  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9548  06B9  082E               	movf	0+(??_ADCconvert+0)+0,w
  9549  06BA  3E4D               	addlw	low(04Dh)
  9550  06BB  00A0               	movwf	(?___wmul)
  9551  06BC  082F               	movf	1+(??_ADCconvert+0)+0,w
  9552  06BD  1803               	skipnc
  9553  06BE  3E01               	addlw	1
  9554  06BF  3E00               	addlw	high(04Dh)
  9555  06C0  00A1               	movwf	1+(?___wmul)
  9556  06C1  300A               	movlw	low(0Ah)
  9557  06C2  00A2               	movwf	0+(?___wmul)+02h
  9558  06C3  3000               	movlw	high(0Ah)
  9559  06C4  00A3               	movwf	(0+(?___wmul)+02h)+1
  9560  06C5  160A  118A  2081   	fcall	___wmul
              120A  118A         
  9561  06CA  1283               	bcf	status, 5	;RP0=0, select bank0
  9562  06CB  1303               	bcf	status, 6	;RP1=0, select bank0
  9563  06CC  0821               	movf	(1+(?___wmul)),w
  9564  06CD  01A9               	clrf	1+(?___lwdiv)+02h
  9565  06CE  07A9               	addwf	1+(?___lwdiv)+02h
  9566  06CF  0820               	movf	(0+(?___wmul)),w
  9567  06D0  01A8               	clrf	0+(?___lwdiv)+02h
  9568  06D1  07A8               	addwf	0+(?___lwdiv)+02h
  9569                           
  9570  06D2  160A  118A  2356   	fcall	___lwdiv
              120A  118A         
  9571  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
  9572  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
  9573  06D9  0826               	movf	(0+(?___lwdiv)),w
  9574  06DA  3E3C               	addlw	low(03Ch)
  9575  06DB  1683               	bsf	status, 5	;RP0=1, select bank1
  9576  06DC  1303               	bcf	status, 6	;RP1=0, select bank1
  9577  06DD  00B8               	movwf	(_IRdistance)^080h	;volatile
  9578  06DE  1283               	bcf	status, 5	;RP0=0, select bank0
  9579  06DF  1303               	bcf	status, 6	;RP1=0, select bank0
  9580  06E0  0827               	movf	(1+(?___lwdiv)),w
  9581  06E1  1803               	skipnc
  9582  06E2  3E01               	addlw	1
  9583  06E3  3E00               	addlw	high(03Ch)
  9584  06E4  1683               	bsf	status, 5	;RP0=1, select bank1
  9585  06E5  1303               	bcf	status, 6	;RP1=0, select bank1
  9586  06E6  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9587                           	line	118
  9588                           ;infrared.c: 118: }
  9589  06E7  2F3B               	goto	l3056
  9590                           	line	119
  9591                           	
  9592  06E8                     l3053:	
  9593                           	
  9594  06E8                     l11297:	
  9595                           ;infrared.c: 119: else if (adcVal >= 43 && adcVal < 56)
  9596  06E8  3000               	movlw	high(02Bh)
  9597  06E9  1283               	bcf	status, 5	;RP0=0, select bank0
  9598  06EA  026D               	subwf	(_adcVal+1),w	;volatile
  9599  06EB  302B               	movlw	low(02Bh)
  9600  06EC  1903               	skipnz
  9601  06ED  026C               	subwf	(_adcVal),w	;volatile
  9602  06EE  1C03               	skipc
  9603  06EF  2EF1               	goto	u4821
  9604  06F0  2EF2               	goto	u4820
  9605  06F1                     u4821:
  9606  06F1  2F3B               	goto	l3056
  9607  06F2                     u4820:
  9608                           	
  9609  06F2                     l11299:	
  9610  06F2  3000               	movlw	high(038h)
  9611  06F3  026D               	subwf	(_adcVal+1),w	;volatile
  9612  06F4  3038               	movlw	low(038h)
  9613  06F5  1903               	skipnz
  9614  06F6  026C               	subwf	(_adcVal),w	;volatile
  9615  06F7  1803               	skipnc
  9616  06F8  2EFA               	goto	u4831
  9617  06F9  2EFB               	goto	u4830
  9618  06FA                     u4831:
  9619  06FA  2F3B               	goto	l3056
  9620  06FB                     u4830:
  9621                           	line	121
  9622                           	
  9623  06FB                     l11301:	
  9624                           ;infrared.c: 120: {
  9625                           ;infrared.c: 121: IRdistance = 70 + ((80 - 70)*(56 - adcVal)) / (56 - 43);
  9626  06FB  300D               	movlw	low(0Dh)
  9627  06FC  00A6               	movwf	(?___lwdiv)
  9628  06FD  3000               	movlw	high(0Dh)
  9629  06FE  00A7               	movwf	((?___lwdiv))+1
  9630  06FF  096C               	comf	(_adcVal),w	;volatile
  9631  0700  00AE               	movwf	(??_ADCconvert+0)+0
  9632  0701  096D               	comf	(_adcVal+1),w	;volatile
  9633  0702  00AF               	movwf	((??_ADCconvert+0)+0+1)
  9634  0703  0AAE               	incf	(??_ADCconvert+0)+0,f
  9635  0704  1903               	skipnz
  9636  0705  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  9637  0706  082E               	movf	0+(??_ADCconvert+0)+0,w
  9638  0707  3E38               	addlw	low(038h)
  9639  0708  00A0               	movwf	(?___wmul)
  9640  0709  082F               	movf	1+(??_ADCconvert+0)+0,w
  9641  070A  1803               	skipnc
  9642  070B  3E01               	addlw	1
  9643  070C  3E00               	addlw	high(038h)
  9644  070D  00A1               	movwf	1+(?___wmul)
  9645  070E  300A               	movlw	low(0Ah)
  9646  070F  00A2               	movwf	0+(?___wmul)+02h
  9647  0710  3000               	movlw	high(0Ah)
  9648  0711  00A3               	movwf	(0+(?___wmul)+02h)+1
  9649  0712  160A  118A  2081   	fcall	___wmul
              120A  118A         
  9650  0717  1283               	bcf	status, 5	;RP0=0, select bank0
  9651  0718  1303               	bcf	status, 6	;RP1=0, select bank0
  9652  0719  0821               	movf	(1+(?___wmul)),w
  9653  071A  01A9               	clrf	1+(?___lwdiv)+02h
  9654  071B  07A9               	addwf	1+(?___lwdiv)+02h
  9655  071C  0820               	movf	(0+(?___wmul)),w
  9656  071D  01A8               	clrf	0+(?___lwdiv)+02h
  9657  071E  07A8               	addwf	0+(?___lwdiv)+02h
  9658                           
  9659  071F  160A  118A  2356   	fcall	___lwdiv
              120A  118A         
  9660  0724  1283               	bcf	status, 5	;RP0=0, select bank0
  9661  0725  1303               	bcf	status, 6	;RP1=0, select bank0
  9662  0726  0826               	movf	(0+(?___lwdiv)),w
  9663  0727  3E46               	addlw	low(046h)
  9664  0728  1683               	bsf	status, 5	;RP0=1, select bank1
  9665  0729  1303               	bcf	status, 6	;RP1=0, select bank1
  9666  072A  00B8               	movwf	(_IRdistance)^080h	;volatile
  9667  072B  1283               	bcf	status, 5	;RP0=0, select bank0
  9668  072C  1303               	bcf	status, 6	;RP1=0, select bank0
  9669  072D  0827               	movf	(1+(?___lwdiv)),w
  9670  072E  1803               	skipnc
  9671  072F  3E01               	addlw	1
  9672  0730  3E00               	addlw	high(046h)
  9673  0731  1683               	bsf	status, 5	;RP0=1, select bank1
  9674  0732  1303               	bcf	status, 6	;RP1=0, select bank1
  9675  0733  00B9               	movwf	1+(_IRdistance)^080h	;volatile
  9676  0734  2F3B               	goto	l3056
  9677                           	line	122
  9678                           	
  9679  0735                     l3055:	
  9680  0735  2F3B               	goto	l3056
  9681                           	line	123
  9682                           	
  9683  0736                     l3054:	
  9684  0736  2F3B               	goto	l3056
  9685                           	
  9686  0737                     l3052:	
  9687  0737  2F3B               	goto	l3056
  9688                           	
  9689  0738                     l3050:	
  9690  0738  2F3B               	goto	l3056
  9691                           	
  9692  0739                     l3048:	
  9693  0739  2F3B               	goto	l3056
  9694                           	
  9695  073A                     l3046:	
  9696  073A  2F3B               	goto	l3056
  9697                           	
  9698  073B                     l3044:	
  9699                           	
  9700  073B                     l3056:	
  9701  073B  0008               	return
  9702                           	opt stack 0
  9703                           GLOBAL	__end_of_ADCconvert
  9704  073C                     	__end_of_ADCconvert:
  9705 ;; =============== function _ADCconvert ends ============
  9706                           
  9707                           	signat	_ADCconvert,88
  9708                           	global	_rotate
  9709                           psect	text1083,local,class=CODE,delta=2
  9710                           global __ptext1083
  9711  13FB                     __ptext1083:
  9712                           
  9713 ;; *************** function _rotate *****************
  9714 ;; Defined at:
  9715 ;;		line 67 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  numsteps        2    3[BANK0 ] unsigned int 
  9718 ;;  direction       1    5[BANK0 ] unsigned char 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  i               2    8[BANK0 ] unsigned int 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;		None               void
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0, pclath, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9730 ;;      Params:         0       3       0       0       0
  9731 ;;      Locals:         0       2       0       0       0
  9732 ;;      Temps:          0       2       0       0       0
  9733 ;;      Totals:         0       7       0       0       0
  9734 ;;Total ram usage:        7 bytes
  9735 ;; Hardware stack levels used:    1
  9736 ;; Hardware stack levels required when called:    4
  9737 ;; This function calls:
  9738 ;;		_spi_transfer
  9739 ;; This function is called by:
  9740 ;;		_main
  9741 ;;		_Init_Follow_IR
  9742 ;;		_calibrateIR
  9743 ;;		_robotFollow
  9744 ;;		_RightTurn
  9745 ;;		_scan360
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           psect	text1083
  9749                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  9750                           	line	67
  9751                           	global	__size_of_rotate
  9752  0067                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  9753                           	
  9754  13FB                     _rotate:	
  9755                           	opt	stack 3
  9756                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  9757                           	line	69
  9758                           	
  9759  13FB                     l11229:	
  9760                           ;steppermotor.c: 69: RC0 = 1; RC1 = 1;;
  9761  13FB  1283               	bcf	status, 5	;RP0=0, select bank0
  9762  13FC  1303               	bcf	status, 6	;RP1=0, select bank0
  9763  13FD  1407               	bsf	(56/8),(56)&7
  9764  13FE  1487               	bsf	(57/8),(57)&7
  9765                           	line	70
  9766                           	
  9767  13FF                     l11231:	
  9768                           ;steppermotor.c: 70: if (direction == 0)
  9769  13FF  08A5               	movf	(rotate@direction),f
  9770  1400  1D03               	skipz
  9771  1401  2C03               	goto	u4671
  9772  1402  2C04               	goto	u4670
  9773  1403                     u4671:
  9774  1403  2C0B               	goto	l11235
  9775  1404                     u4670:
  9776                           	line	71
  9777                           	
  9778  1404                     l11233:	
  9779                           ;steppermotor.c: 71: spi_transfer(0b00001011);
  9780  1404  300B               	movlw	(0Bh)
  9781  1405  160A  158A  2730   	fcall	_spi_transfer
              160A  118A         
  9782  140A  2C12               	goto	l11237
  9783                           	line	72
  9784                           	
  9785  140B                     l3759:	
  9786                           	line	73
  9787                           	
  9788  140B                     l11235:	
  9789                           ;steppermotor.c: 72: else
  9790                           ;steppermotor.c: 73: spi_transfer(0b00001001);
  9791  140B  3009               	movlw	(09h)
  9792  140C  160A  158A  2730   	fcall	_spi_transfer
              160A  118A         
  9793  1411  2C12               	goto	l11237
  9794                           	
  9795  1412                     l3760:	
  9796                           	line	74
  9797                           	
  9798  1412                     l11237:	
  9799                           ;steppermotor.c: 74: RC0 = 0; RC1 = 0;;
  9800  1412  1283               	bcf	status, 5	;RP0=0, select bank0
  9801  1413  1303               	bcf	status, 6	;RP1=0, select bank0
  9802  1414  1007               	bcf	(56/8),(56)&7
  9803                           	
  9804  1415                     l11239:	
  9805  1415  1087               	bcf	(57/8),(57)&7
  9806                           	line	75
  9807                           	
  9808  1416                     l11241:	
  9809                           ;steppermotor.c: 75: for (unsigned int i = 0; i < numsteps; i++)
  9810  1416  01A8               	clrf	(rotate@i)
  9811  1417  01A9               	clrf	(rotate@i+1)
  9812  1418  2C46               	goto	l3761
  9813                           	line	76
  9814                           	
  9815  1419                     l3762:	
  9816                           	line	77
  9817                           ;steppermotor.c: 76: {
  9818                           ;steppermotor.c: 77: RC2 = 1; _nop(); RC2 = 0;;
  9819  1419  1507               	bsf	(58/8),(58)&7
  9820  141A  0000               	nop
  9821  141B  1283               	bcf	status, 5	;RP0=0, select bank0
  9822  141C  1303               	bcf	status, 6	;RP1=0, select bank0
  9823  141D  1107               	bcf	(58/8),(58)&7
  9824                           	line	78
  9825                           	
  9826  141E                     l11243:	
  9827                           ;steppermotor.c: 78: if (direction)
  9828  141E  0825               	movf	(rotate@direction),w
  9829  141F  1D03               	skipz
  9830  1420  2C22               	goto	u4680
  9831  1421  2C2B               	goto	l11247
  9832  1422                     u4680:
  9833                           	line	79
  9834                           	
  9835  1422                     l11245:	
  9836                           ;steppermotor.c: 79: totalSteps++;
  9837  1422  3001               	movlw	low(01h)
  9838  1423  1683               	bsf	status, 5	;RP0=1, select bank1
  9839  1424  1303               	bcf	status, 6	;RP1=0, select bank1
  9840  1425  07CA               	addwf	(_totalSteps)^080h,f
  9841  1426  1803               	skipnc
  9842  1427  0ACB               	incf	(_totalSteps+1)^080h,f
  9843  1428  3000               	movlw	high(01h)
  9844  1429  07CB               	addwf	(_totalSteps+1)^080h,f
  9845  142A  2C33               	goto	l3764
  9846                           	line	80
  9847                           	
  9848  142B                     l3763:	
  9849                           	line	81
  9850                           	
  9851  142B                     l11247:	
  9852                           ;steppermotor.c: 80: else
  9853                           ;steppermotor.c: 81: totalSteps--;
  9854  142B  30FF               	movlw	low(-1)
  9855  142C  1683               	bsf	status, 5	;RP0=1, select bank1
  9856  142D  1303               	bcf	status, 6	;RP1=0, select bank1
  9857  142E  07CA               	addwf	(_totalSteps)^080h,f
  9858  142F  1803               	skipnc
  9859  1430  0ACB               	incf	(_totalSteps+1)^080h,f
  9860  1431  30FF               	movlw	high(-1)
  9861  1432  07CB               	addwf	(_totalSteps+1)^080h,f
  9862                           	
  9863  1433                     l3764:	
  9864                           	line	82
  9865                           ;steppermotor.c: 82: _delay((unsigned long)((15)*(20000000/4000.0)));
  9866                           	opt asmopt_off
  9867  1433  3062               movlw	98
  9868  1434  1283               	bcf	status, 5	;RP0=0, select bank0
  9869  1435  1303               	bcf	status, 6	;RP1=0, select bank0
  9870  1436  00A7               movwf	((??_rotate+0)+0+1),f
  9871  1437  3065               	movlw	101
  9872  1438  00A6               movwf	((??_rotate+0)+0),f
  9873  1439                     u5537:
  9874  1439  0BA6               	decfsz	((??_rotate+0)+0),f
  9875  143A  2C39               	goto	u5537
  9876  143B  0BA7               	decfsz	((??_rotate+0)+0+1),f
  9877  143C  2C39               	goto	u5537
  9878  143D  2C3E               	nop2
  9879                           opt asmopt_on
  9880                           
  9881                           	line	75
  9882  143E  3001               	movlw	low(01h)
  9883  143F  1283               	bcf	status, 5	;RP0=0, select bank0
  9884  1440  1303               	bcf	status, 6	;RP1=0, select bank0
  9885  1441  07A8               	addwf	(rotate@i),f
  9886  1442  1803               	skipnc
  9887  1443  0AA9               	incf	(rotate@i+1),f
  9888  1444  3000               	movlw	high(01h)
  9889  1445  07A9               	addwf	(rotate@i+1),f
  9890                           	
  9891  1446                     l3761:	
  9892  1446  0824               	movf	(rotate@numsteps+1),w
  9893  1447  0229               	subwf	(rotate@i+1),w
  9894  1448  1D03               	skipz
  9895  1449  2C4C               	goto	u4695
  9896  144A  0823               	movf	(rotate@numsteps),w
  9897  144B  0228               	subwf	(rotate@i),w
  9898  144C                     u4695:
  9899  144C  1C03               	skipc
  9900  144D  2C4F               	goto	u4691
  9901  144E  2C50               	goto	u4690
  9902  144F                     u4691:
  9903  144F  2C19               	goto	l3762
  9904  1450                     u4690:
  9905                           	
  9906  1450                     l3765:	
  9907                           	line	84
  9908                           ;steppermotor.c: 83: }
  9909                           ;steppermotor.c: 84: RC0 = 1; RC1 = 1;;
  9910  1450  1407               	bsf	(56/8),(56)&7
  9911  1451  1487               	bsf	(57/8),(57)&7
  9912                           	line	85
  9913                           	
  9914  1452                     l11249:	
  9915                           ;steppermotor.c: 85: spi_transfer(0b00000000);
  9916  1452  3000               	movlw	(0)
  9917  1453  160A  158A  2730   	fcall	_spi_transfer
              160A  118A         
  9918                           	line	86
  9919                           	
  9920  1458                     l11251:	
  9921                           ;steppermotor.c: 86: RC0 = 0; RC1 = 0;;
  9922  1458  1283               	bcf	status, 5	;RP0=0, select bank0
  9923  1459  1303               	bcf	status, 6	;RP1=0, select bank0
  9924  145A  1007               	bcf	(56/8),(56)&7
  9925                           	
  9926  145B                     l11253:	
  9927  145B  1087               	bcf	(57/8),(57)&7
  9928                           	line	87
  9929                           	
  9930  145C                     l11255:	
  9931                           ;steppermotor.c: 87: RC2 = 1; _nop(); RC2 = 0;;
  9932  145C  1507               	bsf	(58/8),(58)&7
  9933                           	
  9934  145D                     l11257:	
  9935  145D  0000               	nop
  9936                           	
  9937  145E                     l11259:	
  9938  145E  1283               	bcf	status, 5	;RP0=0, select bank0
  9939  145F  1303               	bcf	status, 6	;RP1=0, select bank0
  9940  1460  1107               	bcf	(58/8),(58)&7
  9941                           	line	88
  9942                           	
  9943  1461                     l3766:	
  9944  1461  0008               	return
  9945                           	opt stack 0
  9946                           GLOBAL	__end_of_rotate
  9947  1462                     	__end_of_rotate:
  9948 ;; =============== function _rotate ends ============
  9949                           
  9950                           	signat	_rotate,8312
  9951                           	global	_RobotDrive
  9952                           psect	text1084,local,class=CODE,delta=2
  9953                           global __ptext1084
  9954  11C6                     __ptext1084:
  9955                           
  9956 ;; *************** function _RobotDrive *****************
  9957 ;; Defined at:
  9958 ;;		line 122 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;  speed           2   15[BANK0 ] int 
  9961 ;;  radius          2   17[BANK0 ] int 
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;  radiushighBy    1   23[BANK0 ] unsigned char 
  9964 ;;  radiuslowByt    1   22[BANK0 ] unsigned char 
  9965 ;;  speedhighByt    1   21[BANK0 ] unsigned char 
  9966 ;;  speedlowByte    1   20[BANK0 ] unsigned char 
  9967 ;; Return value:  Size  Location     Type
  9968 ;;		None               void
  9969 ;; Registers used:
  9970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9976 ;;      Params:         0       4       0       0       0
  9977 ;;      Locals:         0       4       0       0       0
  9978 ;;      Temps:          0       1       0       0       0
  9979 ;;      Totals:         0       9       0       0       0
  9980 ;;Total ram usage:        9 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; Hardware stack levels required when called:    4
  9983 ;; This function calls:
  9984 ;;		_ser_putch
  9985 ;; This function is called by:
  9986 ;;		_main
  9987 ;;		_robotFollow
  9988 ;;		_robot_turnRight
  9989 ;;		_robotMoveSpeed
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           psect	text1084
  9993                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  9994                           	line	122
  9995                           	global	__size_of_RobotDrive
  9996  0039                     	__size_of_RobotDrive	equ	__end_of_RobotDrive-_RobotDrive
  9997                           	
  9998  11C6                     _RobotDrive:	
  9999                           	opt	stack 2
 10000                           ; Regs used in _RobotDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10001                           	line	124
 10002                           	
 10003  11C6                     l11213:	
 10004                           ;robot.c: 124: unsigned char speedlowByte = (unsigned char)(speed);
 10005  11C6  1283               	bcf	status, 5	;RP0=0, select bank0
 10006  11C7  1303               	bcf	status, 6	;RP1=0, select bank0
 10007  11C8  082F               	movf	(RobotDrive@speed),w
 10008  11C9  00B3               	movwf	(??_RobotDrive+0)+0
 10009  11CA  0833               	movf	(??_RobotDrive+0)+0,w
 10010  11CB  00B4               	movwf	(RobotDrive@speedlowByte)
 10011                           	line	125
 10012                           	
 10013  11CC                     l11215:	
 10014                           ;robot.c: 125: unsigned char speedhighByte = (unsigned char)(speed >> 8);
 10015  11CC  0830               	movf	(RobotDrive@speed+1),w
 10016  11CD  00B3               	movwf	(??_RobotDrive+0)+0
 10017  11CE  0833               	movf	(??_RobotDrive+0)+0,w
 10018  11CF  00B5               	movwf	(RobotDrive@speedhighByte)
 10019                           	line	126
 10020                           	
 10021  11D0                     l11217:	
 10022                           ;robot.c: 126: unsigned char radiuslowByte = (unsigned char)(radius);
 10023  11D0  0831               	movf	(RobotDrive@radius),w
 10024  11D1  00B3               	movwf	(??_RobotDrive+0)+0
 10025  11D2  0833               	movf	(??_RobotDrive+0)+0,w
 10026  11D3  00B6               	movwf	(RobotDrive@radiuslowByte)
 10027                           	line	127
 10028                           ;robot.c: 127: unsigned char radiushighByte = (unsigned char)(radius >> 8);
 10029  11D4  0832               	movf	(RobotDrive@radius+1),w
 10030  11D5  00B3               	movwf	(??_RobotDrive+0)+0
 10031  11D6  0833               	movf	(??_RobotDrive+0)+0,w
 10032  11D7  00B7               	movwf	(RobotDrive@radiushighByte)
 10033                           	line	129
 10034                           	
 10035  11D8                     l11219:	
 10036                           ;robot.c: 129: ser_putch(137);
 10037  11D8  3089               	movlw	(089h)
 10038  11D9  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10039                           	line	131
 10040                           	
 10041  11DE                     l11221:	
 10042                           ;robot.c: 131: ser_putch(speedhighByte);
 10043  11DE  1283               	bcf	status, 5	;RP0=0, select bank0
 10044  11DF  1303               	bcf	status, 6	;RP1=0, select bank0
 10045  11E0  0835               	movf	(RobotDrive@speedhighByte),w
 10046  11E1  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10047                           	line	133
 10048                           	
 10049  11E6                     l11223:	
 10050                           ;robot.c: 133: ser_putch(speedlowByte);
 10051  11E6  1283               	bcf	status, 5	;RP0=0, select bank0
 10052  11E7  1303               	bcf	status, 6	;RP1=0, select bank0
 10053  11E8  0834               	movf	(RobotDrive@speedlowByte),w
 10054  11E9  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10055                           	line	135
 10056                           	
 10057  11EE                     l11225:	
 10058                           ;robot.c: 135: ser_putch(radiushighByte);
 10059  11EE  1283               	bcf	status, 5	;RP0=0, select bank0
 10060  11EF  1303               	bcf	status, 6	;RP1=0, select bank0
 10061  11F0  0837               	movf	(RobotDrive@radiushighByte),w
 10062  11F1  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10063                           	line	137
 10064                           	
 10065  11F6                     l11227:	
 10066                           ;robot.c: 137: ser_putch(radiuslowByte);
 10067  11F6  1283               	bcf	status, 5	;RP0=0, select bank0
 10068  11F7  1303               	bcf	status, 6	;RP1=0, select bank0
 10069  11F8  0836               	movf	(RobotDrive@radiuslowByte),w
 10070  11F9  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10071                           	line	138
 10072                           	
 10073  11FE                     l6113:	
 10074  11FE  0008               	return
 10075                           	opt stack 0
 10076                           GLOBAL	__end_of_RobotDrive
 10077  11FF                     	__end_of_RobotDrive:
 10078 ;; =============== function _RobotDrive ends ============
 10079                           
 10080                           	signat	_RobotDrive,8312
 10081                           	global	_robotLoadSong
 10082                           psect	text1085,local,class=CODE,delta=2
 10083                           global __ptext1085
 10084  13A6                     __ptext1085:
 10085                           
 10086 ;; *************** function _robotLoadSong *****************
 10087 ;; Defined at:
 10088 ;;		line 499 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;		None
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;		None
 10093 ;; Return value:  Size  Location     Type
 10094 ;;		None               void
 10095 ;; Registers used:
 10096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10102 ;;      Params:         0       0       0       0       0
 10103 ;;      Locals:         0       0       0       0       0
 10104 ;;      Temps:          0       0       0       0       0
 10105 ;;      Totals:         0       0       0       0       0
 10106 ;;Total ram usage:        0 bytes
 10107 ;; Hardware stack levels used:    1
 10108 ;; Hardware stack levels required when called:    4
 10109 ;; This function calls:
 10110 ;;		_ser_putch
 10111 ;; This function is called by:
 10112 ;;		_main
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           psect	text1085
 10116                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 10117                           	line	499
 10118                           	global	__size_of_robotLoadSong
 10119  0055                     	__size_of_robotLoadSong	equ	__end_of_robotLoadSong-_robotLoadSong
 10120                           	
 10121  13A6                     _robotLoadSong:	
 10122                           	opt	stack 3
 10123                           ; Regs used in _robotLoadSong: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10124                           	line	500
 10125                           	
 10126  13A6                     l11211:	
 10127                           ;robot.c: 500: ser_putch(140);
 10128  13A6  308C               	movlw	(08Ch)
 10129  13A7  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10130                           	line	501
 10131                           ;robot.c: 501: ser_putch(0);
 10132  13AC  3000               	movlw	(0)
 10133  13AD  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10134                           	line	502
 10135                           ;robot.c: 502: ser_putch(2);
 10136  13B2  3002               	movlw	(02h)
 10137  13B3  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10138                           	line	503
 10139                           ;robot.c: 503: ser_putch(72);
 10140  13B8  3048               	movlw	(048h)
 10141  13B9  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10142                           	line	504
 10143                           ;robot.c: 504: ser_putch(16);
 10144  13BE  3010               	movlw	(010h)
 10145  13BF  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10146                           	line	505
 10147                           ;robot.c: 505: ser_putch(84);
 10148  13C4  3054               	movlw	(054h)
 10149  13C5  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10150                           	line	506
 10151                           ;robot.c: 506: ser_putch(16);
 10152  13CA  3010               	movlw	(010h)
 10153  13CB  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10154                           	line	508
 10155                           ;robot.c: 508: ser_putch(140);
 10156  13D0  308C               	movlw	(08Ch)
 10157  13D1  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10158                           	line	509
 10159                           ;robot.c: 509: ser_putch(1);
 10160  13D6  3001               	movlw	(01h)
 10161  13D7  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10162                           	line	510
 10163                           ;robot.c: 510: ser_putch(2);
 10164  13DC  3002               	movlw	(02h)
 10165  13DD  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10166                           	line	511
 10167                           ;robot.c: 511: ser_putch(84);
 10168  13E2  3054               	movlw	(054h)
 10169  13E3  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10170                           	line	512
 10171                           ;robot.c: 512: ser_putch(16);
 10172  13E8  3010               	movlw	(010h)
 10173  13E9  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10174                           	line	513
 10175                           ;robot.c: 513: ser_putch(72);
 10176  13EE  3048               	movlw	(048h)
 10177  13EF  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10178                           	line	514
 10179                           ;robot.c: 514: ser_putch(16);
 10180  13F4  3010               	movlw	(010h)
 10181  13F5  160A  118A  2105   	fcall	_ser_putch
              160A  118A         
 10182                           	line	515
 10183                           	
 10184  13FA                     l6200:	
 10185  13FA  0008               	return
 10186                           	opt stack 0
 10187                           GLOBAL	__end_of_robotLoadSong
 10188  13FB                     	__end_of_robotLoadSong:
 10189 ;; =============== function _robotLoadSong ends ============
 10190                           
 10191                           	signat	_robotLoadSong,88
 10192                           	global	_robo_init
 10193                           psect	text1086,local,class=CODE,delta=2
 10194                           global __ptext1086
 10195  1F9D                     __ptext1086:
 10196                           
 10197 ;; *************** function _robo_init *****************
 10198 ;; Defined at:
 10199 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;		None
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;		None
 10204 ;; Return value:  Size  Location     Type
 10205 ;;		None               void
 10206 ;; Registers used:
 10207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10213 ;;      Params:         0       0       0       0       0
 10214 ;;      Locals:         0       0       0       0       0
 10215 ;;      Temps:          0       0       0       0       0
 10216 ;;      Totals:         0       0       0       0       0
 10217 ;;Total ram usage:        0 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:    4
 10220 ;; This function calls:
 10221 ;;		_ser_putch
 10222 ;; This function is called by:
 10223 ;;		_init
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           psect	text1086
 10227                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
 10228                           	line	42
 10229                           	global	__size_of_robo_init
 10230  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
 10231                           	
 10232  1F9D                     _robo_init:	
 10233                           	opt	stack 2
 10234                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10235                           	line	43
 10236                           	
 10237  1F9D                     l11209:	
 10238                           ;robot.c: 43: ser_putch(128);
 10239  1F9D  3080               	movlw	(080h)
 10240  1F9E  160A  118A  2105   	fcall	_ser_putch
              160A  158A         
 10241                           	line	44
 10242                           ;robot.c: 44: ser_putch(132);
 10243  1FA3  3084               	movlw	(084h)
 10244  1FA4  160A  118A  2105   	fcall	_ser_putch
              160A  158A         
 10245                           	line	45
 10246                           ;robot.c: 45: ser_putch(150);
 10247  1FA9  3096               	movlw	(096h)
 10248  1FAA  160A  118A  2105   	fcall	_ser_putch
              160A  158A         
 10249                           	line	46
 10250                           ;robot.c: 46: ser_putch(0);
 10251  1FAF  3000               	movlw	(0)
 10252  1FB0  160A  118A  2105   	fcall	_ser_putch
              160A  158A         
 10253                           	line	47
 10254                           	
 10255  1FB5                     l6100:	
 10256  1FB5  0008               	return
 10257                           	opt stack 0
 10258                           GLOBAL	__end_of_robo_init
 10259  1FB6                     	__end_of_robo_init:
 10260 ;; =============== function _robo_init ends ============
 10261                           
 10262                           	signat	_robo_init,88
 10263                           	global	_lcd_write_data
 10264                           psect	text1087,local,class=CODE,delta=2
 10265                           global __ptext1087
 10266  1F0A                     __ptext1087:
 10267                           
 10268 ;; *************** function _lcd_write_data *****************
 10269 ;; Defined at:
 10270 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  databyte        1    wreg     unsigned char 
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;  databyte        1    2[BANK0 ] unsigned char 
 10275 ;; Return value:  Size  Location     Type
 10276 ;;		None               void
 10277 ;; Registers used:
 10278 ;;		wreg
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10284 ;;      Params:         0       0       0       0       0
 10285 ;;      Locals:         0       1       0       0       0
 10286 ;;      Temps:          0       2       0       0       0
 10287 ;;      Totals:         0       3       0       0       0
 10288 ;;Total ram usage:        3 bytes
 10289 ;; Hardware stack levels used:    1
 10290 ;; Hardware stack levels required when called:    3
 10291 ;; This function calls:
 10292 ;;		Nothing
 10293 ;; This function is called by:
 10294 ;;		_lcd_write_string
 10295 ;;		_lcd_write_2_digit_bcd
 10296 ;;		_lcd_write_3_digit_bcd
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           psect	text1087
 10300                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 10301                           	line	30
 10302                           	global	__size_of_lcd_write_data
 10303  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
 10304                           	
 10305  1F0A                     _lcd_write_data:	
 10306                           	opt	stack 1
 10307                           ; Regs used in _lcd_write_data: [wreg]
 10308                           ;lcd_write_data@databyte stored from wreg
 10309  1F0A  1283               	bcf	status, 5	;RP0=0, select bank0
 10310  1F0B  1303               	bcf	status, 6	;RP1=0, select bank0
 10311  1F0C  00A2               	movwf	(lcd_write_data@databyte)
 10312                           	line	31
 10313                           	
 10314  1F0D                     l11201:	
 10315                           ;lcd.c: 31: RE2 = 0;
 10316  1F0D  1109               	bcf	(74/8),(74)&7
 10317                           	line	32
 10318                           ;lcd.c: 32: RE1 = 0;
 10319  1F0E  1089               	bcf	(73/8),(73)&7
 10320                           	line	33
 10321                           ;lcd.c: 33: RE0 = 1;
 10322  1F0F  1409               	bsf	(72/8),(72)&7
 10323                           	line	34
 10324                           	
 10325  1F10                     l11203:	
 10326                           ;lcd.c: 34: PORTD = databyte;
 10327  1F10  0822               	movf	(lcd_write_data@databyte),w
 10328  1F11  0088               	movwf	(8)	;volatile
 10329                           	line	35
 10330                           	
 10331  1F12                     l11205:	
 10332                           ;lcd.c: 35: RE2 = 1;
 10333  1F12  1509               	bsf	(74/8),(74)&7
 10334                           	line	36
 10335                           	
 10336  1F13                     l11207:	
 10337                           ;lcd.c: 36: RE2 = 0;
 10338  1F13  1109               	bcf	(74/8),(74)&7
 10339                           	line	37
 10340                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
 10341                           	opt asmopt_off
 10342  1F14  3007               movlw	7
 10343  1F15  00A1               movwf	((??_lcd_write_data+0)+0+1),f
 10344  1F16  307D               	movlw	125
 10345  1F17  00A0               movwf	((??_lcd_write_data+0)+0),f
 10346  1F18                     u5547:
 10347  1F18  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
 10348  1F19  2F18               	goto	u5547
 10349  1F1A  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
 10350  1F1B  2F18               	goto	u5547
 10351                           opt asmopt_on
 10352                           
 10353                           	line	38
 10354                           	
 10355  1F1C                     l1402:	
 10356  1F1C  0008               	return
 10357                           	opt stack 0
 10358                           GLOBAL	__end_of_lcd_write_data
 10359  1F1D                     	__end_of_lcd_write_data:
 10360 ;; =============== function _lcd_write_data ends ============
 10361                           
 10362                           	signat	_lcd_write_data,4216
 10363                           	global	_lcd_write_control
 10364                           psect	text1088,local,class=CODE,delta=2
 10365                           global __ptext1088
 10366  1F44                     __ptext1088:
 10367                           
 10368 ;; *************** function _lcd_write_control *****************
 10369 ;; Defined at:
 10370 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;  databyte        1    wreg     unsigned char 
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;  databyte        1    2[BANK0 ] unsigned char 
 10375 ;; Return value:  Size  Location     Type
 10376 ;;		None               void
 10377 ;; Registers used:
 10378 ;;		wreg
 10379 ;; Tracked objects:
 10380 ;;		On entry : 0/0
 10381 ;;		On exit  : 0/0
 10382 ;;		Unchanged: 0/0
 10383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10384 ;;      Params:         0       0       0       0       0
 10385 ;;      Locals:         0       1       0       0       0
 10386 ;;      Temps:          0       2       0       0       0
 10387 ;;      Totals:         0       3       0       0       0
 10388 ;;Total ram usage:        3 bytes
 10389 ;; Hardware stack levels used:    1
 10390 ;; Hardware stack levels required when called:    3
 10391 ;; This function calls:
 10392 ;;		Nothing
 10393 ;; This function is called by:
 10394 ;;		_lcd_set_cursor
 10395 ;;		_lcd_init
 10396 ;;		_UpdateDisplay
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           psect	text1088
 10400                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
 10401                           	line	18
 10402                           	global	__size_of_lcd_write_control
 10403  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
 10404                           	
 10405  1F44                     _lcd_write_control:	
 10406                           	opt	stack 1
 10407                           ; Regs used in _lcd_write_control: [wreg]
 10408                           ;lcd_write_control@databyte stored from wreg
 10409  1F44  1283               	bcf	status, 5	;RP0=0, select bank0
 10410  1F45  1303               	bcf	status, 6	;RP1=0, select bank0
 10411  1F46  00A2               	movwf	(lcd_write_control@databyte)
 10412                           	line	19
 10413                           	
 10414  1F47                     l11193:	
 10415                           ;lcd.c: 19: RE2 = 0;
 10416  1F47  1109               	bcf	(74/8),(74)&7
 10417                           	line	20
 10418                           ;lcd.c: 20: RE1 = 0;
 10419  1F48  1089               	bcf	(73/8),(73)&7
 10420                           	line	21
 10421                           ;lcd.c: 21: RE0 = 0;
 10422  1F49  1009               	bcf	(72/8),(72)&7
 10423                           	line	22
 10424                           	
 10425  1F4A                     l11195:	
 10426                           ;lcd.c: 22: PORTD = databyte;
 10427  1F4A  0822               	movf	(lcd_write_control@databyte),w
 10428  1F4B  0088               	movwf	(8)	;volatile
 10429                           	line	23
 10430                           	
 10431  1F4C                     l11197:	
 10432                           ;lcd.c: 23: RE2 = 1;
 10433  1F4C  1509               	bsf	(74/8),(74)&7
 10434                           	line	24
 10435                           	
 10436  1F4D                     l11199:	
 10437                           ;lcd.c: 24: RE2 = 0;
 10438  1F4D  1109               	bcf	(74/8),(74)&7
 10439                           	line	25
 10440                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
 10441                           	opt asmopt_off
 10442  1F4E  300D               movlw	13
 10443  1F4F  00A1               movwf	((??_lcd_write_control+0)+0+1),f
 10444  1F50  30FB               	movlw	251
 10445  1F51  00A0               movwf	((??_lcd_write_control+0)+0),f
 10446  1F52                     u5557:
 10447  1F52  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
 10448  1F53  2F52               	goto	u5557
 10449  1F54  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
 10450  1F55  2F52               	goto	u5557
 10451  1F56  2F57               	nop2
 10452                           opt asmopt_on
 10453                           
 10454                           	line	26
 10455                           	
 10456  1F57                     l1399:	
 10457  1F57  0008               	return
 10458                           	opt stack 0
 10459                           GLOBAL	__end_of_lcd_write_control
 10460  1F58                     	__end_of_lcd_write_control:
 10461 ;; =============== function _lcd_write_control ends ============
 10462                           
 10463                           	signat	_lcd_write_control,4216
 10464                           	global	_init_adc
 10465                           psect	text1089,local,class=CODE,delta=2
 10466                           global __ptext1089
 10467  1F58                     __ptext1089:
 10468                           
 10469 ;; *************** function _init_adc *****************
 10470 ;; Defined at:
 10471 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;		None
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;		None
 10476 ;; Return value:  Size  Location     Type
 10477 ;;		None               void
 10478 ;; Registers used:
 10479 ;;		wreg, status,2
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10485 ;;      Params:         0       0       0       0       0
 10486 ;;      Locals:         0       0       0       0       0
 10487 ;;      Temps:          0       1       0       0       0
 10488 ;;      Totals:         0       1       0       0       0
 10489 ;;Total ram usage:        1 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:    3
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_init
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           psect	text1089
 10499                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10500                           	line	61
 10501                           	global	__size_of_init_adc
 10502  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
 10503                           	
 10504  1F58                     _init_adc:	
 10505                           	opt	stack 3
 10506                           ; Regs used in _init_adc: [wreg+status,2]
 10507                           	line	63
 10508                           	
 10509  1F58                     l11183:	
 10510                           ;adc.c: 63: PORTA = 0;
 10511  1F58  1283               	bcf	status, 5	;RP0=0, select bank0
 10512  1F59  1303               	bcf	status, 6	;RP1=0, select bank0
 10513  1F5A  0185               	clrf	(5)	;volatile
 10514                           	line	64
 10515                           	
 10516  1F5B                     l11185:	
 10517                           ;adc.c: 64: TRISA = 0b00111111;
 10518  1F5B  303F               	movlw	(03Fh)
 10519  1F5C  1683               	bsf	status, 5	;RP0=1, select bank1
 10520  1F5D  1303               	bcf	status, 6	;RP1=0, select bank1
 10521  1F5E  0085               	movwf	(133)^080h	;volatile
 10522                           	line	67
 10523                           	
 10524  1F5F                     l11187:	
 10525                           ;adc.c: 67: ADCON0 = 0b10100001;
 10526  1F5F  30A1               	movlw	(0A1h)
 10527  1F60  1283               	bcf	status, 5	;RP0=0, select bank0
 10528  1F61  1303               	bcf	status, 6	;RP1=0, select bank0
 10529  1F62  009F               	movwf	(31)	;volatile
 10530                           	line	68
 10531                           	
 10532  1F63                     l11189:	
 10533                           ;adc.c: 68: ADCON1 = 0b0000010;
 10534  1F63  3002               	movlw	(02h)
 10535  1F64  1683               	bsf	status, 5	;RP0=1, select bank1
 10536  1F65  1303               	bcf	status, 6	;RP1=0, select bank1
 10537  1F66  009F               	movwf	(159)^080h	;volatile
 10538                           	line	70
 10539                           	
 10540  1F67                     l11191:	
 10541                           ;adc.c: 70: _delay((unsigned long)((50)*(20000000/4000000.0)));
 10542                           	opt asmopt_off
 10543  1F67  3053               movlw	83
 10544  1F68  1283               	bcf	status, 5	;RP0=0, select bank0
 10545  1F69  1303               	bcf	status, 6	;RP1=0, select bank0
 10546  1F6A  00A0               movwf	(??_init_adc+0)+0,f
 10547  1F6B                     u5567:
 10548  1F6B  0BA0               decfsz	(??_init_adc+0)+0,f
 10549  1F6C  2F6B               	goto	u5567
 10550                           opt asmopt_on
 10551                           
 10552                           	line	72
 10553                           	
 10554  1F6D                     l700:	
 10555  1F6D  0008               	return
 10556                           	opt stack 0
 10557                           GLOBAL	__end_of_init_adc
 10558  1F6E                     	__end_of_init_adc:
 10559 ;; =============== function _init_adc ends ============
 10560                           
 10561                           	signat	_init_adc,88
 10562                           	global	_adc_read_channel
 10563                           psect	text1090,local,class=CODE,delta=2
 10564                           global __ptext1090
 10565  11FF                     __ptext1090:
 10566                           
 10567 ;; *************** function _adc_read_channel *****************
 10568 ;; Defined at:
 10569 ;;		line 20 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;  channel         1    wreg     unsigned char 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;  channel         1    7[BANK0 ] unsigned char 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      unsigned char 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10583 ;;      Params:         0       0       0       0       0
 10584 ;;      Locals:         0       1       0       0       0
 10585 ;;      Temps:          0       1       0       0       0
 10586 ;;      Totals:         0       2       0       0       0
 10587 ;;Total ram usage:        2 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    4
 10590 ;; This function calls:
 10591 ;;		_adc_read
 10592 ;; This function is called by:
 10593 ;;		_readDistance
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           psect	text1090
 10597                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 10598                           	line	20
 10599                           	global	__size_of_adc_read_channel
 10600  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
 10601                           	
 10602  11FF                     _adc_read_channel:	
 10603                           	opt	stack 0
 10604                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10605                           ;adc_read_channel@channel stored from wreg
 10606  11FF  1283               	bcf	status, 5	;RP0=0, select bank0
 10607  1200  1303               	bcf	status, 6	;RP1=0, select bank0
 10608  1201  00A7               	movwf	(adc_read_channel@channel)
 10609                           	line	21
 10610                           	
 10611  1202                     l11167:	
 10612                           ;adc.c: 21: switch(channel)
 10613  1202  2A1B               	goto	l11175
 10614                           	line	23
 10615                           ;adc.c: 22: {
 10616                           ;adc.c: 23: case 0:
 10617                           	
 10618  1203                     l690:	
 10619                           	line	24
 10620                           ;adc.c: 24: CHS0 = 0;
 10621  1203  119F               	bcf	(251/8),(251)&7
 10622                           	line	25
 10623                           ;adc.c: 25: CHS1 = 0;
 10624  1204  121F               	bcf	(252/8),(252)&7
 10625                           	line	26
 10626                           ;adc.c: 26: CHS2 = 0;
 10627  1205  129F               	bcf	(253/8),(253)&7
 10628                           	line	27
 10629                           ;adc.c: 27: break;
 10630  1206  2A2C               	goto	l11177
 10631                           	line	28
 10632                           ;adc.c: 28: case 1:
 10633                           	
 10634  1207                     l692:	
 10635                           	line	29
 10636                           ;adc.c: 29: CHS0 = 1;
 10637  1207  159F               	bsf	(251/8),(251)&7
 10638                           	line	30
 10639                           ;adc.c: 30: CHS1 = 0;
 10640  1208  121F               	bcf	(252/8),(252)&7
 10641                           	line	31
 10642                           ;adc.c: 31: CHS2 = 0;
 10643  1209  129F               	bcf	(253/8),(253)&7
 10644                           	line	32
 10645                           ;adc.c: 32: break;
 10646  120A  2A2C               	goto	l11177
 10647                           	line	33
 10648                           ;adc.c: 33: case 2:
 10649                           	
 10650  120B                     l693:	
 10651                           	line	34
 10652                           ;adc.c: 34: CHS0 = 0;
 10653  120B  119F               	bcf	(251/8),(251)&7
 10654                           	line	35
 10655                           ;adc.c: 35: CHS1 = 1;
 10656  120C  161F               	bsf	(252/8),(252)&7
 10657                           	line	36
 10658                           ;adc.c: 36: CHS2 = 0;
 10659  120D  129F               	bcf	(253/8),(253)&7
 10660                           	line	37
 10661                           ;adc.c: 37: break;
 10662  120E  2A2C               	goto	l11177
 10663                           	line	38
 10664                           ;adc.c: 38: case 3:
 10665                           	
 10666  120F                     l694:	
 10667                           	line	39
 10668                           ;adc.c: 39: CHS0 = 1;
 10669  120F  159F               	bsf	(251/8),(251)&7
 10670                           	line	40
 10671                           ;adc.c: 40: CHS1 = 1;
 10672  1210  161F               	bsf	(252/8),(252)&7
 10673                           	line	41
 10674                           ;adc.c: 41: CHS2 = 0;
 10675  1211  129F               	bcf	(253/8),(253)&7
 10676                           	line	42
 10677                           ;adc.c: 42: break;
 10678  1212  2A2C               	goto	l11177
 10679                           	line	43
 10680                           ;adc.c: 43: case 4:
 10681                           	
 10682  1213                     l695:	
 10683                           	line	44
 10684                           ;adc.c: 44: CHS0 = 0;
 10685  1213  119F               	bcf	(251/8),(251)&7
 10686                           	line	45
 10687                           ;adc.c: 45: CHS1 = 0;
 10688  1214  121F               	bcf	(252/8),(252)&7
 10689                           	line	46
 10690                           ;adc.c: 46: CHS2 = 1;
 10691  1215  169F               	bsf	(253/8),(253)&7
 10692                           	line	47
 10693                           ;adc.c: 47: break;
 10694  1216  2A2C               	goto	l11177
 10695                           	line	50
 10696                           ;adc.c: 50: default:
 10697                           	
 10698  1217                     l696:	
 10699                           	line	51
 10700                           	
 10701  1217                     l11169:	
 10702                           ;adc.c: 51: return 0;
 10703  1217  3000               	movlw	(0)
 10704  1218  2A39               	goto	l697
 10705                           	
 10706  1219                     l11171:	
 10707  1219  2A39               	goto	l697
 10708                           	line	52
 10709                           	
 10710  121A                     l11173:	
 10711                           ;adc.c: 52: }
 10712  121A  2A2C               	goto	l11177
 10713                           	line	21
 10714                           	
 10715  121B                     l689:	
 10716                           	
 10717  121B                     l11175:	
 10718  121B  0827               	movf	(adc_read_channel@channel),w
 10719                           	; Switch size 1, requested type "space"
 10720                           ; Number of cases is 5, Range of values is 0 to 4
 10721                           ; switch strategies available:
 10722                           ; Name         Instructions Cycles
 10723                           ; simple_byte           16     9 (average)
 10724                           ; direct_byte           23     8 (fixed)
 10725                           ; jumptable            260     6 (fixed)
 10726                           ; rangetable             9     6 (fixed)
 10727                           ; spacedrange           16     9 (fixed)
 10728                           ; locatedrange           5     3 (fixed)
 10729                           ;	Chosen strategy is simple_byte
 10730                           
 10731                           	opt asmopt_off
 10732  121C  3A00               	xorlw	0^0	; case 0
 10733  121D  1903               	skipnz
 10734  121E  2A03               	goto	l690
 10735  121F  3A01               	xorlw	1^0	; case 1
 10736  1220  1903               	skipnz
 10737  1221  2A07               	goto	l692
 10738  1222  3A03               	xorlw	2^1	; case 2
 10739  1223  1903               	skipnz
 10740  1224  2A0B               	goto	l693
 10741  1225  3A01               	xorlw	3^2	; case 3
 10742  1226  1903               	skipnz
 10743  1227  2A0F               	goto	l694
 10744  1228  3A07               	xorlw	4^3	; case 4
 10745  1229  1903               	skipnz
 10746  122A  2A13               	goto	l695
 10747  122B  2A17               	goto	l11169
 10748                           	opt asmopt_on
 10749                           
 10750                           	line	52
 10751                           	
 10752  122C                     l691:	
 10753                           	line	54
 10754                           	
 10755  122C                     l11177:	
 10756                           ;adc.c: 54: _delay((unsigned long)((50)*(20000000/4000000.0)));
 10757                           	opt asmopt_off
 10758  122C  3053               movlw	83
 10759  122D  00A6               movwf	(??_adc_read_channel+0)+0,f
 10760  122E                     u5577:
 10761  122E  0BA6               decfsz	(??_adc_read_channel+0)+0,f
 10762  122F  2A2E               	goto	u5577
 10763                           opt asmopt_on
 10764                           
 10765                           	line	56
 10766                           	
 10767  1230                     l11179:	
 10768                           ;adc.c: 56: return adc_read();
 10769  1230  160A  158A  27D7   	fcall	_adc_read
              160A  118A         
 10770  1235  1283               	bcf	status, 5	;RP0=0, select bank0
 10771  1236  1303               	bcf	status, 6	;RP1=0, select bank0
 10772  1237  0820               	movf	(0+(?_adc_read)),w
 10773  1238  2A39               	goto	l697
 10774                           	
 10775  1239                     l11181:	
 10776                           	line	58
 10777                           	
 10778  1239                     l697:	
 10779  1239  0008               	return
 10780                           	opt stack 0
 10781                           GLOBAL	__end_of_adc_read_channel
 10782  123A                     	__end_of_adc_read_channel:
 10783 ;; =============== function _adc_read_channel ends ============
 10784                           
 10785                           	signat	_adc_read_channel,4217
 10786                           	global	___awmod
 10787                           psect	text1091,local,class=CODE,delta=2
 10788                           global __ptext1091
 10789  0801                     __ptext1091:
 10790                           
 10791 ;; *************** function ___awmod *****************
 10792 ;; Defined at:
 10793 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10794 ;; Parameters:    Size  Location     Type
 10795 ;;  divisor         2    0[BANK0 ] int 
 10796 ;;  dividend        2    2[BANK0 ] int 
 10797 ;; Auto vars:     Size  Location     Type
 10798 ;;  sign            1    6[BANK0 ] unsigned char 
 10799 ;;  counter         1    5[BANK0 ] unsigned char 
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  2    0[BANK0 ] int 
 10802 ;; Registers used:
 10803 ;;		wreg, status,2, status,0
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10809 ;;      Params:         0       4       0       0       0
 10810 ;;      Locals:         0       2       0       0       0
 10811 ;;      Temps:          0       1       0       0       0
 10812 ;;      Totals:         0       7       0       0       0
 10813 ;;Total ram usage:        7 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:    3
 10816 ;; This function calls:
 10817 ;;		Nothing
 10818 ;; This function is called by:
 10819 ;;		_UpdateDisplay
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           psect	text1091
 10823                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
 10824                           	line	5
 10825                           	global	__size_of___awmod
 10826  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
 10827                           	
 10828  0801                     ___awmod:	
 10829                           	opt	stack 2
 10830                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10831                           	line	8
 10832                           	
 10833  0801                     l11111:	
 10834  0801  1283               	bcf	status, 5	;RP0=0, select bank0
 10835  0802  1303               	bcf	status, 6	;RP1=0, select bank0
 10836  0803  01A6               	clrf	(___awmod@sign)
 10837                           	line	9
 10838  0804  1FA3               	btfss	(___awmod@dividend+1),7
 10839  0805  2807               	goto	u4521
 10840  0806  2808               	goto	u4520
 10841  0807                     u4521:
 10842  0807  2811               	goto	l11115
 10843  0808                     u4520:
 10844                           	line	10
 10845                           	
 10846  0808                     l11113:	
 10847  0808  09A2               	comf	(___awmod@dividend),f
 10848  0809  09A3               	comf	(___awmod@dividend+1),f
 10849  080A  0AA2               	incf	(___awmod@dividend),f
 10850  080B  1903               	skipnz
 10851  080C  0AA3               	incf	(___awmod@dividend+1),f
 10852                           	line	11
 10853  080D  01A6               	clrf	(___awmod@sign)
 10854  080E  1403               	bsf	status,0
 10855  080F  0DA6               	rlf	(___awmod@sign),f
 10856  0810  2811               	goto	l11115
 10857                           	line	12
 10858                           	
 10859  0811                     l7853:	
 10860                           	line	13
 10861                           	
 10862  0811                     l11115:	
 10863  0811  1FA1               	btfss	(___awmod@divisor+1),7
 10864  0812  2814               	goto	u4531
 10865  0813  2815               	goto	u4530
 10866  0814                     u4531:
 10867  0814  281B               	goto	l11119
 10868  0815                     u4530:
 10869                           	line	14
 10870                           	
 10871  0815                     l11117:	
 10872  0815  09A0               	comf	(___awmod@divisor),f
 10873  0816  09A1               	comf	(___awmod@divisor+1),f
 10874  0817  0AA0               	incf	(___awmod@divisor),f
 10875  0818  1903               	skipnz
 10876  0819  0AA1               	incf	(___awmod@divisor+1),f
 10877  081A  281B               	goto	l11119
 10878                           	
 10879  081B                     l7854:	
 10880                           	line	15
 10881                           	
 10882  081B                     l11119:	
 10883  081B  0821               	movf	(___awmod@divisor+1),w
 10884  081C  0420               	iorwf	(___awmod@divisor),w
 10885  081D  1903               	skipnz
 10886  081E  2820               	goto	u4541
 10887  081F  2821               	goto	u4540
 10888  0820                     u4541:
 10889  0820  2857               	goto	l11137
 10890  0821                     u4540:
 10891                           	line	16
 10892                           	
 10893  0821                     l11121:	
 10894  0821  01A5               	clrf	(___awmod@counter)
 10895  0822  1403               	bsf	status,0
 10896  0823  0DA5               	rlf	(___awmod@counter),f
 10897                           	line	17
 10898  0824  2831               	goto	l11127
 10899                           	
 10900  0825                     l7857:	
 10901                           	line	18
 10902                           	
 10903  0825                     l11123:	
 10904  0825  3001               	movlw	01h
 10905                           	
 10906  0826                     u4555:
 10907  0826  1003               	clrc
 10908  0827  0DA0               	rlf	(___awmod@divisor),f
 10909  0828  0DA1               	rlf	(___awmod@divisor+1),f
 10910  0829  3EFF               	addlw	-1
 10911  082A  1D03               	skipz
 10912  082B  2826               	goto	u4555
 10913                           	line	19
 10914                           	
 10915  082C                     l11125:	
 10916  082C  3001               	movlw	(01h)
 10917  082D  00A4               	movwf	(??___awmod+0)+0
 10918  082E  0824               	movf	(??___awmod+0)+0,w
 10919  082F  07A5               	addwf	(___awmod@counter),f
 10920  0830  2831               	goto	l11127
 10921                           	line	20
 10922                           	
 10923  0831                     l7856:	
 10924                           	line	17
 10925                           	
 10926  0831                     l11127:	
 10927  0831  1FA1               	btfss	(___awmod@divisor+1),(15)&7
 10928  0832  2834               	goto	u4561
 10929  0833  2835               	goto	u4560
 10930  0834                     u4561:
 10931  0834  2825               	goto	l11123
 10932  0835                     u4560:
 10933  0835  2837               	goto	l11129
 10934                           	
 10935  0836                     l7858:	
 10936  0836  2837               	goto	l11129
 10937                           	line	21
 10938                           	
 10939  0837                     l7859:	
 10940                           	line	22
 10941                           	
 10942  0837                     l11129:	
 10943  0837  0821               	movf	(___awmod@divisor+1),w
 10944  0838  0223               	subwf	(___awmod@dividend+1),w
 10945  0839  1D03               	skipz
 10946  083A  283D               	goto	u4575
 10947  083B  0820               	movf	(___awmod@divisor),w
 10948  083C  0222               	subwf	(___awmod@dividend),w
 10949  083D                     u4575:
 10950  083D  1C03               	skipc
 10951  083E  2840               	goto	u4571
 10952  083F  2841               	goto	u4570
 10953  0840                     u4571:
 10954  0840  2848               	goto	l11133
 10955  0841                     u4570:
 10956                           	line	23
 10957                           	
 10958  0841                     l11131:	
 10959  0841  0820               	movf	(___awmod@divisor),w
 10960  0842  02A2               	subwf	(___awmod@dividend),f
 10961  0843  0821               	movf	(___awmod@divisor+1),w
 10962  0844  1C03               	skipc
 10963  0845  03A3               	decf	(___awmod@dividend+1),f
 10964  0846  02A3               	subwf	(___awmod@dividend+1),f
 10965  0847  2848               	goto	l11133
 10966                           	
 10967  0848                     l7860:	
 10968                           	line	24
 10969                           	
 10970  0848                     l11133:	
 10971  0848  3001               	movlw	01h
 10972                           	
 10973  0849                     u4585:
 10974  0849  1003               	clrc
 10975  084A  0CA1               	rrf	(___awmod@divisor+1),f
 10976  084B  0CA0               	rrf	(___awmod@divisor),f
 10977  084C  3EFF               	addlw	-1
 10978  084D  1D03               	skipz
 10979  084E  2849               	goto	u4585
 10980                           	line	25
 10981                           	
 10982  084F                     l11135:	
 10983  084F  3001               	movlw	low(01h)
 10984  0850  02A5               	subwf	(___awmod@counter),f
 10985  0851  1D03               	btfss	status,2
 10986  0852  2854               	goto	u4591
 10987  0853  2855               	goto	u4590
 10988  0854                     u4591:
 10989  0854  2837               	goto	l11129
 10990  0855                     u4590:
 10991  0855  2857               	goto	l11137
 10992                           	
 10993  0856                     l7861:	
 10994  0856  2857               	goto	l11137
 10995                           	line	26
 10996                           	
 10997  0857                     l7855:	
 10998                           	line	27
 10999                           	
 11000  0857                     l11137:	
 11001  0857  0826               	movf	(___awmod@sign),w
 11002  0858  1D03               	skipz
 11003  0859  285B               	goto	u4600
 11004  085A  2861               	goto	l11141
 11005  085B                     u4600:
 11006                           	line	28
 11007                           	
 11008  085B                     l11139:	
 11009  085B  09A2               	comf	(___awmod@dividend),f
 11010  085C  09A3               	comf	(___awmod@dividend+1),f
 11011  085D  0AA2               	incf	(___awmod@dividend),f
 11012  085E  1903               	skipnz
 11013  085F  0AA3               	incf	(___awmod@dividend+1),f
 11014  0860  2861               	goto	l11141
 11015                           	
 11016  0861                     l7862:	
 11017                           	line	29
 11018                           	
 11019  0861                     l11141:	
 11020  0861  0823               	movf	(___awmod@dividend+1),w
 11021  0862  01A1               	clrf	(?___awmod+1)
 11022  0863  07A1               	addwf	(?___awmod+1)
 11023  0864  0822               	movf	(___awmod@dividend),w
 11024  0865  01A0               	clrf	(?___awmod)
 11025  0866  07A0               	addwf	(?___awmod)
 11026                           
 11027  0867  2868               	goto	l7863
 11028                           	
 11029  0868                     l11143:	
 11030                           	line	30
 11031                           	
 11032  0868                     l7863:	
 11033  0868  0008               	return
 11034                           	opt stack 0
 11035                           GLOBAL	__end_of___awmod
 11036  0869                     	__end_of___awmod:
 11037 ;; =============== function ___awmod ends ============
 11038                           
 11039                           	signat	___awmod,8314
 11040                           	global	___awdiv
 11041                           psect	text1092,local,class=CODE,delta=2
 11042                           global __ptext1092
 11043  1542                     __ptext1092:
 11044                           
 11045 ;; *************** function ___awdiv *****************
 11046 ;; Defined at:
 11047 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  divisor         2    6[BANK0 ] int 
 11050 ;;  dividend        2    8[BANK0 ] int 
 11051 ;; Auto vars:     Size  Location     Type
 11052 ;;  quotient        2   13[BANK0 ] int 
 11053 ;;  sign            1   12[BANK0 ] unsigned char 
 11054 ;;  counter         1   11[BANK0 ] unsigned char 
 11055 ;; Return value:  Size  Location     Type
 11056 ;;                  2    6[BANK0 ] int 
 11057 ;; Registers used:
 11058 ;;		wreg, status,2, status,0
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 0/0
 11062 ;;		Unchanged: 0/0
 11063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11064 ;;      Params:         0       4       0       0       0
 11065 ;;      Locals:         0       4       0       0       0
 11066 ;;      Temps:          0       1       0       0       0
 11067 ;;      Totals:         0       9       0       0       0
 11068 ;;Total ram usage:        9 bytes
 11069 ;; Hardware stack levels used:    1
 11070 ;; Hardware stack levels required when called:    3
 11071 ;; This function calls:
 11072 ;;		Nothing
 11073 ;; This function is called by:
 11074 ;;		_robot_turnRight
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           psect	text1092
 11078                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 11079                           	line	5
 11080                           	global	__size_of___awdiv
 11081  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 11082                           	
 11083  1542                     ___awdiv:	
 11084                           	opt	stack 3
 11085                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11086                           	line	9
 11087                           	
 11088  1542                     l11071:	
 11089  1542  1283               	bcf	status, 5	;RP0=0, select bank0
 11090  1543  1303               	bcf	status, 6	;RP1=0, select bank0
 11091  1544  01AC               	clrf	(___awdiv@sign)
 11092                           	line	10
 11093  1545  1FA7               	btfss	(___awdiv@divisor+1),7
 11094  1546  2D48               	goto	u4421
 11095  1547  2D49               	goto	u4420
 11096  1548                     u4421:
 11097  1548  2D52               	goto	l11075
 11098  1549                     u4420:
 11099                           	line	11
 11100                           	
 11101  1549                     l11073:	
 11102  1549  09A6               	comf	(___awdiv@divisor),f
 11103  154A  09A7               	comf	(___awdiv@divisor+1),f
 11104  154B  0AA6               	incf	(___awdiv@divisor),f
 11105  154C  1903               	skipnz
 11106  154D  0AA7               	incf	(___awdiv@divisor+1),f
 11107                           	line	12
 11108  154E  01AC               	clrf	(___awdiv@sign)
 11109  154F  1403               	bsf	status,0
 11110  1550  0DAC               	rlf	(___awdiv@sign),f
 11111  1551  2D52               	goto	l11075
 11112                           	line	13
 11113                           	
 11114  1552                     l7785:	
 11115                           	line	14
 11116                           	
 11117  1552                     l11075:	
 11118  1552  1FA9               	btfss	(___awdiv@dividend+1),7
 11119  1553  2D55               	goto	u4431
 11120  1554  2D56               	goto	u4430
 11121  1555                     u4431:
 11122  1555  2D60               	goto	l11081
 11123  1556                     u4430:
 11124                           	line	15
 11125                           	
 11126  1556                     l11077:	
 11127  1556  09A8               	comf	(___awdiv@dividend),f
 11128  1557  09A9               	comf	(___awdiv@dividend+1),f
 11129  1558  0AA8               	incf	(___awdiv@dividend),f
 11130  1559  1903               	skipnz
 11131  155A  0AA9               	incf	(___awdiv@dividend+1),f
 11132                           	line	16
 11133                           	
 11134  155B                     l11079:	
 11135  155B  3001               	movlw	(01h)
 11136  155C  00AA               	movwf	(??___awdiv+0)+0
 11137  155D  082A               	movf	(??___awdiv+0)+0,w
 11138  155E  06AC               	xorwf	(___awdiv@sign),f
 11139  155F  2D60               	goto	l11081
 11140                           	line	17
 11141                           	
 11142  1560                     l7786:	
 11143                           	line	18
 11144                           	
 11145  1560                     l11081:	
 11146  1560  01AD               	clrf	(___awdiv@quotient)
 11147  1561  01AE               	clrf	(___awdiv@quotient+1)
 11148                           	line	19
 11149                           	
 11150  1562                     l11083:	
 11151  1562  0827               	movf	(___awdiv@divisor+1),w
 11152  1563  0426               	iorwf	(___awdiv@divisor),w
 11153  1564  1903               	skipnz
 11154  1565  2D67               	goto	u4441
 11155  1566  2D68               	goto	u4440
 11156  1567                     u4441:
 11157  1567  2DA6               	goto	l11103
 11158  1568                     u4440:
 11159                           	line	20
 11160                           	
 11161  1568                     l11085:	
 11162  1568  01AB               	clrf	(___awdiv@counter)
 11163  1569  1403               	bsf	status,0
 11164  156A  0DAB               	rlf	(___awdiv@counter),f
 11165                           	line	21
 11166  156B  2D78               	goto	l11091
 11167                           	
 11168  156C                     l7789:	
 11169                           	line	22
 11170                           	
 11171  156C                     l11087:	
 11172  156C  3001               	movlw	01h
 11173                           	
 11174  156D                     u4455:
 11175  156D  1003               	clrc
 11176  156E  0DA6               	rlf	(___awdiv@divisor),f
 11177  156F  0DA7               	rlf	(___awdiv@divisor+1),f
 11178  1570  3EFF               	addlw	-1
 11179  1571  1D03               	skipz
 11180  1572  2D6D               	goto	u4455
 11181                           	line	23
 11182                           	
 11183  1573                     l11089:	
 11184  1573  3001               	movlw	(01h)
 11185  1574  00AA               	movwf	(??___awdiv+0)+0
 11186  1575  082A               	movf	(??___awdiv+0)+0,w
 11187  1576  07AB               	addwf	(___awdiv@counter),f
 11188  1577  2D78               	goto	l11091
 11189                           	line	24
 11190                           	
 11191  1578                     l7788:	
 11192                           	line	21
 11193                           	
 11194  1578                     l11091:	
 11195  1578  1FA7               	btfss	(___awdiv@divisor+1),(15)&7
 11196  1579  2D7B               	goto	u4461
 11197  157A  2D7C               	goto	u4460
 11198  157B                     u4461:
 11199  157B  2D6C               	goto	l11087
 11200  157C                     u4460:
 11201  157C  2D7E               	goto	l11093
 11202                           	
 11203  157D                     l7790:	
 11204  157D  2D7E               	goto	l11093
 11205                           	line	25
 11206                           	
 11207  157E                     l7791:	
 11208                           	line	26
 11209                           	
 11210  157E                     l11093:	
 11211  157E  3001               	movlw	01h
 11212                           	
 11213  157F                     u4475:
 11214  157F  1003               	clrc
 11215  1580  0DAD               	rlf	(___awdiv@quotient),f
 11216  1581  0DAE               	rlf	(___awdiv@quotient+1),f
 11217  1582  3EFF               	addlw	-1
 11218  1583  1D03               	skipz
 11219  1584  2D7F               	goto	u4475
 11220                           	line	27
 11221  1585  0827               	movf	(___awdiv@divisor+1),w
 11222  1586  0229               	subwf	(___awdiv@dividend+1),w
 11223  1587  1D03               	skipz
 11224  1588  2D8B               	goto	u4485
 11225  1589  0826               	movf	(___awdiv@divisor),w
 11226  158A  0228               	subwf	(___awdiv@dividend),w
 11227  158B                     u4485:
 11228  158B  1C03               	skipc
 11229  158C  2D8E               	goto	u4481
 11230  158D  2D8F               	goto	u4480
 11231  158E                     u4481:
 11232  158E  2D97               	goto	l11099
 11233  158F                     u4480:
 11234                           	line	28
 11235                           	
 11236  158F                     l11095:	
 11237  158F  0826               	movf	(___awdiv@divisor),w
 11238  1590  02A8               	subwf	(___awdiv@dividend),f
 11239  1591  0827               	movf	(___awdiv@divisor+1),w
 11240  1592  1C03               	skipc
 11241  1593  03A9               	decf	(___awdiv@dividend+1),f
 11242  1594  02A9               	subwf	(___awdiv@dividend+1),f
 11243                           	line	29
 11244                           	
 11245  1595                     l11097:	
 11246  1595  142D               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 11247  1596  2D97               	goto	l11099
 11248                           	line	30
 11249                           	
 11250  1597                     l7792:	
 11251                           	line	31
 11252                           	
 11253  1597                     l11099:	
 11254  1597  3001               	movlw	01h
 11255                           	
 11256  1598                     u4495:
 11257  1598  1003               	clrc
 11258  1599  0CA7               	rrf	(___awdiv@divisor+1),f
 11259  159A  0CA6               	rrf	(___awdiv@divisor),f
 11260  159B  3EFF               	addlw	-1
 11261  159C  1D03               	skipz
 11262  159D  2D98               	goto	u4495
 11263                           	line	32
 11264                           	
 11265  159E                     l11101:	
 11266  159E  3001               	movlw	low(01h)
 11267  159F  02AB               	subwf	(___awdiv@counter),f
 11268  15A0  1D03               	btfss	status,2
 11269  15A1  2DA3               	goto	u4501
 11270  15A2  2DA4               	goto	u4500
 11271  15A3                     u4501:
 11272  15A3  2D7E               	goto	l11093
 11273  15A4                     u4500:
 11274  15A4  2DA6               	goto	l11103
 11275                           	
 11276  15A5                     l7793:	
 11277  15A5  2DA6               	goto	l11103
 11278                           	line	33
 11279                           	
 11280  15A6                     l7787:	
 11281                           	line	34
 11282                           	
 11283  15A6                     l11103:	
 11284  15A6  082C               	movf	(___awdiv@sign),w
 11285  15A7  1D03               	skipz
 11286  15A8  2DAA               	goto	u4510
 11287  15A9  2DB0               	goto	l11107
 11288  15AA                     u4510:
 11289                           	line	35
 11290                           	
 11291  15AA                     l11105:	
 11292  15AA  09AD               	comf	(___awdiv@quotient),f
 11293  15AB  09AE               	comf	(___awdiv@quotient+1),f
 11294  15AC  0AAD               	incf	(___awdiv@quotient),f
 11295  15AD  1903               	skipnz
 11296  15AE  0AAE               	incf	(___awdiv@quotient+1),f
 11297  15AF  2DB0               	goto	l11107
 11298                           	
 11299  15B0                     l7794:	
 11300                           	line	36
 11301                           	
 11302  15B0                     l11107:	
 11303  15B0  082E               	movf	(___awdiv@quotient+1),w
 11304  15B1  01A7               	clrf	(?___awdiv+1)
 11305  15B2  07A7               	addwf	(?___awdiv+1)
 11306  15B3  082D               	movf	(___awdiv@quotient),w
 11307  15B4  01A6               	clrf	(?___awdiv)
 11308  15B5  07A6               	addwf	(?___awdiv)
 11309                           
 11310  15B6  2DB7               	goto	l7795
 11311                           	
 11312  15B7                     l11109:	
 11313                           	line	37
 11314                           	
 11315  15B7                     l7795:	
 11316  15B7  0008               	return
 11317                           	opt stack 0
 11318                           GLOBAL	__end_of___awdiv
 11319  15B8                     	__end_of___awdiv:
 11320 ;; =============== function ___awdiv ends ============
 11321                           
 11322                           	signat	___awdiv,8314
 11323                           	global	___lwmod
 11324                           psect	text1093,local,class=CODE,delta=2
 11325                           global __ptext1093
 11326  127E                     __ptext1093:
 11327                           
 11328 ;; *************** function ___lwmod *****************
 11329 ;; Defined at:
 11330 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11331 ;; Parameters:    Size  Location     Type
 11332 ;;  divisor         2   14[BANK0 ] unsigned int 
 11333 ;;  dividend        2   16[BANK0 ] unsigned int 
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;  counter         1   19[BANK0 ] unsigned char 
 11336 ;; Return value:  Size  Location     Type
 11337 ;;                  2   14[BANK0 ] unsigned int 
 11338 ;; Registers used:
 11339 ;;		wreg, status,2, status,0
 11340 ;; Tracked objects:
 11341 ;;		On entry : 0/0
 11342 ;;		On exit  : 0/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11345 ;;      Params:         0       4       0       0       0
 11346 ;;      Locals:         0       1       0       0       0
 11347 ;;      Temps:          0       1       0       0       0
 11348 ;;      Totals:         0       6       0       0       0
 11349 ;;Total ram usage:        6 bytes
 11350 ;; Hardware stack levels used:    1
 11351 ;; Hardware stack levels required when called:    3
 11352 ;; This function calls:
 11353 ;;		Nothing
 11354 ;; This function is called by:
 11355 ;;		_sprintf
 11356 ;; This function uses a non-reentrant model
 11357 ;;
 11358                           psect	text1093
 11359                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11360                           	line	5
 11361                           	global	__size_of___lwmod
 11362  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 11363                           	
 11364  127E                     ___lwmod:	
 11365                           	opt	stack 1
 11366                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11367                           	line	8
 11368                           	
 11369  127E                     l11049:	
 11370  127E  1283               	bcf	status, 5	;RP0=0, select bank0
 11371  127F  1303               	bcf	status, 6	;RP1=0, select bank0
 11372  1280  082F               	movf	(___lwmod@divisor+1),w
 11373  1281  042E               	iorwf	(___lwmod@divisor),w
 11374  1282  1903               	skipnz
 11375  1283  2A85               	goto	u4361
 11376  1284  2A86               	goto	u4360
 11377  1285                     u4361:
 11378  1285  2ABC               	goto	l11067
 11379  1286                     u4360:
 11380                           	line	9
 11381                           	
 11382  1286                     l11051:	
 11383  1286  01B3               	clrf	(___lwmod@counter)
 11384  1287  1403               	bsf	status,0
 11385  1288  0DB3               	rlf	(___lwmod@counter),f
 11386                           	line	10
 11387  1289  2A96               	goto	l11057
 11388                           	
 11389  128A                     l7663:	
 11390                           	line	11
 11391                           	
 11392  128A                     l11053:	
 11393  128A  3001               	movlw	01h
 11394                           	
 11395  128B                     u4375:
 11396  128B  1003               	clrc
 11397  128C  0DAE               	rlf	(___lwmod@divisor),f
 11398  128D  0DAF               	rlf	(___lwmod@divisor+1),f
 11399  128E  3EFF               	addlw	-1
 11400  128F  1D03               	skipz
 11401  1290  2A8B               	goto	u4375
 11402                           	line	12
 11403                           	
 11404  1291                     l11055:	
 11405  1291  3001               	movlw	(01h)
 11406  1292  00B2               	movwf	(??___lwmod+0)+0
 11407  1293  0832               	movf	(??___lwmod+0)+0,w
 11408  1294  07B3               	addwf	(___lwmod@counter),f
 11409  1295  2A96               	goto	l11057
 11410                           	line	13
 11411                           	
 11412  1296                     l7662:	
 11413                           	line	10
 11414                           	
 11415  1296                     l11057:	
 11416  1296  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
 11417  1297  2A99               	goto	u4381
 11418  1298  2A9A               	goto	u4380
 11419  1299                     u4381:
 11420  1299  2A8A               	goto	l11053
 11421  129A                     u4380:
 11422  129A  2A9C               	goto	l11059
 11423                           	
 11424  129B                     l7664:	
 11425  129B  2A9C               	goto	l11059
 11426                           	line	14
 11427                           	
 11428  129C                     l7665:	
 11429                           	line	15
 11430                           	
 11431  129C                     l11059:	
 11432  129C  082F               	movf	(___lwmod@divisor+1),w
 11433  129D  0231               	subwf	(___lwmod@dividend+1),w
 11434  129E  1D03               	skipz
 11435  129F  2AA2               	goto	u4395
 11436  12A0  082E               	movf	(___lwmod@divisor),w
 11437  12A1  0230               	subwf	(___lwmod@dividend),w
 11438  12A2                     u4395:
 11439  12A2  1C03               	skipc
 11440  12A3  2AA5               	goto	u4391
 11441  12A4  2AA6               	goto	u4390
 11442  12A5                     u4391:
 11443  12A5  2AAD               	goto	l11063
 11444  12A6                     u4390:
 11445                           	line	16
 11446                           	
 11447  12A6                     l11061:	
 11448  12A6  082E               	movf	(___lwmod@divisor),w
 11449  12A7  02B0               	subwf	(___lwmod@dividend),f
 11450  12A8  082F               	movf	(___lwmod@divisor+1),w
 11451  12A9  1C03               	skipc
 11452  12AA  03B1               	decf	(___lwmod@dividend+1),f
 11453  12AB  02B1               	subwf	(___lwmod@dividend+1),f
 11454  12AC  2AAD               	goto	l11063
 11455                           	
 11456  12AD                     l7666:	
 11457                           	line	17
 11458                           	
 11459  12AD                     l11063:	
 11460  12AD  3001               	movlw	01h
 11461                           	
 11462  12AE                     u4405:
 11463  12AE  1003               	clrc
 11464  12AF  0CAF               	rrf	(___lwmod@divisor+1),f
 11465  12B0  0CAE               	rrf	(___lwmod@divisor),f
 11466  12B1  3EFF               	addlw	-1
 11467  12B2  1D03               	skipz
 11468  12B3  2AAE               	goto	u4405
 11469                           	line	18
 11470                           	
 11471  12B4                     l11065:	
 11472  12B4  3001               	movlw	low(01h)
 11473  12B5  02B3               	subwf	(___lwmod@counter),f
 11474  12B6  1D03               	btfss	status,2
 11475  12B7  2AB9               	goto	u4411
 11476  12B8  2ABA               	goto	u4410
 11477  12B9                     u4411:
 11478  12B9  2A9C               	goto	l11059
 11479  12BA                     u4410:
 11480  12BA  2ABC               	goto	l11067
 11481                           	
 11482  12BB                     l7667:	
 11483  12BB  2ABC               	goto	l11067
 11484                           	line	19
 11485                           	
 11486  12BC                     l7661:	
 11487                           	line	20
 11488                           	
 11489  12BC                     l11067:	
 11490  12BC  0831               	movf	(___lwmod@dividend+1),w
 11491  12BD  01AF               	clrf	(?___lwmod+1)
 11492  12BE  07AF               	addwf	(?___lwmod+1)
 11493  12BF  0830               	movf	(___lwmod@dividend),w
 11494  12C0  01AE               	clrf	(?___lwmod)
 11495  12C1  07AE               	addwf	(?___lwmod)
 11496                           
 11497  12C2  2AC3               	goto	l7668
 11498                           	
 11499  12C3                     l11069:	
 11500                           	line	21
 11501                           	
 11502  12C3                     l7668:	
 11503  12C3  0008               	return
 11504                           	opt stack 0
 11505                           GLOBAL	__end_of___lwmod
 11506  12C4                     	__end_of___lwmod:
 11507 ;; =============== function ___lwmod ends ============
 11508                           
 11509                           	signat	___lwmod,8314
 11510                           	global	___lwdiv
 11511                           psect	text1094,local,class=CODE,delta=2
 11512                           global __ptext1094
 11513  1356                     __ptext1094:
 11514                           
 11515 ;; *************** function ___lwdiv *****************
 11516 ;; Defined at:
 11517 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  divisor         2    6[BANK0 ] unsigned int 
 11520 ;;  dividend        2    8[BANK0 ] unsigned int 
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;  quotient        2   11[BANK0 ] unsigned int 
 11523 ;;  counter         1   13[BANK0 ] unsigned char 
 11524 ;; Return value:  Size  Location     Type
 11525 ;;                  2    6[BANK0 ] unsigned int 
 11526 ;; Registers used:
 11527 ;;		wreg, status,2, status,0
 11528 ;; Tracked objects:
 11529 ;;		On entry : 0/0
 11530 ;;		On exit  : 0/0
 11531 ;;		Unchanged: 0/0
 11532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11533 ;;      Params:         0       4       0       0       0
 11534 ;;      Locals:         0       3       0       0       0
 11535 ;;      Temps:          0       1       0       0       0
 11536 ;;      Totals:         0       8       0       0       0
 11537 ;;Total ram usage:        8 bytes
 11538 ;; Hardware stack levels used:    1
 11539 ;; Hardware stack levels required when called:    3
 11540 ;; This function calls:
 11541 ;;		Nothing
 11542 ;; This function is called by:
 11543 ;;		_readAvgDistance
 11544 ;;		_ADCconvert
 11545 ;;		_sprintf
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           psect	text1094
 11549                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 11550                           	line	5
 11551                           	global	__size_of___lwdiv
 11552  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 11553                           	
 11554  1356                     ___lwdiv:	
 11555                           	opt	stack 1
 11556                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11557                           	line	9
 11558                           	
 11559  1356                     l11023:	
 11560  1356  1283               	bcf	status, 5	;RP0=0, select bank0
 11561  1357  1303               	bcf	status, 6	;RP1=0, select bank0
 11562  1358  01AB               	clrf	(___lwdiv@quotient)
 11563  1359  01AC               	clrf	(___lwdiv@quotient+1)
 11564                           	line	10
 11565                           	
 11566  135A                     l11025:	
 11567  135A  0827               	movf	(___lwdiv@divisor+1),w
 11568  135B  0426               	iorwf	(___lwdiv@divisor),w
 11569  135C  1903               	skipnz
 11570  135D  2B5F               	goto	u4291
 11571  135E  2B60               	goto	u4290
 11572  135F                     u4291:
 11573  135F  2B9E               	goto	l11045
 11574  1360                     u4290:
 11575                           	line	11
 11576                           	
 11577  1360                     l11027:	
 11578  1360  01AD               	clrf	(___lwdiv@counter)
 11579  1361  1403               	bsf	status,0
 11580  1362  0DAD               	rlf	(___lwdiv@counter),f
 11581                           	line	12
 11582  1363  2B70               	goto	l11033
 11583                           	
 11584  1364                     l7653:	
 11585                           	line	13
 11586                           	
 11587  1364                     l11029:	
 11588  1364  3001               	movlw	01h
 11589                           	
 11590  1365                     u4305:
 11591  1365  1003               	clrc
 11592  1366  0DA6               	rlf	(___lwdiv@divisor),f
 11593  1367  0DA7               	rlf	(___lwdiv@divisor+1),f
 11594  1368  3EFF               	addlw	-1
 11595  1369  1D03               	skipz
 11596  136A  2B65               	goto	u4305
 11597                           	line	14
 11598                           	
 11599  136B                     l11031:	
 11600  136B  3001               	movlw	(01h)
 11601  136C  00AA               	movwf	(??___lwdiv+0)+0
 11602  136D  082A               	movf	(??___lwdiv+0)+0,w
 11603  136E  07AD               	addwf	(___lwdiv@counter),f
 11604  136F  2B70               	goto	l11033
 11605                           	line	15
 11606                           	
 11607  1370                     l7652:	
 11608                           	line	12
 11609                           	
 11610  1370                     l11033:	
 11611  1370  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
 11612  1371  2B73               	goto	u4311
 11613  1372  2B74               	goto	u4310
 11614  1373                     u4311:
 11615  1373  2B64               	goto	l11029
 11616  1374                     u4310:
 11617  1374  2B76               	goto	l11035
 11618                           	
 11619  1375                     l7654:	
 11620  1375  2B76               	goto	l11035
 11621                           	line	16
 11622                           	
 11623  1376                     l7655:	
 11624                           	line	17
 11625                           	
 11626  1376                     l11035:	
 11627  1376  3001               	movlw	01h
 11628                           	
 11629  1377                     u4325:
 11630  1377  1003               	clrc
 11631  1378  0DAB               	rlf	(___lwdiv@quotient),f
 11632  1379  0DAC               	rlf	(___lwdiv@quotient+1),f
 11633  137A  3EFF               	addlw	-1
 11634  137B  1D03               	skipz
 11635  137C  2B77               	goto	u4325
 11636                           	line	18
 11637  137D  0827               	movf	(___lwdiv@divisor+1),w
 11638  137E  0229               	subwf	(___lwdiv@dividend+1),w
 11639  137F  1D03               	skipz
 11640  1380  2B83               	goto	u4335
 11641  1381  0826               	movf	(___lwdiv@divisor),w
 11642  1382  0228               	subwf	(___lwdiv@dividend),w
 11643  1383                     u4335:
 11644  1383  1C03               	skipc
 11645  1384  2B86               	goto	u4331
 11646  1385  2B87               	goto	u4330
 11647  1386                     u4331:
 11648  1386  2B8F               	goto	l11041
 11649  1387                     u4330:
 11650                           	line	19
 11651                           	
 11652  1387                     l11037:	
 11653  1387  0826               	movf	(___lwdiv@divisor),w
 11654  1388  02A8               	subwf	(___lwdiv@dividend),f
 11655  1389  0827               	movf	(___lwdiv@divisor+1),w
 11656  138A  1C03               	skipc
 11657  138B  03A9               	decf	(___lwdiv@dividend+1),f
 11658  138C  02A9               	subwf	(___lwdiv@dividend+1),f
 11659                           	line	20
 11660                           	
 11661  138D                     l11039:	
 11662  138D  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 11663  138E  2B8F               	goto	l11041
 11664                           	line	21
 11665                           	
 11666  138F                     l7656:	
 11667                           	line	22
 11668                           	
 11669  138F                     l11041:	
 11670  138F  3001               	movlw	01h
 11671                           	
 11672  1390                     u4345:
 11673  1390  1003               	clrc
 11674  1391  0CA7               	rrf	(___lwdiv@divisor+1),f
 11675  1392  0CA6               	rrf	(___lwdiv@divisor),f
 11676  1393  3EFF               	addlw	-1
 11677  1394  1D03               	skipz
 11678  1395  2B90               	goto	u4345
 11679                           	line	23
 11680                           	
 11681  1396                     l11043:	
 11682  1396  3001               	movlw	low(01h)
 11683  1397  02AD               	subwf	(___lwdiv@counter),f
 11684  1398  1D03               	btfss	status,2
 11685  1399  2B9B               	goto	u4351
 11686  139A  2B9C               	goto	u4350
 11687  139B                     u4351:
 11688  139B  2B76               	goto	l11035
 11689  139C                     u4350:
 11690  139C  2B9E               	goto	l11045
 11691                           	
 11692  139D                     l7657:	
 11693  139D  2B9E               	goto	l11045
 11694                           	line	24
 11695                           	
 11696  139E                     l7651:	
 11697                           	line	25
 11698                           	
 11699  139E                     l11045:	
 11700  139E  082C               	movf	(___lwdiv@quotient+1),w
 11701  139F  01A7               	clrf	(?___lwdiv+1)
 11702  13A0  07A7               	addwf	(?___lwdiv+1)
 11703  13A1  082B               	movf	(___lwdiv@quotient),w
 11704  13A2  01A6               	clrf	(?___lwdiv)
 11705  13A3  07A6               	addwf	(?___lwdiv)
 11706                           
 11707  13A4  2BA5               	goto	l7658
 11708                           	
 11709  13A5                     l11047:	
 11710                           	line	26
 11711                           	
 11712  13A5                     l7658:	
 11713  13A5  0008               	return
 11714                           	opt stack 0
 11715                           GLOBAL	__end_of___lwdiv
 11716  13A6                     	__end_of___lwdiv:
 11717 ;; =============== function ___lwdiv ends ============
 11718                           
 11719                           	signat	___lwdiv,8314
 11720                           	global	___wmul
 11721                           psect	text1095,local,class=CODE,delta=2
 11722                           global __ptext1095
 11723  1081                     __ptext1095:
 11724                           
 11725 ;; *************** function ___wmul *****************
 11726 ;; Defined at:
 11727 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11728 ;; Parameters:    Size  Location     Type
 11729 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11730 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11731 ;; Auto vars:     Size  Location     Type
 11732 ;;  product         2    4[BANK0 ] unsigned int 
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  2    0[BANK0 ] unsigned int 
 11735 ;; Registers used:
 11736 ;;		wreg, status,2, status,0
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11742 ;;      Params:         0       4       0       0       0
 11743 ;;      Locals:         0       2       0       0       0
 11744 ;;      Temps:          0       0       0       0       0
 11745 ;;      Totals:         0       6       0       0       0
 11746 ;;Total ram usage:        6 bytes
 11747 ;; Hardware stack levels used:    1
 11748 ;; Hardware stack levels required when called:    3
 11749 ;; This function calls:
 11750 ;;		Nothing
 11751 ;; This function is called by:
 11752 ;;		_ADCconvert
 11753 ;;		_robot_turnRight
 11754 ;;		_abs
 11755 ;; This function uses a non-reentrant model
 11756 ;;
 11757                           psect	text1095
 11758                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
 11759                           	line	3
 11760                           	global	__size_of___wmul
 11761  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 11762                           	
 11763  1081                     ___wmul:	
 11764                           	opt	stack 2
 11765                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11766                           	line	4
 11767                           	
 11768  1081                     l11011:	
 11769  1081  1283               	bcf	status, 5	;RP0=0, select bank0
 11770  1082  1303               	bcf	status, 6	;RP1=0, select bank0
 11771  1083  01A4               	clrf	(___wmul@product)
 11772  1084  01A5               	clrf	(___wmul@product+1)
 11773  1085  2886               	goto	l11013
 11774                           	line	6
 11775                           	
 11776  1086                     l7645:	
 11777                           	line	7
 11778                           	
 11779  1086                     l11013:	
 11780  1086  1C20               	btfss	(___wmul@multiplier),(0)&7
 11781  1087  2889               	goto	u4251
 11782  1088  288A               	goto	u4250
 11783  1089                     u4251:
 11784  1089  2890               	goto	l7646
 11785  108A                     u4250:
 11786                           	line	8
 11787                           	
 11788  108A                     l11015:	
 11789  108A  0822               	movf	(___wmul@multiplicand),w
 11790  108B  07A4               	addwf	(___wmul@product),f
 11791  108C  1803               	skipnc
 11792  108D  0AA5               	incf	(___wmul@product+1),f
 11793  108E  0823               	movf	(___wmul@multiplicand+1),w
 11794  108F  07A5               	addwf	(___wmul@product+1),f
 11795                           	
 11796  1090                     l7646:	
 11797                           	line	9
 11798  1090  3001               	movlw	01h
 11799                           	
 11800  1091                     u4265:
 11801  1091  1003               	clrc
 11802  1092  0DA2               	rlf	(___wmul@multiplicand),f
 11803  1093  0DA3               	rlf	(___wmul@multiplicand+1),f
 11804  1094  3EFF               	addlw	-1
 11805  1095  1D03               	skipz
 11806  1096  2891               	goto	u4265
 11807                           	line	10
 11808                           	
 11809  1097                     l11017:	
 11810  1097  3001               	movlw	01h
 11811                           	
 11812  1098                     u4275:
 11813  1098  1003               	clrc
 11814  1099  0CA1               	rrf	(___wmul@multiplier+1),f
 11815  109A  0CA0               	rrf	(___wmul@multiplier),f
 11816  109B  3EFF               	addlw	-1
 11817  109C  1D03               	skipz
 11818  109D  2898               	goto	u4275
 11819                           	line	11
 11820  109E  0821               	movf	((___wmul@multiplier+1)),w
 11821  109F  0420               	iorwf	((___wmul@multiplier)),w
 11822  10A0  1D03               	skipz
 11823  10A1  28A3               	goto	u4281
 11824  10A2  28A4               	goto	u4280
 11825  10A3                     u4281:
 11826  10A3  2886               	goto	l11013
 11827  10A4                     u4280:
 11828  10A4  28A5               	goto	l11019
 11829                           	
 11830  10A5                     l7647:	
 11831                           	line	12
 11832                           	
 11833  10A5                     l11019:	
 11834  10A5  0825               	movf	(___wmul@product+1),w
 11835  10A6  01A1               	clrf	(?___wmul+1)
 11836  10A7  07A1               	addwf	(?___wmul+1)
 11837  10A8  0824               	movf	(___wmul@product),w
 11838  10A9  01A0               	clrf	(?___wmul)
 11839  10AA  07A0               	addwf	(?___wmul)
 11840                           
 11841  10AB  28AC               	goto	l7648
 11842                           	
 11843  10AC                     l11021:	
 11844                           	line	13
 11845                           	
 11846  10AC                     l7648:	
 11847  10AC  0008               	return
 11848                           	opt stack 0
 11849                           GLOBAL	__end_of___wmul
 11850  10AD                     	__end_of___wmul:
 11851 ;; =============== function ___wmul ends ============
 11852                           
 11853                           	signat	___wmul,8314
 11854                           	global	_ser_isrx
 11855                           psect	text1096,local,class=CODE,delta=2
 11856                           global __ptext1096
 11857  1F84                     __ptext1096:
 11858                           
 11859 ;; *************** function _ser_isrx *****************
 11860 ;; Defined at:
 11861 ;;		line 45 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;		None
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;		None
 11866 ;; Return value:  Size  Location     Type
 11867 ;;		None               void
 11868 ;; Registers used:
 11869 ;;		wreg, status,2, status,0
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11875 ;;      Params:         0       0       0       0       0
 11876 ;;      Locals:         0       0       0       0       0
 11877 ;;      Temps:          0       0       0       0       0
 11878 ;;      Totals:         0       0       0       0       0
 11879 ;;Total ram usage:        0 bytes
 11880 ;; Hardware stack levels used:    1
 11881 ;; Hardware stack levels required when called:    3
 11882 ;; This function calls:
 11883 ;;		Nothing
 11884 ;; This function is called by:
 11885 ;;		_ser_getch
 11886 ;; This function uses a non-reentrant model
 11887 ;;
 11888                           psect	text1096
 11889                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 11890                           	line	45
 11891                           	global	__size_of_ser_isrx
 11892  0019                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 11893                           	
 11894  1F84                     _ser_isrx:	
 11895                           	opt	stack 1
 11896                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 11897                           	line	46
 11898                           	
 11899  1F84                     l10963:	
 11900                           ;ser.c: 46: if(OERR) {
 11901  1F84  1283               	bcf	status, 5	;RP0=0, select bank0
 11902  1F85  1303               	bcf	status, 6	;RP1=0, select bank0
 11903  1F86  1C98               	btfss	(193/8),(193)&7
 11904  1F87  2F89               	goto	u4181
 11905  1F88  2F8A               	goto	u4180
 11906  1F89                     u4181:
 11907  1F89  2F8F               	goto	l10971
 11908  1F8A                     u4180:
 11909                           	line	47
 11910                           	
 11911  1F8A                     l10965:	
 11912                           ;ser.c: 47: CREN = 0;
 11913  1F8A  1218               	bcf	(196/8),(196)&7
 11914                           	line	48
 11915                           ;ser.c: 48: CREN = 1;
 11916  1F8B  1618               	bsf	(196/8),(196)&7
 11917                           	line	49
 11918                           	
 11919  1F8C                     l10967:	
 11920                           ;ser.c: 49: return 0;
 11921  1F8C  1003               	clrc
 11922                           	
 11923  1F8D  2F9C               	goto	l6900
 11924                           	
 11925  1F8E                     l10969:	
 11926  1F8E  2F9C               	goto	l6900
 11927                           	line	50
 11928                           	
 11929  1F8F                     l6899:	
 11930                           	line	51
 11931                           	
 11932  1F8F                     l10971:	
 11933                           ;ser.c: 50: }
 11934                           ;ser.c: 51: return (rxiptr!=rxoptr);
 11935  1F8F  1683               	bsf	status, 5	;RP0=1, select bank1
 11936  1F90  1303               	bcf	status, 6	;RP1=0, select bank1
 11937  1F91  085C               	movf	(_rxiptr)^080h,w	;volatile
 11938  1F92  065D               	xorwf	(_rxoptr)^080h,w	;volatile
 11939  1F93  1D03               	skipz
 11940  1F94  2F96               	goto	u4191
 11941  1F95  2F97               	goto	u4190
 11942  1F96                     u4191:
 11943  1F96  2F99               	goto	l10975
 11944  1F97                     u4190:
 11945                           	
 11946  1F97                     l10973:	
 11947  1F97  1003               	clrc
 11948                           	
 11949  1F98  2F9C               	goto	l6900
 11950                           	
 11951  1F99                     l10691:	
 11952                           	
 11953  1F99                     l10975:	
 11954  1F99  1403               	setc
 11955                           	
 11956  1F9A  2F9C               	goto	l6900
 11957                           	
 11958  1F9B                     l10693:	
 11959  1F9B  2F9C               	goto	l6900
 11960                           	
 11961  1F9C                     l10977:	
 11962                           	line	52
 11963                           	
 11964  1F9C                     l6900:	
 11965  1F9C  0008               	return
 11966                           	opt stack 0
 11967                           GLOBAL	__end_of_ser_isrx
 11968  1F9D                     	__end_of_ser_isrx:
 11969 ;; =============== function _ser_isrx ends ============
 11970                           
 11971                           	signat	_ser_isrx,88
 11972                           	global	_spi_transfer
 11973                           psect	text1097,local,class=CODE,delta=2
 11974                           global __ptext1097
 11975  1F30                     __ptext1097:
 11976                           
 11977 ;; *************** function _spi_transfer *****************
 11978 ;; Defined at:
 11979 ;;		line 50 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;  data            1    wreg     unsigned char 
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;  data            1    2[BANK0 ] unsigned char 
 11984 ;;  temp            1    1[BANK0 ] unsigned char 
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  1    wreg      unsigned char 
 11987 ;; Registers used:
 11988 ;;		wreg
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : 0/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11994 ;;      Params:         0       0       0       0       0
 11995 ;;      Locals:         0       2       0       0       0
 11996 ;;      Temps:          0       1       0       0       0
 11997 ;;      Totals:         0       3       0       0       0
 11998 ;;Total ram usage:        3 bytes
 11999 ;; Hardware stack levels used:    1
 12000 ;; Hardware stack levels required when called:    3
 12001 ;; This function calls:
 12002 ;;		Nothing
 12003 ;; This function is called by:
 12004 ;;		_rotate
 12005 ;; This function uses a non-reentrant model
 12006 ;;
 12007                           psect	text1097
 12008                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
 12009                           	line	50
 12010                           	global	__size_of_spi_transfer
 12011  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 12012                           	
 12013  1F30                     _spi_transfer:	
 12014                           	opt	stack 3
 12015                           ; Regs used in _spi_transfer: [wreg]
 12016                           ;spi_transfer@data stored from wreg
 12017  1F30  1283               	bcf	status, 5	;RP0=0, select bank0
 12018  1F31  1303               	bcf	status, 6	;RP1=0, select bank0
 12019  1F32  00A2               	movwf	(spi_transfer@data)
 12020                           	line	51
 12021                           	
 12022  1F33                     l10911:	
 12023                           ;steppermotor.c: 51: unsigned char temp = 0;
 12024  1F33  01A1               	clrf	(spi_transfer@temp)
 12025                           	line	53
 12026                           ;steppermotor.c: 53: SSPIF = 0;
 12027  1F34  118C               	bcf	(99/8),(99)&7
 12028                           	line	54
 12029                           	
 12030  1F35                     l10913:	
 12031                           ;steppermotor.c: 54: SSPBUF = data;
 12032  1F35  0822               	movf	(spi_transfer@data),w
 12033  1F36  0093               	movwf	(19)	;volatile
 12034                           	line	56
 12035                           ;steppermotor.c: 56: while (SSPIF == 0);
 12036  1F37  2F38               	goto	l3753
 12037                           	
 12038  1F38                     l3754:	
 12039                           	
 12040  1F38                     l3753:	
 12041  1F38  1D8C               	btfss	(99/8),(99)&7
 12042  1F39  2F3B               	goto	u4021
 12043  1F3A  2F3C               	goto	u4020
 12044  1F3B                     u4021:
 12045  1F3B  2F38               	goto	l3753
 12046  1F3C                     u4020:
 12047  1F3C  2F3D               	goto	l10915
 12048                           	
 12049  1F3D                     l3755:	
 12050                           	line	57
 12051                           	
 12052  1F3D                     l10915:	
 12053                           ;steppermotor.c: 57: temp = SSPBUF;
 12054  1F3D  0813               	movf	(19),w	;volatile
 12055  1F3E  00A0               	movwf	(??_spi_transfer+0)+0
 12056  1F3F  0820               	movf	(??_spi_transfer+0)+0,w
 12057  1F40  00A1               	movwf	(spi_transfer@temp)
 12058                           	line	58
 12059                           	
 12060  1F41                     l10917:	
 12061                           ;steppermotor.c: 58: SSPIF = 0;
 12062  1F41  118C               	bcf	(99/8),(99)&7
 12063  1F42  2F43               	goto	l3756
 12064                           	line	60
 12065                           	
 12066  1F43                     l10919:	
 12067                           	line	61
 12068                           ;steppermotor.c: 60: return temp;
 12069                           ;	Return value of _spi_transfer is never used
 12070                           	
 12071  1F43                     l3756:	
 12072  1F43  0008               	return
 12073                           	opt stack 0
 12074                           GLOBAL	__end_of_spi_transfer
 12075  1F44                     	__end_of_spi_transfer:
 12076 ;; =============== function _spi_transfer ends ============
 12077                           
 12078                           	signat	_spi_transfer,4217
 12079                           	global	_ser_putch
 12080                           psect	text1098,local,class=CODE,delta=2
 12081                           global __ptext1098
 12082  1105                     __ptext1098:
 12083                           
 12084 ;; *************** function _ser_putch *****************
 12085 ;; Defined at:
 12086 ;;		line 70 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;  c               1    wreg     unsigned char 
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  c               1    1[BANK0 ] unsigned char 
 12091 ;; Return value:  Size  Location     Type
 12092 ;;		None               void
 12093 ;; Registers used:
 12094 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12095 ;; Tracked objects:
 12096 ;;		On entry : 0/0
 12097 ;;		On exit  : 0/0
 12098 ;;		Unchanged: 0/0
 12099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12100 ;;      Params:         0       0       0       0       0
 12101 ;;      Locals:         0       1       0       0       0
 12102 ;;      Temps:          0       1       0       0       0
 12103 ;;      Totals:         0       2       0       0       0
 12104 ;;Total ram usage:        2 bytes
 12105 ;; Hardware stack levels used:    1
 12106 ;; Hardware stack levels required when called:    3
 12107 ;; This function calls:
 12108 ;;		Nothing
 12109 ;; This function is called by:
 12110 ;;		_main
 12111 ;;		_ChargeMode
 12112 ;;		_robo_init
 12113 ;;		_robot_read
 12114 ;;		_RobotDrive
 12115 ;;		_robotTurn
 12116 ;;		_robot_turnRight
 12117 ;;		_RobotBattRead
 12118 ;;		_robotLoadSong
 12119 ;;		_ser_puts
 12120 ;;		_ser_puts2
 12121 ;;		_ser_puthex
 12122 ;; This function uses a non-reentrant model
 12123 ;;
 12124                           psect	text1098
 12125                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 12126                           	line	70
 12127                           	global	__size_of_ser_putch
 12128  002D                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 12129                           	
 12130  1105                     _ser_putch:	
 12131                           	opt	stack 2
 12132                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 12133                           ;ser_putch@c stored from wreg
 12134  1105  1283               	bcf	status, 5	;RP0=0, select bank0
 12135  1106  1303               	bcf	status, 6	;RP1=0, select bank0
 12136  1107  00A1               	movwf	(ser_putch@c)
 12137                           	line	71
 12138                           	
 12139  1108                     l10869:	
 12140                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 12141  1108  290A               	goto	l10871
 12142                           	
 12143  1109                     l6910:	
 12144                           	line	72
 12145                           ;ser.c: 72: continue;
 12146  1109  290A               	goto	l10871
 12147                           	
 12148  110A                     l6909:	
 12149                           	line	71
 12150                           	
 12151  110A                     l10871:	
 12152  110A  1683               	bsf	status, 5	;RP0=1, select bank1
 12153  110B  1303               	bcf	status, 6	;RP1=0, select bank1
 12154  110C  0861               	movf	(_txiptr)^080h,w	;volatile
 12155  110D  3E01               	addlw	01h
 12156  110E  390F               	andlw	0Fh
 12157  110F  0662               	xorwf	(_txoptr)^080h,w	;volatile
 12158  1110  1903               	skipnz
 12159  1111  2913               	goto	u3971
 12160  1112  2914               	goto	u3970
 12161  1113                     u3971:
 12162  1113  290A               	goto	l10871
 12163  1114                     u3970:
 12164                           	
 12165  1114                     l6911:	
 12166                           	line	73
 12167                           ;ser.c: 73: GIE=0;
 12168  1114  138B               	bcf	(95/8),(95)&7
 12169                           	line	74
 12170                           	
 12171  1115                     l10873:	
 12172                           ;ser.c: 74: txfifo[txiptr] = c;
 12173  1115  1283               	bcf	status, 5	;RP0=0, select bank0
 12174  1116  1303               	bcf	status, 6	;RP1=0, select bank0
 12175  1117  0821               	movf	(ser_putch@c),w
 12176  1118  00A0               	movwf	(??_ser_putch+0)+0
 12177  1119  1683               	bsf	status, 5	;RP0=1, select bank1
 12178  111A  1303               	bcf	status, 6	;RP1=0, select bank1
 12179  111B  0861               	movf	(_txiptr)^080h,w
 12180  111C  3EA0               	addlw	_txfifo&0ffh
 12181  111D  0084               	movwf	fsr0
 12182  111E  1283               	bcf	status, 5	;RP0=0, select bank0
 12183  111F  1303               	bcf	status, 6	;RP1=0, select bank0
 12184  1120  0820               	movf	(??_ser_putch+0)+0,w
 12185  1121  1783               	bsf	status, 7	;select IRP bank3
 12186  1122  0080               	movwf	indf
 12187                           	line	75
 12188                           	
 12189  1123                     l10875:	
 12190                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 12191  1123  1683               	bsf	status, 5	;RP0=1, select bank1
 12192  1124  1303               	bcf	status, 6	;RP1=0, select bank1
 12193  1125  0861               	movf	(_txiptr)^080h,w	;volatile
 12194  1126  3E01               	addlw	01h
 12195  1127  390F               	andlw	0Fh
 12196  1128  1283               	bcf	status, 5	;RP0=0, select bank0
 12197  1129  1303               	bcf	status, 6	;RP1=0, select bank0
 12198  112A  00A0               	movwf	(??_ser_putch+0)+0
 12199  112B  0820               	movf	(??_ser_putch+0)+0,w
 12200  112C  1683               	bsf	status, 5	;RP0=1, select bank1
 12201  112D  1303               	bcf	status, 6	;RP1=0, select bank1
 12202  112E  00E1               	movwf	(_txiptr)^080h	;volatile
 12203                           	line	76
 12204                           	
 12205  112F                     l10877:	
 12206                           ;ser.c: 76: TXIE=1;
 12207  112F  160C               	bsf	(1124/8)^080h,(1124)&7
 12208                           	line	77
 12209                           	
 12210  1130                     l10879:	
 12211                           ;ser.c: 77: GIE=1;
 12212  1130  178B               	bsf	(95/8),(95)&7
 12213                           	line	78
 12214                           	
 12215  1131                     l6912:	
 12216  1131  0008               	return
 12217                           	opt stack 0
 12218                           GLOBAL	__end_of_ser_putch
 12219  1132                     	__end_of_ser_putch:
 12220 ;; =============== function _ser_putch ends ============
 12221                           
 12222                           	signat	_ser_putch,4216
 12223                           	global	_Menu
 12224                           psect	text1099,local,class=CODE,delta=2
 12225                           global __ptext1099
 12226  12C4                     __ptext1099:
 12227                           
 12228 ;; *************** function _Menu *****************
 12229 ;; Defined at:
 12230 ;;		line 201 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 12231 ;; Parameters:    Size  Location     Type
 12232 ;;  BTN_input       1    wreg     unsigned char 
 12233 ;; Auto vars:     Size  Location     Type
 12234 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 12235 ;; Return value:  Size  Location     Type
 12236 ;;                  1    wreg      unsigned char 
 12237 ;; Registers used:
 12238 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12239 ;; Tracked objects:
 12240 ;;		On entry : 0/0
 12241 ;;		On exit  : 0/0
 12242 ;;		Unchanged: 0/0
 12243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12244 ;;      Params:         0       0       0       0       0
 12245 ;;      Locals:         0       1       0       0       0
 12246 ;;      Temps:          0       0       0       0       0
 12247 ;;      Totals:         0       1       0       0       0
 12248 ;;Total ram usage:        1 bytes
 12249 ;; Hardware stack levels used:    1
 12250 ;; Hardware stack levels required when called:    3
 12251 ;; This function calls:
 12252 ;;		Nothing
 12253 ;; This function is called by:
 12254 ;;		_main
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           psect	text1099
 12258                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 12259                           	line	201
 12260                           	global	__size_of_Menu
 12261  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 12262                           	
 12263  12C4                     _Menu:	
 12264                           	opt	stack 4
 12265                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 12266                           ;Menu@BTN_input stored from wreg
 12267  12C4  1283               	bcf	status, 5	;RP0=0, select bank0
 12268  12C5  1303               	bcf	status, 6	;RP1=0, select bank0
 12269  12C6  00A0               	movwf	(Menu@BTN_input)
 12270                           	line	202
 12271                           	
 12272  12C7                     l10845:	
 12273                           ;HMI.c: 202: switch (BTN_input)
 12274  12C7  2AF6               	goto	l10863
 12275                           	line	204
 12276                           ;HMI.c: 203: {
 12277                           ;HMI.c: 204: case 1:
 12278                           	
 12279  12C8                     l4576:	
 12280                           	line	206
 12281                           ;HMI.c: 206: break;
 12282  12C8  2B08               	goto	l10865
 12283                           	line	207
 12284                           ;HMI.c: 207: case 2:
 12285                           	
 12286  12C9                     l4578:	
 12287                           	line	209
 12288                           ;HMI.c: 209: break;
 12289  12C9  2B08               	goto	l10865
 12290                           	line	210
 12291                           ;HMI.c: 210: case 3:
 12292                           	
 12293  12CA                     l4579:	
 12294                           	line	211
 12295                           	
 12296  12CA                     l10847:	
 12297                           ;HMI.c: 211: pos--;
 12298  12CA  30FF               	movlw	low(-1)
 12299  12CB  1683               	bsf	status, 5	;RP0=1, select bank1
 12300  12CC  1303               	bcf	status, 6	;RP1=0, select bank1
 12301  12CD  07C6               	addwf	(_pos)^080h,f
 12302  12CE  1803               	skipnc
 12303  12CF  0AC7               	incf	(_pos+1)^080h,f
 12304  12D0  30FF               	movlw	high(-1)
 12305  12D1  07C7               	addwf	(_pos+1)^080h,f
 12306                           	line	212
 12307                           	
 12308  12D2                     l10849:	
 12309                           ;HMI.c: 212: if (pos < 0)
 12310  12D2  1FC7               	btfss	(_pos+1)^080h,7
 12311  12D3  2AD5               	goto	u3951
 12312  12D4  2AD6               	goto	u3950
 12313  12D5                     u3951:
 12314  12D5  2B08               	goto	l10865
 12315  12D6                     u3950:
 12316                           	line	213
 12317                           	
 12318  12D6                     l10851:	
 12319                           ;HMI.c: 213: pos = 6 - 1;
 12320  12D6  3005               	movlw	low(05h)
 12321  12D7  00C6               	movwf	(_pos)^080h
 12322  12D8  3000               	movlw	high(05h)
 12323  12D9  00C7               	movwf	((_pos)^080h)+1
 12324  12DA  2B08               	goto	l10865
 12325                           	
 12326  12DB                     l4580:	
 12327                           	line	215
 12328                           ;HMI.c: 215: break;
 12329  12DB  2B08               	goto	l10865
 12330                           	line	216
 12331                           ;HMI.c: 216: case 4:
 12332                           	
 12333  12DC                     l4581:	
 12334                           	line	217
 12335                           	
 12336  12DC                     l10853:	
 12337                           ;HMI.c: 217: pos++;
 12338  12DC  3001               	movlw	low(01h)
 12339  12DD  1683               	bsf	status, 5	;RP0=1, select bank1
 12340  12DE  1303               	bcf	status, 6	;RP1=0, select bank1
 12341  12DF  07C6               	addwf	(_pos)^080h,f
 12342  12E0  1803               	skipnc
 12343  12E1  0AC7               	incf	(_pos+1)^080h,f
 12344  12E2  3000               	movlw	high(01h)
 12345  12E3  07C7               	addwf	(_pos+1)^080h,f
 12346                           	line	218
 12347                           ;HMI.c: 218: if (pos == 6)
 12348  12E4  3006               	movlw	06h
 12349  12E5  0646               	xorwf	(_pos)^080h,w
 12350  12E6  0447               	iorwf	(_pos+1)^080h,w
 12351  12E7  1D03               	skipz
 12352  12E8  2AEA               	goto	u3961
 12353  12E9  2AEB               	goto	u3960
 12354  12EA                     u3961:
 12355  12EA  2B08               	goto	l10865
 12356  12EB                     u3960:
 12357                           	line	219
 12358                           	
 12359  12EB                     l10855:	
 12360                           ;HMI.c: 219: pos = 0;
 12361  12EB  01C6               	clrf	(_pos)^080h
 12362  12EC  01C7               	clrf	(_pos+1)^080h
 12363  12ED  2B08               	goto	l10865
 12364                           	
 12365  12EE                     l4582:	
 12366                           	line	221
 12367                           ;HMI.c: 221: break;
 12368  12EE  2B08               	goto	l10865
 12369                           	line	222
 12370                           ;HMI.c: 222: case 5:
 12371                           	
 12372  12EF                     l4583:	
 12373                           	line	223
 12374                           	
 12375  12EF                     l10857:	
 12376                           ;HMI.c: 223: return pos;
 12377  12EF  1683               	bsf	status, 5	;RP0=1, select bank1
 12378  12F0  1303               	bcf	status, 6	;RP1=0, select bank1
 12379  12F1  0846               	movf	(_pos)^080h,w
 12380  12F2  2B0A               	goto	l4584
 12381                           	
 12382  12F3                     l10859:	
 12383  12F3  2B0A               	goto	l4584
 12384                           	line	226
 12385                           ;HMI.c: 226: default:
 12386                           	
 12387  12F4                     l4585:	
 12388                           	line	228
 12389                           ;HMI.c: 228: break;
 12390  12F4  2B08               	goto	l10865
 12391                           	line	229
 12392                           	
 12393  12F5                     l10861:	
 12394                           ;HMI.c: 229: }
 12395  12F5  2B08               	goto	l10865
 12396                           	line	202
 12397                           	
 12398  12F6                     l4575:	
 12399                           	
 12400  12F6                     l10863:	
 12401  12F6  1283               	bcf	status, 5	;RP0=0, select bank0
 12402  12F7  0820               	movf	(Menu@BTN_input),w
 12403                           	; Switch size 1, requested type "space"
 12404                           ; Number of cases is 5, Range of values is 1 to 5
 12405                           ; switch strategies available:
 12406                           ; Name         Instructions Cycles
 12407                           ; simple_byte           16     9 (average)
 12408                           ; direct_byte           26    11 (fixed)
 12409                           ; jumptable            263     9 (fixed)
 12410                           ;	Chosen strategy is simple_byte
 12411                           
 12412                           	opt asmopt_off
 12413  12F8  3A01               	xorlw	1^0	; case 1
 12414  12F9  1903               	skipnz
 12415  12FA  2B08               	goto	l10865
 12416  12FB  3A03               	xorlw	2^1	; case 2
 12417  12FC  1903               	skipnz
 12418  12FD  2B08               	goto	l10865
 12419  12FE  3A01               	xorlw	3^2	; case 3
 12420  12FF  1903               	skipnz
 12421  1300  2ACA               	goto	l10847
 12422  1301  3A07               	xorlw	4^3	; case 4
 12423  1302  1903               	skipnz
 12424  1303  2ADC               	goto	l10853
 12425  1304  3A01               	xorlw	5^4	; case 5
 12426  1305  1903               	skipnz
 12427  1306  2AEF               	goto	l10857
 12428  1307  2B08               	goto	l10865
 12429                           	opt asmopt_on
 12430                           
 12431                           	line	229
 12432                           	
 12433  1308                     l4577:	
 12434                           	line	230
 12435                           	
 12436  1308                     l10865:	
 12437                           ;HMI.c: 230: return 255;
 12438  1308  30FF               	movlw	(0FFh)
 12439  1309  2B0A               	goto	l4584
 12440                           	
 12441  130A                     l10867:	
 12442                           	line	231
 12443                           	
 12444  130A                     l4584:	
 12445  130A  0008               	return
 12446                           	opt stack 0
 12447                           GLOBAL	__end_of_Menu
 12448  130B                     	__end_of_Menu:
 12449 ;; =============== function _Menu ends ============
 12450                           
 12451                           	signat	_Menu,4217
 12452                           	global	_ser_init
 12453                           psect	text1100,local,class=CODE,delta=2
 12454                           global __ptext1100
 12455  1001                     __ptext1100:
 12456                           
 12457 ;; *************** function _ser_init *****************
 12458 ;; Defined at:
 12459 ;;		line 113 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;		None
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;		None               void
 12466 ;; Registers used:
 12467 ;;		wreg, status,2, status,0
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12473 ;;      Params:         0       0       0       0       0
 12474 ;;      Locals:         0       0       0       0       0
 12475 ;;      Temps:          0       1       0       0       0
 12476 ;;      Totals:         0       1       0       0       0
 12477 ;;Total ram usage:        1 bytes
 12478 ;; Hardware stack levels used:    1
 12479 ;; Hardware stack levels required when called:    3
 12480 ;; This function calls:
 12481 ;;		Nothing
 12482 ;; This function is called by:
 12483 ;;		_init
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           psect	text1100
 12487                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
 12488                           	line	113
 12489                           	global	__size_of_ser_init
 12490  002A                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 12491                           	
 12492  1001                     _ser_init:	
 12493                           	opt	stack 3
 12494                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 12495                           	line	114
 12496                           	
 12497  1001                     l10819:	
 12498                           ;ser.c: 114: TRISC |= 0b10000000;
 12499  1001  1683               	bsf	status, 5	;RP0=1, select bank1
 12500  1002  1303               	bcf	status, 6	;RP1=0, select bank1
 12501  1003  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 12502                           	line	115
 12503                           	
 12504  1004                     l10821:	
 12505                           ;ser.c: 115: TRISC &= 0b10111111;
 12506  1004  30BF               	movlw	(0BFh)
 12507  1005  1283               	bcf	status, 5	;RP0=0, select bank0
 12508  1006  1303               	bcf	status, 6	;RP1=0, select bank0
 12509  1007  00A0               	movwf	(??_ser_init+0)+0
 12510  1008  0820               	movf	(??_ser_init+0)+0,w
 12511  1009  1683               	bsf	status, 5	;RP0=1, select bank1
 12512  100A  1303               	bcf	status, 6	;RP1=0, select bank1
 12513  100B  0587               	andwf	(135)^080h,f	;volatile
 12514                           	line	116
 12515                           	
 12516  100C                     l10823:	
 12517                           ;ser.c: 116: BRGH=1;
 12518  100C  1518               	bsf	(1218/8)^080h,(1218)&7
 12519                           	line	118
 12520                           	
 12521  100D                     l10825:	
 12522                           ;ser.c: 118: SPBRG=20;
 12523  100D  3014               	movlw	(014h)
 12524  100E  0099               	movwf	(153)^080h	;volatile
 12525                           	line	121
 12526                           	
 12527  100F                     l10827:	
 12528                           ;ser.c: 121: TX9=0;
 12529  100F  1318               	bcf	(1222/8)^080h,(1222)&7
 12530                           	line	122
 12531                           	
 12532  1010                     l10829:	
 12533                           ;ser.c: 122: RX9=0;
 12534  1010  1283               	bcf	status, 5	;RP0=0, select bank0
 12535  1011  1303               	bcf	status, 6	;RP1=0, select bank0
 12536  1012  1318               	bcf	(198/8),(198)&7
 12537                           	line	124
 12538                           	
 12539  1013                     l10831:	
 12540                           ;ser.c: 124: SYNC=0;
 12541  1013  1683               	bsf	status, 5	;RP0=1, select bank1
 12542  1014  1303               	bcf	status, 6	;RP1=0, select bank1
 12543  1015  1218               	bcf	(1220/8)^080h,(1220)&7
 12544                           	line	125
 12545                           	
 12546  1016                     l10833:	
 12547                           ;ser.c: 125: SPEN=1;
 12548  1016  1283               	bcf	status, 5	;RP0=0, select bank0
 12549  1017  1303               	bcf	status, 6	;RP1=0, select bank0
 12550  1018  1798               	bsf	(199/8),(199)&7
 12551                           	line	126
 12552                           	
 12553  1019                     l10835:	
 12554                           ;ser.c: 126: CREN=1;
 12555  1019  1618               	bsf	(196/8),(196)&7
 12556                           	line	127
 12557                           	
 12558  101A                     l10837:	
 12559                           ;ser.c: 127: TXIE=0;
 12560  101A  1683               	bsf	status, 5	;RP0=1, select bank1
 12561  101B  1303               	bcf	status, 6	;RP1=0, select bank1
 12562  101C  120C               	bcf	(1124/8)^080h,(1124)&7
 12563                           	line	128
 12564                           	
 12565  101D                     l10839:	
 12566                           ;ser.c: 128: RCIE=1;
 12567  101D  168C               	bsf	(1125/8)^080h,(1125)&7
 12568                           	line	129
 12569                           	
 12570  101E                     l10841:	
 12571                           ;ser.c: 129: TXEN=1;
 12572  101E  1698               	bsf	(1221/8)^080h,(1221)&7
 12573                           	line	132
 12574                           	
 12575  101F                     l10843:	
 12576                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 12577  101F  3000               	movlw	(0)
 12578  1020  00E2               	movwf	(_txoptr)^080h	;volatile
 12579  1021  00E1               	movwf	(_txiptr)^080h	;volatile
 12580  1022  00DD               	movwf	(_rxoptr)^080h	;volatile
 12581  1023  1283               	bcf	status, 5	;RP0=0, select bank0
 12582  1024  1303               	bcf	status, 6	;RP1=0, select bank0
 12583  1025  00A0               	movwf	(??_ser_init+0)+0
 12584  1026  0820               	movf	(??_ser_init+0)+0,w
 12585  1027  1683               	bsf	status, 5	;RP0=1, select bank1
 12586  1028  1303               	bcf	status, 6	;RP1=0, select bank1
 12587  1029  00DC               	movwf	(_rxiptr)^080h	;volatile
 12588                           	line	133
 12589                           	
 12590  102A                     l6934:	
 12591  102A  0008               	return
 12592                           	opt stack 0
 12593                           GLOBAL	__end_of_ser_init
 12594  102B                     	__end_of_ser_init:
 12595 ;; =============== function _ser_init ends ============
 12596                           
 12597                           	signat	_ser_init,88
 12598                           	global	_adc_read
 12599                           psect	text1101,local,class=CODE,delta=2
 12600                           global __ptext1101
 12601  1FD7                     __ptext1101:
 12602                           
 12603 ;; *************** function _adc_read *****************
 12604 ;; Defined at:
 12605 ;;		line 76 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;		None
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  2    0[BANK0 ] unsigned int 
 12612 ;; Registers used:
 12613 ;;		wreg, status,2, status,0
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12619 ;;      Params:         0       2       0       0       0
 12620 ;;      Locals:         0       2       0       0       0
 12621 ;;      Temps:          0       2       0       0       0
 12622 ;;      Totals:         0       6       0       0       0
 12623 ;;Total ram usage:        6 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    3
 12626 ;; This function calls:
 12627 ;;		Nothing
 12628 ;; This function is called by:
 12629 ;;		_adc_read_channel
 12630 ;; This function uses a non-reentrant model
 12631 ;;
 12632                           psect	text1101
 12633                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
 12634                           	line	76
 12635                           	global	__size_of_adc_read
 12636  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 12637                           	
 12638  1FD7                     _adc_read:	
 12639                           	opt	stack 0
 12640                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 12641                           	line	79
 12642                           	
 12643  1FD7                     l10699:	
 12644                           ;adc.c: 77: volatile unsigned int adc_value;
 12645                           ;adc.c: 79: ADRESH = 0;
 12646  1FD7  1283               	bcf	status, 5	;RP0=0, select bank0
 12647  1FD8  1303               	bcf	status, 6	;RP1=0, select bank0
 12648  1FD9  019E               	clrf	(30)	;volatile
 12649                           	line	81
 12650                           	
 12651  1FDA                     l10701:	
 12652                           ;adc.c: 81: GO = 1;
 12653  1FDA  151F               	bsf	(250/8),(250)&7
 12654                           	line	82
 12655                           ;adc.c: 82: while(GO) continue;
 12656  1FDB  2FDC               	goto	l703
 12657                           	
 12658  1FDC                     l704:	
 12659                           	
 12660  1FDC                     l703:	
 12661  1FDC  191F               	btfsc	(250/8),(250)&7
 12662  1FDD  2FDF               	goto	u3761
 12663  1FDE  2FE0               	goto	u3760
 12664  1FDF                     u3761:
 12665  1FDF  2FDC               	goto	l703
 12666  1FE0                     u3760:
 12667                           	
 12668  1FE0                     l705:	
 12669                           	line	83
 12670                           # 83 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12671  1FE0  0000               nop ;#
 12672                           	line	84
 12673                           # 84 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12674  1FE1  0000               nop ;#
 12675                           	line	85
 12676                           # 85 "E:\Aldnoah.Zero\Assignment3\adc.c"
 12677  1FE2  0000               nop ;#
 12678                           psect	text1101
 12679                           	line	88
 12680                           	
 12681  1FE3                     l10703:	
 12682                           ;adc.c: 88: adc_value = ADRESH;
 12683  1FE3  1283               	bcf	status, 5	;RP0=0, select bank0
 12684  1FE4  1303               	bcf	status, 6	;RP1=0, select bank0
 12685  1FE5  081E               	movf	(30),w	;volatile
 12686  1FE6  00A2               	movwf	(??_adc_read+0)+0
 12687  1FE7  01A3               	clrf	(??_adc_read+0)+0+1
 12688  1FE8  0822               	movf	0+(??_adc_read+0)+0,w
 12689  1FE9  00A4               	movwf	(adc_read@adc_value)	;volatile
 12690  1FEA  0823               	movf	1+(??_adc_read+0)+0,w
 12691  1FEB  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 12692                           	line	89
 12693                           ;adc.c: 89: adc_value <<= 1;
 12694  1FEC  3001               	movlw	01h
 12695                           	
 12696  1FED                     u3775:
 12697  1FED  1003               	clrc
 12698  1FEE  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 12699  1FEF  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 12700  1FF0  3EFF               	addlw	-1
 12701  1FF1  1D03               	skipz
 12702  1FF2  2FED               	goto	u3775
 12703                           	line	90
 12704                           ;adc.c: 90: adc_value |= (ADRESL >> 15);
 12705  1FF3  1683               	bsf	status, 5	;RP0=1, select bank1
 12706  1FF4  1303               	bcf	status, 6	;RP1=0, select bank1
 12707  1FF5  081E               	movf	(158)^080h,w	;volatile
 12708                           	line	93
 12709                           	
 12710  1FF6                     l10705:	
 12711                           ;adc.c: 93: return (adc_value);
 12712  1FF6  1283               	bcf	status, 5	;RP0=0, select bank0
 12713  1FF7  1303               	bcf	status, 6	;RP1=0, select bank0
 12714  1FF8  0825               	movf	(adc_read@adc_value+1),w	;volatile
 12715  1FF9  01A1               	clrf	(?_adc_read+1)
 12716  1FFA  07A1               	addwf	(?_adc_read+1)
 12717  1FFB  0824               	movf	(adc_read@adc_value),w	;volatile
 12718  1FFC  01A0               	clrf	(?_adc_read)
 12719  1FFD  07A0               	addwf	(?_adc_read)
 12720                           
 12721  1FFE  2FFF               	goto	l706
 12722                           	
 12723  1FFF                     l10707:	
 12724                           	line	94
 12725                           	
 12726  1FFF                     l706:	
 12727  1FFF  0008               	return
 12728                           	opt stack 0
 12729                           GLOBAL	__end_of_adc_read
 12730  2000                     	__end_of_adc_read:
 12731 ;; =============== function _adc_read ends ============
 12732                           
 12733                           	signat	_adc_read,90
 12734                           	global	_isr1
 12735                           psect	text1102,local,class=CODE,delta=2
 12736                           global __ptext1102
 12737  1759                     __ptext1102:
 12738                           
 12739 ;; *************** function _isr1 *****************
 12740 ;; Defined at:
 12741 ;;		line 107 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;		None
 12744 ;; Auto vars:     Size  Location     Type
 12745 ;;		None
 12746 ;; Return value:  Size  Location     Type
 12747 ;;		None               void
 12748 ;; Registers used:
 12749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12750 ;; Tracked objects:
 12751 ;;		On entry : 0/0
 12752 ;;		On exit  : 0/0
 12753 ;;		Unchanged: 0/0
 12754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12755 ;;      Params:         0       0       0       0       0
 12756 ;;      Locals:         0       0       0       0       0
 12757 ;;      Temps:          5       0       0       0       0
 12758 ;;      Totals:         5       0       0       0       0
 12759 ;;Total ram usage:        5 bytes
 12760 ;; Hardware stack levels used:    1
 12761 ;; Hardware stack levels required when called:    2
 12762 ;; This function calls:
 12763 ;;		i1___lwmod
 12764 ;;		_ReadButtons
 12765 ;; This function is called by:
 12766 ;;		Interrupt level 1
 12767 ;; This function uses a non-reentrant model
 12768 ;;
 12769                           psect	text1102
 12770                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
 12771                           	line	107
 12772                           	global	__size_of_isr1
 12773  00A7                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 12774                           	
 12775  1759                     _isr1:	
 12776                           	opt	stack 0
 12777                           ; Regs used in _isr1: [allreg]
 12778                           psect	intentry,class=CODE,delta=2
 12779                           global __pintentry
 12780  0004                     __pintentry:
 12781                           global interrupt_function
 12782  0004                     interrupt_function:
 12783                           	global saved_w
 12784  007E                     	saved_w	set	btemp+0
 12785  0004  00FE               	movwf	saved_w
 12786  0005  0E03               	swapf	status,w
 12787  0006  00F9               	movwf	(??_isr1+1)
 12788  0007  0804               	movf	fsr0,w
 12789  0008  00FA               	movwf	(??_isr1+2)
 12790  0009  080A               	movf	pclath,w
 12791  000A  00FB               	movwf	(??_isr1+3)
 12792  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 12793  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 12794  000D  087F               	movf	btemp+1,w
 12795  000E  00FC               	movwf	(??_isr1+4)
 12796  000F  160A  118A  2F59   	ljmp	_isr1
 12797                           psect	text1102
 12798                           	line	108
 12799                           	
 12800  1759                     i1l10735:	
 12801                           ;Main.c: 108: if(TMR0IF)
 12802  1759  1D0B               	btfss	(90/8),(90)&7
 12803  175A  2F5C               	goto	u381_21
 12804  175B  2F5D               	goto	u381_20
 12805  175C                     u381_21:
 12806  175C  2FAC               	goto	i1l10757
 12807  175D                     u381_20:
 12808                           	line	110
 12809                           	
 12810  175D                     i1l10737:	
 12811                           ;Main.c: 109: {
 12812                           ;Main.c: 110: TMR0IF = 0;
 12813  175D  110B               	bcf	(90/8),(90)&7
 12814                           	line	111
 12815                           	
 12816  175E                     i1l10739:	
 12817                           ;Main.c: 111: TMR0 = 100;
 12818  175E  3064               	movlw	(064h)
 12819  175F  0081               	movwf	(1)	;volatile
 12820                           	line	113
 12821                           ;Main.c: 113: RTC_Counter++;
 12822  1760  3001               	movlw	low(01h)
 12823  1761  1683               	bsf	status, 5	;RP0=1, select bank1
 12824  1762  1303               	bcf	status, 6	;RP1=0, select bank1
 12825  1763  07BA               	addwf	(_RTC_Counter)^080h,f	;volatile
 12826  1764  1803               	skipnc
 12827  1765  0ABB               	incf	(_RTC_Counter+1)^080h,f	;volatile
 12828  1766  3000               	movlw	high(01h)
 12829  1767  07BB               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 12830                           	line	116
 12831                           	
 12832  1768                     i1l10741:	
 12833                           ;Main.c: 116: RTC_FLAG_1MS = 1;
 12834  1768  1770               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 12835                           	line	117
 12836                           	
 12837  1769                     i1l10743:	
 12838                           ;Main.c: 117: if(RTC_Counter % 250 == 0)
 12839  1769  30FA               	movlw	low(0FAh)
 12840  176A  00F2               	movwf	(?i1___lwmod)
 12841  176B  3000               	movlw	high(0FAh)
 12842  176C  00F3               	movwf	((?i1___lwmod))+1
 12843  176D  083B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12844  176E  01F5               	clrf	1+(?i1___lwmod)+02h
 12845  176F  07F5               	addwf	1+(?i1___lwmod)+02h
 12846  1770  083A               	movf	(_RTC_Counter)^080h,w	;volatile
 12847  1771  01F4               	clrf	0+(?i1___lwmod)+02h
 12848  1772  07F4               	addwf	0+(?i1___lwmod)+02h
 12849                           
 12850  1773  160A  118A  223A   	fcall	i1___lwmod
              160A  118A         
 12851  1778  0873               	movf	((1+(?i1___lwmod))),w
 12852  1779  0472               	iorwf	((0+(?i1___lwmod))),w
 12853  177A  1D03               	skipz
 12854  177B  2F7D               	goto	u382_21
 12855  177C  2F7E               	goto	u382_20
 12856  177D                     u382_21:
 12857  177D  2F80               	goto	i1l10747
 12858  177E                     u382_20:
 12859                           	line	119
 12860                           	
 12861  177E                     i1l10745:	
 12862                           ;Main.c: 118: {
 12863                           ;Main.c: 119: RTC_FLAG_250MS = 1;
 12864  177E  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 12865  177F  2F80               	goto	i1l10747
 12866                           	line	120
 12867                           	
 12868  1780                     i1l2239:	
 12869                           	line	121
 12870                           	
 12871  1780                     i1l10747:	
 12872                           ;Main.c: 120: }
 12873                           ;Main.c: 121: if(RTC_Counter % 500 == 0)
 12874  1780  30F4               	movlw	low(01F4h)
 12875  1781  00F2               	movwf	(?i1___lwmod)
 12876  1782  3001               	movlw	high(01F4h)
 12877  1783  00F3               	movwf	((?i1___lwmod))+1
 12878  1784  1683               	bsf	status, 5	;RP0=1, select bank1
 12879  1785  1303               	bcf	status, 6	;RP1=0, select bank1
 12880  1786  083B               	movf	(_RTC_Counter+1)^080h,w	;volatile
 12881  1787  01F5               	clrf	1+(?i1___lwmod)+02h
 12882  1788  07F5               	addwf	1+(?i1___lwmod)+02h
 12883  1789  083A               	movf	(_RTC_Counter)^080h,w	;volatile
 12884  178A  01F4               	clrf	0+(?i1___lwmod)+02h
 12885  178B  07F4               	addwf	0+(?i1___lwmod)+02h
 12886                           
 12887  178C  160A  118A  223A   	fcall	i1___lwmod
              160A  118A         
 12888  1791  0873               	movf	((1+(?i1___lwmod))),w
 12889  1792  0472               	iorwf	((0+(?i1___lwmod))),w
 12890  1793  1D03               	skipz
 12891  1794  2F96               	goto	u383_21
 12892  1795  2F97               	goto	u383_20
 12893  1796                     u383_21:
 12894  1796  2F9D               	goto	i1l10753
 12895  1797                     u383_20:
 12896                           	line	123
 12897                           	
 12898  1797                     i1l10749:	
 12899                           ;Main.c: 122: {
 12900                           ;Main.c: 123: RTC_FLAG_500MS = 1;
 12901  1797  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 12902                           	line	124
 12903                           	
 12904  1798                     i1l10751:	
 12905                           ;Main.c: 124: RB0 ^= 0x01;
 12906  1798  1283               	bcf	status, 5	;RP0=0, select bank0
 12907  1799  1303               	bcf	status, 6	;RP1=0, select bank0
 12908  179A  3001               	movlw	1<<((48)&7)
 12909  179B  0686               	xorwf	((48)/8),f
 12910  179C  2F9D               	goto	i1l10753
 12911                           	line	125
 12912                           	
 12913  179D                     i1l2240:	
 12914                           	line	126
 12915                           	
 12916  179D                     i1l10753:	
 12917                           ;Main.c: 125: }
 12918                           ;Main.c: 126: if (buttonPressed == 0)
 12919  179D  08FD               	movf	(_buttonPressed),f
 12920  179E  1D03               	skipz	;volatile
 12921  179F  2FA1               	goto	u384_21
 12922  17A0  2FA2               	goto	u384_20
 12923  17A1                     u384_21:
 12924  17A1  2FAC               	goto	i1l10757
 12925  17A2                     u384_20:
 12926                           	line	128
 12927                           	
 12928  17A2                     i1l10755:	
 12929                           ;Main.c: 127: {
 12930                           ;Main.c: 128: buttonPressed = ReadButtons();
 12931  17A2  160A  118A  2161   	fcall	_ReadButtons
              160A  118A         
 12932  17A7  00F8               	movwf	(??_isr1+0)+0
 12933  17A8  0878               	movf	(??_isr1+0)+0,w
 12934  17A9  00FD               	movwf	(_buttonPressed)	;volatile
 12935  17AA  2FAC               	goto	i1l10757
 12936                           	line	129
 12937                           	
 12938  17AB                     i1l2241:	
 12939  17AB  2FAC               	goto	i1l10757
 12940                           	line	130
 12941                           	
 12942  17AC                     i1l2238:	
 12943                           	line	131
 12944                           	
 12945  17AC                     i1l10757:	
 12946                           ;Main.c: 129: }
 12947                           ;Main.c: 130: }
 12948                           ;Main.c: 131: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 12949  17AC  1283               	bcf	status, 5	;RP0=0, select bank0
 12950  17AD  1303               	bcf	status, 6	;RP1=0, select bank0
 12951  17AE  1E8C               	btfss	(101/8),(101)&7
 12952  17AF  2FB1               	goto	u385_21
 12953  17B0  2FB2               	goto	u385_20
 12954  17B1                     u385_21:
 12955  17B1  2FCE               	goto	i1l10767
 12956  17B2                     u385_20:
 12957                           	
 12958  17B2                     i1l10759:	
 12959  17B2  081A               	movf	(26),w	;volatile
 12960  17B3  00F8               	movwf	(??_isr1+0)+0
 12961  17B4  1683               	bsf	status, 5	;RP0=1, select bank1
 12962  17B5  1303               	bcf	status, 6	;RP1=0, select bank1
 12963  17B6  085C               	movf	(_rxiptr)^080h,w
 12964  17B7  3EA0               	addlw	_rxfifo&0ffh
 12965  17B8  0084               	movwf	fsr0
 12966  17B9  0878               	movf	(??_isr1+0)+0,w
 12967  17BA  1383               	bcf	status, 7	;select IRP bank1
 12968  17BB  0080               	movwf	indf
 12969                           	
 12970  17BC                     i1l10761:	
 12971  17BC  085C               	movf	(_rxiptr)^080h,w	;volatile
 12972  17BD  3E01               	addlw	01h
 12973  17BE  390F               	andlw	0Fh
 12974  17BF  00F8               	movwf	(??_isr1+0)+0
 12975  17C0  0878               	movf	(??_isr1+0)+0,w
 12976  17C1  00DE               	movwf	(_ser_tmp)^080h
 12977                           	
 12978  17C2                     i1l10763:	
 12979  17C2  085E               	movf	(_ser_tmp)^080h,w
 12980  17C3  065D               	xorwf	(_rxoptr)^080h,w	;volatile
 12981  17C4  1903               	skipnz
 12982  17C5  2FC7               	goto	u386_21
 12983  17C6  2FC8               	goto	u386_20
 12984  17C7                     u386_21:
 12985  17C7  2FCE               	goto	i1l10767
 12986  17C8                     u386_20:
 12987                           	
 12988  17C8                     i1l10765:	
 12989  17C8  085E               	movf	(_ser_tmp)^080h,w
 12990  17C9  00F8               	movwf	(??_isr1+0)+0
 12991  17CA  0878               	movf	(??_isr1+0)+0,w
 12992  17CB  00DC               	movwf	(_rxiptr)^080h	;volatile
 12993  17CC  2FCE               	goto	i1l10767
 12994                           	
 12995  17CD                     i1l2243:	
 12996  17CD  2FCE               	goto	i1l10767
 12997                           	
 12998  17CE                     i1l2242:	
 12999                           	
 13000  17CE                     i1l10767:	
 13001  17CE  1283               	bcf	status, 5	;RP0=0, select bank0
 13002  17CF  1E0C               	btfss	(100/8),(100)&7
 13003  17D0  2FD2               	goto	u387_21
 13004  17D1  2FD3               	goto	u387_20
 13005  17D2                     u387_21:
 13006  17D2  2FF4               	goto	i1l2246
 13007  17D3                     u387_20:
 13008                           	
 13009  17D3                     i1l10769:	
 13010  17D3  1683               	bsf	status, 5	;RP0=1, select bank1
 13011  17D4  1303               	bcf	status, 6	;RP1=0, select bank1
 13012  17D5  1E0C               	btfss	(1124/8)^080h,(1124)&7
 13013  17D6  2FD8               	goto	u388_21
 13014  17D7  2FD9               	goto	u388_20
 13015  17D8                     u388_21:
 13016  17D8  2FF4               	goto	i1l2246
 13017  17D9                     u388_20:
 13018                           	
 13019  17D9                     i1l10771:	
 13020  17D9  0862               	movf	(_txoptr)^080h,w
 13021  17DA  3EA0               	addlw	_txfifo&0ffh
 13022  17DB  0084               	movwf	fsr0
 13023  17DC  1783               	bsf	status, 7	;select IRP bank3
 13024  17DD  0800               	movf	indf,w
 13025  17DE  1283               	bcf	status, 5	;RP0=0, select bank0
 13026  17DF  1303               	bcf	status, 6	;RP1=0, select bank0
 13027  17E0  0099               	movwf	(25)	;volatile
 13028                           	
 13029  17E1                     i1l10773:	
 13030  17E1  3001               	movlw	(01h)
 13031  17E2  00F8               	movwf	(??_isr1+0)+0
 13032  17E3  0878               	movf	(??_isr1+0)+0,w
 13033  17E4  1683               	bsf	status, 5	;RP0=1, select bank1
 13034  17E5  1303               	bcf	status, 6	;RP1=0, select bank1
 13035  17E6  07E2               	addwf	(_txoptr)^080h,f	;volatile
 13036                           	
 13037  17E7                     i1l10775:	
 13038  17E7  300F               	movlw	(0Fh)
 13039  17E8  00F8               	movwf	(??_isr1+0)+0
 13040  17E9  0878               	movf	(??_isr1+0)+0,w
 13041  17EA  05E2               	andwf	(_txoptr)^080h,f	;volatile
 13042                           	
 13043  17EB                     i1l10777:	
 13044  17EB  0862               	movf	(_txoptr)^080h,w	;volatile
 13045  17EC  0661               	xorwf	(_txiptr)^080h,w	;volatile
 13046  17ED  1D03               	skipz
 13047  17EE  2FF0               	goto	u389_21
 13048  17EF  2FF1               	goto	u389_20
 13049  17F0                     u389_21:
 13050  17F0  2FF4               	goto	i1l2246
 13051  17F1                     u389_20:
 13052                           	
 13053  17F1                     i1l10779:	
 13054  17F1  120C               	bcf	(1124/8)^080h,(1124)&7
 13055  17F2  2FF4               	goto	i1l2246
 13056                           	
 13057  17F3                     i1l2245:	
 13058  17F3  2FF4               	goto	i1l2246
 13059                           	
 13060  17F4                     i1l2244:	
 13061                           	line	132
 13062                           	
 13063  17F4                     i1l2246:	
 13064  17F4  087C               	movf	(??_isr1+4),w
 13065  17F5  1283               	bcf	status, 5	;RP0=0, select bank0
 13066  17F6  00FF               	movwf	btemp+1
 13067  17F7  087B               	movf	(??_isr1+3),w
 13068  17F8  008A               	movwf	pclath
 13069  17F9  087A               	movf	(??_isr1+2),w
 13070  17FA  0084               	movwf	fsr0
 13071  17FB  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 13072  17FC  0083               	movwf	status
 13073  17FD  0EFE               	swapf	saved_w,f
 13074  17FE  0E7E               	swapf	saved_w,w
 13075  17FF  0009               	retfie
 13076                           	opt stack 0
 13077                           GLOBAL	__end_of_isr1
 13078  1800                     	__end_of_isr1:
 13079 ;; =============== function _isr1 ends ============
 13080                           
 13081                           	signat	_isr1,88
 13082                           	global	_ReadButtons
 13083                           psect	text1103,local,class=CODE,delta=2
 13084                           global __ptext1103
 13085  1161                     __ptext1103:
 13086                           
 13087 ;; *************** function _ReadButtons *****************
 13088 ;; Defined at:
 13089 ;;		line 159 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 13090 ;; Parameters:    Size  Location     Type
 13091 ;;		None
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;		None
 13094 ;; Return value:  Size  Location     Type
 13095 ;;                  1    wreg      unsigned char 
 13096 ;; Registers used:
 13097 ;;		wreg, status,2, status,0, pclath, cstack
 13098 ;; Tracked objects:
 13099 ;;		On entry : 0/0
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13103 ;;      Params:         0       0       0       0       0
 13104 ;;      Locals:         0       0       0       0       0
 13105 ;;      Temps:          0       0       0       0       0
 13106 ;;      Totals:         0       0       0       0       0
 13107 ;;Total ram usage:        0 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:    1
 13110 ;; This function calls:
 13111 ;;		_Debounce
 13112 ;; This function is called by:
 13113 ;;		_isr1
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           psect	text1103
 13117                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 13118                           	line	159
 13119                           	global	__size_of_ReadButtons
 13120  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 13121                           	
 13122  1161                     _ReadButtons:	
 13123                           	opt	stack 0
 13124                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 13125                           	line	161
 13126                           	
 13127  1161                     i1l10781:	
 13128                           ;HMI.c: 161: Debounce();
 13129  1161  160A  118A  26C1   	fcall	_Debounce
              160A  118A         
 13130                           	line	163
 13131                           	
 13132  1166                     i1l10783:	
 13133                           ;HMI.c: 163: if(UpPressed)
 13134  1166  1DF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 13135  1167  2969               	goto	u390_21
 13136  1168  296A               	goto	u390_20
 13137  1169                     u390_21:
 13138  1169  296E               	goto	i1l4567
 13139  116A                     u390_20:
 13140                           	line	165
 13141                           	
 13142  116A                     i1l10785:	
 13143                           ;HMI.c: 164: {
 13144                           ;HMI.c: 165: UpPressed = 0;
 13145  116A  11F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 13146                           	line	166
 13147                           	
 13148  116B                     i1l10787:	
 13149                           ;HMI.c: 166: return 1;
 13150  116B  3001               	movlw	(01h)
 13151  116C  2990               	goto	i1l4568
 13152                           	
 13153  116D                     i1l10789:	
 13154  116D  2990               	goto	i1l4568
 13155                           	line	168
 13156                           	
 13157  116E                     i1l4567:	
 13158                           	line	170
 13159                           ;HMI.c: 168: }
 13160                           ;HMI.c: 170: if(DownPressed)
 13161  116E  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 13162  116F  2971               	goto	u391_21
 13163  1170  2972               	goto	u391_20
 13164  1171                     u391_21:
 13165  1171  2976               	goto	i1l4569
 13166  1172                     u391_20:
 13167                           	line	172
 13168                           	
 13169  1172                     i1l10791:	
 13170                           ;HMI.c: 171: {
 13171                           ;HMI.c: 172: DownPressed = 0;
 13172  1172  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 13173                           	line	173
 13174                           	
 13175  1173                     i1l10793:	
 13176                           ;HMI.c: 173: return 2;
 13177  1173  3002               	movlw	(02h)
 13178  1174  2990               	goto	i1l4568
 13179                           	
 13180  1175                     i1l10795:	
 13181  1175  2990               	goto	i1l4568
 13182                           	line	175
 13183                           	
 13184  1176                     i1l4569:	
 13185                           	line	176
 13186                           ;HMI.c: 175: }
 13187                           ;HMI.c: 176: if(LeftPressed)
 13188  1176  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 13189  1177  2979               	goto	u392_21
 13190  1178  297A               	goto	u392_20
 13191  1179                     u392_21:
 13192  1179  297E               	goto	i1l4570
 13193  117A                     u392_20:
 13194                           	line	178
 13195                           	
 13196  117A                     i1l10797:	
 13197                           ;HMI.c: 177: {
 13198                           ;HMI.c: 178: LeftPressed = 0;
 13199  117A  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 13200                           	line	179
 13201                           	
 13202  117B                     i1l10799:	
 13203                           ;HMI.c: 179: return 3;
 13204  117B  3003               	movlw	(03h)
 13205  117C  2990               	goto	i1l4568
 13206                           	
 13207  117D                     i1l10801:	
 13208  117D  2990               	goto	i1l4568
 13209                           	line	181
 13210                           	
 13211  117E                     i1l4570:	
 13212                           	line	182
 13213                           ;HMI.c: 181: }
 13214                           ;HMI.c: 182: if(RightPressed)
 13215  117E  1CF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 13216  117F  2981               	goto	u393_21
 13217  1180  2982               	goto	u393_20
 13218  1181                     u393_21:
 13219  1181  2986               	goto	i1l4571
 13220  1182                     u393_20:
 13221                           	line	184
 13222                           	
 13223  1182                     i1l10803:	
 13224                           ;HMI.c: 183: {
 13225                           ;HMI.c: 184: RightPressed = 0;
 13226  1182  10F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 13227                           	line	185
 13228                           	
 13229  1183                     i1l10805:	
 13230                           ;HMI.c: 185: return 4;
 13231  1183  3004               	movlw	(04h)
 13232  1184  2990               	goto	i1l4568
 13233                           	
 13234  1185                     i1l10807:	
 13235  1185  2990               	goto	i1l4568
 13236                           	line	187
 13237                           	
 13238  1186                     i1l4571:	
 13239                           	line	189
 13240                           ;HMI.c: 187: }
 13241                           ;HMI.c: 189: if(CenterPressed)
 13242  1186  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 13243  1187  2989               	goto	u394_21
 13244  1188  298A               	goto	u394_20
 13245  1189                     u394_21:
 13246  1189  298E               	goto	i1l10815
 13247  118A                     u394_20:
 13248                           	line	191
 13249                           	
 13250  118A                     i1l10809:	
 13251                           ;HMI.c: 190: {
 13252                           ;HMI.c: 191: CenterPressed = 0;
 13253  118A  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 13254                           	line	192
 13255                           	
 13256  118B                     i1l10811:	
 13257                           ;HMI.c: 192: return 5;
 13258  118B  3005               	movlw	(05h)
 13259  118C  2990               	goto	i1l4568
 13260                           	
 13261  118D                     i1l10813:	
 13262  118D  2990               	goto	i1l4568
 13263                           	line	194
 13264                           	
 13265  118E                     i1l4572:	
 13266                           	line	195
 13267                           	
 13268  118E                     i1l10815:	
 13269                           ;HMI.c: 194: }
 13270                           ;HMI.c: 195: return 0;
 13271  118E  3000               	movlw	(0)
 13272  118F  2990               	goto	i1l4568
 13273                           	
 13274  1190                     i1l10817:	
 13275                           	line	196
 13276                           	
 13277  1190                     i1l4568:	
 13278  1190  0008               	return
 13279                           	opt stack 0
 13280                           GLOBAL	__end_of_ReadButtons
 13281  1191                     	__end_of_ReadButtons:
 13282 ;; =============== function _ReadButtons ends ============
 13283                           
 13284                           	signat	_ReadButtons,89
 13285                           	global	i1___lwmod
 13286                           psect	text1104,local,class=CODE,delta=2
 13287                           global __ptext1104
 13288  123A                     __ptext1104:
 13289                           
 13290 ;; *************** function i1___lwmod *****************
 13291 ;; Defined at:
 13292 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;  __lwmod         2    0[COMMON] unsigned int 
 13295 ;;  __lwmod         2    2[COMMON] unsigned int 
 13296 ;; Auto vars:     Size  Location     Type
 13297 ;;  __lwmod         1    5[COMMON] unsigned char 
 13298 ;; Return value:  Size  Location     Type
 13299 ;;                  2    0[COMMON] unsigned int 
 13300 ;; Registers used:
 13301 ;;		wreg, status,2, status,0
 13302 ;; Tracked objects:
 13303 ;;		On entry : 0/0
 13304 ;;		On exit  : 0/0
 13305 ;;		Unchanged: 0/0
 13306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13307 ;;      Params:         4       0       0       0       0
 13308 ;;      Locals:         1       0       0       0       0
 13309 ;;      Temps:          1       0       0       0       0
 13310 ;;      Totals:         6       0       0       0       0
 13311 ;;Total ram usage:        6 bytes
 13312 ;; Hardware stack levels used:    1
 13313 ;; This function calls:
 13314 ;;		Nothing
 13315 ;; This function is called by:
 13316 ;;		_isr1
 13317 ;; This function uses a non-reentrant model
 13318 ;;
 13319                           psect	text1104
 13320                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 13321                           	line	5
 13322                           	global	__size_ofi1___lwmod
 13323  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 13324                           	
 13325  123A                     i1___lwmod:	
 13326                           	opt	stack 1
 13327                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 13328                           	line	8
 13329                           	
 13330  123A                     i1l11145:	
 13331  123A  0873               	movf	(i1___lwmod@divisor+1),w
 13332  123B  0472               	iorwf	(i1___lwmod@divisor),w
 13333  123C  1903               	skipnz
 13334  123D  2A3F               	goto	u461_21
 13335  123E  2A40               	goto	u461_20
 13336  123F                     u461_21:
 13337  123F  2A76               	goto	i1l11163
 13338  1240                     u461_20:
 13339                           	line	9
 13340                           	
 13341  1240                     i1l11147:	
 13342  1240  01F7               	clrf	(i1___lwmod@counter)
 13343  1241  1403               	bsf	status,0
 13344  1242  0DF7               	rlf	(i1___lwmod@counter),f
 13345                           	line	10
 13346  1243  2A50               	goto	i1l11153
 13347                           	
 13348  1244                     i1l7663:	
 13349                           	line	11
 13350                           	
 13351  1244                     i1l11149:	
 13352  1244  3001               	movlw	01h
 13353                           	
 13354  1245                     u462_25:
 13355  1245  1003               	clrc
 13356  1246  0DF2               	rlf	(i1___lwmod@divisor),f
 13357  1247  0DF3               	rlf	(i1___lwmod@divisor+1),f
 13358  1248  3EFF               	addlw	-1
 13359  1249  1D03               	skipz
 13360  124A  2A45               	goto	u462_25
 13361                           	line	12
 13362                           	
 13363  124B                     i1l11151:	
 13364  124B  3001               	movlw	(01h)
 13365  124C  00F6               	movwf	(??i1___lwmod+0)+0
 13366  124D  0876               	movf	(??i1___lwmod+0)+0,w
 13367  124E  07F7               	addwf	(i1___lwmod@counter),f
 13368  124F  2A50               	goto	i1l11153
 13369                           	line	13
 13370                           	
 13371  1250                     i1l7662:	
 13372                           	line	10
 13373                           	
 13374  1250                     i1l11153:	
 13375  1250  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 13376  1251  2A53               	goto	u463_21
 13377  1252  2A54               	goto	u463_20
 13378  1253                     u463_21:
 13379  1253  2A44               	goto	i1l11149
 13380  1254                     u463_20:
 13381  1254  2A56               	goto	i1l11155
 13382                           	
 13383  1255                     i1l7664:	
 13384  1255  2A56               	goto	i1l11155
 13385                           	line	14
 13386                           	
 13387  1256                     i1l7665:	
 13388                           	line	15
 13389                           	
 13390  1256                     i1l11155:	
 13391  1256  0873               	movf	(i1___lwmod@divisor+1),w
 13392  1257  0275               	subwf	(i1___lwmod@dividend+1),w
 13393  1258  1D03               	skipz
 13394  1259  2A5C               	goto	u464_25
 13395  125A  0872               	movf	(i1___lwmod@divisor),w
 13396  125B  0274               	subwf	(i1___lwmod@dividend),w
 13397  125C                     u464_25:
 13398  125C  1C03               	skipc
 13399  125D  2A5F               	goto	u464_21
 13400  125E  2A60               	goto	u464_20
 13401  125F                     u464_21:
 13402  125F  2A67               	goto	i1l11159
 13403  1260                     u464_20:
 13404                           	line	16
 13405                           	
 13406  1260                     i1l11157:	
 13407  1260  0872               	movf	(i1___lwmod@divisor),w
 13408  1261  02F4               	subwf	(i1___lwmod@dividend),f
 13409  1262  0873               	movf	(i1___lwmod@divisor+1),w
 13410  1263  1C03               	skipc
 13411  1264  03F5               	decf	(i1___lwmod@dividend+1),f
 13412  1265  02F5               	subwf	(i1___lwmod@dividend+1),f
 13413  1266  2A67               	goto	i1l11159
 13414                           	
 13415  1267                     i1l7666:	
 13416                           	line	17
 13417                           	
 13418  1267                     i1l11159:	
 13419  1267  3001               	movlw	01h
 13420                           	
 13421  1268                     u465_25:
 13422  1268  1003               	clrc
 13423  1269  0CF3               	rrf	(i1___lwmod@divisor+1),f
 13424  126A  0CF2               	rrf	(i1___lwmod@divisor),f
 13425  126B  3EFF               	addlw	-1
 13426  126C  1D03               	skipz
 13427  126D  2A68               	goto	u465_25
 13428                           	line	18
 13429                           	
 13430  126E                     i1l11161:	
 13431  126E  3001               	movlw	low(01h)
 13432  126F  02F7               	subwf	(i1___lwmod@counter),f
 13433  1270  1D03               	btfss	status,2
 13434  1271  2A73               	goto	u466_21
 13435  1272  2A74               	goto	u466_20
 13436  1273                     u466_21:
 13437  1273  2A56               	goto	i1l11155
 13438  1274                     u466_20:
 13439  1274  2A76               	goto	i1l11163
 13440                           	
 13441  1275                     i1l7667:	
 13442  1275  2A76               	goto	i1l11163
 13443                           	line	19
 13444                           	
 13445  1276                     i1l7661:	
 13446                           	line	20
 13447                           	
 13448  1276                     i1l11163:	
 13449  1276  0875               	movf	(i1___lwmod@dividend+1),w
 13450  1277  01F3               	clrf	(?i1___lwmod+1)
 13451  1278  07F3               	addwf	(?i1___lwmod+1)
 13452  1279  0874               	movf	(i1___lwmod@dividend),w
 13453  127A  01F2               	clrf	(?i1___lwmod)
 13454  127B  07F2               	addwf	(?i1___lwmod)
 13455                           
 13456  127C  2A7D               	goto	i1l7668
 13457                           	
 13458  127D                     i1l11165:	
 13459                           	line	21
 13460                           	
 13461  127D                     i1l7668:	
 13462  127D  0008               	return
 13463                           	opt stack 0
 13464                           GLOBAL	__end_ofi1___lwmod
 13465  127E                     	__end_ofi1___lwmod:
 13466 ;; =============== function i1___lwmod ends ============
 13467                           
 13468                           	signat	i1___lwmod,90
 13469                           	global	_Debounce
 13470                           psect	text1105,local,class=CODE,delta=2
 13471                           global __ptext1105
 13472  16C1                     __ptext1105:
 13473                           
 13474 ;; *************** function _Debounce *****************
 13475 ;; Defined at:
 13476 ;;		line 77 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;		None
 13479 ;; Auto vars:     Size  Location     Type
 13480 ;;		None
 13481 ;; Return value:  Size  Location     Type
 13482 ;;		None               void
 13483 ;; Registers used:
 13484 ;;		wreg, status,2, status,0
 13485 ;; Tracked objects:
 13486 ;;		On entry : 0/0
 13487 ;;		On exit  : 0/0
 13488 ;;		Unchanged: 0/0
 13489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13490 ;;      Params:         0       0       0       0       0
 13491 ;;      Locals:         0       0       0       0       0
 13492 ;;      Temps:          1       0       0       0       0
 13493 ;;      Totals:         1       0       0       0       0
 13494 ;;Total ram usage:        1 bytes
 13495 ;; Hardware stack levels used:    1
 13496 ;; This function calls:
 13497 ;;		Nothing
 13498 ;; This function is called by:
 13499 ;;		_ReadButtons
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           psect	text1105
 13503                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
 13504                           	line	77
 13505                           	global	__size_of_Debounce
 13506  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 13507                           	
 13508  16C1                     _Debounce:	
 13509                           	opt	stack 0
 13510                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 13511                           	line	79
 13512                           	
 13513  16C1                     i1l10921:	
 13514                           ;HMI.c: 79: if(!RB2)
 13515  16C1  1283               	bcf	status, 5	;RP0=0, select bank0
 13516  16C2  1303               	bcf	status, 6	;RP1=0, select bank0
 13517  16C3  1906               	btfsc	(50/8),(50)&7
 13518  16C4  2EC6               	goto	u403_21
 13519  16C5  2EC7               	goto	u403_20
 13520  16C6                     u403_21:
 13521  16C6  2EDB               	goto	i1l4549
 13522  16C7                     u403_20:
 13523                           	line	81
 13524                           	
 13525  16C7                     i1l10923:	
 13526                           ;HMI.c: 80: {
 13527                           ;HMI.c: 81: UpDebounceCount++;
 13528  16C7  3001               	movlw	(01h)
 13529  16C8  00F2               	movwf	(??_Debounce+0)+0
 13530  16C9  0872               	movf	(??_Debounce+0)+0,w
 13531  16CA  1683               	bsf	status, 5	;RP0=1, select bank1
 13532  16CB  1303               	bcf	status, 6	;RP1=0, select bank1
 13533  16CC  07D7               	addwf	(_UpDebounceCount)^080h,f	;volatile
 13534                           	line	82
 13535                           	
 13536  16CD                     i1l10925:	
 13537                           ;HMI.c: 82: if(UpDebounceCount >= 10 & UpReleased)
 13538  16CD  300A               	movlw	(0Ah)
 13539  16CE  0257               	subwf	(_UpDebounceCount)^080h,w	;volatile
 13540  16CF  1C03               	skipc
 13541  16D0  2ED2               	goto	u404_21
 13542  16D1  2ED3               	goto	u404_20
 13543  16D2                     u404_21:
 13544  16D2  2EDF               	goto	i1l4551
 13545  16D3                     u404_20:
 13546                           	
 13547  16D3                     i1l10927:	
 13548  16D3  1E71               	btfss	(_UpReleased/8),(_UpReleased)&7
 13549  16D4  2ED6               	goto	u405_21
 13550  16D5  2ED7               	goto	u405_20
 13551  16D6                     u405_21:
 13552  16D6  2EDF               	goto	i1l4551
 13553  16D7                     u405_20:
 13554                           	line	84
 13555                           	
 13556  16D7                     i1l10929:	
 13557                           ;HMI.c: 83: {
 13558                           ;HMI.c: 84: UpPressed = 1;
 13559  16D7  15F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 13560                           	line	85
 13561                           ;HMI.c: 85: UpReleased = 0;
 13562  16D8  1271               	bcf	(_UpReleased/8),(_UpReleased)&7
 13563  16D9  2EDF               	goto	i1l4551
 13564                           	line	86
 13565                           	
 13566  16DA                     i1l4550:	
 13567                           	line	87
 13568                           ;HMI.c: 86: }
 13569                           ;HMI.c: 87: }
 13570  16DA  2EDF               	goto	i1l4551
 13571                           	line	88
 13572                           	
 13573  16DB                     i1l4549:	
 13574                           	line	90
 13575                           ;HMI.c: 88: else
 13576                           ;HMI.c: 89: {
 13577                           ;HMI.c: 90: UpDebounceCount = 0;
 13578  16DB  1683               	bsf	status, 5	;RP0=1, select bank1
 13579  16DC  1303               	bcf	status, 6	;RP1=0, select bank1
 13580  16DD  01D7               	clrf	(_UpDebounceCount)^080h	;volatile
 13581                           	line	91
 13582                           ;HMI.c: 91: UpReleased = 1;
 13583  16DE  1671               	bsf	(_UpReleased/8),(_UpReleased)&7
 13584                           	line	92
 13585                           	
 13586  16DF                     i1l4551:	
 13587                           	line	95
 13588                           ;HMI.c: 92: }
 13589                           ;HMI.c: 95: if(!RB3)
 13590  16DF  1283               	bcf	status, 5	;RP0=0, select bank0
 13591  16E0  1303               	bcf	status, 6	;RP1=0, select bank0
 13592  16E1  1986               	btfsc	(51/8),(51)&7
 13593  16E2  2EE4               	goto	u406_21
 13594  16E3  2EE5               	goto	u406_20
 13595  16E4                     u406_21:
 13596  16E4  2EF9               	goto	i1l4552
 13597  16E5                     u406_20:
 13598                           	line	97
 13599                           	
 13600  16E5                     i1l10931:	
 13601                           ;HMI.c: 96: {
 13602                           ;HMI.c: 97: DownDebounceCount++;
 13603  16E5  3001               	movlw	(01h)
 13604  16E6  00F2               	movwf	(??_Debounce+0)+0
 13605  16E7  0872               	movf	(??_Debounce+0)+0,w
 13606  16E8  1683               	bsf	status, 5	;RP0=1, select bank1
 13607  16E9  1303               	bcf	status, 6	;RP1=0, select bank1
 13608  16EA  07D2               	addwf	(_DownDebounceCount)^080h,f	;volatile
 13609                           	line	98
 13610                           	
 13611  16EB                     i1l10933:	
 13612                           ;HMI.c: 98: if(DownDebounceCount >= 10 & DownReleased)
 13613  16EB  300A               	movlw	(0Ah)
 13614  16EC  0252               	subwf	(_DownDebounceCount)^080h,w	;volatile
 13615  16ED  1C03               	skipc
 13616  16EE  2EF0               	goto	u407_21
 13617  16EF  2EF1               	goto	u407_20
 13618  16F0                     u407_21:
 13619  16F0  2EFD               	goto	i1l4554
 13620  16F1                     u407_20:
 13621                           	
 13622  16F1                     i1l10935:	
 13623  16F1  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 13624  16F2  2EF4               	goto	u408_21
 13625  16F3  2EF5               	goto	u408_20
 13626  16F4                     u408_21:
 13627  16F4  2EFD               	goto	i1l4554
 13628  16F5                     u408_20:
 13629                           	line	100
 13630                           	
 13631  16F5                     i1l10937:	
 13632                           ;HMI.c: 99: {
 13633                           ;HMI.c: 100: DownPressed = 1;
 13634  16F5  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 13635                           	line	101
 13636                           ;HMI.c: 101: DownReleased = 0;
 13637  16F6  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 13638  16F7  2EFD               	goto	i1l4554
 13639                           	line	102
 13640                           	
 13641  16F8                     i1l4553:	
 13642                           	line	103
 13643                           ;HMI.c: 102: }
 13644                           ;HMI.c: 103: }
 13645  16F8  2EFD               	goto	i1l4554
 13646                           	line	104
 13647                           	
 13648  16F9                     i1l4552:	
 13649                           	line	106
 13650                           ;HMI.c: 104: else
 13651                           ;HMI.c: 105: {
 13652                           ;HMI.c: 106: DownDebounceCount = 0;
 13653  16F9  1683               	bsf	status, 5	;RP0=1, select bank1
 13654  16FA  1303               	bcf	status, 6	;RP1=0, select bank1
 13655  16FB  01D2               	clrf	(_DownDebounceCount)^080h	;volatile
 13656                           	line	107
 13657                           ;HMI.c: 107: DownReleased = 1;
 13658  16FC  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 13659                           	line	108
 13660                           	
 13661  16FD                     i1l4554:	
 13662                           	line	110
 13663                           ;HMI.c: 108: }
 13664                           ;HMI.c: 110: if(!RB4)
 13665  16FD  1283               	bcf	status, 5	;RP0=0, select bank0
 13666  16FE  1303               	bcf	status, 6	;RP1=0, select bank0
 13667  16FF  1A06               	btfsc	(52/8),(52)&7
 13668  1700  2F02               	goto	u409_21
 13669  1701  2F03               	goto	u409_20
 13670  1702                     u409_21:
 13671  1702  2F17               	goto	i1l4555
 13672  1703                     u409_20:
 13673                           	line	112
 13674                           	
 13675  1703                     i1l10939:	
 13676                           ;HMI.c: 111: {
 13677                           ;HMI.c: 112: LeftDebounceCount++;
 13678  1703  3001               	movlw	(01h)
 13679  1704  00F2               	movwf	(??_Debounce+0)+0
 13680  1705  0872               	movf	(??_Debounce+0)+0,w
 13681  1706  1683               	bsf	status, 5	;RP0=1, select bank1
 13682  1707  1303               	bcf	status, 6	;RP1=0, select bank1
 13683  1708  07D3               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 13684                           	line	113
 13685                           	
 13686  1709                     i1l10941:	
 13687                           ;HMI.c: 113: if(LeftDebounceCount >= 10 & LeftReleased)
 13688  1709  300A               	movlw	(0Ah)
 13689  170A  0253               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 13690  170B  1C03               	skipc
 13691  170C  2F0E               	goto	u410_21
 13692  170D  2F0F               	goto	u410_20
 13693  170E                     u410_21:
 13694  170E  2F1B               	goto	i1l4557
 13695  170F                     u410_20:
 13696                           	
 13697  170F                     i1l10943:	
 13698  170F  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 13699  1710  2F12               	goto	u411_21
 13700  1711  2F13               	goto	u411_20
 13701  1712                     u411_21:
 13702  1712  2F1B               	goto	i1l4557
 13703  1713                     u411_20:
 13704                           	line	115
 13705                           	
 13706  1713                     i1l10945:	
 13707                           ;HMI.c: 114: {
 13708                           ;HMI.c: 115: LeftPressed = 1;
 13709  1713  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 13710                           	line	116
 13711                           ;HMI.c: 116: LeftReleased = 0;
 13712  1714  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 13713  1715  2F1B               	goto	i1l4557
 13714                           	line	117
 13715                           	
 13716  1716                     i1l4556:	
 13717                           	line	118
 13718                           ;HMI.c: 117: }
 13719                           ;HMI.c: 118: }
 13720  1716  2F1B               	goto	i1l4557
 13721                           	line	119
 13722                           	
 13723  1717                     i1l4555:	
 13724                           	line	121
 13725                           ;HMI.c: 119: else
 13726                           ;HMI.c: 120: {
 13727                           ;HMI.c: 121: LeftDebounceCount = 0;
 13728  1717  1683               	bsf	status, 5	;RP0=1, select bank1
 13729  1718  1303               	bcf	status, 6	;RP1=0, select bank1
 13730  1719  01D3               	clrf	(_LeftDebounceCount)^080h	;volatile
 13731                           	line	122
 13732                           ;HMI.c: 122: LeftReleased = 1;
 13733  171A  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 13734                           	line	123
 13735                           	
 13736  171B                     i1l4557:	
 13737                           	line	125
 13738                           ;HMI.c: 123: }
 13739                           ;HMI.c: 125: if(!RB5)
 13740  171B  1283               	bcf	status, 5	;RP0=0, select bank0
 13741  171C  1303               	bcf	status, 6	;RP1=0, select bank0
 13742  171D  1A86               	btfsc	(53/8),(53)&7
 13743  171E  2F20               	goto	u412_21
 13744  171F  2F21               	goto	u412_20
 13745  1720                     u412_21:
 13746  1720  2F35               	goto	i1l4558
 13747  1721                     u412_20:
 13748                           	line	127
 13749                           	
 13750  1721                     i1l10947:	
 13751                           ;HMI.c: 126: {
 13752                           ;HMI.c: 127: RightDebounceCount++;
 13753  1721  3001               	movlw	(01h)
 13754  1722  00F2               	movwf	(??_Debounce+0)+0
 13755  1723  0872               	movf	(??_Debounce+0)+0,w
 13756  1724  1683               	bsf	status, 5	;RP0=1, select bank1
 13757  1725  1303               	bcf	status, 6	;RP1=0, select bank1
 13758  1726  07D5               	addwf	(_RightDebounceCount)^080h,f	;volatile
 13759                           	line	128
 13760                           	
 13761  1727                     i1l10949:	
 13762                           ;HMI.c: 128: if(RightDebounceCount >= 10 & RightReleased)
 13763  1727  300A               	movlw	(0Ah)
 13764  1728  0255               	subwf	(_RightDebounceCount)^080h,w	;volatile
 13765  1729  1C03               	skipc
 13766  172A  2F2C               	goto	u413_21
 13767  172B  2F2D               	goto	u413_20
 13768  172C                     u413_21:
 13769  172C  2F39               	goto	i1l4560
 13770  172D                     u413_20:
 13771                           	
 13772  172D                     i1l10951:	
 13773  172D  1D71               	btfss	(_RightReleased/8),(_RightReleased)&7
 13774  172E  2F30               	goto	u414_21
 13775  172F  2F31               	goto	u414_20
 13776  1730                     u414_21:
 13777  1730  2F39               	goto	i1l4560
 13778  1731                     u414_20:
 13779                           	line	130
 13780                           	
 13781  1731                     i1l10953:	
 13782                           ;HMI.c: 129: {
 13783                           ;HMI.c: 130: RightPressed = 1;
 13784  1731  14F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 13785                           	line	131
 13786                           ;HMI.c: 131: RightReleased = 0;
 13787  1732  1171               	bcf	(_RightReleased/8),(_RightReleased)&7
 13788  1733  2F39               	goto	i1l4560
 13789                           	line	132
 13790                           	
 13791  1734                     i1l4559:	
 13792                           	line	133
 13793                           ;HMI.c: 132: }
 13794                           ;HMI.c: 133: }
 13795  1734  2F39               	goto	i1l4560
 13796                           	line	134
 13797                           	
 13798  1735                     i1l4558:	
 13799                           	line	136
 13800                           ;HMI.c: 134: else
 13801                           ;HMI.c: 135: {
 13802                           ;HMI.c: 136: RightDebounceCount = 0;
 13803  1735  1683               	bsf	status, 5	;RP0=1, select bank1
 13804  1736  1303               	bcf	status, 6	;RP1=0, select bank1
 13805  1737  01D5               	clrf	(_RightDebounceCount)^080h	;volatile
 13806                           	line	137
 13807                           ;HMI.c: 137: RightReleased = 1;
 13808  1738  1571               	bsf	(_RightReleased/8),(_RightReleased)&7
 13809                           	line	138
 13810                           	
 13811  1739                     i1l4560:	
 13812                           	line	140
 13813                           ;HMI.c: 138: }
 13814                           ;HMI.c: 140: if(!RB6)
 13815  1739  1283               	bcf	status, 5	;RP0=0, select bank0
 13816  173A  1303               	bcf	status, 6	;RP1=0, select bank0
 13817  173B  1B06               	btfsc	(54/8),(54)&7
 13818  173C  2F3E               	goto	u415_21
 13819  173D  2F3F               	goto	u415_20
 13820  173E                     u415_21:
 13821  173E  2F53               	goto	i1l4561
 13822  173F                     u415_20:
 13823                           	line	142
 13824                           	
 13825  173F                     i1l10955:	
 13826                           ;HMI.c: 141: {
 13827                           ;HMI.c: 142: CenterDebounceCount++;
 13828  173F  3001               	movlw	(01h)
 13829  1740  00F2               	movwf	(??_Debounce+0)+0
 13830  1741  0872               	movf	(??_Debounce+0)+0,w
 13831  1742  1683               	bsf	status, 5	;RP0=1, select bank1
 13832  1743  1303               	bcf	status, 6	;RP1=0, select bank1
 13833  1744  07CE               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 13834                           	line	143
 13835                           	
 13836  1745                     i1l10957:	
 13837                           ;HMI.c: 143: if(CenterDebounceCount >= 10 & CenterReleased)
 13838  1745  300A               	movlw	(0Ah)
 13839  1746  024E               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 13840  1747  1C03               	skipc
 13841  1748  2F4A               	goto	u416_21
 13842  1749  2F4B               	goto	u416_20
 13843  174A                     u416_21:
 13844  174A  2F58               	goto	i1l4564
 13845  174B                     u416_20:
 13846                           	
 13847  174B                     i1l10959:	
 13848  174B  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 13849  174C  2F4E               	goto	u417_21
 13850  174D  2F4F               	goto	u417_20
 13851  174E                     u417_21:
 13852  174E  2F58               	goto	i1l4564
 13853  174F                     u417_20:
 13854                           	line	145
 13855                           	
 13856  174F                     i1l10961:	
 13857                           ;HMI.c: 144: {
 13858                           ;HMI.c: 145: CenterPressed = 1;
 13859  174F  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 13860                           	line	146
 13861                           ;HMI.c: 146: CenterReleased = 0;
 13862  1750  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 13863  1751  2F58               	goto	i1l4564
 13864                           	line	147
 13865                           	
 13866  1752                     i1l4562:	
 13867                           	line	148
 13868                           ;HMI.c: 147: }
 13869                           ;HMI.c: 148: }
 13870  1752  2F58               	goto	i1l4564
 13871                           	line	149
 13872                           	
 13873  1753                     i1l4561:	
 13874                           	line	151
 13875                           ;HMI.c: 149: else
 13876                           ;HMI.c: 150: {
 13877                           ;HMI.c: 151: CenterDebounceCount = 0;
 13878  1753  1683               	bsf	status, 5	;RP0=1, select bank1
 13879  1754  1303               	bcf	status, 6	;RP1=0, select bank1
 13880  1755  01CE               	clrf	(_CenterDebounceCount)^080h	;volatile
 13881                           	line	152
 13882                           ;HMI.c: 152: CenterReleased = 1;
 13883  1756  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 13884  1757  2F58               	goto	i1l4564
 13885                           	line	153
 13886                           	
 13887  1758                     i1l4563:	
 13888                           	line	154
 13889                           	
 13890  1758                     i1l4564:	
 13891  1758  0008               	return
 13892                           	opt stack 0
 13893                           GLOBAL	__end_of_Debounce
 13894  1759                     	__end_of_Debounce:
 13895 ;; =============== function _Debounce ends ============
 13896                           
 13897                           	signat	_Debounce,88
 13898                           psect	text1106,local,class=CODE,delta=2
 13899                           global __ptext1106
 13900  0000                     __ptext1106:
 13901                           	global	btemp
 13902  007E                     	btemp set 07Eh
 13903                           
 13904                           	DABS	1,126,2	;btemp
 13905                           	global	wtemp0
 13906  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed May 20 15:41:50 2015

   RobotDrive@radiuslowByte 0036   __end_of_lcd_write_control 1F58             ??_UpdateDisplay 0045  
                         pc 0002                          _GO 00FA                          _RD 0C60  
                        _WR 0C61                ___awdiv@sign 002C                  _IRdistance 00B8  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 1F6D  
                       l703 1FDC                         l704 1FDC                         l705 1FE0  
                       l706 1FFF                         l690 1203                         l691 122C  
                       l692 1207                         l693 120B                         l694 120F  
                       l695 1213                         l696 1217                         l689 121B  
                       l697 1239                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _abs 1191                         _pos 00C6  
                       fsr0 0004                         indf 0000                ___awmod@sign 0026  
          ??_robotMoveSpeed 005D                  _BattCharge 00B0             ?_lcd_set_cursor 0072  
                      ?_abs 0026                        l1402 1F1C                        l1410 1104  
                      l1411 1104                        l2300 14A2                        l1405 1EFC  
                      l2301 14B0                        l2302 14CD                        l2310 1342  
                      l2303 14B8                        l2311 132B                        l1408 10F3  
                      l3040 1F83                        l2304 14CC                        l2320 1355  
                      l2312 1353                        l1409 10DA                        l2305 14CD  
                      l2313 132D                        l3050 0738                        l3034 15D1  
                      l2314 132F                        l3051 069B                        l3043 0567  
                      l3035 1607                        l2315 1331                        l3044 073B  
                      l3052 0737                        l3036 15F3                        l2316 1333  
                      l2308 131A                        l2260 02FD                        l2252 02CD  
                      l3053 06E8                        l3045 05B4                        l1429 1055  
                      l3037 1635                        l2317 1355                        l2309 132A  
                      l2261 02FE                        l2253 02E3                        l3046 073A  
                      l3054 0736                        l2318 133F                        l2262 04E6  
                      l2270 0335                        l2254 02F4                        l3055 0735  
                      l3047 0601                        l2319 1354                        l2255 04F8  
                      l2271 0380                        l2263 030A                        l3048 0739  
                      l3056 073B                        l2280 04F0                        l2264 04C9  
                      l2272 0381                        l2256 02F5                        l3049 064E  
                      l2249 1160                        l2257 050E                        l2281 04F6  
                      l2273 038A                        l2265 030B                        l2282 0515  
                      l2266 04E5                        l2274 0408                        l2258 02FB  
                      l2283 0516                        l2275 041D                        l2267 0326  
                      l2259 02FC                        l2284 0516                        l2276 0426  
                      l2268 0377                        l2293 1482                        l2277 045A  
                      l2294 148D                        l2278 04AD                        l1399 1F57  
                      l2295 14BA                        l2287 1FD6                        l2279 04EE  
                      l2296 148E                        l2297 14CB                        l2298 1490  
                      l2299 1492                        l6100 1FB5                        l6110 0C29  
                      l6103 0BA8                        l6200 13FA                        l6120 1541  
                      l6104 0C29                        l4600 0F86                        l6113 11FE  
                      l6105 0BD4                        l4601 0F92                        l6106 0C28  
                      l4602 0F9E                        l6130 0D46                        l6107 0C24  
                      l4603 0FAA                        l6123 0C47                        l6116 14FC  
                      l6108 0C27                        l4604 0FB6                        l6140 0D94  
                      l6132 0D0D                        l6124 0C5F                        l6117 1541  
                      l6109 0C26                        l4605 0FF0                        l6141 0DE4  
                      l6133 0D3C                        l6125 0C77                        l6118 1521  
                      l4606 0FFF                        l6142 0E0A                        l6134 0D44  
                      l6126 0CA9                        l6150 00C6                        l6119 1540  
                      l6135 0DE5                        l6127 0D58                        l3760 1412  
                      l6136 0D57                        l6128 0CDF                        l6160 01DF  
                      l6152 00B8                        l3753 1F38                        l3761 1446  
                      l6137 0D6A                        l6129 0D58                        l6161 01CB  
                      l6153 0193                        l6145 0030                        l3754 1F38  
                      l3762 1419                        l6138 0D76                        l6170 0217  
                      l6162 01E9                        l6154 00D8                        l6146 0063  
                      l3755 1F3D                        l3763 142B                        l6139 0D85  
                      l6171 0226                        l6163 01D2                        l6155 00EB  
                      l6147 00D9                        l4580 12DB                        l3756 1F43  
                      l3764 1433                        l6180 0954                        l6172 02B9  
                      l6164 01D8                        l6156 00F7                        l6148 0091  
                      l4581 12DC                        l3765 1450                        l6181 0963  
                      l6165 025F                        l6157 0106                        l6149 00D9  
                      l4582 12EE                        l3766 1461                        l4590 0FF2  
                      l6190 0905                        l6182 0A04                        l6166 01EA  
                      l6158 0115                        l4575 12F6                        l4583 12EF  
                      l3759 140B                        l4591 0E24                        l6191 0910  
                      l6175 09AA                        l6167 01FC                        l6159 0192  
                      l4584 130A                        l4576 12C8                        l4592 0E8B  
                      l6176 0927                        l6168 0294                        l4577 1308  
                      l4585 12F4                        l4593 0E9E                        l6185 08D0  
                      l6177 0939                        l6169 0208                        l4578 12C9  
                      l6194 16C0                        l4594 0FFF                        l6186 087D  
                      l6178 09DF                        l4579 12CA                        l4595 0EE6  
                      l6187 0895                        l6179 0945                        l4596 0F31  
                      l6197 11C5                        l4597 0FC3                        l6189 088F  
                      l4598 0F7A                        l4599 0FDE                        l6900 1F9C  
                      l6910 1109                        l6911 1114                        l6903 10AF  
                      l6912 1131                        l6904 10AE                        l6905 10B8  
                      l6906 10D8                        l7651 139E                        l7652 1370  
                      l6909 110A                        l7645 1086                        l7653 1364  
                      l7661 12BC                        l6934 102A                        l7646 1090  
                      l7654 1375                        l7662 1296                        l6950 0A23  
                      l7647 10A5                        l7655 1376                        l7663 128A  
                      l6943 0AEB                        l6951 0A3B                        l7648 10AC  
                      l7656 138F                        l7664 129B                        l6960 0AEA  
                      l6952 0A24                        l6944 0A0D                        l7657 139D  
                      l7665 129C                        l6961 0AFE                        l6953 0A55  
                      l6945 0A1F                        l7658 13A5                        l7666 12AD  
                      l6962 0B04                        l6954 0A60                        l6946 0A26  
                      l7667 12BB                        l6955 0A88                        l6947 0A21  
                      l7668 12C3                        l7860 0848                        l6948 0AFF  
                      l6956 0A7D                        l7861 0856                        l7853 0811  
                      l6957 0A9A                        l6949 0A22                        l7790 157D  
                      l7862 0861                        l7854 081B                        l6958 0ADF  
                      l7791 157E                        l7863 0868                        l7855 0857  
                      l6959 0A9F                        l7792 1597                        l7856 0831  
                      l7793 15A5                        l7785 1552                        l7857 0825  
                      l7794 15B0                        l7786 1560                        l7858 0836  
                      l6899 1F8F                        l7795 15B7                        l7787 15A6  
                      l7859 0837                        l7788 1578                        l7789 156C  
                      _CHS0 00FB                        _CHS1 00FC                        _CHS2 00FD  
                      STR_1 079E                        STR_2 0795                        STR_3 07B0  
                      STR_4 07B9                        STR_5 07A7                        STR_6 078C  
                      STR_7 07E2                        STR_8 07E6                        STR_9 07CE  
                      _BRGH 04C2                        _CREN 00C4                        u4020 1F3C  
                      u4021 1F3B                        u5000 15CF                        u5001 15CE  
                      u5010 15E7                        u5011 15E6                        u5020 1606  
                      u5100 0CB5                        u5021 1605                        u5005 15CB  
                      u5101 0CB4                        u4310 1374                        u5030 0E15  
                      u5110 0CCF                        u4311 1373                        u5111 0CCE  
                      u5040 0E78                        u5120 0CFB                        u5200 088E  
                      u4305 1365                        u5025 1602                        u5041 0E77  
                      u5121 0CFA                        u5105 0CB1                        u4250 108A  
                      u4330 1387                        u4410 12BA                        u5050 1486  
                      u5130 0D0C                        u5210 0904                        u4251 1089  
                      u4331 1386                        u4411 12B9                        u5051 1485  
                      u5131 0D0B                        u5115 0CCB                        u5211 0903  
                      u4180 1F8A                        u4500 15A4                        u4420 1549  
                      u5140 0D35                        u5060 0C56                        u5220 0933  
                      u5300 0081                        u4181 1F89                        u4325 1377  
                      u4405 12AE                        u4501 15A3                        u4421 1548  
                      u5045 0E74                        u5141 0D34                        u5125 0CF7  
                      u5061 0C55                        u5301 0080                        u4190 1F97  
                      u4350 139C                        u4510 15AA                        u4430 1556  
                      u5150 0D64                        u5070 0C6E                        u5230 093E  
                      u5310 00A5                        u4191 1F96                        u4351 139B  
                      u4335 1383                        u4431 1555                        u5135 0D08  
                      u5071 0C6D                        u5215 0900                        u5311 00A4  
                      u4280 10A4                        u4360 1286                        u4440 1568  
                      u4600 085B                        u4520 0808                        u5160 0D6F  
                      u5080 0C88                        u5240 094B                        u5400 021D  
                      u5320 00B7                        u4281 10A3                        u4265 1091  
                      u4345 1390                        u4361 1285                        u4441 1567  
                      u4521 0807                        u5081 0C87                        u5065 0C52  
                      u5401 021C                        u5321 00B6                        u5305 007D  
                      u4290 1360                        u4530 0815                        u5170 0D7C  
                      u5090 0C99                        u5250 095A                        u5410 0293  
                      u5330 00E5                        u4275 1098                        u4291 135F  
                      u4531 0814                        u5091 0C98                        u5075 0C6A  
                      u5251 0959                        u5411 0292                        u5315 00A1  
                      _PEIE 005E                        u4380 129A                        u4460 157C  
                      u4540 0821                        u4700 0524                        u5180 0D8B  
                      u5260 09DE                        u5340 00F0                        u5420 131E  
                      u4381 1299                        u4461 157B                        u4541 0820  
                      u4701 0523                        u5181 0D8A                        u5085 0C84  
                      u5261 09DD                        u5325 00B3                        u5421 131D  
                      u4390 12A6                        u4710 052D                        u5190 088A  
                      u5350 00FD                        u5270 0041                        u5430 02D1  
                      u4391 12A5                        u4375 128B                        u4455 156D  
                      u4711 052C                        u5095 0C95                        u5191 0889  
                      u5415 028F                        u5271 0040                        u5431 02D0  
                      u3760 1FE0                        u4480 158F                        u4560 0835  
                      u4800 06A5                        u4720 0571                        u5360 010C  
                      u5280 0053                        u5440 02E7                        u3761 1FDF  
                      u4481 158E                        u4561 0834                        u4801 06A4  
                      u4721 0570                        u5265 09DA                        u5361 010B  
                      u5281 0052                        u4570 0841                        u4810 06AE  
                      u4730 057A                        u5370 01F6                        u5290 006F  
                      u5450 032E                        u4395 12A2                        u4475 157F  
                      u4571 0840                        u4555 0826                        u4811 06AD  
                      u4731 0579                        u5291 006E                        u5275 003D  
                      u5507 1FC3                        u5451 032D                        _RCIE 0465  
                      u4820 06F2                        u4740 05BE                        u4900 0AE9  
                      u5380 0201                        u5460 0334                        _RCIF 0065  
                      u4485 158B                        u4821 06F1                        u4741 05BD  
                      u4901 0AE8                        u5517 164C                        u5285 004F  
                      u5461 0333                        u3950 12D6                        u4590 0855  
                      u4670 1404                        u4830 06FB                        u4750 05C7  
                      u4910 0AFD                        u5390 020E                        u5470 04EE  
                      u3775 1FED                        u3951 12D5                        u4495 1598  
                      u4591 0854                        u4575 083D                        u4671 1403  
                      u4831 06FA                        u4751 05C6                        u4911 0AFC  
                      u5527 167B                        u5295 006B                        u5471 04ED  
                      u3960 12EB                        u4680 1422                        u4760 060B  
                      u4840 0A13                        u4920 10B8                        u3961 12EA  
                      u4585 0849                        u5537 1439                        u4761 060A  
                      u4841 0A12                        u4921 10B7                        u3970 1114  
                      u4690 1450                        u4770 0614                        u4850 0A4B  
                      u4930 14DD                        u3971 1113                        u5547 1F18  
                      u4691 144F                        u4771 0613                        u4851 0A4A  
                      u4931 14DC                        u4780 0658                        u4860 0A5E  
                      u4940 1502                        u5557 1F52                        u4781 0657  
                      u4861 0A5D                        u4941 1501                        u4790 0661  
                      u4870 0A7B                        u5567 1F6B                        u4695 144C  
                      u4791 0660                        u4871 0A7A                        u4935 14D9  
                      u5487 034C                        u4880 0A87                        u4960 1103  
                      u5577 122E                        u4881 0A86                        u4961 1102  
                      u5497 03AA                        u4890 0A8E                        u4970 0B83  
                      _OERR 00C1                        u4891 0A8D                        u4875 0A77  
                      u4955 11A6                        u4971 0B82                        u4980 0BAF  
                      u4981 0BAE                        u4990 0BDB                        u4991 0BDA  
                      _TMR0 0001                  _ChargeMode 130B                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 12C4      __end_of_lcd_write_data 1F1D                        abs@v 0026  
                      _isr1 1759                        _main 02BA                        _init 1132  
                      btemp 007E              _CenterReleased 0381                        start 0012  
      robotFollow@followDir 005D               ??_ReadButtons 0073            ??_robotTurnSpeed 005D  
                     ??_abs 0028       readAvgDistance@tempIR 0034                       ?_Menu 0072  
                     l11011 1081                       l11021 10AC                       l11013 1086  
                     l11101 159E                       l11015 108A                       l11031 136B  
                     l11023 1356                       l11103 15A6                       l11111 0801  
                     l11017 1097                       l11041 138F                       l11033 1370  
                     l11025 135A                       l11105 15AA                       l11121 0821  
                     l11113 0808                       l11201 1F0D                       l12001 0473  
                     l11019 10A5                       l11043 1396                       l11035 1376  
                     l11027 1360                       l11051 1286                       l11107 15B0  
                     l11131 0841                       l11123 0825                       l11115 0811  
                     l11203 1F10                       l11211 13A6                       l12011 04C8  
                     l12003 0484                       l11037 1387                       l11029 1364  
                     l11045 139E                       l11061 12A6                       l11053 128A  
                     l11109 15B7                       l11141 0861                       l11133 0848  
                     l11125 082C                       l11117 0815                       l11205 1F12  
                     l11221 11DE                       l11213 11C6                       l11301 06FB  
                     l12005 0492                       l12013 04C9                       l12021 04F8  
                     l11047 13A5                       l11039 138D                       l11063 12AD  
                     l11055 1291                       l11071 1542                       l11143 0868  
                     l11135 084F                       l11127 0831                       l11119 081B  
                     l11207 1F13                       l11223 11E6                       l11215 11CC  
                     l11231 13FF                       l11311 0A25                       l11303 0A08  
                     l12007 0497                       l12015 04E6                       l12023 050E  
                     l11065 12B4                       l11057 1296                       l11049 127E  
                     l11081 1560                       l11073 1549                       l11129 0837  
                     l11137 0857                       l11209 1F9D                       l11225 11EE  
                     l11217 11D0                       l11241 1416                       l11233 1404  
                     l11321 0A4B                       l11313 0A26                       l11305 0A0D  
                     l11401 102B                       l12017 04F0                       l12009 04AD  
                     l11059 129C                       l11067 12BC                       l11091 1578  
                     l11083 1562                       l11075 1552                       l11139 085B  
                     l11171 1219                       l11227 11F6                       l11219 11D8  
                     l11251 1458                       l11243 141E                       l11235 140B  
                     l11331 0A60                       l11323 0A4F                       l11315 0A3B  
                     l11307 0A13                       l11411 1037                       l11403 102F  
                     l12019 04F7                       l10701 1FDA                       l11069 12C3  
                     l11093 157E                       l11085 1568                       l11077 1556  
                     l11181 1239                       l11173 121A                       l11253 145B  
                     l11245 1422                       l11237 1412                       l11229 13FB  
                     l11261 0519                       l11341 0A8E                       l11333 0A7C  
                     l11325 0A55                       l11317 0A43                       l11309 0A1A  
                     l11413 103D                       l11405 1032                       l11421 0B08  
                     l11501 15D0                       l12045 0FCA                       l10703 1FE3  
                     l11095 158F                       l11087 156C                       l11079 155B  
                     l11175 121B                       l11167 1202                       l11191 1F67  
                     l11183 1F58                       l11255 145C                       l11247 142B  
                     l11239 1415                       l11271 057A                       l11263 0524  
                     l11351 0ADA                       l11343 0A95                       l11335 0A7D  
                     l11327 0A58                       l11319 0A47                       l11415 1043  
                     l11407 1033                       l11431 0BD4                       l11423 0B7C  
                     l11511 1607                       l11503 15D1                       l10705 1FF6  
                     l11097 1595                       l11089 1573                       l11169 1217  
                     l11177 122C                       l11185 1F5B                       l11193 1F47  
                     l11257 145D                       l11249 1452                       l11281 060B  
                     l11273 05B4                       l11265 052D                       l11353 0ADF  
                     l11345 0A9A                       l11337 0A81                       l11329 0A5F  
                     l11361 10AD                       l11417 1049                       l11409 1036  
                     l11433 0BDB                       l11425 0B83                       l11441 1640  
                     l11513 1627                       l11505 15DE                       l11521 0E52  
                     l11601 14A2                       l10707 1FFF                       l11099 1597  
                     l11179 1230                       l11187 1F5F                       l11195 1F4A  
                     l11259 145E                       l11291 069B                       l11283 0614  
                     l11275 05BE                       l11267 0567                       l11347 0A9F  
                     l11339 0A88                       l11355 0AEB                       l11371 10D3  
                     l11363 10AF                       l11419 104F                       l11435 0C25  
                     l11427 0BA8                       l11451 166F                       l11443 1646  
                     l11507 15E7                       l11531 0E9E                       l11523 0E63  
                     l11515 0E0B                       l11611 14B7                       l11603 14AE  
                     l10821 1004                       l11189 1F63                       l11197 1F4C  
                     l11293 06A5                       l11285 064E                       l11277 05C7  
                     l11269 0571                       l11349 0AD3                       l11357 0AFF  
                     l11373 10D4                       l11365 10B9                       l11381 1502  
                     l11429 0BAF                       l11461 16A7                       l11453 1675  
                     l11445 1651                       l11437 1636                       l11509 15F9  
                     l11541 0EFD                       l11533 0EA4                       l11525 0E69  
                     l11517 0E24                       l11613 14B9                       l11605 14B0  
                     l11701 0E05                       l11621 0C34                       l10831 1013  
                     l10823 100C                       l10911 1F33                       l11199 1F4D  
                     l11295 06AE                       l11287 0658                       l11279 0601  
                     l11359 0B04                       l11375 10D8                       l11367 10C5  
                     l11383 1521                       l11391 1EF6                       l11463 16B4  
                     l11455 1680                       l11447 165D                       l11439 163A  
                     l11471 1132                       l11551 0F3D                       l11543 0F0E  
                     l11535 0EBB                       l11527 0E78                       l11519 0E2A  
                     l11607 14B4                       l11615 14BA                       l11631 0C6E  
                     l11623 0C43                       l11711 088A                       l11703 0869  
                     l10841 101E                       l10833 1016                       l10825 100D  
                     l10913 1F35                       l11297 06E8                       l11289 0661  
                     l11369 10CB                       l11377 14CE                       l11385 1191  
                     l11393 10D9                       l11457 1693                       l11449 1669  
                     l11465 1F6E                       l11481 1145                       l11473 1133  
                     l11561 0F92                       l11553 0F48                       l11545 0F14  
                     l11537 0EE6                       l11529 0E8B                       l11609 14B5  
                     l11641 0CA9                       l11633 0C77                       l11625 0C47  
                     l11617 0C2A                       l11721 08B8                       l11713 088F  
                     l11705 0871                       l11801 00C5                       l10843 101F  
                     l10835 1019                       l10827 100F                       l10819 1001  
                     l10851 12D6                       l10915 1F3D                       l10691 1F99  
                     l11299 06F2                       l11379 14DD                       l11387 11C5  
                     l11395 10DA                       l11459 169C                       l11467 1F7C  
                     l11491 115D                       l11483 1149                       l11475 1137  
                     l11563 0F9E                       l11571 0FC3                       l11555 0F73  
                     l11547 0F25                       l11539 0EF2                       l11651 0D0D  
                     l11643 0CB5                       l11635 0C7C                       l11627 0C56  
                     l11619 0C2E                       l11723 08C4                       l11715 0895  
                     l11707 087D                       l11731 0911                       l11811 00F0  
                     l11803 00C6                       l10837 101A                       l10829 1010  
                     l10861 12F5                       l10853 12DC                       l10845 12C7  
                     l10917 1F41                       l10693 1F9B                       l11389 1EF5  
                     l11397 10EA                       l11469 1F83                       l11493 115E  
                     l11485 114E                       l11477 113F                       l11565 0FAA  
                     l11573 0FDE                       l11557 0F7A                       l11549 0F31  
                     l11661 0D3C                       l11653 0D19                       l11645 0CCF  
                     l11637 0C88                       l11629 0C5F                       l11725 08CA  
                     l11717 08A0                       l11709 0883                       l11741 0939  
                     l11733 0915                       l11821 0115                       l11813 00F7  
                     l11805 00DF                       l11901 1339                       l10839 101D  
                     l10855 12EB                       l10847 12CA                       l10863 12F6  
                     l10871 110A                       l10919 1F43                       l11399 10F3  
                     l11495 115F                       l11487 1153                       l11479 1141  
                     l11575 0FE4                       l11567 0FB6                       l11559 0F86  
                     l11591 1482                       l11671 0D6A                       l11663 0D45  
                     l11655 0D1E                       l11647 0CDF                       l11639 0C99  
                     l11719 08AB                       l11727 08D0                       l11751 095A  
                     l11743 093E                       l11735 0927                       l11831 0150  
                     l11823 011E                       l11815 00FD                       l11807 00E5  
                     l11903 133A                       l11911 1FB6                       l10857 12EF  
                     l10849 12D2                       l10865 1308                       l10873 1115  
                     l11489 1158                       l11497 15B8                       l11577 0FF1  
                     l11569 0FC2                       l11593 1486                       l11585 1462  
                     l11681 0D8B                       l11673 0D6F                       l11657 0D2A  
                     l11665 0D46                       l11649 0CFB                       l11729 0905  
                     l11761 0990                       l11753 0963                       l11745 0945  
                     l11737 092D                       l11841 01CB                       l11833 0159  
                     l11825 0129                       l11817 0106                       l11809 00EB  
                     l11905 133E                       l11913 1FBB                       l11921 02C2  
                     l10699 1FD7                       l10867 130A                       l10859 12F3  
                     l10875 1123                       l10971 1F8F                       l10963 1F84  
                     l11499 15C2                       l11579 0FF2                       l11595 1487  
                     l11587 1467                       l11691 0DC1                       l11683 0D94  
                     l11675 0D76                       l11667 0D5E                       l11659 0D35  
                     l11771 09F0                       l11763 099E                       l11755 096C  
                     l11747 094B                       l11739 0933                       l11851 01EA  
                     l11843 01D2                       l11835 018C                       l11827 0136  
                     l11819 010C                       l11907 1341                       l11915 1FCA  
                     l11931 02D8                       l11923 02C7                       l10877 112F  
                     l10869 1108                       l10973 1F97                       l10965 1F8A  
                     l11597 1492                       l11589 1473                       l11693 0DCF  
                     l11685 0D9D                       l11677 0D7C                       l11669 0D64  
                     l11773 09F5                       l11765 09A4                       l11757 0977  
                     l11749 0954                       l11861 0208                       l11853 01F0  
                     l11845 01D8                       l11829 0142                       l11837 0193  
                     l11781 0030                       l11909 1342                       l11941 02F5  
                     l11933 02DD                       l11925 02CD                       l11917 02BA  
                     l10879 1130                       l10975 1F99                       l10967 1F8C  
                     l11599 14A0                       l11695 0DDE                       l11687 0DA8  
                     l11679 0D85                       l11759 0984                       l11767 09AA  
                     l11871 022F                       l11863 020E                       l11855 01F6  
                     l11847 01DE                       l11839 01C6                       l11791 006F  
                     l11783 0035                       l11775 0015                       l11951 0335  
                     l11943 0304                       l11927 02D1                       l11935 02E3  
                     l11919 02C0                       l10977 1F9C                       l10969 1F8E  
                     l11689 0DB5                       l11697 0DE5                       l11769 09DF  
                     l11873 023A                       l11865 0217                       l11857 01FC  
                     l11881 025F                       l11849 01DF                       l11793 0081  
                     l11785 0041                       l11777 001D                       l11961 0381  
                     l11953 0344                       l11945 030B                       l11937 02E7  
                     l11929 02D2                       l11699 0DF4                       l11875 0247  
                     l11867 021D                       l11859 0201                       l11883 0294  
                     l11795 0091                       l11787 0053                       l11779 002C  
                     l11891 1313                       l11971 03B1                       l11963 038A  
                     l11955 0353                       l11947 0326                       l11939 02F2  
                     l11885 02A3                       l11877 0253                       l11869 0226  
                     l11797 00A5                       l11789 0063                       l11893 131A  
                     l11981 0408                       l11973 03C0                       l11965 0392  
                     l11957 0356                       l11949 032E        __size_of_calibrateIR 006C  
                     l11887 02B4                       l11879 0259                       l11799 00B8  
                     l11895 131E                       l11991 043D                       l11983 0414  
                     l11975 03DC                       l11967 0393                       l11959 0377  
                     l11897 131F                       l11889 130B                       l11993 0442  
                     l11985 041D                       l11977 03EB                       l11969 03A2  
                     l11899 1333                       l11995 045A                       l11987 0426  
                     l11979 03F0                       l11997 0462                       l11989 042E  
                     l11999 046E                       ?_isr1 0072                       ?_main 0072  
                     ?_init 0072             __end_of___awdiv 15B8                       _EEADR 010D  
                     STR_10 07DA                       STR_11 07EA                       STR_20 07F1  
                     STR_12 07DE                       STR_21 07F4                       STR_13 0776  
                     STR_22 07EE                       STR_14 0766                       STR_23 07F7  
                     STR_15 07D2                       STR_24 07FA                       STR_16 07C1  
                     STR_25 07EE                       STR_17 07D6                       STR_26 0783  
                     STR_18 0756                       STR_19 07C9             __end_of___awmod 0869  
                     _CARRY 0018             ___awdiv@divisor 0026             __end_of___lwdiv 13A6  
           __end_of___lwmod 12C4             ___awdiv@counter 002B                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019                       _Disp1 00B4  
                     _Disp2 00B6      lcd_write_data@databyte 0022    __size_of_robot_turnRight 02A5  
        i1___lwmod@dividend 0074                       _total 00C8              __pbitbssCOMMON 0380  
                     pclath 000A                 _turnlowByte 00E0             ?_lcd_write_data 0072  
         ?_adc_read_channel 0072                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0B05            __end_of_Debounce 1759          __size_ofi1___lwmod 0044  
        ??_adc_read_channel 0026            ?_readAvgDistance 0072            robotFollow@temp1 0062  
          robotFollow@speed 0059                __end_of_Menu 130B  __size_of_lcd_write_control 0014  
          _shortMenuStrings 00E9                __end_of_isr1 1800                __end_of_main 0519  
              __end_of_init 1161             rotate@direction 0025              _Init_Follow_IR 1FB6  
                    ??_Menu 0020               ?_readDistance 0028      readAvgDistance@fullval 0030  
     __end_of_RobotBattRead 16C1                      ??_isr1 0078                      ??_main 0065  
                    ??_init 0023         __end_of_ReadButtons 1191               Menu@BTN_input 0020  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            ___awdiv@dividend 0028            __end_of_adc_read 2000  
               ?_ChargeMode 0072                      i1l2240 179D                      i1l2241 17AB  
                    i1l2242 17CE                      i1l2243 17CD                      i1l2244 17F4  
                    i1l2245 17F3                      i1l2246 17F4                      i1l2238 17AC  
                    i1l2239 1780                      i1l4550 16DA                      i1l4551 16DF  
                    i1l4560 1739                      i1l4552 16F9                      i1l4561 1753  
                    i1l4553 16F8                      i1l4562 1752                      i1l4554 16FD  
                    i1l4570 117E                      i1l4563 1758                      i1l4555 1717  
                    i1l4571 1186                      i1l4564 1758                      i1l4556 1716  
                    i1l4572 118E                      i1l4557 171B                      i1l4549 16DB  
                    i1l4558 1735                      i1l4559 1734                      i1l4567 116E  
                    i1l4568 1190                      i1l4569 1176                      i1l7661 1276  
                    i1l7662 1250                      i1l7663 1244                      i1l7664 1255  
                    i1l7665 1256                      i1l7666 1267                      i1l7667 1275  
                    i1l7668 127D                      u410_20 170F                      u410_21 170E  
                    u411_20 1713                      u403_20 16C7                      u411_21 1712  
                    u403_21 16C6                      u412_20 1721                      u404_20 16D3  
                    u412_21 1720                      u404_21 16D2                      u413_20 172D  
                    u405_20 16D7                      u413_21 172C                      u405_21 16D6  
                    u414_20 1731                      u406_20 16E5                      u414_21 1730  
                    u406_21 16E4                      u415_20 173F                      u407_20 16F1  
                    u415_21 173E                      u407_21 16F0                      u416_20 174B  
                    u408_20 16F5                      u416_21 174A                      u408_21 16F4  
                    u417_20 174F                      u409_20 1703                      u417_21 174E  
                    u409_21 1702                      u461_20 1240                      u381_20 175D  
                    u461_21 123F                      u381_21 175C                      u390_20 116A  
                    u382_20 177E                      u390_21 1169                      u382_21 177D  
               _DistLowByte 00D1                      u462_25 1245                      u463_20 1254  
                    u391_20 1172                      u383_20 1797                      u463_21 1253  
                    u391_21 1171                      u383_21 1796                      u464_20 1260  
                    u392_20 117A                      u384_20 17A2                      u464_21 125F  
                    u392_21 1179                      u384_21 17A1                      u464_25 125C  
                    u393_20 1182                      u385_20 17B2                      u393_21 1181  
                    u385_21 17B1                      u465_25 1268                      u466_20 1274  
                    u394_20 118A                      u386_20 17C8                      u466_21 1273  
                    u394_21 1189                      u386_21 17C7                      u387_20 17D3  
                    u387_21 17D2                      u388_20 17D9                      u388_21 17D8  
                    u389_20 17F1                      u389_21 17F0                      _TMR0IE 005D  
                    _TMR0IF 005A                      _SSPCON 0014                      _SSPBUF 0013  
                _UpReleased 038C            __end_of_lcd_init 1056                      _adcVal 006C  
           _UpDebounceCount 00D7      __end_of_Init_Follow_IR 1FD7             RobotDrive@speed 002F  
                _RobotDrive 11C6                      ___wmul 1081                   ??___awdiv 002A  
                 ??___awmod 0024                _turnhighByte 00DF                ??_ADCconvert 002E  
                 ??___lwdiv 002A                   ??___lwmod 0032            __end_of_init_adc 1F6E  
            ??_readDistance 002A            ___awdiv@quotient 002D             ___awmod@divisor 0020  
  __end_of_lcd_write_string 1105             ___awmod@counter 0025                ?_robotFollow 0059  
                    _rotate 13FB                      _rxfifo 00A0                      clrloop 1EEB  
                    _txfifo 01A0                      _rxiptr 00DC                      _rxoptr 00DD  
               _BumpSensors 006E                      _txiptr 00E1                      _txoptr 00E2  
     robotFollow@hysterysis 0064            __end_of_ser_init 102B            __end_of_ser_isrx 1F9D  
         __end_ofi1___lwmod 127E                      saved_w 007E               main@shortwall 0068  
              _AngleLowByte 00CD                 _LeftPressed 0384      RobotDrive@speedlowByte 0034  
                 ??_sprintf 0039                 _DownPressed 0382           lcd_write_string@s 0027  
        __end_of_ADCconvert 073C           ??_robot_turnRight 005D        robot_turnRight@temp1 0062  
      robot_turnRight@speed 0059                _CliffSensors 00CF              __pcstackCOMMON 0072  
           ?_Init_Follow_IR 0072                __pidataBANK1 1EFD                 _ReadButtons 1161  
       __size_of_ChargeMode 004B            ??_lcd_set_cursor 0023                   ?_Debounce 0072  
             _buttonPressed 007D                  __pbssBANK0 006C                  __pbssBANK1 00A0  
                __pbssBANK3 0190           _DownDebounceCount 00D2          _RightDebounceCount 00D5  
                __pmaintext 02BA                 ?_RobotDrive 002F                     ?___wmul 0020  
     __end_of_robotLoadSong 13FB                  __pintentry 0004                _DistHighByte 00D0  
                __ptext1100 1001                  __ptext1101 1FD7                  __ptext1102 1759  
                __ptext1103 1161                  __ptext1104 123A                  __ptext1105 16C1  
     __end_of_UpdateDisplay 1000                  __ptext1106 0000                  __ptext1070 15B8  
                __ptext1062 1FB6                  __ptext1071 1132                  __ptext1063 130B  
                __ptext1080 10AD                  __ptext1072 1F6E                  __ptext1064 0015  
                __ptext1081 0A05                  __ptext1073 1636                  __ptext1065 0911  
                __ptext1090 11FF                  __ptext1082 0519                  __ptext1074 0B05  
                __ptext1066 0869                  __ptext1091 0801                  __ptext1083 13FB  
                __ptext1075 102B                  __ptext1067 0C2A                  __ptext1092 1542  
                __ptext1084 11C6                  __ptext1076 10D9                  __ptext1068 1462  
                __ptext1093 127E                  __ptext1085 13A6                  __ptext1077 1EF2  
                __ptext1069 0E0B                  __ptext1094 1356                  __ptext1086 1F9D  
                __ptext1078 1191                  __ptext1095 1081                  __ptext1087 1F0A  
                __ptext1079 14CE                  __ptext1096 1F84                  __ptext1088 1F44  
                __ptext1097 1F30                  __ptext1089 1F58                  __ptext1098 1105  
                __ptext1099 12C4          __size_of_ser_getch 002C                   ?_adc_read 0020  
                   ?_rotate 0023          __size_of_ser_putch 002D          __size_of_robo_init 0019  
                   i1l11151 124B                     i1l11161 126E                     i1l11153 1250  
                   i1l11145 123A                     i1l11155 1256                     i1l11147 1240  
                   i1l11163 1276                     i1l11165 127D                     i1l11157 1260  
                   i1l11149 1244                     i1l11159 1267                     i1l10801 117D  
                   i1l10811 118B                     i1l10803 1182                     i1l10813 118D  
                   i1l10805 1183                     i1l10741 1768                     i1l10815 118E  
                   i1l10807 1185                     i1l10751 1798                     i1l10743 1769  
                   i1l10735 1759                     i1l10921 16C1                     i1l10817 1190  
                   i1l10809 118A                     i1l10761 17BC                     i1l10753 179D  
                   i1l10745 177E                     i1l10737 175D                     i1l10931 16E5  
                   i1l10923 16C7                     i1l10771 17D9                     i1l10763 17C2  
                   i1l10755 17A2                     i1l10747 1780                     i1l10739 175E  
                   i1l10941 1709                     i1l10933 16EB                     i1l10925 16CD  
                   i1l10781 1161                     i1l10773 17E1                     i1l10765 17C8  
                   i1l10749 1797                     i1l10757 17AC                     i1l10951 172D  
                   i1l10943 170F                     i1l10935 16F1                     i1l10927 16D3  
                   i1l10791 1172                     i1l10783 1166                     i1l10775 17E7  
                   i1l10759 17B2                     i1l10767 17CE                     i1l10961 174F  
                   i1l10953 1731                     i1l10945 1713                     i1l10937 16F5  
                   i1l10929 16D7                     i1l10793 1173                     i1l10785 116A  
                   i1l10777 17EB                     i1l10769 17D3                     i1l10955 173F  
                   i1l10947 1721                     i1l10939 1703                     i1l10795 1175  
                   i1l10787 116B                     i1l10779 17F1                     i1l10957 1745  
                   i1l10949 1727                     i1l10797 117A                     i1l10789 116D  
                   i1l10959 174B                     i1l10799 117B          __size_of_robotTurn 0074  
                ??_Debounce 0072            ??_lcd_write_data 0020                   ?_lcd_init 0072  
                   _SSPSTAT 0094              main@currentFlw 006B        __end_of_readDistance 1F84  
                 ?_init_adc 0072                   ?_ser_init 0072                   ?_ser_isrx 0072  
          RobotDrive@radius 0031               ??_calibrateIR 0059                     ___awdiv 1542  
                   ___awmod 0801             __size_of___wmul 002C                     ___lwdiv 1356  
                   ___lwmod 127E   __size_of_adc_read_channel 003B                  ??_adc_read 0022  
           __size_of_rotate 0067                     _dpowers 074C                __size_of_abs 0035  
      __size_of_robotFollow 01E1            ___awmod@dividend 0022                     _lowByte 00DB  
                   _ser_tmp 00DE                     _sprintf 0A05                  ??_lcd_init 0023  
       __size_of_RobotDrive 0039        end_of_initialization 107D               _AngleHighByte 00CC  
              ??_ChargeMode 0059          robot_read@readType 0023           __end_of_ser_getch 10D9  
                   init_ram 1F21                  ??_init_adc 0020     __size_of_robotMoveSpeed 00F4  
         __end_of_ser_putch 1132     RobotDrive@speedhighByte 0035           __end_of_robo_init 1FB6  
              _LeftReleased 0385           __end_of_robotTurn 1542                  ??_ser_init 0020  
                ??_ser_isrx 0020                     rotate@i 0028                _DownReleased 0383  
             _RightReleased 038A    __size_of_readAvgDistance 007E                  _robot_read 0B05  
        RobotBattRead@temp1 0024           ?_lcd_write_string 0027          __end_of_ChargeMode 1356  
       __end_of_calibrateIR 14CE          ??_lcd_write_string 0029             _robot_turnRight 0015  
               AT25256A@CS0 0038                 AT25256A@CS1 0039           adc_read@adc_value 0024  
   __size_of_robotTurnSpeed 00A8                   i1___lwmod 123A                  _totalSteps 00CA  
                main@choice 006A               ?_spi_transfer 0072            ??_Init_Follow_IR 0059  
                 _BattState 00B2      __size_of_RobotBattRead 008B                 _VwallSensor 006F  
             _CenterPressed 0380                ?_ReadButtons 0072              __end_of___wmul 10AD  
         i1___lwmod@divisor 0072           i1___lwmod@counter 0077              __end_of_rotate 1462  
       start_initialization 1056      UpdateDisplay@LCDOutput 0049                 __end_of_abs 11C6  
     __size_of_readDistance 0016           __size_of_Debounce 0098                  ?i1___lwmod 0072  
        _TotalDistTravelled 00BC              ??_spi_transfer 0020       lcd_set_cursor@address 0023  
                 _UpPressed 038B                ??_RobotDrive 0033              _RTC_FLAG_250MS 0387  
            _RTC_FLAG_500MS 0388                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 1462                 __pdataBANK1 00E3     __end_of_robot_turnRight 02BA  
          _adc_read_channel 11FF                 ?_robot_read 0072                    ??_rotate 0026  
              _readDistance 1F6E               _RobotBattRead 1636           __size_of_adc_read 0029  
               __pbssCOMMON 007D           ??_readAvgDistance 0030               __pcstackBANK0 0020  
    robotMoveSpeed@distance 0059          __end_of_RobotDrive 11FF           __size_of_lcd_init 002B  
            _robotMoveSpeed 0911                 sprintf@_val 003F                 sprintf@flag 003D  
               sprintf@prec 003E                _current_step 00EF            readAvgDistance@i 0036  
          readAvgDistance@j 0032           __size_of_init_adc 0016            ___lwdiv@dividend 0028  
               _angleTurned 00BE                    ?___awdiv 0026                    ?___awmod 0020  
         __size_of_ser_init 002A           __size_of_ser_isrx 0019                    ?___lwdiv 0026  
                  ?___lwmod 002E                   __pstrings 073C                   _dist_high 00C2  
            ?_RobotBattRead 0072         readDistance@readVal 002C              _robotTurnSpeed 0869  
       robotTurnSpeed@angle 0059         robotTurnSpeed@temp1 0060         robotTurnSpeed@speed 005B  
                ser_getch@c 0021            ___lwdiv@quotient 002B                 ??i1___lwmod 0076  
                  ?_sprintf 0034      __end_of_robotMoveSpeed 0A05      __size_of_robotLoadSong 0055  
   __size_of_lcd_set_cursor 000B           interrupt_function 0004      __size_of_UpdateDisplay 01F5  
            ___wmul@product 0024         __size_of_robot_read 0125                  ser_putch@c 0021  
                 _ser_getch 10AD                   _ser_putch 1105                   _robo_init 1F9D  
                 _robotTurn 14CE                _RightPressed 0389            ?_robot_turnRight 0059  
      __size_of_ReadButtons 0030               ??_robotFollow 005E        __end_of_spi_transfer 1F44  
    __end_of_robotTurnSpeed 0911                 __stringbase 074B           ___wmul@multiplier 0020  
          spi_transfer@data 0022            spi_transfer@temp 0021                    _Debounce 16C1  
         _LeftDebounceCount 00D3             ?_robotMoveSpeed 0059   __size_of_lcd_write_string 002C  
   __size_of_lcd_write_data 0013                  ?_ser_getch 0072                  ?_ser_putch 0072  
   adc_read_channel@channel 0027                    _RobotPos 00D6                  ?_robo_init 0072  
                 init_fetch 1F1D   robot_turnRight@turnTarget 0060                  ?_robotTurn 0022  
                _ADCconvert 0519            __size_of___awdiv 0076             ??_RobotBattRead 0022  
          __size_of___awmod 0068               _robotLoadSong 13A6            __size_of___lwdiv 0050  
          __size_of___lwmod 0046               _UpdateDisplay 0E0B                    _adc_read 1FD7  
           ?_robotTurnSpeed 0059                 _currentMenu 00D9    robot_turnRight@AdcTarget 005B  
           ___lwdiv@divisor 0026         __end_of_robotFollow 0E0B             ___lwdiv@counter 002D  
               _menuStrings 00E3                    _highByte 00DA                    _lcd_init 102B  
                  _dist_low 00C4            __size_of_sprintf 0100    __end_of_adc_read_channel 123A  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 1F58  
             __size_of_isr1 00A7               __size_of_main 025F               __size_of_init 002F  
                  clear_ram 1EEA                    _ser_init 1001        robotFollow@AdcTarget 005B  
                  _ser_isrx 1F84             _readAvgDistance 15B8                ?_calibrateIR 0072  
            ?_robotLoadSong 0072              ?_UpdateDisplay 0072                ??_robot_read 0022  
              _VictimSensor 00D8         _CenterDebounceCount 00CE                _RTC_FLAG_1MS 0386  
        UpdateDisplay@F1264 0190                    intlevel1 0000              _lcd_set_cursor 1EF2  
                 sprintf@ap 003C                   sprintf@sp 0043              robotTurn@angle 0022  
          ___lwmod@dividend 0030          __end_of_robot_read 0C2A                   stringcode 0746  
               ??_ser_getch 0020                 ??_ser_putch 0020               _distTravelled 00C0  
               ??_robo_init 0022       __size_of_spi_transfer 0014                 ??_robotTurn 0024  
               ?_ADCconvert 0072           _lcd_write_control 1F44     __size_of_Init_Follow_IR 0021  
               _robotFollow 0C2A          ?_lcd_write_control 0072                  _OPTION_REG 0081  
                  sprintf@c 0044                    sprintf@f 0034         robotMoveSpeed@temp1 0060  
       robotMoveSpeed@speed 005B             ___lwmod@divisor 002E                  _ROBOTerror 00D4  
           ___lwmod@counter 0033                    stringdir 0746                    stringtab 073C  
       ??_lcd_write_control 0020      __end_of_lcd_set_cursor 1EFD            _lcd_write_string 10D9  
  RobotDrive@radiushighByte 0037                _spi_transfer 1F30                 _RTC_Counter 00BA  
   __end_of_readAvgDistance 1636              _lcd_write_data 1F0A             ??_robotLoadSong 0022  
