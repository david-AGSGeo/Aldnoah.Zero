

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Apr 20 16:32:58 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_Menu
    48                           	FNCALL	_main,_calibrateIR
    49                           	FNCALL	_main,_rotateOld
    50                           	FNCALL	_init,_init_adc
    51                           	FNCALL	_init,_lcd_init
    52                           	FNCALL	_calibrateIR,_rotateOld
    53                           	FNCALL	_lcd_init,_lcd_write_control
    54                           	FNROOT	_main
    55                           	FNCALL	_isr1,___lwmod
    56                           	FNCALL	_isr1,_readAvgDistance
    57                           	FNCALL	_isr1,_UpdateDisplay
    58                           	FNCALL	_isr1,_ReadButtons
    59                           	FNCALL	_UpdateDisplay,i1_lcd_write_control
    60                           	FNCALL	_UpdateDisplay,_sprintf
    61                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    62                           	FNCALL	_UpdateDisplay,_lcd_write_string
    63                           	FNCALL	_UpdateDisplay,___awmod
    64                           	FNCALL	_readAvgDistance,_readDistance
    65                           	FNCALL	_readAvgDistance,___lwdiv
    66                           	FNCALL	_readAvgDistance,_ADCconvert
    67                           	FNCALL	_readDistance,_adc_read_channel
    68                           	FNCALL	_lcd_write_string,_lcd_write_data
    69                           	FNCALL	_lcd_set_cursor,i1_lcd_write_control
    70                           	FNCALL	_sprintf,___lwdiv
    71                           	FNCALL	_sprintf,___lwmod
    72                           	FNCALL	_ADCconvert,___wmul
    73                           	FNCALL	_ADCconvert,___lwdiv
    74                           	FNCALL	_ReadButtons,_Debounce
    75                           	FNCALL	_adc_read_channel,_adc_read
    76                           	FNCALL	intlevel1,_isr1
    77                           	global	intlevel1
    78                           	FNROOT	intlevel1
    79                           	global	_shortMenuStrings
    80                           	global	_menuStrings
    81                           	global	_current_step
    82                           psect	idataBANK0,class=CODE,space=0,delta=2
    83                           global __pidataBANK0
    84  0CEE                     __pidataBANK0:
    85                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
    86                           	line	36
    87                           
    88                           ;initializer for _shortMenuStrings
    89  0CEE  344E               	retlw	(STR_6-__stringbase)&0ffh
    90  0CEF  3452               	retlw	(STR_7-__stringbase)&0ffh
    91  0CF0  3446               	retlw	(STR_8-__stringbase)&0ffh
    92  0CF1  344A               	retlw	(STR_9-__stringbase)&0ffh
    93  0CF2  3456               	retlw	(STR_10-__stringbase)&0ffh
    94                           psect	idataBANK1,class=CODE,space=0,delta=2
    95                           global __pidataBANK1
    96  0CF3                     __pidataBANK1:
    97                           	line	35
    98                           
    99                           ;initializer for _menuStrings
   100  0CF3  3423               	retlw	(STR_1-__stringbase)&0ffh
   101  0CF4  341A               	retlw	(STR_2-__stringbase)&0ffh
   102  0CF5  3435               	retlw	(STR_3-__stringbase)&0ffh
   103  0CF6  343E               	retlw	(STR_4-__stringbase)&0ffh
   104  0CF7  342C               	retlw	(STR_5-__stringbase)&0ffh
   105                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   106                           	line	30
   107                           
   108                           ;initializer for _current_step
   109  0CF8  343C               	retlw	03Ch
   110                           	global	_dpowers
   111                           psect	strings,class=STRING,delta=2
   112                           global __pstrings
   113  0700                     __pstrings:
   114                           ;	global	stringdir,stringtab,__stringbase
   115  0700                     stringtab:
   116                           ;	String table - string pointers are 1 byte each
   117  0700  1BFF               	btfsc	(btemp+1),7
   118  0701  2F0A               	ljmp	stringcode
   119  0702  1383               	bcf	status,7
   120  0703  187F               	btfsc	(btemp+1),0
   121  0704  1783               	bsf	status,7
   122  0705  0800               	movf	indf,w
   123  0706  0A84               	incf fsr
   124  0707  1903               skipnz
   125  0708  0AFF               incf btemp+1
   126  0709  0008               	return
   127  070A                     stringcode:stringdir:
      + 070A                     stringdir:	
   128  070A  3007               movlw high(stringdir)
   129  070B  008A               movwf pclath
   130  070C  0804               movf fsr,w
   131  070D  0A84               incf fsr
   132  070E  0782               	addwf pc
   133  070F                     __stringbase:
   134  070F  3400               	retlw	0
   135                           psect	strings
   136                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   137                           	line	350
   138  0710                     _dpowers:
   139  0710  3401               	retlw	01h
   140  0711  3400               	retlw	0
   141                           
   142  0712  340A               	retlw	0Ah
   143  0713  3400               	retlw	0
   144                           
   145  0714  3464               	retlw	064h
   146  0715  3400               	retlw	0
   147                           
   148  0716  34E8               	retlw	0E8h
   149  0717  3403               	retlw	03h
   150                           
   151  0718  3410               	retlw	010h
   152  0719  3427               	retlw	027h
   153                           
   154                           	global	_dpowers
   155                           	global	_RTC_Counter
   156                           	global	_adcVal
   157                           	global	_distance
   158                           	global	_pos
   159                           	global	_CenterDebounceCount
   160                           	global	_DownDebounceCount
   161                           	global	_LeftDebounceCount
   162                           	global	_RightDebounceCount
   163                           	global	_UpDebounceCount
   164                           	global	_buttonPressed
   165                           	global	_currentMenu
   166                           	global	_current_direction
   167                           	global	_highByte
   168                           	global	_lowByte
   169                           	global	_rxiptr
   170                           	global	_rxoptr
   171                           	global	_ser_tmp
   172                           	global	_txiptr
   173                           	global	_txoptr
   174                           	global	_CenterPressed
   175                           	global	_CenterReleased
   176                           	global	_DownPressed
   177                           	global	_DownReleased
   178                           	global	_LeftPressed
   179                           	global	_LeftReleased
   180                           	global	_RTC_FLAG_10MS
   181                           	global	_RTC_FLAG_1MS
   182                           	global	_RTC_FLAG_250MS
   183                           	global	_RTC_FLAG_500MS
   184                           	global	_RTC_FLAG_50MS
   185                           	global	_RightPressed
   186                           	global	_RightReleased
   187                           	global	_UpPressed
   188                           	global	_UpReleased
   189                           	global	UpdateDisplay@F1211
   190                           	global	_rxfifo
   191                           	global	_txfifo
   192                           	global	_totalSteps
   193                           	global	_ADCON0
   194  001F                     _ADCON0	set	31
   195                           	global	_ADRESH
   196  001E                     _ADRESH	set	30
   197                           	global	_PORTA
   198  0005                     _PORTA	set	5
   199                           	global	_PORTC
   200  0007                     _PORTC	set	7
   201                           	global	_PORTD
   202  0008                     _PORTD	set	8
   203                           	global	_PORTE
   204  0009                     _PORTE	set	9
   205                           	global	_RCREG
   206  001A                     _RCREG	set	26
   207                           	global	_SSPBUF
   208  0013                     _SSPBUF	set	19
   209                           	global	_TMR0
   210  0001                     _TMR0	set	1
   211                           	global	_TXREG
   212  0019                     _TXREG	set	25
   213                           	global	AT25256A@CS0
   214  0038                     AT25256A@CS0	set	56
   215                           	global	AT25256A@CS1
   216  0039                     AT25256A@CS1	set	57
   217                           	global	_CARRY
   218  0018                     _CARRY	set	24
   219                           	global	_CHS0
   220  00FB                     _CHS0	set	251
   221                           	global	_CHS1
   222  00FC                     _CHS1	set	252
   223                           	global	_CHS2
   224  00FD                     _CHS2	set	253
   225                           	global	_CREN
   226  00C4                     _CREN	set	196
   227                           	global	_GIE
   228  005F                     _GIE	set	95
   229                           	global	_GO
   230  00FA                     _GO	set	250
   231                           	global	_OERR
   232  00C1                     _OERR	set	193
   233                           	global	_RB0
   234  0030                     _RB0	set	48
   235                           	global	_RB2
   236  0032                     _RB2	set	50
   237                           	global	_RB3
   238  0033                     _RB3	set	51
   239                           	global	_RB4
   240  0034                     _RB4	set	52
   241                           	global	_RB5
   242  0035                     _RB5	set	53
   243                           	global	_RB6
   244  0036                     _RB6	set	54
   245                           	global	_RC0
   246  0038                     _RC0	set	56
   247                           	global	_RC1
   248  0039                     _RC1	set	57
   249                           	global	_RC2
   250  003A                     _RC2	set	58
   251                           	global	_RCIF
   252  0065                     _RCIF	set	101
   253                           	global	_RE0
   254  0048                     _RE0	set	72
   255                           	global	_RE1
   256  0049                     _RE1	set	73
   257                           	global	_RE2
   258  004A                     _RE2	set	74
   259                           	global	_RX9
   260  00C6                     _RX9	set	198
   261                           	global	_SPEN
   262  00C7                     _SPEN	set	199
   263                           	global	_SSPIF
   264  0063                     _SSPIF	set	99
   265                           	global	_TMR0IE
   266  005D                     _TMR0IE	set	93
   267                           	global	_TMR0IF
   268  005A                     _TMR0IF	set	90
   269                           	global	_TXIF
   270  0064                     _TXIF	set	100
   271                           	global	_ADCON1
   272  009F                     _ADCON1	set	159
   273                           	global	_ADRESL
   274  009E                     _ADRESL	set	158
   275                           	global	_OPTION_REG
   276  0081                     _OPTION_REG	set	129
   277                           	global	_SPBRG
   278  0099                     _SPBRG	set	153
   279                           	global	_TRISA
   280  0085                     _TRISA	set	133
   281                           	global	_TRISB
   282  0086                     _TRISB	set	134
   283                           	global	_TRISC
   284  0087                     _TRISC	set	135
   285                           	global	_TRISD
   286  0088                     _TRISD	set	136
   287                           	global	_TRISE
   288  0089                     _TRISE	set	137
   289                           	global	_BRGH
   290  04C2                     _BRGH	set	1218
   291                           	global	_RCIE
   292  0465                     _RCIE	set	1125
   293                           	global	_SYNC
   294  04C4                     _SYNC	set	1220
   295                           	global	_TX9
   296  04C6                     _TX9	set	1222
   297                           	global	_TXEN
   298  04C5                     _TXEN	set	1221
   299                           	global	_TXIE
   300  0464                     _TXIE	set	1124
   301                           	global	_EEADR
   302  010D                     _EEADR	set	269
   303                           	global	_EEDATA
   304  010C                     _EEDATA	set	268
   305                           	global	_EECON1
   306  018C                     _EECON1	set	396
   307                           	global	_EECON2
   308  018D                     _EECON2	set	397
   309                           	global	_RD
   310  0C60                     _RD	set	3168
   311                           	global	_WR
   312  0C61                     _WR	set	3169
   313                           	global	_WREN
   314  0C62                     _WREN	set	3170
   315                           	
   316  071A                     STR_11:	
   317  071A  3441               	retlw	65	;'A'
   318  071B  3444               	retlw	68	;'D'
   319  071C  3443               	retlw	67	;'C'
   320  071D  343A               	retlw	58	;':'
   321  071E  3425               	retlw	37	;'%'
   322  071F  3464               	retlw	100	;'d'
   323  0720  3420               	retlw	32	;' '
   324  0721  3444               	retlw	68	;'D'
   325  0722  3469               	retlw	105	;'i'
   326  0723  3473               	retlw	115	;'s'
   327  0724  3474               	retlw	116	;'t'
   328  0725  343A               	retlw	58	;':'
   329  0726  3425               	retlw	37	;'%'
   330  0727  3464               	retlw	100	;'d'
   331  0728  3400               	retlw	0
   332                           psect	strings
   333                           	
   334  0729                     STR_2:	
   335  0729  3453               	retlw	83	;'S'
   336  072A  3463               	retlw	99	;'c'
   337  072B  3461               	retlw	97	;'a'
   338  072C  346E               	retlw	110	;'n'
   339  072D  345F               	retlw	95	;'_'
   340  072E  3433               	retlw	51	;'3'
   341  072F  3436               	retlw	54	;'6'
   342  0730  3430               	retlw	48	;'0'
   343  0731  3400               	retlw	0
   344                           psect	strings
   345                           	
   346  0732                     STR_1:	
   347  0732  3443               	retlw	67	;'C'
   348  0733  3461               	retlw	97	;'a'
   349  0734  346C               	retlw	108	;'l'
   350  0735  3469               	retlw	105	;'i'
   351  0736  3462               	retlw	98	;'b'
   352  0737  345F               	retlw	95	;'_'
   353  0738  3449               	retlw	73	;'I'
   354  0739  3452               	retlw	82	;'R'
   355  073A  3400               	retlw	0
   356                           psect	strings
   357                           	
   358  073B                     STR_5:	
   359  073B  3446               	retlw	70	;'F'
   360  073C  346C               	retlw	108	;'l'
   361  073D  3477               	retlw	119	;'w'
   362  073E  345F               	retlw	95	;'_'
   363  073F  3457               	retlw	87	;'W'
   364  0740  3461               	retlw	97	;'a'
   365  0741  346C               	retlw	108	;'l'
   366  0742  346C               	retlw	108	;'l'
   367  0743  3400               	retlw	0
   368                           psect	strings
   369                           	
   370  0744                     STR_3:	
   371  0744  3444               	retlw	68	;'D'
   372  0745  3472               	retlw	114	;'r'
   373  0746  3469               	retlw	105	;'i'
   374  0747  3476               	retlw	118	;'v'
   375  0748  3465               	retlw	101	;'e'
   376  0749  345F               	retlw	95	;'_'
   377  074A  3432               	retlw	50	;'2'
   378  074B  346D               	retlw	109	;'m'
   379  074C  3400               	retlw	0
   380                           psect	strings
   381                           	
   382  074D                     STR_4:	
   383  074D  3444               	retlw	68	;'D'
   384  074E  3472               	retlw	114	;'r'
   385  074F  3469               	retlw	105	;'i'
   386  0750  3476               	retlw	118	;'v'
   387  0751  3465               	retlw	101	;'e'
   388  0752  345F               	retlw	95	;'_'
   389  0753  344C               	retlw	76	;'L'
   390  0754  3400               	retlw	0
   391                           psect	strings
   392                           	
   393  0755                     STR_8:	
   394  0755  3444               	retlw	68	;'D'
   395  0756  3472               	retlw	114	;'r'
   396  0757  3432               	retlw	50	;'2'
   397  0758  3400               	retlw	0
   398                           psect	strings
   399                           	
   400  0759                     STR_9:	
   401  0759  3444               	retlw	68	;'D'
   402  075A  3472               	retlw	114	;'r'
   403  075B  344C               	retlw	76	;'L'
   404  075C  3400               	retlw	0
   405                           psect	strings
   406                           	
   407  075D                     STR_6:	
   408  075D  3443               	retlw	67	;'C'
   409  075E  3461               	retlw	97	;'a'
   410  075F  346C               	retlw	108	;'l'
   411  0760  3400               	retlw	0
   412                           psect	strings
   413                           	
   414  0761                     STR_7:	
   415  0761  3453               	retlw	83	;'S'
   416  0762  3463               	retlw	99	;'c'
   417  0763  346E               	retlw	110	;'n'
   418  0764  3400               	retlw	0
   419                           psect	strings
   420                           	
   421  0765                     STR_10:	
   422  0765  3446               	retlw	70	;'F'
   423  0766  346C               	retlw	108	;'l'
   424  0767  3477               	retlw	119	;'w'
   425  0768  3400               	retlw	0
   426                           psect	strings
   427                           	file	"Assignment3_AldnoahZero.as"
   428                           	line	#
   429                           psect cinit,class=CODE,delta=2
   430                           global start_initialization
   431  07CF                     start_initialization:
   432                           
   433                           psect	bitbssBANK0,class=BANK0,bit,space=1
   434                           global __pbitbssBANK0
   435  0340                     __pbitbssBANK0:
   436  0340                     _CenterPressed:
   437  0340                            ds      1
   438                           
   439  0341                     _CenterReleased:
   440  0341                            ds      1
   441                           
   442  0342                     _DownPressed:
   443  0342                            ds      1
   444                           
   445  0343                     _DownReleased:
   446  0343                            ds      1
   447                           
   448  0344                     _LeftPressed:
   449  0344                            ds      1
   450                           
   451  0345                     _LeftReleased:
   452  0345                            ds      1
   453                           
   454  0346                     _RTC_FLAG_10MS:
   455  0346                            ds      1
   456                           
   457  0347                     _RTC_FLAG_1MS:
   458  0347                            ds      1
   459                           
   460  0348                     _RTC_FLAG_250MS:
   461  0348                            ds      1
   462                           
   463  0349                     _RTC_FLAG_500MS:
   464  0349                            ds      1
   465                           
   466  034A                     _RTC_FLAG_50MS:
   467  034A                            ds      1
   468                           
   469  034B                     _RightPressed:
   470  034B                            ds      1
   471                           
   472  034C                     _RightReleased:
   473  034C                            ds      1
   474                           
   475  034D                     _UpPressed:
   476  034D                            ds      1
   477                           
   478  034E                     _UpReleased:
   479  034E                            ds      1
   480                           
   481                           psect	bssBANK0,class=BANK0,space=1
   482                           global __pbssBANK0
   483  0051                     __pbssBANK0:
   484  0051                     _RTC_Counter:
   485  0051                            ds      2
   486                           
   487  0053                     _adcVal:
   488  0053                            ds      2
   489                           
   490  0055                     _distance:
   491  0055                            ds      2
   492                           
   493  0057                     _pos:
   494  0057                            ds      2
   495                           
   496  0059                     _CenterDebounceCount:
   497  0059                            ds      1
   498                           
   499  005A                     _DownDebounceCount:
   500  005A                            ds      1
   501                           
   502  005B                     _LeftDebounceCount:
   503  005B                            ds      1
   504                           
   505  005C                     _RightDebounceCount:
   506  005C                            ds      1
   507                           
   508  005D                     _UpDebounceCount:
   509  005D                            ds      1
   510                           
   511  005E                     _buttonPressed:
   512  005E                            ds      1
   513                           
   514  005F                     _currentMenu:
   515  005F                            ds      1
   516                           
   517  0060                     _current_direction:
   518  0060                            ds      1
   519                           
   520  0061                     _highByte:
   521  0061                            ds      1
   522                           
   523  0062                     _lowByte:
   524  0062                            ds      1
   525                           
   526  0063                     _rxiptr:
   527  0063                            ds      1
   528                           
   529  0064                     _rxoptr:
   530  0064                            ds      1
   531                           
   532  0065                     _ser_tmp:
   533  0065                            ds      1
   534                           
   535  0066                     _txiptr:
   536  0066                            ds      1
   537                           
   538  0067                     _txoptr:
   539  0067                            ds      1
   540                           
   541                           psect	dataBANK0,class=BANK0,space=1
   542                           global __pdataBANK0
   543  006A                     __pdataBANK0:
   544                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   545                           	line	36
   546  006A                     _shortMenuStrings:
   547  006A                            ds      5
   548                           
   549                           psect	bssBANK1,class=BANK1,space=1
   550                           global __pbssBANK1
   551  00A0                     __pbssBANK1:
   552  00A0                     UpdateDisplay@F1211:
   553  00A0                            ds      16
   554                           
   555  00B0                     _rxfifo:
   556  00B0                            ds      16
   557                           
   558  00C0                     _txfifo:
   559  00C0                            ds      16
   560                           
   561  00D0                     _totalSteps:
   562  00D0                            ds      2
   563                           
   564                           psect	dataBANK1,class=BANK1,space=1
   565                           global __pdataBANK1
   566  00D2                     __pdataBANK1:
   567                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   568                           	line	35
   569  00D2                     _menuStrings:
   570  00D2                            ds      5
   571                           
   572                           psect	dataBANK1
   573                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   574                           	line	30
   575  00D7                     _current_step:
   576  00D7                            ds      1
   577                           
   578                           psect clrtext,class=CODE,delta=2
   579                           global clear_ram
   580                           ;	Called with FSR containing the base address, and
   581                           ;	W with the last address+1
   582  0CF9                     clear_ram:
   583  0CF9  0064               	clrwdt			;clear the watchdog before getting into this loop
   584  0CFA                     clrloop:
   585  0CFA  0180               	clrf	indf		;clear RAM location pointed to by FSR
   586  0CFB  0A84               	incf	fsr,f		;increment pointer
   587  0CFC  0604               	xorwf	fsr,w		;XOR with final address
   588  0CFD  1903               	btfsc	status,2	;have we reached the end yet?
   589  0CFE  3400               	retlw	0		;all done for this memory range, return
   590  0CFF  0604               	xorwf	fsr,w		;XOR again to restore value
   591  0D00  2CFA               	goto	clrloop		;do the next byte
   592                           
   593                           ; Clear objects allocated to BITBANK0
   594                           psect cinit,class=CODE,delta=2
   595  07CF  01E8               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   596  07D0  01E9               	clrf	((__pbitbssBANK0/8)+1)&07Fh
   597                           ; Clear objects allocated to BANK0
   598                           psect cinit,class=CODE,delta=2
   599  07D1  1383               	bcf	status, 7	;select IRP bank0
   600  07D2  3051               	movlw	low(__pbssBANK0)
   601  07D3  0084               	movwf	fsr
   602  07D4  3068               	movlw	low((__pbssBANK0)+017h)
   603  07D5  120A  158A  24F9   	fcall	clear_ram
              120A  118A         
   604                           ; Clear objects allocated to BANK1
   605                           psect cinit,class=CODE,delta=2
   606  07DA  30A0               	movlw	low(__pbssBANK1)
   607  07DB  0084               	movwf	fsr
   608  07DC  30D2               	movlw	low((__pbssBANK1)+032h)
   609  07DD  120A  158A  24F9   	fcall	clear_ram
              120A  118A         
   610                           global btemp
   611                           psect inittext,class=CODE,delta=2
   612                           global init_fetch,btemp
   613                           ;	Called with low address in FSR and high address in W
   614  0D1D                     init_fetch:
   615  0D1D  087E               	movf btemp,w
   616  0D1E  008A               	movwf pclath
   617  0D1F  087F               	movf btemp+1,w
   618  0D20  0082               	movwf pc
   619                           global init_ram
   620                           ;Called with:
   621                           ;	high address of idata address in btemp 
   622                           ;	low address of idata address in btemp+1 
   623                           ;	low address of data in FSR
   624                           ;	high address + 1 of data in btemp-1
   625  0D21                     init_ram:
   626  0D21  120A  158A  251D   	fcall init_fetch
              120A  158A         
   627  0D26  0080               	movwf indf,f
   628  0D27  0A84               	incf fsr,f
   629  0D28  0804               	movf fsr,w
   630  0D29  067D               	xorwf btemp-1,w
   631  0D2A  1903               	btfsc status,2
   632  0D2B  3400               	retlw 0
   633  0D2C  0AFF               	incf btemp+1,f
   634  0D2D  1903               	btfsc status,2
   635  0D2E  0AFE               	incf btemp,f
   636  0D2F  2D21               	goto init_ram
   637                           ; Initialize objects allocated to BANK1
   638                           psect cinit,class=CODE,delta=2
   639                           global init_ram, __pidataBANK1
   640  07E2  30D8               	movlw low(__pdataBANK1+6)
   641  07E3  00FD               	movwf btemp-1,f
   642  07E4  300C               	movlw high(__pidataBANK1)
   643  07E5  00FE               	movwf btemp,f
   644  07E6  30F3               	movlw low(__pidataBANK1)
   645  07E7  00FF               	movwf btemp+1,f
   646  07E8  30D2               	movlw low(__pdataBANK1)
   647  07E9  0084               	movwf fsr,f
   648  07EA  120A  158A  2521   	fcall init_ram
              120A  118A         
   649                           ; Initialize objects allocated to BANK0
   650                           psect cinit,class=CODE,delta=2
   651                           global init_ram, __pidataBANK0
   652  07EF  306F               	movlw low(__pdataBANK0+5)
   653  07F0  00FD               	movwf btemp-1,f
   654  07F1  300C               	movlw high(__pidataBANK0)
   655  07F2  00FE               	movwf btemp,f
   656  07F3  30EE               	movlw low(__pidataBANK0)
   657  07F4  00FF               	movwf btemp+1,f
   658  07F5  306A               	movlw low(__pdataBANK0)
   659  07F6  0084               	movwf fsr,f
   660  07F7  120A  158A  2521   	fcall init_ram
              120A  118A         
   661                           psect cinit,class=CODE,delta=2
   662                           global end_of_initialization
   663                           
   664                           ;End of C runtime variable initialization code
   665                           
   666  07FC                     end_of_initialization:
   667  07FC  0183               clrf status
   668  07FD  120A  118A  2DC0   ljmp _main	;jump to C main() function
   669                           psect	cstackBANK1,class=BANK1,space=1
   670                           global __pcstackBANK1
   671  00D8                     __pcstackBANK1:
   672                           	global	?_rotateOld
   673  00D8                     ?_rotateOld:	; 0 bytes @ 0x0
   674                           	global	??_Menu
   675  00D8                     ??_Menu:	; 0 bytes @ 0x0
   676                           	global	??_init_adc
   677  00D8                     ??_init_adc:	; 0 bytes @ 0x0
   678                           	global	??_lcd_write_control
   679  00D8                     ??_lcd_write_control:	; 0 bytes @ 0x0
   680                           	global	rotateOld@direction
   681  00D8                     rotateOld@direction:	; 1 bytes @ 0x0
   682                           	global	Menu@input
   683  00D8                     Menu@input:	; 1 bytes @ 0x0
   684  00D8                     	ds	1
   685                           	global	??_rotateOld
   686  00D9                     ??_rotateOld:	; 0 bytes @ 0x1
   687  00D9                     	ds	1
   688                           	global	lcd_write_control@databyte
   689  00DA                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   690  00DA                     	ds	1
   691                           	global	??_lcd_init
   692  00DB                     ??_lcd_init:	; 0 bytes @ 0x3
   693                           	global	??_init
   694  00DB                     ??_init:	; 0 bytes @ 0x3
   695                           	global	rotateOld@steps
   696  00DB                     rotateOld@steps:	; 1 bytes @ 0x3
   697  00DB                     	ds	1
   698                           	global	??_calibrateIR
   699  00DC                     ??_calibrateIR:	; 0 bytes @ 0x4
   700                           	global	??_main
   701  00DC                     ??_main:	; 0 bytes @ 0x4
   702  00DC                     	ds	1
   703                           	global	main@choice
   704  00DD                     main@choice:	; 1 bytes @ 0x5
   705  00DD                     	ds	1
   706                           psect	cstackCOMMON,class=COMMON,space=1
   707                           global __pcstackCOMMON
   708  0070                     __pcstackCOMMON:
   709                           	global	?_readAvgDistance
   710  0070                     ?_readAvgDistance:	; 0 bytes @ 0x0
   711                           	global	?_UpdateDisplay
   712  0070                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   713                           	global	?_ADCconvert
   714  0070                     ?_ADCconvert:	; 0 bytes @ 0x0
   715                           	global	?_init_adc
   716  0070                     ?_init_adc:	; 0 bytes @ 0x0
   717                           	global	?_lcd_write_control
   718  0070                     ?_lcd_write_control:	; 0 bytes @ 0x0
   719                           	global	?_lcd_write_data
   720  0070                     ?_lcd_write_data:	; 0 bytes @ 0x0
   721                           	global	??_lcd_write_data
   722  0070                     ??_lcd_write_data:	; 0 bytes @ 0x0
   723                           	global	?_lcd_set_cursor
   724  0070                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   725                           	global	?_lcd_init
   726  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   727                           	global	?_isr1
   728  0070                     ?_isr1:	; 0 bytes @ 0x0
   729                           	global	?_init
   730  0070                     ?_init:	; 0 bytes @ 0x0
   731                           	global	?_calibrateIR
   732  0070                     ?_calibrateIR:	; 0 bytes @ 0x0
   733                           	global	?_main
   734  0070                     ?_main:	; 0 bytes @ 0x0
   735                           	global	?_Debounce
   736  0070                     ?_Debounce:	; 0 bytes @ 0x0
   737                           	global	??_Debounce
   738  0070                     ??_Debounce:	; 0 bytes @ 0x0
   739                           	global	?i1_lcd_write_control
   740  0070                     ?i1_lcd_write_control:	; 0 bytes @ 0x0
   741                           	global	??i1_lcd_write_control
   742  0070                     ??i1_lcd_write_control:	; 0 bytes @ 0x0
   743                           	global	?_ReadButtons
   744  0070                     ?_ReadButtons:	; 1 bytes @ 0x0
   745                           	global	?_Menu
   746  0070                     ?_Menu:	; 1 bytes @ 0x0
   747                           	global	?_adc_read_channel
   748  0070                     ?_adc_read_channel:	; 1 bytes @ 0x0
   749                           	global	?_adc_read
   750  0070                     ?_adc_read:	; 2 bytes @ 0x0
   751                           	global	?___wmul
   752  0070                     ?___wmul:	; 2 bytes @ 0x0
   753                           	global	?___awmod
   754  0070                     ?___awmod:	; 2 bytes @ 0x0
   755                           	global	___wmul@multiplier
   756  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   757                           	global	___awmod@divisor
   758  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   759  0070                     	ds	1
   760                           	global	??_ReadButtons
   761  0071                     ??_ReadButtons:	; 0 bytes @ 0x1
   762  0071                     	ds	1
   763                           	global	??_adc_read
   764  0072                     ??_adc_read:	; 0 bytes @ 0x2
   765                           	global	lcd_write_data@databyte
   766  0072                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   767                           	global	i1lcd_write_control@databyte
   768  0072                     i1lcd_write_control@databyte:	; 1 bytes @ 0x2
   769                           	global	___wmul@multiplicand
   770  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   771                           	global	___awmod@dividend
   772  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   773  0072                     	ds	1
   774                           	global	??_lcd_set_cursor
   775  0073                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   776                           	global	lcd_set_cursor@address
   777  0073                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   778  0073                     	ds	1
   779                           	global	??___wmul
   780  0074                     ??___wmul:	; 0 bytes @ 0x4
   781                           	global	??___awmod
   782  0074                     ??___awmod:	; 0 bytes @ 0x4
   783                           	global	adc_read@adc_value
   784  0074                     adc_read@adc_value:	; 2 bytes @ 0x4
   785                           	global	___wmul@product
   786  0074                     ___wmul@product:	; 2 bytes @ 0x4
   787  0074                     	ds	1
   788                           	global	___awmod@counter
   789  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   790  0075                     	ds	1
   791                           	global	??_adc_read_channel
   792  0076                     ??_adc_read_channel:	; 0 bytes @ 0x6
   793                           	global	?___lwdiv
   794  0076                     ?___lwdiv:	; 2 bytes @ 0x6
   795                           	global	___awmod@sign
   796  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   797                           	global	___lwdiv@divisor
   798  0076                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   799  0076                     	ds	1
   800                           	global	?_lcd_write_string
   801  0077                     ?_lcd_write_string:	; 0 bytes @ 0x7
   802                           	global	adc_read_channel@channel
   803  0077                     adc_read_channel@channel:	; 1 bytes @ 0x7
   804                           	global	lcd_write_string@s
   805  0077                     lcd_write_string@s:	; 2 bytes @ 0x7
   806  0077                     	ds	1
   807                           	global	?_readDistance
   808  0078                     ?_readDistance:	; 2 bytes @ 0x8
   809                           	global	___lwdiv@dividend
   810  0078                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   811  0078                     	ds	1
   812                           	global	??_lcd_write_string
   813  0079                     ??_lcd_write_string:	; 0 bytes @ 0x9
   814  0079                     	ds	1
   815                           	global	??_readDistance
   816  007A                     ??_readDistance:	; 0 bytes @ 0xA
   817                           	global	??___lwdiv
   818  007A                     ??___lwdiv:	; 0 bytes @ 0xA
   819  007A                     	ds	1
   820                           	global	___lwdiv@quotient
   821  007B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
   822  007B                     	ds	1
   823                           	global	readDistance@fullval
   824  007C                     readDistance@fullval:	; 2 bytes @ 0xC
   825  007C                     	ds	1
   826                           	global	___lwdiv@counter
   827  007D                     ___lwdiv@counter:	; 1 bytes @ 0xD
   828  007D                     	ds	1
   829                           	global	??_readAvgDistance
   830  007E                     ??_readAvgDistance:	; 0 bytes @ 0xE
   831                           psect	cstackBANK0,class=BANK0,space=1
   832                           global __pcstackBANK0
   833  0020                     __pcstackBANK0:
   834                           	global	??_ADCconvert
   835  0020                     ??_ADCconvert:	; 0 bytes @ 0x0
   836                           	global	?___lwmod
   837  0020                     ?___lwmod:	; 2 bytes @ 0x0
   838                           	global	___lwmod@divisor
   839  0020                     ___lwmod@divisor:	; 2 bytes @ 0x0
   840  0020                     	ds	2
   841                           	global	readAvgDistance@fullval
   842  0022                     readAvgDistance@fullval:	; 2 bytes @ 0x2
   843                           	global	___lwmod@dividend
   844  0022                     ___lwmod@dividend:	; 2 bytes @ 0x2
   845  0022                     	ds	2
   846                           	global	??___lwmod
   847  0024                     ??___lwmod:	; 0 bytes @ 0x4
   848                           	global	readAvgDistance@i
   849  0024                     readAvgDistance@i:	; 2 bytes @ 0x4
   850  0024                     	ds	1
   851                           	global	___lwmod@counter
   852  0025                     ___lwmod@counter:	; 1 bytes @ 0x5
   853  0025                     	ds	1
   854                           	global	?_sprintf
   855  0026                     ?_sprintf:	; 2 bytes @ 0x6
   856                           	global	sprintf@f
   857  0026                     sprintf@f:	; 1 bytes @ 0x6
   858  0026                     	ds	5
   859                           	global	??_sprintf
   860  002B                     ??_sprintf:	; 0 bytes @ 0xB
   861  002B                     	ds	3
   862                           	global	sprintf@ap
   863  002E                     sprintf@ap:	; 1 bytes @ 0xE
   864  002E                     	ds	1
   865                           	global	sprintf@flag
   866  002F                     sprintf@flag:	; 1 bytes @ 0xF
   867  002F                     	ds	1
   868                           	global	sprintf@prec
   869  0030                     sprintf@prec:	; 1 bytes @ 0x10
   870  0030                     	ds	1
   871                           	global	sprintf@_val
   872  0031                     sprintf@_val:	; 4 bytes @ 0x11
   873  0031                     	ds	4
   874                           	global	sprintf@sp
   875  0035                     sprintf@sp:	; 1 bytes @ 0x15
   876  0035                     	ds	1
   877                           	global	sprintf@c
   878  0036                     sprintf@c:	; 1 bytes @ 0x16
   879  0036                     	ds	1
   880                           	global	??_UpdateDisplay
   881  0037                     ??_UpdateDisplay:	; 0 bytes @ 0x17
   882  0037                     	ds	5
   883                           	global	UpdateDisplay@adcOutput
   884  003C                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x1C
   885  003C                     	ds	16
   886                           	global	??_isr1
   887  004C                     ??_isr1:	; 0 bytes @ 0x2C
   888  004C                     	ds	5
   889 ;;Data sizes: Strings 79, constant 10, data 11, bss 73, persistent 0 stack 0
   890 ;;Auto spaces:   Size  Autos    Used
   891 ;; COMMON          14     14      14
   892 ;; BANK0           80     49      79
   893 ;; BANK1           80      6      62
   894 ;; BANK3           96      0       0
   895 ;; BANK2           96      0       0
   896                           
   897 ;;
   898 ;; Pointer list with targets:
   899                           
   900 ;; ?___awmod	int  size(1) Largest target is 0
   901 ;;
   902 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   903 ;;
   904 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
   905 ;;
   906 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   907 ;;
   908 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   909 ;;
   910 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
   911 ;;
   912 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
   913 ;;		 -> STR_11(CODE[15]), 
   914 ;;
   915 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
   916 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
   917 ;;
   918 ;; ?_sprintf	int  size(1) Largest target is 0
   919 ;;
   920 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   921 ;;		 -> ?_sprintf(BANK0[2]), 
   922 ;;
   923 ;; S8053$_cp	PTR const unsigned char  size(1) Largest target is 0
   924 ;;
   925 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   926 ;;
   927 ;; shortMenuStrings	PTR const unsigned char [5] size(1) Largest target is 4
   928 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
   929 ;;		 -> STR_6(CODE[4]), 
   930 ;;
   931 ;; menuStrings	PTR const unsigned char [5] size(1) Largest target is 9
   932 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
   933 ;;		 -> STR_1(CODE[9]), 
   934 ;;
   935 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
   936 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
   937 ;;		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[8]), 
   938 ;;		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 
   939 ;;
   940                           
   941                           
   942 ;;
   943 ;; Critical Paths under _main in COMMON
   944 ;;
   945 ;;   None.
   946 ;;
   947 ;; Critical Paths under _isr1 in COMMON
   948 ;;
   949 ;;   _readAvgDistance->_readDistance
   950 ;;   _readAvgDistance->___lwdiv
   951 ;;   _readDistance->_adc_read_channel
   952 ;;   _lcd_write_string->___awmod
   953 ;;   _lcd_set_cursor->i1_lcd_write_control
   954 ;;   _sprintf->___lwdiv
   955 ;;   _ADCconvert->___lwdiv
   956 ;;   _ReadButtons->_Debounce
   957 ;;   _adc_read_channel->_adc_read
   958 ;;   ___lwmod->___lwdiv
   959 ;;   ___lwdiv->___wmul
   960 ;;
   961 ;; Critical Paths under _main in BANK0
   962 ;;
   963 ;;   None.
   964 ;;
   965 ;; Critical Paths under _isr1 in BANK0
   966 ;;
   967 ;;   _isr1->_UpdateDisplay
   968 ;;   _UpdateDisplay->_sprintf
   969 ;;   _readAvgDistance->_ADCconvert
   970 ;;   _sprintf->___lwmod
   971 ;;
   972 ;; Critical Paths under _main in BANK1
   973 ;;
   974 ;;   _main->_rotateOld
   975 ;;   _calibrateIR->_rotateOld
   976 ;;   _lcd_init->_lcd_write_control
   977 ;;
   978 ;; Critical Paths under _isr1 in BANK1
   979 ;;
   980 ;;   None.
   981 ;;
   982 ;; Critical Paths under _main in BANK3
   983 ;;
   984 ;;   None.
   985 ;;
   986 ;; Critical Paths under _isr1 in BANK3
   987 ;;
   988 ;;   None.
   989 ;;
   990 ;; Critical Paths under _main in BANK2
   991 ;;
   992 ;;   None.
   993 ;;
   994 ;; Critical Paths under _isr1 in BANK2
   995 ;;
   996 ;;   None.
   997                           
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1000 ;;
  1001                           
  1002 ;;
  1003 ;;Call Graph Tables:
  1004 ;;
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (0) _main                                                 2     2      0     247
  1009 ;;                                              4 BANK1      2     2      0
  1010 ;;                               _init
  1011 ;;                               _Menu
  1012 ;;                        _calibrateIR
  1013 ;;                          _rotateOld
  1014 ;; ---------------------------------------------------------------------------------
  1015 ;; (1) _init                                                 0     0      0      22
  1016 ;;                           _init_adc
  1017 ;;                           _lcd_init
  1018 ;; ---------------------------------------------------------------------------------
  1019 ;; (1) _calibrateIR                                          0     0      0      89
  1020 ;;                          _rotateOld
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (2) _lcd_init                                             0     0      0      22
  1023 ;;                  _lcd_write_control
  1024 ;; ---------------------------------------------------------------------------------
  1025 ;; (1) _rotateOld                                            4     3      1      89
  1026 ;;                                              0 BANK1      4     3      1
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (3) _lcd_write_control                                    3     3      0      22
  1029 ;;                                              0 BANK1      3     3      0
  1030 ;; ---------------------------------------------------------------------------------
  1031 ;; (2) _init_adc                                             1     1      0       0
  1032 ;;                                              0 BANK1      1     1      0
  1033 ;; ---------------------------------------------------------------------------------
  1034 ;; (1) _Menu                                                 1     1      0      22
  1035 ;;                                              0 BANK1      1     1      0
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; Estimated maximum stack depth 3
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (4) _isr1                                                 5     5      0    2099
  1042 ;;                                             44 BANK0      5     5      0
  1043 ;;                            ___lwmod
  1044 ;;                    _readAvgDistance
  1045 ;;                      _UpdateDisplay
  1046 ;;                        _ReadButtons
  1047 ;; ---------------------------------------------------------------------------------
  1048 ;; (5) _UpdateDisplay                                       21    21      0    1385
  1049 ;;                                             23 BANK0     21    21      0
  1050 ;;                i1_lcd_write_control
  1051 ;;                            _sprintf
  1052 ;;                     _lcd_set_cursor
  1053 ;;                   _lcd_write_string
  1054 ;;                            ___awmod
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (5) _readAvgDistance                                      4     4      0     555
  1057 ;;                                              2 BANK0      4     4      0
  1058 ;;                       _readDistance
  1059 ;;                            ___lwdiv
  1060 ;;                         _ADCconvert
  1061 ;; ---------------------------------------------------------------------------------
  1062 ;; (6) _readDistance                                         6     4      2      69
  1063 ;;                                              8 COMMON     6     4      2
  1064 ;;                   _adc_read_channel
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (6) _lcd_write_string                                     2     0      2      67
  1067 ;;                                              7 COMMON     2     0      2
  1068 ;;                     _lcd_write_data
  1069 ;;                            ___awmod (ARG)
  1070 ;; ---------------------------------------------------------------------------------
  1071 ;; (6) _lcd_set_cursor                                       1     1      0      96
  1072 ;;                                              3 COMMON     1     1      0
  1073 ;;                i1_lcd_write_control
  1074 ;; ---------------------------------------------------------------------------------
  1075 ;; (7) i1_lcd_write_control                                  3     3      0      73
  1076 ;;                                              0 COMMON     3     3      0
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (6) _sprintf                                             17    12      5     798
  1079 ;;                                              6 BANK0     17    12      5
  1080 ;;                            ___lwdiv
  1081 ;;                            ___lwmod
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (6) _ADCconvert                                           2     2      0     254
  1084 ;;                                              0 BANK0      2     2      0
  1085 ;;                             ___wmul
  1086 ;;                            ___lwdiv
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (5) _ReadButtons                                          0     0      0       0
  1089 ;;                           _Debounce
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (7) _lcd_write_data                                       3     3      0      22
  1092 ;;                                              0 COMMON     3     3      0
  1093 ;; ---------------------------------------------------------------------------------
  1094 ;; (7) _adc_read_channel                                     2     2      0      46
  1095 ;;                                              6 COMMON     2     2      0
  1096 ;;                           _adc_read
  1097 ;; ---------------------------------------------------------------------------------
  1098 ;; (6) ___awmod                                              7     3      4     296
  1099 ;;                                              0 COMMON     7     3      4
  1100 ;; ---------------------------------------------------------------------------------
  1101 ;; (7) ___lwmod                                              6     2      4     159
  1102 ;;                                              0 BANK0      6     2      4
  1103 ;;                            ___lwdiv (ARG)
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (7) ___lwdiv                                              8     4      4     162
  1106 ;;                                              6 COMMON     8     4      4
  1107 ;;                             ___wmul (ARG)
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (7) ___wmul                                               6     2      4      92
  1110 ;;                                              0 COMMON     6     2      4
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (6) _Debounce                                             1     1      0       0
  1113 ;;                                              0 COMMON     1     1      0
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; (8) _adc_read                                             6     4      2      24
  1116 ;;                                              0 COMMON     6     4      2
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; Estimated maximum stack depth 8
  1119 ;; ---------------------------------------------------------------------------------
  1120                           
  1121 ;; Call Graph Graphs:
  1122                           
  1123 ;; _main (ROOT)
  1124 ;;   _init
  1125 ;;     _init_adc
  1126 ;;     _lcd_init
  1127 ;;       _lcd_write_control
  1128 ;;   _Menu
  1129 ;;   _calibrateIR
  1130 ;;     _rotateOld
  1131 ;;   _rotateOld
  1132 ;;
  1133 ;; _isr1 (ROOT)
  1134 ;;   ___lwmod
  1135 ;;     ___lwdiv (ARG)
  1136 ;;       ___wmul (ARG)
  1137 ;;   _readAvgDistance
  1138 ;;     _readDistance
  1139 ;;       _adc_read_channel
  1140 ;;         _adc_read
  1141 ;;     ___lwdiv
  1142 ;;       ___wmul (ARG)
  1143 ;;     _ADCconvert
  1144 ;;       ___wmul
  1145 ;;       ___lwdiv
  1146 ;;         ___wmul (ARG)
  1147 ;;   _UpdateDisplay
  1148 ;;     i1_lcd_write_control
  1149 ;;     _sprintf
  1150 ;;       ___lwdiv
  1151 ;;         ___wmul (ARG)
  1152 ;;       ___lwmod
  1153 ;;         ___lwdiv (ARG)
  1154 ;;           ___wmul (ARG)
  1155 ;;     _lcd_set_cursor
  1156 ;;       i1_lcd_write_control
  1157 ;;     _lcd_write_string
  1158 ;;       _lcd_write_data
  1159 ;;       ___awmod (ARG)
  1160 ;;     ___awmod
  1161 ;;   _ReadButtons
  1162 ;;     _Debounce
  1163 ;;
  1164                           
  1165 ;; Address spaces:
  1166                           
  1167 ;;Name               Size   Autos  Total    Cost      Usage
  1168 ;;BANK3               60      0       0       9        0.0%
  1169 ;;BITBANK3            60      0       0       8        0.0%
  1170 ;;SFR3                 0      0       0       4        0.0%
  1171 ;;BITSFR3              0      0       0       4        0.0%
  1172 ;;BANK2               60      0       0      11        0.0%
  1173 ;;BITBANK2            60      0       0      10        0.0%
  1174 ;;SFR2                 0      0       0       5        0.0%
  1175 ;;BITSFR2              0      0       0       5        0.0%
  1176 ;;SFR1                 0      0       0       2        0.0%
  1177 ;;BITSFR1              0      0       0       2        0.0%
  1178 ;;BANK1               50      6      3E       7       77.5%
  1179 ;;BITBANK1            50      0       0       6        0.0%
  1180 ;;CODE                 0      0       0       0        0.0%
  1181 ;;DATA                 0      0      A8      12        0.0%
  1182 ;;ABS                  0      0      9B       3        0.0%
  1183 ;;NULL                 0      0       0       0        0.0%
  1184 ;;STACK                0      0       D       2        0.0%
  1185 ;;BANK0               50     31      4F       5       98.8%
  1186 ;;BITBANK0            50      0       2       4        2.5%
  1187 ;;SFR0                 0      0       0       1        0.0%
  1188 ;;BITSFR0              0      0       0       1        0.0%
  1189 ;;COMMON               E      E       E       1      100.0%
  1190 ;;BITCOMMON            E      0       0       0        0.0%
  1191 ;;EEDATA             100      0       0       0        0.0%
  1192                           
  1193                           	global	_main
  1194                           psect	maintext,global,class=CODE,delta=2
  1195                           global __pmaintext
  1196  05C0                     __pmaintext:
  1197                           
  1198 ;; *************** function _main *****************
  1199 ;; Defined at:
  1200 ;;		line 198 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  choice          1    5[BANK1 ] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;		None               void
  1207 ;; Registers used:
  1208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 17F/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       0       0       0       0
  1215 ;;      Locals:         0       0       1       0       0
  1216 ;;      Temps:          0       0       1       0       0
  1217 ;;      Totals:         0       0       2       0       0
  1218 ;;Total ram usage:        2 bytes
  1219 ;; Hardware stack levels required when called:    8
  1220 ;; This function calls:
  1221 ;;		_init
  1222 ;;		_Menu
  1223 ;;		_calibrateIR
  1224 ;;		_rotateOld
  1225 ;; This function is called by:
  1226 ;;		Startup code after reset
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           psect	maintext
  1230                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1231                           	line	198
  1232                           	global	__size_of_main
  1233  008E                     	__size_of_main	equ	__end_of_main-_main
  1234                           	
  1235  05C0                     _main:	
  1236                           	opt	stack 0
  1237                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1238                           	line	203
  1239                           	
  1240  05C0                     l10603:	
  1241                           ;Main.c: 203: init();
  1242  05C0  120A  158A  256C   	fcall	_init
              120A  118A         
  1243  05C5  2DC6               	goto	l10605
  1244                           	line	209
  1245                           ;Main.c: 209: while(1)
  1246                           	
  1247  05C6                     l2194:	
  1248                           	line	211
  1249                           	
  1250  05C6                     l10605:	
  1251                           ;Main.c: 210: {
  1252                           ;Main.c: 211: unsigned char choice = 255;
  1253  05C6  30FF               	movlw	(0FFh)
  1254  05C7  1683               	bsf	status, 5	;RP0=1, select bank1
  1255  05C8  1303               	bcf	status, 6	;RP1=0, select bank1
  1256  05C9  00DC               	movwf	(??_main+0)^080h+0
  1257  05CA  085C               	movf	(??_main+0)^080h+0,w
  1258  05CB  00DD               	movwf	(main@choice)^080h
  1259                           	line	213
  1260                           ;Main.c: 213: switch (buttonPressed)
  1261  05CC  2E06               	goto	l10629
  1262                           	line	215
  1263                           ;Main.c: 214: {
  1264                           ;Main.c: 215: case 1:
  1265                           	
  1266  05CD                     l2196:	
  1267                           	line	216
  1268                           	
  1269  05CD                     l10607:	
  1270                           ;Main.c: 216: Menu(1);
  1271  05CD  3001               	movlw	(01h)
  1272  05CE  120A  158A  26C9   	fcall	_Menu
              120A  118A         
  1273                           	line	218
  1274                           	
  1275  05D3                     l10609:	
  1276                           ;Main.c: 218: buttonPressed = 0;
  1277  05D3  1283               	bcf	status, 5	;RP0=0, select bank0
  1278  05D4  1303               	bcf	status, 6	;RP1=0, select bank0
  1279  05D5  01DE               	clrf	(_buttonPressed)	;volatile
  1280                           	line	220
  1281                           ;Main.c: 220: break;
  1282  05D6  2E30               	goto	l10637
  1283                           	line	221
  1284                           ;Main.c: 221: case 2:
  1285                           	
  1286  05D7                     l2198:	
  1287                           	line	222
  1288                           	
  1289  05D7                     l10611:	
  1290                           ;Main.c: 222: Menu(2);
  1291  05D7  3002               	movlw	(02h)
  1292  05D8  120A  158A  26C9   	fcall	_Menu
              120A  118A         
  1293                           	line	224
  1294                           	
  1295  05DD                     l10613:	
  1296                           ;Main.c: 224: buttonPressed = 0;
  1297  05DD  1283               	bcf	status, 5	;RP0=0, select bank0
  1298  05DE  1303               	bcf	status, 6	;RP1=0, select bank0
  1299  05DF  01DE               	clrf	(_buttonPressed)	;volatile
  1300                           	line	226
  1301                           ;Main.c: 226: break;
  1302  05E0  2E30               	goto	l10637
  1303                           	line	227
  1304                           ;Main.c: 227: case 3:
  1305                           	
  1306  05E1                     l2199:	
  1307                           	line	228
  1308                           	
  1309  05E1                     l10615:	
  1310                           ;Main.c: 228: Menu(3);
  1311  05E1  3003               	movlw	(03h)
  1312  05E2  120A  158A  26C9   	fcall	_Menu
              120A  118A         
  1313                           	line	230
  1314                           	
  1315  05E7                     l10617:	
  1316                           ;Main.c: 230: buttonPressed = 0;
  1317  05E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1318  05E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1319  05E9  01DE               	clrf	(_buttonPressed)	;volatile
  1320                           	line	232
  1321                           ;Main.c: 232: break;
  1322  05EA  2E30               	goto	l10637
  1323                           	line	233
  1324                           ;Main.c: 233: case 4:
  1325                           	
  1326  05EB                     l2200:	
  1327                           	line	234
  1328                           	
  1329  05EB                     l10619:	
  1330                           ;Main.c: 234: Menu(4);
  1331  05EB  3004               	movlw	(04h)
  1332  05EC  120A  158A  26C9   	fcall	_Menu
              120A  118A         
  1333                           	line	236
  1334                           	
  1335  05F1                     l10621:	
  1336                           ;Main.c: 236: buttonPressed = 0;
  1337  05F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1338  05F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1339  05F3  01DE               	clrf	(_buttonPressed)	;volatile
  1340                           	line	238
  1341                           ;Main.c: 238: break;
  1342  05F4  2E30               	goto	l10637
  1343                           	line	239
  1344                           ;Main.c: 239: case 5:
  1345                           	
  1346  05F5                     l2201:	
  1347                           	line	240
  1348                           	
  1349  05F5                     l10623:	
  1350                           ;Main.c: 240: choice = Menu(5);
  1351  05F5  3005               	movlw	(05h)
  1352  05F6  120A  158A  26C9   	fcall	_Menu
              120A  118A         
  1353  05FB  1683               	bsf	status, 5	;RP0=1, select bank1
  1354  05FC  1303               	bcf	status, 6	;RP1=0, select bank1
  1355  05FD  00DC               	movwf	(??_main+0)^080h+0
  1356  05FE  085C               	movf	(??_main+0)^080h+0,w
  1357  05FF  00DD               	movwf	(main@choice)^080h
  1358                           	line	242
  1359                           	
  1360  0600                     l10625:	
  1361                           ;Main.c: 242: buttonPressed = 0;
  1362  0600  1283               	bcf	status, 5	;RP0=0, select bank0
  1363  0601  1303               	bcf	status, 6	;RP1=0, select bank0
  1364  0602  01DE               	clrf	(_buttonPressed)	;volatile
  1365                           	line	244
  1366                           ;Main.c: 244: break;
  1367  0603  2E30               	goto	l10637
  1368                           	line	245
  1369                           ;Main.c: 245: default:
  1370                           	
  1371  0604                     l2202:	
  1372                           	line	247
  1373                           ;Main.c: 247: break;
  1374  0604  2E30               	goto	l10637
  1375                           	line	248
  1376                           	
  1377  0605                     l10627:	
  1378                           ;Main.c: 248: }
  1379  0605  2E30               	goto	l10637
  1380                           	line	213
  1381                           	
  1382  0606                     l2195:	
  1383                           	
  1384  0606                     l10629:	
  1385  0606  1283               	bcf	status, 5	;RP0=0, select bank0
  1386  0607  085E               	movf	(_buttonPressed),w	;volatile
  1387                           	; Switch size 1, requested type "space"
  1388                           ; Number of cases is 5, Range of values is 1 to 5
  1389                           ; switch strategies available:
  1390                           ; Name         Instructions Cycles
  1391                           ; simple_byte           16     9 (average)
  1392                           ; direct_byte           26    11 (fixed)
  1393                           ; jumptable            263     9 (fixed)
  1394                           ;	Chosen strategy is simple_byte
  1395                           
  1396                           	opt asmopt_off
  1397  0608  3A01               	xorlw	1^0	; case 1
  1398  0609  1903               	skipnz
  1399  060A  2DCD               	goto	l10607
  1400  060B  3A03               	xorlw	2^1	; case 2
  1401  060C  1903               	skipnz
  1402  060D  2DD7               	goto	l10611
  1403  060E  3A01               	xorlw	3^2	; case 3
  1404  060F  1903               	skipnz
  1405  0610  2DE1               	goto	l10615
  1406  0611  3A07               	xorlw	4^3	; case 4
  1407  0612  1903               	skipnz
  1408  0613  2DEB               	goto	l10619
  1409  0614  3A01               	xorlw	5^4	; case 5
  1410  0615  1903               	skipnz
  1411  0616  2DF5               	goto	l10623
  1412  0617  2E30               	goto	l10637
  1413                           	opt asmopt_on
  1414                           
  1415                           	line	248
  1416                           	
  1417  0618                     l2197:	
  1418                           	line	251
  1419                           ;Main.c: 251: switch (choice)
  1420  0618  2E30               	goto	l10637
  1421                           	line	253
  1422                           ;Main.c: 252: {
  1423                           ;Main.c: 253: case 0:
  1424                           	
  1425  0619                     l2204:	
  1426                           	line	254
  1427                           	
  1428  0619                     l10631:	
  1429                           ;Main.c: 254: calibrateIR();
  1430  0619  120A  158A  2710   	fcall	_calibrateIR
              120A  118A         
  1431                           	line	255
  1432                           ;Main.c: 255: break;
  1433  061E  2E43               	goto	l10639
  1434                           	line	256
  1435                           ;Main.c: 256: case 1:
  1436                           	
  1437  061F                     l2206:	
  1438                           	line	257
  1439                           	
  1440  061F                     l10633:	
  1441                           ;Main.c: 257: rotateOld(100, 1);
  1442  061F  1683               	bsf	status, 5	;RP0=1, select bank1
  1443  0620  1303               	bcf	status, 6	;RP1=0, select bank1
  1444  0621  01D8               	clrf	(?_rotateOld)^080h
  1445  0622  1403               	bsf	status,0
  1446  0623  0DD8               	rlf	(?_rotateOld)^080h,f
  1447  0624  3064               	movlw	(064h)
  1448  0625  120A  118A  21FA   	fcall	_rotateOld
              120A  118A         
  1449                           	line	259
  1450                           ;Main.c: 259: break;
  1451  062A  2E43               	goto	l10639
  1452                           	line	260
  1453                           ;Main.c: 260: case 2:
  1454                           	
  1455  062B                     l2207:	
  1456                           	line	264
  1457                           ;Main.c: 264: break;
  1458  062B  2E43               	goto	l10639
  1459                           	line	265
  1460                           ;Main.c: 265: case 3:
  1461                           	
  1462  062C                     l2208:	
  1463                           	line	268
  1464                           ;Main.c: 268: break;
  1465  062C  2E43               	goto	l10639
  1466                           	line	269
  1467                           ;Main.c: 269: case 4:
  1468                           	
  1469  062D                     l2209:	
  1470                           	line	271
  1471                           ;Main.c: 271: break;
  1472  062D  2E43               	goto	l10639
  1473                           	line	274
  1474                           ;Main.c: 274: default:
  1475                           	
  1476  062E                     l2210:	
  1477                           	line	276
  1478                           ;Main.c: 276: break;
  1479  062E  2E43               	goto	l10639
  1480                           	line	277
  1481                           	
  1482  062F                     l10635:	
  1483                           ;Main.c: 277: }
  1484  062F  2E43               	goto	l10639
  1485                           	line	251
  1486                           	
  1487  0630                     l2203:	
  1488                           	
  1489  0630                     l10637:	
  1490  0630  1683               	bsf	status, 5	;RP0=1, select bank1
  1491  0631  1303               	bcf	status, 6	;RP1=0, select bank1
  1492  0632  085D               	movf	(main@choice)^080h,w
  1493                           	; Switch size 1, requested type "space"
  1494                           ; Number of cases is 5, Range of values is 0 to 4
  1495                           ; switch strategies available:
  1496                           ; Name         Instructions Cycles
  1497                           ; simple_byte           16     9 (average)
  1498                           ; direct_byte           23     8 (fixed)
  1499                           ; jumptable            260     6 (fixed)
  1500                           ; rangetable             9     6 (fixed)
  1501                           ; spacedrange           16     9 (fixed)
  1502                           ; locatedrange           5     3 (fixed)
  1503                           ;	Chosen strategy is simple_byte
  1504                           
  1505                           	opt asmopt_off
  1506  0633  3A00               	xorlw	0^0	; case 0
  1507  0634  1903               	skipnz
  1508  0635  2E19               	goto	l10631
  1509  0636  3A01               	xorlw	1^0	; case 1
  1510  0637  1903               	skipnz
  1511  0638  2E1F               	goto	l10633
  1512  0639  3A03               	xorlw	2^1	; case 2
  1513  063A  1903               	skipnz
  1514  063B  2E43               	goto	l10639
  1515  063C  3A01               	xorlw	3^2	; case 3
  1516  063D  1903               	skipnz
  1517  063E  2E43               	goto	l10639
  1518  063F  3A07               	xorlw	4^3	; case 4
  1519  0640  1903               	skipnz
  1520  0641  2E43               	goto	l10639
  1521  0642  2E43               	goto	l10639
  1522                           	opt asmopt_on
  1523                           
  1524                           	line	277
  1525                           	
  1526  0643                     l2205:	
  1527                           	line	278
  1528                           	
  1529  0643                     l10639:	
  1530                           ;Main.c: 278: choice = 255;
  1531  0643  30FF               	movlw	(0FFh)
  1532  0644  1683               	bsf	status, 5	;RP0=1, select bank1
  1533  0645  1303               	bcf	status, 6	;RP1=0, select bank1
  1534  0646  00DC               	movwf	(??_main+0)^080h+0
  1535  0647  085C               	movf	(??_main+0)^080h+0,w
  1536  0648  00DD               	movwf	(main@choice)^080h
  1537  0649  2DC6               	goto	l10605
  1538                           	line	428
  1539                           	
  1540  064A                     l2211:	
  1541                           	line	209
  1542  064A  2DC6               	goto	l10605
  1543                           	
  1544  064B                     l2212:	
  1545                           	line	429
  1546                           	
  1547  064B                     l2213:	
  1548                           	global	start
  1549  064B  120A  118A  2812   	ljmp	start
  1550                           	opt stack 0
  1551                           GLOBAL	__end_of_main
  1552  064E                     	__end_of_main:
  1553 ;; =============== function _main ends ============
  1554                           
  1555                           	signat	_main,88
  1556                           	global	_init
  1557                           psect	text637,local,class=CODE,delta=2
  1558                           global __ptext637
  1559  0D6C                     __ptext637:
  1560                           
  1561 ;; *************** function _init *****************
  1562 ;; Defined at:
  1563 ;;		line 124 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;		None               void
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0
  1580 ;;      Totals:         0       0       0       0       0
  1581 ;;Total ram usage:        0 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    7
  1584 ;; This function calls:
  1585 ;;		_init_adc
  1586 ;;		_lcd_init
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           psect	text637
  1592                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1593                           	line	124
  1594                           	global	__size_of_init
  1595  0014                     	__size_of_init	equ	__end_of_init-_init
  1596                           	
  1597  0D6C                     _init:	
  1598                           	opt	stack 0
  1599                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1600                           	line	125
  1601                           	
  1602  0D6C                     l10591:	
  1603                           ;Main.c: 125: init_adc();
  1604  0D6C  120A  158A  2558   	fcall	_init_adc
              120A  158A         
  1605                           	line	126
  1606                           ;Main.c: 126: lcd_init();
  1607  0D71  120A  158A  2617   	fcall	_lcd_init
              120A  158A         
  1608                           	line	129
  1609                           	
  1610  0D76                     l10593:	
  1611                           ;Main.c: 129: TRISB = 0b11111100;
  1612  0D76  30FC               	movlw	(0FCh)
  1613  0D77  1683               	bsf	status, 5	;RP0=1, select bank1
  1614  0D78  1303               	bcf	status, 6	;RP1=0, select bank1
  1615  0D79  0086               	movwf	(134)^080h	;volatile
  1616                           	line	130
  1617                           	
  1618  0D7A                     l10595:	
  1619                           ;Main.c: 130: TRISC = 0x00;
  1620  0D7A  0187               	clrf	(135)^080h	;volatile
  1621                           	line	138
  1622                           	
  1623  0D7B                     l10597:	
  1624                           ;Main.c: 138: OPTION_REG = 0b00000100;
  1625  0D7B  3004               	movlw	(04h)
  1626  0D7C  0081               	movwf	(129)^080h	;volatile
  1627                           	line	141
  1628                           	
  1629  0D7D                     l10599:	
  1630                           ;Main.c: 141: TMR0IE = 1;
  1631  0D7D  168B               	bsf	(93/8),(93)&7
  1632                           	line	144
  1633                           	
  1634  0D7E                     l10601:	
  1635                           ;Main.c: 144: (GIE = 1);
  1636  0D7E  178B               	bsf	(95/8),(95)&7
  1637                           	line	145
  1638                           	
  1639  0D7F                     l2177:	
  1640  0D7F  0008               	return
  1641                           	opt stack 0
  1642                           GLOBAL	__end_of_init
  1643  0D80                     	__end_of_init:
  1644 ;; =============== function _init ends ============
  1645                           
  1646                           	signat	_init,88
  1647                           	global	_calibrateIR
  1648                           psect	text638,local,class=CODE,delta=2
  1649                           global __ptext638
  1650  0F10                     __ptext638:
  1651                           
  1652 ;; *************** function _calibrateIR *****************
  1653 ;; Defined at:
  1654 ;;		line 150 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    6
  1675 ;; This function calls:
  1676 ;;		_rotateOld
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           psect	text638
  1682                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1683                           	line	150
  1684                           	global	__size_of_calibrateIR
  1685  004D                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  1686                           	
  1687  0F10                     _calibrateIR:	
  1688                           	opt	stack 1
  1689                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1690                           	line	151
  1691                           	
  1692  0F10                     l10569:	
  1693                           ;Main.c: 151: rotateOld(8, 0);
  1694  0F10  1683               	bsf	status, 5	;RP0=1, select bank1
  1695  0F11  1303               	bcf	status, 6	;RP1=0, select bank1
  1696  0F12  01D8               	clrf	(?_rotateOld)^080h
  1697  0F13  3008               	movlw	(08h)
  1698  0F14  120A  118A  21FA   	fcall	_rotateOld
              120A  158A         
  1699  0F19  2F47               	goto	l10589
  1700                           	line	152
  1701                           ;Main.c: 152: while (1)
  1702                           	
  1703  0F1A                     l2180:	
  1704                           	line	154
  1705                           ;Main.c: 153: {
  1706                           ;Main.c: 154: switch (buttonPressed)
  1707  0F1A  2F47               	goto	l10589
  1708                           	line	156
  1709                           ;Main.c: 155: {
  1710                           ;Main.c: 156: case 1:
  1711                           	
  1712  0F1B                     l2182:	
  1713                           	line	159
  1714                           ;Main.c: 159: buttonPressed = 0;
  1715  0F1B  01DE               	clrf	(_buttonPressed)	;volatile
  1716                           	line	161
  1717                           ;Main.c: 161: break;
  1718  0F1C  2F47               	goto	l10589
  1719                           	line	162
  1720                           ;Main.c: 162: case 2:
  1721                           	
  1722  0F1D                     l2184:	
  1723                           	line	165
  1724                           ;Main.c: 165: buttonPressed = 0;
  1725  0F1D  01DE               	clrf	(_buttonPressed)	;volatile
  1726                           	line	167
  1727                           ;Main.c: 167: break;
  1728  0F1E  2F47               	goto	l10589
  1729                           	line	168
  1730                           ;Main.c: 168: case 3:
  1731                           	
  1732  0F1F                     l2185:	
  1733                           	line	169
  1734                           	
  1735  0F1F                     l10571:	
  1736                           ;Main.c: 169: rotateOld(1, 1);
  1737  0F1F  1683               	bsf	status, 5	;RP0=1, select bank1
  1738  0F20  1303               	bcf	status, 6	;RP1=0, select bank1
  1739  0F21  01D8               	clrf	(?_rotateOld)^080h
  1740  0F22  1403               	bsf	status,0
  1741  0F23  0DD8               	rlf	(?_rotateOld)^080h,f
  1742  0F24  3001               	movlw	(01h)
  1743  0F25  120A  118A  21FA   	fcall	_rotateOld
              120A  158A         
  1744                           	line	171
  1745                           	
  1746  0F2A                     l10573:	
  1747                           ;Main.c: 171: buttonPressed = 0;
  1748  0F2A  1283               	bcf	status, 5	;RP0=0, select bank0
  1749  0F2B  1303               	bcf	status, 6	;RP1=0, select bank0
  1750  0F2C  01DE               	clrf	(_buttonPressed)	;volatile
  1751                           	line	173
  1752                           ;Main.c: 173: break;
  1753  0F2D  2F47               	goto	l10589
  1754                           	line	174
  1755                           ;Main.c: 174: case 4:
  1756                           	
  1757  0F2E                     l2186:	
  1758                           	line	175
  1759                           	
  1760  0F2E                     l10575:	
  1761                           ;Main.c: 175: rotateOld(1, 0);
  1762  0F2E  1683               	bsf	status, 5	;RP0=1, select bank1
  1763  0F2F  1303               	bcf	status, 6	;RP1=0, select bank1
  1764  0F30  01D8               	clrf	(?_rotateOld)^080h
  1765  0F31  3001               	movlw	(01h)
  1766  0F32  120A  118A  21FA   	fcall	_rotateOld
              120A  158A         
  1767                           	line	177
  1768                           	
  1769  0F37                     l10577:	
  1770                           ;Main.c: 177: buttonPressed = 0;
  1771  0F37  1283               	bcf	status, 5	;RP0=0, select bank0
  1772  0F38  1303               	bcf	status, 6	;RP1=0, select bank0
  1773  0F39  01DE               	clrf	(_buttonPressed)	;volatile
  1774                           	line	179
  1775                           ;Main.c: 179: break;
  1776  0F3A  2F47               	goto	l10589
  1777                           	line	180
  1778                           ;Main.c: 180: case 5:
  1779                           	
  1780  0F3B                     l2187:	
  1781                           	line	181
  1782                           	
  1783  0F3B                     l10579:	
  1784                           ;Main.c: 181: totalSteps = 0;
  1785  0F3B  1683               	bsf	status, 5	;RP0=1, select bank1
  1786  0F3C  1303               	bcf	status, 6	;RP1=0, select bank1
  1787  0F3D  01D0               	clrf	(_totalSteps)^080h
  1788  0F3E  01D1               	clrf	(_totalSteps+1)^080h
  1789                           	line	183
  1790                           	
  1791  0F3F                     l10581:	
  1792                           ;Main.c: 183: buttonPressed = 0;
  1793  0F3F  1283               	bcf	status, 5	;RP0=0, select bank0
  1794  0F40  1303               	bcf	status, 6	;RP1=0, select bank0
  1795  0F41  01DE               	clrf	(_buttonPressed)	;volatile
  1796  0F42  2F5C               	goto	l2188
  1797                           	line	184
  1798                           	
  1799  0F43                     l10583:	
  1800                           ;Main.c: 184: return;
  1801  0F43  2F5C               	goto	l2188
  1802                           	line	185
  1803                           	
  1804  0F44                     l10585:	
  1805                           ;Main.c: 185: break;
  1806  0F44  2F47               	goto	l10589
  1807                           	line	186
  1808                           ;Main.c: 186: default:
  1809                           	
  1810  0F45                     l2189:	
  1811                           	line	188
  1812                           ;Main.c: 188: break;
  1813  0F45  2F47               	goto	l10589
  1814                           	line	189
  1815                           	
  1816  0F46                     l10587:	
  1817                           ;Main.c: 189: }
  1818  0F46  2F47               	goto	l10589
  1819                           	line	154
  1820                           	
  1821  0F47                     l2181:	
  1822                           	
  1823  0F47                     l10589:	
  1824  0F47  1283               	bcf	status, 5	;RP0=0, select bank0
  1825  0F48  1303               	bcf	status, 6	;RP1=0, select bank0
  1826  0F49  085E               	movf	(_buttonPressed),w	;volatile
  1827                           	; Switch size 1, requested type "space"
  1828                           ; Number of cases is 5, Range of values is 1 to 5
  1829                           ; switch strategies available:
  1830                           ; Name         Instructions Cycles
  1831                           ; simple_byte           16     9 (average)
  1832                           ; direct_byte           26    11 (fixed)
  1833                           ; jumptable            263     9 (fixed)
  1834                           ;	Chosen strategy is simple_byte
  1835                           
  1836                           	opt asmopt_off
  1837  0F4A  3A01               	xorlw	1^0	; case 1
  1838  0F4B  1903               	skipnz
  1839  0F4C  2F1B               	goto	l2182
  1840  0F4D  3A03               	xorlw	2^1	; case 2
  1841  0F4E  1903               	skipnz
  1842  0F4F  2F1D               	goto	l2184
  1843  0F50  3A01               	xorlw	3^2	; case 3
  1844  0F51  1903               	skipnz
  1845  0F52  2F1F               	goto	l10571
  1846  0F53  3A07               	xorlw	4^3	; case 4
  1847  0F54  1903               	skipnz
  1848  0F55  2F2E               	goto	l10575
  1849  0F56  3A01               	xorlw	5^4	; case 5
  1850  0F57  1903               	skipnz
  1851  0F58  2F3B               	goto	l10579
  1852  0F59  2F47               	goto	l10589
  1853                           	opt asmopt_on
  1854                           
  1855                           	line	189
  1856                           	
  1857  0F5A                     l2183:	
  1858  0F5A  2F47               	goto	l10589
  1859                           	line	190
  1860                           	
  1861  0F5B                     l2190:	
  1862                           	line	152
  1863  0F5B  2F47               	goto	l10589
  1864                           	
  1865  0F5C                     l2191:	
  1866                           	line	191
  1867                           	
  1868  0F5C                     l2188:	
  1869  0F5C  0008               	return
  1870                           	opt stack 0
  1871                           GLOBAL	__end_of_calibrateIR
  1872  0F5D                     	__end_of_calibrateIR:
  1873 ;; =============== function _calibrateIR ends ============
  1874                           
  1875                           	signat	_calibrateIR,88
  1876                           	global	_lcd_init
  1877                           psect	text639,local,class=CODE,delta=2
  1878                           global __ptext639
  1879  0E17                     __ptext639:
  1880                           
  1881 ;; *************** function _lcd_init *****************
  1882 ;; Defined at:
  1883 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;		None               void
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1897 ;;      Params:         0       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0
  1900 ;;      Totals:         0       0       0       0       0
  1901 ;;Total ram usage:        0 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    6
  1904 ;; This function calls:
  1905 ;;		_lcd_write_control
  1906 ;; This function is called by:
  1907 ;;		_init
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           psect	text639
  1911                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  1912                           	line	101
  1913                           	global	__size_of_lcd_init
  1914  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1915                           	
  1916  0E17                     _lcd_init:	
  1917                           	opt	stack 0
  1918                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1919                           	line	105
  1920                           	
  1921  0E17                     l10549:	
  1922                           ;lcd.c: 105: ADCON1 = 0b00000010;
  1923  0E17  3002               	movlw	(02h)
  1924  0E18  1683               	bsf	status, 5	;RP0=1, select bank1
  1925  0E19  1303               	bcf	status, 6	;RP1=0, select bank1
  1926  0E1A  009F               	movwf	(159)^080h	;volatile
  1927                           	line	108
  1928                           	
  1929  0E1B                     l10551:	
  1930                           ;lcd.c: 108: PORTD = 0;
  1931  0E1B  1283               	bcf	status, 5	;RP0=0, select bank0
  1932  0E1C  1303               	bcf	status, 6	;RP1=0, select bank0
  1933  0E1D  0188               	clrf	(8)	;volatile
  1934                           	line	109
  1935                           	
  1936  0E1E                     l10553:	
  1937                           ;lcd.c: 109: PORTE = 0;
  1938  0E1E  0189               	clrf	(9)	;volatile
  1939                           	line	111
  1940                           	
  1941  0E1F                     l10555:	
  1942                           ;lcd.c: 111: TRISD = 0b00000000;
  1943  0E1F  1683               	bsf	status, 5	;RP0=1, select bank1
  1944  0E20  1303               	bcf	status, 6	;RP1=0, select bank1
  1945  0E21  0188               	clrf	(136)^080h	;volatile
  1946                           	line	112
  1947                           	
  1948  0E22                     l10557:	
  1949                           ;lcd.c: 112: TRISE = 0b00000000;
  1950  0E22  0189               	clrf	(137)^080h	;volatile
  1951                           	line	115
  1952                           	
  1953  0E23                     l10559:	
  1954                           ;lcd.c: 115: lcd_write_control(0b00000001);
  1955  0E23  3001               	movlw	(01h)
  1956  0E24  120A  158A  2580   	fcall	_lcd_write_control
              120A  158A         
  1957                           	line	116
  1958                           	
  1959  0E29                     l10561:	
  1960                           ;lcd.c: 116: lcd_write_control(0b00111000);
  1961  0E29  3038               	movlw	(038h)
  1962  0E2A  120A  158A  2580   	fcall	_lcd_write_control
              120A  158A         
  1963                           	line	117
  1964                           	
  1965  0E2F                     l10563:	
  1966                           ;lcd.c: 117: lcd_write_control(0b00001100);
  1967  0E2F  300C               	movlw	(0Ch)
  1968  0E30  120A  158A  2580   	fcall	_lcd_write_control
              120A  158A         
  1969                           	line	118
  1970                           	
  1971  0E35                     l10565:	
  1972                           ;lcd.c: 118: lcd_write_control(0b00000110);
  1973  0E35  3006               	movlw	(06h)
  1974  0E36  120A  158A  2580   	fcall	_lcd_write_control
              120A  158A         
  1975                           	line	119
  1976                           	
  1977  0E3B                     l10567:	
  1978                           ;lcd.c: 119: lcd_write_control(0b00000010);
  1979  0E3B  3002               	movlw	(02h)
  1980  0E3C  120A  158A  2580   	fcall	_lcd_write_control
              120A  158A         
  1981                           	line	121
  1982                           	
  1983  0E41                     l1423:	
  1984  0E41  0008               	return
  1985                           	opt stack 0
  1986                           GLOBAL	__end_of_lcd_init
  1987  0E42                     	__end_of_lcd_init:
  1988 ;; =============== function _lcd_init ends ============
  1989                           
  1990                           	signat	_lcd_init,88
  1991                           	global	_rotateOld
  1992                           psect	text640,local,class=CODE,delta=2
  1993                           global __ptext640
  1994  01FA                     __ptext640:
  1995                           
  1996 ;; *************** function _rotateOld *****************
  1997 ;; Defined at:
  1998 ;;		line 65 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  steps           1    wreg     unsigned char 
  2001 ;;  direction       1    0[BANK1 ] unsigned char 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  steps           1    3[BANK1 ] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;		None               void
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       1       0       0
  2014 ;;      Locals:         0       0       1       0       0
  2015 ;;      Temps:          0       0       2       0       0
  2016 ;;      Totals:         0       0       4       0       0
  2017 ;;Total ram usage:        4 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    5
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_calibrateIR
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           psect	text640
  2028                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  2029                           	line	65
  2030                           	global	__size_of_rotateOld
  2031  012B                     	__size_of_rotateOld	equ	__end_of_rotateOld-_rotateOld
  2032                           	
  2033  01FA                     _rotateOld:	
  2034                           	opt	stack 2
  2035                           ; Regs used in _rotateOld: [wreg-fsr0h+status,2+status,0]
  2036                           ;rotateOld@steps stored from wreg
  2037                           	line	68
  2038  01FA  1683               	bsf	status, 5	;RP0=1, select bank1
  2039  01FB  1303               	bcf	status, 6	;RP1=0, select bank1
  2040  01FC  00DB               	movwf	(rotateOld@steps)^080h
  2041                           	
  2042  01FD                     l10487:	
  2043                           ;steppermotor.c: 68: for(;steps!=0;--steps)
  2044  01FD  08DB               	movf	(rotateOld@steps)^080h,f
  2045  01FE  1D03               	skipz
  2046  01FF  2A01               	goto	u4151
  2047  0200  2A02               	goto	u4150
  2048  0201                     u4151:
  2049  0201  2A04               	goto	l10491
  2050  0202                     u4150:
  2051  0202  2B20               	goto	l10547
  2052                           	
  2053  0203                     l10489:	
  2054  0203  2B20               	goto	l10547
  2055                           	line	69
  2056                           	
  2057  0204                     l3638:	
  2058                           	line	70
  2059                           	
  2060  0204                     l10491:	
  2061                           ;steppermotor.c: 69: {
  2062                           ;steppermotor.c: 70: if (direction == 0)
  2063  0204  08D8               	movf	(rotateOld@direction)^080h,f
  2064  0205  1D03               	skipz
  2065  0206  2A08               	goto	u4161
  2066  0207  2A09               	goto	u4160
  2067  0208                     u4161:
  2068  0208  2A86               	goto	l10517
  2069  0209                     u4160:
  2070  0209  2A69               	goto	l10515
  2071                           	line	72
  2072                           	
  2073  020A                     l10493:	
  2074                           ;steppermotor.c: 71: {
  2075                           ;steppermotor.c: 72: switch(current_step)
  2076  020A  2A69               	goto	l10515
  2077                           	line	74
  2078                           ;steppermotor.c: 73: {
  2079                           ;steppermotor.c: 74: case 0b00111100: PORTC = 0b00101110; current_step = 0b00101110;
  2080                           	
  2081  020B                     l3642:	
  2082                           	
  2083  020B                     l10495:	
  2084  020B  302E               	movlw	(02Eh)
  2085  020C  1283               	bcf	status, 5	;RP0=0, select bank0
  2086  020D  1303               	bcf	status, 6	;RP1=0, select bank0
  2087  020E  0087               	movwf	(7)	;volatile
  2088  020F  302E               	movlw	(02Eh)
  2089  0210  1683               	bsf	status, 5	;RP0=1, select bank1
  2090  0211  1303               	bcf	status, 6	;RP1=0, select bank1
  2091  0212  00D9               	movwf	(??_rotateOld+0)^080h+0
  2092  0213  0859               	movf	(??_rotateOld+0)^080h+0,w
  2093  0214  00D7               	movwf	(_current_step)^080h
  2094                           	line	75
  2095                           ;steppermotor.c: 75: break;
  2096  0215  2B0B               	goto	l10543
  2097                           	line	76
  2098                           ;steppermotor.c: 76: case 0b00101110: PORTC = 0b00101011; current_step = 0b00101011;
  2099                           	
  2100  0216                     l3644:	
  2101                           	
  2102  0216                     l10497:	
  2103  0216  302B               	movlw	(02Bh)
  2104  0217  1283               	bcf	status, 5	;RP0=0, select bank0
  2105  0218  1303               	bcf	status, 6	;RP1=0, select bank0
  2106  0219  0087               	movwf	(7)	;volatile
  2107  021A  302B               	movlw	(02Bh)
  2108  021B  1683               	bsf	status, 5	;RP0=1, select bank1
  2109  021C  1303               	bcf	status, 6	;RP1=0, select bank1
  2110  021D  00D9               	movwf	(??_rotateOld+0)^080h+0
  2111  021E  0859               	movf	(??_rotateOld+0)^080h+0,w
  2112  021F  00D7               	movwf	(_current_step)^080h
  2113                           	line	77
  2114                           ;steppermotor.c: 77: break;
  2115  0220  2B0B               	goto	l10543
  2116                           	line	78
  2117                           ;steppermotor.c: 78: case 0b00101011: PORTC = 0b00100111; current_step = 0b00100111;
  2118                           	
  2119  0221                     l3645:	
  2120                           	
  2121  0221                     l10499:	
  2122  0221  3027               	movlw	(027h)
  2123  0222  1283               	bcf	status, 5	;RP0=0, select bank0
  2124  0223  1303               	bcf	status, 6	;RP1=0, select bank0
  2125  0224  0087               	movwf	(7)	;volatile
  2126  0225  3027               	movlw	(027h)
  2127  0226  1683               	bsf	status, 5	;RP0=1, select bank1
  2128  0227  1303               	bcf	status, 6	;RP1=0, select bank1
  2129  0228  00D9               	movwf	(??_rotateOld+0)^080h+0
  2130  0229  0859               	movf	(??_rotateOld+0)^080h+0,w
  2131  022A  00D7               	movwf	(_current_step)^080h
  2132                           	line	79
  2133                           ;steppermotor.c: 79: break;
  2134  022B  2B0B               	goto	l10543
  2135                           	line	80
  2136                           ;steppermotor.c: 80: case 0b00100111: PORTC = 0b00110101; current_step = 0b00110101;
  2137                           	
  2138  022C                     l3646:	
  2139                           	
  2140  022C                     l10501:	
  2141  022C  3035               	movlw	(035h)
  2142  022D  1283               	bcf	status, 5	;RP0=0, select bank0
  2143  022E  1303               	bcf	status, 6	;RP1=0, select bank0
  2144  022F  0087               	movwf	(7)	;volatile
  2145  0230  3035               	movlw	(035h)
  2146  0231  1683               	bsf	status, 5	;RP0=1, select bank1
  2147  0232  1303               	bcf	status, 6	;RP1=0, select bank1
  2148  0233  00D9               	movwf	(??_rotateOld+0)^080h+0
  2149  0234  0859               	movf	(??_rotateOld+0)^080h+0,w
  2150  0235  00D7               	movwf	(_current_step)^080h
  2151                           	line	81
  2152                           ;steppermotor.c: 81: break;
  2153  0236  2B0B               	goto	l10543
  2154                           	line	82
  2155                           ;steppermotor.c: 82: case 0b00110101: PORTC = 0b00010111; current_step = 0b00010111;
  2156                           	
  2157  0237                     l3647:	
  2158                           	
  2159  0237                     l10503:	
  2160  0237  3017               	movlw	(017h)
  2161  0238  1283               	bcf	status, 5	;RP0=0, select bank0
  2162  0239  1303               	bcf	status, 6	;RP1=0, select bank0
  2163  023A  0087               	movwf	(7)	;volatile
  2164  023B  3017               	movlw	(017h)
  2165  023C  1683               	bsf	status, 5	;RP0=1, select bank1
  2166  023D  1303               	bcf	status, 6	;RP1=0, select bank1
  2167  023E  00D9               	movwf	(??_rotateOld+0)^080h+0
  2168  023F  0859               	movf	(??_rotateOld+0)^080h+0,w
  2169  0240  00D7               	movwf	(_current_step)^080h
  2170                           	line	83
  2171                           ;steppermotor.c: 83: break;
  2172  0241  2B0B               	goto	l10543
  2173                           	line	84
  2174                           ;steppermotor.c: 84: case 0b00010111: PORTC = 0b00011011; current_step = 0b00011011;
  2175                           	
  2176  0242                     l3648:	
  2177                           	
  2178  0242                     l10505:	
  2179  0242  301B               	movlw	(01Bh)
  2180  0243  1283               	bcf	status, 5	;RP0=0, select bank0
  2181  0244  1303               	bcf	status, 6	;RP1=0, select bank0
  2182  0245  0087               	movwf	(7)	;volatile
  2183  0246  301B               	movlw	(01Bh)
  2184  0247  1683               	bsf	status, 5	;RP0=1, select bank1
  2185  0248  1303               	bcf	status, 6	;RP1=0, select bank1
  2186  0249  00D9               	movwf	(??_rotateOld+0)^080h+0
  2187  024A  0859               	movf	(??_rotateOld+0)^080h+0,w
  2188  024B  00D7               	movwf	(_current_step)^080h
  2189                           	line	85
  2190                           ;steppermotor.c: 85: break;
  2191  024C  2B0B               	goto	l10543
  2192                           	line	86
  2193                           ;steppermotor.c: 86: case 0b00011011: PORTC = 0b00011110; current_step = 0b00011110;
  2194                           	
  2195  024D                     l3649:	
  2196                           	
  2197  024D                     l10507:	
  2198  024D  301E               	movlw	(01Eh)
  2199  024E  1283               	bcf	status, 5	;RP0=0, select bank0
  2200  024F  1303               	bcf	status, 6	;RP1=0, select bank0
  2201  0250  0087               	movwf	(7)	;volatile
  2202  0251  301E               	movlw	(01Eh)
  2203  0252  1683               	bsf	status, 5	;RP0=1, select bank1
  2204  0253  1303               	bcf	status, 6	;RP1=0, select bank1
  2205  0254  00D9               	movwf	(??_rotateOld+0)^080h+0
  2206  0255  0859               	movf	(??_rotateOld+0)^080h+0,w
  2207  0256  00D7               	movwf	(_current_step)^080h
  2208                           	line	87
  2209                           ;steppermotor.c: 87: break;
  2210  0257  2B0B               	goto	l10543
  2211                           	line	88
  2212                           ;steppermotor.c: 88: case 0b00011110: PORTC = 0b00111100; current_step = 0b00111100;
  2213                           	
  2214  0258                     l3650:	
  2215                           	
  2216  0258                     l10509:	
  2217  0258  303C               	movlw	(03Ch)
  2218  0259  1283               	bcf	status, 5	;RP0=0, select bank0
  2219  025A  1303               	bcf	status, 6	;RP1=0, select bank0
  2220  025B  0087               	movwf	(7)	;volatile
  2221  025C  303C               	movlw	(03Ch)
  2222  025D  1683               	bsf	status, 5	;RP0=1, select bank1
  2223  025E  1303               	bcf	status, 6	;RP1=0, select bank1
  2224  025F  00D9               	movwf	(??_rotateOld+0)^080h+0
  2225  0260  0859               	movf	(??_rotateOld+0)^080h+0,w
  2226  0261  00D7               	movwf	(_current_step)^080h
  2227                           	line	89
  2228                           ;steppermotor.c: 89: break;
  2229  0262  2B0B               	goto	l10543
  2230                           	line	91
  2231                           ;steppermotor.c: 91: default: PORTC = 0b00111001;
  2232                           	
  2233  0263                     l3651:	
  2234                           	
  2235  0263                     l10511:	
  2236  0263  3039               	movlw	(039h)
  2237  0264  1283               	bcf	status, 5	;RP0=0, select bank0
  2238  0265  1303               	bcf	status, 6	;RP1=0, select bank0
  2239  0266  0087               	movwf	(7)	;volatile
  2240                           	line	92
  2241                           ;steppermotor.c: 92: break;
  2242  0267  2B0B               	goto	l10543
  2243                           	line	93
  2244                           	
  2245  0268                     l10513:	
  2246                           ;steppermotor.c: 93: }
  2247  0268  2B0B               	goto	l10543
  2248                           	line	72
  2249                           	
  2250  0269                     l3641:	
  2251                           	
  2252  0269                     l10515:	
  2253  0269  1683               	bsf	status, 5	;RP0=1, select bank1
  2254  026A  1303               	bcf	status, 6	;RP1=0, select bank1
  2255  026B  0857               	movf	(_current_step)^080h,w
  2256                           	; Switch size 1, requested type "space"
  2257                           ; Number of cases is 8, Range of values is 23 to 60
  2258                           ; switch strategies available:
  2259                           ; Name         Instructions Cycles
  2260                           ; simple_byte           25    13 (average)
  2261                           ; direct_byte          125    11 (fixed)
  2262                           ; jumptable            263     9 (fixed)
  2263                           ;	Chosen strategy is simple_byte
  2264                           
  2265                           	opt asmopt_off
  2266  026C  3A17               	xorlw	23^0	; case 23
  2267  026D  1903               	skipnz
  2268  026E  2A42               	goto	l10505
  2269  026F  3A0C               	xorlw	27^23	; case 27
  2270  0270  1903               	skipnz
  2271  0271  2A4D               	goto	l10507
  2272  0272  3A05               	xorlw	30^27	; case 30
  2273  0273  1903               	skipnz
  2274  0274  2A58               	goto	l10509
  2275  0275  3A39               	xorlw	39^30	; case 39
  2276  0276  1903               	skipnz
  2277  0277  2A2C               	goto	l10501
  2278  0278  3A0C               	xorlw	43^39	; case 43
  2279  0279  1903               	skipnz
  2280  027A  2A21               	goto	l10499
  2281  027B  3A05               	xorlw	46^43	; case 46
  2282  027C  1903               	skipnz
  2283  027D  2A16               	goto	l10497
  2284  027E  3A1B               	xorlw	53^46	; case 53
  2285  027F  1903               	skipnz
  2286  0280  2A37               	goto	l10503
  2287  0281  3A09               	xorlw	60^53	; case 60
  2288  0282  1903               	skipnz
  2289  0283  2A0B               	goto	l10495
  2290  0284  2A63               	goto	l10511
  2291                           	opt asmopt_on
  2292                           
  2293                           	line	93
  2294                           	
  2295  0285                     l3643:	
  2296                           	line	94
  2297                           ;steppermotor.c: 94: }
  2298  0285  2B0B               	goto	l10543
  2299                           	line	95
  2300                           	
  2301  0286                     l3640:	
  2302                           	
  2303  0286                     l10517:	
  2304                           ;steppermotor.c: 95: else if (direction == 1)
  2305  0286  0858               	movf	(rotateOld@direction)^080h,w
  2306  0287  3A01               	xorlw	01h
  2307  0288  1D03               	skipz
  2308  0289  2A8B               	goto	u4171
  2309  028A  2A8C               	goto	u4170
  2310  028B                     u4171:
  2311  028B  2B0B               	goto	l10543
  2312  028C                     u4170:
  2313  028C  2AEC               	goto	l10541
  2314                           	line	97
  2315                           	
  2316  028D                     l10519:	
  2317                           ;steppermotor.c: 96: {
  2318                           ;steppermotor.c: 97: switch(current_step)
  2319  028D  2AEC               	goto	l10541
  2320                           	line	99
  2321                           ;steppermotor.c: 98: {
  2322                           ;steppermotor.c: 99: case 0b00111100: PORTC = 0b00011110; current_step = 0b00011110;
  2323                           	
  2324  028E                     l3655:	
  2325                           	
  2326  028E                     l10521:	
  2327  028E  301E               	movlw	(01Eh)
  2328  028F  1283               	bcf	status, 5	;RP0=0, select bank0
  2329  0290  1303               	bcf	status, 6	;RP1=0, select bank0
  2330  0291  0087               	movwf	(7)	;volatile
  2331  0292  301E               	movlw	(01Eh)
  2332  0293  1683               	bsf	status, 5	;RP0=1, select bank1
  2333  0294  1303               	bcf	status, 6	;RP1=0, select bank1
  2334  0295  00D9               	movwf	(??_rotateOld+0)^080h+0
  2335  0296  0859               	movf	(??_rotateOld+0)^080h+0,w
  2336  0297  00D7               	movwf	(_current_step)^080h
  2337                           	line	100
  2338                           ;steppermotor.c: 100: break;
  2339  0298  2B0B               	goto	l10543
  2340                           	line	101
  2341                           ;steppermotor.c: 101: case 0b00101110: PORTC = 0b00111100; current_step = 0b00111100;
  2342                           	
  2343  0299                     l3657:	
  2344                           	
  2345  0299                     l10523:	
  2346  0299  303C               	movlw	(03Ch)
  2347  029A  1283               	bcf	status, 5	;RP0=0, select bank0
  2348  029B  1303               	bcf	status, 6	;RP1=0, select bank0
  2349  029C  0087               	movwf	(7)	;volatile
  2350  029D  303C               	movlw	(03Ch)
  2351  029E  1683               	bsf	status, 5	;RP0=1, select bank1
  2352  029F  1303               	bcf	status, 6	;RP1=0, select bank1
  2353  02A0  00D9               	movwf	(??_rotateOld+0)^080h+0
  2354  02A1  0859               	movf	(??_rotateOld+0)^080h+0,w
  2355  02A2  00D7               	movwf	(_current_step)^080h
  2356                           	line	102
  2357                           ;steppermotor.c: 102: break;
  2358  02A3  2B0B               	goto	l10543
  2359                           	line	103
  2360                           ;steppermotor.c: 103: case 0b00101011: PORTC = 0b00101110; current_step = 0b00101110;
  2361                           	
  2362  02A4                     l3658:	
  2363                           	
  2364  02A4                     l10525:	
  2365  02A4  302E               	movlw	(02Eh)
  2366  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2367  02A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2368  02A7  0087               	movwf	(7)	;volatile
  2369  02A8  302E               	movlw	(02Eh)
  2370  02A9  1683               	bsf	status, 5	;RP0=1, select bank1
  2371  02AA  1303               	bcf	status, 6	;RP1=0, select bank1
  2372  02AB  00D9               	movwf	(??_rotateOld+0)^080h+0
  2373  02AC  0859               	movf	(??_rotateOld+0)^080h+0,w
  2374  02AD  00D7               	movwf	(_current_step)^080h
  2375                           	line	104
  2376                           ;steppermotor.c: 104: break;
  2377  02AE  2B0B               	goto	l10543
  2378                           	line	105
  2379                           ;steppermotor.c: 105: case 0b00100111: PORTC = 0b00101011; current_step = 0b00101011;
  2380                           	
  2381  02AF                     l3659:	
  2382                           	
  2383  02AF                     l10527:	
  2384  02AF  302B               	movlw	(02Bh)
  2385  02B0  1283               	bcf	status, 5	;RP0=0, select bank0
  2386  02B1  1303               	bcf	status, 6	;RP1=0, select bank0
  2387  02B2  0087               	movwf	(7)	;volatile
  2388  02B3  302B               	movlw	(02Bh)
  2389  02B4  1683               	bsf	status, 5	;RP0=1, select bank1
  2390  02B5  1303               	bcf	status, 6	;RP1=0, select bank1
  2391  02B6  00D9               	movwf	(??_rotateOld+0)^080h+0
  2392  02B7  0859               	movf	(??_rotateOld+0)^080h+0,w
  2393  02B8  00D7               	movwf	(_current_step)^080h
  2394                           	line	106
  2395                           ;steppermotor.c: 106: break;
  2396  02B9  2B0B               	goto	l10543
  2397                           	line	107
  2398                           ;steppermotor.c: 107: case 0b00110101: PORTC = 0b00100111; current_step = 0b00100111;
  2399                           	
  2400  02BA                     l3660:	
  2401                           	
  2402  02BA                     l10529:	
  2403  02BA  3027               	movlw	(027h)
  2404  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2405  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2406  02BD  0087               	movwf	(7)	;volatile
  2407  02BE  3027               	movlw	(027h)
  2408  02BF  1683               	bsf	status, 5	;RP0=1, select bank1
  2409  02C0  1303               	bcf	status, 6	;RP1=0, select bank1
  2410  02C1  00D9               	movwf	(??_rotateOld+0)^080h+0
  2411  02C2  0859               	movf	(??_rotateOld+0)^080h+0,w
  2412  02C3  00D7               	movwf	(_current_step)^080h
  2413                           	line	108
  2414                           ;steppermotor.c: 108: break;
  2415  02C4  2B0B               	goto	l10543
  2416                           	line	109
  2417                           ;steppermotor.c: 109: case 0b00010111: PORTC = 0b00110101; current_step = 0b00110101;
  2418                           	
  2419  02C5                     l3661:	
  2420                           	
  2421  02C5                     l10531:	
  2422  02C5  3035               	movlw	(035h)
  2423  02C6  1283               	bcf	status, 5	;RP0=0, select bank0
  2424  02C7  1303               	bcf	status, 6	;RP1=0, select bank0
  2425  02C8  0087               	movwf	(7)	;volatile
  2426  02C9  3035               	movlw	(035h)
  2427  02CA  1683               	bsf	status, 5	;RP0=1, select bank1
  2428  02CB  1303               	bcf	status, 6	;RP1=0, select bank1
  2429  02CC  00D9               	movwf	(??_rotateOld+0)^080h+0
  2430  02CD  0859               	movf	(??_rotateOld+0)^080h+0,w
  2431  02CE  00D7               	movwf	(_current_step)^080h
  2432                           	line	110
  2433                           ;steppermotor.c: 110: break;
  2434  02CF  2B0B               	goto	l10543
  2435                           	line	111
  2436                           ;steppermotor.c: 111: case 0b00011011: PORTC = 0b00010111; current_step = 0b00010111;
  2437                           	
  2438  02D0                     l3662:	
  2439                           	
  2440  02D0                     l10533:	
  2441  02D0  3017               	movlw	(017h)
  2442  02D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2443  02D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2444  02D3  0087               	movwf	(7)	;volatile
  2445  02D4  3017               	movlw	(017h)
  2446  02D5  1683               	bsf	status, 5	;RP0=1, select bank1
  2447  02D6  1303               	bcf	status, 6	;RP1=0, select bank1
  2448  02D7  00D9               	movwf	(??_rotateOld+0)^080h+0
  2449  02D8  0859               	movf	(??_rotateOld+0)^080h+0,w
  2450  02D9  00D7               	movwf	(_current_step)^080h
  2451                           	line	112
  2452                           ;steppermotor.c: 112: break;
  2453  02DA  2B0B               	goto	l10543
  2454                           	line	113
  2455                           ;steppermotor.c: 113: case 0b00011110: PORTC = 0b00011011; current_step = 0b00011011;
  2456                           	
  2457  02DB                     l3663:	
  2458                           	
  2459  02DB                     l10535:	
  2460  02DB  301B               	movlw	(01Bh)
  2461  02DC  1283               	bcf	status, 5	;RP0=0, select bank0
  2462  02DD  1303               	bcf	status, 6	;RP1=0, select bank0
  2463  02DE  0087               	movwf	(7)	;volatile
  2464  02DF  301B               	movlw	(01Bh)
  2465  02E0  1683               	bsf	status, 5	;RP0=1, select bank1
  2466  02E1  1303               	bcf	status, 6	;RP1=0, select bank1
  2467  02E2  00D9               	movwf	(??_rotateOld+0)^080h+0
  2468  02E3  0859               	movf	(??_rotateOld+0)^080h+0,w
  2469  02E4  00D7               	movwf	(_current_step)^080h
  2470                           	line	114
  2471                           ;steppermotor.c: 114: break;
  2472  02E5  2B0B               	goto	l10543
  2473                           	line	116
  2474                           ;steppermotor.c: 116: default: PORTC = 0b00111001;
  2475                           	
  2476  02E6                     l3664:	
  2477                           	
  2478  02E6                     l10537:	
  2479  02E6  3039               	movlw	(039h)
  2480  02E7  1283               	bcf	status, 5	;RP0=0, select bank0
  2481  02E8  1303               	bcf	status, 6	;RP1=0, select bank0
  2482  02E9  0087               	movwf	(7)	;volatile
  2483                           	line	117
  2484                           ;steppermotor.c: 117: break;
  2485  02EA  2B0B               	goto	l10543
  2486                           	line	118
  2487                           	
  2488  02EB                     l10539:	
  2489                           ;steppermotor.c: 118: }
  2490  02EB  2B0B               	goto	l10543
  2491                           	line	97
  2492                           	
  2493  02EC                     l3654:	
  2494                           	
  2495  02EC                     l10541:	
  2496  02EC  1683               	bsf	status, 5	;RP0=1, select bank1
  2497  02ED  1303               	bcf	status, 6	;RP1=0, select bank1
  2498  02EE  0857               	movf	(_current_step)^080h,w
  2499                           	; Switch size 1, requested type "space"
  2500                           ; Number of cases is 8, Range of values is 23 to 60
  2501                           ; switch strategies available:
  2502                           ; Name         Instructions Cycles
  2503                           ; simple_byte           25    13 (average)
  2504                           ; direct_byte          125    11 (fixed)
  2505                           ; jumptable            263     9 (fixed)
  2506                           ;	Chosen strategy is simple_byte
  2507                           
  2508                           	opt asmopt_off
  2509  02EF  3A17               	xorlw	23^0	; case 23
  2510  02F0  1903               	skipnz
  2511  02F1  2AC5               	goto	l10531
  2512  02F2  3A0C               	xorlw	27^23	; case 27
  2513  02F3  1903               	skipnz
  2514  02F4  2AD0               	goto	l10533
  2515  02F5  3A05               	xorlw	30^27	; case 30
  2516  02F6  1903               	skipnz
  2517  02F7  2ADB               	goto	l10535
  2518  02F8  3A39               	xorlw	39^30	; case 39
  2519  02F9  1903               	skipnz
  2520  02FA  2AAF               	goto	l10527
  2521  02FB  3A0C               	xorlw	43^39	; case 43
  2522  02FC  1903               	skipnz
  2523  02FD  2AA4               	goto	l10525
  2524  02FE  3A05               	xorlw	46^43	; case 46
  2525  02FF  1903               	skipnz
  2526  0300  2A99               	goto	l10523
  2527  0301  3A1B               	xorlw	53^46	; case 53
  2528  0302  1903               	skipnz
  2529  0303  2ABA               	goto	l10529
  2530  0304  3A09               	xorlw	60^53	; case 60
  2531  0305  1903               	skipnz
  2532  0306  2A8E               	goto	l10521
  2533  0307  2AE6               	goto	l10537
  2534                           	opt asmopt_on
  2535                           
  2536                           	line	118
  2537                           	
  2538  0308                     l3656:	
  2539                           	line	119
  2540                           ;steppermotor.c: 119: }
  2541  0308  2B0B               	goto	l10543
  2542                           	line	120
  2543                           	
  2544  0309                     l3653:	
  2545  0309  2B0B               	goto	l10543
  2546                           	line	123
  2547                           ;steppermotor.c: 120: else
  2548                           ;steppermotor.c: 121: {
  2549                           	
  2550  030A                     l3665:	
  2551  030A  2B0B               	goto	l10543
  2552                           	
  2553  030B                     l3652:	
  2554                           	line	125
  2555                           	
  2556  030B                     l10543:	
  2557                           ;steppermotor.c: 123: }
  2558                           ;steppermotor.c: 125: _delay((unsigned long)((15)*(20000000/4000.0)));
  2559                           	opt asmopt_off
  2560  030B  3062               movlw	98
  2561  030C  1683               	bsf	status, 5	;RP0=1, select bank1
  2562  030D  1303               	bcf	status, 6	;RP1=0, select bank1
  2563  030E  00DA               movwf	((??_rotateOld+0)^080h+0+1),f
  2564  030F  3065               	movlw	101
  2565  0310  00D9               movwf	((??_rotateOld+0)^080h+0),f
  2566  0311                     u4197:
  2567  0311  0BD9               	decfsz	((??_rotateOld+0)^080h+0),f
  2568  0312  2B11               	goto	u4197
  2569  0313  0BDA               	decfsz	((??_rotateOld+0)^080h+0+1),f
  2570  0314  2B11               	goto	u4197
  2571  0315  2B16               	nop2
  2572                           opt asmopt_on
  2573                           
  2574                           	line	68
  2575                           	
  2576  0316                     l10545:	
  2577  0316  3001               	movlw	low(01h)
  2578  0317  1683               	bsf	status, 5	;RP0=1, select bank1
  2579  0318  1303               	bcf	status, 6	;RP1=0, select bank1
  2580  0319  02DB               	subwf	(rotateOld@steps)^080h,f
  2581  031A  08DB               	movf	(rotateOld@steps)^080h,f
  2582  031B  1D03               	skipz
  2583  031C  2B1E               	goto	u4181
  2584  031D  2B1F               	goto	u4180
  2585  031E                     u4181:
  2586  031E  2A04               	goto	l10491
  2587  031F                     u4180:
  2588  031F  2B20               	goto	l10547
  2589                           	
  2590  0320                     l3639:	
  2591                           	line	128
  2592                           	
  2593  0320                     l10547:	
  2594                           ;steppermotor.c: 126: }
  2595                           ;steppermotor.c: 128: PORTC = 0b00111001;
  2596  0320  3039               	movlw	(039h)
  2597  0321  1283               	bcf	status, 5	;RP0=0, select bank0
  2598  0322  1303               	bcf	status, 6	;RP1=0, select bank0
  2599  0323  0087               	movwf	(7)	;volatile
  2600                           	line	129
  2601                           	
  2602  0324                     l3666:	
  2603  0324  0008               	return
  2604                           	opt stack 0
  2605                           GLOBAL	__end_of_rotateOld
  2606  0325                     	__end_of_rotateOld:
  2607 ;; =============== function _rotateOld ends ============
  2608                           
  2609                           	signat	_rotateOld,8312
  2610                           	global	_lcd_write_control
  2611                           psect	text641,local,class=CODE,delta=2
  2612                           global __ptext641
  2613  0D80                     __ptext641:
  2614                           
  2615 ;; *************** function _lcd_write_control *****************
  2616 ;; Defined at:
  2617 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  databyte        1    wreg     unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  databyte        1    2[BANK1 ] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;		None               void
  2624 ;; Registers used:
  2625 ;;		wreg
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2631 ;;      Params:         0       0       0       0       0
  2632 ;;      Locals:         0       0       1       0       0
  2633 ;;      Temps:          0       0       2       0       0
  2634 ;;      Totals:         0       0       3       0       0
  2635 ;;Total ram usage:        3 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    5
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_lcd_init
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           psect	text641
  2645                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  2646                           	line	18
  2647                           	global	__size_of_lcd_write_control
  2648  001C                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  2649                           	
  2650  0D80                     _lcd_write_control:	
  2651                           	opt	stack 0
  2652                           ; Regs used in _lcd_write_control: [wreg]
  2653                           ;lcd_write_control@databyte stored from wreg
  2654  0D80  1683               	bsf	status, 5	;RP0=1, select bank1
  2655  0D81  1303               	bcf	status, 6	;RP1=0, select bank1
  2656  0D82  00DA               	movwf	(lcd_write_control@databyte)^080h
  2657                           	line	19
  2658                           	
  2659  0D83                     l10479:	
  2660                           ;lcd.c: 19: RE2 = 0;
  2661  0D83  1283               	bcf	status, 5	;RP0=0, select bank0
  2662  0D84  1303               	bcf	status, 6	;RP1=0, select bank0
  2663  0D85  1109               	bcf	(74/8),(74)&7
  2664                           	line	20
  2665                           ;lcd.c: 20: RE1 = 0;
  2666  0D86  1089               	bcf	(73/8),(73)&7
  2667                           	line	21
  2668                           ;lcd.c: 21: RE0 = 0;
  2669  0D87  1009               	bcf	(72/8),(72)&7
  2670                           	line	22
  2671                           	
  2672  0D88                     l10481:	
  2673                           ;lcd.c: 22: PORTD = databyte;
  2674  0D88  1683               	bsf	status, 5	;RP0=1, select bank1
  2675  0D89  1303               	bcf	status, 6	;RP1=0, select bank1
  2676  0D8A  085A               	movf	(lcd_write_control@databyte)^080h,w
  2677  0D8B  1283               	bcf	status, 5	;RP0=0, select bank0
  2678  0D8C  1303               	bcf	status, 6	;RP1=0, select bank0
  2679  0D8D  0088               	movwf	(8)	;volatile
  2680                           	line	23
  2681                           	
  2682  0D8E                     l10483:	
  2683                           ;lcd.c: 23: RE2 = 1;
  2684  0D8E  1509               	bsf	(74/8),(74)&7
  2685                           	line	24
  2686                           	
  2687  0D8F                     l10485:	
  2688                           ;lcd.c: 24: RE2 = 0;
  2689  0D8F  1109               	bcf	(74/8),(74)&7
  2690                           	line	25
  2691                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  2692                           	opt asmopt_off
  2693  0D90  300D               movlw	13
  2694  0D91  1683               	bsf	status, 5	;RP0=1, select bank1
  2695  0D92  1303               	bcf	status, 6	;RP1=0, select bank1
  2696  0D93  00D9               movwf	((??_lcd_write_control+0)^080h+0+1),f
  2697  0D94  30FB               	movlw	251
  2698  0D95  00D8               movwf	((??_lcd_write_control+0)^080h+0),f
  2699  0D96                     u4207:
  2700  0D96  0BD8               	decfsz	((??_lcd_write_control+0)^080h+0),f
  2701  0D97  2D96               	goto	u4207
  2702  0D98  0BD9               	decfsz	((??_lcd_write_control+0)^080h+0+1),f
  2703  0D99  2D96               	goto	u4207
  2704  0D9A  2D9B               	nop2
  2705                           opt asmopt_on
  2706                           
  2707                           	line	26
  2708                           	
  2709  0D9B                     l1393:	
  2710  0D9B  0008               	return
  2711                           	opt stack 0
  2712                           GLOBAL	__end_of_lcd_write_control
  2713  0D9C                     	__end_of_lcd_write_control:
  2714 ;; =============== function _lcd_write_control ends ============
  2715                           
  2716                           	signat	_lcd_write_control,4216
  2717                           	global	_init_adc
  2718                           psect	text642,local,class=CODE,delta=2
  2719                           global __ptext642
  2720  0D58                     __ptext642:
  2721                           
  2722 ;; *************** function _init_adc *****************
  2723 ;; Defined at:
  2724 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;		None               void
  2731 ;; Registers used:
  2732 ;;		wreg, status,2
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0
  2740 ;;      Temps:          0       0       1       0       0
  2741 ;;      Totals:         0       0       1       0       0
  2742 ;;Total ram usage:        1 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    5
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_init
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           psect	text642
  2752                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  2753                           	line	46
  2754                           	global	__size_of_init_adc
  2755  0014                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  2756                           	
  2757  0D58                     _init_adc:	
  2758                           	opt	stack 1
  2759                           ; Regs used in _init_adc: [wreg+status,2]
  2760                           	line	48
  2761                           	
  2762  0D58                     l10469:	
  2763                           ;adc.c: 48: PORTA = 0;
  2764  0D58  1283               	bcf	status, 5	;RP0=0, select bank0
  2765  0D59  1303               	bcf	status, 6	;RP1=0, select bank0
  2766  0D5A  0185               	clrf	(5)	;volatile
  2767                           	line	49
  2768                           	
  2769  0D5B                     l10471:	
  2770                           ;adc.c: 49: TRISA = 0b00111111;
  2771  0D5B  303F               	movlw	(03Fh)
  2772  0D5C  1683               	bsf	status, 5	;RP0=1, select bank1
  2773  0D5D  1303               	bcf	status, 6	;RP1=0, select bank1
  2774  0D5E  0085               	movwf	(133)^080h	;volatile
  2775                           	line	52
  2776                           	
  2777  0D5F                     l10473:	
  2778                           ;adc.c: 52: ADCON0 = 0b10100001;
  2779  0D5F  30A1               	movlw	(0A1h)
  2780  0D60  1283               	bcf	status, 5	;RP0=0, select bank0
  2781  0D61  1303               	bcf	status, 6	;RP1=0, select bank0
  2782  0D62  009F               	movwf	(31)	;volatile
  2783                           	line	53
  2784                           	
  2785  0D63                     l10475:	
  2786                           ;adc.c: 53: ADCON1 = 0b0000010;
  2787  0D63  3002               	movlw	(02h)
  2788  0D64  1683               	bsf	status, 5	;RP0=1, select bank1
  2789  0D65  1303               	bcf	status, 6	;RP1=0, select bank1
  2790  0D66  009F               	movwf	(159)^080h	;volatile
  2791                           	line	55
  2792                           	
  2793  0D67                     l10477:	
  2794                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  2795                           	opt asmopt_off
  2796  0D67  3053               movlw	83
  2797  0D68  00D8               movwf	(??_init_adc+0)^080h+0,f
  2798  0D69                     u4217:
  2799  0D69  0BD8               decfsz	(??_init_adc+0)^080h+0,f
  2800  0D6A  2D69               	goto	u4217
  2801                           opt asmopt_on
  2802                           
  2803                           	line	57
  2804                           	
  2805  0D6B                     l700:	
  2806  0D6B  0008               	return
  2807                           	opt stack 0
  2808                           GLOBAL	__end_of_init_adc
  2809  0D6C                     	__end_of_init_adc:
  2810 ;; =============== function _init_adc ends ============
  2811                           
  2812                           	signat	_init_adc,88
  2813                           	global	_Menu
  2814                           psect	text643,local,class=CODE,delta=2
  2815                           global __ptext643
  2816  0EC9                     __ptext643:
  2817                           
  2818 ;; *************** function _Menu *****************
  2819 ;; Defined at:
  2820 ;;		line 183 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  input           1    wreg     unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  input           1    0[BANK1 ] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      unsigned char 
  2827 ;; Registers used:
  2828 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       0       0       0       0
  2835 ;;      Locals:         0       0       1       0       0
  2836 ;;      Temps:          0       0       0       0       0
  2837 ;;      Totals:         0       0       1       0       0
  2838 ;;Total ram usage:        1 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    5
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_main
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           psect	text643
  2848                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  2849                           	line	183
  2850                           	global	__size_of_Menu
  2851  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  2852                           	
  2853  0EC9                     _Menu:	
  2854                           	opt	stack 2
  2855                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  2856                           ;Menu@input stored from wreg
  2857  0EC9  1683               	bsf	status, 5	;RP0=1, select bank1
  2858  0ECA  1303               	bcf	status, 6	;RP1=0, select bank1
  2859  0ECB  00D8               	movwf	(Menu@input)^080h
  2860                           	line	184
  2861                           	
  2862  0ECC                     l10059:	
  2863                           ;HMI.c: 184: switch (input)
  2864  0ECC  2EFA               	goto	l10079
  2865                           	line	186
  2866                           ;HMI.c: 185: {
  2867                           ;HMI.c: 186: case 1:
  2868                           	
  2869  0ECD                     l5166:	
  2870                           	line	188
  2871                           ;HMI.c: 188: break;
  2872  0ECD  2F0D               	goto	l10081
  2873                           	line	189
  2874                           ;HMI.c: 189: case 2:
  2875                           	
  2876  0ECE                     l5168:	
  2877                           	line	191
  2878                           ;HMI.c: 191: break;
  2879  0ECE  2F0D               	goto	l10081
  2880                           	line	192
  2881                           ;HMI.c: 192: case 3:
  2882                           	
  2883  0ECF                     l5169:	
  2884                           	line	193
  2885                           	
  2886  0ECF                     l10061:	
  2887                           ;HMI.c: 193: pos--;
  2888  0ECF  30FF               	movlw	low(-1)
  2889  0ED0  1283               	bcf	status, 5	;RP0=0, select bank0
  2890  0ED1  1303               	bcf	status, 6	;RP1=0, select bank0
  2891  0ED2  07D7               	addwf	(_pos),f
  2892  0ED3  1803               	skipnc
  2893  0ED4  0AD8               	incf	(_pos+1),f
  2894  0ED5  30FF               	movlw	high(-1)
  2895  0ED6  07D8               	addwf	(_pos+1),f
  2896                           	line	194
  2897                           	
  2898  0ED7                     l10063:	
  2899                           ;HMI.c: 194: if (pos < 0)
  2900  0ED7  1FD8               	btfss	(_pos+1),7
  2901  0ED8  2EDA               	goto	u3411
  2902  0ED9  2EDB               	goto	u3410
  2903  0EDA                     u3411:
  2904  0EDA  2F0D               	goto	l10081
  2905  0EDB                     u3410:
  2906                           	line	195
  2907                           	
  2908  0EDB                     l10065:	
  2909                           ;HMI.c: 195: pos = 5 - 1;
  2910  0EDB  3004               	movlw	low(04h)
  2911  0EDC  00D7               	movwf	(_pos)
  2912  0EDD  3000               	movlw	high(04h)
  2913  0EDE  00D8               	movwf	((_pos))+1
  2914  0EDF  2F0D               	goto	l10081
  2915                           	
  2916  0EE0                     l5170:	
  2917                           	line	197
  2918                           ;HMI.c: 197: break;
  2919  0EE0  2F0D               	goto	l10081
  2920                           	line	198
  2921                           ;HMI.c: 198: case 4:
  2922                           	
  2923  0EE1                     l5171:	
  2924                           	line	199
  2925                           	
  2926  0EE1                     l10067:	
  2927                           ;HMI.c: 199: pos++;
  2928  0EE1  3001               	movlw	low(01h)
  2929  0EE2  1283               	bcf	status, 5	;RP0=0, select bank0
  2930  0EE3  07D7               	addwf	(_pos),f
  2931  0EE4  1803               	skipnc
  2932  0EE5  0AD8               	incf	(_pos+1),f
  2933  0EE6  3000               	movlw	high(01h)
  2934  0EE7  07D8               	addwf	(_pos+1),f
  2935                           	line	200
  2936                           ;HMI.c: 200: if (pos == 5)
  2937  0EE8  3005               	movlw	05h
  2938  0EE9  0657               	xorwf	(_pos),w
  2939  0EEA  0458               	iorwf	(_pos+1),w
  2940  0EEB  1D03               	skipz
  2941  0EEC  2EEE               	goto	u3421
  2942  0EED  2EEF               	goto	u3420
  2943  0EEE                     u3421:
  2944  0EEE  2F0D               	goto	l10081
  2945  0EEF                     u3420:
  2946                           	line	201
  2947                           	
  2948  0EEF                     l10069:	
  2949                           ;HMI.c: 201: pos = 0;
  2950  0EEF  01D7               	clrf	(_pos)
  2951  0EF0  01D8               	clrf	(_pos+1)
  2952  0EF1  2F0D               	goto	l10081
  2953                           	
  2954  0EF2                     l5172:	
  2955                           	line	203
  2956                           ;HMI.c: 203: break;
  2957  0EF2  2F0D               	goto	l10081
  2958                           	line	204
  2959                           ;HMI.c: 204: case 5:
  2960                           	
  2961  0EF3                     l5173:	
  2962                           	line	205
  2963                           	
  2964  0EF3                     l10071:	
  2965                           ;HMI.c: 205: return pos;
  2966  0EF3  1283               	bcf	status, 5	;RP0=0, select bank0
  2967  0EF4  0857               	movf	(_pos),w
  2968  0EF5  2F0F               	goto	l5174
  2969                           	
  2970  0EF6                     l10073:	
  2971  0EF6  2F0F               	goto	l5174
  2972                           	line	206
  2973                           	
  2974  0EF7                     l10075:	
  2975                           ;HMI.c: 206: break;
  2976  0EF7  2F0D               	goto	l10081
  2977                           	line	208
  2978                           ;HMI.c: 208: default:
  2979                           	
  2980  0EF8                     l5175:	
  2981                           	line	210
  2982                           ;HMI.c: 210: break;
  2983  0EF8  2F0D               	goto	l10081
  2984                           	line	211
  2985                           	
  2986  0EF9                     l10077:	
  2987                           ;HMI.c: 211: }
  2988  0EF9  2F0D               	goto	l10081
  2989                           	line	184
  2990                           	
  2991  0EFA                     l5165:	
  2992                           	
  2993  0EFA                     l10079:	
  2994  0EFA  1683               	bsf	status, 5	;RP0=1, select bank1
  2995  0EFB  1303               	bcf	status, 6	;RP1=0, select bank1
  2996  0EFC  0858               	movf	(Menu@input)^080h,w
  2997                           	; Switch size 1, requested type "space"
  2998                           ; Number of cases is 5, Range of values is 1 to 5
  2999                           ; switch strategies available:
  3000                           ; Name         Instructions Cycles
  3001                           ; simple_byte           16     9 (average)
  3002                           ; direct_byte           26    11 (fixed)
  3003                           ; jumptable            263     9 (fixed)
  3004                           ;	Chosen strategy is simple_byte
  3005                           
  3006                           	opt asmopt_off
  3007  0EFD  3A01               	xorlw	1^0	; case 1
  3008  0EFE  1903               	skipnz
  3009  0EFF  2F0D               	goto	l10081
  3010  0F00  3A03               	xorlw	2^1	; case 2
  3011  0F01  1903               	skipnz
  3012  0F02  2F0D               	goto	l10081
  3013  0F03  3A01               	xorlw	3^2	; case 3
  3014  0F04  1903               	skipnz
  3015  0F05  2ECF               	goto	l10061
  3016  0F06  3A07               	xorlw	4^3	; case 4
  3017  0F07  1903               	skipnz
  3018  0F08  2EE1               	goto	l10067
  3019  0F09  3A01               	xorlw	5^4	; case 5
  3020  0F0A  1903               	skipnz
  3021  0F0B  2EF3               	goto	l10071
  3022  0F0C  2F0D               	goto	l10081
  3023                           	opt asmopt_on
  3024                           
  3025                           	line	211
  3026                           	
  3027  0F0D                     l5167:	
  3028                           	line	212
  3029                           	
  3030  0F0D                     l10081:	
  3031                           ;HMI.c: 212: return 255;
  3032  0F0D  30FF               	movlw	(0FFh)
  3033  0F0E  2F0F               	goto	l5174
  3034                           	
  3035  0F0F                     l10083:	
  3036                           	line	213
  3037                           	
  3038  0F0F                     l5174:	
  3039  0F0F  0008               	return
  3040                           	opt stack 0
  3041                           GLOBAL	__end_of_Menu
  3042  0F10                     	__end_of_Menu:
  3043 ;; =============== function _Menu ends ============
  3044                           
  3045                           	signat	_Menu,4217
  3046                           	global	_isr1
  3047                           psect	text644,local,class=CODE,delta=2
  3048                           global __ptext644
  3049  0425                     __ptext644:
  3050                           
  3051 ;; *************** function _isr1 *****************
  3052 ;; Defined at:
  3053 ;;		line 84 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;		None               void
  3060 ;; Registers used:
  3061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3067 ;;      Params:         0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0
  3069 ;;      Temps:          0       5       0       0       0
  3070 ;;      Totals:         0       5       0       0       0
  3071 ;;Total ram usage:        5 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    4
  3074 ;; This function calls:
  3075 ;;		___lwmod
  3076 ;;		_readAvgDistance
  3077 ;;		_UpdateDisplay
  3078 ;;		_ReadButtons
  3079 ;; This function is called by:
  3080 ;;		Interrupt level 1
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           psect	text644
  3084                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3085                           	line	84
  3086                           	global	__size_of_isr1
  3087  00E2                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  3088                           	
  3089  0425                     _isr1:	
  3090                           	opt	stack 0
  3091                           ; Regs used in _isr1: [allreg]
  3092                           psect	intentry,class=CODE,delta=2
  3093                           global __pintentry
  3094  0004                     __pintentry:
  3095                           global interrupt_function
  3096  0004                     interrupt_function:
  3097                           	global saved_w
  3098  007E                     	saved_w	set	btemp+0
  3099  0004  00FE               	movwf	saved_w
  3100  0005  0E03               	swapf	status,w
  3101  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  3102  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  3103  0008  00CD               	movwf	(??_isr1+1)
  3104  0009  0804               	movf	fsr0,w
  3105  000A  00CE               	movwf	(??_isr1+2)
  3106  000B  080A               	movf	pclath,w
  3107  000C  00CF               	movwf	(??_isr1+3)
  3108  000D  087F               	movf	btemp+1,w
  3109  000E  00D0               	movwf	(??_isr1+4)
  3110  000F  120A  118A  2C25   	ljmp	_isr1
  3111                           psect	text644
  3112                           	line	86
  3113                           	
  3114  0425                     i1l9925:	
  3115                           ;Main.c: 86: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp!
                                 =rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr 
                                 &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
  3116  0425  1E8C               	btfss	(101/8),(101)&7
  3117  0426  2C28               	goto	u321_21
  3118  0427  2C29               	goto	u321_20
  3119  0428                     u321_21:
  3120  0428  2C43               	goto	i1l9935
  3121  0429                     u321_20:
  3122                           	
  3123  0429                     i1l9927:	
  3124  0429  081A               	movf	(26),w	;volatile
  3125  042A  00CC               	movwf	(??_isr1+0)+0
  3126  042B  0863               	movf	(_rxiptr),w
  3127  042C  3EB0               	addlw	_rxfifo&0ffh
  3128  042D  0084               	movwf	fsr0
  3129  042E  084C               	movf	(??_isr1+0)+0,w
  3130  042F  1383               	bcf	status, 7	;select IRP bank1
  3131  0430  0080               	movwf	indf
  3132                           	
  3133  0431                     i1l9929:	
  3134  0431  0863               	movf	(_rxiptr),w	;volatile
  3135  0432  3E01               	addlw	01h
  3136  0433  390F               	andlw	0Fh
  3137  0434  00CC               	movwf	(??_isr1+0)+0
  3138  0435  084C               	movf	(??_isr1+0)+0,w
  3139  0436  00E5               	movwf	(_ser_tmp)
  3140                           	
  3141  0437                     i1l9931:	
  3142  0437  0865               	movf	(_ser_tmp),w
  3143  0438  0664               	xorwf	(_rxoptr),w	;volatile
  3144  0439  1903               	skipnz
  3145  043A  2C3C               	goto	u322_21
  3146  043B  2C3D               	goto	u322_20
  3147  043C                     u322_21:
  3148  043C  2C43               	goto	i1l9935
  3149  043D                     u322_20:
  3150                           	
  3151  043D                     i1l9933:	
  3152  043D  0865               	movf	(_ser_tmp),w
  3153  043E  00CC               	movwf	(??_isr1+0)+0
  3154  043F  084C               	movf	(??_isr1+0)+0,w
  3155  0440  00E3               	movwf	(_rxiptr)	;volatile
  3156  0441  2C43               	goto	i1l9935
  3157                           	
  3158  0442                     i1l2165:	
  3159  0442  2C43               	goto	i1l9935
  3160                           	
  3161  0443                     i1l2164:	
  3162                           	
  3163  0443                     i1l9935:	
  3164  0443  1E0C               	btfss	(100/8),(100)&7
  3165  0444  2C46               	goto	u323_21
  3166  0445  2C47               	goto	u323_20
  3167  0446                     u323_21:
  3168  0446  2C67               	goto	i1l2166
  3169  0447                     u323_20:
  3170                           	
  3171  0447                     i1l9937:	
  3172  0447  1683               	bsf	status, 5	;RP0=1, select bank1
  3173  0448  1303               	bcf	status, 6	;RP1=0, select bank1
  3174  0449  1E0C               	btfss	(1124/8)^080h,(1124)&7
  3175  044A  2C4C               	goto	u324_21
  3176  044B  2C4D               	goto	u324_20
  3177  044C                     u324_21:
  3178  044C  2C67               	goto	i1l2166
  3179  044D                     u324_20:
  3180                           	
  3181  044D                     i1l9939:	
  3182  044D  1283               	bcf	status, 5	;RP0=0, select bank0
  3183  044E  1303               	bcf	status, 6	;RP1=0, select bank0
  3184  044F  0867               	movf	(_txoptr),w
  3185  0450  3EC0               	addlw	_txfifo&0ffh
  3186  0451  0084               	movwf	fsr0
  3187  0452  1383               	bcf	status, 7	;select IRP bank1
  3188  0453  0800               	movf	indf,w
  3189  0454  0099               	movwf	(25)	;volatile
  3190                           	
  3191  0455                     i1l9941:	
  3192  0455  3001               	movlw	(01h)
  3193  0456  00CC               	movwf	(??_isr1+0)+0
  3194  0457  084C               	movf	(??_isr1+0)+0,w
  3195  0458  07E7               	addwf	(_txoptr),f	;volatile
  3196                           	
  3197  0459                     i1l9943:	
  3198  0459  300F               	movlw	(0Fh)
  3199  045A  00CC               	movwf	(??_isr1+0)+0
  3200  045B  084C               	movf	(??_isr1+0)+0,w
  3201  045C  05E7               	andwf	(_txoptr),f	;volatile
  3202                           	
  3203  045D                     i1l9945:	
  3204  045D  0867               	movf	(_txoptr),w	;volatile
  3205  045E  0666               	xorwf	(_txiptr),w	;volatile
  3206  045F  1D03               	skipz
  3207  0460  2C62               	goto	u325_21
  3208  0461  2C63               	goto	u325_20
  3209  0462                     u325_21:
  3210  0462  2C67               	goto	i1l2166
  3211  0463                     u325_20:
  3212                           	
  3213  0463                     i1l9947:	
  3214  0463  1683               	bsf	status, 5	;RP0=1, select bank1
  3215  0464  1303               	bcf	status, 6	;RP1=0, select bank1
  3216  0465  120C               	bcf	(1124/8)^080h,(1124)&7
  3217  0466  2C67               	goto	i1l2166
  3218                           	
  3219  0467                     i1l2167:	
  3220                           	
  3221  0467                     i1l2166:	
  3222                           	line	88
  3223                           ;Main.c: 88: if(TMR0IF)
  3224  0467  1D0B               	btfss	(90/8),(90)&7
  3225  0468  2C6A               	goto	u326_21
  3226  0469  2C6B               	goto	u326_20
  3227  046A                     u326_21:
  3228  046A  2CFB               	goto	i1l2174
  3229  046B                     u326_20:
  3230                           	line	90
  3231                           	
  3232  046B                     i1l9949:	
  3233                           ;Main.c: 89: {
  3234                           ;Main.c: 90: TMR0IF = 0;
  3235  046B  110B               	bcf	(90/8),(90)&7
  3236                           	line	91
  3237                           	
  3238  046C                     i1l9951:	
  3239                           ;Main.c: 91: TMR0 = 100;
  3240  046C  3064               	movlw	(064h)
  3241  046D  1283               	bcf	status, 5	;RP0=0, select bank0
  3242  046E  0081               	movwf	(1)	;volatile
  3243                           	line	93
  3244                           ;Main.c: 93: RTC_Counter++;
  3245  046F  3001               	movlw	low(01h)
  3246  0470  07D1               	addwf	(_RTC_Counter),f	;volatile
  3247  0471  1803               	skipnc
  3248  0472  0AD2               	incf	(_RTC_Counter+1),f	;volatile
  3249  0473  3000               	movlw	high(01h)
  3250  0474  07D2               	addwf	(_RTC_Counter+1),f	;volatile
  3251                           	line	95
  3252                           	
  3253  0475                     i1l9953:	
  3254                           ;Main.c: 95: RTC_FLAG_1MS = 1;
  3255  0475  17E8               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  3256                           	line	96
  3257                           	
  3258  0476                     i1l9955:	
  3259                           ;Main.c: 96: if(RTC_Counter % 10 == 0)
  3260  0476  300A               	movlw	low(0Ah)
  3261  0477  00A0               	movwf	(?___lwmod)
  3262  0478  3000               	movlw	high(0Ah)
  3263  0479  00A1               	movwf	((?___lwmod))+1
  3264  047A  0852               	movf	(_RTC_Counter+1),w	;volatile
  3265  047B  01A3               	clrf	1+(?___lwmod)+02h
  3266  047C  07A3               	addwf	1+(?___lwmod)+02h
  3267  047D  0851               	movf	(_RTC_Counter),w	;volatile
  3268  047E  01A2               	clrf	0+(?___lwmod)+02h
  3269  047F  07A2               	addwf	0+(?___lwmod)+02h
  3270                           
  3271  0480  120A  158A  2683   	fcall	___lwmod
              120A  118A         
  3272  0485  1283               	bcf	status, 5	;RP0=0, select bank0
  3273  0486  1303               	bcf	status, 6	;RP1=0, select bank0
  3274  0487  0821               	movf	((1+(?___lwmod))),w
  3275  0488  0420               	iorwf	((0+(?___lwmod))),w
  3276  0489  1D03               	skipz
  3277  048A  2C8C               	goto	u327_21
  3278  048B  2C8D               	goto	u327_20
  3279  048C                     u327_21:
  3280  048C  2C8F               	goto	i1l9959
  3281  048D                     u327_20:
  3282                           	line	98
  3283                           	
  3284  048D                     i1l9957:	
  3285                           ;Main.c: 97: {
  3286                           ;Main.c: 98: RTC_FLAG_10MS = 1;
  3287  048D  1768               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  3288  048E  2C8F               	goto	i1l9959
  3289                           	line	100
  3290                           	
  3291  048F                     i1l2169:	
  3292                           	line	101
  3293                           	
  3294  048F                     i1l9959:	
  3295                           ;Main.c: 100: }
  3296                           ;Main.c: 101: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  3297  048F  3032               	movlw	low(032h)
  3298  0490  00A0               	movwf	(?___lwmod)
  3299  0491  3000               	movlw	high(032h)
  3300  0492  00A1               	movwf	((?___lwmod))+1
  3301  0493  0852               	movf	(_RTC_Counter+1),w	;volatile
  3302  0494  01A3               	clrf	1+(?___lwmod)+02h
  3303  0495  07A3               	addwf	1+(?___lwmod)+02h
  3304  0496  0851               	movf	(_RTC_Counter),w	;volatile
  3305  0497  01A2               	clrf	0+(?___lwmod)+02h
  3306  0498  07A2               	addwf	0+(?___lwmod)+02h
  3307                           
  3308  0499  120A  158A  2683   	fcall	___lwmod
              120A  118A         
  3309  049E  1283               	bcf	status, 5	;RP0=0, select bank0
  3310  049F  1303               	bcf	status, 6	;RP1=0, select bank0
  3311  04A0  0821               	movf	((1+(?___lwmod))),w
  3312  04A1  0420               	iorwf	((0+(?___lwmod))),w
  3313  04A2  1D03               	skipz
  3314  04A3  2CA5               	goto	u328_21
  3315  04A4  2CA6               	goto	u328_20
  3316  04A5                     u328_21:
  3317  04A5  2CA8               	goto	i1l9963
  3318  04A6                     u328_20:
  3319                           	
  3320  04A6                     i1l9961:	
  3321  04A6  1569               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  3322  04A7  2CA8               	goto	i1l9963
  3323                           	
  3324  04A8                     i1l2170:	
  3325                           	line	102
  3326                           	
  3327  04A8                     i1l9963:	
  3328                           ;Main.c: 102: if(RTC_Counter % 250 == 0)
  3329  04A8  30FA               	movlw	low(0FAh)
  3330  04A9  00A0               	movwf	(?___lwmod)
  3331  04AA  3000               	movlw	high(0FAh)
  3332  04AB  00A1               	movwf	((?___lwmod))+1
  3333  04AC  0852               	movf	(_RTC_Counter+1),w	;volatile
  3334  04AD  01A3               	clrf	1+(?___lwmod)+02h
  3335  04AE  07A3               	addwf	1+(?___lwmod)+02h
  3336  04AF  0851               	movf	(_RTC_Counter),w	;volatile
  3337  04B0  01A2               	clrf	0+(?___lwmod)+02h
  3338  04B1  07A2               	addwf	0+(?___lwmod)+02h
  3339                           
  3340  04B2  120A  158A  2683   	fcall	___lwmod
              120A  118A         
  3341  04B7  1283               	bcf	status, 5	;RP0=0, select bank0
  3342  04B8  1303               	bcf	status, 6	;RP1=0, select bank0
  3343  04B9  0821               	movf	((1+(?___lwmod))),w
  3344  04BA  0420               	iorwf	((0+(?___lwmod))),w
  3345  04BB  1D03               	skipz
  3346  04BC  2CBE               	goto	u329_21
  3347  04BD  2CBF               	goto	u329_20
  3348  04BE                     u329_21:
  3349  04BE  2CCD               	goto	i1l9969
  3350  04BF                     u329_20:
  3351                           	line	104
  3352                           	
  3353  04BF                     i1l9965:	
  3354                           ;Main.c: 103: {
  3355                           ;Main.c: 104: readAvgDistance();
  3356  04BF  120A  158A  27AB   	fcall	_readAvgDistance
              120A  118A         
  3357                           	line	105
  3358                           ;Main.c: 105: UpdateDisplay();
  3359  04C4  120A  118A  2507   	fcall	_UpdateDisplay
              120A  118A         
  3360                           	line	106
  3361                           	
  3362  04C9                     i1l9967:	
  3363                           ;Main.c: 106: RTC_FLAG_250MS = 1;
  3364  04C9  1283               	bcf	status, 5	;RP0=0, select bank0
  3365  04CA  1303               	bcf	status, 6	;RP1=0, select bank0
  3366  04CB  1469               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3367  04CC  2CCD               	goto	i1l9969
  3368                           	line	108
  3369                           	
  3370  04CD                     i1l2171:	
  3371                           	line	109
  3372                           	
  3373  04CD                     i1l9969:	
  3374                           ;Main.c: 108: }
  3375                           ;Main.c: 109: if(RTC_Counter % 500 == 0)
  3376  04CD  30F4               	movlw	low(01F4h)
  3377  04CE  00A0               	movwf	(?___lwmod)
  3378  04CF  3001               	movlw	high(01F4h)
  3379  04D0  00A1               	movwf	((?___lwmod))+1
  3380  04D1  0852               	movf	(_RTC_Counter+1),w	;volatile
  3381  04D2  01A3               	clrf	1+(?___lwmod)+02h
  3382  04D3  07A3               	addwf	1+(?___lwmod)+02h
  3383  04D4  0851               	movf	(_RTC_Counter),w	;volatile
  3384  04D5  01A2               	clrf	0+(?___lwmod)+02h
  3385  04D6  07A2               	addwf	0+(?___lwmod)+02h
  3386                           
  3387  04D7  120A  158A  2683   	fcall	___lwmod
              120A  118A         
  3388  04DC  1283               	bcf	status, 5	;RP0=0, select bank0
  3389  04DD  1303               	bcf	status, 6	;RP1=0, select bank0
  3390  04DE  0821               	movf	((1+(?___lwmod))),w
  3391  04DF  0420               	iorwf	((0+(?___lwmod))),w
  3392  04E0  1D03               	skipz
  3393  04E1  2CE3               	goto	u330_21
  3394  04E2  2CE4               	goto	u330_20
  3395  04E3                     u330_21:
  3396  04E3  2CEA               	goto	i1l9977
  3397  04E4                     u330_20:
  3398                           	line	111
  3399                           	
  3400  04E4                     i1l9971:	
  3401                           ;Main.c: 110: {
  3402                           ;Main.c: 111: RTC_FLAG_500MS = 1;
  3403  04E4  14E9               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  3404                           	line	112
  3405                           	
  3406  04E5                     i1l9973:	
  3407                           ;Main.c: 112: RTC_Counter = 0;
  3408  04E5  01D1               	clrf	(_RTC_Counter)	;volatile
  3409  04E6  01D2               	clrf	(_RTC_Counter+1)	;volatile
  3410                           	line	113
  3411                           	
  3412  04E7                     i1l9975:	
  3413                           ;Main.c: 113: RB0 ^= 0x01;
  3414  04E7  3001               	movlw	1<<((48)&7)
  3415  04E8  0686               	xorwf	((48)/8),f
  3416  04E9  2CEA               	goto	i1l9977
  3417                           	line	114
  3418                           	
  3419  04EA                     i1l2172:	
  3420                           	line	116
  3421                           	
  3422  04EA                     i1l9977:	
  3423                           ;Main.c: 114: }
  3424                           ;Main.c: 116: if (buttonPressed == 0)
  3425  04EA  08DE               	movf	(_buttonPressed),f
  3426  04EB  1D03               	skipz	;volatile
  3427  04EC  2CEE               	goto	u331_21
  3428  04ED  2CEF               	goto	u331_20
  3429  04EE                     u331_21:
  3430  04EE  2CFB               	goto	i1l2174
  3431  04EF                     u331_20:
  3432                           	line	118
  3433                           	
  3434  04EF                     i1l9979:	
  3435                           ;Main.c: 117: {
  3436                           ;Main.c: 118: buttonPressed = ReadButtons();
  3437  04EF  120A  118A  26CA   	fcall	_ReadButtons
              120A  118A         
  3438  04F4  1283               	bcf	status, 5	;RP0=0, select bank0
  3439  04F5  1303               	bcf	status, 6	;RP1=0, select bank0
  3440  04F6  00CC               	movwf	(??_isr1+0)+0
  3441  04F7  084C               	movf	(??_isr1+0)+0,w
  3442  04F8  00DE               	movwf	(_buttonPressed)	;volatile
  3443  04F9  2CFB               	goto	i1l2174
  3444                           	line	119
  3445                           	
  3446  04FA                     i1l2173:	
  3447  04FA  2CFB               	goto	i1l2174
  3448                           	line	120
  3449                           	
  3450  04FB                     i1l2168:	
  3451                           	line	121
  3452                           	
  3453  04FB                     i1l2174:	
  3454  04FB  1283               	bcf	status, 5	;RP0=0, select bank0
  3455  04FC  0850               	movf	(??_isr1+4),w
  3456  04FD  00FF               	movwf	btemp+1
  3457  04FE  084F               	movf	(??_isr1+3),w
  3458  04FF  008A               	movwf	pclath
  3459  0500  084E               	movf	(??_isr1+2),w
  3460  0501  0084               	movwf	fsr0
  3461  0502  0E4D               	swapf	(??_isr1+1)^00h,w
  3462  0503  0083               	movwf	status
  3463  0504  0EFE               	swapf	saved_w,f
  3464  0505  0E7E               	swapf	saved_w,w
  3465  0506  0009               	retfie
  3466                           	opt stack 0
  3467                           GLOBAL	__end_of_isr1
  3468  0507                     	__end_of_isr1:
  3469 ;; =============== function _isr1 ends ============
  3470                           
  3471                           	signat	_isr1,88
  3472                           	global	_UpdateDisplay
  3473                           psect	text645,local,class=CODE,delta=2
  3474                           global __ptext645
  3475  0507                     __ptext645:
  3476                           
  3477 ;; *************** function _UpdateDisplay *****************
  3478 ;; Defined at:
  3479 ;;		line 216 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  adcOutput      16   28[BANK0 ] unsigned char [16]
  3484 ;; Return value:  Size  Location     Type
  3485 ;;		None               void
  3486 ;; Registers used:
  3487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         0       0       0       0       0
  3494 ;;      Locals:         0      16       0       0       0
  3495 ;;      Temps:          0       5       0       0       0
  3496 ;;      Totals:         0      21       0       0       0
  3497 ;;Total ram usage:       21 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    2
  3500 ;; This function calls:
  3501 ;;		i1_lcd_write_control
  3502 ;;		_sprintf
  3503 ;;		_lcd_set_cursor
  3504 ;;		_lcd_write_string
  3505 ;;		___awmod
  3506 ;; This function is called by:
  3507 ;;		_isr1
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           psect	text645
  3511                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  3512                           	line	216
  3513                           	global	__size_of_UpdateDisplay
  3514  00B9                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  3515                           	
  3516  0507                     _UpdateDisplay:	
  3517                           	opt	stack 1
  3518                           ; Regs used in _UpdateDisplay: [allreg]
  3519                           	line	217
  3520                           	
  3521  0507                     i1l9997:	
  3522                           ;HMI.c: 217: char adcOutput[16] = "";
  3523  0507  303C               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3524  0508  0084               	movwf	fsr0
  3525  0509  30A0               	movlw	low(UpdateDisplay@F1211)
  3526  050A  1283               	bcf	status, 5	;RP0=0, select bank0
  3527  050B  1303               	bcf	status, 6	;RP1=0, select bank0
  3528  050C  00B7               	movwf	(??_UpdateDisplay+0)+0
  3529  050D  0804               	movf	fsr0,w
  3530  050E  00B8               	movwf	((??_UpdateDisplay+0)+0+1)
  3531  050F  3010               	movlw	16
  3532  0510  00B9               	movwf	((??_UpdateDisplay+0)+0+2)
  3533  0511                     u334_20:
  3534  0511  0837               	movf	(??_UpdateDisplay+0)+0,w
  3535  0512  0084               	movwf	fsr0
  3536  0513  1383               	bcf	status, 7	;select IRP bank1
  3537                           	
  3538  0514  0800               	movf	indf,w
  3539  0515  00BA               	movwf	((??_UpdateDisplay+0)+0+3)
  3540  0516  0AB7               	incf	(??_UpdateDisplay+0)+0,f
  3541  0517  0838               	movf	((??_UpdateDisplay+0)+0+1),w
  3542  0518  0084               	movwf	fsr0
  3543                           	
  3544  0519  083A               	movf	((??_UpdateDisplay+0)+0+3),w
  3545  051A  0080               	movwf	indf
  3546  051B  0AB8               	incf	((??_UpdateDisplay+0)+0+1),f
  3547  051C  0BB9               	decfsz	((??_UpdateDisplay+0)+0+2),f
  3548  051D  2D11               	goto	u334_20
  3549                           	line	218
  3550                           	
  3551  051E                     i1l9999:	
  3552                           ;HMI.c: 218: lcd_write_control(0b00000001);
  3553  051E  3001               	movlw	(01h)
  3554  051F  120A  158A  2530   	fcall	i1_lcd_write_control
              120A  118A         
  3555                           	line	220
  3556                           	
  3557  0524                     i1l10001:	
  3558                           ;HMI.c: 220: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  3559  0524  300B               	movlw	((STR_11-__stringbase))&0ffh
  3560  0525  1283               	bcf	status, 5	;RP0=0, select bank0
  3561  0526  1303               	bcf	status, 6	;RP1=0, select bank0
  3562  0527  00B7               	movwf	(??_UpdateDisplay+0)+0
  3563  0528  0837               	movf	(??_UpdateDisplay+0)+0,w
  3564  0529  00A6               	movwf	(?_sprintf)
  3565  052A  0861               	movf	(_highByte),w
  3566  052B  00B8               	movwf	(??_UpdateDisplay+1)+0
  3567  052C  01B9               	clrf	(??_UpdateDisplay+1)+0+1
  3568  052D  0838               	movf	0+(??_UpdateDisplay+1)+0,w
  3569  052E  00A7               	movwf	0+(?_sprintf)+01h
  3570  052F  0839               	movf	1+(??_UpdateDisplay+1)+0,w
  3571  0530  00A8               	movwf	1+(?_sprintf)+01h
  3572  0531  0862               	movf	(_lowByte),w
  3573  0532  00BA               	movwf	(??_UpdateDisplay+3)+0
  3574  0533  01BB               	clrf	(??_UpdateDisplay+3)+0+1
  3575  0534  083A               	movf	0+(??_UpdateDisplay+3)+0,w
  3576  0535  00A9               	movwf	0+(?_sprintf)+03h
  3577  0536  083B               	movf	1+(??_UpdateDisplay+3)+0,w
  3578  0537  00AA               	movwf	1+(?_sprintf)+03h
  3579  0538  303C               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3580  0539  120A  118A  2325   	fcall	_sprintf
              120A  118A         
  3581                           	line	222
  3582                           	
  3583  053E                     i1l10003:	
  3584                           ;HMI.c: 222: lcd_set_cursor(0x00);
  3585  053E  3000               	movlw	(0)
  3586  053F  120A  158A  2501   	fcall	_lcd_set_cursor
              120A  118A         
  3587                           	line	223
  3588                           	
  3589  0544                     i1l10005:	
  3590                           ;HMI.c: 223: lcd_write_string(adcOutput);
  3591  0544  303C               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3592  0545  00F7               	movwf	(?_lcd_write_string)
  3593  0546  3000               	movlw	(0x0/2)
  3594  0547  00F8               	movwf	(?_lcd_write_string+1)
  3595  0548  120A  158A  25ED   	fcall	_lcd_write_string
              120A  118A         
  3596                           	line	228
  3597                           	
  3598  054D                     i1l10007:	
  3599                           ;HMI.c: 228: lcd_set_cursor(0x40);
  3600  054D  3040               	movlw	(040h)
  3601  054E  120A  158A  2501   	fcall	_lcd_set_cursor
              120A  118A         
  3602                           	line	229
  3603                           	
  3604  0553                     i1l10009:	
  3605                           ;HMI.c: 229: if (pos > 0)
  3606  0553  1283               	bcf	status, 5	;RP0=0, select bank0
  3607  0554  1303               	bcf	status, 6	;RP1=0, select bank0
  3608  0555  0858               	movf	(_pos+1),w
  3609  0556  3A80               	xorlw	80h
  3610  0557  00FF               	movwf	btemp+1
  3611  0558  3080               	movlw	(high(01h))^80h
  3612  0559  027F               	subwf	btemp+1,w
  3613  055A  1D03               	skipz
  3614  055B  2D5E               	goto	u335_25
  3615  055C  3001               	movlw	low(01h)
  3616  055D  0257               	subwf	(_pos),w
  3617  055E                     u335_25:
  3618                           
  3619  055E  1C03               	skipc
  3620  055F  2D61               	goto	u335_21
  3621  0560  2D62               	goto	u335_20
  3622  0561                     u335_21:
  3623  0561  2D73               	goto	i1l10013
  3624  0562                     u335_20:
  3625                           	line	230
  3626                           	
  3627  0562                     i1l10011:	
  3628                           ;HMI.c: 230: lcd_write_string(shortMenuStrings[pos - 1]);
  3629  0562  1283               	bcf	status, 5	;RP0=0, select bank0
  3630  0563  1303               	bcf	status, 6	;RP1=0, select bank0
  3631  0564  0857               	movf	(_pos),w
  3632  0565  3EFF               	addlw	0FFh
  3633  0566  3E6A               	addlw	_shortMenuStrings&0ffh
  3634  0567  0084               	movwf	fsr0
  3635  0568  1383               	bcf	status, 7	;select IRP bank0
  3636  0569  0800               	movf	indf,w
  3637  056A  00F7               	movwf	(?_lcd_write_string)
  3638  056B  3080               	movlw	80h
  3639  056C  00F8               	movwf	(?_lcd_write_string+1)
  3640  056D  120A  158A  25ED   	fcall	_lcd_write_string
              120A  118A         
  3641  0572  2D84               	goto	i1l10015
  3642                           	line	231
  3643                           	
  3644  0573                     i1l5180:	
  3645                           	line	232
  3646                           	
  3647  0573                     i1l10013:	
  3648                           ;HMI.c: 231: else
  3649                           ;HMI.c: 232: lcd_write_string(shortMenuStrings[pos + 5 - 1]);
  3650  0573  1283               	bcf	status, 5	;RP0=0, select bank0
  3651  0574  1303               	bcf	status, 6	;RP1=0, select bank0
  3652  0575  0857               	movf	(_pos),w
  3653  0576  3E04               	addlw	04h
  3654  0577  3E6A               	addlw	_shortMenuStrings&0ffh
  3655  0578  0084               	movwf	fsr0
  3656  0579  1383               	bcf	status, 7	;select IRP bank0
  3657  057A  0800               	movf	indf,w
  3658  057B  00F7               	movwf	(?_lcd_write_string)
  3659  057C  3080               	movlw	80h
  3660  057D  00F8               	movwf	(?_lcd_write_string+1)
  3661  057E  120A  158A  25ED   	fcall	_lcd_write_string
              120A  118A         
  3662  0583  2D84               	goto	i1l10015
  3663                           	
  3664  0584                     i1l5181:	
  3665                           	line	233
  3666                           	
  3667  0584                     i1l10015:	
  3668                           ;HMI.c: 233: lcd_set_cursor(0x44);
  3669  0584  3044               	movlw	(044h)
  3670  0585  120A  158A  2501   	fcall	_lcd_set_cursor
              120A  118A         
  3671                           	line	234
  3672                           	
  3673  058A                     i1l10017:	
  3674                           ;HMI.c: 234: lcd_write_string(menuStrings[pos]);
  3675  058A  1283               	bcf	status, 5	;RP0=0, select bank0
  3676  058B  1303               	bcf	status, 6	;RP1=0, select bank0
  3677  058C  0857               	movf	(_pos),w
  3678  058D  3ED2               	addlw	_menuStrings&0ffh
  3679  058E  0084               	movwf	fsr0
  3680  058F  1383               	bcf	status, 7	;select IRP bank1
  3681  0590  0800               	movf	indf,w
  3682  0591  00F7               	movwf	(?_lcd_write_string)
  3683  0592  3080               	movlw	80h
  3684  0593  00F8               	movwf	(?_lcd_write_string+1)
  3685  0594  120A  158A  25ED   	fcall	_lcd_write_string
              120A  118A         
  3686                           	line	235
  3687                           ;HMI.c: 235: lcd_set_cursor(0x4D);
  3688  0599  304D               	movlw	(04Dh)
  3689  059A  120A  158A  2501   	fcall	_lcd_set_cursor
              120A  118A         
  3690                           	line	236
  3691                           	
  3692  059F                     i1l10019:	
  3693                           ;HMI.c: 236: lcd_write_string(shortMenuStrings[(pos + 1) % 5]);
  3694  059F  3005               	movlw	low(05h)
  3695  05A0  00F0               	movwf	(?___awmod)
  3696  05A1  3000               	movlw	high(05h)
  3697  05A2  00F1               	movwf	((?___awmod))+1
  3698  05A3  1283               	bcf	status, 5	;RP0=0, select bank0
  3699  05A4  1303               	bcf	status, 6	;RP1=0, select bank0
  3700  05A5  0857               	movf	(_pos),w
  3701  05A6  3E01               	addlw	low(01h)
  3702  05A7  00F2               	movwf	0+(?___awmod)+02h
  3703  05A8  0858               	movf	(_pos+1),w
  3704  05A9  1803               	skipnc
  3705  05AA  3E01               	addlw	1
  3706  05AB  3E00               	addlw	high(01h)
  3707  05AC  00F3               	movwf	1+0+(?___awmod)+02h
  3708  05AD  120A  118A  2769   	fcall	___awmod
              120A  118A         
  3709  05B2  0870               	movf	(0+(?___awmod)),w
  3710  05B3  3E6A               	addlw	_shortMenuStrings&0ffh
  3711  05B4  0084               	movwf	fsr0
  3712  05B5  1383               	bcf	status, 7	;select IRP bank0
  3713  05B6  0800               	movf	indf,w
  3714  05B7  00F7               	movwf	(?_lcd_write_string)
  3715  05B8  3080               	movlw	80h
  3716  05B9  00F8               	movwf	(?_lcd_write_string+1)
  3717  05BA  120A  158A  25ED   	fcall	_lcd_write_string
              120A  118A         
  3718                           	line	237
  3719                           	
  3720  05BF                     i1l5182:	
  3721  05BF  0008               	return
  3722                           	opt stack 0
  3723                           GLOBAL	__end_of_UpdateDisplay
  3724  05C0                     	__end_of_UpdateDisplay:
  3725 ;; =============== function _UpdateDisplay ends ============
  3726                           
  3727                           	signat	_UpdateDisplay,88
  3728                           	global	_readAvgDistance
  3729                           psect	text646,local,class=CODE,delta=2
  3730                           global __ptext646
  3731  0FAB                     __ptext646:
  3732                           
  3733 ;; *************** function _readAvgDistance *****************
  3734 ;; Defined at:
  3735 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  i               2    4[BANK0 ] int 
  3740 ;;  fullval         2    2[BANK0 ] unsigned int 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;		None               void
  3743 ;; Registers used:
  3744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3750 ;;      Params:         0       0       0       0       0
  3751 ;;      Locals:         0       4       0       0       0
  3752 ;;      Temps:          0       0       0       0       0
  3753 ;;      Totals:         0       4       0       0       0
  3754 ;;Total ram usage:        4 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    3
  3757 ;; This function calls:
  3758 ;;		_readDistance
  3759 ;;		___lwdiv
  3760 ;;		_ADCconvert
  3761 ;; This function is called by:
  3762 ;;		_isr1
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           psect	text646
  3766                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3767                           	line	10
  3768                           	global	__size_of_readAvgDistance
  3769  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  3770                           	
  3771  0FAB                     _readAvgDistance:	
  3772                           	opt	stack 0
  3773                           ; Regs used in _readAvgDistance: [allreg]
  3774                           	line	11
  3775                           	
  3776  0FAB                     i1l9981:	
  3777                           ;infrared.c: 11: unsigned int fullval = 0;
  3778  0FAB  1283               	bcf	status, 5	;RP0=0, select bank0
  3779  0FAC  1303               	bcf	status, 6	;RP1=0, select bank0
  3780  0FAD  01A2               	clrf	(readAvgDistance@fullval)
  3781  0FAE  01A3               	clrf	(readAvgDistance@fullval+1)
  3782                           	line	14
  3783                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  3784  0FAF  01A4               	clrf	(readAvgDistance@i)
  3785  0FB0  01A5               	clrf	(readAvgDistance@i+1)
  3786                           	
  3787  0FB1                     i1l9983:	
  3788  0FB1  0825               	movf	(readAvgDistance@i+1),w
  3789  0FB2  3A80               	xorlw	80h
  3790  0FB3  00FF               	movwf	btemp+1
  3791  0FB4  3080               	movlw	(high(0Ah))^80h
  3792  0FB5  027F               	subwf	btemp+1,w
  3793  0FB6  1D03               	skipz
  3794  0FB7  2FBA               	goto	u332_25
  3795  0FB8  300A               	movlw	low(0Ah)
  3796  0FB9  0224               	subwf	(readAvgDistance@i),w
  3797  0FBA                     u332_25:
  3798                           
  3799  0FBA  1C03               	skipc
  3800  0FBB  2FBD               	goto	u332_21
  3801  0FBC  2FBE               	goto	u332_20
  3802  0FBD                     u332_21:
  3803  0FBD  2FC0               	goto	i1l9987
  3804  0FBE                     u332_20:
  3805  0FBE  2FE1               	goto	i1l9993
  3806                           	
  3807  0FBF                     i1l9985:	
  3808  0FBF  2FE1               	goto	i1l9993
  3809                           	line	15
  3810                           	
  3811  0FC0                     i1l2908:	
  3812                           	line	16
  3813                           	
  3814  0FC0                     i1l9987:	
  3815                           ;infrared.c: 15: {
  3816                           ;infrared.c: 16: fullval += readDistance();
  3817  0FC0  120A  158A  2544   	fcall	_readDistance
              120A  158A         
  3818  0FC5  0878               	movf	(0+(?_readDistance)),w
  3819  0FC6  1283               	bcf	status, 5	;RP0=0, select bank0
  3820  0FC7  1303               	bcf	status, 6	;RP1=0, select bank0
  3821  0FC8  07A2               	addwf	(readAvgDistance@fullval),f
  3822  0FC9  1803               	skipnc
  3823  0FCA  0AA3               	incf	(readAvgDistance@fullval+1),f
  3824  0FCB  0879               	movf	(1+(?_readDistance)),w
  3825  0FCC  07A3               	addwf	(readAvgDistance@fullval+1),f
  3826                           	line	14
  3827                           	
  3828  0FCD                     i1l9989:	
  3829  0FCD  3001               	movlw	low(01h)
  3830  0FCE  07A4               	addwf	(readAvgDistance@i),f
  3831  0FCF  1803               	skipnc
  3832  0FD0  0AA5               	incf	(readAvgDistance@i+1),f
  3833  0FD1  3000               	movlw	high(01h)
  3834  0FD2  07A5               	addwf	(readAvgDistance@i+1),f
  3835                           	
  3836  0FD3                     i1l9991:	
  3837  0FD3  0825               	movf	(readAvgDistance@i+1),w
  3838  0FD4  3A80               	xorlw	80h
  3839  0FD5  00FF               	movwf	btemp+1
  3840  0FD6  3080               	movlw	(high(0Ah))^80h
  3841  0FD7  027F               	subwf	btemp+1,w
  3842  0FD8  1D03               	skipz
  3843  0FD9  2FDC               	goto	u333_25
  3844  0FDA  300A               	movlw	low(0Ah)
  3845  0FDB  0224               	subwf	(readAvgDistance@i),w
  3846  0FDC                     u333_25:
  3847                           
  3848  0FDC  1C03               	skipc
  3849  0FDD  2FDF               	goto	u333_21
  3850  0FDE  2FE0               	goto	u333_20
  3851  0FDF                     u333_21:
  3852  0FDF  2FC0               	goto	i1l9987
  3853  0FE0                     u333_20:
  3854  0FE0  2FE1               	goto	i1l9993
  3855                           	
  3856  0FE1                     i1l2909:	
  3857                           	line	19
  3858                           	
  3859  0FE1                     i1l9993:	
  3860                           ;infrared.c: 18: }
  3861                           ;infrared.c: 19: adcVal = fullval / 10;
  3862  0FE1  300A               	movlw	low(0Ah)
  3863  0FE2  00F6               	movwf	(?___lwdiv)
  3864  0FE3  3000               	movlw	high(0Ah)
  3865  0FE4  00F7               	movwf	((?___lwdiv))+1
  3866  0FE5  1283               	bcf	status, 5	;RP0=0, select bank0
  3867  0FE6  1303               	bcf	status, 6	;RP1=0, select bank0
  3868  0FE7  0823               	movf	(readAvgDistance@fullval+1),w
  3869  0FE8  01F9               	clrf	1+(?___lwdiv)+02h
  3870  0FE9  07F9               	addwf	1+(?___lwdiv)+02h
  3871  0FEA  0822               	movf	(readAvgDistance@fullval),w
  3872  0FEB  01F8               	clrf	0+(?___lwdiv)+02h
  3873  0FEC  07F8               	addwf	0+(?___lwdiv)+02h
  3874                           
  3875  0FED  120A  158A  275D   	fcall	___lwdiv
              120A  158A         
  3876  0FF2  0877               	movf	(1+(?___lwdiv)),w
  3877  0FF3  1283               	bcf	status, 5	;RP0=0, select bank0
  3878  0FF4  1303               	bcf	status, 6	;RP1=0, select bank0
  3879  0FF5  01D4               	clrf	(_adcVal+1)	;volatile
  3880  0FF6  07D4               	addwf	(_adcVal+1)	;volatile
  3881  0FF7  0876               	movf	(0+(?___lwdiv)),w
  3882  0FF8  01D3               	clrf	(_adcVal)	;volatile
  3883  0FF9  07D3               	addwf	(_adcVal)	;volatile
  3884                           
  3885                           	line	20
  3886                           	
  3887  0FFA                     i1l9995:	
  3888                           ;infrared.c: 20: ADCconvert();
  3889  0FFA  120A  118A  2015   	fcall	_ADCconvert
              120A  158A         
  3890                           	line	21
  3891                           	
  3892  0FFF                     i1l2910:	
  3893  0FFF  0008               	return
  3894                           	opt stack 0
  3895                           GLOBAL	__end_of_readAvgDistance
  3896  1000                     	__end_of_readAvgDistance:
  3897 ;; =============== function _readAvgDistance ends ============
  3898                           
  3899                           	signat	_readAvgDistance,88
  3900                           	global	_readDistance
  3901                           psect	text647,local,class=CODE,delta=2
  3902                           global __ptext647
  3903  0D44                     __ptext647:
  3904                           
  3905 ;; *************** function _readDistance *****************
  3906 ;; Defined at:
  3907 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  fullval         2   12[COMMON] unsigned int 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  2    8[COMMON] unsigned int 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3921 ;;      Params:         2       0       0       0       0
  3922 ;;      Locals:         2       0       0       0       0
  3923 ;;      Temps:          2       0       0       0       0
  3924 ;;      Totals:         6       0       0       0       0
  3925 ;;Total ram usage:        6 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    2
  3928 ;; This function calls:
  3929 ;;		_adc_read_channel
  3930 ;; This function is called by:
  3931 ;;		_readAvgDistance
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           psect	text647
  3935                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3936                           	line	24
  3937                           	global	__size_of_readDistance
  3938  0014                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3939                           	
  3940  0D44                     _readDistance:	
  3941                           	opt	stack 0
  3942                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3943                           	line	27
  3944                           	
  3945  0D44                     i1l10085:	
  3946                           ;infrared.c: 25: unsigned int fullval ;
  3947                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3948  0D44  3000               	movlw	(0)
  3949  0D45  120A  158A  2642   	fcall	_adc_read_channel
              120A  158A         
  3950  0D4A  00FA               	movwf	(??_readDistance+0)+0
  3951  0D4B  01FB               	clrf	(??_readDistance+0)+0+1
  3952  0D4C  087A               	movf	0+(??_readDistance+0)+0,w
  3953  0D4D  00FC               	movwf	(readDistance@fullval)
  3954  0D4E  087B               	movf	1+(??_readDistance+0)+0,w
  3955  0D4F  00FD               	movwf	(readDistance@fullval+1)
  3956                           	line	29
  3957                           	
  3958  0D50                     i1l10087:	
  3959                           ;infrared.c: 29: return fullval;
  3960  0D50  087D               	movf	(readDistance@fullval+1),w
  3961  0D51  01F9               	clrf	(?_readDistance+1)
  3962  0D52  07F9               	addwf	(?_readDistance+1)
  3963  0D53  087C               	movf	(readDistance@fullval),w
  3964  0D54  01F8               	clrf	(?_readDistance)
  3965  0D55  07F8               	addwf	(?_readDistance)
  3966                           
  3967  0D56  2D57               	goto	i1l2913
  3968                           	
  3969  0D57                     i1l10089:	
  3970                           	line	30
  3971                           	
  3972  0D57                     i1l2913:	
  3973  0D57  0008               	return
  3974                           	opt stack 0
  3975                           GLOBAL	__end_of_readDistance
  3976  0D58                     	__end_of_readDistance:
  3977 ;; =============== function _readDistance ends ============
  3978                           
  3979                           	signat	_readDistance,90
  3980                           	global	_lcd_write_string
  3981                           psect	text648,local,class=CODE,delta=2
  3982                           global __ptext648
  3983  0DED                     __ptext648:
  3984                           
  3985 ;; *************** function _lcd_write_string *****************
  3986 ;; Defined at:
  3987 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  s               2    7[COMMON] PTR unsigned char 
  3990 ;;		 -> UpdateDisplay@adcOutput(16), STR_10(4), STR_9(4), STR_8(4), 
  3991 ;;		 -> STR_7(4), STR_6(4), STR_5(9), STR_4(8), 
  3992 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;		None               void
  3997 ;; Registers used:
  3998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4004 ;;      Params:         2       0       0       0       0
  4005 ;;      Locals:         0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0
  4007 ;;      Totals:         2       0       0       0       0
  4008 ;;Total ram usage:        2 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    1
  4011 ;; This function calls:
  4012 ;;		_lcd_write_data
  4013 ;; This function is called by:
  4014 ;;		_UpdateDisplay
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           psect	text648
  4018                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4019                           	line	48
  4020                           	global	__size_of_lcd_write_string
  4021  002A                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  4022                           	
  4023  0DED                     _lcd_write_string:	
  4024                           	opt	stack 1
  4025                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4026                           	line	50
  4027                           	
  4028  0DED                     i1l9891:	
  4029                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  4030  0DED  2E05               	goto	i1l9897
  4031                           	
  4032  0DEE                     i1l1403:	
  4033                           	
  4034  0DEE                     i1l9893:	
  4035  0DEE  0878               	movf	(lcd_write_string@s+1),w
  4036  0DEF  1283               	bcf	status, 5	;RP0=0, select bank0
  4037  0DF0  1303               	bcf	status, 6	;RP1=0, select bank0
  4038  0DF1  00FF               	movwf	btemp+1
  4039  0DF2  0877               	movf	(lcd_write_string@s),w
  4040  0DF3  0084               	movwf	fsr0
  4041  0DF4  120A  118A  2700   	fcall	stringtab
              120A  158A         
  4042  0DF9  120A  158A  250A   	fcall	_lcd_write_data
              120A  158A         
  4043                           	
  4044  0DFE                     i1l9895:	
  4045  0DFE  3001               	movlw	low(01h)
  4046  0DFF  07F7               	addwf	(lcd_write_string@s),f
  4047  0E00  1803               	skipnc
  4048  0E01  0AF8               	incf	(lcd_write_string@s+1),f
  4049  0E02  3000               	movlw	high(01h)
  4050  0E03  07F8               	addwf	(lcd_write_string@s+1),f
  4051  0E04  2E05               	goto	i1l9897
  4052                           	
  4053  0E05                     i1l1402:	
  4054                           	
  4055  0E05                     i1l9897:	
  4056  0E05  0878               	movf	(lcd_write_string@s+1),w
  4057  0E06  1283               	bcf	status, 5	;RP0=0, select bank0
  4058  0E07  1303               	bcf	status, 6	;RP1=0, select bank0
  4059  0E08  00FF               	movwf	btemp+1
  4060  0E09  0877               	movf	(lcd_write_string@s),w
  4061  0E0A  0084               	movwf	fsr0
  4062  0E0B  120A  118A  2700   	fcall	stringtab
              120A  158A         
  4063  0E10  3800               	iorlw	0
  4064  0E11  1D03               	skipz
  4065  0E12  2E14               	goto	u317_21
  4066  0E13  2E15               	goto	u317_20
  4067  0E14                     u317_21:
  4068  0E14  2DEE               	goto	i1l9893
  4069  0E15                     u317_20:
  4070  0E15  2E16               	goto	i1l1405
  4071                           	
  4072  0E16                     i1l1404:	
  4073                           	line	51
  4074                           	
  4075  0E16                     i1l1405:	
  4076  0E16  0008               	return
  4077                           	opt stack 0
  4078                           GLOBAL	__end_of_lcd_write_string
  4079  0E17                     	__end_of_lcd_write_string:
  4080 ;; =============== function _lcd_write_string ends ============
  4081                           
  4082                           	signat	_lcd_write_string,4216
  4083                           	global	_lcd_set_cursor
  4084                           psect	text649,local,class=CODE,delta=2
  4085                           global __ptext649
  4086  0D01                     __ptext649:
  4087                           
  4088 ;; *************** function _lcd_set_cursor *****************
  4089 ;; Defined at:
  4090 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  address         1    wreg     unsigned char 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  address         1    3[COMMON] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;		None               void
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0, pclath, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       0       0       0       0
  4105 ;;      Locals:         1       0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0
  4107 ;;      Totals:         1       0       0       0       0
  4108 ;;Total ram usage:        1 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    1
  4111 ;; This function calls:
  4112 ;;		i1_lcd_write_control
  4113 ;; This function is called by:
  4114 ;;		_UpdateDisplay
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           psect	text649
  4118                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4119                           	line	42
  4120                           	global	__size_of_lcd_set_cursor
  4121  0009                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  4122                           	
  4123  0D01                     _lcd_set_cursor:	
  4124                           	opt	stack 1
  4125                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4126                           ;lcd_set_cursor@address stored from wreg
  4127  0D01  00F3               	movwf	(lcd_set_cursor@address)
  4128                           	line	43
  4129                           	
  4130  0D02                     i1l9887:	
  4131                           ;lcd.c: 43: address |= 0b10000000;
  4132  0D02  17F3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  4133                           	line	44
  4134                           	
  4135  0D03                     i1l9889:	
  4136                           ;lcd.c: 44: lcd_write_control(address);
  4137  0D03  0873               	movf	(lcd_set_cursor@address),w
  4138  0D04  120A  158A  2530   	fcall	i1_lcd_write_control
              120A  158A         
  4139                           	line	45
  4140                           	
  4141  0D09                     i1l1399:	
  4142  0D09  0008               	return
  4143                           	opt stack 0
  4144                           GLOBAL	__end_of_lcd_set_cursor
  4145  0D0A                     	__end_of_lcd_set_cursor:
  4146 ;; =============== function _lcd_set_cursor ends ============
  4147                           
  4148                           	signat	_lcd_set_cursor,4216
  4149                           	global	i1_lcd_write_control
  4150                           psect	text650,local,class=CODE,delta=2
  4151                           global __ptext650
  4152  0D30                     __ptext650:
  4153                           
  4154 ;; *************** function i1_lcd_write_control *****************
  4155 ;; Defined at:
  4156 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  lcd_write_co    1    wreg     unsigned char 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  lcd_write_co    1    2[COMMON] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;		None               void
  4163 ;; Registers used:
  4164 ;;		wreg
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4170 ;;      Params:         0       0       0       0       0
  4171 ;;      Locals:         1       0       0       0       0
  4172 ;;      Temps:          2       0       0       0       0
  4173 ;;      Totals:         3       0       0       0       0
  4174 ;;Total ram usage:        3 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_lcd_set_cursor
  4180 ;;		_UpdateDisplay
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           psect	text650
  4184                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  4185                           	line	18
  4186                           	global	__size_ofi1_lcd_write_control
  4187  0014                     	__size_ofi1_lcd_write_control	equ	__end_ofi1_lcd_write_control-i1_lcd_write_control
  4188                           	
  4189  0D30                     i1_lcd_write_control:	
  4190                           	opt	stack 1
  4191                           ; Regs used in i1_lcd_write_control: [wreg]
  4192                           ;i1lcd_write_control@databyte stored from wreg
  4193  0D30  00F2               	movwf	(i1lcd_write_control@databyte)
  4194                           	line	19
  4195                           	
  4196  0D31                     i1l10461:	
  4197                           ;lcd.c: 19: RE2 = 0;
  4198  0D31  1283               	bcf	status, 5	;RP0=0, select bank0
  4199  0D32  1303               	bcf	status, 6	;RP1=0, select bank0
  4200  0D33  1109               	bcf	(74/8),(74)&7
  4201                           	line	20
  4202                           ;lcd.c: 20: RE1 = 0;
  4203  0D34  1089               	bcf	(73/8),(73)&7
  4204                           	line	21
  4205                           ;lcd.c: 21: RE0 = 0;
  4206  0D35  1009               	bcf	(72/8),(72)&7
  4207                           	line	22
  4208                           	
  4209  0D36                     i1l10463:	
  4210                           ;lcd.c: 22: PORTD = databyte;
  4211  0D36  0872               	movf	(i1lcd_write_control@databyte),w
  4212  0D37  0088               	movwf	(8)	;volatile
  4213                           	line	23
  4214                           	
  4215  0D38                     i1l10465:	
  4216                           ;lcd.c: 23: RE2 = 1;
  4217  0D38  1509               	bsf	(74/8),(74)&7
  4218                           	line	24
  4219                           	
  4220  0D39                     i1l10467:	
  4221                           ;lcd.c: 24: RE2 = 0;
  4222  0D39  1109               	bcf	(74/8),(74)&7
  4223                           	line	25
  4224                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  4225                           	opt asmopt_off
  4226  0D3A  300D               movlw	13
  4227  0D3B  00F1               movwf	((??i1_lcd_write_control+0)+0+1),f
  4228  0D3C  30FB               	movlw	251
  4229  0D3D  00F0               movwf	((??i1_lcd_write_control+0)+0),f
  4230  0D3E                     u422_27:
  4231  0D3E  0BF0               	decfsz	((??i1_lcd_write_control+0)+0),f
  4232  0D3F  2D3E               	goto	u422_27
  4233  0D40  0BF1               	decfsz	((??i1_lcd_write_control+0)+0+1),f
  4234  0D41  2D3E               	goto	u422_27
  4235  0D42  2D43               	nop2
  4236                           opt asmopt_on
  4237                           
  4238                           	line	26
  4239                           	
  4240  0D43                     i1l1393:	
  4241  0D43  0008               	return
  4242                           	opt stack 0
  4243                           GLOBAL	__end_ofi1_lcd_write_control
  4244  0D44                     	__end_ofi1_lcd_write_control:
  4245 ;; =============== function i1_lcd_write_control ends ============
  4246                           
  4247                           	signat	i1_lcd_write_control,88
  4248                           	global	_sprintf
  4249                           psect	text651,local,class=CODE,delta=2
  4250                           global __ptext651
  4251  0325                     __ptext651:
  4252                           
  4253 ;; *************** function _sprintf *****************
  4254 ;; Defined at:
  4255 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  sp              1    wreg     PTR unsigned char 
  4258 ;;		 -> UpdateDisplay@adcOutput(16), 
  4259 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  4260 ;;		 -> STR_11(15), 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  4263 ;;		 -> UpdateDisplay@adcOutput(16), 
  4264 ;;  _val            4   17[BANK0 ] struct .
  4265 ;;  c               1   22[BANK0 ] char 
  4266 ;;  prec            1   16[BANK0 ] char 
  4267 ;;  flag            1   15[BANK0 ] unsigned char 
  4268 ;;  ap              1   14[BANK0 ] PTR void [1]
  4269 ;;		 -> ?_sprintf(2), 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    6[BANK0 ] int 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4279 ;;      Params:         0       5       0       0       0
  4280 ;;      Locals:         0       9       0       0       0
  4281 ;;      Temps:          0       3       0       0       0
  4282 ;;      Totals:         0      17       0       0       0
  4283 ;;Total ram usage:       17 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    1
  4286 ;; This function calls:
  4287 ;;		___lwdiv
  4288 ;;		___lwmod
  4289 ;; This function is called by:
  4290 ;;		_UpdateDisplay
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           psect	text651
  4294                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  4295                           	line	488
  4296                           	global	__size_of_sprintf
  4297  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4298                           	
  4299  0325                     _sprintf:	
  4300                           	opt	stack 1
  4301                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4302                           ;sprintf@sp stored from wreg
  4303                           	line	537
  4304  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  4305  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  4306  0327  00B5               	movwf	(sprintf@sp)
  4307                           	
  4308  0328                     i1l10275:	
  4309  0328  3027               	movlw	(?_sprintf+01h)&0ffh
  4310  0329  00AB               	movwf	(??_sprintf+0)+0
  4311  032A  082B               	movf	(??_sprintf+0)+0,w
  4312  032B  00AE               	movwf	(sprintf@ap)
  4313                           	line	540
  4314  032C  2C0B               	goto	i1l10327
  4315                           	
  4316  032D                     i1l6622:	
  4317                           	line	542
  4318                           	
  4319  032D                     i1l10277:	
  4320  032D  0836               	movf	(sprintf@c),w
  4321  032E  3A25               	xorlw	025h
  4322  032F  1903               	skipnz
  4323  0330  2B32               	goto	u381_21
  4324  0331  2B33               	goto	u381_20
  4325  0332                     u381_21:
  4326  0332  2B3F               	goto	i1l6623
  4327  0333                     u381_20:
  4328                           	line	545
  4329                           	
  4330  0333                     i1l10279:	
  4331  0333  0836               	movf	(sprintf@c),w
  4332  0334  00AB               	movwf	(??_sprintf+0)+0
  4333  0335  0835               	movf	(sprintf@sp),w
  4334  0336  0084               	movwf	fsr0
  4335  0337  082B               	movf	(??_sprintf+0)+0,w
  4336  0338  1383               	bcf	status, 7	;select IRP bank0
  4337  0339  0080               	movwf	indf
  4338                           	
  4339  033A                     i1l10281:	
  4340  033A  3001               	movlw	(01h)
  4341  033B  00AB               	movwf	(??_sprintf+0)+0
  4342  033C  082B               	movf	(??_sprintf+0)+0,w
  4343  033D  07B5               	addwf	(sprintf@sp),f
  4344                           	line	546
  4345  033E  2C0B               	goto	i1l10327
  4346                           	line	547
  4347                           	
  4348  033F                     i1l6623:	
  4349                           	line	552
  4350  033F  01AF               	clrf	(sprintf@flag)
  4351                           	line	638
  4352  0340  2B46               	goto	i1l10285
  4353                           	line	640
  4354                           	
  4355  0341                     i1l6625:	
  4356                           	line	641
  4357  0341  2C1F               	goto	i1l10329
  4358                           	line	700
  4359                           	
  4360  0342                     i1l6627:	
  4361  0342  2B5B               	goto	i1l10287
  4362                           	line	701
  4363                           	
  4364  0343                     i1l6628:	
  4365                           	line	702
  4366  0343  2B5B               	goto	i1l10287
  4367                           	line	805
  4368                           	
  4369  0344                     i1l6630:	
  4370                           	line	816
  4371  0344  2C0B               	goto	i1l10327
  4372                           	line	825
  4373                           	
  4374  0345                     i1l10283:	
  4375  0345  2B5B               	goto	i1l10287
  4376                           	line	638
  4377                           	
  4378  0346                     i1l6624:	
  4379                           	
  4380  0346                     i1l10285:	
  4381  0346  3001               	movlw	01h
  4382  0347  07A6               	addwf	(sprintf@f),f
  4383  0348  30FF               	movlw	-01h
  4384  0349  0726               	addwf	(sprintf@f),w
  4385  034A  0084               	movwf	fsr0
  4386  034B  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4387  0350  00B6               	movwf	(sprintf@c)
  4388                           	; Switch size 1, requested type "space"
  4389                           ; Number of cases is 3, Range of values is 0 to 105
  4390                           ; switch strategies available:
  4391                           ; Name         Instructions Cycles
  4392                           ; simple_byte           10     6 (average)
  4393                           ; jumptable            260     6 (fixed)
  4394                           ; rangetable           110     6 (fixed)
  4395                           ; spacedrange          218     9 (fixed)
  4396                           ; locatedrange         106     3 (fixed)
  4397                           ;	Chosen strategy is simple_byte
  4398                           
  4399                           	opt asmopt_off
  4400  0351  3A00               	xorlw	0^0	; case 0
  4401  0352  1903               	skipnz
  4402  0353  2C1F               	goto	i1l10329
  4403  0354  3A64               	xorlw	100^0	; case 100
  4404  0355  1903               	skipnz
  4405  0356  2B5B               	goto	i1l10287
  4406  0357  3A0D               	xorlw	105^100	; case 105
  4407  0358  1903               	skipnz
  4408  0359  2B5B               	goto	i1l10287
  4409  035A  2C0B               	goto	i1l10327
  4410                           	opt asmopt_on
  4411                           
  4412                           	line	825
  4413                           	
  4414  035B                     i1l6629:	
  4415                           	line	1254
  4416                           	
  4417  035B                     i1l10287:	
  4418  035B  082E               	movf	(sprintf@ap),w
  4419  035C  0084               	movwf	fsr0
  4420  035D  1383               	bcf	status, 7	;select IRP bank0
  4421  035E  0800               	movf	indf,w
  4422  035F  00B1               	movwf	(sprintf@_val)
  4423  0360  0A84               	incf	fsr0,f
  4424  0361  0800               	movf	indf,w
  4425  0362  00B2               	movwf	(sprintf@_val+1)
  4426                           	
  4427  0363                     i1l10289:	
  4428  0363  3002               	movlw	(02h)
  4429  0364  00AB               	movwf	(??_sprintf+0)+0
  4430  0365  082B               	movf	(??_sprintf+0)+0,w
  4431  0366  07AE               	addwf	(sprintf@ap),f
  4432                           	line	1256
  4433                           	
  4434  0367                     i1l10291:	
  4435  0367  1FB2               	btfss	(sprintf@_val+1),7
  4436  0368  2B6A               	goto	u382_21
  4437  0369  2B6B               	goto	u382_20
  4438  036A                     u382_21:
  4439  036A  2B75               	goto	i1l10297
  4440  036B                     u382_20:
  4441                           	line	1257
  4442                           	
  4443  036B                     i1l10293:	
  4444  036B  3003               	movlw	(03h)
  4445  036C  00AB               	movwf	(??_sprintf+0)+0
  4446  036D  082B               	movf	(??_sprintf+0)+0,w
  4447  036E  04AF               	iorwf	(sprintf@flag),f
  4448                           	line	1258
  4449                           	
  4450  036F                     i1l10295:	
  4451  036F  09B1               	comf	(sprintf@_val),f
  4452  0370  09B2               	comf	(sprintf@_val+1),f
  4453  0371  0AB1               	incf	(sprintf@_val),f
  4454  0372  1903               	skipnz
  4455  0373  0AB2               	incf	(sprintf@_val+1),f
  4456  0374  2B75               	goto	i1l10297
  4457                           	line	1259
  4458                           	
  4459  0375                     i1l6631:	
  4460                           	line	1300
  4461                           	
  4462  0375                     i1l10297:	
  4463  0375  01B6               	clrf	(sprintf@c)
  4464  0376  1403               	bsf	status,0
  4465  0377  0DB6               	rlf	(sprintf@c),f
  4466                           	
  4467  0378                     i1l10299:	
  4468  0378  0836               	movf	(sprintf@c),w
  4469  0379  3A05               	xorlw	05h
  4470  037A  1D03               	skipz
  4471  037B  2B7D               	goto	u383_21
  4472  037C  2B7E               	goto	u383_20
  4473  037D                     u383_21:
  4474  037D  2B80               	goto	i1l10303
  4475  037E                     u383_20:
  4476  037E  2BA8               	goto	i1l10311
  4477                           	
  4478  037F                     i1l10301:	
  4479  037F  2BA8               	goto	i1l10311
  4480                           	line	1301
  4481                           	
  4482  0380                     i1l6632:	
  4483                           	
  4484  0380                     i1l10303:	
  4485  0380  0836               	movf	(sprintf@c),w
  4486  0381  00AB               	movwf	(??_sprintf+0)+0
  4487  0382  072B               	addwf	(??_sprintf+0)+0,w
  4488  0383  3E01               	addlw	low((_dpowers-__stringbase))
  4489  0384  0084               	movwf	fsr0
  4490  0385  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4491  038A  00AC               	movwf	(??_sprintf+1)+0
  4492  038B  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4493  0390  00AD               	movwf	(??_sprintf+1)+0+1
  4494  0391  082D               	movf	1+(??_sprintf+1)+0,w
  4495  0392  0232               	subwf	(sprintf@_val+1),w
  4496  0393  1D03               	skipz
  4497  0394  2B97               	goto	u384_25
  4498  0395  082C               	movf	0+(??_sprintf+1)+0,w
  4499  0396  0231               	subwf	(sprintf@_val),w
  4500  0397                     u384_25:
  4501  0397  1803               	skipnc
  4502  0398  2B9A               	goto	u384_21
  4503  0399  2B9B               	goto	u384_20
  4504  039A                     u384_21:
  4505  039A  2B9D               	goto	i1l10307
  4506  039B                     u384_20:
  4507  039B  2BA8               	goto	i1l10311
  4508                           	line	1302
  4509                           	
  4510  039C                     i1l10305:	
  4511  039C  2BA8               	goto	i1l10311
  4512                           	
  4513  039D                     i1l6634:	
  4514                           	line	1300
  4515                           	
  4516  039D                     i1l10307:	
  4517  039D  3001               	movlw	(01h)
  4518  039E  00AB               	movwf	(??_sprintf+0)+0
  4519  039F  082B               	movf	(??_sprintf+0)+0,w
  4520  03A0  07B6               	addwf	(sprintf@c),f
  4521                           	
  4522  03A1                     i1l10309:	
  4523  03A1  0836               	movf	(sprintf@c),w
  4524  03A2  3A05               	xorlw	05h
  4525  03A3  1D03               	skipz
  4526  03A4  2BA6               	goto	u385_21
  4527  03A5  2BA7               	goto	u385_20
  4528  03A6                     u385_21:
  4529  03A6  2B80               	goto	i1l10303
  4530  03A7                     u385_20:
  4531  03A7  2BA8               	goto	i1l10311
  4532                           	
  4533  03A8                     i1l6633:	
  4534                           	line	1433
  4535                           	
  4536  03A8                     i1l10311:	
  4537  03A8  082F               	movf	(sprintf@flag),w
  4538  03A9  3903               	andlw	03h
  4539  03AA  1903               	btfsc	status,2
  4540  03AB  2BAD               	goto	u386_21
  4541  03AC  2BAE               	goto	u386_20
  4542  03AD                     u386_21:
  4543  03AD  2BBA               	goto	i1l10317
  4544  03AE                     u386_20:
  4545                           	line	1434
  4546                           	
  4547  03AE                     i1l10313:	
  4548  03AE  302D               	movlw	(02Dh)
  4549  03AF  00AB               	movwf	(??_sprintf+0)+0
  4550  03B0  0835               	movf	(sprintf@sp),w
  4551  03B1  0084               	movwf	fsr0
  4552  03B2  082B               	movf	(??_sprintf+0)+0,w
  4553  03B3  1383               	bcf	status, 7	;select IRP bank0
  4554  03B4  0080               	movwf	indf
  4555                           	
  4556  03B5                     i1l10315:	
  4557  03B5  3001               	movlw	(01h)
  4558  03B6  00AB               	movwf	(??_sprintf+0)+0
  4559  03B7  082B               	movf	(??_sprintf+0)+0,w
  4560  03B8  07B5               	addwf	(sprintf@sp),f
  4561  03B9  2BBA               	goto	i1l10317
  4562                           	
  4563  03BA                     i1l6635:	
  4564                           	line	1467
  4565                           	
  4566  03BA                     i1l10317:	
  4567  03BA  0836               	movf	(sprintf@c),w
  4568  03BB  00AB               	movwf	(??_sprintf+0)+0
  4569  03BC  082B               	movf	(??_sprintf+0)+0,w
  4570  03BD  00B0               	movwf	(sprintf@prec)
  4571                           	line	1469
  4572  03BE  2BFF               	goto	i1l10325
  4573                           	
  4574  03BF                     i1l6637:	
  4575                           	line	1484
  4576                           	
  4577  03BF                     i1l10319:	
  4578  03BF  300A               	movlw	low(0Ah)
  4579  03C0  00A0               	movwf	(?___lwmod)
  4580  03C1  3000               	movlw	high(0Ah)
  4581  03C2  00A1               	movwf	((?___lwmod))+1
  4582  03C3  0830               	movf	(sprintf@prec),w
  4583  03C4  00AB               	movwf	(??_sprintf+0)+0
  4584  03C5  072B               	addwf	(??_sprintf+0)+0,w
  4585  03C6  3E01               	addlw	low((_dpowers-__stringbase))
  4586  03C7  0084               	movwf	fsr0
  4587  03C8  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4588  03CD  00F6               	movwf	(?___lwdiv)
  4589  03CE  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4590  03D3  00F7               	movwf	(?___lwdiv+1)
  4591  03D4  0832               	movf	(sprintf@_val+1),w
  4592  03D5  01F9               	clrf	1+(?___lwdiv)+02h
  4593  03D6  07F9               	addwf	1+(?___lwdiv)+02h
  4594  03D7  0831               	movf	(sprintf@_val),w
  4595  03D8  01F8               	clrf	0+(?___lwdiv)+02h
  4596  03D9  07F8               	addwf	0+(?___lwdiv)+02h
  4597                           
  4598  03DA  120A  158A  275D   	fcall	___lwdiv
              120A  118A         
  4599  03DF  0877               	movf	(1+(?___lwdiv)),w
  4600  03E0  1283               	bcf	status, 5	;RP0=0, select bank0
  4601  03E1  1303               	bcf	status, 6	;RP1=0, select bank0
  4602  03E2  01A3               	clrf	1+(?___lwmod)+02h
  4603  03E3  07A3               	addwf	1+(?___lwmod)+02h
  4604  03E4  0876               	movf	(0+(?___lwdiv)),w
  4605  03E5  01A2               	clrf	0+(?___lwmod)+02h
  4606  03E6  07A2               	addwf	0+(?___lwmod)+02h
  4607                           
  4608  03E7  120A  158A  2683   	fcall	___lwmod
              120A  118A         
  4609  03EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4610  03ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4611  03EE  0820               	movf	(0+(?___lwmod)),w
  4612  03EF  3E30               	addlw	030h
  4613  03F0  00AC               	movwf	(??_sprintf+1)+0
  4614  03F1  082C               	movf	(??_sprintf+1)+0,w
  4615  03F2  00B6               	movwf	(sprintf@c)
  4616                           	line	1516
  4617                           	
  4618  03F3                     i1l10321:	
  4619  03F3  0836               	movf	(sprintf@c),w
  4620  03F4  00AB               	movwf	(??_sprintf+0)+0
  4621  03F5  0835               	movf	(sprintf@sp),w
  4622  03F6  0084               	movwf	fsr0
  4623  03F7  082B               	movf	(??_sprintf+0)+0,w
  4624  03F8  1383               	bcf	status, 7	;select IRP bank0
  4625  03F9  0080               	movwf	indf
  4626                           	
  4627  03FA                     i1l10323:	
  4628  03FA  3001               	movlw	(01h)
  4629  03FB  00AB               	movwf	(??_sprintf+0)+0
  4630  03FC  082B               	movf	(??_sprintf+0)+0,w
  4631  03FD  07B5               	addwf	(sprintf@sp),f
  4632  03FE  2BFF               	goto	i1l10325
  4633                           	line	1517
  4634                           	
  4635  03FF                     i1l6636:	
  4636                           	line	1469
  4637                           	
  4638  03FF                     i1l10325:	
  4639  03FF  30FF               	movlw	(-1)
  4640  0400  00AB               	movwf	(??_sprintf+0)+0
  4641  0401  082B               	movf	(??_sprintf+0)+0,w
  4642  0402  07B0               	addwf	(sprintf@prec),f
  4643  0403  0830               	movf	((sprintf@prec)),w
  4644  0404  3AFF               	xorlw	-1
  4645  0405  1D03               	skipz
  4646  0406  2C08               	goto	u387_21
  4647  0407  2C09               	goto	u387_20
  4648  0408                     u387_21:
  4649  0408  2BBF               	goto	i1l10319
  4650  0409                     u387_20:
  4651  0409  2C0B               	goto	i1l10327
  4652                           	
  4653  040A                     i1l6638:	
  4654  040A  2C0B               	goto	i1l10327
  4655                           	line	1525
  4656                           	
  4657  040B                     i1l6621:	
  4658                           	line	540
  4659                           	
  4660  040B                     i1l10327:	
  4661  040B  3001               	movlw	01h
  4662  040C  07A6               	addwf	(sprintf@f),f
  4663  040D  30FF               	movlw	-01h
  4664  040E  0726               	addwf	(sprintf@f),w
  4665  040F  0084               	movwf	fsr0
  4666  0410  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4667  0415  00AB               	movwf	(??_sprintf+0)+0
  4668  0416  082B               	movf	(??_sprintf+0)+0,w
  4669  0417  00B6               	movwf	(sprintf@c)
  4670  0418  08B6               	movf	((sprintf@c)),f
  4671  0419  1D03               	skipz
  4672  041A  2C1C               	goto	u388_21
  4673  041B  2C1D               	goto	u388_20
  4674  041C                     u388_21:
  4675  041C  2B2D               	goto	i1l10277
  4676  041D                     u388_20:
  4677  041D  2C1F               	goto	i1l10329
  4678                           	
  4679  041E                     i1l6639:	
  4680  041E  2C1F               	goto	i1l10329
  4681                           	line	1527
  4682                           	
  4683  041F                     i1l6626:	
  4684                           	line	1530
  4685                           	
  4686  041F                     i1l10329:	
  4687  041F  0835               	movf	(sprintf@sp),w
  4688  0420  0084               	movwf	fsr0
  4689  0421  1383               	bcf	status, 7	;select IRP bank0
  4690  0422  0180               	clrf	indf
  4691  0423  2C24               	goto	i1l6640
  4692                           	line	1532
  4693                           	
  4694  0424                     i1l10331:	
  4695                           	line	1533
  4696                           ;	Return value of _sprintf is never used
  4697                           	
  4698  0424                     i1l6640:	
  4699  0424  0008               	return
  4700                           	opt stack 0
  4701                           GLOBAL	__end_of_sprintf
  4702  0425                     	__end_of_sprintf:
  4703 ;; =============== function _sprintf ends ============
  4704                           
  4705                           	signat	_sprintf,4698
  4706                           	global	_ADCconvert
  4707                           psect	text652,local,class=CODE,delta=2
  4708                           global __ptext652
  4709  0015                     __ptext652:
  4710                           
  4711 ;; *************** function _ADCconvert *****************
  4712 ;; Defined at:
  4713 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;		None               void
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0, pclath, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4727 ;;      Params:         0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0
  4729 ;;      Temps:          0       2       0       0       0
  4730 ;;      Totals:         0       2       0       0       0
  4731 ;;Total ram usage:        2 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    1
  4734 ;; This function calls:
  4735 ;;		___wmul
  4736 ;;		___lwdiv
  4737 ;; This function is called by:
  4738 ;;		_readAvgDistance
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           psect	text652
  4742                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4743                           	line	33
  4744                           	global	__size_of_ADCconvert
  4745  01E5                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  4746                           	
  4747  0015                     _ADCconvert:	
  4748                           	opt	stack 1
  4749                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  4750                           	line	39
  4751                           	
  4752  0015                     i1l10091:	
  4753                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  4754  0015  3000               	movlw	high(0D5h)
  4755  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  4756  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  4757  0018  0254               	subwf	(_adcVal+1),w	;volatile
  4758  0019  30D5               	movlw	low(0D5h)
  4759  001A  1903               	skipnz
  4760  001B  0253               	subwf	(_adcVal),w	;volatile
  4761  001C  1C03               	skipc
  4762  001D  281F               	goto	u343_21
  4763  001E  2820               	goto	u343_20
  4764  001F                     u343_21:
  4765  001F  285B               	goto	i1l10097
  4766  0020                     u343_20:
  4767                           	
  4768  0020                     i1l10093:	
  4769  0020  3000               	movlw	high(0EAh)
  4770  0021  0254               	subwf	(_adcVal+1),w	;volatile
  4771  0022  30EA               	movlw	low(0EAh)
  4772  0023  1903               	skipnz
  4773  0024  0253               	subwf	(_adcVal),w	;volatile
  4774  0025  1803               	skipnc
  4775  0026  2828               	goto	u344_21
  4776  0027  2829               	goto	u344_20
  4777  0028                     u344_21:
  4778  0028  285B               	goto	i1l10097
  4779  0029                     u344_20:
  4780                           	line	41
  4781                           	
  4782  0029                     i1l10095:	
  4783                           ;infrared.c: 40: {
  4784                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  4785  0029  3015               	movlw	low(015h)
  4786  002A  00F6               	movwf	(?___lwdiv)
  4787  002B  3000               	movlw	high(015h)
  4788  002C  00F7               	movwf	((?___lwdiv))+1
  4789  002D  0953               	comf	(_adcVal),w	;volatile
  4790  002E  00A0               	movwf	(??_ADCconvert+0)+0
  4791  002F  0954               	comf	(_adcVal+1),w	;volatile
  4792  0030  00A1               	movwf	((??_ADCconvert+0)+0+1)
  4793  0031  0AA0               	incf	(??_ADCconvert+0)+0,f
  4794  0032  1903               	skipnz
  4795  0033  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  4796  0034  0820               	movf	0+(??_ADCconvert+0)+0,w
  4797  0035  3EEA               	addlw	low(0EAh)
  4798  0036  00F0               	movwf	(?___wmul)
  4799  0037  0821               	movf	1+(??_ADCconvert+0)+0,w
  4800  0038  1803               	skipnc
  4801  0039  3E01               	addlw	1
  4802  003A  3E00               	addlw	high(0EAh)
  4803  003B  00F1               	movwf	1+(?___wmul)
  4804  003C  3005               	movlw	low(05h)
  4805  003D  00F2               	movwf	0+(?___wmul)+02h
  4806  003E  3000               	movlw	high(05h)
  4807  003F  00F3               	movwf	(0+(?___wmul)+02h)+1
  4808  0040  120A  158A  25C3   	fcall	___wmul
              120A  118A         
  4809  0045  0871               	movf	(1+(?___wmul)),w
  4810  0046  01F9               	clrf	1+(?___lwdiv)+02h
  4811  0047  07F9               	addwf	1+(?___lwdiv)+02h
  4812  0048  0870               	movf	(0+(?___wmul)),w
  4813  0049  01F8               	clrf	0+(?___lwdiv)+02h
  4814  004A  07F8               	addwf	0+(?___lwdiv)+02h
  4815                           
  4816  004B  120A  158A  275D   	fcall	___lwdiv
              120A  118A         
  4817  0050  0876               	movf	(0+(?___lwdiv)),w
  4818  0051  3E0F               	addlw	low(0Fh)
  4819  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  4820  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  4821  0054  00D5               	movwf	(_distance)	;volatile
  4822  0055  0877               	movf	(1+(?___lwdiv)),w
  4823  0056  1803               	skipnc
  4824  0057  3E01               	addlw	1
  4825  0058  3E00               	addlw	high(0Fh)
  4826  0059  00D6               	movwf	1+(_distance)	;volatile
  4827                           	line	42
  4828                           ;infrared.c: 42: }
  4829  005A  29F9               	goto	i1l2929
  4830                           	line	43
  4831                           	
  4832  005B                     i1l2916:	
  4833                           	
  4834  005B                     i1l10097:	
  4835                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  4836  005B  3000               	movlw	high(0AAh)
  4837  005C  0254               	subwf	(_adcVal+1),w	;volatile
  4838  005D  30AA               	movlw	low(0AAh)
  4839  005E  1903               	skipnz
  4840  005F  0253               	subwf	(_adcVal),w	;volatile
  4841  0060  1C03               	skipc
  4842  0061  2863               	goto	u345_21
  4843  0062  2864               	goto	u345_20
  4844  0063                     u345_21:
  4845  0063  289F               	goto	i1l10103
  4846  0064                     u345_20:
  4847                           	
  4848  0064                     i1l10099:	
  4849  0064  3000               	movlw	high(0D5h)
  4850  0065  0254               	subwf	(_adcVal+1),w	;volatile
  4851  0066  30D5               	movlw	low(0D5h)
  4852  0067  1903               	skipnz
  4853  0068  0253               	subwf	(_adcVal),w	;volatile
  4854  0069  1803               	skipnc
  4855  006A  286C               	goto	u346_21
  4856  006B  286D               	goto	u346_20
  4857  006C                     u346_21:
  4858  006C  289F               	goto	i1l10103
  4859  006D                     u346_20:
  4860                           	line	45
  4861                           	
  4862  006D                     i1l10101:	
  4863                           ;infrared.c: 44: {
  4864                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  4865  006D  302B               	movlw	low(02Bh)
  4866  006E  00F6               	movwf	(?___lwdiv)
  4867  006F  3000               	movlw	high(02Bh)
  4868  0070  00F7               	movwf	((?___lwdiv))+1
  4869  0071  0953               	comf	(_adcVal),w	;volatile
  4870  0072  00A0               	movwf	(??_ADCconvert+0)+0
  4871  0073  0954               	comf	(_adcVal+1),w	;volatile
  4872  0074  00A1               	movwf	((??_ADCconvert+0)+0+1)
  4873  0075  0AA0               	incf	(??_ADCconvert+0)+0,f
  4874  0076  1903               	skipnz
  4875  0077  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  4876  0078  0820               	movf	0+(??_ADCconvert+0)+0,w
  4877  0079  3ED5               	addlw	low(0D5h)
  4878  007A  00F0               	movwf	(?___wmul)
  4879  007B  0821               	movf	1+(??_ADCconvert+0)+0,w
  4880  007C  1803               	skipnc
  4881  007D  3E01               	addlw	1
  4882  007E  3E00               	addlw	high(0D5h)
  4883  007F  00F1               	movwf	1+(?___wmul)
  4884  0080  300A               	movlw	low(0Ah)
  4885  0081  00F2               	movwf	0+(?___wmul)+02h
  4886  0082  3000               	movlw	high(0Ah)
  4887  0083  00F3               	movwf	(0+(?___wmul)+02h)+1
  4888  0084  120A  158A  25C3   	fcall	___wmul
              120A  118A         
  4889  0089  0871               	movf	(1+(?___wmul)),w
  4890  008A  01F9               	clrf	1+(?___lwdiv)+02h
  4891  008B  07F9               	addwf	1+(?___lwdiv)+02h
  4892  008C  0870               	movf	(0+(?___wmul)),w
  4893  008D  01F8               	clrf	0+(?___lwdiv)+02h
  4894  008E  07F8               	addwf	0+(?___lwdiv)+02h
  4895                           
  4896  008F  120A  158A  275D   	fcall	___lwdiv
              120A  118A         
  4897  0094  0876               	movf	(0+(?___lwdiv)),w
  4898  0095  3E14               	addlw	low(014h)
  4899  0096  1283               	bcf	status, 5	;RP0=0, select bank0
  4900  0097  1303               	bcf	status, 6	;RP1=0, select bank0
  4901  0098  00D5               	movwf	(_distance)	;volatile
  4902  0099  0877               	movf	(1+(?___lwdiv)),w
  4903  009A  1803               	skipnc
  4904  009B  3E01               	addlw	1
  4905  009C  3E00               	addlw	high(014h)
  4906  009D  00D6               	movwf	1+(_distance)	;volatile
  4907                           	line	46
  4908                           ;infrared.c: 46: }
  4909  009E  29F9               	goto	i1l2929
  4910                           	line	47
  4911                           	
  4912  009F                     i1l2918:	
  4913                           	
  4914  009F                     i1l10103:	
  4915                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  4916  009F  3000               	movlw	high(080h)
  4917  00A0  0254               	subwf	(_adcVal+1),w	;volatile
  4918  00A1  3080               	movlw	low(080h)
  4919  00A2  1903               	skipnz
  4920  00A3  0253               	subwf	(_adcVal),w	;volatile
  4921  00A4  1C03               	skipc
  4922  00A5  28A7               	goto	u347_21
  4923  00A6  28A8               	goto	u347_20
  4924  00A7                     u347_21:
  4925  00A7  28E3               	goto	i1l10109
  4926  00A8                     u347_20:
  4927                           	
  4928  00A8                     i1l10105:	
  4929  00A8  3000               	movlw	high(0AAh)
  4930  00A9  0254               	subwf	(_adcVal+1),w	;volatile
  4931  00AA  30AA               	movlw	low(0AAh)
  4932  00AB  1903               	skipnz
  4933  00AC  0253               	subwf	(_adcVal),w	;volatile
  4934  00AD  1803               	skipnc
  4935  00AE  28B0               	goto	u348_21
  4936  00AF  28B1               	goto	u348_20
  4937  00B0                     u348_21:
  4938  00B0  28E3               	goto	i1l10109
  4939  00B1                     u348_20:
  4940                           	line	49
  4941                           	
  4942  00B1                     i1l10107:	
  4943                           ;infrared.c: 48: {
  4944                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  4945  00B1  302A               	movlw	low(02Ah)
  4946  00B2  00F6               	movwf	(?___lwdiv)
  4947  00B3  3000               	movlw	high(02Ah)
  4948  00B4  00F7               	movwf	((?___lwdiv))+1
  4949  00B5  0953               	comf	(_adcVal),w	;volatile
  4950  00B6  00A0               	movwf	(??_ADCconvert+0)+0
  4951  00B7  0954               	comf	(_adcVal+1),w	;volatile
  4952  00B8  00A1               	movwf	((??_ADCconvert+0)+0+1)
  4953  00B9  0AA0               	incf	(??_ADCconvert+0)+0,f
  4954  00BA  1903               	skipnz
  4955  00BB  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  4956  00BC  0820               	movf	0+(??_ADCconvert+0)+0,w
  4957  00BD  3EAA               	addlw	low(0AAh)
  4958  00BE  00F0               	movwf	(?___wmul)
  4959  00BF  0821               	movf	1+(??_ADCconvert+0)+0,w
  4960  00C0  1803               	skipnc
  4961  00C1  3E01               	addlw	1
  4962  00C2  3E00               	addlw	high(0AAh)
  4963  00C3  00F1               	movwf	1+(?___wmul)
  4964  00C4  300A               	movlw	low(0Ah)
  4965  00C5  00F2               	movwf	0+(?___wmul)+02h
  4966  00C6  3000               	movlw	high(0Ah)
  4967  00C7  00F3               	movwf	(0+(?___wmul)+02h)+1
  4968  00C8  120A  158A  25C3   	fcall	___wmul
              120A  118A         
  4969  00CD  0871               	movf	(1+(?___wmul)),w
  4970  00CE  01F9               	clrf	1+(?___lwdiv)+02h
  4971  00CF  07F9               	addwf	1+(?___lwdiv)+02h
  4972  00D0  0870               	movf	(0+(?___wmul)),w
  4973  00D1  01F8               	clrf	0+(?___lwdiv)+02h
  4974  00D2  07F8               	addwf	0+(?___lwdiv)+02h
  4975                           
  4976  00D3  120A  158A  275D   	fcall	___lwdiv
              120A  118A         
  4977  00D8  0876               	movf	(0+(?___lwdiv)),w
  4978  00D9  3E1E               	addlw	low(01Eh)
  4979  00DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4980  00DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4981  00DC  00D5               	movwf	(_distance)	;volatile
  4982  00DD  0877               	movf	(1+(?___lwdiv)),w
  4983  00DE  1803               	skipnc
  4984  00DF  3E01               	addlw	1
  4985  00E0  3E00               	addlw	high(01Eh)
  4986  00E1  00D6               	movwf	1+(_distance)	;volatile
  4987                           	line	50
  4988                           ;infrared.c: 50: }
  4989  00E2  29F9               	goto	i1l2929
  4990                           	line	51
  4991                           	
  4992  00E3                     i1l2920:	
  4993                           	
  4994  00E3                     i1l10109:	
  4995                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  4996  00E3  3000               	movlw	high(06Bh)
  4997  00E4  0254               	subwf	(_adcVal+1),w	;volatile
  4998  00E5  306B               	movlw	low(06Bh)
  4999  00E6  1903               	skipnz
  5000  00E7  0253               	subwf	(_adcVal),w	;volatile
  5001  00E8  1C03               	skipc
  5002  00E9  28EB               	goto	u349_21
  5003  00EA  28EC               	goto	u349_20
  5004  00EB                     u349_21:
  5005  00EB  2927               	goto	i1l10115
  5006  00EC                     u349_20:
  5007                           	
  5008  00EC                     i1l10111:	
  5009  00EC  3000               	movlw	high(080h)
  5010  00ED  0254               	subwf	(_adcVal+1),w	;volatile
  5011  00EE  3080               	movlw	low(080h)
  5012  00EF  1903               	skipnz
  5013  00F0  0253               	subwf	(_adcVal),w	;volatile
  5014  00F1  1803               	skipnc
  5015  00F2  28F4               	goto	u350_21
  5016  00F3  28F5               	goto	u350_20
  5017  00F4                     u350_21:
  5018  00F4  2927               	goto	i1l10115
  5019  00F5                     u350_20:
  5020                           	line	53
  5021                           	
  5022  00F5                     i1l10113:	
  5023                           ;infrared.c: 52: {
  5024                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  5025  00F5  3015               	movlw	low(015h)
  5026  00F6  00F6               	movwf	(?___lwdiv)
  5027  00F7  3000               	movlw	high(015h)
  5028  00F8  00F7               	movwf	((?___lwdiv))+1
  5029  00F9  0953               	comf	(_adcVal),w	;volatile
  5030  00FA  00A0               	movwf	(??_ADCconvert+0)+0
  5031  00FB  0954               	comf	(_adcVal+1),w	;volatile
  5032  00FC  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5033  00FD  0AA0               	incf	(??_ADCconvert+0)+0,f
  5034  00FE  1903               	skipnz
  5035  00FF  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5036  0100  0820               	movf	0+(??_ADCconvert+0)+0,w
  5037  0101  3E80               	addlw	low(080h)
  5038  0102  00F0               	movwf	(?___wmul)
  5039  0103  0821               	movf	1+(??_ADCconvert+0)+0,w
  5040  0104  1803               	skipnc
  5041  0105  3E01               	addlw	1
  5042  0106  3E00               	addlw	high(080h)
  5043  0107  00F1               	movwf	1+(?___wmul)
  5044  0108  300A               	movlw	low(0Ah)
  5045  0109  00F2               	movwf	0+(?___wmul)+02h
  5046  010A  3000               	movlw	high(0Ah)
  5047  010B  00F3               	movwf	(0+(?___wmul)+02h)+1
  5048  010C  120A  158A  25C3   	fcall	___wmul
              120A  118A         
  5049  0111  0871               	movf	(1+(?___wmul)),w
  5050  0112  01F9               	clrf	1+(?___lwdiv)+02h
  5051  0113  07F9               	addwf	1+(?___lwdiv)+02h
  5052  0114  0870               	movf	(0+(?___wmul)),w
  5053  0115  01F8               	clrf	0+(?___lwdiv)+02h
  5054  0116  07F8               	addwf	0+(?___lwdiv)+02h
  5055                           
  5056  0117  120A  158A  275D   	fcall	___lwdiv
              120A  118A         
  5057  011C  0876               	movf	(0+(?___lwdiv)),w
  5058  011D  3E28               	addlw	low(028h)
  5059  011E  1283               	bcf	status, 5	;RP0=0, select bank0
  5060  011F  1303               	bcf	status, 6	;RP1=0, select bank0
  5061  0120  00D5               	movwf	(_distance)	;volatile
  5062  0121  0877               	movf	(1+(?___lwdiv)),w
  5063  0122  1803               	skipnc
  5064  0123  3E01               	addlw	1
  5065  0124  3E00               	addlw	high(028h)
  5066  0125  00D6               	movwf	1+(_distance)	;volatile
  5067                           	line	54
  5068                           ;infrared.c: 54: }
  5069  0126  29F9               	goto	i1l2929
  5070                           	line	55
  5071                           	
  5072  0127                     i1l2922:	
  5073                           	
  5074  0127                     i1l10115:	
  5075                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  5076  0127  3000               	movlw	high(04Dh)
  5077  0128  0254               	subwf	(_adcVal+1),w	;volatile
  5078  0129  304D               	movlw	low(04Dh)
  5079  012A  1903               	skipnz
  5080  012B  0253               	subwf	(_adcVal),w	;volatile
  5081  012C  1C03               	skipc
  5082  012D  292F               	goto	u351_21
  5083  012E  2930               	goto	u351_20
  5084  012F                     u351_21:
  5085  012F  296B               	goto	i1l10121
  5086  0130                     u351_20:
  5087                           	
  5088  0130                     i1l10117:	
  5089  0130  3000               	movlw	high(06Bh)
  5090  0131  0254               	subwf	(_adcVal+1),w	;volatile
  5091  0132  306B               	movlw	low(06Bh)
  5092  0133  1903               	skipnz
  5093  0134  0253               	subwf	(_adcVal),w	;volatile
  5094  0135  1803               	skipnc
  5095  0136  2938               	goto	u352_21
  5096  0137  2939               	goto	u352_20
  5097  0138                     u352_21:
  5098  0138  296B               	goto	i1l10121
  5099  0139                     u352_20:
  5100                           	line	57
  5101                           	
  5102  0139                     i1l10119:	
  5103                           ;infrared.c: 56: {
  5104                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  5105  0139  301E               	movlw	low(01Eh)
  5106  013A  00F6               	movwf	(?___lwdiv)
  5107  013B  3000               	movlw	high(01Eh)
  5108  013C  00F7               	movwf	((?___lwdiv))+1
  5109  013D  0953               	comf	(_adcVal),w	;volatile
  5110  013E  00A0               	movwf	(??_ADCconvert+0)+0
  5111  013F  0954               	comf	(_adcVal+1),w	;volatile
  5112  0140  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5113  0141  0AA0               	incf	(??_ADCconvert+0)+0,f
  5114  0142  1903               	skipnz
  5115  0143  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5116  0144  0820               	movf	0+(??_ADCconvert+0)+0,w
  5117  0145  3E6B               	addlw	low(06Bh)
  5118  0146  00F0               	movwf	(?___wmul)
  5119  0147  0821               	movf	1+(??_ADCconvert+0)+0,w
  5120  0148  1803               	skipnc
  5121  0149  3E01               	addlw	1
  5122  014A  3E00               	addlw	high(06Bh)
  5123  014B  00F1               	movwf	1+(?___wmul)
  5124  014C  300A               	movlw	low(0Ah)
  5125  014D  00F2               	movwf	0+(?___wmul)+02h
  5126  014E  3000               	movlw	high(0Ah)
  5127  014F  00F3               	movwf	(0+(?___wmul)+02h)+1
  5128  0150  120A  158A  25C3   	fcall	___wmul
              120A  118A         
  5129  0155  0871               	movf	(1+(?___wmul)),w
  5130  0156  01F9               	clrf	1+(?___lwdiv)+02h
  5131  0157  07F9               	addwf	1+(?___lwdiv)+02h
  5132  0158  0870               	movf	(0+(?___wmul)),w
  5133  0159  01F8               	clrf	0+(?___lwdiv)+02h
  5134  015A  07F8               	addwf	0+(?___lwdiv)+02h
  5135                           
  5136  015B  120A  158A  275D   	fcall	___lwdiv
              120A  118A         
  5137  0160  0876               	movf	(0+(?___lwdiv)),w
  5138  0161  3E32               	addlw	low(032h)
  5139  0162  1283               	bcf	status, 5	;RP0=0, select bank0
  5140  0163  1303               	bcf	status, 6	;RP1=0, select bank0
  5141  0164  00D5               	movwf	(_distance)	;volatile
  5142  0165  0877               	movf	(1+(?___lwdiv)),w
  5143  0166  1803               	skipnc
  5144  0167  3E01               	addlw	1
  5145  0168  3E00               	addlw	high(032h)
  5146  0169  00D6               	movwf	1+(_distance)	;volatile
  5147                           	line	58
  5148                           ;infrared.c: 58: }
  5149  016A  29F9               	goto	i1l2929
  5150                           	line	59
  5151                           	
  5152  016B                     i1l2924:	
  5153                           	
  5154  016B                     i1l10121:	
  5155                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  5156  016B  3000               	movlw	high(038h)
  5157  016C  0254               	subwf	(_adcVal+1),w	;volatile
  5158  016D  3038               	movlw	low(038h)
  5159  016E  1903               	skipnz
  5160  016F  0253               	subwf	(_adcVal),w	;volatile
  5161  0170  1C03               	skipc
  5162  0171  2973               	goto	u353_21
  5163  0172  2974               	goto	u353_20
  5164  0173                     u353_21:
  5165  0173  29AF               	goto	i1l10127
  5166  0174                     u353_20:
  5167                           	
  5168  0174                     i1l10123:	
  5169  0174  3000               	movlw	high(04Dh)
  5170  0175  0254               	subwf	(_adcVal+1),w	;volatile
  5171  0176  304D               	movlw	low(04Dh)
  5172  0177  1903               	skipnz
  5173  0178  0253               	subwf	(_adcVal),w	;volatile
  5174  0179  1803               	skipnc
  5175  017A  297C               	goto	u354_21
  5176  017B  297D               	goto	u354_20
  5177  017C                     u354_21:
  5178  017C  29AF               	goto	i1l10127
  5179  017D                     u354_20:
  5180                           	line	61
  5181                           	
  5182  017D                     i1l10125:	
  5183                           ;infrared.c: 60: {
  5184                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  5185  017D  3015               	movlw	low(015h)
  5186  017E  00F6               	movwf	(?___lwdiv)
  5187  017F  3000               	movlw	high(015h)
  5188  0180  00F7               	movwf	((?___lwdiv))+1
  5189  0181  0953               	comf	(_adcVal),w	;volatile
  5190  0182  00A0               	movwf	(??_ADCconvert+0)+0
  5191  0183  0954               	comf	(_adcVal+1),w	;volatile
  5192  0184  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5193  0185  0AA0               	incf	(??_ADCconvert+0)+0,f
  5194  0186  1903               	skipnz
  5195  0187  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5196  0188  0820               	movf	0+(??_ADCconvert+0)+0,w
  5197  0189  3E4D               	addlw	low(04Dh)
  5198  018A  00F0               	movwf	(?___wmul)
  5199  018B  0821               	movf	1+(??_ADCconvert+0)+0,w
  5200  018C  1803               	skipnc
  5201  018D  3E01               	addlw	1
  5202  018E  3E00               	addlw	high(04Dh)
  5203  018F  00F1               	movwf	1+(?___wmul)
  5204  0190  300A               	movlw	low(0Ah)
  5205  0191  00F2               	movwf	0+(?___wmul)+02h
  5206  0192  3000               	movlw	high(0Ah)
  5207  0193  00F3               	movwf	(0+(?___wmul)+02h)+1
  5208  0194  120A  158A  25C3   	fcall	___wmul
              120A  118A         
  5209  0199  0871               	movf	(1+(?___wmul)),w
  5210  019A  01F9               	clrf	1+(?___lwdiv)+02h
  5211  019B  07F9               	addwf	1+(?___lwdiv)+02h
  5212  019C  0870               	movf	(0+(?___wmul)),w
  5213  019D  01F8               	clrf	0+(?___lwdiv)+02h
  5214  019E  07F8               	addwf	0+(?___lwdiv)+02h
  5215                           
  5216  019F  120A  158A  275D   	fcall	___lwdiv
              120A  118A         
  5217  01A4  0876               	movf	(0+(?___lwdiv)),w
  5218  01A5  3E3C               	addlw	low(03Ch)
  5219  01A6  1283               	bcf	status, 5	;RP0=0, select bank0
  5220  01A7  1303               	bcf	status, 6	;RP1=0, select bank0
  5221  01A8  00D5               	movwf	(_distance)	;volatile
  5222  01A9  0877               	movf	(1+(?___lwdiv)),w
  5223  01AA  1803               	skipnc
  5224  01AB  3E01               	addlw	1
  5225  01AC  3E00               	addlw	high(03Ch)
  5226  01AD  00D6               	movwf	1+(_distance)	;volatile
  5227                           	line	62
  5228                           ;infrared.c: 62: }
  5229  01AE  29F9               	goto	i1l2929
  5230                           	line	63
  5231                           	
  5232  01AF                     i1l2926:	
  5233                           	
  5234  01AF                     i1l10127:	
  5235                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  5236  01AF  3000               	movlw	high(02Bh)
  5237  01B0  0254               	subwf	(_adcVal+1),w	;volatile
  5238  01B1  302B               	movlw	low(02Bh)
  5239  01B2  1903               	skipnz
  5240  01B3  0253               	subwf	(_adcVal),w	;volatile
  5241  01B4  1C03               	skipc
  5242  01B5  29B7               	goto	u355_21
  5243  01B6  29B8               	goto	u355_20
  5244  01B7                     u355_21:
  5245  01B7  29F9               	goto	i1l2929
  5246  01B8                     u355_20:
  5247                           	
  5248  01B8                     i1l10129:	
  5249  01B8  3000               	movlw	high(038h)
  5250  01B9  0254               	subwf	(_adcVal+1),w	;volatile
  5251  01BA  3038               	movlw	low(038h)
  5252  01BB  1903               	skipnz
  5253  01BC  0253               	subwf	(_adcVal),w	;volatile
  5254  01BD  1803               	skipnc
  5255  01BE  29C0               	goto	u356_21
  5256  01BF  29C1               	goto	u356_20
  5257  01C0                     u356_21:
  5258  01C0  29F9               	goto	i1l2929
  5259  01C1                     u356_20:
  5260                           	line	65
  5261                           	
  5262  01C1                     i1l10131:	
  5263                           ;infrared.c: 64: {
  5264                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  5265  01C1  300D               	movlw	low(0Dh)
  5266  01C2  00F6               	movwf	(?___lwdiv)
  5267  01C3  3000               	movlw	high(0Dh)
  5268  01C4  00F7               	movwf	((?___lwdiv))+1
  5269  01C5  0953               	comf	(_adcVal),w	;volatile
  5270  01C6  00A0               	movwf	(??_ADCconvert+0)+0
  5271  01C7  0954               	comf	(_adcVal+1),w	;volatile
  5272  01C8  00A1               	movwf	((??_ADCconvert+0)+0+1)
  5273  01C9  0AA0               	incf	(??_ADCconvert+0)+0,f
  5274  01CA  1903               	skipnz
  5275  01CB  0AA1               	incf	((??_ADCconvert+0)+0+1),f
  5276  01CC  0820               	movf	0+(??_ADCconvert+0)+0,w
  5277  01CD  3E38               	addlw	low(038h)
  5278  01CE  00F0               	movwf	(?___wmul)
  5279  01CF  0821               	movf	1+(??_ADCconvert+0)+0,w
  5280  01D0  1803               	skipnc
  5281  01D1  3E01               	addlw	1
  5282  01D2  3E00               	addlw	high(038h)
  5283  01D3  00F1               	movwf	1+(?___wmul)
  5284  01D4  300A               	movlw	low(0Ah)
  5285  01D5  00F2               	movwf	0+(?___wmul)+02h
  5286  01D6  3000               	movlw	high(0Ah)
  5287  01D7  00F3               	movwf	(0+(?___wmul)+02h)+1
  5288  01D8  120A  158A  25C3   	fcall	___wmul
              120A  118A         
  5289  01DD  0871               	movf	(1+(?___wmul)),w
  5290  01DE  01F9               	clrf	1+(?___lwdiv)+02h
  5291  01DF  07F9               	addwf	1+(?___lwdiv)+02h
  5292  01E0  0870               	movf	(0+(?___wmul)),w
  5293  01E1  01F8               	clrf	0+(?___lwdiv)+02h
  5294  01E2  07F8               	addwf	0+(?___lwdiv)+02h
  5295                           
  5296  01E3  120A  158A  275D   	fcall	___lwdiv
              120A  118A         
  5297  01E8  0876               	movf	(0+(?___lwdiv)),w
  5298  01E9  3E46               	addlw	low(046h)
  5299  01EA  1283               	bcf	status, 5	;RP0=0, select bank0
  5300  01EB  1303               	bcf	status, 6	;RP1=0, select bank0
  5301  01EC  00D5               	movwf	(_distance)	;volatile
  5302  01ED  0877               	movf	(1+(?___lwdiv)),w
  5303  01EE  1803               	skipnc
  5304  01EF  3E01               	addlw	1
  5305  01F0  3E00               	addlw	high(046h)
  5306  01F1  00D6               	movwf	1+(_distance)	;volatile
  5307  01F2  29F9               	goto	i1l2929
  5308                           	line	66
  5309                           	
  5310  01F3                     i1l2928:	
  5311  01F3  29F9               	goto	i1l2929
  5312                           	line	67
  5313                           	
  5314  01F4                     i1l2927:	
  5315  01F4  29F9               	goto	i1l2929
  5316                           	
  5317  01F5                     i1l2925:	
  5318  01F5  29F9               	goto	i1l2929
  5319                           	
  5320  01F6                     i1l2923:	
  5321  01F6  29F9               	goto	i1l2929
  5322                           	
  5323  01F7                     i1l2921:	
  5324  01F7  29F9               	goto	i1l2929
  5325                           	
  5326  01F8                     i1l2919:	
  5327  01F8  29F9               	goto	i1l2929
  5328                           	
  5329  01F9                     i1l2917:	
  5330                           	
  5331  01F9                     i1l2929:	
  5332  01F9  0008               	return
  5333                           	opt stack 0
  5334                           GLOBAL	__end_of_ADCconvert
  5335  01FA                     	__end_of_ADCconvert:
  5336 ;; =============== function _ADCconvert ends ============
  5337                           
  5338                           	signat	_ADCconvert,88
  5339                           	global	_ReadButtons
  5340                           psect	text653,local,class=CODE,delta=2
  5341                           global __ptext653
  5342  06CA                     __ptext653:
  5343                           
  5344 ;; *************** function _ReadButtons *****************
  5345 ;; Defined at:
  5346 ;;		line 144 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      unsigned char 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5360 ;;      Params:         0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0
  5363 ;;      Totals:         0       0       0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    1
  5367 ;; This function calls:
  5368 ;;		_Debounce
  5369 ;; This function is called by:
  5370 ;;		_isr1
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           psect	text653
  5374                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  5375                           	line	144
  5376                           	global	__size_of_ReadButtons
  5377  0032                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  5378                           	
  5379  06CA                     _ReadButtons:	
  5380                           	opt	stack 2
  5381                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  5382                           	line	145
  5383                           	
  5384  06CA                     i1l10021:	
  5385                           ;HMI.c: 145: Debounce();
  5386  06CA  120A  118A  264E   	fcall	_Debounce
              120A  118A         
  5387                           	line	147
  5388                           	
  5389  06CF                     i1l10023:	
  5390                           ;HMI.c: 147: if(UpPressed)
  5391  06CF  1283               	bcf	status, 5	;RP0=0, select bank0
  5392  06D0  1303               	bcf	status, 6	;RP1=0, select bank0
  5393  06D1  1EE9               	btfss	(_UpPressed/8),(_UpPressed)&7
  5394  06D2  2ED4               	goto	u336_21
  5395  06D3  2ED5               	goto	u336_20
  5396  06D4                     u336_21:
  5397  06D4  2ED9               	goto	i1l5157
  5398  06D5                     u336_20:
  5399                           	line	149
  5400                           	
  5401  06D5                     i1l10025:	
  5402                           ;HMI.c: 148: {
  5403                           ;HMI.c: 149: UpPressed = 0;
  5404  06D5  12E9               	bcf	(_UpPressed/8),(_UpPressed)&7
  5405                           	line	150
  5406                           	
  5407  06D6                     i1l10027:	
  5408                           ;HMI.c: 150: return 1;
  5409  06D6  3001               	movlw	(01h)
  5410  06D7  2EFB               	goto	i1l5158
  5411                           	
  5412  06D8                     i1l10029:	
  5413  06D8  2EFB               	goto	i1l5158
  5414                           	line	152
  5415                           	
  5416  06D9                     i1l5157:	
  5417                           	line	154
  5418                           ;HMI.c: 152: }
  5419                           ;HMI.c: 154: if(DownPressed)
  5420  06D9  1D68               	btfss	(_DownPressed/8),(_DownPressed)&7
  5421  06DA  2EDC               	goto	u337_21
  5422  06DB  2EDD               	goto	u337_20
  5423  06DC                     u337_21:
  5424  06DC  2EE1               	goto	i1l5159
  5425  06DD                     u337_20:
  5426                           	line	156
  5427                           	
  5428  06DD                     i1l10031:	
  5429                           ;HMI.c: 155: {
  5430                           ;HMI.c: 156: DownPressed = 0;
  5431  06DD  1168               	bcf	(_DownPressed/8),(_DownPressed)&7
  5432                           	line	157
  5433                           	
  5434  06DE                     i1l10033:	
  5435                           ;HMI.c: 157: return 2;
  5436  06DE  3002               	movlw	(02h)
  5437  06DF  2EFB               	goto	i1l5158
  5438                           	
  5439  06E0                     i1l10035:	
  5440  06E0  2EFB               	goto	i1l5158
  5441                           	line	159
  5442                           	
  5443  06E1                     i1l5159:	
  5444                           	line	160
  5445                           ;HMI.c: 159: }
  5446                           ;HMI.c: 160: if(LeftPressed)
  5447  06E1  1E68               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  5448  06E2  2EE4               	goto	u338_21
  5449  06E3  2EE5               	goto	u338_20
  5450  06E4                     u338_21:
  5451  06E4  2EE9               	goto	i1l5160
  5452  06E5                     u338_20:
  5453                           	line	162
  5454                           	
  5455  06E5                     i1l10037:	
  5456                           ;HMI.c: 161: {
  5457                           ;HMI.c: 162: LeftPressed = 0;
  5458  06E5  1268               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  5459                           	line	163
  5460                           	
  5461  06E6                     i1l10039:	
  5462                           ;HMI.c: 163: return 3;
  5463  06E6  3003               	movlw	(03h)
  5464  06E7  2EFB               	goto	i1l5158
  5465                           	
  5466  06E8                     i1l10041:	
  5467  06E8  2EFB               	goto	i1l5158
  5468                           	line	165
  5469                           	
  5470  06E9                     i1l5160:	
  5471                           	line	166
  5472                           ;HMI.c: 165: }
  5473                           ;HMI.c: 166: if(RightPressed)
  5474  06E9  1DE9               	btfss	(_RightPressed/8),(_RightPressed)&7
  5475  06EA  2EEC               	goto	u339_21
  5476  06EB  2EED               	goto	u339_20
  5477  06EC                     u339_21:
  5478  06EC  2EF1               	goto	i1l5161
  5479  06ED                     u339_20:
  5480                           	line	168
  5481                           	
  5482  06ED                     i1l10043:	
  5483                           ;HMI.c: 167: {
  5484                           ;HMI.c: 168: RightPressed = 0;
  5485  06ED  11E9               	bcf	(_RightPressed/8),(_RightPressed)&7
  5486                           	line	169
  5487                           	
  5488  06EE                     i1l10045:	
  5489                           ;HMI.c: 169: return 4;
  5490  06EE  3004               	movlw	(04h)
  5491  06EF  2EFB               	goto	i1l5158
  5492                           	
  5493  06F0                     i1l10047:	
  5494  06F0  2EFB               	goto	i1l5158
  5495                           	line	171
  5496                           	
  5497  06F1                     i1l5161:	
  5498                           	line	173
  5499                           ;HMI.c: 171: }
  5500                           ;HMI.c: 173: if(CenterPressed)
  5501  06F1  1C68               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  5502  06F2  2EF4               	goto	u340_21
  5503  06F3  2EF5               	goto	u340_20
  5504  06F4                     u340_21:
  5505  06F4  2EF9               	goto	i1l10055
  5506  06F5                     u340_20:
  5507                           	line	175
  5508                           	
  5509  06F5                     i1l10049:	
  5510                           ;HMI.c: 174: {
  5511                           ;HMI.c: 175: CenterPressed = 0;
  5512  06F5  1068               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  5513                           	line	176
  5514                           	
  5515  06F6                     i1l10051:	
  5516                           ;HMI.c: 176: return 5;
  5517  06F6  3005               	movlw	(05h)
  5518  06F7  2EFB               	goto	i1l5158
  5519                           	
  5520  06F8                     i1l10053:	
  5521  06F8  2EFB               	goto	i1l5158
  5522                           	line	178
  5523                           	
  5524  06F9                     i1l5162:	
  5525                           	line	179
  5526                           	
  5527  06F9                     i1l10055:	
  5528                           ;HMI.c: 178: }
  5529                           ;HMI.c: 179: return 0;
  5530  06F9  3000               	movlw	(0)
  5531  06FA  2EFB               	goto	i1l5158
  5532                           	
  5533  06FB                     i1l10057:	
  5534                           	line	180
  5535                           	
  5536  06FB                     i1l5158:	
  5537  06FB  0008               	return
  5538                           	opt stack 0
  5539                           GLOBAL	__end_of_ReadButtons
  5540  06FC                     	__end_of_ReadButtons:
  5541 ;; =============== function _ReadButtons ends ============
  5542                           
  5543                           	signat	_ReadButtons,89
  5544                           	global	_lcd_write_data
  5545                           psect	text654,local,class=CODE,delta=2
  5546                           global __ptext654
  5547  0D0A                     __ptext654:
  5548                           
  5549 ;; *************** function _lcd_write_data *****************
  5550 ;; Defined at:
  5551 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  databyte        1    wreg     unsigned char 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  databyte        1    2[COMMON] unsigned char 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;		None               void
  5558 ;; Registers used:
  5559 ;;		wreg
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5565 ;;      Params:         0       0       0       0       0
  5566 ;;      Locals:         1       0       0       0       0
  5567 ;;      Temps:          2       0       0       0       0
  5568 ;;      Totals:         3       0       0       0       0
  5569 ;;Total ram usage:        3 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_lcd_write_string
  5575 ;;		_lcd_write_2_digit_bcd
  5576 ;;		_lcd_write_3_digit_bcd
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           psect	text654
  5580                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5581                           	line	30
  5582                           	global	__size_of_lcd_write_data
  5583  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  5584                           	
  5585  0D0A                     _lcd_write_data:	
  5586                           	opt	stack 1
  5587                           ; Regs used in _lcd_write_data: [wreg]
  5588                           ;lcd_write_data@databyte stored from wreg
  5589  0D0A  00F2               	movwf	(lcd_write_data@databyte)
  5590                           	line	31
  5591                           	
  5592  0D0B                     i1l9879:	
  5593                           ;lcd.c: 31: RE2 = 0;
  5594  0D0B  1283               	bcf	status, 5	;RP0=0, select bank0
  5595  0D0C  1303               	bcf	status, 6	;RP1=0, select bank0
  5596  0D0D  1109               	bcf	(74/8),(74)&7
  5597                           	line	32
  5598                           ;lcd.c: 32: RE1 = 0;
  5599  0D0E  1089               	bcf	(73/8),(73)&7
  5600                           	line	33
  5601                           ;lcd.c: 33: RE0 = 1;
  5602  0D0F  1409               	bsf	(72/8),(72)&7
  5603                           	line	34
  5604                           	
  5605  0D10                     i1l9881:	
  5606                           ;lcd.c: 34: PORTD = databyte;
  5607  0D10  0872               	movf	(lcd_write_data@databyte),w
  5608  0D11  0088               	movwf	(8)	;volatile
  5609                           	line	35
  5610                           	
  5611  0D12                     i1l9883:	
  5612                           ;lcd.c: 35: RE2 = 1;
  5613  0D12  1509               	bsf	(74/8),(74)&7
  5614                           	line	36
  5615                           	
  5616  0D13                     i1l9885:	
  5617                           ;lcd.c: 36: RE2 = 0;
  5618  0D13  1109               	bcf	(74/8),(74)&7
  5619                           	line	37
  5620                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  5621                           	opt asmopt_off
  5622  0D14  3007               movlw	7
  5623  0D15  00F1               movwf	((??_lcd_write_data+0)+0+1),f
  5624  0D16  307D               	movlw	125
  5625  0D17  00F0               movwf	((??_lcd_write_data+0)+0),f
  5626  0D18                     u423_27:
  5627  0D18  0BF0               	decfsz	((??_lcd_write_data+0)+0),f
  5628  0D19  2D18               	goto	u423_27
  5629  0D1A  0BF1               	decfsz	((??_lcd_write_data+0)+0+1),f
  5630  0D1B  2D18               	goto	u423_27
  5631                           opt asmopt_on
  5632                           
  5633                           	line	38
  5634                           	
  5635  0D1C                     i1l1396:	
  5636  0D1C  0008               	return
  5637                           	opt stack 0
  5638                           GLOBAL	__end_of_lcd_write_data
  5639  0D1D                     	__end_of_lcd_write_data:
  5640 ;; =============== function _lcd_write_data ends ============
  5641                           
  5642                           	signat	_lcd_write_data,4216
  5643                           	global	_adc_read_channel
  5644                           psect	text655,local,class=CODE,delta=2
  5645                           global __ptext655
  5646  0E42                     __ptext655:
  5647                           
  5648 ;; *************** function _adc_read_channel *****************
  5649 ;; Defined at:
  5650 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  channel         1    wreg     unsigned char 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  channel         1    7[COMMON] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      unsigned char 
  5657 ;; Registers used:
  5658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5664 ;;      Params:         0       0       0       0       0
  5665 ;;      Locals:         1       0       0       0       0
  5666 ;;      Temps:          1       0       0       0       0
  5667 ;;      Totals:         2       0       0       0       0
  5668 ;;Total ram usage:        2 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    1
  5671 ;; This function calls:
  5672 ;;		_adc_read
  5673 ;; This function is called by:
  5674 ;;		_readDistance
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           psect	text655
  5678                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  5679                           	line	5
  5680                           	global	__size_of_adc_read_channel
  5681  0041                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  5682                           	
  5683  0E42                     _adc_read_channel:	
  5684                           	opt	stack 0
  5685                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5686                           ;adc_read_channel@channel stored from wreg
  5687  0E42  00F7               	movwf	(adc_read_channel@channel)
  5688                           	line	6
  5689                           	
  5690  0E43                     i1l9853:	
  5691                           ;adc.c: 6: switch(channel)
  5692  0E43  2E66               	goto	i1l9861
  5693                           	line	8
  5694                           ;adc.c: 7: {
  5695                           ;adc.c: 8: case 0:
  5696                           	
  5697  0E44                     i1l690:	
  5698                           	line	9
  5699                           ;adc.c: 9: CHS0 = 0;
  5700  0E44  1283               	bcf	status, 5	;RP0=0, select bank0
  5701  0E45  1303               	bcf	status, 6	;RP1=0, select bank0
  5702  0E46  119F               	bcf	(251/8),(251)&7
  5703                           	line	10
  5704                           ;adc.c: 10: CHS1 = 0;
  5705  0E47  121F               	bcf	(252/8),(252)&7
  5706                           	line	11
  5707                           ;adc.c: 11: CHS2 = 0;
  5708  0E48  129F               	bcf	(253/8),(253)&7
  5709                           	line	12
  5710                           ;adc.c: 12: break;
  5711  0E49  2E77               	goto	i1l9863
  5712                           	line	13
  5713                           ;adc.c: 13: case 1:
  5714                           	
  5715  0E4A                     i1l692:	
  5716                           	line	14
  5717                           ;adc.c: 14: CHS0 = 1;
  5718  0E4A  1283               	bcf	status, 5	;RP0=0, select bank0
  5719  0E4B  1303               	bcf	status, 6	;RP1=0, select bank0
  5720  0E4C  159F               	bsf	(251/8),(251)&7
  5721                           	line	15
  5722                           ;adc.c: 15: CHS1 = 0;
  5723  0E4D  121F               	bcf	(252/8),(252)&7
  5724                           	line	16
  5725                           ;adc.c: 16: CHS2 = 0;
  5726  0E4E  129F               	bcf	(253/8),(253)&7
  5727                           	line	17
  5728                           ;adc.c: 17: break;
  5729  0E4F  2E77               	goto	i1l9863
  5730                           	line	18
  5731                           ;adc.c: 18: case 2:
  5732                           	
  5733  0E50                     i1l693:	
  5734                           	line	19
  5735                           ;adc.c: 19: CHS0 = 0;
  5736  0E50  1283               	bcf	status, 5	;RP0=0, select bank0
  5737  0E51  1303               	bcf	status, 6	;RP1=0, select bank0
  5738  0E52  119F               	bcf	(251/8),(251)&7
  5739                           	line	20
  5740                           ;adc.c: 20: CHS1 = 1;
  5741  0E53  161F               	bsf	(252/8),(252)&7
  5742                           	line	21
  5743                           ;adc.c: 21: CHS2 = 0;
  5744  0E54  129F               	bcf	(253/8),(253)&7
  5745                           	line	22
  5746                           ;adc.c: 22: break;
  5747  0E55  2E77               	goto	i1l9863
  5748                           	line	23
  5749                           ;adc.c: 23: case 3:
  5750                           	
  5751  0E56                     i1l694:	
  5752                           	line	24
  5753                           ;adc.c: 24: CHS0 = 1;
  5754  0E56  1283               	bcf	status, 5	;RP0=0, select bank0
  5755  0E57  1303               	bcf	status, 6	;RP1=0, select bank0
  5756  0E58  159F               	bsf	(251/8),(251)&7
  5757                           	line	25
  5758                           ;adc.c: 25: CHS1 = 1;
  5759  0E59  161F               	bsf	(252/8),(252)&7
  5760                           	line	26
  5761                           ;adc.c: 26: CHS2 = 0;
  5762  0E5A  129F               	bcf	(253/8),(253)&7
  5763                           	line	27
  5764                           ;adc.c: 27: break;
  5765  0E5B  2E77               	goto	i1l9863
  5766                           	line	28
  5767                           ;adc.c: 28: case 4:
  5768                           	
  5769  0E5C                     i1l695:	
  5770                           	line	29
  5771                           ;adc.c: 29: CHS0 = 0;
  5772  0E5C  1283               	bcf	status, 5	;RP0=0, select bank0
  5773  0E5D  1303               	bcf	status, 6	;RP1=0, select bank0
  5774  0E5E  119F               	bcf	(251/8),(251)&7
  5775                           	line	30
  5776                           ;adc.c: 30: CHS1 = 0;
  5777  0E5F  121F               	bcf	(252/8),(252)&7
  5778                           	line	31
  5779                           ;adc.c: 31: CHS2 = 1;
  5780  0E60  169F               	bsf	(253/8),(253)&7
  5781                           	line	32
  5782                           ;adc.c: 32: break;
  5783  0E61  2E77               	goto	i1l9863
  5784                           	line	35
  5785                           ;adc.c: 35: default:
  5786                           	
  5787  0E62                     i1l696:	
  5788                           	line	36
  5789                           	
  5790  0E62                     i1l9855:	
  5791                           ;adc.c: 36: return 0;
  5792  0E62  3000               	movlw	(0)
  5793  0E63  2E82               	goto	i1l697
  5794                           	
  5795  0E64                     i1l9857:	
  5796  0E64  2E82               	goto	i1l697
  5797                           	line	37
  5798                           	
  5799  0E65                     i1l9859:	
  5800                           ;adc.c: 37: }
  5801  0E65  2E77               	goto	i1l9863
  5802                           	line	6
  5803                           	
  5804  0E66                     i1l689:	
  5805                           	
  5806  0E66                     i1l9861:	
  5807  0E66  0877               	movf	(adc_read_channel@channel),w
  5808                           	; Switch size 1, requested type "space"
  5809                           ; Number of cases is 5, Range of values is 0 to 4
  5810                           ; switch strategies available:
  5811                           ; Name         Instructions Cycles
  5812                           ; simple_byte           16     9 (average)
  5813                           ; direct_byte           23     8 (fixed)
  5814                           ; jumptable            260     6 (fixed)
  5815                           ; rangetable             9     6 (fixed)
  5816                           ; spacedrange           16     9 (fixed)
  5817                           ; locatedrange           5     3 (fixed)
  5818                           ;	Chosen strategy is simple_byte
  5819                           
  5820                           	opt asmopt_off
  5821  0E67  3A00               	xorlw	0^0	; case 0
  5822  0E68  1903               	skipnz
  5823  0E69  2E44               	goto	i1l690
  5824  0E6A  3A01               	xorlw	1^0	; case 1
  5825  0E6B  1903               	skipnz
  5826  0E6C  2E4A               	goto	i1l692
  5827  0E6D  3A03               	xorlw	2^1	; case 2
  5828  0E6E  1903               	skipnz
  5829  0E6F  2E50               	goto	i1l693
  5830  0E70  3A01               	xorlw	3^2	; case 3
  5831  0E71  1903               	skipnz
  5832  0E72  2E56               	goto	i1l694
  5833  0E73  3A07               	xorlw	4^3	; case 4
  5834  0E74  1903               	skipnz
  5835  0E75  2E5C               	goto	i1l695
  5836  0E76  2E62               	goto	i1l9855
  5837                           	opt asmopt_on
  5838                           
  5839                           	line	37
  5840                           	
  5841  0E77                     i1l691:	
  5842                           	line	39
  5843                           	
  5844  0E77                     i1l9863:	
  5845                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  5846                           	opt asmopt_off
  5847  0E77  3053               movlw	83
  5848  0E78  00F6               movwf	(??_adc_read_channel+0)+0,f
  5849  0E79                     u424_27:
  5850  0E79  0BF6               decfsz	(??_adc_read_channel+0)+0,f
  5851  0E7A  2E79               	goto	u424_27
  5852                           opt asmopt_on
  5853                           
  5854                           	line	41
  5855                           	
  5856  0E7B                     i1l9865:	
  5857                           ;adc.c: 41: return adc_read();
  5858  0E7B  120A  158A  259C   	fcall	_adc_read
              120A  158A         
  5859  0E80  0870               	movf	(0+(?_adc_read)),w
  5860  0E81  2E82               	goto	i1l697
  5861                           	
  5862  0E82                     i1l9867:	
  5863                           	line	43
  5864                           	
  5865  0E82                     i1l697:	
  5866  0E82  0008               	return
  5867                           	opt stack 0
  5868                           GLOBAL	__end_of_adc_read_channel
  5869  0E83                     	__end_of_adc_read_channel:
  5870 ;; =============== function _adc_read_channel ends ============
  5871                           
  5872                           	signat	_adc_read_channel,4217
  5873                           	global	___awmod
  5874                           psect	text656,local,class=CODE,delta=2
  5875                           global __ptext656
  5876  0769                     __ptext656:
  5877                           
  5878 ;; *************** function ___awmod *****************
  5879 ;; Defined at:
  5880 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  divisor         2    0[COMMON] int 
  5883 ;;  dividend        2    2[COMMON] int 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  sign            1    6[COMMON] unsigned char 
  5886 ;;  counter         1    5[COMMON] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  2    0[COMMON] int 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5896 ;;      Params:         4       0       0       0       0
  5897 ;;      Locals:         2       0       0       0       0
  5898 ;;      Temps:          1       0       0       0       0
  5899 ;;      Totals:         7       0       0       0       0
  5900 ;;Total ram usage:        7 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; This function calls:
  5903 ;;		Nothing
  5904 ;; This function is called by:
  5905 ;;		_UpdateDisplay
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           psect	text656
  5909                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5910                           	line	5
  5911                           	global	__size_of___awmod
  5912  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  5913                           	
  5914  0769                     ___awmod:	
  5915                           	opt	stack 2
  5916                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5917                           	line	8
  5918                           	
  5919  0769                     i1l10427:	
  5920  0769  01F6               	clrf	(___awmod@sign)
  5921                           	line	9
  5922  076A  1FF3               	btfss	(___awmod@dividend+1),7
  5923  076B  2F6D               	goto	u406_21
  5924  076C  2F6E               	goto	u406_20
  5925  076D                     u406_21:
  5926  076D  2F77               	goto	i1l10431
  5927  076E                     u406_20:
  5928                           	line	10
  5929                           	
  5930  076E                     i1l10429:	
  5931  076E  09F2               	comf	(___awmod@dividend),f
  5932  076F  09F3               	comf	(___awmod@dividend+1),f
  5933  0770  0AF2               	incf	(___awmod@dividend),f
  5934  0771  1903               	skipnz
  5935  0772  0AF3               	incf	(___awmod@dividend+1),f
  5936                           	line	11
  5937  0773  01F6               	clrf	(___awmod@sign)
  5938  0774  1403               	bsf	status,0
  5939  0775  0DF6               	rlf	(___awmod@sign),f
  5940  0776  2F77               	goto	i1l10431
  5941                           	line	12
  5942                           	
  5943  0777                     i1l7531:	
  5944                           	line	13
  5945                           	
  5946  0777                     i1l10431:	
  5947  0777  1FF1               	btfss	(___awmod@divisor+1),7
  5948  0778  2F7A               	goto	u407_21
  5949  0779  2F7B               	goto	u407_20
  5950  077A                     u407_21:
  5951  077A  2F81               	goto	i1l10435
  5952  077B                     u407_20:
  5953                           	line	14
  5954                           	
  5955  077B                     i1l10433:	
  5956  077B  09F0               	comf	(___awmod@divisor),f
  5957  077C  09F1               	comf	(___awmod@divisor+1),f
  5958  077D  0AF0               	incf	(___awmod@divisor),f
  5959  077E  1903               	skipnz
  5960  077F  0AF1               	incf	(___awmod@divisor+1),f
  5961  0780  2F81               	goto	i1l10435
  5962                           	
  5963  0781                     i1l7532:	
  5964                           	line	15
  5965                           	
  5966  0781                     i1l10435:	
  5967  0781  0871               	movf	(___awmod@divisor+1),w
  5968  0782  0470               	iorwf	(___awmod@divisor),w
  5969  0783  1903               	skipnz
  5970  0784  2F86               	goto	u408_21
  5971  0785  2F87               	goto	u408_20
  5972  0786                     u408_21:
  5973  0786  2FBD               	goto	i1l10453
  5974  0787                     u408_20:
  5975                           	line	16
  5976                           	
  5977  0787                     i1l10437:	
  5978  0787  01F5               	clrf	(___awmod@counter)
  5979  0788  1403               	bsf	status,0
  5980  0789  0DF5               	rlf	(___awmod@counter),f
  5981                           	line	17
  5982  078A  2F97               	goto	i1l10443
  5983                           	
  5984  078B                     i1l7535:	
  5985                           	line	18
  5986                           	
  5987  078B                     i1l10439:	
  5988  078B  3001               	movlw	01h
  5989                           	
  5990  078C                     u409_25:
  5991  078C  1003               	clrc
  5992  078D  0DF0               	rlf	(___awmod@divisor),f
  5993  078E  0DF1               	rlf	(___awmod@divisor+1),f
  5994  078F  3EFF               	addlw	-1
  5995  0790  1D03               	skipz
  5996  0791  2F8C               	goto	u409_25
  5997                           	line	19
  5998                           	
  5999  0792                     i1l10441:	
  6000  0792  3001               	movlw	(01h)
  6001  0793  00F4               	movwf	(??___awmod+0)+0
  6002  0794  0874               	movf	(??___awmod+0)+0,w
  6003  0795  07F5               	addwf	(___awmod@counter),f
  6004  0796  2F97               	goto	i1l10443
  6005                           	line	20
  6006                           	
  6007  0797                     i1l7534:	
  6008                           	line	17
  6009                           	
  6010  0797                     i1l10443:	
  6011  0797  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  6012  0798  2F9A               	goto	u410_21
  6013  0799  2F9B               	goto	u410_20
  6014  079A                     u410_21:
  6015  079A  2F8B               	goto	i1l10439
  6016  079B                     u410_20:
  6017  079B  2F9D               	goto	i1l10445
  6018                           	
  6019  079C                     i1l7536:	
  6020  079C  2F9D               	goto	i1l10445
  6021                           	line	21
  6022                           	
  6023  079D                     i1l7537:	
  6024                           	line	22
  6025                           	
  6026  079D                     i1l10445:	
  6027  079D  0871               	movf	(___awmod@divisor+1),w
  6028  079E  0273               	subwf	(___awmod@dividend+1),w
  6029  079F  1D03               	skipz
  6030  07A0  2FA3               	goto	u411_25
  6031  07A1  0870               	movf	(___awmod@divisor),w
  6032  07A2  0272               	subwf	(___awmod@dividend),w
  6033  07A3                     u411_25:
  6034  07A3  1C03               	skipc
  6035  07A4  2FA6               	goto	u411_21
  6036  07A5  2FA7               	goto	u411_20
  6037  07A6                     u411_21:
  6038  07A6  2FAE               	goto	i1l10449
  6039  07A7                     u411_20:
  6040                           	line	23
  6041                           	
  6042  07A7                     i1l10447:	
  6043  07A7  0870               	movf	(___awmod@divisor),w
  6044  07A8  02F2               	subwf	(___awmod@dividend),f
  6045  07A9  0871               	movf	(___awmod@divisor+1),w
  6046  07AA  1C03               	skipc
  6047  07AB  03F3               	decf	(___awmod@dividend+1),f
  6048  07AC  02F3               	subwf	(___awmod@dividend+1),f
  6049  07AD  2FAE               	goto	i1l10449
  6050                           	
  6051  07AE                     i1l7538:	
  6052                           	line	24
  6053                           	
  6054  07AE                     i1l10449:	
  6055  07AE  3001               	movlw	01h
  6056                           	
  6057  07AF                     u412_25:
  6058  07AF  1003               	clrc
  6059  07B0  0CF1               	rrf	(___awmod@divisor+1),f
  6060  07B1  0CF0               	rrf	(___awmod@divisor),f
  6061  07B2  3EFF               	addlw	-1
  6062  07B3  1D03               	skipz
  6063  07B4  2FAF               	goto	u412_25
  6064                           	line	25
  6065                           	
  6066  07B5                     i1l10451:	
  6067  07B5  3001               	movlw	low(01h)
  6068  07B6  02F5               	subwf	(___awmod@counter),f
  6069  07B7  1D03               	btfss	status,2
  6070  07B8  2FBA               	goto	u413_21
  6071  07B9  2FBB               	goto	u413_20
  6072  07BA                     u413_21:
  6073  07BA  2F9D               	goto	i1l10445
  6074  07BB                     u413_20:
  6075  07BB  2FBD               	goto	i1l10453
  6076                           	
  6077  07BC                     i1l7539:	
  6078  07BC  2FBD               	goto	i1l10453
  6079                           	line	26
  6080                           	
  6081  07BD                     i1l7533:	
  6082                           	line	27
  6083                           	
  6084  07BD                     i1l10453:	
  6085  07BD  0876               	movf	(___awmod@sign),w
  6086  07BE  1D03               	skipz
  6087  07BF  2FC1               	goto	u414_20
  6088  07C0  2FC7               	goto	i1l10457
  6089  07C1                     u414_20:
  6090                           	line	28
  6091                           	
  6092  07C1                     i1l10455:	
  6093  07C1  09F2               	comf	(___awmod@dividend),f
  6094  07C2  09F3               	comf	(___awmod@dividend+1),f
  6095  07C3  0AF2               	incf	(___awmod@dividend),f
  6096  07C4  1903               	skipnz
  6097  07C5  0AF3               	incf	(___awmod@dividend+1),f
  6098  07C6  2FC7               	goto	i1l10457
  6099                           	
  6100  07C7                     i1l7540:	
  6101                           	line	29
  6102                           	
  6103  07C7                     i1l10457:	
  6104  07C7  0873               	movf	(___awmod@dividend+1),w
  6105  07C8  01F1               	clrf	(?___awmod+1)
  6106  07C9  07F1               	addwf	(?___awmod+1)
  6107  07CA  0872               	movf	(___awmod@dividend),w
  6108  07CB  01F0               	clrf	(?___awmod)
  6109  07CC  07F0               	addwf	(?___awmod)
  6110                           
  6111  07CD  2FCE               	goto	i1l7541
  6112                           	
  6113  07CE                     i1l10459:	
  6114                           	line	30
  6115                           	
  6116  07CE                     i1l7541:	
  6117  07CE  0008               	return
  6118                           	opt stack 0
  6119                           GLOBAL	__end_of___awmod
  6120  07CF                     	__end_of___awmod:
  6121 ;; =============== function ___awmod ends ============
  6122                           
  6123                           	signat	___awmod,8314
  6124                           	global	___lwmod
  6125                           psect	text657,local,class=CODE,delta=2
  6126                           global __ptext657
  6127  0E83                     __ptext657:
  6128                           
  6129 ;; *************** function ___lwmod *****************
  6130 ;; Defined at:
  6131 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  divisor         2    0[BANK0 ] unsigned int 
  6134 ;;  dividend        2    2[BANK0 ] unsigned int 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  counter         1    5[BANK0 ] unsigned char 
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  2    0[BANK0 ] unsigned int 
  6139 ;; Registers used:
  6140 ;;		wreg, status,2, status,0
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6146 ;;      Params:         0       4       0       0       0
  6147 ;;      Locals:         0       1       0       0       0
  6148 ;;      Temps:          0       1       0       0       0
  6149 ;;      Totals:         0       6       0       0       0
  6150 ;;Total ram usage:        6 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_isr1
  6156 ;;		_sprintf
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           psect	text657
  6160                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6161                           	line	5
  6162                           	global	__size_of___lwmod
  6163  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6164                           	
  6165  0E83                     ___lwmod:	
  6166                           	opt	stack 1
  6167                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6168                           	line	8
  6169                           	
  6170  0E83                     i1l10405:	
  6171  0E83  1283               	bcf	status, 5	;RP0=0, select bank0
  6172  0E84  1303               	bcf	status, 6	;RP1=0, select bank0
  6173  0E85  0821               	movf	(___lwmod@divisor+1),w
  6174  0E86  0420               	iorwf	(___lwmod@divisor),w
  6175  0E87  1903               	skipnz
  6176  0E88  2E8A               	goto	u400_21
  6177  0E89  2E8B               	goto	u400_20
  6178  0E8A                     u400_21:
  6179  0E8A  2EC1               	goto	i1l10423
  6180  0E8B                     u400_20:
  6181                           	line	9
  6182                           	
  6183  0E8B                     i1l10407:	
  6184  0E8B  01A5               	clrf	(___lwmod@counter)
  6185  0E8C  1403               	bsf	status,0
  6186  0E8D  0DA5               	rlf	(___lwmod@counter),f
  6187                           	line	10
  6188  0E8E  2E9B               	goto	i1l10413
  6189                           	
  6190  0E8F                     i1l7341:	
  6191                           	line	11
  6192                           	
  6193  0E8F                     i1l10409:	
  6194  0E8F  3001               	movlw	01h
  6195                           	
  6196  0E90                     u401_25:
  6197  0E90  1003               	clrc
  6198  0E91  0DA0               	rlf	(___lwmod@divisor),f
  6199  0E92  0DA1               	rlf	(___lwmod@divisor+1),f
  6200  0E93  3EFF               	addlw	-1
  6201  0E94  1D03               	skipz
  6202  0E95  2E90               	goto	u401_25
  6203                           	line	12
  6204                           	
  6205  0E96                     i1l10411:	
  6206  0E96  3001               	movlw	(01h)
  6207  0E97  00A4               	movwf	(??___lwmod+0)+0
  6208  0E98  0824               	movf	(??___lwmod+0)+0,w
  6209  0E99  07A5               	addwf	(___lwmod@counter),f
  6210  0E9A  2E9B               	goto	i1l10413
  6211                           	line	13
  6212                           	
  6213  0E9B                     i1l7340:	
  6214                           	line	10
  6215                           	
  6216  0E9B                     i1l10413:	
  6217  0E9B  1FA1               	btfss	(___lwmod@divisor+1),(15)&7
  6218  0E9C  2E9E               	goto	u402_21
  6219  0E9D  2E9F               	goto	u402_20
  6220  0E9E                     u402_21:
  6221  0E9E  2E8F               	goto	i1l10409
  6222  0E9F                     u402_20:
  6223  0E9F  2EA1               	goto	i1l10415
  6224                           	
  6225  0EA0                     i1l7342:	
  6226  0EA0  2EA1               	goto	i1l10415
  6227                           	line	14
  6228                           	
  6229  0EA1                     i1l7343:	
  6230                           	line	15
  6231                           	
  6232  0EA1                     i1l10415:	
  6233  0EA1  0821               	movf	(___lwmod@divisor+1),w
  6234  0EA2  0223               	subwf	(___lwmod@dividend+1),w
  6235  0EA3  1D03               	skipz
  6236  0EA4  2EA7               	goto	u403_25
  6237  0EA5  0820               	movf	(___lwmod@divisor),w
  6238  0EA6  0222               	subwf	(___lwmod@dividend),w
  6239  0EA7                     u403_25:
  6240  0EA7  1C03               	skipc
  6241  0EA8  2EAA               	goto	u403_21
  6242  0EA9  2EAB               	goto	u403_20
  6243  0EAA                     u403_21:
  6244  0EAA  2EB2               	goto	i1l10419
  6245  0EAB                     u403_20:
  6246                           	line	16
  6247                           	
  6248  0EAB                     i1l10417:	
  6249  0EAB  0820               	movf	(___lwmod@divisor),w
  6250  0EAC  02A2               	subwf	(___lwmod@dividend),f
  6251  0EAD  0821               	movf	(___lwmod@divisor+1),w
  6252  0EAE  1C03               	skipc
  6253  0EAF  03A3               	decf	(___lwmod@dividend+1),f
  6254  0EB0  02A3               	subwf	(___lwmod@dividend+1),f
  6255  0EB1  2EB2               	goto	i1l10419
  6256                           	
  6257  0EB2                     i1l7344:	
  6258                           	line	17
  6259                           	
  6260  0EB2                     i1l10419:	
  6261  0EB2  3001               	movlw	01h
  6262                           	
  6263  0EB3                     u404_25:
  6264  0EB3  1003               	clrc
  6265  0EB4  0CA1               	rrf	(___lwmod@divisor+1),f
  6266  0EB5  0CA0               	rrf	(___lwmod@divisor),f
  6267  0EB6  3EFF               	addlw	-1
  6268  0EB7  1D03               	skipz
  6269  0EB8  2EB3               	goto	u404_25
  6270                           	line	18
  6271                           	
  6272  0EB9                     i1l10421:	
  6273  0EB9  3001               	movlw	low(01h)
  6274  0EBA  02A5               	subwf	(___lwmod@counter),f
  6275  0EBB  1D03               	btfss	status,2
  6276  0EBC  2EBE               	goto	u405_21
  6277  0EBD  2EBF               	goto	u405_20
  6278  0EBE                     u405_21:
  6279  0EBE  2EA1               	goto	i1l10415
  6280  0EBF                     u405_20:
  6281  0EBF  2EC1               	goto	i1l10423
  6282                           	
  6283  0EC0                     i1l7345:	
  6284  0EC0  2EC1               	goto	i1l10423
  6285                           	line	19
  6286                           	
  6287  0EC1                     i1l7339:	
  6288                           	line	20
  6289                           	
  6290  0EC1                     i1l10423:	
  6291  0EC1  0823               	movf	(___lwmod@dividend+1),w
  6292  0EC2  01A1               	clrf	(?___lwmod+1)
  6293  0EC3  07A1               	addwf	(?___lwmod+1)
  6294  0EC4  0822               	movf	(___lwmod@dividend),w
  6295  0EC5  01A0               	clrf	(?___lwmod)
  6296  0EC6  07A0               	addwf	(?___lwmod)
  6297                           
  6298  0EC7  2EC8               	goto	i1l7346
  6299                           	
  6300  0EC8                     i1l10425:	
  6301                           	line	21
  6302                           	
  6303  0EC8                     i1l7346:	
  6304  0EC8  0008               	return
  6305                           	opt stack 0
  6306                           GLOBAL	__end_of___lwmod
  6307  0EC9                     	__end_of___lwmod:
  6308 ;; =============== function ___lwmod ends ============
  6309                           
  6310                           	signat	___lwmod,8314
  6311                           	global	___lwdiv
  6312                           psect	text658,local,class=CODE,delta=2
  6313                           global __ptext658
  6314  0F5D                     __ptext658:
  6315                           
  6316 ;; *************** function ___lwdiv *****************
  6317 ;; Defined at:
  6318 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  divisor         2    6[COMMON] unsigned int 
  6321 ;;  dividend        2    8[COMMON] unsigned int 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  quotient        2   11[COMMON] unsigned int 
  6324 ;;  counter         1   13[COMMON] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  2    6[COMMON] unsigned int 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6334 ;;      Params:         4       0       0       0       0
  6335 ;;      Locals:         3       0       0       0       0
  6336 ;;      Temps:          1       0       0       0       0
  6337 ;;      Totals:         8       0       0       0       0
  6338 ;;Total ram usage:        8 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_readAvgDistance
  6344 ;;		_ADCconvert
  6345 ;;		_sprintf
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           psect	text658
  6349                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6350                           	line	5
  6351                           	global	__size_of___lwdiv
  6352  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6353                           	
  6354  0F5D                     ___lwdiv:	
  6355                           	opt	stack 1
  6356                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6357                           	line	9
  6358                           	
  6359  0F5D                     i1l10379:	
  6360  0F5D  01FB               	clrf	(___lwdiv@quotient)
  6361  0F5E  01FC               	clrf	(___lwdiv@quotient+1)
  6362                           	line	10
  6363                           	
  6364  0F5F                     i1l10381:	
  6365  0F5F  0877               	movf	(___lwdiv@divisor+1),w
  6366  0F60  0476               	iorwf	(___lwdiv@divisor),w
  6367  0F61  1903               	skipnz
  6368  0F62  2F64               	goto	u393_21
  6369  0F63  2F65               	goto	u393_20
  6370  0F64                     u393_21:
  6371  0F64  2FA3               	goto	i1l10401
  6372  0F65                     u393_20:
  6373                           	line	11
  6374                           	
  6375  0F65                     i1l10383:	
  6376  0F65  01FD               	clrf	(___lwdiv@counter)
  6377  0F66  1403               	bsf	status,0
  6378  0F67  0DFD               	rlf	(___lwdiv@counter),f
  6379                           	line	12
  6380  0F68  2F75               	goto	i1l10389
  6381                           	
  6382  0F69                     i1l7331:	
  6383                           	line	13
  6384                           	
  6385  0F69                     i1l10385:	
  6386  0F69  3001               	movlw	01h
  6387                           	
  6388  0F6A                     u394_25:
  6389  0F6A  1003               	clrc
  6390  0F6B  0DF6               	rlf	(___lwdiv@divisor),f
  6391  0F6C  0DF7               	rlf	(___lwdiv@divisor+1),f
  6392  0F6D  3EFF               	addlw	-1
  6393  0F6E  1D03               	skipz
  6394  0F6F  2F6A               	goto	u394_25
  6395                           	line	14
  6396                           	
  6397  0F70                     i1l10387:	
  6398  0F70  3001               	movlw	(01h)
  6399  0F71  00FA               	movwf	(??___lwdiv+0)+0
  6400  0F72  087A               	movf	(??___lwdiv+0)+0,w
  6401  0F73  07FD               	addwf	(___lwdiv@counter),f
  6402  0F74  2F75               	goto	i1l10389
  6403                           	line	15
  6404                           	
  6405  0F75                     i1l7330:	
  6406                           	line	12
  6407                           	
  6408  0F75                     i1l10389:	
  6409  0F75  1FF7               	btfss	(___lwdiv@divisor+1),(15)&7
  6410  0F76  2F78               	goto	u395_21
  6411  0F77  2F79               	goto	u395_20
  6412  0F78                     u395_21:
  6413  0F78  2F69               	goto	i1l10385
  6414  0F79                     u395_20:
  6415  0F79  2F7B               	goto	i1l10391
  6416                           	
  6417  0F7A                     i1l7332:	
  6418  0F7A  2F7B               	goto	i1l10391
  6419                           	line	16
  6420                           	
  6421  0F7B                     i1l7333:	
  6422                           	line	17
  6423                           	
  6424  0F7B                     i1l10391:	
  6425  0F7B  3001               	movlw	01h
  6426                           	
  6427  0F7C                     u396_25:
  6428  0F7C  1003               	clrc
  6429  0F7D  0DFB               	rlf	(___lwdiv@quotient),f
  6430  0F7E  0DFC               	rlf	(___lwdiv@quotient+1),f
  6431  0F7F  3EFF               	addlw	-1
  6432  0F80  1D03               	skipz
  6433  0F81  2F7C               	goto	u396_25
  6434                           	line	18
  6435  0F82  0877               	movf	(___lwdiv@divisor+1),w
  6436  0F83  0279               	subwf	(___lwdiv@dividend+1),w
  6437  0F84  1D03               	skipz
  6438  0F85  2F88               	goto	u397_25
  6439  0F86  0876               	movf	(___lwdiv@divisor),w
  6440  0F87  0278               	subwf	(___lwdiv@dividend),w
  6441  0F88                     u397_25:
  6442  0F88  1C03               	skipc
  6443  0F89  2F8B               	goto	u397_21
  6444  0F8A  2F8C               	goto	u397_20
  6445  0F8B                     u397_21:
  6446  0F8B  2F94               	goto	i1l10397
  6447  0F8C                     u397_20:
  6448                           	line	19
  6449                           	
  6450  0F8C                     i1l10393:	
  6451  0F8C  0876               	movf	(___lwdiv@divisor),w
  6452  0F8D  02F8               	subwf	(___lwdiv@dividend),f
  6453  0F8E  0877               	movf	(___lwdiv@divisor+1),w
  6454  0F8F  1C03               	skipc
  6455  0F90  03F9               	decf	(___lwdiv@dividend+1),f
  6456  0F91  02F9               	subwf	(___lwdiv@dividend+1),f
  6457                           	line	20
  6458                           	
  6459  0F92                     i1l10395:	
  6460  0F92  147B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  6461  0F93  2F94               	goto	i1l10397
  6462                           	line	21
  6463                           	
  6464  0F94                     i1l7334:	
  6465                           	line	22
  6466                           	
  6467  0F94                     i1l10397:	
  6468  0F94  3001               	movlw	01h
  6469                           	
  6470  0F95                     u398_25:
  6471  0F95  1003               	clrc
  6472  0F96  0CF7               	rrf	(___lwdiv@divisor+1),f
  6473  0F97  0CF6               	rrf	(___lwdiv@divisor),f
  6474  0F98  3EFF               	addlw	-1
  6475  0F99  1D03               	skipz
  6476  0F9A  2F95               	goto	u398_25
  6477                           	line	23
  6478                           	
  6479  0F9B                     i1l10399:	
  6480  0F9B  3001               	movlw	low(01h)
  6481  0F9C  02FD               	subwf	(___lwdiv@counter),f
  6482  0F9D  1D03               	btfss	status,2
  6483  0F9E  2FA0               	goto	u399_21
  6484  0F9F  2FA1               	goto	u399_20
  6485  0FA0                     u399_21:
  6486  0FA0  2F7B               	goto	i1l10391
  6487  0FA1                     u399_20:
  6488  0FA1  2FA3               	goto	i1l10401
  6489                           	
  6490  0FA2                     i1l7335:	
  6491  0FA2  2FA3               	goto	i1l10401
  6492                           	line	24
  6493                           	
  6494  0FA3                     i1l7329:	
  6495                           	line	25
  6496                           	
  6497  0FA3                     i1l10401:	
  6498  0FA3  087C               	movf	(___lwdiv@quotient+1),w
  6499  0FA4  01F7               	clrf	(?___lwdiv+1)
  6500  0FA5  07F7               	addwf	(?___lwdiv+1)
  6501  0FA6  087B               	movf	(___lwdiv@quotient),w
  6502  0FA7  01F6               	clrf	(?___lwdiv)
  6503  0FA8  07F6               	addwf	(?___lwdiv)
  6504                           
  6505  0FA9  2FAA               	goto	i1l7336
  6506                           	
  6507  0FAA                     i1l10403:	
  6508                           	line	26
  6509                           	
  6510  0FAA                     i1l7336:	
  6511  0FAA  0008               	return
  6512                           	opt stack 0
  6513                           GLOBAL	__end_of___lwdiv
  6514  0FAB                     	__end_of___lwdiv:
  6515 ;; =============== function ___lwdiv ends ============
  6516                           
  6517                           	signat	___lwdiv,8314
  6518                           	global	___wmul
  6519                           psect	text659,local,class=CODE,delta=2
  6520                           global __ptext659
  6521  0DC3                     __ptext659:
  6522                           
  6523 ;; *************** function ___wmul *****************
  6524 ;; Defined at:
  6525 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  multiplier      2    0[COMMON] unsigned int 
  6528 ;;  multiplicand    2    2[COMMON] unsigned int 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  product         2    4[COMMON] unsigned int 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  2    0[COMMON] unsigned int 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6540 ;;      Params:         4       0       0       0       0
  6541 ;;      Locals:         2       0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0
  6543 ;;      Totals:         6       0       0       0       0
  6544 ;;Total ram usage:        6 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_ADCconvert
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           psect	text659
  6553                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6554                           	line	3
  6555                           	global	__size_of___wmul
  6556  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  6557                           	
  6558  0DC3                     ___wmul:	
  6559                           	opt	stack 1
  6560                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6561                           	line	4
  6562                           	
  6563  0DC3                     i1l10367:	
  6564  0DC3  01F4               	clrf	(___wmul@product)
  6565  0DC4  01F5               	clrf	(___wmul@product+1)
  6566  0DC5  2DC6               	goto	i1l10369
  6567                           	line	6
  6568                           	
  6569  0DC6                     i1l7323:	
  6570                           	line	7
  6571                           	
  6572  0DC6                     i1l10369:	
  6573  0DC6  1C70               	btfss	(___wmul@multiplier),(0)&7
  6574  0DC7  2DC9               	goto	u389_21
  6575  0DC8  2DCA               	goto	u389_20
  6576  0DC9                     u389_21:
  6577  0DC9  2DD0               	goto	i1l7324
  6578  0DCA                     u389_20:
  6579                           	line	8
  6580                           	
  6581  0DCA                     i1l10371:	
  6582  0DCA  0872               	movf	(___wmul@multiplicand),w
  6583  0DCB  07F4               	addwf	(___wmul@product),f
  6584  0DCC  1803               	skipnc
  6585  0DCD  0AF5               	incf	(___wmul@product+1),f
  6586  0DCE  0873               	movf	(___wmul@multiplicand+1),w
  6587  0DCF  07F5               	addwf	(___wmul@product+1),f
  6588                           	
  6589  0DD0                     i1l7324:	
  6590                           	line	9
  6591  0DD0  3001               	movlw	01h
  6592                           	
  6593  0DD1                     u390_25:
  6594  0DD1  1003               	clrc
  6595  0DD2  0DF2               	rlf	(___wmul@multiplicand),f
  6596  0DD3  0DF3               	rlf	(___wmul@multiplicand+1),f
  6597  0DD4  3EFF               	addlw	-1
  6598  0DD5  1D03               	skipz
  6599  0DD6  2DD1               	goto	u390_25
  6600                           	line	10
  6601                           	
  6602  0DD7                     i1l10373:	
  6603  0DD7  3001               	movlw	01h
  6604                           	
  6605  0DD8                     u391_25:
  6606  0DD8  1003               	clrc
  6607  0DD9  0CF1               	rrf	(___wmul@multiplier+1),f
  6608  0DDA  0CF0               	rrf	(___wmul@multiplier),f
  6609  0DDB  3EFF               	addlw	-1
  6610  0DDC  1D03               	skipz
  6611  0DDD  2DD8               	goto	u391_25
  6612                           	line	11
  6613  0DDE  0871               	movf	((___wmul@multiplier+1)),w
  6614  0DDF  0470               	iorwf	((___wmul@multiplier)),w
  6615  0DE0  1D03               	skipz
  6616  0DE1  2DE3               	goto	u392_21
  6617  0DE2  2DE4               	goto	u392_20
  6618  0DE3                     u392_21:
  6619  0DE3  2DC6               	goto	i1l10369
  6620  0DE4                     u392_20:
  6621  0DE4  2DE5               	goto	i1l10375
  6622                           	
  6623  0DE5                     i1l7325:	
  6624                           	line	12
  6625                           	
  6626  0DE5                     i1l10375:	
  6627  0DE5  0875               	movf	(___wmul@product+1),w
  6628  0DE6  01F1               	clrf	(?___wmul+1)
  6629  0DE7  07F1               	addwf	(?___wmul+1)
  6630  0DE8  0874               	movf	(___wmul@product),w
  6631  0DE9  01F0               	clrf	(?___wmul)
  6632  0DEA  07F0               	addwf	(?___wmul)
  6633                           
  6634  0DEB  2DEC               	goto	i1l7326
  6635                           	
  6636  0DEC                     i1l10377:	
  6637                           	line	13
  6638                           	
  6639  0DEC                     i1l7326:	
  6640  0DEC  0008               	return
  6641                           	opt stack 0
  6642                           GLOBAL	__end_of___wmul
  6643  0DED                     	__end_of___wmul:
  6644 ;; =============== function ___wmul ends ============
  6645                           
  6646                           	signat	___wmul,8314
  6647                           	global	_Debounce
  6648                           psect	text660,local,class=CODE,delta=2
  6649                           global __ptext660
  6650  064E                     __ptext660:
  6651                           
  6652 ;; *************** function _Debounce *****************
  6653 ;; Defined at:
  6654 ;;		line 64 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;		None               void
  6661 ;; Registers used:
  6662 ;;		wreg, status,2, status,0
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6668 ;;      Params:         0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0
  6670 ;;      Temps:          1       0       0       0       0
  6671 ;;      Totals:         1       0       0       0       0
  6672 ;;Total ram usage:        1 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_ReadButtons
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           psect	text660
  6681                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  6682                           	line	64
  6683                           	global	__size_of_Debounce
  6684  007C                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  6685                           	
  6686  064E                     _Debounce:	
  6687                           	opt	stack 2
  6688                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  6689                           	line	66
  6690                           	
  6691  064E                     i1l10233:	
  6692                           ;HMI.c: 66: if(!RB2)
  6693  064E  1283               	bcf	status, 5	;RP0=0, select bank0
  6694  064F  1303               	bcf	status, 6	;RP1=0, select bank0
  6695  0650  1906               	btfsc	(50/8),(50)&7
  6696  0651  2E53               	goto	u366_21
  6697  0652  2E54               	goto	u366_20
  6698  0653                     u366_21:
  6699  0653  2E66               	goto	i1l5139
  6700  0654                     u366_20:
  6701                           	line	68
  6702                           	
  6703  0654                     i1l10235:	
  6704                           ;HMI.c: 67: {
  6705                           ;HMI.c: 68: UpDebounceCount++;
  6706  0654  3001               	movlw	(01h)
  6707  0655  00F0               	movwf	(??_Debounce+0)+0
  6708  0656  0870               	movf	(??_Debounce+0)+0,w
  6709  0657  07DD               	addwf	(_UpDebounceCount),f	;volatile
  6710                           	line	69
  6711                           	
  6712  0658                     i1l10237:	
  6713                           ;HMI.c: 69: if(UpDebounceCount >= 10 & UpReleased)
  6714  0658  300A               	movlw	(0Ah)
  6715  0659  025D               	subwf	(_UpDebounceCount),w	;volatile
  6716  065A  1C03               	skipc
  6717  065B  2E5D               	goto	u367_21
  6718  065C  2E5E               	goto	u367_20
  6719  065D                     u367_21:
  6720  065D  2E68               	goto	i1l5141
  6721  065E                     u367_20:
  6722                           	
  6723  065E                     i1l10239:	
  6724  065E  1F69               	btfss	(_UpReleased/8),(_UpReleased)&7
  6725  065F  2E61               	goto	u368_21
  6726  0660  2E62               	goto	u368_20
  6727  0661                     u368_21:
  6728  0661  2E68               	goto	i1l5141
  6729  0662                     u368_20:
  6730                           	line	71
  6731                           	
  6732  0662                     i1l10241:	
  6733                           ;HMI.c: 70: {
  6734                           ;HMI.c: 71: UpPressed = 1;
  6735  0662  16E9               	bsf	(_UpPressed/8),(_UpPressed)&7
  6736                           	line	72
  6737                           ;HMI.c: 72: UpReleased = 0;
  6738  0663  1369               	bcf	(_UpReleased/8),(_UpReleased)&7
  6739  0664  2E68               	goto	i1l5141
  6740                           	line	73
  6741                           	
  6742  0665                     i1l5140:	
  6743                           	line	74
  6744                           ;HMI.c: 73: }
  6745                           ;HMI.c: 74: }
  6746  0665  2E68               	goto	i1l5141
  6747                           	line	75
  6748                           	
  6749  0666                     i1l5139:	
  6750                           	line	77
  6751                           ;HMI.c: 75: else
  6752                           ;HMI.c: 76: {
  6753                           ;HMI.c: 77: UpDebounceCount = 0;
  6754  0666  01DD               	clrf	(_UpDebounceCount)	;volatile
  6755                           	line	78
  6756                           ;HMI.c: 78: UpReleased = 1;
  6757  0667  1769               	bsf	(_UpReleased/8),(_UpReleased)&7
  6758                           	line	79
  6759                           	
  6760  0668                     i1l5141:	
  6761                           	line	82
  6762                           ;HMI.c: 79: }
  6763                           ;HMI.c: 82: if(!RB3)
  6764  0668  1986               	btfsc	(51/8),(51)&7
  6765  0669  2E6B               	goto	u369_21
  6766  066A  2E6C               	goto	u369_20
  6767  066B                     u369_21:
  6768  066B  2E7E               	goto	i1l5142
  6769  066C                     u369_20:
  6770                           	line	84
  6771                           	
  6772  066C                     i1l10243:	
  6773                           ;HMI.c: 83: {
  6774                           ;HMI.c: 84: DownDebounceCount++;
  6775  066C  3001               	movlw	(01h)
  6776  066D  00F0               	movwf	(??_Debounce+0)+0
  6777  066E  0870               	movf	(??_Debounce+0)+0,w
  6778  066F  07DA               	addwf	(_DownDebounceCount),f	;volatile
  6779                           	line	85
  6780                           	
  6781  0670                     i1l10245:	
  6782                           ;HMI.c: 85: if(DownDebounceCount >= 10 & DownReleased)
  6783  0670  300A               	movlw	(0Ah)
  6784  0671  025A               	subwf	(_DownDebounceCount),w	;volatile
  6785  0672  1C03               	skipc
  6786  0673  2E75               	goto	u370_21
  6787  0674  2E76               	goto	u370_20
  6788  0675                     u370_21:
  6789  0675  2E80               	goto	i1l5144
  6790  0676                     u370_20:
  6791                           	
  6792  0676                     i1l10247:	
  6793  0676  1DE8               	btfss	(_DownReleased/8),(_DownReleased)&7
  6794  0677  2E79               	goto	u371_21
  6795  0678  2E7A               	goto	u371_20
  6796  0679                     u371_21:
  6797  0679  2E80               	goto	i1l5144
  6798  067A                     u371_20:
  6799                           	line	87
  6800                           	
  6801  067A                     i1l10249:	
  6802                           ;HMI.c: 86: {
  6803                           ;HMI.c: 87: DownPressed = 1;
  6804  067A  1568               	bsf	(_DownPressed/8),(_DownPressed)&7
  6805                           	line	88
  6806                           ;HMI.c: 88: DownReleased = 0;
  6807  067B  11E8               	bcf	(_DownReleased/8),(_DownReleased)&7
  6808  067C  2E80               	goto	i1l5144
  6809                           	line	89
  6810                           	
  6811  067D                     i1l5143:	
  6812                           	line	90
  6813                           ;HMI.c: 89: }
  6814                           ;HMI.c: 90: }
  6815  067D  2E80               	goto	i1l5144
  6816                           	line	91
  6817                           	
  6818  067E                     i1l5142:	
  6819                           	line	93
  6820                           ;HMI.c: 91: else
  6821                           ;HMI.c: 92: {
  6822                           ;HMI.c: 93: DownDebounceCount = 0;
  6823  067E  01DA               	clrf	(_DownDebounceCount)	;volatile
  6824                           	line	94
  6825                           ;HMI.c: 94: DownReleased = 1;
  6826  067F  15E8               	bsf	(_DownReleased/8),(_DownReleased)&7
  6827                           	line	95
  6828                           	
  6829  0680                     i1l5144:	
  6830                           	line	97
  6831                           ;HMI.c: 95: }
  6832                           ;HMI.c: 97: if(!RB4)
  6833  0680  1A06               	btfsc	(52/8),(52)&7
  6834  0681  2E83               	goto	u372_21
  6835  0682  2E84               	goto	u372_20
  6836  0683                     u372_21:
  6837  0683  2E96               	goto	i1l5145
  6838  0684                     u372_20:
  6839                           	line	99
  6840                           	
  6841  0684                     i1l10251:	
  6842                           ;HMI.c: 98: {
  6843                           ;HMI.c: 99: LeftDebounceCount++;
  6844  0684  3001               	movlw	(01h)
  6845  0685  00F0               	movwf	(??_Debounce+0)+0
  6846  0686  0870               	movf	(??_Debounce+0)+0,w
  6847  0687  07DB               	addwf	(_LeftDebounceCount),f	;volatile
  6848                           	line	100
  6849                           	
  6850  0688                     i1l10253:	
  6851                           ;HMI.c: 100: if(LeftDebounceCount >= 10 & LeftReleased)
  6852  0688  300A               	movlw	(0Ah)
  6853  0689  025B               	subwf	(_LeftDebounceCount),w	;volatile
  6854  068A  1C03               	skipc
  6855  068B  2E8D               	goto	u373_21
  6856  068C  2E8E               	goto	u373_20
  6857  068D                     u373_21:
  6858  068D  2E98               	goto	i1l5147
  6859  068E                     u373_20:
  6860                           	
  6861  068E                     i1l10255:	
  6862  068E  1EE8               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  6863  068F  2E91               	goto	u374_21
  6864  0690  2E92               	goto	u374_20
  6865  0691                     u374_21:
  6866  0691  2E98               	goto	i1l5147
  6867  0692                     u374_20:
  6868                           	line	102
  6869                           	
  6870  0692                     i1l10257:	
  6871                           ;HMI.c: 101: {
  6872                           ;HMI.c: 102: LeftPressed = 1;
  6873  0692  1668               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  6874                           	line	103
  6875                           ;HMI.c: 103: LeftReleased = 0;
  6876  0693  12E8               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  6877  0694  2E98               	goto	i1l5147
  6878                           	line	104
  6879                           	
  6880  0695                     i1l5146:	
  6881                           	line	105
  6882                           ;HMI.c: 104: }
  6883                           ;HMI.c: 105: }
  6884  0695  2E98               	goto	i1l5147
  6885                           	line	106
  6886                           	
  6887  0696                     i1l5145:	
  6888                           	line	108
  6889                           ;HMI.c: 106: else
  6890                           ;HMI.c: 107: {
  6891                           ;HMI.c: 108: LeftDebounceCount = 0;
  6892  0696  01DB               	clrf	(_LeftDebounceCount)	;volatile
  6893                           	line	109
  6894                           ;HMI.c: 109: LeftReleased = 1;
  6895  0697  16E8               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  6896                           	line	110
  6897                           	
  6898  0698                     i1l5147:	
  6899                           	line	112
  6900                           ;HMI.c: 110: }
  6901                           ;HMI.c: 112: if(!RB5)
  6902  0698  1A86               	btfsc	(53/8),(53)&7
  6903  0699  2E9B               	goto	u375_21
  6904  069A  2E9C               	goto	u375_20
  6905  069B                     u375_21:
  6906  069B  2EAE               	goto	i1l5148
  6907  069C                     u375_20:
  6908                           	line	114
  6909                           	
  6910  069C                     i1l10259:	
  6911                           ;HMI.c: 113: {
  6912                           ;HMI.c: 114: RightDebounceCount++;
  6913  069C  3001               	movlw	(01h)
  6914  069D  00F0               	movwf	(??_Debounce+0)+0
  6915  069E  0870               	movf	(??_Debounce+0)+0,w
  6916  069F  07DC               	addwf	(_RightDebounceCount),f	;volatile
  6917                           	line	115
  6918                           	
  6919  06A0                     i1l10261:	
  6920                           ;HMI.c: 115: if(RightDebounceCount >= 10 & RightReleased)
  6921  06A0  300A               	movlw	(0Ah)
  6922  06A1  025C               	subwf	(_RightDebounceCount),w	;volatile
  6923  06A2  1C03               	skipc
  6924  06A3  2EA5               	goto	u376_21
  6925  06A4  2EA6               	goto	u376_20
  6926  06A5                     u376_21:
  6927  06A5  2EB0               	goto	i1l5150
  6928  06A6                     u376_20:
  6929                           	
  6930  06A6                     i1l10263:	
  6931  06A6  1E69               	btfss	(_RightReleased/8),(_RightReleased)&7
  6932  06A7  2EA9               	goto	u377_21
  6933  06A8  2EAA               	goto	u377_20
  6934  06A9                     u377_21:
  6935  06A9  2EB0               	goto	i1l5150
  6936  06AA                     u377_20:
  6937                           	line	117
  6938                           	
  6939  06AA                     i1l10265:	
  6940                           ;HMI.c: 116: {
  6941                           ;HMI.c: 117: RightPressed = 1;
  6942  06AA  15E9               	bsf	(_RightPressed/8),(_RightPressed)&7
  6943                           	line	118
  6944                           ;HMI.c: 118: RightReleased = 0;
  6945  06AB  1269               	bcf	(_RightReleased/8),(_RightReleased)&7
  6946  06AC  2EB0               	goto	i1l5150
  6947                           	line	119
  6948                           	
  6949  06AD                     i1l5149:	
  6950                           	line	120
  6951                           ;HMI.c: 119: }
  6952                           ;HMI.c: 120: }
  6953  06AD  2EB0               	goto	i1l5150
  6954                           	line	121
  6955                           	
  6956  06AE                     i1l5148:	
  6957                           	line	123
  6958                           ;HMI.c: 121: else
  6959                           ;HMI.c: 122: {
  6960                           ;HMI.c: 123: RightDebounceCount = 0;
  6961  06AE  01DC               	clrf	(_RightDebounceCount)	;volatile
  6962                           	line	124
  6963                           ;HMI.c: 124: RightReleased = 1;
  6964  06AF  1669               	bsf	(_RightReleased/8),(_RightReleased)&7
  6965                           	line	125
  6966                           	
  6967  06B0                     i1l5150:	
  6968                           	line	127
  6969                           ;HMI.c: 125: }
  6970                           ;HMI.c: 127: if(!RB6)
  6971  06B0  1B06               	btfsc	(54/8),(54)&7
  6972  06B1  2EB3               	goto	u378_21
  6973  06B2  2EB4               	goto	u378_20
  6974  06B3                     u378_21:
  6975  06B3  2EC6               	goto	i1l5151
  6976  06B4                     u378_20:
  6977                           	line	129
  6978                           	
  6979  06B4                     i1l10267:	
  6980                           ;HMI.c: 128: {
  6981                           ;HMI.c: 129: CenterDebounceCount++;
  6982  06B4  3001               	movlw	(01h)
  6983  06B5  00F0               	movwf	(??_Debounce+0)+0
  6984  06B6  0870               	movf	(??_Debounce+0)+0,w
  6985  06B7  07D9               	addwf	(_CenterDebounceCount),f	;volatile
  6986                           	line	130
  6987                           	
  6988  06B8                     i1l10269:	
  6989                           ;HMI.c: 130: if(CenterDebounceCount >= 10 & CenterReleased)
  6990  06B8  300A               	movlw	(0Ah)
  6991  06B9  0259               	subwf	(_CenterDebounceCount),w	;volatile
  6992  06BA  1C03               	skipc
  6993  06BB  2EBD               	goto	u379_21
  6994  06BC  2EBE               	goto	u379_20
  6995  06BD                     u379_21:
  6996  06BD  2EC9               	goto	i1l5154
  6997  06BE                     u379_20:
  6998                           	
  6999  06BE                     i1l10271:	
  7000  06BE  1CE8               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  7001  06BF  2EC1               	goto	u380_21
  7002  06C0  2EC2               	goto	u380_20
  7003  06C1                     u380_21:
  7004  06C1  2EC9               	goto	i1l5154
  7005  06C2                     u380_20:
  7006                           	line	132
  7007                           	
  7008  06C2                     i1l10273:	
  7009                           ;HMI.c: 131: {
  7010                           ;HMI.c: 132: CenterPressed = 1;
  7011  06C2  1468               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  7012                           	line	133
  7013                           ;HMI.c: 133: CenterReleased = 0;
  7014  06C3  10E8               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  7015  06C4  2EC9               	goto	i1l5154
  7016                           	line	134
  7017                           	
  7018  06C5                     i1l5152:	
  7019                           	line	135
  7020                           ;HMI.c: 134: }
  7021                           ;HMI.c: 135: }
  7022  06C5  2EC9               	goto	i1l5154
  7023                           	line	136
  7024                           	
  7025  06C6                     i1l5151:	
  7026                           	line	138
  7027                           ;HMI.c: 136: else
  7028                           ;HMI.c: 137: {
  7029                           ;HMI.c: 138: CenterDebounceCount = 0;
  7030  06C6  01D9               	clrf	(_CenterDebounceCount)	;volatile
  7031                           	line	139
  7032                           ;HMI.c: 139: CenterReleased = 1;
  7033  06C7  14E8               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  7034  06C8  2EC9               	goto	i1l5154
  7035                           	line	140
  7036                           	
  7037  06C9                     i1l5153:	
  7038                           	line	141
  7039                           	
  7040  06C9                     i1l5154:	
  7041  06C9  0008               	return
  7042                           	opt stack 0
  7043                           GLOBAL	__end_of_Debounce
  7044  06CA                     	__end_of_Debounce:
  7045 ;; =============== function _Debounce ends ============
  7046                           
  7047                           	signat	_Debounce,88
  7048                           	global	_adc_read
  7049                           psect	text661,local,class=CODE,delta=2
  7050                           global __ptext661
  7051  0D9C                     __ptext661:
  7052                           
  7053 ;; *************** function _adc_read *****************
  7054 ;; Defined at:
  7055 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;		None
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  adc_value       2    4[COMMON] volatile unsigned int 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  2    0[COMMON] unsigned int 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2, status,0
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7069 ;;      Params:         2       0       0       0       0
  7070 ;;      Locals:         2       0       0       0       0
  7071 ;;      Temps:          2       0       0       0       0
  7072 ;;      Totals:         6       0       0       0       0
  7073 ;;Total ram usage:        6 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_adc_read_channel
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           psect	text661
  7082                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7083                           	line	61
  7084                           	global	__size_of_adc_read
  7085  0027                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7086                           	
  7087  0D9C                     _adc_read:	
  7088                           	opt	stack 0
  7089                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  7090                           	line	64
  7091                           	
  7092  0D9C                     i1l9869:	
  7093                           ;adc.c: 62: volatile unsigned int adc_value;
  7094                           ;adc.c: 64: ADRESH = 0;
  7095  0D9C  1283               	bcf	status, 5	;RP0=0, select bank0
  7096  0D9D  1303               	bcf	status, 6	;RP1=0, select bank0
  7097  0D9E  019E               	clrf	(30)	;volatile
  7098                           	line	66
  7099                           	
  7100  0D9F                     i1l9871:	
  7101                           ;adc.c: 66: GO = 1;
  7102  0D9F  151F               	bsf	(250/8),(250)&7
  7103                           	line	67
  7104                           ;adc.c: 67: while(GO) continue;
  7105  0DA0  2DA1               	goto	i1l703
  7106                           	
  7107  0DA1                     i1l704:	
  7108                           	
  7109  0DA1                     i1l703:	
  7110  0DA1  191F               	btfsc	(250/8),(250)&7
  7111  0DA2  2DA4               	goto	u315_21
  7112  0DA3  2DA5               	goto	u315_20
  7113  0DA4                     u315_21:
  7114  0DA4  2DA1               	goto	i1l703
  7115  0DA5                     u315_20:
  7116                           	
  7117  0DA5                     i1l705:	
  7118                           	line	68
  7119                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7120  0DA5  0000               nop ;#
  7121                           	line	69
  7122                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7123  0DA6  0000               nop ;#
  7124                           	line	70
  7125                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7126  0DA7  0000               nop ;#
  7127                           psect	text661
  7128                           	line	73
  7129                           	
  7130  0DA8                     i1l9873:	
  7131                           ;adc.c: 73: adc_value = ADRESH;
  7132  0DA8  1283               	bcf	status, 5	;RP0=0, select bank0
  7133  0DA9  1303               	bcf	status, 6	;RP1=0, select bank0
  7134  0DAA  081E               	movf	(30),w	;volatile
  7135  0DAB  00F2               	movwf	(??_adc_read+0)+0
  7136  0DAC  01F3               	clrf	(??_adc_read+0)+0+1
  7137  0DAD  0872               	movf	0+(??_adc_read+0)+0,w
  7138  0DAE  00F4               	movwf	(adc_read@adc_value)	;volatile
  7139  0DAF  0873               	movf	1+(??_adc_read+0)+0,w
  7140  0DB0  00F5               	movwf	(adc_read@adc_value+1)	;volatile
  7141                           	line	74
  7142                           ;adc.c: 74: adc_value <<= 1;
  7143  0DB1  3001               	movlw	01h
  7144                           	
  7145  0DB2                     u316_25:
  7146  0DB2  1003               	clrc
  7147  0DB3  0DF4               	rlf	(adc_read@adc_value),f	;volatile
  7148  0DB4  0DF5               	rlf	(adc_read@adc_value+1),f	;volatile
  7149  0DB5  3EFF               	addlw	-1
  7150  0DB6  1D03               	skipz
  7151  0DB7  2DB2               	goto	u316_25
  7152                           	line	75
  7153                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  7154  0DB8  1683               	bsf	status, 5	;RP0=1, select bank1
  7155  0DB9  1303               	bcf	status, 6	;RP1=0, select bank1
  7156  0DBA  081E               	movf	(158)^080h,w	;volatile
  7157                           	line	78
  7158                           	
  7159  0DBB                     i1l9875:	
  7160                           ;adc.c: 78: return (adc_value);
  7161  0DBB  0875               	movf	(adc_read@adc_value+1),w	;volatile
  7162  0DBC  01F1               	clrf	(?_adc_read+1)
  7163  0DBD  07F1               	addwf	(?_adc_read+1)
  7164  0DBE  0874               	movf	(adc_read@adc_value),w	;volatile
  7165  0DBF  01F0               	clrf	(?_adc_read)
  7166  0DC0  07F0               	addwf	(?_adc_read)
  7167                           
  7168  0DC1  2DC2               	goto	i1l706
  7169                           	
  7170  0DC2                     i1l9877:	
  7171                           	line	79
  7172                           	
  7173  0DC2                     i1l706:	
  7174  0DC2  0008               	return
  7175                           	opt stack 0
  7176                           GLOBAL	__end_of_adc_read
  7177  0DC3                     	__end_of_adc_read:
  7178 ;; =============== function _adc_read ends ============
  7179                           
  7180                           	signat	_adc_read,90
  7181                           psect	text662,local,class=CODE,delta=2
  7182                           global __ptext662
  7183  0000                     __ptext662:
  7184                           	global	btemp
  7185  007E                     	btemp set 07Eh
  7186                           
  7187                           	DABS	1,126,2	;btemp
  7188                           	global	wtemp0
  7189  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Apr 20 16:32:58 2015

   __end_of_lcd_write_control 0D9C               ??_UpdateDisplay 0037                             pc 0002  
                          _GO 00FA                            _RD 0C60                            _WR 0C61  
                          fsr 0004           ___wmul@multiplicand 0072                           l700 0D6B  
                         _GIE 005F                           _RB0 0030                           _RC0 0038  
                         _RB2 0032                           _RC1 0039                           _RB3 0033  
                         _RC2 003A                           _RB4 0034                           _RB5 0035  
                         _RE0 0048                           _RB6 0036                           _RE1 0049  
                         _RE2 004A                           _RX9 00C6                           _TX9 04C6  
                         _pos 0057                           fsr0 0004                           indf 0000  
                ___awmod@sign 0076               ?_lcd_set_cursor 0070                          l2200 05EB  
                        l2201 05F5                          l2210 062E                          l2202 0604  
                        l2211 064A                          l2203 0630                          l2212 064B  
                        l2204 0619                          l2213 064B                          l2205 0643  
                        l2206 061F                          l1423 0E41                          l2207 062B  
                        l2208 062C                          l2209 062D                          l2180 0F1A  
                        l2181 0F47                          l2190 0F5B                          l2182 0F1B  
                        l2191 0F5C                          l2183 0F5A                          l2184 0F1D  
                        l1393 0D9B                          l2185 0F1F                          l2177 0D7F  
                        l2186 0F2E                          l2194 05C6                          l2187 0F3B  
                        l2195 0606                          l2188 0F5C                          l2196 05CD  
                        l2189 0F45                          l2197 0618                          l2198 05D7  
                        l2199 05E1                          l3640 0286                          l3641 0269  
                        l5170 0EE0                          l3650 0258                          l3642 020B  
                        l5171 0EE1                          l3643 0285                          l3651 0263  
                        l5172 0EF2                          l3652 030B                          l3660 02BA  
                        l3644 0216                          l5165 0EFA                          l5173 0EF3  
                        l3653 0309                          l3661 02C5                          l3645 0221  
                        l5174 0F0F                          l5166 0ECD                          l3654 02EC  
                        l3662 02D0                          l3646 022C                          l3638 0204  
                        l5167 0F0D                          l5175 0EF8                          l3639 0320  
                        l3663 02DB                          l3655 028E                          l3647 0237  
                        l5168 0ECE                          l3656 0308                          l3664 02E6  
                        l3648 0242                          l5169 0ECF                          l3665 030A  
                        l3657 0299                          l3649 024D                          l3666 0324  
                        l3658 02A4                          l3659 02AF                          _CHS0 00FB  
                        _CHS1 00FC                          _CHS2 00FD                          STR_1 0732  
                        STR_2 0729                          STR_3 0744                          STR_4 074D  
                        STR_5 073B                          STR_6 075D                          STR_7 0761  
                        STR_8 0755                          STR_9 0759                          _BRGH 04C2  
                        _CREN 00C4                          u3410 0EDB                          u3411 0EDA  
                        u3420 0EEF                          u3421 0EEE                          u4150 0202  
                        u4207 0D96                          u4151 0201                          u4160 0209  
                        u4217 0D69                          u4161 0208                          u4170 028C  
                        u4171 028B                          u4180 031F                          u4181 031E  
                        u4197 0311                          _RCIE 0465                          _RCIF 0065  
                        _OERR 00C1                          _TMR0 0001                          _SPEN 00C7  
                        _TXIE 0464                          _WREN 0C62                          _TXEN 04C5  
                        _TXIF 0064                          _SYNC 04C4           __size_of_ADCconvert 01E5  
                        _Menu 0EC9        __end_of_lcd_write_data 0D1D                          _isr1 0425  
                        _main 05C0                          _init 0D6C                          btemp 007E  
              _CenterReleased 0341                          start 0012                 ??_ReadButtons 0071  
__size_ofi1_lcd_write_control 0014                         ?_Menu 0070                         l10061 0ECF  
                       l10071 0EF3                         l10063 0ED7                         l10073 0EF6  
                       l10065 0EDB                         l10081 0F0D                         l10083 0F0F  
                       l10075 0EF7                         l10067 0EE1                         l10059 0ECC  
                       l10077 0EF9                         l10069 0EEF                         l10501 022C  
                       l10079 0EFA                         l10511 0263                         l10503 0237  
                       l10521 028E                         l10513 0268                         l10505 0242  
                       l10601 0D7E                         l10531 02C5                         l10523 0299  
                       l10507 024D                         l10515 0269                         l10611 05D7  
                       l10603 05C0                         l10533 02D0                         l10525 02A4  
                       l10541 02EC                         l10509 0258                         l10517 0286  
                       l10621 05F1                         l10613 05DD                         l10605 05C6  
                       l10471 0D5B                         l10535 02DB                         l10527 02AF  
                       l10519 028D                         l10543 030B                         l10551 0E1B  
                       l10631 0619                         l10623 05F5                         l10615 05E1  
                       l10607 05CD                         l10473 0D5F                         l10481 0D88  
                       l10545 0316                         l10537 02E6                         l10529 02BA  
                       l10561 0E29                         l10553 0E1E                         l10633 061F  
                       l10625 0600                         l10617 05E7                         l10609 05D3  
                       l10475 0D63                         l10483 0D8E                         l10539 02EB  
                       l10547 0320                         l10491 0204                         l10563 0E2F  
                       l10555 0E1F                         l10571 0F1F                         l10635 062F  
                       l10627 0605                         l10619 05EB                         l10477 0D67  
                       l10469 0D58                         l10485 0D8F                         l10493 020A  
                       l10565 0E35                         l10557 0E22                         l10549 0E17  
                       l10581 0F3F                         l10573 0F2A                         l10637 0630  
                       l10629 0606                         l10479 0D83                         l10495 020B  
                       l10487 01FD                         l10567 0E3B                         l10559 0E23  
                       l10583 0F43                         l10575 0F2E                         l10591 0D6C  
                       l10639 0643                         l10497 0216                         l10489 0203  
                       l10585 0F44                         l10577 0F37                         l10569 0F10  
                       l10593 0D76                         l10499 0221                         l10587 0F46  
                       l10579 0F3B                         l10595 0D7A                         l10589 0F47  
                       l10597 0D7B                         l10599 0D7D          __size_of_calibrateIR 004D  
                       ?_isr1 0070                         ?_main 0070                         ?_init 0070  
                       _EEADR 010D                         STR_10 0765                         STR_11 071A  
             __end_of___awmod 07CF                         _CARRY 0018               __end_of___lwdiv 0FAB  
             __end_of___lwmod 0EC9                         i1l703 0DA1                         i1l704 0DA1  
                       i1l705 0DA5                         i1l706 0DC2                         i1l690 0E44  
                       i1l691 0E77                         i1l692 0E4A                         i1l693 0E50  
                       i1l694 0E56                         i1l695 0E5C                         i1l696 0E62  
                       i1l689 0E66                         i1l697 0E82                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009                         _TRISA 0085  
                       _TRISB 0086                         _TRISC 0087                         _TRISD 0088  
                       _TRISE 0089                         _SSPIF 0063                         _TXREG 0019  
      lcd_write_data@databyte 0072                         pclath 000A               ?_lcd_write_data 0070  
           ?_adc_read_channel 0070                         status 0003                         wtemp0 007E  
             __end_of_sprintf 0425              __end_of_Debounce 06CA            ??_adc_read_channel 0076  
            ?_readAvgDistance 0070                  __end_of_Menu 0F10    __size_of_lcd_write_control 001C  
            _shortMenuStrings 006A                  __end_of_isr1 0507                  __end_of_main 064E  
                __end_of_init 0D80                        ??_Menu 00D8                 ?_readDistance 0078  
      readAvgDistance@fullval 0022                        ??_isr1 004C                        ??_main 00DC  
                      ??_init 00DB           __end_of_ReadButtons 06FC                        _ADCON0 001F  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _EECON1 018C                        _EECON2 018D  
            __end_of_adc_read 0DC3                        i1l1402 0E05                        i1l1403 0DEE  
                      i1l1404 0E16                        i1l1405 0E16                        i1l2170 04A8  
                      i1l2171 04CD                        i1l2172 04EA                        i1l2164 0443  
                      i1l2173 04FA                        i1l2165 0442                        i1l2174 04FB  
                      i1l2166 0467                        i1l2167 0467                        i1l2168 04FB  
                      i1l1393 0D43                        i1l2169 048F                        i1l1396 0D1C  
                      i1l1399 0D09                        i1l5140 0665                        i1l5141 0668  
                      i1l5150 06B0                        i1l5142 067E                        i1l2910 0FFF  
                      i1l5151 06C6                        i1l5143 067D                        i1l5152 06C5  
                      i1l5144 0680                        i1l5160 06E9                        i1l2920 00E3  
                      i1l5153 06C9                        i1l5145 0696                        i1l5161 06F1  
                      i1l2921 01F7                        i1l2913 0D57                        i1l5154 06C9  
                      i1l5146 0695                        i1l5162 06F9                        i1l2922 0127  
                      i1l5147 0698                        i1l5139 0666                        i1l2923 01F6  
                      i1l5148 06AE                        i1l2924 016B                        i1l2916 005B  
                      i1l2908 0FC0                        i1l5180 0573                        i1l5149 06AD  
                      i1l5157 06D9                        i1l2917 01F9                        i1l2925 01F5  
                      i1l2909 0FE1                        i1l5181 0584                        i1l5158 06FB  
                      i1l2926 01AF                        i1l2918 009F                        i1l5182 05BF  
                      i1l5159 06E1                        i1l2919 01F8                        i1l2927 01F4  
                      i1l2928 01F3                        i1l2929 01F9                        i1l7330 0F75  
                      i1l7323 0DC6                        i1l7331 0F69                        i1l7324 0DD0  
                      i1l7332 0F7A                        i1l7340 0E9B                        i1l7325 0DE5  
                      i1l7333 0F7B                        i1l7341 0E8F                        i1l6621 040B  
                      i1l7326 0DEC                        i1l7334 0F94                        i1l7342 0EA0  
                      i1l6630 0344                        i1l6622 032D                        i1l7335 0FA2  
                      i1l7343 0EA1                        i1l6631 0375                        i1l6623 033F  
                      i1l7336 0FAA                        i1l7344 0EB2                        i1l6640 0424  
                      i1l6632 0380                        i1l6624 0346                        i1l7329 0FA3  
                      i1l7345 0EC0                        i1l6633 03A8                        i1l6625 0341  
                      i1l7346 0EC8                        i1l6626 041F                        i1l6634 039D  
                      i1l7339 0EC1                        i1l7531 0777                        i1l6635 03BA  
                      i1l6627 0342                        i1l7540 07C7                        i1l7532 0781  
                      i1l6636 03FF                        i1l6628 0343                        i1l7541 07CE  
                      i1l7533 07BD                        i1l6637 03BF                        i1l6629 035B  
                      i1l7534 0797                        i1l6638 040A                        i1l7535 078B  
                      i1l6639 041E                        i1l7536 079C                        i1l7537 079D  
                      i1l7538 07AE                        i1l7539 07BC                        u400_20 0E8B  
                      u400_21 0E8A                        u321_20 0429                        u321_21 0428  
                      u401_25 0E90                        u402_20 0E9F                        u410_20 079B  
                      u330_20 04E4                        u322_20 043D                        u402_21 0E9E  
                      u410_21 079A                        u330_21 04E3                        u322_21 043C  
                      i1l9931 0437                        i1l9861 0E66                        i1l9853 0E43  
                      i1l9941 0455                        i1l9933 043D                        i1l9925 0425  
                      i1l9871 0D9F                        i1l9855 0E62                        i1l9863 0E77  
                      i1l9951 046C                        i1l9943 0459                        i1l9927 0429  
                      i1l9935 0443                        u315_20 0DA5                        u403_20 0EAB  
                      u411_20 07A7                        u331_20 04EF                        u323_20 0447  
                      i1l9873 0DA8                        u315_21 0DA4                        u403_21 0EAA  
                      u411_21 07A6                        i1l9865 0E7B                        i1l9857 0E64  
                      i1l9881 0D10                        u331_21 04EE                        i1l9961 04A6  
                      i1l9953 0475                        i1l9945 045D                        i1l9937 0447  
                      u323_21 0446                        i1l9929 0431                        i1l9875 0DBB  
                      i1l9867 0E82                        i1l9859 0E65                        i1l9883 0D12  
                      i1l9891 0DED                        i1l9971 04E4                        i1l9963 04A8  
                      i1l9955 0476                        i1l9947 0463                        i1l9939 044D  
                      i1l9877 0DC2                        i1l9869 0D9C                        u403_25 0EA7  
                      u411_25 07A3                        i1l9885 0D13                        i1l9893 0DEE  
                      i1l9981 0FAB                        i1l9973 04E5                        i1l9965 04BF  
                      i1l9957 048D                        i1l9949 046B                        i1l9879 0D0B  
                      i1l9887 0D02                        i1l9895 0DFE                        i1l9991 0FD3  
                      i1l9983 0FB1                        i1l9975 04E7                        i1l9967 04C9  
                      i1l9959 048F                        u340_20 06F5                        u332_20 0FBE  
                      u324_20 044D                        u340_21 06F4                        i1l9889 0D03  
                      i1l9897 0E05                        i1l9985 0FBF                        i1l9993 0FE1  
                      u332_21 0FBD                        i1l9977 04EA                        i1l9969 04CD  
                      u324_21 044C                        i1l9995 0FFA                        i1l9987 0FC0  
                      i1l9979 04EF                        u316_25 0DB2                        u404_25 0EB3  
                      u412_25 07AF                        i1l9989 0FCD                        u332_25 0FBA  
                      i1l9997 0507                        i1l9999 051E                        u405_20 0EBF  
                      u413_20 07BB                        u317_20 0E15                        u333_20 0FE0  
                      u325_20 0463                        u405_21 0EBE                        u413_21 07BA  
                      u317_21 0E14                        u333_21 0FDF                        u325_21 0462  
                      u333_25 0FDC                        u414_20 07C1                        u406_20 076E  
                      u350_20 00F5                        u334_20 0511                        u326_20 046B  
                      u406_21 076D                        u350_21 00F4                        u326_21 046A  
                      u422_27 0D3E                        u407_20 077B                        u351_20 0130  
                      u343_20 0020                        u335_20 0562                        u327_20 048D  
                      u407_21 077A                        u351_21 012F                        u343_21 001F  
                      u335_21 0561                        u327_21 048C                        u335_25 055E  
                      u423_27 0D18                        u408_20 0787                        u336_20 06D5  
                      u352_20 0139                        u344_20 0029                        u328_20 04A6  
                      u408_21 0786                        u336_21 06D4                        u352_21 0138  
                      u344_21 0028                        u328_21 04A5                        u424_27 0E79  
                      u337_20 06DD                        u353_20 0174                        u345_20 0064  
                      u329_20 04BF                        u337_21 06DC                        u353_21 0173  
                      u345_21 0063                        u329_21 04BE                        u409_25 078C  
                      u370_20 0676                        u338_20 06E5                        u354_20 017D  
                      u346_20 006D                        u370_21 0675                        u338_21 06E4  
                      u354_21 017C                        u346_21 006C                        u371_20 067A  
                      u339_20 06ED                        u355_20 01B8                        u347_20 00A8  
                      u371_21 0679                        u339_21 06EC                        u355_21 01B7  
                      u347_21 00A7                        u380_20 06C2                        u372_20 0684  
                      u356_20 01C1                        u348_20 00B1                        u380_21 06C1  
                      u372_21 0683                        u356_21 01C0                        u348_21 00B0  
                      u373_20 068E                        u349_20 00EC                        u381_20 0333  
                      u373_21 068D                        u349_21 00EB                        u381_21 0332  
                      u374_20 0692                        u366_20 0654                        u382_20 036B  
                      u374_21 0691                        u366_21 0653                        u382_21 036A  
                      u390_25 0DD1                        u375_20 069C                        u367_20 065E  
                      u383_20 037E                        u375_21 069B                        u367_21 065D  
                      u383_21 037D                        u391_25 0DD8                        u376_20 06A6  
                      u368_20 0662                        u392_20 0DE4                        u384_20 039B  
                      u376_21 06A5                        u368_21 0661                        u392_21 0DE3  
                      u384_21 039A                        u384_25 0397                        u377_20 06AA  
                      u369_20 066C                        u393_20 0F65                        u385_20 03A7  
                      u377_21 06A9                        u369_21 066B                        u393_21 0F64  
                      u385_21 03A6                        u378_20 06B4                        u386_20 03AE  
                      u378_21 06B3                        u386_21 03AD                        u394_25 0F6A  
                      u379_20 06BE                        u395_20 0F79                        u387_20 0409  
                      u379_21 06BD                        u395_21 0F78                        u387_21 0408  
                      u388_20 041D                        u388_21 041C                        u396_25 0F7C  
                      u389_20 0DCA                        u397_20 0F8C                        u389_21 0DC9  
                      u397_21 0F8B                        u397_25 0F88                        u398_25 0F95  
                      u399_20 0FA1                        u399_21 0FA0                        _TMR0IE 005D  
                      _TMR0IF 005A                        _SSPBUF 0013                    _UpReleased 034E  
            __end_of_lcd_init 0E42                        _adcVal 0053               _UpDebounceCount 005D  
                      ___wmul 0DC3                     ??___awmod 0074                  ??_ADCconvert 0020  
                   ??___lwdiv 007A                     ??___lwmod 0024              __end_of_init_adc 0D6C  
              ??_readDistance 007A               ___awmod@divisor 0070      __end_of_lcd_write_string 0E17  
             ___awmod@counter 0075                        _rxfifo 00B0                        clrloop 0CFA  
                      _txfifo 00C0                        _rxiptr 0063                        _rxoptr 0064  
                      _txiptr 0066                        _txoptr 0067                        saved_w 007E  
                 _LeftPressed 0344                     ??_sprintf 002B                   _DownPressed 0342  
           lcd_write_string@s 0077            __end_of_ADCconvert 01FA                __pcstackCOMMON 0070  
                __pidataBANK0 0CEE                  __pidataBANK1 0CF3                   _ReadButtons 06CA  
            ??_lcd_set_cursor 0073                     ?_Debounce 0070                 _buttonPressed 005E  
         i1_lcd_write_control 0D30                    __pbssBANK0 0051                    __pbssBANK1 00A0  
           _DownDebounceCount 005A            _RightDebounceCount 005C                    __pmaintext 05C0  
                     ?___wmul 0070                    __pintentry 0004          ?i1_lcd_write_control 0070  
       __end_of_UpdateDisplay 05C0                     ?_adc_read 0070                       i1l10001 0524  
                     i1l10011 0562                       i1l10003 053E                       i1l10021 06CA  
                     i1l10101 006D                       i1l10013 0573                       i1l10005 0544  
                     i1l10031 06DD                       i1l10023 06CF                       i1l10111 00EC  
                     i1l10103 009F                       i1l10015 0584                       i1l10007 054D  
                     i1l10041 06E8                       i1l10033 06DE                       i1l10025 06D5  
                     i1l10121 016B                       i1l10113 00F5                       i1l10105 00A8  
                     i1l10017 058A                       i1l10009 0553                       i1l10051 06F6  
                     i1l10043 06ED                       i1l10035 06E0                       i1l10027 06D6  
                     i1l10131 01C1                       i1l10123 0174                       i1l10115 0127  
                     i1l10107 00B1                       i1l10019 059F                       i1l10053 06F8  
                     i1l10045 06EE                       i1l10037 06E5                       i1l10029 06D8  
                     i1l10125 017D                       i1l10117 0130                       i1l10109 00E3  
                     i1l10301 037F                       i1l10055 06F9                       i1l10047 06F0  
                     i1l10039 06E6                       i1l10127 01AF                       i1l10119 0139  
                     i1l10311 03A8                       i1l10303 0380                       i1l10241 0662  
                     i1l10233 064E                       i1l10401 0FA3                       i1l10057 06FB  
                     i1l10049 06F5                       i1l10129 01B8                       i1l10321 03F3  
                     i1l10313 03AE                       i1l10305 039C                       i1l10251 0684  
                     i1l10243 066C                       i1l10235 0654                       i1l10403 0FAA  
                     i1l10411 0E96                       i1l10091 0015                       i1l10331 0424  
                     i1l10323 03FA                       i1l10315 03B5                       i1l10307 039D  
                     i1l10261 06A0                       i1l10253 0688                       i1l10245 0670  
                     i1l10237 0658                       i1l10421 0EB9                       i1l10413 0E9B  
                     i1l10405 0E83                       i1l10093 0020                       i1l10325 03FF  
                     i1l10317 03BA                       i1l10309 03A1                       i1l10085 0D44  
                     i1l10271 06BE                       i1l10263 06A6                       i1l10255 068E  
                     i1l10247 0676                       i1l10239 065E                       i1l10415 0EA1  
                     i1l10407 0E8B                       i1l10423 0EC1                       i1l10431 0777  
                     i1l10095 0029                       i1l10319 03BF                       i1l10327 040B  
                     i1l10087 0D50                       i1l10273 06C2                       i1l10265 06AA  
                     i1l10257 0692                       i1l10249 067A                       i1l10425 0EC8  
                     i1l10417 0EAB                       i1l10409 0E8F                       i1l10441 0792  
                     i1l10433 077B                       i1l10097 005B                       i1l10329 041F  
                     i1l10281 033A                       i1l10089 0D57                       i1l10267 06B4  
                     i1l10259 069C                       i1l10371 0DCA                       i1l10419 0EB2  
                     i1l10451 07B5                       i1l10443 0797                       i1l10435 0781  
                     i1l10427 0769                       i1l10099 0064                       i1l10291 0367  
                     i1l10283 0345                       i1l10275 0328                       i1l10269 06B8  
                     i1l10373 0DD7                       i1l10381 0F5F                       i1l10445 079D  
                     i1l10437 0787                       i1l10453 07BD                       i1l10429 076E  
                     i1l10293 036B                       i1l10285 0346                       i1l10277 032D  
                     i1l10461 0D31                       i1l10375 0DE5                       i1l10367 0DC3  
                     i1l10391 0F7B                       i1l10383 0F65                       i1l10455 07C1  
                     i1l10447 07A7                       i1l10439 078B                       i1l10295 036F  
                     i1l10287 035B                       i1l10279 0333                       i1l10463 0D36  
                     i1l10377 0DEC                       i1l10369 0DC6                       i1l10393 0F8C  
                     i1l10385 0F69                       i1l10457 07C7                       i1l10449 07AE  
                     i1l10297 0375                       i1l10289 0363                       i1l10465 0D38  
                     i1l10395 0F92                       i1l10387 0F70                       i1l10379 0F5D  
                     i1l10459 07CE                       i1l10299 0378                       i1l10467 0D39  
                     i1l10397 0F94                       i1l10389 0F75                       i1l10399 0F9B  
                  ??_Debounce 0070              ??_lcd_write_data 0070            __size_of_rotateOld 012B  
                   ?_lcd_init 0070          __end_of_readDistance 0D58                     ?_init_adc 0070  
               ??_calibrateIR 00DC                       ___awmod 0769         ??i1_lcd_write_control 0070  
             __size_of___wmul 002A                       ___lwdiv 0F5D                       ___lwmod 0E83  
   __size_of_adc_read_channel 0041                    ??_adc_read 0072                       _dpowers 0710  
            ___awmod@dividend 0072                       _lowByte 0062                       _ser_tmp 0065  
                     _sprintf 0325                    ??_lcd_init 00DB          end_of_initialization 07FC  
                     init_ram 0D21                    ??_init_adc 00D8                  _LeftReleased 0345  
           __end_of_rotateOld 0325                  _DownReleased 0343                 _RightReleased 034C  
    __size_of_readAvgDistance 0055             ?_lcd_write_string 0077           __end_of_calibrateIR 0F5D  
          ??_lcd_write_string 0079                   AT25256A@CS0 0038                   AT25256A@CS1 0039  
           adc_read@adc_value 0074                    _totalSteps 00D0                    main@choice 00DD  
                   Menu@input 00D8                 _CenterPressed 0340                  ?_ReadButtons 0070  
              __end_of___wmul 0DED                 __pbitbssBANK0 0340           start_initialization 07CF  
       __size_of_readDistance 0014             __size_of_Debounce 007C         lcd_set_cursor@address 0073  
                   _UpPressed 034D                _RTC_FLAG_250MS 0348                _RTC_FLAG_500MS 0349  
                    ??___wmul 0074                   _calibrateIR 0F10                   __pdataBANK0 006A  
                 __pdataBANK1 00D2              _adc_read_channel 0E42                  _readDistance 0D44  
              rotateOld@steps 00DB             __size_of_adc_read 0027             ??_readAvgDistance 007E  
               __pcstackBANK0 0020                 __pcstackBANK1 00D8             __size_of_lcd_init 002B  
                 sprintf@_val 0031                   sprintf@flag 002F                   sprintf@prec 0030  
                _current_step 00D7              readAvgDistance@i 0024             __size_of_init_adc 0014  
            ___lwdiv@dividend 0078                      ?___awmod 0070                     __ptext640 01FA  
                   __ptext641 0D80                     __ptext650 0D30                     __ptext642 0D58  
                   __ptext651 0325                     __ptext643 0EC9                     __ptext660 064E  
                   __ptext652 0015                     __ptext644 0425                     __ptext661 0D9C  
                   __ptext653 06CA                     __ptext645 0507                     __ptext637 0D6C  
                   __ptext662 0000                     __ptext654 0D0A                     __ptext646 0FAB  
                   __ptext638 0F10                     __ptext655 0E42                     __ptext647 0D44  
                   __ptext639 0E17                     __ptext656 0769                     __ptext648 0DED  
                   __ptext657 0E83                     __ptext649 0D01                     __ptext658 0F5D  
                   __ptext659 0DC3                      ?___lwdiv 0076                      ?___lwmod 0020  
                   __pstrings 0700           readDistance@fullval 007C              ___lwdiv@quotient 007B  
                    ?_sprintf 0026       __size_of_lcd_set_cursor 0009             interrupt_function 0004  
      __size_of_UpdateDisplay 00B9                ___wmul@product 0074   __end_ofi1_lcd_write_control 0D44  
                _RightPressed 034B          __size_of_ReadButtons 0032                     _rotateOld 01FA  
                 __stringbase 070F             ___wmul@multiplier 0070        UpdateDisplay@adcOutput 003C  
                    _Debounce 064E             _LeftDebounceCount 005B     __size_of_lcd_write_string 002A  
     __size_of_lcd_write_data 0013       adc_read_channel@channel 0077                 _RTC_FLAG_10MS 0346  
               _RTC_FLAG_50MS 034A                     init_fetch 0D1D                    _ADCconvert 0015  
            __size_of___awmod 0066              __size_of___lwdiv 004E              __size_of___lwmod 0046  
               _UpdateDisplay 0507                    ?_rotateOld 00D8                      _adc_read 0D9C  
                 _currentMenu 005F               ___lwdiv@divisor 0076               ___lwdiv@counter 007D  
                 _menuStrings 00D2                      _highByte 0061                      _lcd_init 0E17  
                    _distance 0055              __size_of_sprintf 0100      __end_of_adc_read_channel 0E83  
   lcd_write_control@databyte 00DA                 __size_of_Menu 0047                      _init_adc 0D58  
               __size_of_isr1 00E2                 __size_of_main 008E                 __size_of_init 0014  
                    clear_ram 0CF9               _readAvgDistance 0FAB                  ?_calibrateIR 0070  
              ?_UpdateDisplay 0070           _CenterDebounceCount 0059                  _RTC_FLAG_1MS 0347  
          UpdateDisplay@F1211 00A0                      intlevel1 0000                _lcd_set_cursor 0D01  
                   sprintf@ap 002E                     sprintf@sp 0035              ___lwmod@dividend 0022  
                   stringcode 070A                   ?_ADCconvert 0070            rotateOld@direction 00D8  
           _lcd_write_control 0D80   i1lcd_write_control@databyte 0072                   ??_rotateOld 00D9  
          ?_lcd_write_control 0070                    _OPTION_REG 0081                      sprintf@c 0036  
                    sprintf@f 0026               ___lwmod@divisor 0020               ___lwmod@counter 0025  
                    stringdir 070A                      stringtab 0700           ??_lcd_write_control 00D8  
      __end_of_lcd_set_cursor 0D0A              _lcd_write_string 0DED             _current_direction 0060  
                 _RTC_Counter 0051       __end_of_readAvgDistance 1000                _lcd_write_data 0D0A  
