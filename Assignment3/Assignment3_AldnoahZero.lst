

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Apr 29 10:34:00 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "E:\Aldnoah.Zero\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_readAvgDistance
    48                           	FNCALL	_main,_UpdateDisplay
    49                           	FNCALL	_main,_Menu
    50                           	FNCALL	_main,_calibrateIR
    51                           	FNCALL	_main,_scan360
    52                           	FNCALL	_main,_rotate
    53                           	FNCALL	_main,_robotMove
    54                           	FNCALL	_main,_robotTurn
    55                           	FNCALL	_main,_ChargeMode
    56                           	FNCALL	_scan360,_readAvgDistance
    57                           	FNCALL	_scan360,_rotate
    58                           	FNCALL	_scan360,_UpdateDisplay
    59                           	FNCALL	_ChargeMode,_ser_putch
    60                           	FNCALL	_ChargeMode,_UpdateDisplay
    61                           	FNCALL	_calibrateIR,_rotate
    62                           	FNCALL	_calibrateIR,_UpdateDisplay
    63                           	FNCALL	_readAvgDistance,_readDistance
    64                           	FNCALL	_readAvgDistance,___lwdiv
    65                           	FNCALL	_readAvgDistance,_ADCconvert
    66                           	FNCALL	_UpdateDisplay,_lcd_write_control
    67                           	FNCALL	_UpdateDisplay,_sprintf
    68                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    69                           	FNCALL	_UpdateDisplay,_lcd_write_string
    70                           	FNCALL	_UpdateDisplay,___awmod
    71                           	FNCALL	_init,_init_adc
    72                           	FNCALL	_init,_lcd_init
    73                           	FNCALL	_init,_ser_init
    74                           	FNCALL	_init,_robo_init
    75                           	FNCALL	_readDistance,_adc_read_channel
    76                           	FNCALL	_lcd_init,_lcd_write_control
    77                           	FNCALL	_lcd_write_string,_lcd_write_data
    78                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    79                           	FNCALL	_sprintf,___lwdiv
    80                           	FNCALL	_sprintf,___lwmod
    81                           	FNCALL	_ADCconvert,___wmul
    82                           	FNCALL	_ADCconvert,___lwdiv
    83                           	FNCALL	_robotTurn,_ser_putch
    84                           	FNCALL	_robotMove,_ser_putch
    85                           	FNCALL	_rotate,_spi_transfer
    86                           	FNCALL	_robo_init,_ser_putch
    87                           	FNCALL	_adc_read_channel,_adc_read
    88                           	FNROOT	_main
    89                           	FNCALL	_isr1,i1___lwmod
    90                           	FNCALL	_isr1,_ReadButtons
    91                           	FNCALL	_ReadButtons,_Debounce
    92                           	FNCALL	intlevel1,_isr1
    93                           	global	intlevel1
    94                           	FNROOT	intlevel1
    95                           	global	_menuStrings
    96                           	global	_shortMenuStrings
    97                           	global	_current_step
    98                           psect	idataBANK1,class=CODE,space=0,delta=2
    99                           global __pidataBANK1
   100  0968                     __pidataBANK1:
   101                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   102                           	line	32
   103                           
   104                           ;initializer for _menuStrings
   105  0968  3445               	retlw	(STR_1-__stringbase)&0ffh
   106  0969  343C               	retlw	(STR_2-__stringbase)&0ffh
   107  096A  3457               	retlw	(STR_3-__stringbase)&0ffh
   108  096B  3460               	retlw	(STR_4-__stringbase)&0ffh
   109  096C  344E               	retlw	(STR_5-__stringbase)&0ffh
   110  096D  3433               	retlw	(STR_6-__stringbase)&0ffh
   111                           	line	33
   112                           
   113                           ;initializer for _shortMenuStrings
   114  096E  3484               	retlw	(STR_7-__stringbase)&0ffh
   115  096F  3488               	retlw	(STR_8-__stringbase)&0ffh
   116  0970  3470               	retlw	(STR_9-__stringbase)&0ffh
   117  0971  347C               	retlw	(STR_10-__stringbase)&0ffh
   118  0972  348C               	retlw	(STR_11-__stringbase)&0ffh
   119  0973  3480               	retlw	(STR_12-__stringbase)&0ffh
   120                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   121                           	line	30
   122                           
   123                           ;initializer for _current_step
   124  0974  343C               	retlw	03Ch
   125                           	global	_dpowers
   126                           psect	strings,class=STRING,delta=2
   127                           global __pstrings
   128  0700                     __pstrings:
   129                           ;	global	stringdir,stringtab,__stringbase
   130  0700                     stringtab:
   131                           ;	String table - string pointers are 1 byte each
   132  0700  1BFF               	btfsc	(btemp+1),7
   133  0701  2F0A               	ljmp	stringcode
   134  0702  1383               	bcf	status,7
   135  0703  187F               	btfsc	(btemp+1),0
   136  0704  1783               	bsf	status,7
   137  0705  0800               	movf	indf,w
   138  0706  0A84               	incf fsr
   139  0707  1903               skipnz
   140  0708  0AFF               incf btemp+1
   141  0709  0008               	return
   142  070A                     stringcode:stringdir:
      + 070A                     stringdir:	
   143  070A  3007               movlw high(stringdir)
   144  070B  008A               movwf pclath
   145  070C  0804               movf fsr,w
   146  070D  0A84               incf fsr
   147  070E  0782               	addwf pc
   148  070F                     __stringbase:
   149  070F  3400               	retlw	0
   150                           psect	strings
   151                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   152                           	line	350
   153  0710                     _dpowers:
   154  0710  3401               	retlw	01h
   155  0711  3400               	retlw	0
   156                           
   157  0712  340A               	retlw	0Ah
   158  0713  3400               	retlw	0
   159                           
   160  0714  3464               	retlw	064h
   161  0715  3400               	retlw	0
   162                           
   163  0716  34E8               	retlw	0E8h
   164  0717  3403               	retlw	03h
   165                           
   166  0718  3410               	retlw	010h
   167  0719  3427               	retlw	027h
   168                           
   169                           	global	_dpowers
   170                           	global	_RTC_Counter
   171                           	global	_adcVal
   172                           	global	_buttonPressed
   173                           	global	_txiptr
   174                           	global	_txoptr
   175                           	global	_RTC_FLAG_1MS
   176                           	global	UpdateDisplay@F1230
   177                           	global	_CenterPressed
   178                           	global	_CenterReleased
   179                           	global	_DownPressed
   180                           	global	_DownReleased
   181                           	global	_LeftPressed
   182                           	global	_LeftReleased
   183                           	global	_RTC_FLAG_10MS
   184                           	global	_RTC_FLAG_250MS
   185                           	global	_RTC_FLAG_500MS
   186                           	global	_RTC_FLAG_50MS
   187                           	global	_RightPressed
   188                           	global	_RightReleased
   189                           	global	_UpPressed
   190                           	global	_UpReleased
   191                           	global	_rxfifo
   192                           	global	_txfifo
   193                           	global	_distTravelled
   194                           	global	_dist_high
   195                           	global	_dist_low
   196                           	global	_distance
   197                           	global	_pos
   198                           	global	_test
   199                           	global	_total
   200                           	global	_totalSteps
   201                           	global	_CenterDebounceCount
   202                           	global	_DistHighByte
   203                           	global	_DistLowByte
   204                           	global	_DownDebounceCount
   205                           	global	_LeftDebounceCount
   206                           	global	_RightDebounceCount
   207                           	global	_SCAN_FLAG
   208                           	global	_UpDebounceCount
   209                           	global	_currentMenu
   210                           	global	_current_direction
   211                           	global	_highByte
   212                           	global	_lowByte
   213                           	global	_rxiptr
   214                           	global	_rxoptr
   215                           	global	_ser_tmp
   216                           	global	_serialInput
   217                           	global	_turnhighByte
   218                           	global	_turnlowByte
   219                           	global	_ADCON0
   220  001F                     _ADCON0	set	31
   221                           	global	_ADRESH
   222  001E                     _ADRESH	set	30
   223                           	global	_PORTA
   224  0005                     _PORTA	set	5
   225                           	global	_PORTC
   226  0007                     _PORTC	set	7
   227                           	global	_PORTD
   228  0008                     _PORTD	set	8
   229                           	global	_PORTE
   230  0009                     _PORTE	set	9
   231                           	global	_RCREG
   232  001A                     _RCREG	set	26
   233                           	global	_SSPBUF
   234  0013                     _SSPBUF	set	19
   235                           	global	_SSPCON
   236  0014                     _SSPCON	set	20
   237                           	global	_TMR0
   238  0001                     _TMR0	set	1
   239                           	global	_TXREG
   240  0019                     _TXREG	set	25
   241                           	global	AT25256A@CS0
   242  0038                     AT25256A@CS0	set	56
   243                           	global	AT25256A@CS1
   244  0039                     AT25256A@CS1	set	57
   245                           	global	_CARRY
   246  0018                     _CARRY	set	24
   247                           	global	_CHS0
   248  00FB                     _CHS0	set	251
   249                           	global	_CHS1
   250  00FC                     _CHS1	set	252
   251                           	global	_CHS2
   252  00FD                     _CHS2	set	253
   253                           	global	_CREN
   254  00C4                     _CREN	set	196
   255                           	global	_GIE
   256  005F                     _GIE	set	95
   257                           	global	_GO
   258  00FA                     _GO	set	250
   259                           	global	_OERR
   260  00C1                     _OERR	set	193
   261                           	global	_PEIE
   262  005E                     _PEIE	set	94
   263                           	global	_RB0
   264  0030                     _RB0	set	48
   265                           	global	_RB2
   266  0032                     _RB2	set	50
   267                           	global	_RB3
   268  0033                     _RB3	set	51
   269                           	global	_RB4
   270  0034                     _RB4	set	52
   271                           	global	_RB5
   272  0035                     _RB5	set	53
   273                           	global	_RB6
   274  0036                     _RB6	set	54
   275                           	global	_RC0
   276  0038                     _RC0	set	56
   277                           	global	_RC1
   278  0039                     _RC1	set	57
   279                           	global	_RC2
   280  003A                     _RC2	set	58
   281                           	global	_RCIF
   282  0065                     _RCIF	set	101
   283                           	global	_RE0
   284  0048                     _RE0	set	72
   285                           	global	_RE1
   286  0049                     _RE1	set	73
   287                           	global	_RE2
   288  004A                     _RE2	set	74
   289                           	global	_RX9
   290  00C6                     _RX9	set	198
   291                           	global	_SPEN
   292  00C7                     _SPEN	set	199
   293                           	global	_SSPIF
   294  0063                     _SSPIF	set	99
   295                           	global	_TMR0IE
   296  005D                     _TMR0IE	set	93
   297                           	global	_TMR0IF
   298  005A                     _TMR0IF	set	90
   299                           	global	_TXIF
   300  0064                     _TXIF	set	100
   301                           	global	_ADCON1
   302  009F                     _ADCON1	set	159
   303                           	global	_ADRESL
   304  009E                     _ADRESL	set	158
   305                           	global	_OPTION_REG
   306  0081                     _OPTION_REG	set	129
   307                           	global	_SPBRG
   308  0099                     _SPBRG	set	153
   309                           	global	_SSPSTAT
   310  0094                     _SSPSTAT	set	148
   311                           	global	_TRISA
   312  0085                     _TRISA	set	133
   313                           	global	_TRISB
   314  0086                     _TRISB	set	134
   315                           	global	_TRISC
   316  0087                     _TRISC	set	135
   317                           	global	_TRISD
   318  0088                     _TRISD	set	136
   319                           	global	_TRISE
   320  0089                     _TRISE	set	137
   321                           	global	_BRGH
   322  04C2                     _BRGH	set	1218
   323                           	global	_RCIE
   324  0465                     _RCIE	set	1125
   325                           	global	_SYNC
   326  04C4                     _SYNC	set	1220
   327                           	global	_TX9
   328  04C6                     _TX9	set	1222
   329                           	global	_TXEN
   330  04C5                     _TXEN	set	1221
   331                           	global	_TXIE
   332  0464                     _TXIE	set	1124
   333                           	global	_EEADR
   334  010D                     _EEADR	set	269
   335                           	global	_EEDATA
   336  010C                     _EEDATA	set	268
   337                           	global	_EECON1
   338  018C                     _EECON1	set	396
   339                           	global	_EECON2
   340  018D                     _EECON2	set	397
   341                           	global	_RD
   342  0C60                     _RD	set	3168
   343                           	global	_WR
   344  0C61                     _WR	set	3169
   345                           	global	_WREN
   346  0C62                     _WREN	set	3170
   347                           	
   348  071A                     STR_18:	
   349  071A  3420               	retlw	32	;' '
   350  071B  3443               	retlw	67	;'C'
   351  071C  3468               	retlw	104	;'h'
   352  071D  3461               	retlw	97	;'a'
   353  071E  3472               	retlw	114	;'r'
   354  071F  3467               	retlw	103	;'g'
   355  0720  3469               	retlw	105	;'i'
   356  0721  346E               	retlw	110	;'n'
   357  0722  3467               	retlw	103	;'g'
   358  0723  3420               	retlw	32	;' '
   359  0724  344D               	retlw	77	;'M'
   360  0725  346F               	retlw	111	;'o'
   361  0726  3464               	retlw	100	;'d'
   362  0727  3465               	retlw	101	;'e'
   363  0728  3420               	retlw	32	;' '
   364  0729  3400               	retlw	0
   365                           psect	strings
   366                           	
   367  072A                     STR_13:	
   368  072A  3441               	retlw	65	;'A'
   369  072B  3444               	retlw	68	;'D'
   370  072C  3443               	retlw	67	;'C'
   371  072D  343A               	retlw	58	;':'
   372  072E  3425               	retlw	37	;'%'
   373  072F  3464               	retlw	100	;'d'
   374  0730  3420               	retlw	32	;' '
   375  0731  3444               	retlw	68	;'D'
   376  0732  3469               	retlw	105	;'i'
   377  0733  3473               	retlw	115	;'s'
   378  0734  3474               	retlw	116	;'t'
   379  0735  343A               	retlw	58	;':'
   380  0736  3425               	retlw	37	;'%'
   381  0737  3464               	retlw	100	;'d'
   382  0738  3400               	retlw	0
   383                           psect	strings
   384                           	
   385  0739                     STR_19:	
   386  0739  3420               	retlw	32	;' '
   387  073A  3420               	retlw	32	;' '
   388  073B  3445               	retlw	69	;'E'
   389  073C  3458               	retlw	88	;'X'
   390  073D  3449               	retlw	73	;'I'
   391  073E  3454               	retlw	84	;'T'
   392  073F  3420               	retlw	32	;' '
   393  0740  3420               	retlw	32	;' '
   394  0741  3400               	retlw	0
   395                           psect	strings
   396                           	
   397  0742                     STR_6:	
   398  0742  3420               	retlw	32	;' '
   399  0743  3443               	retlw	67	;'C'
   400  0744  3468               	retlw	104	;'h'
   401  0745  3461               	retlw	97	;'a'
   402  0746  3472               	retlw	114	;'r'
   403  0747  3467               	retlw	103	;'g'
   404  0748  3465               	retlw	101	;'e'
   405  0749  3420               	retlw	32	;' '
   406  074A  3400               	retlw	0
   407                           psect	strings
   408                           	
   409  074B                     STR_2:	
   410  074B  3453               	retlw	83	;'S'
   411  074C  3463               	retlw	99	;'c'
   412  074D  3461               	retlw	97	;'a'
   413  074E  346E               	retlw	110	;'n'
   414  074F  345F               	retlw	95	;'_'
   415  0750  3433               	retlw	51	;'3'
   416  0751  3436               	retlw	54	;'6'
   417  0752  3430               	retlw	48	;'0'
   418  0753  3400               	retlw	0
   419                           psect	strings
   420                           	
   421  0754                     STR_1:	
   422  0754  3443               	retlw	67	;'C'
   423  0755  3461               	retlw	97	;'a'
   424  0756  346C               	retlw	108	;'l'
   425  0757  3469               	retlw	105	;'i'
   426  0758  3462               	retlw	98	;'b'
   427  0759  345F               	retlw	95	;'_'
   428  075A  3449               	retlw	73	;'I'
   429  075B  3452               	retlw	82	;'R'
   430  075C  3400               	retlw	0
   431                           psect	strings
   432                           	
   433  075D                     STR_5:	
   434  075D  3446               	retlw	70	;'F'
   435  075E  346C               	retlw	108	;'l'
   436  075F  3477               	retlw	119	;'w'
   437  0760  345F               	retlw	95	;'_'
   438  0761  3457               	retlw	87	;'W'
   439  0762  3461               	retlw	97	;'a'
   440  0763  346C               	retlw	108	;'l'
   441  0764  346C               	retlw	108	;'l'
   442  0765  3400               	retlw	0
   443                           psect	strings
   444                           	
   445  0766                     STR_3:	
   446  0766  3444               	retlw	68	;'D'
   447  0767  3472               	retlw	114	;'r'
   448  0768  3469               	retlw	105	;'i'
   449  0769  3476               	retlw	118	;'v'
   450  076A  3465               	retlw	101	;'e'
   451  076B  345F               	retlw	95	;'_'
   452  076C  3432               	retlw	50	;'2'
   453  076D  346D               	retlw	109	;'m'
   454  076E  3400               	retlw	0
   455                           psect	strings
   456                           	
   457  076F                     STR_4:	
   458  076F  3444               	retlw	68	;'D'
   459  0770  3472               	retlw	114	;'r'
   460  0771  3469               	retlw	105	;'i'
   461  0772  3476               	retlw	118	;'v'
   462  0773  3465               	retlw	101	;'e'
   463  0774  345F               	retlw	95	;'_'
   464  0775  344C               	retlw	76	;'L'
   465  0776  3400               	retlw	0
   466                           psect	strings
   467                           	
   468  0777                     STR_16:	
   469  0777  3443               	retlw	67	;'C'
   470  0778  344F               	retlw	79	;'O'
   471  0779  344E               	retlw	78	;'N'
   472  077A  3446               	retlw	70	;'F'
   473  077B  3449               	retlw	73	;'I'
   474  077C  3452               	retlw	82	;'R'
   475  077D  344D               	retlw	77	;'M'
   476  077E  3400               	retlw	0
   477                           psect	strings
   478                           	
   479  077F                     STR_9:	
   480  077F  3444               	retlw	68	;'D'
   481  0780  3472               	retlw	114	;'r'
   482  0781  3432               	retlw	50	;'2'
   483  0782  3400               	retlw	0
   484                           psect	strings
   485                           	
   486  0783                     STR_15:	
   487  0783  343C               	retlw	60	;'<'
   488  0784  343C               	retlw	60	;'<'
   489  0785  343C               	retlw	60	;'<'
   490  0786  3400               	retlw	0
   491                           psect	strings
   492                           	
   493  0787                     STR_17:	
   494  0787  343E               	retlw	62	;'>'
   495  0788  343E               	retlw	62	;'>'
   496  0789  343E               	retlw	62	;'>'
   497  078A  3400               	retlw	0
   498                           psect	strings
   499                           	
   500  078B                     STR_10:	
   501  078B  3444               	retlw	68	;'D'
   502  078C  3472               	retlw	114	;'r'
   503  078D  344C               	retlw	76	;'L'
   504  078E  3400               	retlw	0
   505                           psect	strings
   506                           	
   507  078F                     STR_12:	
   508  078F  3443               	retlw	67	;'C'
   509  0790  3468               	retlw	104	;'h'
   510  0791  3467               	retlw	103	;'g'
   511  0792  3400               	retlw	0
   512                           psect	strings
   513                           	
   514  0793                     STR_7:	
   515  0793  3443               	retlw	67	;'C'
   516  0794  3461               	retlw	97	;'a'
   517  0795  346C               	retlw	108	;'l'
   518  0796  3400               	retlw	0
   519                           psect	strings
   520                           	
   521  0797                     STR_8:	
   522  0797  3453               	retlw	83	;'S'
   523  0798  3463               	retlw	99	;'c'
   524  0799  346E               	retlw	110	;'n'
   525  079A  3400               	retlw	0
   526                           psect	strings
   527                           	
   528  079B                     STR_11:	
   529  079B  3446               	retlw	70	;'F'
   530  079C  346C               	retlw	108	;'l'
   531  079D  3477               	retlw	119	;'w'
   532  079E  3400               	retlw	0
   533                           psect	strings
   534  072A                     STR_14	equ	STR_13+0
   535                           	file	"Assignment3_AldnoahZero.as"
   536                           	line	#
   537                           psect cinit,class=CODE,delta=2
   538                           global start_initialization
   539  0AEA                     start_initialization:
   540                           
   541                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   542                           global __pbitbssCOMMON
   543  0380                     __pbitbssCOMMON:
   544  0380                     _CenterPressed:
   545  0380                            ds      1
   546                           
   547  0381                     _CenterReleased:
   548  0381                            ds      1
   549                           
   550  0382                     _DownPressed:
   551  0382                            ds      1
   552                           
   553  0383                     _DownReleased:
   554  0383                            ds      1
   555                           
   556  0384                     _LeftPressed:
   557  0384                            ds      1
   558                           
   559  0385                     _LeftReleased:
   560  0385                            ds      1
   561                           
   562  0386                     _RTC_FLAG_10MS:
   563  0386                            ds      1
   564                           
   565  0387                     _RTC_FLAG_250MS:
   566  0387                            ds      1
   567                           
   568  0388                     _RTC_FLAG_500MS:
   569  0388                            ds      1
   570                           
   571  0389                     _RTC_FLAG_50MS:
   572  0389                            ds      1
   573                           
   574  038A                     _RightPressed:
   575  038A                            ds      1
   576                           
   577  038B                     _RightReleased:
   578  038B                            ds      1
   579                           
   580  038C                     _UpPressed:
   581  038C                            ds      1
   582                           
   583  038D                     _UpReleased:
   584  038D                            ds      1
   585                           
   586                           psect	bitbssBANK0,class=BANK0,bit,space=1
   587                           global __pbitbssBANK0
   588  0378                     __pbitbssBANK0:
   589  0378                     _RTC_FLAG_1MS:
   590  0378                            ds      1
   591                           
   592                           psect	bssBANK0,class=BANK0,space=1
   593                           global __pbssBANK0
   594  0068                     __pbssBANK0:
   595  0068                     _RTC_Counter:
   596  0068                            ds      2
   597                           
   598  006A                     _adcVal:
   599  006A                            ds      2
   600                           
   601  006C                     _buttonPressed:
   602  006C                            ds      1
   603                           
   604  006D                     _txiptr:
   605  006D                            ds      1
   606                           
   607  006E                     _txoptr:
   608  006E                            ds      1
   609                           
   610                           psect	bssBANK1,class=BANK1,space=1
   611                           global __pbssBANK1
   612  00A0                     __pbssBANK1:
   613  00A0                     _rxfifo:
   614  00A0                            ds      16
   615                           
   616  00B0                     _txfifo:
   617  00B0                            ds      16
   618                           
   619  00C0                     _distTravelled:
   620  00C0                            ds      2
   621                           
   622  00C2                     _dist_high:
   623  00C2                            ds      2
   624                           
   625  00C4                     _dist_low:
   626  00C4                            ds      2
   627                           
   628  00C6                     _distance:
   629  00C6                            ds      2
   630                           
   631  00C8                     _pos:
   632  00C8                            ds      2
   633                           
   634  00CA                     _test:
   635  00CA                            ds      2
   636                           
   637  00CC                     _total:
   638  00CC                            ds      2
   639                           
   640  00CE                     _totalSteps:
   641  00CE                            ds      2
   642                           
   643  00D0                     _CenterDebounceCount:
   644  00D0                            ds      1
   645                           
   646  00D1                     _DistHighByte:
   647  00D1                            ds      1
   648                           
   649  00D2                     _DistLowByte:
   650  00D2                            ds      1
   651                           
   652  00D3                     _DownDebounceCount:
   653  00D3                            ds      1
   654                           
   655  00D4                     _LeftDebounceCount:
   656  00D4                            ds      1
   657                           
   658  00D5                     _RightDebounceCount:
   659  00D5                            ds      1
   660                           
   661  00D6                     _SCAN_FLAG:
   662  00D6                            ds      1
   663                           
   664  00D7                     _UpDebounceCount:
   665  00D7                            ds      1
   666                           
   667  00D8                     _currentMenu:
   668  00D8                            ds      1
   669                           
   670  00D9                     _current_direction:
   671  00D9                            ds      1
   672                           
   673  00DA                     _highByte:
   674  00DA                            ds      1
   675                           
   676  00DB                     _lowByte:
   677  00DB                            ds      1
   678                           
   679  00DC                     _rxiptr:
   680  00DC                            ds      1
   681                           
   682  00DD                     _rxoptr:
   683  00DD                            ds      1
   684                           
   685  00DE                     _ser_tmp:
   686  00DE                            ds      1
   687                           
   688  00DF                     _serialInput:
   689  00DF                            ds      1
   690                           
   691  00E0                     _turnhighByte:
   692  00E0                            ds      1
   693                           
   694  00E1                     _turnlowByte:
   695  00E1                            ds      1
   696                           
   697                           psect	dataBANK1,class=BANK1,space=1
   698                           global __pdataBANK1
   699  00E2                     __pdataBANK1:
   700                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   701                           	line	32
   702  00E2                     _menuStrings:
   703  00E2                            ds      6
   704                           
   705                           psect	dataBANK1
   706                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
   707                           	line	33
   708  00E8                     _shortMenuStrings:
   709  00E8                            ds      6
   710                           
   711                           psect	dataBANK1
   712                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
   713                           	line	30
   714  00EE                     _current_step:
   715  00EE                            ds      1
   716                           
   717                           psect	bssBANK3,class=BANK3,space=1
   718                           global __pbssBANK3
   719  0190                     __pbssBANK3:
   720  0190                     UpdateDisplay@F1230:
   721  0190                            ds      16
   722                           
   723                           psect clrtext,class=CODE,delta=2
   724                           global clear_ram
   725                           ;	Called with FSR containing the base address, and
   726                           ;	W with the last address+1
   727  06F6                     clear_ram:
   728  06F6  0064               	clrwdt			;clear the watchdog before getting into this loop
   729  06F7                     clrloop:
   730  06F7  0180               	clrf	indf		;clear RAM location pointed to by FSR
   731  06F8  0A84               	incf	fsr,f		;increment pointer
   732  06F9  0604               	xorwf	fsr,w		;XOR with final address
   733  06FA  1903               	btfsc	status,2	;have we reached the end yet?
   734  06FB  3400               	retlw	0		;all done for this memory range, return
   735  06FC  0604               	xorwf	fsr,w		;XOR again to restore value
   736  06FD  2EF7               	goto	clrloop		;do the next byte
   737                           
   738                           ; Clear objects allocated to BITCOMMON
   739                           psect cinit,class=CODE,delta=2
   740  0AEA  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   741  0AEB  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   742                           ; Clear objects allocated to BITBANK0
   743                           psect cinit,class=CODE,delta=2
   744  0AEC  01EF               	clrf	((__pbitbssBANK0/8)+0)&07Fh
   745                           ; Clear objects allocated to BANK0
   746                           psect cinit,class=CODE,delta=2
   747  0AED  01E8               	clrf	((__pbssBANK0)+0)&07Fh
   748  0AEE  01E9               	clrf	((__pbssBANK0)+1)&07Fh
   749  0AEF  01EA               	clrf	((__pbssBANK0)+2)&07Fh
   750  0AF0  01EB               	clrf	((__pbssBANK0)+3)&07Fh
   751  0AF1  01EC               	clrf	((__pbssBANK0)+4)&07Fh
   752  0AF2  01ED               	clrf	((__pbssBANK0)+5)&07Fh
   753  0AF3  01EE               	clrf	((__pbssBANK0)+6)&07Fh
   754                           ; Clear objects allocated to BANK1
   755                           psect cinit,class=CODE,delta=2
   756  0AF4  1383               	bcf	status, 7	;select IRP bank0
   757  0AF5  30A0               	movlw	low(__pbssBANK1)
   758  0AF6  0084               	movwf	fsr
   759  0AF7  30E2               	movlw	low((__pbssBANK1)+042h)
   760  0AF8  120A  118A  26F6   	fcall	clear_ram
              120A  158A         
   761                           ; Clear objects allocated to BANK3
   762                           psect cinit,class=CODE,delta=2
   763  0AFD  1783               	bsf	status, 7	;select IRP bank2
   764  0AFE  3090               	movlw	low(__pbssBANK3)
   765  0AFF  0084               	movwf	fsr
   766  0B00  30A0               	movlw	low((__pbssBANK3)+010h)
   767  0B01  120A  118A  26F6   	fcall	clear_ram
              120A  158A         
   768                           global btemp
   769                           psect inittext,class=CODE,delta=2
   770                           global init_fetch,btemp
   771                           ;	Called with low address in FSR and high address in W
   772  0988                     init_fetch:
   773  0988  087E               	movf btemp,w
   774  0989  008A               	movwf pclath
   775  098A  087F               	movf btemp+1,w
   776  098B  0082               	movwf pc
   777                           global init_ram
   778                           ;Called with:
   779                           ;	high address of idata address in btemp 
   780                           ;	low address of idata address in btemp+1 
   781                           ;	low address of data in FSR
   782                           ;	high address + 1 of data in btemp-1
   783  098C                     init_ram:
   784  098C  120A  158A  2188   	fcall init_fetch
              120A  158A         
   785  0991  0080               	movwf indf,f
   786  0992  0A84               	incf fsr,f
   787  0993  0804               	movf fsr,w
   788  0994  067D               	xorwf btemp-1,w
   789  0995  1903               	btfsc status,2
   790  0996  3400               	retlw 0
   791  0997  0AFF               	incf btemp+1,f
   792  0998  1903               	btfsc status,2
   793  0999  0AFE               	incf btemp,f
   794  099A  298C               	goto init_ram
   795                           ; Initialize objects allocated to BANK1
   796                           psect cinit,class=CODE,delta=2
   797                           global init_ram, __pidataBANK1
   798  0B06  1383               	bcf	status, 7	;select IRP bank0
   799  0B07  30EF               	movlw low(__pdataBANK1+13)
   800  0B08  00FD               	movwf btemp-1,f
   801  0B09  3009               	movlw high(__pidataBANK1)
   802  0B0A  00FE               	movwf btemp,f
   803  0B0B  3068               	movlw low(__pidataBANK1)
   804  0B0C  00FF               	movwf btemp+1,f
   805  0B0D  30E2               	movlw low(__pdataBANK1)
   806  0B0E  0084               	movwf fsr,f
   807  0B0F  120A  158A  218C   	fcall init_ram
              120A  158A         
   808                           psect cinit,class=CODE,delta=2
   809                           global end_of_initialization
   810                           
   811                           ;End of C runtime variable initialization code
   812                           
   813  0B14                     end_of_initialization:
   814  0B14  0183               clrf status
   815  0B15  120A  118A  2BB1   ljmp _main	;jump to C main() function
   816                           psect	cstackCOMMON,class=COMMON,space=1
   817                           global __pcstackCOMMON
   818  0072                     __pcstackCOMMON:
   819                           	global	?_ser_init
   820  0072                     ?_ser_init:	; 0 bytes @ 0x0
   821                           	global	?_robo_init
   822  0072                     ?_robo_init:	; 0 bytes @ 0x0
   823                           	global	?_UpdateDisplay
   824  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   825                           	global	?_ser_putch
   826  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   827                           	global	?_readAvgDistance
   828  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   829                           	global	?_ADCconvert
   830  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   831                           	global	?_init_adc
   832  0072                     ?_init_adc:	; 0 bytes @ 0x0
   833                           	global	?_lcd_write_control
   834  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   835                           	global	?_lcd_write_data
   836  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   837                           	global	?_lcd_set_cursor
   838  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   839                           	global	?_lcd_init
   840  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   841                           	global	?_isr1
   842  0072                     ?_isr1:	; 0 bytes @ 0x0
   843                           	global	?_init
   844  0072                     ?_init:	; 0 bytes @ 0x0
   845                           	global	?_calibrateIR
   846  0072                     ?_calibrateIR:	; 0 bytes @ 0x0
   847                           	global	?_ChargeMode
   848  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   849                           	global	?_main
   850  0072                     ?_main:	; 0 bytes @ 0x0
   851                           	global	?_Debounce
   852  0072                     ?_Debounce:	; 0 bytes @ 0x0
   853                           	global	??_Debounce
   854  0072                     ??_Debounce:	; 0 bytes @ 0x0
   855                           	global	?_ReadButtons
   856  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   857                           	global	?_Menu
   858  0072                     ?_Menu:	; 1 bytes @ 0x0
   859                           	global	?_adc_read_channel
   860  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   861                           	global	?_spi_transfer
   862  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   863                           	global	?i1___lwmod
   864  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   865                           	global	i1___lwmod@divisor
   866  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   867  0072                     	ds	1
   868                           	global	??_ReadButtons
   869  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   870  0073                     	ds	1
   871                           	global	i1___lwmod@dividend
   872  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   873  0074                     	ds	2
   874                           	global	??i1___lwmod
   875  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   876  0076                     	ds	1
   877                           	global	i1___lwmod@counter
   878  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   879  0077                     	ds	1
   880                           	global	??_isr1
   881  0078                     ??_isr1:	; 0 bytes @ 0x6
   882  0078                     	ds	6
   883                           psect	cstackBANK0,class=BANK0,space=1
   884                           global __pcstackBANK0
   885  0020                     __pcstackBANK0:
   886                           	global	??_ser_init
   887  0020                     ??_ser_init:	; 0 bytes @ 0x0
   888                           	global	??_ser_putch
   889  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   890                           	global	??_Menu
   891  0020                     ??_Menu:	; 0 bytes @ 0x0
   892                           	global	??_init_adc
   893  0020                     ??_init_adc:	; 0 bytes @ 0x0
   894                           	global	??_lcd_write_control
   895  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
   896                           	global	??_lcd_write_data
   897  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
   898                           	global	??_spi_transfer
   899  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
   900                           	global	?_adc_read
   901  0020                     ?_adc_read:	; 2 bytes @ 0x0
   902                           	global	?___wmul
   903  0020                     ?___wmul:	; 2 bytes @ 0x0
   904                           	global	?___awmod
   905  0020                     ?___awmod:	; 2 bytes @ 0x0
   906                           	global	Menu@input
   907  0020                     Menu@input:	; 1 bytes @ 0x0
   908                           	global	___wmul@multiplier
   909  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   910                           	global	___awmod@divisor
   911  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
   912  0020                     	ds	1
   913                           	global	spi_transfer@temp
   914  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
   915                           	global	ser_putch@c
   916  0021                     ser_putch@c:	; 1 bytes @ 0x1
   917  0021                     	ds	1
   918                           	global	??_adc_read
   919  0022                     ??_adc_read:	; 0 bytes @ 0x2
   920                           	global	??_robo_init
   921  0022                     ??_robo_init:	; 0 bytes @ 0x2
   922                           	global	?_robotMove
   923  0022                     ?_robotMove:	; 0 bytes @ 0x2
   924                           	global	?_robotTurn
   925  0022                     ?_robotTurn:	; 0 bytes @ 0x2
   926                           	global	lcd_write_control@databyte
   927  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
   928                           	global	lcd_write_data@databyte
   929  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
   930                           	global	spi_transfer@data
   931  0022                     spi_transfer@data:	; 1 bytes @ 0x2
   932                           	global	robotMove@distance
   933  0022                     robotMove@distance:	; 2 bytes @ 0x2
   934                           	global	robotTurn@distance
   935  0022                     robotTurn@distance:	; 2 bytes @ 0x2
   936                           	global	___wmul@multiplicand
   937  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   938                           	global	___awmod@dividend
   939  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
   940  0022                     	ds	1
   941                           	global	?_rotate
   942  0023                     ?_rotate:	; 0 bytes @ 0x3
   943                           	global	??_lcd_set_cursor
   944  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
   945                           	global	??_lcd_init
   946  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   947                           	global	??_init
   948  0023                     ??_init:	; 0 bytes @ 0x3
   949                           	global	lcd_set_cursor@address
   950  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
   951                           	global	rotate@numsteps
   952  0023                     rotate@numsteps:	; 2 bytes @ 0x3
   953  0023                     	ds	1
   954                           	global	??_robotMove
   955  0024                     ??_robotMove:	; 0 bytes @ 0x4
   956                           	global	??_robotTurn
   957  0024                     ??_robotTurn:	; 0 bytes @ 0x4
   958                           	global	??___wmul
   959  0024                     ??___wmul:	; 0 bytes @ 0x4
   960                           	global	??___awmod
   961  0024                     ??___awmod:	; 0 bytes @ 0x4
   962                           	global	adc_read@adc_value
   963  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
   964                           	global	___wmul@product
   965  0024                     ___wmul@product:	; 2 bytes @ 0x4
   966  0024                     	ds	1
   967                           	global	rotate@direction
   968  0025                     rotate@direction:	; 1 bytes @ 0x5
   969                           	global	___awmod@counter
   970  0025                     ___awmod@counter:	; 1 bytes @ 0x5
   971  0025                     	ds	1
   972                           	global	??_rotate
   973  0026                     ??_rotate:	; 0 bytes @ 0x6
   974                           	global	??_adc_read_channel
   975  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
   976                           	global	?___lwdiv
   977  0026                     ?___lwdiv:	; 2 bytes @ 0x6
   978                           	global	___awmod@sign
   979  0026                     ___awmod@sign:	; 1 bytes @ 0x6
   980                           	global	___lwdiv@divisor
   981  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
   982  0026                     	ds	1
   983                           	global	?_lcd_write_string
   984  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
   985                           	global	adc_read_channel@channel
   986  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
   987                           	global	lcd_write_string@s
   988  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
   989  0027                     	ds	1
   990                           	global	?_readDistance
   991  0028                     ?_readDistance:	; 2 bytes @ 0x8
   992                           	global	rotate@i
   993  0028                     rotate@i:	; 2 bytes @ 0x8
   994                           	global	___lwdiv@dividend
   995  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
   996  0028                     	ds	1
   997                           	global	??_lcd_write_string
   998  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
   999  0029                     	ds	1
  1000                           	global	??_readDistance
  1001  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1002                           	global	??___lwdiv
  1003  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1004  002A                     	ds	1
  1005                           	global	___lwdiv@quotient
  1006  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1007  002B                     	ds	1
  1008                           	global	readDistance@fullval
  1009  002C                     readDistance@fullval:	; 2 bytes @ 0xC
  1010  002C                     	ds	1
  1011                           	global	___lwdiv@counter
  1012  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1013  002D                     	ds	1
  1014                           	global	??_ADCconvert
  1015  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1016                           	global	?___lwmod
  1017  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1018                           	global	___lwmod@divisor
  1019  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1020  002E                     	ds	2
  1021                           	global	??_readAvgDistance
  1022  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1023                           	global	readAvgDistance@fullval
  1024  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1025                           	global	___lwmod@dividend
  1026  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1027  0030                     	ds	2
  1028                           	global	??___lwmod
  1029  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1030                           	global	readAvgDistance@i
  1031  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
  1032  0032                     	ds	1
  1033                           	global	___lwmod@counter
  1034  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1035  0033                     	ds	1
  1036                           	global	?_sprintf
  1037  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1038                           	global	sprintf@f
  1039  0034                     sprintf@f:	; 1 bytes @ 0x14
  1040  0034                     	ds	5
  1041                           	global	??_sprintf
  1042  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1043  0039                     	ds	3
  1044                           	global	sprintf@ap
  1045  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1046  003C                     	ds	1
  1047                           	global	sprintf@flag
  1048  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1049  003D                     	ds	1
  1050                           	global	sprintf@prec
  1051  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1052  003E                     	ds	1
  1053                           	global	sprintf@_val
  1054  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1055  003F                     	ds	4
  1056                           	global	sprintf@sp
  1057  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1058  0043                     	ds	1
  1059                           	global	sprintf@c
  1060  0044                     sprintf@c:	; 1 bytes @ 0x24
  1061  0044                     	ds	1
  1062                           	global	??_UpdateDisplay
  1063  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1064  0045                     	ds	5
  1065                           	global	UpdateDisplay@adcOutput
  1066  004A                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x2A
  1067  004A                     	ds	16
  1068                           	global	??_calibrateIR
  1069  005A                     ??_calibrateIR:	; 0 bytes @ 0x3A
  1070                           	global	??_ChargeMode
  1071  005A                     ??_ChargeMode:	; 0 bytes @ 0x3A
  1072                           	global	?_scan360
  1073  005A                     ?_scan360:	; 2 bytes @ 0x3A
  1074  005A                     	ds	2
  1075                           	global	??_scan360
  1076  005C                     ??_scan360:	; 0 bytes @ 0x3C
  1077                           	global	scan360@lowestVal
  1078  005C                     scan360@lowestVal:	; 2 bytes @ 0x3C
  1079  005C                     	ds	2
  1080                           	global	scan360@lowestSteps
  1081  005E                     scan360@lowestSteps:	; 2 bytes @ 0x3E
  1082  005E                     	ds	2
  1083                           	global	scan360@steps
  1084  0060                     scan360@steps:	; 2 bytes @ 0x40
  1085  0060                     	ds	2
  1086                           	global	??_main
  1087  0062                     ??_main:	; 0 bytes @ 0x42
  1088  0062                     	ds	3
  1089                           	global	main@shortwall
  1090  0065                     main@shortwall:	; 2 bytes @ 0x45
  1091  0065                     	ds	2
  1092                           	global	main@choice
  1093  0067                     main@choice:	; 1 bytes @ 0x47
  1094  0067                     	ds	1
  1095 ;;Data sizes: Strings 133, constant 10, data 13, bss 89, persistent 0 stack 0
  1096 ;;Auto spaces:   Size  Autos    Used
  1097 ;; COMMON          14     12      14
  1098 ;; BANK0           80     72      80
  1099 ;; BANK1           80      0      79
  1100 ;; BANK3           96      0      16
  1101 ;; BANK2           96      0       0
  1102                           
  1103 ;;
  1104 ;; Pointer list with targets:
  1105                           
  1106 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1107 ;;
  1108 ;; ?___awmod	int  size(1) Largest target is 0
  1109 ;;
  1110 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1111 ;;
  1112 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1113 ;;
  1114 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1115 ;;
  1116 ;; ?_scan360	int  size(1) Largest target is 0
  1117 ;;
  1118 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1119 ;;
  1120 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1121 ;;
  1122 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1123 ;;		 -> STR_14(CODE[15]), STR_13(CODE[15]), 
  1124 ;;
  1125 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1126 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1127 ;;
  1128 ;; ?_sprintf	int  size(1) Largest target is 0
  1129 ;;
  1130 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1131 ;;		 -> ?_sprintf(BANK0[2]), 
  1132 ;;
  1133 ;; S8128$_cp	PTR const unsigned char  size(1) Largest target is 0
  1134 ;;
  1135 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1136 ;;
  1137 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1138 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1139 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1140 ;;
  1141 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1142 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1143 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1144 ;;
  1145 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1146 ;;		 -> STR_19(CODE[9]), STR_18(CODE[16]), STR_17(CODE[4]), STR_16(CODE[8]), 
  1147 ;;		 -> STR_15(CODE[4]), UpdateDisplay@adcOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), 
  1148 ;;		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
  1149 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1150 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1151 ;;
  1152                           
  1153                           
  1154 ;;
  1155 ;; Critical Paths under _main in COMMON
  1156 ;;
  1157 ;;   None.
  1158 ;;
  1159 ;; Critical Paths under _isr1 in COMMON
  1160 ;;
  1161 ;;   _isr1->i1___lwmod
  1162 ;;   _ReadButtons->_Debounce
  1163 ;;
  1164 ;; Critical Paths under _main in BANK0
  1165 ;;
  1166 ;;   _main->_scan360
  1167 ;;   _scan360->_UpdateDisplay
  1168 ;;   _ChargeMode->_UpdateDisplay
  1169 ;;   _calibrateIR->_UpdateDisplay
  1170 ;;   _readAvgDistance->_ADCconvert
  1171 ;;   _UpdateDisplay->_sprintf
  1172 ;;   _readDistance->_adc_read_channel
  1173 ;;   _lcd_init->_lcd_write_control
  1174 ;;   _lcd_write_string->___awmod
  1175 ;;   _lcd_set_cursor->_lcd_write_control
  1176 ;;   _sprintf->___lwmod
  1177 ;;   _ADCconvert->___lwdiv
  1178 ;;   _robotTurn->_ser_putch
  1179 ;;   _robotMove->_ser_putch
  1180 ;;   _rotate->_spi_transfer
  1181 ;;   _robo_init->_ser_putch
  1182 ;;   _adc_read_channel->_adc_read
  1183 ;;   ___lwmod->___lwdiv
  1184 ;;   ___lwdiv->___wmul
  1185 ;;
  1186 ;; Critical Paths under _isr1 in BANK0
  1187 ;;
  1188 ;;   None.
  1189 ;;
  1190 ;; Critical Paths under _main in BANK1
  1191 ;;
  1192 ;;   None.
  1193 ;;
  1194 ;; Critical Paths under _isr1 in BANK1
  1195 ;;
  1196 ;;   None.
  1197 ;;
  1198 ;; Critical Paths under _main in BANK3
  1199 ;;
  1200 ;;   None.
  1201 ;;
  1202 ;; Critical Paths under _isr1 in BANK3
  1203 ;;
  1204 ;;   None.
  1205 ;;
  1206 ;; Critical Paths under _main in BANK2
  1207 ;;
  1208 ;;   None.
  1209 ;;
  1210 ;; Critical Paths under _isr1 in BANK2
  1211 ;;
  1212 ;;   None.
  1213                           
  1214 ;;
  1215 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1216 ;;
  1217                           
  1218 ;;
  1219 ;;Call Graph Tables:
  1220 ;;
  1221 ;; ---------------------------------------------------------------------------------
  1222 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1223 ;; ---------------------------------------------------------------------------------
  1224 ;; (0) _main                                                 6     6      0    7191
  1225 ;;                                             66 BANK0      6     6      0
  1226 ;;                               _init
  1227 ;;                    _readAvgDistance
  1228 ;;                      _UpdateDisplay
  1229 ;;                               _Menu
  1230 ;;                        _calibrateIR
  1231 ;;                            _scan360
  1232 ;;                             _rotate
  1233 ;;                          _robotMove
  1234 ;;                          _robotTurn
  1235 ;;                         _ChargeMode
  1236 ;; ---------------------------------------------------------------------------------
  1237 ;; (1) _scan360                                              8     6      2    2118
  1238 ;;                                             58 BANK0      8     6      2
  1239 ;;                    _readAvgDistance
  1240 ;;                             _rotate
  1241 ;;                      _UpdateDisplay
  1242 ;; ---------------------------------------------------------------------------------
  1243 ;; (1) _ChargeMode                                           1     1      0    1349
  1244 ;;                                             58 BANK0      1     1      0
  1245 ;;                          _ser_putch
  1246 ;;                      _UpdateDisplay
  1247 ;; ---------------------------------------------------------------------------------
  1248 ;; (1) _calibrateIR                                          0     0      0    1425
  1249 ;;                             _rotate
  1250 ;;                      _UpdateDisplay
  1251 ;; ---------------------------------------------------------------------------------
  1252 ;; (2) _readAvgDistance                                      4     4      0     555
  1253 ;;                                             16 BANK0      4     4      0
  1254 ;;                       _readDistance
  1255 ;;                            ___lwdiv
  1256 ;;                         _ADCconvert
  1257 ;; ---------------------------------------------------------------------------------
  1258 ;; (2) _UpdateDisplay                                       21    21      0    1327
  1259 ;;                                             37 BANK0     21    21      0
  1260 ;;                  _lcd_write_control
  1261 ;;                            _sprintf
  1262 ;;                     _lcd_set_cursor
  1263 ;;                   _lcd_write_string
  1264 ;;                            ___awmod
  1265 ;; ---------------------------------------------------------------------------------
  1266 ;; (1) _init                                                 1     1      0      44
  1267 ;;                                              3 BANK0      1     1      0
  1268 ;;                           _init_adc
  1269 ;;                           _lcd_init
  1270 ;;                           _ser_init
  1271 ;;                          _robo_init
  1272 ;; ---------------------------------------------------------------------------------
  1273 ;; (3) _readDistance                                         6     4      2      69
  1274 ;;                                              8 BANK0      6     4      2
  1275 ;;                   _adc_read_channel
  1276 ;; ---------------------------------------------------------------------------------
  1277 ;; (2) _lcd_init                                             0     0      0      22
  1278 ;;                  _lcd_write_control
  1279 ;; ---------------------------------------------------------------------------------
  1280 ;; (3) _lcd_write_string                                     2     0      2      67
  1281 ;;                                              7 BANK0      2     0      2
  1282 ;;                     _lcd_write_data
  1283 ;;                            ___awmod (ARG)
  1284 ;; ---------------------------------------------------------------------------------
  1285 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1286 ;;                                              3 BANK0      1     1      0
  1287 ;;                  _lcd_write_control
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; (3) _sprintf                                             17    12      5     798
  1290 ;;                                             20 BANK0     17    12      5
  1291 ;;                            ___lwdiv
  1292 ;;                            ___lwmod
  1293 ;; ---------------------------------------------------------------------------------
  1294 ;; (3) _ADCconvert                                           2     2      0     254
  1295 ;;                                             14 BANK0      2     2      0
  1296 ;;                             ___wmul
  1297 ;;                            ___lwdiv
  1298 ;; ---------------------------------------------------------------------------------
  1299 ;; (1) _robotTurn                                            3     1      2      88
  1300 ;;                                              2 BANK0      3     1      2
  1301 ;;                          _ser_putch
  1302 ;; ---------------------------------------------------------------------------------
  1303 ;; (1) _robotMove                                            3     1      2      88
  1304 ;;                                              2 BANK0      3     1      2
  1305 ;;                          _ser_putch
  1306 ;; ---------------------------------------------------------------------------------
  1307 ;; (1) _rotate                                               7     4      3      98
  1308 ;;                                              3 BANK0      7     4      3
  1309 ;;                       _spi_transfer
  1310 ;; ---------------------------------------------------------------------------------
  1311 ;; (2) _robo_init                                            0     0      0      22
  1312 ;;                          _ser_putch
  1313 ;; ---------------------------------------------------------------------------------
  1314 ;; (4) _lcd_write_data                                       3     3      0      22
  1315 ;;                                              0 BANK0      3     3      0
  1316 ;; ---------------------------------------------------------------------------------
  1317 ;; (4) _lcd_write_control                                    3     3      0      22
  1318 ;;                                              0 BANK0      3     3      0
  1319 ;; ---------------------------------------------------------------------------------
  1320 ;; (2) _init_adc                                             1     1      0       0
  1321 ;;                                              0 BANK0      1     1      0
  1322 ;; ---------------------------------------------------------------------------------
  1323 ;; (4) _adc_read_channel                                     2     2      0      46
  1324 ;;                                              6 BANK0      2     2      0
  1325 ;;                           _adc_read
  1326 ;; ---------------------------------------------------------------------------------
  1327 ;; (3) ___awmod                                              7     3      4     296
  1328 ;;                                              0 BANK0      7     3      4
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; (4) ___lwmod                                              6     2      4     159
  1331 ;;                                             14 BANK0      6     2      4
  1332 ;;                            ___lwdiv (ARG)
  1333 ;; ---------------------------------------------------------------------------------
  1334 ;; (4) ___lwdiv                                              8     4      4     162
  1335 ;;                                              6 BANK0      8     4      4
  1336 ;;                             ___wmul (ARG)
  1337 ;; ---------------------------------------------------------------------------------
  1338 ;; (4) ___wmul                                               6     2      4      92
  1339 ;;                                              0 BANK0      6     2      4
  1340 ;; ---------------------------------------------------------------------------------
  1341 ;; (2) _spi_transfer                                         3     3      0      30
  1342 ;;                                              0 BANK0      3     3      0
  1343 ;; ---------------------------------------------------------------------------------
  1344 ;; (1) _Menu                                                 1     1      0      22
  1345 ;;                                              0 BANK0      1     1      0
  1346 ;; ---------------------------------------------------------------------------------
  1347 ;; (2) _ser_putch                                            2     2      0      22
  1348 ;;                                              0 BANK0      2     2      0
  1349 ;; ---------------------------------------------------------------------------------
  1350 ;; (2) _ser_init                                             1     1      0       0
  1351 ;;                                              0 BANK0      1     1      0
  1352 ;; ---------------------------------------------------------------------------------
  1353 ;; (5) _adc_read                                             6     4      2      24
  1354 ;;                                              0 BANK0      6     4      2
  1355 ;; ---------------------------------------------------------------------------------
  1356 ;; Estimated maximum stack depth 5
  1357 ;; ---------------------------------------------------------------------------------
  1358 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1359 ;; ---------------------------------------------------------------------------------
  1360 ;; (6) _isr1                                                 6     6      0     641
  1361 ;;                                              6 COMMON     6     6      0
  1362 ;;                          i1___lwmod
  1363 ;;                        _ReadButtons
  1364 ;; ---------------------------------------------------------------------------------
  1365 ;; (7) _ReadButtons                                          0     0      0       0
  1366 ;;                           _Debounce
  1367 ;; ---------------------------------------------------------------------------------
  1368 ;; (7) i1___lwmod                                            6     2      4     641
  1369 ;;                                              0 COMMON     6     2      4
  1370 ;; ---------------------------------------------------------------------------------
  1371 ;; (8) _Debounce                                             1     1      0       0
  1372 ;;                                              0 COMMON     1     1      0
  1373 ;; ---------------------------------------------------------------------------------
  1374 ;; Estimated maximum stack depth 8
  1375 ;; ---------------------------------------------------------------------------------
  1376                           
  1377 ;; Call Graph Graphs:
  1378                           
  1379 ;; _main (ROOT)
  1380 ;;   _init
  1381 ;;     _init_adc
  1382 ;;     _lcd_init
  1383 ;;       _lcd_write_control
  1384 ;;     _ser_init
  1385 ;;     _robo_init
  1386 ;;       _ser_putch
  1387 ;;   _readAvgDistance
  1388 ;;     _readDistance
  1389 ;;       _adc_read_channel
  1390 ;;         _adc_read
  1391 ;;     ___lwdiv
  1392 ;;       ___wmul (ARG)
  1393 ;;     _ADCconvert
  1394 ;;       ___wmul
  1395 ;;       ___lwdiv
  1396 ;;         ___wmul (ARG)
  1397 ;;   _UpdateDisplay
  1398 ;;     _lcd_write_control
  1399 ;;     _sprintf
  1400 ;;       ___lwdiv
  1401 ;;         ___wmul (ARG)
  1402 ;;       ___lwmod
  1403 ;;         ___lwdiv (ARG)
  1404 ;;           ___wmul (ARG)
  1405 ;;     _lcd_set_cursor
  1406 ;;       _lcd_write_control
  1407 ;;     _lcd_write_string
  1408 ;;       _lcd_write_data
  1409 ;;       ___awmod (ARG)
  1410 ;;     ___awmod
  1411 ;;   _Menu
  1412 ;;   _calibrateIR
  1413 ;;     _rotate
  1414 ;;       _spi_transfer
  1415 ;;     _UpdateDisplay
  1416 ;;       _lcd_write_control
  1417 ;;       _sprintf
  1418 ;;         ___lwdiv
  1419 ;;           ___wmul (ARG)
  1420 ;;         ___lwmod
  1421 ;;           ___lwdiv (ARG)
  1422 ;;             ___wmul (ARG)
  1423 ;;       _lcd_set_cursor
  1424 ;;         _lcd_write_control
  1425 ;;       _lcd_write_string
  1426 ;;         _lcd_write_data
  1427 ;;         ___awmod (ARG)
  1428 ;;       ___awmod
  1429 ;;   _scan360
  1430 ;;     _readAvgDistance
  1431 ;;       _readDistance
  1432 ;;         _adc_read_channel
  1433 ;;           _adc_read
  1434 ;;       ___lwdiv
  1435 ;;         ___wmul (ARG)
  1436 ;;       _ADCconvert
  1437 ;;         ___wmul
  1438 ;;         ___lwdiv
  1439 ;;           ___wmul (ARG)
  1440 ;;     _rotate
  1441 ;;       _spi_transfer
  1442 ;;     _UpdateDisplay
  1443 ;;       _lcd_write_control
  1444 ;;       _sprintf
  1445 ;;         ___lwdiv
  1446 ;;           ___wmul (ARG)
  1447 ;;         ___lwmod
  1448 ;;           ___lwdiv (ARG)
  1449 ;;             ___wmul (ARG)
  1450 ;;       _lcd_set_cursor
  1451 ;;         _lcd_write_control
  1452 ;;       _lcd_write_string
  1453 ;;         _lcd_write_data
  1454 ;;         ___awmod (ARG)
  1455 ;;       ___awmod
  1456 ;;   _rotate
  1457 ;;     _spi_transfer
  1458 ;;   _robotMove
  1459 ;;     _ser_putch
  1460 ;;   _robotTurn
  1461 ;;     _ser_putch
  1462 ;;   _ChargeMode
  1463 ;;     _ser_putch
  1464 ;;     _UpdateDisplay
  1465 ;;       _lcd_write_control
  1466 ;;       _sprintf
  1467 ;;         ___lwdiv
  1468 ;;           ___wmul (ARG)
  1469 ;;         ___lwmod
  1470 ;;           ___lwdiv (ARG)
  1471 ;;             ___wmul (ARG)
  1472 ;;       _lcd_set_cursor
  1473 ;;         _lcd_write_control
  1474 ;;       _lcd_write_string
  1475 ;;         _lcd_write_data
  1476 ;;         ___awmod (ARG)
  1477 ;;       ___awmod
  1478 ;;
  1479 ;; _isr1 (ROOT)
  1480 ;;   i1___lwmod
  1481 ;;   _ReadButtons
  1482 ;;     _Debounce
  1483 ;;
  1484                           
  1485 ;; Address spaces:
  1486                           
  1487 ;;Name               Size   Autos  Total    Cost      Usage
  1488 ;;BANK3               60      0      10       9       16.7%
  1489 ;;BITBANK3            60      0       0       8        0.0%
  1490 ;;SFR3                 0      0       0       4        0.0%
  1491 ;;BITSFR3              0      0       0       4        0.0%
  1492 ;;BANK2               60      0       0      11        0.0%
  1493 ;;BITBANK2            60      0       0      10        0.0%
  1494 ;;SFR2                 0      0       0       5        0.0%
  1495 ;;BITSFR2              0      0       0       5        0.0%
  1496 ;;SFR1                 0      0       0       2        0.0%
  1497 ;;BITSFR1              0      0       0       2        0.0%
  1498 ;;BANK1               50      0      4F       7       98.8%
  1499 ;;BITBANK1            50      0       0       6        0.0%
  1500 ;;CODE                 0      0       0       0        0.0%
  1501 ;;DATA                 0      0      C8      12        0.0%
  1502 ;;ABS                  0      0      BD       3        0.0%
  1503 ;;NULL                 0      0       0       0        0.0%
  1504 ;;STACK                0      0       B       2        0.0%
  1505 ;;BANK0               50     48      50       5      100.0%
  1506 ;;BITBANK0            50      0       1       4        1.3%
  1507 ;;SFR0                 0      0       0       1        0.0%
  1508 ;;BITSFR0              0      0       0       1        0.0%
  1509 ;;COMMON               E      C       E       1      100.0%
  1510 ;;BITCOMMON            E      0       2       0       14.3%
  1511 ;;EEDATA             100      0       0       0        0.0%
  1512                           
  1513                           	global	_main
  1514                           psect	maintext,global,class=CODE,delta=2
  1515                           global __pmaintext
  1516  03B1                     __pmaintext:
  1517                           
  1518 ;; *************** function _main *****************
  1519 ;; Defined at:
  1520 ;;		line 318 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;		None
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  shortwall       2   69[BANK0 ] int 
  1525 ;;  choice          1   71[BANK0 ] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;		None               void
  1528 ;; Registers used:
  1529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 17F/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0       0       0       0
  1536 ;;      Locals:         0       3       0       0       0
  1537 ;;      Temps:          0       3       0       0       0
  1538 ;;      Totals:         0       6       0       0       0
  1539 ;;Total ram usage:        6 bytes
  1540 ;; Hardware stack levels required when called:    8
  1541 ;; This function calls:
  1542 ;;		_init
  1543 ;;		_readAvgDistance
  1544 ;;		_UpdateDisplay
  1545 ;;		_Menu
  1546 ;;		_calibrateIR
  1547 ;;		_scan360
  1548 ;;		_rotate
  1549 ;;		_robotMove
  1550 ;;		_robotTurn
  1551 ;;		_ChargeMode
  1552 ;; This function is called by:
  1553 ;;		Startup code after reset
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           psect	maintext
  1557                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  1558                           	line	318
  1559                           	global	__size_of_main
  1560  0110                     	__size_of_main	equ	__end_of_main-_main
  1561                           	
  1562  03B1                     _main:	
  1563                           	opt	stack 0
  1564                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1565                           	line	319
  1566                           	
  1567  03B1                     l11313:	
  1568                           ;Main.c: 319: unsigned char choice = 255;
  1569  03B1  30FF               	movlw	(0FFh)
  1570  03B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1571  03B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1572  03B4  00E2               	movwf	(??_main+0)+0
  1573  03B5  0862               	movf	(??_main+0)+0,w
  1574  03B6  00E7               	movwf	(main@choice)
  1575                           	line	320
  1576                           	
  1577  03B7                     l11315:	
  1578                           ;Main.c: 320: int shortwall = 0;
  1579  03B7  01E5               	clrf	(main@shortwall)
  1580  03B8  01E6               	clrf	(main@shortwall+1)
  1581                           	line	324
  1582                           	
  1583  03B9                     l11317:	
  1584                           ;Main.c: 324: init();
  1585  03B9  120A  158A  2348   	fcall	_init
              120A  118A         
  1586  03BE  2BBF               	goto	l11319
  1587                           	line	329
  1588                           ;Main.c: 329: while(1)
  1589                           	
  1590  03BF                     l2248:	
  1591                           	line	333
  1592                           	
  1593  03BF                     l11319:	
  1594                           ;Main.c: 330: {
  1595                           ;Main.c: 333: if ((SCAN_FLAG == 0) & (RTC_FLAG_250MS == 1))
  1596  03BF  1683               	bsf	status, 5	;RP0=1, select bank1
  1597  03C0  1303               	bcf	status, 6	;RP1=0, select bank1
  1598  03C1  08D6               	movf	(_SCAN_FLAG)^080h,f
  1599  03C2  1D03               	skipz
  1600  03C3  2BC5               	goto	u4971
  1601  03C4  2BC6               	goto	u4970
  1602  03C5                     u4971:
  1603  03C5  2C0E               	goto	l11349
  1604  03C6                     u4970:
  1605                           	
  1606  03C6                     l11321:	
  1607  03C6  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1608  03C7  2BC9               	goto	u4981
  1609  03C8  2BCA               	goto	u4980
  1610  03C9                     u4981:
  1611  03C9  2C0E               	goto	l11349
  1612  03CA                     u4980:
  1613                           	line	335
  1614                           	
  1615  03CA                     l11323:	
  1616                           ;Main.c: 334: {
  1617                           ;Main.c: 335: RTC_FLAG_250MS = 0;
  1618  03CA  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1619                           	line	337
  1620                           	
  1621  03CB                     l11325:	
  1622                           ;Main.c: 337: readAvgDistance();
  1623  03CB  120A  118A  279F   	fcall	_readAvgDistance
              120A  118A         
  1624                           	line	338
  1625                           ;Main.c: 338: UpdateDisplay();
  1626  03D0  120A  118A  2238   	fcall	_UpdateDisplay
              120A  118A         
  1627  03D5  2C0E               	goto	l11349
  1628                           	line	339
  1629                           	
  1630  03D6                     l2249:	
  1631                           	line	347
  1632                           ;Main.c: 339: }
  1633                           ;Main.c: 347: switch (buttonPressed)
  1634  03D6  2C0E               	goto	l11349
  1635                           	line	349
  1636                           ;Main.c: 348: {
  1637                           ;Main.c: 349: case 1:
  1638                           	
  1639  03D7                     l2251:	
  1640                           	line	350
  1641                           	
  1642  03D7                     l11327:	
  1643                           ;Main.c: 350: Menu(1);
  1644  03D7  3001               	movlw	(01h)
  1645  03D8  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1646                           	line	352
  1647                           	
  1648  03DD                     l11329:	
  1649                           ;Main.c: 352: buttonPressed = 0;
  1650  03DD  1283               	bcf	status, 5	;RP0=0, select bank0
  1651  03DE  1303               	bcf	status, 6	;RP1=0, select bank0
  1652  03DF  01EC               	clrf	(_buttonPressed)	;volatile
  1653                           	line	354
  1654                           ;Main.c: 354: break;
  1655  03E0  2CA0               	goto	l11373
  1656                           	line	355
  1657                           ;Main.c: 355: case 2:
  1658                           	
  1659  03E1                     l2253:	
  1660                           	line	356
  1661                           	
  1662  03E1                     l11331:	
  1663                           ;Main.c: 356: Menu(2);
  1664  03E1  3002               	movlw	(02h)
  1665  03E2  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1666                           	line	358
  1667                           	
  1668  03E7                     l11333:	
  1669                           ;Main.c: 358: buttonPressed = 0;
  1670  03E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1671  03E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1672  03E9  01EC               	clrf	(_buttonPressed)	;volatile
  1673                           	line	360
  1674                           ;Main.c: 360: break;
  1675  03EA  2CA0               	goto	l11373
  1676                           	line	361
  1677                           ;Main.c: 361: case 3:
  1678                           	
  1679  03EB                     l2254:	
  1680                           	line	362
  1681                           	
  1682  03EB                     l11335:	
  1683                           ;Main.c: 362: Menu(3);
  1684  03EB  3003               	movlw	(03h)
  1685  03EC  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1686                           	line	364
  1687                           	
  1688  03F1                     l11337:	
  1689                           ;Main.c: 364: buttonPressed = 0;
  1690  03F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1691  03F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1692  03F3  01EC               	clrf	(_buttonPressed)	;volatile
  1693                           	line	366
  1694                           ;Main.c: 366: break;
  1695  03F4  2CA0               	goto	l11373
  1696                           	line	367
  1697                           ;Main.c: 367: case 4:
  1698                           	
  1699  03F5                     l2255:	
  1700                           	line	368
  1701                           	
  1702  03F5                     l11339:	
  1703                           ;Main.c: 368: Menu(4);
  1704  03F5  3004               	movlw	(04h)
  1705  03F6  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1706                           	line	370
  1707                           	
  1708  03FB                     l11341:	
  1709                           ;Main.c: 370: buttonPressed = 0;
  1710  03FB  1283               	bcf	status, 5	;RP0=0, select bank0
  1711  03FC  1303               	bcf	status, 6	;RP1=0, select bank0
  1712  03FD  01EC               	clrf	(_buttonPressed)	;volatile
  1713                           	line	372
  1714                           ;Main.c: 372: break;
  1715  03FE  2CA0               	goto	l11373
  1716                           	line	373
  1717                           ;Main.c: 373: case 5:
  1718                           	
  1719  03FF                     l2256:	
  1720                           	line	374
  1721                           	
  1722  03FF                     l11343:	
  1723                           ;Main.c: 374: choice = Menu(5);
  1724  03FF  3005               	movlw	(05h)
  1725  0400  120A  158A  243D   	fcall	_Menu
              120A  118A         
  1726  0405  1283               	bcf	status, 5	;RP0=0, select bank0
  1727  0406  1303               	bcf	status, 6	;RP1=0, select bank0
  1728  0407  00E2               	movwf	(??_main+0)+0
  1729  0408  0862               	movf	(??_main+0)+0,w
  1730  0409  00E7               	movwf	(main@choice)
  1731                           	line	376
  1732                           	
  1733  040A                     l11345:	
  1734                           ;Main.c: 376: buttonPressed = 0;
  1735  040A  01EC               	clrf	(_buttonPressed)	;volatile
  1736                           	line	378
  1737                           ;Main.c: 378: break;
  1738  040B  2CA0               	goto	l11373
  1739                           	line	379
  1740                           ;Main.c: 379: default:
  1741                           	
  1742  040C                     l2257:	
  1743                           	line	381
  1744                           ;Main.c: 381: break;
  1745  040C  2CA0               	goto	l11373
  1746                           	line	382
  1747                           	
  1748  040D                     l11347:	
  1749                           ;Main.c: 382: }
  1750  040D  2CA0               	goto	l11373
  1751                           	line	347
  1752                           	
  1753  040E                     l2250:	
  1754                           	
  1755  040E                     l11349:	
  1756  040E  1283               	bcf	status, 5	;RP0=0, select bank0
  1757  040F  1303               	bcf	status, 6	;RP1=0, select bank0
  1758  0410  086C               	movf	(_buttonPressed),w	;volatile
  1759                           	; Switch size 1, requested type "space"
  1760                           ; Number of cases is 5, Range of values is 1 to 5
  1761                           ; switch strategies available:
  1762                           ; Name         Instructions Cycles
  1763                           ; simple_byte           16     9 (average)
  1764                           ; direct_byte           26    11 (fixed)
  1765                           ; jumptable            263     9 (fixed)
  1766                           ;	Chosen strategy is simple_byte
  1767                           
  1768                           	opt asmopt_off
  1769  0411  3A01               	xorlw	1^0	; case 1
  1770  0412  1903               	skipnz
  1771  0413  2BD7               	goto	l11327
  1772  0414  3A03               	xorlw	2^1	; case 2
  1773  0415  1903               	skipnz
  1774  0416  2BE1               	goto	l11331
  1775  0417  3A01               	xorlw	3^2	; case 3
  1776  0418  1903               	skipnz
  1777  0419  2BEB               	goto	l11335
  1778  041A  3A07               	xorlw	4^3	; case 4
  1779  041B  1903               	skipnz
  1780  041C  2BF5               	goto	l11339
  1781  041D  3A01               	xorlw	5^4	; case 5
  1782  041E  1903               	skipnz
  1783  041F  2BFF               	goto	l11343
  1784  0420  2CA0               	goto	l11373
  1785                           	opt asmopt_on
  1786                           
  1787                           	line	382
  1788                           	
  1789  0421                     l2252:	
  1790                           	line	385
  1791                           ;Main.c: 385: switch (choice)
  1792  0421  2CA0               	goto	l11373
  1793                           	line	387
  1794                           ;Main.c: 386: {
  1795                           ;Main.c: 387: case 0:
  1796                           	
  1797  0422                     l2259:	
  1798                           	line	388
  1799                           	
  1800  0422                     l11351:	
  1801                           ;Main.c: 388: calibrateIR();
  1802  0422  120A  158A  256D   	fcall	_calibrateIR
              120A  118A         
  1803                           	line	389
  1804                           ;Main.c: 389: break;
  1805  0427  2CB6               	goto	l11375
  1806                           	line	390
  1807                           ;Main.c: 390: case 1:
  1808                           	
  1809  0428                     l2261:	
  1810                           	line	391
  1811                           	
  1812  0428                     l11353:	
  1813                           ;Main.c: 391: shortwall = scan360();
  1814  0428  120A  158A  25D1   	fcall	_scan360
              120A  118A         
  1815  042D  1283               	bcf	status, 5	;RP0=0, select bank0
  1816  042E  1303               	bcf	status, 6	;RP1=0, select bank0
  1817  042F  085B               	movf	(1+(?_scan360)),w
  1818  0430  01E6               	clrf	(main@shortwall+1)
  1819  0431  07E6               	addwf	(main@shortwall+1)
  1820  0432  085A               	movf	(0+(?_scan360)),w
  1821  0433  01E5               	clrf	(main@shortwall)
  1822  0434  07E5               	addwf	(main@shortwall)
  1823                           
  1824                           	line	392
  1825                           	
  1826  0435                     l11355:	
  1827                           ;Main.c: 392: rotate((400 - shortwall), 0);
  1828  0435  0965               	comf	(main@shortwall),w
  1829  0436  00E2               	movwf	(??_main+0)+0
  1830  0437  0966               	comf	(main@shortwall+1),w
  1831  0438  00E3               	movwf	((??_main+0)+0+1)
  1832  0439  0AE2               	incf	(??_main+0)+0,f
  1833  043A  1903               	skipnz
  1834  043B  0AE3               	incf	((??_main+0)+0+1),f
  1835  043C  0862               	movf	0+(??_main+0)+0,w
  1836  043D  3E90               	addlw	low(0190h)
  1837  043E  00A3               	movwf	(?_rotate)
  1838  043F  0863               	movf	1+(??_main+0)+0,w
  1839  0440  1803               	skipnc
  1840  0441  3E01               	addlw	1
  1841  0442  3E01               	addlw	high(0190h)
  1842  0443  00A4               	movwf	1+(?_rotate)
  1843  0444  01A5               	clrf	0+(?_rotate)+02h
  1844  0445  120A  158A  251D   	fcall	_rotate
              120A  118A         
  1845                           	line	393
  1846                           ;Main.c: 393: break;
  1847  044A  2CB6               	goto	l11375
  1848                           	line	394
  1849                           ;Main.c: 394: case 2:
  1850                           	
  1851  044B                     l2262:	
  1852                           	line	395
  1853                           	
  1854  044B                     l11357:	
  1855                           ;Main.c: 395: _delay((unsigned long)((100)*(20000000/4000.0)));
  1856                           	opt asmopt_off
  1857  044B  3003               movlw  3
  1858  044C  1283               	bcf	status, 5	;RP0=0, select bank0
  1859  044D  1303               	bcf	status, 6	;RP1=0, select bank0
  1860  044E  00E4               movwf	((??_main+0)+0+2),f
  1861  044F  308A               movlw	138
  1862  0450  00E3               movwf	((??_main+0)+0+1),f
  1863  0451  3056               	movlw	86
  1864  0452  00E2               movwf	((??_main+0)+0),f
  1865  0453                     u4997:
  1866  0453  0BE2               	decfsz	((??_main+0)+0),f
  1867  0454  2C53               	goto	u4997
  1868  0455  0BE3               	decfsz	((??_main+0)+0+1),f
  1869  0456  2C53               	goto	u4997
  1870  0457  0BE4               	decfsz	((??_main+0)+0+2),f
  1871  0458  2C53               	goto	u4997
  1872  0459  2C5A               	nop2
  1873                           opt asmopt_on
  1874                           
  1875                           	line	396
  1876                           	
  1877  045A                     l11359:	
  1878                           ;Main.c: 396: robotMove(200);
  1879  045A  30C8               	movlw	low(0C8h)
  1880  045B  1283               	bcf	status, 5	;RP0=0, select bank0
  1881  045C  1303               	bcf	status, 6	;RP1=0, select bank0
  1882  045D  00A2               	movwf	(?_robotMove)
  1883  045E  3000               	movlw	high(0C8h)
  1884  045F  00A3               	movwf	((?_robotMove))+1
  1885  0460  120A  158A  26DC   	fcall	_robotMove
              120A  118A         
  1886                           	line	399
  1887                           ;Main.c: 399: break;
  1888  0465  2CB6               	goto	l11375
  1889                           	line	400
  1890                           ;Main.c: 400: case 3:
  1891                           	
  1892  0466                     l2263:	
  1893                           	line	401
  1894                           	
  1895  0466                     l11361:	
  1896                           ;Main.c: 401: _delay((unsigned long)((100)*(20000000/4000.0)));
  1897                           	opt asmopt_off
  1898  0466  3003               movlw  3
  1899  0467  1283               	bcf	status, 5	;RP0=0, select bank0
  1900  0468  1303               	bcf	status, 6	;RP1=0, select bank0
  1901  0469  00E4               movwf	((??_main+0)+0+2),f
  1902  046A  308A               movlw	138
  1903  046B  00E3               movwf	((??_main+0)+0+1),f
  1904  046C  3056               	movlw	86
  1905  046D  00E2               movwf	((??_main+0)+0),f
  1906  046E                     u5007:
  1907  046E  0BE2               	decfsz	((??_main+0)+0),f
  1908  046F  2C6E               	goto	u5007
  1909  0470  0BE3               	decfsz	((??_main+0)+0+1),f
  1910  0471  2C6E               	goto	u5007
  1911  0472  0BE4               	decfsz	((??_main+0)+0+2),f
  1912  0473  2C6E               	goto	u5007
  1913  0474  2C75               	nop2
  1914                           opt asmopt_on
  1915                           
  1916                           	line	402
  1917                           	
  1918  0475                     l11363:	
  1919                           ;Main.c: 402: robotMove(1000);
  1920  0475  30E8               	movlw	low(03E8h)
  1921  0476  1283               	bcf	status, 5	;RP0=0, select bank0
  1922  0477  1303               	bcf	status, 6	;RP1=0, select bank0
  1923  0478  00A2               	movwf	(?_robotMove)
  1924  0479  3003               	movlw	high(03E8h)
  1925  047A  00A3               	movwf	((?_robotMove))+1
  1926  047B  120A  158A  26DC   	fcall	_robotMove
              120A  118A         
  1927                           	line	403
  1928                           	
  1929  0480                     l11365:	
  1930                           ;Main.c: 403: robotTurn(-90);
  1931  0480  30A6               	movlw	low(-90)
  1932  0481  1283               	bcf	status, 5	;RP0=0, select bank0
  1933  0482  1303               	bcf	status, 6	;RP1=0, select bank0
  1934  0483  00A2               	movwf	(?_robotTurn)
  1935  0484  30FF               	movlw	high(-90)
  1936  0485  00A3               	movwf	((?_robotTurn))+1
  1937  0486  120A  158A  2654   	fcall	_robotTurn
              120A  118A         
  1938                           	line	404
  1939                           	
  1940  048B                     l11367:	
  1941                           ;Main.c: 404: robotMove(1000);
  1942  048B  30E8               	movlw	low(03E8h)
  1943  048C  1283               	bcf	status, 5	;RP0=0, select bank0
  1944  048D  1303               	bcf	status, 6	;RP1=0, select bank0
  1945  048E  00A2               	movwf	(?_robotMove)
  1946  048F  3003               	movlw	high(03E8h)
  1947  0490  00A3               	movwf	((?_robotMove))+1
  1948  0491  120A  158A  26DC   	fcall	_robotMove
              120A  118A         
  1949                           	line	405
  1950                           ;Main.c: 405: break;
  1951  0496  2CB6               	goto	l11375
  1952                           	line	406
  1953                           ;Main.c: 406: case 4:
  1954                           	
  1955  0497                     l2264:	
  1956                           	line	408
  1957                           ;Main.c: 408: break;
  1958  0497  2CB6               	goto	l11375
  1959                           	line	410
  1960                           ;Main.c: 410: case 5:
  1961                           	
  1962  0498                     l2265:	
  1963                           	line	411
  1964                           	
  1965  0498                     l11369:	
  1966                           ;Main.c: 411: ChargeMode();
  1967  0498  120A  158A  2484   	fcall	_ChargeMode
              120A  118A         
  1968                           	line	412
  1969                           ;Main.c: 412: break;
  1970  049D  2CB6               	goto	l11375
  1971                           	line	413
  1972                           ;Main.c: 413: default:
  1973                           	
  1974  049E                     l2266:	
  1975                           	line	415
  1976                           ;Main.c: 415: break;
  1977  049E  2CB6               	goto	l11375
  1978                           	line	416
  1979                           	
  1980  049F                     l11371:	
  1981                           ;Main.c: 416: }
  1982  049F  2CB6               	goto	l11375
  1983                           	line	385
  1984                           	
  1985  04A0                     l2258:	
  1986                           	
  1987  04A0                     l11373:	
  1988  04A0  1283               	bcf	status, 5	;RP0=0, select bank0
  1989  04A1  1303               	bcf	status, 6	;RP1=0, select bank0
  1990  04A2  0867               	movf	(main@choice),w
  1991                           	; Switch size 1, requested type "space"
  1992                           ; Number of cases is 6, Range of values is 0 to 5
  1993                           ; switch strategies available:
  1994                           ; Name         Instructions Cycles
  1995                           ; simple_byte           19    10 (average)
  1996                           ; direct_byte           26     8 (fixed)
  1997                           ; jumptable            260     6 (fixed)
  1998                           ; rangetable            10     6 (fixed)
  1999                           ; spacedrange           18     9 (fixed)
  2000                           ; locatedrange           6     3 (fixed)
  2001                           ;	Chosen strategy is simple_byte
  2002                           
  2003                           	opt asmopt_off
  2004  04A3  3A00               	xorlw	0^0	; case 0
  2005  04A4  1903               	skipnz
  2006  04A5  2C22               	goto	l11351
  2007  04A6  3A01               	xorlw	1^0	; case 1
  2008  04A7  1903               	skipnz
  2009  04A8  2C28               	goto	l11353
  2010  04A9  3A03               	xorlw	2^1	; case 2
  2011  04AA  1903               	skipnz
  2012  04AB  2C4B               	goto	l11357
  2013  04AC  3A01               	xorlw	3^2	; case 3
  2014  04AD  1903               	skipnz
  2015  04AE  2C66               	goto	l11361
  2016  04AF  3A07               	xorlw	4^3	; case 4
  2017  04B0  1903               	skipnz
  2018  04B1  2CB6               	goto	l11375
  2019  04B2  3A01               	xorlw	5^4	; case 5
  2020  04B3  1903               	skipnz
  2021  04B4  2C98               	goto	l11369
  2022  04B5  2CB6               	goto	l11375
  2023                           	opt asmopt_on
  2024                           
  2025                           	line	416
  2026                           	
  2027  04B6                     l2260:	
  2028                           	line	417
  2029                           	
  2030  04B6                     l11375:	
  2031                           ;Main.c: 417: choice = 255;
  2032  04B6  30FF               	movlw	(0FFh)
  2033  04B7  1283               	bcf	status, 5	;RP0=0, select bank0
  2034  04B8  1303               	bcf	status, 6	;RP1=0, select bank0
  2035  04B9  00E2               	movwf	(??_main+0)+0
  2036  04BA  0862               	movf	(??_main+0)+0,w
  2037  04BB  00E7               	movwf	(main@choice)
  2038  04BC  2BBF               	goto	l11319
  2039                           	line	418
  2040                           	
  2041  04BD                     l2267:	
  2042                           	line	329
  2043  04BD  2BBF               	goto	l11319
  2044                           	
  2045  04BE                     l2268:	
  2046                           	line	419
  2047                           	
  2048  04BE                     l2269:	
  2049                           	global	start
  2050  04BE  120A  118A  2812   	ljmp	start
  2051                           	opt stack 0
  2052                           GLOBAL	__end_of_main
  2053  04C1                     	__end_of_main:
  2054 ;; =============== function _main ends ============
  2055                           
  2056                           	signat	_main,88
  2057                           	global	_scan360
  2058                           psect	text1170,local,class=CODE,delta=2
  2059                           global __ptext1170
  2060  0DD1                     __ptext1170:
  2061                           
  2062 ;; *************** function _scan360 *****************
  2063 ;; Defined at:
  2064 ;;		line 289 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  steps           2   64[BANK0 ] int 
  2069 ;;  lowestSteps     2   62[BANK0 ] int 
  2070 ;;  lowestVal       2   60[BANK0 ] int 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  2   58[BANK0 ] int 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         0       2       0       0       0
  2081 ;;      Locals:         0       6       0       0       0
  2082 ;;      Temps:          0       0       0       0       0
  2083 ;;      Totals:         0       8       0       0       0
  2084 ;;Total ram usage:        8 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    7
  2087 ;; This function calls:
  2088 ;;		_readAvgDistance
  2089 ;;		_rotate
  2090 ;;		_UpdateDisplay
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           psect	text1170
  2096                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2097                           	line	289
  2098                           	global	__size_of_scan360
  2099  0083                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  2100                           	
  2101  0DD1                     _scan360:	
  2102                           	opt	stack 0
  2103                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2104                           	line	290
  2105                           	
  2106  0DD1                     l10971:	
  2107                           ;Main.c: 290: int lowestVal = 0, lowestSteps = 0;
  2108  0DD1  1283               	bcf	status, 5	;RP0=0, select bank0
  2109  0DD2  1303               	bcf	status, 6	;RP1=0, select bank0
  2110  0DD3  01DC               	clrf	(scan360@lowestVal)
  2111  0DD4  01DD               	clrf	(scan360@lowestVal+1)
  2112  0DD5  01DE               	clrf	(scan360@lowestSteps)
  2113  0DD6  01DF               	clrf	(scan360@lowestSteps+1)
  2114                           	line	291
  2115                           	
  2116  0DD7                     l10973:	
  2117                           ;Main.c: 291: SCAN_FLAG = 1;
  2118  0DD7  1683               	bsf	status, 5	;RP0=1, select bank1
  2119  0DD8  1303               	bcf	status, 6	;RP1=0, select bank1
  2120  0DD9  01D6               	clrf	(_SCAN_FLAG)^080h
  2121  0DDA  1403               	bsf	status,0
  2122  0DDB  0DD6               	rlf	(_SCAN_FLAG)^080h,f
  2123                           	line	292
  2124                           	
  2125  0DDC                     l10975:	
  2126                           ;Main.c: 292: for (int steps = 0; steps < 400; steps++)
  2127  0DDC  1283               	bcf	status, 5	;RP0=0, select bank0
  2128  0DDD  1303               	bcf	status, 6	;RP1=0, select bank0
  2129  0DDE  01E0               	clrf	(scan360@steps)
  2130  0DDF  01E1               	clrf	(scan360@steps+1)
  2131                           	
  2132  0DE0                     l10977:	
  2133  0DE0  0861               	movf	(scan360@steps+1),w
  2134  0DE1  3A80               	xorlw	80h
  2135  0DE2  00FF               	movwf	btemp+1
  2136  0DE3  3081               	movlw	(high(0190h))^80h
  2137  0DE4  027F               	subwf	btemp+1,w
  2138  0DE5  1D03               	skipz
  2139  0DE6  2DE9               	goto	u4525
  2140  0DE7  3090               	movlw	low(0190h)
  2141  0DE8  0260               	subwf	(scan360@steps),w
  2142  0DE9                     u4525:
  2143                           
  2144  0DE9  1C03               	skipc
  2145  0DEA  2DEC               	goto	u4521
  2146  0DEB  2DED               	goto	u4520
  2147  0DEC                     u4521:
  2148  0DEC  2DEF               	goto	l10981
  2149  0DED                     u4520:
  2150  0DED  2E47               	goto	l2242
  2151                           	
  2152  0DEE                     l10979:	
  2153  0DEE  2E47               	goto	l2242
  2154                           	line	293
  2155                           	
  2156  0DEF                     l2241:	
  2157                           	line	294
  2158                           	
  2159  0DEF                     l10981:	
  2160                           ;Main.c: 293: {
  2161                           ;Main.c: 294: readAvgDistance();
  2162  0DEF  120A  118A  279F   	fcall	_readAvgDistance
              120A  158A         
  2163                           	line	295
  2164                           	
  2165  0DF4                     l10983:	
  2166                           ;Main.c: 295: if (adcVal > lowestVal)
  2167  0DF4  1283               	bcf	status, 5	;RP0=0, select bank0
  2168  0DF5  1303               	bcf	status, 6	;RP1=0, select bank0
  2169  0DF6  086B               	movf	(_adcVal+1),w	;volatile
  2170  0DF7  025D               	subwf	(scan360@lowestVal+1),w
  2171  0DF8  1D03               	skipz
  2172  0DF9  2DFC               	goto	u4535
  2173  0DFA  086A               	movf	(_adcVal),w	;volatile
  2174  0DFB  025C               	subwf	(scan360@lowestVal),w
  2175  0DFC                     u4535:
  2176  0DFC  1803               	skipnc
  2177  0DFD  2DFF               	goto	u4531
  2178  0DFE  2E00               	goto	u4530
  2179  0DFF                     u4531:
  2180  0DFF  2E0D               	goto	l10987
  2181  0E00                     u4530:
  2182                           	line	297
  2183                           	
  2184  0E00                     l10985:	
  2185                           ;Main.c: 296: {
  2186                           ;Main.c: 297: lowestVal = adcVal;
  2187  0E00  086B               	movf	(_adcVal+1),w	;volatile
  2188  0E01  01DD               	clrf	(scan360@lowestVal+1)	;volatile
  2189  0E02  07DD               	addwf	(scan360@lowestVal+1)	;volatile
  2190  0E03  086A               	movf	(_adcVal),w	;volatile
  2191  0E04  01DC               	clrf	(scan360@lowestVal)	;volatile
  2192  0E05  07DC               	addwf	(scan360@lowestVal)	;volatile
  2193                           
  2194                           	line	298
  2195                           ;Main.c: 298: lowestSteps = steps;
  2196  0E06  0861               	movf	(scan360@steps+1),w
  2197  0E07  01DF               	clrf	(scan360@lowestSteps+1)
  2198  0E08  07DF               	addwf	(scan360@lowestSteps+1)
  2199  0E09  0860               	movf	(scan360@steps),w
  2200  0E0A  01DE               	clrf	(scan360@lowestSteps)
  2201  0E0B  07DE               	addwf	(scan360@lowestSteps)
  2202                           
  2203  0E0C  2E0D               	goto	l10987
  2204                           	line	300
  2205                           	
  2206  0E0D                     l2243:	
  2207                           	line	301
  2208                           	
  2209  0E0D                     l10987:	
  2210                           ;Main.c: 300: }
  2211                           ;Main.c: 301: rotate(1, 1);
  2212  0E0D  3001               	movlw	low(01h)
  2213  0E0E  00A3               	movwf	(?_rotate)
  2214  0E0F  3000               	movlw	high(01h)
  2215  0E10  00A4               	movwf	((?_rotate))+1
  2216  0E11  01A5               	clrf	0+(?_rotate)+02h
  2217  0E12  1403               	bsf	status,0
  2218  0E13  0DA5               	rlf	0+(?_rotate)+02h,f
  2219  0E14  120A  158A  251D   	fcall	_rotate
              120A  158A         
  2220                           	line	303
  2221                           	
  2222  0E19                     l10989:	
  2223                           ;Main.c: 303: if (RTC_FLAG_250MS == 1)
  2224  0E19  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2225  0E1A  2E1C               	goto	u4541
  2226  0E1B  2E1D               	goto	u4540
  2227  0E1C                     u4541:
  2228  0E1C  2E24               	goto	l10995
  2229  0E1D                     u4540:
  2230                           	line	305
  2231                           	
  2232  0E1D                     l10991:	
  2233                           ;Main.c: 304: {
  2234                           ;Main.c: 305: RTC_FLAG_250MS = 0;
  2235  0E1D  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2236                           	line	306
  2237                           	
  2238  0E1E                     l10993:	
  2239                           ;Main.c: 306: UpdateDisplay();
  2240  0E1E  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2241  0E23  2E24               	goto	l10995
  2242                           	line	307
  2243                           	
  2244  0E24                     l2244:	
  2245                           	line	308
  2246                           	
  2247  0E24                     l10995:	
  2248                           ;Main.c: 307: }
  2249                           ;Main.c: 308: test = lowestSteps;
  2250  0E24  1283               	bcf	status, 5	;RP0=0, select bank0
  2251  0E25  1303               	bcf	status, 6	;RP1=0, select bank0
  2252  0E26  085F               	movf	(scan360@lowestSteps+1),w
  2253  0E27  1683               	bsf	status, 5	;RP0=1, select bank1
  2254  0E28  1303               	bcf	status, 6	;RP1=0, select bank1
  2255  0E29  01CB               	clrf	(_test+1)^080h
  2256  0E2A  07CB               	addwf	(_test+1)^080h
  2257  0E2B  1283               	bcf	status, 5	;RP0=0, select bank0
  2258  0E2C  1303               	bcf	status, 6	;RP1=0, select bank0
  2259  0E2D  085E               	movf	(scan360@lowestSteps),w
  2260  0E2E  1683               	bsf	status, 5	;RP0=1, select bank1
  2261  0E2F  1303               	bcf	status, 6	;RP1=0, select bank1
  2262  0E30  01CA               	clrf	(_test)^080h
  2263  0E31  07CA               	addwf	(_test)^080h
  2264                           
  2265                           	line	292
  2266                           	
  2267  0E32                     l10997:	
  2268  0E32  3001               	movlw	low(01h)
  2269  0E33  1283               	bcf	status, 5	;RP0=0, select bank0
  2270  0E34  1303               	bcf	status, 6	;RP1=0, select bank0
  2271  0E35  07E0               	addwf	(scan360@steps),f
  2272  0E36  1803               	skipnc
  2273  0E37  0AE1               	incf	(scan360@steps+1),f
  2274  0E38  3000               	movlw	high(01h)
  2275  0E39  07E1               	addwf	(scan360@steps+1),f
  2276                           	
  2277  0E3A                     l10999:	
  2278  0E3A  0861               	movf	(scan360@steps+1),w
  2279  0E3B  3A80               	xorlw	80h
  2280  0E3C  00FF               	movwf	btemp+1
  2281  0E3D  3081               	movlw	(high(0190h))^80h
  2282  0E3E  027F               	subwf	btemp+1,w
  2283  0E3F  1D03               	skipz
  2284  0E40  2E43               	goto	u4555
  2285  0E41  3090               	movlw	low(0190h)
  2286  0E42  0260               	subwf	(scan360@steps),w
  2287  0E43                     u4555:
  2288                           
  2289  0E43  1C03               	skipc
  2290  0E44  2E46               	goto	u4551
  2291  0E45  2E47               	goto	u4550
  2292  0E46                     u4551:
  2293  0E46  2DEF               	goto	l10981
  2294  0E47                     u4550:
  2295                           	
  2296  0E47                     l2242:	
  2297                           	line	310
  2298                           ;Main.c: 309: }
  2299                           ;Main.c: 310: SCAN_FLAG = 0;
  2300  0E47  1683               	bsf	status, 5	;RP0=1, select bank1
  2301  0E48  1303               	bcf	status, 6	;RP1=0, select bank1
  2302  0E49  01D6               	clrf	(_SCAN_FLAG)^080h
  2303                           	line	311
  2304                           	
  2305  0E4A                     l11001:	
  2306                           ;Main.c: 311: return lowestSteps;
  2307  0E4A  1283               	bcf	status, 5	;RP0=0, select bank0
  2308  0E4B  1303               	bcf	status, 6	;RP1=0, select bank0
  2309  0E4C  085F               	movf	(scan360@lowestSteps+1),w
  2310  0E4D  01DB               	clrf	(?_scan360+1)
  2311  0E4E  07DB               	addwf	(?_scan360+1)
  2312  0E4F  085E               	movf	(scan360@lowestSteps),w
  2313  0E50  01DA               	clrf	(?_scan360)
  2314  0E51  07DA               	addwf	(?_scan360)
  2315                           
  2316  0E52  2E53               	goto	l2245
  2317                           	
  2318  0E53                     l11003:	
  2319                           	line	312
  2320                           	
  2321  0E53                     l2245:	
  2322  0E53  0008               	return
  2323                           	opt stack 0
  2324                           GLOBAL	__end_of_scan360
  2325  0E54                     	__end_of_scan360:
  2326 ;; =============== function _scan360 ends ============
  2327                           
  2328                           	signat	_scan360,90
  2329                           	global	_ChargeMode
  2330                           psect	text1171,local,class=CODE,delta=2
  2331                           global __ptext1171
  2332  0C84                     __ptext1171:
  2333                           
  2334 ;; *************** function _ChargeMode *****************
  2335 ;; Defined at:
  2336 ;;		line 235 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;		None
  2341 ;; Return value:  Size  Location     Type
  2342 ;;		None               void
  2343 ;; Registers used:
  2344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2350 ;;      Params:         0       0       0       0       0
  2351 ;;      Locals:         0       0       0       0       0
  2352 ;;      Temps:          0       1       0       0       0
  2353 ;;      Totals:         0       1       0       0       0
  2354 ;;Total ram usage:        1 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    6
  2357 ;; This function calls:
  2358 ;;		_ser_putch
  2359 ;;		_UpdateDisplay
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           psect	text1171
  2365                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2366                           	line	235
  2367                           	global	__size_of_ChargeMode
  2368  0049                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  2369                           	
  2370  0C84                     _ChargeMode:	
  2371                           	opt	stack 1
  2372                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2373                           	line	237
  2374                           	
  2375  0C84                     l10949:	
  2376                           ;Main.c: 237: currentMenu = 2;
  2377  0C84  3002               	movlw	(02h)
  2378  0C85  1283               	bcf	status, 5	;RP0=0, select bank0
  2379  0C86  1303               	bcf	status, 6	;RP1=0, select bank0
  2380  0C87  00DA               	movwf	(??_ChargeMode+0)+0
  2381  0C88  085A               	movf	(??_ChargeMode+0)+0,w
  2382  0C89  1683               	bsf	status, 5	;RP0=1, select bank1
  2383  0C8A  1303               	bcf	status, 6	;RP1=0, select bank1
  2384  0C8B  00D8               	movwf	(_currentMenu)^080h
  2385                           	line	238
  2386                           	
  2387  0C8C                     l10951:	
  2388                           ;Main.c: 238: ser_putch(128);
  2389  0C8C  3080               	movlw	(080h)
  2390  0C8D  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  2391  0C92  2C93               	goto	l10953
  2392                           	line	240
  2393                           ;Main.c: 240: while (1)
  2394                           	
  2395  0C93                     l2226:	
  2396                           	line	242
  2397                           	
  2398  0C93                     l10953:	
  2399                           ;Main.c: 241: {
  2400                           ;Main.c: 242: if (RTC_FLAG_250MS == 1)
  2401  0C93  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2402  0C94  2C96               	goto	u4511
  2403  0C95  2C97               	goto	u4510
  2404  0C96                     u4511:
  2405  0C96  2CB7               	goto	l10969
  2406  0C97                     u4510:
  2407                           	line	244
  2408                           	
  2409  0C97                     l10955:	
  2410                           ;Main.c: 243: {
  2411                           ;Main.c: 244: RTC_FLAG_250MS = 0;
  2412  0C97  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2413                           	line	245
  2414                           	
  2415  0C98                     l10957:	
  2416                           ;Main.c: 245: UpdateDisplay();
  2417  0C98  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2418  0C9D  2CB7               	goto	l10969
  2419                           	line	246
  2420                           	
  2421  0C9E                     l2227:	
  2422                           	line	247
  2423                           ;Main.c: 246: }
  2424                           ;Main.c: 247: switch (buttonPressed)
  2425  0C9E  2CB7               	goto	l10969
  2426                           	line	249
  2427                           ;Main.c: 248: {
  2428                           ;Main.c: 249: case 1:
  2429                           	
  2430  0C9F                     l2229:	
  2431                           	line	252
  2432                           ;Main.c: 252: buttonPressed = 0;
  2433  0C9F  01EC               	clrf	(_buttonPressed)	;volatile
  2434                           	line	254
  2435                           ;Main.c: 254: break;
  2436  0CA0  2C93               	goto	l10953
  2437                           	line	255
  2438                           ;Main.c: 255: case 2:
  2439                           	
  2440  0CA1                     l2231:	
  2441                           	line	258
  2442                           ;Main.c: 258: buttonPressed = 0;
  2443  0CA1  01EC               	clrf	(_buttonPressed)	;volatile
  2444                           	line	260
  2445                           ;Main.c: 260: break;
  2446  0CA2  2C93               	goto	l10953
  2447                           	line	261
  2448                           ;Main.c: 261: case 3:
  2449                           	
  2450  0CA3                     l2232:	
  2451                           	line	264
  2452                           ;Main.c: 264: buttonPressed = 0;
  2453  0CA3  01EC               	clrf	(_buttonPressed)	;volatile
  2454                           	line	266
  2455                           ;Main.c: 266: break;
  2456  0CA4  2C93               	goto	l10953
  2457                           	line	267
  2458                           ;Main.c: 267: case 4:
  2459                           	
  2460  0CA5                     l2233:	
  2461                           	line	270
  2462                           ;Main.c: 270: buttonPressed = 0;
  2463  0CA5  01EC               	clrf	(_buttonPressed)	;volatile
  2464                           	line	272
  2465                           ;Main.c: 272: break;
  2466  0CA6  2C93               	goto	l10953
  2467                           	line	273
  2468                           ;Main.c: 273: case 5:
  2469                           	
  2470  0CA7                     l2234:	
  2471                           	line	274
  2472                           	
  2473  0CA7                     l10959:	
  2474                           ;Main.c: 274: ser_putch(132);
  2475  0CA7  3084               	movlw	(084h)
  2476  0CA8  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  2477                           	line	276
  2478                           	
  2479  0CAD                     l10961:	
  2480                           ;Main.c: 276: buttonPressed = 0;
  2481  0CAD  1283               	bcf	status, 5	;RP0=0, select bank0
  2482  0CAE  1303               	bcf	status, 6	;RP1=0, select bank0
  2483  0CAF  01EC               	clrf	(_buttonPressed)	;volatile
  2484                           	line	277
  2485                           	
  2486  0CB0                     l10963:	
  2487                           ;Main.c: 277: currentMenu = 0;
  2488  0CB0  1683               	bsf	status, 5	;RP0=1, select bank1
  2489  0CB1  1303               	bcf	status, 6	;RP1=0, select bank1
  2490  0CB2  01D8               	clrf	(_currentMenu)^080h
  2491  0CB3  2CCC               	goto	l2235
  2492                           	line	278
  2493                           	
  2494  0CB4                     l10965:	
  2495                           ;Main.c: 278: return;
  2496  0CB4  2CCC               	goto	l2235
  2497                           	line	280
  2498                           ;Main.c: 280: default:
  2499                           	
  2500  0CB5                     l2236:	
  2501                           	line	282
  2502                           ;Main.c: 282: break;
  2503  0CB5  2C93               	goto	l10953
  2504                           	line	283
  2505                           	
  2506  0CB6                     l10967:	
  2507                           ;Main.c: 283: }
  2508  0CB6  2C93               	goto	l10953
  2509                           	line	247
  2510                           	
  2511  0CB7                     l2228:	
  2512                           	
  2513  0CB7                     l10969:	
  2514  0CB7  1283               	bcf	status, 5	;RP0=0, select bank0
  2515  0CB8  1303               	bcf	status, 6	;RP1=0, select bank0
  2516  0CB9  086C               	movf	(_buttonPressed),w	;volatile
  2517                           	; Switch size 1, requested type "space"
  2518                           ; Number of cases is 5, Range of values is 1 to 5
  2519                           ; switch strategies available:
  2520                           ; Name         Instructions Cycles
  2521                           ; simple_byte           16     9 (average)
  2522                           ; direct_byte           26    11 (fixed)
  2523                           ; jumptable            263     9 (fixed)
  2524                           ;	Chosen strategy is simple_byte
  2525                           
  2526                           	opt asmopt_off
  2527  0CBA  3A01               	xorlw	1^0	; case 1
  2528  0CBB  1903               	skipnz
  2529  0CBC  2C9F               	goto	l2229
  2530  0CBD  3A03               	xorlw	2^1	; case 2
  2531  0CBE  1903               	skipnz
  2532  0CBF  2CA1               	goto	l2231
  2533  0CC0  3A01               	xorlw	3^2	; case 3
  2534  0CC1  1903               	skipnz
  2535  0CC2  2CA3               	goto	l2232
  2536  0CC3  3A07               	xorlw	4^3	; case 4
  2537  0CC4  1903               	skipnz
  2538  0CC5  2CA5               	goto	l2233
  2539  0CC6  3A01               	xorlw	5^4	; case 5
  2540  0CC7  1903               	skipnz
  2541  0CC8  2CA7               	goto	l10959
  2542  0CC9  2C93               	goto	l10953
  2543                           	opt asmopt_on
  2544                           
  2545                           	line	283
  2546                           	
  2547  0CCA                     l2230:	
  2548  0CCA  2C93               	goto	l10953
  2549                           	line	284
  2550                           	
  2551  0CCB                     l2237:	
  2552                           	line	240
  2553  0CCB  2C93               	goto	l10953
  2554                           	
  2555  0CCC                     l2238:	
  2556                           	line	285
  2557                           	
  2558  0CCC                     l2235:	
  2559  0CCC  0008               	return
  2560                           	opt stack 0
  2561                           GLOBAL	__end_of_ChargeMode
  2562  0CCD                     	__end_of_ChargeMode:
  2563 ;; =============== function _ChargeMode ends ============
  2564                           
  2565                           	signat	_ChargeMode,88
  2566                           	global	_calibrateIR
  2567                           psect	text1172,local,class=CODE,delta=2
  2568                           global __ptext1172
  2569  0D6D                     __ptext1172:
  2570                           
  2571 ;; *************** function _calibrateIR *****************
  2572 ;; Defined at:
  2573 ;;		line 184 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;		None               void
  2580 ;; Registers used:
  2581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2587 ;;      Params:         0       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0
  2590 ;;      Totals:         0       0       0       0       0
  2591 ;;Total ram usage:        0 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    6
  2594 ;; This function calls:
  2595 ;;		_rotate
  2596 ;;		_UpdateDisplay
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           psect	text1172
  2602                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  2603                           	line	184
  2604                           	global	__size_of_calibrateIR
  2605  0064                     	__size_of_calibrateIR	equ	__end_of_calibrateIR-_calibrateIR
  2606                           	
  2607  0D6D                     _calibrateIR:	
  2608                           	opt	stack 1
  2609                           ; Regs used in _calibrateIR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2610                           	line	186
  2611                           	
  2612  0D6D                     l10919:	
  2613                           ;Main.c: 186: currentMenu = 1;
  2614  0D6D  1683               	bsf	status, 5	;RP0=1, select bank1
  2615  0D6E  1303               	bcf	status, 6	;RP1=0, select bank1
  2616  0D6F  01D8               	clrf	(_currentMenu)^080h
  2617  0D70  1403               	bsf	status,0
  2618  0D71  0DD8               	rlf	(_currentMenu)^080h,f
  2619                           	line	187
  2620                           	
  2621  0D72                     l10921:	
  2622                           ;Main.c: 187: rotate(8, 0);
  2623  0D72  3008               	movlw	low(08h)
  2624  0D73  1283               	bcf	status, 5	;RP0=0, select bank0
  2625  0D74  1303               	bcf	status, 6	;RP1=0, select bank0
  2626  0D75  00A3               	movwf	(?_rotate)
  2627  0D76  3000               	movlw	high(08h)
  2628  0D77  00A4               	movwf	((?_rotate))+1
  2629  0D78  01A5               	clrf	0+(?_rotate)+02h
  2630  0D79  120A  158A  251D   	fcall	_rotate
              120A  158A         
  2631  0D7E  2D7F               	goto	l10923
  2632                           	line	188
  2633                           ;Main.c: 188: while (1)
  2634                           	
  2635  0D7F                     l2211:	
  2636                           	line	190
  2637                           	
  2638  0D7F                     l10923:	
  2639                           ;Main.c: 189: {
  2640                           ;Main.c: 190: if (RTC_FLAG_250MS == 1)
  2641  0D7F  1FF0               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2642  0D80  2D82               	goto	u4501
  2643  0D81  2D83               	goto	u4500
  2644  0D82                     u4501:
  2645  0D82  2DBB               	goto	l10947
  2646  0D83                     u4500:
  2647                           	line	192
  2648                           	
  2649  0D83                     l10925:	
  2650                           ;Main.c: 191: {
  2651                           ;Main.c: 192: RTC_FLAG_250MS = 0;
  2652  0D83  13F0               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  2653                           	line	193
  2654                           	
  2655  0D84                     l10927:	
  2656                           ;Main.c: 193: UpdateDisplay();
  2657  0D84  120A  118A  2238   	fcall	_UpdateDisplay
              120A  158A         
  2658  0D89  2DBB               	goto	l10947
  2659                           	line	194
  2660                           	
  2661  0D8A                     l2212:	
  2662                           	line	195
  2663                           ;Main.c: 194: }
  2664                           ;Main.c: 195: switch (buttonPressed)
  2665  0D8A  2DBB               	goto	l10947
  2666                           	line	197
  2667                           ;Main.c: 196: {
  2668                           ;Main.c: 197: case 1:
  2669                           	
  2670  0D8B                     l2214:	
  2671                           	line	200
  2672                           ;Main.c: 200: buttonPressed = 0;
  2673  0D8B  01EC               	clrf	(_buttonPressed)	;volatile
  2674                           	line	202
  2675                           ;Main.c: 202: break;
  2676  0D8C  2D7F               	goto	l10923
  2677                           	line	203
  2678                           ;Main.c: 203: case 2:
  2679                           	
  2680  0D8D                     l2216:	
  2681                           	line	206
  2682                           ;Main.c: 206: buttonPressed = 0;
  2683  0D8D  01EC               	clrf	(_buttonPressed)	;volatile
  2684                           	line	208
  2685                           ;Main.c: 208: break;
  2686  0D8E  2D7F               	goto	l10923
  2687                           	line	209
  2688                           ;Main.c: 209: case 3:
  2689                           	
  2690  0D8F                     l2217:	
  2691                           	line	210
  2692                           	
  2693  0D8F                     l10929:	
  2694                           ;Main.c: 210: rotate(1, 1);
  2695  0D8F  3001               	movlw	low(01h)
  2696  0D90  00A3               	movwf	(?_rotate)
  2697  0D91  3000               	movlw	high(01h)
  2698  0D92  00A4               	movwf	((?_rotate))+1
  2699  0D93  01A5               	clrf	0+(?_rotate)+02h
  2700  0D94  1403               	bsf	status,0
  2701  0D95  0DA5               	rlf	0+(?_rotate)+02h,f
  2702  0D96  120A  158A  251D   	fcall	_rotate
              120A  158A         
  2703                           	line	212
  2704                           	
  2705  0D9B                     l10931:	
  2706                           ;Main.c: 212: buttonPressed = 0;
  2707  0D9B  1283               	bcf	status, 5	;RP0=0, select bank0
  2708  0D9C  1303               	bcf	status, 6	;RP1=0, select bank0
  2709  0D9D  01EC               	clrf	(_buttonPressed)	;volatile
  2710                           	line	214
  2711                           ;Main.c: 214: break;
  2712  0D9E  2D7F               	goto	l10923
  2713                           	line	215
  2714                           ;Main.c: 215: case 4:
  2715                           	
  2716  0D9F                     l2218:	
  2717                           	line	216
  2718                           	
  2719  0D9F                     l10933:	
  2720                           ;Main.c: 216: rotate(1, 0);
  2721  0D9F  3001               	movlw	low(01h)
  2722  0DA0  00A3               	movwf	(?_rotate)
  2723  0DA1  3000               	movlw	high(01h)
  2724  0DA2  00A4               	movwf	((?_rotate))+1
  2725  0DA3  01A5               	clrf	0+(?_rotate)+02h
  2726  0DA4  120A  158A  251D   	fcall	_rotate
              120A  158A         
  2727                           	line	218
  2728                           	
  2729  0DA9                     l10935:	
  2730                           ;Main.c: 218: buttonPressed = 0;
  2731  0DA9  1283               	bcf	status, 5	;RP0=0, select bank0
  2732  0DAA  1303               	bcf	status, 6	;RP1=0, select bank0
  2733  0DAB  01EC               	clrf	(_buttonPressed)	;volatile
  2734                           	line	220
  2735                           ;Main.c: 220: break;
  2736  0DAC  2D7F               	goto	l10923
  2737                           	line	221
  2738                           ;Main.c: 221: case 5:
  2739                           	
  2740  0DAD                     l2219:	
  2741                           	line	222
  2742                           	
  2743  0DAD                     l10937:	
  2744                           ;Main.c: 222: totalSteps = 0;
  2745  0DAD  1683               	bsf	status, 5	;RP0=1, select bank1
  2746  0DAE  1303               	bcf	status, 6	;RP1=0, select bank1
  2747  0DAF  01CE               	clrf	(_totalSteps)^080h
  2748  0DB0  01CF               	clrf	(_totalSteps+1)^080h
  2749                           	line	224
  2750                           	
  2751  0DB1                     l10939:	
  2752                           ;Main.c: 224: buttonPressed = 0;
  2753  0DB1  1283               	bcf	status, 5	;RP0=0, select bank0
  2754  0DB2  1303               	bcf	status, 6	;RP1=0, select bank0
  2755  0DB3  01EC               	clrf	(_buttonPressed)	;volatile
  2756                           	line	225
  2757                           	
  2758  0DB4                     l10941:	
  2759                           ;Main.c: 225: currentMenu = 0;
  2760  0DB4  1683               	bsf	status, 5	;RP0=1, select bank1
  2761  0DB5  1303               	bcf	status, 6	;RP1=0, select bank1
  2762  0DB6  01D8               	clrf	(_currentMenu)^080h
  2763  0DB7  2DD0               	goto	l2220
  2764                           	line	226
  2765                           	
  2766  0DB8                     l10943:	
  2767                           ;Main.c: 226: return;
  2768  0DB8  2DD0               	goto	l2220
  2769                           	line	228
  2770                           ;Main.c: 228: default:
  2771                           	
  2772  0DB9                     l2221:	
  2773                           	line	230
  2774                           ;Main.c: 230: break;
  2775  0DB9  2D7F               	goto	l10923
  2776                           	line	231
  2777                           	
  2778  0DBA                     l10945:	
  2779                           ;Main.c: 231: }
  2780  0DBA  2D7F               	goto	l10923
  2781                           	line	195
  2782                           	
  2783  0DBB                     l2213:	
  2784                           	
  2785  0DBB                     l10947:	
  2786  0DBB  1283               	bcf	status, 5	;RP0=0, select bank0
  2787  0DBC  1303               	bcf	status, 6	;RP1=0, select bank0
  2788  0DBD  086C               	movf	(_buttonPressed),w	;volatile
  2789                           	; Switch size 1, requested type "space"
  2790                           ; Number of cases is 5, Range of values is 1 to 5
  2791                           ; switch strategies available:
  2792                           ; Name         Instructions Cycles
  2793                           ; simple_byte           16     9 (average)
  2794                           ; direct_byte           26    11 (fixed)
  2795                           ; jumptable            263     9 (fixed)
  2796                           ;	Chosen strategy is simple_byte
  2797                           
  2798                           	opt asmopt_off
  2799  0DBE  3A01               	xorlw	1^0	; case 1
  2800  0DBF  1903               	skipnz
  2801  0DC0  2D8B               	goto	l2214
  2802  0DC1  3A03               	xorlw	2^1	; case 2
  2803  0DC2  1903               	skipnz
  2804  0DC3  2D8D               	goto	l2216
  2805  0DC4  3A01               	xorlw	3^2	; case 3
  2806  0DC5  1903               	skipnz
  2807  0DC6  2D8F               	goto	l10929
  2808  0DC7  3A07               	xorlw	4^3	; case 4
  2809  0DC8  1903               	skipnz
  2810  0DC9  2D9F               	goto	l10933
  2811  0DCA  3A01               	xorlw	5^4	; case 5
  2812  0DCB  1903               	skipnz
  2813  0DCC  2DAD               	goto	l10937
  2814  0DCD  2D7F               	goto	l10923
  2815                           	opt asmopt_on
  2816                           
  2817                           	line	231
  2818                           	
  2819  0DCE                     l2215:	
  2820  0DCE  2D7F               	goto	l10923
  2821                           	line	232
  2822                           	
  2823  0DCF                     l2222:	
  2824                           	line	188
  2825  0DCF  2D7F               	goto	l10923
  2826                           	
  2827  0DD0                     l2223:	
  2828                           	line	233
  2829                           	
  2830  0DD0                     l2220:	
  2831  0DD0  0008               	return
  2832                           	opt stack 0
  2833                           GLOBAL	__end_of_calibrateIR
  2834  0DD1                     	__end_of_calibrateIR:
  2835 ;; =============== function _calibrateIR ends ============
  2836                           
  2837                           	signat	_calibrateIR,88
  2838                           	global	_readAvgDistance
  2839                           psect	text1173,local,class=CODE,delta=2
  2840                           global __ptext1173
  2841  079F                     __ptext1173:
  2842                           
  2843 ;; *************** function _readAvgDistance *****************
  2844 ;; Defined at:
  2845 ;;		line 10 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  i               2   18[BANK0 ] int 
  2850 ;;  fullval         2   16[BANK0 ] unsigned int 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;		None               void
  2853 ;; Registers used:
  2854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         0       0       0       0       0
  2861 ;;      Locals:         0       4       0       0       0
  2862 ;;      Temps:          0       0       0       0       0
  2863 ;;      Totals:         0       4       0       0       0
  2864 ;;Total ram usage:        4 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    6
  2867 ;; This function calls:
  2868 ;;		_readDistance
  2869 ;;		___lwdiv
  2870 ;;		_ADCconvert
  2871 ;; This function is called by:
  2872 ;;		_scan360
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           psect	text1173
  2877                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  2878                           	line	10
  2879                           	global	__size_of_readAvgDistance
  2880  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  2881                           	
  2882  079F                     _readAvgDistance:	
  2883                           	opt	stack 0
  2884                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2885                           	line	11
  2886                           	
  2887  079F                     l10905:	
  2888                           ;infrared.c: 11: unsigned int fullval = 0;
  2889  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  2890  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2891  07A1  01B0               	clrf	(readAvgDistance@fullval)
  2892  07A2  01B1               	clrf	(readAvgDistance@fullval+1)
  2893                           	line	14
  2894                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  2895  07A3  01B2               	clrf	(readAvgDistance@i)
  2896  07A4  01B3               	clrf	(readAvgDistance@i+1)
  2897                           	
  2898  07A5                     l10907:	
  2899  07A5  0833               	movf	(readAvgDistance@i+1),w
  2900  07A6  3A80               	xorlw	80h
  2901  07A7  00FF               	movwf	btemp+1
  2902  07A8  3080               	movlw	(high(0Ah))^80h
  2903  07A9  027F               	subwf	btemp+1,w
  2904  07AA  1D03               	skipz
  2905  07AB  2FAE               	goto	u4485
  2906  07AC  300A               	movlw	low(0Ah)
  2907  07AD  0232               	subwf	(readAvgDistance@i),w
  2908  07AE                     u4485:
  2909                           
  2910  07AE  1C03               	skipc
  2911  07AF  2FB1               	goto	u4481
  2912  07B0  2FB2               	goto	u4480
  2913  07B1                     u4481:
  2914  07B1  2FB4               	goto	l10911
  2915  07B2                     u4480:
  2916  07B2  2FD5               	goto	l10917
  2917                           	
  2918  07B3                     l10909:	
  2919  07B3  2FD5               	goto	l10917
  2920                           	line	15
  2921                           	
  2922  07B4                     l2972:	
  2923                           	line	16
  2924                           	
  2925  07B4                     l10911:	
  2926                           ;infrared.c: 15: {
  2927                           ;infrared.c: 16: fullval += readDistance();
  2928  07B4  120A  158A  21D9   	fcall	_readDistance
              120A  118A         
  2929  07B9  1283               	bcf	status, 5	;RP0=0, select bank0
  2930  07BA  1303               	bcf	status, 6	;RP1=0, select bank0
  2931  07BB  0828               	movf	(0+(?_readDistance)),w
  2932  07BC  07B0               	addwf	(readAvgDistance@fullval),f
  2933  07BD  1803               	skipnc
  2934  07BE  0AB1               	incf	(readAvgDistance@fullval+1),f
  2935  07BF  0829               	movf	(1+(?_readDistance)),w
  2936  07C0  07B1               	addwf	(readAvgDistance@fullval+1),f
  2937                           	line	14
  2938                           	
  2939  07C1                     l10913:	
  2940  07C1  3001               	movlw	low(01h)
  2941  07C2  07B2               	addwf	(readAvgDistance@i),f
  2942  07C3  1803               	skipnc
  2943  07C4  0AB3               	incf	(readAvgDistance@i+1),f
  2944  07C5  3000               	movlw	high(01h)
  2945  07C6  07B3               	addwf	(readAvgDistance@i+1),f
  2946                           	
  2947  07C7                     l10915:	
  2948  07C7  0833               	movf	(readAvgDistance@i+1),w
  2949  07C8  3A80               	xorlw	80h
  2950  07C9  00FF               	movwf	btemp+1
  2951  07CA  3080               	movlw	(high(0Ah))^80h
  2952  07CB  027F               	subwf	btemp+1,w
  2953  07CC  1D03               	skipz
  2954  07CD  2FD0               	goto	u4495
  2955  07CE  300A               	movlw	low(0Ah)
  2956  07CF  0232               	subwf	(readAvgDistance@i),w
  2957  07D0                     u4495:
  2958                           
  2959  07D0  1C03               	skipc
  2960  07D1  2FD3               	goto	u4491
  2961  07D2  2FD4               	goto	u4490
  2962  07D3                     u4491:
  2963  07D3  2FB4               	goto	l10911
  2964  07D4                     u4490:
  2965  07D4  2FD5               	goto	l10917
  2966                           	
  2967  07D5                     l2973:	
  2968                           	line	19
  2969                           	
  2970  07D5                     l10917:	
  2971                           ;infrared.c: 18: }
  2972                           ;infrared.c: 19: adcVal = fullval / 10;
  2973  07D5  300A               	movlw	low(0Ah)
  2974  07D6  1283               	bcf	status, 5	;RP0=0, select bank0
  2975  07D7  1303               	bcf	status, 6	;RP1=0, select bank0
  2976  07D8  00A6               	movwf	(?___lwdiv)
  2977  07D9  3000               	movlw	high(0Ah)
  2978  07DA  00A7               	movwf	((?___lwdiv))+1
  2979  07DB  0831               	movf	(readAvgDistance@fullval+1),w
  2980  07DC  01A9               	clrf	1+(?___lwdiv)+02h
  2981  07DD  07A9               	addwf	1+(?___lwdiv)+02h
  2982  07DE  0830               	movf	(readAvgDistance@fullval),w
  2983  07DF  01A8               	clrf	0+(?___lwdiv)+02h
  2984  07E0  07A8               	addwf	0+(?___lwdiv)+02h
  2985                           
  2986  07E1  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  2987  07E6  1283               	bcf	status, 5	;RP0=0, select bank0
  2988  07E7  1303               	bcf	status, 6	;RP1=0, select bank0
  2989  07E8  0827               	movf	(1+(?___lwdiv)),w
  2990  07E9  01EB               	clrf	(_adcVal+1)	;volatile
  2991  07EA  07EB               	addwf	(_adcVal+1)	;volatile
  2992  07EB  0826               	movf	(0+(?___lwdiv)),w
  2993  07EC  01EA               	clrf	(_adcVal)	;volatile
  2994  07ED  07EA               	addwf	(_adcVal)	;volatile
  2995                           
  2996                           	line	20
  2997                           ;infrared.c: 20: ADCconvert();
  2998  07EE  120A  118A  2015   	fcall	_ADCconvert
              120A  118A         
  2999                           	line	21
  3000                           	
  3001  07F3                     l2974:	
  3002  07F3  0008               	return
  3003                           	opt stack 0
  3004                           GLOBAL	__end_of_readAvgDistance
  3005  07F4                     	__end_of_readAvgDistance:
  3006 ;; =============== function _readAvgDistance ends ============
  3007                           
  3008                           	signat	_readAvgDistance,88
  3009                           	global	_UpdateDisplay
  3010                           psect	text1174,local,class=CODE,delta=2
  3011                           global __ptext1174
  3012  0238                     __ptext1174:
  3013                           
  3014 ;; *************** function _UpdateDisplay *****************
  3015 ;; Defined at:
  3016 ;;		line 215 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  adcOutput      16   42[BANK0 ] unsigned char [16]
  3021 ;; Return value:  Size  Location     Type
  3022 ;;		None               void
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       0       0       0       0
  3031 ;;      Locals:         0      16       0       0       0
  3032 ;;      Temps:          0       5       0       0       0
  3033 ;;      Totals:         0      21       0       0       0
  3034 ;;Total ram usage:       21 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    5
  3037 ;; This function calls:
  3038 ;;		_lcd_write_control
  3039 ;;		_sprintf
  3040 ;;		_lcd_set_cursor
  3041 ;;		_lcd_write_string
  3042 ;;		___awmod
  3043 ;; This function is called by:
  3044 ;;		_calibrateIR
  3045 ;;		_ChargeMode
  3046 ;;		_scan360
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           psect	text1174
  3051                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  3052                           	line	215
  3053                           	global	__size_of_UpdateDisplay
  3054  0179                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  3055                           	
  3056  0238                     _UpdateDisplay:	
  3057                           	opt	stack 1
  3058                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3059                           	line	216
  3060                           	
  3061  0238                     l10859:	
  3062                           ;HMI.c: 216: char adcOutput[16] = "";
  3063  0238  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3064  0239  0084               	movwf	fsr0
  3065  023A  3090               	movlw	low(UpdateDisplay@F1230)
  3066  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  3067  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  3068  023D  00C5               	movwf	(??_UpdateDisplay+0)+0
  3069  023E  0804               	movf	fsr0,w
  3070  023F  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  3071  0240  3010               	movlw	16
  3072  0241  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  3073  0242                     u4460:
  3074  0242  0845               	movf	(??_UpdateDisplay+0)+0,w
  3075  0243  0084               	movwf	fsr0
  3076  0244  1783               	bsf	status, 7	;select IRP bank3
  3077                           	
  3078  0245  0800               	movf	indf,w
  3079  0246  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  3080  0247  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  3081  0248  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  3082  0249  0084               	movwf	fsr0
  3083  024A  1383               	bcf	status, 7	;select IRP bank0
  3084                           	
  3085  024B  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  3086  024C  0080               	movwf	indf
  3087  024D  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  3088  024E  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  3089  024F  2A42               	goto	u4460
  3090                           	line	217
  3091                           ;HMI.c: 217: switch (currentMenu)
  3092  0250  2BA3               	goto	l10903
  3093                           	line	220
  3094                           ;HMI.c: 218: {
  3095                           ;HMI.c: 220: case 0:
  3096                           	
  3097  0251                     l5263:	
  3098                           	line	223
  3099                           	
  3100  0251                     l10861:	
  3101                           ;HMI.c: 223: lcd_write_control(0b00000001);
  3102  0251  3001               	movlw	(01h)
  3103  0252  120A  158A  21AF   	fcall	_lcd_write_control
              120A  118A         
  3104                           	line	225
  3105                           	
  3106  0257                     l10863:	
  3107                           ;HMI.c: 225: sprintf(adcOutput,"ADC:%d Dist:%d",adcVal, distTravelled);
  3108  0257  301B               	movlw	((STR_13-__stringbase))&0ffh
  3109  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  3110  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  3111  025A  00C5               	movwf	(??_UpdateDisplay+0)+0
  3112  025B  0845               	movf	(??_UpdateDisplay+0)+0,w
  3113  025C  00B4               	movwf	(?_sprintf)
  3114  025D  086B               	movf	(_adcVal+1),w	;volatile
  3115  025E  01B6               	clrf	1+(?_sprintf)+01h
  3116  025F  07B6               	addwf	1+(?_sprintf)+01h
  3117  0260  086A               	movf	(_adcVal),w	;volatile
  3118  0261  01B5               	clrf	0+(?_sprintf)+01h
  3119  0262  07B5               	addwf	0+(?_sprintf)+01h
  3120                           
  3121  0263  1683               	bsf	status, 5	;RP0=1, select bank1
  3122  0264  1303               	bcf	status, 6	;RP1=0, select bank1
  3123  0265  0841               	movf	(_distTravelled+1)^080h,w	;volatile
  3124  0266  1283               	bcf	status, 5	;RP0=0, select bank0
  3125  0267  1303               	bcf	status, 6	;RP1=0, select bank0
  3126  0268  01B8               	clrf	1+(?_sprintf)+03h
  3127  0269  07B8               	addwf	1+(?_sprintf)+03h
  3128  026A  1683               	bsf	status, 5	;RP0=1, select bank1
  3129  026B  1303               	bcf	status, 6	;RP1=0, select bank1
  3130  026C  0840               	movf	(_distTravelled)^080h,w	;volatile
  3131  026D  1283               	bcf	status, 5	;RP0=0, select bank0
  3132  026E  1303               	bcf	status, 6	;RP1=0, select bank0
  3133  026F  01B7               	clrf	0+(?_sprintf)+03h
  3134  0270  07B7               	addwf	0+(?_sprintf)+03h
  3135                           
  3136  0271  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3137  0272  120A  118A  24C1   	fcall	_sprintf
              120A  118A         
  3138                           	line	228
  3139                           	
  3140  0277                     l10865:	
  3141                           ;HMI.c: 228: lcd_set_cursor(0x00);
  3142  0277  3000               	movlw	(0)
  3143  0278  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3144                           	line	229
  3145                           ;HMI.c: 229: lcd_write_string(adcOutput);
  3146  027D  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3147  027E  1283               	bcf	status, 5	;RP0=0, select bank0
  3148  027F  1303               	bcf	status, 6	;RP1=0, select bank0
  3149  0280  00A7               	movwf	(?_lcd_write_string)
  3150  0281  3000               	movlw	(0x0/2)
  3151  0282  00A8               	movwf	(?_lcd_write_string+1)
  3152  0283  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3153                           	line	231
  3154                           	
  3155  0288                     l10867:	
  3156                           ;HMI.c: 231: lcd_set_cursor(0x40);
  3157  0288  3040               	movlw	(040h)
  3158  0289  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3159                           	line	232
  3160                           	
  3161  028E                     l10869:	
  3162                           ;HMI.c: 232: if (pos > 0)
  3163  028E  1683               	bsf	status, 5	;RP0=1, select bank1
  3164  028F  1303               	bcf	status, 6	;RP1=0, select bank1
  3165  0290  0849               	movf	(_pos+1)^080h,w
  3166  0291  3A80               	xorlw	80h
  3167  0292  00FF               	movwf	btemp+1
  3168  0293  3080               	movlw	(high(01h))^80h
  3169  0294  027F               	subwf	btemp+1,w
  3170  0295  1D03               	skipz
  3171  0296  2A99               	goto	u4475
  3172  0297  3001               	movlw	low(01h)
  3173  0298  0248               	subwf	(_pos)^080h,w
  3174  0299                     u4475:
  3175                           
  3176  0299  1C03               	skipc
  3177  029A  2A9C               	goto	u4471
  3178  029B  2A9D               	goto	u4470
  3179  029C                     u4471:
  3180  029C  2AB0               	goto	l10873
  3181  029D                     u4470:
  3182                           	line	233
  3183                           	
  3184  029D                     l10871:	
  3185                           ;HMI.c: 233: lcd_write_string(shortMenuStrings[pos - 1]);
  3186  029D  1683               	bsf	status, 5	;RP0=1, select bank1
  3187  029E  1303               	bcf	status, 6	;RP1=0, select bank1
  3188  029F  0848               	movf	(_pos)^080h,w
  3189  02A0  3EFF               	addlw	0FFh
  3190  02A1  3EE8               	addlw	_shortMenuStrings&0ffh
  3191  02A2  0084               	movwf	fsr0
  3192  02A3  1383               	bcf	status, 7	;select IRP bank1
  3193  02A4  0800               	movf	indf,w
  3194  02A5  1283               	bcf	status, 5	;RP0=0, select bank0
  3195  02A6  1303               	bcf	status, 6	;RP1=0, select bank0
  3196  02A7  00A7               	movwf	(?_lcd_write_string)
  3197  02A8  3080               	movlw	80h
  3198  02A9  00A8               	movwf	(?_lcd_write_string+1)
  3199  02AA  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3200  02AF  2AC3               	goto	l10875
  3201                           	line	234
  3202                           	
  3203  02B0                     l5264:	
  3204                           	line	235
  3205                           	
  3206  02B0                     l10873:	
  3207                           ;HMI.c: 234: else
  3208                           ;HMI.c: 235: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  3209  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
  3210  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
  3211  02B2  0848               	movf	(_pos)^080h,w
  3212  02B3  3E05               	addlw	05h
  3213  02B4  3EE8               	addlw	_shortMenuStrings&0ffh
  3214  02B5  0084               	movwf	fsr0
  3215  02B6  1383               	bcf	status, 7	;select IRP bank1
  3216  02B7  0800               	movf	indf,w
  3217  02B8  1283               	bcf	status, 5	;RP0=0, select bank0
  3218  02B9  1303               	bcf	status, 6	;RP1=0, select bank0
  3219  02BA  00A7               	movwf	(?_lcd_write_string)
  3220  02BB  3080               	movlw	80h
  3221  02BC  00A8               	movwf	(?_lcd_write_string+1)
  3222  02BD  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3223  02C2  2AC3               	goto	l10875
  3224                           	
  3225  02C3                     l5265:	
  3226                           	line	236
  3227                           	
  3228  02C3                     l10875:	
  3229                           ;HMI.c: 236: lcd_set_cursor(0x44);
  3230  02C3  3044               	movlw	(044h)
  3231  02C4  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3232                           	line	237
  3233                           	
  3234  02C9                     l10877:	
  3235                           ;HMI.c: 237: lcd_write_string(menuStrings[pos]);
  3236  02C9  1683               	bsf	status, 5	;RP0=1, select bank1
  3237  02CA  1303               	bcf	status, 6	;RP1=0, select bank1
  3238  02CB  0848               	movf	(_pos)^080h,w
  3239  02CC  3EE2               	addlw	_menuStrings&0ffh
  3240  02CD  0084               	movwf	fsr0
  3241  02CE  1383               	bcf	status, 7	;select IRP bank1
  3242  02CF  0800               	movf	indf,w
  3243  02D0  1283               	bcf	status, 5	;RP0=0, select bank0
  3244  02D1  1303               	bcf	status, 6	;RP1=0, select bank0
  3245  02D2  00A7               	movwf	(?_lcd_write_string)
  3246  02D3  3080               	movlw	80h
  3247  02D4  00A8               	movwf	(?_lcd_write_string+1)
  3248  02D5  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3249                           	line	238
  3250                           ;HMI.c: 238: lcd_set_cursor(0x4D);
  3251  02DA  304D               	movlw	(04Dh)
  3252  02DB  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3253                           	line	239
  3254                           	
  3255  02E0                     l10879:	
  3256                           ;HMI.c: 239: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  3257  02E0  3006               	movlw	low(06h)
  3258  02E1  1283               	bcf	status, 5	;RP0=0, select bank0
  3259  02E2  1303               	bcf	status, 6	;RP1=0, select bank0
  3260  02E3  00A0               	movwf	(?___awmod)
  3261  02E4  3000               	movlw	high(06h)
  3262  02E5  00A1               	movwf	((?___awmod))+1
  3263  02E6  1683               	bsf	status, 5	;RP0=1, select bank1
  3264  02E7  1303               	bcf	status, 6	;RP1=0, select bank1
  3265  02E8  0848               	movf	(_pos)^080h,w
  3266  02E9  3E01               	addlw	low(01h)
  3267  02EA  1283               	bcf	status, 5	;RP0=0, select bank0
  3268  02EB  1303               	bcf	status, 6	;RP1=0, select bank0
  3269  02EC  00A2               	movwf	0+(?___awmod)+02h
  3270  02ED  1683               	bsf	status, 5	;RP0=1, select bank1
  3271  02EE  1303               	bcf	status, 6	;RP1=0, select bank1
  3272  02EF  0849               	movf	(_pos+1)^080h,w
  3273  02F0  1803               	skipnc
  3274  02F1  3E01               	addlw	1
  3275  02F2  3E00               	addlw	high(01h)
  3276  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  3277  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  3278  02F5  00A3               	movwf	1+0+(?___awmod)+02h
  3279  02F6  120A  118A  268E   	fcall	___awmod
              120A  118A         
  3280  02FB  1283               	bcf	status, 5	;RP0=0, select bank0
  3281  02FC  1303               	bcf	status, 6	;RP1=0, select bank0
  3282  02FD  0820               	movf	(0+(?___awmod)),w
  3283  02FE  3EE8               	addlw	_shortMenuStrings&0ffh
  3284  02FF  0084               	movwf	fsr0
  3285  0300  1383               	bcf	status, 7	;select IRP bank1
  3286  0301  0800               	movf	indf,w
  3287  0302  00A7               	movwf	(?_lcd_write_string)
  3288  0303  3080               	movlw	80h
  3289  0304  00A8               	movwf	(?_lcd_write_string+1)
  3290  0305  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3291                           	line	240
  3292                           ;HMI.c: 240: break;
  3293  030A  2BB0               	goto	l5270
  3294                           	line	241
  3295                           ;HMI.c: 241: case 1:
  3296                           	
  3297  030B                     l5267:	
  3298                           	line	242
  3299                           	
  3300  030B                     l10881:	
  3301                           ;HMI.c: 242: lcd_write_control(0b00000001);
  3302  030B  3001               	movlw	(01h)
  3303  030C  120A  158A  21AF   	fcall	_lcd_write_control
              120A  118A         
  3304                           	line	244
  3305                           	
  3306  0311                     l10883:	
  3307                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",highByte, lowByte);
  3308  0311  301B               	movlw	((STR_14-__stringbase))&0ffh
  3309  0312  1283               	bcf	status, 5	;RP0=0, select bank0
  3310  0313  1303               	bcf	status, 6	;RP1=0, select bank0
  3311  0314  00C5               	movwf	(??_UpdateDisplay+0)+0
  3312  0315  0845               	movf	(??_UpdateDisplay+0)+0,w
  3313  0316  00B4               	movwf	(?_sprintf)
  3314  0317  1683               	bsf	status, 5	;RP0=1, select bank1
  3315  0318  1303               	bcf	status, 6	;RP1=0, select bank1
  3316  0319  085A               	movf	(_highByte)^080h,w
  3317  031A  1283               	bcf	status, 5	;RP0=0, select bank0
  3318  031B  1303               	bcf	status, 6	;RP1=0, select bank0
  3319  031C  00C6               	movwf	(??_UpdateDisplay+1)+0
  3320  031D  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  3321  031E  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  3322  031F  00B5               	movwf	0+(?_sprintf)+01h
  3323  0320  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  3324  0321  00B6               	movwf	1+(?_sprintf)+01h
  3325  0322  1683               	bsf	status, 5	;RP0=1, select bank1
  3326  0323  1303               	bcf	status, 6	;RP1=0, select bank1
  3327  0324  085B               	movf	(_lowByte)^080h,w
  3328  0325  1283               	bcf	status, 5	;RP0=0, select bank0
  3329  0326  1303               	bcf	status, 6	;RP1=0, select bank0
  3330  0327  00C8               	movwf	(??_UpdateDisplay+3)+0
  3331  0328  01C9               	clrf	(??_UpdateDisplay+3)+0+1
  3332  0329  0848               	movf	0+(??_UpdateDisplay+3)+0,w
  3333  032A  00B7               	movwf	0+(?_sprintf)+03h
  3334  032B  0849               	movf	1+(??_UpdateDisplay+3)+0,w
  3335  032C  00B8               	movwf	1+(?_sprintf)+03h
  3336  032D  304A               	movlw	(UpdateDisplay@adcOutput)&0ffh
  3337  032E  120A  118A  24C1   	fcall	_sprintf
              120A  118A         
  3338                           	line	246
  3339                           	
  3340  0333                     l10885:	
  3341                           ;HMI.c: 246: lcd_set_cursor(0x00);
  3342  0333  3000               	movlw	(0)
  3343  0334  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3344                           	line	247
  3345                           ;HMI.c: 247: lcd_write_string(adcOutput);
  3346  0339  304A               	movlw	(UpdateDisplay@adcOutput&0ffh)
  3347  033A  1283               	bcf	status, 5	;RP0=0, select bank0
  3348  033B  1303               	bcf	status, 6	;RP1=0, select bank0
  3349  033C  00A7               	movwf	(?_lcd_write_string)
  3350  033D  3000               	movlw	(0x0/2)
  3351  033E  00A8               	movwf	(?_lcd_write_string+1)
  3352  033F  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3353                           	line	252
  3354                           	
  3355  0344                     l10887:	
  3356                           ;HMI.c: 252: lcd_set_cursor(0x40);
  3357  0344  3040               	movlw	(040h)
  3358  0345  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3359                           	line	254
  3360                           	
  3361  034A                     l10889:	
  3362                           ;HMI.c: 254: lcd_write_string("<<<");
  3363  034A  3074               	movlw	low((STR_15-__stringbase))
  3364  034B  1283               	bcf	status, 5	;RP0=0, select bank0
  3365  034C  1303               	bcf	status, 6	;RP1=0, select bank0
  3366  034D  00A7               	movwf	(?_lcd_write_string)
  3367  034E  3080               	movlw	80h
  3368  034F  00A8               	movwf	(?_lcd_write_string+1)
  3369  0350  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3370                           	line	257
  3371                           ;HMI.c: 257: lcd_set_cursor(0x44);
  3372  0355  3044               	movlw	(044h)
  3373  0356  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3374                           	line	258
  3375                           	
  3376  035B                     l10891:	
  3377                           ;HMI.c: 258: lcd_write_string("CONFIRM");
  3378  035B  3068               	movlw	low((STR_16-__stringbase))
  3379  035C  1283               	bcf	status, 5	;RP0=0, select bank0
  3380  035D  1303               	bcf	status, 6	;RP1=0, select bank0
  3381  035E  00A7               	movwf	(?_lcd_write_string)
  3382  035F  3080               	movlw	80h
  3383  0360  00A8               	movwf	(?_lcd_write_string+1)
  3384  0361  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3385                           	line	259
  3386                           	
  3387  0366                     l10893:	
  3388                           ;HMI.c: 259: lcd_set_cursor(0x4D);
  3389  0366  304D               	movlw	(04Dh)
  3390  0367  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3391                           	line	260
  3392                           ;HMI.c: 260: lcd_write_string(">>>");
  3393  036C  3078               	movlw	low((STR_17-__stringbase))
  3394  036D  1283               	bcf	status, 5	;RP0=0, select bank0
  3395  036E  1303               	bcf	status, 6	;RP1=0, select bank0
  3396  036F  00A7               	movwf	(?_lcd_write_string)
  3397  0370  3080               	movlw	80h
  3398  0371  00A8               	movwf	(?_lcd_write_string+1)
  3399  0372  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3400                           	line	261
  3401                           ;HMI.c: 261: break;
  3402  0377  2BB0               	goto	l5270
  3403                           	line	262
  3404                           ;HMI.c: 262: case 2:
  3405                           	
  3406  0378                     l5268:	
  3407                           	line	263
  3408                           	
  3409  0378                     l10895:	
  3410                           ;HMI.c: 263: lcd_write_control(0b00000001);
  3411  0378  3001               	movlw	(01h)
  3412  0379  120A  158A  21AF   	fcall	_lcd_write_control
              120A  118A         
  3413                           	line	265
  3414                           ;HMI.c: 265: lcd_set_cursor(0x00);
  3415  037E  3000               	movlw	(0)
  3416  037F  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3417                           	line	266
  3418                           	
  3419  0384                     l10897:	
  3420                           ;HMI.c: 266: lcd_write_string(" Charging Mode ");
  3421  0384  300B               	movlw	low((STR_18-__stringbase))
  3422  0385  1283               	bcf	status, 5	;RP0=0, select bank0
  3423  0386  1303               	bcf	status, 6	;RP1=0, select bank0
  3424  0387  00A7               	movwf	(?_lcd_write_string)
  3425  0388  3080               	movlw	80h
  3426  0389  00A8               	movwf	(?_lcd_write_string+1)
  3427  038A  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3428                           	line	270
  3429                           	
  3430  038F                     l10899:	
  3431                           ;HMI.c: 270: lcd_set_cursor(0x44);
  3432  038F  3044               	movlw	(044h)
  3433  0390  120A  118A  27F4   	fcall	_lcd_set_cursor
              120A  118A         
  3434                           	line	271
  3435                           ;HMI.c: 271: lcd_write_string("  EXIT  ");
  3436  0395  302A               	movlw	low((STR_19-__stringbase))
  3437  0396  1283               	bcf	status, 5	;RP0=0, select bank0
  3438  0397  1303               	bcf	status, 6	;RP1=0, select bank0
  3439  0398  00A7               	movwf	(?_lcd_write_string)
  3440  0399  3080               	movlw	80h
  3441  039A  00A8               	movwf	(?_lcd_write_string+1)
  3442  039B  120A  158A  2290   	fcall	_lcd_write_string
              120A  118A         
  3443                           	line	273
  3444                           ;HMI.c: 273: break;
  3445  03A0  2BB0               	goto	l5270
  3446                           	line	275
  3447                           ;HMI.c: 275: default:
  3448                           	
  3449  03A1                     l5269:	
  3450                           	line	277
  3451                           ;HMI.c: 277: break;
  3452  03A1  2BB0               	goto	l5270
  3453                           	line	280
  3454                           	
  3455  03A2                     l10901:	
  3456                           ;HMI.c: 280: }
  3457  03A2  2BB0               	goto	l5270
  3458                           	line	217
  3459                           	
  3460  03A3                     l5262:	
  3461                           	
  3462  03A3                     l10903:	
  3463  03A3  1683               	bsf	status, 5	;RP0=1, select bank1
  3464  03A4  1303               	bcf	status, 6	;RP1=0, select bank1
  3465  03A5  0858               	movf	(_currentMenu)^080h,w
  3466                           	; Switch size 1, requested type "space"
  3467                           ; Number of cases is 3, Range of values is 0 to 2
  3468                           ; switch strategies available:
  3469                           ; Name         Instructions Cycles
  3470                           ; simple_byte           10     6 (average)
  3471                           ; direct_byte           17     8 (fixed)
  3472                           ; jumptable            260     6 (fixed)
  3473                           ; rangetable             7     6 (fixed)
  3474                           ; spacedrange           12     9 (fixed)
  3475                           ; locatedrange           3     3 (fixed)
  3476                           ;	Chosen strategy is simple_byte
  3477                           
  3478                           	opt asmopt_off
  3479  03A6  3A00               	xorlw	0^0	; case 0
  3480  03A7  1903               	skipnz
  3481  03A8  2A51               	goto	l10861
  3482  03A9  3A01               	xorlw	1^0	; case 1
  3483  03AA  1903               	skipnz
  3484  03AB  2B0B               	goto	l10881
  3485  03AC  3A03               	xorlw	2^1	; case 2
  3486  03AD  1903               	skipnz
  3487  03AE  2B78               	goto	l10895
  3488  03AF  2BB0               	goto	l5270
  3489                           	opt asmopt_on
  3490                           
  3491                           	line	280
  3492                           	
  3493  03B0                     l5266:	
  3494                           	line	281
  3495                           	
  3496  03B0                     l5270:	
  3497  03B0  0008               	return
  3498                           	opt stack 0
  3499                           GLOBAL	__end_of_UpdateDisplay
  3500  03B1                     	__end_of_UpdateDisplay:
  3501 ;; =============== function _UpdateDisplay ends ============
  3502                           
  3503                           	signat	_UpdateDisplay,88
  3504                           	global	_init
  3505                           psect	text1175,local,class=CODE,delta=2
  3506                           global __ptext1175
  3507  0B48                     __ptext1175:
  3508                           
  3509 ;; *************** function _init *****************
  3510 ;; Defined at:
  3511 ;;		line 158 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;		None               void
  3518 ;; Registers used:
  3519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       0       0       0       0
  3526 ;;      Locals:         0       0       0       0       0
  3527 ;;      Temps:          0       1       0       0       0
  3528 ;;      Totals:         0       1       0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    5
  3532 ;; This function calls:
  3533 ;;		_init_adc
  3534 ;;		_lcd_init
  3535 ;;		_ser_init
  3536 ;;		_robo_init
  3537 ;; This function is called by:
  3538 ;;		_main
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           psect	text1175
  3542                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  3543                           	line	158
  3544                           	global	__size_of_init
  3545  0030                     	__size_of_init	equ	__end_of_init-_init
  3546                           	
  3547  0B48                     _init:	
  3548                           	opt	stack 2
  3549                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3550                           	line	159
  3551                           	
  3552  0B48                     l11289:	
  3553                           ;Main.c: 159: GIE=0;
  3554  0B48  138B               	bcf	(95/8),(95)&7
  3555                           	line	160
  3556                           	
  3557  0B49                     l11291:	
  3558                           ;Main.c: 160: init_adc();
  3559  0B49  120A  158A  21C3   	fcall	_init_adc
              120A  158A         
  3560                           	line	161
  3561                           ;Main.c: 161: lcd_init();
  3562  0B4E  120A  158A  2239   	fcall	_lcd_init
              120A  158A         
  3563                           	line	162
  3564                           ;Main.c: 162: ser_init();
  3565  0B53  120A  158A  22BC   	fcall	_ser_init
              120A  158A         
  3566                           	line	163
  3567                           	
  3568  0B58                     l11293:	
  3569                           ;Main.c: 163: robo_init();
  3570  0B58  120A  158A  215B   	fcall	_robo_init
              120A  158A         
  3571                           	line	165
  3572                           	
  3573  0B5D                     l11295:	
  3574                           ;Main.c: 165: TRISB = 0b11111100;
  3575  0B5D  30FC               	movlw	(0FCh)
  3576  0B5E  1683               	bsf	status, 5	;RP0=1, select bank1
  3577  0B5F  1303               	bcf	status, 6	;RP1=0, select bank1
  3578  0B60  0086               	movwf	(134)^080h	;volatile
  3579                           	line	166
  3580                           	
  3581  0B61                     l11297:	
  3582                           ;Main.c: 166: TRISC &= 0b10010000;
  3583  0B61  3090               	movlw	(090h)
  3584  0B62  1283               	bcf	status, 5	;RP0=0, select bank0
  3585  0B63  1303               	bcf	status, 6	;RP1=0, select bank0
  3586  0B64  00A3               	movwf	(??_init+0)+0
  3587  0B65  0823               	movf	(??_init+0)+0,w
  3588  0B66  1683               	bsf	status, 5	;RP0=1, select bank1
  3589  0B67  1303               	bcf	status, 6	;RP1=0, select bank1
  3590  0B68  0587               	andwf	(135)^080h,f	;volatile
  3591                           	line	168
  3592                           	
  3593  0B69                     l11299:	
  3594                           ;Main.c: 168: SSPSTAT = 0b01000000;
  3595  0B69  3040               	movlw	(040h)
  3596  0B6A  0094               	movwf	(148)^080h	;volatile
  3597                           	line	169
  3598                           	
  3599  0B6B                     l11301:	
  3600                           ;Main.c: 169: SSPCON = 0b10100001;
  3601  0B6B  30A1               	movlw	(0A1h)
  3602  0B6C  1283               	bcf	status, 5	;RP0=0, select bank0
  3603  0B6D  1303               	bcf	status, 6	;RP1=0, select bank0
  3604  0B6E  0094               	movwf	(20)	;volatile
  3605                           	line	171
  3606                           	
  3607  0B6F                     l11303:	
  3608                           ;Main.c: 171: OPTION_REG = 0b00000100;
  3609  0B6F  3004               	movlw	(04h)
  3610  0B70  1683               	bsf	status, 5	;RP0=1, select bank1
  3611  0B71  1303               	bcf	status, 6	;RP1=0, select bank1
  3612  0B72  0081               	movwf	(129)^080h	;volatile
  3613                           	line	174
  3614                           	
  3615  0B73                     l11305:	
  3616                           ;Main.c: 174: TMR0IE = 1;
  3617  0B73  168B               	bsf	(93/8),(93)&7
  3618                           	line	175
  3619                           	
  3620  0B74                     l11307:	
  3621                           ;Main.c: 175: PEIE=1;
  3622  0B74  170B               	bsf	(94/8),(94)&7
  3623                           	line	177
  3624                           	
  3625  0B75                     l11309:	
  3626                           ;Main.c: 177: GIE=1;
  3627  0B75  178B               	bsf	(95/8),(95)&7
  3628                           	line	178
  3629                           	
  3630  0B76                     l11311:	
  3631                           ;Main.c: 178: (GIE = 1);
  3632  0B76  178B               	bsf	(95/8),(95)&7
  3633                           	line	179
  3634                           	
  3635  0B77                     l2208:	
  3636  0B77  0008               	return
  3637                           	opt stack 0
  3638                           GLOBAL	__end_of_init
  3639  0B78                     	__end_of_init:
  3640 ;; =============== function _init ends ============
  3641                           
  3642                           	signat	_init,88
  3643                           	global	_readDistance
  3644                           psect	text1176,local,class=CODE,delta=2
  3645                           global __ptext1176
  3646  09D9                     __ptext1176:
  3647                           
  3648 ;; *************** function _readDistance *****************
  3649 ;; Defined at:
  3650 ;;		line 24 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  fullval         2   12[BANK0 ] unsigned int 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  2    8[BANK0 ] unsigned int 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3664 ;;      Params:         0       2       0       0       0
  3665 ;;      Locals:         0       2       0       0       0
  3666 ;;      Temps:          0       2       0       0       0
  3667 ;;      Totals:         0       6       0       0       0
  3668 ;;Total ram usage:        6 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    5
  3671 ;; This function calls:
  3672 ;;		_adc_read_channel
  3673 ;; This function is called by:
  3674 ;;		_readAvgDistance
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           psect	text1176
  3678                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  3679                           	line	24
  3680                           	global	__size_of_readDistance
  3681  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  3682                           	
  3683  09D9                     _readDistance:	
  3684                           	opt	stack 0
  3685                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3686                           	line	27
  3687                           	
  3688  09D9                     l10829:	
  3689                           ;infrared.c: 25: unsigned int fullval ;
  3690                           ;infrared.c: 27: fullval = adc_read_channel(0);
  3691  09D9  3000               	movlw	(0)
  3692  09DA  120A  158A  2378   	fcall	_adc_read_channel
              120A  158A         
  3693  09DF  1283               	bcf	status, 5	;RP0=0, select bank0
  3694  09E0  1303               	bcf	status, 6	;RP1=0, select bank0
  3695  09E1  00AA               	movwf	(??_readDistance+0)+0
  3696  09E2  01AB               	clrf	(??_readDistance+0)+0+1
  3697  09E3  082A               	movf	0+(??_readDistance+0)+0,w
  3698  09E4  00AC               	movwf	(readDistance@fullval)
  3699  09E5  082B               	movf	1+(??_readDistance+0)+0,w
  3700  09E6  00AD               	movwf	(readDistance@fullval+1)
  3701                           	line	29
  3702                           	
  3703  09E7                     l10831:	
  3704                           ;infrared.c: 29: return fullval;
  3705  09E7  082D               	movf	(readDistance@fullval+1),w
  3706  09E8  01A9               	clrf	(?_readDistance+1)
  3707  09E9  07A9               	addwf	(?_readDistance+1)
  3708  09EA  082C               	movf	(readDistance@fullval),w
  3709  09EB  01A8               	clrf	(?_readDistance)
  3710  09EC  07A8               	addwf	(?_readDistance)
  3711                           
  3712  09ED  29EE               	goto	l2977
  3713                           	
  3714  09EE                     l10833:	
  3715                           	line	30
  3716                           	
  3717  09EE                     l2977:	
  3718  09EE  0008               	return
  3719                           	opt stack 0
  3720                           GLOBAL	__end_of_readDistance
  3721  09EF                     	__end_of_readDistance:
  3722 ;; =============== function _readDistance ends ============
  3723                           
  3724                           	signat	_readDistance,90
  3725                           	global	_lcd_init
  3726                           psect	text1177,local,class=CODE,delta=2
  3727                           global __ptext1177
  3728  0A39                     __ptext1177:
  3729                           
  3730 ;; *************** function _lcd_init *****************
  3731 ;; Defined at:
  3732 ;;		line 101 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;		None
  3737 ;; Return value:  Size  Location     Type
  3738 ;;		None               void
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0, pclath, cstack
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3746 ;;      Params:         0       0       0       0       0
  3747 ;;      Locals:         0       0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0
  3749 ;;      Totals:         0       0       0       0       0
  3750 ;;Total ram usage:        0 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:    4
  3753 ;; This function calls:
  3754 ;;		_lcd_write_control
  3755 ;; This function is called by:
  3756 ;;		_init
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           psect	text1177
  3760                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3761                           	line	101
  3762                           	global	__size_of_lcd_init
  3763  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3764                           	
  3765  0A39                     _lcd_init:	
  3766                           	opt	stack 2
  3767                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3768                           	line	105
  3769                           	
  3770  0A39                     l10809:	
  3771                           ;lcd.c: 105: ADCON1 = 0b00000010;
  3772  0A39  3002               	movlw	(02h)
  3773  0A3A  1683               	bsf	status, 5	;RP0=1, select bank1
  3774  0A3B  1303               	bcf	status, 6	;RP1=0, select bank1
  3775  0A3C  009F               	movwf	(159)^080h	;volatile
  3776                           	line	108
  3777                           	
  3778  0A3D                     l10811:	
  3779                           ;lcd.c: 108: PORTD = 0;
  3780  0A3D  1283               	bcf	status, 5	;RP0=0, select bank0
  3781  0A3E  1303               	bcf	status, 6	;RP1=0, select bank0
  3782  0A3F  0188               	clrf	(8)	;volatile
  3783                           	line	109
  3784                           	
  3785  0A40                     l10813:	
  3786                           ;lcd.c: 109: PORTE = 0;
  3787  0A40  0189               	clrf	(9)	;volatile
  3788                           	line	111
  3789                           	
  3790  0A41                     l10815:	
  3791                           ;lcd.c: 111: TRISD = 0b00000000;
  3792  0A41  1683               	bsf	status, 5	;RP0=1, select bank1
  3793  0A42  1303               	bcf	status, 6	;RP1=0, select bank1
  3794  0A43  0188               	clrf	(136)^080h	;volatile
  3795                           	line	112
  3796                           	
  3797  0A44                     l10817:	
  3798                           ;lcd.c: 112: TRISE = 0b00000000;
  3799  0A44  0189               	clrf	(137)^080h	;volatile
  3800                           	line	115
  3801                           	
  3802  0A45                     l10819:	
  3803                           ;lcd.c: 115: lcd_write_control(0b00000001);
  3804  0A45  3001               	movlw	(01h)
  3805  0A46  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3806                           	line	116
  3807                           	
  3808  0A4B                     l10821:	
  3809                           ;lcd.c: 116: lcd_write_control(0b00111000);
  3810  0A4B  3038               	movlw	(038h)
  3811  0A4C  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3812                           	line	117
  3813                           	
  3814  0A51                     l10823:	
  3815                           ;lcd.c: 117: lcd_write_control(0b00001100);
  3816  0A51  300C               	movlw	(0Ch)
  3817  0A52  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3818                           	line	118
  3819                           	
  3820  0A57                     l10825:	
  3821                           ;lcd.c: 118: lcd_write_control(0b00000110);
  3822  0A57  3006               	movlw	(06h)
  3823  0A58  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3824                           	line	119
  3825                           	
  3826  0A5D                     l10827:	
  3827                           ;lcd.c: 119: lcd_write_control(0b00000010);
  3828  0A5D  3002               	movlw	(02h)
  3829  0A5E  120A  158A  21AF   	fcall	_lcd_write_control
              120A  158A         
  3830                           	line	121
  3831                           	
  3832  0A63                     l1429:	
  3833  0A63  0008               	return
  3834                           	opt stack 0
  3835                           GLOBAL	__end_of_lcd_init
  3836  0A64                     	__end_of_lcd_init:
  3837 ;; =============== function _lcd_init ends ============
  3838                           
  3839                           	signat	_lcd_init,88
  3840                           	global	_lcd_write_string
  3841                           psect	text1178,local,class=CODE,delta=2
  3842                           global __ptext1178
  3843  0A90                     __ptext1178:
  3844                           
  3845 ;; *************** function _lcd_write_string *****************
  3846 ;; Defined at:
  3847 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  s               2    7[BANK0 ] PTR unsigned char 
  3850 ;;		 -> STR_19(9), STR_18(16), STR_17(4), STR_16(8), 
  3851 ;;		 -> STR_15(4), UpdateDisplay@adcOutput(16), STR_12(4), STR_11(4), 
  3852 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  3853 ;;		 -> STR_6(9), STR_5(9), STR_4(8), STR_3(9), 
  3854 ;;		 -> STR_2(9), STR_1(9), 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;		None               void
  3859 ;; Registers used:
  3860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3866 ;;      Params:         0       2       0       0       0
  3867 ;;      Locals:         0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0
  3869 ;;      Totals:         0       2       0       0       0
  3870 ;;Total ram usage:        2 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    4
  3873 ;; This function calls:
  3874 ;;		_lcd_write_data
  3875 ;; This function is called by:
  3876 ;;		_UpdateDisplay
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           psect	text1178
  3880                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3881                           	line	48
  3882                           	global	__size_of_lcd_write_string
  3883  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  3884                           	
  3885  0A90                     _lcd_write_string:	
  3886                           	opt	stack 1
  3887                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3888                           	line	50
  3889                           	
  3890  0A90                     l10801:	
  3891                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  3892  0A90  2AAA               	goto	l10807
  3893                           	
  3894  0A91                     l1409:	
  3895                           	
  3896  0A91                     l10803:	
  3897  0A91  1283               	bcf	status, 5	;RP0=0, select bank0
  3898  0A92  1303               	bcf	status, 6	;RP1=0, select bank0
  3899  0A93  0828               	movf	(lcd_write_string@s+1),w
  3900  0A94  00FF               	movwf	btemp+1
  3901  0A95  0827               	movf	(lcd_write_string@s),w
  3902  0A96  0084               	movwf	fsr0
  3903  0A97  120A  118A  2700   	fcall	stringtab
              120A  158A         
  3904  0A9C  120A  158A  2175   	fcall	_lcd_write_data
              120A  158A         
  3905                           	
  3906  0AA1                     l10805:	
  3907  0AA1  3001               	movlw	low(01h)
  3908  0AA2  1283               	bcf	status, 5	;RP0=0, select bank0
  3909  0AA3  1303               	bcf	status, 6	;RP1=0, select bank0
  3910  0AA4  07A7               	addwf	(lcd_write_string@s),f
  3911  0AA5  1803               	skipnc
  3912  0AA6  0AA8               	incf	(lcd_write_string@s+1),f
  3913  0AA7  3000               	movlw	high(01h)
  3914  0AA8  07A8               	addwf	(lcd_write_string@s+1),f
  3915  0AA9  2AAA               	goto	l10807
  3916                           	
  3917  0AAA                     l1408:	
  3918                           	
  3919  0AAA                     l10807:	
  3920  0AAA  1283               	bcf	status, 5	;RP0=0, select bank0
  3921  0AAB  1303               	bcf	status, 6	;RP1=0, select bank0
  3922  0AAC  0828               	movf	(lcd_write_string@s+1),w
  3923  0AAD  00FF               	movwf	btemp+1
  3924  0AAE  0827               	movf	(lcd_write_string@s),w
  3925  0AAF  0084               	movwf	fsr0
  3926  0AB0  120A  118A  2700   	fcall	stringtab
              120A  158A         
  3927  0AB5  3800               	iorlw	0
  3928  0AB6  1D03               	skipz
  3929  0AB7  2AB9               	goto	u4451
  3930  0AB8  2ABA               	goto	u4450
  3931  0AB9                     u4451:
  3932  0AB9  2A91               	goto	l10803
  3933  0ABA                     u4450:
  3934  0ABA  2ABB               	goto	l1411
  3935                           	
  3936  0ABB                     l1410:	
  3937                           	line	51
  3938                           	
  3939  0ABB                     l1411:	
  3940  0ABB  0008               	return
  3941                           	opt stack 0
  3942                           GLOBAL	__end_of_lcd_write_string
  3943  0ABC                     	__end_of_lcd_write_string:
  3944 ;; =============== function _lcd_write_string ends ============
  3945                           
  3946                           	signat	_lcd_write_string,4216
  3947                           	global	_lcd_set_cursor
  3948                           psect	text1179,local,class=CODE,delta=2
  3949                           global __ptext1179
  3950  07F4                     __ptext1179:
  3951                           
  3952 ;; *************** function _lcd_set_cursor *****************
  3953 ;; Defined at:
  3954 ;;		line 42 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  address         1    wreg     unsigned char 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  address         1    3[BANK0 ] unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;		None               void
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0, pclath, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3968 ;;      Params:         0       0       0       0       0
  3969 ;;      Locals:         0       1       0       0       0
  3970 ;;      Temps:          0       0       0       0       0
  3971 ;;      Totals:         0       1       0       0       0
  3972 ;;Total ram usage:        1 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    4
  3975 ;; This function calls:
  3976 ;;		_lcd_write_control
  3977 ;; This function is called by:
  3978 ;;		_UpdateDisplay
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           psect	text1179
  3982                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  3983                           	line	42
  3984                           	global	__size_of_lcd_set_cursor
  3985  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  3986                           	
  3987  07F4                     _lcd_set_cursor:	
  3988                           	opt	stack 1
  3989                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  3990                           ;lcd_set_cursor@address stored from wreg
  3991  07F4  1283               	bcf	status, 5	;RP0=0, select bank0
  3992  07F5  1303               	bcf	status, 6	;RP1=0, select bank0
  3993  07F6  00A3               	movwf	(lcd_set_cursor@address)
  3994                           	line	43
  3995                           	
  3996  07F7                     l10797:	
  3997                           ;lcd.c: 43: address |= 0b10000000;
  3998  07F7  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  3999                           	line	44
  4000                           	
  4001  07F8                     l10799:	
  4002                           ;lcd.c: 44: lcd_write_control(address);
  4003  07F8  0823               	movf	(lcd_set_cursor@address),w
  4004  07F9  120A  158A  21AF   	fcall	_lcd_write_control
              120A  118A         
  4005                           	line	45
  4006                           	
  4007  07FE                     l1405:	
  4008  07FE  0008               	return
  4009                           	opt stack 0
  4010                           GLOBAL	__end_of_lcd_set_cursor
  4011  07FF                     	__end_of_lcd_set_cursor:
  4012 ;; =============== function _lcd_set_cursor ends ============
  4013                           
  4014                           	signat	_lcd_set_cursor,4216
  4015                           	global	_sprintf
  4016                           psect	text1180,local,class=CODE,delta=2
  4017                           global __ptext1180
  4018  04C1                     __ptext1180:
  4019                           
  4020 ;; *************** function _sprintf *****************
  4021 ;; Defined at:
  4022 ;;		line 488 in file "C:\Program Files\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  sp              1    wreg     PTR unsigned char 
  4025 ;;		 -> UpdateDisplay@adcOutput(16), 
  4026 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  4027 ;;		 -> STR_14(15), STR_13(15), 
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  4030 ;;		 -> UpdateDisplay@adcOutput(16), 
  4031 ;;  _val            4   31[BANK0 ] struct .
  4032 ;;  c               1   36[BANK0 ] char 
  4033 ;;  prec            1   30[BANK0 ] char 
  4034 ;;  flag            1   29[BANK0 ] unsigned char 
  4035 ;;  ap              1   28[BANK0 ] PTR void [1]
  4036 ;;		 -> ?_sprintf(2), 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2   20[BANK0 ] int 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         0       5       0       0       0
  4047 ;;      Locals:         0       9       0       0       0
  4048 ;;      Temps:          0       3       0       0       0
  4049 ;;      Totals:         0      17       0       0       0
  4050 ;;Total ram usage:       17 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    4
  4053 ;; This function calls:
  4054 ;;		___lwdiv
  4055 ;;		___lwmod
  4056 ;; This function is called by:
  4057 ;;		_UpdateDisplay
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           psect	text1180
  4061                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  4062                           	line	488
  4063                           	global	__size_of_sprintf
  4064  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4065                           	
  4066  04C1                     _sprintf:	
  4067                           	opt	stack 1
  4068                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4069                           ;sprintf@sp stored from wreg
  4070                           	line	537
  4071  04C1  1283               	bcf	status, 5	;RP0=0, select bank0
  4072  04C2  1303               	bcf	status, 6	;RP1=0, select bank0
  4073  04C3  00C3               	movwf	(sprintf@sp)
  4074                           	
  4075  04C4                     l10739:	
  4076  04C4  3035               	movlw	(?_sprintf+01h)&0ffh
  4077  04C5  00B9               	movwf	(??_sprintf+0)+0
  4078  04C6  0839               	movf	(??_sprintf+0)+0,w
  4079  04C7  00BC               	movwf	(sprintf@ap)
  4080                           	line	540
  4081  04C8  2DA7               	goto	l10791
  4082                           	
  4083  04C9                     l6742:	
  4084                           	line	542
  4085                           	
  4086  04C9                     l10741:	
  4087  04C9  0844               	movf	(sprintf@c),w
  4088  04CA  3A25               	xorlw	025h
  4089  04CB  1903               	skipnz
  4090  04CC  2CCE               	goto	u4371
  4091  04CD  2CCF               	goto	u4370
  4092  04CE                     u4371:
  4093  04CE  2CDB               	goto	l6743
  4094  04CF                     u4370:
  4095                           	line	545
  4096                           	
  4097  04CF                     l10743:	
  4098  04CF  0844               	movf	(sprintf@c),w
  4099  04D0  00B9               	movwf	(??_sprintf+0)+0
  4100  04D1  0843               	movf	(sprintf@sp),w
  4101  04D2  0084               	movwf	fsr0
  4102  04D3  0839               	movf	(??_sprintf+0)+0,w
  4103  04D4  1383               	bcf	status, 7	;select IRP bank0
  4104  04D5  0080               	movwf	indf
  4105                           	
  4106  04D6                     l10745:	
  4107  04D6  3001               	movlw	(01h)
  4108  04D7  00B9               	movwf	(??_sprintf+0)+0
  4109  04D8  0839               	movf	(??_sprintf+0)+0,w
  4110  04D9  07C3               	addwf	(sprintf@sp),f
  4111                           	line	546
  4112  04DA  2DA7               	goto	l10791
  4113                           	line	547
  4114                           	
  4115  04DB                     l6743:	
  4116                           	line	552
  4117  04DB  01BD               	clrf	(sprintf@flag)
  4118                           	line	638
  4119  04DC  2CE2               	goto	l10749
  4120                           	line	640
  4121                           	
  4122  04DD                     l6745:	
  4123                           	line	641
  4124  04DD  2DBB               	goto	l10793
  4125                           	line	700
  4126                           	
  4127  04DE                     l6747:	
  4128  04DE  2CF7               	goto	l10751
  4129                           	line	701
  4130                           	
  4131  04DF                     l6748:	
  4132                           	line	702
  4133  04DF  2CF7               	goto	l10751
  4134                           	line	805
  4135                           	
  4136  04E0                     l6750:	
  4137                           	line	816
  4138  04E0  2DA7               	goto	l10791
  4139                           	line	825
  4140                           	
  4141  04E1                     l10747:	
  4142  04E1  2CF7               	goto	l10751
  4143                           	line	638
  4144                           	
  4145  04E2                     l6744:	
  4146                           	
  4147  04E2                     l10749:	
  4148  04E2  3001               	movlw	01h
  4149  04E3  07B4               	addwf	(sprintf@f),f
  4150  04E4  30FF               	movlw	-01h
  4151  04E5  0734               	addwf	(sprintf@f),w
  4152  04E6  0084               	movwf	fsr0
  4153  04E7  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4154  04EC  00C4               	movwf	(sprintf@c)
  4155                           	; Switch size 1, requested type "space"
  4156                           ; Number of cases is 3, Range of values is 0 to 105
  4157                           ; switch strategies available:
  4158                           ; Name         Instructions Cycles
  4159                           ; simple_byte           10     6 (average)
  4160                           ; jumptable            260     6 (fixed)
  4161                           ; rangetable           110     6 (fixed)
  4162                           ; spacedrange          218     9 (fixed)
  4163                           ; locatedrange         106     3 (fixed)
  4164                           ;	Chosen strategy is simple_byte
  4165                           
  4166                           	opt asmopt_off
  4167  04ED  3A00               	xorlw	0^0	; case 0
  4168  04EE  1903               	skipnz
  4169  04EF  2DBB               	goto	l10793
  4170  04F0  3A64               	xorlw	100^0	; case 100
  4171  04F1  1903               	skipnz
  4172  04F2  2CF7               	goto	l10751
  4173  04F3  3A0D               	xorlw	105^100	; case 105
  4174  04F4  1903               	skipnz
  4175  04F5  2CF7               	goto	l10751
  4176  04F6  2DA7               	goto	l10791
  4177                           	opt asmopt_on
  4178                           
  4179                           	line	825
  4180                           	
  4181  04F7                     l6749:	
  4182                           	line	1254
  4183                           	
  4184  04F7                     l10751:	
  4185  04F7  083C               	movf	(sprintf@ap),w
  4186  04F8  0084               	movwf	fsr0
  4187  04F9  1383               	bcf	status, 7	;select IRP bank0
  4188  04FA  0800               	movf	indf,w
  4189  04FB  00BF               	movwf	(sprintf@_val)
  4190  04FC  0A84               	incf	fsr0,f
  4191  04FD  0800               	movf	indf,w
  4192  04FE  00C0               	movwf	(sprintf@_val+1)
  4193                           	
  4194  04FF                     l10753:	
  4195  04FF  3002               	movlw	(02h)
  4196  0500  00B9               	movwf	(??_sprintf+0)+0
  4197  0501  0839               	movf	(??_sprintf+0)+0,w
  4198  0502  07BC               	addwf	(sprintf@ap),f
  4199                           	line	1256
  4200                           	
  4201  0503                     l10755:	
  4202  0503  1FC0               	btfss	(sprintf@_val+1),7
  4203  0504  2D06               	goto	u4381
  4204  0505  2D07               	goto	u4380
  4205  0506                     u4381:
  4206  0506  2D11               	goto	l10761
  4207  0507                     u4380:
  4208                           	line	1257
  4209                           	
  4210  0507                     l10757:	
  4211  0507  3003               	movlw	(03h)
  4212  0508  00B9               	movwf	(??_sprintf+0)+0
  4213  0509  0839               	movf	(??_sprintf+0)+0,w
  4214  050A  04BD               	iorwf	(sprintf@flag),f
  4215                           	line	1258
  4216                           	
  4217  050B                     l10759:	
  4218  050B  09BF               	comf	(sprintf@_val),f
  4219  050C  09C0               	comf	(sprintf@_val+1),f
  4220  050D  0ABF               	incf	(sprintf@_val),f
  4221  050E  1903               	skipnz
  4222  050F  0AC0               	incf	(sprintf@_val+1),f
  4223  0510  2D11               	goto	l10761
  4224                           	line	1259
  4225                           	
  4226  0511                     l6751:	
  4227                           	line	1300
  4228                           	
  4229  0511                     l10761:	
  4230  0511  01C4               	clrf	(sprintf@c)
  4231  0512  1403               	bsf	status,0
  4232  0513  0DC4               	rlf	(sprintf@c),f
  4233                           	
  4234  0514                     l10763:	
  4235  0514  0844               	movf	(sprintf@c),w
  4236  0515  3A05               	xorlw	05h
  4237  0516  1D03               	skipz
  4238  0517  2D19               	goto	u4391
  4239  0518  2D1A               	goto	u4390
  4240  0519                     u4391:
  4241  0519  2D1C               	goto	l10767
  4242  051A                     u4390:
  4243  051A  2D44               	goto	l10775
  4244                           	
  4245  051B                     l10765:	
  4246  051B  2D44               	goto	l10775
  4247                           	line	1301
  4248                           	
  4249  051C                     l6752:	
  4250                           	
  4251  051C                     l10767:	
  4252  051C  0844               	movf	(sprintf@c),w
  4253  051D  00B9               	movwf	(??_sprintf+0)+0
  4254  051E  0739               	addwf	(??_sprintf+0)+0,w
  4255  051F  3E01               	addlw	low((_dpowers-__stringbase))
  4256  0520  0084               	movwf	fsr0
  4257  0521  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4258  0526  00BA               	movwf	(??_sprintf+1)+0
  4259  0527  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4260  052C  00BB               	movwf	(??_sprintf+1)+0+1
  4261  052D  083B               	movf	1+(??_sprintf+1)+0,w
  4262  052E  0240               	subwf	(sprintf@_val+1),w
  4263  052F  1D03               	skipz
  4264  0530  2D33               	goto	u4405
  4265  0531  083A               	movf	0+(??_sprintf+1)+0,w
  4266  0532  023F               	subwf	(sprintf@_val),w
  4267  0533                     u4405:
  4268  0533  1803               	skipnc
  4269  0534  2D36               	goto	u4401
  4270  0535  2D37               	goto	u4400
  4271  0536                     u4401:
  4272  0536  2D39               	goto	l10771
  4273  0537                     u4400:
  4274  0537  2D44               	goto	l10775
  4275                           	line	1302
  4276                           	
  4277  0538                     l10769:	
  4278  0538  2D44               	goto	l10775
  4279                           	
  4280  0539                     l6754:	
  4281                           	line	1300
  4282                           	
  4283  0539                     l10771:	
  4284  0539  3001               	movlw	(01h)
  4285  053A  00B9               	movwf	(??_sprintf+0)+0
  4286  053B  0839               	movf	(??_sprintf+0)+0,w
  4287  053C  07C4               	addwf	(sprintf@c),f
  4288                           	
  4289  053D                     l10773:	
  4290  053D  0844               	movf	(sprintf@c),w
  4291  053E  3A05               	xorlw	05h
  4292  053F  1D03               	skipz
  4293  0540  2D42               	goto	u4411
  4294  0541  2D43               	goto	u4410
  4295  0542                     u4411:
  4296  0542  2D1C               	goto	l10767
  4297  0543                     u4410:
  4298  0543  2D44               	goto	l10775
  4299                           	
  4300  0544                     l6753:	
  4301                           	line	1433
  4302                           	
  4303  0544                     l10775:	
  4304  0544  083D               	movf	(sprintf@flag),w
  4305  0545  3903               	andlw	03h
  4306  0546  1903               	btfsc	status,2
  4307  0547  2D49               	goto	u4421
  4308  0548  2D4A               	goto	u4420
  4309  0549                     u4421:
  4310  0549  2D56               	goto	l10781
  4311  054A                     u4420:
  4312                           	line	1434
  4313                           	
  4314  054A                     l10777:	
  4315  054A  302D               	movlw	(02Dh)
  4316  054B  00B9               	movwf	(??_sprintf+0)+0
  4317  054C  0843               	movf	(sprintf@sp),w
  4318  054D  0084               	movwf	fsr0
  4319  054E  0839               	movf	(??_sprintf+0)+0,w
  4320  054F  1383               	bcf	status, 7	;select IRP bank0
  4321  0550  0080               	movwf	indf
  4322                           	
  4323  0551                     l10779:	
  4324  0551  3001               	movlw	(01h)
  4325  0552  00B9               	movwf	(??_sprintf+0)+0
  4326  0553  0839               	movf	(??_sprintf+0)+0,w
  4327  0554  07C3               	addwf	(sprintf@sp),f
  4328  0555  2D56               	goto	l10781
  4329                           	
  4330  0556                     l6755:	
  4331                           	line	1467
  4332                           	
  4333  0556                     l10781:	
  4334  0556  0844               	movf	(sprintf@c),w
  4335  0557  00B9               	movwf	(??_sprintf+0)+0
  4336  0558  0839               	movf	(??_sprintf+0)+0,w
  4337  0559  00BE               	movwf	(sprintf@prec)
  4338                           	line	1469
  4339  055A  2D9B               	goto	l10789
  4340                           	
  4341  055B                     l6757:	
  4342                           	line	1484
  4343                           	
  4344  055B                     l10783:	
  4345  055B  300A               	movlw	low(0Ah)
  4346  055C  00AE               	movwf	(?___lwmod)
  4347  055D  3000               	movlw	high(0Ah)
  4348  055E  00AF               	movwf	((?___lwmod))+1
  4349  055F  083E               	movf	(sprintf@prec),w
  4350  0560  00B9               	movwf	(??_sprintf+0)+0
  4351  0561  0739               	addwf	(??_sprintf+0)+0,w
  4352  0562  3E01               	addlw	low((_dpowers-__stringbase))
  4353  0563  0084               	movwf	fsr0
  4354  0564  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4355  0569  00A6               	movwf	(?___lwdiv)
  4356  056A  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4357  056F  00A7               	movwf	(?___lwdiv+1)
  4358  0570  0840               	movf	(sprintf@_val+1),w
  4359  0571  01A9               	clrf	1+(?___lwdiv)+02h
  4360  0572  07A9               	addwf	1+(?___lwdiv)+02h
  4361  0573  083F               	movf	(sprintf@_val),w
  4362  0574  01A8               	clrf	0+(?___lwdiv)+02h
  4363  0575  07A8               	addwf	0+(?___lwdiv)+02h
  4364                           
  4365  0576  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4366  057B  1283               	bcf	status, 5	;RP0=0, select bank0
  4367  057C  1303               	bcf	status, 6	;RP1=0, select bank0
  4368  057D  0827               	movf	(1+(?___lwdiv)),w
  4369  057E  01B1               	clrf	1+(?___lwmod)+02h
  4370  057F  07B1               	addwf	1+(?___lwmod)+02h
  4371  0580  0826               	movf	(0+(?___lwdiv)),w
  4372  0581  01B0               	clrf	0+(?___lwmod)+02h
  4373  0582  07B0               	addwf	0+(?___lwmod)+02h
  4374                           
  4375  0583  120A  158A  23F7   	fcall	___lwmod
              120A  118A         
  4376  0588  1283               	bcf	status, 5	;RP0=0, select bank0
  4377  0589  1303               	bcf	status, 6	;RP1=0, select bank0
  4378  058A  082E               	movf	(0+(?___lwmod)),w
  4379  058B  3E30               	addlw	030h
  4380  058C  00BA               	movwf	(??_sprintf+1)+0
  4381  058D  083A               	movf	(??_sprintf+1)+0,w
  4382  058E  00C4               	movwf	(sprintf@c)
  4383                           	line	1516
  4384                           	
  4385  058F                     l10785:	
  4386  058F  0844               	movf	(sprintf@c),w
  4387  0590  00B9               	movwf	(??_sprintf+0)+0
  4388  0591  0843               	movf	(sprintf@sp),w
  4389  0592  0084               	movwf	fsr0
  4390  0593  0839               	movf	(??_sprintf+0)+0,w
  4391  0594  1383               	bcf	status, 7	;select IRP bank0
  4392  0595  0080               	movwf	indf
  4393                           	
  4394  0596                     l10787:	
  4395  0596  3001               	movlw	(01h)
  4396  0597  00B9               	movwf	(??_sprintf+0)+0
  4397  0598  0839               	movf	(??_sprintf+0)+0,w
  4398  0599  07C3               	addwf	(sprintf@sp),f
  4399  059A  2D9B               	goto	l10789
  4400                           	line	1517
  4401                           	
  4402  059B                     l6756:	
  4403                           	line	1469
  4404                           	
  4405  059B                     l10789:	
  4406  059B  30FF               	movlw	(-1)
  4407  059C  00B9               	movwf	(??_sprintf+0)+0
  4408  059D  0839               	movf	(??_sprintf+0)+0,w
  4409  059E  07BE               	addwf	(sprintf@prec),f
  4410  059F  083E               	movf	((sprintf@prec)),w
  4411  05A0  3AFF               	xorlw	-1
  4412  05A1  1D03               	skipz
  4413  05A2  2DA4               	goto	u4431
  4414  05A3  2DA5               	goto	u4430
  4415  05A4                     u4431:
  4416  05A4  2D5B               	goto	l10783
  4417  05A5                     u4430:
  4418  05A5  2DA7               	goto	l10791
  4419                           	
  4420  05A6                     l6758:	
  4421  05A6  2DA7               	goto	l10791
  4422                           	line	1525
  4423                           	
  4424  05A7                     l6741:	
  4425                           	line	540
  4426                           	
  4427  05A7                     l10791:	
  4428  05A7  3001               	movlw	01h
  4429  05A8  07B4               	addwf	(sprintf@f),f
  4430  05A9  30FF               	movlw	-01h
  4431  05AA  0734               	addwf	(sprintf@f),w
  4432  05AB  0084               	movwf	fsr0
  4433  05AC  120A  118A  270A   	fcall	stringdir
              120A  118A         
  4434  05B1  00B9               	movwf	(??_sprintf+0)+0
  4435  05B2  0839               	movf	(??_sprintf+0)+0,w
  4436  05B3  00C4               	movwf	(sprintf@c)
  4437  05B4  08C4               	movf	((sprintf@c)),f
  4438  05B5  1D03               	skipz
  4439  05B6  2DB8               	goto	u4441
  4440  05B7  2DB9               	goto	u4440
  4441  05B8                     u4441:
  4442  05B8  2CC9               	goto	l10741
  4443  05B9                     u4440:
  4444  05B9  2DBB               	goto	l10793
  4445                           	
  4446  05BA                     l6759:	
  4447  05BA  2DBB               	goto	l10793
  4448                           	line	1527
  4449                           	
  4450  05BB                     l6746:	
  4451                           	line	1530
  4452                           	
  4453  05BB                     l10793:	
  4454  05BB  0843               	movf	(sprintf@sp),w
  4455  05BC  0084               	movwf	fsr0
  4456  05BD  1383               	bcf	status, 7	;select IRP bank0
  4457  05BE  0180               	clrf	indf
  4458  05BF  2DC0               	goto	l6760
  4459                           	line	1532
  4460                           	
  4461  05C0                     l10795:	
  4462                           	line	1533
  4463                           ;	Return value of _sprintf is never used
  4464                           	
  4465  05C0                     l6760:	
  4466  05C0  0008               	return
  4467                           	opt stack 0
  4468                           GLOBAL	__end_of_sprintf
  4469  05C1                     	__end_of_sprintf:
  4470 ;; =============== function _sprintf ends ============
  4471                           
  4472                           	signat	_sprintf,4698
  4473                           	global	_ADCconvert
  4474                           psect	text1181,local,class=CODE,delta=2
  4475                           global __ptext1181
  4476  0015                     __ptext1181:
  4477                           
  4478 ;; *************** function _ADCconvert *****************
  4479 ;; Defined at:
  4480 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\infrared.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;		None               void
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4494 ;;      Params:         0       0       0       0       0
  4495 ;;      Locals:         0       0       0       0       0
  4496 ;;      Temps:          0       2       0       0       0
  4497 ;;      Totals:         0       2       0       0       0
  4498 ;;Total ram usage:        2 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    4
  4501 ;; This function calls:
  4502 ;;		___wmul
  4503 ;;		___lwdiv
  4504 ;; This function is called by:
  4505 ;;		_readAvgDistance
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           psect	text1181
  4509                           	file	"E:\Aldnoah.Zero\Assignment3\infrared.c"
  4510                           	line	33
  4511                           	global	__size_of_ADCconvert
  4512  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  4513                           	
  4514  0015                     _ADCconvert:	
  4515                           	opt	stack 1
  4516                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  4517                           	line	39
  4518                           	
  4519  0015                     l10697:	
  4520                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  4521  0015  3000               	movlw	high(0D5h)
  4522  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  4523  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  4524  0018  026B               	subwf	(_adcVal+1),w	;volatile
  4525  0019  30D5               	movlw	low(0D5h)
  4526  001A  1903               	skipnz
  4527  001B  026A               	subwf	(_adcVal),w	;volatile
  4528  001C  1C03               	skipc
  4529  001D  281F               	goto	u4231
  4530  001E  2820               	goto	u4230
  4531  001F                     u4231:
  4532  001F  2863               	goto	l10703
  4533  0020                     u4230:
  4534                           	
  4535  0020                     l10699:	
  4536  0020  3000               	movlw	high(0EAh)
  4537  0021  026B               	subwf	(_adcVal+1),w	;volatile
  4538  0022  30EA               	movlw	low(0EAh)
  4539  0023  1903               	skipnz
  4540  0024  026A               	subwf	(_adcVal),w	;volatile
  4541  0025  1803               	skipnc
  4542  0026  2828               	goto	u4241
  4543  0027  2829               	goto	u4240
  4544  0028                     u4241:
  4545  0028  2863               	goto	l10703
  4546  0029                     u4240:
  4547                           	line	41
  4548                           	
  4549  0029                     l10701:	
  4550                           ;infrared.c: 40: {
  4551                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  4552  0029  3015               	movlw	low(015h)
  4553  002A  00A6               	movwf	(?___lwdiv)
  4554  002B  3000               	movlw	high(015h)
  4555  002C  00A7               	movwf	((?___lwdiv))+1
  4556  002D  096A               	comf	(_adcVal),w	;volatile
  4557  002E  00AE               	movwf	(??_ADCconvert+0)+0
  4558  002F  096B               	comf	(_adcVal+1),w	;volatile
  4559  0030  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4560  0031  0AAE               	incf	(??_ADCconvert+0)+0,f
  4561  0032  1903               	skipnz
  4562  0033  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4563  0034  082E               	movf	0+(??_ADCconvert+0)+0,w
  4564  0035  3EEA               	addlw	low(0EAh)
  4565  0036  00A0               	movwf	(?___wmul)
  4566  0037  082F               	movf	1+(??_ADCconvert+0)+0,w
  4567  0038  1803               	skipnc
  4568  0039  3E01               	addlw	1
  4569  003A  3E00               	addlw	high(0EAh)
  4570  003B  00A1               	movwf	1+(?___wmul)
  4571  003C  3005               	movlw	low(05h)
  4572  003D  00A2               	movwf	0+(?___wmul)+02h
  4573  003E  3000               	movlw	high(05h)
  4574  003F  00A3               	movwf	(0+(?___wmul)+02h)+1
  4575  0040  120A  158A  2264   	fcall	___wmul
              120A  118A         
  4576  0045  1283               	bcf	status, 5	;RP0=0, select bank0
  4577  0046  1303               	bcf	status, 6	;RP1=0, select bank0
  4578  0047  0821               	movf	(1+(?___wmul)),w
  4579  0048  01A9               	clrf	1+(?___lwdiv)+02h
  4580  0049  07A9               	addwf	1+(?___lwdiv)+02h
  4581  004A  0820               	movf	(0+(?___wmul)),w
  4582  004B  01A8               	clrf	0+(?___lwdiv)+02h
  4583  004C  07A8               	addwf	0+(?___lwdiv)+02h
  4584                           
  4585  004D  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4586  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  4587  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  4588  0054  0826               	movf	(0+(?___lwdiv)),w
  4589  0055  3E0F               	addlw	low(0Fh)
  4590  0056  1683               	bsf	status, 5	;RP0=1, select bank1
  4591  0057  1303               	bcf	status, 6	;RP1=0, select bank1
  4592  0058  00C6               	movwf	(_distance)^080h	;volatile
  4593  0059  1283               	bcf	status, 5	;RP0=0, select bank0
  4594  005A  1303               	bcf	status, 6	;RP1=0, select bank0
  4595  005B  0827               	movf	(1+(?___lwdiv)),w
  4596  005C  1803               	skipnc
  4597  005D  3E01               	addlw	1
  4598  005E  3E00               	addlw	high(0Fh)
  4599  005F  1683               	bsf	status, 5	;RP0=1, select bank1
  4600  0060  1303               	bcf	status, 6	;RP1=0, select bank1
  4601  0061  00C7               	movwf	1+(_distance)^080h	;volatile
  4602                           	line	42
  4603                           ;infrared.c: 42: }
  4604  0062  2A37               	goto	l2993
  4605                           	line	43
  4606                           	
  4607  0063                     l2980:	
  4608                           	
  4609  0063                     l10703:	
  4610                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  4611  0063  3000               	movlw	high(0AAh)
  4612  0064  1283               	bcf	status, 5	;RP0=0, select bank0
  4613  0065  026B               	subwf	(_adcVal+1),w	;volatile
  4614  0066  30AA               	movlw	low(0AAh)
  4615  0067  1903               	skipnz
  4616  0068  026A               	subwf	(_adcVal),w	;volatile
  4617  0069  1C03               	skipc
  4618  006A  286C               	goto	u4251
  4619  006B  286D               	goto	u4250
  4620  006C                     u4251:
  4621  006C  28B0               	goto	l10709
  4622  006D                     u4250:
  4623                           	
  4624  006D                     l10705:	
  4625  006D  3000               	movlw	high(0D5h)
  4626  006E  026B               	subwf	(_adcVal+1),w	;volatile
  4627  006F  30D5               	movlw	low(0D5h)
  4628  0070  1903               	skipnz
  4629  0071  026A               	subwf	(_adcVal),w	;volatile
  4630  0072  1803               	skipnc
  4631  0073  2875               	goto	u4261
  4632  0074  2876               	goto	u4260
  4633  0075                     u4261:
  4634  0075  28B0               	goto	l10709
  4635  0076                     u4260:
  4636                           	line	45
  4637                           	
  4638  0076                     l10707:	
  4639                           ;infrared.c: 44: {
  4640                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  4641  0076  302B               	movlw	low(02Bh)
  4642  0077  00A6               	movwf	(?___lwdiv)
  4643  0078  3000               	movlw	high(02Bh)
  4644  0079  00A7               	movwf	((?___lwdiv))+1
  4645  007A  096A               	comf	(_adcVal),w	;volatile
  4646  007B  00AE               	movwf	(??_ADCconvert+0)+0
  4647  007C  096B               	comf	(_adcVal+1),w	;volatile
  4648  007D  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4649  007E  0AAE               	incf	(??_ADCconvert+0)+0,f
  4650  007F  1903               	skipnz
  4651  0080  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4652  0081  082E               	movf	0+(??_ADCconvert+0)+0,w
  4653  0082  3ED5               	addlw	low(0D5h)
  4654  0083  00A0               	movwf	(?___wmul)
  4655  0084  082F               	movf	1+(??_ADCconvert+0)+0,w
  4656  0085  1803               	skipnc
  4657  0086  3E01               	addlw	1
  4658  0087  3E00               	addlw	high(0D5h)
  4659  0088  00A1               	movwf	1+(?___wmul)
  4660  0089  300A               	movlw	low(0Ah)
  4661  008A  00A2               	movwf	0+(?___wmul)+02h
  4662  008B  3000               	movlw	high(0Ah)
  4663  008C  00A3               	movwf	(0+(?___wmul)+02h)+1
  4664  008D  120A  158A  2264   	fcall	___wmul
              120A  118A         
  4665  0092  1283               	bcf	status, 5	;RP0=0, select bank0
  4666  0093  1303               	bcf	status, 6	;RP1=0, select bank0
  4667  0094  0821               	movf	(1+(?___wmul)),w
  4668  0095  01A9               	clrf	1+(?___lwdiv)+02h
  4669  0096  07A9               	addwf	1+(?___lwdiv)+02h
  4670  0097  0820               	movf	(0+(?___wmul)),w
  4671  0098  01A8               	clrf	0+(?___lwdiv)+02h
  4672  0099  07A8               	addwf	0+(?___lwdiv)+02h
  4673                           
  4674  009A  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4675  009F  1283               	bcf	status, 5	;RP0=0, select bank0
  4676  00A0  1303               	bcf	status, 6	;RP1=0, select bank0
  4677  00A1  0826               	movf	(0+(?___lwdiv)),w
  4678  00A2  3E14               	addlw	low(014h)
  4679  00A3  1683               	bsf	status, 5	;RP0=1, select bank1
  4680  00A4  1303               	bcf	status, 6	;RP1=0, select bank1
  4681  00A5  00C6               	movwf	(_distance)^080h	;volatile
  4682  00A6  1283               	bcf	status, 5	;RP0=0, select bank0
  4683  00A7  1303               	bcf	status, 6	;RP1=0, select bank0
  4684  00A8  0827               	movf	(1+(?___lwdiv)),w
  4685  00A9  1803               	skipnc
  4686  00AA  3E01               	addlw	1
  4687  00AB  3E00               	addlw	high(014h)
  4688  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
  4689  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
  4690  00AE  00C7               	movwf	1+(_distance)^080h	;volatile
  4691                           	line	46
  4692                           ;infrared.c: 46: }
  4693  00AF  2A37               	goto	l2993
  4694                           	line	47
  4695                           	
  4696  00B0                     l2982:	
  4697                           	
  4698  00B0                     l10709:	
  4699                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  4700  00B0  3000               	movlw	high(080h)
  4701  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
  4702  00B2  026B               	subwf	(_adcVal+1),w	;volatile
  4703  00B3  3080               	movlw	low(080h)
  4704  00B4  1903               	skipnz
  4705  00B5  026A               	subwf	(_adcVal),w	;volatile
  4706  00B6  1C03               	skipc
  4707  00B7  28B9               	goto	u4271
  4708  00B8  28BA               	goto	u4270
  4709  00B9                     u4271:
  4710  00B9  28FD               	goto	l10715
  4711  00BA                     u4270:
  4712                           	
  4713  00BA                     l10711:	
  4714  00BA  3000               	movlw	high(0AAh)
  4715  00BB  026B               	subwf	(_adcVal+1),w	;volatile
  4716  00BC  30AA               	movlw	low(0AAh)
  4717  00BD  1903               	skipnz
  4718  00BE  026A               	subwf	(_adcVal),w	;volatile
  4719  00BF  1803               	skipnc
  4720  00C0  28C2               	goto	u4281
  4721  00C1  28C3               	goto	u4280
  4722  00C2                     u4281:
  4723  00C2  28FD               	goto	l10715
  4724  00C3                     u4280:
  4725                           	line	49
  4726                           	
  4727  00C3                     l10713:	
  4728                           ;infrared.c: 48: {
  4729                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  4730  00C3  302A               	movlw	low(02Ah)
  4731  00C4  00A6               	movwf	(?___lwdiv)
  4732  00C5  3000               	movlw	high(02Ah)
  4733  00C6  00A7               	movwf	((?___lwdiv))+1
  4734  00C7  096A               	comf	(_adcVal),w	;volatile
  4735  00C8  00AE               	movwf	(??_ADCconvert+0)+0
  4736  00C9  096B               	comf	(_adcVal+1),w	;volatile
  4737  00CA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4738  00CB  0AAE               	incf	(??_ADCconvert+0)+0,f
  4739  00CC  1903               	skipnz
  4740  00CD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4741  00CE  082E               	movf	0+(??_ADCconvert+0)+0,w
  4742  00CF  3EAA               	addlw	low(0AAh)
  4743  00D0  00A0               	movwf	(?___wmul)
  4744  00D1  082F               	movf	1+(??_ADCconvert+0)+0,w
  4745  00D2  1803               	skipnc
  4746  00D3  3E01               	addlw	1
  4747  00D4  3E00               	addlw	high(0AAh)
  4748  00D5  00A1               	movwf	1+(?___wmul)
  4749  00D6  300A               	movlw	low(0Ah)
  4750  00D7  00A2               	movwf	0+(?___wmul)+02h
  4751  00D8  3000               	movlw	high(0Ah)
  4752  00D9  00A3               	movwf	(0+(?___wmul)+02h)+1
  4753  00DA  120A  158A  2264   	fcall	___wmul
              120A  118A         
  4754  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4755  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4756  00E1  0821               	movf	(1+(?___wmul)),w
  4757  00E2  01A9               	clrf	1+(?___lwdiv)+02h
  4758  00E3  07A9               	addwf	1+(?___lwdiv)+02h
  4759  00E4  0820               	movf	(0+(?___wmul)),w
  4760  00E5  01A8               	clrf	0+(?___lwdiv)+02h
  4761  00E6  07A8               	addwf	0+(?___lwdiv)+02h
  4762                           
  4763  00E7  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4764  00EC  1283               	bcf	status, 5	;RP0=0, select bank0
  4765  00ED  1303               	bcf	status, 6	;RP1=0, select bank0
  4766  00EE  0826               	movf	(0+(?___lwdiv)),w
  4767  00EF  3E1E               	addlw	low(01Eh)
  4768  00F0  1683               	bsf	status, 5	;RP0=1, select bank1
  4769  00F1  1303               	bcf	status, 6	;RP1=0, select bank1
  4770  00F2  00C6               	movwf	(_distance)^080h	;volatile
  4771  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  4772  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  4773  00F5  0827               	movf	(1+(?___lwdiv)),w
  4774  00F6  1803               	skipnc
  4775  00F7  3E01               	addlw	1
  4776  00F8  3E00               	addlw	high(01Eh)
  4777  00F9  1683               	bsf	status, 5	;RP0=1, select bank1
  4778  00FA  1303               	bcf	status, 6	;RP1=0, select bank1
  4779  00FB  00C7               	movwf	1+(_distance)^080h	;volatile
  4780                           	line	50
  4781                           ;infrared.c: 50: }
  4782  00FC  2A37               	goto	l2993
  4783                           	line	51
  4784                           	
  4785  00FD                     l2984:	
  4786                           	
  4787  00FD                     l10715:	
  4788                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  4789  00FD  3000               	movlw	high(06Bh)
  4790  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  4791  00FF  026B               	subwf	(_adcVal+1),w	;volatile
  4792  0100  306B               	movlw	low(06Bh)
  4793  0101  1903               	skipnz
  4794  0102  026A               	subwf	(_adcVal),w	;volatile
  4795  0103  1C03               	skipc
  4796  0104  2906               	goto	u4291
  4797  0105  2907               	goto	u4290
  4798  0106                     u4291:
  4799  0106  294A               	goto	l10721
  4800  0107                     u4290:
  4801                           	
  4802  0107                     l10717:	
  4803  0107  3000               	movlw	high(080h)
  4804  0108  026B               	subwf	(_adcVal+1),w	;volatile
  4805  0109  3080               	movlw	low(080h)
  4806  010A  1903               	skipnz
  4807  010B  026A               	subwf	(_adcVal),w	;volatile
  4808  010C  1803               	skipnc
  4809  010D  290F               	goto	u4301
  4810  010E  2910               	goto	u4300
  4811  010F                     u4301:
  4812  010F  294A               	goto	l10721
  4813  0110                     u4300:
  4814                           	line	53
  4815                           	
  4816  0110                     l10719:	
  4817                           ;infrared.c: 52: {
  4818                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  4819  0110  3015               	movlw	low(015h)
  4820  0111  00A6               	movwf	(?___lwdiv)
  4821  0112  3000               	movlw	high(015h)
  4822  0113  00A7               	movwf	((?___lwdiv))+1
  4823  0114  096A               	comf	(_adcVal),w	;volatile
  4824  0115  00AE               	movwf	(??_ADCconvert+0)+0
  4825  0116  096B               	comf	(_adcVal+1),w	;volatile
  4826  0117  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4827  0118  0AAE               	incf	(??_ADCconvert+0)+0,f
  4828  0119  1903               	skipnz
  4829  011A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4830  011B  082E               	movf	0+(??_ADCconvert+0)+0,w
  4831  011C  3E80               	addlw	low(080h)
  4832  011D  00A0               	movwf	(?___wmul)
  4833  011E  082F               	movf	1+(??_ADCconvert+0)+0,w
  4834  011F  1803               	skipnc
  4835  0120  3E01               	addlw	1
  4836  0121  3E00               	addlw	high(080h)
  4837  0122  00A1               	movwf	1+(?___wmul)
  4838  0123  300A               	movlw	low(0Ah)
  4839  0124  00A2               	movwf	0+(?___wmul)+02h
  4840  0125  3000               	movlw	high(0Ah)
  4841  0126  00A3               	movwf	(0+(?___wmul)+02h)+1
  4842  0127  120A  158A  2264   	fcall	___wmul
              120A  118A         
  4843  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  4844  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  4845  012E  0821               	movf	(1+(?___wmul)),w
  4846  012F  01A9               	clrf	1+(?___lwdiv)+02h
  4847  0130  07A9               	addwf	1+(?___lwdiv)+02h
  4848  0131  0820               	movf	(0+(?___wmul)),w
  4849  0132  01A8               	clrf	0+(?___lwdiv)+02h
  4850  0133  07A8               	addwf	0+(?___lwdiv)+02h
  4851                           
  4852  0134  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4853  0139  1283               	bcf	status, 5	;RP0=0, select bank0
  4854  013A  1303               	bcf	status, 6	;RP1=0, select bank0
  4855  013B  0826               	movf	(0+(?___lwdiv)),w
  4856  013C  3E28               	addlw	low(028h)
  4857  013D  1683               	bsf	status, 5	;RP0=1, select bank1
  4858  013E  1303               	bcf	status, 6	;RP1=0, select bank1
  4859  013F  00C6               	movwf	(_distance)^080h	;volatile
  4860  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  4861  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  4862  0142  0827               	movf	(1+(?___lwdiv)),w
  4863  0143  1803               	skipnc
  4864  0144  3E01               	addlw	1
  4865  0145  3E00               	addlw	high(028h)
  4866  0146  1683               	bsf	status, 5	;RP0=1, select bank1
  4867  0147  1303               	bcf	status, 6	;RP1=0, select bank1
  4868  0148  00C7               	movwf	1+(_distance)^080h	;volatile
  4869                           	line	54
  4870                           ;infrared.c: 54: }
  4871  0149  2A37               	goto	l2993
  4872                           	line	55
  4873                           	
  4874  014A                     l2986:	
  4875                           	
  4876  014A                     l10721:	
  4877                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  4878  014A  3000               	movlw	high(04Dh)
  4879  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  4880  014C  026B               	subwf	(_adcVal+1),w	;volatile
  4881  014D  304D               	movlw	low(04Dh)
  4882  014E  1903               	skipnz
  4883  014F  026A               	subwf	(_adcVal),w	;volatile
  4884  0150  1C03               	skipc
  4885  0151  2953               	goto	u4311
  4886  0152  2954               	goto	u4310
  4887  0153                     u4311:
  4888  0153  2997               	goto	l10727
  4889  0154                     u4310:
  4890                           	
  4891  0154                     l10723:	
  4892  0154  3000               	movlw	high(06Bh)
  4893  0155  026B               	subwf	(_adcVal+1),w	;volatile
  4894  0156  306B               	movlw	low(06Bh)
  4895  0157  1903               	skipnz
  4896  0158  026A               	subwf	(_adcVal),w	;volatile
  4897  0159  1803               	skipnc
  4898  015A  295C               	goto	u4321
  4899  015B  295D               	goto	u4320
  4900  015C                     u4321:
  4901  015C  2997               	goto	l10727
  4902  015D                     u4320:
  4903                           	line	57
  4904                           	
  4905  015D                     l10725:	
  4906                           ;infrared.c: 56: {
  4907                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  4908  015D  301E               	movlw	low(01Eh)
  4909  015E  00A6               	movwf	(?___lwdiv)
  4910  015F  3000               	movlw	high(01Eh)
  4911  0160  00A7               	movwf	((?___lwdiv))+1
  4912  0161  096A               	comf	(_adcVal),w	;volatile
  4913  0162  00AE               	movwf	(??_ADCconvert+0)+0
  4914  0163  096B               	comf	(_adcVal+1),w	;volatile
  4915  0164  00AF               	movwf	((??_ADCconvert+0)+0+1)
  4916  0165  0AAE               	incf	(??_ADCconvert+0)+0,f
  4917  0166  1903               	skipnz
  4918  0167  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  4919  0168  082E               	movf	0+(??_ADCconvert+0)+0,w
  4920  0169  3E6B               	addlw	low(06Bh)
  4921  016A  00A0               	movwf	(?___wmul)
  4922  016B  082F               	movf	1+(??_ADCconvert+0)+0,w
  4923  016C  1803               	skipnc
  4924  016D  3E01               	addlw	1
  4925  016E  3E00               	addlw	high(06Bh)
  4926  016F  00A1               	movwf	1+(?___wmul)
  4927  0170  300A               	movlw	low(0Ah)
  4928  0171  00A2               	movwf	0+(?___wmul)+02h
  4929  0172  3000               	movlw	high(0Ah)
  4930  0173  00A3               	movwf	(0+(?___wmul)+02h)+1
  4931  0174  120A  158A  2264   	fcall	___wmul
              120A  118A         
  4932  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  4933  017A  1303               	bcf	status, 6	;RP1=0, select bank0
  4934  017B  0821               	movf	(1+(?___wmul)),w
  4935  017C  01A9               	clrf	1+(?___lwdiv)+02h
  4936  017D  07A9               	addwf	1+(?___lwdiv)+02h
  4937  017E  0820               	movf	(0+(?___wmul)),w
  4938  017F  01A8               	clrf	0+(?___lwdiv)+02h
  4939  0180  07A8               	addwf	0+(?___lwdiv)+02h
  4940                           
  4941  0181  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  4942  0186  1283               	bcf	status, 5	;RP0=0, select bank0
  4943  0187  1303               	bcf	status, 6	;RP1=0, select bank0
  4944  0188  0826               	movf	(0+(?___lwdiv)),w
  4945  0189  3E32               	addlw	low(032h)
  4946  018A  1683               	bsf	status, 5	;RP0=1, select bank1
  4947  018B  1303               	bcf	status, 6	;RP1=0, select bank1
  4948  018C  00C6               	movwf	(_distance)^080h	;volatile
  4949  018D  1283               	bcf	status, 5	;RP0=0, select bank0
  4950  018E  1303               	bcf	status, 6	;RP1=0, select bank0
  4951  018F  0827               	movf	(1+(?___lwdiv)),w
  4952  0190  1803               	skipnc
  4953  0191  3E01               	addlw	1
  4954  0192  3E00               	addlw	high(032h)
  4955  0193  1683               	bsf	status, 5	;RP0=1, select bank1
  4956  0194  1303               	bcf	status, 6	;RP1=0, select bank1
  4957  0195  00C7               	movwf	1+(_distance)^080h	;volatile
  4958                           	line	58
  4959                           ;infrared.c: 58: }
  4960  0196  2A37               	goto	l2993
  4961                           	line	59
  4962                           	
  4963  0197                     l2988:	
  4964                           	
  4965  0197                     l10727:	
  4966                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  4967  0197  3000               	movlw	high(038h)
  4968  0198  1283               	bcf	status, 5	;RP0=0, select bank0
  4969  0199  026B               	subwf	(_adcVal+1),w	;volatile
  4970  019A  3038               	movlw	low(038h)
  4971  019B  1903               	skipnz
  4972  019C  026A               	subwf	(_adcVal),w	;volatile
  4973  019D  1C03               	skipc
  4974  019E  29A0               	goto	u4331
  4975  019F  29A1               	goto	u4330
  4976  01A0                     u4331:
  4977  01A0  29E4               	goto	l10733
  4978  01A1                     u4330:
  4979                           	
  4980  01A1                     l10729:	
  4981  01A1  3000               	movlw	high(04Dh)
  4982  01A2  026B               	subwf	(_adcVal+1),w	;volatile
  4983  01A3  304D               	movlw	low(04Dh)
  4984  01A4  1903               	skipnz
  4985  01A5  026A               	subwf	(_adcVal),w	;volatile
  4986  01A6  1803               	skipnc
  4987  01A7  29A9               	goto	u4341
  4988  01A8  29AA               	goto	u4340
  4989  01A9                     u4341:
  4990  01A9  29E4               	goto	l10733
  4991  01AA                     u4340:
  4992                           	line	61
  4993                           	
  4994  01AA                     l10731:	
  4995                           ;infrared.c: 60: {
  4996                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  4997  01AA  3015               	movlw	low(015h)
  4998  01AB  00A6               	movwf	(?___lwdiv)
  4999  01AC  3000               	movlw	high(015h)
  5000  01AD  00A7               	movwf	((?___lwdiv))+1
  5001  01AE  096A               	comf	(_adcVal),w	;volatile
  5002  01AF  00AE               	movwf	(??_ADCconvert+0)+0
  5003  01B0  096B               	comf	(_adcVal+1),w	;volatile
  5004  01B1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5005  01B2  0AAE               	incf	(??_ADCconvert+0)+0,f
  5006  01B3  1903               	skipnz
  5007  01B4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5008  01B5  082E               	movf	0+(??_ADCconvert+0)+0,w
  5009  01B6  3E4D               	addlw	low(04Dh)
  5010  01B7  00A0               	movwf	(?___wmul)
  5011  01B8  082F               	movf	1+(??_ADCconvert+0)+0,w
  5012  01B9  1803               	skipnc
  5013  01BA  3E01               	addlw	1
  5014  01BB  3E00               	addlw	high(04Dh)
  5015  01BC  00A1               	movwf	1+(?___wmul)
  5016  01BD  300A               	movlw	low(0Ah)
  5017  01BE  00A2               	movwf	0+(?___wmul)+02h
  5018  01BF  3000               	movlw	high(0Ah)
  5019  01C0  00A3               	movwf	(0+(?___wmul)+02h)+1
  5020  01C1  120A  158A  2264   	fcall	___wmul
              120A  118A         
  5021  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  5022  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  5023  01C8  0821               	movf	(1+(?___wmul)),w
  5024  01C9  01A9               	clrf	1+(?___lwdiv)+02h
  5025  01CA  07A9               	addwf	1+(?___lwdiv)+02h
  5026  01CB  0820               	movf	(0+(?___wmul)),w
  5027  01CC  01A8               	clrf	0+(?___lwdiv)+02h
  5028  01CD  07A8               	addwf	0+(?___lwdiv)+02h
  5029                           
  5030  01CE  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  5031  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
  5032  01D4  1303               	bcf	status, 6	;RP1=0, select bank0
  5033  01D5  0826               	movf	(0+(?___lwdiv)),w
  5034  01D6  3E3C               	addlw	low(03Ch)
  5035  01D7  1683               	bsf	status, 5	;RP0=1, select bank1
  5036  01D8  1303               	bcf	status, 6	;RP1=0, select bank1
  5037  01D9  00C6               	movwf	(_distance)^080h	;volatile
  5038  01DA  1283               	bcf	status, 5	;RP0=0, select bank0
  5039  01DB  1303               	bcf	status, 6	;RP1=0, select bank0
  5040  01DC  0827               	movf	(1+(?___lwdiv)),w
  5041  01DD  1803               	skipnc
  5042  01DE  3E01               	addlw	1
  5043  01DF  3E00               	addlw	high(03Ch)
  5044  01E0  1683               	bsf	status, 5	;RP0=1, select bank1
  5045  01E1  1303               	bcf	status, 6	;RP1=0, select bank1
  5046  01E2  00C7               	movwf	1+(_distance)^080h	;volatile
  5047                           	line	62
  5048                           ;infrared.c: 62: }
  5049  01E3  2A37               	goto	l2993
  5050                           	line	63
  5051                           	
  5052  01E4                     l2990:	
  5053                           	
  5054  01E4                     l10733:	
  5055                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  5056  01E4  3000               	movlw	high(02Bh)
  5057  01E5  1283               	bcf	status, 5	;RP0=0, select bank0
  5058  01E6  026B               	subwf	(_adcVal+1),w	;volatile
  5059  01E7  302B               	movlw	low(02Bh)
  5060  01E8  1903               	skipnz
  5061  01E9  026A               	subwf	(_adcVal),w	;volatile
  5062  01EA  1C03               	skipc
  5063  01EB  29ED               	goto	u4351
  5064  01EC  29EE               	goto	u4350
  5065  01ED                     u4351:
  5066  01ED  2A37               	goto	l2993
  5067  01EE                     u4350:
  5068                           	
  5069  01EE                     l10735:	
  5070  01EE  3000               	movlw	high(038h)
  5071  01EF  026B               	subwf	(_adcVal+1),w	;volatile
  5072  01F0  3038               	movlw	low(038h)
  5073  01F1  1903               	skipnz
  5074  01F2  026A               	subwf	(_adcVal),w	;volatile
  5075  01F3  1803               	skipnc
  5076  01F4  29F6               	goto	u4361
  5077  01F5  29F7               	goto	u4360
  5078  01F6                     u4361:
  5079  01F6  2A37               	goto	l2993
  5080  01F7                     u4360:
  5081                           	line	65
  5082                           	
  5083  01F7                     l10737:	
  5084                           ;infrared.c: 64: {
  5085                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  5086  01F7  300D               	movlw	low(0Dh)
  5087  01F8  00A6               	movwf	(?___lwdiv)
  5088  01F9  3000               	movlw	high(0Dh)
  5089  01FA  00A7               	movwf	((?___lwdiv))+1
  5090  01FB  096A               	comf	(_adcVal),w	;volatile
  5091  01FC  00AE               	movwf	(??_ADCconvert+0)+0
  5092  01FD  096B               	comf	(_adcVal+1),w	;volatile
  5093  01FE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  5094  01FF  0AAE               	incf	(??_ADCconvert+0)+0,f
  5095  0200  1903               	skipnz
  5096  0201  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  5097  0202  082E               	movf	0+(??_ADCconvert+0)+0,w
  5098  0203  3E38               	addlw	low(038h)
  5099  0204  00A0               	movwf	(?___wmul)
  5100  0205  082F               	movf	1+(??_ADCconvert+0)+0,w
  5101  0206  1803               	skipnc
  5102  0207  3E01               	addlw	1
  5103  0208  3E00               	addlw	high(038h)
  5104  0209  00A1               	movwf	1+(?___wmul)
  5105  020A  300A               	movlw	low(0Ah)
  5106  020B  00A2               	movwf	0+(?___wmul)+02h
  5107  020C  3000               	movlw	high(0Ah)
  5108  020D  00A3               	movwf	(0+(?___wmul)+02h)+1
  5109  020E  120A  158A  2264   	fcall	___wmul
              120A  118A         
  5110  0213  1283               	bcf	status, 5	;RP0=0, select bank0
  5111  0214  1303               	bcf	status, 6	;RP1=0, select bank0
  5112  0215  0821               	movf	(1+(?___wmul)),w
  5113  0216  01A9               	clrf	1+(?___lwdiv)+02h
  5114  0217  07A9               	addwf	1+(?___lwdiv)+02h
  5115  0218  0820               	movf	(0+(?___wmul)),w
  5116  0219  01A8               	clrf	0+(?___lwdiv)+02h
  5117  021A  07A8               	addwf	0+(?___lwdiv)+02h
  5118                           
  5119  021B  120A  158A  24CD   	fcall	___lwdiv
              120A  118A         
  5120  0220  1283               	bcf	status, 5	;RP0=0, select bank0
  5121  0221  1303               	bcf	status, 6	;RP1=0, select bank0
  5122  0222  0826               	movf	(0+(?___lwdiv)),w
  5123  0223  3E46               	addlw	low(046h)
  5124  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  5125  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  5126  0226  00C6               	movwf	(_distance)^080h	;volatile
  5127  0227  1283               	bcf	status, 5	;RP0=0, select bank0
  5128  0228  1303               	bcf	status, 6	;RP1=0, select bank0
  5129  0229  0827               	movf	(1+(?___lwdiv)),w
  5130  022A  1803               	skipnc
  5131  022B  3E01               	addlw	1
  5132  022C  3E00               	addlw	high(046h)
  5133  022D  1683               	bsf	status, 5	;RP0=1, select bank1
  5134  022E  1303               	bcf	status, 6	;RP1=0, select bank1
  5135  022F  00C7               	movwf	1+(_distance)^080h	;volatile
  5136  0230  2A37               	goto	l2993
  5137                           	line	66
  5138                           	
  5139  0231                     l2992:	
  5140  0231  2A37               	goto	l2993
  5141                           	line	67
  5142                           	
  5143  0232                     l2991:	
  5144  0232  2A37               	goto	l2993
  5145                           	
  5146  0233                     l2989:	
  5147  0233  2A37               	goto	l2993
  5148                           	
  5149  0234                     l2987:	
  5150  0234  2A37               	goto	l2993
  5151                           	
  5152  0235                     l2985:	
  5153  0235  2A37               	goto	l2993
  5154                           	
  5155  0236                     l2983:	
  5156  0236  2A37               	goto	l2993
  5157                           	
  5158  0237                     l2981:	
  5159                           	
  5160  0237                     l2993:	
  5161  0237  0008               	return
  5162                           	opt stack 0
  5163                           GLOBAL	__end_of_ADCconvert
  5164  0238                     	__end_of_ADCconvert:
  5165 ;; =============== function _ADCconvert ends ============
  5166                           
  5167                           	signat	_ADCconvert,88
  5168                           	global	_robotTurn
  5169                           psect	text1182,local,class=CODE,delta=2
  5170                           global __ptext1182
  5171  0E54                     __ptext1182:
  5172                           
  5173 ;; *************** function _robotTurn *****************
  5174 ;; Defined at:
  5175 ;;		line 83 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  distance        2    2[BANK0 ] int 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;		None               void
  5182 ;; Registers used:
  5183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5189 ;;      Params:         0       2       0       0       0
  5190 ;;      Locals:         0       0       0       0       0
  5191 ;;      Temps:          0       1       0       0       0
  5192 ;;      Totals:         0       3       0       0       0
  5193 ;;Total ram usage:        3 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    4
  5196 ;; This function calls:
  5197 ;;		_ser_putch
  5198 ;; This function is called by:
  5199 ;;		_main
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           psect	text1182
  5203                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5204                           	line	83
  5205                           	global	__size_of_robotTurn
  5206  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  5207                           	
  5208  0E54                     _robotTurn:	
  5209                           	opt	stack 3
  5210                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5211                           	line	86
  5212                           	
  5213  0E54                     l10687:	
  5214                           ;robot.c: 86: turnlowByte = (unsigned char) (distance) ;
  5215  0E54  1283               	bcf	status, 5	;RP0=0, select bank0
  5216  0E55  1303               	bcf	status, 6	;RP1=0, select bank0
  5217  0E56  0822               	movf	(robotTurn@distance),w
  5218  0E57  00A4               	movwf	(??_robotTurn+0)+0
  5219  0E58  0824               	movf	(??_robotTurn+0)+0,w
  5220  0E59  1683               	bsf	status, 5	;RP0=1, select bank1
  5221  0E5A  1303               	bcf	status, 6	;RP1=0, select bank1
  5222  0E5B  00E1               	movwf	(_turnlowByte)^080h
  5223                           	line	87
  5224                           	
  5225  0E5C                     l10689:	
  5226                           ;robot.c: 87: turnhighByte = (unsigned char) (distance >> 8);
  5227  0E5C  1283               	bcf	status, 5	;RP0=0, select bank0
  5228  0E5D  1303               	bcf	status, 6	;RP1=0, select bank0
  5229  0E5E  0823               	movf	(robotTurn@distance+1),w
  5230  0E5F  00A4               	movwf	(??_robotTurn+0)+0
  5231  0E60  0824               	movf	(??_robotTurn+0)+0,w
  5232  0E61  1683               	bsf	status, 5	;RP0=1, select bank1
  5233  0E62  1303               	bcf	status, 6	;RP1=0, select bank1
  5234  0E63  00E0               	movwf	(_turnhighByte)^080h
  5235                           	line	88
  5236                           	
  5237  0E64                     l10691:	
  5238                           ;robot.c: 88: if (distance >= 0)
  5239  0E64  1283               	bcf	status, 5	;RP0=0, select bank0
  5240  0E65  1303               	bcf	status, 6	;RP1=0, select bank0
  5241  0E66  1BA3               	btfsc	(robotTurn@distance+1),7
  5242  0E67  2E69               	goto	u4221
  5243  0E68  2E6A               	goto	u4220
  5244  0E69                     u4221:
  5245  0E69  2E89               	goto	l10695
  5246  0E6A                     u4220:
  5247                           	line	90
  5248                           	
  5249  0E6A                     l10693:	
  5250                           ;robot.c: 89: {
  5251                           ;robot.c: 90: ser_putch(137);
  5252  0E6A  3089               	movlw	(089h)
  5253  0E6B  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5254                           	line	92
  5255                           ;robot.c: 92: ser_putch(0);
  5256  0E70  3000               	movlw	(0)
  5257  0E71  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5258                           	line	94
  5259                           ;robot.c: 94: ser_putch(100);
  5260  0E76  3064               	movlw	(064h)
  5261  0E77  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5262                           	line	96
  5263                           ;robot.c: 96: ser_putch(0);
  5264  0E7C  3000               	movlw	(0)
  5265  0E7D  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5266                           	line	98
  5267                           ;robot.c: 98: ser_putch(1);
  5268  0E82  3001               	movlw	(01h)
  5269  0E83  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5270                           	line	99
  5271                           ;robot.c: 99: }
  5272  0E88  2EA7               	goto	l6731
  5273                           	line	100
  5274                           	
  5275  0E89                     l6730:	
  5276                           	line	102
  5277                           	
  5278  0E89                     l10695:	
  5279                           ;robot.c: 100: else
  5280                           ;robot.c: 101: {
  5281                           ;robot.c: 102: ser_putch(137);
  5282  0E89  3089               	movlw	(089h)
  5283  0E8A  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5284                           	line	104
  5285                           ;robot.c: 104: ser_putch(0);
  5286  0E8F  3000               	movlw	(0)
  5287  0E90  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5288                           	line	106
  5289                           ;robot.c: 106: ser_putch(100);
  5290  0E95  3064               	movlw	(064h)
  5291  0E96  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5292                           	line	108
  5293                           ;robot.c: 108: ser_putch(255);
  5294  0E9B  30FF               	movlw	(0FFh)
  5295  0E9C  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5296                           	line	110
  5297                           ;robot.c: 110: ser_putch(255);
  5298  0EA1  30FF               	movlw	(0FFh)
  5299  0EA2  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5300                           	line	111
  5301                           	
  5302  0EA7                     l6731:	
  5303                           	line	112
  5304                           ;robot.c: 111: }
  5305                           ;robot.c: 112: ser_putch(157);
  5306  0EA7  309D               	movlw	(09Dh)
  5307  0EA8  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5308                           	line	114
  5309                           ;robot.c: 114: ser_putch(turnhighByte);
  5310  0EAD  1683               	bsf	status, 5	;RP0=1, select bank1
  5311  0EAE  1303               	bcf	status, 6	;RP1=0, select bank1
  5312  0EAF  0860               	movf	(_turnhighByte)^080h,w
  5313  0EB0  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5314                           	line	116
  5315                           ;robot.c: 116: ser_putch(turnlowByte);
  5316  0EB5  1683               	bsf	status, 5	;RP0=1, select bank1
  5317  0EB6  1303               	bcf	status, 6	;RP1=0, select bank1
  5318  0EB7  0861               	movf	(_turnlowByte)^080h,w
  5319  0EB8  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5320                           	line	118
  5321                           ;robot.c: 118: ser_putch(137);
  5322  0EBD  3089               	movlw	(089h)
  5323  0EBE  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5324                           	line	120
  5325                           ;robot.c: 120: ser_putch(0);
  5326  0EC3  3000               	movlw	(0)
  5327  0EC4  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5328                           	line	122
  5329                           ;robot.c: 122: ser_putch(0);
  5330  0EC9  3000               	movlw	(0)
  5331  0ECA  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5332                           	line	124
  5333                           ;robot.c: 124: ser_putch(0);
  5334  0ECF  3000               	movlw	(0)
  5335  0ED0  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5336                           	line	126
  5337                           ;robot.c: 126: ser_putch(0);
  5338  0ED5  3000               	movlw	(0)
  5339  0ED6  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5340                           	line	127
  5341                           	
  5342  0EDB                     l6732:	
  5343  0EDB  0008               	return
  5344                           	opt stack 0
  5345                           GLOBAL	__end_of_robotTurn
  5346  0EDC                     	__end_of_robotTurn:
  5347 ;; =============== function _robotTurn ends ============
  5348                           
  5349                           	signat	_robotTurn,4216
  5350                           	global	_robotMove
  5351                           psect	text1183,local,class=CODE,delta=2
  5352                           global __ptext1183
  5353  0EDC                     __ptext1183:
  5354                           
  5355 ;; *************** function _robotMove *****************
  5356 ;; Defined at:
  5357 ;;		line 33 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  distance        2    2[BANK0 ] int 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;		None               void
  5364 ;; Registers used:
  5365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5371 ;;      Params:         0       2       0       0       0
  5372 ;;      Locals:         0       0       0       0       0
  5373 ;;      Temps:          0       1       0       0       0
  5374 ;;      Totals:         0       3       0       0       0
  5375 ;;Total ram usage:        3 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    4
  5378 ;; This function calls:
  5379 ;;		_ser_putch
  5380 ;; This function is called by:
  5381 ;;		_main
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           psect	text1183
  5385                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5386                           	line	33
  5387                           	global	__size_of_robotMove
  5388  008C                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  5389                           	
  5390  0EDC                     _robotMove:	
  5391                           	opt	stack 3
  5392                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5393                           	line	34
  5394                           	
  5395  0EDC                     l10677:	
  5396                           ;robot.c: 34: distTravelled =0;
  5397  0EDC  1683               	bsf	status, 5	;RP0=1, select bank1
  5398  0EDD  1303               	bcf	status, 6	;RP1=0, select bank1
  5399  0EDE  01C0               	clrf	(_distTravelled)^080h	;volatile
  5400  0EDF  01C1               	clrf	(_distTravelled+1)^080h	;volatile
  5401                           	line	35
  5402                           	
  5403  0EE0                     l10679:	
  5404                           ;robot.c: 35: lowByte = (unsigned char) (distance) ;
  5405  0EE0  1283               	bcf	status, 5	;RP0=0, select bank0
  5406  0EE1  1303               	bcf	status, 6	;RP1=0, select bank0
  5407  0EE2  0822               	movf	(robotMove@distance),w
  5408  0EE3  00A4               	movwf	(??_robotMove+0)+0
  5409  0EE4  0824               	movf	(??_robotMove+0)+0,w
  5410  0EE5  1683               	bsf	status, 5	;RP0=1, select bank1
  5411  0EE6  1303               	bcf	status, 6	;RP1=0, select bank1
  5412  0EE7  00DB               	movwf	(_lowByte)^080h
  5413                           	line	36
  5414                           ;robot.c: 36: highByte = (unsigned char) (distance >> 8);
  5415  0EE8  1283               	bcf	status, 5	;RP0=0, select bank0
  5416  0EE9  1303               	bcf	status, 6	;RP1=0, select bank0
  5417  0EEA  0823               	movf	(robotMove@distance+1),w
  5418  0EEB  00A4               	movwf	(??_robotMove+0)+0
  5419  0EEC  0824               	movf	(??_robotMove+0)+0,w
  5420  0EED  1683               	bsf	status, 5	;RP0=1, select bank1
  5421  0EEE  1303               	bcf	status, 6	;RP1=0, select bank1
  5422  0EEF  00DA               	movwf	(_highByte)^080h
  5423                           	line	37
  5424                           	
  5425  0EF0                     l10681:	
  5426                           ;robot.c: 37: if (distance >= 0)
  5427  0EF0  1283               	bcf	status, 5	;RP0=0, select bank0
  5428  0EF1  1303               	bcf	status, 6	;RP1=0, select bank0
  5429  0EF2  1BA3               	btfsc	(robotMove@distance+1),7
  5430  0EF3  2EF5               	goto	u4211
  5431  0EF4  2EF6               	goto	u4210
  5432  0EF5                     u4211:
  5433  0EF5  2F15               	goto	l10685
  5434  0EF6                     u4210:
  5435                           	line	39
  5436                           	
  5437  0EF6                     l10683:	
  5438                           ;robot.c: 38: {
  5439                           ;robot.c: 39: ser_putch(137);
  5440  0EF6  3089               	movlw	(089h)
  5441  0EF7  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5442                           	line	41
  5443                           ;robot.c: 41: ser_putch(0);
  5444  0EFC  3000               	movlw	(0)
  5445  0EFD  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5446                           	line	43
  5447                           ;robot.c: 43: ser_putch(200);
  5448  0F02  30C8               	movlw	(0C8h)
  5449  0F03  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5450                           	line	45
  5451                           ;robot.c: 45: ser_putch(128);
  5452  0F08  3080               	movlw	(080h)
  5453  0F09  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5454                           	line	47
  5455                           ;robot.c: 47: ser_putch(0);
  5456  0F0E  3000               	movlw	(0)
  5457  0F0F  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5458                           	line	48
  5459                           ;robot.c: 48: }
  5460  0F14  2F33               	goto	l6726
  5461                           	line	49
  5462                           	
  5463  0F15                     l6725:	
  5464                           	line	51
  5465                           	
  5466  0F15                     l10685:	
  5467                           ;robot.c: 49: else
  5468                           ;robot.c: 50: {
  5469                           ;robot.c: 51: ser_putch(137);
  5470  0F15  3089               	movlw	(089h)
  5471  0F16  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5472                           	line	53
  5473                           ;robot.c: 53: ser_putch(0xff);
  5474  0F1B  30FF               	movlw	(0FFh)
  5475  0F1C  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5476                           	line	55
  5477                           ;robot.c: 55: ser_putch(0x38);
  5478  0F21  3038               	movlw	(038h)
  5479  0F22  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5480                           	line	57
  5481                           ;robot.c: 57: ser_putch(128);
  5482  0F27  3080               	movlw	(080h)
  5483  0F28  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5484                           	line	59
  5485                           ;robot.c: 59: ser_putch(0);
  5486  0F2D  3000               	movlw	(0)
  5487  0F2E  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5488                           	line	60
  5489                           	
  5490  0F33                     l6726:	
  5491                           	line	64
  5492                           ;robot.c: 60: }
  5493                           ;robot.c: 64: ser_putch(156);
  5494  0F33  309C               	movlw	(09Ch)
  5495  0F34  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5496                           	line	66
  5497                           ;robot.c: 66: ser_putch(highByte);
  5498  0F39  1683               	bsf	status, 5	;RP0=1, select bank1
  5499  0F3A  1303               	bcf	status, 6	;RP1=0, select bank1
  5500  0F3B  085A               	movf	(_highByte)^080h,w
  5501  0F3C  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5502                           	line	68
  5503                           ;robot.c: 68: ser_putch(lowByte);
  5504  0F41  1683               	bsf	status, 5	;RP0=1, select bank1
  5505  0F42  1303               	bcf	status, 6	;RP1=0, select bank1
  5506  0F43  085B               	movf	(_lowByte)^080h,w
  5507  0F44  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5508                           	line	70
  5509                           ;robot.c: 70: ser_putch(137);
  5510  0F49  3089               	movlw	(089h)
  5511  0F4A  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5512                           	line	72
  5513                           ;robot.c: 72: ser_putch(0);
  5514  0F4F  3000               	movlw	(0)
  5515  0F50  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5516                           	line	74
  5517                           ;robot.c: 74: ser_putch(0);
  5518  0F55  3000               	movlw	(0)
  5519  0F56  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5520                           	line	76
  5521                           ;robot.c: 76: ser_putch(0);
  5522  0F5B  3000               	movlw	(0)
  5523  0F5C  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5524                           	line	78
  5525                           ;robot.c: 78: ser_putch(0);
  5526  0F61  3000               	movlw	(0)
  5527  0F62  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5528                           	line	80
  5529                           	
  5530  0F67                     l6727:	
  5531  0F67  0008               	return
  5532                           	opt stack 0
  5533                           GLOBAL	__end_of_robotMove
  5534  0F68                     	__end_of_robotMove:
  5535 ;; =============== function _robotMove ends ============
  5536                           
  5537                           	signat	_robotMove,4216
  5538                           	global	_rotate
  5539                           psect	text1184,local,class=CODE,delta=2
  5540                           global __ptext1184
  5541  0D1D                     __ptext1184:
  5542                           
  5543 ;; *************** function _rotate *****************
  5544 ;; Defined at:
  5545 ;;		line 48 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  numsteps        2    3[BANK0 ] unsigned int 
  5548 ;;  direction       1    5[BANK0 ] unsigned char 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  i               2    8[BANK0 ] unsigned int 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;		None               void
  5553 ;; Registers used:
  5554 ;;		wreg, status,2, status,0, pclath, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5560 ;;      Params:         0       3       0       0       0
  5561 ;;      Locals:         0       2       0       0       0
  5562 ;;      Temps:          0       2       0       0       0
  5563 ;;      Totals:         0       7       0       0       0
  5564 ;;Total ram usage:        7 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    4
  5567 ;; This function calls:
  5568 ;;		_spi_transfer
  5569 ;; This function is called by:
  5570 ;;		_calibrateIR
  5571 ;;		_scan360
  5572 ;;		_main
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           psect	text1184
  5576                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  5577                           	line	48
  5578                           	global	__size_of_rotate
  5579  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  5580                           	
  5581  0D1D                     _rotate:	
  5582                           	opt	stack 3
  5583                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  5584                           	line	50
  5585                           	
  5586  0D1D                     l10649:	
  5587                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  5588  0D1D  1283               	bcf	status, 5	;RP0=0, select bank0
  5589  0D1E  1303               	bcf	status, 6	;RP1=0, select bank0
  5590  0D1F  1407               	bsf	(56/8),(56)&7
  5591  0D20  1487               	bsf	(57/8),(57)&7
  5592                           	line	51
  5593                           	
  5594  0D21                     l10651:	
  5595                           ;steppermotor.c: 51: if (direction == 0)
  5596  0D21  08A5               	movf	(rotate@direction),f
  5597  0D22  1D03               	skipz
  5598  0D23  2D25               	goto	u4191
  5599  0D24  2D26               	goto	u4190
  5600  0D25                     u4191:
  5601  0D25  2D2D               	goto	l10655
  5602  0D26                     u4190:
  5603                           	line	52
  5604                           	
  5605  0D26                     l10653:	
  5606                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  5607  0D26  300F               	movlw	(0Fh)
  5608  0D27  120A  158A  219B   	fcall	_spi_transfer
              120A  158A         
  5609  0D2C  2D34               	goto	l10657
  5610                           	line	53
  5611                           	
  5612  0D2D                     l3694:	
  5613                           	line	54
  5614                           	
  5615  0D2D                     l10655:	
  5616                           ;steppermotor.c: 53: else
  5617                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  5618  0D2D  300D               	movlw	(0Dh)
  5619  0D2E  120A  158A  219B   	fcall	_spi_transfer
              120A  158A         
  5620  0D33  2D34               	goto	l10657
  5621                           	
  5622  0D34                     l3695:	
  5623                           	line	55
  5624                           	
  5625  0D34                     l10657:	
  5626                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  5627  0D34  1283               	bcf	status, 5	;RP0=0, select bank0
  5628  0D35  1303               	bcf	status, 6	;RP1=0, select bank0
  5629  0D36  1007               	bcf	(56/8),(56)&7
  5630                           	
  5631  0D37                     l10659:	
  5632  0D37  1087               	bcf	(57/8),(57)&7
  5633                           	line	56
  5634                           	
  5635  0D38                     l10661:	
  5636                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  5637  0D38  01A8               	clrf	(rotate@i)
  5638  0D39  01A9               	clrf	(rotate@i+1)
  5639  0D3A  2D51               	goto	l3696
  5640                           	line	57
  5641                           	
  5642  0D3B                     l3697:	
  5643                           	line	58
  5644                           ;steppermotor.c: 57: {
  5645                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  5646  0D3B  1507               	bsf	(58/8),(58)&7
  5647  0D3C  0000               	nop
  5648  0D3D  1283               	bcf	status, 5	;RP0=0, select bank0
  5649  0D3E  1303               	bcf	status, 6	;RP1=0, select bank0
  5650  0D3F  1107               	bcf	(58/8),(58)&7
  5651                           	line	59
  5652                           	
  5653  0D40                     l10663:	
  5654                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  5655                           	opt asmopt_off
  5656  0D40  3062               movlw	98
  5657  0D41  00A7               movwf	((??_rotate+0)+0+1),f
  5658  0D42  3065               	movlw	101
  5659  0D43  00A6               movwf	((??_rotate+0)+0),f
  5660  0D44                     u5017:
  5661  0D44  0BA6               	decfsz	((??_rotate+0)+0),f
  5662  0D45  2D44               	goto	u5017
  5663  0D46  0BA7               	decfsz	((??_rotate+0)+0+1),f
  5664  0D47  2D44               	goto	u5017
  5665  0D48  2D49               	nop2
  5666                           opt asmopt_on
  5667                           
  5668                           	line	56
  5669  0D49  3001               	movlw	low(01h)
  5670  0D4A  1283               	bcf	status, 5	;RP0=0, select bank0
  5671  0D4B  1303               	bcf	status, 6	;RP1=0, select bank0
  5672  0D4C  07A8               	addwf	(rotate@i),f
  5673  0D4D  1803               	skipnc
  5674  0D4E  0AA9               	incf	(rotate@i+1),f
  5675  0D4F  3000               	movlw	high(01h)
  5676  0D50  07A9               	addwf	(rotate@i+1),f
  5677                           	
  5678  0D51                     l3696:	
  5679  0D51  0824               	movf	(rotate@numsteps+1),w
  5680  0D52  0229               	subwf	(rotate@i+1),w
  5681  0D53  1D03               	skipz
  5682  0D54  2D57               	goto	u4205
  5683  0D55  0823               	movf	(rotate@numsteps),w
  5684  0D56  0228               	subwf	(rotate@i),w
  5685  0D57                     u4205:
  5686  0D57  1C03               	skipc
  5687  0D58  2D5A               	goto	u4201
  5688  0D59  2D5B               	goto	u4200
  5689  0D5A                     u4201:
  5690  0D5A  2D3B               	goto	l3697
  5691  0D5B                     u4200:
  5692                           	
  5693  0D5B                     l3698:	
  5694                           	line	61
  5695                           ;steppermotor.c: 60: }
  5696                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  5697  0D5B  1407               	bsf	(56/8),(56)&7
  5698  0D5C  1487               	bsf	(57/8),(57)&7
  5699                           	line	62
  5700                           	
  5701  0D5D                     l10665:	
  5702                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  5703  0D5D  3000               	movlw	(0)
  5704  0D5E  120A  158A  219B   	fcall	_spi_transfer
              120A  158A         
  5705                           	line	63
  5706                           	
  5707  0D63                     l10667:	
  5708                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  5709  0D63  1283               	bcf	status, 5	;RP0=0, select bank0
  5710  0D64  1303               	bcf	status, 6	;RP1=0, select bank0
  5711  0D65  1007               	bcf	(56/8),(56)&7
  5712                           	
  5713  0D66                     l10669:	
  5714  0D66  1087               	bcf	(57/8),(57)&7
  5715                           	line	64
  5716                           	
  5717  0D67                     l10671:	
  5718                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  5719  0D67  1507               	bsf	(58/8),(58)&7
  5720                           	
  5721  0D68                     l10673:	
  5722  0D68  0000               	nop
  5723                           	
  5724  0D69                     l10675:	
  5725  0D69  1283               	bcf	status, 5	;RP0=0, select bank0
  5726  0D6A  1303               	bcf	status, 6	;RP1=0, select bank0
  5727  0D6B  1107               	bcf	(58/8),(58)&7
  5728                           	line	65
  5729                           	
  5730  0D6C                     l3699:	
  5731  0D6C  0008               	return
  5732                           	opt stack 0
  5733                           GLOBAL	__end_of_rotate
  5734  0D6D                     	__end_of_rotate:
  5735 ;; =============== function _rotate ends ============
  5736                           
  5737                           	signat	_rotate,8312
  5738                           	global	_robo_init
  5739                           psect	text1185,local,class=CODE,delta=2
  5740                           global __ptext1185
  5741  095B                     __ptext1185:
  5742                           
  5743 ;; *************** function _robo_init *****************
  5744 ;; Defined at:
  5745 ;;		line 9 in file "E:\Aldnoah.Zero\Assignment3\robot.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;		None               void
  5752 ;; Registers used:
  5753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5759 ;;      Params:         0       0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0
  5762 ;;      Totals:         0       0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    4
  5766 ;; This function calls:
  5767 ;;		_ser_putch
  5768 ;; This function is called by:
  5769 ;;		_init
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           psect	text1185
  5773                           	file	"E:\Aldnoah.Zero\Assignment3\robot.c"
  5774                           	line	9
  5775                           	global	__size_of_robo_init
  5776  000D                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  5777                           	
  5778  095B                     _robo_init:	
  5779                           	opt	stack 2
  5780                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5781                           	line	10
  5782                           	
  5783  095B                     l10647:	
  5784                           ;robot.c: 10: ser_putch(128);
  5785  095B  3080               	movlw	(080h)
  5786  095C  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5787                           	line	11
  5788                           ;robot.c: 11: ser_putch(132);
  5789  0961  3084               	movlw	(084h)
  5790  0962  120A  158A  21EF   	fcall	_ser_putch
              120A  158A         
  5791                           	line	12
  5792                           	
  5793  0967                     l6716:	
  5794  0967  0008               	return
  5795                           	opt stack 0
  5796                           GLOBAL	__end_of_robo_init
  5797  0968                     	__end_of_robo_init:
  5798 ;; =============== function _robo_init ends ============
  5799                           
  5800                           	signat	_robo_init,88
  5801                           	global	_lcd_write_data
  5802                           psect	text1186,local,class=CODE,delta=2
  5803                           global __ptext1186
  5804  0975                     __ptext1186:
  5805                           
  5806 ;; *************** function _lcd_write_data *****************
  5807 ;; Defined at:
  5808 ;;		line 30 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  databyte        1    wreg     unsigned char 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  databyte        1    2[BANK0 ] unsigned char 
  5813 ;; Return value:  Size  Location     Type
  5814 ;;		None               void
  5815 ;; Registers used:
  5816 ;;		wreg
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5822 ;;      Params:         0       0       0       0       0
  5823 ;;      Locals:         0       1       0       0       0
  5824 ;;      Temps:          0       2       0       0       0
  5825 ;;      Totals:         0       3       0       0       0
  5826 ;;Total ram usage:        3 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    3
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_lcd_write_string
  5833 ;;		_lcd_write_2_digit_bcd
  5834 ;;		_lcd_write_3_digit_bcd
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           psect	text1186
  5838                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5839                           	line	30
  5840                           	global	__size_of_lcd_write_data
  5841  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  5842                           	
  5843  0975                     _lcd_write_data:	
  5844                           	opt	stack 1
  5845                           ; Regs used in _lcd_write_data: [wreg]
  5846                           ;lcd_write_data@databyte stored from wreg
  5847  0975  1283               	bcf	status, 5	;RP0=0, select bank0
  5848  0976  1303               	bcf	status, 6	;RP1=0, select bank0
  5849  0977  00A2               	movwf	(lcd_write_data@databyte)
  5850                           	line	31
  5851                           	
  5852  0978                     l10639:	
  5853                           ;lcd.c: 31: RE2 = 0;
  5854  0978  1109               	bcf	(74/8),(74)&7
  5855                           	line	32
  5856                           ;lcd.c: 32: RE1 = 0;
  5857  0979  1089               	bcf	(73/8),(73)&7
  5858                           	line	33
  5859                           ;lcd.c: 33: RE0 = 1;
  5860  097A  1409               	bsf	(72/8),(72)&7
  5861                           	line	34
  5862                           	
  5863  097B                     l10641:	
  5864                           ;lcd.c: 34: PORTD = databyte;
  5865  097B  0822               	movf	(lcd_write_data@databyte),w
  5866  097C  0088               	movwf	(8)	;volatile
  5867                           	line	35
  5868                           	
  5869  097D                     l10643:	
  5870                           ;lcd.c: 35: RE2 = 1;
  5871  097D  1509               	bsf	(74/8),(74)&7
  5872                           	line	36
  5873                           	
  5874  097E                     l10645:	
  5875                           ;lcd.c: 36: RE2 = 0;
  5876  097E  1109               	bcf	(74/8),(74)&7
  5877                           	line	37
  5878                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  5879                           	opt asmopt_off
  5880  097F  3007               movlw	7
  5881  0980  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  5882  0981  307D               	movlw	125
  5883  0982  00A0               movwf	((??_lcd_write_data+0)+0),f
  5884  0983                     u5027:
  5885  0983  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  5886  0984  2983               	goto	u5027
  5887  0985  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  5888  0986  2983               	goto	u5027
  5889                           opt asmopt_on
  5890                           
  5891                           	line	38
  5892                           	
  5893  0987                     l1402:	
  5894  0987  0008               	return
  5895                           	opt stack 0
  5896                           GLOBAL	__end_of_lcd_write_data
  5897  0988                     	__end_of_lcd_write_data:
  5898 ;; =============== function _lcd_write_data ends ============
  5899                           
  5900                           	signat	_lcd_write_data,4216
  5901                           	global	_lcd_write_control
  5902                           psect	text1187,local,class=CODE,delta=2
  5903                           global __ptext1187
  5904  09AF                     __ptext1187:
  5905                           
  5906 ;; *************** function _lcd_write_control *****************
  5907 ;; Defined at:
  5908 ;;		line 18 in file "E:\Aldnoah.Zero\Assignment3\lcd.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  databyte        1    wreg     unsigned char 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  databyte        1    2[BANK0 ] unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;		None               void
  5915 ;; Registers used:
  5916 ;;		wreg
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5922 ;;      Params:         0       0       0       0       0
  5923 ;;      Locals:         0       1       0       0       0
  5924 ;;      Temps:          0       2       0       0       0
  5925 ;;      Totals:         0       3       0       0       0
  5926 ;;Total ram usage:        3 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    3
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_lcd_set_cursor
  5933 ;;		_lcd_init
  5934 ;;		_UpdateDisplay
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           psect	text1187
  5938                           	file	"E:\Aldnoah.Zero\Assignment3\lcd.c"
  5939                           	line	18
  5940                           	global	__size_of_lcd_write_control
  5941  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  5942                           	
  5943  09AF                     _lcd_write_control:	
  5944                           	opt	stack 1
  5945                           ; Regs used in _lcd_write_control: [wreg]
  5946                           ;lcd_write_control@databyte stored from wreg
  5947  09AF  1283               	bcf	status, 5	;RP0=0, select bank0
  5948  09B0  1303               	bcf	status, 6	;RP1=0, select bank0
  5949  09B1  00A2               	movwf	(lcd_write_control@databyte)
  5950                           	line	19
  5951                           	
  5952  09B2                     l10631:	
  5953                           ;lcd.c: 19: RE2 = 0;
  5954  09B2  1109               	bcf	(74/8),(74)&7
  5955                           	line	20
  5956                           ;lcd.c: 20: RE1 = 0;
  5957  09B3  1089               	bcf	(73/8),(73)&7
  5958                           	line	21
  5959                           ;lcd.c: 21: RE0 = 0;
  5960  09B4  1009               	bcf	(72/8),(72)&7
  5961                           	line	22
  5962                           	
  5963  09B5                     l10633:	
  5964                           ;lcd.c: 22: PORTD = databyte;
  5965  09B5  0822               	movf	(lcd_write_control@databyte),w
  5966  09B6  0088               	movwf	(8)	;volatile
  5967                           	line	23
  5968                           	
  5969  09B7                     l10635:	
  5970                           ;lcd.c: 23: RE2 = 1;
  5971  09B7  1509               	bsf	(74/8),(74)&7
  5972                           	line	24
  5973                           	
  5974  09B8                     l10637:	
  5975                           ;lcd.c: 24: RE2 = 0;
  5976  09B8  1109               	bcf	(74/8),(74)&7
  5977                           	line	25
  5978                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  5979                           	opt asmopt_off
  5980  09B9  300D               movlw	13
  5981  09BA  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  5982  09BB  30FB               	movlw	251
  5983  09BC  00A0               movwf	((??_lcd_write_control+0)+0),f
  5984  09BD                     u5037:
  5985  09BD  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  5986  09BE  29BD               	goto	u5037
  5987  09BF  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  5988  09C0  29BD               	goto	u5037
  5989  09C1  29C2               	nop2
  5990                           opt asmopt_on
  5991                           
  5992                           	line	26
  5993                           	
  5994  09C2                     l1399:	
  5995  09C2  0008               	return
  5996                           	opt stack 0
  5997                           GLOBAL	__end_of_lcd_write_control
  5998  09C3                     	__end_of_lcd_write_control:
  5999 ;; =============== function _lcd_write_control ends ============
  6000                           
  6001                           	signat	_lcd_write_control,4216
  6002                           	global	_init_adc
  6003                           psect	text1188,local,class=CODE,delta=2
  6004                           global __ptext1188
  6005  09C3                     __ptext1188:
  6006                           
  6007 ;; *************** function _init_adc *****************
  6008 ;; Defined at:
  6009 ;;		line 46 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;		None               void
  6016 ;; Registers used:
  6017 ;;		wreg, status,2
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6023 ;;      Params:         0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0
  6025 ;;      Temps:          0       1       0       0       0
  6026 ;;      Totals:         0       1       0       0       0
  6027 ;;Total ram usage:        1 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    3
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_init
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           psect	text1188
  6037                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6038                           	line	46
  6039                           	global	__size_of_init_adc
  6040  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  6041                           	
  6042  09C3                     _init_adc:	
  6043                           	opt	stack 3
  6044                           ; Regs used in _init_adc: [wreg+status,2]
  6045                           	line	48
  6046                           	
  6047  09C3                     l10621:	
  6048                           ;adc.c: 48: PORTA = 0;
  6049  09C3  1283               	bcf	status, 5	;RP0=0, select bank0
  6050  09C4  1303               	bcf	status, 6	;RP1=0, select bank0
  6051  09C5  0185               	clrf	(5)	;volatile
  6052                           	line	49
  6053                           	
  6054  09C6                     l10623:	
  6055                           ;adc.c: 49: TRISA = 0b00111111;
  6056  09C6  303F               	movlw	(03Fh)
  6057  09C7  1683               	bsf	status, 5	;RP0=1, select bank1
  6058  09C8  1303               	bcf	status, 6	;RP1=0, select bank1
  6059  09C9  0085               	movwf	(133)^080h	;volatile
  6060                           	line	52
  6061                           	
  6062  09CA                     l10625:	
  6063                           ;adc.c: 52: ADCON0 = 0b10100001;
  6064  09CA  30A1               	movlw	(0A1h)
  6065  09CB  1283               	bcf	status, 5	;RP0=0, select bank0
  6066  09CC  1303               	bcf	status, 6	;RP1=0, select bank0
  6067  09CD  009F               	movwf	(31)	;volatile
  6068                           	line	53
  6069                           	
  6070  09CE                     l10627:	
  6071                           ;adc.c: 53: ADCON1 = 0b0000010;
  6072  09CE  3002               	movlw	(02h)
  6073  09CF  1683               	bsf	status, 5	;RP0=1, select bank1
  6074  09D0  1303               	bcf	status, 6	;RP1=0, select bank1
  6075  09D1  009F               	movwf	(159)^080h	;volatile
  6076                           	line	55
  6077                           	
  6078  09D2                     l10629:	
  6079                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6080                           	opt asmopt_off
  6081  09D2  3053               movlw	83
  6082  09D3  1283               	bcf	status, 5	;RP0=0, select bank0
  6083  09D4  1303               	bcf	status, 6	;RP1=0, select bank0
  6084  09D5  00A0               movwf	(??_init_adc+0)+0,f
  6085  09D6                     u5047:
  6086  09D6  0BA0               decfsz	(??_init_adc+0)+0,f
  6087  09D7  29D6               	goto	u5047
  6088                           opt asmopt_on
  6089                           
  6090                           	line	57
  6091                           	
  6092  09D8                     l700:	
  6093  09D8  0008               	return
  6094                           	opt stack 0
  6095                           GLOBAL	__end_of_init_adc
  6096  09D9                     	__end_of_init_adc:
  6097 ;; =============== function _init_adc ends ============
  6098                           
  6099                           	signat	_init_adc,88
  6100                           	global	_adc_read_channel
  6101                           psect	text1189,local,class=CODE,delta=2
  6102                           global __ptext1189
  6103  0B78                     __ptext1189:
  6104                           
  6105 ;; *************** function _adc_read_channel *****************
  6106 ;; Defined at:
  6107 ;;		line 5 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  channel         1    wreg     unsigned char 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  channel         1    7[BANK0 ] unsigned char 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      unsigned char 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6121 ;;      Params:         0       0       0       0       0
  6122 ;;      Locals:         0       1       0       0       0
  6123 ;;      Temps:          0       1       0       0       0
  6124 ;;      Totals:         0       2       0       0       0
  6125 ;;Total ram usage:        2 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    4
  6128 ;; This function calls:
  6129 ;;		_adc_read
  6130 ;; This function is called by:
  6131 ;;		_readDistance
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           psect	text1189
  6135                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  6136                           	line	5
  6137                           	global	__size_of_adc_read_channel
  6138  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  6139                           	
  6140  0B78                     _adc_read_channel:	
  6141                           	opt	stack 0
  6142                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6143                           ;adc_read_channel@channel stored from wreg
  6144  0B78  1283               	bcf	status, 5	;RP0=0, select bank0
  6145  0B79  1303               	bcf	status, 6	;RP1=0, select bank0
  6146  0B7A  00A7               	movwf	(adc_read_channel@channel)
  6147                           	line	6
  6148                           	
  6149  0B7B                     l10605:	
  6150                           ;adc.c: 6: switch(channel)
  6151  0B7B  2B94               	goto	l10613
  6152                           	line	8
  6153                           ;adc.c: 7: {
  6154                           ;adc.c: 8: case 0:
  6155                           	
  6156  0B7C                     l690:	
  6157                           	line	9
  6158                           ;adc.c: 9: CHS0 = 0;
  6159  0B7C  119F               	bcf	(251/8),(251)&7
  6160                           	line	10
  6161                           ;adc.c: 10: CHS1 = 0;
  6162  0B7D  121F               	bcf	(252/8),(252)&7
  6163                           	line	11
  6164                           ;adc.c: 11: CHS2 = 0;
  6165  0B7E  129F               	bcf	(253/8),(253)&7
  6166                           	line	12
  6167                           ;adc.c: 12: break;
  6168  0B7F  2BA5               	goto	l10615
  6169                           	line	13
  6170                           ;adc.c: 13: case 1:
  6171                           	
  6172  0B80                     l692:	
  6173                           	line	14
  6174                           ;adc.c: 14: CHS0 = 1;
  6175  0B80  159F               	bsf	(251/8),(251)&7
  6176                           	line	15
  6177                           ;adc.c: 15: CHS1 = 0;
  6178  0B81  121F               	bcf	(252/8),(252)&7
  6179                           	line	16
  6180                           ;adc.c: 16: CHS2 = 0;
  6181  0B82  129F               	bcf	(253/8),(253)&7
  6182                           	line	17
  6183                           ;adc.c: 17: break;
  6184  0B83  2BA5               	goto	l10615
  6185                           	line	18
  6186                           ;adc.c: 18: case 2:
  6187                           	
  6188  0B84                     l693:	
  6189                           	line	19
  6190                           ;adc.c: 19: CHS0 = 0;
  6191  0B84  119F               	bcf	(251/8),(251)&7
  6192                           	line	20
  6193                           ;adc.c: 20: CHS1 = 1;
  6194  0B85  161F               	bsf	(252/8),(252)&7
  6195                           	line	21
  6196                           ;adc.c: 21: CHS2 = 0;
  6197  0B86  129F               	bcf	(253/8),(253)&7
  6198                           	line	22
  6199                           ;adc.c: 22: break;
  6200  0B87  2BA5               	goto	l10615
  6201                           	line	23
  6202                           ;adc.c: 23: case 3:
  6203                           	
  6204  0B88                     l694:	
  6205                           	line	24
  6206                           ;adc.c: 24: CHS0 = 1;
  6207  0B88  159F               	bsf	(251/8),(251)&7
  6208                           	line	25
  6209                           ;adc.c: 25: CHS1 = 1;
  6210  0B89  161F               	bsf	(252/8),(252)&7
  6211                           	line	26
  6212                           ;adc.c: 26: CHS2 = 0;
  6213  0B8A  129F               	bcf	(253/8),(253)&7
  6214                           	line	27
  6215                           ;adc.c: 27: break;
  6216  0B8B  2BA5               	goto	l10615
  6217                           	line	28
  6218                           ;adc.c: 28: case 4:
  6219                           	
  6220  0B8C                     l695:	
  6221                           	line	29
  6222                           ;adc.c: 29: CHS0 = 0;
  6223  0B8C  119F               	bcf	(251/8),(251)&7
  6224                           	line	30
  6225                           ;adc.c: 30: CHS1 = 0;
  6226  0B8D  121F               	bcf	(252/8),(252)&7
  6227                           	line	31
  6228                           ;adc.c: 31: CHS2 = 1;
  6229  0B8E  169F               	bsf	(253/8),(253)&7
  6230                           	line	32
  6231                           ;adc.c: 32: break;
  6232  0B8F  2BA5               	goto	l10615
  6233                           	line	35
  6234                           ;adc.c: 35: default:
  6235                           	
  6236  0B90                     l696:	
  6237                           	line	36
  6238                           	
  6239  0B90                     l10607:	
  6240                           ;adc.c: 36: return 0;
  6241  0B90  3000               	movlw	(0)
  6242  0B91  2BB2               	goto	l697
  6243                           	
  6244  0B92                     l10609:	
  6245  0B92  2BB2               	goto	l697
  6246                           	line	37
  6247                           	
  6248  0B93                     l10611:	
  6249                           ;adc.c: 37: }
  6250  0B93  2BA5               	goto	l10615
  6251                           	line	6
  6252                           	
  6253  0B94                     l689:	
  6254                           	
  6255  0B94                     l10613:	
  6256  0B94  0827               	movf	(adc_read_channel@channel),w
  6257                           	; Switch size 1, requested type "space"
  6258                           ; Number of cases is 5, Range of values is 0 to 4
  6259                           ; switch strategies available:
  6260                           ; Name         Instructions Cycles
  6261                           ; simple_byte           16     9 (average)
  6262                           ; direct_byte           23     8 (fixed)
  6263                           ; jumptable            260     6 (fixed)
  6264                           ; rangetable             9     6 (fixed)
  6265                           ; spacedrange           16     9 (fixed)
  6266                           ; locatedrange           5     3 (fixed)
  6267                           ;	Chosen strategy is simple_byte
  6268                           
  6269                           	opt asmopt_off
  6270  0B95  3A00               	xorlw	0^0	; case 0
  6271  0B96  1903               	skipnz
  6272  0B97  2B7C               	goto	l690
  6273  0B98  3A01               	xorlw	1^0	; case 1
  6274  0B99  1903               	skipnz
  6275  0B9A  2B80               	goto	l692
  6276  0B9B  3A03               	xorlw	2^1	; case 2
  6277  0B9C  1903               	skipnz
  6278  0B9D  2B84               	goto	l693
  6279  0B9E  3A01               	xorlw	3^2	; case 3
  6280  0B9F  1903               	skipnz
  6281  0BA0  2B88               	goto	l694
  6282  0BA1  3A07               	xorlw	4^3	; case 4
  6283  0BA2  1903               	skipnz
  6284  0BA3  2B8C               	goto	l695
  6285  0BA4  2B90               	goto	l10607
  6286                           	opt asmopt_on
  6287                           
  6288                           	line	37
  6289                           	
  6290  0BA5                     l691:	
  6291                           	line	39
  6292                           	
  6293  0BA5                     l10615:	
  6294                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  6295                           	opt asmopt_off
  6296  0BA5  3053               movlw	83
  6297  0BA6  00A6               movwf	(??_adc_read_channel+0)+0,f
  6298  0BA7                     u5057:
  6299  0BA7  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  6300  0BA8  2BA7               	goto	u5057
  6301                           opt asmopt_on
  6302                           
  6303                           	line	41
  6304                           	
  6305  0BA9                     l10617:	
  6306                           ;adc.c: 41: return adc_read();
  6307  0BA9  120A  158A  2210   	fcall	_adc_read
              120A  158A         
  6308  0BAE  1283               	bcf	status, 5	;RP0=0, select bank0
  6309  0BAF  1303               	bcf	status, 6	;RP1=0, select bank0
  6310  0BB0  0820               	movf	(0+(?_adc_read)),w
  6311  0BB1  2BB2               	goto	l697
  6312                           	
  6313  0BB2                     l10619:	
  6314                           	line	43
  6315                           	
  6316  0BB2                     l697:	
  6317  0BB2  0008               	return
  6318                           	opt stack 0
  6319                           GLOBAL	__end_of_adc_read_channel
  6320  0BB3                     	__end_of_adc_read_channel:
  6321 ;; =============== function _adc_read_channel ends ============
  6322                           
  6323                           	signat	_adc_read_channel,4217
  6324                           	global	___awmod
  6325                           psect	text1190,local,class=CODE,delta=2
  6326                           global __ptext1190
  6327  068E                     __ptext1190:
  6328                           
  6329 ;; *************** function ___awmod *****************
  6330 ;; Defined at:
  6331 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  divisor         2    0[BANK0 ] int 
  6334 ;;  dividend        2    2[BANK0 ] int 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  sign            1    6[BANK0 ] unsigned char 
  6337 ;;  counter         1    5[BANK0 ] unsigned char 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  2    0[BANK0 ] int 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6347 ;;      Params:         0       4       0       0       0
  6348 ;;      Locals:         0       2       0       0       0
  6349 ;;      Temps:          0       1       0       0       0
  6350 ;;      Totals:         0       7       0       0       0
  6351 ;;Total ram usage:        7 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    3
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_UpdateDisplay
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           psect	text1190
  6361                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6362                           	line	5
  6363                           	global	__size_of___awmod
  6364  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  6365                           	
  6366  068E                     ___awmod:	
  6367                           	opt	stack 2
  6368                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6369                           	line	8
  6370                           	
  6371  068E                     l10549:	
  6372  068E  1283               	bcf	status, 5	;RP0=0, select bank0
  6373  068F  1303               	bcf	status, 6	;RP1=0, select bank0
  6374  0690  01A6               	clrf	(___awmod@sign)
  6375                           	line	9
  6376  0691  1FA3               	btfss	(___awmod@dividend+1),7
  6377  0692  2E94               	goto	u4041
  6378  0693  2E95               	goto	u4040
  6379  0694                     u4041:
  6380  0694  2E9E               	goto	l10553
  6381  0695                     u4040:
  6382                           	line	10
  6383                           	
  6384  0695                     l10551:	
  6385  0695  09A2               	comf	(___awmod@dividend),f
  6386  0696  09A3               	comf	(___awmod@dividend+1),f
  6387  0697  0AA2               	incf	(___awmod@dividend),f
  6388  0698  1903               	skipnz
  6389  0699  0AA3               	incf	(___awmod@dividend+1),f
  6390                           	line	11
  6391  069A  01A6               	clrf	(___awmod@sign)
  6392  069B  1403               	bsf	status,0
  6393  069C  0DA6               	rlf	(___awmod@sign),f
  6394  069D  2E9E               	goto	l10553
  6395                           	line	12
  6396                           	
  6397  069E                     l7651:	
  6398                           	line	13
  6399                           	
  6400  069E                     l10553:	
  6401  069E  1FA1               	btfss	(___awmod@divisor+1),7
  6402  069F  2EA1               	goto	u4051
  6403  06A0  2EA2               	goto	u4050
  6404  06A1                     u4051:
  6405  06A1  2EA8               	goto	l10557
  6406  06A2                     u4050:
  6407                           	line	14
  6408                           	
  6409  06A2                     l10555:	
  6410  06A2  09A0               	comf	(___awmod@divisor),f
  6411  06A3  09A1               	comf	(___awmod@divisor+1),f
  6412  06A4  0AA0               	incf	(___awmod@divisor),f
  6413  06A5  1903               	skipnz
  6414  06A6  0AA1               	incf	(___awmod@divisor+1),f
  6415  06A7  2EA8               	goto	l10557
  6416                           	
  6417  06A8                     l7652:	
  6418                           	line	15
  6419                           	
  6420  06A8                     l10557:	
  6421  06A8  0821               	movf	(___awmod@divisor+1),w
  6422  06A9  0420               	iorwf	(___awmod@divisor),w
  6423  06AA  1903               	skipnz
  6424  06AB  2EAD               	goto	u4061
  6425  06AC  2EAE               	goto	u4060
  6426  06AD                     u4061:
  6427  06AD  2EE4               	goto	l10575
  6428  06AE                     u4060:
  6429                           	line	16
  6430                           	
  6431  06AE                     l10559:	
  6432  06AE  01A5               	clrf	(___awmod@counter)
  6433  06AF  1403               	bsf	status,0
  6434  06B0  0DA5               	rlf	(___awmod@counter),f
  6435                           	line	17
  6436  06B1  2EBE               	goto	l10565
  6437                           	
  6438  06B2                     l7655:	
  6439                           	line	18
  6440                           	
  6441  06B2                     l10561:	
  6442  06B2  3001               	movlw	01h
  6443                           	
  6444  06B3                     u4075:
  6445  06B3  1003               	clrc
  6446  06B4  0DA0               	rlf	(___awmod@divisor),f
  6447  06B5  0DA1               	rlf	(___awmod@divisor+1),f
  6448  06B6  3EFF               	addlw	-1
  6449  06B7  1D03               	skipz
  6450  06B8  2EB3               	goto	u4075
  6451                           	line	19
  6452                           	
  6453  06B9                     l10563:	
  6454  06B9  3001               	movlw	(01h)
  6455  06BA  00A4               	movwf	(??___awmod+0)+0
  6456  06BB  0824               	movf	(??___awmod+0)+0,w
  6457  06BC  07A5               	addwf	(___awmod@counter),f
  6458  06BD  2EBE               	goto	l10565
  6459                           	line	20
  6460                           	
  6461  06BE                     l7654:	
  6462                           	line	17
  6463                           	
  6464  06BE                     l10565:	
  6465  06BE  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  6466  06BF  2EC1               	goto	u4081
  6467  06C0  2EC2               	goto	u4080
  6468  06C1                     u4081:
  6469  06C1  2EB2               	goto	l10561
  6470  06C2                     u4080:
  6471  06C2  2EC4               	goto	l10567
  6472                           	
  6473  06C3                     l7656:	
  6474  06C3  2EC4               	goto	l10567
  6475                           	line	21
  6476                           	
  6477  06C4                     l7657:	
  6478                           	line	22
  6479                           	
  6480  06C4                     l10567:	
  6481  06C4  0821               	movf	(___awmod@divisor+1),w
  6482  06C5  0223               	subwf	(___awmod@dividend+1),w
  6483  06C6  1D03               	skipz
  6484  06C7  2ECA               	goto	u4095
  6485  06C8  0820               	movf	(___awmod@divisor),w
  6486  06C9  0222               	subwf	(___awmod@dividend),w
  6487  06CA                     u4095:
  6488  06CA  1C03               	skipc
  6489  06CB  2ECD               	goto	u4091
  6490  06CC  2ECE               	goto	u4090
  6491  06CD                     u4091:
  6492  06CD  2ED5               	goto	l10571
  6493  06CE                     u4090:
  6494                           	line	23
  6495                           	
  6496  06CE                     l10569:	
  6497  06CE  0820               	movf	(___awmod@divisor),w
  6498  06CF  02A2               	subwf	(___awmod@dividend),f
  6499  06D0  0821               	movf	(___awmod@divisor+1),w
  6500  06D1  1C03               	skipc
  6501  06D2  03A3               	decf	(___awmod@dividend+1),f
  6502  06D3  02A3               	subwf	(___awmod@dividend+1),f
  6503  06D4  2ED5               	goto	l10571
  6504                           	
  6505  06D5                     l7658:	
  6506                           	line	24
  6507                           	
  6508  06D5                     l10571:	
  6509  06D5  3001               	movlw	01h
  6510                           	
  6511  06D6                     u4105:
  6512  06D6  1003               	clrc
  6513  06D7  0CA1               	rrf	(___awmod@divisor+1),f
  6514  06D8  0CA0               	rrf	(___awmod@divisor),f
  6515  06D9  3EFF               	addlw	-1
  6516  06DA  1D03               	skipz
  6517  06DB  2ED6               	goto	u4105
  6518                           	line	25
  6519                           	
  6520  06DC                     l10573:	
  6521  06DC  3001               	movlw	low(01h)
  6522  06DD  02A5               	subwf	(___awmod@counter),f
  6523  06DE  1D03               	btfss	status,2
  6524  06DF  2EE1               	goto	u4111
  6525  06E0  2EE2               	goto	u4110
  6526  06E1                     u4111:
  6527  06E1  2EC4               	goto	l10567
  6528  06E2                     u4110:
  6529  06E2  2EE4               	goto	l10575
  6530                           	
  6531  06E3                     l7659:	
  6532  06E3  2EE4               	goto	l10575
  6533                           	line	26
  6534                           	
  6535  06E4                     l7653:	
  6536                           	line	27
  6537                           	
  6538  06E4                     l10575:	
  6539  06E4  0826               	movf	(___awmod@sign),w
  6540  06E5  1D03               	skipz
  6541  06E6  2EE8               	goto	u4120
  6542  06E7  2EEE               	goto	l10579
  6543  06E8                     u4120:
  6544                           	line	28
  6545                           	
  6546  06E8                     l10577:	
  6547  06E8  09A2               	comf	(___awmod@dividend),f
  6548  06E9  09A3               	comf	(___awmod@dividend+1),f
  6549  06EA  0AA2               	incf	(___awmod@dividend),f
  6550  06EB  1903               	skipnz
  6551  06EC  0AA3               	incf	(___awmod@dividend+1),f
  6552  06ED  2EEE               	goto	l10579
  6553                           	
  6554  06EE                     l7660:	
  6555                           	line	29
  6556                           	
  6557  06EE                     l10579:	
  6558  06EE  0823               	movf	(___awmod@dividend+1),w
  6559  06EF  01A1               	clrf	(?___awmod+1)
  6560  06F0  07A1               	addwf	(?___awmod+1)
  6561  06F1  0822               	movf	(___awmod@dividend),w
  6562  06F2  01A0               	clrf	(?___awmod)
  6563  06F3  07A0               	addwf	(?___awmod)
  6564                           
  6565  06F4  2EF5               	goto	l7661
  6566                           	
  6567  06F5                     l10581:	
  6568                           	line	30
  6569                           	
  6570  06F5                     l7661:	
  6571  06F5  0008               	return
  6572                           	opt stack 0
  6573                           GLOBAL	__end_of___awmod
  6574  06F6                     	__end_of___awmod:
  6575 ;; =============== function ___awmod ends ============
  6576                           
  6577                           	signat	___awmod,8314
  6578                           	global	___lwmod
  6579                           psect	text1191,local,class=CODE,delta=2
  6580                           global __ptext1191
  6581  0BF7                     __ptext1191:
  6582                           
  6583 ;; *************** function ___lwmod *****************
  6584 ;; Defined at:
  6585 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  divisor         2   14[BANK0 ] unsigned int 
  6588 ;;  dividend        2   16[BANK0 ] unsigned int 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  counter         1   19[BANK0 ] unsigned char 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  2   14[BANK0 ] unsigned int 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6600 ;;      Params:         0       4       0       0       0
  6601 ;;      Locals:         0       1       0       0       0
  6602 ;;      Temps:          0       1       0       0       0
  6603 ;;      Totals:         0       6       0       0       0
  6604 ;;Total ram usage:        6 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    3
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_sprintf
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           psect	text1191
  6614                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  6615                           	line	5
  6616                           	global	__size_of___lwmod
  6617  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6618                           	
  6619  0BF7                     ___lwmod:	
  6620                           	opt	stack 1
  6621                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6622                           	line	8
  6623                           	
  6624  0BF7                     l10527:	
  6625  0BF7  1283               	bcf	status, 5	;RP0=0, select bank0
  6626  0BF8  1303               	bcf	status, 6	;RP1=0, select bank0
  6627  0BF9  082F               	movf	(___lwmod@divisor+1),w
  6628  0BFA  042E               	iorwf	(___lwmod@divisor),w
  6629  0BFB  1903               	skipnz
  6630  0BFC  2BFE               	goto	u3981
  6631  0BFD  2BFF               	goto	u3980
  6632  0BFE                     u3981:
  6633  0BFE  2C35               	goto	l10545
  6634  0BFF                     u3980:
  6635                           	line	9
  6636                           	
  6637  0BFF                     l10529:	
  6638  0BFF  01B3               	clrf	(___lwmod@counter)
  6639  0C00  1403               	bsf	status,0
  6640  0C01  0DB3               	rlf	(___lwmod@counter),f
  6641                           	line	10
  6642  0C02  2C0F               	goto	l10535
  6643                           	
  6644  0C03                     l7461:	
  6645                           	line	11
  6646                           	
  6647  0C03                     l10531:	
  6648  0C03  3001               	movlw	01h
  6649                           	
  6650  0C04                     u3995:
  6651  0C04  1003               	clrc
  6652  0C05  0DAE               	rlf	(___lwmod@divisor),f
  6653  0C06  0DAF               	rlf	(___lwmod@divisor+1),f
  6654  0C07  3EFF               	addlw	-1
  6655  0C08  1D03               	skipz
  6656  0C09  2C04               	goto	u3995
  6657                           	line	12
  6658                           	
  6659  0C0A                     l10533:	
  6660  0C0A  3001               	movlw	(01h)
  6661  0C0B  00B2               	movwf	(??___lwmod+0)+0
  6662  0C0C  0832               	movf	(??___lwmod+0)+0,w
  6663  0C0D  07B3               	addwf	(___lwmod@counter),f
  6664  0C0E  2C0F               	goto	l10535
  6665                           	line	13
  6666                           	
  6667  0C0F                     l7460:	
  6668                           	line	10
  6669                           	
  6670  0C0F                     l10535:	
  6671  0C0F  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  6672  0C10  2C12               	goto	u4001
  6673  0C11  2C13               	goto	u4000
  6674  0C12                     u4001:
  6675  0C12  2C03               	goto	l10531
  6676  0C13                     u4000:
  6677  0C13  2C15               	goto	l10537
  6678                           	
  6679  0C14                     l7462:	
  6680  0C14  2C15               	goto	l10537
  6681                           	line	14
  6682                           	
  6683  0C15                     l7463:	
  6684                           	line	15
  6685                           	
  6686  0C15                     l10537:	
  6687  0C15  082F               	movf	(___lwmod@divisor+1),w
  6688  0C16  0231               	subwf	(___lwmod@dividend+1),w
  6689  0C17  1D03               	skipz
  6690  0C18  2C1B               	goto	u4015
  6691  0C19  082E               	movf	(___lwmod@divisor),w
  6692  0C1A  0230               	subwf	(___lwmod@dividend),w
  6693  0C1B                     u4015:
  6694  0C1B  1C03               	skipc
  6695  0C1C  2C1E               	goto	u4011
  6696  0C1D  2C1F               	goto	u4010
  6697  0C1E                     u4011:
  6698  0C1E  2C26               	goto	l10541
  6699  0C1F                     u4010:
  6700                           	line	16
  6701                           	
  6702  0C1F                     l10539:	
  6703  0C1F  082E               	movf	(___lwmod@divisor),w
  6704  0C20  02B0               	subwf	(___lwmod@dividend),f
  6705  0C21  082F               	movf	(___lwmod@divisor+1),w
  6706  0C22  1C03               	skipc
  6707  0C23  03B1               	decf	(___lwmod@dividend+1),f
  6708  0C24  02B1               	subwf	(___lwmod@dividend+1),f
  6709  0C25  2C26               	goto	l10541
  6710                           	
  6711  0C26                     l7464:	
  6712                           	line	17
  6713                           	
  6714  0C26                     l10541:	
  6715  0C26  3001               	movlw	01h
  6716                           	
  6717  0C27                     u4025:
  6718  0C27  1003               	clrc
  6719  0C28  0CAF               	rrf	(___lwmod@divisor+1),f
  6720  0C29  0CAE               	rrf	(___lwmod@divisor),f
  6721  0C2A  3EFF               	addlw	-1
  6722  0C2B  1D03               	skipz
  6723  0C2C  2C27               	goto	u4025
  6724                           	line	18
  6725                           	
  6726  0C2D                     l10543:	
  6727  0C2D  3001               	movlw	low(01h)
  6728  0C2E  02B3               	subwf	(___lwmod@counter),f
  6729  0C2F  1D03               	btfss	status,2
  6730  0C30  2C32               	goto	u4031
  6731  0C31  2C33               	goto	u4030
  6732  0C32                     u4031:
  6733  0C32  2C15               	goto	l10537
  6734  0C33                     u4030:
  6735  0C33  2C35               	goto	l10545
  6736                           	
  6737  0C34                     l7465:	
  6738  0C34  2C35               	goto	l10545
  6739                           	line	19
  6740                           	
  6741  0C35                     l7459:	
  6742                           	line	20
  6743                           	
  6744  0C35                     l10545:	
  6745  0C35  0831               	movf	(___lwmod@dividend+1),w
  6746  0C36  01AF               	clrf	(?___lwmod+1)
  6747  0C37  07AF               	addwf	(?___lwmod+1)
  6748  0C38  0830               	movf	(___lwmod@dividend),w
  6749  0C39  01AE               	clrf	(?___lwmod)
  6750  0C3A  07AE               	addwf	(?___lwmod)
  6751                           
  6752  0C3B  2C3C               	goto	l7466
  6753                           	
  6754  0C3C                     l10547:	
  6755                           	line	21
  6756                           	
  6757  0C3C                     l7466:	
  6758  0C3C  0008               	return
  6759                           	opt stack 0
  6760                           GLOBAL	__end_of___lwmod
  6761  0C3D                     	__end_of___lwmod:
  6762 ;; =============== function ___lwmod ends ============
  6763                           
  6764                           	signat	___lwmod,8314
  6765                           	global	___lwdiv
  6766                           psect	text1192,local,class=CODE,delta=2
  6767                           global __ptext1192
  6768  0CCD                     __ptext1192:
  6769                           
  6770 ;; *************** function ___lwdiv *****************
  6771 ;; Defined at:
  6772 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  divisor         2    6[BANK0 ] unsigned int 
  6775 ;;  dividend        2    8[BANK0 ] unsigned int 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  quotient        2   11[BANK0 ] unsigned int 
  6778 ;;  counter         1   13[BANK0 ] unsigned char 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  2    6[BANK0 ] unsigned int 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6788 ;;      Params:         0       4       0       0       0
  6789 ;;      Locals:         0       3       0       0       0
  6790 ;;      Temps:          0       1       0       0       0
  6791 ;;      Totals:         0       8       0       0       0
  6792 ;;Total ram usage:        8 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    3
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_readAvgDistance
  6799 ;;		_ADCconvert
  6800 ;;		_sprintf
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           psect	text1192
  6804                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  6805                           	line	5
  6806                           	global	__size_of___lwdiv
  6807  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6808                           	
  6809  0CCD                     ___lwdiv:	
  6810                           	opt	stack 1
  6811                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6812                           	line	9
  6813                           	
  6814  0CCD                     l10501:	
  6815  0CCD  1283               	bcf	status, 5	;RP0=0, select bank0
  6816  0CCE  1303               	bcf	status, 6	;RP1=0, select bank0
  6817  0CCF  01AB               	clrf	(___lwdiv@quotient)
  6818  0CD0  01AC               	clrf	(___lwdiv@quotient+1)
  6819                           	line	10
  6820                           	
  6821  0CD1                     l10503:	
  6822  0CD1  0827               	movf	(___lwdiv@divisor+1),w
  6823  0CD2  0426               	iorwf	(___lwdiv@divisor),w
  6824  0CD3  1903               	skipnz
  6825  0CD4  2CD6               	goto	u3911
  6826  0CD5  2CD7               	goto	u3910
  6827  0CD6                     u3911:
  6828  0CD6  2D15               	goto	l10523
  6829  0CD7                     u3910:
  6830                           	line	11
  6831                           	
  6832  0CD7                     l10505:	
  6833  0CD7  01AD               	clrf	(___lwdiv@counter)
  6834  0CD8  1403               	bsf	status,0
  6835  0CD9  0DAD               	rlf	(___lwdiv@counter),f
  6836                           	line	12
  6837  0CDA  2CE7               	goto	l10511
  6838                           	
  6839  0CDB                     l7451:	
  6840                           	line	13
  6841                           	
  6842  0CDB                     l10507:	
  6843  0CDB  3001               	movlw	01h
  6844                           	
  6845  0CDC                     u3925:
  6846  0CDC  1003               	clrc
  6847  0CDD  0DA6               	rlf	(___lwdiv@divisor),f
  6848  0CDE  0DA7               	rlf	(___lwdiv@divisor+1),f
  6849  0CDF  3EFF               	addlw	-1
  6850  0CE0  1D03               	skipz
  6851  0CE1  2CDC               	goto	u3925
  6852                           	line	14
  6853                           	
  6854  0CE2                     l10509:	
  6855  0CE2  3001               	movlw	(01h)
  6856  0CE3  00AA               	movwf	(??___lwdiv+0)+0
  6857  0CE4  082A               	movf	(??___lwdiv+0)+0,w
  6858  0CE5  07AD               	addwf	(___lwdiv@counter),f
  6859  0CE6  2CE7               	goto	l10511
  6860                           	line	15
  6861                           	
  6862  0CE7                     l7450:	
  6863                           	line	12
  6864                           	
  6865  0CE7                     l10511:	
  6866  0CE7  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  6867  0CE8  2CEA               	goto	u3931
  6868  0CE9  2CEB               	goto	u3930
  6869  0CEA                     u3931:
  6870  0CEA  2CDB               	goto	l10507
  6871  0CEB                     u3930:
  6872  0CEB  2CED               	goto	l10513
  6873                           	
  6874  0CEC                     l7452:	
  6875  0CEC  2CED               	goto	l10513
  6876                           	line	16
  6877                           	
  6878  0CED                     l7453:	
  6879                           	line	17
  6880                           	
  6881  0CED                     l10513:	
  6882  0CED  3001               	movlw	01h
  6883                           	
  6884  0CEE                     u3945:
  6885  0CEE  1003               	clrc
  6886  0CEF  0DAB               	rlf	(___lwdiv@quotient),f
  6887  0CF0  0DAC               	rlf	(___lwdiv@quotient+1),f
  6888  0CF1  3EFF               	addlw	-1
  6889  0CF2  1D03               	skipz
  6890  0CF3  2CEE               	goto	u3945
  6891                           	line	18
  6892  0CF4  0827               	movf	(___lwdiv@divisor+1),w
  6893  0CF5  0229               	subwf	(___lwdiv@dividend+1),w
  6894  0CF6  1D03               	skipz
  6895  0CF7  2CFA               	goto	u3955
  6896  0CF8  0826               	movf	(___lwdiv@divisor),w
  6897  0CF9  0228               	subwf	(___lwdiv@dividend),w
  6898  0CFA                     u3955:
  6899  0CFA  1C03               	skipc
  6900  0CFB  2CFD               	goto	u3951
  6901  0CFC  2CFE               	goto	u3950
  6902  0CFD                     u3951:
  6903  0CFD  2D06               	goto	l10519
  6904  0CFE                     u3950:
  6905                           	line	19
  6906                           	
  6907  0CFE                     l10515:	
  6908  0CFE  0826               	movf	(___lwdiv@divisor),w
  6909  0CFF  02A8               	subwf	(___lwdiv@dividend),f
  6910  0D00  0827               	movf	(___lwdiv@divisor+1),w
  6911  0D01  1C03               	skipc
  6912  0D02  03A9               	decf	(___lwdiv@dividend+1),f
  6913  0D03  02A9               	subwf	(___lwdiv@dividend+1),f
  6914                           	line	20
  6915                           	
  6916  0D04                     l10517:	
  6917  0D04  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  6918  0D05  2D06               	goto	l10519
  6919                           	line	21
  6920                           	
  6921  0D06                     l7454:	
  6922                           	line	22
  6923                           	
  6924  0D06                     l10519:	
  6925  0D06  3001               	movlw	01h
  6926                           	
  6927  0D07                     u3965:
  6928  0D07  1003               	clrc
  6929  0D08  0CA7               	rrf	(___lwdiv@divisor+1),f
  6930  0D09  0CA6               	rrf	(___lwdiv@divisor),f
  6931  0D0A  3EFF               	addlw	-1
  6932  0D0B  1D03               	skipz
  6933  0D0C  2D07               	goto	u3965
  6934                           	line	23
  6935                           	
  6936  0D0D                     l10521:	
  6937  0D0D  3001               	movlw	low(01h)
  6938  0D0E  02AD               	subwf	(___lwdiv@counter),f
  6939  0D0F  1D03               	btfss	status,2
  6940  0D10  2D12               	goto	u3971
  6941  0D11  2D13               	goto	u3970
  6942  0D12                     u3971:
  6943  0D12  2CED               	goto	l10513
  6944  0D13                     u3970:
  6945  0D13  2D15               	goto	l10523
  6946                           	
  6947  0D14                     l7455:	
  6948  0D14  2D15               	goto	l10523
  6949                           	line	24
  6950                           	
  6951  0D15                     l7449:	
  6952                           	line	25
  6953                           	
  6954  0D15                     l10523:	
  6955  0D15  082C               	movf	(___lwdiv@quotient+1),w
  6956  0D16  01A7               	clrf	(?___lwdiv+1)
  6957  0D17  07A7               	addwf	(?___lwdiv+1)
  6958  0D18  082B               	movf	(___lwdiv@quotient),w
  6959  0D19  01A6               	clrf	(?___lwdiv)
  6960  0D1A  07A6               	addwf	(?___lwdiv)
  6961                           
  6962  0D1B  2D1C               	goto	l7456
  6963                           	
  6964  0D1C                     l10525:	
  6965                           	line	26
  6966                           	
  6967  0D1C                     l7456:	
  6968  0D1C  0008               	return
  6969                           	opt stack 0
  6970                           GLOBAL	__end_of___lwdiv
  6971  0D1D                     	__end_of___lwdiv:
  6972 ;; =============== function ___lwdiv ends ============
  6973                           
  6974                           	signat	___lwdiv,8314
  6975                           	global	___wmul
  6976                           psect	text1193,local,class=CODE,delta=2
  6977                           global __ptext1193
  6978  0A64                     __ptext1193:
  6979                           
  6980 ;; *************** function ___wmul *****************
  6981 ;; Defined at:
  6982 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6985 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;  product         2    4[BANK0 ] unsigned int 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  2    0[BANK0 ] unsigned int 
  6990 ;; Registers used:
  6991 ;;		wreg, status,2, status,0
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6997 ;;      Params:         0       4       0       0       0
  6998 ;;      Locals:         0       2       0       0       0
  6999 ;;      Temps:          0       0       0       0       0
  7000 ;;      Totals:         0       6       0       0       0
  7001 ;;Total ram usage:        6 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:    3
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_ADCconvert
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           psect	text1193
  7011                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\wmul.c"
  7012                           	line	3
  7013                           	global	__size_of___wmul
  7014  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7015                           	
  7016  0A64                     ___wmul:	
  7017                           	opt	stack 1
  7018                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7019                           	line	4
  7020                           	
  7021  0A64                     l10489:	
  7022  0A64  1283               	bcf	status, 5	;RP0=0, select bank0
  7023  0A65  1303               	bcf	status, 6	;RP1=0, select bank0
  7024  0A66  01A4               	clrf	(___wmul@product)
  7025  0A67  01A5               	clrf	(___wmul@product+1)
  7026  0A68  2A69               	goto	l10491
  7027                           	line	6
  7028                           	
  7029  0A69                     l7443:	
  7030                           	line	7
  7031                           	
  7032  0A69                     l10491:	
  7033  0A69  1C20               	btfss	(___wmul@multiplier),(0)&7
  7034  0A6A  2A6C               	goto	u3871
  7035  0A6B  2A6D               	goto	u3870
  7036  0A6C                     u3871:
  7037  0A6C  2A73               	goto	l7444
  7038  0A6D                     u3870:
  7039                           	line	8
  7040                           	
  7041  0A6D                     l10493:	
  7042  0A6D  0822               	movf	(___wmul@multiplicand),w
  7043  0A6E  07A4               	addwf	(___wmul@product),f
  7044  0A6F  1803               	skipnc
  7045  0A70  0AA5               	incf	(___wmul@product+1),f
  7046  0A71  0823               	movf	(___wmul@multiplicand+1),w
  7047  0A72  07A5               	addwf	(___wmul@product+1),f
  7048                           	
  7049  0A73                     l7444:	
  7050                           	line	9
  7051  0A73  3001               	movlw	01h
  7052                           	
  7053  0A74                     u3885:
  7054  0A74  1003               	clrc
  7055  0A75  0DA2               	rlf	(___wmul@multiplicand),f
  7056  0A76  0DA3               	rlf	(___wmul@multiplicand+1),f
  7057  0A77  3EFF               	addlw	-1
  7058  0A78  1D03               	skipz
  7059  0A79  2A74               	goto	u3885
  7060                           	line	10
  7061                           	
  7062  0A7A                     l10495:	
  7063  0A7A  3001               	movlw	01h
  7064                           	
  7065  0A7B                     u3895:
  7066  0A7B  1003               	clrc
  7067  0A7C  0CA1               	rrf	(___wmul@multiplier+1),f
  7068  0A7D  0CA0               	rrf	(___wmul@multiplier),f
  7069  0A7E  3EFF               	addlw	-1
  7070  0A7F  1D03               	skipz
  7071  0A80  2A7B               	goto	u3895
  7072                           	line	11
  7073  0A81  0821               	movf	((___wmul@multiplier+1)),w
  7074  0A82  0420               	iorwf	((___wmul@multiplier)),w
  7075  0A83  1D03               	skipz
  7076  0A84  2A86               	goto	u3901
  7077  0A85  2A87               	goto	u3900
  7078  0A86                     u3901:
  7079  0A86  2A69               	goto	l10491
  7080  0A87                     u3900:
  7081  0A87  2A88               	goto	l10497
  7082                           	
  7083  0A88                     l7445:	
  7084                           	line	12
  7085                           	
  7086  0A88                     l10497:	
  7087  0A88  0825               	movf	(___wmul@product+1),w
  7088  0A89  01A1               	clrf	(?___wmul+1)
  7089  0A8A  07A1               	addwf	(?___wmul+1)
  7090  0A8B  0824               	movf	(___wmul@product),w
  7091  0A8C  01A0               	clrf	(?___wmul)
  7092  0A8D  07A0               	addwf	(?___wmul)
  7093                           
  7094  0A8E  2A8F               	goto	l7446
  7095                           	
  7096  0A8F                     l10499:	
  7097                           	line	13
  7098                           	
  7099  0A8F                     l7446:	
  7100  0A8F  0008               	return
  7101                           	opt stack 0
  7102                           GLOBAL	__end_of___wmul
  7103  0A90                     	__end_of___wmul:
  7104 ;; =============== function ___wmul ends ============
  7105                           
  7106                           	signat	___wmul,8314
  7107                           	global	_spi_transfer
  7108                           psect	text1194,local,class=CODE,delta=2
  7109                           global __ptext1194
  7110  099B                     __ptext1194:
  7111                           
  7112 ;; *************** function _spi_transfer *****************
  7113 ;; Defined at:
  7114 ;;		line 34 in file "E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  data            1    wreg     unsigned char 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  data            1    2[BANK0 ] unsigned char 
  7119 ;;  temp            1    1[BANK0 ] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      unsigned char 
  7122 ;; Registers used:
  7123 ;;		wreg
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7129 ;;      Params:         0       0       0       0       0
  7130 ;;      Locals:         0       2       0       0       0
  7131 ;;      Temps:          0       1       0       0       0
  7132 ;;      Totals:         0       3       0       0       0
  7133 ;;Total ram usage:        3 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:    3
  7136 ;; This function calls:
  7137 ;;		Nothing
  7138 ;; This function is called by:
  7139 ;;		_rotate
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           psect	text1194
  7143                           	file	"E:\Aldnoah.Zero\Assignment3\steppermotor.c"
  7144                           	line	34
  7145                           	global	__size_of_spi_transfer
  7146  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
  7147                           	
  7148  099B                     _spi_transfer:	
  7149                           	opt	stack 3
  7150                           ; Regs used in _spi_transfer: [wreg]
  7151                           ;spi_transfer@data stored from wreg
  7152  099B  1283               	bcf	status, 5	;RP0=0, select bank0
  7153  099C  1303               	bcf	status, 6	;RP1=0, select bank0
  7154  099D  00A2               	movwf	(spi_transfer@data)
  7155                           	line	35
  7156                           	
  7157  099E                     l10309:	
  7158                           ;steppermotor.c: 35: unsigned char temp = 0;
  7159  099E  01A1               	clrf	(spi_transfer@temp)
  7160                           	line	37
  7161                           ;steppermotor.c: 37: SSPIF = 0;
  7162  099F  118C               	bcf	(99/8),(99)&7
  7163                           	line	38
  7164                           	
  7165  09A0                     l10311:	
  7166                           ;steppermotor.c: 38: SSPBUF = data;
  7167  09A0  0822               	movf	(spi_transfer@data),w
  7168  09A1  0093               	movwf	(19)	;volatile
  7169                           	line	40
  7170                           ;steppermotor.c: 40: while (SSPIF == 0);
  7171  09A2  29A3               	goto	l3688
  7172                           	
  7173  09A3                     l3689:	
  7174                           	
  7175  09A3                     l3688:	
  7176  09A3  1D8C               	btfss	(99/8),(99)&7
  7177  09A4  29A6               	goto	u3591
  7178  09A5  29A7               	goto	u3590
  7179  09A6                     u3591:
  7180  09A6  29A3               	goto	l3688
  7181  09A7                     u3590:
  7182  09A7  29A8               	goto	l10313
  7183                           	
  7184  09A8                     l3690:	
  7185                           	line	41
  7186                           	
  7187  09A8                     l10313:	
  7188                           ;steppermotor.c: 41: temp = SSPBUF;
  7189  09A8  0813               	movf	(19),w	;volatile
  7190  09A9  00A0               	movwf	(??_spi_transfer+0)+0
  7191  09AA  0820               	movf	(??_spi_transfer+0)+0,w
  7192  09AB  00A1               	movwf	(spi_transfer@temp)
  7193                           	line	42
  7194                           	
  7195  09AC                     l10315:	
  7196                           ;steppermotor.c: 42: SSPIF = 0;
  7197  09AC  118C               	bcf	(99/8),(99)&7
  7198  09AD  29AE               	goto	l3691
  7199                           	line	44
  7200                           	
  7201  09AE                     l10317:	
  7202                           	line	45
  7203                           ;steppermotor.c: 44: return temp;
  7204                           ;	Return value of _spi_transfer is never used
  7205                           	
  7206  09AE                     l3691:	
  7207  09AE  0008               	return
  7208                           	opt stack 0
  7209                           GLOBAL	__end_of_spi_transfer
  7210  09AF                     	__end_of_spi_transfer:
  7211 ;; =============== function _spi_transfer ends ============
  7212                           
  7213                           	signat	_spi_transfer,4217
  7214                           	global	_Menu
  7215                           psect	text1195,local,class=CODE,delta=2
  7216                           global __ptext1195
  7217  0C3D                     __ptext1195:
  7218                           
  7219 ;; *************** function _Menu *****************
  7220 ;; Defined at:
  7221 ;;		line 180 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  input           1    wreg     unsigned char 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  input           1    0[BANK0 ] unsigned char 
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      unsigned char 
  7228 ;; Registers used:
  7229 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7235 ;;      Params:         0       0       0       0       0
  7236 ;;      Locals:         0       1       0       0       0
  7237 ;;      Temps:          0       0       0       0       0
  7238 ;;      Totals:         0       1       0       0       0
  7239 ;;Total ram usage:        1 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; Hardware stack levels required when called:    3
  7242 ;; This function calls:
  7243 ;;		Nothing
  7244 ;; This function is called by:
  7245 ;;		_main
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           psect	text1195
  7249                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  7250                           	line	180
  7251                           	global	__size_of_Menu
  7252  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
  7253                           	
  7254  0C3D                     _Menu:	
  7255                           	opt	stack 4
  7256                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
  7257                           ;Menu@input stored from wreg
  7258  0C3D  1283               	bcf	status, 5	;RP0=0, select bank0
  7259  0C3E  1303               	bcf	status, 6	;RP1=0, select bank0
  7260  0C3F  00A0               	movwf	(Menu@input)
  7261                           	line	181
  7262                           	
  7263  0C40                     l10285:	
  7264                           ;HMI.c: 181: switch (input)
  7265  0C40  2C6F               	goto	l10303
  7266                           	line	183
  7267                           ;HMI.c: 182: {
  7268                           ;HMI.c: 183: case 1:
  7269                           	
  7270  0C41                     l5248:	
  7271                           	line	185
  7272                           ;HMI.c: 185: break;
  7273  0C41  2C81               	goto	l10305
  7274                           	line	186
  7275                           ;HMI.c: 186: case 2:
  7276                           	
  7277  0C42                     l5250:	
  7278                           	line	188
  7279                           ;HMI.c: 188: break;
  7280  0C42  2C81               	goto	l10305
  7281                           	line	189
  7282                           ;HMI.c: 189: case 3:
  7283                           	
  7284  0C43                     l5251:	
  7285                           	line	190
  7286                           	
  7287  0C43                     l10287:	
  7288                           ;HMI.c: 190: pos--;
  7289  0C43  30FF               	movlw	low(-1)
  7290  0C44  1683               	bsf	status, 5	;RP0=1, select bank1
  7291  0C45  1303               	bcf	status, 6	;RP1=0, select bank1
  7292  0C46  07C8               	addwf	(_pos)^080h,f
  7293  0C47  1803               	skipnc
  7294  0C48  0AC9               	incf	(_pos+1)^080h,f
  7295  0C49  30FF               	movlw	high(-1)
  7296  0C4A  07C9               	addwf	(_pos+1)^080h,f
  7297                           	line	191
  7298                           	
  7299  0C4B                     l10289:	
  7300                           ;HMI.c: 191: if (pos < 0)
  7301  0C4B  1FC9               	btfss	(_pos+1)^080h,7
  7302  0C4C  2C4E               	goto	u3571
  7303  0C4D  2C4F               	goto	u3570
  7304  0C4E                     u3571:
  7305  0C4E  2C81               	goto	l10305
  7306  0C4F                     u3570:
  7307                           	line	192
  7308                           	
  7309  0C4F                     l10291:	
  7310                           ;HMI.c: 192: pos = 6 - 1;
  7311  0C4F  3005               	movlw	low(05h)
  7312  0C50  00C8               	movwf	(_pos)^080h
  7313  0C51  3000               	movlw	high(05h)
  7314  0C52  00C9               	movwf	((_pos)^080h)+1
  7315  0C53  2C81               	goto	l10305
  7316                           	
  7317  0C54                     l5252:	
  7318                           	line	194
  7319                           ;HMI.c: 194: break;
  7320  0C54  2C81               	goto	l10305
  7321                           	line	195
  7322                           ;HMI.c: 195: case 4:
  7323                           	
  7324  0C55                     l5253:	
  7325                           	line	196
  7326                           	
  7327  0C55                     l10293:	
  7328                           ;HMI.c: 196: pos++;
  7329  0C55  3001               	movlw	low(01h)
  7330  0C56  1683               	bsf	status, 5	;RP0=1, select bank1
  7331  0C57  1303               	bcf	status, 6	;RP1=0, select bank1
  7332  0C58  07C8               	addwf	(_pos)^080h,f
  7333  0C59  1803               	skipnc
  7334  0C5A  0AC9               	incf	(_pos+1)^080h,f
  7335  0C5B  3000               	movlw	high(01h)
  7336  0C5C  07C9               	addwf	(_pos+1)^080h,f
  7337                           	line	197
  7338                           ;HMI.c: 197: if (pos == 6)
  7339  0C5D  3006               	movlw	06h
  7340  0C5E  0648               	xorwf	(_pos)^080h,w
  7341  0C5F  0449               	iorwf	(_pos+1)^080h,w
  7342  0C60  1D03               	skipz
  7343  0C61  2C63               	goto	u3581
  7344  0C62  2C64               	goto	u3580
  7345  0C63                     u3581:
  7346  0C63  2C81               	goto	l10305
  7347  0C64                     u3580:
  7348                           	line	198
  7349                           	
  7350  0C64                     l10295:	
  7351                           ;HMI.c: 198: pos = 0;
  7352  0C64  01C8               	clrf	(_pos)^080h
  7353  0C65  01C9               	clrf	(_pos+1)^080h
  7354  0C66  2C81               	goto	l10305
  7355                           	
  7356  0C67                     l5254:	
  7357                           	line	200
  7358                           ;HMI.c: 200: break;
  7359  0C67  2C81               	goto	l10305
  7360                           	line	201
  7361                           ;HMI.c: 201: case 5:
  7362                           	
  7363  0C68                     l5255:	
  7364                           	line	202
  7365                           	
  7366  0C68                     l10297:	
  7367                           ;HMI.c: 202: return pos;
  7368  0C68  1683               	bsf	status, 5	;RP0=1, select bank1
  7369  0C69  1303               	bcf	status, 6	;RP1=0, select bank1
  7370  0C6A  0848               	movf	(_pos)^080h,w
  7371  0C6B  2C83               	goto	l5256
  7372                           	
  7373  0C6C                     l10299:	
  7374  0C6C  2C83               	goto	l5256
  7375                           	line	205
  7376                           ;HMI.c: 205: default:
  7377                           	
  7378  0C6D                     l5257:	
  7379                           	line	207
  7380                           ;HMI.c: 207: break;
  7381  0C6D  2C81               	goto	l10305
  7382                           	line	208
  7383                           	
  7384  0C6E                     l10301:	
  7385                           ;HMI.c: 208: }
  7386  0C6E  2C81               	goto	l10305
  7387                           	line	181
  7388                           	
  7389  0C6F                     l5247:	
  7390                           	
  7391  0C6F                     l10303:	
  7392  0C6F  1283               	bcf	status, 5	;RP0=0, select bank0
  7393  0C70  0820               	movf	(Menu@input),w
  7394                           	; Switch size 1, requested type "space"
  7395                           ; Number of cases is 5, Range of values is 1 to 5
  7396                           ; switch strategies available:
  7397                           ; Name         Instructions Cycles
  7398                           ; simple_byte           16     9 (average)
  7399                           ; direct_byte           26    11 (fixed)
  7400                           ; jumptable            263     9 (fixed)
  7401                           ;	Chosen strategy is simple_byte
  7402                           
  7403                           	opt asmopt_off
  7404  0C71  3A01               	xorlw	1^0	; case 1
  7405  0C72  1903               	skipnz
  7406  0C73  2C81               	goto	l10305
  7407  0C74  3A03               	xorlw	2^1	; case 2
  7408  0C75  1903               	skipnz
  7409  0C76  2C81               	goto	l10305
  7410  0C77  3A01               	xorlw	3^2	; case 3
  7411  0C78  1903               	skipnz
  7412  0C79  2C43               	goto	l10287
  7413  0C7A  3A07               	xorlw	4^3	; case 4
  7414  0C7B  1903               	skipnz
  7415  0C7C  2C55               	goto	l10293
  7416  0C7D  3A01               	xorlw	5^4	; case 5
  7417  0C7E  1903               	skipnz
  7418  0C7F  2C68               	goto	l10297
  7419  0C80  2C81               	goto	l10305
  7420                           	opt asmopt_on
  7421                           
  7422                           	line	208
  7423                           	
  7424  0C81                     l5249:	
  7425                           	line	209
  7426                           	
  7427  0C81                     l10305:	
  7428                           ;HMI.c: 209: return 255;
  7429  0C81  30FF               	movlw	(0FFh)
  7430  0C82  2C83               	goto	l5256
  7431                           	
  7432  0C83                     l10307:	
  7433                           	line	210
  7434                           	
  7435  0C83                     l5256:	
  7436  0C83  0008               	return
  7437                           	opt stack 0
  7438                           GLOBAL	__end_of_Menu
  7439  0C84                     	__end_of_Menu:
  7440 ;; =============== function _Menu ends ============
  7441                           
  7442                           	signat	_Menu,4217
  7443                           	global	_ser_putch
  7444                           psect	text1196,local,class=CODE,delta=2
  7445                           global __ptext1196
  7446  09EF                     __ptext1196:
  7447                           
  7448 ;; *************** function _ser_putch *****************
  7449 ;; Defined at:
  7450 ;;		line 71 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  c               1    wreg     unsigned char 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  c               1    1[BANK0 ] unsigned char 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;		None               void
  7457 ;; Registers used:
  7458 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7464 ;;      Params:         0       0       0       0       0
  7465 ;;      Locals:         0       1       0       0       0
  7466 ;;      Temps:          0       1       0       0       0
  7467 ;;      Totals:         0       2       0       0       0
  7468 ;;Total ram usage:        2 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:    3
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_ChargeMode
  7475 ;;		_robo_init
  7476 ;;		_robotMove
  7477 ;;		_robotTurn
  7478 ;;		_ser_puts
  7479 ;;		_ser_puts2
  7480 ;;		_ser_puthex
  7481 ;;		_robot_read
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           psect	text1196
  7485                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7486                           	line	71
  7487                           	global	__size_of_ser_putch
  7488  0021                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
  7489                           	
  7490  09EF                     _ser_putch:	
  7491                           	opt	stack 3
  7492                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
  7493                           ;ser_putch@c stored from wreg
  7494  09EF  1283               	bcf	status, 5	;RP0=0, select bank0
  7495  09F0  1303               	bcf	status, 6	;RP1=0, select bank0
  7496  09F1  00A1               	movwf	(ser_putch@c)
  7497                           	line	72
  7498                           	
  7499  09F2                     l10273:	
  7500                           ;ser.c: 72: while (((txiptr+1) & (16-1))==txoptr)
  7501  09F2  29F4               	goto	l10275
  7502                           	
  7503  09F3                     l4440:	
  7504                           	line	73
  7505                           ;ser.c: 73: continue;
  7506  09F3  29F4               	goto	l10275
  7507                           	
  7508  09F4                     l4439:	
  7509                           	line	72
  7510                           	
  7511  09F4                     l10275:	
  7512  09F4  086D               	movf	(_txiptr),w	;volatile
  7513  09F5  3E01               	addlw	01h
  7514  09F6  390F               	andlw	0Fh
  7515  09F7  066E               	xorwf	(_txoptr),w	;volatile
  7516  09F8  1903               	skipnz
  7517  09F9  29FB               	goto	u3561
  7518  09FA  29FC               	goto	u3560
  7519  09FB                     u3561:
  7520  09FB  29F4               	goto	l10275
  7521  09FC                     u3560:
  7522                           	
  7523  09FC                     l4441:	
  7524                           	line	74
  7525                           ;ser.c: 74: GIE=0;
  7526  09FC  138B               	bcf	(95/8),(95)&7
  7527                           	line	75
  7528                           	
  7529  09FD                     l10277:	
  7530                           ;ser.c: 75: txfifo[txiptr] = c;
  7531  09FD  0821               	movf	(ser_putch@c),w
  7532  09FE  00A0               	movwf	(??_ser_putch+0)+0
  7533  09FF  086D               	movf	(_txiptr),w
  7534  0A00  3EB0               	addlw	_txfifo&0ffh
  7535  0A01  0084               	movwf	fsr0
  7536  0A02  0820               	movf	(??_ser_putch+0)+0,w
  7537  0A03  1383               	bcf	status, 7	;select IRP bank1
  7538  0A04  0080               	movwf	indf
  7539                           	line	76
  7540                           	
  7541  0A05                     l10279:	
  7542                           ;ser.c: 76: txiptr=(txiptr+1) & (16-1);
  7543  0A05  086D               	movf	(_txiptr),w	;volatile
  7544  0A06  3E01               	addlw	01h
  7545  0A07  390F               	andlw	0Fh
  7546  0A08  00A0               	movwf	(??_ser_putch+0)+0
  7547  0A09  0820               	movf	(??_ser_putch+0)+0,w
  7548  0A0A  00ED               	movwf	(_txiptr)	;volatile
  7549                           	line	77
  7550                           	
  7551  0A0B                     l10281:	
  7552                           ;ser.c: 77: TXIE=1;
  7553  0A0B  1683               	bsf	status, 5	;RP0=1, select bank1
  7554  0A0C  1303               	bcf	status, 6	;RP1=0, select bank1
  7555  0A0D  160C               	bsf	(1124/8)^080h,(1124)&7
  7556                           	line	78
  7557                           	
  7558  0A0E                     l10283:	
  7559                           ;ser.c: 78: GIE=1;
  7560  0A0E  178B               	bsf	(95/8),(95)&7
  7561                           	line	79
  7562                           	
  7563  0A0F                     l4442:	
  7564  0A0F  0008               	return
  7565                           	opt stack 0
  7566                           GLOBAL	__end_of_ser_putch
  7567  0A10                     	__end_of_ser_putch:
  7568 ;; =============== function _ser_putch ends ============
  7569                           
  7570                           	signat	_ser_putch,4216
  7571                           	global	_ser_init
  7572                           psect	text1197,local,class=CODE,delta=2
  7573                           global __ptext1197
  7574  0ABC                     __ptext1197:
  7575                           
  7576 ;; *************** function _ser_init *****************
  7577 ;; Defined at:
  7578 ;;		line 114 in file "E:\Aldnoah.Zero\Assignment3\ser.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;		None
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;		None               void
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7592 ;;      Params:         0       0       0       0       0
  7593 ;;      Locals:         0       0       0       0       0
  7594 ;;      Temps:          0       1       0       0       0
  7595 ;;      Totals:         0       1       0       0       0
  7596 ;;Total ram usage:        1 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    3
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_init
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           psect	text1197
  7606                           	file	"E:\Aldnoah.Zero\Assignment3\ser.c"
  7607                           	line	114
  7608                           	global	__size_of_ser_init
  7609  002E                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
  7610                           	
  7611  0ABC                     _ser_init:	
  7612                           	opt	stack 3
  7613                           ; Regs used in _ser_init: [wreg+status,2+status,0]
  7614                           	line	115
  7615                           	
  7616  0ABC                     l11169:	
  7617                           ;ser.c: 115: TRISC |= 0b10000000;
  7618  0ABC  1683               	bsf	status, 5	;RP0=1, select bank1
  7619  0ABD  1303               	bcf	status, 6	;RP1=0, select bank1
  7620  0ABE  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
  7621                           	line	116
  7622                           	
  7623  0ABF                     l11171:	
  7624                           ;ser.c: 116: TRISC &= 0b10111111;
  7625  0ABF  30BF               	movlw	(0BFh)
  7626  0AC0  1283               	bcf	status, 5	;RP0=0, select bank0
  7627  0AC1  1303               	bcf	status, 6	;RP1=0, select bank0
  7628  0AC2  00A0               	movwf	(??_ser_init+0)+0
  7629  0AC3  0820               	movf	(??_ser_init+0)+0,w
  7630  0AC4  1683               	bsf	status, 5	;RP0=1, select bank1
  7631  0AC5  1303               	bcf	status, 6	;RP1=0, select bank1
  7632  0AC6  0587               	andwf	(135)^080h,f	;volatile
  7633                           	line	117
  7634                           	
  7635  0AC7                     l11173:	
  7636                           ;ser.c: 117: BRGH=1;
  7637  0AC7  1518               	bsf	(1218/8)^080h,(1218)&7
  7638                           	line	119
  7639                           	
  7640  0AC8                     l11175:	
  7641                           ;ser.c: 119: SPBRG=20;
  7642  0AC8  3014               	movlw	(014h)
  7643  0AC9  0099               	movwf	(153)^080h	;volatile
  7644                           	line	122
  7645                           	
  7646  0ACA                     l11177:	
  7647                           ;ser.c: 122: TX9=0;
  7648  0ACA  1318               	bcf	(1222/8)^080h,(1222)&7
  7649                           	line	123
  7650                           	
  7651  0ACB                     l11179:	
  7652                           ;ser.c: 123: RX9=0;
  7653  0ACB  1283               	bcf	status, 5	;RP0=0, select bank0
  7654  0ACC  1303               	bcf	status, 6	;RP1=0, select bank0
  7655  0ACD  1318               	bcf	(198/8),(198)&7
  7656                           	line	125
  7657                           	
  7658  0ACE                     l11181:	
  7659                           ;ser.c: 125: SYNC=0;
  7660  0ACE  1683               	bsf	status, 5	;RP0=1, select bank1
  7661  0ACF  1303               	bcf	status, 6	;RP1=0, select bank1
  7662  0AD0  1218               	bcf	(1220/8)^080h,(1220)&7
  7663                           	line	126
  7664                           	
  7665  0AD1                     l11183:	
  7666                           ;ser.c: 126: SPEN=1;
  7667  0AD1  1283               	bcf	status, 5	;RP0=0, select bank0
  7668  0AD2  1303               	bcf	status, 6	;RP1=0, select bank0
  7669  0AD3  1798               	bsf	(199/8),(199)&7
  7670                           	line	127
  7671                           	
  7672  0AD4                     l11185:	
  7673                           ;ser.c: 127: CREN=1;
  7674  0AD4  1618               	bsf	(196/8),(196)&7
  7675                           	line	128
  7676                           	
  7677  0AD5                     l11187:	
  7678                           ;ser.c: 128: TXIE=0;
  7679  0AD5  1683               	bsf	status, 5	;RP0=1, select bank1
  7680  0AD6  1303               	bcf	status, 6	;RP1=0, select bank1
  7681  0AD7  120C               	bcf	(1124/8)^080h,(1124)&7
  7682                           	line	129
  7683                           	
  7684  0AD8                     l11189:	
  7685                           ;ser.c: 129: RCIE=1;
  7686  0AD8  168C               	bsf	(1125/8)^080h,(1125)&7
  7687                           	line	130
  7688                           	
  7689  0AD9                     l11191:	
  7690                           ;ser.c: 130: TXEN=1;
  7691  0AD9  1698               	bsf	(1221/8)^080h,(1221)&7
  7692                           	line	133
  7693                           	
  7694  0ADA                     l11193:	
  7695                           ;ser.c: 133: rxiptr=rxoptr=txiptr=txoptr=0;
  7696  0ADA  3000               	movlw	(0)
  7697  0ADB  1283               	bcf	status, 5	;RP0=0, select bank0
  7698  0ADC  1303               	bcf	status, 6	;RP1=0, select bank0
  7699  0ADD  00EE               	movwf	(_txoptr)	;volatile
  7700  0ADE  00ED               	movwf	(_txiptr)	;volatile
  7701  0ADF  1683               	bsf	status, 5	;RP0=1, select bank1
  7702  0AE0  1303               	bcf	status, 6	;RP1=0, select bank1
  7703  0AE1  00DD               	movwf	(_rxoptr)^080h	;volatile
  7704  0AE2  1283               	bcf	status, 5	;RP0=0, select bank0
  7705  0AE3  1303               	bcf	status, 6	;RP1=0, select bank0
  7706  0AE4  00A0               	movwf	(??_ser_init+0)+0
  7707  0AE5  0820               	movf	(??_ser_init+0)+0,w
  7708  0AE6  1683               	bsf	status, 5	;RP0=1, select bank1
  7709  0AE7  1303               	bcf	status, 6	;RP1=0, select bank1
  7710  0AE8  00DC               	movwf	(_rxiptr)^080h	;volatile
  7711                           	line	134
  7712                           	
  7713  0AE9                     l4464:	
  7714  0AE9  0008               	return
  7715                           	opt stack 0
  7716                           GLOBAL	__end_of_ser_init
  7717  0AEA                     	__end_of_ser_init:
  7718 ;; =============== function _ser_init ends ============
  7719                           
  7720                           	signat	_ser_init,88
  7721                           	global	_adc_read
  7722                           psect	text1198,local,class=CODE,delta=2
  7723                           global __ptext1198
  7724  0A10                     __ptext1198:
  7725                           
  7726 ;; *************** function _adc_read *****************
  7727 ;; Defined at:
  7728 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\adc.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;		None
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  2    0[BANK0 ] unsigned int 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7742 ;;      Params:         0       2       0       0       0
  7743 ;;      Locals:         0       2       0       0       0
  7744 ;;      Temps:          0       2       0       0       0
  7745 ;;      Totals:         0       6       0       0       0
  7746 ;;Total ram usage:        6 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    3
  7749 ;; This function calls:
  7750 ;;		Nothing
  7751 ;; This function is called by:
  7752 ;;		_adc_read_channel
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           psect	text1198
  7756                           	file	"E:\Aldnoah.Zero\Assignment3\adc.c"
  7757                           	line	61
  7758                           	global	__size_of_adc_read
  7759  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
  7760                           	
  7761  0A10                     _adc_read:	
  7762                           	opt	stack 0
  7763                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  7764                           	line	64
  7765                           	
  7766  0A10                     l10123:	
  7767                           ;adc.c: 62: volatile unsigned int adc_value;
  7768                           ;adc.c: 64: ADRESH = 0;
  7769  0A10  1283               	bcf	status, 5	;RP0=0, select bank0
  7770  0A11  1303               	bcf	status, 6	;RP1=0, select bank0
  7771  0A12  019E               	clrf	(30)	;volatile
  7772                           	line	66
  7773                           	
  7774  0A13                     l10125:	
  7775                           ;adc.c: 66: GO = 1;
  7776  0A13  151F               	bsf	(250/8),(250)&7
  7777                           	line	67
  7778                           ;adc.c: 67: while(GO) continue;
  7779  0A14  2A15               	goto	l703
  7780                           	
  7781  0A15                     l704:	
  7782                           	
  7783  0A15                     l703:	
  7784  0A15  191F               	btfsc	(250/8),(250)&7
  7785  0A16  2A18               	goto	u3361
  7786  0A17  2A19               	goto	u3360
  7787  0A18                     u3361:
  7788  0A18  2A15               	goto	l703
  7789  0A19                     u3360:
  7790                           	
  7791  0A19                     l705:	
  7792                           	line	68
  7793                           # 68 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7794  0A19  0000               nop ;#
  7795                           	line	69
  7796                           # 69 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7797  0A1A  0000               nop ;#
  7798                           	line	70
  7799                           # 70 "E:\Aldnoah.Zero\Assignment3\adc.c"
  7800  0A1B  0000               nop ;#
  7801                           psect	text1198
  7802                           	line	73
  7803                           	
  7804  0A1C                     l10127:	
  7805                           ;adc.c: 73: adc_value = ADRESH;
  7806  0A1C  1283               	bcf	status, 5	;RP0=0, select bank0
  7807  0A1D  1303               	bcf	status, 6	;RP1=0, select bank0
  7808  0A1E  081E               	movf	(30),w	;volatile
  7809  0A1F  00A2               	movwf	(??_adc_read+0)+0
  7810  0A20  01A3               	clrf	(??_adc_read+0)+0+1
  7811  0A21  0822               	movf	0+(??_adc_read+0)+0,w
  7812  0A22  00A4               	movwf	(adc_read@adc_value)	;volatile
  7813  0A23  0823               	movf	1+(??_adc_read+0)+0,w
  7814  0A24  00A5               	movwf	(adc_read@adc_value+1)	;volatile
  7815                           	line	74
  7816                           ;adc.c: 74: adc_value <<= 1;
  7817  0A25  3001               	movlw	01h
  7818                           	
  7819  0A26                     u3375:
  7820  0A26  1003               	clrc
  7821  0A27  0DA4               	rlf	(adc_read@adc_value),f	;volatile
  7822  0A28  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
  7823  0A29  3EFF               	addlw	-1
  7824  0A2A  1D03               	skipz
  7825  0A2B  2A26               	goto	u3375
  7826                           	line	75
  7827                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
  7828  0A2C  1683               	bsf	status, 5	;RP0=1, select bank1
  7829  0A2D  1303               	bcf	status, 6	;RP1=0, select bank1
  7830  0A2E  081E               	movf	(158)^080h,w	;volatile
  7831                           	line	78
  7832                           	
  7833  0A2F                     l10129:	
  7834                           ;adc.c: 78: return (adc_value);
  7835  0A2F  1283               	bcf	status, 5	;RP0=0, select bank0
  7836  0A30  1303               	bcf	status, 6	;RP1=0, select bank0
  7837  0A31  0825               	movf	(adc_read@adc_value+1),w	;volatile
  7838  0A32  01A1               	clrf	(?_adc_read+1)
  7839  0A33  07A1               	addwf	(?_adc_read+1)
  7840  0A34  0824               	movf	(adc_read@adc_value),w	;volatile
  7841  0A35  01A0               	clrf	(?_adc_read)
  7842  0A36  07A0               	addwf	(?_adc_read)
  7843                           
  7844  0A37  2A38               	goto	l706
  7845                           	
  7846  0A38                     l10131:	
  7847                           	line	79
  7848                           	
  7849  0A38                     l706:	
  7850  0A38  0008               	return
  7851                           	opt stack 0
  7852                           GLOBAL	__end_of_adc_read
  7853  0A39                     	__end_of_adc_read:
  7854 ;; =============== function _adc_read ends ============
  7855                           
  7856                           	signat	_adc_read,90
  7857                           	global	_isr1
  7858                           psect	text1199,local,class=CODE,delta=2
  7859                           global __ptext1199
  7860  05C1                     __ptext1199:
  7861                           
  7862 ;; *************** function _isr1 *****************
  7863 ;; Defined at:
  7864 ;;		line 93 in file "E:\Aldnoah.Zero\Assignment3\Main.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;		None               void
  7871 ;; Registers used:
  7872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7878 ;;      Params:         0       0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0
  7880 ;;      Temps:          6       0       0       0       0
  7881 ;;      Totals:         6       0       0       0       0
  7882 ;;Total ram usage:        6 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    2
  7885 ;; This function calls:
  7886 ;;		i1___lwmod
  7887 ;;		_ReadButtons
  7888 ;; This function is called by:
  7889 ;;		Interrupt level 1
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           psect	text1199
  7893                           	file	"E:\Aldnoah.Zero\Assignment3\Main.c"
  7894                           	line	93
  7895                           	global	__size_of_isr1
  7896  00CD                     	__size_of_isr1	equ	__end_of_isr1-_isr1
  7897                           	
  7898  05C1                     _isr1:	
  7899                           	opt	stack 0
  7900                           ; Regs used in _isr1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7901                           psect	intentry,class=CODE,delta=2
  7902                           global __pintentry
  7903  0004                     __pintentry:
  7904                           global interrupt_function
  7905  0004                     interrupt_function:
  7906                           	global saved_w
  7907  007E                     	saved_w	set	btemp+0
  7908  0004  00FE               	movwf	saved_w
  7909  0005  0E03               	swapf	status,w
  7910  0006  00FA               	movwf	(??_isr1+2)
  7911  0007  0804               	movf	fsr0,w
  7912  0008  00FB               	movwf	(??_isr1+3)
  7913  0009  080A               	movf	pclath,w
  7914  000A  00FC               	movwf	(??_isr1+4)
  7915  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  7916  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  7917  000D  087F               	movf	btemp+1,w
  7918  000E  00FD               	movwf	(??_isr1+5)
  7919  000F  120A  118A  2DC1   	ljmp	_isr1
  7920                           psect	text1199
  7921                           	line	98
  7922                           	
  7923  05C1                     i1l11081:	
  7924                           ;Main.c: 98: if(TMR0IF)
  7925  05C1  1D0B               	btfss	(90/8),(90)&7
  7926  05C2  2DC4               	goto	u458_21
  7927  05C3  2DC5               	goto	u458_20
  7928  05C4                     u458_21:
  7929  05C4  2E4A               	goto	i1l11113
  7930  05C5                     u458_20:
  7931                           	line	100
  7932                           	
  7933  05C5                     i1l11083:	
  7934                           ;Main.c: 99: {
  7935                           ;Main.c: 100: TMR0IF = 0;
  7936  05C5  110B               	bcf	(90/8),(90)&7
  7937                           	line	101
  7938                           	
  7939  05C6                     i1l11085:	
  7940                           ;Main.c: 101: TMR0 = 100;
  7941  05C6  3064               	movlw	(064h)
  7942  05C7  0081               	movwf	(1)	;volatile
  7943                           	line	103
  7944                           ;Main.c: 103: RTC_Counter++;
  7945  05C8  3001               	movlw	low(01h)
  7946  05C9  07E8               	addwf	(_RTC_Counter),f	;volatile
  7947  05CA  1803               	skipnc
  7948  05CB  0AE9               	incf	(_RTC_Counter+1),f	;volatile
  7949  05CC  3000               	movlw	high(01h)
  7950  05CD  07E9               	addwf	(_RTC_Counter+1),f	;volatile
  7951                           	line	105
  7952                           	
  7953  05CE                     i1l11087:	
  7954                           ;Main.c: 105: RTC_FLAG_1MS = 1;
  7955  05CE  146F               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
  7956                           	line	106
  7957                           	
  7958  05CF                     i1l11089:	
  7959                           ;Main.c: 106: if(RTC_Counter % 10 == 0)
  7960  05CF  300A               	movlw	low(0Ah)
  7961  05D0  00F2               	movwf	(?i1___lwmod)
  7962  05D1  3000               	movlw	high(0Ah)
  7963  05D2  00F3               	movwf	((?i1___lwmod))+1
  7964  05D3  0869               	movf	(_RTC_Counter+1),w	;volatile
  7965  05D4  01F5               	clrf	1+(?i1___lwmod)+02h
  7966  05D5  07F5               	addwf	1+(?i1___lwmod)+02h
  7967  05D6  0868               	movf	(_RTC_Counter),w	;volatile
  7968  05D7  01F4               	clrf	0+(?i1___lwmod)+02h
  7969  05D8  07F4               	addwf	0+(?i1___lwmod)+02h
  7970                           
  7971  05D9  120A  158A  23B3   	fcall	i1___lwmod
              120A  118A         
  7972  05DE  0873               	movf	((1+(?i1___lwmod))),w
  7973  05DF  0472               	iorwf	((0+(?i1___lwmod))),w
  7974  05E0  1D03               	skipz
  7975  05E1  2DE3               	goto	u459_21
  7976  05E2  2DE4               	goto	u459_20
  7977  05E3                     u459_21:
  7978  05E3  2DE6               	goto	i1l11093
  7979  05E4                     u459_20:
  7980                           	line	108
  7981                           	
  7982  05E4                     i1l11091:	
  7983                           ;Main.c: 107: {
  7984                           ;Main.c: 108: RTC_FLAG_10MS = 1;
  7985  05E4  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
  7986  05E5  2DE6               	goto	i1l11093
  7987                           	line	111
  7988                           	
  7989  05E6                     i1l2197:	
  7990                           	line	112
  7991                           	
  7992  05E6                     i1l11093:	
  7993                           ;Main.c: 111: }
  7994                           ;Main.c: 112: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
  7995  05E6  3032               	movlw	low(032h)
  7996  05E7  00F2               	movwf	(?i1___lwmod)
  7997  05E8  3000               	movlw	high(032h)
  7998  05E9  00F3               	movwf	((?i1___lwmod))+1
  7999  05EA  1283               	bcf	status, 5	;RP0=0, select bank0
  8000  05EB  1303               	bcf	status, 6	;RP1=0, select bank0
  8001  05EC  0869               	movf	(_RTC_Counter+1),w	;volatile
  8002  05ED  01F5               	clrf	1+(?i1___lwmod)+02h
  8003  05EE  07F5               	addwf	1+(?i1___lwmod)+02h
  8004  05EF  0868               	movf	(_RTC_Counter),w	;volatile
  8005  05F0  01F4               	clrf	0+(?i1___lwmod)+02h
  8006  05F1  07F4               	addwf	0+(?i1___lwmod)+02h
  8007                           
  8008  05F2  120A  158A  23B3   	fcall	i1___lwmod
              120A  118A         
  8009  05F7  0873               	movf	((1+(?i1___lwmod))),w
  8010  05F8  0472               	iorwf	((0+(?i1___lwmod))),w
  8011  05F9  1D03               	skipz
  8012  05FA  2DFC               	goto	u460_21
  8013  05FB  2DFD               	goto	u460_20
  8014  05FC                     u460_21:
  8015  05FC  2DFF               	goto	i1l11097
  8016  05FD                     u460_20:
  8017                           	
  8018  05FD                     i1l11095:	
  8019  05FD  14F1               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
  8020  05FE  2DFF               	goto	i1l11097
  8021                           	
  8022  05FF                     i1l2198:	
  8023                           	line	113
  8024                           	
  8025  05FF                     i1l11097:	
  8026                           ;Main.c: 113: if(RTC_Counter % 250 == 0)
  8027  05FF  30FA               	movlw	low(0FAh)
  8028  0600  00F2               	movwf	(?i1___lwmod)
  8029  0601  3000               	movlw	high(0FAh)
  8030  0602  00F3               	movwf	((?i1___lwmod))+1
  8031  0603  1283               	bcf	status, 5	;RP0=0, select bank0
  8032  0604  1303               	bcf	status, 6	;RP1=0, select bank0
  8033  0605  0869               	movf	(_RTC_Counter+1),w	;volatile
  8034  0606  01F5               	clrf	1+(?i1___lwmod)+02h
  8035  0607  07F5               	addwf	1+(?i1___lwmod)+02h
  8036  0608  0868               	movf	(_RTC_Counter),w	;volatile
  8037  0609  01F4               	clrf	0+(?i1___lwmod)+02h
  8038  060A  07F4               	addwf	0+(?i1___lwmod)+02h
  8039                           
  8040  060B  120A  158A  23B3   	fcall	i1___lwmod
              120A  118A         
  8041  0610  0873               	movf	((1+(?i1___lwmod))),w
  8042  0611  0472               	iorwf	((0+(?i1___lwmod))),w
  8043  0612  1D03               	skipz
  8044  0613  2E15               	goto	u461_21
  8045  0614  2E16               	goto	u461_20
  8046  0615                     u461_21:
  8047  0615  2E18               	goto	i1l11101
  8048  0616                     u461_20:
  8049                           	line	116
  8050                           	
  8051  0616                     i1l11099:	
  8052                           ;Main.c: 114: {
  8053                           ;Main.c: 116: RTC_FLAG_250MS = 1;
  8054  0616  17F0               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  8055  0617  2E18               	goto	i1l11101
  8056                           	line	118
  8057                           	
  8058  0618                     i1l2199:	
  8059                           	line	119
  8060                           	
  8061  0618                     i1l11101:	
  8062                           ;Main.c: 118: }
  8063                           ;Main.c: 119: if(RTC_Counter % 500 == 0)
  8064  0618  30F4               	movlw	low(01F4h)
  8065  0619  00F2               	movwf	(?i1___lwmod)
  8066  061A  3001               	movlw	high(01F4h)
  8067  061B  00F3               	movwf	((?i1___lwmod))+1
  8068  061C  1283               	bcf	status, 5	;RP0=0, select bank0
  8069  061D  1303               	bcf	status, 6	;RP1=0, select bank0
  8070  061E  0869               	movf	(_RTC_Counter+1),w	;volatile
  8071  061F  01F5               	clrf	1+(?i1___lwmod)+02h
  8072  0620  07F5               	addwf	1+(?i1___lwmod)+02h
  8073  0621  0868               	movf	(_RTC_Counter),w	;volatile
  8074  0622  01F4               	clrf	0+(?i1___lwmod)+02h
  8075  0623  07F4               	addwf	0+(?i1___lwmod)+02h
  8076                           
  8077  0624  120A  158A  23B3   	fcall	i1___lwmod
              120A  118A         
  8078  0629  0873               	movf	((1+(?i1___lwmod))),w
  8079  062A  0472               	iorwf	((0+(?i1___lwmod))),w
  8080  062B  1D03               	skipz
  8081  062C  2E2E               	goto	u462_21
  8082  062D  2E2F               	goto	u462_20
  8083  062E                     u462_21:
  8084  062E  2E37               	goto	i1l11109
  8085  062F                     u462_20:
  8086                           	line	121
  8087                           	
  8088  062F                     i1l11103:	
  8089                           ;Main.c: 120: {
  8090                           ;Main.c: 121: RTC_FLAG_500MS = 1;
  8091  062F  1471               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
  8092                           	line	122
  8093                           	
  8094  0630                     i1l11105:	
  8095                           ;Main.c: 122: RTC_Counter = 0;
  8096  0630  1283               	bcf	status, 5	;RP0=0, select bank0
  8097  0631  1303               	bcf	status, 6	;RP1=0, select bank0
  8098  0632  01E8               	clrf	(_RTC_Counter)	;volatile
  8099  0633  01E9               	clrf	(_RTC_Counter+1)	;volatile
  8100                           	line	123
  8101                           	
  8102  0634                     i1l11107:	
  8103                           ;Main.c: 123: RB0 ^= 0x01;
  8104  0634  3001               	movlw	1<<((48)&7)
  8105  0635  0686               	xorwf	((48)/8),f
  8106  0636  2E37               	goto	i1l11109
  8107                           	line	125
  8108                           	
  8109  0637                     i1l2200:	
  8110                           	line	127
  8111                           	
  8112  0637                     i1l11109:	
  8113                           ;Main.c: 125: }
  8114                           ;Main.c: 127: if (buttonPressed == 0)
  8115  0637  1283               	bcf	status, 5	;RP0=0, select bank0
  8116  0638  1303               	bcf	status, 6	;RP1=0, select bank0
  8117  0639  08EC               	movf	(_buttonPressed),f
  8118  063A  1D03               	skipz	;volatile
  8119  063B  2E3D               	goto	u463_21
  8120  063C  2E3E               	goto	u463_20
  8121  063D                     u463_21:
  8122  063D  2E4A               	goto	i1l11113
  8123  063E                     u463_20:
  8124                           	line	129
  8125                           	
  8126  063E                     i1l11111:	
  8127                           ;Main.c: 128: {
  8128                           ;Main.c: 129: buttonPressed = ReadButtons();
  8129  063E  120A  158A  2318   	fcall	_ReadButtons
              120A  118A         
  8130  0643  00F8               	movwf	(??_isr1+0)+0
  8131  0644  0878               	movf	(??_isr1+0)+0,w
  8132  0645  1283               	bcf	status, 5	;RP0=0, select bank0
  8133  0646  1303               	bcf	status, 6	;RP1=0, select bank0
  8134  0647  00EC               	movwf	(_buttonPressed)	;volatile
  8135  0648  2E4A               	goto	i1l11113
  8136                           	line	130
  8137                           	
  8138  0649                     i1l2201:	
  8139  0649  2E4A               	goto	i1l11113
  8140                           	line	131
  8141                           	
  8142  064A                     i1l2196:	
  8143                           	line	134
  8144                           	
  8145  064A                     i1l11113:	
  8146                           ;Main.c: 130: }
  8147                           ;Main.c: 131: }
  8148                           ;Main.c: 134: if (RCIF)
  8149  064A  1E8C               	btfss	(101/8),(101)&7
  8150  064B  2E4D               	goto	u464_21
  8151  064C  2E4E               	goto	u464_20
  8152  064D                     u464_21:
  8153  064D  2E5C               	goto	i1l11117
  8154  064E                     u464_20:
  8155                           	line	138
  8156                           	
  8157  064E                     i1l11115:	
  8158                           ;Main.c: 135: {
  8159                           ;Main.c: 138: DistHighByte = RCREG;
  8160  064E  081A               	movf	(26),w	;volatile
  8161  064F  00F8               	movwf	(??_isr1+0)+0
  8162  0650  0878               	movf	(??_isr1+0)+0,w
  8163  0651  1683               	bsf	status, 5	;RP0=1, select bank1
  8164  0652  1303               	bcf	status, 6	;RP1=0, select bank1
  8165  0653  00D1               	movwf	(_DistHighByte)^080h	;volatile
  8166                           	line	140
  8167                           ;Main.c: 140: distTravelled = (int)DistHighByte ;
  8168  0654  0851               	movf	(_DistHighByte)^080h,w	;volatile
  8169  0655  00F8               	movwf	(??_isr1+0)+0
  8170  0656  01F9               	clrf	(??_isr1+0)+0+1
  8171  0657  0878               	movf	0+(??_isr1+0)+0,w
  8172  0658  00C0               	movwf	(_distTravelled)^080h	;volatile
  8173  0659  0879               	movf	1+(??_isr1+0)+0,w
  8174  065A  00C1               	movwf	(_distTravelled+1)^080h	;volatile
  8175  065B  2E5C               	goto	i1l11117
  8176                           	line	146
  8177                           	
  8178  065C                     i1l2202:	
  8179                           	line	147
  8180                           	
  8181  065C                     i1l11117:	
  8182                           ;Main.c: 146: }
  8183                           ;Main.c: 147: if (TXIF && TXIE)
  8184  065C  1283               	bcf	status, 5	;RP0=0, select bank0
  8185  065D  1E0C               	btfss	(100/8),(100)&7
  8186  065E  2E60               	goto	u465_21
  8187  065F  2E61               	goto	u465_20
  8188  0660                     u465_21:
  8189  0660  2E82               	goto	i1l2205
  8190  0661                     u465_20:
  8191                           	
  8192  0661                     i1l11119:	
  8193  0661  1683               	bsf	status, 5	;RP0=1, select bank1
  8194  0662  1303               	bcf	status, 6	;RP1=0, select bank1
  8195  0663  1E0C               	btfss	(1124/8)^080h,(1124)&7
  8196  0664  2E66               	goto	u466_21
  8197  0665  2E67               	goto	u466_20
  8198  0666                     u466_21:
  8199  0666  2E82               	goto	i1l2205
  8200  0667                     u466_20:
  8201                           	line	149
  8202                           	
  8203  0667                     i1l11121:	
  8204                           ;Main.c: 148: {
  8205                           ;Main.c: 149: TXREG = txfifo[txoptr];
  8206  0667  1283               	bcf	status, 5	;RP0=0, select bank0
  8207  0668  1303               	bcf	status, 6	;RP1=0, select bank0
  8208  0669  086E               	movf	(_txoptr),w
  8209  066A  3EB0               	addlw	_txfifo&0ffh
  8210  066B  0084               	movwf	fsr0
  8211  066C  1383               	bcf	status, 7	;select IRP bank1
  8212  066D  0800               	movf	indf,w
  8213  066E  0099               	movwf	(25)	;volatile
  8214                           	line	150
  8215                           	
  8216  066F                     i1l11123:	
  8217                           ;Main.c: 150: ++txoptr;
  8218  066F  3001               	movlw	(01h)
  8219  0670  00F8               	movwf	(??_isr1+0)+0
  8220  0671  0878               	movf	(??_isr1+0)+0,w
  8221  0672  07EE               	addwf	(_txoptr),f	;volatile
  8222                           	line	151
  8223                           	
  8224  0673                     i1l11125:	
  8225                           ;Main.c: 151: txoptr &= (16-1);
  8226  0673  300F               	movlw	(0Fh)
  8227  0674  00F8               	movwf	(??_isr1+0)+0
  8228  0675  0878               	movf	(??_isr1+0)+0,w
  8229  0676  05EE               	andwf	(_txoptr),f	;volatile
  8230                           	line	152
  8231                           	
  8232  0677                     i1l11127:	
  8233                           ;Main.c: 152: if (txoptr==txiptr)
  8234  0677  086E               	movf	(_txoptr),w	;volatile
  8235  0678  066D               	xorwf	(_txiptr),w	;volatile
  8236  0679  1D03               	skipz
  8237  067A  2E7C               	goto	u467_21
  8238  067B  2E7D               	goto	u467_20
  8239  067C                     u467_21:
  8240  067C  2E82               	goto	i1l2205
  8241  067D                     u467_20:
  8242                           	line	153
  8243                           	
  8244  067D                     i1l11129:	
  8245                           ;Main.c: 153: TXIE = 0;
  8246  067D  1683               	bsf	status, 5	;RP0=1, select bank1
  8247  067E  1303               	bcf	status, 6	;RP1=0, select bank1
  8248  067F  120C               	bcf	(1124/8)^080h,(1124)&7
  8249  0680  2E82               	goto	i1l2205
  8250                           	
  8251  0681                     i1l2204:	
  8252  0681  2E82               	goto	i1l2205
  8253                           	line	154
  8254                           	
  8255  0682                     i1l2203:	
  8256                           	line	155
  8257                           	
  8258  0682                     i1l2205:	
  8259  0682  087D               	movf	(??_isr1+5),w
  8260  0683  1283               	bcf	status, 5	;RP0=0, select bank0
  8261  0684  00FF               	movwf	btemp+1
  8262  0685  087C               	movf	(??_isr1+4),w
  8263  0686  008A               	movwf	pclath
  8264  0687  087B               	movf	(??_isr1+3),w
  8265  0688  0084               	movwf	fsr0
  8266  0689  0E7A               	swapf	(??_isr1+2)^0FFFFFF80h,w
  8267  068A  0083               	movwf	status
  8268  068B  0EFE               	swapf	saved_w,f
  8269  068C  0E7E               	swapf	saved_w,w
  8270  068D  0009               	retfie
  8271                           	opt stack 0
  8272                           GLOBAL	__end_of_isr1
  8273  068E                     	__end_of_isr1:
  8274 ;; =============== function _isr1 ends ============
  8275                           
  8276                           	signat	_isr1,88
  8277                           	global	_ReadButtons
  8278                           psect	text1200,local,class=CODE,delta=2
  8279                           global __ptext1200
  8280  0B18                     __ptext1200:
  8281                           
  8282 ;; *************** function _ReadButtons *****************
  8283 ;; Defined at:
  8284 ;;		line 141 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      unsigned char 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0, pclath, cstack
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8298 ;;      Params:         0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0
  8301 ;;      Totals:         0       0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:    1
  8305 ;; This function calls:
  8306 ;;		_Debounce
  8307 ;; This function is called by:
  8308 ;;		_isr1
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           psect	text1200
  8312                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  8313                           	line	141
  8314                           	global	__size_of_ReadButtons
  8315  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
  8316                           	
  8317  0B18                     _ReadButtons:	
  8318                           	opt	stack 0
  8319                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
  8320                           	line	142
  8321                           	
  8322  0B18                     i1l11131:	
  8323                           ;HMI.c: 142: Debounce();
  8324  0B18  120A  158A  2768   	fcall	_Debounce
              120A  158A         
  8325                           	line	144
  8326                           	
  8327  0B1D                     i1l11133:	
  8328                           ;HMI.c: 144: if(UpPressed)
  8329  0B1D  1E71               	btfss	(_UpPressed/8),(_UpPressed)&7
  8330  0B1E  2B20               	goto	u468_21
  8331  0B1F  2B21               	goto	u468_20
  8332  0B20                     u468_21:
  8333  0B20  2B25               	goto	i1l5239
  8334  0B21                     u468_20:
  8335                           	line	146
  8336                           	
  8337  0B21                     i1l11135:	
  8338                           ;HMI.c: 145: {
  8339                           ;HMI.c: 146: UpPressed = 0;
  8340  0B21  1271               	bcf	(_UpPressed/8),(_UpPressed)&7
  8341                           	line	147
  8342                           	
  8343  0B22                     i1l11137:	
  8344                           ;HMI.c: 147: return 1;
  8345  0B22  3001               	movlw	(01h)
  8346  0B23  2B47               	goto	i1l5240
  8347                           	
  8348  0B24                     i1l11139:	
  8349  0B24  2B47               	goto	i1l5240
  8350                           	line	149
  8351                           	
  8352  0B25                     i1l5239:	
  8353                           	line	151
  8354                           ;HMI.c: 149: }
  8355                           ;HMI.c: 151: if(DownPressed)
  8356  0B25  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
  8357  0B26  2B28               	goto	u469_21
  8358  0B27  2B29               	goto	u469_20
  8359  0B28                     u469_21:
  8360  0B28  2B2D               	goto	i1l5241
  8361  0B29                     u469_20:
  8362                           	line	153
  8363                           	
  8364  0B29                     i1l11141:	
  8365                           ;HMI.c: 152: {
  8366                           ;HMI.c: 153: DownPressed = 0;
  8367  0B29  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
  8368                           	line	154
  8369                           	
  8370  0B2A                     i1l11143:	
  8371                           ;HMI.c: 154: return 2;
  8372  0B2A  3002               	movlw	(02h)
  8373  0B2B  2B47               	goto	i1l5240
  8374                           	
  8375  0B2C                     i1l11145:	
  8376  0B2C  2B47               	goto	i1l5240
  8377                           	line	156
  8378                           	
  8379  0B2D                     i1l5241:	
  8380                           	line	157
  8381                           ;HMI.c: 156: }
  8382                           ;HMI.c: 157: if(LeftPressed)
  8383  0B2D  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
  8384  0B2E  2B30               	goto	u470_21
  8385  0B2F  2B31               	goto	u470_20
  8386  0B30                     u470_21:
  8387  0B30  2B35               	goto	i1l5242
  8388  0B31                     u470_20:
  8389                           	line	159
  8390                           	
  8391  0B31                     i1l11147:	
  8392                           ;HMI.c: 158: {
  8393                           ;HMI.c: 159: LeftPressed = 0;
  8394  0B31  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
  8395                           	line	160
  8396                           	
  8397  0B32                     i1l11149:	
  8398                           ;HMI.c: 160: return 3;
  8399  0B32  3003               	movlw	(03h)
  8400  0B33  2B47               	goto	i1l5240
  8401                           	
  8402  0B34                     i1l11151:	
  8403  0B34  2B47               	goto	i1l5240
  8404                           	line	162
  8405                           	
  8406  0B35                     i1l5242:	
  8407                           	line	163
  8408                           ;HMI.c: 162: }
  8409                           ;HMI.c: 163: if(RightPressed)
  8410  0B35  1D71               	btfss	(_RightPressed/8),(_RightPressed)&7
  8411  0B36  2B38               	goto	u471_21
  8412  0B37  2B39               	goto	u471_20
  8413  0B38                     u471_21:
  8414  0B38  2B3D               	goto	i1l5243
  8415  0B39                     u471_20:
  8416                           	line	165
  8417                           	
  8418  0B39                     i1l11153:	
  8419                           ;HMI.c: 164: {
  8420                           ;HMI.c: 165: RightPressed = 0;
  8421  0B39  1171               	bcf	(_RightPressed/8),(_RightPressed)&7
  8422                           	line	166
  8423                           	
  8424  0B3A                     i1l11155:	
  8425                           ;HMI.c: 166: return 4;
  8426  0B3A  3004               	movlw	(04h)
  8427  0B3B  2B47               	goto	i1l5240
  8428                           	
  8429  0B3C                     i1l11157:	
  8430  0B3C  2B47               	goto	i1l5240
  8431                           	line	168
  8432                           	
  8433  0B3D                     i1l5243:	
  8434                           	line	170
  8435                           ;HMI.c: 168: }
  8436                           ;HMI.c: 170: if(CenterPressed)
  8437  0B3D  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
  8438  0B3E  2B40               	goto	u472_21
  8439  0B3F  2B41               	goto	u472_20
  8440  0B40                     u472_21:
  8441  0B40  2B45               	goto	i1l11165
  8442  0B41                     u472_20:
  8443                           	line	172
  8444                           	
  8445  0B41                     i1l11159:	
  8446                           ;HMI.c: 171: {
  8447                           ;HMI.c: 172: CenterPressed = 0;
  8448  0B41  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
  8449                           	line	173
  8450                           	
  8451  0B42                     i1l11161:	
  8452                           ;HMI.c: 173: return 5;
  8453  0B42  3005               	movlw	(05h)
  8454  0B43  2B47               	goto	i1l5240
  8455                           	
  8456  0B44                     i1l11163:	
  8457  0B44  2B47               	goto	i1l5240
  8458                           	line	175
  8459                           	
  8460  0B45                     i1l5244:	
  8461                           	line	176
  8462                           	
  8463  0B45                     i1l11165:	
  8464                           ;HMI.c: 175: }
  8465                           ;HMI.c: 176: return 0;
  8466  0B45  3000               	movlw	(0)
  8467  0B46  2B47               	goto	i1l5240
  8468                           	
  8469  0B47                     i1l11167:	
  8470                           	line	177
  8471                           	
  8472  0B47                     i1l5240:	
  8473  0B47  0008               	return
  8474                           	opt stack 0
  8475                           GLOBAL	__end_of_ReadButtons
  8476  0B48                     	__end_of_ReadButtons:
  8477 ;; =============== function _ReadButtons ends ============
  8478                           
  8479                           	signat	_ReadButtons,89
  8480                           	global	i1___lwmod
  8481                           psect	text1201,local,class=CODE,delta=2
  8482                           global __ptext1201
  8483  0BB3                     __ptext1201:
  8484                           
  8485 ;; *************** function i1___lwmod *****************
  8486 ;; Defined at:
  8487 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  __lwmod         2    0[COMMON] unsigned int 
  8490 ;;  __lwmod         2    2[COMMON] unsigned int 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  __lwmod         1    5[COMMON] unsigned char 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  2    0[COMMON] unsigned int 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2, status,0
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8502 ;;      Params:         4       0       0       0       0
  8503 ;;      Locals:         1       0       0       0       0
  8504 ;;      Temps:          1       0       0       0       0
  8505 ;;      Totals:         6       0       0       0       0
  8506 ;;Total ram usage:        6 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; This function calls:
  8509 ;;		Nothing
  8510 ;; This function is called by:
  8511 ;;		_isr1
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           psect	text1201
  8515                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  8516                           	line	5
  8517                           	global	__size_ofi1___lwmod
  8518  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
  8519                           	
  8520  0BB3                     i1___lwmod:	
  8521                           	opt	stack 1
  8522                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8523                           	line	8
  8524                           	
  8525  0BB3                     i1l11267:	
  8526  0BB3  0873               	movf	(i1___lwmod@divisor+1),w
  8527  0BB4  0472               	iorwf	(i1___lwmod@divisor),w
  8528  0BB5  1903               	skipnz
  8529  0BB6  2BB8               	goto	u491_21
  8530  0BB7  2BB9               	goto	u491_20
  8531  0BB8                     u491_21:
  8532  0BB8  2BEF               	goto	i1l11285
  8533  0BB9                     u491_20:
  8534                           	line	9
  8535                           	
  8536  0BB9                     i1l11269:	
  8537  0BB9  01F7               	clrf	(i1___lwmod@counter)
  8538  0BBA  1403               	bsf	status,0
  8539  0BBB  0DF7               	rlf	(i1___lwmod@counter),f
  8540                           	line	10
  8541  0BBC  2BC9               	goto	i1l11275
  8542                           	
  8543  0BBD                     i1l7461:	
  8544                           	line	11
  8545                           	
  8546  0BBD                     i1l11271:	
  8547  0BBD  3001               	movlw	01h
  8548                           	
  8549  0BBE                     u492_25:
  8550  0BBE  1003               	clrc
  8551  0BBF  0DF2               	rlf	(i1___lwmod@divisor),f
  8552  0BC0  0DF3               	rlf	(i1___lwmod@divisor+1),f
  8553  0BC1  3EFF               	addlw	-1
  8554  0BC2  1D03               	skipz
  8555  0BC3  2BBE               	goto	u492_25
  8556                           	line	12
  8557                           	
  8558  0BC4                     i1l11273:	
  8559  0BC4  3001               	movlw	(01h)
  8560  0BC5  00F6               	movwf	(??i1___lwmod+0)+0
  8561  0BC6  0876               	movf	(??i1___lwmod+0)+0,w
  8562  0BC7  07F7               	addwf	(i1___lwmod@counter),f
  8563  0BC8  2BC9               	goto	i1l11275
  8564                           	line	13
  8565                           	
  8566  0BC9                     i1l7460:	
  8567                           	line	10
  8568                           	
  8569  0BC9                     i1l11275:	
  8570  0BC9  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
  8571  0BCA  2BCC               	goto	u493_21
  8572  0BCB  2BCD               	goto	u493_20
  8573  0BCC                     u493_21:
  8574  0BCC  2BBD               	goto	i1l11271
  8575  0BCD                     u493_20:
  8576  0BCD  2BCF               	goto	i1l11277
  8577                           	
  8578  0BCE                     i1l7462:	
  8579  0BCE  2BCF               	goto	i1l11277
  8580                           	line	14
  8581                           	
  8582  0BCF                     i1l7463:	
  8583                           	line	15
  8584                           	
  8585  0BCF                     i1l11277:	
  8586  0BCF  0873               	movf	(i1___lwmod@divisor+1),w
  8587  0BD0  0275               	subwf	(i1___lwmod@dividend+1),w
  8588  0BD1  1D03               	skipz
  8589  0BD2  2BD5               	goto	u494_25
  8590  0BD3  0872               	movf	(i1___lwmod@divisor),w
  8591  0BD4  0274               	subwf	(i1___lwmod@dividend),w
  8592  0BD5                     u494_25:
  8593  0BD5  1C03               	skipc
  8594  0BD6  2BD8               	goto	u494_21
  8595  0BD7  2BD9               	goto	u494_20
  8596  0BD8                     u494_21:
  8597  0BD8  2BE0               	goto	i1l11281
  8598  0BD9                     u494_20:
  8599                           	line	16
  8600                           	
  8601  0BD9                     i1l11279:	
  8602  0BD9  0872               	movf	(i1___lwmod@divisor),w
  8603  0BDA  02F4               	subwf	(i1___lwmod@dividend),f
  8604  0BDB  0873               	movf	(i1___lwmod@divisor+1),w
  8605  0BDC  1C03               	skipc
  8606  0BDD  03F5               	decf	(i1___lwmod@dividend+1),f
  8607  0BDE  02F5               	subwf	(i1___lwmod@dividend+1),f
  8608  0BDF  2BE0               	goto	i1l11281
  8609                           	
  8610  0BE0                     i1l7464:	
  8611                           	line	17
  8612                           	
  8613  0BE0                     i1l11281:	
  8614  0BE0  3001               	movlw	01h
  8615                           	
  8616  0BE1                     u495_25:
  8617  0BE1  1003               	clrc
  8618  0BE2  0CF3               	rrf	(i1___lwmod@divisor+1),f
  8619  0BE3  0CF2               	rrf	(i1___lwmod@divisor),f
  8620  0BE4  3EFF               	addlw	-1
  8621  0BE5  1D03               	skipz
  8622  0BE6  2BE1               	goto	u495_25
  8623                           	line	18
  8624                           	
  8625  0BE7                     i1l11283:	
  8626  0BE7  3001               	movlw	low(01h)
  8627  0BE8  02F7               	subwf	(i1___lwmod@counter),f
  8628  0BE9  1D03               	btfss	status,2
  8629  0BEA  2BEC               	goto	u496_21
  8630  0BEB  2BED               	goto	u496_20
  8631  0BEC                     u496_21:
  8632  0BEC  2BCF               	goto	i1l11277
  8633  0BED                     u496_20:
  8634  0BED  2BEF               	goto	i1l11285
  8635                           	
  8636  0BEE                     i1l7465:	
  8637  0BEE  2BEF               	goto	i1l11285
  8638                           	line	19
  8639                           	
  8640  0BEF                     i1l7459:	
  8641                           	line	20
  8642                           	
  8643  0BEF                     i1l11285:	
  8644  0BEF  0875               	movf	(i1___lwmod@dividend+1),w
  8645  0BF0  01F3               	clrf	(?i1___lwmod+1)
  8646  0BF1  07F3               	addwf	(?i1___lwmod+1)
  8647  0BF2  0874               	movf	(i1___lwmod@dividend),w
  8648  0BF3  01F2               	clrf	(?i1___lwmod)
  8649  0BF4  07F2               	addwf	(?i1___lwmod)
  8650                           
  8651  0BF5  2BF6               	goto	i1l7466
  8652                           	
  8653  0BF6                     i1l11287:	
  8654                           	line	21
  8655                           	
  8656  0BF6                     i1l7466:	
  8657  0BF6  0008               	return
  8658                           	opt stack 0
  8659                           GLOBAL	__end_ofi1___lwmod
  8660  0BF7                     	__end_ofi1___lwmod:
  8661 ;; =============== function i1___lwmod ends ============
  8662                           
  8663                           	signat	i1___lwmod,90
  8664                           	global	_Debounce
  8665                           psect	text1202,local,class=CODE,delta=2
  8666                           global __ptext1202
  8667  0F68                     __ptext1202:
  8668                           
  8669 ;; *************** function _Debounce *****************
  8670 ;; Defined at:
  8671 ;;		line 61 in file "E:\Aldnoah.Zero\Assignment3\HMI.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;		None
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;		None               void
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8685 ;;      Params:         0       0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0
  8687 ;;      Temps:          1       0       0       0       0
  8688 ;;      Totals:         1       0       0       0       0
  8689 ;;Total ram usage:        1 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_ReadButtons
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           psect	text1202
  8698                           	file	"E:\Aldnoah.Zero\Assignment3\HMI.c"
  8699                           	line	61
  8700                           	global	__size_of_Debounce
  8701  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
  8702                           	
  8703  0F68                     _Debounce:	
  8704                           	opt	stack 0
  8705                           ; Regs used in _Debounce: [wreg+status,2+status,0]
  8706                           	line	63
  8707                           	
  8708  0F68                     i1l11225:	
  8709                           ;HMI.c: 63: if(!RB2)
  8710  0F68  1283               	bcf	status, 5	;RP0=0, select bank0
  8711  0F69  1303               	bcf	status, 6	;RP1=0, select bank0
  8712  0F6A  1906               	btfsc	(50/8),(50)&7
  8713  0F6B  2F6D               	goto	u476_21
  8714  0F6C  2F6E               	goto	u476_20
  8715  0F6D                     u476_21:
  8716  0F6D  2F82               	goto	i1l5221
  8717  0F6E                     u476_20:
  8718                           	line	65
  8719                           	
  8720  0F6E                     i1l11227:	
  8721                           ;HMI.c: 64: {
  8722                           ;HMI.c: 65: UpDebounceCount++;
  8723  0F6E  3001               	movlw	(01h)
  8724  0F6F  00F2               	movwf	(??_Debounce+0)+0
  8725  0F70  0872               	movf	(??_Debounce+0)+0,w
  8726  0F71  1683               	bsf	status, 5	;RP0=1, select bank1
  8727  0F72  1303               	bcf	status, 6	;RP1=0, select bank1
  8728  0F73  07D7               	addwf	(_UpDebounceCount)^080h,f	;volatile
  8729                           	line	66
  8730                           	
  8731  0F74                     i1l11229:	
  8732                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
  8733  0F74  300A               	movlw	(0Ah)
  8734  0F75  0257               	subwf	(_UpDebounceCount)^080h,w	;volatile
  8735  0F76  1C03               	skipc
  8736  0F77  2F79               	goto	u477_21
  8737  0F78  2F7A               	goto	u477_20
  8738  0F79                     u477_21:
  8739  0F79  2F86               	goto	i1l5223
  8740  0F7A                     u477_20:
  8741                           	
  8742  0F7A                     i1l11231:	
  8743  0F7A  1EF1               	btfss	(_UpReleased/8),(_UpReleased)&7
  8744  0F7B  2F7D               	goto	u478_21
  8745  0F7C  2F7E               	goto	u478_20
  8746  0F7D                     u478_21:
  8747  0F7D  2F86               	goto	i1l5223
  8748  0F7E                     u478_20:
  8749                           	line	68
  8750                           	
  8751  0F7E                     i1l11233:	
  8752                           ;HMI.c: 67: {
  8753                           ;HMI.c: 68: UpPressed = 1;
  8754  0F7E  1671               	bsf	(_UpPressed/8),(_UpPressed)&7
  8755                           	line	69
  8756                           ;HMI.c: 69: UpReleased = 0;
  8757  0F7F  12F1               	bcf	(_UpReleased/8),(_UpReleased)&7
  8758  0F80  2F86               	goto	i1l5223
  8759                           	line	70
  8760                           	
  8761  0F81                     i1l5222:	
  8762                           	line	71
  8763                           ;HMI.c: 70: }
  8764                           ;HMI.c: 71: }
  8765  0F81  2F86               	goto	i1l5223
  8766                           	line	72
  8767                           	
  8768  0F82                     i1l5221:	
  8769                           	line	74
  8770                           ;HMI.c: 72: else
  8771                           ;HMI.c: 73: {
  8772                           ;HMI.c: 74: UpDebounceCount = 0;
  8773  0F82  1683               	bsf	status, 5	;RP0=1, select bank1
  8774  0F83  1303               	bcf	status, 6	;RP1=0, select bank1
  8775  0F84  01D7               	clrf	(_UpDebounceCount)^080h	;volatile
  8776                           	line	75
  8777                           ;HMI.c: 75: UpReleased = 1;
  8778  0F85  16F1               	bsf	(_UpReleased/8),(_UpReleased)&7
  8779                           	line	76
  8780                           	
  8781  0F86                     i1l5223:	
  8782                           	line	79
  8783                           ;HMI.c: 76: }
  8784                           ;HMI.c: 79: if(!RB3)
  8785  0F86  1283               	bcf	status, 5	;RP0=0, select bank0
  8786  0F87  1303               	bcf	status, 6	;RP1=0, select bank0
  8787  0F88  1986               	btfsc	(51/8),(51)&7
  8788  0F89  2F8B               	goto	u479_21
  8789  0F8A  2F8C               	goto	u479_20
  8790  0F8B                     u479_21:
  8791  0F8B  2FA0               	goto	i1l5224
  8792  0F8C                     u479_20:
  8793                           	line	81
  8794                           	
  8795  0F8C                     i1l11235:	
  8796                           ;HMI.c: 80: {
  8797                           ;HMI.c: 81: DownDebounceCount++;
  8798  0F8C  3001               	movlw	(01h)
  8799  0F8D  00F2               	movwf	(??_Debounce+0)+0
  8800  0F8E  0872               	movf	(??_Debounce+0)+0,w
  8801  0F8F  1683               	bsf	status, 5	;RP0=1, select bank1
  8802  0F90  1303               	bcf	status, 6	;RP1=0, select bank1
  8803  0F91  07D3               	addwf	(_DownDebounceCount)^080h,f	;volatile
  8804                           	line	82
  8805                           	
  8806  0F92                     i1l11237:	
  8807                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
  8808  0F92  300A               	movlw	(0Ah)
  8809  0F93  0253               	subwf	(_DownDebounceCount)^080h,w	;volatile
  8810  0F94  1C03               	skipc
  8811  0F95  2F97               	goto	u480_21
  8812  0F96  2F98               	goto	u480_20
  8813  0F97                     u480_21:
  8814  0F97  2FA4               	goto	i1l5226
  8815  0F98                     u480_20:
  8816                           	
  8817  0F98                     i1l11239:	
  8818  0F98  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
  8819  0F99  2F9B               	goto	u481_21
  8820  0F9A  2F9C               	goto	u481_20
  8821  0F9B                     u481_21:
  8822  0F9B  2FA4               	goto	i1l5226
  8823  0F9C                     u481_20:
  8824                           	line	84
  8825                           	
  8826  0F9C                     i1l11241:	
  8827                           ;HMI.c: 83: {
  8828                           ;HMI.c: 84: DownPressed = 1;
  8829  0F9C  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
  8830                           	line	85
  8831                           ;HMI.c: 85: DownReleased = 0;
  8832  0F9D  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
  8833  0F9E  2FA4               	goto	i1l5226
  8834                           	line	86
  8835                           	
  8836  0F9F                     i1l5225:	
  8837                           	line	87
  8838                           ;HMI.c: 86: }
  8839                           ;HMI.c: 87: }
  8840  0F9F  2FA4               	goto	i1l5226
  8841                           	line	88
  8842                           	
  8843  0FA0                     i1l5224:	
  8844                           	line	90
  8845                           ;HMI.c: 88: else
  8846                           ;HMI.c: 89: {
  8847                           ;HMI.c: 90: DownDebounceCount = 0;
  8848  0FA0  1683               	bsf	status, 5	;RP0=1, select bank1
  8849  0FA1  1303               	bcf	status, 6	;RP1=0, select bank1
  8850  0FA2  01D3               	clrf	(_DownDebounceCount)^080h	;volatile
  8851                           	line	91
  8852                           ;HMI.c: 91: DownReleased = 1;
  8853  0FA3  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
  8854                           	line	92
  8855                           	
  8856  0FA4                     i1l5226:	
  8857                           	line	94
  8858                           ;HMI.c: 92: }
  8859                           ;HMI.c: 94: if(!RB4)
  8860  0FA4  1283               	bcf	status, 5	;RP0=0, select bank0
  8861  0FA5  1303               	bcf	status, 6	;RP1=0, select bank0
  8862  0FA6  1A06               	btfsc	(52/8),(52)&7
  8863  0FA7  2FA9               	goto	u482_21
  8864  0FA8  2FAA               	goto	u482_20
  8865  0FA9                     u482_21:
  8866  0FA9  2FBE               	goto	i1l5227
  8867  0FAA                     u482_20:
  8868                           	line	96
  8869                           	
  8870  0FAA                     i1l11243:	
  8871                           ;HMI.c: 95: {
  8872                           ;HMI.c: 96: LeftDebounceCount++;
  8873  0FAA  3001               	movlw	(01h)
  8874  0FAB  00F2               	movwf	(??_Debounce+0)+0
  8875  0FAC  0872               	movf	(??_Debounce+0)+0,w
  8876  0FAD  1683               	bsf	status, 5	;RP0=1, select bank1
  8877  0FAE  1303               	bcf	status, 6	;RP1=0, select bank1
  8878  0FAF  07D4               	addwf	(_LeftDebounceCount)^080h,f	;volatile
  8879                           	line	97
  8880                           	
  8881  0FB0                     i1l11245:	
  8882                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
  8883  0FB0  300A               	movlw	(0Ah)
  8884  0FB1  0254               	subwf	(_LeftDebounceCount)^080h,w	;volatile
  8885  0FB2  1C03               	skipc
  8886  0FB3  2FB5               	goto	u483_21
  8887  0FB4  2FB6               	goto	u483_20
  8888  0FB5                     u483_21:
  8889  0FB5  2FC2               	goto	i1l5229
  8890  0FB6                     u483_20:
  8891                           	
  8892  0FB6                     i1l11247:	
  8893  0FB6  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
  8894  0FB7  2FB9               	goto	u484_21
  8895  0FB8  2FBA               	goto	u484_20
  8896  0FB9                     u484_21:
  8897  0FB9  2FC2               	goto	i1l5229
  8898  0FBA                     u484_20:
  8899                           	line	99
  8900                           	
  8901  0FBA                     i1l11249:	
  8902                           ;HMI.c: 98: {
  8903                           ;HMI.c: 99: LeftPressed = 1;
  8904  0FBA  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
  8905                           	line	100
  8906                           ;HMI.c: 100: LeftReleased = 0;
  8907  0FBB  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
  8908  0FBC  2FC2               	goto	i1l5229
  8909                           	line	101
  8910                           	
  8911  0FBD                     i1l5228:	
  8912                           	line	102
  8913                           ;HMI.c: 101: }
  8914                           ;HMI.c: 102: }
  8915  0FBD  2FC2               	goto	i1l5229
  8916                           	line	103
  8917                           	
  8918  0FBE                     i1l5227:	
  8919                           	line	105
  8920                           ;HMI.c: 103: else
  8921                           ;HMI.c: 104: {
  8922                           ;HMI.c: 105: LeftDebounceCount = 0;
  8923  0FBE  1683               	bsf	status, 5	;RP0=1, select bank1
  8924  0FBF  1303               	bcf	status, 6	;RP1=0, select bank1
  8925  0FC0  01D4               	clrf	(_LeftDebounceCount)^080h	;volatile
  8926                           	line	106
  8927                           ;HMI.c: 106: LeftReleased = 1;
  8928  0FC1  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
  8929                           	line	107
  8930                           	
  8931  0FC2                     i1l5229:	
  8932                           	line	109
  8933                           ;HMI.c: 107: }
  8934                           ;HMI.c: 109: if(!RB5)
  8935  0FC2  1283               	bcf	status, 5	;RP0=0, select bank0
  8936  0FC3  1303               	bcf	status, 6	;RP1=0, select bank0
  8937  0FC4  1A86               	btfsc	(53/8),(53)&7
  8938  0FC5  2FC7               	goto	u485_21
  8939  0FC6  2FC8               	goto	u485_20
  8940  0FC7                     u485_21:
  8941  0FC7  2FDC               	goto	i1l5230
  8942  0FC8                     u485_20:
  8943                           	line	111
  8944                           	
  8945  0FC8                     i1l11251:	
  8946                           ;HMI.c: 110: {
  8947                           ;HMI.c: 111: RightDebounceCount++;
  8948  0FC8  3001               	movlw	(01h)
  8949  0FC9  00F2               	movwf	(??_Debounce+0)+0
  8950  0FCA  0872               	movf	(??_Debounce+0)+0,w
  8951  0FCB  1683               	bsf	status, 5	;RP0=1, select bank1
  8952  0FCC  1303               	bcf	status, 6	;RP1=0, select bank1
  8953  0FCD  07D5               	addwf	(_RightDebounceCount)^080h,f	;volatile
  8954                           	line	112
  8955                           	
  8956  0FCE                     i1l11253:	
  8957                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
  8958  0FCE  300A               	movlw	(0Ah)
  8959  0FCF  0255               	subwf	(_RightDebounceCount)^080h,w	;volatile
  8960  0FD0  1C03               	skipc
  8961  0FD1  2FD3               	goto	u486_21
  8962  0FD2  2FD4               	goto	u486_20
  8963  0FD3                     u486_21:
  8964  0FD3  2FE0               	goto	i1l5232
  8965  0FD4                     u486_20:
  8966                           	
  8967  0FD4                     i1l11255:	
  8968  0FD4  1DF1               	btfss	(_RightReleased/8),(_RightReleased)&7
  8969  0FD5  2FD7               	goto	u487_21
  8970  0FD6  2FD8               	goto	u487_20
  8971  0FD7                     u487_21:
  8972  0FD7  2FE0               	goto	i1l5232
  8973  0FD8                     u487_20:
  8974                           	line	114
  8975                           	
  8976  0FD8                     i1l11257:	
  8977                           ;HMI.c: 113: {
  8978                           ;HMI.c: 114: RightPressed = 1;
  8979  0FD8  1571               	bsf	(_RightPressed/8),(_RightPressed)&7
  8980                           	line	115
  8981                           ;HMI.c: 115: RightReleased = 0;
  8982  0FD9  11F1               	bcf	(_RightReleased/8),(_RightReleased)&7
  8983  0FDA  2FE0               	goto	i1l5232
  8984                           	line	116
  8985                           	
  8986  0FDB                     i1l5231:	
  8987                           	line	117
  8988                           ;HMI.c: 116: }
  8989                           ;HMI.c: 117: }
  8990  0FDB  2FE0               	goto	i1l5232
  8991                           	line	118
  8992                           	
  8993  0FDC                     i1l5230:	
  8994                           	line	120
  8995                           ;HMI.c: 118: else
  8996                           ;HMI.c: 119: {
  8997                           ;HMI.c: 120: RightDebounceCount = 0;
  8998  0FDC  1683               	bsf	status, 5	;RP0=1, select bank1
  8999  0FDD  1303               	bcf	status, 6	;RP1=0, select bank1
  9000  0FDE  01D5               	clrf	(_RightDebounceCount)^080h	;volatile
  9001                           	line	121
  9002                           ;HMI.c: 121: RightReleased = 1;
  9003  0FDF  15F1               	bsf	(_RightReleased/8),(_RightReleased)&7
  9004                           	line	122
  9005                           	
  9006  0FE0                     i1l5232:	
  9007                           	line	124
  9008                           ;HMI.c: 122: }
  9009                           ;HMI.c: 124: if(!RB6)
  9010  0FE0  1283               	bcf	status, 5	;RP0=0, select bank0
  9011  0FE1  1303               	bcf	status, 6	;RP1=0, select bank0
  9012  0FE2  1B06               	btfsc	(54/8),(54)&7
  9013  0FE3  2FE5               	goto	u488_21
  9014  0FE4  2FE6               	goto	u488_20
  9015  0FE5                     u488_21:
  9016  0FE5  2FFA               	goto	i1l5233
  9017  0FE6                     u488_20:
  9018                           	line	126
  9019                           	
  9020  0FE6                     i1l11259:	
  9021                           ;HMI.c: 125: {
  9022                           ;HMI.c: 126: CenterDebounceCount++;
  9023  0FE6  3001               	movlw	(01h)
  9024  0FE7  00F2               	movwf	(??_Debounce+0)+0
  9025  0FE8  0872               	movf	(??_Debounce+0)+0,w
  9026  0FE9  1683               	bsf	status, 5	;RP0=1, select bank1
  9027  0FEA  1303               	bcf	status, 6	;RP1=0, select bank1
  9028  0FEB  07D0               	addwf	(_CenterDebounceCount)^080h,f	;volatile
  9029                           	line	127
  9030                           	
  9031  0FEC                     i1l11261:	
  9032                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
  9033  0FEC  300A               	movlw	(0Ah)
  9034  0FED  0250               	subwf	(_CenterDebounceCount)^080h,w	;volatile
  9035  0FEE  1C03               	skipc
  9036  0FEF  2FF1               	goto	u489_21
  9037  0FF0  2FF2               	goto	u489_20
  9038  0FF1                     u489_21:
  9039  0FF1  2FFF               	goto	i1l5236
  9040  0FF2                     u489_20:
  9041                           	
  9042  0FF2                     i1l11263:	
  9043  0FF2  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
  9044  0FF3  2FF5               	goto	u490_21
  9045  0FF4  2FF6               	goto	u490_20
  9046  0FF5                     u490_21:
  9047  0FF5  2FFF               	goto	i1l5236
  9048  0FF6                     u490_20:
  9049                           	line	129
  9050                           	
  9051  0FF6                     i1l11265:	
  9052                           ;HMI.c: 128: {
  9053                           ;HMI.c: 129: CenterPressed = 1;
  9054  0FF6  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
  9055                           	line	130
  9056                           ;HMI.c: 130: CenterReleased = 0;
  9057  0FF7  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
  9058  0FF8  2FFF               	goto	i1l5236
  9059                           	line	131
  9060                           	
  9061  0FF9                     i1l5234:	
  9062                           	line	132
  9063                           ;HMI.c: 131: }
  9064                           ;HMI.c: 132: }
  9065  0FF9  2FFF               	goto	i1l5236
  9066                           	line	133
  9067                           	
  9068  0FFA                     i1l5233:	
  9069                           	line	135
  9070                           ;HMI.c: 133: else
  9071                           ;HMI.c: 134: {
  9072                           ;HMI.c: 135: CenterDebounceCount = 0;
  9073  0FFA  1683               	bsf	status, 5	;RP0=1, select bank1
  9074  0FFB  1303               	bcf	status, 6	;RP1=0, select bank1
  9075  0FFC  01D0               	clrf	(_CenterDebounceCount)^080h	;volatile
  9076                           	line	136
  9077                           ;HMI.c: 136: CenterReleased = 1;
  9078  0FFD  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
  9079  0FFE  2FFF               	goto	i1l5236
  9080                           	line	137
  9081                           	
  9082  0FFF                     i1l5235:	
  9083                           	line	138
  9084                           	
  9085  0FFF                     i1l5236:	
  9086  0FFF  0008               	return
  9087                           	opt stack 0
  9088                           GLOBAL	__end_of_Debounce
  9089  1000                     	__end_of_Debounce:
  9090 ;; =============== function _Debounce ends ============
  9091                           
  9092                           	signat	_Debounce,88
  9093                           psect	text1203,local,class=CODE,delta=2
  9094                           global __ptext1203
  9095  0000                     __ptext1203:
  9096                           	global	btemp
  9097  007E                     	btemp set 07Eh
  9098                           
  9099                           	DABS	1,126,2	;btemp
  9100                           	global	wtemp0
  9101  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Apr 29 10:34:00 2015

 __end_of_lcd_write_control 09C3             ??_UpdateDisplay 0045                           pc 0002  
                        _GO 00FA                          _RD 0C60                          _WR 0C61  
                        fsr 0004         ___wmul@multiplicand 0022                         l700 09D8  
                       l703 0A15                         l704 0A15                         l705 0A19  
                       l706 0A38                         l690 0B7C                         l691 0BA5  
                       l692 0B80                         l693 0B84                         l694 0B88  
                       l695 0B8C                         l696 0B90                         l689 0B94  
                       l697 0BB2                         _GIE 005F                         _RB0 0030  
                       _RC0 0038                         _RB2 0032                         _RC1 0039  
                       _RB3 0033                         _RC2 003A                         _RB4 0034  
                       _RB5 0035                         _RE0 0048                         _RB6 0036  
                       _RE1 0049                         _RE2 004A                         _RX9 00C6  
                       _TX9 04C6                         _pos 00C8                         fsr0 0004  
                       indf 0000                ___awmod@sign 0026             ?_lcd_set_cursor 0072  
                      l1402 0987                        l1410 0ABB                        l1411 0ABB  
                      l2211 0D7F                        l2220 0DD0                        l2212 0D8A  
                      l1405 07FE                        l2213 0DBB                        l2221 0DB9  
                      l2222 0DCF                        l2214 0D8B                        l2230 0CCA  
                      l2223 0DD0                        l2215 0DCE                        l2231 0CA1  
                      l1408 0AAA                        l2208 0B77                        l2216 0D8D  
                      l2232 0CA3                        l1409 0A91                        l2217 0D8F  
                      l2233 0CA5                        l2241 0DEF                        l2218 0D9F  
                      l2234 0CA7                        l2226 0C93                        l2242 0E47  
                      l2250 040E                        l2219 0DAD                        l2235 0CCC  
                      l2227 0C9E                        l2243 0E0D                        l2251 03D7  
                      l2228 0CB7                        l2236 0CB5                        l2244 0E24  
                      l2260 04B6                        l2252 0421                        l1429 0A63  
                      l2237 0CCB                        l2229 0C9F                        l2245 0E53  
                      l2261 0428                        l2253 03E1                        l2238 0CCC  
                      l2262 044B                        l2254 03EB                        l2263 0466  
                      l2255 03F5                        l2264 0497                        l2256 03FF  
                      l2248 03BF                        l2265 0498                        l2257 040C  
                      l2249 03D6                        l2258 04A0                        l2266 049E  
                      l2267 04BD                        l2259 0422                        l2268 04BE  
                      l2269 04BE                        l1399 09C2                        l4440 09F3  
                      l4441 09FC                        l4442 0A0F                        l5250 0C42  
                      l5251 0C43                        l5252 0C54                        l5253 0C55  
                      l5254 0C67                        l5262 03A3                        l5270 03B0  
                      l4439 09F4                        l5247 0C6F                        l5255 0C68  
                      l5263 0251                        l4464 0AE9                        l5256 0C83  
                      l5248 0C41                        l5264 02B0                        l5249 0C81  
                      l5257 0C6D                        l5265 02C3                        l3690 09A8  
                      l5266 03B0                        l3691 09AE                        l5267 030B  
                      l2980 0063                        l5268 0378                        l2972 07B4  
                      l2981 0237                        l5269 03A1                        l2973 07D5  
                      l3694 0D2D                        l2990 01E4                        l2982 00B0  
                      l2974 07F3                        l3695 0D34                        l2983 0236  
                      l2991 0232                        l3688 09A3                        l3696 0D51  
                      l2992 0231                        l2984 00FD                        l3689 09A3  
                      l3697 0D3B                        l2985 0235                        l2993 0237  
                      l2977 09EE                        l3698 0D5B                        l2986 014A  
                      l3699 0D6C                        l2987 0234                        l2988 0197  
                      l2989 0233                        l7450 0CE7                        l6730 0E89  
                      l7443 0A69                        l7451 0CDB                        l6731 0EA7  
                      l7444 0A73                        l7452 0CEC                        l7460 0C0F  
                      l6716 0967                        l6732 0EDB                        l7445 0A88  
                      l7453 0CED                        l7461 0C03                        l6725 0F15  
                      l6741 05A7                        l7446 0A8F                        l7454 0D06  
                      l7462 0C14                        l6726 0F33                        l6750 04E0  
                      l6742 04C9                        l7455 0D14                        l7463 0C15  
                      l6727 0F67                        l6751 0511                        l6743 04DB  
                      l7456 0D1C                        l7464 0C26                        l6760 05C0  
                      l6752 051C                        l6744 04E2                        l7449 0D15  
                      l7465 0C34                        l6753 0544                        l6745 04DD  
                      l7466 0C3C                        l6746 05BB                        l6754 0539  
                      l7459 0C35                        l7651 069E                        l6755 0556  
                      l6747 04DE                        l7660 06EE                        l7652 06A8  
                      l6756 059B                        l6748 04DF                        l7661 06F5  
                      l7653 06E4                        l6757 055B                        l6749 04F7  
                      l7654 06BE                        l6758 05A6                        l7655 06B2  
                      l6759 05BA                        l7656 06C3                        l7657 06C4  
                      l7658 06D5                        l7659 06E3                        _CHS0 00FB  
                      _CHS1 00FC                        _CHS2 00FD                        STR_1 0754  
                      STR_2 074B                        STR_3 0766                        STR_4 076F  
                      STR_5 075D                        STR_6 0742                        STR_7 0793  
                      STR_8 0797                        STR_9 077F                        _BRGH 04C2  
                      _CREN 00C4                        u4000 0C13                        u4001 0C12  
                      u4010 0C1F                        u4011 0C1E                        u4030 0C33  
                      u4110 06E2                        u4031 0C32                        u4015 0C1B  
                      u4111 06E1                        u4120 06E8                        u4040 0695  
                      u4200 0D5B                        u4025 0C27                        u4105 06D6  
                      u4041 0694                        u4201 0D5A                        u4050 06A2  
                      u4210 0EF6                        u4051 06A1                        u4211 0EF5  
                      u4060 06AE                        u4220 0E6A                        u4300 0110  
                      u4061 06AD                        u4205 0D57                        u4221 0E69  
                      u4301 010F                        u4310 0154                        u4230 0020  
                      u4311 0153                        u4231 001F                        u5007 046E  
                      u3360 0A19                        u4080 06C2                        u4320 015D  
                      u4240 0029                        u4400 0537                        u3361 0A18  
                      u4081 06C1                        u5017 0D44                        u4321 015C  
                      u4241 0028                        u4401 0536                        u4090 06CE  
                      u4330 01A1                        u4250 006D                        u4410 0543  
                      u4091 06CD                        u4075 06B3                        u5027 0983  
                      u4331 01A0                        u4251 006C                        u4411 0542  
                      u4340 01AA                        u4260 0076                        u4420 054A  
                      u4500 0D83                        u5037 09BD                        u4341 01A9  
                      u4261 0075                        u4421 0549                        u4405 0533  
                      u4501 0D82                        u4190 0D26                        u4350 01EE  
                      u4270 00BA                        u4430 05A5                        u4510 0C97  
                      u3375 0A26                        u4095 06CA                        u5047 09D6  
                      u4191 0D25                        u4351 01ED                        u4271 00B9  
                      u4431 05A4                        u4511 0C96                        u3560 09FC  
                      u4360 01F7                        u4280 00C3                        u4440 05B9  
                      u4520 0DED                        u3561 09FB                        u5057 0BA7  
                      u4361 01F6                        u4281 00C2                        u4441 05B8  
                      u4521 0DEC                        u3570 0C4F                        u4290 0107  
                      u4370 04CF                        u4450 0ABA                        u4530 0E00  
                      u3571 0C4E                        u4291 0106                        u4371 04CE  
                      u4451 0AB9                        u4531 0DFF                        _PEIE 005E  
                      u3580 0C64                        u3900 0A87                        u4380 0507  
                      u4460 0242                        u4540 0E1D                        u3581 0C63  
                      u3901 0A86                        u4381 0506                        u4541 0E1C  
                      u4525 0DE9                        u3590 09A7                        u3910 0CD7  
                      u4390 051A                        u4470 029D                        u4550 0E47  
                      u3591 09A6                        u3911 0CD6                        u4391 0519  
                      u4471 029C                        u4551 0E46                        u4535 0DFC  
                      u4480 07B2                        u4481 07B1                        u3930 0CEB  
                      u4490 07D4                        u3931 0CEA                        u4475 0299  
                      u4491 07D3                        u4555 0E43                        _RCIE 0465  
                      _RCIF 0065                        u3925 0CDC                        u4485 07AE  
                      u3870 0A6D                        u3950 0CFE                        u3871 0A6C  
                      u3951 0CFD                        u4495 07D0                        u3945 0CEE  
                      u3970 0D13                        u3971 0D12                        u3955 0CFA  
                      u3980 0BFF                        u3885 0A74                        u3965 0D07  
                      u3981 0BFE                        u3895 0A7B                        u4970 03C6  
                      _OERR 00C1                        u3995 0C04                        u4971 03C5  
                      u4980 03CA                        u4981 03C9                        u4997 0453  
                      _TMR0 0001                  _ChargeMode 0C84                        _SPEN 00C7  
                      _TXIE 0464                        _WREN 0C62                        _TXEN 04C5  
                      _TXIF 0064                        _SYNC 04C4         __size_of_ADCconvert 0223  
                      _Menu 0C3D      __end_of_lcd_write_data 0988                        _isr1 05C1  
                      _main 03B1                        _init 0B48                        _test 00CA  
                      btemp 007E              _CenterReleased 0381                        start 0012  
             ??_ReadButtons 0073                       ?_Menu 0072                       l11001 0E4A  
                     l10131 0A38                       l10123 0A10                       l11003 0E53  
                     l10125 0A13                       l10301 0C6E                       l10127 0A1C  
                     l10303 0C6F                       l10311 09A0                       l10129 0A2F  
                     l10305 0C81                       l10313 09A8                       l10307 0C83  
                     l10315 09AC                       l10317 09AE                       l10309 099E  
                     l10501 0CCD                       l11301 0B6B                       l10511 0CE7  
                     l10503 0CD1                       l11311 0B76                       l11303 0B6F  
                     l10281 0A0B                       l10273 09F2                       l10521 0D0D  
                     l10513 0CED                       l10505 0CD7                       l11305 0B73  
                     l11321 03C6                       l11313 03B1                       l11171 0ABF  
                     l10283 0A0E                       l10275 09F4                       l10291 0C4F  
                     l10515 0CFE                       l10507 0CDB                       l10523 0D15  
                     l10531 0C03                       l10611 0B93                       l11307 0B74  
                     l11331 03E1                       l11323 03CA                       l11315 03B7  
                     l11181 0ACE                       l11173 0AC7                       l10277 09FD  
                     l10293 0C55                       l10285 0C40                       l10525 0D1C  
                     l10517 0D04                       l10509 0CE2                       l10541 0C26  
                     l10533 0C0A                       l10613 0B94                       l10605 0B7B  
                     l10621 09C3                       l10701 0029                       l11309 0B75  
                     l11341 03FB                       l11333 03E7                       l11325 03CB  
                     l11317 03B9                       l11191 0AD9                       l11183 0AD1  
                     l11175 0AC8                       l10279 0A05                       l10295 0C64  
                     l10287 0C43                       l10519 0D06                       l10543 0C2D  
                     l10535 0C0F                       l10527 0BF7                       l10551 0695  
                     l10607 0B90                       l10615 0BA5                       l10623 09C6  
                     l10631 09B2                       l10711 00BA                       l10703 0063  
                     l11351 0422                       l11343 03FF                       l11335 03EB  
                     l11327 03D7                       l11319 03BF                       l11193 0ADA  
                     l11185 0AD4                       l11177 0ACA                       l11169 0ABC  
                     l10297 0C68                       l10289 0C4B                       l10537 0C15  
                     l10529 0BFF                       l10545 0C35                       l10561 06B2  
                     l10553 069E                       l10617 0BA9                       l10609 0B92  
                     l10625 09CA                       l10633 09B5                       l10641 097B  
                     l10721 014A                       l10713 00C3                       l10705 006D  
                     l10801 0A90                       l11361 0466                       l11353 0428  
                     l11345 040A                       l11337 03F1                       l11329 03DD  
                     l11187 0AD5                       l11179 0ACB                       l10299 0C6C  
                     l10491 0A69                       l10547 0C3C                       l10539 0C1F  
                     l10571 06D5                       l10563 06B9                       l10555 06A2  
                     l10619 0BB2                       l10627 09CE                       l10635 09B7  
                     l10643 097D                       l10651 0D21                       l10731 01AA  
                     l10723 0154                       l10715 00FD                       l10707 0076  
                     l10803 0A91                       l10811 0A3D                       l11291 0B49  
                     l11371 049F                       l11363 0475                       l11355 0435  
                     l11347 040D                       l11339 03F5                       l11189 0AD8  
                     l10493 0A6D                       l10581 06F5                       l10573 06DC  
                     l10565 06BE                       l10557 06A8                       l10549 068E  
                     l10629 09D2                       l10637 09B8                       l10645 097E  
                     l10661 0D38                       l10653 0D26                       l10733 01E4  
                     l10725 015D                       l10717 0107                       l10709 00B0  
                     l10741 04C9                       l10805 0AA1                       l10821 0A4B  
                     l10813 0A40                       l11293 0B58                       l10901 03A2  
                     l11365 0480                       l11357 044B                       l11373 04A0  
                     l11349 040E                       l10495 0A7A                       l10567 06C4  
                     l10559 06AE                       l10575 06E4                       l10639 0978  
                     l10647 095B                       l10671 0D67                       l10663 0D40  
                     l10655 0D2D                       l10735 01EE                       l10727 0197  
                     l10719 0110                       l10751 04F7                       l10743 04CF  
                     l10807 0AAA                       l10823 0A51                       l10815 0A41  
                     l10831 09E7                       l11295 0B5D                       l10903 03A3  
                     l10911 07B4                       l11367 048B                       l11359 045A  
                     l11375 04B6                       l10497 0A88                       l10489 0A64  
                     l10577 06E8                       l10569 06CE                       l10673 0D68  
                     l10665 0D5D                       l10657 0D34                       l10649 0D1D  
                     l10681 0EF0                       l10737 01F7                       l10729 01A1  
                     l10761 0511                       l10753 04FF                       l10745 04D6  
                     l10825 0A57                       l10817 0A44                       l10809 0A39  
                     l10833 09EE                       l11297 0B61                       l11289 0B48  
                     l10913 07C1                       l10905 079F                       l10921 0D72  
                     l11369 0498                       l10499 0A8F                       l10579 06EE  
                     l10675 0D69                       l10667 0D63                       l10659 0D37  
                     l10683 0EF6                       l10691 0E64                       l10771 0539  
                     l10763 0514                       l10755 0503                       l10747 04E1  
                     l10739 04C4                       l10827 0A5D                       l10819 0A45  
                     l11299 0B69                       l10915 07C7                       l10907 07A5  
                     l10931 0D9B                       l10923 0D7F                       l10669 0D66  
                     l10685 0F15                       l10677 0EDC                       l10693 0E6A  
                     l10781 0556                       l10773 053D                       l10765 051B  
                     l10757 0507                       l10749 04E2                       l10829 09D9  
                     l10861 0251                       l10909 07B3                       l10917 07D5  
                     l10941 0DB4                       l10933 0D9F                       l10925 0D83  
                     l10679 0EE0                       l10695 0E89                       l10687 0E54  
                     l10783 055B                       l10775 0544                       l10767 051C  
                     l10759 050B                       l10791 05A7                       l10871 029D  
                     l10863 0257                       l10943 0DB8                       l10935 0DA9  
                     l10927 0D84                       l10919 0D6D                       l10951 0C8C  
                     l10689 0E5C                       l10697 0015                       l10785 058F  
                     l10777 054A                       l10769 0538                       l10793 05BB  
                     l10881 030B                       l10873 02B0                       l10865 0277  
                     l10945 0DBA                       l10937 0DAD                       l10929 0D8F  
                     l10961 0CAD                       l10953 0C93                       l10699 0020  
                     l10795 05C0                       l10787 0596                       l10779 0551  
                     l10891 035B                       l10883 0311                       l10875 02C3  
                     l10867 0288                       l10859 0238                       l10939 0DB1  
                     l10947 0DBB                       l10963 0CB0                       l10955 0C97  
                     l10971 0DD1                       l10789 059B                       l10797 07F7  
                     l10893 0366                       l10885 0333                       l10877 02C9  
                     l10869 028E                       l10965 0CB4                       l10957 0C98  
                     l10949 0C84                       l10981 0DEF                       l10973 0DD7  
                     l10799 07F8                       l10895 0378                       l10887 0344  
                     l10879 02E0                       l10967 0CB6                       l10959 0CA7  
                     l10991 0E1D                       l10983 0DF4                       l10975 0DDC  
                     l10897 0384                       l10889 034A                       l10969 0CB7  
                     l10993 0E1E                       l10985 0E00                       l10977 0DE0  
                     l10899 038F                       l10995 0E24                       l10987 0E0D  
                     l10979 0DEE                       l10997 0E32                       l10989 0E19  
      __size_of_calibrateIR 0064                       l10999 0E3A                       ?_isr1 0072  
                     ?_main 0072                       ?_init 0072                       _EEADR 010D  
                     STR_10 078B                       STR_11 079B                       STR_12 078F  
                     STR_13 072A                       STR_14 072A                       STR_15 0783  
                     STR_16 0777                       STR_17 0787                       STR_18 071A  
                     STR_19 0739             __end_of___awmod 06F6                       _CARRY 0018  
           __end_of___lwdiv 0D1D             __end_of___lwmod 0C3D                       _RCREG 001A  
                     _SPBRG 0099                       _PORTA 0005                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
    lcd_write_data@databyte 0022          i1___lwmod@dividend 0074             __end_of_scan360 0E54  
                     _total 00CC              __pbitbssCOMMON 0380                       pclath 000A  
               _turnlowByte 00E1             ?_lcd_write_data 0072           ?_adc_read_channel 0072  
                     status 0003                       wtemp0 007E             __end_of_sprintf 05C1  
          __end_of_Debounce 1000          __size_ofi1___lwmod 0044          ??_adc_read_channel 0026  
          ?_readAvgDistance 0072                __end_of_Menu 0C84  __size_of_lcd_write_control 0014  
          _shortMenuStrings 00E8                __end_of_isr1 068E                __end_of_main 04C1  
              __end_of_init 0B78             rotate@direction 0025                      ??_Menu 0020  
             ?_readDistance 0028      readAvgDistance@fullval 0030                      ??_isr1 0078  
                    ??_main 0062                      ??_init 0023         __end_of_ReadButtons 0B48  
                    _ADCON0 001F                      _ADCON1 009F                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _EECON1 018C  
                    _EECON2 018D            __end_of_adc_read 0A39                 ?_ChargeMode 0072  
                    i1l2200 0637                      i1l2201 0649                      i1l2202 065C  
                    i1l2203 0682                      i1l2204 0681                      i1l2205 0682  
                    i1l2196 064A                      i1l2197 05E6                      i1l2198 05FF  
                    i1l2199 0618                      i1l5221 0F82                      i1l5230 0FDC  
                    i1l5222 0F81                      i1l5231 0FDB                      i1l5223 0F86  
                    i1l5232 0FE0                      i1l5224 0FA0                      i1l5240 0B47  
                    i1l5233 0FFA                      i1l5225 0F9F                      i1l5241 0B2D  
                    i1l5234 0FF9                      i1l5226 0FA4                      i1l5242 0B35  
                    i1l5235 0FFF                      i1l5227 0FBE                      i1l5243 0B3D  
                    i1l5236 0FFF                      i1l5228 0FBD                      i1l5244 0B45  
                    i1l5229 0FC2                      i1l5239 0B25                      i1l7460 0BC9  
                    i1l7461 0BBD                      i1l7462 0BCE                      i1l7463 0BCF  
                    i1l7464 0BE0                      i1l7465 0BEE                      i1l7466 0BF6  
                    i1l7459 0BEF                      u460_20 05FD                      u460_21 05FC  
                    u461_20 0616                      u461_21 0615                      u470_20 0B31  
                    u462_20 062F                      u470_21 0B30                      u462_21 062E  
               _DistLowByte 00D2                      u471_20 0B39                      u463_20 063E  
                    u471_21 0B38                      u463_21 063D                      u480_20 0F98  
                    u472_20 0B41                      u464_20 064E                      u480_21 0F97  
                    u472_21 0B40                      u464_21 064D                      u481_20 0F9C  
                    u465_20 0661                      u481_21 0F9B                      u465_21 0660  
                    u490_20 0FF6                      u482_20 0FAA                      u466_20 0667  
                    u458_20 05C5                      u490_21 0FF5                      u482_21 0FA9  
                    u466_21 0666                      u458_21 05C4                      u483_20 0FB6  
                    u491_20 0BB9                      u467_20 067D                      u459_20 05E4  
                    u483_21 0FB5                      u491_21 0BB8                      u467_21 067C  
                    u459_21 05E3                      u484_20 0FBA                      u476_20 0F6E  
                    u468_20 0B21                      u484_21 0FB9                      u476_21 0F6D  
                    u468_21 0B20                      u492_25 0BBE                      u485_20 0FC8  
                    u477_20 0F7A                      u493_20 0BCD                      u469_20 0B29  
                    u485_21 0FC7                      u477_21 0F79                      u493_21 0BCC  
                    u469_21 0B28                      u486_20 0FD4                      u478_20 0F7E  
                    u494_20 0BD9                      u486_21 0FD3                      u478_21 0F7D  
                    u494_21 0BD8                      u494_25 0BD5                      u487_20 0FD8  
                    u479_20 0F8C                      u487_21 0FD7                      u479_21 0F8B  
                    u495_25 0BE1                      u488_20 0FE6                      u496_20 0BED  
                    u488_21 0FE5                      u496_21 0BEC                      u489_20 0FF2  
                    u489_21 0FF1                      _TMR0IE 005D                      _TMR0IF 005A  
              scan360@steps 0060                      _SSPCON 0014                      _SSPBUF 0013  
                _UpReleased 038D            __end_of_lcd_init 0A64                      _adcVal 006A  
           _UpDebounceCount 00D7                      ___wmul 0A64                   ??___awmod 0024  
              _turnhighByte 00E0                ??_ADCconvert 002E                   ??___lwdiv 002A  
                 ??___lwmod 0032            __end_of_init_adc 09D9              ??_readDistance 002A  
           ___awmod@divisor 0020    __end_of_lcd_write_string 0ABC             ___awmod@counter 0025  
                    _rotate 0D1D                      _rxfifo 00A0                      clrloop 06F7  
                    _txfifo 00B0                      _rxiptr 00DC                      _rxoptr 00DD  
                    _txiptr 006D                   ??_scan360 005C                      _txoptr 006E  
          __end_of_ser_init 0AEA           __end_ofi1___lwmod 0BF7                      saved_w 007E  
             main@shortwall 0065                 _LeftPressed 0384                   ??_sprintf 0039  
               _DownPressed 0382           lcd_write_string@s 0027          __end_of_ADCconvert 0238  
            __pcstackCOMMON 0072                __pidataBANK1 0968                 _ReadButtons 0B18  
       __size_of_ChargeMode 0049            ??_lcd_set_cursor 0023                   ?_Debounce 0072  
             _buttonPressed 006C                  __pbssBANK0 0068                  __pbssBANK1 00A0  
                __pbssBANK3 0190           _DownDebounceCount 00D3          _RightDebounceCount 00D5  
                __pmaintext 03B1           robotTurn@distance 0022                     ?___wmul 0020  
                __pintentry 0004                _DistHighByte 00D1                  __ptext1200 0B18  
                __ptext1201 0BB3       __end_of_UpdateDisplay 03B1                  __ptext1202 0F68  
                __ptext1203 0000                  __ptext1170 0DD1                  __ptext1171 0C84  
                __ptext1180 04C1                  __ptext1172 0D6D                  __ptext1181 0015  
                __ptext1173 079F                  __ptext1190 068E                  __ptext1182 0E54  
                __ptext1174 0238                  __ptext1191 0BF7                  __ptext1183 0EDC  
                __ptext1175 0B48                  __ptext1192 0CCD                  __ptext1184 0D1D  
                __ptext1176 09D9                  __ptext1193 0A64                  __ptext1185 095B  
                __ptext1177 0A39                  __ptext1194 099B                  __ptext1186 0975  
                __ptext1178 0A90                  __ptext1195 0C3D                  __ptext1187 09AF  
                __ptext1179 07F4                  __ptext1196 09EF                  __ptext1188 09C3  
                __ptext1197 0ABC                  __ptext1189 0B78                  __ptext1198 0A10  
                __ptext1199 05C1                   ?_adc_read 0020                     ?_rotate 0023  
        __size_of_ser_putch 0021          __size_of_robo_init 000D                     i1l11101 0618  
                   i1l11111 063E                     i1l11103 062F                     i1l11121 0667  
                   i1l11105 0630                     i1l11113 064A                     i1l11131 0B18  
                   i1l11123 066F                     i1l11115 064E                     i1l11107 0634  
                   i1l11141 0B29                     i1l11133 0B1D                     i1l11125 0673  
                   i1l11117 065C                     i1l11109 0637          __size_of_robotMove 008C  
                   i1l11231 0F7A                     i1l11151 0B34                     i1l11143 0B2A  
                   i1l11135 0B21                     i1l11127 0677                     i1l11119 0661  
                   i1l11241 0F9C                     i1l11233 0F7E                     i1l11225 0F68  
                   i1l11161 0B42                     i1l11153 0B39                     i1l11145 0B2C  
                   i1l11137 0B22                     i1l11129 067D                     i1l11081 05C1  
                   i1l11251 0FC8                     i1l11243 0FAA                     i1l11235 0F8C  
                   i1l11227 0F6E                     i1l11163 0B44                     i1l11155 0B3A  
                   i1l11147 0B31                     i1l11139 0B24                     i1l11091 05E4  
                   i1l11083 05C5                     i1l11261 0FEC                     i1l11253 0FCE  
                   i1l11245 0FB0                     i1l11237 0F92                     i1l11229 0F74  
                   i1l11165 0B45                     i1l11157 0B3C                     i1l11149 0B32  
                   i1l11093 05E6                     i1l11085 05C6                     i1l11263 0FF2  
                   i1l11255 0FD4                     i1l11247 0FB6                     i1l11239 0F98  
                   i1l11271 0BBD                     i1l11167 0B47                     i1l11159 0B41  
                   i1l11095 05FD                     i1l11087 05CE                     i1l11265 0FF6  
                   i1l11257 0FD8                     i1l11249 0FBA                     i1l11281 0BE0  
                   i1l11273 0BC4                     i1l11097 05FF                     i1l11089 05CF  
                   i1l11259 0FE6                     i1l11283 0BE7                     i1l11275 0BC9  
                   i1l11267 0BB3                     i1l11099 0616                     i1l11277 0BCF  
                   i1l11269 0BB9                     i1l11285 0BEF                     i1l11287 0BF6  
                   i1l11279 0BD9          __size_of_robotTurn 0088                  ??_Debounce 0072  
          ??_lcd_write_data 0020                   ?_lcd_init 0072                     _SSPSTAT 0094  
      __end_of_readDistance 09EF                   ?_init_adc 0072                   ?_ser_init 0072  
             ??_calibrateIR 005A                     ___awmod 068E             __size_of___wmul 002C  
                   ___lwdiv 0CCD                     ___lwmod 0BF7   __size_of_adc_read_channel 003B  
                ??_adc_read 0022             __size_of_rotate 0050                     _scan360 0DD1  
                   _dpowers 0710            ___awmod@dividend 0022                     _lowByte 00DB  
                   _ser_tmp 00DE                     _sprintf 04C1                  ??_lcd_init 0023  
      end_of_initialization 0B14                ??_ChargeMode 005A                   _SCAN_FLAG 00D6  
                   init_ram 098C                  ??_init_adc 0020           __end_of_ser_putch 0A10  
         __end_of_robo_init 0968           __end_of_robotMove 0F68                _LeftReleased 0385  
         __end_of_robotTurn 0EDC                  ??_ser_init 0020                     rotate@i 0028  
              _DownReleased 0383               _RightReleased 038B    __size_of_readAvgDistance 0055  
         ?_lcd_write_string 0027          __end_of_ChargeMode 0CCD         __end_of_calibrateIR 0DD1  
        ??_lcd_write_string 0029                 AT25256A@CS0 0038                 AT25256A@CS1 0039  
         adc_read@adc_value 0024                   i1___lwmod 0BB3                  _totalSteps 00CE  
                main@choice 0067               ?_spi_transfer 0072                   Menu@input 0020  
             _CenterPressed 0380                ?_ReadButtons 0072              __end_of___wmul 0A90  
         i1___lwmod@divisor 0072               __pbitbssBANK0 0378           i1___lwmod@counter 0077  
            __end_of_rotate 0D6D         start_initialization 0AEA       __size_of_readDistance 0016  
         __size_of_Debounce 0098                  ?i1___lwmod 0072              ??_spi_transfer 0020  
     lcd_set_cursor@address 0023                   _UpPressed 038C              _RTC_FLAG_250MS 0387  
            _RTC_FLAG_500MS 0388                    ??___wmul 0024              rotate@numsteps 0023  
               _calibrateIR 0D6D                 __pdataBANK1 00E2            _adc_read_channel 0B78  
                  ??_rotate 0026                _readDistance 09D9           __size_of_adc_read 0029  
         ??_readAvgDistance 0030               __pcstackBANK0 0020           __size_of_lcd_init 002B  
               sprintf@_val 003F                 sprintf@flag 003D           robotMove@distance 0022  
               sprintf@prec 003E                _current_step 00EE            readAvgDistance@i 0032  
         __size_of_init_adc 0016            ___lwdiv@dividend 0028                    ?___awmod 0020  
         __size_of_ser_init 002E                    ?___lwdiv 0026                    ?___lwmod 002E  
                 __pstrings 0700                   _dist_high 00C2                    ?_scan360 005A  
       readDistance@fullval 002C            ___lwdiv@quotient 002B                 ??i1___lwmod 0076  
                  ?_sprintf 0034     __size_of_lcd_set_cursor 000B           interrupt_function 0004  
    __size_of_UpdateDisplay 0179              ___wmul@product 0024                  ser_putch@c 0021  
                 _ser_putch 09EF                   _robo_init 095B                   _robotMove 0EDC  
                 _robotTurn 0E54                _RightPressed 038A        __size_of_ReadButtons 0030  
      __end_of_spi_transfer 09AF                 __stringbase 070F           ___wmul@multiplier 0020  
    UpdateDisplay@adcOutput 004A            spi_transfer@data 0022            spi_transfer@temp 0021  
                  _Debounce 0F68           _LeftDebounceCount 00D4   __size_of_lcd_write_string 002C  
        scan360@lowestSteps 005E     __size_of_lcd_write_data 0013                  ?_ser_putch 0072  
   adc_read_channel@channel 0027               _RTC_FLAG_10MS 0386               _RTC_FLAG_50MS 0389  
                ?_robo_init 0072                   init_fetch 0988                  ?_robotMove 0022  
                ?_robotTurn 0022                  _ADCconvert 0015            __size_of___awmod 0068  
          __size_of___lwdiv 0050            __size_of___lwmod 0046               _UpdateDisplay 0238  
                  _adc_read 0A10                 _currentMenu 00D8            __size_of_scan360 0083  
           ___lwdiv@divisor 0026             ___lwdiv@counter 002D                 _menuStrings 00E2  
                  _highByte 00DA                    _lcd_init 0A39                    _distance 00C6  
                  _dist_low 00C4            __size_of_sprintf 0100    __end_of_adc_read_channel 0BB3  
 lcd_write_control@databyte 0022               __size_of_Menu 0047                    _init_adc 09C3  
             __size_of_isr1 00CD               __size_of_main 0110               __size_of_init 0030  
                  clear_ram 06F6                    _ser_init 0ABC             _readAvgDistance 079F  
              ?_calibrateIR 0072              ?_UpdateDisplay 0072         _CenterDebounceCount 00D0  
              _RTC_FLAG_1MS 0378          UpdateDisplay@F1230 0190                    intlevel1 0000  
            _lcd_set_cursor 07F4                   sprintf@ap 003C                   sprintf@sp 0043  
          ___lwmod@dividend 0030                   stringcode 070A                 _serialInput 00DF  
               ??_ser_putch 0020               _distTravelled 00C0                 ??_robo_init 0022  
     __size_of_spi_transfer 0014                 ??_robotMove 0024                 ??_robotTurn 0024  
               ?_ADCconvert 0072           _lcd_write_control 09AF            scan360@lowestVal 005C  
        ?_lcd_write_control 0072                  _OPTION_REG 0081                    sprintf@c 0044  
                  sprintf@f 0034             ___lwmod@divisor 002E             ___lwmod@counter 0033  
                  stringdir 070A                    stringtab 0700         ??_lcd_write_control 0020  
    __end_of_lcd_set_cursor 07FF            _lcd_write_string 0A90                _spi_transfer 099B  
         _current_direction 00D9                 _RTC_Counter 0068     __end_of_readAvgDistance 07F4  
            _lcd_write_data 0975  
