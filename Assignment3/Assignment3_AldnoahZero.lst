

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon May 04 13:32:40 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 35 "H:\Aldnoah.Zero-master\Assignment3\Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 35 "H:\Aldnoah.Zero-master\Assignment3\Main.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFBF & 0xFFF7 & 0xFFFF & 0xFF7F & 0xFFFF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_robot_read
    48                           	FNCALL	_main,_readAvgDistance
    49                           	FNCALL	_main,_UpdateDisplay
    50                           	FNCALL	_main,_Menu
    51                           	FNCALL	_main,_straightLineTest
    52                           	FNCALL	_main,_robotMove
    53                           	FNCALL	_main,_robotTurn
    54                           	FNCALL	_main,_scan360
    55                           	FNCALL	_main,_rotate
    56                           	FNCALL	_main,___awtoft
    57                           	FNCALL	_main,___ftmul
    58                           	FNCALL	_main,___fttol
    59                           	FNCALL	_main,_ChargeMode
    60                           	FNCALL	_straightLineTest,_UpdateDisplay
    61                           	FNCALL	_straightLineTest,_robotTurn
    62                           	FNCALL	_straightLineTest,_robotMoveSpeed
    63                           	FNCALL	_robotMove,_ser_putch
    64                           	FNCALL	_robotMove,_robot_read
    65                           	FNCALL	_robotMove,_UpdateDisplay
    66                           	FNCALL	_scan360,_readAvgDistance
    67                           	FNCALL	_scan360,_rotate
    68                           	FNCALL	_scan360,_UpdateDisplay
    69                           	FNCALL	_ChargeMode,_ser_putch
    70                           	FNCALL	_ChargeMode,_UpdateDisplay
    71                           	FNCALL	_robotMoveSpeed,_ser_putch
    72                           	FNCALL	_robotMoveSpeed,_robot_read
    73                           	FNCALL	_robotMoveSpeed,_UpdateDisplay
    74                           	FNCALL	_robotMoveSpeed,_abs
    75                           	FNCALL	_readAvgDistance,_readDistance
    76                           	FNCALL	_readAvgDistance,___lwdiv
    77                           	FNCALL	_readAvgDistance,_ADCconvert
    78                           	FNCALL	_UpdateDisplay,_lcd_write_control
    79                           	FNCALL	_UpdateDisplay,_sprintf
    80                           	FNCALL	_UpdateDisplay,_lcd_set_cursor
    81                           	FNCALL	_UpdateDisplay,_lcd_write_string
    82                           	FNCALL	_UpdateDisplay,___awmod
    83                           	FNCALL	_init,_ser_init
    84                           	FNCALL	_init,_init_adc
    85                           	FNCALL	_init,_lcd_init
    86                           	FNCALL	_init,_robo_init
    87                           	FNCALL	_readDistance,_adc_read_channel
    88                           	FNCALL	_robot_read,_ser_putch
    89                           	FNCALL	_robot_read,_ser_getch
    90                           	FNCALL	_lcd_init,_lcd_write_control
    91                           	FNCALL	_lcd_write_string,_lcd_write_data
    92                           	FNCALL	_lcd_set_cursor,_lcd_write_control
    93                           	FNCALL	___awtoft,___ftpack
    94                           	FNCALL	___ftmul,___ftpack
    95                           	FNCALL	_abs,___wmul
    96                           	FNCALL	_ser_getch,_ser_isrx
    97                           	FNCALL	_sprintf,___lwdiv
    98                           	FNCALL	_sprintf,___lwmod
    99                           	FNCALL	_ADCconvert,___wmul
   100                           	FNCALL	_ADCconvert,___lwdiv
   101                           	FNCALL	_rotate,_spi_transfer
   102                           	FNCALL	_robotTurn,_ser_putch
   103                           	FNCALL	_robo_init,_ser_putch
   104                           	FNCALL	_adc_read_channel,_adc_read
   105                           	FNROOT	_main
   106                           	FNCALL	_isr1,i1___lwmod
   107                           	FNCALL	_isr1,_ReadButtons
   108                           	FNCALL	_ReadButtons,_Debounce
   109                           	FNCALL	intlevel1,_isr1
   110                           	global	intlevel1
   111                           	FNROOT	intlevel1
   112                           	global	_menuStrings
   113                           	global	_shortMenuStrings
   114                           	global	_assignedSpeed
   115                           	global	_current_step
   116                           psect	idataBANK1,class=CODE,space=0,delta=2
   117                           global __pidataBANK1
   118  12BF                     __pidataBANK1:
   119                           	file	"H:\Aldnoah.Zero-master\Assignment3\HMI.c"
   120                           	line	32
   121                           
   122                           ;initializer for _menuStrings
   123  12BF  346A               	retlw	(STR_1-__stringbase)&0ffh
   124  12C0  3461               	retlw	(STR_2-__stringbase)&0ffh
   125  12C1  347C               	retlw	(STR_3-__stringbase)&0ffh
   126  12C2  3485               	retlw	(STR_4-__stringbase)&0ffh
   127  12C3  3473               	retlw	(STR_5-__stringbase)&0ffh
   128  12C4  3458               	retlw	(STR_6-__stringbase)&0ffh
   129                           	line	33
   130                           
   131                           ;initializer for _shortMenuStrings
   132  12C5  34A9               	retlw	(STR_7-__stringbase)&0ffh
   133  12C6  34AD               	retlw	(STR_8-__stringbase)&0ffh
   134  12C7  3495               	retlw	(STR_9-__stringbase)&0ffh
   135  12C8  34A1               	retlw	(STR_10-__stringbase)&0ffh
   136  12C9  34B1               	retlw	(STR_11-__stringbase)&0ffh
   137  12CA  34A5               	retlw	(STR_12-__stringbase)&0ffh
   138                           	file	"H:\Aldnoah.Zero-master\Assignment3\HMI.h"
   139                           	line	7
   140                           
   141                           ;initializer for _assignedSpeed
   142  12CB  3464               	retlw	064h
   143  12CC  3400               	retlw	0
   144                           
   145                           	file	"H:\Aldnoah.Zero-master\Assignment3\steppermotor.c"
   146                           	line	30
   147                           
   148                           ;initializer for _current_step
   149  12CD  343C               	retlw	03Ch
   150                           	global	_dpowers
   151                           psect	strings,class=STRING,delta=2
   152                           global __pstrings
   153  0800                     __pstrings:
   154                           ;	global	stringdir,stringtab,__stringbase
   155  0800                     stringtab:
   156                           ;	String table - string pointers are 1 byte each
   157  0800  1BFF               	btfsc	(btemp+1),7
   158  0801  280A               	ljmp	stringcode
   159  0802  1383               	bcf	status,7
   160  0803  187F               	btfsc	(btemp+1),0
   161  0804  1783               	bsf	status,7
   162  0805  0800               	movf	indf,w
   163  0806  0A84               	incf fsr
   164  0807  1903               skipnz
   165  0808  0AFF               incf btemp+1
   166  0809  0008               	return
   167  080A                     stringcode:stringdir:
      + 080A                     stringdir:	
   168  080A  3008               movlw high(stringdir)
   169  080B  008A               movwf pclath
   170  080C  0804               movf fsr,w
   171  080D  0A84               incf fsr
   172  080E  0782               	addwf pc
   173  080F                     __stringbase:
   174  080F  3400               	retlw	0
   175                           psect	strings
   176                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
   177                           	line	350
   178  0810                     _dpowers:
   179  0810  3401               	retlw	01h
   180  0811  3400               	retlw	0
   181                           
   182  0812  340A               	retlw	0Ah
   183  0813  3400               	retlw	0
   184                           
   185  0814  3464               	retlw	064h
   186  0815  3400               	retlw	0
   187                           
   188  0816  34E8               	retlw	0E8h
   189  0817  3403               	retlw	03h
   190                           
   191  0818  3410               	retlw	010h
   192  0819  3427               	retlw	027h
   193                           
   194                           	global	_dpowers
   195                           	global	_adcVal
   196                           	global	_BumpSensors
   197                           	global	_rxiptr
   198                           	global	_rxoptr
   199                           	global	_txiptr
   200                           	global	UpdateDisplay@F1236
   201                           	global	_txfifo
   202                           	global	_buttonPressed
   203                           	global	_CenterPressed
   204                           	global	_CenterReleased
   205                           	global	_DownPressed
   206                           	global	_DownReleased
   207                           	global	_LeftPressed
   208                           	global	_LeftReleased
   209                           	global	_RTC_FLAG_10MS
   210                           	global	_RTC_FLAG_1MS
   211                           	global	_RTC_FLAG_250MS
   212                           	global	_RTC_FLAG_500MS
   213                           	global	_RTC_FLAG_50MS
   214                           	global	_RightPressed
   215                           	global	_RightReleased
   216                           	global	_UpPressed
   217                           	global	_UpReleased
   218                           	global	_rxfifo
   219                           	global	_RTC_Counter
   220                           	global	_d2travel
   221                           	global	_distTravelled
   222                           	global	_dist_high
   223                           	global	_dist_low
   224                           	global	_distance
   225                           	global	_pos
   226                           	global	_test
   227                           	global	_total
   228                           	global	_totalSteps
   229                           	global	_CenterDebounceCount
   230                           	global	_DistHighByte
   231                           	global	_DistLowByte
   232                           	global	_DownDebounceCount
   233                           	global	_LeftDebounceCount
   234                           	global	_RightDebounceCount
   235                           	global	_UpDebounceCount
   236                           	global	_currentMenu
   237                           	global	_current_direction
   238                           	global	_highByte
   239                           	global	_lowByte
   240                           	global	_ser_tmp
   241                           	global	_serialInput
   242                           	global	_turnhighByte
   243                           	global	_turnlowByte
   244                           	global	_txoptr
   245                           	global	_ADCON0
   246  001F                     _ADCON0	set	31
   247                           	global	_ADRESH
   248  001E                     _ADRESH	set	30
   249                           	global	_PORTA
   250  0005                     _PORTA	set	5
   251                           	global	_PORTC
   252  0007                     _PORTC	set	7
   253                           	global	_PORTD
   254  0008                     _PORTD	set	8
   255                           	global	_PORTE
   256  0009                     _PORTE	set	9
   257                           	global	_RCREG
   258  001A                     _RCREG	set	26
   259                           	global	_SSPBUF
   260  0013                     _SSPBUF	set	19
   261                           	global	_SSPCON
   262  0014                     _SSPCON	set	20
   263                           	global	_TMR0
   264  0001                     _TMR0	set	1
   265                           	global	_TXREG
   266  0019                     _TXREG	set	25
   267                           	global	AT25256A@CS0
   268  0038                     AT25256A@CS0	set	56
   269                           	global	AT25256A@CS1
   270  0039                     AT25256A@CS1	set	57
   271                           	global	_CARRY
   272  0018                     _CARRY	set	24
   273                           	global	_CHS0
   274  00FB                     _CHS0	set	251
   275                           	global	_CHS1
   276  00FC                     _CHS1	set	252
   277                           	global	_CHS2
   278  00FD                     _CHS2	set	253
   279                           	global	_CREN
   280  00C4                     _CREN	set	196
   281                           	global	_GIE
   282  005F                     _GIE	set	95
   283                           	global	_GO
   284  00FA                     _GO	set	250
   285                           	global	_OERR
   286  00C1                     _OERR	set	193
   287                           	global	_PEIE
   288  005E                     _PEIE	set	94
   289                           	global	_RB0
   290  0030                     _RB0	set	48
   291                           	global	_RB2
   292  0032                     _RB2	set	50
   293                           	global	_RB3
   294  0033                     _RB3	set	51
   295                           	global	_RB4
   296  0034                     _RB4	set	52
   297                           	global	_RB5
   298  0035                     _RB5	set	53
   299                           	global	_RB6
   300  0036                     _RB6	set	54
   301                           	global	_RC0
   302  0038                     _RC0	set	56
   303                           	global	_RC1
   304  0039                     _RC1	set	57
   305                           	global	_RC2
   306  003A                     _RC2	set	58
   307                           	global	_RCIF
   308  0065                     _RCIF	set	101
   309                           	global	_RE0
   310  0048                     _RE0	set	72
   311                           	global	_RE1
   312  0049                     _RE1	set	73
   313                           	global	_RE2
   314  004A                     _RE2	set	74
   315                           	global	_RX9
   316  00C6                     _RX9	set	198
   317                           	global	_SPEN
   318  00C7                     _SPEN	set	199
   319                           	global	_SSPIF
   320  0063                     _SSPIF	set	99
   321                           	global	_TMR0IE
   322  005D                     _TMR0IE	set	93
   323                           	global	_TMR0IF
   324  005A                     _TMR0IF	set	90
   325                           	global	_TXIF
   326  0064                     _TXIF	set	100
   327                           	global	_ADCON1
   328  009F                     _ADCON1	set	159
   329                           	global	_ADRESL
   330  009E                     _ADRESL	set	158
   331                           	global	_OPTION_REG
   332  0081                     _OPTION_REG	set	129
   333                           	global	_SPBRG
   334  0099                     _SPBRG	set	153
   335                           	global	_SSPSTAT
   336  0094                     _SSPSTAT	set	148
   337                           	global	_TRISA
   338  0085                     _TRISA	set	133
   339                           	global	_TRISB
   340  0086                     _TRISB	set	134
   341                           	global	_TRISC
   342  0087                     _TRISC	set	135
   343                           	global	_TRISD
   344  0088                     _TRISD	set	136
   345                           	global	_TRISE
   346  0089                     _TRISE	set	137
   347                           	global	_BRGH
   348  04C2                     _BRGH	set	1218
   349                           	global	_RCIE
   350  0465                     _RCIE	set	1125
   351                           	global	_SYNC
   352  04C4                     _SYNC	set	1220
   353                           	global	_TX9
   354  04C6                     _TX9	set	1222
   355                           	global	_TXEN
   356  04C5                     _TXEN	set	1221
   357                           	global	_TXIE
   358  0464                     _TXIE	set	1124
   359                           	global	_EEADR
   360  010D                     _EEADR	set	269
   361                           	global	_EEDATA
   362  010C                     _EEDATA	set	268
   363                           	global	_EECON1
   364  018C                     _EECON1	set	396
   365                           	global	_EECON2
   366  018D                     _EECON2	set	397
   367                           	global	_RD
   368  0C60                     _RD	set	3168
   369                           	global	_WR
   370  0C61                     _WR	set	3169
   371                           	global	_WREN
   372  0C62                     _WREN	set	3170
   373                           	
   374  081A                     STR_19:	
   375  081A  3420               	retlw	32	;' '
   376  081B  3443               	retlw	67	;'C'
   377  081C  3468               	retlw	104	;'h'
   378  081D  3461               	retlw	97	;'a'
   379  081E  3472               	retlw	114	;'r'
   380  081F  3467               	retlw	103	;'g'
   381  0820  3469               	retlw	105	;'i'
   382  0821  346E               	retlw	110	;'n'
   383  0822  3467               	retlw	103	;'g'
   384  0823  3420               	retlw	32	;' '
   385  0824  344D               	retlw	77	;'M'
   386  0825  346F               	retlw	111	;'o'
   387  0826  3464               	retlw	100	;'d'
   388  0827  3465               	retlw	101	;'e'
   389  0828  3420               	retlw	32	;' '
   390  0829  3400               	retlw	0
   391                           psect	strings
   392                           	
   393  082A                     STR_15:	
   394  082A  345A               	retlw	90	;'Z'
   395  082B  3465               	retlw	101	;'e'
   396  082C  3472               	retlw	114	;'r'
   397  082D  346F               	retlw	111	;'o'
   398  082E  3420               	retlw	32	;' '
   399  082F  3453               	retlw	83	;'S'
   400  0830  3474               	retlw	116	;'t'
   401  0831  3465               	retlw	101	;'e'
   402  0832  3470               	retlw	112	;'p'
   403  0833  345F               	retlw	95	;'_'
   404  0834  344D               	retlw	77	;'M'
   405  0835  346F               	retlw	111	;'o'
   406  0836  3474               	retlw	116	;'t'
   407  0837  346F               	retlw	111	;'o'
   408  0838  3472               	retlw	114	;'r'
   409  0839  3400               	retlw	0
   410                           psect	strings
   411                           	
   412  083A                     STR_13:	
   413  083A  3441               	retlw	65	;'A'
   414  083B  3444               	retlw	68	;'D'
   415  083C  3443               	retlw	67	;'C'
   416  083D  343A               	retlw	58	;':'
   417  083E  3425               	retlw	37	;'%'
   418  083F  3464               	retlw	100	;'d'
   419  0840  3420               	retlw	32	;' '
   420  0841  3444               	retlw	68	;'D'
   421  0842  3469               	retlw	105	;'i'
   422  0843  3473               	retlw	115	;'s'
   423  0844  3474               	retlw	116	;'t'
   424  0845  343A               	retlw	58	;':'
   425  0846  3425               	retlw	37	;'%'
   426  0847  3464               	retlw	100	;'d'
   427  0848  3400               	retlw	0
   428                           psect	strings
   429                           	
   430  0849                     STR_21:	
   431  0849  3441               	retlw	65	;'A'
   432  084A  3453               	retlw	83	;'S'
   433  084B  343A               	retlw	58	;':'
   434  084C  3425               	retlw	37	;'%'
   435  084D  3464               	retlw	100	;'d'
   436  084E  3444               	retlw	68	;'D'
   437  084F  3454               	retlw	84	;'T'
   438  0850  343A               	retlw	58	;':'
   439  0851  3425               	retlw	37	;'%'
   440  0852  3464               	retlw	100	;'d'
   441  0853  3400               	retlw	0
   442                           psect	strings
   443                           	
   444  0854                     STR_23:	
   445  0854  3444               	retlw	68	;'D'
   446  0855  343A               	retlw	58	;':'
   447  0856  3425               	retlw	37	;'%'
   448  0857  3464               	retlw	100	;'d'
   449  0858  3420               	retlw	32	;' '
   450  0859  3444               	retlw	68	;'D'
   451  085A  343A               	retlw	58	;':'
   452  085B  3425               	retlw	37	;'%'
   453  085C  3464               	retlw	100	;'d'
   454  085D  3400               	retlw	0
   455                           psect	strings
   456                           	
   457  085E                     STR_20:	
   458  085E  3420               	retlw	32	;' '
   459  085F  3420               	retlw	32	;' '
   460  0860  3445               	retlw	69	;'E'
   461  0861  3458               	retlw	88	;'X'
   462  0862  3449               	retlw	73	;'I'
   463  0863  3454               	retlw	84	;'T'
   464  0864  3420               	retlw	32	;' '
   465  0865  3420               	retlw	32	;' '
   466  0866  3400               	retlw	0
   467                           psect	strings
   468                           	
   469  0867                     STR_6:	
   470  0867  3420               	retlw	32	;' '
   471  0868  3443               	retlw	67	;'C'
   472  0869  3468               	retlw	104	;'h'
   473  086A  3461               	retlw	97	;'a'
   474  086B  3472               	retlw	114	;'r'
   475  086C  3467               	retlw	103	;'g'
   476  086D  3465               	retlw	101	;'e'
   477  086E  3420               	retlw	32	;' '
   478  086F  3400               	retlw	0
   479                           psect	strings
   480                           	
   481  0870                     STR_2:	
   482  0870  3453               	retlw	83	;'S'
   483  0871  3463               	retlw	99	;'c'
   484  0872  3461               	retlw	97	;'a'
   485  0873  346E               	retlw	110	;'n'
   486  0874  345F               	retlw	95	;'_'
   487  0875  3433               	retlw	51	;'3'
   488  0876  3436               	retlw	54	;'6'
   489  0877  3430               	retlw	48	;'0'
   490  0878  3400               	retlw	0
   491                           psect	strings
   492                           	
   493  0879                     STR_1:	
   494  0879  3443               	retlw	67	;'C'
   495  087A  3461               	retlw	97	;'a'
   496  087B  346C               	retlw	108	;'l'
   497  087C  3469               	retlw	105	;'i'
   498  087D  3462               	retlw	98	;'b'
   499  087E  345F               	retlw	95	;'_'
   500  087F  3449               	retlw	73	;'I'
   501  0880  3452               	retlw	82	;'R'
   502  0881  3400               	retlw	0
   503                           psect	strings
   504                           	
   505  0882                     STR_5:	
   506  0882  3446               	retlw	70	;'F'
   507  0883  346C               	retlw	108	;'l'
   508  0884  3477               	retlw	119	;'w'
   509  0885  345F               	retlw	95	;'_'
   510  0886  3457               	retlw	87	;'W'
   511  0887  3461               	retlw	97	;'a'
   512  0888  346C               	retlw	108	;'l'
   513  0889  346C               	retlw	108	;'l'
   514  088A  3400               	retlw	0
   515                           psect	strings
   516                           	
   517  088B                     STR_3:	
   518  088B  3444               	retlw	68	;'D'
   519  088C  3472               	retlw	114	;'r'
   520  088D  3469               	retlw	105	;'i'
   521  088E  3476               	retlw	118	;'v'
   522  088F  3465               	retlw	101	;'e'
   523  0890  345F               	retlw	95	;'_'
   524  0891  3432               	retlw	50	;'2'
   525  0892  346D               	retlw	109	;'m'
   526  0893  3400               	retlw	0
   527                           psect	strings
   528                           	
   529  0894                     STR_4:	
   530  0894  3444               	retlw	68	;'D'
   531  0895  3472               	retlw	114	;'r'
   532  0896  3469               	retlw	105	;'i'
   533  0897  3476               	retlw	118	;'v'
   534  0898  3465               	retlw	101	;'e'
   535  0899  345F               	retlw	95	;'_'
   536  089A  344C               	retlw	76	;'L'
   537  089B  3400               	retlw	0
   538                           psect	strings
   539                           	
   540  089C                     STR_17:	
   541  089C  3443               	retlw	67	;'C'
   542  089D  344F               	retlw	79	;'O'
   543  089E  344E               	retlw	78	;'N'
   544  089F  3446               	retlw	70	;'F'
   545  08A0  3449               	retlw	73	;'I'
   546  08A1  3452               	retlw	82	;'R'
   547  08A2  344D               	retlw	77	;'M'
   548  08A3  3400               	retlw	0
   549                           psect	strings
   550                           	
   551  08A4                     STR_9:	
   552  08A4  3444               	retlw	68	;'D'
   553  08A5  3472               	retlw	114	;'r'
   554  08A6  3432               	retlw	50	;'2'
   555  08A7  3400               	retlw	0
   556                           psect	strings
   557                           	
   558  08A8                     STR_16:	
   559  08A8  343C               	retlw	60	;'<'
   560  08A9  343C               	retlw	60	;'<'
   561  08AA  343C               	retlw	60	;'<'
   562  08AB  3400               	retlw	0
   563                           psect	strings
   564                           	
   565  08AC                     STR_18:	
   566  08AC  343E               	retlw	62	;'>'
   567  08AD  343E               	retlw	62	;'>'
   568  08AE  343E               	retlw	62	;'>'
   569  08AF  3400               	retlw	0
   570                           psect	strings
   571                           	
   572  08B0                     STR_10:	
   573  08B0  3444               	retlw	68	;'D'
   574  08B1  3472               	retlw	114	;'r'
   575  08B2  344C               	retlw	76	;'L'
   576  08B3  3400               	retlw	0
   577                           psect	strings
   578                           	
   579  08B4                     STR_12:	
   580  08B4  3443               	retlw	67	;'C'
   581  08B5  3468               	retlw	104	;'h'
   582  08B6  3467               	retlw	103	;'g'
   583  08B7  3400               	retlw	0
   584                           psect	strings
   585                           	
   586  08B8                     STR_7:	
   587  08B8  3443               	retlw	67	;'C'
   588  08B9  3461               	retlw	97	;'a'
   589  08BA  346C               	retlw	108	;'l'
   590  08BB  3400               	retlw	0
   591                           psect	strings
   592                           	
   593  08BC                     STR_8:	
   594  08BC  3453               	retlw	83	;'S'
   595  08BD  3463               	retlw	99	;'c'
   596  08BE  346E               	retlw	110	;'n'
   597  08BF  3400               	retlw	0
   598                           psect	strings
   599                           	
   600  08C0                     STR_11:	
   601  08C0  3446               	retlw	70	;'F'
   602  08C1  346C               	retlw	108	;'l'
   603  08C2  3477               	retlw	119	;'w'
   604  08C3  3400               	retlw	0
   605                           psect	strings
   606  083A                     STR_14	equ	STR_13+0
   607  085E                     STR_22	equ	STR_20+0
   608  085E                     STR_24	equ	STR_20+0
   609                           	file	"Assignment3_AldnoahZero.as"
   610                           	line	#
   611                           psect cinit,class=CODE,delta=2
   612                           global start_initialization
   613  14A7                     start_initialization:
   614                           
   615                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   616                           global __pbitbssCOMMON
   617  0380                     __pbitbssCOMMON:
   618  0380                     _CenterPressed:
   619  0380                            ds      1
   620                           
   621  0381                     _CenterReleased:
   622  0381                            ds      1
   623                           
   624  0382                     _DownPressed:
   625  0382                            ds      1
   626                           
   627  0383                     _DownReleased:
   628  0383                            ds      1
   629                           
   630  0384                     _LeftPressed:
   631  0384                            ds      1
   632                           
   633  0385                     _LeftReleased:
   634  0385                            ds      1
   635                           
   636  0386                     _RTC_FLAG_10MS:
   637  0386                            ds      1
   638                           
   639  0387                     _RTC_FLAG_1MS:
   640  0387                            ds      1
   641                           
   642  0388                     _RTC_FLAG_250MS:
   643  0388                            ds      1
   644                           
   645  0389                     _RTC_FLAG_500MS:
   646  0389                            ds      1
   647                           
   648  038A                     _RTC_FLAG_50MS:
   649  038A                            ds      1
   650                           
   651  038B                     _RightPressed:
   652  038B                            ds      1
   653                           
   654  038C                     _RightReleased:
   655  038C                            ds      1
   656                           
   657  038D                     _UpPressed:
   658  038D                            ds      1
   659                           
   660  038E                     _UpReleased:
   661  038E                            ds      1
   662                           
   663                           psect	bssCOMMON,class=COMMON,space=1
   664                           global __pbssCOMMON
   665  007D                     __pbssCOMMON:
   666  007D                     _buttonPressed:
   667  007D                            ds      1
   668                           
   669                           psect	bssBANK0,class=BANK0,space=1
   670                           global __pbssBANK0
   671  006A                     __pbssBANK0:
   672  006A                     _adcVal:
   673  006A                            ds      2
   674                           
   675  006C                     _BumpSensors:
   676  006C                            ds      1
   677                           
   678  006D                     _rxiptr:
   679  006D                            ds      1
   680                           
   681  006E                     _rxoptr:
   682  006E                            ds      1
   683                           
   684  006F                     _txiptr:
   685  006F                            ds      1
   686                           
   687                           psect	bssBANK1,class=BANK1,space=1
   688                           global __pbssBANK1
   689  00A0                     __pbssBANK1:
   690  00A0                     _rxfifo:
   691  00A0                            ds      16
   692                           
   693  00B0                     _RTC_Counter:
   694  00B0                            ds      2
   695                           
   696  00B2                     _d2travel:
   697  00B2                            ds      2
   698                           
   699  00B4                     _distTravelled:
   700  00B4                            ds      2
   701                           
   702  00B6                     _dist_high:
   703  00B6                            ds      2
   704                           
   705  00B8                     _dist_low:
   706  00B8                            ds      2
   707                           
   708  00BA                     _distance:
   709  00BA                            ds      2
   710                           
   711  00BC                     _pos:
   712  00BC                            ds      2
   713                           
   714  00BE                     _test:
   715  00BE                            ds      2
   716                           
   717  00C0                     _total:
   718  00C0                            ds      2
   719                           
   720  00C2                     _totalSteps:
   721  00C2                            ds      2
   722                           
   723  00C4                     _CenterDebounceCount:
   724  00C4                            ds      1
   725                           
   726  00C5                     _DistHighByte:
   727  00C5                            ds      1
   728                           
   729  00C6                     _DistLowByte:
   730  00C6                            ds      1
   731                           
   732  00C7                     _DownDebounceCount:
   733  00C7                            ds      1
   734                           
   735  00C8                     _LeftDebounceCount:
   736  00C8                            ds      1
   737                           
   738  00C9                     _RightDebounceCount:
   739  00C9                            ds      1
   740                           
   741  00CA                     _UpDebounceCount:
   742  00CA                            ds      1
   743                           
   744  00CB                     _currentMenu:
   745  00CB                            ds      1
   746                           
   747  00CC                     _current_direction:
   748  00CC                            ds      1
   749                           
   750  00CD                     _highByte:
   751  00CD                            ds      1
   752                           
   753  00CE                     _lowByte:
   754  00CE                            ds      1
   755                           
   756  00CF                     _ser_tmp:
   757  00CF                            ds      1
   758                           
   759  00D0                     _serialInput:
   760  00D0                            ds      1
   761                           
   762  00D1                     _turnhighByte:
   763  00D1                            ds      1
   764                           
   765  00D2                     _turnlowByte:
   766  00D2                            ds      1
   767                           
   768  00D3                     _txoptr:
   769  00D3                            ds      1
   770                           
   771                           psect	dataBANK1,class=BANK1,space=1
   772                           global __pdataBANK1
   773  00D4                     __pdataBANK1:
   774                           	file	"H:\Aldnoah.Zero-master\Assignment3\HMI.c"
   775                           	line	32
   776  00D4                     _menuStrings:
   777  00D4                            ds      6
   778                           
   779                           psect	dataBANK1
   780                           	file	"H:\Aldnoah.Zero-master\Assignment3\HMI.c"
   781                           	line	33
   782  00DA                     _shortMenuStrings:
   783  00DA                            ds      6
   784                           
   785                           psect	dataBANK1
   786                           	file	"H:\Aldnoah.Zero-master\Assignment3\HMI.h"
   787                           	line	7
   788  00E0                     _assignedSpeed:
   789  00E0                            ds      2
   790                           
   791                           psect	dataBANK1
   792                           	file	"H:\Aldnoah.Zero-master\Assignment3\steppermotor.c"
   793                           	line	30
   794  00E2                     _current_step:
   795  00E2                            ds      1
   796                           
   797                           psect	bssBANK3,class=BANK3,space=1
   798                           global __pbssBANK3
   799  0190                     __pbssBANK3:
   800  0190                     UpdateDisplay@F1236:
   801  0190                            ds      16
   802                           
   803  01A0                     _txfifo:
   804  01A0                            ds      16
   805                           
   806                           psect clrtext,class=CODE,delta=2
   807                           global clear_ram
   808                           ;	Called with FSR containing the base address, and
   809                           ;	W with the last address+1
   810  08C4                     clear_ram:
   811  08C4  0064               	clrwdt			;clear the watchdog before getting into this loop
   812  08C5                     clrloop:
   813  08C5  0180               	clrf	indf		;clear RAM location pointed to by FSR
   814  08C6  0A84               	incf	fsr,f		;increment pointer
   815  08C7  0604               	xorwf	fsr,w		;XOR with final address
   816  08C8  1903               	btfsc	status,2	;have we reached the end yet?
   817  08C9  3400               	retlw	0		;all done for this memory range, return
   818  08CA  0604               	xorwf	fsr,w		;XOR again to restore value
   819  08CB  28C5               	goto	clrloop		;do the next byte
   820                           
   821                           ; Clear objects allocated to BITCOMMON
   822                           psect cinit,class=CODE,delta=2
   823  14A7  01F0               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   824  14A8  01F1               	clrf	((__pbitbssCOMMON/8)+1)&07Fh
   825                           ; Clear objects allocated to COMMON
   826                           psect cinit,class=CODE,delta=2
   827  14A9  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   828                           ; Clear objects allocated to BANK0
   829                           psect cinit,class=CODE,delta=2
   830  14AA  01EA               	clrf	((__pbssBANK0)+0)&07Fh
   831  14AB  01EB               	clrf	((__pbssBANK0)+1)&07Fh
   832  14AC  01EC               	clrf	((__pbssBANK0)+2)&07Fh
   833  14AD  01ED               	clrf	((__pbssBANK0)+3)&07Fh
   834  14AE  01EE               	clrf	((__pbssBANK0)+4)&07Fh
   835  14AF  01EF               	clrf	((__pbssBANK0)+5)&07Fh
   836                           ; Clear objects allocated to BANK1
   837                           psect cinit,class=CODE,delta=2
   838  14B0  1383               	bcf	status, 7	;select IRP bank0
   839  14B1  30A0               	movlw	low(__pbssBANK1)
   840  14B2  0084               	movwf	fsr
   841  14B3  30D4               	movlw	low((__pbssBANK1)+034h)
   842  14B4  120A  158A  20C4   	fcall	clear_ram
              160A  118A         
   843                           ; Clear objects allocated to BANK3
   844                           psect cinit,class=CODE,delta=2
   845  14B9  1783               	bsf	status, 7	;select IRP bank2
   846  14BA  3090               	movlw	low(__pbssBANK3)
   847  14BB  0084               	movwf	fsr
   848  14BC  30B0               	movlw	low((__pbssBANK3)+020h)
   849  14BD  120A  158A  20C4   	fcall	clear_ram
              160A  118A         
   850                           global btemp
   851                           psect inittext,class=CODE,delta=2
   852                           global init_fetch,btemp
   853                           ;	Called with low address in FSR and high address in W
   854  12E1                     init_fetch:
   855  12E1  087E               	movf btemp,w
   856  12E2  008A               	movwf pclath
   857  12E3  087F               	movf btemp+1,w
   858  12E4  0082               	movwf pc
   859                           global init_ram
   860                           ;Called with:
   861                           ;	high address of idata address in btemp 
   862                           ;	low address of idata address in btemp+1 
   863                           ;	low address of data in FSR
   864                           ;	high address + 1 of data in btemp-1
   865  12E5                     init_ram:
   866  12E5  160A  118A  22E1   	fcall init_fetch
              160A  118A         
   867  12EA  0080               	movwf indf,f
   868  12EB  0A84               	incf fsr,f
   869  12EC  0804               	movf fsr,w
   870  12ED  067D               	xorwf btemp-1,w
   871  12EE  1903               	btfsc status,2
   872  12EF  3400               	retlw 0
   873  12F0  0AFF               	incf btemp+1,f
   874  12F1  1903               	btfsc status,2
   875  12F2  0AFE               	incf btemp,f
   876  12F3  2AE5               	goto init_ram
   877                           ; Initialize objects allocated to BANK1
   878                           psect cinit,class=CODE,delta=2
   879                           global init_ram, __pidataBANK1
   880  14C2  1383               	bcf	status, 7	;select IRP bank0
   881  14C3  30E3               	movlw low(__pdataBANK1+15)
   882  14C4  00FD               	movwf btemp-1,f
   883  14C5  3012               	movlw high(__pidataBANK1)
   884  14C6  00FE               	movwf btemp,f
   885  14C7  30BF               	movlw low(__pidataBANK1)
   886  14C8  00FF               	movwf btemp+1,f
   887  14C9  30D4               	movlw low(__pdataBANK1)
   888  14CA  0084               	movwf fsr,f
   889  14CB  160A  118A  22E5   	fcall init_ram
              160A  118A         
   890                           psect cinit,class=CODE,delta=2
   891                           global end_of_initialization
   892                           
   893                           ;End of C runtime variable initialization code
   894                           
   895  14D0                     end_of_initialization:
   896  14D0  0183               clrf status
   897  14D1  120A  118A  2815   ljmp _main	;jump to C main() function
   898                           psect	cstackBANK1,class=BANK1,space=1
   899                           global __pcstackBANK1
   900  00E3                     __pcstackBANK1:
   901                           	global	main@direction1
   902  00E3                     main@direction1:	; 2 bytes @ 0x0
   903  00E3                     	ds	2
   904                           	global	main@RT2A
   905  00E5                     main@RT2A:	; 2 bytes @ 0x2
   906  00E5                     	ds	2
   907                           	global	main@choice
   908  00E7                     main@choice:	; 1 bytes @ 0x4
   909  00E7                     	ds	1
   910                           	global	main@shortwall
   911  00E8                     main@shortwall:	; 2 bytes @ 0x5
   912  00E8                     	ds	2
   913                           	global	main@RT2P
   914  00EA                     main@RT2P:	; 2 bytes @ 0x7
   915  00EA                     	ds	2
   916                           psect	cstackCOMMON,class=COMMON,space=1
   917                           global __pcstackCOMMON
   918  0072                     __pcstackCOMMON:
   919                           	global	?_ser_init
   920  0072                     ?_ser_init:	; 0 bytes @ 0x0
   921                           	global	?_robo_init
   922  0072                     ?_robo_init:	; 0 bytes @ 0x0
   923                           	global	?_UpdateDisplay
   924  0072                     ?_UpdateDisplay:	; 0 bytes @ 0x0
   925                           	global	?_ser_putch
   926  0072                     ?_ser_putch:	; 0 bytes @ 0x0
   927                           	global	?_readAvgDistance
   928  0072                     ?_readAvgDistance:	; 0 bytes @ 0x0
   929                           	global	?_robot_read
   930  0072                     ?_robot_read:	; 0 bytes @ 0x0
   931                           	global	?_ADCconvert
   932  0072                     ?_ADCconvert:	; 0 bytes @ 0x0
   933                           	global	?_init_adc
   934  0072                     ?_init_adc:	; 0 bytes @ 0x0
   935                           	global	?_lcd_write_control
   936  0072                     ?_lcd_write_control:	; 0 bytes @ 0x0
   937                           	global	?_lcd_write_data
   938  0072                     ?_lcd_write_data:	; 0 bytes @ 0x0
   939                           	global	?_lcd_set_cursor
   940  0072                     ?_lcd_set_cursor:	; 0 bytes @ 0x0
   941                           	global	?_lcd_init
   942  0072                     ?_lcd_init:	; 0 bytes @ 0x0
   943                           	global	?_isr1
   944  0072                     ?_isr1:	; 0 bytes @ 0x0
   945                           	global	?_init
   946  0072                     ?_init:	; 0 bytes @ 0x0
   947                           	global	?_ChargeMode
   948  0072                     ?_ChargeMode:	; 0 bytes @ 0x0
   949                           	global	?_main
   950  0072                     ?_main:	; 0 bytes @ 0x0
   951                           	global	?_Debounce
   952  0072                     ?_Debounce:	; 0 bytes @ 0x0
   953                           	global	??_Debounce
   954  0072                     ??_Debounce:	; 0 bytes @ 0x0
   955                           	global	?_ser_isrx
   956  0072                     ?_ser_isrx:	; 1 bit 
   957                           	global	?_ReadButtons
   958  0072                     ?_ReadButtons:	; 1 bytes @ 0x0
   959                           	global	?_Menu
   960  0072                     ?_Menu:	; 1 bytes @ 0x0
   961                           	global	?_ser_getch
   962  0072                     ?_ser_getch:	; 1 bytes @ 0x0
   963                           	global	?_adc_read_channel
   964  0072                     ?_adc_read_channel:	; 1 bytes @ 0x0
   965                           	global	?_spi_transfer
   966  0072                     ?_spi_transfer:	; 1 bytes @ 0x0
   967                           	global	?i1___lwmod
   968  0072                     ?i1___lwmod:	; 2 bytes @ 0x0
   969                           	global	i1___lwmod@divisor
   970  0072                     i1___lwmod@divisor:	; 2 bytes @ 0x0
   971  0072                     	ds	1
   972                           	global	??_ReadButtons
   973  0073                     ??_ReadButtons:	; 0 bytes @ 0x1
   974  0073                     	ds	1
   975                           	global	i1___lwmod@dividend
   976  0074                     i1___lwmod@dividend:	; 2 bytes @ 0x2
   977  0074                     	ds	2
   978                           	global	??i1___lwmod
   979  0076                     ??i1___lwmod:	; 0 bytes @ 0x4
   980  0076                     	ds	1
   981                           	global	i1___lwmod@counter
   982  0077                     i1___lwmod@counter:	; 1 bytes @ 0x5
   983  0077                     	ds	1
   984                           	global	??_isr1
   985  0078                     ??_isr1:	; 0 bytes @ 0x6
   986  0078                     	ds	5
   987                           psect	cstackBANK0,class=BANK0,space=1
   988                           global __pcstackBANK0
   989  0020                     __pcstackBANK0:
   990                           	global	??_ser_init
   991  0020                     ??_ser_init:	; 0 bytes @ 0x0
   992                           	global	??_ser_putch
   993  0020                     ??_ser_putch:	; 0 bytes @ 0x0
   994                           	global	??_Menu
   995  0020                     ??_Menu:	; 0 bytes @ 0x0
   996                           	global	??_ser_getch
   997  0020                     ??_ser_getch:	; 0 bytes @ 0x0
   998                           	global	??_init_adc
   999  0020                     ??_init_adc:	; 0 bytes @ 0x0
  1000                           	global	??_lcd_write_control
  1001  0020                     ??_lcd_write_control:	; 0 bytes @ 0x0
  1002                           	global	??_lcd_write_data
  1003  0020                     ??_lcd_write_data:	; 0 bytes @ 0x0
  1004                           	global	??_spi_transfer
  1005  0020                     ??_spi_transfer:	; 0 bytes @ 0x0
  1006                           	global	??_ser_isrx
  1007  0020                     ??_ser_isrx:	; 0 bytes @ 0x0
  1008                           	global	?_adc_read
  1009  0020                     ?_adc_read:	; 2 bytes @ 0x0
  1010                           	global	?___wmul
  1011  0020                     ?___wmul:	; 2 bytes @ 0x0
  1012                           	global	?___awmod
  1013  0020                     ?___awmod:	; 2 bytes @ 0x0
  1014                           	global	?___ftpack
  1015  0020                     ?___ftpack:	; 3 bytes @ 0x0
  1016                           	global	Menu@BTN_input
  1017  0020                     Menu@BTN_input:	; 1 bytes @ 0x0
  1018                           	global	___wmul@multiplier
  1019  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1020                           	global	___awmod@divisor
  1021  0020                     ___awmod@divisor:	; 2 bytes @ 0x0
  1022                           	global	___ftpack@arg
  1023  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
  1024  0020                     	ds	1
  1025                           	global	spi_transfer@temp
  1026  0021                     spi_transfer@temp:	; 1 bytes @ 0x1
  1027                           	global	ser_getch@c
  1028  0021                     ser_getch@c:	; 1 bytes @ 0x1
  1029                           	global	ser_putch@c
  1030  0021                     ser_putch@c:	; 1 bytes @ 0x1
  1031  0021                     	ds	1
  1032                           	global	??_adc_read
  1033  0022                     ??_adc_read:	; 0 bytes @ 0x2
  1034                           	global	??_robo_init
  1035  0022                     ??_robo_init:	; 0 bytes @ 0x2
  1036                           	global	?_robotTurn
  1037  0022                     ?_robotTurn:	; 0 bytes @ 0x2
  1038                           	global	??_robot_read
  1039  0022                     ??_robot_read:	; 0 bytes @ 0x2
  1040                           	global	lcd_write_control@databyte
  1041  0022                     lcd_write_control@databyte:	; 1 bytes @ 0x2
  1042                           	global	lcd_write_data@databyte
  1043  0022                     lcd_write_data@databyte:	; 1 bytes @ 0x2
  1044                           	global	spi_transfer@data
  1045  0022                     spi_transfer@data:	; 1 bytes @ 0x2
  1046                           	global	robotTurn@distance
  1047  0022                     robotTurn@distance:	; 2 bytes @ 0x2
  1048                           	global	___wmul@multiplicand
  1049  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1050                           	global	___awmod@dividend
  1051  0022                     ___awmod@dividend:	; 2 bytes @ 0x2
  1052  0022                     	ds	1
  1053                           	global	?_rotate
  1054  0023                     ?_rotate:	; 0 bytes @ 0x3
  1055                           	global	??_lcd_set_cursor
  1056  0023                     ??_lcd_set_cursor:	; 0 bytes @ 0x3
  1057                           	global	??_lcd_init
  1058  0023                     ??_lcd_init:	; 0 bytes @ 0x3
  1059                           	global	??_init
  1060  0023                     ??_init:	; 0 bytes @ 0x3
  1061                           	global	lcd_set_cursor@address
  1062  0023                     lcd_set_cursor@address:	; 1 bytes @ 0x3
  1063                           	global	___ftpack@exp
  1064  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
  1065                           	global	rotate@numsteps
  1066  0023                     rotate@numsteps:	; 2 bytes @ 0x3
  1067  0023                     	ds	1
  1068                           	global	??_robotTurn
  1069  0024                     ??_robotTurn:	; 0 bytes @ 0x4
  1070                           	global	??___wmul
  1071  0024                     ??___wmul:	; 0 bytes @ 0x4
  1072                           	global	??___awmod
  1073  0024                     ??___awmod:	; 0 bytes @ 0x4
  1074                           	global	___ftpack@sign
  1075  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1076                           	global	adc_read@adc_value
  1077  0024                     adc_read@adc_value:	; 2 bytes @ 0x4
  1078                           	global	___wmul@product
  1079  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1080  0024                     	ds	1
  1081                           	global	??___ftpack
  1082  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1083                           	global	rotate@direction
  1084  0025                     rotate@direction:	; 1 bytes @ 0x5
  1085                           	global	___awmod@counter
  1086  0025                     ___awmod@counter:	; 1 bytes @ 0x5
  1087  0025                     	ds	1
  1088                           	global	??_rotate
  1089  0026                     ??_rotate:	; 0 bytes @ 0x6
  1090                           	global	??_adc_read_channel
  1091  0026                     ??_adc_read_channel:	; 0 bytes @ 0x6
  1092                           	global	?_abs
  1093  0026                     ?_abs:	; 2 bytes @ 0x6
  1094                           	global	?___lwdiv
  1095  0026                     ?___lwdiv:	; 2 bytes @ 0x6
  1096                           	global	___awmod@sign
  1097  0026                     ___awmod@sign:	; 1 bytes @ 0x6
  1098                           	global	abs@v
  1099  0026                     abs@v:	; 2 bytes @ 0x6
  1100                           	global	___lwdiv@divisor
  1101  0026                     ___lwdiv@divisor:	; 2 bytes @ 0x6
  1102  0026                     	ds	1
  1103                           	global	?_lcd_write_string
  1104  0027                     ?_lcd_write_string:	; 0 bytes @ 0x7
  1105                           	global	adc_read_channel@channel
  1106  0027                     adc_read_channel@channel:	; 1 bytes @ 0x7
  1107                           	global	lcd_write_string@s
  1108  0027                     lcd_write_string@s:	; 2 bytes @ 0x7
  1109  0027                     	ds	1
  1110                           	global	??_abs
  1111  0028                     ??_abs:	; 0 bytes @ 0x8
  1112                           	global	?_readDistance
  1113  0028                     ?_readDistance:	; 2 bytes @ 0x8
  1114                           	global	?___fttol
  1115  0028                     ?___fttol:	; 4 bytes @ 0x8
  1116                           	global	rotate@i
  1117  0028                     rotate@i:	; 2 bytes @ 0x8
  1118                           	global	___lwdiv@dividend
  1119  0028                     ___lwdiv@dividend:	; 2 bytes @ 0x8
  1120                           	global	___fttol@f1
  1121  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1122  0028                     	ds	1
  1123                           	global	??_lcd_write_string
  1124  0029                     ??_lcd_write_string:	; 0 bytes @ 0x9
  1125  0029                     	ds	1
  1126                           	global	??_readDistance
  1127  002A                     ??_readDistance:	; 0 bytes @ 0xA
  1128                           	global	??___lwdiv
  1129  002A                     ??___lwdiv:	; 0 bytes @ 0xA
  1130  002A                     	ds	1
  1131                           	global	___lwdiv@quotient
  1132  002B                     ___lwdiv@quotient:	; 2 bytes @ 0xB
  1133  002B                     	ds	1
  1134                           	global	??___fttol
  1135  002C                     ??___fttol:	; 0 bytes @ 0xC
  1136                           	global	readDistance@fullval
  1137  002C                     readDistance@fullval:	; 2 bytes @ 0xC
  1138  002C                     	ds	1
  1139                           	global	___lwdiv@counter
  1140  002D                     ___lwdiv@counter:	; 1 bytes @ 0xD
  1141  002D                     	ds	1
  1142                           	global	??_ADCconvert
  1143  002E                     ??_ADCconvert:	; 0 bytes @ 0xE
  1144                           	global	?___lwmod
  1145  002E                     ?___lwmod:	; 2 bytes @ 0xE
  1146                           	global	___lwmod@divisor
  1147  002E                     ___lwmod@divisor:	; 2 bytes @ 0xE
  1148  002E                     	ds	2
  1149                           	global	??_readAvgDistance
  1150  0030                     ??_readAvgDistance:	; 0 bytes @ 0x10
  1151                           	global	___fttol@sign1
  1152  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1153                           	global	readAvgDistance@fullval
  1154  0030                     readAvgDistance@fullval:	; 2 bytes @ 0x10
  1155                           	global	___lwmod@dividend
  1156  0030                     ___lwmod@dividend:	; 2 bytes @ 0x10
  1157  0030                     	ds	1
  1158                           	global	___fttol@lval
  1159  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  1160  0031                     	ds	1
  1161                           	global	??___lwmod
  1162  0032                     ??___lwmod:	; 0 bytes @ 0x12
  1163                           	global	readAvgDistance@i
  1164  0032                     readAvgDistance@i:	; 2 bytes @ 0x12
  1165  0032                     	ds	1
  1166                           	global	___lwmod@counter
  1167  0033                     ___lwmod@counter:	; 1 bytes @ 0x13
  1168  0033                     	ds	1
  1169                           	global	?_sprintf
  1170  0034                     ?_sprintf:	; 2 bytes @ 0x14
  1171                           	global	sprintf@f
  1172  0034                     sprintf@f:	; 1 bytes @ 0x14
  1173  0034                     	ds	1
  1174                           	global	___fttol@exp1
  1175  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  1176  0035                     	ds	1
  1177                           	global	?___awtoft
  1178  0036                     ?___awtoft:	; 3 bytes @ 0x16
  1179                           	global	___awtoft@c
  1180  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  1181  0036                     	ds	3
  1182                           	global	??_sprintf
  1183  0039                     ??_sprintf:	; 0 bytes @ 0x19
  1184                           	global	??___awtoft
  1185  0039                     ??___awtoft:	; 0 bytes @ 0x19
  1186  0039                     	ds	2
  1187                           	global	___awtoft@sign
  1188  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  1189  003B                     	ds	1
  1190                           	global	?___ftmul
  1191  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  1192                           	global	sprintf@ap
  1193  003C                     sprintf@ap:	; 1 bytes @ 0x1C
  1194                           	global	___ftmul@f1
  1195  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  1196  003C                     	ds	1
  1197                           	global	sprintf@flag
  1198  003D                     sprintf@flag:	; 1 bytes @ 0x1D
  1199  003D                     	ds	1
  1200                           	global	sprintf@prec
  1201  003E                     sprintf@prec:	; 1 bytes @ 0x1E
  1202  003E                     	ds	1
  1203                           	global	___ftmul@f2
  1204  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  1205                           	global	sprintf@_val
  1206  003F                     sprintf@_val:	; 4 bytes @ 0x1F
  1207  003F                     	ds	3
  1208                           	global	??___ftmul
  1209  0042                     ??___ftmul:	; 0 bytes @ 0x22
  1210  0042                     	ds	1
  1211                           	global	sprintf@sp
  1212  0043                     sprintf@sp:	; 1 bytes @ 0x23
  1213  0043                     	ds	1
  1214                           	global	sprintf@c
  1215  0044                     sprintf@c:	; 1 bytes @ 0x24
  1216  0044                     	ds	1
  1217                           	global	??_UpdateDisplay
  1218  0045                     ??_UpdateDisplay:	; 0 bytes @ 0x25
  1219  0045                     	ds	1
  1220                           	global	___ftmul@exp
  1221  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  1222  0046                     	ds	1
  1223                           	global	___ftmul@f3_as_product
  1224  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  1225  0047                     	ds	2
  1226                           	global	UpdateDisplay@adcOutput
  1227  0049                     UpdateDisplay@adcOutput:	; 16 bytes @ 0x29
  1228  0049                     	ds	1
  1229                           	global	___ftmul@cntr
  1230  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  1231  004A                     	ds	1
  1232                           	global	___ftmul@sign
  1233  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  1234  004B                     	ds	14
  1235                           	global	?_robotMoveSpeed
  1236  0059                     ?_robotMoveSpeed:	; 0 bytes @ 0x39
  1237                           	global	?_robotMove
  1238  0059                     ?_robotMove:	; 0 bytes @ 0x39
  1239                           	global	??_ChargeMode
  1240  0059                     ??_ChargeMode:	; 0 bytes @ 0x39
  1241                           	global	?_scan360
  1242  0059                     ?_scan360:	; 2 bytes @ 0x39
  1243                           	global	robotMoveSpeed@distance
  1244  0059                     robotMoveSpeed@distance:	; 2 bytes @ 0x39
  1245                           	global	robotMove@distance
  1246  0059                     robotMove@distance:	; 2 bytes @ 0x39
  1247  0059                     	ds	2
  1248                           	global	??_robotMove
  1249  005B                     ??_robotMove:	; 0 bytes @ 0x3B
  1250                           	global	??_scan360
  1251  005B                     ??_scan360:	; 0 bytes @ 0x3B
  1252                           	global	scan360@lowestVal
  1253  005B                     scan360@lowestVal:	; 2 bytes @ 0x3B
  1254                           	global	robotMoveSpeed@speed
  1255  005B                     robotMoveSpeed@speed:	; 2 bytes @ 0x3B
  1256  005B                     	ds	2
  1257                           	global	??_robotMoveSpeed
  1258  005D                     ??_robotMoveSpeed:	; 0 bytes @ 0x3D
  1259                           	global	scan360@lowestSteps
  1260  005D                     scan360@lowestSteps:	; 2 bytes @ 0x3D
  1261  005D                     	ds	2
  1262                           	global	scan360@steps
  1263  005F                     scan360@steps:	; 2 bytes @ 0x3F
  1264  005F                     	ds	1
  1265                           	global	robotMoveSpeed@speedlowByte
  1266  0060                     robotMoveSpeed@speedlowByte:	; 1 bytes @ 0x40
  1267  0060                     	ds	1
  1268                           	global	robotMoveSpeed@speedhighByte
  1269  0061                     robotMoveSpeed@speedhighByte:	; 1 bytes @ 0x41
  1270  0061                     	ds	1
  1271                           	global	robotMoveSpeed@temp1
  1272  0062                     robotMoveSpeed@temp1:	; 2 bytes @ 0x42
  1273  0062                     	ds	2
  1274                           	global	?_straightLineTest
  1275  0064                     ?_straightLineTest:	; 0 bytes @ 0x44
  1276                           	global	straightLineTest@menuflag
  1277  0064                     straightLineTest@menuflag:	; 2 bytes @ 0x44
  1278  0064                     	ds	2
  1279                           	global	??_straightLineTest
  1280  0066                     ??_straightLineTest:	; 0 bytes @ 0x46
  1281  0066                     	ds	1
  1282                           	global	??_main
  1283  0067                     ??_main:	; 0 bytes @ 0x47
  1284  0067                     	ds	3
  1285 ;;Data sizes: Strings 170, constant 10, data 15, bss 91, persistent 0 stack 0
  1286 ;;Auto spaces:   Size  Autos    Used
  1287 ;; COMMON          14     11      14
  1288 ;; BANK0           80     74      80
  1289 ;; BANK1           80      9      76
  1290 ;; BANK3           96      0      32
  1291 ;; BANK2           96      0       0
  1292                           
  1293 ;;
  1294 ;; Pointer list with targets:
  1295                           
  1296 ;; ?i1___lwmod	unsigned int  size(1) Largest target is 0
  1297 ;;
  1298 ;; ?___ftpack	float  size(1) Largest target is 2
  1299 ;;		 -> main@RT2P(BANK1[2]), 
  1300 ;;
  1301 ;; ?_abs	int  size(1) Largest target is 0
  1302 ;;
  1303 ;; ?___awmod	int  size(1) Largest target is 0
  1304 ;;
  1305 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1306 ;;
  1307 ;; ?_readDistance	unsigned int  size(1) Largest target is 0
  1308 ;;
  1309 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1310 ;;
  1311 ;; ?___fttol	long  size(1) Largest target is 0
  1312 ;;
  1313 ;; ?___ftmul	float  size(1) Largest target is 0
  1314 ;;
  1315 ;; ?___awtoft	float  size(1) Largest target is 0
  1316 ;;
  1317 ;; ?_scan360	int  size(1) Largest target is 0
  1318 ;;
  1319 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
  1320 ;;
  1321 ;; ?_adc_read	unsigned int  size(1) Largest target is 0
  1322 ;;
  1323 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 15
  1324 ;;		 -> STR_23(CODE[10]), STR_21(CODE[11]), STR_14(CODE[15]), STR_13(CODE[15]), 
  1325 ;;
  1326 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1327 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), 
  1328 ;;
  1329 ;; ?_sprintf	int  size(1) Largest target is 0
  1330 ;;
  1331 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1332 ;;		 -> ?_sprintf(BANK0[2]), 
  1333 ;;
  1334 ;; S8178$_cp	PTR const unsigned char  size(1) Largest target is 0
  1335 ;;
  1336 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1337 ;;
  1338 ;; shortMenuStrings	PTR const unsigned char [6] size(1) Largest target is 4
  1339 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
  1340 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), 
  1341 ;;
  1342 ;; menuStrings	PTR const unsigned char [6] size(1) Largest target is 9
  1343 ;;		 -> STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), 
  1344 ;;		 -> STR_2(CODE[9]), STR_1(CODE[9]), 
  1345 ;;
  1346 ;; lcd_write_string@s	PTR unsigned char  size(2) Largest target is 16
  1347 ;;		 -> STR_24(CODE[9]), STR_22(CODE[9]), STR_20(CODE[9]), STR_19(CODE[16]), 
  1348 ;;		 -> STR_18(CODE[4]), STR_17(CODE[8]), STR_16(CODE[4]), STR_15(CODE[16]), 
  1349 ;;		 -> UpdateDisplay@adcOutput(BANK0[16]), STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
  1350 ;;		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[9]), 
  1351 ;;		 -> STR_5(CODE[9]), STR_4(CODE[8]), STR_3(CODE[9]), STR_2(CODE[9]), 
  1352 ;;		 -> STR_1(CODE[9]), 
  1353 ;;
  1354                           
  1355                           
  1356 ;;
  1357 ;; Critical Paths under _main in COMMON
  1358 ;;
  1359 ;;   None.
  1360 ;;
  1361 ;; Critical Paths under _isr1 in COMMON
  1362 ;;
  1363 ;;   _isr1->i1___lwmod
  1364 ;;   _ReadButtons->_Debounce
  1365 ;;
  1366 ;; Critical Paths under _main in BANK0
  1367 ;;
  1368 ;;   _main->_straightLineTest
  1369 ;;   _straightLineTest->_robotMoveSpeed
  1370 ;;   _robotMove->_UpdateDisplay
  1371 ;;   _scan360->_UpdateDisplay
  1372 ;;   _ChargeMode->_UpdateDisplay
  1373 ;;   _robotMoveSpeed->_UpdateDisplay
  1374 ;;   _readAvgDistance->_ADCconvert
  1375 ;;   _UpdateDisplay->_sprintf
  1376 ;;   _readDistance->_adc_read_channel
  1377 ;;   _robot_read->_ser_putch
  1378 ;;   _robot_read->_ser_getch
  1379 ;;   _lcd_init->_lcd_write_control
  1380 ;;   _lcd_write_string->___awmod
  1381 ;;   _lcd_set_cursor->_lcd_write_control
  1382 ;;   ___awtoft->___fttol
  1383 ;;   ___ftmul->___awtoft
  1384 ;;   _abs->___wmul
  1385 ;;   _sprintf->___lwmod
  1386 ;;   _ADCconvert->___lwdiv
  1387 ;;   _rotate->_spi_transfer
  1388 ;;   _robotTurn->_ser_putch
  1389 ;;   _robo_init->_ser_putch
  1390 ;;   _adc_read_channel->_adc_read
  1391 ;;   ___fttol->___ftpack
  1392 ;;   ___lwmod->___lwdiv
  1393 ;;   ___lwdiv->___wmul
  1394 ;;
  1395 ;; Critical Paths under _isr1 in BANK0
  1396 ;;
  1397 ;;   None.
  1398 ;;
  1399 ;; Critical Paths under _main in BANK1
  1400 ;;
  1401 ;;   None.
  1402 ;;
  1403 ;; Critical Paths under _isr1 in BANK1
  1404 ;;
  1405 ;;   None.
  1406 ;;
  1407 ;; Critical Paths under _main in BANK3
  1408 ;;
  1409 ;;   None.
  1410 ;;
  1411 ;; Critical Paths under _isr1 in BANK3
  1412 ;;
  1413 ;;   None.
  1414 ;;
  1415 ;; Critical Paths under _main in BANK2
  1416 ;;
  1417 ;;   None.
  1418 ;;
  1419 ;; Critical Paths under _isr1 in BANK2
  1420 ;;
  1421 ;;   None.
  1422                           
  1423 ;;
  1424 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1425 ;;
  1426                           
  1427 ;;
  1428 ;;Call Graph Tables:
  1429 ;;
  1430 ;; ---------------------------------------------------------------------------------
  1431 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1432 ;; ---------------------------------------------------------------------------------
  1433 ;; (0) _main                                                12    12      0   12260
  1434 ;;                                             71 BANK0      3     3      0
  1435 ;;                                              0 BANK1      9     9      0
  1436 ;;                               _init
  1437 ;;                         _robot_read
  1438 ;;                    _readAvgDistance
  1439 ;;                      _UpdateDisplay
  1440 ;;                               _Menu
  1441 ;;                   _straightLineTest
  1442 ;;                          _robotMove
  1443 ;;                          _robotTurn
  1444 ;;                            _scan360
  1445 ;;                             _rotate
  1446 ;;                           ___awtoft
  1447 ;;                            ___ftmul
  1448 ;;                            ___fttol
  1449 ;;                         _ChargeMode
  1450 ;; ---------------------------------------------------------------------------------
  1451 ;; (1) _straightLineTest                                     3     1      2    3324
  1452 ;;                                             68 BANK0      3     1      2
  1453 ;;                      _UpdateDisplay
  1454 ;;                          _robotTurn
  1455 ;;                     _robotMoveSpeed
  1456 ;; ---------------------------------------------------------------------------------
  1457 ;; (1) _robotMove                                            4     2      2    1504
  1458 ;;                                             57 BANK0      4     2      2
  1459 ;;                          _ser_putch
  1460 ;;                         _robot_read
  1461 ;;                      _UpdateDisplay
  1462 ;; ---------------------------------------------------------------------------------
  1463 ;; (1) _scan360                                              8     6      2    2184
  1464 ;;                                             57 BANK0      8     6      2
  1465 ;;                    _readAvgDistance
  1466 ;;                             _rotate
  1467 ;;                      _UpdateDisplay
  1468 ;; ---------------------------------------------------------------------------------
  1469 ;; (1) _ChargeMode                                           1     1      0    1415
  1470 ;;                                             57 BANK0      1     1      0
  1471 ;;                          _ser_putch
  1472 ;;                      _UpdateDisplay
  1473 ;; ---------------------------------------------------------------------------------
  1474 ;; (2) _robotMoveSpeed                                      11     7      4    1777
  1475 ;;                                             57 BANK0     11     7      4
  1476 ;;                          _ser_putch
  1477 ;;                         _robot_read
  1478 ;;                      _UpdateDisplay
  1479 ;;                                _abs
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (2) _readAvgDistance                                      4     4      0     555
  1482 ;;                                             16 BANK0      4     4      0
  1483 ;;                       _readDistance
  1484 ;;                            ___lwdiv
  1485 ;;                         _ADCconvert
  1486 ;; ---------------------------------------------------------------------------------
  1487 ;; (2) _UpdateDisplay                                       20    20      0    1393
  1488 ;;                                             37 BANK0     20    20      0
  1489 ;;                  _lcd_write_control
  1490 ;;                            _sprintf
  1491 ;;                     _lcd_set_cursor
  1492 ;;                   _lcd_write_string
  1493 ;;                            ___awmod
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (1) _init                                                 1     1      0      44
  1496 ;;                                              3 BANK0      1     1      0
  1497 ;;                           _ser_init
  1498 ;;                           _init_adc
  1499 ;;                           _lcd_init
  1500 ;;                          _robo_init
  1501 ;; ---------------------------------------------------------------------------------
  1502 ;; (3) _readDistance                                         6     4      2      69
  1503 ;;                                              8 BANK0      6     4      2
  1504 ;;                   _adc_read_channel
  1505 ;; ---------------------------------------------------------------------------------
  1506 ;; (2) _robot_read                                           2     2      0      45
  1507 ;;                                              2 BANK0      2     2      0
  1508 ;;                          _ser_putch
  1509 ;;                          _ser_getch
  1510 ;; ---------------------------------------------------------------------------------
  1511 ;; (2) _lcd_init                                             0     0      0      22
  1512 ;;                  _lcd_write_control
  1513 ;; ---------------------------------------------------------------------------------
  1514 ;; (3) _lcd_write_string                                     2     0      2      67
  1515 ;;                                              7 BANK0      2     0      2
  1516 ;;                     _lcd_write_data
  1517 ;;                            ___awmod (ARG)
  1518 ;; ---------------------------------------------------------------------------------
  1519 ;; (3) _lcd_set_cursor                                       1     1      0      45
  1520 ;;                                              3 BANK0      1     1      0
  1521 ;;                  _lcd_write_control
  1522 ;; ---------------------------------------------------------------------------------
  1523 ;; (1) ___awtoft                                             6     3      3     300
  1524 ;;                                             22 BANK0      6     3      3
  1525 ;;                           ___ftpack
  1526 ;;                            ___fttol (ARG)
  1527 ;; ---------------------------------------------------------------------------------
  1528 ;; (1) ___ftmul                                             16    10      6     535
  1529 ;;                                             28 BANK0     16    10      6
  1530 ;;                           ___ftpack
  1531 ;;                           ___awtoft (ARG)
  1532 ;;                            ___fttol (ARG)
  1533 ;; ---------------------------------------------------------------------------------
  1534 ;; (3) _abs                                                  4     2      2     158
  1535 ;;                                              6 BANK0      4     2      2
  1536 ;;                             ___wmul
  1537 ;; ---------------------------------------------------------------------------------
  1538 ;; (3) _ser_getch                                            2     2      0      23
  1539 ;;                                              0 BANK0      2     2      0
  1540 ;;                           _ser_isrx
  1541 ;; ---------------------------------------------------------------------------------
  1542 ;; (3) _sprintf                                             17    12      5     798
  1543 ;;                                             20 BANK0     17    12      5
  1544 ;;                            ___lwdiv
  1545 ;;                            ___lwmod
  1546 ;; ---------------------------------------------------------------------------------
  1547 ;; (3) _ADCconvert                                           2     2      0     254
  1548 ;;                                             14 BANK0      2     2      0
  1549 ;;                             ___wmul
  1550 ;;                            ___lwdiv
  1551 ;; ---------------------------------------------------------------------------------
  1552 ;; (1) _rotate                                               7     4      3      98
  1553 ;;                                              3 BANK0      7     4      3
  1554 ;;                       _spi_transfer
  1555 ;; ---------------------------------------------------------------------------------
  1556 ;; (1) _robotTurn                                            3     1      2      88
  1557 ;;                                              2 BANK0      3     1      2
  1558 ;;                          _ser_putch
  1559 ;; ---------------------------------------------------------------------------------
  1560 ;; (2) _robo_init                                            0     0      0      22
  1561 ;;                          _ser_putch
  1562 ;; ---------------------------------------------------------------------------------
  1563 ;; (4) _lcd_write_data                                       3     3      0      22
  1564 ;;                                              0 BANK0      3     3      0
  1565 ;; ---------------------------------------------------------------------------------
  1566 ;; (4) _lcd_write_control                                    3     3      0      22
  1567 ;;                                              0 BANK0      3     3      0
  1568 ;; ---------------------------------------------------------------------------------
  1569 ;; (2) _init_adc                                             1     1      0       0
  1570 ;;                                              0 BANK0      1     1      0
  1571 ;; ---------------------------------------------------------------------------------
  1572 ;; (4) _adc_read_channel                                     2     2      0      46
  1573 ;;                                              6 BANK0      2     2      0
  1574 ;;                           _adc_read
  1575 ;; ---------------------------------------------------------------------------------
  1576 ;; (3) ___awmod                                              7     3      4     296
  1577 ;;                                              0 BANK0      7     3      4
  1578 ;; ---------------------------------------------------------------------------------
  1579 ;; (1) ___fttol                                             14    10      4     252
  1580 ;;                                              8 BANK0     14    10      4
  1581 ;;                           ___ftpack (ARG)
  1582 ;; ---------------------------------------------------------------------------------
  1583 ;; (2) ___ftpack                                             8     3      5     209
  1584 ;;                                              0 BANK0      8     3      5
  1585 ;; ---------------------------------------------------------------------------------
  1586 ;; (4) ___lwmod                                              6     2      4     159
  1587 ;;                                             14 BANK0      6     2      4
  1588 ;;                            ___lwdiv (ARG)
  1589 ;; ---------------------------------------------------------------------------------
  1590 ;; (4) ___lwdiv                                              8     4      4     162
  1591 ;;                                              6 BANK0      8     4      4
  1592 ;;                             ___wmul (ARG)
  1593 ;; ---------------------------------------------------------------------------------
  1594 ;; (4) ___wmul                                               6     2      4      92
  1595 ;;                                              0 BANK0      6     2      4
  1596 ;; ---------------------------------------------------------------------------------
  1597 ;; (4) _ser_isrx                                             0     0      0       0
  1598 ;; ---------------------------------------------------------------------------------
  1599 ;; (2) _spi_transfer                                         3     3      0      30
  1600 ;;                                              0 BANK0      3     3      0
  1601 ;; ---------------------------------------------------------------------------------
  1602 ;; (1) _Menu                                                 1     1      0      22
  1603 ;;                                              0 BANK0      1     1      0
  1604 ;; ---------------------------------------------------------------------------------
  1605 ;; (2) _ser_putch                                            2     2      0      22
  1606 ;;                                              0 BANK0      2     2      0
  1607 ;; ---------------------------------------------------------------------------------
  1608 ;; (2) _ser_init                                             1     1      0       0
  1609 ;;                                              0 BANK0      1     1      0
  1610 ;; ---------------------------------------------------------------------------------
  1611 ;; (5) _adc_read                                             6     4      2      24
  1612 ;;                                              0 BANK0      6     4      2
  1613 ;; ---------------------------------------------------------------------------------
  1614 ;; Estimated maximum stack depth 5
  1615 ;; ---------------------------------------------------------------------------------
  1616 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1617 ;; ---------------------------------------------------------------------------------
  1618 ;; (6) _isr1                                                 5     5      0     521
  1619 ;;                                              6 COMMON     5     5      0
  1620 ;;                          i1___lwmod
  1621 ;;                        _ReadButtons
  1622 ;; ---------------------------------------------------------------------------------
  1623 ;; (7) _ReadButtons                                          0     0      0       0
  1624 ;;                           _Debounce
  1625 ;; ---------------------------------------------------------------------------------
  1626 ;; (7) i1___lwmod                                            6     2      4     521
  1627 ;;                                              0 COMMON     6     2      4
  1628 ;; ---------------------------------------------------------------------------------
  1629 ;; (8) _Debounce                                             1     1      0       0
  1630 ;;                                              0 COMMON     1     1      0
  1631 ;; ---------------------------------------------------------------------------------
  1632 ;; Estimated maximum stack depth 8
  1633 ;; ---------------------------------------------------------------------------------
  1634                           
  1635 ;; Call Graph Graphs:
  1636                           
  1637 ;; _main (ROOT)
  1638 ;;   _init
  1639 ;;     _ser_init
  1640 ;;     _init_adc
  1641 ;;     _lcd_init
  1642 ;;       _lcd_write_control
  1643 ;;     _robo_init
  1644 ;;       _ser_putch
  1645 ;;   _robot_read
  1646 ;;     _ser_putch
  1647 ;;     _ser_getch
  1648 ;;       _ser_isrx
  1649 ;;   _readAvgDistance
  1650 ;;     _readDistance
  1651 ;;       _adc_read_channel
  1652 ;;         _adc_read
  1653 ;;     ___lwdiv
  1654 ;;       ___wmul (ARG)
  1655 ;;     _ADCconvert
  1656 ;;       ___wmul
  1657 ;;       ___lwdiv
  1658 ;;         ___wmul (ARG)
  1659 ;;   _UpdateDisplay
  1660 ;;     _lcd_write_control
  1661 ;;     _sprintf
  1662 ;;       ___lwdiv
  1663 ;;         ___wmul (ARG)
  1664 ;;       ___lwmod
  1665 ;;         ___lwdiv (ARG)
  1666 ;;           ___wmul (ARG)
  1667 ;;     _lcd_set_cursor
  1668 ;;       _lcd_write_control
  1669 ;;     _lcd_write_string
  1670 ;;       _lcd_write_data
  1671 ;;       ___awmod (ARG)
  1672 ;;     ___awmod
  1673 ;;   _Menu
  1674 ;;   _straightLineTest
  1675 ;;     _UpdateDisplay
  1676 ;;       _lcd_write_control
  1677 ;;       _sprintf
  1678 ;;         ___lwdiv
  1679 ;;           ___wmul (ARG)
  1680 ;;         ___lwmod
  1681 ;;           ___lwdiv (ARG)
  1682 ;;             ___wmul (ARG)
  1683 ;;       _lcd_set_cursor
  1684 ;;         _lcd_write_control
  1685 ;;       _lcd_write_string
  1686 ;;         _lcd_write_data
  1687 ;;         ___awmod (ARG)
  1688 ;;       ___awmod
  1689 ;;     _robotTurn
  1690 ;;       _ser_putch
  1691 ;;     _robotMoveSpeed
  1692 ;;       _ser_putch
  1693 ;;       _robot_read
  1694 ;;         _ser_putch
  1695 ;;         _ser_getch
  1696 ;;           _ser_isrx
  1697 ;;       _UpdateDisplay
  1698 ;;         _lcd_write_control
  1699 ;;         _sprintf
  1700 ;;           ___lwdiv
  1701 ;;             ___wmul (ARG)
  1702 ;;           ___lwmod
  1703 ;;             ___lwdiv (ARG)
  1704 ;;               ___wmul (ARG)
  1705 ;;         _lcd_set_cursor
  1706 ;;           _lcd_write_control
  1707 ;;         _lcd_write_string
  1708 ;;           _lcd_write_data
  1709 ;;           ___awmod (ARG)
  1710 ;;         ___awmod
  1711 ;;       _abs
  1712 ;;         ___wmul
  1713 ;;   _robotMove
  1714 ;;     _ser_putch
  1715 ;;     _robot_read
  1716 ;;       _ser_putch
  1717 ;;       _ser_getch
  1718 ;;         _ser_isrx
  1719 ;;     _UpdateDisplay
  1720 ;;       _lcd_write_control
  1721 ;;       _sprintf
  1722 ;;         ___lwdiv
  1723 ;;           ___wmul (ARG)
  1724 ;;         ___lwmod
  1725 ;;           ___lwdiv (ARG)
  1726 ;;             ___wmul (ARG)
  1727 ;;       _lcd_set_cursor
  1728 ;;         _lcd_write_control
  1729 ;;       _lcd_write_string
  1730 ;;         _lcd_write_data
  1731 ;;         ___awmod (ARG)
  1732 ;;       ___awmod
  1733 ;;   _robotTurn
  1734 ;;     _ser_putch
  1735 ;;   _scan360
  1736 ;;     _readAvgDistance
  1737 ;;       _readDistance
  1738 ;;         _adc_read_channel
  1739 ;;           _adc_read
  1740 ;;       ___lwdiv
  1741 ;;         ___wmul (ARG)
  1742 ;;       _ADCconvert
  1743 ;;         ___wmul
  1744 ;;         ___lwdiv
  1745 ;;           ___wmul (ARG)
  1746 ;;     _rotate
  1747 ;;       _spi_transfer
  1748 ;;     _UpdateDisplay
  1749 ;;       _lcd_write_control
  1750 ;;       _sprintf
  1751 ;;         ___lwdiv
  1752 ;;           ___wmul (ARG)
  1753 ;;         ___lwmod
  1754 ;;           ___lwdiv (ARG)
  1755 ;;             ___wmul (ARG)
  1756 ;;       _lcd_set_cursor
  1757 ;;         _lcd_write_control
  1758 ;;       _lcd_write_string
  1759 ;;         _lcd_write_data
  1760 ;;         ___awmod (ARG)
  1761 ;;       ___awmod
  1762 ;;   _rotate
  1763 ;;     _spi_transfer
  1764 ;;   ___awtoft
  1765 ;;     ___ftpack
  1766 ;;     ___fttol (ARG)
  1767 ;;       ___ftpack (ARG)
  1768 ;;   ___ftmul
  1769 ;;     ___ftpack
  1770 ;;     ___awtoft (ARG)
  1771 ;;       ___ftpack
  1772 ;;       ___fttol (ARG)
  1773 ;;         ___ftpack (ARG)
  1774 ;;     ___fttol (ARG)
  1775 ;;       ___ftpack (ARG)
  1776 ;;   ___fttol
  1777 ;;     ___ftpack (ARG)
  1778 ;;   _ChargeMode
  1779 ;;     _ser_putch
  1780 ;;     _UpdateDisplay
  1781 ;;       _lcd_write_control
  1782 ;;       _sprintf
  1783 ;;         ___lwdiv
  1784 ;;           ___wmul (ARG)
  1785 ;;         ___lwmod
  1786 ;;           ___lwdiv (ARG)
  1787 ;;             ___wmul (ARG)
  1788 ;;       _lcd_set_cursor
  1789 ;;         _lcd_write_control
  1790 ;;       _lcd_write_string
  1791 ;;         _lcd_write_data
  1792 ;;         ___awmod (ARG)
  1793 ;;       ___awmod
  1794 ;;
  1795 ;; _isr1 (ROOT)
  1796 ;;   i1___lwmod
  1797 ;;   _ReadButtons
  1798 ;;     _Debounce
  1799 ;;
  1800                           
  1801 ;; Address spaces:
  1802                           
  1803 ;;Name               Size   Autos  Total    Cost      Usage
  1804 ;;BANK3               60      0      20       9       33.3%
  1805 ;;BITBANK3            60      0       0       8        0.0%
  1806 ;;SFR3                 0      0       0       4        0.0%
  1807 ;;BITSFR3              0      0       0       4        0.0%
  1808 ;;BANK2               60      0       0      11        0.0%
  1809 ;;BITBANK2            60      0       0      10        0.0%
  1810 ;;SFR2                 0      0       0       5        0.0%
  1811 ;;BITSFR2              0      0       0       5        0.0%
  1812 ;;SFR1                 0      0       0       2        0.0%
  1813 ;;BITSFR1              0      0       0       2        0.0%
  1814 ;;BANK1               50      9      4C       7       95.0%
  1815 ;;BITBANK1            50      0       0       6        0.0%
  1816 ;;CODE                 0      0       0       0        0.0%
  1817 ;;DATA                 0      0      D5      12        0.0%
  1818 ;;ABS                  0      0      CA       3        0.0%
  1819 ;;NULL                 0      0       0       0        0.0%
  1820 ;;STACK                0      0       B       2        0.0%
  1821 ;;BANK0               50     4A      50       5      100.0%
  1822 ;;BITBANK0            50      0       0       4        0.0%
  1823 ;;SFR0                 0      0       0       1        0.0%
  1824 ;;BITSFR0              0      0       0       1        0.0%
  1825 ;;COMMON               E      B       E       1      100.0%
  1826 ;;BITCOMMON            E      0       2       0       14.3%
  1827 ;;EEDATA             100      0       0       0        0.0%
  1828                           
  1829                           	global	_main
  1830                           psect	maintext,global,class=CODE,delta=2
  1831                           global __pmaintext
  1832  0015                     __pmaintext:
  1833                           
  1834 ;; *************** function _main *****************
  1835 ;; Defined at:
  1836 ;;		line 369 in file "H:\Aldnoah.Zero-master\Assignment3\Main.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  RT2P            2    7[BANK1 ] int 
  1841 ;;  RT2A            2    2[BANK1 ] int 
  1842 ;;  direction1      2    0[BANK1 ] int 
  1843 ;;  shortwall       2    5[BANK1 ] int 
  1844 ;;  choice          1    4[BANK1 ] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 17F/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       0       0       0       0
  1855 ;;      Locals:         0       0       9       0       0
  1856 ;;      Temps:          0       3       0       0       0
  1857 ;;      Totals:         0       3       9       0       0
  1858 ;;Total ram usage:       12 bytes
  1859 ;; Hardware stack levels required when called:    8
  1860 ;; This function calls:
  1861 ;;		_init
  1862 ;;		_robot_read
  1863 ;;		_readAvgDistance
  1864 ;;		_UpdateDisplay
  1865 ;;		_Menu
  1866 ;;		_straightLineTest
  1867 ;;		_robotMove
  1868 ;;		_robotTurn
  1869 ;;		_scan360
  1870 ;;		_rotate
  1871 ;;		___awtoft
  1872 ;;		___ftmul
  1873 ;;		___fttol
  1874 ;;		_ChargeMode
  1875 ;; This function is called by:
  1876 ;;		Startup code after reset
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           psect	maintext
  1880                           	file	"H:\Aldnoah.Zero-master\Assignment3\Main.c"
  1881                           	line	369
  1882                           	global	__size_of_main
  1883  029A                     	__size_of_main	equ	__end_of_main-_main
  1884                           	
  1885  0015                     _main:	
  1886                           	opt	stack 0
  1887                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1888                           	line	370
  1889                           	
  1890  0015                     l11777:	
  1891                           ;Main.c: 370: unsigned char choice = 255;
  1892  0015  30FF               	movlw	(0FFh)
  1893  0016  1283               	bcf	status, 5	;RP0=0, select bank0
  1894  0017  1303               	bcf	status, 6	;RP1=0, select bank0
  1895  0018  00E7               	movwf	(??_main+0)+0
  1896  0019  0867               	movf	(??_main+0)+0,w
  1897  001A  1683               	bsf	status, 5	;RP0=1, select bank1
  1898  001B  1303               	bcf	status, 6	;RP1=0, select bank1
  1899  001C  00E7               	movwf	(main@choice)^080h
  1900                           	line	371
  1901                           	
  1902  001D                     l11779:	
  1903                           ;Main.c: 371: int shortwall = 0;
  1904  001D  01E8               	clrf	(main@shortwall)^080h
  1905  001E  01E9               	clrf	(main@shortwall+1)^080h
  1906                           	line	375
  1907                           	
  1908  001F                     l11781:	
  1909                           ;Main.c: 375: init();
  1910  001F  160A  118A  24D4   	fcall	_init
              120A  118A         
  1911  0024  2825               	goto	l11783
  1912                           	line	380
  1913                           ;Main.c: 380: while(1)
  1914                           	
  1915  0025                     l2285:	
  1916                           	line	384
  1917                           	
  1918  0025                     l11783:	
  1919                           ;Main.c: 381: {
  1920                           ;Main.c: 384: if (RTC_FLAG_250MS == 1)
  1921  0025  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1922  0026  2828               	goto	u5621
  1923  0027  2829               	goto	u5620
  1924  0028                     u5621:
  1925  0028  286D               	goto	l11815
  1926  0029                     u5620:
  1927                           	line	386
  1928                           	
  1929  0029                     l11785:	
  1930                           ;Main.c: 385: {
  1931                           ;Main.c: 386: RTC_FLAG_250MS = 0;
  1932  0029  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  1933                           	line	387
  1934                           	
  1935  002A                     l11787:	
  1936                           ;Main.c: 387: robot_read();
  1937  002A  160A  118A  275A   	fcall	_robot_read
              120A  118A         
  1938                           	line	388
  1939                           	
  1940  002F                     l11789:	
  1941                           ;Main.c: 388: readAvgDistance();
  1942  002F  160A  118A  27AB   	fcall	_readAvgDistance
              120A  118A         
  1943                           	line	389
  1944                           	
  1945  0034                     l11791:	
  1946                           ;Main.c: 389: UpdateDisplay();
  1947  0034  120A  118A  24D2   	fcall	_UpdateDisplay
              120A  118A         
  1948  0039  286D               	goto	l11815
  1949                           	line	390
  1950                           	
  1951  003A                     l2286:	
  1952                           	line	392
  1953                           ;Main.c: 390: }
  1954                           ;Main.c: 392: switch (buttonPressed)
  1955  003A  286D               	goto	l11815
  1956                           	line	394
  1957                           ;Main.c: 393: {
  1958                           ;Main.c: 394: case 1:
  1959                           	
  1960  003B                     l2288:	
  1961                           	line	395
  1962                           	
  1963  003B                     l11793:	
  1964                           ;Main.c: 395: Menu(1);
  1965  003B  3001               	movlw	(01h)
  1966  003C  160A  118A  2673   	fcall	_Menu
              120A  118A         
  1967                           	line	397
  1968                           	
  1969  0041                     l11795:	
  1970                           ;Main.c: 397: buttonPressed = 0;
  1971  0041  01FD               	clrf	(_buttonPressed)	;volatile
  1972                           	line	399
  1973                           ;Main.c: 399: break;
  1974  0042  2A8C               	goto	l11899
  1975                           	line	400
  1976                           ;Main.c: 400: case 2:
  1977                           	
  1978  0043                     l2290:	
  1979                           	line	401
  1980                           	
  1981  0043                     l11797:	
  1982                           ;Main.c: 401: Menu(2);
  1983  0043  3002               	movlw	(02h)
  1984  0044  160A  118A  2673   	fcall	_Menu
              120A  118A         
  1985                           	line	403
  1986                           	
  1987  0049                     l11799:	
  1988                           ;Main.c: 403: buttonPressed = 0;
  1989  0049  01FD               	clrf	(_buttonPressed)	;volatile
  1990                           	line	405
  1991                           ;Main.c: 405: break;
  1992  004A  2A8C               	goto	l11899
  1993                           	line	406
  1994                           ;Main.c: 406: case 3:
  1995                           	
  1996  004B                     l2291:	
  1997                           	line	407
  1998                           	
  1999  004B                     l11801:	
  2000                           ;Main.c: 407: Menu(3);
  2001  004B  3003               	movlw	(03h)
  2002  004C  160A  118A  2673   	fcall	_Menu
              120A  118A         
  2003                           	line	409
  2004                           	
  2005  0051                     l11803:	
  2006                           ;Main.c: 409: buttonPressed = 0;
  2007  0051  01FD               	clrf	(_buttonPressed)	;volatile
  2008                           	line	411
  2009                           ;Main.c: 411: break;
  2010  0052  2A8C               	goto	l11899
  2011                           	line	412
  2012                           ;Main.c: 412: case 4:
  2013                           	
  2014  0053                     l2292:	
  2015                           	line	413
  2016                           	
  2017  0053                     l11805:	
  2018                           ;Main.c: 413: Menu(4);
  2019  0053  3004               	movlw	(04h)
  2020  0054  160A  118A  2673   	fcall	_Menu
              120A  118A         
  2021                           	line	415
  2022                           	
  2023  0059                     l11807:	
  2024                           ;Main.c: 415: buttonPressed = 0;
  2025  0059  01FD               	clrf	(_buttonPressed)	;volatile
  2026                           	line	417
  2027                           ;Main.c: 417: break;
  2028  005A  2A8C               	goto	l11899
  2029                           	line	418
  2030                           ;Main.c: 418: case 5:
  2031                           	
  2032  005B                     l2293:	
  2033                           	line	419
  2034                           	
  2035  005B                     l11809:	
  2036                           ;Main.c: 419: choice = Menu(5);
  2037  005B  3005               	movlw	(05h)
  2038  005C  160A  118A  2673   	fcall	_Menu
              120A  118A         
  2039  0061  1283               	bcf	status, 5	;RP0=0, select bank0
  2040  0062  1303               	bcf	status, 6	;RP1=0, select bank0
  2041  0063  00E7               	movwf	(??_main+0)+0
  2042  0064  0867               	movf	(??_main+0)+0,w
  2043  0065  1683               	bsf	status, 5	;RP0=1, select bank1
  2044  0066  1303               	bcf	status, 6	;RP1=0, select bank1
  2045  0067  00E7               	movwf	(main@choice)^080h
  2046                           	line	421
  2047                           	
  2048  0068                     l11811:	
  2049                           ;Main.c: 421: buttonPressed = 0;
  2050  0068  01FD               	clrf	(_buttonPressed)	;volatile
  2051                           	line	423
  2052                           ;Main.c: 423: break;
  2053  0069  2A8C               	goto	l11899
  2054                           	line	424
  2055                           ;Main.c: 424: default:
  2056                           	
  2057  006A                     l2294:	
  2058                           	line	425
  2059                           ;Main.c: 425: buttonPressed = 0;
  2060  006A  01FD               	clrf	(_buttonPressed)	;volatile
  2061                           	line	426
  2062                           ;Main.c: 426: break;
  2063  006B  2A8C               	goto	l11899
  2064                           	line	427
  2065                           	
  2066  006C                     l11813:	
  2067                           ;Main.c: 427: }
  2068  006C  2A8C               	goto	l11899
  2069                           	line	392
  2070                           	
  2071  006D                     l2287:	
  2072                           	
  2073  006D                     l11815:	
  2074  006D  087D               	movf	(_buttonPressed),w	;volatile
  2075                           	; Switch size 1, requested type "space"
  2076                           ; Number of cases is 5, Range of values is 1 to 5
  2077                           ; switch strategies available:
  2078                           ; Name         Instructions Cycles
  2079                           ; simple_byte           16     9 (average)
  2080                           ; direct_byte           26    11 (fixed)
  2081                           ; jumptable            263     9 (fixed)
  2082                           ;	Chosen strategy is simple_byte
  2083                           
  2084                           	opt asmopt_off
  2085  006E  3A01               	xorlw	1^0	; case 1
  2086  006F  1903               	skipnz
  2087  0070  283B               	goto	l11793
  2088  0071  3A03               	xorlw	2^1	; case 2
  2089  0072  1903               	skipnz
  2090  0073  2843               	goto	l11797
  2091  0074  3A01               	xorlw	3^2	; case 3
  2092  0075  1903               	skipnz
  2093  0076  284B               	goto	l11801
  2094  0077  3A07               	xorlw	4^3	; case 4
  2095  0078  1903               	skipnz
  2096  0079  2853               	goto	l11805
  2097  007A  3A01               	xorlw	5^4	; case 5
  2098  007B  1903               	skipnz
  2099  007C  285B               	goto	l11809
  2100  007D  286A               	goto	l2294
  2101                           	opt asmopt_on
  2102                           
  2103                           	line	427
  2104                           	
  2105  007E                     l2289:	
  2106                           	line	430
  2107                           ;Main.c: 430: switch (choice)
  2108  007E  2A8C               	goto	l11899
  2109                           	line	432
  2110                           ;Main.c: 431: {
  2111                           ;Main.c: 432: case 0:
  2112                           	
  2113  007F                     l2296:	
  2114                           	line	435
  2115                           	
  2116  007F                     l11817:	
  2117                           ;Main.c: 435: straightLineTest(0);
  2118  007F  3000               	movlw	low(0)
  2119  0080  1283               	bcf	status, 5	;RP0=0, select bank0
  2120  0081  1303               	bcf	status, 6	;RP1=0, select bank0
  2121  0082  00E4               	movwf	(?_straightLineTest)
  2122  0083  3000               	movlw	high(0)
  2123  0084  00E5               	movwf	((?_straightLineTest))+1
  2124  0085  120A  158A  24B1   	fcall	_straightLineTest
              120A  118A         
  2125                           	line	437
  2126                           ;Main.c: 437: break;
  2127  008A  2AA2               	goto	l11901
  2128                           	line	438
  2129                           ;Main.c: 438: case 1:
  2130                           	
  2131  008B                     l2298:	
  2132                           	line	440
  2133                           	
  2134  008B                     l11819:	
  2135                           ;Main.c: 440: straightLineTest(1);
  2136  008B  3001               	movlw	low(01h)
  2137  008C  1283               	bcf	status, 5	;RP0=0, select bank0
  2138  008D  1303               	bcf	status, 6	;RP1=0, select bank0
  2139  008E  00E4               	movwf	(?_straightLineTest)
  2140  008F  3000               	movlw	high(01h)
  2141  0090  00E5               	movwf	((?_straightLineTest))+1
  2142  0091  120A  158A  24B1   	fcall	_straightLineTest
              120A  118A         
  2143                           	line	441
  2144                           ;Main.c: 441: break;
  2145  0096  2AA2               	goto	l11901
  2146                           	line	442
  2147                           ;Main.c: 442: case 2:
  2148                           	
  2149  0097                     l2299:	
  2150                           	line	443
  2151                           	
  2152  0097                     l11821:	
  2153                           ;Main.c: 443: straightLineTest(1);
  2154  0097  3001               	movlw	low(01h)
  2155  0098  1283               	bcf	status, 5	;RP0=0, select bank0
  2156  0099  1303               	bcf	status, 6	;RP1=0, select bank0
  2157  009A  00E4               	movwf	(?_straightLineTest)
  2158  009B  3000               	movlw	high(01h)
  2159  009C  00E5               	movwf	((?_straightLineTest))+1
  2160  009D  120A  158A  24B1   	fcall	_straightLineTest
              120A  118A         
  2161                           	line	448
  2162                           ;Main.c: 448: break;
  2163  00A2  2AA2               	goto	l11901
  2164                           	line	449
  2165                           ;Main.c: 449: case 3:
  2166                           	
  2167  00A3                     l2300:	
  2168                           	line	450
  2169                           	
  2170  00A3                     l11823:	
  2171                           ;Main.c: 450: _delay((unsigned long)((100)*(20000000/4000.0)));
  2172                           	opt asmopt_off
  2173  00A3  3003               movlw  3
  2174  00A4  1283               	bcf	status, 5	;RP0=0, select bank0
  2175  00A5  1303               	bcf	status, 6	;RP1=0, select bank0
  2176  00A6  00E9               movwf	((??_main+0)+0+2),f
  2177  00A7  308A               movlw	138
  2178  00A8  00E8               movwf	((??_main+0)+0+1),f
  2179  00A9  3056               	movlw	86
  2180  00AA  00E7               movwf	((??_main+0)+0),f
  2181  00AB                     u5737:
  2182  00AB  0BE7               	decfsz	((??_main+0)+0),f
  2183  00AC  28AB               	goto	u5737
  2184  00AD  0BE8               	decfsz	((??_main+0)+0+1),f
  2185  00AE  28AB               	goto	u5737
  2186  00AF  0BE9               	decfsz	((??_main+0)+0+2),f
  2187  00B0  28AB               	goto	u5737
  2188  00B1  28B2               	nop2
  2189                           opt asmopt_on
  2190                           
  2191                           	line	451
  2192                           	
  2193  00B2                     l11825:	
  2194                           ;Main.c: 451: robotMove(1000);
  2195  00B2  30E8               	movlw	low(03E8h)
  2196  00B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2197  00B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2198  00B5  00D9               	movwf	(?_robotMove)
  2199  00B6  3003               	movlw	high(03E8h)
  2200  00B7  00DA               	movwf	((?_robotMove))+1
  2201  00B8  120A  158A  240A   	fcall	_robotMove
              120A  118A         
  2202                           	line	452
  2203                           	
  2204  00BD                     l11827:	
  2205                           ;Main.c: 452: robotTurn(-90);
  2206  00BD  30A6               	movlw	low(-90)
  2207  00BE  1283               	bcf	status, 5	;RP0=0, select bank0
  2208  00BF  1303               	bcf	status, 6	;RP1=0, select bank0
  2209  00C0  00A2               	movwf	(?_robotTurn)
  2210  00C1  30FF               	movlw	high(-90)
  2211  00C2  00A3               	movwf	((?_robotTurn))+1
  2212  00C3  120A  158A  2244   	fcall	_robotTurn
              120A  118A         
  2213                           	line	453
  2214                           	
  2215  00C8                     l11829:	
  2216                           ;Main.c: 453: robotMove(1000);
  2217  00C8  30E8               	movlw	low(03E8h)
  2218  00C9  1283               	bcf	status, 5	;RP0=0, select bank0
  2219  00CA  1303               	bcf	status, 6	;RP1=0, select bank0
  2220  00CB  00D9               	movwf	(?_robotMove)
  2221  00CC  3003               	movlw	high(03E8h)
  2222  00CD  00DA               	movwf	((?_robotMove))+1
  2223  00CE  120A  158A  240A   	fcall	_robotMove
              120A  118A         
  2224                           	line	454
  2225                           ;Main.c: 454: break;
  2226  00D3  2AA2               	goto	l11901
  2227                           	line	455
  2228                           ;Main.c: 455: case 4:
  2229                           	
  2230  00D4                     l2301:	
  2231  00D4  28D5               	goto	l11831
  2232                           	line	457
  2233                           ;Main.c: 457: while(1)
  2234                           	
  2235  00D5                     l2302:	
  2236                           	line	459
  2237                           	
  2238  00D5                     l11831:	
  2239                           ;Main.c: 458: {
  2240                           ;Main.c: 459: shortwall = scan360() - 13;
  2241  00D5  120A  158A  214D   	fcall	_scan360
              120A  118A         
  2242  00DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2243  00DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2244  00DC  0859               	movf	(0+(?_scan360)),w
  2245  00DD  3EF3               	addlw	low(-13)
  2246  00DE  1683               	bsf	status, 5	;RP0=1, select bank1
  2247  00DF  1303               	bcf	status, 6	;RP1=0, select bank1
  2248  00E0  00E8               	movwf	(main@shortwall)^080h
  2249  00E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2250  00E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2251  00E3  085A               	movf	(1+(?_scan360)),w
  2252  00E4  1803               	skipnc
  2253  00E5  3E01               	addlw	1
  2254  00E6  3EFF               	addlw	high(-13)
  2255  00E7  1683               	bsf	status, 5	;RP0=1, select bank1
  2256  00E8  1303               	bcf	status, 6	;RP1=0, select bank1
  2257  00E9  00E9               	movwf	1+(main@shortwall)^080h
  2258                           	line	460
  2259                           	
  2260  00EA                     l11833:	
  2261                           ;Main.c: 460: int RT2P = 0;
  2262  00EA  01EA               	clrf	(main@RT2P)^080h
  2263  00EB  01EB               	clrf	(main@RT2P+1)^080h
  2264                           	line	461
  2265                           	
  2266  00EC                     l11835:	
  2267                           ;Main.c: 461: int direction1 = 0;
  2268  00EC  01E3               	clrf	(main@direction1)^080h
  2269  00ED  01E4               	clrf	(main@direction1+1)^080h
  2270                           	line	462
  2271                           	
  2272  00EE                     l11837:	
  2273                           ;Main.c: 462: if (shortwall > 200)
  2274  00EE  0869               	movf	(main@shortwall+1)^080h,w
  2275  00EF  3A80               	xorlw	80h
  2276  00F0  00FF               	movwf	btemp+1
  2277  00F1  3080               	movlw	(high(0C9h))^80h
  2278  00F2  027F               	subwf	btemp+1,w
  2279  00F3  1D03               	skipz
  2280  00F4  28F7               	goto	u5635
  2281  00F5  30C9               	movlw	low(0C9h)
  2282  00F6  0268               	subwf	(main@shortwall)^080h,w
  2283  00F7                     u5635:
  2284                           
  2285  00F7  1C03               	skipc
  2286  00F8  28FA               	goto	u5631
  2287  00F9  28FB               	goto	u5630
  2288  00FA                     u5631:
  2289  00FA  2906               	goto	l11841
  2290  00FB                     u5630:
  2291                           	line	463
  2292                           	
  2293  00FB                     l11839:	
  2294                           ;Main.c: 463: RT2P = shortwall + 100;
  2295  00FB  1683               	bsf	status, 5	;RP0=1, select bank1
  2296  00FC  1303               	bcf	status, 6	;RP1=0, select bank1
  2297  00FD  0868               	movf	(main@shortwall)^080h,w
  2298  00FE  3E64               	addlw	low(064h)
  2299  00FF  00EA               	movwf	(main@RT2P)^080h
  2300  0100  0869               	movf	(main@shortwall+1)^080h,w
  2301  0101  1803               	skipnc
  2302  0102  3E01               	addlw	1
  2303  0103  3E00               	addlw	high(064h)
  2304  0104  00EB               	movwf	1+(main@RT2P)^080h
  2305  0105  2906               	goto	l11841
  2306                           	
  2307  0106                     l2303:	
  2308                           	line	464
  2309                           	
  2310  0106                     l11841:	
  2311                           ;Main.c: 464: if (shortwall < 200)
  2312  0106  1683               	bsf	status, 5	;RP0=1, select bank1
  2313  0107  1303               	bcf	status, 6	;RP1=0, select bank1
  2314  0108  0869               	movf	(main@shortwall+1)^080h,w
  2315  0109  3A80               	xorlw	80h
  2316  010A  00FF               	movwf	btemp+1
  2317  010B  3080               	movlw	(high(0C8h))^80h
  2318  010C  027F               	subwf	btemp+1,w
  2319  010D  1D03               	skipz
  2320  010E  2911               	goto	u5645
  2321  010F  30C8               	movlw	low(0C8h)
  2322  0110  0268               	subwf	(main@shortwall)^080h,w
  2323  0111                     u5645:
  2324                           
  2325  0111  1803               	skipnc
  2326  0112  2914               	goto	u5641
  2327  0113  2915               	goto	u5640
  2328  0114                     u5641:
  2329  0114  2920               	goto	l11845
  2330  0115                     u5640:
  2331                           	line	465
  2332                           	
  2333  0115                     l11843:	
  2334                           ;Main.c: 465: RT2P = shortwall - 100;
  2335  0115  1683               	bsf	status, 5	;RP0=1, select bank1
  2336  0116  1303               	bcf	status, 6	;RP1=0, select bank1
  2337  0117  0868               	movf	(main@shortwall)^080h,w
  2338  0118  3E9C               	addlw	low(-100)
  2339  0119  00EA               	movwf	(main@RT2P)^080h
  2340  011A  0869               	movf	(main@shortwall+1)^080h,w
  2341  011B  1803               	skipnc
  2342  011C  3E01               	addlw	1
  2343  011D  3EFF               	addlw	high(-100)
  2344  011E  00EB               	movwf	1+(main@RT2P)^080h
  2345  011F  2920               	goto	l11845
  2346                           	
  2347  0120                     l2304:	
  2348                           	line	468
  2349                           	
  2350  0120                     l11845:	
  2351                           ;Main.c: 468: if (RT2P >= 400 && RT2P < 500 )
  2352  0120  1683               	bsf	status, 5	;RP0=1, select bank1
  2353  0121  1303               	bcf	status, 6	;RP1=0, select bank1
  2354  0122  086B               	movf	(main@RT2P+1)^080h,w
  2355  0123  3A80               	xorlw	80h
  2356  0124  00FF               	movwf	btemp+1
  2357  0125  3081               	movlw	(high(0190h))^80h
  2358  0126  027F               	subwf	btemp+1,w
  2359  0127  1D03               	skipz
  2360  0128  292B               	goto	u5655
  2361  0129  3090               	movlw	low(0190h)
  2362  012A  026A               	subwf	(main@RT2P)^080h,w
  2363  012B                     u5655:
  2364                           
  2365  012B  1C03               	skipc
  2366  012C  292E               	goto	u5651
  2367  012D  292F               	goto	u5650
  2368  012E                     u5651:
  2369  012E  294D               	goto	l11853
  2370  012F                     u5650:
  2371                           	
  2372  012F                     l11847:	
  2373  012F  1683               	bsf	status, 5	;RP0=1, select bank1
  2374  0130  1303               	bcf	status, 6	;RP1=0, select bank1
  2375  0131  086B               	movf	(main@RT2P+1)^080h,w
  2376  0132  3A80               	xorlw	80h
  2377  0133  00FF               	movwf	btemp+1
  2378  0134  3081               	movlw	(high(01F4h))^80h
  2379  0135  027F               	subwf	btemp+1,w
  2380  0136  1D03               	skipz
  2381  0137  293A               	goto	u5665
  2382  0138  30F4               	movlw	low(01F4h)
  2383  0139  026A               	subwf	(main@RT2P)^080h,w
  2384  013A                     u5665:
  2385                           
  2386  013A  1803               	skipnc
  2387  013B  293D               	goto	u5661
  2388  013C  293E               	goto	u5660
  2389  013D                     u5661:
  2390  013D  294D               	goto	l11853
  2391  013E                     u5660:
  2392                           	line	470
  2393                           	
  2394  013E                     l11849:	
  2395                           ;Main.c: 469: {
  2396                           ;Main.c: 470: RT2P = RT2P - 400;
  2397  013E  1683               	bsf	status, 5	;RP0=1, select bank1
  2398  013F  1303               	bcf	status, 6	;RP1=0, select bank1
  2399  0140  086A               	movf	(main@RT2P)^080h,w
  2400  0141  3E70               	addlw	low(-400)
  2401  0142  00EA               	movwf	(main@RT2P)^080h
  2402  0143  086B               	movf	(main@RT2P+1)^080h,w
  2403  0144  1803               	skipnc
  2404  0145  3E01               	addlw	1
  2405  0146  3EFE               	addlw	high(-400)
  2406  0147  00EB               	movwf	1+(main@RT2P)^080h
  2407                           	line	471
  2408                           	
  2409  0148                     l11851:	
  2410                           ;Main.c: 471: direction1 = 1;
  2411  0148  3001               	movlw	low(01h)
  2412  0149  00E3               	movwf	(main@direction1)^080h
  2413  014A  3000               	movlw	high(01h)
  2414  014B  00E4               	movwf	((main@direction1)^080h)+1
  2415  014C  294D               	goto	l11853
  2416                           	line	472
  2417                           	
  2418  014D                     l2305:	
  2419                           	line	473
  2420                           	
  2421  014D                     l11853:	
  2422                           ;Main.c: 472: }
  2423                           ;Main.c: 473: if (RT2P >= 200 && RT2P < 400)
  2424  014D  1683               	bsf	status, 5	;RP0=1, select bank1
  2425  014E  1303               	bcf	status, 6	;RP1=0, select bank1
  2426  014F  086B               	movf	(main@RT2P+1)^080h,w
  2427  0150  3A80               	xorlw	80h
  2428  0151  00FF               	movwf	btemp+1
  2429  0152  3080               	movlw	(high(0C8h))^80h
  2430  0153  027F               	subwf	btemp+1,w
  2431  0154  1D03               	skipz
  2432  0155  2958               	goto	u5675
  2433  0156  30C8               	movlw	low(0C8h)
  2434  0157  026A               	subwf	(main@RT2P)^080h,w
  2435  0158                     u5675:
  2436                           
  2437  0158  1C03               	skipc
  2438  0159  295B               	goto	u5671
  2439  015A  295C               	goto	u5670
  2440  015B                     u5671:
  2441  015B  2990               	goto	l11863
  2442  015C                     u5670:
  2443                           	
  2444  015C                     l11855:	
  2445  015C  1683               	bsf	status, 5	;RP0=1, select bank1
  2446  015D  1303               	bcf	status, 6	;RP1=0, select bank1
  2447  015E  086B               	movf	(main@RT2P+1)^080h,w
  2448  015F  3A80               	xorlw	80h
  2449  0160  00FF               	movwf	btemp+1
  2450  0161  3081               	movlw	(high(0190h))^80h
  2451  0162  027F               	subwf	btemp+1,w
  2452  0163  1D03               	skipz
  2453  0164  2967               	goto	u5685
  2454  0165  3090               	movlw	low(0190h)
  2455  0166  026A               	subwf	(main@RT2P)^080h,w
  2456  0167                     u5685:
  2457                           
  2458  0167  1803               	skipnc
  2459  0168  296A               	goto	u5681
  2460  0169  296B               	goto	u5680
  2461  016A                     u5681:
  2462  016A  2990               	goto	l11863
  2463  016B                     u5680:
  2464                           	line	475
  2465                           	
  2466  016B                     l11857:	
  2467                           ;Main.c: 474: {
  2468                           ;Main.c: 475: RT2P = 400 - RT2P;
  2469  016B  1683               	bsf	status, 5	;RP0=1, select bank1
  2470  016C  1303               	bcf	status, 6	;RP1=0, select bank1
  2471  016D  096A               	comf	(main@RT2P)^080h,w
  2472  016E  1283               	bcf	status, 5	;RP0=0, select bank0
  2473  016F  1303               	bcf	status, 6	;RP1=0, select bank0
  2474  0170  00E7               	movwf	(??_main+0)+0
  2475  0171  1683               	bsf	status, 5	;RP0=1, select bank1
  2476  0172  1303               	bcf	status, 6	;RP1=0, select bank1
  2477  0173  096B               	comf	(main@RT2P+1)^080h,w
  2478  0174  1283               	bcf	status, 5	;RP0=0, select bank0
  2479  0175  1303               	bcf	status, 6	;RP1=0, select bank0
  2480  0176  00E8               	movwf	((??_main+0)+0+1)
  2481  0177  0AE7               	incf	(??_main+0)+0,f
  2482  0178  1903               	skipnz
  2483  0179  0AE8               	incf	((??_main+0)+0+1),f
  2484  017A  0867               	movf	0+(??_main+0)+0,w
  2485  017B  3E90               	addlw	low(0190h)
  2486  017C  1683               	bsf	status, 5	;RP0=1, select bank1
  2487  017D  1303               	bcf	status, 6	;RP1=0, select bank1
  2488  017E  00EA               	movwf	(main@RT2P)^080h
  2489  017F  1283               	bcf	status, 5	;RP0=0, select bank0
  2490  0180  1303               	bcf	status, 6	;RP1=0, select bank0
  2491  0181  0868               	movf	1+(??_main+0)+0,w
  2492  0182  1803               	skipnc
  2493  0183  3E01               	addlw	1
  2494  0184  3E01               	addlw	high(0190h)
  2495  0185  1683               	bsf	status, 5	;RP0=1, select bank1
  2496  0186  1303               	bcf	status, 6	;RP1=0, select bank1
  2497  0187  00EB               	movwf	1+(main@RT2P)^080h
  2498                           	line	476
  2499                           	
  2500  0188                     l11859:	
  2501                           ;Main.c: 476: RT2P = RT2P * -1;
  2502  0188  09EA               	comf	(main@RT2P)^080h,f
  2503  0189  09EB               	comf	(main@RT2P+1)^080h,f
  2504  018A  0AEA               	incf	(main@RT2P)^080h,f
  2505  018B  1903               	skipnz
  2506  018C  0AEB               	incf	(main@RT2P+1)^080h,f
  2507                           	line	477
  2508                           	
  2509  018D                     l11861:	
  2510                           ;Main.c: 477: direction1 = 0;
  2511  018D  01E3               	clrf	(main@direction1)^080h
  2512  018E  01E4               	clrf	(main@direction1+1)^080h
  2513  018F  2990               	goto	l11863
  2514                           	line	478
  2515                           	
  2516  0190                     l2306:	
  2517                           	line	479
  2518                           	
  2519  0190                     l11863:	
  2520                           ;Main.c: 478: }
  2521                           ;Main.c: 479: if (RT2P < 200 && RT2P >= 0)
  2522  0190  1683               	bsf	status, 5	;RP0=1, select bank1
  2523  0191  1303               	bcf	status, 6	;RP1=0, select bank1
  2524  0192  086B               	movf	(main@RT2P+1)^080h,w
  2525  0193  3A80               	xorlw	80h
  2526  0194  00FF               	movwf	btemp+1
  2527  0195  3080               	movlw	(high(0C8h))^80h
  2528  0196  027F               	subwf	btemp+1,w
  2529  0197  1D03               	skipz
  2530  0198  299B               	goto	u5695
  2531  0199  30C8               	movlw	low(0C8h)
  2532  019A  026A               	subwf	(main@RT2P)^080h,w
  2533  019B                     u5695:
  2534                           
  2535  019B  1803               	skipnc
  2536  019C  299E               	goto	u5691
  2537  019D  299F               	goto	u5690
  2538  019E                     u5691:
  2539  019E  29AA               	goto	l11869
  2540  019F                     u5690:
  2541                           	
  2542  019F                     l11865:	
  2543  019F  1683               	bsf	status, 5	;RP0=1, select bank1
  2544  01A0  1303               	bcf	status, 6	;RP1=0, select bank1
  2545  01A1  1BEB               	btfsc	(main@RT2P+1)^080h,7
  2546  01A2  29A4               	goto	u5701
  2547  01A3  29A5               	goto	u5700
  2548  01A4                     u5701:
  2549  01A4  29AA               	goto	l11869
  2550  01A5                     u5700:
  2551                           	line	481
  2552                           	
  2553  01A5                     l11867:	
  2554                           ;Main.c: 480: {
  2555                           ;Main.c: 481: direction1 = 1;
  2556  01A5  3001               	movlw	low(01h)
  2557  01A6  00E3               	movwf	(main@direction1)^080h
  2558  01A7  3000               	movlw	high(01h)
  2559  01A8  00E4               	movwf	((main@direction1)^080h)+1
  2560  01A9  29AA               	goto	l11869
  2561                           	line	482
  2562                           	
  2563  01AA                     l2307:	
  2564                           	line	483
  2565                           	
  2566  01AA                     l11869:	
  2567                           ;Main.c: 482: }
  2568                           ;Main.c: 483: if (RT2P < 0 && RT2P >= -200)
  2569  01AA  1683               	bsf	status, 5	;RP0=1, select bank1
  2570  01AB  1303               	bcf	status, 6	;RP1=0, select bank1
  2571  01AC  1FEB               	btfss	(main@RT2P+1)^080h,7
  2572  01AD  29AF               	goto	u5711
  2573  01AE  29B0               	goto	u5710
  2574  01AF                     u5711:
  2575  01AF  29C6               	goto	l11879
  2576  01B0                     u5710:
  2577                           	
  2578  01B0                     l11871:	
  2579  01B0  086B               	movf	(main@RT2P+1)^080h,w
  2580  01B1  3A80               	xorlw	80h
  2581  01B2  00FF               	movwf	btemp+1
  2582  01B3  307F               	movlw	(high(-200))^80h
  2583  01B4  027F               	subwf	btemp+1,w
  2584  01B5  1D03               	skipz
  2585  01B6  29B9               	goto	u5725
  2586  01B7  3038               	movlw	low(-200)
  2587  01B8  026A               	subwf	(main@RT2P)^080h,w
  2588  01B9                     u5725:
  2589                           
  2590  01B9  1C03               	skipc
  2591  01BA  29BC               	goto	u5721
  2592  01BB  29BD               	goto	u5720
  2593  01BC                     u5721:
  2594  01BC  29C6               	goto	l11879
  2595  01BD                     u5720:
  2596                           	line	486
  2597                           	
  2598  01BD                     l11873:	
  2599                           ;Main.c: 484: {
  2600                           ;Main.c: 486: direction1 = 0;
  2601  01BD  1683               	bsf	status, 5	;RP0=1, select bank1
  2602  01BE  1303               	bcf	status, 6	;RP1=0, select bank1
  2603  01BF  01E3               	clrf	(main@direction1)^080h
  2604  01C0  01E4               	clrf	(main@direction1+1)^080h
  2605  01C1  29C6               	goto	l11879
  2606                           	line	487
  2607                           	
  2608  01C2                     l2308:	
  2609  01C2  29C6               	goto	l11879
  2610                           	line	488
  2611                           	
  2612  01C3                     l11875:	
  2613  01C3  29C6               	goto	l11879
  2614                           	
  2615  01C4                     l11877:	
  2616  01C4  29C6               	goto	l11879
  2617                           	
  2618  01C5                     l2311:	
  2619  01C5  29C6               	goto	l11879
  2620                           	line	491
  2621                           ;Main.c: 489: {
  2622                           	
  2623  01C6                     l2309:	
  2624                           	line	493
  2625                           	
  2626  01C6                     l11879:	
  2627                           ;Main.c: 491: }
  2628                           ;Main.c: 493: rotate((400 - shortwall ), 0);
  2629  01C6  1683               	bsf	status, 5	;RP0=1, select bank1
  2630  01C7  1303               	bcf	status, 6	;RP1=0, select bank1
  2631  01C8  0968               	comf	(main@shortwall)^080h,w
  2632  01C9  1283               	bcf	status, 5	;RP0=0, select bank0
  2633  01CA  1303               	bcf	status, 6	;RP1=0, select bank0
  2634  01CB  00E7               	movwf	(??_main+0)+0
  2635  01CC  1683               	bsf	status, 5	;RP0=1, select bank1
  2636  01CD  1303               	bcf	status, 6	;RP1=0, select bank1
  2637  01CE  0969               	comf	(main@shortwall+1)^080h,w
  2638  01CF  1283               	bcf	status, 5	;RP0=0, select bank0
  2639  01D0  1303               	bcf	status, 6	;RP1=0, select bank0
  2640  01D1  00E8               	movwf	((??_main+0)+0+1)
  2641  01D2  0AE7               	incf	(??_main+0)+0,f
  2642  01D3  1903               	skipnz
  2643  01D4  0AE8               	incf	((??_main+0)+0+1),f
  2644  01D5  0867               	movf	0+(??_main+0)+0,w
  2645  01D6  3E90               	addlw	low(0190h)
  2646  01D7  00A3               	movwf	(?_rotate)
  2647  01D8  0868               	movf	1+(??_main+0)+0,w
  2648  01D9  1803               	skipnc
  2649  01DA  3E01               	addlw	1
  2650  01DB  3E01               	addlw	high(0190h)
  2651  01DC  00A4               	movwf	1+(?_rotate)
  2652  01DD  01A5               	clrf	0+(?_rotate)+02h
  2653  01DE  160A  118A  270A   	fcall	_rotate
              120A  118A         
  2654                           	line	494
  2655                           	
  2656  01E3                     l11881:	
  2657                           ;Main.c: 494: _delay((unsigned long)((100)*(20000000/4000.0)));
  2658                           	opt asmopt_off
  2659  01E3  3003               movlw  3
  2660  01E4  1283               	bcf	status, 5	;RP0=0, select bank0
  2661  01E5  1303               	bcf	status, 6	;RP1=0, select bank0
  2662  01E6  00E9               movwf	((??_main+0)+0+2),f
  2663  01E7  308A               movlw	138
  2664  01E8  00E8               movwf	((??_main+0)+0+1),f
  2665  01E9  3056               	movlw	86
  2666  01EA  00E7               movwf	((??_main+0)+0),f
  2667  01EB                     u5747:
  2668  01EB  0BE7               	decfsz	((??_main+0)+0),f
  2669  01EC  29EB               	goto	u5747
  2670  01ED  0BE8               	decfsz	((??_main+0)+0+1),f
  2671  01EE  29EB               	goto	u5747
  2672  01EF  0BE9               	decfsz	((??_main+0)+0+2),f
  2673  01F0  29EB               	goto	u5747
  2674  01F1  29F2               	nop2
  2675                           opt asmopt_on
  2676                           
  2677                           	line	497
  2678                           	
  2679  01F2                     l11883:	
  2680                           ;Main.c: 497: int RT2A= RT2P * (36.0/40.0);
  2681  01F2  1683               	bsf	status, 5	;RP0=1, select bank1
  2682  01F3  1303               	bcf	status, 6	;RP1=0, select bank1
  2683  01F4  086B               	movf	(main@RT2P+1)^080h,w
  2684  01F5  1283               	bcf	status, 5	;RP0=0, select bank0
  2685  01F6  1303               	bcf	status, 6	;RP1=0, select bank0
  2686  01F7  01B7               	clrf	(?___awtoft+1)
  2687  01F8  07B7               	addwf	(?___awtoft+1)
  2688  01F9  1683               	bsf	status, 5	;RP0=1, select bank1
  2689  01FA  1303               	bcf	status, 6	;RP1=0, select bank1
  2690  01FB  086A               	movf	(main@RT2P)^080h,w
  2691  01FC  1283               	bcf	status, 5	;RP0=0, select bank0
  2692  01FD  1303               	bcf	status, 6	;RP1=0, select bank0
  2693  01FE  01B6               	clrf	(?___awtoft)
  2694  01FF  07B6               	addwf	(?___awtoft)
  2695                           
  2696  0200  160A  118A  244F   	fcall	___awtoft
              120A  118A         
  2697  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  2698  0206  1303               	bcf	status, 6	;RP1=0, select bank0
  2699  0207  0836               	movf	(0+(?___awtoft)),w
  2700  0208  00BF               	movwf	0+(?___ftmul)+03h
  2701  0209  0837               	movf	(1+(?___awtoft)),w
  2702  020A  00C0               	movwf	1+(?___ftmul)+03h
  2703  020B  0838               	movf	(2+(?___awtoft)),w
  2704  020C  00C1               	movwf	2+(?___ftmul)+03h
  2705  020D  3066               	movlw	0x66
  2706  020E  00BC               	movwf	(?___ftmul)
  2707  020F  3066               	movlw	0x66
  2708  0210  00BD               	movwf	(?___ftmul+1)
  2709  0211  303F               	movlw	0x3f
  2710  0212  00BE               	movwf	(?___ftmul+2)
  2711  0213  120A  158A  2712   	fcall	___ftmul
              120A  118A         
  2712  0218  1283               	bcf	status, 5	;RP0=0, select bank0
  2713  0219  1303               	bcf	status, 6	;RP1=0, select bank0
  2714  021A  083C               	movf	(0+(?___ftmul)),w
  2715  021B  00A8               	movwf	(?___fttol)
  2716  021C  083D               	movf	(1+(?___ftmul)),w
  2717  021D  00A9               	movwf	(?___fttol+1)
  2718  021E  083E               	movf	(2+(?___ftmul)),w
  2719  021F  00AA               	movwf	(?___fttol+2)
  2720  0220  120A  158A  2364   	fcall	___fttol
              120A  118A         
  2721  0225  1283               	bcf	status, 5	;RP0=0, select bank0
  2722  0226  1303               	bcf	status, 6	;RP1=0, select bank0
  2723  0227  0829               	movf	1+(((0+(?___fttol)))),w
  2724  0228  1683               	bsf	status, 5	;RP0=1, select bank1
  2725  0229  1303               	bcf	status, 6	;RP1=0, select bank1
  2726  022A  01E6               	clrf	(main@RT2A+1)^080h
  2727  022B  07E6               	addwf	(main@RT2A+1)^080h
  2728  022C  1283               	bcf	status, 5	;RP0=0, select bank0
  2729  022D  1303               	bcf	status, 6	;RP1=0, select bank0
  2730  022E  0828               	movf	0+(((0+(?___fttol)))),w
  2731  022F  1683               	bsf	status, 5	;RP0=1, select bank1
  2732  0230  1303               	bcf	status, 6	;RP1=0, select bank1
  2733  0231  01E5               	clrf	(main@RT2A)^080h
  2734  0232  07E5               	addwf	(main@RT2A)^080h
  2735                           
  2736                           	line	498
  2737                           	
  2738  0233                     l11885:	
  2739                           ;Main.c: 498: robotTurn(RT2A);
  2740  0233  0866               	movf	(main@RT2A+1)^080h,w
  2741  0234  1283               	bcf	status, 5	;RP0=0, select bank0
  2742  0235  1303               	bcf	status, 6	;RP1=0, select bank0
  2743  0236  01A3               	clrf	(?_robotTurn+1)
  2744  0237  07A3               	addwf	(?_robotTurn+1)
  2745  0238  1683               	bsf	status, 5	;RP0=1, select bank1
  2746  0239  1303               	bcf	status, 6	;RP1=0, select bank1
  2747  023A  0865               	movf	(main@RT2A)^080h,w
  2748  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  2749  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  2750  023D  01A2               	clrf	(?_robotTurn)
  2751  023E  07A2               	addwf	(?_robotTurn)
  2752                           
  2753  023F  120A  158A  2244   	fcall	_robotTurn
              120A  118A         
  2754                           	line	499
  2755                           	
  2756  0244                     l11887:	
  2757                           ;Main.c: 499: _delay((unsigned long)((100)*(20000000/4000.0)));
  2758                           	opt asmopt_off
  2759  0244  3003               movlw  3
  2760  0245  1283               	bcf	status, 5	;RP0=0, select bank0
  2761  0246  1303               	bcf	status, 6	;RP1=0, select bank0
  2762  0247  00E9               movwf	((??_main+0)+0+2),f
  2763  0248  308A               movlw	138
  2764  0249  00E8               movwf	((??_main+0)+0+1),f
  2765  024A  3056               	movlw	86
  2766  024B  00E7               movwf	((??_main+0)+0),f
  2767  024C                     u5757:
  2768  024C  0BE7               	decfsz	((??_main+0)+0),f
  2769  024D  2A4C               	goto	u5757
  2770  024E  0BE8               	decfsz	((??_main+0)+0+1),f
  2771  024F  2A4C               	goto	u5757
  2772  0250  0BE9               	decfsz	((??_main+0)+0+2),f
  2773  0251  2A4C               	goto	u5757
  2774  0252  2A53               	nop2
  2775                           opt asmopt_on
  2776                           
  2777                           	line	500
  2778                           	
  2779  0253                     l11889:	
  2780                           ;Main.c: 500: rotate(shortwall,0);
  2781  0253  1683               	bsf	status, 5	;RP0=1, select bank1
  2782  0254  1303               	bcf	status, 6	;RP1=0, select bank1
  2783  0255  0869               	movf	(main@shortwall+1)^080h,w
  2784  0256  1283               	bcf	status, 5	;RP0=0, select bank0
  2785  0257  1303               	bcf	status, 6	;RP1=0, select bank0
  2786  0258  01A4               	clrf	(?_rotate+1)
  2787  0259  07A4               	addwf	(?_rotate+1)
  2788  025A  1683               	bsf	status, 5	;RP0=1, select bank1
  2789  025B  1303               	bcf	status, 6	;RP1=0, select bank1
  2790  025C  0868               	movf	(main@shortwall)^080h,w
  2791  025D  1283               	bcf	status, 5	;RP0=0, select bank0
  2792  025E  1303               	bcf	status, 6	;RP1=0, select bank0
  2793  025F  01A3               	clrf	(?_rotate)
  2794  0260  07A3               	addwf	(?_rotate)
  2795                           
  2796  0261  01A5               	clrf	0+(?_rotate)+02h
  2797  0262  160A  118A  270A   	fcall	_rotate
              120A  118A         
  2798                           	line	501
  2799                           	
  2800  0267                     l11891:	
  2801                           ;Main.c: 501: _delay((unsigned long)((100)*(20000000/4000.0)));
  2802                           	opt asmopt_off
  2803  0267  3003               movlw  3
  2804  0268  1283               	bcf	status, 5	;RP0=0, select bank0
  2805  0269  1303               	bcf	status, 6	;RP1=0, select bank0
  2806  026A  00E9               movwf	((??_main+0)+0+2),f
  2807  026B  308A               movlw	138
  2808  026C  00E8               movwf	((??_main+0)+0+1),f
  2809  026D  3056               	movlw	86
  2810  026E  00E7               movwf	((??_main+0)+0),f
  2811  026F                     u5767:
  2812  026F  0BE7               	decfsz	((??_main+0)+0),f
  2813  0270  2A6F               	goto	u5767
  2814  0271  0BE8               	decfsz	((??_main+0)+0+1),f
  2815  0272  2A6F               	goto	u5767
  2816  0273  0BE9               	decfsz	((??_main+0)+0+2),f
  2817  0274  2A6F               	goto	u5767
  2818  0275  2A76               	nop2
  2819                           opt asmopt_on
  2820                           
  2821                           	line	502
  2822                           	
  2823  0276                     l11893:	
  2824                           ;Main.c: 502: robotMove(500);
  2825  0276  30F4               	movlw	low(01F4h)
  2826  0277  1283               	bcf	status, 5	;RP0=0, select bank0
  2827  0278  1303               	bcf	status, 6	;RP1=0, select bank0
  2828  0279  00D9               	movwf	(?_robotMove)
  2829  027A  3001               	movlw	high(01F4h)
  2830  027B  00DA               	movwf	((?_robotMove))+1
  2831  027C  120A  158A  240A   	fcall	_robotMove
              120A  118A         
  2832  0281  28D5               	goto	l11831
  2833                           	line	503
  2834                           	
  2835  0282                     l2312:	
  2836                           	line	457
  2837  0282  28D5               	goto	l11831
  2838                           	
  2839  0283                     l2313:	
  2840                           	line	505
  2841                           ;Main.c: 503: }
  2842                           ;Main.c: 505: break;
  2843  0283  2AA2               	goto	l11901
  2844                           	line	507
  2845                           ;Main.c: 507: case 5:
  2846                           	
  2847  0284                     l2314:	
  2848                           	line	508
  2849                           	
  2850  0284                     l11895:	
  2851                           ;Main.c: 508: ChargeMode();
  2852  0284  160A  118A  262D   	fcall	_ChargeMode
              120A  118A         
  2853                           	line	509
  2854                           ;Main.c: 509: break;
  2855  0289  2AA2               	goto	l11901
  2856                           	line	510
  2857                           ;Main.c: 510: default:
  2858                           	
  2859  028A                     l2315:	
  2860                           	line	512
  2861                           ;Main.c: 512: break;
  2862  028A  2AA2               	goto	l11901
  2863                           	line	513
  2864                           	
  2865  028B                     l11897:	
  2866                           ;Main.c: 513: }
  2867  028B  2AA2               	goto	l11901
  2868                           	line	430
  2869                           	
  2870  028C                     l2295:	
  2871                           	
  2872  028C                     l11899:	
  2873  028C  1683               	bsf	status, 5	;RP0=1, select bank1
  2874  028D  1303               	bcf	status, 6	;RP1=0, select bank1
  2875  028E  0867               	movf	(main@choice)^080h,w
  2876                           	; Switch size 1, requested type "space"
  2877                           ; Number of cases is 6, Range of values is 0 to 5
  2878                           ; switch strategies available:
  2879                           ; Name         Instructions Cycles
  2880                           ; simple_byte           19    10 (average)
  2881                           ; direct_byte           26     8 (fixed)
  2882                           ; jumptable            260     6 (fixed)
  2883                           ; rangetable            10     6 (fixed)
  2884                           ; spacedrange           18     9 (fixed)
  2885                           ; locatedrange           6     3 (fixed)
  2886                           ;	Chosen strategy is simple_byte
  2887                           
  2888                           	opt asmopt_off
  2889  028F  3A00               	xorlw	0^0	; case 0
  2890  0290  1903               	skipnz
  2891  0291  287F               	goto	l11817
  2892  0292  3A01               	xorlw	1^0	; case 1
  2893  0293  1903               	skipnz
  2894  0294  288B               	goto	l11819
  2895  0295  3A03               	xorlw	2^1	; case 2
  2896  0296  1903               	skipnz
  2897  0297  2897               	goto	l11821
  2898  0298  3A01               	xorlw	3^2	; case 3
  2899  0299  1903               	skipnz
  2900  029A  28A3               	goto	l11823
  2901  029B  3A07               	xorlw	4^3	; case 4
  2902  029C  1903               	skipnz
  2903  029D  28D5               	goto	l11831
  2904  029E  3A01               	xorlw	5^4	; case 5
  2905  029F  1903               	skipnz
  2906  02A0  2A84               	goto	l11895
  2907  02A1  2AA2               	goto	l11901
  2908                           	opt asmopt_on
  2909                           
  2910                           	line	513
  2911                           	
  2912  02A2                     l2297:	
  2913                           	line	514
  2914                           	
  2915  02A2                     l11901:	
  2916                           ;Main.c: 514: choice = 255;
  2917  02A2  30FF               	movlw	(0FFh)
  2918  02A3  1283               	bcf	status, 5	;RP0=0, select bank0
  2919  02A4  1303               	bcf	status, 6	;RP1=0, select bank0
  2920  02A5  00E7               	movwf	(??_main+0)+0
  2921  02A6  0867               	movf	(??_main+0)+0,w
  2922  02A7  1683               	bsf	status, 5	;RP0=1, select bank1
  2923  02A8  1303               	bcf	status, 6	;RP1=0, select bank1
  2924  02A9  00E7               	movwf	(main@choice)^080h
  2925  02AA  2825               	goto	l11783
  2926                           	line	515
  2927                           	
  2928  02AB                     l2316:	
  2929                           	line	380
  2930  02AB  2825               	goto	l11783
  2931                           	
  2932  02AC                     l2317:	
  2933                           	line	516
  2934                           	
  2935  02AC                     l2318:	
  2936                           	global	start
  2937  02AC  120A  118A  2812   	ljmp	start
  2938                           	opt stack 0
  2939                           GLOBAL	__end_of_main
  2940  02AF                     	__end_of_main:
  2941 ;; =============== function _main ends ============
  2942                           
  2943                           	signat	_main,88
  2944                           	global	_straightLineTest
  2945                           psect	text1068,local,class=CODE,delta=2
  2946                           global __ptext1068
  2947  0CB1                     __ptext1068:
  2948                           
  2949 ;; *************** function _straightLineTest *****************
  2950 ;; Defined at:
  2951 ;;		line 163 in file "H:\Aldnoah.Zero-master\Assignment3\Main.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  menuflag        2   68[BANK0 ] int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;		None               void
  2958 ;; Registers used:
  2959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2965 ;;      Params:         0       2       0       0       0
  2966 ;;      Locals:         0       0       0       0       0
  2967 ;;      Temps:          0       1       0       0       0
  2968 ;;      Totals:         0       3       0       0       0
  2969 ;;Total ram usage:        3 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    7
  2972 ;; This function calls:
  2973 ;;		_UpdateDisplay
  2974 ;;		_robotTurn
  2975 ;;		_robotMoveSpeed
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           psect	text1068
  2981                           	file	"H:\Aldnoah.Zero-master\Assignment3\Main.c"
  2982                           	line	163
  2983                           	global	__size_of_straightLineTest
  2984  00B6                     	__size_of_straightLineTest	equ	__end_of_straightLineTest-_straightLineTest
  2985                           	
  2986  0CB1                     _straightLineTest:	
  2987                           	opt	stack 0
  2988                           ; Regs used in _straightLineTest: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2989                           	line	165
  2990                           	
  2991  0CB1                     l11739:	
  2992                           ;Main.c: 165: currentMenu = menuflag + 3;
  2993  0CB1  1283               	bcf	status, 5	;RP0=0, select bank0
  2994  0CB2  1303               	bcf	status, 6	;RP1=0, select bank0
  2995  0CB3  0864               	movf	(straightLineTest@menuflag),w
  2996  0CB4  3E03               	addlw	03h
  2997  0CB5  00E6               	movwf	(??_straightLineTest+0)+0
  2998  0CB6  0866               	movf	(??_straightLineTest+0)+0,w
  2999  0CB7  1683               	bsf	status, 5	;RP0=1, select bank1
  3000  0CB8  1303               	bcf	status, 6	;RP1=0, select bank1
  3001  0CB9  00CB               	movwf	(_currentMenu)^080h	;volatile
  3002  0CBA  2CBB               	goto	l11741
  3003                           	line	167
  3004                           ;Main.c: 167: while (1)
  3005                           	
  3006  0CBB                     l2228:	
  3007                           	line	169
  3008                           	
  3009  0CBB                     l11741:	
  3010                           ;Main.c: 168: {
  3011                           ;Main.c: 169: if (RTC_FLAG_250MS == 1)
  3012  0CBB  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3013  0CBC  2CBE               	goto	u5571
  3014  0CBD  2CBF               	goto	u5570
  3015  0CBE                     u5571:
  3016  0CBE  2D53               	goto	l11775
  3017  0CBF                     u5570:
  3018                           	line	171
  3019                           	
  3020  0CBF                     l11743:	
  3021                           ;Main.c: 170: {
  3022                           ;Main.c: 171: RTC_FLAG_250MS = 0;
  3023  0CBF  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3024                           	line	172
  3025                           	
  3026  0CC0                     l11745:	
  3027                           ;Main.c: 172: UpdateDisplay();
  3028  0CC0  120A  118A  24D2   	fcall	_UpdateDisplay
              120A  158A         
  3029  0CC5  2D53               	goto	l11775
  3030                           	line	173
  3031                           	
  3032  0CC6                     l2229:	
  3033                           	line	174
  3034                           ;Main.c: 173: }
  3035                           ;Main.c: 174: switch (buttonPressed)
  3036  0CC6  2D53               	goto	l11775
  3037                           	line	176
  3038                           ;Main.c: 175: {
  3039                           ;Main.c: 176: case 1:
  3040                           	
  3041  0CC7                     l2231:	
  3042                           	line	179
  3043                           ;Main.c: 179: buttonPressed = 0;
  3044  0CC7  01FD               	clrf	(_buttonPressed)	;volatile
  3045                           	line	180
  3046                           	
  3047  0CC8                     l11747:	
  3048                           ;Main.c: 180: robotTurn(180);
  3049  0CC8  30B4               	movlw	low(0B4h)
  3050  0CC9  1283               	bcf	status, 5	;RP0=0, select bank0
  3051  0CCA  1303               	bcf	status, 6	;RP1=0, select bank0
  3052  0CCB  00A2               	movwf	(?_robotTurn)
  3053  0CCC  3000               	movlw	high(0B4h)
  3054  0CCD  00A3               	movwf	((?_robotTurn))+1
  3055  0CCE  120A  158A  2244   	fcall	_robotTurn
              120A  158A         
  3056                           	line	182
  3057                           ;Main.c: 182: break;
  3058  0CD3  2CBB               	goto	l11741
  3059                           	line	183
  3060                           ;Main.c: 183: case 2:
  3061                           	
  3062  0CD4                     l2233:	
  3063                           	line	186
  3064                           ;Main.c: 186: buttonPressed = 0;
  3065  0CD4  01FD               	clrf	(_buttonPressed)	;volatile
  3066                           	line	187
  3067                           ;Main.c: 187: currentMenu = 0;
  3068  0CD5  1683               	bsf	status, 5	;RP0=1, select bank1
  3069  0CD6  1303               	bcf	status, 6	;RP1=0, select bank1
  3070  0CD7  01CB               	clrf	(_currentMenu)^080h	;volatile
  3071                           	line	188
  3072                           ;Main.c: 188: return;
  3073  0CD8  2D66               	goto	l2234
  3074                           	line	190
  3075                           ;Main.c: 190: case 3:
  3076                           	
  3077  0CD9                     l2235:	
  3078                           	line	191
  3079                           	
  3080  0CD9                     l11749:	
  3081                           ;Main.c: 191: if(menuflag)
  3082  0CD9  1283               	bcf	status, 5	;RP0=0, select bank0
  3083  0CDA  1303               	bcf	status, 6	;RP1=0, select bank0
  3084  0CDB  0865               	movf	(straightLineTest@menuflag+1),w
  3085  0CDC  0464               	iorwf	(straightLineTest@menuflag),w
  3086  0CDD  1903               	skipnz
  3087  0CDE  2CE0               	goto	u5581
  3088  0CDF  2CE1               	goto	u5580
  3089  0CE0                     u5581:
  3090  0CE0  2CEE               	goto	l11753
  3091  0CE1                     u5580:
  3092                           	line	193
  3093                           	
  3094  0CE1                     l11751:	
  3095                           ;Main.c: 192: {
  3096                           ;Main.c: 193: d2travel -= 500;
  3097  0CE1  300C               	movlw	low(-500)
  3098  0CE2  1683               	bsf	status, 5	;RP0=1, select bank1
  3099  0CE3  1303               	bcf	status, 6	;RP1=0, select bank1
  3100  0CE4  07B2               	addwf	(_d2travel)^080h,f
  3101  0CE5  1803               	skipnc
  3102  0CE6  0AB3               	incf	(_d2travel+1)^080h,f
  3103  0CE7  30FE               	movlw	high(-500)
  3104  0CE8  07B3               	addwf	(_d2travel+1)^080h,f
  3105                           	line	194
  3106                           ;Main.c: 194: assignedSpeed = 200;
  3107  0CE9  30C8               	movlw	low(0C8h)
  3108  0CEA  00E0               	movwf	(_assignedSpeed)^080h
  3109  0CEB  3000               	movlw	high(0C8h)
  3110  0CEC  00E1               	movwf	((_assignedSpeed)^080h)+1
  3111                           	line	195
  3112                           ;Main.c: 195: }
  3113  0CED  2CFB               	goto	l11755
  3114                           	line	196
  3115                           	
  3116  0CEE                     l2236:	
  3117                           	line	198
  3118                           	
  3119  0CEE                     l11753:	
  3120                           ;Main.c: 196: else
  3121                           ;Main.c: 197: {
  3122                           ;Main.c: 198: assignedSpeed -= 100;
  3123  0CEE  309C               	movlw	low(-100)
  3124  0CEF  1683               	bsf	status, 5	;RP0=1, select bank1
  3125  0CF0  1303               	bcf	status, 6	;RP1=0, select bank1
  3126  0CF1  07E0               	addwf	(_assignedSpeed)^080h,f
  3127  0CF2  1803               	skipnc
  3128  0CF3  0AE1               	incf	(_assignedSpeed+1)^080h,f
  3129  0CF4  30FF               	movlw	high(-100)
  3130  0CF5  07E1               	addwf	(_assignedSpeed+1)^080h,f
  3131                           	line	199
  3132                           ;Main.c: 199: d2travel = 2000;
  3133  0CF6  30D0               	movlw	low(07D0h)
  3134  0CF7  00B2               	movwf	(_d2travel)^080h
  3135  0CF8  3007               	movlw	high(07D0h)
  3136  0CF9  00B3               	movwf	((_d2travel)^080h)+1
  3137  0CFA  2CFB               	goto	l11755
  3138                           	line	200
  3139                           	
  3140  0CFB                     l2237:	
  3141                           	line	201
  3142                           	
  3143  0CFB                     l11755:	
  3144                           ;Main.c: 200: }
  3145                           ;Main.c: 201: buttonPressed = 0;
  3146  0CFB  01FD               	clrf	(_buttonPressed)	;volatile
  3147                           	line	203
  3148                           ;Main.c: 203: break;
  3149  0CFC  2CBB               	goto	l11741
  3150                           	line	204
  3151                           ;Main.c: 204: case 4:
  3152                           	
  3153  0CFD                     l2238:	
  3154                           	line	205
  3155                           	
  3156  0CFD                     l11757:	
  3157                           ;Main.c: 205: if(menuflag)
  3158  0CFD  1283               	bcf	status, 5	;RP0=0, select bank0
  3159  0CFE  1303               	bcf	status, 6	;RP1=0, select bank0
  3160  0CFF  0865               	movf	(straightLineTest@menuflag+1),w
  3161  0D00  0464               	iorwf	(straightLineTest@menuflag),w
  3162  0D01  1903               	skipnz
  3163  0D02  2D04               	goto	u5591
  3164  0D03  2D05               	goto	u5590
  3165  0D04                     u5591:
  3166  0D04  2D12               	goto	l11761
  3167  0D05                     u5590:
  3168                           	line	207
  3169                           	
  3170  0D05                     l11759:	
  3171                           ;Main.c: 206: {
  3172                           ;Main.c: 207: d2travel += 500;
  3173  0D05  30F4               	movlw	low(01F4h)
  3174  0D06  1683               	bsf	status, 5	;RP0=1, select bank1
  3175  0D07  1303               	bcf	status, 6	;RP1=0, select bank1
  3176  0D08  07B2               	addwf	(_d2travel)^080h,f
  3177  0D09  1803               	skipnc
  3178  0D0A  0AB3               	incf	(_d2travel+1)^080h,f
  3179  0D0B  3001               	movlw	high(01F4h)
  3180  0D0C  07B3               	addwf	(_d2travel+1)^080h,f
  3181                           	line	208
  3182                           ;Main.c: 208: assignedSpeed = 200;
  3183  0D0D  30C8               	movlw	low(0C8h)
  3184  0D0E  00E0               	movwf	(_assignedSpeed)^080h
  3185  0D0F  3000               	movlw	high(0C8h)
  3186  0D10  00E1               	movwf	((_assignedSpeed)^080h)+1
  3187                           	line	209
  3188                           ;Main.c: 209: }
  3189  0D11  2D1F               	goto	l11763
  3190                           	line	210
  3191                           	
  3192  0D12                     l2239:	
  3193                           	line	212
  3194                           	
  3195  0D12                     l11761:	
  3196                           ;Main.c: 210: else
  3197                           ;Main.c: 211: {
  3198                           ;Main.c: 212: assignedSpeed += 100;
  3199  0D12  3064               	movlw	low(064h)
  3200  0D13  1683               	bsf	status, 5	;RP0=1, select bank1
  3201  0D14  1303               	bcf	status, 6	;RP1=0, select bank1
  3202  0D15  07E0               	addwf	(_assignedSpeed)^080h,f
  3203  0D16  1803               	skipnc
  3204  0D17  0AE1               	incf	(_assignedSpeed+1)^080h,f
  3205  0D18  3000               	movlw	high(064h)
  3206  0D19  07E1               	addwf	(_assignedSpeed+1)^080h,f
  3207                           	line	213
  3208                           ;Main.c: 213: d2travel = 2000;
  3209  0D1A  30D0               	movlw	low(07D0h)
  3210  0D1B  00B2               	movwf	(_d2travel)^080h
  3211  0D1C  3007               	movlw	high(07D0h)
  3212  0D1D  00B3               	movwf	((_d2travel)^080h)+1
  3213  0D1E  2D1F               	goto	l11763
  3214                           	line	214
  3215                           	
  3216  0D1F                     l2240:	
  3217                           	line	215
  3218                           	
  3219  0D1F                     l11763:	
  3220                           ;Main.c: 214: }
  3221                           ;Main.c: 215: buttonPressed = 0;
  3222  0D1F  01FD               	clrf	(_buttonPressed)	;volatile
  3223                           	line	217
  3224                           ;Main.c: 217: break;
  3225  0D20  2CBB               	goto	l11741
  3226                           	line	218
  3227                           ;Main.c: 218: case 5:
  3228                           	
  3229  0D21                     l2241:	
  3230                           	line	220
  3231                           	
  3232  0D21                     l11765:	
  3233                           ;Main.c: 220: if (assignedSpeed && d2travel)
  3234  0D21  1683               	bsf	status, 5	;RP0=1, select bank1
  3235  0D22  1303               	bcf	status, 6	;RP1=0, select bank1
  3236  0D23  0861               	movf	(_assignedSpeed+1)^080h,w
  3237  0D24  0460               	iorwf	(_assignedSpeed)^080h,w
  3238  0D25  1903               	skipnz
  3239  0D26  2D28               	goto	u5601
  3240  0D27  2D29               	goto	u5600
  3241  0D28                     u5601:
  3242  0D28  2D4F               	goto	l11771
  3243  0D29                     u5600:
  3244                           	
  3245  0D29                     l11767:	
  3246  0D29  0833               	movf	(_d2travel+1)^080h,w
  3247  0D2A  0432               	iorwf	(_d2travel)^080h,w
  3248  0D2B  1903               	skipnz
  3249  0D2C  2D2E               	goto	u5611
  3250  0D2D  2D2F               	goto	u5610
  3251  0D2E                     u5611:
  3252  0D2E  2D4F               	goto	l11771
  3253  0D2F                     u5610:
  3254                           	line	222
  3255                           	
  3256  0D2F                     l11769:	
  3257                           ;Main.c: 221: {
  3258                           ;Main.c: 222: robotMoveSpeed(d2travel,assignedSpeed);
  3259  0D2F  0833               	movf	(_d2travel+1)^080h,w
  3260  0D30  1283               	bcf	status, 5	;RP0=0, select bank0
  3261  0D31  1303               	bcf	status, 6	;RP1=0, select bank0
  3262  0D32  01DA               	clrf	(?_robotMoveSpeed+1)
  3263  0D33  07DA               	addwf	(?_robotMoveSpeed+1)
  3264  0D34  1683               	bsf	status, 5	;RP0=1, select bank1
  3265  0D35  1303               	bcf	status, 6	;RP1=0, select bank1
  3266  0D36  0832               	movf	(_d2travel)^080h,w
  3267  0D37  1283               	bcf	status, 5	;RP0=0, select bank0
  3268  0D38  1303               	bcf	status, 6	;RP1=0, select bank0
  3269  0D39  01D9               	clrf	(?_robotMoveSpeed)
  3270  0D3A  07D9               	addwf	(?_robotMoveSpeed)
  3271                           
  3272  0D3B  1683               	bsf	status, 5	;RP0=1, select bank1
  3273  0D3C  1303               	bcf	status, 6	;RP1=0, select bank1
  3274  0D3D  0861               	movf	(_assignedSpeed+1)^080h,w
  3275  0D3E  1283               	bcf	status, 5	;RP0=0, select bank0
  3276  0D3F  1303               	bcf	status, 6	;RP1=0, select bank0
  3277  0D40  01DC               	clrf	1+(?_robotMoveSpeed)+02h
  3278  0D41  07DC               	addwf	1+(?_robotMoveSpeed)+02h
  3279  0D42  1683               	bsf	status, 5	;RP0=1, select bank1
  3280  0D43  1303               	bcf	status, 6	;RP1=0, select bank1
  3281  0D44  0860               	movf	(_assignedSpeed)^080h,w
  3282  0D45  1283               	bcf	status, 5	;RP0=0, select bank0
  3283  0D46  1303               	bcf	status, 6	;RP1=0, select bank0
  3284  0D47  01DB               	clrf	0+(?_robotMoveSpeed)+02h
  3285  0D48  07DB               	addwf	0+(?_robotMoveSpeed)+02h
  3286                           
  3287  0D49  120A  158A  2567   	fcall	_robotMoveSpeed
              120A  158A         
  3288  0D4E  2D4F               	goto	l11771
  3289                           	line	223
  3290                           	
  3291  0D4F                     l2242:	
  3292                           	line	225
  3293                           	
  3294  0D4F                     l11771:	
  3295                           ;Main.c: 223: }
  3296                           ;Main.c: 225: buttonPressed = 0;
  3297  0D4F  01FD               	clrf	(_buttonPressed)	;volatile
  3298  0D50  2CBB               	goto	l11741
  3299                           	line	226
  3300                           ;Main.c: 226: default:
  3301                           	
  3302  0D51                     l2243:	
  3303                           	line	228
  3304                           ;Main.c: 228: break;
  3305  0D51  2CBB               	goto	l11741
  3306                           	line	229
  3307                           	
  3308  0D52                     l11773:	
  3309                           ;Main.c: 229: }
  3310  0D52  2CBB               	goto	l11741
  3311                           	line	174
  3312                           	
  3313  0D53                     l2230:	
  3314                           	
  3315  0D53                     l11775:	
  3316  0D53  087D               	movf	(_buttonPressed),w	;volatile
  3317                           	; Switch size 1, requested type "space"
  3318                           ; Number of cases is 5, Range of values is 1 to 5
  3319                           ; switch strategies available:
  3320                           ; Name         Instructions Cycles
  3321                           ; simple_byte           16     9 (average)
  3322                           ; direct_byte           26    11 (fixed)
  3323                           ; jumptable            263     9 (fixed)
  3324                           ;	Chosen strategy is simple_byte
  3325                           
  3326                           	opt asmopt_off
  3327  0D54  3A01               	xorlw	1^0	; case 1
  3328  0D55  1903               	skipnz
  3329  0D56  2CC7               	goto	l2231
  3330  0D57  3A03               	xorlw	2^1	; case 2
  3331  0D58  1903               	skipnz
  3332  0D59  2CD4               	goto	l2233
  3333  0D5A  3A01               	xorlw	3^2	; case 3
  3334  0D5B  1903               	skipnz
  3335  0D5C  2CD9               	goto	l11749
  3336  0D5D  3A07               	xorlw	4^3	; case 4
  3337  0D5E  1903               	skipnz
  3338  0D5F  2CFD               	goto	l11757
  3339  0D60  3A01               	xorlw	5^4	; case 5
  3340  0D61  1903               	skipnz
  3341  0D62  2D21               	goto	l11765
  3342  0D63  2CBB               	goto	l11741
  3343                           	opt asmopt_on
  3344                           
  3345                           	line	229
  3346                           	
  3347  0D64                     l2232:	
  3348  0D64  2CBB               	goto	l11741
  3349                           	line	231
  3350                           	
  3351  0D65                     l2244:	
  3352                           	line	167
  3353  0D65  2CBB               	goto	l11741
  3354                           	
  3355  0D66                     l2245:	
  3356                           	line	232
  3357                           	
  3358  0D66                     l2234:	
  3359  0D66  0008               	return
  3360                           	opt stack 0
  3361                           GLOBAL	__end_of_straightLineTest
  3362  0D67                     	__end_of_straightLineTest:
  3363 ;; =============== function _straightLineTest ends ============
  3364                           
  3365                           	signat	_straightLineTest,4216
  3366                           	global	_robotMove
  3367                           psect	text1069,local,class=CODE,delta=2
  3368                           global __ptext1069
  3369  0C0A                     __ptext1069:
  3370                           
  3371 ;; *************** function _robotMove *****************
  3372 ;; Defined at:
  3373 ;;		line 76 in file "H:\Aldnoah.Zero-master\Assignment3\robot.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  distance        2   57[BANK0 ] int 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;		None               void
  3380 ;; Registers used:
  3381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       2       0       0       0
  3388 ;;      Locals:         0       0       0       0       0
  3389 ;;      Temps:          0       2       0       0       0
  3390 ;;      Totals:         0       4       0       0       0
  3391 ;;Total ram usage:        4 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    6
  3394 ;; This function calls:
  3395 ;;		_ser_putch
  3396 ;;		_robot_read
  3397 ;;		_UpdateDisplay
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           psect	text1069
  3403                           	file	"H:\Aldnoah.Zero-master\Assignment3\robot.c"
  3404                           	line	76
  3405                           	global	__size_of_robotMove
  3406  00A7                     	__size_of_robotMove	equ	__end_of_robotMove-_robotMove
  3407                           	
  3408  0C0A                     _robotMove:	
  3409                           	opt	stack 1
  3410                           ; Regs used in _robotMove: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3411                           	line	77
  3412                           	
  3413  0C0A                     l11717:	
  3414                           ;robot.c: 77: distTravelled =0;
  3415  0C0A  1683               	bsf	status, 5	;RP0=1, select bank1
  3416  0C0B  1303               	bcf	status, 6	;RP1=0, select bank1
  3417  0C0C  01B4               	clrf	(_distTravelled)^080h
  3418  0C0D  01B5               	clrf	(_distTravelled+1)^080h
  3419                           	line	80
  3420                           	
  3421  0C0E                     l11719:	
  3422                           ;robot.c: 80: if (distance >= 0)
  3423  0C0E  1283               	bcf	status, 5	;RP0=0, select bank0
  3424  0C0F  1303               	bcf	status, 6	;RP1=0, select bank0
  3425  0C10  1BDA               	btfsc	(robotMove@distance+1),7
  3426  0C11  2C13               	goto	u5541
  3427  0C12  2C14               	goto	u5540
  3428  0C13                     u5541:
  3429  0C13  2C33               	goto	l11723
  3430  0C14                     u5540:
  3431                           	line	82
  3432                           	
  3433  0C14                     l11721:	
  3434                           ;robot.c: 81: {
  3435                           ;robot.c: 82: ser_putch(137);
  3436  0C14  3089               	movlw	(089h)
  3437  0C15  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3438                           	line	84
  3439                           ;robot.c: 84: ser_putch(0);
  3440  0C1A  3000               	movlw	(0)
  3441  0C1B  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3442                           	line	86
  3443                           ;robot.c: 86: ser_putch(50);
  3444  0C20  3032               	movlw	(032h)
  3445  0C21  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3446                           	line	88
  3447                           ;robot.c: 88: ser_putch(128);
  3448  0C26  3080               	movlw	(080h)
  3449  0C27  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3450                           	line	90
  3451                           ;robot.c: 90: ser_putch(0);
  3452  0C2C  3000               	movlw	(0)
  3453  0C2D  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3454                           	line	91
  3455                           ;robot.c: 91: }
  3456  0C32  2C79               	goto	l11735
  3457                           	line	92
  3458                           	
  3459  0C33                     l6068:	
  3460                           	line	94
  3461                           	
  3462  0C33                     l11723:	
  3463                           ;robot.c: 92: else
  3464                           ;robot.c: 93: {
  3465                           ;robot.c: 94: ser_putch(137);
  3466  0C33  3089               	movlw	(089h)
  3467  0C34  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3468                           	line	96
  3469                           ;robot.c: 96: ser_putch(0xff);
  3470  0C39  30FF               	movlw	(0FFh)
  3471  0C3A  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3472                           	line	98
  3473                           ;robot.c: 98: ser_putch(0x38);
  3474  0C3F  3038               	movlw	(038h)
  3475  0C40  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3476                           	line	100
  3477                           ;robot.c: 100: ser_putch(128);
  3478  0C45  3080               	movlw	(080h)
  3479  0C46  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3480                           	line	102
  3481                           ;robot.c: 102: ser_putch(0);
  3482  0C4B  3000               	movlw	(0)
  3483  0C4C  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3484  0C51  2C79               	goto	l11735
  3485                           	line	103
  3486                           	
  3487  0C52                     l6069:	
  3488                           	line	106
  3489                           ;robot.c: 103: }
  3490                           ;robot.c: 106: while (distTravelled <= distance)
  3491  0C52  2C79               	goto	l11735
  3492                           	
  3493  0C53                     l6071:	
  3494                           	line	108
  3495                           	
  3496  0C53                     l11725:	
  3497                           ;robot.c: 107: {
  3498                           ;robot.c: 108: robot_read();
  3499  0C53  160A  118A  275A   	fcall	_robot_read
              120A  158A         
  3500                           	line	109
  3501                           	
  3502  0C58                     l11727:	
  3503                           ;robot.c: 109: if (BumpSensors)
  3504  0C58  1283               	bcf	status, 5	;RP0=0, select bank0
  3505  0C59  1303               	bcf	status, 6	;RP1=0, select bank0
  3506  0C5A  086C               	movf	(_BumpSensors),w	;volatile
  3507  0C5B  1D03               	skipz
  3508  0C5C  2C5E               	goto	u5550
  3509  0C5D  2C60               	goto	l11731
  3510  0C5E                     u5550:
  3511  0C5E  2C92               	goto	l11737
  3512                           	line	110
  3513                           	
  3514  0C5F                     l11729:	
  3515                           ;robot.c: 110: break;
  3516  0C5F  2C92               	goto	l11737
  3517                           	
  3518  0C60                     l6072:	
  3519                           	line	111
  3520                           	
  3521  0C60                     l11731:	
  3522                           ;robot.c: 111: distTravelled += DistLowByte;
  3523  0C60  1683               	bsf	status, 5	;RP0=1, select bank1
  3524  0C61  1303               	bcf	status, 6	;RP1=0, select bank1
  3525  0C62  0846               	movf	(_DistLowByte)^080h,w	;volatile
  3526  0C63  1283               	bcf	status, 5	;RP0=0, select bank0
  3527  0C64  1303               	bcf	status, 6	;RP1=0, select bank0
  3528  0C65  00DB               	movwf	(??_robotMove+0)+0
  3529  0C66  01DC               	clrf	(??_robotMove+0)+0+1
  3530  0C67  085B               	movf	0+(??_robotMove+0)+0,w
  3531  0C68  1683               	bsf	status, 5	;RP0=1, select bank1
  3532  0C69  1303               	bcf	status, 6	;RP1=0, select bank1
  3533  0C6A  07B4               	addwf	(_distTravelled)^080h,f
  3534  0C6B  1803               	skipnc
  3535  0C6C  0AB5               	incf	(_distTravelled+1)^080h,f
  3536  0C6D  1283               	bcf	status, 5	;RP0=0, select bank0
  3537  0C6E  1303               	bcf	status, 6	;RP1=0, select bank0
  3538  0C6F  085C               	movf	1+(??_robotMove+0)+0,w
  3539  0C70  1683               	bsf	status, 5	;RP0=1, select bank1
  3540  0C71  1303               	bcf	status, 6	;RP1=0, select bank1
  3541  0C72  07B5               	addwf	(_distTravelled+1)^080h,f
  3542                           	line	112
  3543                           	
  3544  0C73                     l11733:	
  3545                           ;robot.c: 112: UpdateDisplay();
  3546  0C73  120A  118A  24D2   	fcall	_UpdateDisplay
              120A  158A         
  3547  0C78  2C79               	goto	l11735
  3548                           	line	113
  3549                           	
  3550  0C79                     l6070:	
  3551                           	line	106
  3552                           	
  3553  0C79                     l11735:	
  3554  0C79  1283               	bcf	status, 5	;RP0=0, select bank0
  3555  0C7A  1303               	bcf	status, 6	;RP1=0, select bank0
  3556  0C7B  085A               	movf	(robotMove@distance+1),w
  3557  0C7C  3A80               	xorlw	80h
  3558  0C7D  00DB               	movwf	(??_robotMove+0)+0
  3559  0C7E  1683               	bsf	status, 5	;RP0=1, select bank1
  3560  0C7F  1303               	bcf	status, 6	;RP1=0, select bank1
  3561  0C80  0835               	movf	(_distTravelled+1)^080h,w
  3562  0C81  3A80               	xorlw	80h
  3563  0C82  1283               	bcf	status, 5	;RP0=0, select bank0
  3564  0C83  1303               	bcf	status, 6	;RP1=0, select bank0
  3565  0C84  025B               	subwf	(??_robotMove+0)+0,w
  3566  0C85  1D03               	skipz
  3567  0C86  2C8D               	goto	u5565
  3568  0C87  1683               	bsf	status, 5	;RP0=1, select bank1
  3569  0C88  1303               	bcf	status, 6	;RP1=0, select bank1
  3570  0C89  0834               	movf	(_distTravelled)^080h,w
  3571  0C8A  1283               	bcf	status, 5	;RP0=0, select bank0
  3572  0C8B  1303               	bcf	status, 6	;RP1=0, select bank0
  3573  0C8C  0259               	subwf	(robotMove@distance),w
  3574  0C8D                     u5565:
  3575                           
  3576  0C8D  1803               	skipnc
  3577  0C8E  2C90               	goto	u5561
  3578  0C8F  2C91               	goto	u5560
  3579  0C90                     u5561:
  3580  0C90  2C53               	goto	l11725
  3581  0C91                     u5560:
  3582  0C91  2C92               	goto	l11737
  3583                           	
  3584  0C92                     l6073:	
  3585                           	line	115
  3586                           	
  3587  0C92                     l11737:	
  3588                           ;robot.c: 113: }
  3589                           ;robot.c: 115: ser_putch(137);
  3590  0C92  3089               	movlw	(089h)
  3591  0C93  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3592                           	line	117
  3593                           ;robot.c: 117: ser_putch(0);
  3594  0C98  3000               	movlw	(0)
  3595  0C99  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3596                           	line	119
  3597                           ;robot.c: 119: ser_putch(0);
  3598  0C9E  3000               	movlw	(0)
  3599  0C9F  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3600                           	line	121
  3601                           ;robot.c: 121: ser_putch(0);
  3602  0CA4  3000               	movlw	(0)
  3603  0CA5  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3604                           	line	123
  3605                           ;robot.c: 123: ser_putch(0);
  3606  0CAA  3000               	movlw	(0)
  3607  0CAB  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  3608                           	line	125
  3609                           	
  3610  0CB0                     l6074:	
  3611  0CB0  0008               	return
  3612                           	opt stack 0
  3613                           GLOBAL	__end_of_robotMove
  3614  0CB1                     	__end_of_robotMove:
  3615 ;; =============== function _robotMove ends ============
  3616                           
  3617                           	signat	_robotMove,4216
  3618                           	global	_scan360
  3619                           psect	text1070,local,class=CODE,delta=2
  3620                           global __ptext1070
  3621  094D                     __ptext1070:
  3622                           
  3623 ;; *************** function _scan360 *****************
  3624 ;; Defined at:
  3625 ;;		line 340 in file "H:\Aldnoah.Zero-master\Assignment3\Main.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  steps           2   63[BANK0 ] int 
  3630 ;;  lowestSteps     2   61[BANK0 ] int 
  3631 ;;  lowestVal       2   59[BANK0 ] int 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  2   57[BANK0 ] int 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3641 ;;      Params:         0       2       0       0       0
  3642 ;;      Locals:         0       6       0       0       0
  3643 ;;      Temps:          0       0       0       0       0
  3644 ;;      Totals:         0       8       0       0       0
  3645 ;;Total ram usage:        8 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; Hardware stack levels required when called:    7
  3648 ;; This function calls:
  3649 ;;		_readAvgDistance
  3650 ;;		_rotate
  3651 ;;		_UpdateDisplay
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           psect	text1070
  3657                           	file	"H:\Aldnoah.Zero-master\Assignment3\Main.c"
  3658                           	line	340
  3659                           	global	__size_of_scan360
  3660  007A                     	__size_of_scan360	equ	__end_of_scan360-_scan360
  3661                           	
  3662  094D                     _scan360:	
  3663                           	opt	stack 0
  3664                           ; Regs used in _scan360: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3665                           	line	341
  3666                           	
  3667  094D                     l11687:	
  3668                           ;Main.c: 341: int lowestVal = 0, lowestSteps = 0;
  3669  094D  1283               	bcf	status, 5	;RP0=0, select bank0
  3670  094E  1303               	bcf	status, 6	;RP1=0, select bank0
  3671  094F  01DB               	clrf	(scan360@lowestVal)
  3672  0950  01DC               	clrf	(scan360@lowestVal+1)
  3673  0951  01DD               	clrf	(scan360@lowestSteps)
  3674  0952  01DE               	clrf	(scan360@lowestSteps+1)
  3675                           	line	343
  3676                           ;Main.c: 343: for (int steps = 0; steps < 400; steps++)
  3677  0953  01DF               	clrf	(scan360@steps)
  3678  0954  01E0               	clrf	(scan360@steps+1)
  3679                           	
  3680  0955                     l11689:	
  3681  0955  0860               	movf	(scan360@steps+1),w
  3682  0956  3A80               	xorlw	80h
  3683  0957  00FF               	movwf	btemp+1
  3684  0958  3081               	movlw	(high(0190h))^80h
  3685  0959  027F               	subwf	btemp+1,w
  3686  095A  1D03               	skipz
  3687  095B  295E               	goto	u5505
  3688  095C  3090               	movlw	low(0190h)
  3689  095D  025F               	subwf	(scan360@steps),w
  3690  095E                     u5505:
  3691                           
  3692  095E  1C03               	skipc
  3693  095F  2961               	goto	u5501
  3694  0960  2962               	goto	u5500
  3695  0961                     u5501:
  3696  0961  2964               	goto	l11693
  3697  0962                     u5500:
  3698  0962  29BD               	goto	l11713
  3699                           	
  3700  0963                     l11691:	
  3701  0963  29BD               	goto	l11713
  3702                           	line	344
  3703                           	
  3704  0964                     l2278:	
  3705                           	line	345
  3706                           	
  3707  0964                     l11693:	
  3708                           ;Main.c: 344: {
  3709                           ;Main.c: 345: readAvgDistance();
  3710  0964  160A  118A  27AB   	fcall	_readAvgDistance
              120A  158A         
  3711                           	line	346
  3712                           	
  3713  0969                     l11695:	
  3714                           ;Main.c: 346: if (adcVal > lowestVal)
  3715  0969  1283               	bcf	status, 5	;RP0=0, select bank0
  3716  096A  1303               	bcf	status, 6	;RP1=0, select bank0
  3717  096B  086B               	movf	(_adcVal+1),w	;volatile
  3718  096C  025C               	subwf	(scan360@lowestVal+1),w
  3719  096D  1D03               	skipz
  3720  096E  2971               	goto	u5515
  3721  096F  086A               	movf	(_adcVal),w	;volatile
  3722  0970  025B               	subwf	(scan360@lowestVal),w
  3723  0971                     u5515:
  3724  0971  1803               	skipnc
  3725  0972  2974               	goto	u5511
  3726  0973  2975               	goto	u5510
  3727  0974                     u5511:
  3728  0974  2982               	goto	l11699
  3729  0975                     u5510:
  3730                           	line	348
  3731                           	
  3732  0975                     l11697:	
  3733                           ;Main.c: 347: {
  3734                           ;Main.c: 348: lowestVal = adcVal;
  3735  0975  086B               	movf	(_adcVal+1),w	;volatile
  3736  0976  01DC               	clrf	(scan360@lowestVal+1)	;volatile
  3737  0977  07DC               	addwf	(scan360@lowestVal+1)	;volatile
  3738  0978  086A               	movf	(_adcVal),w	;volatile
  3739  0979  01DB               	clrf	(scan360@lowestVal)	;volatile
  3740  097A  07DB               	addwf	(scan360@lowestVal)	;volatile
  3741                           
  3742                           	line	349
  3743                           ;Main.c: 349: lowestSteps = steps;
  3744  097B  0860               	movf	(scan360@steps+1),w
  3745  097C  01DE               	clrf	(scan360@lowestSteps+1)
  3746  097D  07DE               	addwf	(scan360@lowestSteps+1)
  3747  097E  085F               	movf	(scan360@steps),w
  3748  097F  01DD               	clrf	(scan360@lowestSteps)
  3749  0980  07DD               	addwf	(scan360@lowestSteps)
  3750                           
  3751  0981  2982               	goto	l11699
  3752                           	line	351
  3753                           	
  3754  0982                     l2280:	
  3755                           	line	352
  3756                           	
  3757  0982                     l11699:	
  3758                           ;Main.c: 351: }
  3759                           ;Main.c: 352: rotate(1, 1);
  3760  0982  3001               	movlw	low(01h)
  3761  0983  00A3               	movwf	(?_rotate)
  3762  0984  3000               	movlw	high(01h)
  3763  0985  00A4               	movwf	((?_rotate))+1
  3764  0986  01A5               	clrf	0+(?_rotate)+02h
  3765  0987  1403               	bsf	status,0
  3766  0988  0DA5               	rlf	0+(?_rotate)+02h,f
  3767  0989  160A  118A  270A   	fcall	_rotate
              120A  158A         
  3768                           	line	354
  3769                           	
  3770  098E                     l11701:	
  3771                           ;Main.c: 354: if (RTC_FLAG_250MS == 1)
  3772  098E  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3773  098F  2991               	goto	u5521
  3774  0990  2992               	goto	u5520
  3775  0991                     u5521:
  3776  0991  2999               	goto	l11707
  3777  0992                     u5520:
  3778                           	line	356
  3779                           	
  3780  0992                     l11703:	
  3781                           ;Main.c: 355: {
  3782                           ;Main.c: 356: RTC_FLAG_250MS = 0;
  3783  0992  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3784                           	line	357
  3785                           	
  3786  0993                     l11705:	
  3787                           ;Main.c: 357: UpdateDisplay();
  3788  0993  120A  118A  24D2   	fcall	_UpdateDisplay
              120A  158A         
  3789  0998  2999               	goto	l11707
  3790                           	line	358
  3791                           	
  3792  0999                     l2281:	
  3793                           	line	359
  3794                           	
  3795  0999                     l11707:	
  3796                           ;Main.c: 358: }
  3797                           ;Main.c: 359: test = lowestSteps;
  3798  0999  1283               	bcf	status, 5	;RP0=0, select bank0
  3799  099A  1303               	bcf	status, 6	;RP1=0, select bank0
  3800  099B  085E               	movf	(scan360@lowestSteps+1),w
  3801  099C  1683               	bsf	status, 5	;RP0=1, select bank1
  3802  099D  1303               	bcf	status, 6	;RP1=0, select bank1
  3803  099E  01BF               	clrf	(_test+1)^080h
  3804  099F  07BF               	addwf	(_test+1)^080h
  3805  09A0  1283               	bcf	status, 5	;RP0=0, select bank0
  3806  09A1  1303               	bcf	status, 6	;RP1=0, select bank0
  3807  09A2  085D               	movf	(scan360@lowestSteps),w
  3808  09A3  1683               	bsf	status, 5	;RP0=1, select bank1
  3809  09A4  1303               	bcf	status, 6	;RP1=0, select bank1
  3810  09A5  01BE               	clrf	(_test)^080h
  3811  09A6  07BE               	addwf	(_test)^080h
  3812                           
  3813                           	line	343
  3814                           	
  3815  09A7                     l11709:	
  3816  09A7  3001               	movlw	low(01h)
  3817  09A8  1283               	bcf	status, 5	;RP0=0, select bank0
  3818  09A9  1303               	bcf	status, 6	;RP1=0, select bank0
  3819  09AA  07DF               	addwf	(scan360@steps),f
  3820  09AB  1803               	skipnc
  3821  09AC  0AE0               	incf	(scan360@steps+1),f
  3822  09AD  3000               	movlw	high(01h)
  3823  09AE  07E0               	addwf	(scan360@steps+1),f
  3824                           	
  3825  09AF                     l11711:	
  3826  09AF  0860               	movf	(scan360@steps+1),w
  3827  09B0  3A80               	xorlw	80h
  3828  09B1  00FF               	movwf	btemp+1
  3829  09B2  3081               	movlw	(high(0190h))^80h
  3830  09B3  027F               	subwf	btemp+1,w
  3831  09B4  1D03               	skipz
  3832  09B5  29B8               	goto	u5535
  3833  09B6  3090               	movlw	low(0190h)
  3834  09B7  025F               	subwf	(scan360@steps),w
  3835  09B8                     u5535:
  3836                           
  3837  09B8  1C03               	skipc
  3838  09B9  29BB               	goto	u5531
  3839  09BA  29BC               	goto	u5530
  3840  09BB                     u5531:
  3841  09BB  2964               	goto	l11693
  3842  09BC                     u5530:
  3843  09BC  29BD               	goto	l11713
  3844                           	
  3845  09BD                     l2279:	
  3846                           	line	362
  3847                           	
  3848  09BD                     l11713:	
  3849                           ;Main.c: 360: }
  3850                           ;Main.c: 362: return lowestSteps;
  3851  09BD  1283               	bcf	status, 5	;RP0=0, select bank0
  3852  09BE  1303               	bcf	status, 6	;RP1=0, select bank0
  3853  09BF  085E               	movf	(scan360@lowestSteps+1),w
  3854  09C0  01DA               	clrf	(?_scan360+1)
  3855  09C1  07DA               	addwf	(?_scan360+1)
  3856  09C2  085D               	movf	(scan360@lowestSteps),w
  3857  09C3  01D9               	clrf	(?_scan360)
  3858  09C4  07D9               	addwf	(?_scan360)
  3859                           
  3860  09C5  29C6               	goto	l2282
  3861                           	
  3862  09C6                     l11715:	
  3863                           	line	363
  3864                           	
  3865  09C6                     l2282:	
  3866  09C6  0008               	return
  3867                           	opt stack 0
  3868                           GLOBAL	__end_of_scan360
  3869  09C7                     	__end_of_scan360:
  3870 ;; =============== function _scan360 ends ============
  3871                           
  3872                           	signat	_scan360,90
  3873                           	global	_ChargeMode
  3874                           psect	text1071,local,class=CODE,delta=2
  3875                           global __ptext1071
  3876  162D                     __ptext1071:
  3877                           
  3878 ;; *************** function _ChargeMode *****************
  3879 ;; Defined at:
  3880 ;;		line 286 in file "H:\Aldnoah.Zero-master\Assignment3\Main.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;		None               void
  3887 ;; Registers used:
  3888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3894 ;;      Params:         0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0
  3896 ;;      Temps:          0       1       0       0       0
  3897 ;;      Totals:         0       1       0       0       0
  3898 ;;Total ram usage:        1 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    6
  3901 ;; This function calls:
  3902 ;;		_ser_putch
  3903 ;;		_UpdateDisplay
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           psect	text1071
  3909                           	file	"H:\Aldnoah.Zero-master\Assignment3\Main.c"
  3910                           	line	286
  3911                           	global	__size_of_ChargeMode
  3912  0046                     	__size_of_ChargeMode	equ	__end_of_ChargeMode-_ChargeMode
  3913                           	
  3914  162D                     _ChargeMode:	
  3915                           	opt	stack 1
  3916                           ; Regs used in _ChargeMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3917                           	line	288
  3918                           	
  3919  162D                     l11665:	
  3920                           ;Main.c: 288: currentMenu = 2;
  3921  162D  3002               	movlw	(02h)
  3922  162E  1283               	bcf	status, 5	;RP0=0, select bank0
  3923  162F  1303               	bcf	status, 6	;RP1=0, select bank0
  3924  1630  00D9               	movwf	(??_ChargeMode+0)+0
  3925  1631  0859               	movf	(??_ChargeMode+0)+0,w
  3926  1632  1683               	bsf	status, 5	;RP0=1, select bank1
  3927  1633  1303               	bcf	status, 6	;RP1=0, select bank1
  3928  1634  00CB               	movwf	(_currentMenu)^080h	;volatile
  3929                           	line	289
  3930                           	
  3931  1635                     l11667:	
  3932                           ;Main.c: 289: ser_putch(128);
  3933  1635  3080               	movlw	(080h)
  3934  1636  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  3935  163B  2E3C               	goto	l11669
  3936                           	line	291
  3937                           ;Main.c: 291: while (1)
  3938                           	
  3939  163C                     l2263:	
  3940                           	line	293
  3941                           	
  3942  163C                     l11669:	
  3943                           ;Main.c: 292: {
  3944                           ;Main.c: 293: if (RTC_FLAG_250MS == 1)
  3945  163C  1C71               	btfss	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3946  163D  2E3F               	goto	u5491
  3947  163E  2E40               	goto	u5490
  3948  163F                     u5491:
  3949  163F  2E5F               	goto	l11685
  3950  1640                     u5490:
  3951                           	line	295
  3952                           	
  3953  1640                     l11671:	
  3954                           ;Main.c: 294: {
  3955                           ;Main.c: 295: RTC_FLAG_250MS = 0;
  3956  1640  1071               	bcf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
  3957                           	line	296
  3958                           	
  3959  1641                     l11673:	
  3960                           ;Main.c: 296: UpdateDisplay();
  3961  1641  120A  118A  24D2   	fcall	_UpdateDisplay
              160A  118A         
  3962  1646  2E5F               	goto	l11685
  3963                           	line	297
  3964                           	
  3965  1647                     l2264:	
  3966                           	line	298
  3967                           ;Main.c: 297: }
  3968                           ;Main.c: 298: switch (buttonPressed)
  3969  1647  2E5F               	goto	l11685
  3970                           	line	300
  3971                           ;Main.c: 299: {
  3972                           ;Main.c: 300: case 1:
  3973                           	
  3974  1648                     l2266:	
  3975                           	line	303
  3976                           ;Main.c: 303: buttonPressed = 0;
  3977  1648  01FD               	clrf	(_buttonPressed)	;volatile
  3978                           	line	305
  3979                           ;Main.c: 305: break;
  3980  1649  2E3C               	goto	l11669
  3981                           	line	306
  3982                           ;Main.c: 306: case 2:
  3983                           	
  3984  164A                     l2268:	
  3985                           	line	309
  3986                           ;Main.c: 309: buttonPressed = 0;
  3987  164A  01FD               	clrf	(_buttonPressed)	;volatile
  3988                           	line	311
  3989                           ;Main.c: 311: break;
  3990  164B  2E3C               	goto	l11669
  3991                           	line	312
  3992                           ;Main.c: 312: case 3:
  3993                           	
  3994  164C                     l2269:	
  3995                           	line	315
  3996                           ;Main.c: 315: buttonPressed = 0;
  3997  164C  01FD               	clrf	(_buttonPressed)	;volatile
  3998                           	line	317
  3999                           ;Main.c: 317: break;
  4000  164D  2E3C               	goto	l11669
  4001                           	line	318
  4002                           ;Main.c: 318: case 4:
  4003                           	
  4004  164E                     l2270:	
  4005                           	line	321
  4006                           ;Main.c: 321: buttonPressed = 0;
  4007  164E  01FD               	clrf	(_buttonPressed)	;volatile
  4008                           	line	323
  4009                           ;Main.c: 323: break;
  4010  164F  2E3C               	goto	l11669
  4011                           	line	324
  4012                           ;Main.c: 324: case 5:
  4013                           	
  4014  1650                     l2271:	
  4015                           	line	325
  4016                           	
  4017  1650                     l11675:	
  4018                           ;Main.c: 325: ser_putch(132);
  4019  1650  3084               	movlw	(084h)
  4020  1651  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  4021                           	line	327
  4022                           	
  4023  1656                     l11677:	
  4024                           ;Main.c: 327: buttonPressed = 0;
  4025  1656  01FD               	clrf	(_buttonPressed)	;volatile
  4026                           	line	328
  4027                           	
  4028  1657                     l11679:	
  4029                           ;Main.c: 328: currentMenu = 0;
  4030  1657  1683               	bsf	status, 5	;RP0=1, select bank1
  4031  1658  1303               	bcf	status, 6	;RP1=0, select bank1
  4032  1659  01CB               	clrf	(_currentMenu)^080h	;volatile
  4033  165A  2E72               	goto	l2272
  4034                           	line	329
  4035                           	
  4036  165B                     l11681:	
  4037                           ;Main.c: 329: return;
  4038  165B  2E72               	goto	l2272
  4039                           	line	331
  4040                           ;Main.c: 331: default:
  4041                           	
  4042  165C                     l2273:	
  4043                           	line	332
  4044                           ;Main.c: 332: buttonPressed = 0;
  4045  165C  01FD               	clrf	(_buttonPressed)	;volatile
  4046                           	line	333
  4047                           ;Main.c: 333: break;
  4048  165D  2E3C               	goto	l11669
  4049                           	line	334
  4050                           	
  4051  165E                     l11683:	
  4052                           ;Main.c: 334: }
  4053  165E  2E3C               	goto	l11669
  4054                           	line	298
  4055                           	
  4056  165F                     l2265:	
  4057                           	
  4058  165F                     l11685:	
  4059  165F  087D               	movf	(_buttonPressed),w	;volatile
  4060                           	; Switch size 1, requested type "space"
  4061                           ; Number of cases is 5, Range of values is 1 to 5
  4062                           ; switch strategies available:
  4063                           ; Name         Instructions Cycles
  4064                           ; simple_byte           16     9 (average)
  4065                           ; direct_byte           26    11 (fixed)
  4066                           ; jumptable            263     9 (fixed)
  4067                           ;	Chosen strategy is simple_byte
  4068                           
  4069                           	opt asmopt_off
  4070  1660  3A01               	xorlw	1^0	; case 1
  4071  1661  1903               	skipnz
  4072  1662  2E48               	goto	l2266
  4073  1663  3A03               	xorlw	2^1	; case 2
  4074  1664  1903               	skipnz
  4075  1665  2E4A               	goto	l2268
  4076  1666  3A01               	xorlw	3^2	; case 3
  4077  1667  1903               	skipnz
  4078  1668  2E4C               	goto	l2269
  4079  1669  3A07               	xorlw	4^3	; case 4
  4080  166A  1903               	skipnz
  4081  166B  2E4E               	goto	l2270
  4082  166C  3A01               	xorlw	5^4	; case 5
  4083  166D  1903               	skipnz
  4084  166E  2E50               	goto	l11675
  4085  166F  2E5C               	goto	l2273
  4086                           	opt asmopt_on
  4087                           
  4088                           	line	334
  4089                           	
  4090  1670                     l2267:	
  4091  1670  2E3C               	goto	l11669
  4092                           	line	335
  4093                           	
  4094  1671                     l2274:	
  4095                           	line	291
  4096  1671  2E3C               	goto	l11669
  4097                           	
  4098  1672                     l2275:	
  4099                           	line	336
  4100                           	
  4101  1672                     l2272:	
  4102  1672  0008               	return
  4103                           	opt stack 0
  4104                           GLOBAL	__end_of_ChargeMode
  4105  1673                     	__end_of_ChargeMode:
  4106 ;; =============== function _ChargeMode ends ============
  4107                           
  4108                           	signat	_ChargeMode,88
  4109                           	global	_robotMoveSpeed
  4110                           psect	text1072,local,class=CODE,delta=2
  4111                           global __ptext1072
  4112  0D67                     __ptext1072:
  4113                           
  4114 ;; *************** function _robotMoveSpeed *****************
  4115 ;; Defined at:
  4116 ;;		line 34 in file "H:\Aldnoah.Zero-master\Assignment3\robot.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  distance        2   57[BANK0 ] int 
  4119 ;;  speed           2   59[BANK0 ] int 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  temp1           2   66[BANK0 ] int 
  4122 ;;  speedhighByt    1   65[BANK0 ] unsigned char 
  4123 ;;  speedlowByte    1   64[BANK0 ] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;		None               void
  4126 ;; Registers used:
  4127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4133 ;;      Params:         0       4       0       0       0
  4134 ;;      Locals:         0       4       0       0       0
  4135 ;;      Temps:          0       3       0       0       0
  4136 ;;      Totals:         0      11       0       0       0
  4137 ;;Total ram usage:       11 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    6
  4140 ;; This function calls:
  4141 ;;		_ser_putch
  4142 ;;		_robot_read
  4143 ;;		_UpdateDisplay
  4144 ;;		_abs
  4145 ;; This function is called by:
  4146 ;;		_straightLineTest
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           psect	text1072
  4150                           	file	"H:\Aldnoah.Zero-master\Assignment3\robot.c"
  4151                           	line	34
  4152                           	global	__size_of_robotMoveSpeed
  4153  00C9                     	__size_of_robotMoveSpeed	equ	__end_of_robotMoveSpeed-_robotMoveSpeed
  4154                           	
  4155  0D67                     _robotMoveSpeed:	
  4156                           	opt	stack 0
  4157                           ; Regs used in _robotMoveSpeed: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4158                           	line	35
  4159                           	
  4160  0D67                     l11631:	
  4161                           ;robot.c: 35: distTravelled = 0;
  4162  0D67  1683               	bsf	status, 5	;RP0=1, select bank1
  4163  0D68  1303               	bcf	status, 6	;RP1=0, select bank1
  4164  0D69  01B4               	clrf	(_distTravelled)^080h
  4165  0D6A  01B5               	clrf	(_distTravelled+1)^080h
  4166                           	line	37
  4167                           	
  4168  0D6B                     l11633:	
  4169                           ;robot.c: 36: int temp1;
  4170                           ;robot.c: 37: unsigned char speedlowByte = (unsigned char) (speed) ;
  4171  0D6B  1283               	bcf	status, 5	;RP0=0, select bank0
  4172  0D6C  1303               	bcf	status, 6	;RP1=0, select bank0
  4173  0D6D  085B               	movf	(robotMoveSpeed@speed),w
  4174  0D6E  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4175  0D6F  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4176  0D70  00E0               	movwf	(robotMoveSpeed@speedlowByte)
  4177                           	line	38
  4178                           ;robot.c: 38: unsigned char speedhighByte = (unsigned char) (speed >> 8);
  4179  0D71  085C               	movf	(robotMoveSpeed@speed+1),w
  4180  0D72  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4181  0D73  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4182  0D74  00E1               	movwf	(robotMoveSpeed@speedhighByte)
  4183                           	line	40
  4184                           	
  4185  0D75                     l11635:	
  4186                           ;robot.c: 40: ser_putch(137);
  4187  0D75  3089               	movlw	(089h)
  4188  0D76  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4189                           	line	42
  4190                           	
  4191  0D7B                     l11637:	
  4192                           ;robot.c: 42: ser_putch(speedhighByte);
  4193  0D7B  1283               	bcf	status, 5	;RP0=0, select bank0
  4194  0D7C  1303               	bcf	status, 6	;RP1=0, select bank0
  4195  0D7D  0861               	movf	(robotMoveSpeed@speedhighByte),w
  4196  0D7E  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4197                           	line	44
  4198                           	
  4199  0D83                     l11639:	
  4200                           ;robot.c: 44: ser_putch(speedlowByte);
  4201  0D83  1283               	bcf	status, 5	;RP0=0, select bank0
  4202  0D84  1303               	bcf	status, 6	;RP1=0, select bank0
  4203  0D85  0860               	movf	(robotMoveSpeed@speedlowByte),w
  4204  0D86  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4205                           	line	46
  4206                           	
  4207  0D8B                     l11641:	
  4208                           ;robot.c: 46: ser_putch(128);
  4209  0D8B  3080               	movlw	(080h)
  4210  0D8C  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4211                           	line	48
  4212                           	
  4213  0D91                     l11643:	
  4214                           ;robot.c: 48: ser_putch(0);
  4215  0D91  3000               	movlw	(0)
  4216  0D92  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4217                           	line	50
  4218                           ;robot.c: 50: while (abs(distTravelled) <= abs(distance))
  4219  0D97  2DDA               	goto	l11661
  4220                           	
  4221  0D98                     l6062:	
  4222                           	line	52
  4223                           	
  4224  0D98                     l11645:	
  4225                           ;robot.c: 51: {
  4226                           ;robot.c: 52: robot_read();
  4227  0D98  160A  118A  275A   	fcall	_robot_read
              120A  158A         
  4228                           	line	53
  4229                           	
  4230  0D9D                     l11647:	
  4231                           ;robot.c: 53: if (BumpSensors)
  4232  0D9D  1283               	bcf	status, 5	;RP0=0, select bank0
  4233  0D9E  1303               	bcf	status, 6	;RP1=0, select bank0
  4234  0D9F  086C               	movf	(_BumpSensors),w	;volatile
  4235  0DA0  1D03               	skipz
  4236  0DA1  2DA3               	goto	u5470
  4237  0DA2  2DA5               	goto	l11651
  4238  0DA3                     u5470:
  4239  0DA3  2E11               	goto	l11663
  4240                           	line	55
  4241                           	
  4242  0DA4                     l11649:	
  4243                           ;robot.c: 54: {
  4244                           ;robot.c: 55: break;
  4245  0DA4  2E11               	goto	l11663
  4246                           	line	56
  4247                           	
  4248  0DA5                     l6063:	
  4249                           	line	57
  4250                           	
  4251  0DA5                     l11651:	
  4252                           ;robot.c: 56: }
  4253                           ;robot.c: 57: temp1 = DistHighByte;
  4254  0DA5  1683               	bsf	status, 5	;RP0=1, select bank1
  4255  0DA6  1303               	bcf	status, 6	;RP1=0, select bank1
  4256  0DA7  0845               	movf	(_DistHighByte)^080h,w	;volatile
  4257  0DA8  1283               	bcf	status, 5	;RP0=0, select bank0
  4258  0DA9  1303               	bcf	status, 6	;RP1=0, select bank0
  4259  0DAA  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4260  0DAB  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4261  0DAC  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4262  0DAD  00E2               	movwf	(robotMoveSpeed@temp1)
  4263  0DAE  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4264  0DAF  00E3               	movwf	(robotMoveSpeed@temp1+1)
  4265                           	line	58
  4266                           	
  4267  0DB0                     l11653:	
  4268                           ;robot.c: 58: temp1 = temp1 << 8;
  4269  0DB0  0863               	movf	(robotMoveSpeed@temp1+1),w
  4270  0DB1  00DE               	movwf	(??_robotMoveSpeed+0)+0+1
  4271  0DB2  0862               	movf	(robotMoveSpeed@temp1),w
  4272  0DB3  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4273  0DB4  085D               	movf	(??_robotMoveSpeed+0)+0,w
  4274  0DB5  00DE               	movwf	(??_robotMoveSpeed+0)+1
  4275  0DB6  01DD               	clrf	(??_robotMoveSpeed+0)+0
  4276  0DB7  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4277  0DB8  00E2               	movwf	(robotMoveSpeed@temp1)
  4278  0DB9  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4279  0DBA  00E3               	movwf	(robotMoveSpeed@temp1+1)
  4280                           	line	59
  4281                           	
  4282  0DBB                     l11655:	
  4283                           ;robot.c: 59: temp1 += DistLowByte;
  4284  0DBB  1683               	bsf	status, 5	;RP0=1, select bank1
  4285  0DBC  1303               	bcf	status, 6	;RP1=0, select bank1
  4286  0DBD  0846               	movf	(_DistLowByte)^080h,w	;volatile
  4287  0DBE  1283               	bcf	status, 5	;RP0=0, select bank0
  4288  0DBF  1303               	bcf	status, 6	;RP1=0, select bank0
  4289  0DC0  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4290  0DC1  01DE               	clrf	(??_robotMoveSpeed+0)+0+1
  4291  0DC2  085D               	movf	0+(??_robotMoveSpeed+0)+0,w
  4292  0DC3  07E2               	addwf	(robotMoveSpeed@temp1),f
  4293  0DC4  1803               	skipnc
  4294  0DC5  0AE3               	incf	(robotMoveSpeed@temp1+1),f
  4295  0DC6  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4296  0DC7  07E3               	addwf	(robotMoveSpeed@temp1+1),f
  4297                           	line	60
  4298                           	
  4299  0DC8                     l11657:	
  4300                           ;robot.c: 60: distTravelled += temp1;
  4301  0DC8  0862               	movf	(robotMoveSpeed@temp1),w
  4302  0DC9  1683               	bsf	status, 5	;RP0=1, select bank1
  4303  0DCA  1303               	bcf	status, 6	;RP1=0, select bank1
  4304  0DCB  07B4               	addwf	(_distTravelled)^080h,f
  4305  0DCC  1803               	skipnc
  4306  0DCD  0AB5               	incf	(_distTravelled+1)^080h,f
  4307  0DCE  1283               	bcf	status, 5	;RP0=0, select bank0
  4308  0DCF  1303               	bcf	status, 6	;RP1=0, select bank0
  4309  0DD0  0863               	movf	(robotMoveSpeed@temp1+1),w
  4310  0DD1  1683               	bsf	status, 5	;RP0=1, select bank1
  4311  0DD2  1303               	bcf	status, 6	;RP1=0, select bank1
  4312  0DD3  07B5               	addwf	(_distTravelled+1)^080h,f
  4313                           	line	61
  4314                           	
  4315  0DD4                     l11659:	
  4316                           ;robot.c: 61: UpdateDisplay();
  4317  0DD4  120A  118A  24D2   	fcall	_UpdateDisplay
              120A  158A         
  4318  0DD9  2DDA               	goto	l11661
  4319                           	line	62
  4320                           	
  4321  0DDA                     l6061:	
  4322                           	line	50
  4323                           	
  4324  0DDA                     l11661:	
  4325  0DDA  1283               	bcf	status, 5	;RP0=0, select bank0
  4326  0DDB  1303               	bcf	status, 6	;RP1=0, select bank0
  4327  0DDC  085A               	movf	(robotMoveSpeed@distance+1),w
  4328  0DDD  01A7               	clrf	(?_abs+1)
  4329  0DDE  07A7               	addwf	(?_abs+1)
  4330  0DDF  0859               	movf	(robotMoveSpeed@distance),w
  4331  0DE0  01A6               	clrf	(?_abs)
  4332  0DE1  07A6               	addwf	(?_abs)
  4333                           
  4334  0DE2  160A  118A  2533   	fcall	_abs
              120A  158A         
  4335  0DE7  1283               	bcf	status, 5	;RP0=0, select bank0
  4336  0DE8  1303               	bcf	status, 6	;RP1=0, select bank0
  4337  0DE9  0826               	movf	(0+?_abs),w
  4338  0DEA  00DD               	movwf	(??_robotMoveSpeed+0)+0
  4339  0DEB  0827               	movf	(1+?_abs),w
  4340  0DEC  00DE               	movwf	((??_robotMoveSpeed+0)+0+1)
  4341  0DED  1683               	bsf	status, 5	;RP0=1, select bank1
  4342  0DEE  1303               	bcf	status, 6	;RP1=0, select bank1
  4343  0DEF  0835               	movf	(_distTravelled+1)^080h,w
  4344  0DF0  1283               	bcf	status, 5	;RP0=0, select bank0
  4345  0DF1  1303               	bcf	status, 6	;RP1=0, select bank0
  4346  0DF2  01A7               	clrf	(?_abs+1)
  4347  0DF3  07A7               	addwf	(?_abs+1)
  4348  0DF4  1683               	bsf	status, 5	;RP0=1, select bank1
  4349  0DF5  1303               	bcf	status, 6	;RP1=0, select bank1
  4350  0DF6  0834               	movf	(_distTravelled)^080h,w
  4351  0DF7  1283               	bcf	status, 5	;RP0=0, select bank0
  4352  0DF8  1303               	bcf	status, 6	;RP1=0, select bank0
  4353  0DF9  01A6               	clrf	(?_abs)
  4354  0DFA  07A6               	addwf	(?_abs)
  4355                           
  4356  0DFB  160A  118A  2533   	fcall	_abs
              120A  158A         
  4357  0E00  1283               	bcf	status, 5	;RP0=0, select bank0
  4358  0E01  1303               	bcf	status, 6	;RP1=0, select bank0
  4359  0E02  085E               	movf	1+(??_robotMoveSpeed+0)+0,w
  4360  0E03  3A80               	xorlw	80h
  4361  0E04  00DF               	movwf	(??_robotMoveSpeed+2)+0
  4362  0E05  0827               	movf	(1+(?_abs)),w
  4363  0E06  3A80               	xorlw	80h
  4364  0E07  025F               	subwf	(??_robotMoveSpeed+2)+0,w
  4365  0E08  1D03               	skipz
  4366  0E09  2E0C               	goto	u5485
  4367  0E0A  0826               	movf	(0+(?_abs)),w
  4368  0E0B  025D               	subwf	0+(??_robotMoveSpeed+0)+0,w
  4369  0E0C                     u5485:
  4370                           
  4371  0E0C  1803               	skipnc
  4372  0E0D  2E0F               	goto	u5481
  4373  0E0E  2E10               	goto	u5480
  4374  0E0F                     u5481:
  4375  0E0F  2D98               	goto	l11645
  4376  0E10                     u5480:
  4377  0E10  2E11               	goto	l11663
  4378                           	
  4379  0E11                     l6064:	
  4380                           	line	64
  4381                           	
  4382  0E11                     l11663:	
  4383                           ;robot.c: 62: }
  4384                           ;robot.c: 64: ser_putch(137);
  4385  0E11  3089               	movlw	(089h)
  4386  0E12  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4387                           	line	66
  4388                           ;robot.c: 66: ser_putch(0);
  4389  0E17  3000               	movlw	(0)
  4390  0E18  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4391                           	line	68
  4392                           ;robot.c: 68: ser_putch(0);
  4393  0E1D  3000               	movlw	(0)
  4394  0E1E  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4395                           	line	70
  4396                           ;robot.c: 70: ser_putch(0);
  4397  0E23  3000               	movlw	(0)
  4398  0E24  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4399                           	line	72
  4400                           ;robot.c: 72: ser_putch(0);
  4401  0E29  3000               	movlw	(0)
  4402  0E2A  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  4403                           	line	73
  4404                           	
  4405  0E2F                     l6065:	
  4406  0E2F  0008               	return
  4407                           	opt stack 0
  4408                           GLOBAL	__end_of_robotMoveSpeed
  4409  0E30                     	__end_of_robotMoveSpeed:
  4410 ;; =============== function _robotMoveSpeed ends ============
  4411                           
  4412                           	signat	_robotMoveSpeed,8312
  4413                           	global	_readAvgDistance
  4414                           psect	text1073,local,class=CODE,delta=2
  4415                           global __ptext1073
  4416  17AB                     __ptext1073:
  4417                           
  4418 ;; *************** function _readAvgDistance *****************
  4419 ;; Defined at:
  4420 ;;		line 10 in file "H:\Aldnoah.Zero-master\Assignment3\infrared.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  i               2   18[BANK0 ] int 
  4425 ;;  fullval         2   16[BANK0 ] unsigned int 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;		None               void
  4428 ;; Registers used:
  4429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4435 ;;      Params:         0       0       0       0       0
  4436 ;;      Locals:         0       4       0       0       0
  4437 ;;      Temps:          0       0       0       0       0
  4438 ;;      Totals:         0       4       0       0       0
  4439 ;;Total ram usage:        4 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    6
  4442 ;; This function calls:
  4443 ;;		_readDistance
  4444 ;;		___lwdiv
  4445 ;;		_ADCconvert
  4446 ;; This function is called by:
  4447 ;;		_scan360
  4448 ;;		_main
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           psect	text1073
  4452                           	file	"H:\Aldnoah.Zero-master\Assignment3\infrared.c"
  4453                           	line	10
  4454                           	global	__size_of_readAvgDistance
  4455  0055                     	__size_of_readAvgDistance	equ	__end_of_readAvgDistance-_readAvgDistance
  4456                           	
  4457  17AB                     _readAvgDistance:	
  4458                           	opt	stack 0
  4459                           ; Regs used in _readAvgDistance: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4460                           	line	11
  4461                           	
  4462  17AB                     l11617:	
  4463                           ;infrared.c: 11: unsigned int fullval = 0;
  4464  17AB  1283               	bcf	status, 5	;RP0=0, select bank0
  4465  17AC  1303               	bcf	status, 6	;RP1=0, select bank0
  4466  17AD  01B0               	clrf	(readAvgDistance@fullval)
  4467  17AE  01B1               	clrf	(readAvgDistance@fullval+1)
  4468                           	line	14
  4469                           ;infrared.c: 14: for (int i = 0; i < 10; i++)
  4470  17AF  01B2               	clrf	(readAvgDistance@i)
  4471  17B0  01B3               	clrf	(readAvgDistance@i+1)
  4472                           	
  4473  17B1                     l11619:	
  4474  17B1  0833               	movf	(readAvgDistance@i+1),w
  4475  17B2  3A80               	xorlw	80h
  4476  17B3  00FF               	movwf	btemp+1
  4477  17B4  3080               	movlw	(high(0Ah))^80h
  4478  17B5  027F               	subwf	btemp+1,w
  4479  17B6  1D03               	skipz
  4480  17B7  2FBA               	goto	u5455
  4481  17B8  300A               	movlw	low(0Ah)
  4482  17B9  0232               	subwf	(readAvgDistance@i),w
  4483  17BA                     u5455:
  4484                           
  4485  17BA  1C03               	skipc
  4486  17BB  2FBD               	goto	u5451
  4487  17BC  2FBE               	goto	u5450
  4488  17BD                     u5451:
  4489  17BD  2FC0               	goto	l11623
  4490  17BE                     u5450:
  4491  17BE  2FE1               	goto	l11629
  4492                           	
  4493  17BF                     l11621:	
  4494  17BF  2FE1               	goto	l11629
  4495                           	line	15
  4496                           	
  4497  17C0                     l3021:	
  4498                           	line	16
  4499                           	
  4500  17C0                     l11623:	
  4501                           ;infrared.c: 15: {
  4502                           ;infrared.c: 16: fullval += readDistance();
  4503  17C0  160A  118A  2332   	fcall	_readDistance
              160A  118A         
  4504  17C5  1283               	bcf	status, 5	;RP0=0, select bank0
  4505  17C6  1303               	bcf	status, 6	;RP1=0, select bank0
  4506  17C7  0828               	movf	(0+(?_readDistance)),w
  4507  17C8  07B0               	addwf	(readAvgDistance@fullval),f
  4508  17C9  1803               	skipnc
  4509  17CA  0AB1               	incf	(readAvgDistance@fullval+1),f
  4510  17CB  0829               	movf	(1+(?_readDistance)),w
  4511  17CC  07B1               	addwf	(readAvgDistance@fullval+1),f
  4512                           	line	14
  4513                           	
  4514  17CD                     l11625:	
  4515  17CD  3001               	movlw	low(01h)
  4516  17CE  07B2               	addwf	(readAvgDistance@i),f
  4517  17CF  1803               	skipnc
  4518  17D0  0AB3               	incf	(readAvgDistance@i+1),f
  4519  17D1  3000               	movlw	high(01h)
  4520  17D2  07B3               	addwf	(readAvgDistance@i+1),f
  4521                           	
  4522  17D3                     l11627:	
  4523  17D3  0833               	movf	(readAvgDistance@i+1),w
  4524  17D4  3A80               	xorlw	80h
  4525  17D5  00FF               	movwf	btemp+1
  4526  17D6  3080               	movlw	(high(0Ah))^80h
  4527  17D7  027F               	subwf	btemp+1,w
  4528  17D8  1D03               	skipz
  4529  17D9  2FDC               	goto	u5465
  4530  17DA  300A               	movlw	low(0Ah)
  4531  17DB  0232               	subwf	(readAvgDistance@i),w
  4532  17DC                     u5465:
  4533                           
  4534  17DC  1C03               	skipc
  4535  17DD  2FDF               	goto	u5461
  4536  17DE  2FE0               	goto	u5460
  4537  17DF                     u5461:
  4538  17DF  2FC0               	goto	l11623
  4539  17E0                     u5460:
  4540  17E0  2FE1               	goto	l11629
  4541                           	
  4542  17E1                     l3022:	
  4543                           	line	19
  4544                           	
  4545  17E1                     l11629:	
  4546                           ;infrared.c: 18: }
  4547                           ;infrared.c: 19: adcVal = fullval / 10;
  4548  17E1  300A               	movlw	low(0Ah)
  4549  17E2  1283               	bcf	status, 5	;RP0=0, select bank0
  4550  17E3  1303               	bcf	status, 6	;RP1=0, select bank0
  4551  17E4  00A6               	movwf	(?___lwdiv)
  4552  17E5  3000               	movlw	high(0Ah)
  4553  17E6  00A7               	movwf	((?___lwdiv))+1
  4554  17E7  0831               	movf	(readAvgDistance@fullval+1),w
  4555  17E8  01A9               	clrf	1+(?___lwdiv)+02h
  4556  17E9  07A9               	addwf	1+(?___lwdiv)+02h
  4557  17EA  0830               	movf	(readAvgDistance@fullval),w
  4558  17EB  01A8               	clrf	0+(?___lwdiv)+02h
  4559  17EC  07A8               	addwf	0+(?___lwdiv)+02h
  4560                           
  4561  17ED  160A  118A  26BA   	fcall	___lwdiv
              160A  118A         
  4562  17F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4563  17F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4564  17F4  0827               	movf	(1+(?___lwdiv)),w
  4565  17F5  01EB               	clrf	(_adcVal+1)	;volatile
  4566  17F6  07EB               	addwf	(_adcVal+1)	;volatile
  4567  17F7  0826               	movf	(0+(?___lwdiv)),w
  4568  17F8  01EA               	clrf	(_adcVal)	;volatile
  4569  17F9  07EA               	addwf	(_adcVal)	;volatile
  4570                           
  4571                           	line	20
  4572                           ;infrared.c: 20: ADCconvert();
  4573  17FA  120A  118A  22AF   	fcall	_ADCconvert
              160A  118A         
  4574                           	line	21
  4575                           	
  4576  17FF                     l3023:	
  4577  17FF  0008               	return
  4578                           	opt stack 0
  4579                           GLOBAL	__end_of_readAvgDistance
  4580  1800                     	__end_of_readAvgDistance:
  4581 ;; =============== function _readAvgDistance ends ============
  4582                           
  4583                           	signat	_readAvgDistance,88
  4584                           	global	_UpdateDisplay
  4585                           psect	text1074,local,class=CODE,delta=2
  4586                           global __ptext1074
  4587  04D2                     __ptext1074:
  4588                           
  4589 ;; *************** function _UpdateDisplay *****************
  4590 ;; Defined at:
  4591 ;;		line 216 in file "H:\Aldnoah.Zero-master\Assignment3\HMI.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  adcOutput      16   41[BANK0 ] unsigned char [16]
  4596 ;; Return value:  Size  Location     Type
  4597 ;;		None               void
  4598 ;; Registers used:
  4599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       0       0       0       0
  4606 ;;      Locals:         0      16       0       0       0
  4607 ;;      Temps:          0       4       0       0       0
  4608 ;;      Totals:         0      20       0       0       0
  4609 ;;Total ram usage:       20 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    5
  4612 ;; This function calls:
  4613 ;;		_lcd_write_control
  4614 ;;		_sprintf
  4615 ;;		_lcd_set_cursor
  4616 ;;		_lcd_write_string
  4617 ;;		___awmod
  4618 ;; This function is called by:
  4619 ;;		_straightLineTest
  4620 ;;		_ChargeMode
  4621 ;;		_scan360
  4622 ;;		_main
  4623 ;;		_robotMoveSpeed
  4624 ;;		_robotMove
  4625 ;;		_calibrateIR
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           psect	text1074
  4629                           	file	"H:\Aldnoah.Zero-master\Assignment3\HMI.c"
  4630                           	line	216
  4631                           	global	__size_of_UpdateDisplay
  4632  0221                     	__size_of_UpdateDisplay	equ	__end_of_UpdateDisplay-_UpdateDisplay
  4633                           	
  4634  04D2                     _UpdateDisplay:	
  4635                           	opt	stack 1
  4636                           ; Regs used in _UpdateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4637                           	line	217
  4638                           	
  4639  04D2                     l11551:	
  4640                           ;HMI.c: 217: char adcOutput[16] = "";
  4641  04D2  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4642  04D3  0084               	movwf	fsr0
  4643  04D4  3090               	movlw	low(UpdateDisplay@F1236)
  4644  04D5  1283               	bcf	status, 5	;RP0=0, select bank0
  4645  04D6  1303               	bcf	status, 6	;RP1=0, select bank0
  4646  04D7  00C5               	movwf	(??_UpdateDisplay+0)+0
  4647  04D8  0804               	movf	fsr0,w
  4648  04D9  00C6               	movwf	((??_UpdateDisplay+0)+0+1)
  4649  04DA  3010               	movlw	16
  4650  04DB  00C7               	movwf	((??_UpdateDisplay+0)+0+2)
  4651  04DC                     u5430:
  4652  04DC  0845               	movf	(??_UpdateDisplay+0)+0,w
  4653  04DD  0084               	movwf	fsr0
  4654  04DE  1783               	bsf	status, 7	;select IRP bank3
  4655                           	
  4656  04DF  0800               	movf	indf,w
  4657  04E0  00C8               	movwf	((??_UpdateDisplay+0)+0+3)
  4658  04E1  0AC5               	incf	(??_UpdateDisplay+0)+0,f
  4659  04E2  0846               	movf	((??_UpdateDisplay+0)+0+1),w
  4660  04E3  0084               	movwf	fsr0
  4661  04E4  1383               	bcf	status, 7	;select IRP bank0
  4662                           	
  4663  04E5  0848               	movf	((??_UpdateDisplay+0)+0+3),w
  4664  04E6  0080               	movwf	indf
  4665  04E7  0AC6               	incf	((??_UpdateDisplay+0)+0+1),f
  4666  04E8  0BC7               	decfsz	((??_UpdateDisplay+0)+0+2),f
  4667  04E9  2CDC               	goto	u5430
  4668                           	line	218
  4669                           ;HMI.c: 218: switch (currentMenu)
  4670  04EA  2EDF               	goto	l11615
  4671                           	line	221
  4672                           ;HMI.c: 219: {
  4673                           ;HMI.c: 221: case 0:
  4674                           	
  4675  04EB                     l4584:	
  4676                           	line	224
  4677                           	
  4678  04EB                     l11553:	
  4679                           ;HMI.c: 224: lcd_write_control(0b00000001);
  4680  04EB  3001               	movlw	(01h)
  4681  04EC  160A  118A  2308   	fcall	_lcd_write_control
              120A  118A         
  4682                           	line	226
  4683                           	
  4684  04F1                     l11555:	
  4685                           ;HMI.c: 226: sprintf(adcOutput,"ADC:%d Dist:%d",BumpSensors, distTravelled);
  4686  04F1  302B               	movlw	((STR_13-__stringbase))&0ffh
  4687  04F2  1283               	bcf	status, 5	;RP0=0, select bank0
  4688  04F3  1303               	bcf	status, 6	;RP1=0, select bank0
  4689  04F4  00C5               	movwf	(??_UpdateDisplay+0)+0
  4690  04F5  0845               	movf	(??_UpdateDisplay+0)+0,w
  4691  04F6  00B4               	movwf	(?_sprintf)
  4692  04F7  086C               	movf	(_BumpSensors),w	;volatile
  4693  04F8  00C6               	movwf	(??_UpdateDisplay+1)+0
  4694  04F9  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  4695  04FA  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  4696  04FB  00B5               	movwf	0+(?_sprintf)+01h
  4697  04FC  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  4698  04FD  00B6               	movwf	1+(?_sprintf)+01h
  4699  04FE  1683               	bsf	status, 5	;RP0=1, select bank1
  4700  04FF  1303               	bcf	status, 6	;RP1=0, select bank1
  4701  0500  0835               	movf	(_distTravelled+1)^080h,w
  4702  0501  1283               	bcf	status, 5	;RP0=0, select bank0
  4703  0502  1303               	bcf	status, 6	;RP1=0, select bank0
  4704  0503  01B8               	clrf	1+(?_sprintf)+03h
  4705  0504  07B8               	addwf	1+(?_sprintf)+03h
  4706  0505  1683               	bsf	status, 5	;RP0=1, select bank1
  4707  0506  1303               	bcf	status, 6	;RP1=0, select bank1
  4708  0507  0834               	movf	(_distTravelled)^080h,w
  4709  0508  1283               	bcf	status, 5	;RP0=0, select bank0
  4710  0509  1303               	bcf	status, 6	;RP1=0, select bank0
  4711  050A  01B7               	clrf	0+(?_sprintf)+03h
  4712  050B  07B7               	addwf	0+(?_sprintf)+03h
  4713                           
  4714  050C  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4715  050D  120A  118A  26F3   	fcall	_sprintf
              120A  118A         
  4716                           	line	229
  4717                           	
  4718  0512                     l11557:	
  4719                           ;HMI.c: 229: lcd_set_cursor(0x00);
  4720  0512  3000               	movlw	(0)
  4721  0513  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  4722                           	line	230
  4723                           ;HMI.c: 230: lcd_write_string(adcOutput);
  4724  0518  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  4725  0519  1283               	bcf	status, 5	;RP0=0, select bank0
  4726  051A  1303               	bcf	status, 6	;RP1=0, select bank0
  4727  051B  00A7               	movwf	(?_lcd_write_string)
  4728  051C  3000               	movlw	(0x0/2)
  4729  051D  00A8               	movwf	(?_lcd_write_string+1)
  4730  051E  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4731                           	line	232
  4732                           	
  4733  0523                     l11559:	
  4734                           ;HMI.c: 232: lcd_set_cursor(0x40);
  4735  0523  3040               	movlw	(040h)
  4736  0524  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  4737                           	line	233
  4738                           	
  4739  0529                     l11561:	
  4740                           ;HMI.c: 233: if (pos > 0)
  4741  0529  1683               	bsf	status, 5	;RP0=1, select bank1
  4742  052A  1303               	bcf	status, 6	;RP1=0, select bank1
  4743  052B  083D               	movf	(_pos+1)^080h,w
  4744  052C  3A80               	xorlw	80h
  4745  052D  00FF               	movwf	btemp+1
  4746  052E  3080               	movlw	(high(01h))^80h
  4747  052F  027F               	subwf	btemp+1,w
  4748  0530  1D03               	skipz
  4749  0531  2D34               	goto	u5445
  4750  0532  3001               	movlw	low(01h)
  4751  0533  023C               	subwf	(_pos)^080h,w
  4752  0534                     u5445:
  4753                           
  4754  0534  1C03               	skipc
  4755  0535  2D37               	goto	u5441
  4756  0536  2D38               	goto	u5440
  4757  0537                     u5441:
  4758  0537  2D4B               	goto	l11565
  4759  0538                     u5440:
  4760                           	line	234
  4761                           	
  4762  0538                     l11563:	
  4763                           ;HMI.c: 234: lcd_write_string(shortMenuStrings[pos - 1]);
  4764  0538  1683               	bsf	status, 5	;RP0=1, select bank1
  4765  0539  1303               	bcf	status, 6	;RP1=0, select bank1
  4766  053A  083C               	movf	(_pos)^080h,w
  4767  053B  3EFF               	addlw	0FFh
  4768  053C  3EDA               	addlw	_shortMenuStrings&0ffh
  4769  053D  0084               	movwf	fsr0
  4770  053E  1383               	bcf	status, 7	;select IRP bank1
  4771  053F  0800               	movf	indf,w
  4772  0540  1283               	bcf	status, 5	;RP0=0, select bank0
  4773  0541  1303               	bcf	status, 6	;RP1=0, select bank0
  4774  0542  00A7               	movwf	(?_lcd_write_string)
  4775  0543  3080               	movlw	80h
  4776  0544  00A8               	movwf	(?_lcd_write_string+1)
  4777  0545  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4778  054A  2D5E               	goto	l11567
  4779                           	line	235
  4780                           	
  4781  054B                     l4585:	
  4782                           	line	236
  4783                           	
  4784  054B                     l11565:	
  4785                           ;HMI.c: 235: else
  4786                           ;HMI.c: 236: lcd_write_string(shortMenuStrings[pos + 6 - 1]);
  4787  054B  1683               	bsf	status, 5	;RP0=1, select bank1
  4788  054C  1303               	bcf	status, 6	;RP1=0, select bank1
  4789  054D  083C               	movf	(_pos)^080h,w
  4790  054E  3E05               	addlw	05h
  4791  054F  3EDA               	addlw	_shortMenuStrings&0ffh
  4792  0550  0084               	movwf	fsr0
  4793  0551  1383               	bcf	status, 7	;select IRP bank1
  4794  0552  0800               	movf	indf,w
  4795  0553  1283               	bcf	status, 5	;RP0=0, select bank0
  4796  0554  1303               	bcf	status, 6	;RP1=0, select bank0
  4797  0555  00A7               	movwf	(?_lcd_write_string)
  4798  0556  3080               	movlw	80h
  4799  0557  00A8               	movwf	(?_lcd_write_string+1)
  4800  0558  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4801  055D  2D5E               	goto	l11567
  4802                           	
  4803  055E                     l4586:	
  4804                           	line	237
  4805                           	
  4806  055E                     l11567:	
  4807                           ;HMI.c: 237: lcd_set_cursor(0x44);
  4808  055E  3044               	movlw	(044h)
  4809  055F  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  4810                           	line	238
  4811                           	
  4812  0564                     l11569:	
  4813                           ;HMI.c: 238: lcd_write_string(menuStrings[pos]);
  4814  0564  1683               	bsf	status, 5	;RP0=1, select bank1
  4815  0565  1303               	bcf	status, 6	;RP1=0, select bank1
  4816  0566  083C               	movf	(_pos)^080h,w
  4817  0567  3ED4               	addlw	_menuStrings&0ffh
  4818  0568  0084               	movwf	fsr0
  4819  0569  1383               	bcf	status, 7	;select IRP bank1
  4820  056A  0800               	movf	indf,w
  4821  056B  1283               	bcf	status, 5	;RP0=0, select bank0
  4822  056C  1303               	bcf	status, 6	;RP1=0, select bank0
  4823  056D  00A7               	movwf	(?_lcd_write_string)
  4824  056E  3080               	movlw	80h
  4825  056F  00A8               	movwf	(?_lcd_write_string+1)
  4826  0570  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4827                           	line	239
  4828                           ;HMI.c: 239: lcd_set_cursor(0x4D);
  4829  0575  304D               	movlw	(04Dh)
  4830  0576  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  4831                           	line	240
  4832                           	
  4833  057B                     l11571:	
  4834                           ;HMI.c: 240: lcd_write_string(shortMenuStrings[(pos + 1) % 6]);
  4835  057B  3006               	movlw	low(06h)
  4836  057C  1283               	bcf	status, 5	;RP0=0, select bank0
  4837  057D  1303               	bcf	status, 6	;RP1=0, select bank0
  4838  057E  00A0               	movwf	(?___awmod)
  4839  057F  3000               	movlw	high(06h)
  4840  0580  00A1               	movwf	((?___awmod))+1
  4841  0581  1683               	bsf	status, 5	;RP0=1, select bank1
  4842  0582  1303               	bcf	status, 6	;RP1=0, select bank1
  4843  0583  083C               	movf	(_pos)^080h,w
  4844  0584  3E01               	addlw	low(01h)
  4845  0585  1283               	bcf	status, 5	;RP0=0, select bank0
  4846  0586  1303               	bcf	status, 6	;RP1=0, select bank0
  4847  0587  00A2               	movwf	0+(?___awmod)+02h
  4848  0588  1683               	bsf	status, 5	;RP0=1, select bank1
  4849  0589  1303               	bcf	status, 6	;RP1=0, select bank1
  4850  058A  083D               	movf	(_pos+1)^080h,w
  4851  058B  1803               	skipnc
  4852  058C  3E01               	addlw	1
  4853  058D  3E00               	addlw	high(01h)
  4854  058E  1283               	bcf	status, 5	;RP0=0, select bank0
  4855  058F  1303               	bcf	status, 6	;RP1=0, select bank0
  4856  0590  00A3               	movwf	1+0+(?___awmod)+02h
  4857  0591  120A  158A  20E5   	fcall	___awmod
              120A  118A         
  4858  0596  1283               	bcf	status, 5	;RP0=0, select bank0
  4859  0597  1303               	bcf	status, 6	;RP1=0, select bank0
  4860  0598  0820               	movf	(0+(?___awmod)),w
  4861  0599  3EDA               	addlw	_shortMenuStrings&0ffh
  4862  059A  0084               	movwf	fsr0
  4863  059B  1383               	bcf	status, 7	;select IRP bank1
  4864  059C  0800               	movf	indf,w
  4865  059D  00A7               	movwf	(?_lcd_write_string)
  4866  059E  3080               	movlw	80h
  4867  059F  00A8               	movwf	(?_lcd_write_string+1)
  4868  05A0  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4869                           	line	241
  4870                           ;HMI.c: 241: break;
  4871  05A5  2EF2               	goto	l4593
  4872                           	line	242
  4873                           ;HMI.c: 242: case 1:
  4874                           	
  4875  05A6                     l4588:	
  4876                           	line	243
  4877                           	
  4878  05A6                     l11573:	
  4879                           ;HMI.c: 243: lcd_write_control(0b00000001);
  4880  05A6  3001               	movlw	(01h)
  4881  05A7  160A  118A  2308   	fcall	_lcd_write_control
              120A  118A         
  4882                           	line	244
  4883                           	
  4884  05AC                     l11575:	
  4885                           ;HMI.c: 244: sprintf(adcOutput,"ADC:%d Dist:%d",BumpSensors, distTravelled);
  4886  05AC  302B               	movlw	((STR_14-__stringbase))&0ffh
  4887  05AD  1283               	bcf	status, 5	;RP0=0, select bank0
  4888  05AE  1303               	bcf	status, 6	;RP1=0, select bank0
  4889  05AF  00C5               	movwf	(??_UpdateDisplay+0)+0
  4890  05B0  0845               	movf	(??_UpdateDisplay+0)+0,w
  4891  05B1  00B4               	movwf	(?_sprintf)
  4892  05B2  086C               	movf	(_BumpSensors),w	;volatile
  4893  05B3  00C6               	movwf	(??_UpdateDisplay+1)+0
  4894  05B4  01C7               	clrf	(??_UpdateDisplay+1)+0+1
  4895  05B5  0846               	movf	0+(??_UpdateDisplay+1)+0,w
  4896  05B6  00B5               	movwf	0+(?_sprintf)+01h
  4897  05B7  0847               	movf	1+(??_UpdateDisplay+1)+0,w
  4898  05B8  00B6               	movwf	1+(?_sprintf)+01h
  4899  05B9  1683               	bsf	status, 5	;RP0=1, select bank1
  4900  05BA  1303               	bcf	status, 6	;RP1=0, select bank1
  4901  05BB  0835               	movf	(_distTravelled+1)^080h,w
  4902  05BC  1283               	bcf	status, 5	;RP0=0, select bank0
  4903  05BD  1303               	bcf	status, 6	;RP1=0, select bank0
  4904  05BE  01B8               	clrf	1+(?_sprintf)+03h
  4905  05BF  07B8               	addwf	1+(?_sprintf)+03h
  4906  05C0  1683               	bsf	status, 5	;RP0=1, select bank1
  4907  05C1  1303               	bcf	status, 6	;RP1=0, select bank1
  4908  05C2  0834               	movf	(_distTravelled)^080h,w
  4909  05C3  1283               	bcf	status, 5	;RP0=0, select bank0
  4910  05C4  1303               	bcf	status, 6	;RP1=0, select bank0
  4911  05C5  01B7               	clrf	0+(?_sprintf)+03h
  4912  05C6  07B7               	addwf	0+(?_sprintf)+03h
  4913                           
  4914  05C7  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  4915  05C8  120A  118A  26F3   	fcall	_sprintf
              120A  118A         
  4916                           	line	245
  4917                           	
  4918  05CD                     l11577:	
  4919                           ;HMI.c: 245: lcd_set_cursor(0x00);
  4920  05CD  3000               	movlw	(0)
  4921  05CE  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  4922                           	line	246
  4923                           ;HMI.c: 246: lcd_write_string("Zero Step_Motor");
  4924  05D3  301B               	movlw	low((STR_15-__stringbase))
  4925  05D4  1283               	bcf	status, 5	;RP0=0, select bank0
  4926  05D5  1303               	bcf	status, 6	;RP1=0, select bank0
  4927  05D6  00A7               	movwf	(?_lcd_write_string)
  4928  05D7  3080               	movlw	80h
  4929  05D8  00A8               	movwf	(?_lcd_write_string+1)
  4930  05D9  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4931                           	line	251
  4932                           	
  4933  05DE                     l11579:	
  4934                           ;HMI.c: 251: lcd_set_cursor(0x40);
  4935  05DE  3040               	movlw	(040h)
  4936  05DF  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  4937                           	line	253
  4938                           	
  4939  05E4                     l11581:	
  4940                           ;HMI.c: 253: lcd_write_string("<<<");
  4941  05E4  3099               	movlw	low((STR_16-__stringbase))
  4942  05E5  1283               	bcf	status, 5	;RP0=0, select bank0
  4943  05E6  1303               	bcf	status, 6	;RP1=0, select bank0
  4944  05E7  00A7               	movwf	(?_lcd_write_string)
  4945  05E8  3080               	movlw	80h
  4946  05E9  00A8               	movwf	(?_lcd_write_string+1)
  4947  05EA  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4948                           	line	256
  4949                           ;HMI.c: 256: lcd_set_cursor(0x44);
  4950  05EF  3044               	movlw	(044h)
  4951  05F0  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  4952                           	line	257
  4953                           	
  4954  05F5                     l11583:	
  4955                           ;HMI.c: 257: lcd_write_string("CONFIRM");
  4956  05F5  308D               	movlw	low((STR_17-__stringbase))
  4957  05F6  1283               	bcf	status, 5	;RP0=0, select bank0
  4958  05F7  1303               	bcf	status, 6	;RP1=0, select bank0
  4959  05F8  00A7               	movwf	(?_lcd_write_string)
  4960  05F9  3080               	movlw	80h
  4961  05FA  00A8               	movwf	(?_lcd_write_string+1)
  4962  05FB  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4963                           	line	258
  4964                           	
  4965  0600                     l11585:	
  4966                           ;HMI.c: 258: lcd_set_cursor(0x4D);
  4967  0600  304D               	movlw	(04Dh)
  4968  0601  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  4969                           	line	259
  4970                           ;HMI.c: 259: lcd_write_string(">>>");
  4971  0606  309D               	movlw	low((STR_18-__stringbase))
  4972  0607  1283               	bcf	status, 5	;RP0=0, select bank0
  4973  0608  1303               	bcf	status, 6	;RP1=0, select bank0
  4974  0609  00A7               	movwf	(?_lcd_write_string)
  4975  060A  3080               	movlw	80h
  4976  060B  00A8               	movwf	(?_lcd_write_string+1)
  4977  060C  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  4978                           	line	260
  4979                           ;HMI.c: 260: break;
  4980  0611  2EF2               	goto	l4593
  4981                           	line	261
  4982                           ;HMI.c: 261: case 2:
  4983                           	
  4984  0612                     l4589:	
  4985                           	line	262
  4986                           	
  4987  0612                     l11587:	
  4988                           ;HMI.c: 262: lcd_write_control(0b00000001);
  4989  0612  3001               	movlw	(01h)
  4990  0613  160A  118A  2308   	fcall	_lcd_write_control
              120A  118A         
  4991                           	line	264
  4992                           ;HMI.c: 264: lcd_set_cursor(0x00);
  4993  0618  3000               	movlw	(0)
  4994  0619  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  4995                           	line	265
  4996                           	
  4997  061E                     l11589:	
  4998                           ;HMI.c: 265: lcd_write_string(" Charging Mode ");
  4999  061E  300B               	movlw	low((STR_19-__stringbase))
  5000  061F  1283               	bcf	status, 5	;RP0=0, select bank0
  5001  0620  1303               	bcf	status, 6	;RP1=0, select bank0
  5002  0621  00A7               	movwf	(?_lcd_write_string)
  5003  0622  3080               	movlw	80h
  5004  0623  00A8               	movwf	(?_lcd_write_string+1)
  5005  0624  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5006                           	line	269
  5007                           	
  5008  0629                     l11591:	
  5009                           ;HMI.c: 269: lcd_set_cursor(0x44);
  5010  0629  3044               	movlw	(044h)
  5011  062A  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  5012                           	line	270
  5013                           ;HMI.c: 270: lcd_write_string("  EXIT  ");
  5014  062F  304F               	movlw	low((STR_20-__stringbase))
  5015  0630  1283               	bcf	status, 5	;RP0=0, select bank0
  5016  0631  1303               	bcf	status, 6	;RP1=0, select bank0
  5017  0632  00A7               	movwf	(?_lcd_write_string)
  5018  0633  3080               	movlw	80h
  5019  0634  00A8               	movwf	(?_lcd_write_string+1)
  5020  0635  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5021                           	line	272
  5022                           ;HMI.c: 272: break;
  5023  063A  2EF2               	goto	l4593
  5024                           	line	273
  5025                           ;HMI.c: 273: case 3:
  5026                           	
  5027  063B                     l4590:	
  5028                           	line	274
  5029                           	
  5030  063B                     l11593:	
  5031                           ;HMI.c: 274: lcd_write_control(0b00000001);
  5032  063B  3001               	movlw	(01h)
  5033  063C  160A  118A  2308   	fcall	_lcd_write_control
              120A  118A         
  5034                           	line	275
  5035                           	
  5036  0641                     l11595:	
  5037                           ;HMI.c: 275: sprintf(adcOutput,"AS:%dDT:%d",assignedSpeed, distTravelled);
  5038  0641  303A               	movlw	((STR_21-__stringbase))&0ffh
  5039  0642  1283               	bcf	status, 5	;RP0=0, select bank0
  5040  0643  1303               	bcf	status, 6	;RP1=0, select bank0
  5041  0644  00C5               	movwf	(??_UpdateDisplay+0)+0
  5042  0645  0845               	movf	(??_UpdateDisplay+0)+0,w
  5043  0646  00B4               	movwf	(?_sprintf)
  5044  0647  1683               	bsf	status, 5	;RP0=1, select bank1
  5045  0648  1303               	bcf	status, 6	;RP1=0, select bank1
  5046  0649  0861               	movf	(_assignedSpeed+1)^080h,w
  5047  064A  1283               	bcf	status, 5	;RP0=0, select bank0
  5048  064B  1303               	bcf	status, 6	;RP1=0, select bank0
  5049  064C  01B6               	clrf	1+(?_sprintf)+01h
  5050  064D  07B6               	addwf	1+(?_sprintf)+01h
  5051  064E  1683               	bsf	status, 5	;RP0=1, select bank1
  5052  064F  1303               	bcf	status, 6	;RP1=0, select bank1
  5053  0650  0860               	movf	(_assignedSpeed)^080h,w
  5054  0651  1283               	bcf	status, 5	;RP0=0, select bank0
  5055  0652  1303               	bcf	status, 6	;RP1=0, select bank0
  5056  0653  01B5               	clrf	0+(?_sprintf)+01h
  5057  0654  07B5               	addwf	0+(?_sprintf)+01h
  5058                           
  5059  0655  1683               	bsf	status, 5	;RP0=1, select bank1
  5060  0656  1303               	bcf	status, 6	;RP1=0, select bank1
  5061  0657  0835               	movf	(_distTravelled+1)^080h,w
  5062  0658  1283               	bcf	status, 5	;RP0=0, select bank0
  5063  0659  1303               	bcf	status, 6	;RP1=0, select bank0
  5064  065A  01B8               	clrf	1+(?_sprintf)+03h
  5065  065B  07B8               	addwf	1+(?_sprintf)+03h
  5066  065C  1683               	bsf	status, 5	;RP0=1, select bank1
  5067  065D  1303               	bcf	status, 6	;RP1=0, select bank1
  5068  065E  0834               	movf	(_distTravelled)^080h,w
  5069  065F  1283               	bcf	status, 5	;RP0=0, select bank0
  5070  0660  1303               	bcf	status, 6	;RP1=0, select bank0
  5071  0661  01B7               	clrf	0+(?_sprintf)+03h
  5072  0662  07B7               	addwf	0+(?_sprintf)+03h
  5073                           
  5074  0663  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  5075  0664  120A  118A  26F3   	fcall	_sprintf
              120A  118A         
  5076                           	line	277
  5077                           	
  5078  0669                     l11597:	
  5079                           ;HMI.c: 277: lcd_set_cursor(0x00);
  5080  0669  3000               	movlw	(0)
  5081  066A  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  5082                           	line	278
  5083                           ;HMI.c: 278: lcd_write_string(adcOutput);
  5084  066F  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  5085  0670  1283               	bcf	status, 5	;RP0=0, select bank0
  5086  0671  1303               	bcf	status, 6	;RP1=0, select bank0
  5087  0672  00A7               	movwf	(?_lcd_write_string)
  5088  0673  3000               	movlw	(0x0/2)
  5089  0674  00A8               	movwf	(?_lcd_write_string+1)
  5090  0675  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5091                           	line	282
  5092                           	
  5093  067A                     l11599:	
  5094                           ;HMI.c: 282: lcd_set_cursor(0x44);
  5095  067A  3044               	movlw	(044h)
  5096  067B  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  5097                           	line	283
  5098                           	
  5099  0680                     l11601:	
  5100                           ;HMI.c: 283: lcd_write_string("  EXIT  ");
  5101  0680  304F               	movlw	low((STR_22-__stringbase))
  5102  0681  1283               	bcf	status, 5	;RP0=0, select bank0
  5103  0682  1303               	bcf	status, 6	;RP1=0, select bank0
  5104  0683  00A7               	movwf	(?_lcd_write_string)
  5105  0684  3080               	movlw	80h
  5106  0685  00A8               	movwf	(?_lcd_write_string+1)
  5107  0686  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5108                           	line	285
  5109                           ;HMI.c: 285: break;
  5110  068B  2EF2               	goto	l4593
  5111                           	line	287
  5112                           ;HMI.c: 287: case 4:
  5113                           	
  5114  068C                     l4591:	
  5115                           	line	288
  5116                           	
  5117  068C                     l11603:	
  5118                           ;HMI.c: 288: lcd_write_control(0b00000001);
  5119  068C  3001               	movlw	(01h)
  5120  068D  160A  118A  2308   	fcall	_lcd_write_control
              120A  118A         
  5121                           	line	289
  5122                           	
  5123  0692                     l11605:	
  5124                           ;HMI.c: 289: sprintf(adcOutput,"D:%d D:%d",d2travel, distTravelled);
  5125  0692  3045               	movlw	((STR_23-__stringbase))&0ffh
  5126  0693  1283               	bcf	status, 5	;RP0=0, select bank0
  5127  0694  1303               	bcf	status, 6	;RP1=0, select bank0
  5128  0695  00C5               	movwf	(??_UpdateDisplay+0)+0
  5129  0696  0845               	movf	(??_UpdateDisplay+0)+0,w
  5130  0697  00B4               	movwf	(?_sprintf)
  5131  0698  1683               	bsf	status, 5	;RP0=1, select bank1
  5132  0699  1303               	bcf	status, 6	;RP1=0, select bank1
  5133  069A  0833               	movf	(_d2travel+1)^080h,w
  5134  069B  1283               	bcf	status, 5	;RP0=0, select bank0
  5135  069C  1303               	bcf	status, 6	;RP1=0, select bank0
  5136  069D  01B6               	clrf	1+(?_sprintf)+01h
  5137  069E  07B6               	addwf	1+(?_sprintf)+01h
  5138  069F  1683               	bsf	status, 5	;RP0=1, select bank1
  5139  06A0  1303               	bcf	status, 6	;RP1=0, select bank1
  5140  06A1  0832               	movf	(_d2travel)^080h,w
  5141  06A2  1283               	bcf	status, 5	;RP0=0, select bank0
  5142  06A3  1303               	bcf	status, 6	;RP1=0, select bank0
  5143  06A4  01B5               	clrf	0+(?_sprintf)+01h
  5144  06A5  07B5               	addwf	0+(?_sprintf)+01h
  5145                           
  5146  06A6  1683               	bsf	status, 5	;RP0=1, select bank1
  5147  06A7  1303               	bcf	status, 6	;RP1=0, select bank1
  5148  06A8  0835               	movf	(_distTravelled+1)^080h,w
  5149  06A9  1283               	bcf	status, 5	;RP0=0, select bank0
  5150  06AA  1303               	bcf	status, 6	;RP1=0, select bank0
  5151  06AB  01B8               	clrf	1+(?_sprintf)+03h
  5152  06AC  07B8               	addwf	1+(?_sprintf)+03h
  5153  06AD  1683               	bsf	status, 5	;RP0=1, select bank1
  5154  06AE  1303               	bcf	status, 6	;RP1=0, select bank1
  5155  06AF  0834               	movf	(_distTravelled)^080h,w
  5156  06B0  1283               	bcf	status, 5	;RP0=0, select bank0
  5157  06B1  1303               	bcf	status, 6	;RP1=0, select bank0
  5158  06B2  01B7               	clrf	0+(?_sprintf)+03h
  5159  06B3  07B7               	addwf	0+(?_sprintf)+03h
  5160                           
  5161  06B4  3049               	movlw	(UpdateDisplay@adcOutput)&0ffh
  5162  06B5  120A  118A  26F3   	fcall	_sprintf
              120A  118A         
  5163                           	line	291
  5164                           	
  5165  06BA                     l11607:	
  5166                           ;HMI.c: 291: lcd_set_cursor(0x00);
  5167  06BA  3000               	movlw	(0)
  5168  06BB  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  5169                           	line	292
  5170                           ;HMI.c: 292: lcd_write_string(adcOutput);
  5171  06C0  3049               	movlw	(UpdateDisplay@adcOutput&0ffh)
  5172  06C1  1283               	bcf	status, 5	;RP0=0, select bank0
  5173  06C2  1303               	bcf	status, 6	;RP1=0, select bank0
  5174  06C3  00A7               	movwf	(?_lcd_write_string)
  5175  06C4  3000               	movlw	(0x0/2)
  5176  06C5  00A8               	movwf	(?_lcd_write_string+1)
  5177  06C6  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5178                           	line	296
  5179                           	
  5180  06CB                     l11609:	
  5181                           ;HMI.c: 296: lcd_set_cursor(0x44);
  5182  06CB  3044               	movlw	(044h)
  5183  06CC  120A  118A  27F3   	fcall	_lcd_set_cursor
              120A  118A         
  5184                           	line	297
  5185                           	
  5186  06D1                     l11611:	
  5187                           ;HMI.c: 297: lcd_write_string("  EXIT  ");
  5188  06D1  304F               	movlw	low((STR_24-__stringbase))
  5189  06D2  1283               	bcf	status, 5	;RP0=0, select bank0
  5190  06D3  1303               	bcf	status, 6	;RP1=0, select bank0
  5191  06D4  00A7               	movwf	(?_lcd_write_string)
  5192  06D5  3080               	movlw	80h
  5193  06D6  00A8               	movwf	(?_lcd_write_string+1)
  5194  06D7  160A  118A  247B   	fcall	_lcd_write_string
              120A  118A         
  5195                           	line	299
  5196                           ;HMI.c: 299: break;
  5197  06DC  2EF2               	goto	l4593
  5198                           	line	300
  5199                           ;HMI.c: 300: default:
  5200                           	
  5201  06DD                     l4592:	
  5202                           	line	301
  5203                           ;HMI.c: 301: break;
  5204  06DD  2EF2               	goto	l4593
  5205                           	line	304
  5206                           	
  5207  06DE                     l11613:	
  5208                           ;HMI.c: 304: }
  5209  06DE  2EF2               	goto	l4593
  5210                           	line	218
  5211                           	
  5212  06DF                     l4583:	
  5213                           	
  5214  06DF                     l11615:	
  5215  06DF  1683               	bsf	status, 5	;RP0=1, select bank1
  5216  06E0  1303               	bcf	status, 6	;RP1=0, select bank1
  5217  06E1  084B               	movf	(_currentMenu)^080h,w	;volatile
  5218                           	; Switch size 1, requested type "space"
  5219                           ; Number of cases is 5, Range of values is 0 to 4
  5220                           ; switch strategies available:
  5221                           ; Name         Instructions Cycles
  5222                           ; simple_byte           16     9 (average)
  5223                           ; direct_byte           23     8 (fixed)
  5224                           ; jumptable            260     6 (fixed)
  5225                           ; rangetable             9     6 (fixed)
  5226                           ; spacedrange           16     9 (fixed)
  5227                           ; locatedrange           5     3 (fixed)
  5228                           ;	Chosen strategy is simple_byte
  5229                           
  5230                           	opt asmopt_off
  5231  06E2  3A00               	xorlw	0^0	; case 0
  5232  06E3  1903               	skipnz
  5233  06E4  2CEB               	goto	l11553
  5234  06E5  3A01               	xorlw	1^0	; case 1
  5235  06E6  1903               	skipnz
  5236  06E7  2DA6               	goto	l11573
  5237  06E8  3A03               	xorlw	2^1	; case 2
  5238  06E9  1903               	skipnz
  5239  06EA  2E12               	goto	l11587
  5240  06EB  3A01               	xorlw	3^2	; case 3
  5241  06EC  1903               	skipnz
  5242  06ED  2E3B               	goto	l11593
  5243  06EE  3A07               	xorlw	4^3	; case 4
  5244  06EF  1903               	skipnz
  5245  06F0  2E8C               	goto	l11603
  5246  06F1  2EF2               	goto	l4593
  5247                           	opt asmopt_on
  5248                           
  5249                           	line	304
  5250                           	
  5251  06F2                     l4587:	
  5252                           	line	305
  5253                           	
  5254  06F2                     l4593:	
  5255  06F2  0008               	return
  5256                           	opt stack 0
  5257                           GLOBAL	__end_of_UpdateDisplay
  5258  06F3                     	__end_of_UpdateDisplay:
  5259 ;; =============== function _UpdateDisplay ends ============
  5260                           
  5261                           	signat	_UpdateDisplay,88
  5262                           	global	_init
  5263                           psect	text1075,local,class=CODE,delta=2
  5264                           global __ptext1075
  5265  14D4                     __ptext1075:
  5266                           
  5267 ;; *************** function _init *****************
  5268 ;; Defined at:
  5269 ;;		line 136 in file "H:\Aldnoah.Zero-master\Assignment3\Main.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;		None               void
  5276 ;; Registers used:
  5277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5283 ;;      Params:         0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0
  5285 ;;      Temps:          0       1       0       0       0
  5286 ;;      Totals:         0       1       0       0       0
  5287 ;;Total ram usage:        1 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    5
  5290 ;; This function calls:
  5291 ;;		_ser_init
  5292 ;;		_init_adc
  5293 ;;		_lcd_init
  5294 ;;		_robo_init
  5295 ;; This function is called by:
  5296 ;;		_main
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           psect	text1075
  5300                           	file	"H:\Aldnoah.Zero-master\Assignment3\Main.c"
  5301                           	line	136
  5302                           	global	__size_of_init
  5303  002F                     	__size_of_init	equ	__end_of_init-_init
  5304                           	
  5305  14D4                     _init:	
  5306                           	opt	stack 2
  5307                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5308                           	line	139
  5309                           	
  5310  14D4                     l11525:	
  5311                           ;Main.c: 139: buttonPressed = 0;
  5312  14D4  01FD               	clrf	(_buttonPressed)	;volatile
  5313                           	line	143
  5314                           	
  5315  14D5                     l11527:	
  5316                           ;Main.c: 143: TRISC &= 0b10010000;
  5317  14D5  3090               	movlw	(090h)
  5318  14D6  1283               	bcf	status, 5	;RP0=0, select bank0
  5319  14D7  1303               	bcf	status, 6	;RP1=0, select bank0
  5320  14D8  00A3               	movwf	(??_init+0)+0
  5321  14D9  0823               	movf	(??_init+0)+0,w
  5322  14DA  1683               	bsf	status, 5	;RP0=1, select bank1
  5323  14DB  1303               	bcf	status, 6	;RP1=0, select bank1
  5324  14DC  0587               	andwf	(135)^080h,f	;volatile
  5325                           	line	145
  5326                           	
  5327  14DD                     l11529:	
  5328                           ;Main.c: 145: SSPSTAT = 0b01000000;
  5329  14DD  3040               	movlw	(040h)
  5330  14DE  0094               	movwf	(148)^080h	;volatile
  5331                           	line	146
  5332                           	
  5333  14DF                     l11531:	
  5334                           ;Main.c: 146: SSPCON = 0b10100001;
  5335  14DF  30A1               	movlw	(0A1h)
  5336  14E0  1283               	bcf	status, 5	;RP0=0, select bank0
  5337  14E1  1303               	bcf	status, 6	;RP1=0, select bank0
  5338  14E2  0094               	movwf	(20)	;volatile
  5339                           	line	148
  5340                           	
  5341  14E3                     l11533:	
  5342                           ;Main.c: 148: OPTION_REG = 0b00000100;
  5343  14E3  3004               	movlw	(04h)
  5344  14E4  1683               	bsf	status, 5	;RP0=1, select bank1
  5345  14E5  1303               	bcf	status, 6	;RP1=0, select bank1
  5346  14E6  0081               	movwf	(129)^080h	;volatile
  5347                           	line	149
  5348                           	
  5349  14E7                     l11535:	
  5350                           ;Main.c: 149: ser_init();
  5351  14E7  160A  118A  23A7   	fcall	_ser_init
              160A  118A         
  5352                           	line	150
  5353                           	
  5354  14EC                     l11537:	
  5355                           ;Main.c: 150: init_adc();
  5356  14EC  160A  118A  231C   	fcall	_init_adc
              160A  118A         
  5357                           	line	151
  5358                           	
  5359  14F1                     l11539:	
  5360                           ;Main.c: 151: lcd_init();
  5361  14F1  160A  118A  23F8   	fcall	_lcd_init
              160A  118A         
  5362                           	line	152
  5363                           	
  5364  14F6                     l11541:	
  5365                           ;Main.c: 152: robo_init();
  5366  14F6  120A  158A  20CC   	fcall	_robo_init
              160A  118A         
  5367                           	line	153
  5368                           	
  5369  14FB                     l11543:	
  5370                           ;Main.c: 153: TRISB = 0b11111100;
  5371  14FB  30FC               	movlw	(0FCh)
  5372  14FC  1683               	bsf	status, 5	;RP0=1, select bank1
  5373  14FD  1303               	bcf	status, 6	;RP1=0, select bank1
  5374  14FE  0086               	movwf	(134)^080h	;volatile
  5375                           	line	155
  5376                           	
  5377  14FF                     l11545:	
  5378                           ;Main.c: 155: TMR0IE = 1;
  5379  14FF  168B               	bsf	(93/8),(93)&7
  5380                           	line	156
  5381                           	
  5382  1500                     l11547:	
  5383                           ;Main.c: 156: PEIE=1;
  5384  1500  170B               	bsf	(94/8),(94)&7
  5385                           	line	158
  5386                           	
  5387  1501                     l11549:	
  5388                           ;Main.c: 158: (GIE = 1);
  5389  1501  178B               	bsf	(95/8),(95)&7
  5390                           	line	159
  5391                           	
  5392  1502                     l2225:	
  5393  1502  0008               	return
  5394                           	opt stack 0
  5395                           GLOBAL	__end_of_init
  5396  1503                     	__end_of_init:
  5397 ;; =============== function _init ends ============
  5398                           
  5399                           	signat	_init,88
  5400                           	global	_readDistance
  5401                           psect	text1076,local,class=CODE,delta=2
  5402                           global __ptext1076
  5403  1332                     __ptext1076:
  5404                           
  5405 ;; *************** function _readDistance *****************
  5406 ;; Defined at:
  5407 ;;		line 24 in file "H:\Aldnoah.Zero-master\Assignment3\infrared.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;		None
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  fullval         2   12[BANK0 ] unsigned int 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  2    8[BANK0 ] unsigned int 
  5414 ;; Registers used:
  5415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5421 ;;      Params:         0       2       0       0       0
  5422 ;;      Locals:         0       2       0       0       0
  5423 ;;      Temps:          0       2       0       0       0
  5424 ;;      Totals:         0       6       0       0       0
  5425 ;;Total ram usage:        6 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    5
  5428 ;; This function calls:
  5429 ;;		_adc_read_channel
  5430 ;; This function is called by:
  5431 ;;		_readAvgDistance
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           psect	text1076
  5435                           	file	"H:\Aldnoah.Zero-master\Assignment3\infrared.c"
  5436                           	line	24
  5437                           	global	__size_of_readDistance
  5438  0016                     	__size_of_readDistance	equ	__end_of_readDistance-_readDistance
  5439                           	
  5440  1332                     _readDistance:	
  5441                           	opt	stack 0
  5442                           ; Regs used in _readDistance: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5443                           	line	27
  5444                           	
  5445  1332                     l11519:	
  5446                           ;infrared.c: 25: unsigned int fullval ;
  5447                           ;infrared.c: 27: fullval = adc_read_channel(0);
  5448  1332  3000               	movlw	(0)
  5449  1333  160A  118A  2568   	fcall	_adc_read_channel
              160A  118A         
  5450  1338  1283               	bcf	status, 5	;RP0=0, select bank0
  5451  1339  1303               	bcf	status, 6	;RP1=0, select bank0
  5452  133A  00AA               	movwf	(??_readDistance+0)+0
  5453  133B  01AB               	clrf	(??_readDistance+0)+0+1
  5454  133C  082A               	movf	0+(??_readDistance+0)+0,w
  5455  133D  00AC               	movwf	(readDistance@fullval)
  5456  133E  082B               	movf	1+(??_readDistance+0)+0,w
  5457  133F  00AD               	movwf	(readDistance@fullval+1)
  5458                           	line	29
  5459                           	
  5460  1340                     l11521:	
  5461                           ;infrared.c: 29: return fullval;
  5462  1340  082D               	movf	(readDistance@fullval+1),w
  5463  1341  01A9               	clrf	(?_readDistance+1)
  5464  1342  07A9               	addwf	(?_readDistance+1)
  5465  1343  082C               	movf	(readDistance@fullval),w
  5466  1344  01A8               	clrf	(?_readDistance)
  5467  1345  07A8               	addwf	(?_readDistance)
  5468                           
  5469  1346  2B47               	goto	l3026
  5470                           	
  5471  1347                     l11523:	
  5472                           	line	30
  5473                           	
  5474  1347                     l3026:	
  5475  1347  0008               	return
  5476                           	opt stack 0
  5477                           GLOBAL	__end_of_readDistance
  5478  1348                     	__end_of_readDistance:
  5479 ;; =============== function _readDistance ends ============
  5480                           
  5481                           	signat	_readDistance,90
  5482                           	global	_robot_read
  5483                           psect	text1077,local,class=CODE,delta=2
  5484                           global __ptext1077
  5485  175A                     __ptext1077:
  5486                           
  5487 ;; *************** function _robot_read *****************
  5488 ;; Defined at:
  5489 ;;		line 18 in file "H:\Aldnoah.Zero-master\Assignment3\robot.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;		None               void
  5496 ;; Registers used:
  5497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5503 ;;      Params:         0       0       0       0       0
  5504 ;;      Locals:         0       0       0       0       0
  5505 ;;      Temps:          0       2       0       0       0
  5506 ;;      Totals:         0       2       0       0       0
  5507 ;;Total ram usage:        2 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    5
  5510 ;; This function calls:
  5511 ;;		_ser_putch
  5512 ;;		_ser_getch
  5513 ;; This function is called by:
  5514 ;;		_main
  5515 ;;		_robotMoveSpeed
  5516 ;;		_robotMove
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           psect	text1077
  5520                           	file	"H:\Aldnoah.Zero-master\Assignment3\robot.c"
  5521                           	line	18
  5522                           	global	__size_of_robot_read
  5523  0051                     	__size_of_robot_read	equ	__end_of_robot_read-_robot_read
  5524                           	
  5525  175A                     _robot_read:	
  5526                           	opt	stack 1
  5527                           ; Regs used in _robot_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5528                           	line	19
  5529                           	
  5530  175A                     l11505:	
  5531                           ;robot.c: 19: ser_putch (142);
  5532  175A  308E               	movlw	(08Eh)
  5533  175B  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  5534                           	line	20
  5535                           ;robot.c: 20: ser_putch (7);
  5536  1760  3007               	movlw	(07h)
  5537  1761  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  5538                           	line	21
  5539                           	
  5540  1766                     l11507:	
  5541                           ;robot.c: 21: _delay((unsigned long)((5)*(20000000/4000.0)));
  5542                           	opt asmopt_off
  5543  1766  3021               movlw	33
  5544  1767  1283               	bcf	status, 5	;RP0=0, select bank0
  5545  1768  1303               	bcf	status, 6	;RP1=0, select bank0
  5546  1769  00A3               movwf	((??_robot_read+0)+0+1),f
  5547  176A  3076               	movlw	118
  5548  176B  00A2               movwf	((??_robot_read+0)+0),f
  5549  176C                     u5777:
  5550  176C  0BA2               	decfsz	((??_robot_read+0)+0),f
  5551  176D  2F6C               	goto	u5777
  5552  176E  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5553  176F  2F6C               	goto	u5777
  5554  1770  0064               	clrwdt
  5555                           opt asmopt_on
  5556                           
  5557                           	line	22
  5558                           	
  5559  1771                     l11509:	
  5560                           ;robot.c: 22: BumpSensors = ser_getch();
  5561  1771  160A  118A  235F   	fcall	_ser_getch
              160A  118A         
  5562  1776  1283               	bcf	status, 5	;RP0=0, select bank0
  5563  1777  1303               	bcf	status, 6	;RP1=0, select bank0
  5564  1778  00A2               	movwf	(??_robot_read+0)+0
  5565  1779  0822               	movf	(??_robot_read+0)+0,w
  5566  177A  00EC               	movwf	(_BumpSensors)	;volatile
  5567                           	line	23
  5568                           	
  5569  177B                     l11511:	
  5570                           ;robot.c: 23: ser_putch (142);
  5571  177B  308E               	movlw	(08Eh)
  5572  177C  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  5573                           	line	24
  5574                           	
  5575  1781                     l11513:	
  5576                           ;robot.c: 24: ser_putch (19);
  5577  1781  3013               	movlw	(013h)
  5578  1782  160A  118A  2381   	fcall	_ser_putch
              160A  118A         
  5579                           	line	25
  5580                           ;robot.c: 25: _delay((unsigned long)((5)*(20000000/4000.0)));
  5581                           	opt asmopt_off
  5582  1787  3021               movlw	33
  5583  1788  1283               	bcf	status, 5	;RP0=0, select bank0
  5584  1789  1303               	bcf	status, 6	;RP1=0, select bank0
  5585  178A  00A3               movwf	((??_robot_read+0)+0+1),f
  5586  178B  3076               	movlw	118
  5587  178C  00A2               movwf	((??_robot_read+0)+0),f
  5588  178D                     u5787:
  5589  178D  0BA2               	decfsz	((??_robot_read+0)+0),f
  5590  178E  2F8D               	goto	u5787
  5591  178F  0BA3               	decfsz	((??_robot_read+0)+0+1),f
  5592  1790  2F8D               	goto	u5787
  5593  1791  0064               	clrwdt
  5594                           opt asmopt_on
  5595                           
  5596                           	line	26
  5597                           	
  5598  1792                     l11515:	
  5599                           ;robot.c: 26: DistHighByte = ser_getch();
  5600  1792  160A  118A  235F   	fcall	_ser_getch
              160A  118A         
  5601  1797  1283               	bcf	status, 5	;RP0=0, select bank0
  5602  1798  1303               	bcf	status, 6	;RP1=0, select bank0
  5603  1799  00A2               	movwf	(??_robot_read+0)+0
  5604  179A  0822               	movf	(??_robot_read+0)+0,w
  5605  179B  1683               	bsf	status, 5	;RP0=1, select bank1
  5606  179C  1303               	bcf	status, 6	;RP1=0, select bank1
  5607  179D  00C5               	movwf	(_DistHighByte)^080h	;volatile
  5608                           	line	27
  5609                           	
  5610  179E                     l11517:	
  5611                           ;robot.c: 27: DistLowByte = ser_getch();
  5612  179E  160A  118A  235F   	fcall	_ser_getch
              160A  118A         
  5613  17A3  1283               	bcf	status, 5	;RP0=0, select bank0
  5614  17A4  1303               	bcf	status, 6	;RP1=0, select bank0
  5615  17A5  00A2               	movwf	(??_robot_read+0)+0
  5616  17A6  0822               	movf	(??_robot_read+0)+0,w
  5617  17A7  1683               	bsf	status, 5	;RP0=1, select bank1
  5618  17A8  1303               	bcf	status, 6	;RP1=0, select bank1
  5619  17A9  00C6               	movwf	(_DistLowByte)^080h	;volatile
  5620                           	line	29
  5621                           	
  5622  17AA                     l6058:	
  5623  17AA  0008               	return
  5624                           	opt stack 0
  5625                           GLOBAL	__end_of_robot_read
  5626  17AB                     	__end_of_robot_read:
  5627 ;; =============== function _robot_read ends ============
  5628                           
  5629                           	signat	_robot_read,88
  5630                           	global	_lcd_init
  5631                           psect	text1078,local,class=CODE,delta=2
  5632                           global __ptext1078
  5633  13F8                     __ptext1078:
  5634                           
  5635 ;; *************** function _lcd_init *****************
  5636 ;; Defined at:
  5637 ;;		line 101 in file "H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;		None
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;		None
  5642 ;; Return value:  Size  Location     Type
  5643 ;;		None               void
  5644 ;; Registers used:
  5645 ;;		wreg, status,2, status,0, pclath, cstack
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5651 ;;      Params:         0       0       0       0       0
  5652 ;;      Locals:         0       0       0       0       0
  5653 ;;      Temps:          0       0       0       0       0
  5654 ;;      Totals:         0       0       0       0       0
  5655 ;;Total ram usage:        0 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    4
  5658 ;; This function calls:
  5659 ;;		_lcd_write_control
  5660 ;; This function is called by:
  5661 ;;		_init
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           psect	text1078
  5665                           	file	"H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  5666                           	line	101
  5667                           	global	__size_of_lcd_init
  5668  002B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5669                           	
  5670  13F8                     _lcd_init:	
  5671                           	opt	stack 2
  5672                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5673                           	line	105
  5674                           	
  5675  13F8                     l11485:	
  5676                           ;lcd.c: 105: ADCON1 = 0b00000010;
  5677  13F8  3002               	movlw	(02h)
  5678  13F9  1683               	bsf	status, 5	;RP0=1, select bank1
  5679  13FA  1303               	bcf	status, 6	;RP1=0, select bank1
  5680  13FB  009F               	movwf	(159)^080h	;volatile
  5681                           	line	108
  5682                           	
  5683  13FC                     l11487:	
  5684                           ;lcd.c: 108: PORTD = 0;
  5685  13FC  1283               	bcf	status, 5	;RP0=0, select bank0
  5686  13FD  1303               	bcf	status, 6	;RP1=0, select bank0
  5687  13FE  0188               	clrf	(8)	;volatile
  5688                           	line	109
  5689                           	
  5690  13FF                     l11489:	
  5691                           ;lcd.c: 109: PORTE = 0;
  5692  13FF  0189               	clrf	(9)	;volatile
  5693                           	line	111
  5694                           	
  5695  1400                     l11491:	
  5696                           ;lcd.c: 111: TRISD = 0b00000000;
  5697  1400  1683               	bsf	status, 5	;RP0=1, select bank1
  5698  1401  1303               	bcf	status, 6	;RP1=0, select bank1
  5699  1402  0188               	clrf	(136)^080h	;volatile
  5700                           	line	112
  5701                           	
  5702  1403                     l11493:	
  5703                           ;lcd.c: 112: TRISE = 0b00000000;
  5704  1403  0189               	clrf	(137)^080h	;volatile
  5705                           	line	115
  5706                           	
  5707  1404                     l11495:	
  5708                           ;lcd.c: 115: lcd_write_control(0b00000001);
  5709  1404  3001               	movlw	(01h)
  5710  1405  160A  118A  2308   	fcall	_lcd_write_control
              160A  118A         
  5711                           	line	116
  5712                           	
  5713  140A                     l11497:	
  5714                           ;lcd.c: 116: lcd_write_control(0b00111000);
  5715  140A  3038               	movlw	(038h)
  5716  140B  160A  118A  2308   	fcall	_lcd_write_control
              160A  118A         
  5717                           	line	117
  5718                           	
  5719  1410                     l11499:	
  5720                           ;lcd.c: 117: lcd_write_control(0b00001100);
  5721  1410  300C               	movlw	(0Ch)
  5722  1411  160A  118A  2308   	fcall	_lcd_write_control
              160A  118A         
  5723                           	line	118
  5724                           	
  5725  1416                     l11501:	
  5726                           ;lcd.c: 118: lcd_write_control(0b00000110);
  5727  1416  3006               	movlw	(06h)
  5728  1417  160A  118A  2308   	fcall	_lcd_write_control
              160A  118A         
  5729                           	line	119
  5730                           	
  5731  141C                     l11503:	
  5732                           ;lcd.c: 119: lcd_write_control(0b00000010);
  5733  141C  3002               	movlw	(02h)
  5734  141D  160A  118A  2308   	fcall	_lcd_write_control
              160A  118A         
  5735                           	line	121
  5736                           	
  5737  1422                     l1429:	
  5738  1422  0008               	return
  5739                           	opt stack 0
  5740                           GLOBAL	__end_of_lcd_init
  5741  1423                     	__end_of_lcd_init:
  5742 ;; =============== function _lcd_init ends ============
  5743                           
  5744                           	signat	_lcd_init,88
  5745                           	global	_lcd_write_string
  5746                           psect	text1079,local,class=CODE,delta=2
  5747                           global __ptext1079
  5748  147B                     __ptext1079:
  5749                           
  5750 ;; *************** function _lcd_write_string *****************
  5751 ;; Defined at:
  5752 ;;		line 48 in file "H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  s               2    7[BANK0 ] PTR unsigned char 
  5755 ;;		 -> STR_24(9), STR_22(9), STR_20(9), STR_19(16), 
  5756 ;;		 -> STR_18(4), STR_17(8), STR_16(4), STR_15(16), 
  5757 ;;		 -> UpdateDisplay@adcOutput(16), STR_12(4), STR_11(4), STR_10(4), 
  5758 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(9), 
  5759 ;;		 -> STR_5(9), STR_4(8), STR_3(9), STR_2(9), 
  5760 ;;		 -> STR_1(9), 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;		None               void
  5765 ;; Registers used:
  5766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5772 ;;      Params:         0       2       0       0       0
  5773 ;;      Locals:         0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0
  5775 ;;      Totals:         0       2       0       0       0
  5776 ;;Total ram usage:        2 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    4
  5779 ;; This function calls:
  5780 ;;		_lcd_write_data
  5781 ;; This function is called by:
  5782 ;;		_UpdateDisplay
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           psect	text1079
  5786                           	file	"H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  5787                           	line	48
  5788                           	global	__size_of_lcd_write_string
  5789  002C                     	__size_of_lcd_write_string	equ	__end_of_lcd_write_string-_lcd_write_string
  5790                           	
  5791  147B                     _lcd_write_string:	
  5792                           	opt	stack 1
  5793                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5794                           	line	50
  5795                           	
  5796  147B                     l11477:	
  5797                           ;lcd.c: 50: while(*s) lcd_write_data(*s++);
  5798  147B  2C95               	goto	l11483
  5799                           	
  5800  147C                     l1409:	
  5801                           	
  5802  147C                     l11479:	
  5803  147C  1283               	bcf	status, 5	;RP0=0, select bank0
  5804  147D  1303               	bcf	status, 6	;RP1=0, select bank0
  5805  147E  0828               	movf	(lcd_write_string@s+1),w
  5806  147F  00FF               	movwf	btemp+1
  5807  1480  0827               	movf	(lcd_write_string@s),w
  5808  1481  0084               	movwf	fsr0
  5809  1482  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5810  1487  160A  118A  22CE   	fcall	_lcd_write_data
              160A  118A         
  5811                           	
  5812  148C                     l11481:	
  5813  148C  3001               	movlw	low(01h)
  5814  148D  1283               	bcf	status, 5	;RP0=0, select bank0
  5815  148E  1303               	bcf	status, 6	;RP1=0, select bank0
  5816  148F  07A7               	addwf	(lcd_write_string@s),f
  5817  1490  1803               	skipnc
  5818  1491  0AA8               	incf	(lcd_write_string@s+1),f
  5819  1492  3000               	movlw	high(01h)
  5820  1493  07A8               	addwf	(lcd_write_string@s+1),f
  5821  1494  2C95               	goto	l11483
  5822                           	
  5823  1495                     l1408:	
  5824                           	
  5825  1495                     l11483:	
  5826  1495  1283               	bcf	status, 5	;RP0=0, select bank0
  5827  1496  1303               	bcf	status, 6	;RP1=0, select bank0
  5828  1497  0828               	movf	(lcd_write_string@s+1),w
  5829  1498  00FF               	movwf	btemp+1
  5830  1499  0827               	movf	(lcd_write_string@s),w
  5831  149A  0084               	movwf	fsr0
  5832  149B  120A  158A  2000   	fcall	stringtab
              160A  118A         
  5833  14A0  3800               	iorlw	0
  5834  14A1  1D03               	skipz
  5835  14A2  2CA4               	goto	u5421
  5836  14A3  2CA5               	goto	u5420
  5837  14A4                     u5421:
  5838  14A4  2C7C               	goto	l11479
  5839  14A5                     u5420:
  5840  14A5  2CA6               	goto	l1411
  5841                           	
  5842  14A6                     l1410:	
  5843                           	line	51
  5844                           	
  5845  14A6                     l1411:	
  5846  14A6  0008               	return
  5847                           	opt stack 0
  5848                           GLOBAL	__end_of_lcd_write_string
  5849  14A7                     	__end_of_lcd_write_string:
  5850 ;; =============== function _lcd_write_string ends ============
  5851                           
  5852                           	signat	_lcd_write_string,4216
  5853                           	global	_lcd_set_cursor
  5854                           psect	text1080,local,class=CODE,delta=2
  5855                           global __ptext1080
  5856  07F3                     __ptext1080:
  5857                           
  5858 ;; *************** function _lcd_set_cursor *****************
  5859 ;; Defined at:
  5860 ;;		line 42 in file "H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  address         1    wreg     unsigned char 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  address         1    3[BANK0 ] unsigned char 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;		None               void
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0, pclath, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5874 ;;      Params:         0       0       0       0       0
  5875 ;;      Locals:         0       1       0       0       0
  5876 ;;      Temps:          0       0       0       0       0
  5877 ;;      Totals:         0       1       0       0       0
  5878 ;;Total ram usage:        1 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    4
  5881 ;; This function calls:
  5882 ;;		_lcd_write_control
  5883 ;; This function is called by:
  5884 ;;		_UpdateDisplay
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           psect	text1080
  5888                           	file	"H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  5889                           	line	42
  5890                           	global	__size_of_lcd_set_cursor
  5891  000B                     	__size_of_lcd_set_cursor	equ	__end_of_lcd_set_cursor-_lcd_set_cursor
  5892                           	
  5893  07F3                     _lcd_set_cursor:	
  5894                           	opt	stack 1
  5895                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  5896                           ;lcd_set_cursor@address stored from wreg
  5897  07F3  1283               	bcf	status, 5	;RP0=0, select bank0
  5898  07F4  1303               	bcf	status, 6	;RP1=0, select bank0
  5899  07F5  00A3               	movwf	(lcd_set_cursor@address)
  5900                           	line	43
  5901                           	
  5902  07F6                     l11473:	
  5903                           ;lcd.c: 43: address |= 0b10000000;
  5904  07F6  17A3               	bsf	(lcd_set_cursor@address)+(7/8),(7)&7
  5905                           	line	44
  5906                           	
  5907  07F7                     l11475:	
  5908                           ;lcd.c: 44: lcd_write_control(address);
  5909  07F7  0823               	movf	(lcd_set_cursor@address),w
  5910  07F8  160A  118A  2308   	fcall	_lcd_write_control
              120A  118A         
  5911                           	line	45
  5912                           	
  5913  07FD                     l1405:	
  5914  07FD  0008               	return
  5915                           	opt stack 0
  5916                           GLOBAL	__end_of_lcd_set_cursor
  5917  07FE                     	__end_of_lcd_set_cursor:
  5918 ;; =============== function _lcd_set_cursor ends ============
  5919                           
  5920                           	signat	_lcd_set_cursor,4216
  5921                           	global	___awtoft
  5922                           psect	text1081,local,class=CODE,delta=2
  5923                           global __ptext1081
  5924  144F                     __ptext1081:
  5925                           
  5926 ;; *************** function ___awtoft *****************
  5927 ;; Defined at:
  5928 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  c               2   22[BANK0 ] int 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  sign            1   27[BANK0 ] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  3   22[BANK0 ] float 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0, pclath, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5942 ;;      Params:         0       3       0       0       0
  5943 ;;      Locals:         0       1       0       0       0
  5944 ;;      Temps:          0       2       0       0       0
  5945 ;;      Totals:         0       6       0       0       0
  5946 ;;Total ram usage:        6 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    4
  5949 ;; This function calls:
  5950 ;;		___ftpack
  5951 ;; This function is called by:
  5952 ;;		_main
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           psect	text1081
  5956                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5957                           	line	33
  5958                           	global	__size_of___awtoft
  5959  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  5960                           	
  5961  144F                     ___awtoft:	
  5962                           	opt	stack 3
  5963                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5964                           	line	36
  5965                           	
  5966  144F                     l11465:	
  5967  144F  1283               	bcf	status, 5	;RP0=0, select bank0
  5968  1450  1303               	bcf	status, 6	;RP1=0, select bank0
  5969  1451  01BB               	clrf	(___awtoft@sign)
  5970                           	line	37
  5971  1452  1FB7               	btfss	(___awtoft@c+1),7
  5972  1453  2C55               	goto	u5411
  5973  1454  2C56               	goto	u5410
  5974  1455                     u5411:
  5975  1455  2C5F               	goto	l11469
  5976  1456                     u5410:
  5977                           	line	38
  5978                           	
  5979  1456                     l11467:	
  5980  1456  09B6               	comf	(___awtoft@c),f
  5981  1457  09B7               	comf	(___awtoft@c+1),f
  5982  1458  0AB6               	incf	(___awtoft@c),f
  5983  1459  1903               	skipnz
  5984  145A  0AB7               	incf	(___awtoft@c+1),f
  5985                           	line	39
  5986  145B  01BB               	clrf	(___awtoft@sign)
  5987  145C  1403               	bsf	status,0
  5988  145D  0DBB               	rlf	(___awtoft@sign),f
  5989  145E  2C5F               	goto	l11469
  5990                           	line	40
  5991                           	
  5992  145F                     l7663:	
  5993                           	line	41
  5994                           	
  5995  145F                     l11469:	
  5996  145F  0836               	movf	(___awtoft@c),w
  5997  1460  00A0               	movwf	(?___ftpack)
  5998  1461  0837               	movf	(___awtoft@c+1),w
  5999  1462  00A1               	movwf	(?___ftpack+1)
  6000  1463  01A2               	clrf	(?___ftpack+2)
  6001  1464  308E               	movlw	(08Eh)
  6002  1465  00B9               	movwf	(??___awtoft+0)+0
  6003  1466  0839               	movf	(??___awtoft+0)+0,w
  6004  1467  00A3               	movwf	0+(?___ftpack)+03h
  6005  1468  083B               	movf	(___awtoft@sign),w
  6006  1469  00BA               	movwf	(??___awtoft+1)+0
  6007  146A  083A               	movf	(??___awtoft+1)+0,w
  6008  146B  00A4               	movwf	0+(?___ftpack)+04h
  6009  146C  120A  158A  21C7   	fcall	___ftpack
              160A  118A         
  6010  1471  1283               	bcf	status, 5	;RP0=0, select bank0
  6011  1472  1303               	bcf	status, 6	;RP1=0, select bank0
  6012  1473  0820               	movf	(0+(?___ftpack)),w
  6013  1474  00B6               	movwf	(?___awtoft)
  6014  1475  0821               	movf	(1+(?___ftpack)),w
  6015  1476  00B7               	movwf	(?___awtoft+1)
  6016  1477  0822               	movf	(2+(?___ftpack)),w
  6017  1478  00B8               	movwf	(?___awtoft+2)
  6018  1479  2C7A               	goto	l7664
  6019                           	
  6020  147A                     l11471:	
  6021                           	line	42
  6022                           	
  6023  147A                     l7664:	
  6024  147A  0008               	return
  6025                           	opt stack 0
  6026                           GLOBAL	__end_of___awtoft
  6027  147B                     	__end_of___awtoft:
  6028 ;; =============== function ___awtoft ends ============
  6029                           
  6030                           	signat	___awtoft,4219
  6031                           	global	___ftmul
  6032                           psect	text1082,local,class=CODE,delta=2
  6033                           global __ptext1082
  6034  0F12                     __ptext1082:
  6035                           
  6036 ;; *************** function ___ftmul *****************
  6037 ;; Defined at:
  6038 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  f1              3   28[BANK0 ] float 
  6041 ;;  f2              3   31[BANK0 ] float 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  6044 ;;  sign            1   43[BANK0 ] unsigned char 
  6045 ;;  cntr            1   42[BANK0 ] unsigned char 
  6046 ;;  exp             1   38[BANK0 ] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  3   28[BANK0 ] float 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0, pclath, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6056 ;;      Params:         0       6       0       0       0
  6057 ;;      Locals:         0       6       0       0       0
  6058 ;;      Temps:          0       4       0       0       0
  6059 ;;      Totals:         0      16       0       0       0
  6060 ;;Total ram usage:       16 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    4
  6063 ;; This function calls:
  6064 ;;		___ftpack
  6065 ;; This function is called by:
  6066 ;;		_main
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           psect	text1082
  6070                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6071                           	line	52
  6072                           	global	__size_of___ftmul
  6073  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  6074                           	
  6075  0F12                     ___ftmul:	
  6076                           	opt	stack 3
  6077                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6078                           	line	56
  6079                           	
  6080  0F12                     l11415:	
  6081  0F12  1283               	bcf	status, 5	;RP0=0, select bank0
  6082  0F13  1303               	bcf	status, 6	;RP1=0, select bank0
  6083  0F14  083C               	movf	(___ftmul@f1),w
  6084  0F15  00C2               	movwf	((??___ftmul+0)+0)
  6085  0F16  083D               	movf	(___ftmul@f1+1),w
  6086  0F17  00C3               	movwf	((??___ftmul+0)+0+1)
  6087  0F18  083E               	movf	(___ftmul@f1+2),w
  6088  0F19  00C4               	movwf	((??___ftmul+0)+0+2)
  6089  0F1A  1003               	clrc
  6090  0F1B  0D43               	rlf	(??___ftmul+0)+1,w
  6091  0F1C  0D44               	rlf	(??___ftmul+0)+2,w
  6092  0F1D  00C5               	movwf	(??___ftmul+3)+0
  6093  0F1E  0845               	movf	(??___ftmul+3)+0,w
  6094  0F1F  00C6               	movwf	(___ftmul@exp)
  6095  0F20  08C6               	movf	((___ftmul@exp)),f
  6096  0F21  1D03               	skipz
  6097  0F22  2F24               	goto	u5271
  6098  0F23  2F25               	goto	u5270
  6099  0F24                     u5271:
  6100  0F24  2F2D               	goto	l11421
  6101  0F25                     u5270:
  6102                           	line	57
  6103                           	
  6104  0F25                     l11417:	
  6105  0F25  3000               	movlw	0x0
  6106  0F26  00BC               	movwf	(?___ftmul)
  6107  0F27  3000               	movlw	0x0
  6108  0F28  00BD               	movwf	(?___ftmul+1)
  6109  0F29  3000               	movlw	0x0
  6110  0F2A  00BE               	movwf	(?___ftmul+2)
  6111  0F2B  2FFF               	goto	l7626
  6112                           	
  6113  0F2C                     l11419:	
  6114  0F2C  2FFF               	goto	l7626
  6115                           	
  6116  0F2D                     l7625:	
  6117                           	line	58
  6118                           	
  6119  0F2D                     l11421:	
  6120  0F2D  083F               	movf	(___ftmul@f2),w
  6121  0F2E  00C2               	movwf	((??___ftmul+0)+0)
  6122  0F2F  0840               	movf	(___ftmul@f2+1),w
  6123  0F30  00C3               	movwf	((??___ftmul+0)+0+1)
  6124  0F31  0841               	movf	(___ftmul@f2+2),w
  6125  0F32  00C4               	movwf	((??___ftmul+0)+0+2)
  6126  0F33  1003               	clrc
  6127  0F34  0D43               	rlf	(??___ftmul+0)+1,w
  6128  0F35  0D44               	rlf	(??___ftmul+0)+2,w
  6129  0F36  00C5               	movwf	(??___ftmul+3)+0
  6130  0F37  0845               	movf	(??___ftmul+3)+0,w
  6131  0F38  00CB               	movwf	(___ftmul@sign)
  6132  0F39  08CB               	movf	((___ftmul@sign)),f
  6133  0F3A  1D03               	skipz
  6134  0F3B  2F3D               	goto	u5281
  6135  0F3C  2F3E               	goto	u5280
  6136  0F3D                     u5281:
  6137  0F3D  2F46               	goto	l11427
  6138  0F3E                     u5280:
  6139                           	line	59
  6140                           	
  6141  0F3E                     l11423:	
  6142  0F3E  3000               	movlw	0x0
  6143  0F3F  00BC               	movwf	(?___ftmul)
  6144  0F40  3000               	movlw	0x0
  6145  0F41  00BD               	movwf	(?___ftmul+1)
  6146  0F42  3000               	movlw	0x0
  6147  0F43  00BE               	movwf	(?___ftmul+2)
  6148  0F44  2FFF               	goto	l7626
  6149                           	
  6150  0F45                     l11425:	
  6151  0F45  2FFF               	goto	l7626
  6152                           	
  6153  0F46                     l7627:	
  6154                           	line	60
  6155                           	
  6156  0F46                     l11427:	
  6157  0F46  084B               	movf	(___ftmul@sign),w
  6158  0F47  3E7B               	addlw	07Bh
  6159  0F48  00C2               	movwf	(??___ftmul+0)+0
  6160  0F49  0842               	movf	(??___ftmul+0)+0,w
  6161  0F4A  07C6               	addwf	(___ftmul@exp),f
  6162                           	line	61
  6163  0F4B  083C               	movf	(___ftmul@f1),w
  6164  0F4C  00C2               	movwf	((??___ftmul+0)+0)
  6165  0F4D  083D               	movf	(___ftmul@f1+1),w
  6166  0F4E  00C3               	movwf	((??___ftmul+0)+0+1)
  6167  0F4F  083E               	movf	(___ftmul@f1+2),w
  6168  0F50  00C4               	movwf	((??___ftmul+0)+0+2)
  6169  0F51  3010               	movlw	010h
  6170  0F52                     u5295:
  6171  0F52  1003               	clrc
  6172  0F53  0CC4               	rrf	(??___ftmul+0)+2,f
  6173  0F54  0CC3               	rrf	(??___ftmul+0)+1,f
  6174  0F55  0CC2               	rrf	(??___ftmul+0)+0,f
  6175  0F56                     u5290:
  6176  0F56  3EFF               	addlw	-1
  6177  0F57  1D03               	skipz
  6178  0F58  2F52               	goto	u5295
  6179  0F59  0842               	movf	0+(??___ftmul+0)+0,w
  6180  0F5A  00C5               	movwf	(??___ftmul+3)+0
  6181  0F5B  0845               	movf	(??___ftmul+3)+0,w
  6182  0F5C  00CB               	movwf	(___ftmul@sign)
  6183                           	line	62
  6184  0F5D  083F               	movf	(___ftmul@f2),w
  6185  0F5E  00C2               	movwf	((??___ftmul+0)+0)
  6186  0F5F  0840               	movf	(___ftmul@f2+1),w
  6187  0F60  00C3               	movwf	((??___ftmul+0)+0+1)
  6188  0F61  0841               	movf	(___ftmul@f2+2),w
  6189  0F62  00C4               	movwf	((??___ftmul+0)+0+2)
  6190  0F63  3010               	movlw	010h
  6191  0F64                     u5305:
  6192  0F64  1003               	clrc
  6193  0F65  0CC4               	rrf	(??___ftmul+0)+2,f
  6194  0F66  0CC3               	rrf	(??___ftmul+0)+1,f
  6195  0F67  0CC2               	rrf	(??___ftmul+0)+0,f
  6196  0F68                     u5300:
  6197  0F68  3EFF               	addlw	-1
  6198  0F69  1D03               	skipz
  6199  0F6A  2F64               	goto	u5305
  6200  0F6B  0842               	movf	0+(??___ftmul+0)+0,w
  6201  0F6C  00C5               	movwf	(??___ftmul+3)+0
  6202  0F6D  0845               	movf	(??___ftmul+3)+0,w
  6203  0F6E  06CB               	xorwf	(___ftmul@sign),f
  6204                           	line	63
  6205  0F6F  3080               	movlw	(080h)
  6206  0F70  00C2               	movwf	(??___ftmul+0)+0
  6207  0F71  0842               	movf	(??___ftmul+0)+0,w
  6208  0F72  05CB               	andwf	(___ftmul@sign),f
  6209                           	line	64
  6210                           	
  6211  0F73                     l11429:	
  6212  0F73  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
  6213                           	line	66
  6214                           	
  6215  0F74                     l11431:	
  6216  0F74  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
  6217                           	line	67
  6218                           	
  6219  0F75                     l11433:	
  6220  0F75  30FF               	movlw	0FFh
  6221  0F76  05BF               	andwf	(___ftmul@f2),f
  6222  0F77  30FF               	movlw	0FFh
  6223  0F78  05C0               	andwf	(___ftmul@f2+1),f
  6224  0F79  3000               	movlw	0
  6225  0F7A  05C1               	andwf	(___ftmul@f2+2),f
  6226                           	line	68
  6227                           	
  6228  0F7B                     l11435:	
  6229  0F7B  3000               	movlw	0
  6230  0F7C  00C7               	movwf	(___ftmul@f3_as_product)
  6231  0F7D  3000               	movlw	0
  6232  0F7E  00C8               	movwf	(___ftmul@f3_as_product+1)
  6233  0F7F  3000               	movlw	0
  6234  0F80  00C9               	movwf	(___ftmul@f3_as_product+2)
  6235                           	line	69
  6236                           	
  6237  0F81                     l11437:	
  6238  0F81  3007               	movlw	(07h)
  6239  0F82  00C2               	movwf	(??___ftmul+0)+0
  6240  0F83  0842               	movf	(??___ftmul+0)+0,w
  6241  0F84  00CA               	movwf	(___ftmul@cntr)
  6242  0F85  2F86               	goto	l11439
  6243                           	line	70
  6244                           	
  6245  0F86                     l7628:	
  6246                           	line	71
  6247                           	
  6248  0F86                     l11439:	
  6249  0F86  1C3C               	btfss	(___ftmul@f1),(0)&7
  6250  0F87  2F89               	goto	u5311
  6251  0F88  2F8A               	goto	u5310
  6252  0F89                     u5311:
  6253  0F89  2F9B               	goto	l11443
  6254  0F8A                     u5310:
  6255                           	line	72
  6256                           	
  6257  0F8A                     l11441:	
  6258  0F8A  083F               	movf	(___ftmul@f2),w
  6259  0F8B  07C7               	addwf	(___ftmul@f3_as_product),f
  6260  0F8C  0840               	movf	(___ftmul@f2+1),w
  6261  0F8D  1103               	clrz
  6262  0F8E  1803               	skipnc
  6263  0F8F  0A40               	incf	(___ftmul@f2+1),w
  6264  0F90  1903               	skipnz
  6265  0F91  2F93               	goto	u5321
  6266  0F92  07C8               	addwf	(___ftmul@f3_as_product+1),f
  6267  0F93                     u5321:
  6268  0F93  0841               	movf	(___ftmul@f2+2),w
  6269  0F94  1103               	clrz
  6270  0F95  1803               	skipnc
  6271  0F96  0A41               	incf	(___ftmul@f2+2),w
  6272  0F97  1903               	skipnz
  6273  0F98  2F9A               	goto	u5322
  6274  0F99  07C9               	addwf	(___ftmul@f3_as_product+2),f
  6275  0F9A                     u5322:
  6276                           
  6277  0F9A  2F9B               	goto	l11443
  6278                           	
  6279  0F9B                     l7629:	
  6280                           	line	73
  6281                           	
  6282  0F9B                     l11443:	
  6283  0F9B  3001               	movlw	01h
  6284  0F9C                     u5335:
  6285  0F9C  1003               	clrc
  6286  0F9D  0CBE               	rrf	(___ftmul@f1+2),f
  6287  0F9E  0CBD               	rrf	(___ftmul@f1+1),f
  6288  0F9F  0CBC               	rrf	(___ftmul@f1),f
  6289  0FA0  3EFF               	addlw	-1
  6290  0FA1  1D03               	skipz
  6291  0FA2  2F9C               	goto	u5335
  6292                           
  6293                           	line	74
  6294                           	
  6295  0FA3                     l11445:	
  6296  0FA3  3001               	movlw	01h
  6297  0FA4                     u5345:
  6298  0FA4  1003               	clrc
  6299  0FA5  0DBF               	rlf	(___ftmul@f2),f
  6300  0FA6  0DC0               	rlf	(___ftmul@f2+1),f
  6301  0FA7  0DC1               	rlf	(___ftmul@f2+2),f
  6302  0FA8  3EFF               	addlw	-1
  6303  0FA9  1D03               	skipz
  6304  0FAA  2FA4               	goto	u5345
  6305                           	line	75
  6306                           	
  6307  0FAB                     l11447:	
  6308  0FAB  3001               	movlw	low(01h)
  6309  0FAC  02CA               	subwf	(___ftmul@cntr),f
  6310  0FAD  1D03               	btfss	status,2
  6311  0FAE  2FB0               	goto	u5351
  6312  0FAF  2FB1               	goto	u5350
  6313  0FB0                     u5351:
  6314  0FB0  2F86               	goto	l11439
  6315  0FB1                     u5350:
  6316  0FB1  2FB2               	goto	l11449
  6317                           	
  6318  0FB2                     l7630:	
  6319                           	line	76
  6320                           	
  6321  0FB2                     l11449:	
  6322  0FB2  3009               	movlw	(09h)
  6323  0FB3  00C2               	movwf	(??___ftmul+0)+0
  6324  0FB4  0842               	movf	(??___ftmul+0)+0,w
  6325  0FB5  00CA               	movwf	(___ftmul@cntr)
  6326  0FB6  2FB7               	goto	l11451
  6327                           	line	77
  6328                           	
  6329  0FB7                     l7631:	
  6330                           	line	78
  6331                           	
  6332  0FB7                     l11451:	
  6333  0FB7  1C3C               	btfss	(___ftmul@f1),(0)&7
  6334  0FB8  2FBA               	goto	u5361
  6335  0FB9  2FBB               	goto	u5360
  6336  0FBA                     u5361:
  6337  0FBA  2FCC               	goto	l11455
  6338  0FBB                     u5360:
  6339                           	line	79
  6340                           	
  6341  0FBB                     l11453:	
  6342  0FBB  083F               	movf	(___ftmul@f2),w
  6343  0FBC  07C7               	addwf	(___ftmul@f3_as_product),f
  6344  0FBD  0840               	movf	(___ftmul@f2+1),w
  6345  0FBE  1103               	clrz
  6346  0FBF  1803               	skipnc
  6347  0FC0  0A40               	incf	(___ftmul@f2+1),w
  6348  0FC1  1903               	skipnz
  6349  0FC2  2FC4               	goto	u5371
  6350  0FC3  07C8               	addwf	(___ftmul@f3_as_product+1),f
  6351  0FC4                     u5371:
  6352  0FC4  0841               	movf	(___ftmul@f2+2),w
  6353  0FC5  1103               	clrz
  6354  0FC6  1803               	skipnc
  6355  0FC7  0A41               	incf	(___ftmul@f2+2),w
  6356  0FC8  1903               	skipnz
  6357  0FC9  2FCB               	goto	u5372
  6358  0FCA  07C9               	addwf	(___ftmul@f3_as_product+2),f
  6359  0FCB                     u5372:
  6360                           
  6361  0FCB  2FCC               	goto	l11455
  6362                           	
  6363  0FCC                     l7632:	
  6364                           	line	80
  6365                           	
  6366  0FCC                     l11455:	
  6367  0FCC  3001               	movlw	01h
  6368  0FCD                     u5385:
  6369  0FCD  1003               	clrc
  6370  0FCE  0CBE               	rrf	(___ftmul@f1+2),f
  6371  0FCF  0CBD               	rrf	(___ftmul@f1+1),f
  6372  0FD0  0CBC               	rrf	(___ftmul@f1),f
  6373  0FD1  3EFF               	addlw	-1
  6374  0FD2  1D03               	skipz
  6375  0FD3  2FCD               	goto	u5385
  6376                           
  6377                           	line	81
  6378                           	
  6379  0FD4                     l11457:	
  6380  0FD4  3001               	movlw	01h
  6381  0FD5                     u5395:
  6382  0FD5  1003               	clrc
  6383  0FD6  0CC9               	rrf	(___ftmul@f3_as_product+2),f
  6384  0FD7  0CC8               	rrf	(___ftmul@f3_as_product+1),f
  6385  0FD8  0CC7               	rrf	(___ftmul@f3_as_product),f
  6386  0FD9  3EFF               	addlw	-1
  6387  0FDA  1D03               	skipz
  6388  0FDB  2FD5               	goto	u5395
  6389                           
  6390                           	line	82
  6391                           	
  6392  0FDC                     l11459:	
  6393  0FDC  3001               	movlw	low(01h)
  6394  0FDD  02CA               	subwf	(___ftmul@cntr),f
  6395  0FDE  1D03               	btfss	status,2
  6396  0FDF  2FE1               	goto	u5401
  6397  0FE0  2FE2               	goto	u5400
  6398  0FE1                     u5401:
  6399  0FE1  2FB7               	goto	l11451
  6400  0FE2                     u5400:
  6401  0FE2  2FE3               	goto	l11461
  6402                           	
  6403  0FE3                     l7633:	
  6404                           	line	83
  6405                           	
  6406  0FE3                     l11461:	
  6407  0FE3  0847               	movf	(___ftmul@f3_as_product),w
  6408  0FE4  00A0               	movwf	(?___ftpack)
  6409  0FE5  0848               	movf	(___ftmul@f3_as_product+1),w
  6410  0FE6  00A1               	movwf	(?___ftpack+1)
  6411  0FE7  0849               	movf	(___ftmul@f3_as_product+2),w
  6412  0FE8  00A2               	movwf	(?___ftpack+2)
  6413  0FE9  0846               	movf	(___ftmul@exp),w
  6414  0FEA  00C2               	movwf	(??___ftmul+0)+0
  6415  0FEB  0842               	movf	(??___ftmul+0)+0,w
  6416  0FEC  00A3               	movwf	0+(?___ftpack)+03h
  6417  0FED  084B               	movf	(___ftmul@sign),w
  6418  0FEE  00C3               	movwf	(??___ftmul+1)+0
  6419  0FEF  0843               	movf	(??___ftmul+1)+0,w
  6420  0FF0  00A4               	movwf	0+(?___ftpack)+04h
  6421  0FF1  120A  158A  21C7   	fcall	___ftpack
              120A  158A         
  6422  0FF6  1283               	bcf	status, 5	;RP0=0, select bank0
  6423  0FF7  1303               	bcf	status, 6	;RP1=0, select bank0
  6424  0FF8  0820               	movf	(0+(?___ftpack)),w
  6425  0FF9  00BC               	movwf	(?___ftmul)
  6426  0FFA  0821               	movf	(1+(?___ftpack)),w
  6427  0FFB  00BD               	movwf	(?___ftmul+1)
  6428  0FFC  0822               	movf	(2+(?___ftpack)),w
  6429  0FFD  00BE               	movwf	(?___ftmul+2)
  6430  0FFE  2FFF               	goto	l7626
  6431                           	
  6432  0FFF                     l11463:	
  6433                           	line	84
  6434                           	
  6435  0FFF                     l7626:	
  6436  0FFF  0008               	return
  6437                           	opt stack 0
  6438                           GLOBAL	__end_of___ftmul
  6439  1000                     	__end_of___ftmul:
  6440 ;; =============== function ___ftmul ends ============
  6441                           
  6442                           	signat	___ftmul,8315
  6443                           	global	_abs
  6444                           psect	text1083,local,class=CODE,delta=2
  6445                           global __ptext1083
  6446  1533                     __ptext1083:
  6447                           
  6448 ;; *************** function _abs *****************
  6449 ;; Defined at:
  6450 ;;		line 175 in file "H:\Aldnoah.Zero-master\Assignment3\robot.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  v               2    6[BANK0 ] int 
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  2    6[BANK0 ] int 
  6457 ;; Registers used:
  6458 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6464 ;;      Params:         0       2       0       0       0
  6465 ;;      Locals:         0       0       0       0       0
  6466 ;;      Temps:          0       2       0       0       0
  6467 ;;      Totals:         0       4       0       0       0
  6468 ;;Total ram usage:        4 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    4
  6471 ;; This function calls:
  6472 ;;		___wmul
  6473 ;; This function is called by:
  6474 ;;		_robotMoveSpeed
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           psect	text1083
  6478                           	file	"H:\Aldnoah.Zero-master\Assignment3\robot.c"
  6479                           	line	175
  6480                           	global	__size_of_abs
  6481  0035                     	__size_of_abs	equ	__end_of_abs-_abs
  6482                           	
  6483  1533                     _abs:	
  6484                           	opt	stack 1
  6485                           ; Regs used in _abs: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6486                           	line	176
  6487                           	
  6488  1533                     l11411:	
  6489                           ;robot.c: 176: return v * ( (v<0) * (-1) + (v>0));
  6490  1533  3000               	movlw	0
  6491  1534  1283               	bcf	status, 5	;RP0=0, select bank0
  6492  1535  1303               	bcf	status, 6	;RP1=0, select bank0
  6493  1536  1BA7               	btfsc	(abs@v+1),7
  6494  1537  3001               	movlw	1
  6495  1538  00A8               	movwf	(??_abs+0)+0
  6496  1539  01A9               	clrf	(??_abs+0)+0+1
  6497  153A  09A8               	comf	(??_abs+0)+0,f
  6498  153B  09A9               	comf	(??_abs+0)+1,f
  6499  153C  0AA8               	incf	(??_abs+0)+0,f
  6500  153D  1903               	skipnz
  6501  153E  0AA9               	incf	(??_abs+0)+1,f
  6502  153F  0827               	movf	(abs@v+1),w
  6503  1540  3A80               	xorlw	80h
  6504  1541  00FF               	movwf	btemp+1
  6505  1542  3080               	movlw	(high(01h))^80h
  6506  1543  027F               	subwf	btemp+1,w
  6507  1544  1D03               	skipz
  6508  1545  2D48               	goto	u5265
  6509  1546  3001               	movlw	low(01h)
  6510  1547  0226               	subwf	(abs@v),w
  6511  1548                     u5265:
  6512                           
  6513  1548  3000               	movlw	0
  6514  1549  1803               	skipnc
  6515  154A  3001               	movlw	1
  6516  154B  1283               	bcf	status, 5	;RP0=0, select bank0
  6517  154C  1303               	bcf	status, 6	;RP1=0, select bank0
  6518  154D  0728               	addwf	0+(??_abs+0)+0,w
  6519  154E  00A0               	movwf	(?___wmul)
  6520  154F  0829               	movf	1+(??_abs+0)+0,w
  6521  1550  1803               	skipnc
  6522  1551  0A29               	incf	1+(??_abs+0)+0,w
  6523  1552  00A1               	movwf	((?___wmul))+1
  6524  1553  0827               	movf	(abs@v+1),w
  6525  1554  01A3               	clrf	1+(?___wmul)+02h
  6526  1555  07A3               	addwf	1+(?___wmul)+02h
  6527  1556  0826               	movf	(abs@v),w
  6528  1557  01A2               	clrf	0+(?___wmul)+02h
  6529  1558  07A2               	addwf	0+(?___wmul)+02h
  6530                           
  6531  1559  160A  118A  2423   	fcall	___wmul
              160A  118A         
  6532  155E  1283               	bcf	status, 5	;RP0=0, select bank0
  6533  155F  1303               	bcf	status, 6	;RP1=0, select bank0
  6534  1560  0821               	movf	(1+(?___wmul)),w
  6535  1561  01A7               	clrf	(?_abs+1)
  6536  1562  07A7               	addwf	(?_abs+1)
  6537  1563  0820               	movf	(0+(?___wmul)),w
  6538  1564  01A6               	clrf	(?_abs)
  6539  1565  07A6               	addwf	(?_abs)
  6540                           
  6541  1566  2D67               	goto	l6082
  6542                           	
  6543  1567                     l11413:	
  6544                           	line	178
  6545                           	
  6546  1567                     l6082:	
  6547  1567  0008               	return
  6548                           	opt stack 0
  6549                           GLOBAL	__end_of_abs
  6550  1568                     	__end_of_abs:
  6551 ;; =============== function _abs ends ============
  6552                           
  6553                           	signat	_abs,4218
  6554                           	global	_ser_getch
  6555                           psect	text1084,local,class=CODE,delta=2
  6556                           global __ptext1084
  6557  135F                     __ptext1084:
  6558                           
  6559 ;; *************** function _ser_getch *****************
  6560 ;; Defined at:
  6561 ;;		line 55 in file "H:\Aldnoah.Zero-master\Assignment3\ser.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  c               1    1[BANK0 ] unsigned char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      unsigned char 
  6568 ;; Registers used:
  6569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6575 ;;      Params:         0       0       0       0       0
  6576 ;;      Locals:         0       1       0       0       0
  6577 ;;      Temps:          0       1       0       0       0
  6578 ;;      Totals:         0       2       0       0       0
  6579 ;;Total ram usage:        2 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    4
  6582 ;; This function calls:
  6583 ;;		_ser_isrx
  6584 ;; This function is called by:
  6585 ;;		_robot_read
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           psect	text1084
  6589                           	file	"H:\Aldnoah.Zero-master\Assignment3\ser.c"
  6590                           	line	55
  6591                           	global	__size_of_ser_getch
  6592  0022                     	__size_of_ser_getch	equ	__end_of_ser_getch-_ser_getch
  6593                           	
  6594  135F                     _ser_getch:	
  6595                           	opt	stack 1
  6596                           ; Regs used in _ser_getch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6597                           	line	58
  6598                           	
  6599  135F                     l11395:	
  6600                           ;ser.c: 56: unsigned char c;
  6601                           ;ser.c: 58: while (ser_isrx()==0)
  6602  135F  2B61               	goto	l11397
  6603                           	
  6604  1360                     l6786:	
  6605                           	line	59
  6606                           ;ser.c: 59: continue;
  6607  1360  2B61               	goto	l11397
  6608                           	
  6609  1361                     l6785:	
  6610                           	line	58
  6611                           	
  6612  1361                     l11397:	
  6613  1361  160A  118A  2348   	fcall	_ser_isrx
              160A  118A         
  6614  1366  1C03               	btfss	status,0
  6615  1367  2B69               	goto	u5251
  6616  1368  2B6A               	goto	u5250
  6617  1369                     u5251:
  6618  1369  2B61               	goto	l11397
  6619  136A                     u5250:
  6620                           	
  6621  136A                     l6787:	
  6622                           	line	61
  6623                           ;ser.c: 61: GIE=0;
  6624  136A  138B               	bcf	(95/8),(95)&7
  6625                           	line	62
  6626                           	
  6627  136B                     l11399:	
  6628                           ;ser.c: 62: c=rxfifo[rxoptr];
  6629  136B  1283               	bcf	status, 5	;RP0=0, select bank0
  6630  136C  1303               	bcf	status, 6	;RP1=0, select bank0
  6631  136D  086E               	movf	(_rxoptr),w
  6632  136E  3EA0               	addlw	_rxfifo&0ffh
  6633  136F  0084               	movwf	fsr0
  6634  1370  1383               	bcf	status, 7	;select IRP bank1
  6635  1371  0800               	movf	indf,w
  6636  1372  00A0               	movwf	(??_ser_getch+0)+0
  6637  1373  0820               	movf	(??_ser_getch+0)+0,w
  6638  1374  00A1               	movwf	(ser_getch@c)
  6639                           	line	63
  6640                           	
  6641  1375                     l11401:	
  6642                           ;ser.c: 63: ++rxoptr;
  6643  1375  3001               	movlw	(01h)
  6644  1376  00A0               	movwf	(??_ser_getch+0)+0
  6645  1377  0820               	movf	(??_ser_getch+0)+0,w
  6646  1378  07EE               	addwf	(_rxoptr),f	;volatile
  6647                           	line	64
  6648                           	
  6649  1379                     l11403:	
  6650                           ;ser.c: 64: rxoptr &= (16-1);
  6651  1379  300F               	movlw	(0Fh)
  6652  137A  00A0               	movwf	(??_ser_getch+0)+0
  6653  137B  0820               	movf	(??_ser_getch+0)+0,w
  6654  137C  05EE               	andwf	(_rxoptr),f	;volatile
  6655                           	line	65
  6656                           	
  6657  137D                     l11405:	
  6658                           ;ser.c: 65: GIE=1;
  6659  137D  178B               	bsf	(95/8),(95)&7
  6660                           	line	66
  6661                           	
  6662  137E                     l11407:	
  6663                           ;ser.c: 66: return c;
  6664  137E  0821               	movf	(ser_getch@c),w
  6665  137F  2B80               	goto	l6788
  6666                           	
  6667  1380                     l11409:	
  6668                           	line	67
  6669                           	
  6670  1380                     l6788:	
  6671  1380  0008               	return
  6672                           	opt stack 0
  6673                           GLOBAL	__end_of_ser_getch
  6674  1381                     	__end_of_ser_getch:
  6675 ;; =============== function _ser_getch ends ============
  6676                           
  6677                           	signat	_ser_getch,89
  6678                           	global	_sprintf
  6679                           psect	text1085,local,class=CODE,delta=2
  6680                           global __ptext1085
  6681  06F3                     __ptext1085:
  6682                           
  6683 ;; *************** function _sprintf *****************
  6684 ;; Defined at:
  6685 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  sp              1    wreg     PTR unsigned char 
  6688 ;;		 -> UpdateDisplay@adcOutput(16), 
  6689 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  6690 ;;		 -> STR_23(10), STR_21(11), STR_14(15), STR_13(15), 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  sp              1   35[BANK0 ] PTR unsigned char 
  6693 ;;		 -> UpdateDisplay@adcOutput(16), 
  6694 ;;  _val            4   31[BANK0 ] struct .
  6695 ;;  c               1   36[BANK0 ] char 
  6696 ;;  prec            1   30[BANK0 ] char 
  6697 ;;  flag            1   29[BANK0 ] unsigned char 
  6698 ;;  ap              1   28[BANK0 ] PTR void [1]
  6699 ;;		 -> ?_sprintf(2), 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  2   20[BANK0 ] int 
  6702 ;; Registers used:
  6703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6709 ;;      Params:         0       5       0       0       0
  6710 ;;      Locals:         0       9       0       0       0
  6711 ;;      Temps:          0       3       0       0       0
  6712 ;;      Totals:         0      17       0       0       0
  6713 ;;Total ram usage:       17 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    4
  6716 ;; This function calls:
  6717 ;;		___lwdiv
  6718 ;;		___lwmod
  6719 ;; This function is called by:
  6720 ;;		_UpdateDisplay
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           psect	text1085
  6724                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\doprnt.c"
  6725                           	line	488
  6726                           	global	__size_of_sprintf
  6727  0100                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  6728                           	
  6729  06F3                     _sprintf:	
  6730                           	opt	stack 1
  6731                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6732                           ;sprintf@sp stored from wreg
  6733                           	line	537
  6734  06F3  1283               	bcf	status, 5	;RP0=0, select bank0
  6735  06F4  1303               	bcf	status, 6	;RP1=0, select bank0
  6736  06F5  00C3               	movwf	(sprintf@sp)
  6737                           	
  6738  06F6                     l11337:	
  6739  06F6  3035               	movlw	(?_sprintf+01h)&0ffh
  6740  06F7  00B9               	movwf	(??_sprintf+0)+0
  6741  06F8  0839               	movf	(??_sprintf+0)+0,w
  6742  06F9  00BC               	movwf	(sprintf@ap)
  6743                           	line	540
  6744  06FA  2FD9               	goto	l11389
  6745                           	
  6746  06FB                     l6826:	
  6747                           	line	542
  6748                           	
  6749  06FB                     l11339:	
  6750  06FB  0844               	movf	(sprintf@c),w
  6751  06FC  3A25               	xorlw	025h
  6752  06FD  1903               	skipnz
  6753  06FE  2F00               	goto	u5171
  6754  06FF  2F01               	goto	u5170
  6755  0700                     u5171:
  6756  0700  2F0D               	goto	l6827
  6757  0701                     u5170:
  6758                           	line	545
  6759                           	
  6760  0701                     l11341:	
  6761  0701  0844               	movf	(sprintf@c),w
  6762  0702  00B9               	movwf	(??_sprintf+0)+0
  6763  0703  0843               	movf	(sprintf@sp),w
  6764  0704  0084               	movwf	fsr0
  6765  0705  0839               	movf	(??_sprintf+0)+0,w
  6766  0706  1383               	bcf	status, 7	;select IRP bank0
  6767  0707  0080               	movwf	indf
  6768                           	
  6769  0708                     l11343:	
  6770  0708  3001               	movlw	(01h)
  6771  0709  00B9               	movwf	(??_sprintf+0)+0
  6772  070A  0839               	movf	(??_sprintf+0)+0,w
  6773  070B  07C3               	addwf	(sprintf@sp),f
  6774                           	line	546
  6775  070C  2FD9               	goto	l11389
  6776                           	line	547
  6777                           	
  6778  070D                     l6827:	
  6779                           	line	552
  6780  070D  01BD               	clrf	(sprintf@flag)
  6781                           	line	638
  6782  070E  2F14               	goto	l11347
  6783                           	line	640
  6784                           	
  6785  070F                     l6829:	
  6786                           	line	641
  6787  070F  2FED               	goto	l11391
  6788                           	line	700
  6789                           	
  6790  0710                     l6831:	
  6791  0710  2F29               	goto	l11349
  6792                           	line	701
  6793                           	
  6794  0711                     l6832:	
  6795                           	line	702
  6796  0711  2F29               	goto	l11349
  6797                           	line	805
  6798                           	
  6799  0712                     l6834:	
  6800                           	line	816
  6801  0712  2FD9               	goto	l11389
  6802                           	line	825
  6803                           	
  6804  0713                     l11345:	
  6805  0713  2F29               	goto	l11349
  6806                           	line	638
  6807                           	
  6808  0714                     l6828:	
  6809                           	
  6810  0714                     l11347:	
  6811  0714  3001               	movlw	01h
  6812  0715  07B4               	addwf	(sprintf@f),f
  6813  0716  30FF               	movlw	-01h
  6814  0717  0734               	addwf	(sprintf@f),w
  6815  0718  0084               	movwf	fsr0
  6816  0719  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6817  071E  00C4               	movwf	(sprintf@c)
  6818                           	; Switch size 1, requested type "space"
  6819                           ; Number of cases is 3, Range of values is 0 to 105
  6820                           ; switch strategies available:
  6821                           ; Name         Instructions Cycles
  6822                           ; simple_byte           10     6 (average)
  6823                           ; jumptable            260     6 (fixed)
  6824                           ; rangetable           110     6 (fixed)
  6825                           ; spacedrange          218     9 (fixed)
  6826                           ; locatedrange         106     3 (fixed)
  6827                           ;	Chosen strategy is simple_byte
  6828                           
  6829                           	opt asmopt_off
  6830  071F  3A00               	xorlw	0^0	; case 0
  6831  0720  1903               	skipnz
  6832  0721  2FED               	goto	l11391
  6833  0722  3A64               	xorlw	100^0	; case 100
  6834  0723  1903               	skipnz
  6835  0724  2F29               	goto	l11349
  6836  0725  3A0D               	xorlw	105^100	; case 105
  6837  0726  1903               	skipnz
  6838  0727  2F29               	goto	l11349
  6839  0728  2FD9               	goto	l11389
  6840                           	opt asmopt_on
  6841                           
  6842                           	line	825
  6843                           	
  6844  0729                     l6833:	
  6845                           	line	1254
  6846                           	
  6847  0729                     l11349:	
  6848  0729  083C               	movf	(sprintf@ap),w
  6849  072A  0084               	movwf	fsr0
  6850  072B  1383               	bcf	status, 7	;select IRP bank0
  6851  072C  0800               	movf	indf,w
  6852  072D  00BF               	movwf	(sprintf@_val)
  6853  072E  0A84               	incf	fsr0,f
  6854  072F  0800               	movf	indf,w
  6855  0730  00C0               	movwf	(sprintf@_val+1)
  6856                           	
  6857  0731                     l11351:	
  6858  0731  3002               	movlw	(02h)
  6859  0732  00B9               	movwf	(??_sprintf+0)+0
  6860  0733  0839               	movf	(??_sprintf+0)+0,w
  6861  0734  07BC               	addwf	(sprintf@ap),f
  6862                           	line	1256
  6863                           	
  6864  0735                     l11353:	
  6865  0735  1FC0               	btfss	(sprintf@_val+1),7
  6866  0736  2F38               	goto	u5181
  6867  0737  2F39               	goto	u5180
  6868  0738                     u5181:
  6869  0738  2F43               	goto	l11359
  6870  0739                     u5180:
  6871                           	line	1257
  6872                           	
  6873  0739                     l11355:	
  6874  0739  3003               	movlw	(03h)
  6875  073A  00B9               	movwf	(??_sprintf+0)+0
  6876  073B  0839               	movf	(??_sprintf+0)+0,w
  6877  073C  04BD               	iorwf	(sprintf@flag),f
  6878                           	line	1258
  6879                           	
  6880  073D                     l11357:	
  6881  073D  09BF               	comf	(sprintf@_val),f
  6882  073E  09C0               	comf	(sprintf@_val+1),f
  6883  073F  0ABF               	incf	(sprintf@_val),f
  6884  0740  1903               	skipnz
  6885  0741  0AC0               	incf	(sprintf@_val+1),f
  6886  0742  2F43               	goto	l11359
  6887                           	line	1259
  6888                           	
  6889  0743                     l6835:	
  6890                           	line	1300
  6891                           	
  6892  0743                     l11359:	
  6893  0743  01C4               	clrf	(sprintf@c)
  6894  0744  1403               	bsf	status,0
  6895  0745  0DC4               	rlf	(sprintf@c),f
  6896                           	
  6897  0746                     l11361:	
  6898  0746  0844               	movf	(sprintf@c),w
  6899  0747  3A05               	xorlw	05h
  6900  0748  1D03               	skipz
  6901  0749  2F4B               	goto	u5191
  6902  074A  2F4C               	goto	u5190
  6903  074B                     u5191:
  6904  074B  2F4E               	goto	l11365
  6905  074C                     u5190:
  6906  074C  2F76               	goto	l11373
  6907                           	
  6908  074D                     l11363:	
  6909  074D  2F76               	goto	l11373
  6910                           	line	1301
  6911                           	
  6912  074E                     l6836:	
  6913                           	
  6914  074E                     l11365:	
  6915  074E  0844               	movf	(sprintf@c),w
  6916  074F  00B9               	movwf	(??_sprintf+0)+0
  6917  0750  0739               	addwf	(??_sprintf+0)+0,w
  6918  0751  3E01               	addlw	low((_dpowers-__stringbase))
  6919  0752  0084               	movwf	fsr0
  6920  0753  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6921  0758  00BA               	movwf	(??_sprintf+1)+0
  6922  0759  120A  158A  200A   	fcall	stringdir
              120A  118A         
  6923  075E  00BB               	movwf	(??_sprintf+1)+0+1
  6924  075F  083B               	movf	1+(??_sprintf+1)+0,w
  6925  0760  0240               	subwf	(sprintf@_val+1),w
  6926  0761  1D03               	skipz
  6927  0762  2F65               	goto	u5205
  6928  0763  083A               	movf	0+(??_sprintf+1)+0,w
  6929  0764  023F               	subwf	(sprintf@_val),w
  6930  0765                     u5205:
  6931  0765  1803               	skipnc
  6932  0766  2F68               	goto	u5201
  6933  0767  2F69               	goto	u5200
  6934  0768                     u5201:
  6935  0768  2F6B               	goto	l11369
  6936  0769                     u5200:
  6937  0769  2F76               	goto	l11373
  6938                           	line	1302
  6939                           	
  6940  076A                     l11367:	
  6941  076A  2F76               	goto	l11373
  6942                           	
  6943  076B                     l6838:	
  6944                           	line	1300
  6945                           	
  6946  076B                     l11369:	
  6947  076B  3001               	movlw	(01h)
  6948  076C  00B9               	movwf	(??_sprintf+0)+0
  6949  076D  0839               	movf	(??_sprintf+0)+0,w
  6950  076E  07C4               	addwf	(sprintf@c),f
  6951                           	
  6952  076F                     l11371:	
  6953  076F  0844               	movf	(sprintf@c),w
  6954  0770  3A05               	xorlw	05h
  6955  0771  1D03               	skipz
  6956  0772  2F74               	goto	u5211
  6957  0773  2F75               	goto	u5210
  6958  0774                     u5211:
  6959  0774  2F4E               	goto	l11365
  6960  0775                     u5210:
  6961  0775  2F76               	goto	l11373
  6962                           	
  6963  0776                     l6837:	
  6964                           	line	1433
  6965                           	
  6966  0776                     l11373:	
  6967  0776  083D               	movf	(sprintf@flag),w
  6968  0777  3903               	andlw	03h
  6969  0778  1903               	btfsc	status,2
  6970  0779  2F7B               	goto	u5221
  6971  077A  2F7C               	goto	u5220
  6972  077B                     u5221:
  6973  077B  2F88               	goto	l11379
  6974  077C                     u5220:
  6975                           	line	1434
  6976                           	
  6977  077C                     l11375:	
  6978  077C  302D               	movlw	(02Dh)
  6979  077D  00B9               	movwf	(??_sprintf+0)+0
  6980  077E  0843               	movf	(sprintf@sp),w
  6981  077F  0084               	movwf	fsr0
  6982  0780  0839               	movf	(??_sprintf+0)+0,w
  6983  0781  1383               	bcf	status, 7	;select IRP bank0
  6984  0782  0080               	movwf	indf
  6985                           	
  6986  0783                     l11377:	
  6987  0783  3001               	movlw	(01h)
  6988  0784  00B9               	movwf	(??_sprintf+0)+0
  6989  0785  0839               	movf	(??_sprintf+0)+0,w
  6990  0786  07C3               	addwf	(sprintf@sp),f
  6991  0787  2F88               	goto	l11379
  6992                           	
  6993  0788                     l6839:	
  6994                           	line	1467
  6995                           	
  6996  0788                     l11379:	
  6997  0788  0844               	movf	(sprintf@c),w
  6998  0789  00B9               	movwf	(??_sprintf+0)+0
  6999  078A  0839               	movf	(??_sprintf+0)+0,w
  7000  078B  00BE               	movwf	(sprintf@prec)
  7001                           	line	1469
  7002  078C  2FCD               	goto	l11387
  7003                           	
  7004  078D                     l6841:	
  7005                           	line	1484
  7006                           	
  7007  078D                     l11381:	
  7008  078D  300A               	movlw	low(0Ah)
  7009  078E  00AE               	movwf	(?___lwmod)
  7010  078F  3000               	movlw	high(0Ah)
  7011  0790  00AF               	movwf	((?___lwmod))+1
  7012  0791  083E               	movf	(sprintf@prec),w
  7013  0792  00B9               	movwf	(??_sprintf+0)+0
  7014  0793  0739               	addwf	(??_sprintf+0)+0,w
  7015  0794  3E01               	addlw	low((_dpowers-__stringbase))
  7016  0795  0084               	movwf	fsr0
  7017  0796  120A  158A  200A   	fcall	stringdir
              120A  118A         
  7018  079B  00A6               	movwf	(?___lwdiv)
  7019  079C  120A  158A  200A   	fcall	stringdir
              120A  118A         
  7020  07A1  00A7               	movwf	(?___lwdiv+1)
  7021  07A2  0840               	movf	(sprintf@_val+1),w
  7022  07A3  01A9               	clrf	1+(?___lwdiv)+02h
  7023  07A4  07A9               	addwf	1+(?___lwdiv)+02h
  7024  07A5  083F               	movf	(sprintf@_val),w
  7025  07A6  01A8               	clrf	0+(?___lwdiv)+02h
  7026  07A7  07A8               	addwf	0+(?___lwdiv)+02h
  7027                           
  7028  07A8  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7029  07AD  1283               	bcf	status, 5	;RP0=0, select bank0
  7030  07AE  1303               	bcf	status, 6	;RP1=0, select bank0
  7031  07AF  0827               	movf	(1+(?___lwdiv)),w
  7032  07B0  01B1               	clrf	1+(?___lwmod)+02h
  7033  07B1  07B1               	addwf	1+(?___lwmod)+02h
  7034  07B2  0826               	movf	(0+(?___lwdiv)),w
  7035  07B3  01B0               	clrf	0+(?___lwmod)+02h
  7036  07B4  07B0               	addwf	0+(?___lwmod)+02h
  7037                           
  7038  07B5  160A  118A  25E7   	fcall	___lwmod
              120A  118A         
  7039  07BA  1283               	bcf	status, 5	;RP0=0, select bank0
  7040  07BB  1303               	bcf	status, 6	;RP1=0, select bank0
  7041  07BC  082E               	movf	(0+(?___lwmod)),w
  7042  07BD  3E30               	addlw	030h
  7043  07BE  00BA               	movwf	(??_sprintf+1)+0
  7044  07BF  083A               	movf	(??_sprintf+1)+0,w
  7045  07C0  00C4               	movwf	(sprintf@c)
  7046                           	line	1516
  7047                           	
  7048  07C1                     l11383:	
  7049  07C1  0844               	movf	(sprintf@c),w
  7050  07C2  00B9               	movwf	(??_sprintf+0)+0
  7051  07C3  0843               	movf	(sprintf@sp),w
  7052  07C4  0084               	movwf	fsr0
  7053  07C5  0839               	movf	(??_sprintf+0)+0,w
  7054  07C6  1383               	bcf	status, 7	;select IRP bank0
  7055  07C7  0080               	movwf	indf
  7056                           	
  7057  07C8                     l11385:	
  7058  07C8  3001               	movlw	(01h)
  7059  07C9  00B9               	movwf	(??_sprintf+0)+0
  7060  07CA  0839               	movf	(??_sprintf+0)+0,w
  7061  07CB  07C3               	addwf	(sprintf@sp),f
  7062  07CC  2FCD               	goto	l11387
  7063                           	line	1517
  7064                           	
  7065  07CD                     l6840:	
  7066                           	line	1469
  7067                           	
  7068  07CD                     l11387:	
  7069  07CD  30FF               	movlw	(-1)
  7070  07CE  00B9               	movwf	(??_sprintf+0)+0
  7071  07CF  0839               	movf	(??_sprintf+0)+0,w
  7072  07D0  07BE               	addwf	(sprintf@prec),f
  7073  07D1  083E               	movf	((sprintf@prec)),w
  7074  07D2  3AFF               	xorlw	-1
  7075  07D3  1D03               	skipz
  7076  07D4  2FD6               	goto	u5231
  7077  07D5  2FD7               	goto	u5230
  7078  07D6                     u5231:
  7079  07D6  2F8D               	goto	l11381
  7080  07D7                     u5230:
  7081  07D7  2FD9               	goto	l11389
  7082                           	
  7083  07D8                     l6842:	
  7084  07D8  2FD9               	goto	l11389
  7085                           	line	1525
  7086                           	
  7087  07D9                     l6825:	
  7088                           	line	540
  7089                           	
  7090  07D9                     l11389:	
  7091  07D9  3001               	movlw	01h
  7092  07DA  07B4               	addwf	(sprintf@f),f
  7093  07DB  30FF               	movlw	-01h
  7094  07DC  0734               	addwf	(sprintf@f),w
  7095  07DD  0084               	movwf	fsr0
  7096  07DE  120A  158A  200A   	fcall	stringdir
              120A  118A         
  7097  07E3  00B9               	movwf	(??_sprintf+0)+0
  7098  07E4  0839               	movf	(??_sprintf+0)+0,w
  7099  07E5  00C4               	movwf	(sprintf@c)
  7100  07E6  08C4               	movf	((sprintf@c)),f
  7101  07E7  1D03               	skipz
  7102  07E8  2FEA               	goto	u5241
  7103  07E9  2FEB               	goto	u5240
  7104  07EA                     u5241:
  7105  07EA  2EFB               	goto	l11339
  7106  07EB                     u5240:
  7107  07EB  2FED               	goto	l11391
  7108                           	
  7109  07EC                     l6843:	
  7110  07EC  2FED               	goto	l11391
  7111                           	line	1527
  7112                           	
  7113  07ED                     l6830:	
  7114                           	line	1530
  7115                           	
  7116  07ED                     l11391:	
  7117  07ED  0843               	movf	(sprintf@sp),w
  7118  07EE  0084               	movwf	fsr0
  7119  07EF  1383               	bcf	status, 7	;select IRP bank0
  7120  07F0  0180               	clrf	indf
  7121  07F1  2FF2               	goto	l6844
  7122                           	line	1532
  7123                           	
  7124  07F2                     l11393:	
  7125                           	line	1533
  7126                           ;	Return value of _sprintf is never used
  7127                           	
  7128  07F2                     l6844:	
  7129  07F2  0008               	return
  7130                           	opt stack 0
  7131                           GLOBAL	__end_of_sprintf
  7132  07F3                     	__end_of_sprintf:
  7133 ;; =============== function _sprintf ends ============
  7134                           
  7135                           	signat	_sprintf,4698
  7136                           	global	_ADCconvert
  7137                           psect	text1086,local,class=CODE,delta=2
  7138                           global __ptext1086
  7139  02AF                     __ptext1086:
  7140                           
  7141 ;; *************** function _ADCconvert *****************
  7142 ;; Defined at:
  7143 ;;		line 33 in file "H:\Aldnoah.Zero-master\Assignment3\infrared.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;		None
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;		None
  7148 ;; Return value:  Size  Location     Type
  7149 ;;		None               void
  7150 ;; Registers used:
  7151 ;;		wreg, status,2, status,0, pclath, cstack
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7157 ;;      Params:         0       0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0
  7159 ;;      Temps:          0       2       0       0       0
  7160 ;;      Totals:         0       2       0       0       0
  7161 ;;Total ram usage:        2 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:    4
  7164 ;; This function calls:
  7165 ;;		___wmul
  7166 ;;		___lwdiv
  7167 ;; This function is called by:
  7168 ;;		_readAvgDistance
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           psect	text1086
  7172                           	file	"H:\Aldnoah.Zero-master\Assignment3\infrared.c"
  7173                           	line	33
  7174                           	global	__size_of_ADCconvert
  7175  0223                     	__size_of_ADCconvert	equ	__end_of_ADCconvert-_ADCconvert
  7176                           	
  7177  02AF                     _ADCconvert:	
  7178                           	opt	stack 1
  7179                           ; Regs used in _ADCconvert: [wreg+status,2+status,0+pclath+cstack]
  7180                           	line	39
  7181                           	
  7182  02AF                     l11295:	
  7183                           ;infrared.c: 39: if (adcVal >= 213 && adcVal < 234)
  7184  02AF  3000               	movlw	high(0D5h)
  7185  02B0  1283               	bcf	status, 5	;RP0=0, select bank0
  7186  02B1  1303               	bcf	status, 6	;RP1=0, select bank0
  7187  02B2  026B               	subwf	(_adcVal+1),w	;volatile
  7188  02B3  30D5               	movlw	low(0D5h)
  7189  02B4  1903               	skipnz
  7190  02B5  026A               	subwf	(_adcVal),w	;volatile
  7191  02B6  1C03               	skipc
  7192  02B7  2AB9               	goto	u5031
  7193  02B8  2ABA               	goto	u5030
  7194  02B9                     u5031:
  7195  02B9  2AFD               	goto	l11301
  7196  02BA                     u5030:
  7197                           	
  7198  02BA                     l11297:	
  7199  02BA  3000               	movlw	high(0EAh)
  7200  02BB  026B               	subwf	(_adcVal+1),w	;volatile
  7201  02BC  30EA               	movlw	low(0EAh)
  7202  02BD  1903               	skipnz
  7203  02BE  026A               	subwf	(_adcVal),w	;volatile
  7204  02BF  1803               	skipnc
  7205  02C0  2AC2               	goto	u5041
  7206  02C1  2AC3               	goto	u5040
  7207  02C2                     u5041:
  7208  02C2  2AFD               	goto	l11301
  7209  02C3                     u5040:
  7210                           	line	41
  7211                           	
  7212  02C3                     l11299:	
  7213                           ;infrared.c: 40: {
  7214                           ;infrared.c: 41: distance = 15 + ((20-15)*(234-adcVal))/(234-213);
  7215  02C3  3015               	movlw	low(015h)
  7216  02C4  00A6               	movwf	(?___lwdiv)
  7217  02C5  3000               	movlw	high(015h)
  7218  02C6  00A7               	movwf	((?___lwdiv))+1
  7219  02C7  096A               	comf	(_adcVal),w	;volatile
  7220  02C8  00AE               	movwf	(??_ADCconvert+0)+0
  7221  02C9  096B               	comf	(_adcVal+1),w	;volatile
  7222  02CA  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7223  02CB  0AAE               	incf	(??_ADCconvert+0)+0,f
  7224  02CC  1903               	skipnz
  7225  02CD  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7226  02CE  082E               	movf	0+(??_ADCconvert+0)+0,w
  7227  02CF  3EEA               	addlw	low(0EAh)
  7228  02D0  00A0               	movwf	(?___wmul)
  7229  02D1  082F               	movf	1+(??_ADCconvert+0)+0,w
  7230  02D2  1803               	skipnc
  7231  02D3  3E01               	addlw	1
  7232  02D4  3E00               	addlw	high(0EAh)
  7233  02D5  00A1               	movwf	1+(?___wmul)
  7234  02D6  3005               	movlw	low(05h)
  7235  02D7  00A2               	movwf	0+(?___wmul)+02h
  7236  02D8  3000               	movlw	high(05h)
  7237  02D9  00A3               	movwf	(0+(?___wmul)+02h)+1
  7238  02DA  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7239  02DF  1283               	bcf	status, 5	;RP0=0, select bank0
  7240  02E0  1303               	bcf	status, 6	;RP1=0, select bank0
  7241  02E1  0821               	movf	(1+(?___wmul)),w
  7242  02E2  01A9               	clrf	1+(?___lwdiv)+02h
  7243  02E3  07A9               	addwf	1+(?___lwdiv)+02h
  7244  02E4  0820               	movf	(0+(?___wmul)),w
  7245  02E5  01A8               	clrf	0+(?___lwdiv)+02h
  7246  02E6  07A8               	addwf	0+(?___lwdiv)+02h
  7247                           
  7248  02E7  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7249  02EC  1283               	bcf	status, 5	;RP0=0, select bank0
  7250  02ED  1303               	bcf	status, 6	;RP1=0, select bank0
  7251  02EE  0826               	movf	(0+(?___lwdiv)),w
  7252  02EF  3E0F               	addlw	low(0Fh)
  7253  02F0  1683               	bsf	status, 5	;RP0=1, select bank1
  7254  02F1  1303               	bcf	status, 6	;RP1=0, select bank1
  7255  02F2  00BA               	movwf	(_distance)^080h	;volatile
  7256  02F3  1283               	bcf	status, 5	;RP0=0, select bank0
  7257  02F4  1303               	bcf	status, 6	;RP1=0, select bank0
  7258  02F5  0827               	movf	(1+(?___lwdiv)),w
  7259  02F6  1803               	skipnc
  7260  02F7  3E01               	addlw	1
  7261  02F8  3E00               	addlw	high(0Fh)
  7262  02F9  1683               	bsf	status, 5	;RP0=1, select bank1
  7263  02FA  1303               	bcf	status, 6	;RP1=0, select bank1
  7264  02FB  00BB               	movwf	1+(_distance)^080h	;volatile
  7265                           	line	42
  7266                           ;infrared.c: 42: }
  7267  02FC  2CD1               	goto	l3042
  7268                           	line	43
  7269                           	
  7270  02FD                     l3029:	
  7271                           	
  7272  02FD                     l11301:	
  7273                           ;infrared.c: 43: else if (adcVal >= 170 && adcVal < 213)
  7274  02FD  3000               	movlw	high(0AAh)
  7275  02FE  1283               	bcf	status, 5	;RP0=0, select bank0
  7276  02FF  026B               	subwf	(_adcVal+1),w	;volatile
  7277  0300  30AA               	movlw	low(0AAh)
  7278  0301  1903               	skipnz
  7279  0302  026A               	subwf	(_adcVal),w	;volatile
  7280  0303  1C03               	skipc
  7281  0304  2B06               	goto	u5051
  7282  0305  2B07               	goto	u5050
  7283  0306                     u5051:
  7284  0306  2B4A               	goto	l11307
  7285  0307                     u5050:
  7286                           	
  7287  0307                     l11303:	
  7288  0307  3000               	movlw	high(0D5h)
  7289  0308  026B               	subwf	(_adcVal+1),w	;volatile
  7290  0309  30D5               	movlw	low(0D5h)
  7291  030A  1903               	skipnz
  7292  030B  026A               	subwf	(_adcVal),w	;volatile
  7293  030C  1803               	skipnc
  7294  030D  2B0F               	goto	u5061
  7295  030E  2B10               	goto	u5060
  7296  030F                     u5061:
  7297  030F  2B4A               	goto	l11307
  7298  0310                     u5060:
  7299                           	line	45
  7300                           	
  7301  0310                     l11305:	
  7302                           ;infrared.c: 44: {
  7303                           ;infrared.c: 45: distance = 20 + ((30-20)*(213-adcVal))/(213-170);
  7304  0310  302B               	movlw	low(02Bh)
  7305  0311  00A6               	movwf	(?___lwdiv)
  7306  0312  3000               	movlw	high(02Bh)
  7307  0313  00A7               	movwf	((?___lwdiv))+1
  7308  0314  096A               	comf	(_adcVal),w	;volatile
  7309  0315  00AE               	movwf	(??_ADCconvert+0)+0
  7310  0316  096B               	comf	(_adcVal+1),w	;volatile
  7311  0317  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7312  0318  0AAE               	incf	(??_ADCconvert+0)+0,f
  7313  0319  1903               	skipnz
  7314  031A  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7315  031B  082E               	movf	0+(??_ADCconvert+0)+0,w
  7316  031C  3ED5               	addlw	low(0D5h)
  7317  031D  00A0               	movwf	(?___wmul)
  7318  031E  082F               	movf	1+(??_ADCconvert+0)+0,w
  7319  031F  1803               	skipnc
  7320  0320  3E01               	addlw	1
  7321  0321  3E00               	addlw	high(0D5h)
  7322  0322  00A1               	movwf	1+(?___wmul)
  7323  0323  300A               	movlw	low(0Ah)
  7324  0324  00A2               	movwf	0+(?___wmul)+02h
  7325  0325  3000               	movlw	high(0Ah)
  7326  0326  00A3               	movwf	(0+(?___wmul)+02h)+1
  7327  0327  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7328  032C  1283               	bcf	status, 5	;RP0=0, select bank0
  7329  032D  1303               	bcf	status, 6	;RP1=0, select bank0
  7330  032E  0821               	movf	(1+(?___wmul)),w
  7331  032F  01A9               	clrf	1+(?___lwdiv)+02h
  7332  0330  07A9               	addwf	1+(?___lwdiv)+02h
  7333  0331  0820               	movf	(0+(?___wmul)),w
  7334  0332  01A8               	clrf	0+(?___lwdiv)+02h
  7335  0333  07A8               	addwf	0+(?___lwdiv)+02h
  7336                           
  7337  0334  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7338  0339  1283               	bcf	status, 5	;RP0=0, select bank0
  7339  033A  1303               	bcf	status, 6	;RP1=0, select bank0
  7340  033B  0826               	movf	(0+(?___lwdiv)),w
  7341  033C  3E14               	addlw	low(014h)
  7342  033D  1683               	bsf	status, 5	;RP0=1, select bank1
  7343  033E  1303               	bcf	status, 6	;RP1=0, select bank1
  7344  033F  00BA               	movwf	(_distance)^080h	;volatile
  7345  0340  1283               	bcf	status, 5	;RP0=0, select bank0
  7346  0341  1303               	bcf	status, 6	;RP1=0, select bank0
  7347  0342  0827               	movf	(1+(?___lwdiv)),w
  7348  0343  1803               	skipnc
  7349  0344  3E01               	addlw	1
  7350  0345  3E00               	addlw	high(014h)
  7351  0346  1683               	bsf	status, 5	;RP0=1, select bank1
  7352  0347  1303               	bcf	status, 6	;RP1=0, select bank1
  7353  0348  00BB               	movwf	1+(_distance)^080h	;volatile
  7354                           	line	46
  7355                           ;infrared.c: 46: }
  7356  0349  2CD1               	goto	l3042
  7357                           	line	47
  7358                           	
  7359  034A                     l3031:	
  7360                           	
  7361  034A                     l11307:	
  7362                           ;infrared.c: 47: else if (adcVal >= 128 && adcVal < 170)
  7363  034A  3000               	movlw	high(080h)
  7364  034B  1283               	bcf	status, 5	;RP0=0, select bank0
  7365  034C  026B               	subwf	(_adcVal+1),w	;volatile
  7366  034D  3080               	movlw	low(080h)
  7367  034E  1903               	skipnz
  7368  034F  026A               	subwf	(_adcVal),w	;volatile
  7369  0350  1C03               	skipc
  7370  0351  2B53               	goto	u5071
  7371  0352  2B54               	goto	u5070
  7372  0353                     u5071:
  7373  0353  2B97               	goto	l11313
  7374  0354                     u5070:
  7375                           	
  7376  0354                     l11309:	
  7377  0354  3000               	movlw	high(0AAh)
  7378  0355  026B               	subwf	(_adcVal+1),w	;volatile
  7379  0356  30AA               	movlw	low(0AAh)
  7380  0357  1903               	skipnz
  7381  0358  026A               	subwf	(_adcVal),w	;volatile
  7382  0359  1803               	skipnc
  7383  035A  2B5C               	goto	u5081
  7384  035B  2B5D               	goto	u5080
  7385  035C                     u5081:
  7386  035C  2B97               	goto	l11313
  7387  035D                     u5080:
  7388                           	line	49
  7389                           	
  7390  035D                     l11311:	
  7391                           ;infrared.c: 48: {
  7392                           ;infrared.c: 49: distance = 30 + ((40-30)*(170-adcVal))/(170-128);
  7393  035D  302A               	movlw	low(02Ah)
  7394  035E  00A6               	movwf	(?___lwdiv)
  7395  035F  3000               	movlw	high(02Ah)
  7396  0360  00A7               	movwf	((?___lwdiv))+1
  7397  0361  096A               	comf	(_adcVal),w	;volatile
  7398  0362  00AE               	movwf	(??_ADCconvert+0)+0
  7399  0363  096B               	comf	(_adcVal+1),w	;volatile
  7400  0364  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7401  0365  0AAE               	incf	(??_ADCconvert+0)+0,f
  7402  0366  1903               	skipnz
  7403  0367  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7404  0368  082E               	movf	0+(??_ADCconvert+0)+0,w
  7405  0369  3EAA               	addlw	low(0AAh)
  7406  036A  00A0               	movwf	(?___wmul)
  7407  036B  082F               	movf	1+(??_ADCconvert+0)+0,w
  7408  036C  1803               	skipnc
  7409  036D  3E01               	addlw	1
  7410  036E  3E00               	addlw	high(0AAh)
  7411  036F  00A1               	movwf	1+(?___wmul)
  7412  0370  300A               	movlw	low(0Ah)
  7413  0371  00A2               	movwf	0+(?___wmul)+02h
  7414  0372  3000               	movlw	high(0Ah)
  7415  0373  00A3               	movwf	(0+(?___wmul)+02h)+1
  7416  0374  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7417  0379  1283               	bcf	status, 5	;RP0=0, select bank0
  7418  037A  1303               	bcf	status, 6	;RP1=0, select bank0
  7419  037B  0821               	movf	(1+(?___wmul)),w
  7420  037C  01A9               	clrf	1+(?___lwdiv)+02h
  7421  037D  07A9               	addwf	1+(?___lwdiv)+02h
  7422  037E  0820               	movf	(0+(?___wmul)),w
  7423  037F  01A8               	clrf	0+(?___lwdiv)+02h
  7424  0380  07A8               	addwf	0+(?___lwdiv)+02h
  7425                           
  7426  0381  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7427  0386  1283               	bcf	status, 5	;RP0=0, select bank0
  7428  0387  1303               	bcf	status, 6	;RP1=0, select bank0
  7429  0388  0826               	movf	(0+(?___lwdiv)),w
  7430  0389  3E1E               	addlw	low(01Eh)
  7431  038A  1683               	bsf	status, 5	;RP0=1, select bank1
  7432  038B  1303               	bcf	status, 6	;RP1=0, select bank1
  7433  038C  00BA               	movwf	(_distance)^080h	;volatile
  7434  038D  1283               	bcf	status, 5	;RP0=0, select bank0
  7435  038E  1303               	bcf	status, 6	;RP1=0, select bank0
  7436  038F  0827               	movf	(1+(?___lwdiv)),w
  7437  0390  1803               	skipnc
  7438  0391  3E01               	addlw	1
  7439  0392  3E00               	addlw	high(01Eh)
  7440  0393  1683               	bsf	status, 5	;RP0=1, select bank1
  7441  0394  1303               	bcf	status, 6	;RP1=0, select bank1
  7442  0395  00BB               	movwf	1+(_distance)^080h	;volatile
  7443                           	line	50
  7444                           ;infrared.c: 50: }
  7445  0396  2CD1               	goto	l3042
  7446                           	line	51
  7447                           	
  7448  0397                     l3033:	
  7449                           	
  7450  0397                     l11313:	
  7451                           ;infrared.c: 51: else if (adcVal >= 107 && adcVal < 128)
  7452  0397  3000               	movlw	high(06Bh)
  7453  0398  1283               	bcf	status, 5	;RP0=0, select bank0
  7454  0399  026B               	subwf	(_adcVal+1),w	;volatile
  7455  039A  306B               	movlw	low(06Bh)
  7456  039B  1903               	skipnz
  7457  039C  026A               	subwf	(_adcVal),w	;volatile
  7458  039D  1C03               	skipc
  7459  039E  2BA0               	goto	u5091
  7460  039F  2BA1               	goto	u5090
  7461  03A0                     u5091:
  7462  03A0  2BE4               	goto	l11319
  7463  03A1                     u5090:
  7464                           	
  7465  03A1                     l11315:	
  7466  03A1  3000               	movlw	high(080h)
  7467  03A2  026B               	subwf	(_adcVal+1),w	;volatile
  7468  03A3  3080               	movlw	low(080h)
  7469  03A4  1903               	skipnz
  7470  03A5  026A               	subwf	(_adcVal),w	;volatile
  7471  03A6  1803               	skipnc
  7472  03A7  2BA9               	goto	u5101
  7473  03A8  2BAA               	goto	u5100
  7474  03A9                     u5101:
  7475  03A9  2BE4               	goto	l11319
  7476  03AA                     u5100:
  7477                           	line	53
  7478                           	
  7479  03AA                     l11317:	
  7480                           ;infrared.c: 52: {
  7481                           ;infrared.c: 53: distance = 40 + ((50-40)*(128-adcVal))/(128-107);
  7482  03AA  3015               	movlw	low(015h)
  7483  03AB  00A6               	movwf	(?___lwdiv)
  7484  03AC  3000               	movlw	high(015h)
  7485  03AD  00A7               	movwf	((?___lwdiv))+1
  7486  03AE  096A               	comf	(_adcVal),w	;volatile
  7487  03AF  00AE               	movwf	(??_ADCconvert+0)+0
  7488  03B0  096B               	comf	(_adcVal+1),w	;volatile
  7489  03B1  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7490  03B2  0AAE               	incf	(??_ADCconvert+0)+0,f
  7491  03B3  1903               	skipnz
  7492  03B4  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7493  03B5  082E               	movf	0+(??_ADCconvert+0)+0,w
  7494  03B6  3E80               	addlw	low(080h)
  7495  03B7  00A0               	movwf	(?___wmul)
  7496  03B8  082F               	movf	1+(??_ADCconvert+0)+0,w
  7497  03B9  1803               	skipnc
  7498  03BA  3E01               	addlw	1
  7499  03BB  3E00               	addlw	high(080h)
  7500  03BC  00A1               	movwf	1+(?___wmul)
  7501  03BD  300A               	movlw	low(0Ah)
  7502  03BE  00A2               	movwf	0+(?___wmul)+02h
  7503  03BF  3000               	movlw	high(0Ah)
  7504  03C0  00A3               	movwf	(0+(?___wmul)+02h)+1
  7505  03C1  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7506  03C6  1283               	bcf	status, 5	;RP0=0, select bank0
  7507  03C7  1303               	bcf	status, 6	;RP1=0, select bank0
  7508  03C8  0821               	movf	(1+(?___wmul)),w
  7509  03C9  01A9               	clrf	1+(?___lwdiv)+02h
  7510  03CA  07A9               	addwf	1+(?___lwdiv)+02h
  7511  03CB  0820               	movf	(0+(?___wmul)),w
  7512  03CC  01A8               	clrf	0+(?___lwdiv)+02h
  7513  03CD  07A8               	addwf	0+(?___lwdiv)+02h
  7514                           
  7515  03CE  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7516  03D3  1283               	bcf	status, 5	;RP0=0, select bank0
  7517  03D4  1303               	bcf	status, 6	;RP1=0, select bank0
  7518  03D5  0826               	movf	(0+(?___lwdiv)),w
  7519  03D6  3E28               	addlw	low(028h)
  7520  03D7  1683               	bsf	status, 5	;RP0=1, select bank1
  7521  03D8  1303               	bcf	status, 6	;RP1=0, select bank1
  7522  03D9  00BA               	movwf	(_distance)^080h	;volatile
  7523  03DA  1283               	bcf	status, 5	;RP0=0, select bank0
  7524  03DB  1303               	bcf	status, 6	;RP1=0, select bank0
  7525  03DC  0827               	movf	(1+(?___lwdiv)),w
  7526  03DD  1803               	skipnc
  7527  03DE  3E01               	addlw	1
  7528  03DF  3E00               	addlw	high(028h)
  7529  03E0  1683               	bsf	status, 5	;RP0=1, select bank1
  7530  03E1  1303               	bcf	status, 6	;RP1=0, select bank1
  7531  03E2  00BB               	movwf	1+(_distance)^080h	;volatile
  7532                           	line	54
  7533                           ;infrared.c: 54: }
  7534  03E3  2CD1               	goto	l3042
  7535                           	line	55
  7536                           	
  7537  03E4                     l3035:	
  7538                           	
  7539  03E4                     l11319:	
  7540                           ;infrared.c: 55: else if (adcVal >= 77 && adcVal < 107)
  7541  03E4  3000               	movlw	high(04Dh)
  7542  03E5  1283               	bcf	status, 5	;RP0=0, select bank0
  7543  03E6  026B               	subwf	(_adcVal+1),w	;volatile
  7544  03E7  304D               	movlw	low(04Dh)
  7545  03E8  1903               	skipnz
  7546  03E9  026A               	subwf	(_adcVal),w	;volatile
  7547  03EA  1C03               	skipc
  7548  03EB  2BED               	goto	u5111
  7549  03EC  2BEE               	goto	u5110
  7550  03ED                     u5111:
  7551  03ED  2C31               	goto	l11325
  7552  03EE                     u5110:
  7553                           	
  7554  03EE                     l11321:	
  7555  03EE  3000               	movlw	high(06Bh)
  7556  03EF  026B               	subwf	(_adcVal+1),w	;volatile
  7557  03F0  306B               	movlw	low(06Bh)
  7558  03F1  1903               	skipnz
  7559  03F2  026A               	subwf	(_adcVal),w	;volatile
  7560  03F3  1803               	skipnc
  7561  03F4  2BF6               	goto	u5121
  7562  03F5  2BF7               	goto	u5120
  7563  03F6                     u5121:
  7564  03F6  2C31               	goto	l11325
  7565  03F7                     u5120:
  7566                           	line	57
  7567                           	
  7568  03F7                     l11323:	
  7569                           ;infrared.c: 56: {
  7570                           ;infrared.c: 57: distance = 50 + ((60-50)*(107-adcVal))/(107-77);
  7571  03F7  301E               	movlw	low(01Eh)
  7572  03F8  00A6               	movwf	(?___lwdiv)
  7573  03F9  3000               	movlw	high(01Eh)
  7574  03FA  00A7               	movwf	((?___lwdiv))+1
  7575  03FB  096A               	comf	(_adcVal),w	;volatile
  7576  03FC  00AE               	movwf	(??_ADCconvert+0)+0
  7577  03FD  096B               	comf	(_adcVal+1),w	;volatile
  7578  03FE  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7579  03FF  0AAE               	incf	(??_ADCconvert+0)+0,f
  7580  0400  1903               	skipnz
  7581  0401  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7582  0402  082E               	movf	0+(??_ADCconvert+0)+0,w
  7583  0403  3E6B               	addlw	low(06Bh)
  7584  0404  00A0               	movwf	(?___wmul)
  7585  0405  082F               	movf	1+(??_ADCconvert+0)+0,w
  7586  0406  1803               	skipnc
  7587  0407  3E01               	addlw	1
  7588  0408  3E00               	addlw	high(06Bh)
  7589  0409  00A1               	movwf	1+(?___wmul)
  7590  040A  300A               	movlw	low(0Ah)
  7591  040B  00A2               	movwf	0+(?___wmul)+02h
  7592  040C  3000               	movlw	high(0Ah)
  7593  040D  00A3               	movwf	(0+(?___wmul)+02h)+1
  7594  040E  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7595  0413  1283               	bcf	status, 5	;RP0=0, select bank0
  7596  0414  1303               	bcf	status, 6	;RP1=0, select bank0
  7597  0415  0821               	movf	(1+(?___wmul)),w
  7598  0416  01A9               	clrf	1+(?___lwdiv)+02h
  7599  0417  07A9               	addwf	1+(?___lwdiv)+02h
  7600  0418  0820               	movf	(0+(?___wmul)),w
  7601  0419  01A8               	clrf	0+(?___lwdiv)+02h
  7602  041A  07A8               	addwf	0+(?___lwdiv)+02h
  7603                           
  7604  041B  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7605  0420  1283               	bcf	status, 5	;RP0=0, select bank0
  7606  0421  1303               	bcf	status, 6	;RP1=0, select bank0
  7607  0422  0826               	movf	(0+(?___lwdiv)),w
  7608  0423  3E32               	addlw	low(032h)
  7609  0424  1683               	bsf	status, 5	;RP0=1, select bank1
  7610  0425  1303               	bcf	status, 6	;RP1=0, select bank1
  7611  0426  00BA               	movwf	(_distance)^080h	;volatile
  7612  0427  1283               	bcf	status, 5	;RP0=0, select bank0
  7613  0428  1303               	bcf	status, 6	;RP1=0, select bank0
  7614  0429  0827               	movf	(1+(?___lwdiv)),w
  7615  042A  1803               	skipnc
  7616  042B  3E01               	addlw	1
  7617  042C  3E00               	addlw	high(032h)
  7618  042D  1683               	bsf	status, 5	;RP0=1, select bank1
  7619  042E  1303               	bcf	status, 6	;RP1=0, select bank1
  7620  042F  00BB               	movwf	1+(_distance)^080h	;volatile
  7621                           	line	58
  7622                           ;infrared.c: 58: }
  7623  0430  2CD1               	goto	l3042
  7624                           	line	59
  7625                           	
  7626  0431                     l3037:	
  7627                           	
  7628  0431                     l11325:	
  7629                           ;infrared.c: 59: else if (adcVal >= 56 && adcVal < 77)
  7630  0431  3000               	movlw	high(038h)
  7631  0432  1283               	bcf	status, 5	;RP0=0, select bank0
  7632  0433  026B               	subwf	(_adcVal+1),w	;volatile
  7633  0434  3038               	movlw	low(038h)
  7634  0435  1903               	skipnz
  7635  0436  026A               	subwf	(_adcVal),w	;volatile
  7636  0437  1C03               	skipc
  7637  0438  2C3A               	goto	u5131
  7638  0439  2C3B               	goto	u5130
  7639  043A                     u5131:
  7640  043A  2C7E               	goto	l11331
  7641  043B                     u5130:
  7642                           	
  7643  043B                     l11327:	
  7644  043B  3000               	movlw	high(04Dh)
  7645  043C  026B               	subwf	(_adcVal+1),w	;volatile
  7646  043D  304D               	movlw	low(04Dh)
  7647  043E  1903               	skipnz
  7648  043F  026A               	subwf	(_adcVal),w	;volatile
  7649  0440  1803               	skipnc
  7650  0441  2C43               	goto	u5141
  7651  0442  2C44               	goto	u5140
  7652  0443                     u5141:
  7653  0443  2C7E               	goto	l11331
  7654  0444                     u5140:
  7655                           	line	61
  7656                           	
  7657  0444                     l11329:	
  7658                           ;infrared.c: 60: {
  7659                           ;infrared.c: 61: distance = 60 + ((70-60)*(77-adcVal))/(77-56);
  7660  0444  3015               	movlw	low(015h)
  7661  0445  00A6               	movwf	(?___lwdiv)
  7662  0446  3000               	movlw	high(015h)
  7663  0447  00A7               	movwf	((?___lwdiv))+1
  7664  0448  096A               	comf	(_adcVal),w	;volatile
  7665  0449  00AE               	movwf	(??_ADCconvert+0)+0
  7666  044A  096B               	comf	(_adcVal+1),w	;volatile
  7667  044B  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7668  044C  0AAE               	incf	(??_ADCconvert+0)+0,f
  7669  044D  1903               	skipnz
  7670  044E  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7671  044F  082E               	movf	0+(??_ADCconvert+0)+0,w
  7672  0450  3E4D               	addlw	low(04Dh)
  7673  0451  00A0               	movwf	(?___wmul)
  7674  0452  082F               	movf	1+(??_ADCconvert+0)+0,w
  7675  0453  1803               	skipnc
  7676  0454  3E01               	addlw	1
  7677  0455  3E00               	addlw	high(04Dh)
  7678  0456  00A1               	movwf	1+(?___wmul)
  7679  0457  300A               	movlw	low(0Ah)
  7680  0458  00A2               	movwf	0+(?___wmul)+02h
  7681  0459  3000               	movlw	high(0Ah)
  7682  045A  00A3               	movwf	(0+(?___wmul)+02h)+1
  7683  045B  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7684  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  7685  0461  1303               	bcf	status, 6	;RP1=0, select bank0
  7686  0462  0821               	movf	(1+(?___wmul)),w
  7687  0463  01A9               	clrf	1+(?___lwdiv)+02h
  7688  0464  07A9               	addwf	1+(?___lwdiv)+02h
  7689  0465  0820               	movf	(0+(?___wmul)),w
  7690  0466  01A8               	clrf	0+(?___lwdiv)+02h
  7691  0467  07A8               	addwf	0+(?___lwdiv)+02h
  7692                           
  7693  0468  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7694  046D  1283               	bcf	status, 5	;RP0=0, select bank0
  7695  046E  1303               	bcf	status, 6	;RP1=0, select bank0
  7696  046F  0826               	movf	(0+(?___lwdiv)),w
  7697  0470  3E3C               	addlw	low(03Ch)
  7698  0471  1683               	bsf	status, 5	;RP0=1, select bank1
  7699  0472  1303               	bcf	status, 6	;RP1=0, select bank1
  7700  0473  00BA               	movwf	(_distance)^080h	;volatile
  7701  0474  1283               	bcf	status, 5	;RP0=0, select bank0
  7702  0475  1303               	bcf	status, 6	;RP1=0, select bank0
  7703  0476  0827               	movf	(1+(?___lwdiv)),w
  7704  0477  1803               	skipnc
  7705  0478  3E01               	addlw	1
  7706  0479  3E00               	addlw	high(03Ch)
  7707  047A  1683               	bsf	status, 5	;RP0=1, select bank1
  7708  047B  1303               	bcf	status, 6	;RP1=0, select bank1
  7709  047C  00BB               	movwf	1+(_distance)^080h	;volatile
  7710                           	line	62
  7711                           ;infrared.c: 62: }
  7712  047D  2CD1               	goto	l3042
  7713                           	line	63
  7714                           	
  7715  047E                     l3039:	
  7716                           	
  7717  047E                     l11331:	
  7718                           ;infrared.c: 63: else if (adcVal >= 43 && adcVal < 56)
  7719  047E  3000               	movlw	high(02Bh)
  7720  047F  1283               	bcf	status, 5	;RP0=0, select bank0
  7721  0480  026B               	subwf	(_adcVal+1),w	;volatile
  7722  0481  302B               	movlw	low(02Bh)
  7723  0482  1903               	skipnz
  7724  0483  026A               	subwf	(_adcVal),w	;volatile
  7725  0484  1C03               	skipc
  7726  0485  2C87               	goto	u5151
  7727  0486  2C88               	goto	u5150
  7728  0487                     u5151:
  7729  0487  2CD1               	goto	l3042
  7730  0488                     u5150:
  7731                           	
  7732  0488                     l11333:	
  7733  0488  3000               	movlw	high(038h)
  7734  0489  026B               	subwf	(_adcVal+1),w	;volatile
  7735  048A  3038               	movlw	low(038h)
  7736  048B  1903               	skipnz
  7737  048C  026A               	subwf	(_adcVal),w	;volatile
  7738  048D  1803               	skipnc
  7739  048E  2C90               	goto	u5161
  7740  048F  2C91               	goto	u5160
  7741  0490                     u5161:
  7742  0490  2CD1               	goto	l3042
  7743  0491                     u5160:
  7744                           	line	65
  7745                           	
  7746  0491                     l11335:	
  7747                           ;infrared.c: 64: {
  7748                           ;infrared.c: 65: distance = 70 + ((80-70)*(56-adcVal))/(56-43);
  7749  0491  300D               	movlw	low(0Dh)
  7750  0492  00A6               	movwf	(?___lwdiv)
  7751  0493  3000               	movlw	high(0Dh)
  7752  0494  00A7               	movwf	((?___lwdiv))+1
  7753  0495  096A               	comf	(_adcVal),w	;volatile
  7754  0496  00AE               	movwf	(??_ADCconvert+0)+0
  7755  0497  096B               	comf	(_adcVal+1),w	;volatile
  7756  0498  00AF               	movwf	((??_ADCconvert+0)+0+1)
  7757  0499  0AAE               	incf	(??_ADCconvert+0)+0,f
  7758  049A  1903               	skipnz
  7759  049B  0AAF               	incf	((??_ADCconvert+0)+0+1),f
  7760  049C  082E               	movf	0+(??_ADCconvert+0)+0,w
  7761  049D  3E38               	addlw	low(038h)
  7762  049E  00A0               	movwf	(?___wmul)
  7763  049F  082F               	movf	1+(??_ADCconvert+0)+0,w
  7764  04A0  1803               	skipnc
  7765  04A1  3E01               	addlw	1
  7766  04A2  3E00               	addlw	high(038h)
  7767  04A3  00A1               	movwf	1+(?___wmul)
  7768  04A4  300A               	movlw	low(0Ah)
  7769  04A5  00A2               	movwf	0+(?___wmul)+02h
  7770  04A6  3000               	movlw	high(0Ah)
  7771  04A7  00A3               	movwf	(0+(?___wmul)+02h)+1
  7772  04A8  160A  118A  2423   	fcall	___wmul
              120A  118A         
  7773  04AD  1283               	bcf	status, 5	;RP0=0, select bank0
  7774  04AE  1303               	bcf	status, 6	;RP1=0, select bank0
  7775  04AF  0821               	movf	(1+(?___wmul)),w
  7776  04B0  01A9               	clrf	1+(?___lwdiv)+02h
  7777  04B1  07A9               	addwf	1+(?___lwdiv)+02h
  7778  04B2  0820               	movf	(0+(?___wmul)),w
  7779  04B3  01A8               	clrf	0+(?___lwdiv)+02h
  7780  04B4  07A8               	addwf	0+(?___lwdiv)+02h
  7781                           
  7782  04B5  160A  118A  26BA   	fcall	___lwdiv
              120A  118A         
  7783  04BA  1283               	bcf	status, 5	;RP0=0, select bank0
  7784  04BB  1303               	bcf	status, 6	;RP1=0, select bank0
  7785  04BC  0826               	movf	(0+(?___lwdiv)),w
  7786  04BD  3E46               	addlw	low(046h)
  7787  04BE  1683               	bsf	status, 5	;RP0=1, select bank1
  7788  04BF  1303               	bcf	status, 6	;RP1=0, select bank1
  7789  04C0  00BA               	movwf	(_distance)^080h	;volatile
  7790  04C1  1283               	bcf	status, 5	;RP0=0, select bank0
  7791  04C2  1303               	bcf	status, 6	;RP1=0, select bank0
  7792  04C3  0827               	movf	(1+(?___lwdiv)),w
  7793  04C4  1803               	skipnc
  7794  04C5  3E01               	addlw	1
  7795  04C6  3E00               	addlw	high(046h)
  7796  04C7  1683               	bsf	status, 5	;RP0=1, select bank1
  7797  04C8  1303               	bcf	status, 6	;RP1=0, select bank1
  7798  04C9  00BB               	movwf	1+(_distance)^080h	;volatile
  7799  04CA  2CD1               	goto	l3042
  7800                           	line	66
  7801                           	
  7802  04CB                     l3041:	
  7803  04CB  2CD1               	goto	l3042
  7804                           	line	67
  7805                           	
  7806  04CC                     l3040:	
  7807  04CC  2CD1               	goto	l3042
  7808                           	
  7809  04CD                     l3038:	
  7810  04CD  2CD1               	goto	l3042
  7811                           	
  7812  04CE                     l3036:	
  7813  04CE  2CD1               	goto	l3042
  7814                           	
  7815  04CF                     l3034:	
  7816  04CF  2CD1               	goto	l3042
  7817                           	
  7818  04D0                     l3032:	
  7819  04D0  2CD1               	goto	l3042
  7820                           	
  7821  04D1                     l3030:	
  7822                           	
  7823  04D1                     l3042:	
  7824  04D1  0008               	return
  7825                           	opt stack 0
  7826                           GLOBAL	__end_of_ADCconvert
  7827  04D2                     	__end_of_ADCconvert:
  7828 ;; =============== function _ADCconvert ends ============
  7829                           
  7830                           	signat	_ADCconvert,88
  7831                           	global	_rotate
  7832                           psect	text1087,local,class=CODE,delta=2
  7833                           global __ptext1087
  7834  170A                     __ptext1087:
  7835                           
  7836 ;; *************** function _rotate *****************
  7837 ;; Defined at:
  7838 ;;		line 48 in file "H:\Aldnoah.Zero-master\Assignment3\steppermotor.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  numsteps        2    3[BANK0 ] unsigned int 
  7841 ;;  direction       1    5[BANK0 ] unsigned char 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  i               2    8[BANK0 ] unsigned int 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;		None               void
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, pclath, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7853 ;;      Params:         0       3       0       0       0
  7854 ;;      Locals:         0       2       0       0       0
  7855 ;;      Temps:          0       2       0       0       0
  7856 ;;      Totals:         0       7       0       0       0
  7857 ;;Total ram usage:        7 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    4
  7860 ;; This function calls:
  7861 ;;		_spi_transfer
  7862 ;; This function is called by:
  7863 ;;		_scan360
  7864 ;;		_main
  7865 ;;		_calibrateIR
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           psect	text1087
  7869                           	file	"H:\Aldnoah.Zero-master\Assignment3\steppermotor.c"
  7870                           	line	48
  7871                           	global	__size_of_rotate
  7872  0050                     	__size_of_rotate	equ	__end_of_rotate-_rotate
  7873                           	
  7874  170A                     _rotate:	
  7875                           	opt	stack 3
  7876                           ; Regs used in _rotate: [wreg+status,2+status,0+pclath+cstack]
  7877                           	line	50
  7878                           	
  7879  170A                     l11267:	
  7880                           ;steppermotor.c: 50: RC0 = 1; RC1 = 1;;
  7881  170A  1283               	bcf	status, 5	;RP0=0, select bank0
  7882  170B  1303               	bcf	status, 6	;RP1=0, select bank0
  7883  170C  1407               	bsf	(56/8),(56)&7
  7884  170D  1487               	bsf	(57/8),(57)&7
  7885                           	line	51
  7886                           	
  7887  170E                     l11269:	
  7888                           ;steppermotor.c: 51: if (direction == 0)
  7889  170E  08A5               	movf	(rotate@direction),f
  7890  170F  1D03               	skipz
  7891  1710  2F12               	goto	u5011
  7892  1711  2F13               	goto	u5010
  7893  1712                     u5011:
  7894  1712  2F1A               	goto	l11273
  7895  1713                     u5010:
  7896                           	line	52
  7897                           	
  7898  1713                     l11271:	
  7899                           ;steppermotor.c: 52: spi_transfer(0b00001111);
  7900  1713  300F               	movlw	(0Fh)
  7901  1714  160A  118A  22F4   	fcall	_spi_transfer
              160A  118A         
  7902  1719  2F21               	goto	l11275
  7903                           	line	53
  7904                           	
  7905  171A                     l3743:	
  7906                           	line	54
  7907                           	
  7908  171A                     l11273:	
  7909                           ;steppermotor.c: 53: else
  7910                           ;steppermotor.c: 54: spi_transfer(0b00001101);
  7911  171A  300D               	movlw	(0Dh)
  7912  171B  160A  118A  22F4   	fcall	_spi_transfer
              160A  118A         
  7913  1720  2F21               	goto	l11275
  7914                           	
  7915  1721                     l3744:	
  7916                           	line	55
  7917                           	
  7918  1721                     l11275:	
  7919                           ;steppermotor.c: 55: RC0 = 0; RC1 = 0;;
  7920  1721  1283               	bcf	status, 5	;RP0=0, select bank0
  7921  1722  1303               	bcf	status, 6	;RP1=0, select bank0
  7922  1723  1007               	bcf	(56/8),(56)&7
  7923                           	
  7924  1724                     l11277:	
  7925  1724  1087               	bcf	(57/8),(57)&7
  7926                           	line	56
  7927                           	
  7928  1725                     l11279:	
  7929                           ;steppermotor.c: 56: for (unsigned int i = 0; i < numsteps; i++)
  7930  1725  01A8               	clrf	(rotate@i)
  7931  1726  01A9               	clrf	(rotate@i+1)
  7932  1727  2F3E               	goto	l3745
  7933                           	line	57
  7934                           	
  7935  1728                     l3746:	
  7936                           	line	58
  7937                           ;steppermotor.c: 57: {
  7938                           ;steppermotor.c: 58: RC2 = 1; _nop(); RC2 = 0;;
  7939  1728  1507               	bsf	(58/8),(58)&7
  7940  1729  0000               	nop
  7941  172A  1283               	bcf	status, 5	;RP0=0, select bank0
  7942  172B  1303               	bcf	status, 6	;RP1=0, select bank0
  7943  172C  1107               	bcf	(58/8),(58)&7
  7944                           	line	59
  7945                           	
  7946  172D                     l11281:	
  7947                           ;steppermotor.c: 59: _delay((unsigned long)((15)*(20000000/4000.0)));
  7948                           	opt asmopt_off
  7949  172D  3062               movlw	98
  7950  172E  00A7               movwf	((??_rotate+0)+0+1),f
  7951  172F  3065               	movlw	101
  7952  1730  00A6               movwf	((??_rotate+0)+0),f
  7953  1731                     u5797:
  7954  1731  0BA6               	decfsz	((??_rotate+0)+0),f
  7955  1732  2F31               	goto	u5797
  7956  1733  0BA7               	decfsz	((??_rotate+0)+0+1),f
  7957  1734  2F31               	goto	u5797
  7958  1735  2F36               	nop2
  7959                           opt asmopt_on
  7960                           
  7961                           	line	56
  7962  1736  3001               	movlw	low(01h)
  7963  1737  1283               	bcf	status, 5	;RP0=0, select bank0
  7964  1738  1303               	bcf	status, 6	;RP1=0, select bank0
  7965  1739  07A8               	addwf	(rotate@i),f
  7966  173A  1803               	skipnc
  7967  173B  0AA9               	incf	(rotate@i+1),f
  7968  173C  3000               	movlw	high(01h)
  7969  173D  07A9               	addwf	(rotate@i+1),f
  7970                           	
  7971  173E                     l3745:	
  7972  173E  0824               	movf	(rotate@numsteps+1),w
  7973  173F  0229               	subwf	(rotate@i+1),w
  7974  1740  1D03               	skipz
  7975  1741  2F44               	goto	u5025
  7976  1742  0823               	movf	(rotate@numsteps),w
  7977  1743  0228               	subwf	(rotate@i),w
  7978  1744                     u5025:
  7979  1744  1C03               	skipc
  7980  1745  2F47               	goto	u5021
  7981  1746  2F48               	goto	u5020
  7982  1747                     u5021:
  7983  1747  2F28               	goto	l3746
  7984  1748                     u5020:
  7985                           	
  7986  1748                     l3747:	
  7987                           	line	61
  7988                           ;steppermotor.c: 60: }
  7989                           ;steppermotor.c: 61: RC0 = 1; RC1 = 1;;
  7990  1748  1407               	bsf	(56/8),(56)&7
  7991  1749  1487               	bsf	(57/8),(57)&7
  7992                           	line	62
  7993                           	
  7994  174A                     l11283:	
  7995                           ;steppermotor.c: 62: spi_transfer(0b00000000);
  7996  174A  3000               	movlw	(0)
  7997  174B  160A  118A  22F4   	fcall	_spi_transfer
              160A  118A         
  7998                           	line	63
  7999                           	
  8000  1750                     l11285:	
  8001                           ;steppermotor.c: 63: RC0 = 0; RC1 = 0;;
  8002  1750  1283               	bcf	status, 5	;RP0=0, select bank0
  8003  1751  1303               	bcf	status, 6	;RP1=0, select bank0
  8004  1752  1007               	bcf	(56/8),(56)&7
  8005                           	
  8006  1753                     l11287:	
  8007  1753  1087               	bcf	(57/8),(57)&7
  8008                           	line	64
  8009                           	
  8010  1754                     l11289:	
  8011                           ;steppermotor.c: 64: RC2 = 1; _nop(); RC2 = 0;;
  8012  1754  1507               	bsf	(58/8),(58)&7
  8013                           	
  8014  1755                     l11291:	
  8015  1755  0000               	nop
  8016                           	
  8017  1756                     l11293:	
  8018  1756  1283               	bcf	status, 5	;RP0=0, select bank0
  8019  1757  1303               	bcf	status, 6	;RP1=0, select bank0
  8020  1758  1107               	bcf	(58/8),(58)&7
  8021                           	line	65
  8022                           	
  8023  1759                     l3748:	
  8024  1759  0008               	return
  8025                           	opt stack 0
  8026                           GLOBAL	__end_of_rotate
  8027  175A                     	__end_of_rotate:
  8028 ;; =============== function _rotate ends ============
  8029                           
  8030                           	signat	_rotate,8312
  8031                           	global	_robotTurn
  8032                           psect	text1088,local,class=CODE,delta=2
  8033                           global __ptext1088
  8034  0A44                     __ptext1088:
  8035                           
  8036 ;; *************** function _robotTurn *****************
  8037 ;; Defined at:
  8038 ;;		line 128 in file "H:\Aldnoah.Zero-master\Assignment3\robot.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  distance        2    2[BANK0 ] int 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;		None               void
  8045 ;; Registers used:
  8046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8052 ;;      Params:         0       2       0       0       0
  8053 ;;      Locals:         0       0       0       0       0
  8054 ;;      Temps:          0       1       0       0       0
  8055 ;;      Totals:         0       3       0       0       0
  8056 ;;Total ram usage:        3 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    4
  8059 ;; This function calls:
  8060 ;;		_ser_putch
  8061 ;; This function is called by:
  8062 ;;		_straightLineTest
  8063 ;;		_main
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           psect	text1088
  8067                           	file	"H:\Aldnoah.Zero-master\Assignment3\robot.c"
  8068                           	line	128
  8069                           	global	__size_of_robotTurn
  8070  0088                     	__size_of_robotTurn	equ	__end_of_robotTurn-_robotTurn
  8071                           	
  8072  0A44                     _robotTurn:	
  8073                           	opt	stack 3
  8074                           ; Regs used in _robotTurn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8075                           	line	131
  8076                           	
  8077  0A44                     l11257:	
  8078                           ;robot.c: 131: turnlowByte = (unsigned char) (distance) ;
  8079  0A44  1283               	bcf	status, 5	;RP0=0, select bank0
  8080  0A45  1303               	bcf	status, 6	;RP1=0, select bank0
  8081  0A46  0822               	movf	(robotTurn@distance),w
  8082  0A47  00A4               	movwf	(??_robotTurn+0)+0
  8083  0A48  0824               	movf	(??_robotTurn+0)+0,w
  8084  0A49  1683               	bsf	status, 5	;RP0=1, select bank1
  8085  0A4A  1303               	bcf	status, 6	;RP1=0, select bank1
  8086  0A4B  00D2               	movwf	(_turnlowByte)^080h
  8087                           	line	132
  8088                           	
  8089  0A4C                     l11259:	
  8090                           ;robot.c: 132: turnhighByte = (unsigned char) (distance >> 8);
  8091  0A4C  1283               	bcf	status, 5	;RP0=0, select bank0
  8092  0A4D  1303               	bcf	status, 6	;RP1=0, select bank0
  8093  0A4E  0823               	movf	(robotTurn@distance+1),w
  8094  0A4F  00A4               	movwf	(??_robotTurn+0)+0
  8095  0A50  0824               	movf	(??_robotTurn+0)+0,w
  8096  0A51  1683               	bsf	status, 5	;RP0=1, select bank1
  8097  0A52  1303               	bcf	status, 6	;RP1=0, select bank1
  8098  0A53  00D1               	movwf	(_turnhighByte)^080h
  8099                           	line	133
  8100                           	
  8101  0A54                     l11261:	
  8102                           ;robot.c: 133: if (distance >= 0)
  8103  0A54  1283               	bcf	status, 5	;RP0=0, select bank0
  8104  0A55  1303               	bcf	status, 6	;RP1=0, select bank0
  8105  0A56  1BA3               	btfsc	(robotTurn@distance+1),7
  8106  0A57  2A59               	goto	u5001
  8107  0A58  2A5A               	goto	u5000
  8108  0A59                     u5001:
  8109  0A59  2A79               	goto	l11265
  8110  0A5A                     u5000:
  8111                           	line	135
  8112                           	
  8113  0A5A                     l11263:	
  8114                           ;robot.c: 134: {
  8115                           ;robot.c: 135: ser_putch(137);
  8116  0A5A  3089               	movlw	(089h)
  8117  0A5B  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8118                           	line	137
  8119                           ;robot.c: 137: ser_putch(0);
  8120  0A60  3000               	movlw	(0)
  8121  0A61  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8122                           	line	139
  8123                           ;robot.c: 139: ser_putch(50);
  8124  0A66  3032               	movlw	(032h)
  8125  0A67  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8126                           	line	141
  8127                           ;robot.c: 141: ser_putch(0);
  8128  0A6C  3000               	movlw	(0)
  8129  0A6D  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8130                           	line	143
  8131                           ;robot.c: 143: ser_putch(1);
  8132  0A72  3001               	movlw	(01h)
  8133  0A73  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8134                           	line	144
  8135                           ;robot.c: 144: }
  8136  0A78  2A97               	goto	l6078
  8137                           	line	145
  8138                           	
  8139  0A79                     l6077:	
  8140                           	line	147
  8141                           	
  8142  0A79                     l11265:	
  8143                           ;robot.c: 145: else
  8144                           ;robot.c: 146: {
  8145                           ;robot.c: 147: ser_putch(137);
  8146  0A79  3089               	movlw	(089h)
  8147  0A7A  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8148                           	line	149
  8149                           ;robot.c: 149: ser_putch(0);
  8150  0A7F  3000               	movlw	(0)
  8151  0A80  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8152                           	line	151
  8153                           ;robot.c: 151: ser_putch(50);
  8154  0A85  3032               	movlw	(032h)
  8155  0A86  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8156                           	line	153
  8157                           ;robot.c: 153: ser_putch(255);
  8158  0A8B  30FF               	movlw	(0FFh)
  8159  0A8C  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8160                           	line	155
  8161                           ;robot.c: 155: ser_putch(255);
  8162  0A91  30FF               	movlw	(0FFh)
  8163  0A92  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8164                           	line	156
  8165                           	
  8166  0A97                     l6078:	
  8167                           	line	157
  8168                           ;robot.c: 156: }
  8169                           ;robot.c: 157: ser_putch(157);
  8170  0A97  309D               	movlw	(09Dh)
  8171  0A98  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8172                           	line	159
  8173                           ;robot.c: 159: ser_putch(turnhighByte);
  8174  0A9D  1683               	bsf	status, 5	;RP0=1, select bank1
  8175  0A9E  1303               	bcf	status, 6	;RP1=0, select bank1
  8176  0A9F  0851               	movf	(_turnhighByte)^080h,w
  8177  0AA0  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8178                           	line	161
  8179                           ;robot.c: 161: ser_putch(turnlowByte);
  8180  0AA5  1683               	bsf	status, 5	;RP0=1, select bank1
  8181  0AA6  1303               	bcf	status, 6	;RP1=0, select bank1
  8182  0AA7  0852               	movf	(_turnlowByte)^080h,w
  8183  0AA8  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8184                           	line	163
  8185                           ;robot.c: 163: ser_putch(137);
  8186  0AAD  3089               	movlw	(089h)
  8187  0AAE  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8188                           	line	165
  8189                           ;robot.c: 165: ser_putch(0);
  8190  0AB3  3000               	movlw	(0)
  8191  0AB4  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8192                           	line	167
  8193                           ;robot.c: 167: ser_putch(0);
  8194  0AB9  3000               	movlw	(0)
  8195  0ABA  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8196                           	line	169
  8197                           ;robot.c: 169: ser_putch(0);
  8198  0ABF  3000               	movlw	(0)
  8199  0AC0  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8200                           	line	171
  8201                           ;robot.c: 171: ser_putch(0);
  8202  0AC5  3000               	movlw	(0)
  8203  0AC6  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8204                           	line	172
  8205                           	
  8206  0ACB                     l6079:	
  8207  0ACB  0008               	return
  8208                           	opt stack 0
  8209                           GLOBAL	__end_of_robotTurn
  8210  0ACC                     	__end_of_robotTurn:
  8211 ;; =============== function _robotTurn ends ============
  8212                           
  8213                           	signat	_robotTurn,4216
  8214                           	global	_robo_init
  8215                           psect	text1089,local,class=CODE,delta=2
  8216                           global __ptext1089
  8217  08CC                     __ptext1089:
  8218                           
  8219 ;; *************** function _robo_init *****************
  8220 ;; Defined at:
  8221 ;;		line 10 in file "H:\Aldnoah.Zero-master\Assignment3\robot.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;		None
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;		None               void
  8228 ;; Registers used:
  8229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8235 ;;      Params:         0       0       0       0       0
  8236 ;;      Locals:         0       0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0
  8238 ;;      Totals:         0       0       0       0       0
  8239 ;;Total ram usage:        0 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:    4
  8242 ;; This function calls:
  8243 ;;		_ser_putch
  8244 ;; This function is called by:
  8245 ;;		_init
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           psect	text1089
  8249                           	file	"H:\Aldnoah.Zero-master\Assignment3\robot.c"
  8250                           	line	10
  8251                           	global	__size_of_robo_init
  8252  0019                     	__size_of_robo_init	equ	__end_of_robo_init-_robo_init
  8253                           	
  8254  08CC                     _robo_init:	
  8255                           	opt	stack 2
  8256                           ; Regs used in _robo_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8257                           	line	11
  8258                           	
  8259  08CC                     l11255:	
  8260                           ;robot.c: 11: ser_putch(128);
  8261  08CC  3080               	movlw	(080h)
  8262  08CD  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8263                           	line	12
  8264                           ;robot.c: 12: ser_putch(132);
  8265  08D2  3084               	movlw	(084h)
  8266  08D3  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8267                           	line	13
  8268                           ;robot.c: 13: ser_putch(150);
  8269  08D8  3096               	movlw	(096h)
  8270  08D9  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8271                           	line	14
  8272                           ;robot.c: 14: ser_putch(0);
  8273  08DE  3000               	movlw	(0)
  8274  08DF  160A  118A  2381   	fcall	_ser_putch
              120A  158A         
  8275                           	line	15
  8276                           	
  8277  08E4                     l6055:	
  8278  08E4  0008               	return
  8279                           	opt stack 0
  8280                           GLOBAL	__end_of_robo_init
  8281  08E5                     	__end_of_robo_init:
  8282 ;; =============== function _robo_init ends ============
  8283                           
  8284                           	signat	_robo_init,88
  8285                           	global	_lcd_write_data
  8286                           psect	text1090,local,class=CODE,delta=2
  8287                           global __ptext1090
  8288  12CE                     __ptext1090:
  8289                           
  8290 ;; *************** function _lcd_write_data *****************
  8291 ;; Defined at:
  8292 ;;		line 30 in file "H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  databyte        1    wreg     unsigned char 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  databyte        1    2[BANK0 ] unsigned char 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;		None               void
  8299 ;; Registers used:
  8300 ;;		wreg
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8306 ;;      Params:         0       0       0       0       0
  8307 ;;      Locals:         0       1       0       0       0
  8308 ;;      Temps:          0       2       0       0       0
  8309 ;;      Totals:         0       3       0       0       0
  8310 ;;Total ram usage:        3 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    3
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_lcd_write_string
  8317 ;;		_lcd_write_2_digit_bcd
  8318 ;;		_lcd_write_3_digit_bcd
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           psect	text1090
  8322                           	file	"H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  8323                           	line	30
  8324                           	global	__size_of_lcd_write_data
  8325  0013                     	__size_of_lcd_write_data	equ	__end_of_lcd_write_data-_lcd_write_data
  8326                           	
  8327  12CE                     _lcd_write_data:	
  8328                           	opt	stack 1
  8329                           ; Regs used in _lcd_write_data: [wreg]
  8330                           ;lcd_write_data@databyte stored from wreg
  8331  12CE  1283               	bcf	status, 5	;RP0=0, select bank0
  8332  12CF  1303               	bcf	status, 6	;RP1=0, select bank0
  8333  12D0  00A2               	movwf	(lcd_write_data@databyte)
  8334                           	line	31
  8335                           	
  8336  12D1                     l11247:	
  8337                           ;lcd.c: 31: RE2 = 0;
  8338  12D1  1109               	bcf	(74/8),(74)&7
  8339                           	line	32
  8340                           ;lcd.c: 32: RE1 = 0;
  8341  12D2  1089               	bcf	(73/8),(73)&7
  8342                           	line	33
  8343                           ;lcd.c: 33: RE0 = 1;
  8344  12D3  1409               	bsf	(72/8),(72)&7
  8345                           	line	34
  8346                           	
  8347  12D4                     l11249:	
  8348                           ;lcd.c: 34: PORTD = databyte;
  8349  12D4  0822               	movf	(lcd_write_data@databyte),w
  8350  12D5  0088               	movwf	(8)	;volatile
  8351                           	line	35
  8352                           	
  8353  12D6                     l11251:	
  8354                           ;lcd.c: 35: RE2 = 1;
  8355  12D6  1509               	bsf	(74/8),(74)&7
  8356                           	line	36
  8357                           	
  8358  12D7                     l11253:	
  8359                           ;lcd.c: 36: RE2 = 0;
  8360  12D7  1109               	bcf	(74/8),(74)&7
  8361                           	line	37
  8362                           ;lcd.c: 37: _delay((unsigned long)((1)*(20000000/4000.0)));
  8363                           	opt asmopt_off
  8364  12D8  3007               movlw	7
  8365  12D9  00A1               movwf	((??_lcd_write_data+0)+0+1),f
  8366  12DA  307D               	movlw	125
  8367  12DB  00A0               movwf	((??_lcd_write_data+0)+0),f
  8368  12DC                     u5807:
  8369  12DC  0BA0               	decfsz	((??_lcd_write_data+0)+0),f
  8370  12DD  2ADC               	goto	u5807
  8371  12DE  0BA1               	decfsz	((??_lcd_write_data+0)+0+1),f
  8372  12DF  2ADC               	goto	u5807
  8373                           opt asmopt_on
  8374                           
  8375                           	line	38
  8376                           	
  8377  12E0                     l1402:	
  8378  12E0  0008               	return
  8379                           	opt stack 0
  8380                           GLOBAL	__end_of_lcd_write_data
  8381  12E1                     	__end_of_lcd_write_data:
  8382 ;; =============== function _lcd_write_data ends ============
  8383                           
  8384                           	signat	_lcd_write_data,4216
  8385                           	global	_lcd_write_control
  8386                           psect	text1091,local,class=CODE,delta=2
  8387                           global __ptext1091
  8388  1308                     __ptext1091:
  8389                           
  8390 ;; *************** function _lcd_write_control *****************
  8391 ;; Defined at:
  8392 ;;		line 18 in file "H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;  databyte        1    wreg     unsigned char 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  databyte        1    2[BANK0 ] unsigned char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;		None               void
  8399 ;; Registers used:
  8400 ;;		wreg
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8406 ;;      Params:         0       0       0       0       0
  8407 ;;      Locals:         0       1       0       0       0
  8408 ;;      Temps:          0       2       0       0       0
  8409 ;;      Totals:         0       3       0       0       0
  8410 ;;Total ram usage:        3 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:    3
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_lcd_set_cursor
  8417 ;;		_lcd_init
  8418 ;;		_UpdateDisplay
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           psect	text1091
  8422                           	file	"H:\Aldnoah.Zero-master\Assignment3\lcd.c"
  8423                           	line	18
  8424                           	global	__size_of_lcd_write_control
  8425  0014                     	__size_of_lcd_write_control	equ	__end_of_lcd_write_control-_lcd_write_control
  8426                           	
  8427  1308                     _lcd_write_control:	
  8428                           	opt	stack 1
  8429                           ; Regs used in _lcd_write_control: [wreg]
  8430                           ;lcd_write_control@databyte stored from wreg
  8431  1308  1283               	bcf	status, 5	;RP0=0, select bank0
  8432  1309  1303               	bcf	status, 6	;RP1=0, select bank0
  8433  130A  00A2               	movwf	(lcd_write_control@databyte)
  8434                           	line	19
  8435                           	
  8436  130B                     l11239:	
  8437                           ;lcd.c: 19: RE2 = 0;
  8438  130B  1109               	bcf	(74/8),(74)&7
  8439                           	line	20
  8440                           ;lcd.c: 20: RE1 = 0;
  8441  130C  1089               	bcf	(73/8),(73)&7
  8442                           	line	21
  8443                           ;lcd.c: 21: RE0 = 0;
  8444  130D  1009               	bcf	(72/8),(72)&7
  8445                           	line	22
  8446                           	
  8447  130E                     l11241:	
  8448                           ;lcd.c: 22: PORTD = databyte;
  8449  130E  0822               	movf	(lcd_write_control@databyte),w
  8450  130F  0088               	movwf	(8)	;volatile
  8451                           	line	23
  8452                           	
  8453  1310                     l11243:	
  8454                           ;lcd.c: 23: RE2 = 1;
  8455  1310  1509               	bsf	(74/8),(74)&7
  8456                           	line	24
  8457                           	
  8458  1311                     l11245:	
  8459                           ;lcd.c: 24: RE2 = 0;
  8460  1311  1109               	bcf	(74/8),(74)&7
  8461                           	line	25
  8462                           ;lcd.c: 25: _delay((unsigned long)((2)*(20000000/4000.0)));
  8463                           	opt asmopt_off
  8464  1312  300D               movlw	13
  8465  1313  00A1               movwf	((??_lcd_write_control+0)+0+1),f
  8466  1314  30FB               	movlw	251
  8467  1315  00A0               movwf	((??_lcd_write_control+0)+0),f
  8468  1316                     u5817:
  8469  1316  0BA0               	decfsz	((??_lcd_write_control+0)+0),f
  8470  1317  2B16               	goto	u5817
  8471  1318  0BA1               	decfsz	((??_lcd_write_control+0)+0+1),f
  8472  1319  2B16               	goto	u5817
  8473  131A  2B1B               	nop2
  8474                           opt asmopt_on
  8475                           
  8476                           	line	26
  8477                           	
  8478  131B                     l1399:	
  8479  131B  0008               	return
  8480                           	opt stack 0
  8481                           GLOBAL	__end_of_lcd_write_control
  8482  131C                     	__end_of_lcd_write_control:
  8483 ;; =============== function _lcd_write_control ends ============
  8484                           
  8485                           	signat	_lcd_write_control,4216
  8486                           	global	_init_adc
  8487                           psect	text1092,local,class=CODE,delta=2
  8488                           global __ptext1092
  8489  131C                     __ptext1092:
  8490                           
  8491 ;; *************** function _init_adc *****************
  8492 ;; Defined at:
  8493 ;;		line 46 in file "H:\Aldnoah.Zero-master\Assignment3\adc.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;		None
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;		None               void
  8500 ;; Registers used:
  8501 ;;		wreg, status,2
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8507 ;;      Params:         0       0       0       0       0
  8508 ;;      Locals:         0       0       0       0       0
  8509 ;;      Temps:          0       1       0       0       0
  8510 ;;      Totals:         0       1       0       0       0
  8511 ;;Total ram usage:        1 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    3
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_init
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           psect	text1092
  8521                           	file	"H:\Aldnoah.Zero-master\Assignment3\adc.c"
  8522                           	line	46
  8523                           	global	__size_of_init_adc
  8524  0016                     	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  8525                           	
  8526  131C                     _init_adc:	
  8527                           	opt	stack 3
  8528                           ; Regs used in _init_adc: [wreg+status,2]
  8529                           	line	48
  8530                           	
  8531  131C                     l11229:	
  8532                           ;adc.c: 48: PORTA = 0;
  8533  131C  1283               	bcf	status, 5	;RP0=0, select bank0
  8534  131D  1303               	bcf	status, 6	;RP1=0, select bank0
  8535  131E  0185               	clrf	(5)	;volatile
  8536                           	line	49
  8537                           	
  8538  131F                     l11231:	
  8539                           ;adc.c: 49: TRISA = 0b00111111;
  8540  131F  303F               	movlw	(03Fh)
  8541  1320  1683               	bsf	status, 5	;RP0=1, select bank1
  8542  1321  1303               	bcf	status, 6	;RP1=0, select bank1
  8543  1322  0085               	movwf	(133)^080h	;volatile
  8544                           	line	52
  8545                           	
  8546  1323                     l11233:	
  8547                           ;adc.c: 52: ADCON0 = 0b10100001;
  8548  1323  30A1               	movlw	(0A1h)
  8549  1324  1283               	bcf	status, 5	;RP0=0, select bank0
  8550  1325  1303               	bcf	status, 6	;RP1=0, select bank0
  8551  1326  009F               	movwf	(31)	;volatile
  8552                           	line	53
  8553                           	
  8554  1327                     l11235:	
  8555                           ;adc.c: 53: ADCON1 = 0b0000010;
  8556  1327  3002               	movlw	(02h)
  8557  1328  1683               	bsf	status, 5	;RP0=1, select bank1
  8558  1329  1303               	bcf	status, 6	;RP1=0, select bank1
  8559  132A  009F               	movwf	(159)^080h	;volatile
  8560                           	line	55
  8561                           	
  8562  132B                     l11237:	
  8563                           ;adc.c: 55: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8564                           	opt asmopt_off
  8565  132B  3053               movlw	83
  8566  132C  1283               	bcf	status, 5	;RP0=0, select bank0
  8567  132D  1303               	bcf	status, 6	;RP1=0, select bank0
  8568  132E  00A0               movwf	(??_init_adc+0)+0,f
  8569  132F                     u5827:
  8570  132F  0BA0               decfsz	(??_init_adc+0)+0,f
  8571  1330  2B2F               	goto	u5827
  8572                           opt asmopt_on
  8573                           
  8574                           	line	57
  8575                           	
  8576  1331                     l700:	
  8577  1331  0008               	return
  8578                           	opt stack 0
  8579                           GLOBAL	__end_of_init_adc
  8580  1332                     	__end_of_init_adc:
  8581 ;; =============== function _init_adc ends ============
  8582                           
  8583                           	signat	_init_adc,88
  8584                           	global	_adc_read_channel
  8585                           psect	text1093,local,class=CODE,delta=2
  8586                           global __ptext1093
  8587  1568                     __ptext1093:
  8588                           
  8589 ;; *************** function _adc_read_channel *****************
  8590 ;; Defined at:
  8591 ;;		line 5 in file "H:\Aldnoah.Zero-master\Assignment3\adc.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  channel         1    wreg     unsigned char 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  channel         1    7[BANK0 ] unsigned char 
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      unsigned char 
  8598 ;; Registers used:
  8599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8605 ;;      Params:         0       0       0       0       0
  8606 ;;      Locals:         0       1       0       0       0
  8607 ;;      Temps:          0       1       0       0       0
  8608 ;;      Totals:         0       2       0       0       0
  8609 ;;Total ram usage:        2 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; Hardware stack levels required when called:    4
  8612 ;; This function calls:
  8613 ;;		_adc_read
  8614 ;; This function is called by:
  8615 ;;		_readDistance
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           psect	text1093
  8619                           	file	"H:\Aldnoah.Zero-master\Assignment3\adc.c"
  8620                           	line	5
  8621                           	global	__size_of_adc_read_channel
  8622  003B                     	__size_of_adc_read_channel	equ	__end_of_adc_read_channel-_adc_read_channel
  8623                           	
  8624  1568                     _adc_read_channel:	
  8625                           	opt	stack 0
  8626                           ; Regs used in _adc_read_channel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8627                           ;adc_read_channel@channel stored from wreg
  8628  1568  1283               	bcf	status, 5	;RP0=0, select bank0
  8629  1569  1303               	bcf	status, 6	;RP1=0, select bank0
  8630  156A  00A7               	movwf	(adc_read_channel@channel)
  8631                           	line	6
  8632                           	
  8633  156B                     l11213:	
  8634                           ;adc.c: 6: switch(channel)
  8635  156B  2D84               	goto	l11221
  8636                           	line	8
  8637                           ;adc.c: 7: {
  8638                           ;adc.c: 8: case 0:
  8639                           	
  8640  156C                     l690:	
  8641                           	line	9
  8642                           ;adc.c: 9: CHS0 = 0;
  8643  156C  119F               	bcf	(251/8),(251)&7
  8644                           	line	10
  8645                           ;adc.c: 10: CHS1 = 0;
  8646  156D  121F               	bcf	(252/8),(252)&7
  8647                           	line	11
  8648                           ;adc.c: 11: CHS2 = 0;
  8649  156E  129F               	bcf	(253/8),(253)&7
  8650                           	line	12
  8651                           ;adc.c: 12: break;
  8652  156F  2D95               	goto	l11223
  8653                           	line	13
  8654                           ;adc.c: 13: case 1:
  8655                           	
  8656  1570                     l692:	
  8657                           	line	14
  8658                           ;adc.c: 14: CHS0 = 1;
  8659  1570  159F               	bsf	(251/8),(251)&7
  8660                           	line	15
  8661                           ;adc.c: 15: CHS1 = 0;
  8662  1571  121F               	bcf	(252/8),(252)&7
  8663                           	line	16
  8664                           ;adc.c: 16: CHS2 = 0;
  8665  1572  129F               	bcf	(253/8),(253)&7
  8666                           	line	17
  8667                           ;adc.c: 17: break;
  8668  1573  2D95               	goto	l11223
  8669                           	line	18
  8670                           ;adc.c: 18: case 2:
  8671                           	
  8672  1574                     l693:	
  8673                           	line	19
  8674                           ;adc.c: 19: CHS0 = 0;
  8675  1574  119F               	bcf	(251/8),(251)&7
  8676                           	line	20
  8677                           ;adc.c: 20: CHS1 = 1;
  8678  1575  161F               	bsf	(252/8),(252)&7
  8679                           	line	21
  8680                           ;adc.c: 21: CHS2 = 0;
  8681  1576  129F               	bcf	(253/8),(253)&7
  8682                           	line	22
  8683                           ;adc.c: 22: break;
  8684  1577  2D95               	goto	l11223
  8685                           	line	23
  8686                           ;adc.c: 23: case 3:
  8687                           	
  8688  1578                     l694:	
  8689                           	line	24
  8690                           ;adc.c: 24: CHS0 = 1;
  8691  1578  159F               	bsf	(251/8),(251)&7
  8692                           	line	25
  8693                           ;adc.c: 25: CHS1 = 1;
  8694  1579  161F               	bsf	(252/8),(252)&7
  8695                           	line	26
  8696                           ;adc.c: 26: CHS2 = 0;
  8697  157A  129F               	bcf	(253/8),(253)&7
  8698                           	line	27
  8699                           ;adc.c: 27: break;
  8700  157B  2D95               	goto	l11223
  8701                           	line	28
  8702                           ;adc.c: 28: case 4:
  8703                           	
  8704  157C                     l695:	
  8705                           	line	29
  8706                           ;adc.c: 29: CHS0 = 0;
  8707  157C  119F               	bcf	(251/8),(251)&7
  8708                           	line	30
  8709                           ;adc.c: 30: CHS1 = 0;
  8710  157D  121F               	bcf	(252/8),(252)&7
  8711                           	line	31
  8712                           ;adc.c: 31: CHS2 = 1;
  8713  157E  169F               	bsf	(253/8),(253)&7
  8714                           	line	32
  8715                           ;adc.c: 32: break;
  8716  157F  2D95               	goto	l11223
  8717                           	line	35
  8718                           ;adc.c: 35: default:
  8719                           	
  8720  1580                     l696:	
  8721                           	line	36
  8722                           	
  8723  1580                     l11215:	
  8724                           ;adc.c: 36: return 0;
  8725  1580  3000               	movlw	(0)
  8726  1581  2DA2               	goto	l697
  8727                           	
  8728  1582                     l11217:	
  8729  1582  2DA2               	goto	l697
  8730                           	line	37
  8731                           	
  8732  1583                     l11219:	
  8733                           ;adc.c: 37: }
  8734  1583  2D95               	goto	l11223
  8735                           	line	6
  8736                           	
  8737  1584                     l689:	
  8738                           	
  8739  1584                     l11221:	
  8740  1584  0827               	movf	(adc_read_channel@channel),w
  8741                           	; Switch size 1, requested type "space"
  8742                           ; Number of cases is 5, Range of values is 0 to 4
  8743                           ; switch strategies available:
  8744                           ; Name         Instructions Cycles
  8745                           ; simple_byte           16     9 (average)
  8746                           ; direct_byte           23     8 (fixed)
  8747                           ; jumptable            260     6 (fixed)
  8748                           ; rangetable             9     6 (fixed)
  8749                           ; spacedrange           16     9 (fixed)
  8750                           ; locatedrange           5     3 (fixed)
  8751                           ;	Chosen strategy is simple_byte
  8752                           
  8753                           	opt asmopt_off
  8754  1585  3A00               	xorlw	0^0	; case 0
  8755  1586  1903               	skipnz
  8756  1587  2D6C               	goto	l690
  8757  1588  3A01               	xorlw	1^0	; case 1
  8758  1589  1903               	skipnz
  8759  158A  2D70               	goto	l692
  8760  158B  3A03               	xorlw	2^1	; case 2
  8761  158C  1903               	skipnz
  8762  158D  2D74               	goto	l693
  8763  158E  3A01               	xorlw	3^2	; case 3
  8764  158F  1903               	skipnz
  8765  1590  2D78               	goto	l694
  8766  1591  3A07               	xorlw	4^3	; case 4
  8767  1592  1903               	skipnz
  8768  1593  2D7C               	goto	l695
  8769  1594  2D80               	goto	l11215
  8770                           	opt asmopt_on
  8771                           
  8772                           	line	37
  8773                           	
  8774  1595                     l691:	
  8775                           	line	39
  8776                           	
  8777  1595                     l11223:	
  8778                           ;adc.c: 39: _delay((unsigned long)((50)*(20000000/4000000.0)));
  8779                           	opt asmopt_off
  8780  1595  3053               movlw	83
  8781  1596  00A6               movwf	(??_adc_read_channel+0)+0,f
  8782  1597                     u5837:
  8783  1597  0BA6               decfsz	(??_adc_read_channel+0)+0,f
  8784  1598  2D97               	goto	u5837
  8785                           opt asmopt_on
  8786                           
  8787                           	line	41
  8788                           	
  8789  1599                     l11225:	
  8790                           ;adc.c: 41: return adc_read();
  8791  1599  160A  118A  23CF   	fcall	_adc_read
              160A  118A         
  8792  159E  1283               	bcf	status, 5	;RP0=0, select bank0
  8793  159F  1303               	bcf	status, 6	;RP1=0, select bank0
  8794  15A0  0820               	movf	(0+(?_adc_read)),w
  8795  15A1  2DA2               	goto	l697
  8796                           	
  8797  15A2                     l11227:	
  8798                           	line	43
  8799                           	
  8800  15A2                     l697:	
  8801  15A2  0008               	return
  8802                           	opt stack 0
  8803                           GLOBAL	__end_of_adc_read_channel
  8804  15A3                     	__end_of_adc_read_channel:
  8805 ;; =============== function _adc_read_channel ends ============
  8806                           
  8807                           	signat	_adc_read_channel,4217
  8808                           	global	___awmod
  8809                           psect	text1094,local,class=CODE,delta=2
  8810                           global __ptext1094
  8811  08E5                     __ptext1094:
  8812                           
  8813 ;; *************** function ___awmod *****************
  8814 ;; Defined at:
  8815 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  divisor         2    0[BANK0 ] int 
  8818 ;;  dividend        2    2[BANK0 ] int 
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;  sign            1    6[BANK0 ] unsigned char 
  8821 ;;  counter         1    5[BANK0 ] unsigned char 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  2    0[BANK0 ] int 
  8824 ;; Registers used:
  8825 ;;		wreg, status,2, status,0
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8831 ;;      Params:         0       4       0       0       0
  8832 ;;      Locals:         0       2       0       0       0
  8833 ;;      Temps:          0       1       0       0       0
  8834 ;;      Totals:         0       7       0       0       0
  8835 ;;Total ram usage:        7 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    3
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;;		_UpdateDisplay
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           psect	text1094
  8845                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  8846                           	line	5
  8847                           	global	__size_of___awmod
  8848  0068                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  8849                           	
  8850  08E5                     ___awmod:	
  8851                           	opt	stack 2
  8852                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8853                           	line	8
  8854                           	
  8855  08E5                     l11111:	
  8856  08E5  1283               	bcf	status, 5	;RP0=0, select bank0
  8857  08E6  1303               	bcf	status, 6	;RP1=0, select bank0
  8858  08E7  01A6               	clrf	(___awmod@sign)
  8859                           	line	9
  8860  08E8  1FA3               	btfss	(___awmod@dividend+1),7
  8861  08E9  28EB               	goto	u4791
  8862  08EA  28EC               	goto	u4790
  8863  08EB                     u4791:
  8864  08EB  28F5               	goto	l11115
  8865  08EC                     u4790:
  8866                           	line	10
  8867                           	
  8868  08EC                     l11113:	
  8869  08EC  09A2               	comf	(___awmod@dividend),f
  8870  08ED  09A3               	comf	(___awmod@dividend+1),f
  8871  08EE  0AA2               	incf	(___awmod@dividend),f
  8872  08EF  1903               	skipnz
  8873  08F0  0AA3               	incf	(___awmod@dividend+1),f
  8874                           	line	11
  8875  08F1  01A6               	clrf	(___awmod@sign)
  8876  08F2  1403               	bsf	status,0
  8877  08F3  0DA6               	rlf	(___awmod@sign),f
  8878  08F4  28F5               	goto	l11115
  8879                           	line	12
  8880                           	
  8881  08F5                     l7735:	
  8882                           	line	13
  8883                           	
  8884  08F5                     l11115:	
  8885  08F5  1FA1               	btfss	(___awmod@divisor+1),7
  8886  08F6  28F8               	goto	u4801
  8887  08F7  28F9               	goto	u4800
  8888  08F8                     u4801:
  8889  08F8  28FF               	goto	l11119
  8890  08F9                     u4800:
  8891                           	line	14
  8892                           	
  8893  08F9                     l11117:	
  8894  08F9  09A0               	comf	(___awmod@divisor),f
  8895  08FA  09A1               	comf	(___awmod@divisor+1),f
  8896  08FB  0AA0               	incf	(___awmod@divisor),f
  8897  08FC  1903               	skipnz
  8898  08FD  0AA1               	incf	(___awmod@divisor+1),f
  8899  08FE  28FF               	goto	l11119
  8900                           	
  8901  08FF                     l7736:	
  8902                           	line	15
  8903                           	
  8904  08FF                     l11119:	
  8905  08FF  0821               	movf	(___awmod@divisor+1),w
  8906  0900  0420               	iorwf	(___awmod@divisor),w
  8907  0901  1903               	skipnz
  8908  0902  2904               	goto	u4811
  8909  0903  2905               	goto	u4810
  8910  0904                     u4811:
  8911  0904  293B               	goto	l11137
  8912  0905                     u4810:
  8913                           	line	16
  8914                           	
  8915  0905                     l11121:	
  8916  0905  01A5               	clrf	(___awmod@counter)
  8917  0906  1403               	bsf	status,0
  8918  0907  0DA5               	rlf	(___awmod@counter),f
  8919                           	line	17
  8920  0908  2915               	goto	l11127
  8921                           	
  8922  0909                     l7739:	
  8923                           	line	18
  8924                           	
  8925  0909                     l11123:	
  8926  0909  3001               	movlw	01h
  8927                           	
  8928  090A                     u4825:
  8929  090A  1003               	clrc
  8930  090B  0DA0               	rlf	(___awmod@divisor),f
  8931  090C  0DA1               	rlf	(___awmod@divisor+1),f
  8932  090D  3EFF               	addlw	-1
  8933  090E  1D03               	skipz
  8934  090F  290A               	goto	u4825
  8935                           	line	19
  8936                           	
  8937  0910                     l11125:	
  8938  0910  3001               	movlw	(01h)
  8939  0911  00A4               	movwf	(??___awmod+0)+0
  8940  0912  0824               	movf	(??___awmod+0)+0,w
  8941  0913  07A5               	addwf	(___awmod@counter),f
  8942  0914  2915               	goto	l11127
  8943                           	line	20
  8944                           	
  8945  0915                     l7738:	
  8946                           	line	17
  8947                           	
  8948  0915                     l11127:	
  8949  0915  1FA1               	btfss	(___awmod@divisor+1),(15)&7
  8950  0916  2918               	goto	u4831
  8951  0917  2919               	goto	u4830
  8952  0918                     u4831:
  8953  0918  2909               	goto	l11123
  8954  0919                     u4830:
  8955  0919  291B               	goto	l11129
  8956                           	
  8957  091A                     l7740:	
  8958  091A  291B               	goto	l11129
  8959                           	line	21
  8960                           	
  8961  091B                     l7741:	
  8962                           	line	22
  8963                           	
  8964  091B                     l11129:	
  8965  091B  0821               	movf	(___awmod@divisor+1),w
  8966  091C  0223               	subwf	(___awmod@dividend+1),w
  8967  091D  1D03               	skipz
  8968  091E  2921               	goto	u4845
  8969  091F  0820               	movf	(___awmod@divisor),w
  8970  0920  0222               	subwf	(___awmod@dividend),w
  8971  0921                     u4845:
  8972  0921  1C03               	skipc
  8973  0922  2924               	goto	u4841
  8974  0923  2925               	goto	u4840
  8975  0924                     u4841:
  8976  0924  292C               	goto	l11133
  8977  0925                     u4840:
  8978                           	line	23
  8979                           	
  8980  0925                     l11131:	
  8981  0925  0820               	movf	(___awmod@divisor),w
  8982  0926  02A2               	subwf	(___awmod@dividend),f
  8983  0927  0821               	movf	(___awmod@divisor+1),w
  8984  0928  1C03               	skipc
  8985  0929  03A3               	decf	(___awmod@dividend+1),f
  8986  092A  02A3               	subwf	(___awmod@dividend+1),f
  8987  092B  292C               	goto	l11133
  8988                           	
  8989  092C                     l7742:	
  8990                           	line	24
  8991                           	
  8992  092C                     l11133:	
  8993  092C  3001               	movlw	01h
  8994                           	
  8995  092D                     u4855:
  8996  092D  1003               	clrc
  8997  092E  0CA1               	rrf	(___awmod@divisor+1),f
  8998  092F  0CA0               	rrf	(___awmod@divisor),f
  8999  0930  3EFF               	addlw	-1
  9000  0931  1D03               	skipz
  9001  0932  292D               	goto	u4855
  9002                           	line	25
  9003                           	
  9004  0933                     l11135:	
  9005  0933  3001               	movlw	low(01h)
  9006  0934  02A5               	subwf	(___awmod@counter),f
  9007  0935  1D03               	btfss	status,2
  9008  0936  2938               	goto	u4861
  9009  0937  2939               	goto	u4860
  9010  0938                     u4861:
  9011  0938  291B               	goto	l11129
  9012  0939                     u4860:
  9013  0939  293B               	goto	l11137
  9014                           	
  9015  093A                     l7743:	
  9016  093A  293B               	goto	l11137
  9017                           	line	26
  9018                           	
  9019  093B                     l7737:	
  9020                           	line	27
  9021                           	
  9022  093B                     l11137:	
  9023  093B  0826               	movf	(___awmod@sign),w
  9024  093C  1D03               	skipz
  9025  093D  293F               	goto	u4870
  9026  093E  2945               	goto	l11141
  9027  093F                     u4870:
  9028                           	line	28
  9029                           	
  9030  093F                     l11139:	
  9031  093F  09A2               	comf	(___awmod@dividend),f
  9032  0940  09A3               	comf	(___awmod@dividend+1),f
  9033  0941  0AA2               	incf	(___awmod@dividend),f
  9034  0942  1903               	skipnz
  9035  0943  0AA3               	incf	(___awmod@dividend+1),f
  9036  0944  2945               	goto	l11141
  9037                           	
  9038  0945                     l7744:	
  9039                           	line	29
  9040                           	
  9041  0945                     l11141:	
  9042  0945  0823               	movf	(___awmod@dividend+1),w
  9043  0946  01A1               	clrf	(?___awmod+1)
  9044  0947  07A1               	addwf	(?___awmod+1)
  9045  0948  0822               	movf	(___awmod@dividend),w
  9046  0949  01A0               	clrf	(?___awmod)
  9047  094A  07A0               	addwf	(?___awmod)
  9048                           
  9049  094B  294C               	goto	l7745
  9050                           	
  9051  094C                     l11143:	
  9052                           	line	30
  9053                           	
  9054  094C                     l7745:	
  9055  094C  0008               	return
  9056                           	opt stack 0
  9057                           GLOBAL	__end_of___awmod
  9058  094D                     	__end_of___awmod:
  9059 ;; =============== function ___awmod ends ============
  9060                           
  9061                           	signat	___awmod,8314
  9062                           	global	___fttol
  9063                           psect	text1095,local,class=CODE,delta=2
  9064                           global __ptext1095
  9065  0B64                     __ptext1095:
  9066                           
  9067 ;; *************** function ___fttol *****************
  9068 ;; Defined at:
  9069 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  f1              3    8[BANK0 ] float 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  lval            4   17[BANK0 ] unsigned long 
  9074 ;;  exp1            1   21[BANK0 ] unsigned char 
  9075 ;;  sign1           1   16[BANK0 ] unsigned char 
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  4    8[BANK0 ] long 
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9085 ;;      Params:         0       4       0       0       0
  9086 ;;      Locals:         0       6       0       0       0
  9087 ;;      Temps:          0       4       0       0       0
  9088 ;;      Totals:         0      14       0       0       0
  9089 ;;Total ram usage:       14 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:    3
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_main
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           psect	text1095
  9099                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  9100                           	line	45
  9101                           	global	__size_of___fttol
  9102  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  9103                           	
  9104  0B64                     ___fttol:	
  9105                           	opt	stack 4
  9106                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9107                           	line	49
  9108                           	
  9109  0B64                     l11055:	
  9110  0B64  1283               	bcf	status, 5	;RP0=0, select bank0
  9111  0B65  1303               	bcf	status, 6	;RP1=0, select bank0
  9112  0B66  0828               	movf	(___fttol@f1),w
  9113  0B67  00AC               	movwf	((??___fttol+0)+0)
  9114  0B68  0829               	movf	(___fttol@f1+1),w
  9115  0B69  00AD               	movwf	((??___fttol+0)+0+1)
  9116  0B6A  082A               	movf	(___fttol@f1+2),w
  9117  0B6B  00AE               	movwf	((??___fttol+0)+0+2)
  9118  0B6C  1003               	clrc
  9119  0B6D  0D2D               	rlf	(??___fttol+0)+1,w
  9120  0B6E  0D2E               	rlf	(??___fttol+0)+2,w
  9121  0B6F  00AF               	movwf	(??___fttol+3)+0
  9122  0B70  082F               	movf	(??___fttol+3)+0,w
  9123  0B71  00B5               	movwf	(___fttol@exp1)
  9124  0B72  08B5               	movf	((___fttol@exp1)),f
  9125  0B73  1D03               	skipz
  9126  0B74  2B76               	goto	u4681
  9127  0B75  2B77               	goto	u4680
  9128  0B76                     u4681:
  9129  0B76  2B81               	goto	l11061
  9130  0B77                     u4680:
  9131                           	line	50
  9132                           	
  9133  0B77                     l11057:	
  9134  0B77  3000               	movlw	0
  9135  0B78  00AB               	movwf	(?___fttol+3)
  9136  0B79  3000               	movlw	0
  9137  0B7A  00AA               	movwf	(?___fttol+2)
  9138  0B7B  3000               	movlw	0
  9139  0B7C  00A9               	movwf	(?___fttol+1)
  9140  0B7D  3000               	movlw	0
  9141  0B7E  00A8               	movwf	(?___fttol)
  9142                           
  9143  0B7F  2C09               	goto	l7637
  9144                           	
  9145  0B80                     l11059:	
  9146  0B80  2C09               	goto	l7637
  9147                           	
  9148  0B81                     l7636:	
  9149                           	line	51
  9150                           	
  9151  0B81                     l11061:	
  9152  0B81  0828               	movf	(___fttol@f1),w
  9153  0B82  00AC               	movwf	((??___fttol+0)+0)
  9154  0B83  0829               	movf	(___fttol@f1+1),w
  9155  0B84  00AD               	movwf	((??___fttol+0)+0+1)
  9156  0B85  082A               	movf	(___fttol@f1+2),w
  9157  0B86  00AE               	movwf	((??___fttol+0)+0+2)
  9158  0B87  3017               	movlw	017h
  9159  0B88                     u4695:
  9160  0B88  1003               	clrc
  9161  0B89  0CAE               	rrf	(??___fttol+0)+2,f
  9162  0B8A  0CAD               	rrf	(??___fttol+0)+1,f
  9163  0B8B  0CAC               	rrf	(??___fttol+0)+0,f
  9164  0B8C                     u4690:
  9165  0B8C  3EFF               	addlw	-1
  9166  0B8D  1D03               	skipz
  9167  0B8E  2B88               	goto	u4695
  9168  0B8F  082C               	movf	0+(??___fttol+0)+0,w
  9169  0B90  00AF               	movwf	(??___fttol+3)+0
  9170  0B91  082F               	movf	(??___fttol+3)+0,w
  9171  0B92  00B0               	movwf	(___fttol@sign1)
  9172                           	line	52
  9173                           	
  9174  0B93                     l11063:	
  9175  0B93  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
  9176                           	line	53
  9177                           	
  9178  0B94                     l11065:	
  9179  0B94  30FF               	movlw	0FFh
  9180  0B95  05A8               	andwf	(___fttol@f1),f
  9181  0B96  30FF               	movlw	0FFh
  9182  0B97  05A9               	andwf	(___fttol@f1+1),f
  9183  0B98  3000               	movlw	0
  9184  0B99  05AA               	andwf	(___fttol@f1+2),f
  9185                           	line	54
  9186                           	
  9187  0B9A                     l11067:	
  9188  0B9A  0828               	movf	(___fttol@f1),w
  9189  0B9B  00B1               	movwf	(___fttol@lval)
  9190  0B9C  0829               	movf	(___fttol@f1+1),w
  9191  0B9D  00B2               	movwf	((___fttol@lval))+1
  9192  0B9E  082A               	movf	(___fttol@f1+2),w
  9193  0B9F  00B3               	movwf	((___fttol@lval))+2
  9194  0BA0  01B4               	clrf	((___fttol@lval))+3
  9195                           	line	55
  9196                           	
  9197  0BA1                     l11069:	
  9198  0BA1  308E               	movlw	low(08Eh)
  9199  0BA2  02B5               	subwf	(___fttol@exp1),f
  9200                           	line	56
  9201                           	
  9202  0BA3                     l11071:	
  9203  0BA3  1FB5               	btfss	(___fttol@exp1),7
  9204  0BA4  2BA6               	goto	u4701
  9205  0BA5  2BA7               	goto	u4700
  9206  0BA6                     u4701:
  9207  0BA6  2BCC               	goto	l11081
  9208  0BA7                     u4700:
  9209                           	line	57
  9210                           	
  9211  0BA7                     l11073:	
  9212  0BA7  0835               	movf	(___fttol@exp1),w
  9213  0BA8  3A80               	xorlw	80h
  9214  0BA9  3E8F               	addlw	-((-15)^80h)
  9215  0BAA  1803               	skipnc
  9216  0BAB  2BAD               	goto	u4711
  9217  0BAC  2BAE               	goto	u4710
  9218  0BAD                     u4711:
  9219  0BAD  2BB9               	goto	l11079
  9220  0BAE                     u4710:
  9221                           	line	58
  9222                           	
  9223  0BAE                     l11075:	
  9224  0BAE  3000               	movlw	0
  9225  0BAF  00AB               	movwf	(?___fttol+3)
  9226  0BB0  3000               	movlw	0
  9227  0BB1  00AA               	movwf	(?___fttol+2)
  9228  0BB2  3000               	movlw	0
  9229  0BB3  00A9               	movwf	(?___fttol+1)
  9230  0BB4  3000               	movlw	0
  9231  0BB5  00A8               	movwf	(?___fttol)
  9232                           
  9233  0BB6  2C09               	goto	l7637
  9234                           	
  9235  0BB7                     l11077:	
  9236  0BB7  2C09               	goto	l7637
  9237                           	
  9238  0BB8                     l7639:	
  9239  0BB8  2BB9               	goto	l11079
  9240                           	line	59
  9241                           	
  9242  0BB9                     l7640:	
  9243                           	line	60
  9244                           	
  9245  0BB9                     l11079:	
  9246  0BB9  3001               	movlw	01h
  9247  0BBA                     u4725:
  9248  0BBA  1003               	clrc
  9249  0BBB  0CB4               	rrf	(___fttol@lval+3),f
  9250  0BBC  0CB3               	rrf	(___fttol@lval+2),f
  9251  0BBD  0CB2               	rrf	(___fttol@lval+1),f
  9252  0BBE  0CB1               	rrf	(___fttol@lval),f
  9253  0BBF  3EFF               	addlw	-1
  9254  0BC0  1D03               	skipz
  9255  0BC1  2BBA               	goto	u4725
  9256                           
  9257                           	line	61
  9258  0BC2  3001               	movlw	(01h)
  9259  0BC3  00AC               	movwf	(??___fttol+0)+0
  9260  0BC4  082C               	movf	(??___fttol+0)+0,w
  9261  0BC5  07B5               	addwf	(___fttol@exp1),f
  9262  0BC6  1D03               	btfss	status,2
  9263  0BC7  2BC9               	goto	u4731
  9264  0BC8  2BCA               	goto	u4730
  9265  0BC9                     u4731:
  9266  0BC9  2BB9               	goto	l11079
  9267  0BCA                     u4730:
  9268  0BCA  2BF0               	goto	l11091
  9269                           	
  9270  0BCB                     l7641:	
  9271                           	line	62
  9272  0BCB  2BF0               	goto	l11091
  9273                           	
  9274  0BCC                     l7638:	
  9275                           	line	63
  9276                           	
  9277  0BCC                     l11081:	
  9278  0BCC  3018               	movlw	(018h)
  9279  0BCD  0235               	subwf	(___fttol@exp1),w
  9280  0BCE  1C03               	skipc
  9281  0BCF  2BD1               	goto	u4741
  9282  0BD0  2BD2               	goto	u4740
  9283  0BD1                     u4741:
  9284  0BD1  2BE9               	goto	l11089
  9285  0BD2                     u4740:
  9286                           	line	64
  9287                           	
  9288  0BD2                     l11083:	
  9289  0BD2  3000               	movlw	0
  9290  0BD3  00AB               	movwf	(?___fttol+3)
  9291  0BD4  3000               	movlw	0
  9292  0BD5  00AA               	movwf	(?___fttol+2)
  9293  0BD6  3000               	movlw	0
  9294  0BD7  00A9               	movwf	(?___fttol+1)
  9295  0BD8  3000               	movlw	0
  9296  0BD9  00A8               	movwf	(?___fttol)
  9297                           
  9298  0BDA  2C09               	goto	l7637
  9299                           	
  9300  0BDB                     l11085:	
  9301  0BDB  2C09               	goto	l7637
  9302                           	
  9303  0BDC                     l7643:	
  9304                           	line	65
  9305  0BDC  2BE9               	goto	l11089
  9306                           	
  9307  0BDD                     l7645:	
  9308                           	line	66
  9309                           	
  9310  0BDD                     l11087:	
  9311  0BDD  3001               	movlw	01h
  9312  0BDE  00AC               	movwf	(??___fttol+0)+0
  9313  0BDF                     u4755:
  9314  0BDF  1003               	clrc
  9315  0BE0  0DB1               	rlf	(___fttol@lval),f
  9316  0BE1  0DB2               	rlf	(___fttol@lval+1),f
  9317  0BE2  0DB3               	rlf	(___fttol@lval+2),f
  9318  0BE3  0DB4               	rlf	(___fttol@lval+3),f
  9319  0BE4  0BAC               	decfsz	(??___fttol+0)+0
  9320  0BE5  2BDF               	goto	u4755
  9321                           	line	67
  9322  0BE6  3001               	movlw	low(01h)
  9323  0BE7  02B5               	subwf	(___fttol@exp1),f
  9324  0BE8  2BE9               	goto	l11089
  9325                           	line	68
  9326                           	
  9327  0BE9                     l7644:	
  9328                           	line	65
  9329                           	
  9330  0BE9                     l11089:	
  9331  0BE9  08B5               	movf	(___fttol@exp1),f
  9332  0BEA  1D03               	skipz
  9333  0BEB  2BED               	goto	u4761
  9334  0BEC  2BEE               	goto	u4760
  9335  0BED                     u4761:
  9336  0BED  2BDD               	goto	l11087
  9337  0BEE                     u4760:
  9338  0BEE  2BF0               	goto	l11091
  9339                           	
  9340  0BEF                     l7646:	
  9341  0BEF  2BF0               	goto	l11091
  9342                           	line	69
  9343                           	
  9344  0BF0                     l7642:	
  9345                           	line	70
  9346                           	
  9347  0BF0                     l11091:	
  9348  0BF0  0830               	movf	(___fttol@sign1),w
  9349  0BF1  1D03               	skipz
  9350  0BF2  2BF4               	goto	u4770
  9351  0BF3  2C00               	goto	l11095
  9352  0BF4                     u4770:
  9353                           	line	71
  9354                           	
  9355  0BF4                     l11093:	
  9356  0BF4  09B1               	comf	(___fttol@lval),f
  9357  0BF5  09B2               	comf	(___fttol@lval+1),f
  9358  0BF6  09B3               	comf	(___fttol@lval+2),f
  9359  0BF7  09B4               	comf	(___fttol@lval+3),f
  9360  0BF8  0AB1               	incf	(___fttol@lval),f
  9361  0BF9  1903               	skipnz
  9362  0BFA  0AB2               	incf	(___fttol@lval+1),f
  9363  0BFB  1903               	skipnz
  9364  0BFC  0AB3               	incf	(___fttol@lval+2),f
  9365  0BFD  1903               	skipnz
  9366  0BFE  0AB4               	incf	(___fttol@lval+3),f
  9367  0BFF  2C00               	goto	l11095
  9368                           	
  9369  0C00                     l7647:	
  9370                           	line	72
  9371                           	
  9372  0C00                     l11095:	
  9373  0C00  0834               	movf	(___fttol@lval+3),w
  9374  0C01  00AB               	movwf	(?___fttol+3)
  9375  0C02  0833               	movf	(___fttol@lval+2),w
  9376  0C03  00AA               	movwf	(?___fttol+2)
  9377  0C04  0832               	movf	(___fttol@lval+1),w
  9378  0C05  00A9               	movwf	(?___fttol+1)
  9379  0C06  0831               	movf	(___fttol@lval),w
  9380  0C07  00A8               	movwf	(?___fttol)
  9381                           
  9382  0C08  2C09               	goto	l7637
  9383                           	
  9384  0C09                     l11097:	
  9385                           	line	73
  9386                           	
  9387  0C09                     l7637:	
  9388  0C09  0008               	return
  9389                           	opt stack 0
  9390                           GLOBAL	__end_of___fttol
  9391  0C0A                     	__end_of___fttol:
  9392 ;; =============== function ___fttol ends ============
  9393                           
  9394                           	signat	___fttol,4220
  9395                           	global	___ftpack
  9396                           psect	text1096,local,class=CODE,delta=2
  9397                           global __ptext1096
  9398  09C7                     __ptext1096:
  9399                           
  9400 ;; *************** function ___ftpack *****************
  9401 ;; Defined at:
  9402 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  arg             3    0[BANK0 ] unsigned um
  9405 ;;  exp             1    3[BANK0 ] unsigned char 
  9406 ;;  sign            1    4[BANK0 ] unsigned char 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;		None
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  3    0[BANK0 ] float 
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9418 ;;      Params:         0       5       0       0       0
  9419 ;;      Locals:         0       0       0       0       0
  9420 ;;      Temps:          0       3       0       0       0
  9421 ;;      Totals:         0       8       0       0       0
  9422 ;;Total ram usage:        8 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; Hardware stack levels required when called:    3
  9425 ;; This function calls:
  9426 ;;		Nothing
  9427 ;; This function is called by:
  9428 ;;		___ftmul
  9429 ;;		___awtoft
  9430 ;;		___ftadd
  9431 ;;		___ftdiv
  9432 ;;		___lbtoft
  9433 ;;		___abtoft
  9434 ;;		___lwtoft
  9435 ;;		___altoft
  9436 ;;		___lltoft
  9437 ;;		___attoft
  9438 ;;		___lttoft
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           psect	text1096
  9442                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  9443                           	line	63
  9444                           	global	__size_of___ftpack
  9445  007D                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  9446                           	
  9447  09C7                     ___ftpack:	
  9448                           	opt	stack 3
  9449                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9450                           	line	64
  9451                           	
  9452  09C7                     l10981:	
  9453  09C7  1283               	bcf	status, 5	;RP0=0, select bank0
  9454  09C8  1303               	bcf	status, 6	;RP1=0, select bank0
  9455  09C9  0823               	movf	(___ftpack@exp),w
  9456  09CA  1D03               	skipz
  9457  09CB  29CD               	goto	u4490
  9458  09CC  29D5               	goto	l10985
  9459  09CD                     u4490:
  9460                           	
  9461  09CD                     l10983:	
  9462  09CD  0822               	movf	(___ftpack@arg+2),w
  9463  09CE  0421               	iorwf	(___ftpack@arg+1),w
  9464  09CF  0420               	iorwf	(___ftpack@arg),w
  9465  09D0  1D03               	skipz
  9466  09D1  29D3               	goto	u4501
  9467  09D2  29D4               	goto	u4500
  9468  09D3                     u4501:
  9469  09D3  29EB               	goto	l10991
  9470  09D4                     u4500:
  9471  09D4  29D5               	goto	l10985
  9472                           	
  9473  09D5                     l7861:	
  9474                           	line	65
  9475                           	
  9476  09D5                     l10985:	
  9477  09D5  3000               	movlw	0x0
  9478  09D6  00A0               	movwf	(?___ftpack)
  9479  09D7  3000               	movlw	0x0
  9480  09D8  00A1               	movwf	(?___ftpack+1)
  9481  09D9  3000               	movlw	0x0
  9482  09DA  00A2               	movwf	(?___ftpack+2)
  9483  09DB  2A43               	goto	l7862
  9484                           	
  9485  09DC                     l10987:	
  9486  09DC  2A43               	goto	l7862
  9487                           	
  9488  09DD                     l7859:	
  9489                           	line	66
  9490  09DD  29EB               	goto	l10991
  9491                           	
  9492  09DE                     l7864:	
  9493                           	line	67
  9494                           	
  9495  09DE                     l10989:	
  9496  09DE  3001               	movlw	(01h)
  9497  09DF  00A5               	movwf	(??___ftpack+0)+0
  9498  09E0  0825               	movf	(??___ftpack+0)+0,w
  9499  09E1  07A3               	addwf	(___ftpack@exp),f
  9500                           	line	68
  9501  09E2  3001               	movlw	01h
  9502  09E3                     u4515:
  9503  09E3  1003               	clrc
  9504  09E4  0CA2               	rrf	(___ftpack@arg+2),f
  9505  09E5  0CA1               	rrf	(___ftpack@arg+1),f
  9506  09E6  0CA0               	rrf	(___ftpack@arg),f
  9507  09E7  3EFF               	addlw	-1
  9508  09E8  1D03               	skipz
  9509  09E9  29E3               	goto	u4515
  9510                           
  9511  09EA  29EB               	goto	l10991
  9512                           	line	69
  9513                           	
  9514  09EB                     l7863:	
  9515                           	line	66
  9516                           	
  9517  09EB                     l10991:	
  9518  09EB  30FE               	movlw	low highword(0FE0000h)
  9519  09EC  0522               	andwf	(___ftpack@arg+2),w
  9520  09ED  1D03               	btfss	status,2
  9521  09EE  29F0               	goto	u4521
  9522  09EF  29F1               	goto	u4520
  9523  09F0                     u4521:
  9524  09F0  29DE               	goto	l10989
  9525  09F1                     u4520:
  9526  09F1  2A09               	goto	l7866
  9527                           	
  9528  09F2                     l7865:	
  9529                           	line	70
  9530  09F2  2A09               	goto	l7866
  9531                           	
  9532  09F3                     l7867:	
  9533                           	line	71
  9534                           	
  9535  09F3                     l10993:	
  9536  09F3  3001               	movlw	(01h)
  9537  09F4  00A5               	movwf	(??___ftpack+0)+0
  9538  09F5  0825               	movf	(??___ftpack+0)+0,w
  9539  09F6  07A3               	addwf	(___ftpack@exp),f
  9540                           	line	72
  9541                           	
  9542  09F7                     l10995:	
  9543  09F7  3001               	movlw	01h
  9544  09F8  07A0               	addwf	(___ftpack@arg),f
  9545  09F9  3000               	movlw	0
  9546  09FA  1803               	skipnc
  9547  09FB  3001               movlw 1
  9548  09FC  07A1               	addwf	(___ftpack@arg+1),f
  9549  09FD  3000               	movlw	0
  9550  09FE  1803               	skipnc
  9551  09FF  3001               movlw 1
  9552  0A00  07A2               	addwf	(___ftpack@arg+2),f
  9553                           	line	73
  9554                           	
  9555  0A01                     l10997:	
  9556  0A01  3001               	movlw	01h
  9557  0A02                     u4535:
  9558  0A02  1003               	clrc
  9559  0A03  0CA2               	rrf	(___ftpack@arg+2),f
  9560  0A04  0CA1               	rrf	(___ftpack@arg+1),f
  9561  0A05  0CA0               	rrf	(___ftpack@arg),f
  9562  0A06  3EFF               	addlw	-1
  9563  0A07  1D03               	skipz
  9564  0A08  2A02               	goto	u4535
  9565                           
  9566                           	line	74
  9567                           	
  9568  0A09                     l7866:	
  9569                           	line	70
  9570  0A09  30FF               	movlw	low highword(0FF0000h)
  9571  0A0A  0522               	andwf	(___ftpack@arg+2),w
  9572  0A0B  1D03               	btfss	status,2
  9573  0A0C  2A0E               	goto	u4541
  9574  0A0D  2A0F               	goto	u4540
  9575  0A0E                     u4541:
  9576  0A0E  29F3               	goto	l10993
  9577  0A0F                     u4540:
  9578  0A0F  2A1C               	goto	l11001
  9579                           	
  9580  0A10                     l7868:	
  9581                           	line	75
  9582  0A10  2A1C               	goto	l11001
  9583                           	
  9584  0A11                     l7870:	
  9585                           	line	76
  9586                           	
  9587  0A11                     l10999:	
  9588  0A11  3001               	movlw	low(01h)
  9589  0A12  02A3               	subwf	(___ftpack@exp),f
  9590                           	line	77
  9591  0A13  3001               	movlw	01h
  9592  0A14                     u4555:
  9593  0A14  1003               	clrc
  9594  0A15  0DA0               	rlf	(___ftpack@arg),f
  9595  0A16  0DA1               	rlf	(___ftpack@arg+1),f
  9596  0A17  0DA2               	rlf	(___ftpack@arg+2),f
  9597  0A18  3EFF               	addlw	-1
  9598  0A19  1D03               	skipz
  9599  0A1A  2A14               	goto	u4555
  9600  0A1B  2A1C               	goto	l11001
  9601                           	line	78
  9602                           	
  9603  0A1C                     l7869:	
  9604                           	line	75
  9605                           	
  9606  0A1C                     l11001:	
  9607  0A1C  1FA1               	btfss	(___ftpack@arg+1),(15)&7
  9608  0A1D  2A1F               	goto	u4561
  9609  0A1E  2A20               	goto	u4560
  9610  0A1F                     u4561:
  9611  0A1F  2A11               	goto	l10999
  9612  0A20                     u4560:
  9613                           	
  9614  0A20                     l7871:	
  9615                           	line	79
  9616  0A20  1823               	btfsc	(___ftpack@exp),(0)&7
  9617  0A21  2A23               	goto	u4571
  9618  0A22  2A24               	goto	u4570
  9619  0A23                     u4571:
  9620  0A23  2A2A               	goto	l7872
  9621  0A24                     u4570:
  9622                           	line	80
  9623                           	
  9624  0A24                     l11003:	
  9625  0A24  30FF               	movlw	0FFh
  9626  0A25  05A0               	andwf	(___ftpack@arg),f
  9627  0A26  307F               	movlw	07Fh
  9628  0A27  05A1               	andwf	(___ftpack@arg+1),f
  9629  0A28  30FF               	movlw	0FFh
  9630  0A29  05A2               	andwf	(___ftpack@arg+2),f
  9631                           	
  9632  0A2A                     l7872:	
  9633                           	line	81
  9634  0A2A  1003               	clrc
  9635  0A2B  0CA3               	rrf	(___ftpack@exp),f
  9636                           
  9637                           	line	82
  9638                           	
  9639  0A2C                     l11005:	
  9640  0A2C  0823               	movf	(___ftpack@exp),w
  9641  0A2D  00A5               	movwf	((??___ftpack+0)+0)
  9642  0A2E  01A6               	clrf	((??___ftpack+0)+0+1)
  9643  0A2F  01A7               	clrf	((??___ftpack+0)+0+2)
  9644  0A30  3010               	movlw	010h
  9645  0A31                     u4585:
  9646  0A31  1003               	clrc
  9647  0A32  0DA5               	rlf	(??___ftpack+0)+0,f
  9648  0A33  0DA6               	rlf	(??___ftpack+0)+1,f
  9649  0A34  0DA7               	rlf	(??___ftpack+0)+2,f
  9650  0A35                     u4580:
  9651  0A35  3EFF               	addlw	-1
  9652  0A36  1D03               	skipz
  9653  0A37  2A31               	goto	u4585
  9654  0A38  0825               	movf	0+(??___ftpack+0)+0,w
  9655  0A39  04A0               	iorwf	(___ftpack@arg),f
  9656  0A3A  0826               	movf	1+(??___ftpack+0)+0,w
  9657  0A3B  04A1               	iorwf	(___ftpack@arg+1),f
  9658  0A3C  0827               	movf	2+(??___ftpack+0)+0,w
  9659  0A3D  04A2               	iorwf	(___ftpack@arg+2),f
  9660                           	line	83
  9661                           	
  9662  0A3E                     l11007:	
  9663  0A3E  0824               	movf	(___ftpack@sign),w
  9664  0A3F  1D03               	skipz
  9665  0A40  2A42               	goto	u4590
  9666  0A41  2A43               	goto	l7873
  9667  0A42                     u4590:
  9668                           	line	84
  9669                           	
  9670  0A42                     l11009:	
  9671  0A42  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  9672                           	
  9673  0A43                     l7873:	
  9674                           	line	85
  9675                           	line	86
  9676                           	
  9677  0A43                     l7862:	
  9678  0A43  0008               	return
  9679                           	opt stack 0
  9680                           GLOBAL	__end_of___ftpack
  9681  0A44                     	__end_of___ftpack:
  9682 ;; =============== function ___ftpack ends ============
  9683                           
  9684                           	signat	___ftpack,12411
  9685                           	global	___lwmod
  9686                           psect	text1097,local,class=CODE,delta=2
  9687                           global __ptext1097
  9688  15E7                     __ptext1097:
  9689                           
  9690 ;; *************** function ___lwmod *****************
  9691 ;; Defined at:
  9692 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  divisor         2   14[BANK0 ] unsigned int 
  9695 ;;  dividend        2   16[BANK0 ] unsigned int 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  counter         1   19[BANK0 ] unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  2   14[BANK0 ] unsigned int 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9707 ;;      Params:         0       4       0       0       0
  9708 ;;      Locals:         0       1       0       0       0
  9709 ;;      Temps:          0       1       0       0       0
  9710 ;;      Totals:         0       6       0       0       0
  9711 ;;Total ram usage:        6 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:    3
  9714 ;; This function calls:
  9715 ;;		Nothing
  9716 ;; This function is called by:
  9717 ;;		_sprintf
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           psect	text1097
  9721                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  9722                           	line	5
  9723                           	global	__size_of___lwmod
  9724  0046                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  9725                           	
  9726  15E7                     ___lwmod:	
  9727                           	opt	stack 1
  9728                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9729                           	line	8
  9730                           	
  9731  15E7                     l10889:	
  9732  15E7  1283               	bcf	status, 5	;RP0=0, select bank0
  9733  15E8  1303               	bcf	status, 6	;RP1=0, select bank0
  9734  15E9  082F               	movf	(___lwmod@divisor+1),w
  9735  15EA  042E               	iorwf	(___lwmod@divisor),w
  9736  15EB  1903               	skipnz
  9737  15EC  2DEE               	goto	u4191
  9738  15ED  2DEF               	goto	u4190
  9739  15EE                     u4191:
  9740  15EE  2E25               	goto	l10907
  9741  15EF                     u4190:
  9742                           	line	9
  9743                           	
  9744  15EF                     l10891:	
  9745  15EF  01B3               	clrf	(___lwmod@counter)
  9746  15F0  1403               	bsf	status,0
  9747  15F1  0DB3               	rlf	(___lwmod@counter),f
  9748                           	line	10
  9749  15F2  2DFF               	goto	l10897
  9750                           	
  9751  15F3                     l7545:	
  9752                           	line	11
  9753                           	
  9754  15F3                     l10893:	
  9755  15F3  3001               	movlw	01h
  9756                           	
  9757  15F4                     u4205:
  9758  15F4  1003               	clrc
  9759  15F5  0DAE               	rlf	(___lwmod@divisor),f
  9760  15F6  0DAF               	rlf	(___lwmod@divisor+1),f
  9761  15F7  3EFF               	addlw	-1
  9762  15F8  1D03               	skipz
  9763  15F9  2DF4               	goto	u4205
  9764                           	line	12
  9765                           	
  9766  15FA                     l10895:	
  9767  15FA  3001               	movlw	(01h)
  9768  15FB  00B2               	movwf	(??___lwmod+0)+0
  9769  15FC  0832               	movf	(??___lwmod+0)+0,w
  9770  15FD  07B3               	addwf	(___lwmod@counter),f
  9771  15FE  2DFF               	goto	l10897
  9772                           	line	13
  9773                           	
  9774  15FF                     l7544:	
  9775                           	line	10
  9776                           	
  9777  15FF                     l10897:	
  9778  15FF  1FAF               	btfss	(___lwmod@divisor+1),(15)&7
  9779  1600  2E02               	goto	u4211
  9780  1601  2E03               	goto	u4210
  9781  1602                     u4211:
  9782  1602  2DF3               	goto	l10893
  9783  1603                     u4210:
  9784  1603  2E05               	goto	l10899
  9785                           	
  9786  1604                     l7546:	
  9787  1604  2E05               	goto	l10899
  9788                           	line	14
  9789                           	
  9790  1605                     l7547:	
  9791                           	line	15
  9792                           	
  9793  1605                     l10899:	
  9794  1605  082F               	movf	(___lwmod@divisor+1),w
  9795  1606  0231               	subwf	(___lwmod@dividend+1),w
  9796  1607  1D03               	skipz
  9797  1608  2E0B               	goto	u4225
  9798  1609  082E               	movf	(___lwmod@divisor),w
  9799  160A  0230               	subwf	(___lwmod@dividend),w
  9800  160B                     u4225:
  9801  160B  1C03               	skipc
  9802  160C  2E0E               	goto	u4221
  9803  160D  2E0F               	goto	u4220
  9804  160E                     u4221:
  9805  160E  2E16               	goto	l10903
  9806  160F                     u4220:
  9807                           	line	16
  9808                           	
  9809  160F                     l10901:	
  9810  160F  082E               	movf	(___lwmod@divisor),w
  9811  1610  02B0               	subwf	(___lwmod@dividend),f
  9812  1611  082F               	movf	(___lwmod@divisor+1),w
  9813  1612  1C03               	skipc
  9814  1613  03B1               	decf	(___lwmod@dividend+1),f
  9815  1614  02B1               	subwf	(___lwmod@dividend+1),f
  9816  1615  2E16               	goto	l10903
  9817                           	
  9818  1616                     l7548:	
  9819                           	line	17
  9820                           	
  9821  1616                     l10903:	
  9822  1616  3001               	movlw	01h
  9823                           	
  9824  1617                     u4235:
  9825  1617  1003               	clrc
  9826  1618  0CAF               	rrf	(___lwmod@divisor+1),f
  9827  1619  0CAE               	rrf	(___lwmod@divisor),f
  9828  161A  3EFF               	addlw	-1
  9829  161B  1D03               	skipz
  9830  161C  2E17               	goto	u4235
  9831                           	line	18
  9832                           	
  9833  161D                     l10905:	
  9834  161D  3001               	movlw	low(01h)
  9835  161E  02B3               	subwf	(___lwmod@counter),f
  9836  161F  1D03               	btfss	status,2
  9837  1620  2E22               	goto	u4241
  9838  1621  2E23               	goto	u4240
  9839  1622                     u4241:
  9840  1622  2E05               	goto	l10899
  9841  1623                     u4240:
  9842  1623  2E25               	goto	l10907
  9843                           	
  9844  1624                     l7549:	
  9845  1624  2E25               	goto	l10907
  9846                           	line	19
  9847                           	
  9848  1625                     l7543:	
  9849                           	line	20
  9850                           	
  9851  1625                     l10907:	
  9852  1625  0831               	movf	(___lwmod@dividend+1),w
  9853  1626  01AF               	clrf	(?___lwmod+1)
  9854  1627  07AF               	addwf	(?___lwmod+1)
  9855  1628  0830               	movf	(___lwmod@dividend),w
  9856  1629  01AE               	clrf	(?___lwmod)
  9857  162A  07AE               	addwf	(?___lwmod)
  9858                           
  9859  162B  2E2C               	goto	l7550
  9860                           	
  9861  162C                     l10909:	
  9862                           	line	21
  9863                           	
  9864  162C                     l7550:	
  9865  162C  0008               	return
  9866                           	opt stack 0
  9867                           GLOBAL	__end_of___lwmod
  9868  162D                     	__end_of___lwmod:
  9869 ;; =============== function ___lwmod ends ============
  9870                           
  9871                           	signat	___lwmod,8314
  9872                           	global	___lwdiv
  9873                           psect	text1098,local,class=CODE,delta=2
  9874                           global __ptext1098
  9875  16BA                     __ptext1098:
  9876                           
  9877 ;; *************** function ___lwdiv *****************
  9878 ;; Defined at:
  9879 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;  divisor         2    6[BANK0 ] unsigned int 
  9882 ;;  dividend        2    8[BANK0 ] unsigned int 
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;  quotient        2   11[BANK0 ] unsigned int 
  9885 ;;  counter         1   13[BANK0 ] unsigned char 
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  2    6[BANK0 ] unsigned int 
  9888 ;; Registers used:
  9889 ;;		wreg, status,2, status,0
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9895 ;;      Params:         0       4       0       0       0
  9896 ;;      Locals:         0       3       0       0       0
  9897 ;;      Temps:          0       1       0       0       0
  9898 ;;      Totals:         0       8       0       0       0
  9899 ;;Total ram usage:        8 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; Hardware stack levels required when called:    3
  9902 ;; This function calls:
  9903 ;;		Nothing
  9904 ;; This function is called by:
  9905 ;;		_readAvgDistance
  9906 ;;		_ADCconvert
  9907 ;;		_sprintf
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           psect	text1098
  9911                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  9912                           	line	5
  9913                           	global	__size_of___lwdiv
  9914  0050                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  9915                           	
  9916  16BA                     ___lwdiv:	
  9917                           	opt	stack 1
  9918                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9919                           	line	9
  9920                           	
  9921  16BA                     l10863:	
  9922  16BA  1283               	bcf	status, 5	;RP0=0, select bank0
  9923  16BB  1303               	bcf	status, 6	;RP1=0, select bank0
  9924  16BC  01AB               	clrf	(___lwdiv@quotient)
  9925  16BD  01AC               	clrf	(___lwdiv@quotient+1)
  9926                           	line	10
  9927                           	
  9928  16BE                     l10865:	
  9929  16BE  0827               	movf	(___lwdiv@divisor+1),w
  9930  16BF  0426               	iorwf	(___lwdiv@divisor),w
  9931  16C0  1903               	skipnz
  9932  16C1  2EC3               	goto	u4121
  9933  16C2  2EC4               	goto	u4120
  9934  16C3                     u4121:
  9935  16C3  2F02               	goto	l10885
  9936  16C4                     u4120:
  9937                           	line	11
  9938                           	
  9939  16C4                     l10867:	
  9940  16C4  01AD               	clrf	(___lwdiv@counter)
  9941  16C5  1403               	bsf	status,0
  9942  16C6  0DAD               	rlf	(___lwdiv@counter),f
  9943                           	line	12
  9944  16C7  2ED4               	goto	l10873
  9945                           	
  9946  16C8                     l7535:	
  9947                           	line	13
  9948                           	
  9949  16C8                     l10869:	
  9950  16C8  3001               	movlw	01h
  9951                           	
  9952  16C9                     u4135:
  9953  16C9  1003               	clrc
  9954  16CA  0DA6               	rlf	(___lwdiv@divisor),f
  9955  16CB  0DA7               	rlf	(___lwdiv@divisor+1),f
  9956  16CC  3EFF               	addlw	-1
  9957  16CD  1D03               	skipz
  9958  16CE  2EC9               	goto	u4135
  9959                           	line	14
  9960                           	
  9961  16CF                     l10871:	
  9962  16CF  3001               	movlw	(01h)
  9963  16D0  00AA               	movwf	(??___lwdiv+0)+0
  9964  16D1  082A               	movf	(??___lwdiv+0)+0,w
  9965  16D2  07AD               	addwf	(___lwdiv@counter),f
  9966  16D3  2ED4               	goto	l10873
  9967                           	line	15
  9968                           	
  9969  16D4                     l7534:	
  9970                           	line	12
  9971                           	
  9972  16D4                     l10873:	
  9973  16D4  1FA7               	btfss	(___lwdiv@divisor+1),(15)&7
  9974  16D5  2ED7               	goto	u4141
  9975  16D6  2ED8               	goto	u4140
  9976  16D7                     u4141:
  9977  16D7  2EC8               	goto	l10869
  9978  16D8                     u4140:
  9979  16D8  2EDA               	goto	l10875
  9980                           	
  9981  16D9                     l7536:	
  9982  16D9  2EDA               	goto	l10875
  9983                           	line	16
  9984                           	
  9985  16DA                     l7537:	
  9986                           	line	17
  9987                           	
  9988  16DA                     l10875:	
  9989  16DA  3001               	movlw	01h
  9990                           	
  9991  16DB                     u4155:
  9992  16DB  1003               	clrc
  9993  16DC  0DAB               	rlf	(___lwdiv@quotient),f
  9994  16DD  0DAC               	rlf	(___lwdiv@quotient+1),f
  9995  16DE  3EFF               	addlw	-1
  9996  16DF  1D03               	skipz
  9997  16E0  2EDB               	goto	u4155
  9998                           	line	18
  9999  16E1  0827               	movf	(___lwdiv@divisor+1),w
 10000  16E2  0229               	subwf	(___lwdiv@dividend+1),w
 10001  16E3  1D03               	skipz
 10002  16E4  2EE7               	goto	u4165
 10003  16E5  0826               	movf	(___lwdiv@divisor),w
 10004  16E6  0228               	subwf	(___lwdiv@dividend),w
 10005  16E7                     u4165:
 10006  16E7  1C03               	skipc
 10007  16E8  2EEA               	goto	u4161
 10008  16E9  2EEB               	goto	u4160
 10009  16EA                     u4161:
 10010  16EA  2EF3               	goto	l10881
 10011  16EB                     u4160:
 10012                           	line	19
 10013                           	
 10014  16EB                     l10877:	
 10015  16EB  0826               	movf	(___lwdiv@divisor),w
 10016  16EC  02A8               	subwf	(___lwdiv@dividend),f
 10017  16ED  0827               	movf	(___lwdiv@divisor+1),w
 10018  16EE  1C03               	skipc
 10019  16EF  03A9               	decf	(___lwdiv@dividend+1),f
 10020  16F0  02A9               	subwf	(___lwdiv@dividend+1),f
 10021                           	line	20
 10022                           	
 10023  16F1                     l10879:	
 10024  16F1  142B               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 10025  16F2  2EF3               	goto	l10881
 10026                           	line	21
 10027                           	
 10028  16F3                     l7538:	
 10029                           	line	22
 10030                           	
 10031  16F3                     l10881:	
 10032  16F3  3001               	movlw	01h
 10033                           	
 10034  16F4                     u4175:
 10035  16F4  1003               	clrc
 10036  16F5  0CA7               	rrf	(___lwdiv@divisor+1),f
 10037  16F6  0CA6               	rrf	(___lwdiv@divisor),f
 10038  16F7  3EFF               	addlw	-1
 10039  16F8  1D03               	skipz
 10040  16F9  2EF4               	goto	u4175
 10041                           	line	23
 10042                           	
 10043  16FA                     l10883:	
 10044  16FA  3001               	movlw	low(01h)
 10045  16FB  02AD               	subwf	(___lwdiv@counter),f
 10046  16FC  1D03               	btfss	status,2
 10047  16FD  2EFF               	goto	u4181
 10048  16FE  2F00               	goto	u4180
 10049  16FF                     u4181:
 10050  16FF  2EDA               	goto	l10875
 10051  1700                     u4180:
 10052  1700  2F02               	goto	l10885
 10053                           	
 10054  1701                     l7539:	
 10055  1701  2F02               	goto	l10885
 10056                           	line	24
 10057                           	
 10058  1702                     l7533:	
 10059                           	line	25
 10060                           	
 10061  1702                     l10885:	
 10062  1702  082C               	movf	(___lwdiv@quotient+1),w
 10063  1703  01A7               	clrf	(?___lwdiv+1)
 10064  1704  07A7               	addwf	(?___lwdiv+1)
 10065  1705  082B               	movf	(___lwdiv@quotient),w
 10066  1706  01A6               	clrf	(?___lwdiv)
 10067  1707  07A6               	addwf	(?___lwdiv)
 10068                           
 10069  1708  2F09               	goto	l7540
 10070                           	
 10071  1709                     l10887:	
 10072                           	line	26
 10073                           	
 10074  1709                     l7540:	
 10075  1709  0008               	return
 10076                           	opt stack 0
 10077                           GLOBAL	__end_of___lwdiv
 10078  170A                     	__end_of___lwdiv:
 10079 ;; =============== function ___lwdiv ends ============
 10080                           
 10081                           	signat	___lwdiv,8314
 10082                           	global	___wmul
 10083                           psect	text1099,local,class=CODE,delta=2
 10084                           global __ptext1099
 10085  1423                     __ptext1099:
 10086                           
 10087 ;; *************** function ___wmul *****************
 10088 ;; Defined at:
 10089 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10092 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;  product         2    4[BANK0 ] unsigned int 
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  2    0[BANK0 ] unsigned int 
 10097 ;; Registers used:
 10098 ;;		wreg, status,2, status,0
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10104 ;;      Params:         0       4       0       0       0
 10105 ;;      Locals:         0       2       0       0       0
 10106 ;;      Temps:          0       0       0       0       0
 10107 ;;      Totals:         0       6       0       0       0
 10108 ;;Total ram usage:        6 bytes
 10109 ;; Hardware stack levels used:    1
 10110 ;; Hardware stack levels required when called:    3
 10111 ;; This function calls:
 10112 ;;		Nothing
 10113 ;; This function is called by:
 10114 ;;		_ADCconvert
 10115 ;;		_abs
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           psect	text1099
 10119                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 10120                           	line	3
 10121                           	global	__size_of___wmul
 10122  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 10123                           	
 10124  1423                     ___wmul:	
 10125                           	opt	stack 1
 10126                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10127                           	line	4
 10128                           	
 10129  1423                     l10851:	
 10130  1423  1283               	bcf	status, 5	;RP0=0, select bank0
 10131  1424  1303               	bcf	status, 6	;RP1=0, select bank0
 10132  1425  01A4               	clrf	(___wmul@product)
 10133  1426  01A5               	clrf	(___wmul@product+1)
 10134  1427  2C28               	goto	l10853
 10135                           	line	6
 10136                           	
 10137  1428                     l7527:	
 10138                           	line	7
 10139                           	
 10140  1428                     l10853:	
 10141  1428  1C20               	btfss	(___wmul@multiplier),(0)&7
 10142  1429  2C2B               	goto	u4081
 10143  142A  2C2C               	goto	u4080
 10144  142B                     u4081:
 10145  142B  2C32               	goto	l7528
 10146  142C                     u4080:
 10147                           	line	8
 10148                           	
 10149  142C                     l10855:	
 10150  142C  0822               	movf	(___wmul@multiplicand),w
 10151  142D  07A4               	addwf	(___wmul@product),f
 10152  142E  1803               	skipnc
 10153  142F  0AA5               	incf	(___wmul@product+1),f
 10154  1430  0823               	movf	(___wmul@multiplicand+1),w
 10155  1431  07A5               	addwf	(___wmul@product+1),f
 10156                           	
 10157  1432                     l7528:	
 10158                           	line	9
 10159  1432  3001               	movlw	01h
 10160                           	
 10161  1433                     u4095:
 10162  1433  1003               	clrc
 10163  1434  0DA2               	rlf	(___wmul@multiplicand),f
 10164  1435  0DA3               	rlf	(___wmul@multiplicand+1),f
 10165  1436  3EFF               	addlw	-1
 10166  1437  1D03               	skipz
 10167  1438  2C33               	goto	u4095
 10168                           	line	10
 10169                           	
 10170  1439                     l10857:	
 10171  1439  3001               	movlw	01h
 10172                           	
 10173  143A                     u4105:
 10174  143A  1003               	clrc
 10175  143B  0CA1               	rrf	(___wmul@multiplier+1),f
 10176  143C  0CA0               	rrf	(___wmul@multiplier),f
 10177  143D  3EFF               	addlw	-1
 10178  143E  1D03               	skipz
 10179  143F  2C3A               	goto	u4105
 10180                           	line	11
 10181  1440  0821               	movf	((___wmul@multiplier+1)),w
 10182  1441  0420               	iorwf	((___wmul@multiplier)),w
 10183  1442  1D03               	skipz
 10184  1443  2C45               	goto	u4111
 10185  1444  2C46               	goto	u4110
 10186  1445                     u4111:
 10187  1445  2C28               	goto	l10853
 10188  1446                     u4110:
 10189  1446  2C47               	goto	l10859
 10190                           	
 10191  1447                     l7529:	
 10192                           	line	12
 10193                           	
 10194  1447                     l10859:	
 10195  1447  0825               	movf	(___wmul@product+1),w
 10196  1448  01A1               	clrf	(?___wmul+1)
 10197  1449  07A1               	addwf	(?___wmul+1)
 10198  144A  0824               	movf	(___wmul@product),w
 10199  144B  01A0               	clrf	(?___wmul)
 10200  144C  07A0               	addwf	(?___wmul)
 10201                           
 10202  144D  2C4E               	goto	l7530
 10203                           	
 10204  144E                     l10861:	
 10205                           	line	13
 10206                           	
 10207  144E                     l7530:	
 10208  144E  0008               	return
 10209                           	opt stack 0
 10210                           GLOBAL	__end_of___wmul
 10211  144F                     	__end_of___wmul:
 10212 ;; =============== function ___wmul ends ============
 10213                           
 10214                           	signat	___wmul,8314
 10215                           	global	_ser_isrx
 10216                           psect	text1100,local,class=CODE,delta=2
 10217                           global __ptext1100
 10218  1348                     __ptext1100:
 10219                           
 10220 ;; *************** function _ser_isrx *****************
 10221 ;; Defined at:
 10222 ;;		line 45 in file "H:\Aldnoah.Zero-master\Assignment3\ser.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;		None               void
 10229 ;; Registers used:
 10230 ;;		wreg, status,2, status,0
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10236 ;;      Params:         0       0       0       0       0
 10237 ;;      Locals:         0       0       0       0       0
 10238 ;;      Temps:          0       0       0       0       0
 10239 ;;      Totals:         0       0       0       0       0
 10240 ;;Total ram usage:        0 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:    3
 10243 ;; This function calls:
 10244 ;;		Nothing
 10245 ;; This function is called by:
 10246 ;;		_ser_getch
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           psect	text1100
 10250                           	file	"H:\Aldnoah.Zero-master\Assignment3\ser.c"
 10251                           	line	45
 10252                           	global	__size_of_ser_isrx
 10253  0017                     	__size_of_ser_isrx	equ	__end_of_ser_isrx-_ser_isrx
 10254                           	
 10255  1348                     _ser_isrx:	
 10256                           	opt	stack 1
 10257                           ; Regs used in _ser_isrx: [wreg+status,2+status,0]
 10258                           	line	46
 10259                           	
 10260  1348                     l10803:	
 10261                           ;ser.c: 46: if(OERR) {
 10262  1348  1283               	bcf	status, 5	;RP0=0, select bank0
 10263  1349  1303               	bcf	status, 6	;RP1=0, select bank0
 10264  134A  1C98               	btfss	(193/8),(193)&7
 10265  134B  2B4D               	goto	u4011
 10266  134C  2B4E               	goto	u4010
 10267  134D                     u4011:
 10268  134D  2B53               	goto	l10811
 10269  134E                     u4010:
 10270                           	line	47
 10271                           	
 10272  134E                     l10805:	
 10273                           ;ser.c: 47: CREN = 0;
 10274  134E  1218               	bcf	(196/8),(196)&7
 10275                           	line	48
 10276                           ;ser.c: 48: CREN = 1;
 10277  134F  1618               	bsf	(196/8),(196)&7
 10278                           	line	49
 10279                           	
 10280  1350                     l10807:	
 10281                           ;ser.c: 49: return 0;
 10282  1350  1003               	clrc
 10283                           	
 10284  1351  2B5E               	goto	l6782
 10285                           	
 10286  1352                     l10809:	
 10287  1352  2B5E               	goto	l6782
 10288                           	line	50
 10289                           	
 10290  1353                     l6781:	
 10291                           	line	51
 10292                           	
 10293  1353                     l10811:	
 10294                           ;ser.c: 50: }
 10295                           ;ser.c: 51: return (rxiptr!=rxoptr);
 10296  1353  086D               	movf	(_rxiptr),w	;volatile
 10297  1354  066E               	xorwf	(_rxoptr),w	;volatile
 10298  1355  1D03               	skipz
 10299  1356  2B58               	goto	u4021
 10300  1357  2B59               	goto	u4020
 10301  1358                     u4021:
 10302  1358  2B5B               	goto	l10815
 10303  1359                     u4020:
 10304                           	
 10305  1359                     l10813:	
 10306  1359  1003               	clrc
 10307                           	
 10308  135A  2B5E               	goto	l6782
 10309                           	
 10310  135B                     l10457:	
 10311                           	
 10312  135B                     l10815:	
 10313  135B  1403               	setc
 10314                           	
 10315  135C  2B5E               	goto	l6782
 10316                           	
 10317  135D                     l10459:	
 10318  135D  2B5E               	goto	l6782
 10319                           	
 10320  135E                     l10817:	
 10321                           	line	52
 10322                           	
 10323  135E                     l6782:	
 10324  135E  0008               	return
 10325                           	opt stack 0
 10326                           GLOBAL	__end_of_ser_isrx
 10327  135F                     	__end_of_ser_isrx:
 10328 ;; =============== function _ser_isrx ends ============
 10329                           
 10330                           	signat	_ser_isrx,88
 10331                           	global	_spi_transfer
 10332                           psect	text1101,local,class=CODE,delta=2
 10333                           global __ptext1101
 10334  12F4                     __ptext1101:
 10335                           
 10336 ;; *************** function _spi_transfer *****************
 10337 ;; Defined at:
 10338 ;;		line 34 in file "H:\Aldnoah.Zero-master\Assignment3\steppermotor.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  data            1    wreg     unsigned char 
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;  data            1    2[BANK0 ] unsigned char 
 10343 ;;  temp            1    1[BANK0 ] unsigned char 
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      unsigned char 
 10346 ;; Registers used:
 10347 ;;		wreg
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10353 ;;      Params:         0       0       0       0       0
 10354 ;;      Locals:         0       2       0       0       0
 10355 ;;      Temps:          0       1       0       0       0
 10356 ;;      Totals:         0       3       0       0       0
 10357 ;;Total ram usage:        3 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; Hardware stack levels required when called:    3
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_rotate
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           psect	text1101
 10367                           	file	"H:\Aldnoah.Zero-master\Assignment3\steppermotor.c"
 10368                           	line	34
 10369                           	global	__size_of_spi_transfer
 10370  0014                     	__size_of_spi_transfer	equ	__end_of_spi_transfer-_spi_transfer
 10371                           	
 10372  12F4                     _spi_transfer:	
 10373                           	opt	stack 3
 10374                           ; Regs used in _spi_transfer: [wreg]
 10375                           ;spi_transfer@data stored from wreg
 10376  12F4  1283               	bcf	status, 5	;RP0=0, select bank0
 10377  12F5  1303               	bcf	status, 6	;RP1=0, select bank0
 10378  12F6  00A2               	movwf	(spi_transfer@data)
 10379                           	line	35
 10380                           	
 10381  12F7                     l10689:	
 10382                           ;steppermotor.c: 35: unsigned char temp = 0;
 10383  12F7  01A1               	clrf	(spi_transfer@temp)
 10384                           	line	37
 10385                           ;steppermotor.c: 37: SSPIF = 0;
 10386  12F8  118C               	bcf	(99/8),(99)&7
 10387                           	line	38
 10388                           	
 10389  12F9                     l10691:	
 10390                           ;steppermotor.c: 38: SSPBUF = data;
 10391  12F9  0822               	movf	(spi_transfer@data),w
 10392  12FA  0093               	movwf	(19)	;volatile
 10393                           	line	40
 10394                           ;steppermotor.c: 40: while (SSPIF == 0);
 10395  12FB  2AFC               	goto	l3737
 10396                           	
 10397  12FC                     l3738:	
 10398                           	
 10399  12FC                     l3737:	
 10400  12FC  1D8C               	btfss	(99/8),(99)&7
 10401  12FD  2AFF               	goto	u3811
 10402  12FE  2B00               	goto	u3810
 10403  12FF                     u3811:
 10404  12FF  2AFC               	goto	l3737
 10405  1300                     u3810:
 10406  1300  2B01               	goto	l10693
 10407                           	
 10408  1301                     l3739:	
 10409                           	line	41
 10410                           	
 10411  1301                     l10693:	
 10412                           ;steppermotor.c: 41: temp = SSPBUF;
 10413  1301  0813               	movf	(19),w	;volatile
 10414  1302  00A0               	movwf	(??_spi_transfer+0)+0
 10415  1303  0820               	movf	(??_spi_transfer+0)+0,w
 10416  1304  00A1               	movwf	(spi_transfer@temp)
 10417                           	line	42
 10418                           	
 10419  1305                     l10695:	
 10420                           ;steppermotor.c: 42: SSPIF = 0;
 10421  1305  118C               	bcf	(99/8),(99)&7
 10422  1306  2B07               	goto	l3740
 10423                           	line	44
 10424                           	
 10425  1307                     l10697:	
 10426                           	line	45
 10427                           ;steppermotor.c: 44: return temp;
 10428                           ;	Return value of _spi_transfer is never used
 10429                           	
 10430  1307                     l3740:	
 10431  1307  0008               	return
 10432                           	opt stack 0
 10433                           GLOBAL	__end_of_spi_transfer
 10434  1308                     	__end_of_spi_transfer:
 10435 ;; =============== function _spi_transfer ends ============
 10436                           
 10437                           	signat	_spi_transfer,4217
 10438                           	global	_Menu
 10439                           psect	text1102,local,class=CODE,delta=2
 10440                           global __ptext1102
 10441  1673                     __ptext1102:
 10442                           
 10443 ;; *************** function _Menu *****************
 10444 ;; Defined at:
 10445 ;;		line 181 in file "H:\Aldnoah.Zero-master\Assignment3\HMI.c"
 10446 ;; Parameters:    Size  Location     Type
 10447 ;;  BTN_input       1    wreg     unsigned char 
 10448 ;; Auto vars:     Size  Location     Type
 10449 ;;  BTN_input       1    0[BANK0 ] unsigned char 
 10450 ;; Return value:  Size  Location     Type
 10451 ;;                  1    wreg      unsigned char 
 10452 ;; Registers used:
 10453 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10454 ;; Tracked objects:
 10455 ;;		On entry : 0/0
 10456 ;;		On exit  : 0/0
 10457 ;;		Unchanged: 0/0
 10458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10459 ;;      Params:         0       0       0       0       0
 10460 ;;      Locals:         0       1       0       0       0
 10461 ;;      Temps:          0       0       0       0       0
 10462 ;;      Totals:         0       1       0       0       0
 10463 ;;Total ram usage:        1 bytes
 10464 ;; Hardware stack levels used:    1
 10465 ;; Hardware stack levels required when called:    3
 10466 ;; This function calls:
 10467 ;;		Nothing
 10468 ;; This function is called by:
 10469 ;;		_main
 10470 ;; This function uses a non-reentrant model
 10471 ;;
 10472                           psect	text1102
 10473                           	file	"H:\Aldnoah.Zero-master\Assignment3\HMI.c"
 10474                           	line	181
 10475                           	global	__size_of_Menu
 10476  0047                     	__size_of_Menu	equ	__end_of_Menu-_Menu
 10477                           	
 10478  1673                     _Menu:	
 10479                           	opt	stack 4
 10480                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0]
 10481                           ;Menu@BTN_input stored from wreg
 10482  1673  1283               	bcf	status, 5	;RP0=0, select bank0
 10483  1674  1303               	bcf	status, 6	;RP1=0, select bank0
 10484  1675  00A0               	movwf	(Menu@BTN_input)
 10485                           	line	182
 10486                           	
 10487  1676                     l10665:	
 10488                           ;HMI.c: 182: switch (BTN_input)
 10489  1676  2EA5               	goto	l10683
 10490                           	line	184
 10491                           ;HMI.c: 183: {
 10492                           ;HMI.c: 184: case 1:
 10493                           	
 10494  1677                     l4569:	
 10495                           	line	186
 10496                           ;HMI.c: 186: break;
 10497  1677  2EB7               	goto	l10685
 10498                           	line	187
 10499                           ;HMI.c: 187: case 2:
 10500                           	
 10501  1678                     l4571:	
 10502                           	line	189
 10503                           ;HMI.c: 189: break;
 10504  1678  2EB7               	goto	l10685
 10505                           	line	190
 10506                           ;HMI.c: 190: case 3:
 10507                           	
 10508  1679                     l4572:	
 10509                           	line	191
 10510                           	
 10511  1679                     l10667:	
 10512                           ;HMI.c: 191: pos--;
 10513  1679  30FF               	movlw	low(-1)
 10514  167A  1683               	bsf	status, 5	;RP0=1, select bank1
 10515  167B  1303               	bcf	status, 6	;RP1=0, select bank1
 10516  167C  07BC               	addwf	(_pos)^080h,f
 10517  167D  1803               	skipnc
 10518  167E  0ABD               	incf	(_pos+1)^080h,f
 10519  167F  30FF               	movlw	high(-1)
 10520  1680  07BD               	addwf	(_pos+1)^080h,f
 10521                           	line	192
 10522                           	
 10523  1681                     l10669:	
 10524                           ;HMI.c: 192: if (pos < 0)
 10525  1681  1FBD               	btfss	(_pos+1)^080h,7
 10526  1682  2E84               	goto	u3791
 10527  1683  2E85               	goto	u3790
 10528  1684                     u3791:
 10529  1684  2EB7               	goto	l10685
 10530  1685                     u3790:
 10531                           	line	193
 10532                           	
 10533  1685                     l10671:	
 10534                           ;HMI.c: 193: pos = 6 - 1;
 10535  1685  3005               	movlw	low(05h)
 10536  1686  00BC               	movwf	(_pos)^080h
 10537  1687  3000               	movlw	high(05h)
 10538  1688  00BD               	movwf	((_pos)^080h)+1
 10539  1689  2EB7               	goto	l10685
 10540                           	
 10541  168A                     l4573:	
 10542                           	line	195
 10543                           ;HMI.c: 195: break;
 10544  168A  2EB7               	goto	l10685
 10545                           	line	196
 10546                           ;HMI.c: 196: case 4:
 10547                           	
 10548  168B                     l4574:	
 10549                           	line	197
 10550                           	
 10551  168B                     l10673:	
 10552                           ;HMI.c: 197: pos++;
 10553  168B  3001               	movlw	low(01h)
 10554  168C  1683               	bsf	status, 5	;RP0=1, select bank1
 10555  168D  1303               	bcf	status, 6	;RP1=0, select bank1
 10556  168E  07BC               	addwf	(_pos)^080h,f
 10557  168F  1803               	skipnc
 10558  1690  0ABD               	incf	(_pos+1)^080h,f
 10559  1691  3000               	movlw	high(01h)
 10560  1692  07BD               	addwf	(_pos+1)^080h,f
 10561                           	line	198
 10562                           ;HMI.c: 198: if (pos == 6)
 10563  1693  3006               	movlw	06h
 10564  1694  063C               	xorwf	(_pos)^080h,w
 10565  1695  043D               	iorwf	(_pos+1)^080h,w
 10566  1696  1D03               	skipz
 10567  1697  2E99               	goto	u3801
 10568  1698  2E9A               	goto	u3800
 10569  1699                     u3801:
 10570  1699  2EB7               	goto	l10685
 10571  169A                     u3800:
 10572                           	line	199
 10573                           	
 10574  169A                     l10675:	
 10575                           ;HMI.c: 199: pos = 0;
 10576  169A  01BC               	clrf	(_pos)^080h
 10577  169B  01BD               	clrf	(_pos+1)^080h
 10578  169C  2EB7               	goto	l10685
 10579                           	
 10580  169D                     l4575:	
 10581                           	line	201
 10582                           ;HMI.c: 201: break;
 10583  169D  2EB7               	goto	l10685
 10584                           	line	202
 10585                           ;HMI.c: 202: case 5:
 10586                           	
 10587  169E                     l4576:	
 10588                           	line	203
 10589                           	
 10590  169E                     l10677:	
 10591                           ;HMI.c: 203: return pos;
 10592  169E  1683               	bsf	status, 5	;RP0=1, select bank1
 10593  169F  1303               	bcf	status, 6	;RP1=0, select bank1
 10594  16A0  083C               	movf	(_pos)^080h,w
 10595  16A1  2EB9               	goto	l4577
 10596                           	
 10597  16A2                     l10679:	
 10598  16A2  2EB9               	goto	l4577
 10599                           	line	206
 10600                           ;HMI.c: 206: default:
 10601                           	
 10602  16A3                     l4578:	
 10603                           	line	208
 10604                           ;HMI.c: 208: break;
 10605  16A3  2EB7               	goto	l10685
 10606                           	line	209
 10607                           	
 10608  16A4                     l10681:	
 10609                           ;HMI.c: 209: }
 10610  16A4  2EB7               	goto	l10685
 10611                           	line	182
 10612                           	
 10613  16A5                     l4568:	
 10614                           	
 10615  16A5                     l10683:	
 10616  16A5  1283               	bcf	status, 5	;RP0=0, select bank0
 10617  16A6  0820               	movf	(Menu@BTN_input),w
 10618                           	; Switch size 1, requested type "space"
 10619                           ; Number of cases is 5, Range of values is 1 to 5
 10620                           ; switch strategies available:
 10621                           ; Name         Instructions Cycles
 10622                           ; simple_byte           16     9 (average)
 10623                           ; direct_byte           26    11 (fixed)
 10624                           ; jumptable            263     9 (fixed)
 10625                           ;	Chosen strategy is simple_byte
 10626                           
 10627                           	opt asmopt_off
 10628  16A7  3A01               	xorlw	1^0	; case 1
 10629  16A8  1903               	skipnz
 10630  16A9  2EB7               	goto	l10685
 10631  16AA  3A03               	xorlw	2^1	; case 2
 10632  16AB  1903               	skipnz
 10633  16AC  2EB7               	goto	l10685
 10634  16AD  3A01               	xorlw	3^2	; case 3
 10635  16AE  1903               	skipnz
 10636  16AF  2E79               	goto	l10667
 10637  16B0  3A07               	xorlw	4^3	; case 4
 10638  16B1  1903               	skipnz
 10639  16B2  2E8B               	goto	l10673
 10640  16B3  3A01               	xorlw	5^4	; case 5
 10641  16B4  1903               	skipnz
 10642  16B5  2E9E               	goto	l10677
 10643  16B6  2EB7               	goto	l10685
 10644                           	opt asmopt_on
 10645                           
 10646                           	line	209
 10647                           	
 10648  16B7                     l4570:	
 10649                           	line	210
 10650                           	
 10651  16B7                     l10685:	
 10652                           ;HMI.c: 210: return 255;
 10653  16B7  30FF               	movlw	(0FFh)
 10654  16B8  2EB9               	goto	l4577
 10655                           	
 10656  16B9                     l10687:	
 10657                           	line	211
 10658                           	
 10659  16B9                     l4577:	
 10660  16B9  0008               	return
 10661                           	opt stack 0
 10662                           GLOBAL	__end_of_Menu
 10663  16BA                     	__end_of_Menu:
 10664 ;; =============== function _Menu ends ============
 10665                           
 10666                           	signat	_Menu,4217
 10667                           	global	_ser_putch
 10668                           psect	text1103,local,class=CODE,delta=2
 10669                           global __ptext1103
 10670  1381                     __ptext1103:
 10671                           
 10672 ;; *************** function _ser_putch *****************
 10673 ;; Defined at:
 10674 ;;		line 70 in file "H:\Aldnoah.Zero-master\Assignment3\ser.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  c               1    wreg     unsigned char 
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;  c               1    1[BANK0 ] unsigned char 
 10679 ;; Return value:  Size  Location     Type
 10680 ;;		None               void
 10681 ;; Registers used:
 10682 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10683 ;; Tracked objects:
 10684 ;;		On entry : 0/0
 10685 ;;		On exit  : 0/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10688 ;;      Params:         0       0       0       0       0
 10689 ;;      Locals:         0       1       0       0       0
 10690 ;;      Temps:          0       1       0       0       0
 10691 ;;      Totals:         0       2       0       0       0
 10692 ;;Total ram usage:        2 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; Hardware stack levels required when called:    3
 10695 ;; This function calls:
 10696 ;;		Nothing
 10697 ;; This function is called by:
 10698 ;;		_ChargeMode
 10699 ;;		_robo_init
 10700 ;;		_robot_read
 10701 ;;		_robotMoveSpeed
 10702 ;;		_robotMove
 10703 ;;		_robotTurn
 10704 ;;		_ser_puts
 10705 ;;		_ser_puts2
 10706 ;;		_ser_puthex
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           psect	text1103
 10710                           	file	"H:\Aldnoah.Zero-master\Assignment3\ser.c"
 10711                           	line	70
 10712                           	global	__size_of_ser_putch
 10713  0026                     	__size_of_ser_putch	equ	__end_of_ser_putch-_ser_putch
 10714                           	
 10715  1381                     _ser_putch:	
 10716                           	opt	stack 3
 10717                           ; Regs used in _ser_putch: [wreg-fsr0h+status,2+status,0]
 10718                           ;ser_putch@c stored from wreg
 10719  1381  1283               	bcf	status, 5	;RP0=0, select bank0
 10720  1382  1303               	bcf	status, 6	;RP1=0, select bank0
 10721  1383  00A1               	movwf	(ser_putch@c)
 10722                           	line	71
 10723                           	
 10724  1384                     l10653:	
 10725                           ;ser.c: 71: while (((txiptr+1) & (16-1))==txoptr)
 10726  1384  2B86               	goto	l10655
 10727                           	
 10728  1385                     l6792:	
 10729                           	line	72
 10730                           ;ser.c: 72: continue;
 10731  1385  2B86               	goto	l10655
 10732                           	
 10733  1386                     l6791:	
 10734                           	line	71
 10735                           	
 10736  1386                     l10655:	
 10737  1386  1283               	bcf	status, 5	;RP0=0, select bank0
 10738  1387  086F               	movf	(_txiptr),w	;volatile
 10739  1388  3E01               	addlw	01h
 10740  1389  390F               	andlw	0Fh
 10741  138A  1683               	bsf	status, 5	;RP0=1, select bank1
 10742  138B  1303               	bcf	status, 6	;RP1=0, select bank1
 10743  138C  0653               	xorwf	(_txoptr)^080h,w	;volatile
 10744  138D  1903               	skipnz
 10745  138E  2B90               	goto	u3781
 10746  138F  2B91               	goto	u3780
 10747  1390                     u3781:
 10748  1390  2B86               	goto	l10655
 10749  1391                     u3780:
 10750                           	
 10751  1391                     l6793:	
 10752                           	line	73
 10753                           ;ser.c: 73: GIE=0;
 10754  1391  138B               	bcf	(95/8),(95)&7
 10755                           	line	74
 10756                           	
 10757  1392                     l10657:	
 10758                           ;ser.c: 74: txfifo[txiptr] = c;
 10759  1392  1283               	bcf	status, 5	;RP0=0, select bank0
 10760  1393  1303               	bcf	status, 6	;RP1=0, select bank0
 10761  1394  0821               	movf	(ser_putch@c),w
 10762  1395  00A0               	movwf	(??_ser_putch+0)+0
 10763  1396  086F               	movf	(_txiptr),w
 10764  1397  3EA0               	addlw	_txfifo&0ffh
 10765  1398  0084               	movwf	fsr0
 10766  1399  0820               	movf	(??_ser_putch+0)+0,w
 10767  139A  1783               	bsf	status, 7	;select IRP bank3
 10768  139B  0080               	movwf	indf
 10769                           	line	75
 10770                           	
 10771  139C                     l10659:	
 10772                           ;ser.c: 75: txiptr=(txiptr+1) & (16-1);
 10773  139C  086F               	movf	(_txiptr),w	;volatile
 10774  139D  3E01               	addlw	01h
 10775  139E  390F               	andlw	0Fh
 10776  139F  00A0               	movwf	(??_ser_putch+0)+0
 10777  13A0  0820               	movf	(??_ser_putch+0)+0,w
 10778  13A1  00EF               	movwf	(_txiptr)	;volatile
 10779                           	line	76
 10780                           	
 10781  13A2                     l10661:	
 10782                           ;ser.c: 76: TXIE=1;
 10783  13A2  1683               	bsf	status, 5	;RP0=1, select bank1
 10784  13A3  1303               	bcf	status, 6	;RP1=0, select bank1
 10785  13A4  160C               	bsf	(1124/8)^080h,(1124)&7
 10786                           	line	77
 10787                           	
 10788  13A5                     l10663:	
 10789                           ;ser.c: 77: GIE=1;
 10790  13A5  178B               	bsf	(95/8),(95)&7
 10791                           	line	78
 10792                           	
 10793  13A6                     l6794:	
 10794  13A6  0008               	return
 10795                           	opt stack 0
 10796                           GLOBAL	__end_of_ser_putch
 10797  13A7                     	__end_of_ser_putch:
 10798 ;; =============== function _ser_putch ends ============
 10799                           
 10800                           	signat	_ser_putch,4216
 10801                           	global	_ser_init
 10802                           psect	text1104,local,class=CODE,delta=2
 10803                           global __ptext1104
 10804  13A7                     __ptext1104:
 10805                           
 10806 ;; *************** function _ser_init *****************
 10807 ;; Defined at:
 10808 ;;		line 113 in file "H:\Aldnoah.Zero-master\Assignment3\ser.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;		None
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;		None
 10813 ;; Return value:  Size  Location     Type
 10814 ;;		None               void
 10815 ;; Registers used:
 10816 ;;		wreg, status,2, status,0
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10822 ;;      Params:         0       0       0       0       0
 10823 ;;      Locals:         0       0       0       0       0
 10824 ;;      Temps:          0       1       0       0       0
 10825 ;;      Totals:         0       1       0       0       0
 10826 ;;Total ram usage:        1 bytes
 10827 ;; Hardware stack levels used:    1
 10828 ;; Hardware stack levels required when called:    3
 10829 ;; This function calls:
 10830 ;;		Nothing
 10831 ;; This function is called by:
 10832 ;;		_init
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           psect	text1104
 10836                           	file	"H:\Aldnoah.Zero-master\Assignment3\ser.c"
 10837                           	line	113
 10838                           	global	__size_of_ser_init
 10839  0028                     	__size_of_ser_init	equ	__end_of_ser_init-_ser_init
 10840                           	
 10841  13A7                     _ser_init:	
 10842                           	opt	stack 3
 10843                           ; Regs used in _ser_init: [wreg+status,2+status,0]
 10844                           	line	114
 10845                           	
 10846  13A7                     l10597:	
 10847                           ;ser.c: 114: TRISC |= 0b10000000;
 10848  13A7  1683               	bsf	status, 5	;RP0=1, select bank1
 10849  13A8  1303               	bcf	status, 6	;RP1=0, select bank1
 10850  13A9  1787               	bsf	(135)^080h+(7/8),(7)&7	;volatile
 10851                           	line	115
 10852                           	
 10853  13AA                     l10599:	
 10854                           ;ser.c: 115: TRISC &= 0b10111111;
 10855  13AA  30BF               	movlw	(0BFh)
 10856  13AB  1283               	bcf	status, 5	;RP0=0, select bank0
 10857  13AC  1303               	bcf	status, 6	;RP1=0, select bank0
 10858  13AD  00A0               	movwf	(??_ser_init+0)+0
 10859  13AE  0820               	movf	(??_ser_init+0)+0,w
 10860  13AF  1683               	bsf	status, 5	;RP0=1, select bank1
 10861  13B0  1303               	bcf	status, 6	;RP1=0, select bank1
 10862  13B1  0587               	andwf	(135)^080h,f	;volatile
 10863                           	line	116
 10864                           	
 10865  13B2                     l10601:	
 10866                           ;ser.c: 116: BRGH=1;
 10867  13B2  1518               	bsf	(1218/8)^080h,(1218)&7
 10868                           	line	118
 10869                           	
 10870  13B3                     l10603:	
 10871                           ;ser.c: 118: SPBRG=20;
 10872  13B3  3014               	movlw	(014h)
 10873  13B4  0099               	movwf	(153)^080h	;volatile
 10874                           	line	121
 10875                           	
 10876  13B5                     l10605:	
 10877                           ;ser.c: 121: TX9=0;
 10878  13B5  1318               	bcf	(1222/8)^080h,(1222)&7
 10879                           	line	122
 10880                           	
 10881  13B6                     l10607:	
 10882                           ;ser.c: 122: RX9=0;
 10883  13B6  1283               	bcf	status, 5	;RP0=0, select bank0
 10884  13B7  1303               	bcf	status, 6	;RP1=0, select bank0
 10885  13B8  1318               	bcf	(198/8),(198)&7
 10886                           	line	124
 10887                           	
 10888  13B9                     l10609:	
 10889                           ;ser.c: 124: SYNC=0;
 10890  13B9  1683               	bsf	status, 5	;RP0=1, select bank1
 10891  13BA  1303               	bcf	status, 6	;RP1=0, select bank1
 10892  13BB  1218               	bcf	(1220/8)^080h,(1220)&7
 10893                           	line	125
 10894                           	
 10895  13BC                     l10611:	
 10896                           ;ser.c: 125: SPEN=1;
 10897  13BC  1283               	bcf	status, 5	;RP0=0, select bank0
 10898  13BD  1303               	bcf	status, 6	;RP1=0, select bank0
 10899  13BE  1798               	bsf	(199/8),(199)&7
 10900                           	line	126
 10901                           	
 10902  13BF                     l10613:	
 10903                           ;ser.c: 126: CREN=1;
 10904  13BF  1618               	bsf	(196/8),(196)&7
 10905                           	line	127
 10906                           	
 10907  13C0                     l10615:	
 10908                           ;ser.c: 127: TXIE=0;
 10909  13C0  1683               	bsf	status, 5	;RP0=1, select bank1
 10910  13C1  1303               	bcf	status, 6	;RP1=0, select bank1
 10911  13C2  120C               	bcf	(1124/8)^080h,(1124)&7
 10912                           	line	128
 10913                           	
 10914  13C3                     l10617:	
 10915                           ;ser.c: 128: RCIE=1;
 10916  13C3  168C               	bsf	(1125/8)^080h,(1125)&7
 10917                           	line	129
 10918                           	
 10919  13C4                     l10619:	
 10920                           ;ser.c: 129: TXEN=1;
 10921  13C4  1698               	bsf	(1221/8)^080h,(1221)&7
 10922                           	line	132
 10923                           	
 10924  13C5                     l10621:	
 10925                           ;ser.c: 132: rxiptr=rxoptr=txiptr=txoptr=0;
 10926  13C5  3000               	movlw	(0)
 10927  13C6  00D3               	movwf	(_txoptr)^080h	;volatile
 10928  13C7  1283               	bcf	status, 5	;RP0=0, select bank0
 10929  13C8  1303               	bcf	status, 6	;RP1=0, select bank0
 10930  13C9  00EF               	movwf	(_txiptr)	;volatile
 10931  13CA  00EE               	movwf	(_rxoptr)	;volatile
 10932  13CB  00A0               	movwf	(??_ser_init+0)+0
 10933  13CC  0820               	movf	(??_ser_init+0)+0,w
 10934  13CD  00ED               	movwf	(_rxiptr)	;volatile
 10935                           	line	133
 10936                           	
 10937  13CE                     l6816:	
 10938  13CE  0008               	return
 10939                           	opt stack 0
 10940                           GLOBAL	__end_of_ser_init
 10941  13CF                     	__end_of_ser_init:
 10942 ;; =============== function _ser_init ends ============
 10943                           
 10944                           	signat	_ser_init,88
 10945                           	global	_adc_read
 10946                           psect	text1105,local,class=CODE,delta=2
 10947                           global __ptext1105
 10948  13CF                     __ptext1105:
 10949                           
 10950 ;; *************** function _adc_read *****************
 10951 ;; Defined at:
 10952 ;;		line 61 in file "H:\Aldnoah.Zero-master\Assignment3\adc.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;		None
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;  adc_value       2    4[BANK0 ] volatile unsigned int 
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  2    0[BANK0 ] unsigned int 
 10959 ;; Registers used:
 10960 ;;		wreg, status,2, status,0
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10966 ;;      Params:         0       2       0       0       0
 10967 ;;      Locals:         0       2       0       0       0
 10968 ;;      Temps:          0       2       0       0       0
 10969 ;;      Totals:         0       6       0       0       0
 10970 ;;Total ram usage:        6 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    3
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		_adc_read_channel
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           psect	text1105
 10980                           	file	"H:\Aldnoah.Zero-master\Assignment3\adc.c"
 10981                           	line	61
 10982                           	global	__size_of_adc_read
 10983  0029                     	__size_of_adc_read	equ	__end_of_adc_read-_adc_read
 10984                           	
 10985  13CF                     _adc_read:	
 10986                           	opt	stack 0
 10987                           ; Regs used in _adc_read: [wreg+status,2+status,0]
 10988                           	line	64
 10989                           	
 10990  13CF                     l10469:	
 10991                           ;adc.c: 62: volatile unsigned int adc_value;
 10992                           ;adc.c: 64: ADRESH = 0;
 10993  13CF  1283               	bcf	status, 5	;RP0=0, select bank0
 10994  13D0  1303               	bcf	status, 6	;RP1=0, select bank0
 10995  13D1  019E               	clrf	(30)	;volatile
 10996                           	line	66
 10997                           	
 10998  13D2                     l10471:	
 10999                           ;adc.c: 66: GO = 1;
 11000  13D2  151F               	bsf	(250/8),(250)&7
 11001                           	line	67
 11002                           ;adc.c: 67: while(GO) continue;
 11003  13D3  2BD4               	goto	l703
 11004                           	
 11005  13D4                     l704:	
 11006                           	
 11007  13D4                     l703:	
 11008  13D4  191F               	btfsc	(250/8),(250)&7
 11009  13D5  2BD7               	goto	u3561
 11010  13D6  2BD8               	goto	u3560
 11011  13D7                     u3561:
 11012  13D7  2BD4               	goto	l703
 11013  13D8                     u3560:
 11014                           	
 11015  13D8                     l705:	
 11016                           	line	68
 11017                           # 68 "H:\Aldnoah.Zero-master\Assignment3\adc.c"
 11018  13D8  0000               nop ;#
 11019                           	line	69
 11020                           # 69 "H:\Aldnoah.Zero-master\Assignment3\adc.c"
 11021  13D9  0000               nop ;#
 11022                           	line	70
 11023                           # 70 "H:\Aldnoah.Zero-master\Assignment3\adc.c"
 11024  13DA  0000               nop ;#
 11025                           psect	text1105
 11026                           	line	73
 11027                           	
 11028  13DB                     l10473:	
 11029                           ;adc.c: 73: adc_value = ADRESH;
 11030  13DB  1283               	bcf	status, 5	;RP0=0, select bank0
 11031  13DC  1303               	bcf	status, 6	;RP1=0, select bank0
 11032  13DD  081E               	movf	(30),w	;volatile
 11033  13DE  00A2               	movwf	(??_adc_read+0)+0
 11034  13DF  01A3               	clrf	(??_adc_read+0)+0+1
 11035  13E0  0822               	movf	0+(??_adc_read+0)+0,w
 11036  13E1  00A4               	movwf	(adc_read@adc_value)	;volatile
 11037  13E2  0823               	movf	1+(??_adc_read+0)+0,w
 11038  13E3  00A5               	movwf	(adc_read@adc_value+1)	;volatile
 11039                           	line	74
 11040                           ;adc.c: 74: adc_value <<= 1;
 11041  13E4  3001               	movlw	01h
 11042                           	
 11043  13E5                     u3575:
 11044  13E5  1003               	clrc
 11045  13E6  0DA4               	rlf	(adc_read@adc_value),f	;volatile
 11046  13E7  0DA5               	rlf	(adc_read@adc_value+1),f	;volatile
 11047  13E8  3EFF               	addlw	-1
 11048  13E9  1D03               	skipz
 11049  13EA  2BE5               	goto	u3575
 11050                           	line	75
 11051                           ;adc.c: 75: adc_value |= (ADRESL >> 15);
 11052  13EB  1683               	bsf	status, 5	;RP0=1, select bank1
 11053  13EC  1303               	bcf	status, 6	;RP1=0, select bank1
 11054  13ED  081E               	movf	(158)^080h,w	;volatile
 11055                           	line	78
 11056                           	
 11057  13EE                     l10475:	
 11058                           ;adc.c: 78: return (adc_value);
 11059  13EE  1283               	bcf	status, 5	;RP0=0, select bank0
 11060  13EF  1303               	bcf	status, 6	;RP1=0, select bank0
 11061  13F0  0825               	movf	(adc_read@adc_value+1),w	;volatile
 11062  13F1  01A1               	clrf	(?_adc_read+1)
 11063  13F2  07A1               	addwf	(?_adc_read+1)
 11064  13F3  0824               	movf	(adc_read@adc_value),w	;volatile
 11065  13F4  01A0               	clrf	(?_adc_read)
 11066  13F5  07A0               	addwf	(?_adc_read)
 11067                           
 11068  13F6  2BF7               	goto	l706
 11069                           	
 11070  13F7                     l10477:	
 11071                           	line	79
 11072                           	
 11073  13F7                     l706:	
 11074  13F7  0008               	return
 11075                           	opt stack 0
 11076                           GLOBAL	__end_of_adc_read
 11077  13F8                     	__end_of_adc_read:
 11078 ;; =============== function _adc_read ends ============
 11079                           
 11080                           	signat	_adc_read,90
 11081                           	global	_isr1
 11082                           psect	text1106,local,class=CODE,delta=2
 11083                           global __ptext1106
 11084  0E30                     __ptext1106:
 11085                           
 11086 ;; *************** function _isr1 *****************
 11087 ;; Defined at:
 11088 ;;		line 94 in file "H:\Aldnoah.Zero-master\Assignment3\Main.c"
 11089 ;; Parameters:    Size  Location     Type
 11090 ;;		None
 11091 ;; Auto vars:     Size  Location     Type
 11092 ;;		None
 11093 ;; Return value:  Size  Location     Type
 11094 ;;		None               void
 11095 ;; Registers used:
 11096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 11097 ;; Tracked objects:
 11098 ;;		On entry : 0/0
 11099 ;;		On exit  : 0/0
 11100 ;;		Unchanged: 0/0
 11101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11102 ;;      Params:         0       0       0       0       0
 11103 ;;      Locals:         0       0       0       0       0
 11104 ;;      Temps:          5       0       0       0       0
 11105 ;;      Totals:         5       0       0       0       0
 11106 ;;Total ram usage:        5 bytes
 11107 ;; Hardware stack levels used:    1
 11108 ;; Hardware stack levels required when called:    2
 11109 ;; This function calls:
 11110 ;;		i1___lwmod
 11111 ;;		_ReadButtons
 11112 ;; This function is called by:
 11113 ;;		Interrupt level 1
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           psect	text1106
 11117                           	file	"H:\Aldnoah.Zero-master\Assignment3\Main.c"
 11118                           	line	94
 11119                           	global	__size_of_isr1
 11120  00E2                     	__size_of_isr1	equ	__end_of_isr1-_isr1
 11121                           	
 11122  0E30                     _isr1:	
 11123                           	opt	stack 0
 11124                           ; Regs used in _isr1: [allreg]
 11125                           psect	intentry,class=CODE,delta=2
 11126                           global __pintentry
 11127  0004                     __pintentry:
 11128                           global interrupt_function
 11129  0004                     interrupt_function:
 11130                           	global saved_w
 11131  007E                     	saved_w	set	btemp+0
 11132  0004  00FE               	movwf	saved_w
 11133  0005  0E03               	swapf	status,w
 11134  0006  00F9               	movwf	(??_isr1+1)
 11135  0007  0804               	movf	fsr0,w
 11136  0008  00FA               	movwf	(??_isr1+2)
 11137  0009  080A               	movf	pclath,w
 11138  000A  00FB               	movwf	(??_isr1+3)
 11139  000B  1283               	bcf	status, 5	;RP0=0, select bank0
 11140  000C  1303               	bcf	status, 6	;RP1=0, select bank0
 11141  000D  087F               	movf	btemp+1,w
 11142  000E  00FC               	movwf	(??_isr1+4)
 11143  000F  120A  158A  2E30   	ljmp	_isr1
 11144                           psect	text1106
 11145                           	line	98
 11146                           	
 11147  0E30                     i1l10505:	
 11148                           ;Main.c: 98: if(TMR0IF)
 11149  0E30  1D0B               	btfss	(90/8),(90)&7
 11150  0E31  2E33               	goto	u361_21
 11151  0E32  2E34               	goto	u361_20
 11152  0E33                     u361_21:
 11153  0E33  2EB5               	goto	i1l10535
 11154  0E34                     u361_20:
 11155                           	line	100
 11156                           	
 11157  0E34                     i1l10507:	
 11158                           ;Main.c: 99: {
 11159                           ;Main.c: 100: TMR0IF = 0;
 11160  0E34  110B               	bcf	(90/8),(90)&7
 11161                           	line	101
 11162                           	
 11163  0E35                     i1l10509:	
 11164                           ;Main.c: 101: TMR0 = 100;
 11165  0E35  3064               	movlw	(064h)
 11166  0E36  0081               	movwf	(1)	;volatile
 11167                           	line	103
 11168                           ;Main.c: 103: RTC_Counter++;
 11169  0E37  3001               	movlw	low(01h)
 11170  0E38  1683               	bsf	status, 5	;RP0=1, select bank1
 11171  0E39  1303               	bcf	status, 6	;RP1=0, select bank1
 11172  0E3A  07B0               	addwf	(_RTC_Counter)^080h,f	;volatile
 11173  0E3B  1803               	skipnc
 11174  0E3C  0AB1               	incf	(_RTC_Counter+1)^080h,f	;volatile
 11175  0E3D  3000               	movlw	high(01h)
 11176  0E3E  07B1               	addwf	(_RTC_Counter+1)^080h,f	;volatile
 11177                           	line	105
 11178                           	
 11179  0E3F                     i1l10511:	
 11180                           ;Main.c: 105: RTC_FLAG_1MS = 1;
 11181  0E3F  17F0               	bsf	(_RTC_FLAG_1MS/8),(_RTC_FLAG_1MS)&7
 11182                           	line	106
 11183                           	
 11184  0E40                     i1l10513:	
 11185                           ;Main.c: 106: if(RTC_Counter % 10 == 0)
 11186  0E40  300A               	movlw	low(0Ah)
 11187  0E41  00F2               	movwf	(?i1___lwmod)
 11188  0E42  3000               	movlw	high(0Ah)
 11189  0E43  00F3               	movwf	((?i1___lwmod))+1
 11190  0E44  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11191  0E45  01F5               	clrf	1+(?i1___lwmod)+02h
 11192  0E46  07F5               	addwf	1+(?i1___lwmod)+02h
 11193  0E47  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 11194  0E48  01F4               	clrf	0+(?i1___lwmod)+02h
 11195  0E49  07F4               	addwf	0+(?i1___lwmod)+02h
 11196                           
 11197  0E4A  160A  118A  25A3   	fcall	i1___lwmod
              120A  158A         
 11198  0E4F  0873               	movf	((1+(?i1___lwmod))),w
 11199  0E50  0472               	iorwf	((0+(?i1___lwmod))),w
 11200  0E51  1D03               	skipz
 11201  0E52  2E54               	goto	u362_21
 11202  0E53  2E55               	goto	u362_20
 11203  0E54                     u362_21:
 11204  0E54  2E57               	goto	i1l10517
 11205  0E55                     u362_20:
 11206                           	line	108
 11207                           	
 11208  0E55                     i1l10515:	
 11209                           ;Main.c: 107: {
 11210                           ;Main.c: 108: RTC_FLAG_10MS = 1;
 11211  0E55  1770               	bsf	(_RTC_FLAG_10MS/8),(_RTC_FLAG_10MS)&7
 11212  0E56  2E57               	goto	i1l10517
 11213                           	line	111
 11214                           	
 11215  0E57                     i1l2213:	
 11216                           	line	112
 11217                           	
 11218  0E57                     i1l10517:	
 11219                           ;Main.c: 111: }
 11220                           ;Main.c: 112: if(RTC_Counter % 50 == 0) RTC_FLAG_50MS = 1;
 11221  0E57  3032               	movlw	low(032h)
 11222  0E58  00F2               	movwf	(?i1___lwmod)
 11223  0E59  3000               	movlw	high(032h)
 11224  0E5A  00F3               	movwf	((?i1___lwmod))+1
 11225  0E5B  1683               	bsf	status, 5	;RP0=1, select bank1
 11226  0E5C  1303               	bcf	status, 6	;RP1=0, select bank1
 11227  0E5D  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11228  0E5E  01F5               	clrf	1+(?i1___lwmod)+02h
 11229  0E5F  07F5               	addwf	1+(?i1___lwmod)+02h
 11230  0E60  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 11231  0E61  01F4               	clrf	0+(?i1___lwmod)+02h
 11232  0E62  07F4               	addwf	0+(?i1___lwmod)+02h
 11233                           
 11234  0E63  160A  118A  25A3   	fcall	i1___lwmod
              120A  158A         
 11235  0E68  0873               	movf	((1+(?i1___lwmod))),w
 11236  0E69  0472               	iorwf	((0+(?i1___lwmod))),w
 11237  0E6A  1D03               	skipz
 11238  0E6B  2E6D               	goto	u363_21
 11239  0E6C  2E6E               	goto	u363_20
 11240  0E6D                     u363_21:
 11241  0E6D  2E70               	goto	i1l10521
 11242  0E6E                     u363_20:
 11243                           	
 11244  0E6E                     i1l10519:	
 11245  0E6E  1571               	bsf	(_RTC_FLAG_50MS/8),(_RTC_FLAG_50MS)&7
 11246  0E6F  2E70               	goto	i1l10521
 11247                           	
 11248  0E70                     i1l2214:	
 11249                           	line	113
 11250                           	
 11251  0E70                     i1l10521:	
 11252                           ;Main.c: 113: if(RTC_Counter % 250 == 0)
 11253  0E70  30FA               	movlw	low(0FAh)
 11254  0E71  00F2               	movwf	(?i1___lwmod)
 11255  0E72  3000               	movlw	high(0FAh)
 11256  0E73  00F3               	movwf	((?i1___lwmod))+1
 11257  0E74  1683               	bsf	status, 5	;RP0=1, select bank1
 11258  0E75  1303               	bcf	status, 6	;RP1=0, select bank1
 11259  0E76  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11260  0E77  01F5               	clrf	1+(?i1___lwmod)+02h
 11261  0E78  07F5               	addwf	1+(?i1___lwmod)+02h
 11262  0E79  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 11263  0E7A  01F4               	clrf	0+(?i1___lwmod)+02h
 11264  0E7B  07F4               	addwf	0+(?i1___lwmod)+02h
 11265                           
 11266  0E7C  160A  118A  25A3   	fcall	i1___lwmod
              120A  158A         
 11267  0E81  0873               	movf	((1+(?i1___lwmod))),w
 11268  0E82  0472               	iorwf	((0+(?i1___lwmod))),w
 11269  0E83  1D03               	skipz
 11270  0E84  2E86               	goto	u364_21
 11271  0E85  2E87               	goto	u364_20
 11272  0E86                     u364_21:
 11273  0E86  2E89               	goto	i1l10525
 11274  0E87                     u364_20:
 11275                           	line	116
 11276                           	
 11277  0E87                     i1l10523:	
 11278                           ;Main.c: 114: {
 11279                           ;Main.c: 116: RTC_FLAG_250MS = 1;
 11280  0E87  1471               	bsf	(_RTC_FLAG_250MS/8),(_RTC_FLAG_250MS)&7
 11281  0E88  2E89               	goto	i1l10525
 11282                           	line	118
 11283                           	
 11284  0E89                     i1l2215:	
 11285                           	line	119
 11286                           	
 11287  0E89                     i1l10525:	
 11288                           ;Main.c: 118: }
 11289                           ;Main.c: 119: if(RTC_Counter % 500 == 0)
 11290  0E89  30F4               	movlw	low(01F4h)
 11291  0E8A  00F2               	movwf	(?i1___lwmod)
 11292  0E8B  3001               	movlw	high(01F4h)
 11293  0E8C  00F3               	movwf	((?i1___lwmod))+1
 11294  0E8D  1683               	bsf	status, 5	;RP0=1, select bank1
 11295  0E8E  1303               	bcf	status, 6	;RP1=0, select bank1
 11296  0E8F  0831               	movf	(_RTC_Counter+1)^080h,w	;volatile
 11297  0E90  01F5               	clrf	1+(?i1___lwmod)+02h
 11298  0E91  07F5               	addwf	1+(?i1___lwmod)+02h
 11299  0E92  0830               	movf	(_RTC_Counter)^080h,w	;volatile
 11300  0E93  01F4               	clrf	0+(?i1___lwmod)+02h
 11301  0E94  07F4               	addwf	0+(?i1___lwmod)+02h
 11302                           
 11303  0E95  160A  118A  25A3   	fcall	i1___lwmod
              120A  158A         
 11304  0E9A  0873               	movf	((1+(?i1___lwmod))),w
 11305  0E9B  0472               	iorwf	((0+(?i1___lwmod))),w
 11306  0E9C  1D03               	skipz
 11307  0E9D  2E9F               	goto	u365_21
 11308  0E9E  2EA0               	goto	u365_20
 11309  0E9F                     u365_21:
 11310  0E9F  2EA6               	goto	i1l10531
 11311  0EA0                     u365_20:
 11312                           	line	121
 11313                           	
 11314  0EA0                     i1l10527:	
 11315                           ;Main.c: 120: {
 11316                           ;Main.c: 121: RTC_FLAG_500MS = 1;
 11317  0EA0  14F1               	bsf	(_RTC_FLAG_500MS/8),(_RTC_FLAG_500MS)&7
 11318                           	line	122
 11319                           	
 11320  0EA1                     i1l10529:	
 11321                           ;Main.c: 122: RB0 ^= 0x01;
 11322  0EA1  1283               	bcf	status, 5	;RP0=0, select bank0
 11323  0EA2  1303               	bcf	status, 6	;RP1=0, select bank0
 11324  0EA3  3001               	movlw	1<<((48)&7)
 11325  0EA4  0686               	xorwf	((48)/8),f
 11326  0EA5  2EA6               	goto	i1l10531
 11327                           	line	124
 11328                           	
 11329  0EA6                     i1l2216:	
 11330                           	line	125
 11331                           	
 11332  0EA6                     i1l10531:	
 11333                           ;Main.c: 124: }
 11334                           ;Main.c: 125: if (buttonPressed == 0)
 11335  0EA6  08FD               	movf	(_buttonPressed),f
 11336  0EA7  1D03               	skipz	;volatile
 11337  0EA8  2EAA               	goto	u366_21
 11338  0EA9  2EAB               	goto	u366_20
 11339  0EAA                     u366_21:
 11340  0EAA  2EB5               	goto	i1l10535
 11341  0EAB                     u366_20:
 11342                           	line	128
 11343                           	
 11344  0EAB                     i1l10533:	
 11345                           ;Main.c: 126: {
 11346                           ;Main.c: 128: buttonPressed = ReadButtons();
 11347  0EAB  160A  118A  2503   	fcall	_ReadButtons
              120A  158A         
 11348  0EB0  00F8               	movwf	(??_isr1+0)+0
 11349  0EB1  0878               	movf	(??_isr1+0)+0,w
 11350  0EB2  00FD               	movwf	(_buttonPressed)	;volatile
 11351  0EB3  2EB5               	goto	i1l10535
 11352                           	line	130
 11353                           	
 11354  0EB4                     i1l2217:	
 11355  0EB4  2EB5               	goto	i1l10535
 11356                           	line	131
 11357                           	
 11358  0EB5                     i1l2212:	
 11359                           	line	132
 11360                           	
 11361  0EB5                     i1l10535:	
 11362                           ;Main.c: 130: }
 11363                           ;Main.c: 131: }
 11364                           ;Main.c: 132: if (RCIF) { rxfifo[rxiptr]=RCREG; ser_tmp=(rxiptr+1) & (16-1); if (ser_tmp
                                 !=rxoptr) rxiptr=ser_tmp; } if (TXIF && TXIE) { TXREG = txfifo[txoptr]; ++txoptr; txoptr
                                  &= (16-1); if (txoptr==txiptr) { TXIE = 0; } };
 11365  0EB5  1283               	bcf	status, 5	;RP0=0, select bank0
 11366  0EB6  1303               	bcf	status, 6	;RP1=0, select bank0
 11367  0EB7  1E8C               	btfss	(101/8),(101)&7
 11368  0EB8  2EBA               	goto	u367_21
 11369  0EB9  2EBB               	goto	u367_20
 11370  0EBA                     u367_21:
 11371  0EBA  2EDD               	goto	i1l10545
 11372  0EBB                     u367_20:
 11373                           	
 11374  0EBB                     i1l10537:	
 11375  0EBB  081A               	movf	(26),w	;volatile
 11376  0EBC  00F8               	movwf	(??_isr1+0)+0
 11377  0EBD  086D               	movf	(_rxiptr),w
 11378  0EBE  3EA0               	addlw	_rxfifo&0ffh
 11379  0EBF  0084               	movwf	fsr0
 11380  0EC0  0878               	movf	(??_isr1+0)+0,w
 11381  0EC1  1383               	bcf	status, 7	;select IRP bank1
 11382  0EC2  0080               	movwf	indf
 11383                           	
 11384  0EC3                     i1l10539:	
 11385  0EC3  086D               	movf	(_rxiptr),w	;volatile
 11386  0EC4  3E01               	addlw	01h
 11387  0EC5  390F               	andlw	0Fh
 11388  0EC6  00F8               	movwf	(??_isr1+0)+0
 11389  0EC7  0878               	movf	(??_isr1+0)+0,w
 11390  0EC8  1683               	bsf	status, 5	;RP0=1, select bank1
 11391  0EC9  1303               	bcf	status, 6	;RP1=0, select bank1
 11392  0ECA  00CF               	movwf	(_ser_tmp)^080h
 11393                           	
 11394  0ECB                     i1l10541:	
 11395  0ECB  084F               	movf	(_ser_tmp)^080h,w
 11396  0ECC  1283               	bcf	status, 5	;RP0=0, select bank0
 11397  0ECD  1303               	bcf	status, 6	;RP1=0, select bank0
 11398  0ECE  066E               	xorwf	(_rxoptr),w	;volatile
 11399  0ECF  1903               	skipnz
 11400  0ED0  2ED2               	goto	u368_21
 11401  0ED1  2ED3               	goto	u368_20
 11402  0ED2                     u368_21:
 11403  0ED2  2EDD               	goto	i1l10545
 11404  0ED3                     u368_20:
 11405                           	
 11406  0ED3                     i1l10543:	
 11407  0ED3  1683               	bsf	status, 5	;RP0=1, select bank1
 11408  0ED4  1303               	bcf	status, 6	;RP1=0, select bank1
 11409  0ED5  084F               	movf	(_ser_tmp)^080h,w
 11410  0ED6  00F8               	movwf	(??_isr1+0)+0
 11411  0ED7  0878               	movf	(??_isr1+0)+0,w
 11412  0ED8  1283               	bcf	status, 5	;RP0=0, select bank0
 11413  0ED9  1303               	bcf	status, 6	;RP1=0, select bank0
 11414  0EDA  00ED               	movwf	(_rxiptr)	;volatile
 11415  0EDB  2EDD               	goto	i1l10545
 11416                           	
 11417  0EDC                     i1l2219:	
 11418  0EDC  2EDD               	goto	i1l10545
 11419                           	
 11420  0EDD                     i1l2218:	
 11421                           	
 11422  0EDD                     i1l10545:	
 11423  0EDD  1E0C               	btfss	(100/8),(100)&7
 11424  0EDE  2EE0               	goto	u369_21
 11425  0EDF  2EE1               	goto	u369_20
 11426  0EE0                     u369_21:
 11427  0EE0  2F06               	goto	i1l2222
 11428  0EE1                     u369_20:
 11429                           	
 11430  0EE1                     i1l10547:	
 11431  0EE1  1683               	bsf	status, 5	;RP0=1, select bank1
 11432  0EE2  1303               	bcf	status, 6	;RP1=0, select bank1
 11433  0EE3  1E0C               	btfss	(1124/8)^080h,(1124)&7
 11434  0EE4  2EE6               	goto	u370_21
 11435  0EE5  2EE7               	goto	u370_20
 11436  0EE6                     u370_21:
 11437  0EE6  2F06               	goto	i1l2222
 11438  0EE7                     u370_20:
 11439                           	
 11440  0EE7                     i1l10549:	
 11441  0EE7  0853               	movf	(_txoptr)^080h,w
 11442  0EE8  3EA0               	addlw	_txfifo&0ffh
 11443  0EE9  0084               	movwf	fsr0
 11444  0EEA  1783               	bsf	status, 7	;select IRP bank3
 11445  0EEB  0800               	movf	indf,w
 11446  0EEC  1283               	bcf	status, 5	;RP0=0, select bank0
 11447  0EED  1303               	bcf	status, 6	;RP1=0, select bank0
 11448  0EEE  0099               	movwf	(25)	;volatile
 11449                           	
 11450  0EEF                     i1l10551:	
 11451  0EEF  3001               	movlw	(01h)
 11452  0EF0  00F8               	movwf	(??_isr1+0)+0
 11453  0EF1  0878               	movf	(??_isr1+0)+0,w
 11454  0EF2  1683               	bsf	status, 5	;RP0=1, select bank1
 11455  0EF3  1303               	bcf	status, 6	;RP1=0, select bank1
 11456  0EF4  07D3               	addwf	(_txoptr)^080h,f	;volatile
 11457                           	
 11458  0EF5                     i1l10553:	
 11459  0EF5  300F               	movlw	(0Fh)
 11460  0EF6  00F8               	movwf	(??_isr1+0)+0
 11461  0EF7  0878               	movf	(??_isr1+0)+0,w
 11462  0EF8  05D3               	andwf	(_txoptr)^080h,f	;volatile
 11463                           	
 11464  0EF9                     i1l10555:	
 11465  0EF9  0853               	movf	(_txoptr)^080h,w	;volatile
 11466  0EFA  1283               	bcf	status, 5	;RP0=0, select bank0
 11467  0EFB  1303               	bcf	status, 6	;RP1=0, select bank0
 11468  0EFC  066F               	xorwf	(_txiptr),w	;volatile
 11469  0EFD  1D03               	skipz
 11470  0EFE  2F00               	goto	u371_21
 11471  0EFF  2F01               	goto	u371_20
 11472  0F00                     u371_21:
 11473  0F00  2F06               	goto	i1l2222
 11474  0F01                     u371_20:
 11475                           	
 11476  0F01                     i1l10557:	
 11477  0F01  1683               	bsf	status, 5	;RP0=1, select bank1
 11478  0F02  1303               	bcf	status, 6	;RP1=0, select bank1
 11479  0F03  120C               	bcf	(1124/8)^080h,(1124)&7
 11480  0F04  2F06               	goto	i1l2222
 11481                           	
 11482  0F05                     i1l2221:	
 11483  0F05  2F06               	goto	i1l2222
 11484                           	
 11485  0F06                     i1l2220:	
 11486                           	line	133
 11487                           	
 11488  0F06                     i1l2222:	
 11489  0F06  087C               	movf	(??_isr1+4),w
 11490  0F07  1283               	bcf	status, 5	;RP0=0, select bank0
 11491  0F08  00FF               	movwf	btemp+1
 11492  0F09  087B               	movf	(??_isr1+3),w
 11493  0F0A  008A               	movwf	pclath
 11494  0F0B  087A               	movf	(??_isr1+2),w
 11495  0F0C  0084               	movwf	fsr0
 11496  0F0D  0E79               	swapf	(??_isr1+1)^0FFFFFF80h,w
 11497  0F0E  0083               	movwf	status
 11498  0F0F  0EFE               	swapf	saved_w,f
 11499  0F10  0E7E               	swapf	saved_w,w
 11500  0F11  0009               	retfie
 11501                           	opt stack 0
 11502                           GLOBAL	__end_of_isr1
 11503  0F12                     	__end_of_isr1:
 11504 ;; =============== function _isr1 ends ============
 11505                           
 11506                           	signat	_isr1,88
 11507                           	global	_ReadButtons
 11508                           psect	text1107,local,class=CODE,delta=2
 11509                           global __ptext1107
 11510  1503                     __ptext1107:
 11511                           
 11512 ;; *************** function _ReadButtons *****************
 11513 ;; Defined at:
 11514 ;;		line 141 in file "H:\Aldnoah.Zero-master\Assignment3\HMI.c"
 11515 ;; Parameters:    Size  Location     Type
 11516 ;;		None
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;		None
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      unsigned char 
 11521 ;; Registers used:
 11522 ;;		wreg, status,2, status,0, pclath, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11528 ;;      Params:         0       0       0       0       0
 11529 ;;      Locals:         0       0       0       0       0
 11530 ;;      Temps:          0       0       0       0       0
 11531 ;;      Totals:         0       0       0       0       0
 11532 ;;Total ram usage:        0 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; Hardware stack levels required when called:    1
 11535 ;; This function calls:
 11536 ;;		_Debounce
 11537 ;; This function is called by:
 11538 ;;		_isr1
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           psect	text1107
 11542                           	file	"H:\Aldnoah.Zero-master\Assignment3\HMI.c"
 11543                           	line	141
 11544                           	global	__size_of_ReadButtons
 11545  0030                     	__size_of_ReadButtons	equ	__end_of_ReadButtons-_ReadButtons
 11546                           	
 11547  1503                     _ReadButtons:	
 11548                           	opt	stack 0
 11549                           ; Regs used in _ReadButtons: [wreg+status,2+status,0+pclath+cstack]
 11550                           	line	143
 11551                           	
 11552  1503                     i1l10559:	
 11553                           ;HMI.c: 143: Debounce();
 11554  1503  120A  158A  22CC   	fcall	_Debounce
              160A  118A         
 11555                           	line	145
 11556                           	
 11557  1508                     i1l10561:	
 11558                           ;HMI.c: 145: if(UpPressed)
 11559  1508  1EF1               	btfss	(_UpPressed/8),(_UpPressed)&7
 11560  1509  2D0B               	goto	u372_21
 11561  150A  2D0C               	goto	u372_20
 11562  150B                     u372_21:
 11563  150B  2D10               	goto	i1l4560
 11564  150C                     u372_20:
 11565                           	line	147
 11566                           	
 11567  150C                     i1l10563:	
 11568                           ;HMI.c: 146: {
 11569                           ;HMI.c: 147: UpPressed = 0;
 11570  150C  12F1               	bcf	(_UpPressed/8),(_UpPressed)&7
 11571                           	line	148
 11572                           	
 11573  150D                     i1l10565:	
 11574                           ;HMI.c: 148: return 1;
 11575  150D  3001               	movlw	(01h)
 11576  150E  2D32               	goto	i1l4561
 11577                           	
 11578  150F                     i1l10567:	
 11579  150F  2D32               	goto	i1l4561
 11580                           	line	150
 11581                           	
 11582  1510                     i1l4560:	
 11583                           	line	152
 11584                           ;HMI.c: 150: }
 11585                           ;HMI.c: 152: if(DownPressed)
 11586  1510  1D70               	btfss	(_DownPressed/8),(_DownPressed)&7
 11587  1511  2D13               	goto	u373_21
 11588  1512  2D14               	goto	u373_20
 11589  1513                     u373_21:
 11590  1513  2D18               	goto	i1l4562
 11591  1514                     u373_20:
 11592                           	line	154
 11593                           	
 11594  1514                     i1l10569:	
 11595                           ;HMI.c: 153: {
 11596                           ;HMI.c: 154: DownPressed = 0;
 11597  1514  1170               	bcf	(_DownPressed/8),(_DownPressed)&7
 11598                           	line	155
 11599                           	
 11600  1515                     i1l10571:	
 11601                           ;HMI.c: 155: return 2;
 11602  1515  3002               	movlw	(02h)
 11603  1516  2D32               	goto	i1l4561
 11604                           	
 11605  1517                     i1l10573:	
 11606  1517  2D32               	goto	i1l4561
 11607                           	line	157
 11608                           	
 11609  1518                     i1l4562:	
 11610                           	line	158
 11611                           ;HMI.c: 157: }
 11612                           ;HMI.c: 158: if(LeftPressed)
 11613  1518  1E70               	btfss	(_LeftPressed/8),(_LeftPressed)&7
 11614  1519  2D1B               	goto	u374_21
 11615  151A  2D1C               	goto	u374_20
 11616  151B                     u374_21:
 11617  151B  2D20               	goto	i1l4563
 11618  151C                     u374_20:
 11619                           	line	160
 11620                           	
 11621  151C                     i1l10575:	
 11622                           ;HMI.c: 159: {
 11623                           ;HMI.c: 160: LeftPressed = 0;
 11624  151C  1270               	bcf	(_LeftPressed/8),(_LeftPressed)&7
 11625                           	line	161
 11626                           	
 11627  151D                     i1l10577:	
 11628                           ;HMI.c: 161: return 3;
 11629  151D  3003               	movlw	(03h)
 11630  151E  2D32               	goto	i1l4561
 11631                           	
 11632  151F                     i1l10579:	
 11633  151F  2D32               	goto	i1l4561
 11634                           	line	163
 11635                           	
 11636  1520                     i1l4563:	
 11637                           	line	164
 11638                           ;HMI.c: 163: }
 11639                           ;HMI.c: 164: if(RightPressed)
 11640  1520  1DF1               	btfss	(_RightPressed/8),(_RightPressed)&7
 11641  1521  2D23               	goto	u375_21
 11642  1522  2D24               	goto	u375_20
 11643  1523                     u375_21:
 11644  1523  2D28               	goto	i1l4564
 11645  1524                     u375_20:
 11646                           	line	166
 11647                           	
 11648  1524                     i1l10581:	
 11649                           ;HMI.c: 165: {
 11650                           ;HMI.c: 166: RightPressed = 0;
 11651  1524  11F1               	bcf	(_RightPressed/8),(_RightPressed)&7
 11652                           	line	167
 11653                           	
 11654  1525                     i1l10583:	
 11655                           ;HMI.c: 167: return 4;
 11656  1525  3004               	movlw	(04h)
 11657  1526  2D32               	goto	i1l4561
 11658                           	
 11659  1527                     i1l10585:	
 11660  1527  2D32               	goto	i1l4561
 11661                           	line	169
 11662                           	
 11663  1528                     i1l4564:	
 11664                           	line	171
 11665                           ;HMI.c: 169: }
 11666                           ;HMI.c: 171: if(CenterPressed)
 11667  1528  1C70               	btfss	(_CenterPressed/8),(_CenterPressed)&7
 11668  1529  2D2B               	goto	u376_21
 11669  152A  2D2C               	goto	u376_20
 11670  152B                     u376_21:
 11671  152B  2D30               	goto	i1l10593
 11672  152C                     u376_20:
 11673                           	line	173
 11674                           	
 11675  152C                     i1l10587:	
 11676                           ;HMI.c: 172: {
 11677                           ;HMI.c: 173: CenterPressed = 0;
 11678  152C  1070               	bcf	(_CenterPressed/8),(_CenterPressed)&7
 11679                           	line	174
 11680                           	
 11681  152D                     i1l10589:	
 11682                           ;HMI.c: 174: return 5;
 11683  152D  3005               	movlw	(05h)
 11684  152E  2D32               	goto	i1l4561
 11685                           	
 11686  152F                     i1l10591:	
 11687  152F  2D32               	goto	i1l4561
 11688                           	line	176
 11689                           	
 11690  1530                     i1l4565:	
 11691                           	line	177
 11692                           	
 11693  1530                     i1l10593:	
 11694                           ;HMI.c: 176: }
 11695                           ;HMI.c: 177: return 0;
 11696  1530  3000               	movlw	(0)
 11697  1531  2D32               	goto	i1l4561
 11698                           	
 11699  1532                     i1l10595:	
 11700                           	line	178
 11701                           	
 11702  1532                     i1l4561:	
 11703  1532  0008               	return
 11704                           	opt stack 0
 11705                           GLOBAL	__end_of_ReadButtons
 11706  1533                     	__end_of_ReadButtons:
 11707 ;; =============== function _ReadButtons ends ============
 11708                           
 11709                           	signat	_ReadButtons,89
 11710                           	global	i1___lwmod
 11711                           psect	text1108,local,class=CODE,delta=2
 11712                           global __ptext1108
 11713  15A3                     __ptext1108:
 11714                           
 11715 ;; *************** function i1___lwmod *****************
 11716 ;; Defined at:
 11717 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11718 ;; Parameters:    Size  Location     Type
 11719 ;;  __lwmod         2    0[COMMON] unsigned int 
 11720 ;;  __lwmod         2    2[COMMON] unsigned int 
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;  __lwmod         1    5[COMMON] unsigned char 
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  2    0[COMMON] unsigned int 
 11725 ;; Registers used:
 11726 ;;		wreg, status,2, status,0
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/0
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11732 ;;      Params:         4       0       0       0       0
 11733 ;;      Locals:         1       0       0       0       0
 11734 ;;      Temps:          1       0       0       0       0
 11735 ;;      Totals:         6       0       0       0       0
 11736 ;;Total ram usage:        6 bytes
 11737 ;; Hardware stack levels used:    1
 11738 ;; This function calls:
 11739 ;;		Nothing
 11740 ;; This function is called by:
 11741 ;;		_isr1
 11742 ;; This function uses a non-reentrant model
 11743 ;;
 11744                           psect	text1108
 11745                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 11746                           	line	5
 11747                           	global	__size_ofi1___lwmod
 11748  0044                     	__size_ofi1___lwmod	equ	__end_ofi1___lwmod-i1___lwmod
 11749                           	
 11750  15A3                     i1___lwmod:	
 11751                           	opt	stack 1
 11752                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 11753                           	line	8
 11754                           	
 11755  15A3                     i1l11191:	
 11756  15A3  0873               	movf	(i1___lwmod@divisor+1),w
 11757  15A4  0472               	iorwf	(i1___lwmod@divisor),w
 11758  15A5  1903               	skipnz
 11759  15A6  2DA8               	goto	u494_21
 11760  15A7  2DA9               	goto	u494_20
 11761  15A8                     u494_21:
 11762  15A8  2DDF               	goto	i1l11209
 11763  15A9                     u494_20:
 11764                           	line	9
 11765                           	
 11766  15A9                     i1l11193:	
 11767  15A9  01F7               	clrf	(i1___lwmod@counter)
 11768  15AA  1403               	bsf	status,0
 11769  15AB  0DF7               	rlf	(i1___lwmod@counter),f
 11770                           	line	10
 11771  15AC  2DB9               	goto	i1l11199
 11772                           	
 11773  15AD                     i1l7545:	
 11774                           	line	11
 11775                           	
 11776  15AD                     i1l11195:	
 11777  15AD  3001               	movlw	01h
 11778                           	
 11779  15AE                     u495_25:
 11780  15AE  1003               	clrc
 11781  15AF  0DF2               	rlf	(i1___lwmod@divisor),f
 11782  15B0  0DF3               	rlf	(i1___lwmod@divisor+1),f
 11783  15B1  3EFF               	addlw	-1
 11784  15B2  1D03               	skipz
 11785  15B3  2DAE               	goto	u495_25
 11786                           	line	12
 11787                           	
 11788  15B4                     i1l11197:	
 11789  15B4  3001               	movlw	(01h)
 11790  15B5  00F6               	movwf	(??i1___lwmod+0)+0
 11791  15B6  0876               	movf	(??i1___lwmod+0)+0,w
 11792  15B7  07F7               	addwf	(i1___lwmod@counter),f
 11793  15B8  2DB9               	goto	i1l11199
 11794                           	line	13
 11795                           	
 11796  15B9                     i1l7544:	
 11797                           	line	10
 11798                           	
 11799  15B9                     i1l11199:	
 11800  15B9  1FF3               	btfss	(i1___lwmod@divisor+1),(15)&7
 11801  15BA  2DBC               	goto	u496_21
 11802  15BB  2DBD               	goto	u496_20
 11803  15BC                     u496_21:
 11804  15BC  2DAD               	goto	i1l11195
 11805  15BD                     u496_20:
 11806  15BD  2DBF               	goto	i1l11201
 11807                           	
 11808  15BE                     i1l7546:	
 11809  15BE  2DBF               	goto	i1l11201
 11810                           	line	14
 11811                           	
 11812  15BF                     i1l7547:	
 11813                           	line	15
 11814                           	
 11815  15BF                     i1l11201:	
 11816  15BF  0873               	movf	(i1___lwmod@divisor+1),w
 11817  15C0  0275               	subwf	(i1___lwmod@dividend+1),w
 11818  15C1  1D03               	skipz
 11819  15C2  2DC5               	goto	u497_25
 11820  15C3  0872               	movf	(i1___lwmod@divisor),w
 11821  15C4  0274               	subwf	(i1___lwmod@dividend),w
 11822  15C5                     u497_25:
 11823  15C5  1C03               	skipc
 11824  15C6  2DC8               	goto	u497_21
 11825  15C7  2DC9               	goto	u497_20
 11826  15C8                     u497_21:
 11827  15C8  2DD0               	goto	i1l11205
 11828  15C9                     u497_20:
 11829                           	line	16
 11830                           	
 11831  15C9                     i1l11203:	
 11832  15C9  0872               	movf	(i1___lwmod@divisor),w
 11833  15CA  02F4               	subwf	(i1___lwmod@dividend),f
 11834  15CB  0873               	movf	(i1___lwmod@divisor+1),w
 11835  15CC  1C03               	skipc
 11836  15CD  03F5               	decf	(i1___lwmod@dividend+1),f
 11837  15CE  02F5               	subwf	(i1___lwmod@dividend+1),f
 11838  15CF  2DD0               	goto	i1l11205
 11839                           	
 11840  15D0                     i1l7548:	
 11841                           	line	17
 11842                           	
 11843  15D0                     i1l11205:	
 11844  15D0  3001               	movlw	01h
 11845                           	
 11846  15D1                     u498_25:
 11847  15D1  1003               	clrc
 11848  15D2  0CF3               	rrf	(i1___lwmod@divisor+1),f
 11849  15D3  0CF2               	rrf	(i1___lwmod@divisor),f
 11850  15D4  3EFF               	addlw	-1
 11851  15D5  1D03               	skipz
 11852  15D6  2DD1               	goto	u498_25
 11853                           	line	18
 11854                           	
 11855  15D7                     i1l11207:	
 11856  15D7  3001               	movlw	low(01h)
 11857  15D8  02F7               	subwf	(i1___lwmod@counter),f
 11858  15D9  1D03               	btfss	status,2
 11859  15DA  2DDC               	goto	u499_21
 11860  15DB  2DDD               	goto	u499_20
 11861  15DC                     u499_21:
 11862  15DC  2DBF               	goto	i1l11201
 11863  15DD                     u499_20:
 11864  15DD  2DDF               	goto	i1l11209
 11865                           	
 11866  15DE                     i1l7549:	
 11867  15DE  2DDF               	goto	i1l11209
 11868                           	line	19
 11869                           	
 11870  15DF                     i1l7543:	
 11871                           	line	20
 11872                           	
 11873  15DF                     i1l11209:	
 11874  15DF  0875               	movf	(i1___lwmod@dividend+1),w
 11875  15E0  01F3               	clrf	(?i1___lwmod+1)
 11876  15E1  07F3               	addwf	(?i1___lwmod+1)
 11877  15E2  0874               	movf	(i1___lwmod@dividend),w
 11878  15E3  01F2               	clrf	(?i1___lwmod)
 11879  15E4  07F2               	addwf	(?i1___lwmod)
 11880                           
 11881  15E5  2DE6               	goto	i1l7550
 11882                           	
 11883  15E6                     i1l11211:	
 11884                           	line	21
 11885                           	
 11886  15E6                     i1l7550:	
 11887  15E6  0008               	return
 11888                           	opt stack 0
 11889                           GLOBAL	__end_ofi1___lwmod
 11890  15E7                     	__end_ofi1___lwmod:
 11891 ;; =============== function i1___lwmod ends ============
 11892                           
 11893                           	signat	i1___lwmod,90
 11894                           	global	_Debounce
 11895                           psect	text1109,local,class=CODE,delta=2
 11896                           global __ptext1109
 11897  0ACC                     __ptext1109:
 11898                           
 11899 ;; *************** function _Debounce *****************
 11900 ;; Defined at:
 11901 ;;		line 61 in file "H:\Aldnoah.Zero-master\Assignment3\HMI.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;		None
 11904 ;; Auto vars:     Size  Location     Type
 11905 ;;		None
 11906 ;; Return value:  Size  Location     Type
 11907 ;;		None               void
 11908 ;; Registers used:
 11909 ;;		wreg, status,2, status,0
 11910 ;; Tracked objects:
 11911 ;;		On entry : 0/0
 11912 ;;		On exit  : 0/0
 11913 ;;		Unchanged: 0/0
 11914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11915 ;;      Params:         0       0       0       0       0
 11916 ;;      Locals:         0       0       0       0       0
 11917 ;;      Temps:          1       0       0       0       0
 11918 ;;      Totals:         1       0       0       0       0
 11919 ;;Total ram usage:        1 bytes
 11920 ;; Hardware stack levels used:    1
 11921 ;; This function calls:
 11922 ;;		Nothing
 11923 ;; This function is called by:
 11924 ;;		_ReadButtons
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           psect	text1109
 11928                           	file	"H:\Aldnoah.Zero-master\Assignment3\HMI.c"
 11929                           	line	61
 11930                           	global	__size_of_Debounce
 11931  0098                     	__size_of_Debounce	equ	__end_of_Debounce-_Debounce
 11932                           	
 11933  0ACC                     _Debounce:	
 11934                           	opt	stack 0
 11935                           ; Regs used in _Debounce: [wreg+status,2+status,0]
 11936                           	line	63
 11937                           	
 11938  0ACC                     i1l10761:	
 11939                           ;HMI.c: 63: if(!RB2)
 11940  0ACC  1283               	bcf	status, 5	;RP0=0, select bank0
 11941  0ACD  1303               	bcf	status, 6	;RP1=0, select bank0
 11942  0ACE  1906               	btfsc	(50/8),(50)&7
 11943  0ACF  2AD1               	goto	u386_21
 11944  0AD0  2AD2               	goto	u386_20
 11945  0AD1                     u386_21:
 11946  0AD1  2AE6               	goto	i1l4542
 11947  0AD2                     u386_20:
 11948                           	line	65
 11949                           	
 11950  0AD2                     i1l10763:	
 11951                           ;HMI.c: 64: {
 11952                           ;HMI.c: 65: UpDebounceCount++;
 11953  0AD2  3001               	movlw	(01h)
 11954  0AD3  00F2               	movwf	(??_Debounce+0)+0
 11955  0AD4  0872               	movf	(??_Debounce+0)+0,w
 11956  0AD5  1683               	bsf	status, 5	;RP0=1, select bank1
 11957  0AD6  1303               	bcf	status, 6	;RP1=0, select bank1
 11958  0AD7  07CA               	addwf	(_UpDebounceCount)^080h,f	;volatile
 11959                           	line	66
 11960                           	
 11961  0AD8                     i1l10765:	
 11962                           ;HMI.c: 66: if(UpDebounceCount >= 10 & UpReleased)
 11963  0AD8  300A               	movlw	(0Ah)
 11964  0AD9  024A               	subwf	(_UpDebounceCount)^080h,w	;volatile
 11965  0ADA  1C03               	skipc
 11966  0ADB  2ADD               	goto	u387_21
 11967  0ADC  2ADE               	goto	u387_20
 11968  0ADD                     u387_21:
 11969  0ADD  2AEA               	goto	i1l4544
 11970  0ADE                     u387_20:
 11971                           	
 11972  0ADE                     i1l10767:	
 11973  0ADE  1F71               	btfss	(_UpReleased/8),(_UpReleased)&7
 11974  0ADF  2AE1               	goto	u388_21
 11975  0AE0  2AE2               	goto	u388_20
 11976  0AE1                     u388_21:
 11977  0AE1  2AEA               	goto	i1l4544
 11978  0AE2                     u388_20:
 11979                           	line	68
 11980                           	
 11981  0AE2                     i1l10769:	
 11982                           ;HMI.c: 67: {
 11983                           ;HMI.c: 68: UpPressed = 1;
 11984  0AE2  16F1               	bsf	(_UpPressed/8),(_UpPressed)&7
 11985                           	line	69
 11986                           ;HMI.c: 69: UpReleased = 0;
 11987  0AE3  1371               	bcf	(_UpReleased/8),(_UpReleased)&7
 11988  0AE4  2AEA               	goto	i1l4544
 11989                           	line	70
 11990                           	
 11991  0AE5                     i1l4543:	
 11992                           	line	71
 11993                           ;HMI.c: 70: }
 11994                           ;HMI.c: 71: }
 11995  0AE5  2AEA               	goto	i1l4544
 11996                           	line	72
 11997                           	
 11998  0AE6                     i1l4542:	
 11999                           	line	74
 12000                           ;HMI.c: 72: else
 12001                           ;HMI.c: 73: {
 12002                           ;HMI.c: 74: UpDebounceCount = 0;
 12003  0AE6  1683               	bsf	status, 5	;RP0=1, select bank1
 12004  0AE7  1303               	bcf	status, 6	;RP1=0, select bank1
 12005  0AE8  01CA               	clrf	(_UpDebounceCount)^080h	;volatile
 12006                           	line	75
 12007                           ;HMI.c: 75: UpReleased = 1;
 12008  0AE9  1771               	bsf	(_UpReleased/8),(_UpReleased)&7
 12009                           	line	76
 12010                           	
 12011  0AEA                     i1l4544:	
 12012                           	line	79
 12013                           ;HMI.c: 76: }
 12014                           ;HMI.c: 79: if(!RB3)
 12015  0AEA  1283               	bcf	status, 5	;RP0=0, select bank0
 12016  0AEB  1303               	bcf	status, 6	;RP1=0, select bank0
 12017  0AEC  1986               	btfsc	(51/8),(51)&7
 12018  0AED  2AEF               	goto	u389_21
 12019  0AEE  2AF0               	goto	u389_20
 12020  0AEF                     u389_21:
 12021  0AEF  2B04               	goto	i1l4545
 12022  0AF0                     u389_20:
 12023                           	line	81
 12024                           	
 12025  0AF0                     i1l10771:	
 12026                           ;HMI.c: 80: {
 12027                           ;HMI.c: 81: DownDebounceCount++;
 12028  0AF0  3001               	movlw	(01h)
 12029  0AF1  00F2               	movwf	(??_Debounce+0)+0
 12030  0AF2  0872               	movf	(??_Debounce+0)+0,w
 12031  0AF3  1683               	bsf	status, 5	;RP0=1, select bank1
 12032  0AF4  1303               	bcf	status, 6	;RP1=0, select bank1
 12033  0AF5  07C7               	addwf	(_DownDebounceCount)^080h,f	;volatile
 12034                           	line	82
 12035                           	
 12036  0AF6                     i1l10773:	
 12037                           ;HMI.c: 82: if(DownDebounceCount >= 10 & DownReleased)
 12038  0AF6  300A               	movlw	(0Ah)
 12039  0AF7  0247               	subwf	(_DownDebounceCount)^080h,w	;volatile
 12040  0AF8  1C03               	skipc
 12041  0AF9  2AFB               	goto	u390_21
 12042  0AFA  2AFC               	goto	u390_20
 12043  0AFB                     u390_21:
 12044  0AFB  2B08               	goto	i1l4547
 12045  0AFC                     u390_20:
 12046                           	
 12047  0AFC                     i1l10775:	
 12048  0AFC  1DF0               	btfss	(_DownReleased/8),(_DownReleased)&7
 12049  0AFD  2AFF               	goto	u391_21
 12050  0AFE  2B00               	goto	u391_20
 12051  0AFF                     u391_21:
 12052  0AFF  2B08               	goto	i1l4547
 12053  0B00                     u391_20:
 12054                           	line	84
 12055                           	
 12056  0B00                     i1l10777:	
 12057                           ;HMI.c: 83: {
 12058                           ;HMI.c: 84: DownPressed = 1;
 12059  0B00  1570               	bsf	(_DownPressed/8),(_DownPressed)&7
 12060                           	line	85
 12061                           ;HMI.c: 85: DownReleased = 0;
 12062  0B01  11F0               	bcf	(_DownReleased/8),(_DownReleased)&7
 12063  0B02  2B08               	goto	i1l4547
 12064                           	line	86
 12065                           	
 12066  0B03                     i1l4546:	
 12067                           	line	87
 12068                           ;HMI.c: 86: }
 12069                           ;HMI.c: 87: }
 12070  0B03  2B08               	goto	i1l4547
 12071                           	line	88
 12072                           	
 12073  0B04                     i1l4545:	
 12074                           	line	90
 12075                           ;HMI.c: 88: else
 12076                           ;HMI.c: 89: {
 12077                           ;HMI.c: 90: DownDebounceCount = 0;
 12078  0B04  1683               	bsf	status, 5	;RP0=1, select bank1
 12079  0B05  1303               	bcf	status, 6	;RP1=0, select bank1
 12080  0B06  01C7               	clrf	(_DownDebounceCount)^080h	;volatile
 12081                           	line	91
 12082                           ;HMI.c: 91: DownReleased = 1;
 12083  0B07  15F0               	bsf	(_DownReleased/8),(_DownReleased)&7
 12084                           	line	92
 12085                           	
 12086  0B08                     i1l4547:	
 12087                           	line	94
 12088                           ;HMI.c: 92: }
 12089                           ;HMI.c: 94: if(!RB4)
 12090  0B08  1283               	bcf	status, 5	;RP0=0, select bank0
 12091  0B09  1303               	bcf	status, 6	;RP1=0, select bank0
 12092  0B0A  1A06               	btfsc	(52/8),(52)&7
 12093  0B0B  2B0D               	goto	u392_21
 12094  0B0C  2B0E               	goto	u392_20
 12095  0B0D                     u392_21:
 12096  0B0D  2B22               	goto	i1l4548
 12097  0B0E                     u392_20:
 12098                           	line	96
 12099                           	
 12100  0B0E                     i1l10779:	
 12101                           ;HMI.c: 95: {
 12102                           ;HMI.c: 96: LeftDebounceCount++;
 12103  0B0E  3001               	movlw	(01h)
 12104  0B0F  00F2               	movwf	(??_Debounce+0)+0
 12105  0B10  0872               	movf	(??_Debounce+0)+0,w
 12106  0B11  1683               	bsf	status, 5	;RP0=1, select bank1
 12107  0B12  1303               	bcf	status, 6	;RP1=0, select bank1
 12108  0B13  07C8               	addwf	(_LeftDebounceCount)^080h,f	;volatile
 12109                           	line	97
 12110                           	
 12111  0B14                     i1l10781:	
 12112                           ;HMI.c: 97: if(LeftDebounceCount >= 10 & LeftReleased)
 12113  0B14  300A               	movlw	(0Ah)
 12114  0B15  0248               	subwf	(_LeftDebounceCount)^080h,w	;volatile
 12115  0B16  1C03               	skipc
 12116  0B17  2B19               	goto	u393_21
 12117  0B18  2B1A               	goto	u393_20
 12118  0B19                     u393_21:
 12119  0B19  2B26               	goto	i1l4550
 12120  0B1A                     u393_20:
 12121                           	
 12122  0B1A                     i1l10783:	
 12123  0B1A  1EF0               	btfss	(_LeftReleased/8),(_LeftReleased)&7
 12124  0B1B  2B1D               	goto	u394_21
 12125  0B1C  2B1E               	goto	u394_20
 12126  0B1D                     u394_21:
 12127  0B1D  2B26               	goto	i1l4550
 12128  0B1E                     u394_20:
 12129                           	line	99
 12130                           	
 12131  0B1E                     i1l10785:	
 12132                           ;HMI.c: 98: {
 12133                           ;HMI.c: 99: LeftPressed = 1;
 12134  0B1E  1670               	bsf	(_LeftPressed/8),(_LeftPressed)&7
 12135                           	line	100
 12136                           ;HMI.c: 100: LeftReleased = 0;
 12137  0B1F  12F0               	bcf	(_LeftReleased/8),(_LeftReleased)&7
 12138  0B20  2B26               	goto	i1l4550
 12139                           	line	101
 12140                           	
 12141  0B21                     i1l4549:	
 12142                           	line	102
 12143                           ;HMI.c: 101: }
 12144                           ;HMI.c: 102: }
 12145  0B21  2B26               	goto	i1l4550
 12146                           	line	103
 12147                           	
 12148  0B22                     i1l4548:	
 12149                           	line	105
 12150                           ;HMI.c: 103: else
 12151                           ;HMI.c: 104: {
 12152                           ;HMI.c: 105: LeftDebounceCount = 0;
 12153  0B22  1683               	bsf	status, 5	;RP0=1, select bank1
 12154  0B23  1303               	bcf	status, 6	;RP1=0, select bank1
 12155  0B24  01C8               	clrf	(_LeftDebounceCount)^080h	;volatile
 12156                           	line	106
 12157                           ;HMI.c: 106: LeftReleased = 1;
 12158  0B25  16F0               	bsf	(_LeftReleased/8),(_LeftReleased)&7
 12159                           	line	107
 12160                           	
 12161  0B26                     i1l4550:	
 12162                           	line	109
 12163                           ;HMI.c: 107: }
 12164                           ;HMI.c: 109: if(!RB5)
 12165  0B26  1283               	bcf	status, 5	;RP0=0, select bank0
 12166  0B27  1303               	bcf	status, 6	;RP1=0, select bank0
 12167  0B28  1A86               	btfsc	(53/8),(53)&7
 12168  0B29  2B2B               	goto	u395_21
 12169  0B2A  2B2C               	goto	u395_20
 12170  0B2B                     u395_21:
 12171  0B2B  2B40               	goto	i1l4551
 12172  0B2C                     u395_20:
 12173                           	line	111
 12174                           	
 12175  0B2C                     i1l10787:	
 12176                           ;HMI.c: 110: {
 12177                           ;HMI.c: 111: RightDebounceCount++;
 12178  0B2C  3001               	movlw	(01h)
 12179  0B2D  00F2               	movwf	(??_Debounce+0)+0
 12180  0B2E  0872               	movf	(??_Debounce+0)+0,w
 12181  0B2F  1683               	bsf	status, 5	;RP0=1, select bank1
 12182  0B30  1303               	bcf	status, 6	;RP1=0, select bank1
 12183  0B31  07C9               	addwf	(_RightDebounceCount)^080h,f	;volatile
 12184                           	line	112
 12185                           	
 12186  0B32                     i1l10789:	
 12187                           ;HMI.c: 112: if(RightDebounceCount >= 10 & RightReleased)
 12188  0B32  300A               	movlw	(0Ah)
 12189  0B33  0249               	subwf	(_RightDebounceCount)^080h,w	;volatile
 12190  0B34  1C03               	skipc
 12191  0B35  2B37               	goto	u396_21
 12192  0B36  2B38               	goto	u396_20
 12193  0B37                     u396_21:
 12194  0B37  2B44               	goto	i1l4553
 12195  0B38                     u396_20:
 12196                           	
 12197  0B38                     i1l10791:	
 12198  0B38  1E71               	btfss	(_RightReleased/8),(_RightReleased)&7
 12199  0B39  2B3B               	goto	u397_21
 12200  0B3A  2B3C               	goto	u397_20
 12201  0B3B                     u397_21:
 12202  0B3B  2B44               	goto	i1l4553
 12203  0B3C                     u397_20:
 12204                           	line	114
 12205                           	
 12206  0B3C                     i1l10793:	
 12207                           ;HMI.c: 113: {
 12208                           ;HMI.c: 114: RightPressed = 1;
 12209  0B3C  15F1               	bsf	(_RightPressed/8),(_RightPressed)&7
 12210                           	line	115
 12211                           ;HMI.c: 115: RightReleased = 0;
 12212  0B3D  1271               	bcf	(_RightReleased/8),(_RightReleased)&7
 12213  0B3E  2B44               	goto	i1l4553
 12214                           	line	116
 12215                           	
 12216  0B3F                     i1l4552:	
 12217                           	line	117
 12218                           ;HMI.c: 116: }
 12219                           ;HMI.c: 117: }
 12220  0B3F  2B44               	goto	i1l4553
 12221                           	line	118
 12222                           	
 12223  0B40                     i1l4551:	
 12224                           	line	120
 12225                           ;HMI.c: 118: else
 12226                           ;HMI.c: 119: {
 12227                           ;HMI.c: 120: RightDebounceCount = 0;
 12228  0B40  1683               	bsf	status, 5	;RP0=1, select bank1
 12229  0B41  1303               	bcf	status, 6	;RP1=0, select bank1
 12230  0B42  01C9               	clrf	(_RightDebounceCount)^080h	;volatile
 12231                           	line	121
 12232                           ;HMI.c: 121: RightReleased = 1;
 12233  0B43  1671               	bsf	(_RightReleased/8),(_RightReleased)&7
 12234                           	line	122
 12235                           	
 12236  0B44                     i1l4553:	
 12237                           	line	124
 12238                           ;HMI.c: 122: }
 12239                           ;HMI.c: 124: if(!RB6)
 12240  0B44  1283               	bcf	status, 5	;RP0=0, select bank0
 12241  0B45  1303               	bcf	status, 6	;RP1=0, select bank0
 12242  0B46  1B06               	btfsc	(54/8),(54)&7
 12243  0B47  2B49               	goto	u398_21
 12244  0B48  2B4A               	goto	u398_20
 12245  0B49                     u398_21:
 12246  0B49  2B5E               	goto	i1l4554
 12247  0B4A                     u398_20:
 12248                           	line	126
 12249                           	
 12250  0B4A                     i1l10795:	
 12251                           ;HMI.c: 125: {
 12252                           ;HMI.c: 126: CenterDebounceCount++;
 12253  0B4A  3001               	movlw	(01h)
 12254  0B4B  00F2               	movwf	(??_Debounce+0)+0
 12255  0B4C  0872               	movf	(??_Debounce+0)+0,w
 12256  0B4D  1683               	bsf	status, 5	;RP0=1, select bank1
 12257  0B4E  1303               	bcf	status, 6	;RP1=0, select bank1
 12258  0B4F  07C4               	addwf	(_CenterDebounceCount)^080h,f	;volatile
 12259                           	line	127
 12260                           	
 12261  0B50                     i1l10797:	
 12262                           ;HMI.c: 127: if(CenterDebounceCount >= 10 & CenterReleased)
 12263  0B50  300A               	movlw	(0Ah)
 12264  0B51  0244               	subwf	(_CenterDebounceCount)^080h,w	;volatile
 12265  0B52  1C03               	skipc
 12266  0B53  2B55               	goto	u399_21
 12267  0B54  2B56               	goto	u399_20
 12268  0B55                     u399_21:
 12269  0B55  2B63               	goto	i1l4557
 12270  0B56                     u399_20:
 12271                           	
 12272  0B56                     i1l10799:	
 12273  0B56  1CF0               	btfss	(_CenterReleased/8),(_CenterReleased)&7
 12274  0B57  2B59               	goto	u400_21
 12275  0B58  2B5A               	goto	u400_20
 12276  0B59                     u400_21:
 12277  0B59  2B63               	goto	i1l4557
 12278  0B5A                     u400_20:
 12279                           	line	129
 12280                           	
 12281  0B5A                     i1l10801:	
 12282                           ;HMI.c: 128: {
 12283                           ;HMI.c: 129: CenterPressed = 1;
 12284  0B5A  1470               	bsf	(_CenterPressed/8),(_CenterPressed)&7
 12285                           	line	130
 12286                           ;HMI.c: 130: CenterReleased = 0;
 12287  0B5B  10F0               	bcf	(_CenterReleased/8),(_CenterReleased)&7
 12288  0B5C  2B63               	goto	i1l4557
 12289                           	line	131
 12290                           	
 12291  0B5D                     i1l4555:	
 12292                           	line	132
 12293                           ;HMI.c: 131: }
 12294                           ;HMI.c: 132: }
 12295  0B5D  2B63               	goto	i1l4557
 12296                           	line	133
 12297                           	
 12298  0B5E                     i1l4554:	
 12299                           	line	135
 12300                           ;HMI.c: 133: else
 12301                           ;HMI.c: 134: {
 12302                           ;HMI.c: 135: CenterDebounceCount = 0;
 12303  0B5E  1683               	bsf	status, 5	;RP0=1, select bank1
 12304  0B5F  1303               	bcf	status, 6	;RP1=0, select bank1
 12305  0B60  01C4               	clrf	(_CenterDebounceCount)^080h	;volatile
 12306                           	line	136
 12307                           ;HMI.c: 136: CenterReleased = 1;
 12308  0B61  14F0               	bsf	(_CenterReleased/8),(_CenterReleased)&7
 12309  0B62  2B63               	goto	i1l4557
 12310                           	line	137
 12311                           	
 12312  0B63                     i1l4556:	
 12313                           	line	138
 12314                           	
 12315  0B63                     i1l4557:	
 12316  0B63  0008               	return
 12317                           	opt stack 0
 12318                           GLOBAL	__end_of_Debounce
 12319  0B64                     	__end_of_Debounce:
 12320 ;; =============== function _Debounce ends ============
 12321                           
 12322                           	signat	_Debounce,88
 12323                           psect	text1110,local,class=CODE,delta=2
 12324                           global __ptext1110
 12325  0000                     __ptext1110:
 12326                           	global	btemp
 12327  007E                     	btemp set 07Eh
 12328                           
 12329                           	DABS	1,126,2	;btemp
 12330                           	global	wtemp0
 12331  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon May 04 13:32:40 2015

  __end_of_lcd_write_control 131C              ??_UpdateDisplay 0045                            pc 0002  
                         _GO 00FA                           _RD 0C60                           _WR 0C61  
                         fsr 0004          ___wmul@multiplicand 0022                          l700 1331  
                        l703 13D4                          l704 13D4                          l705 13D8  
                        l706 13F7                          l690 156C                          l691 1595  
                        l692 1570                          l693 1574                          l694 1578  
                        l695 157C                          l696 1580                          l689 1584  
                        l697 15A2                          _GIE 005F                          _RB0 0030  
                        _RC0 0038                          _RB2 0032                          _RC1 0039  
                        _RB3 0033                          _RC2 003A                          _RB4 0034  
                        _RB5 0035                          _RE0 0048                          _RB6 0036  
                        _RE1 0049                          _RE2 004A                          _RX9 00C6  
                        _TX9 04C6                          _abs 1533                          _pos 00BC  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0026  
           ??_robotMoveSpeed 005D              ?_lcd_set_cursor 0072                _assignedSpeed 00E0  
                       ?_abs 0026                         l1402 12E0                         l1410 14A6  
                       l1411 14A6                         l2300 00A3                         l1405 07FD  
                       l3021 17C0                         l2301 00D4                         l3030 04D1  
                       l3022 17E1                         l2230 0D53                         l2302 00D5  
                       l3031 034A                         l3023 17FF                         l2231 0CC7  
                       l2311 01C5                         l2303 0106                         l3032 04D0  
                       l3040 04CC                         l1408 1495                         l2232 0D64  
                       l2240 0D1F                         l2312 0282                         l2304 0120  
                       l3041 04CB                         l3033 0397                         l1409 147C  
                       l2225 1502                         l2241 0D21                         l2233 0CD4  
                       l2313 0283                         l2305 014D                         l3034 04CF  
                       l3042 04D1                         l3026 1347                         l2242 0D4F  
                       l2234 0D66                         l2314 0284                         l2306 0190  
                       l3035 03E4                         l2243 0D51                         l2235 0CD9  
                       l2315 028A                         l2307 01AA                         l3036 04CE  
                       l2244 0D65                         l2236 0CEE                         l2228 0CBB  
                       l2316 02AB                         l2308 01C2                         l3037 0431  
                       l3029 02FD                         l1429 1422                         l2245 0D66  
                       l2237 0CFB                         l2229 0CC6                         l2317 02AC  
                       l2309 01C6                         l3038 04CD                         l2270 164E  
                       l2238 0CFD                         l2318 02AC                         l3039 047E  
                       l2271 1650                         l2263 163C                         l2239 0D12  
                       l2272 1672                         l2264 1647                         l2280 0982  
                       l2265 165F                         l2273 165C                         l2281 0999  
                       l2274 1671                         l2266 1648                         l2282 09C6  
                       l2290 0043                         l2275 1672                         l2267 1670  
                       l2291 004B                         l2268 164A                         l2292 0053  
                       l2269 164C                         l2293 005B                         l2285 0025  
                       l2278 0964                         l2294 006A                         l2286 003A  
                       l1399 131B                         l2279 09BD                         l2295 028C  
                       l2287 006D                         l2296 007F                         l2288 003B  
                       l2297 02A2                         l2289 007E                         l2298 008B  
                       l2299 0097                         l3740 1307                         l6061 0DDA  
                       l6062 0D98                         l6070 0C79                         l6055 08E4  
                       l3743 171A                         l6063 0DA5                         l6071 0C53  
                       l3744 1721                         l6064 0E11                         l6072 0C60  
                       l3737 12FC                         l3745 173E                         l6065 0E2F  
                       l6073 0C92                         l4570 16B7                         l3738 12FC  
                       l3746 1728                         l6082 1567                         l6058 17AA  
                       l6074 0CB0                         l4571 1678                         l3739 1301  
                       l3747 1748                         l4572 1679                         l3748 1759  
                       l6068 0C33                         l4573 168A                         l6077 0A79  
                       l6069 0C52                         l4574 168B                         l6078 0A97  
                       l4590 063B                         l4575 169D                         l6079 0ACB  
                       l4583 06DF                         l4591 068C                         l4568 16A5  
                       l4576 169E                         l4592 06DD                         l4584 04EB  
                       l4577 16B9                         l4569 1677                         l4593 06F2  
                       l4585 054B                         l4578 16A3                         l4586 055E  
                       l4587 06F2                         l4588 05A6                         l4589 0612  
                       l7530 144E                         l7540 1709                         l7533 1702  
                       l7534 16D4                         l7550 162C                         l6830 07ED  
                       l7630 0FB2                         l7527 1428                         l7535 16C8  
                       l7543 1625                         l6831 0710                         l7631 0FB7  
                       l6816 13CE                         l7528 1432                         l7536 16D9  
                       l7544 15FF                         l7640 0BB9                         l6840 07CD  
                       l6832 0711                         l7632 0FCC                         l7529 1447  
                       l7537 16DA                         l7545 15F3                         l7641 0BCB  
                       l6825 07D9                         l6841 078D                         l6833 0729  
                       l7633 0FE3                         l7625 0F2D                         l7538 16F3  
                       l7546 1604                         l7642 0BF0                         l6842 07D8  
                       l6834 0712                         l6826 06FB                         l7626 0FFF  
                       l7539 1701                         l7547 1605                         l7643 0BDC  
                       l6843 07EC                         l6835 0743                         l6827 070D  
                       l7627 0F46                         l7548 1616                         l7644 0BE9  
                       l7636 0B81                         l7740 091A                         l6844 07F2  
                       l6836 074E                         l6828 0714                         l7628 0F86  
                       l6781 1353                         l7549 1624                         l7645 0BDD  
                       l7637 0C09                         l7741 091B                         l6837 0776  
                       l6829 070F                         l7629 0F9B                         l6782 135E  
                       l7646 0BEF                         l7638 0BCC                         l7742 092C  
                       l6838 076B                         l6791 1386                         l7647 0C00  
                       l7639 0BB8                         l7743 093A                         l7735 08F5  
                       l6839 0788                         l7663 145F                         l6792 1385  
                       l7744 0945                         l7736 08FF                         l7664 147A  
                       l6793 1391                         l7745 094C                         l7737 093B  
                       l6785 1361                         l6794 13A6                         l7738 0915  
                       l6786 1360                         l7739 0909                         l6787 136A  
                       l6788 1380                         l7861 09D5                         l7870 0A11  
                       l7862 0A43                         l7871 0A20                         l7863 09EB  
                       l7872 0A2A                         l7864 09DE                         l7873 0A43  
                       l7865 09F2                         l7866 0A09                         l7867 09F3  
                       l7859 09DD                         l7868 0A10                         l7869 0A1C  
                       _CHS0 00FB                         _CHS1 00FC                         _CHS2 00FD  
                       STR_1 0879                         STR_2 0870                         STR_3 088B  
                       STR_4 0894                         STR_5 0882                         STR_6 0867  
                       STR_7 08B8                         STR_8 08BC                         STR_9 08A4  
                       _BRGH 04C2                         _CREN 00C4                         u4010 134E  
                       u4011 134D                         u4020 1359                         u4021 1358  
                       u4110 1446                         u4111 1445                         u4120 16C4  
                       u5000 0A5A                         u4105 143A                         u4121 16C3  
                       u5001 0A59                         u4210 1603                         u5010 1713  
                       u4211 1602                         u5011 1712                         u4140 16D8  
                       u4220 160F                         u5020 1748                         u5100 03AA  
                       u4141 16D7                         u4221 160E                         u4205 15F4  
                       u5021 1747                         u5101 03A9                         u5110 03EE  
                       u5030 02BA                         u4135 16C9                         u5111 03ED  
                       u5031 02B9                         u4080 142C                         u4160 16EB  
                       u4240 1623                         u5120 03F7                         u5040 02C3  
                       u5200 0769                         u4081 142B                         u4161 16EA  
                       u4241 1622                         u4225 160B                         u5025 1744  
                       u5121 03F6                         u5041 02C2                         u5201 0768  
                       u5130 043B                         u5050 0307                         u5210 0775  
                       u4155 16DB                         u4235 1617                         u5131 043A  
                       u5051 0306                         u5211 0774                         u4180 1700  
                       u4500 09D4                         u5140 0444                         u5060 0310  
                       u5220 077C                         u5300 0F68                         u4181 16FF  
                       u4165 16E7                         u4501 09D3                         u5141 0443  
                       u5061 030F                         u5221 077B                         u5205 0765  
                       u4190 15EF                         u5150 0488                         u5070 0354  
                       u5230 07D7                         u5310 0F8A                         u4095 1433  
                       u4175 16F4                         u4191 15EE                         u5151 0487  
                       u5071 0353                         u5231 07D6                         u5311 0F89  
                       u3560 13D8                         u3800 169A                         u4520 09F1  
                       u5160 0491                         u5080 035D                         u5240 07EB  
                       u5400 0FE2                         u3561 13D7                         u3801 1699  
                       u4521 09F0                         u5161 0490                         u5081 035C  
                       u5241 07EA                         u5401 0FE1                         u5321 0F93  
                       u5305 0F64                         u3810 1300                         u5090 03A1  
                       u5170 0701                         u5250 136A                         u5322 0F9A  
                       u5410 1456                         u3811 12FF                         u4515 09E3  
                       u5091 03A0                         u5171 0700                         u5251 1369  
                       u5411 1455                         _PEIE 005E                         u4540 0A0F  
                       u4700 0BA7                         u5180 0739                         u5420 14A5  
                       u5500 0962                         u4541 0A0E                         u4701 0BA6  
                       u5181 0738                         u5421 14A4                         u5501 0961  
                       u4710 0BAE                         u5190 074C                         u5350 0FB1  
                       u5270 0F25                         u5430 04DC                         u5510 0975  
                       u3575 13E5                         u4535 0A02                         u4711 0BAD  
                       u5191 074B                         u5351 0FB0                         u5335 0F9C  
                       u5271 0F24                         u5511 0974                         u4560 0A20  
                       u4800 08F9                         u5360 0FBB                         u5280 0F3E  
                       u5440 0538                         u5520 0992                         u5600 0D29  
                       u4561 0A1F                         u4801 08F8                         u5265 1548  
                       u5361 0FBA                         u5345 0FA4                         u5281 0F3D  
                       u5441 0537                         u5521 0991                         u5505 095E  
                       u5601 0D28                         u4570 0A24                         u4490 09CD  
                       u4730 0BCA                         u4810 0905                         u5290 0F56  
                       u5450 17BE                         u5530 09BC                         u5610 0D2F  
                       u4571 0A23                         u4555 0A14                         u4731 0BC9  
                       u4811 0904                         u5371 0FC4                         u5451 17BD  
                       u5531 09BB                         u5515 0971                         u5611 0D2E  
                       _RCIE 0465                         u3780 1391                         u4580 0A35  
                       u4740 0BD2                         u5372 0FCB                         u5460 17E0  
                       u5540 0C14                         u5700 01A5                         u5620 0029  
                       _RCIF 0065                         u3781 1390                         u4741 0BD1  
                       u4725 0BBA                         u5445 0534                         u5461 17DF  
                       u5541 0C13                         u5701 01A4                         u5621 0028  
                       u3790 1685                         u4590 0A42                         u4830 0919  
                       u5470 0DA3                         u5550 0C5E                         u5710 01B0  
                       u5630 00FB                         u3791 1684                         u4831 0918  
                       u5295 0F52                         u5455 17BA                         u5535 09B8  
                       u5711 01AF                         u5631 00FA                         u4760 0BEE  
                       u4680 0B77                         u4840 0925                         u5480 0E10  
                       u5560 0C91                         u5720 01BD                         u5640 0115  
                       u4585 0A31                         u4761 0BED                         u4681 0B76  
                       u4841 0924                         u4825 090A                         u5385 0FCD  
                       u5465 17DC                         u5481 0E0F                         u5561 0C90  
                       u5721 01BC                         u5641 0114                         u4770 0BF4  
                       u4690 0B8C                         u5490 1640                         u5570 0CBF  
                       u5650 012F                         u4755 0BDF                         u5395 0FD5  
                       u5491 163F                         u5571 0CBE                         u5651 012E  
                       u5635 00F7                         u4860 0939                         u5580 0CE1  
                       u5660 013E                         u4861 0938                         u4845 0921  
                       u5485 0E0C                         u5565 0C8D                         u5581 0CE0  
                       u5725 01B9                         u5661 013D                         u5645 0111  
                       u4870 093F                         u4790 08EC                         u5590 0D05  
                       u5670 015C                         u4695 0B88                         u4855 092D  
                       u4791 08EB                         u5807 12DC                         u5591 0D04  
                       u5671 015B                         u5655 012B                         u5680 016B  
                       u5817 1316                         u5681 016A                         u5665 013A  
                       u5737 00AB                         u5690 019F                         _OERR 00C1  
                       u5827 132F                         u5747 01EB                         u5691 019E  
                       u5675 0158                         u5837 1597                         u5757 024C  
                       u5685 0167                         u5767 026F                         u5695 019B  
                       u5777 176C                         u5787 178D                         u5797 1731  
                       _TMR0 0001                   _ChargeMode 162D                         _SPEN 00C7  
                       _TXIE 0464                         _WREN 0C62                         _TXEN 04C5  
                       _TXIF 0064                         _SYNC 04C4          __size_of_ADCconvert 0223  
                       _Menu 1673       __end_of_lcd_write_data 12E1                         abs@v 0026  
                       _isr1 0E30                         _main 0015                 ___ftpack@arg 0020  
                       _init 14D4                 ___ftpack@exp 0023                         _test 00BE  
                       btemp 007E               _CenterReleased 0381                         start 0012  
               ___ftmul@cntr 004A                 ___ftmul@sign 004B                ??_ReadButtons 0073  
               ___fttol@exp1 0035                        ??_abs 0028                 ___fttol@lval 0031  
                      ?_Menu 0072                        l11001 0A1C                        l11003 0A24  
                      l11005 0A2C                        l11007 0A3E                        l11111 08E5  
                      l11009 0A42                        l11121 0905                        l11113 08EC  
                      l11131 0925                        l11123 0909                        l11115 08F5  
                      l11061 0B81                        l11141 0945                        l11133 092C  
                      l11125 0910                        l11117 08F9                        l11221 1584  
                      l11213 156B                        l11301 02FD                        l11071 0BA3  
                      l11063 0B93                        l11055 0B64                        l11143 094C  
                      l11135 0933                        l11127 0915                        l11119 08FF  
                      l11215 1580                        l11223 1595                        l11231 131F  
                      l11311 035D                        l11303 0307                        l10601 13B2  
                      l11073 0BA7                        l11081 0BCC                        l11065 0B94  
                      l11057 0B77                        l11129 091B                        l11137 093B  
                      l11225 1599                        l11217 1582                        l11233 1323  
                      l11241 130E                        l11321 03EE                        l11313 0397  
                      l11305 0310                        l11401 1375                        l10611 13BC  
                      l10603 13B3                        l11083 0BD2                        l11091 0BF0  
                      l11075 0BAE                        l11067 0B9A                        l11059 0B80  
                      l11139 093F                        l11227 15A2                        l11219 1583  
                      l11235 1327                        l11243 1310                        l11251 12D6  
                      l11331 047E                        l11323 03F7                        l11315 03A1  
                      l11307 034A                        l11403 1379                        l11411 1533  
                      l10621 13C5                        l10613 13BF                        l10605 13B5  
                      l11093 0BF4                        l11085 0BDB                        l11077 0BB7  
                      l11069 0BA1                        l11237 132B                        l11229 131C  
                      l11245 1311                        l11253 12D7                        l11261 0A54  
                      l11333 0488                        l11325 0431                        l11317 03AA  
                      l11309 0354                        l11341 0701                        l11405 137D  
                      l11413 1567                        l11421 0F2D                        l11501 1416  
                      l10471 13D2                        l10615 13C0                        l10607 13B6  
                      l11095 0C00                        l11087 0BDD                        l11079 0BB9  
                      l11239 130B                        l11247 12D1                        l11255 08CC  
                      l11263 0A5A                        l11271 1713                        l11335 0491  
                      l11327 043B                        l11319 03E4                        l11351 0731  
                      l11343 0708                        l11407 137E                        l11431 0F74  
                      l11423 0F3E                        l11415 0F12                        l11503 141C  
                      l11511 177B                        l10473 13DB                        l10617 13C3  
                      l10609 13B9                        l10457 135B                        l11097 0C09  
                      l11089 0BE9                        l11249 12D4                        l11265 0A79  
                      l11257 0A44                        l11281 172D                        l11273 171A  
                      l11329 0444                        l11361 0746                        l11353 0735  
                      l11345 0713                        l11337 06F6                        l11409 1380  
                      l11441 0F8A                        l11433 0F75                        l11425 0F45  
                      l11417 0F25                        l11513 1781                        l11505 175A  
                      l11521 1340                        l11601 0680                        l10475 13EE  
                      l10619 13C4                        l10459 135D                        l10811 1353  
                      l10803 1348                        l11259 0A4C                        l11291 1755  
                      l11283 174A                        l11275 1721                        l11267 170A  
                      l11371 076F                        l11363 074D                        l11355 0739  
                      l11347 0714                        l11339 06FB                        l11451 0FB7  
                      l11443 0F9B                        l11435 0F7B                        l11427 0F46  
                      l11419 0F2C                        l11515 1792                        l11507 1766  
                      l11523 1347                        l11531 14DF                        l11611 06D1  
                      l11603 068C                        l10477 13F7                        l10469 13CF  
                      l10661 13A2                        l10653 1384                        l10813 1359  
                      l10805 134E                        l10901 160F                        l11293 1756  
                      l11285 1750                        l11277 1724                        l11269 170E  
                      l11381 078D                        l11373 0776                        l11365 074E  
                      l11357 073D                        l11349 0729                        l11461 0FE3  
                      l11453 0FBB                        l11445 0FA3                        l11437 0F81  
                      l11429 0F73                        l11517 179E                        l11509 1771  
                      l11541 14F6                        l11533 14E3                        l11525 14D4  
                      l11613 06DE                        l11605 0692                        l11621 17BF  
                      l11701 098E                        l10663 13A5                        l10655 1386  
                      l10671 1685                        l10815 135B                        l10807 1350  
                      l10903 1616                        l11287 1753                        l11279 1725  
                      l11295 02AF                        l11383 07C1                        l11375 077C  
                      l11367 076A                        l11359 0743                        l11391 07ED  
                      l11463 0FFF                        l11455 0FCC                        l11447 0FAB  
                      l11439 0F86                        l11471 147A                        l11519 1332  
                      l11543 14FB                        l11535 14E7                        l11527 14D5  
                      l11607 06BA                        l11615 06DF                        l11551 04D2  
                      l11623 17C0                        l11631 0D67                        l11711 09AF  
                      l11703 0992                        l10657 1392                        l10681 16A4  
                      l10673 168B                        l10665 1676                        l10817 135E  
                      l10809 1352                        l10905 161D                        l11289 1754  
                      l11297 02BA                        l11393 07F2                        l11385 07C8  
                      l11377 0783                        l11369 076B                        l11457 0FD4  
                      l11449 0FB2                        l11465 144F                        l11473 07F6  
                      l11481 148C                        l11545 14FF                        l11537 14EC  
                      l11529 14DD                        l11609 06CB                        l11561 0529  
                      l11553 04EB                        l11625 17CD                        l11617 17AB  
                      l11641 0D8B                        l11633 0D6B                        l11705 0993  
                      l11713 09BD                        l11721 0C14                        l11801 004B  
                      l10659 139C                        l10675 169A                        l10667 1679  
                      l10683 16A5                        l10691 12F9                        l10851 1423  
                      l10907 1625                        l11299 02C3                        l11387 07CD  
                      l11379 0788                        l11395 135F                        l11459 0FDC  
                      l11467 1456                        l11475 07F7                        l11483 1495  
                      l11491 1400                        l11547 1500                        l11539 14F1  
                      l11571 057B                        l11563 0538                        l11555 04F1  
                      l11627 17D3                        l11619 17B1                        l11651 0DA5  
                      l11643 0D91                        l11635 0D75                        l11715 09C6  
                      l11707 0999                        l11731 0C60                        l11723 0C33  
                      l11811 0068                        l11803 0051                        l10597 13A7  
                      l10677 169E                        l10669 1681                        l10685 16B7  
                      l10693 1301                        l10861 144E                        l10853 1428  
                      l10909 162C                        l11389 07D9                        l11397 1361  
                      l11469 145F                        l11477 147B                        l11493 1403  
                      l11485 13F8                        l11549 1501                        l11581 05E4  
                      l11573 05A6                        l11565 054B                        l11557 0512  
                      l11629 17E1                        l11653 0DB0                        l11645 0D98  
                      l11661 0DDA                        l11637 0D7B                        l11709 09A7  
                      l11733 0C73                        l11725 0C53                        l11717 0C0A  
                      l11741 0CBB                        l11821 0097                        l11901 02A2  
                      l11813 006C                        l11805 0053                        l10599 13AA  
                      l10687 16B9                        l10679 16A2                        l10695 1305  
                      l10855 142C                        l10871 16CF                        l10863 16BA  
                      l11399 136B                        l11479 147C                        l11495 1404  
                      l11487 13FC                        l11591 0629                        l11583 05F5  
                      l11575 05AC                        l11567 055E                        l11559 0523  
                      l11655 0DBB                        l11663 0E11                        l11647 0D9D  
                      l11639 0D83                        l11671 1640                        l11727 0C58  
                      l11735 0C79                        l11719 0C0E                        l11751 0CE1  
                      l11743 0CBF                        l11831 00D5                        l11823 00A3  
                      l11807 0059                        l11815 006D                        l10697 1307  
                      l10689 12F7                        l10857 1439                        l10881 16F3  
                      l10873 16D4                        l10865 16BE                        l11497 140A  
                      l11489 13FF                        l11593 063B                        l11585 0600  
                      l11577 05CD                        l11569 0564                        l11657 0DC8  
                      l11649 0DA4                        l11681 165B                        l11673 1641  
                      l11665 162D                        l11729 0C5F                        l11737 0C92  
                      l11761 0D12                        l11753 0CEE                        l11745 0CC0  
                      l11841 0106                        l11833 00EA                        l11825 00B2  
                      l11817 007F                        l11809 005B                        l10859 1447  
                      l10883 16FA                        l10875 16DA                        l10867 16C4  
                      l10891 15EF                        l11499 1410                        l11595 0641  
                      l11587 0612                        l11579 05DE                        l11659 0DD4  
                      l11683 165E                        l11675 1650                        l11667 1635  
                      l11691 0963                        l11771 0D4F                        l11763 0D1F  
                      l11755 0CFB                        l11747 0CC8                        l11739 0CB1  
                      l11851 0148                        l11843 0115                        l11835 00EC  
                      l11827 00BD                        l11819 008B                        l10877 16EB  
                      l10869 16C8                        l10885 1702                        l10893 15F3  
                      l10981 09C7                        l11597 0669                        l11589 061E  
                      l11677 1656                        l11685 165F                        l11669 163C  
                      l11693 0964                        l11773 0D52                        l11765 0D21  
                      l11757 0CFD                        l11749 0CD9                        l11861 018D  
                      l11853 014D                        l11845 0120                        l11837 00EE  
                      l11829 00C8                        l11781 001F                        l10887 1709  
                      l10879 16F1                        l10895 15FA                        l10991 09EB  
                      l10983 09CD                        l11599 067A                        l11679 1657  
                      l11695 0969                        l11687 094D                        l11767 0D29  
                      l11759 0D05                        l11775 0D53                        l11871 01B0  
                      l11855 015C                        l11863 0190                        l11847 012F  
                      l11839 00FB                        l11791 0034                        l11783 0025  
                      l10897 15FF                        l10889 15E7                        l10993 09F3  
                      l10985 09D5                        l11697 0975                        l11689 0955  
                      l11769 0D2F                        l11881 01E3                        l11873 01BD  
                      l11865 019F                        l11857 016B                        l11849 013E  
                      l11793 003B                        l11785 0029                        l11777 0015  
                      l10899 1605                        l10995 09F7                        l10987 09DC  
                      l11699 0982                        l11891 0267                        l11883 01F2  
                      l11875 01C3                        l11867 01A5                        l11859 0188  
                      l11795 0041                        l11787 002A                        l11779 001D  
                      l10997 0A01                        l10989 09DE                        l11893 0276  
                      l11885 0233                        l11877 01C4                        l11869 01AA  
                      l11797 0043                        l11789 002F                        l10999 0A11  
                      l11895 0284                        l11887 0244                        l11879 01C6  
                      l11799 0049                        l11897 028B                        l11889 0253  
                      l11899 028C                        ?_isr1 0072                        ?_main 0072  
                      ?_init 0072                        _EEADR 010D                        STR_10 08B0  
                      STR_11 08C0                        STR_20 085E                        STR_12 08B4  
                      STR_21 0849                        STR_13 083A                        STR_22 085E  
                      STR_14 083A                        STR_23 0854                        STR_15 082A  
                      STR_24 085E                        STR_16 08A8                        STR_17 089C  
                      STR_18 08AC                        STR_19 081A              __end_of___awmod 094D  
                      _CARRY 0018              __end_of___ftmul 1000              __end_of___fttol 0C0A  
robotMoveSpeed@speedhighByte 0061              __end_of___lwdiv 170A              __end_of___lwmod 162D  
                      _RCREG 001A                        _SPBRG 0099                        _PORTA 0005  
                      _PORTC 0007                        _PORTD 0008                        _PORTE 0009  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                        _TRISE 0089                        _SSPIF 0063  
                      _TXREG 0019       lcd_write_data@databyte 0022           i1___lwmod@dividend 0074  
            __end_of_scan360 09C7                ___awtoft@sign 003B                ___ftpack@sign 0024  
                      _total 00C0               __pbitbssCOMMON 0380                        pclath 000A  
                _turnlowByte 00D2              ?_lcd_write_data 0072            ?_adc_read_channel 0072  
                      status 0003                        wtemp0 007E              __end_of_sprintf 07F3  
           __end_of_Debounce 0B64           __size_ofi1___lwmod 0044           ??_adc_read_channel 0026  
           ?_readAvgDistance 0072                 __end_of_Menu 16BA   __size_of_lcd_write_control 0014  
           _shortMenuStrings 00DA                 __end_of_isr1 0F12                 __end_of_main 02AF  
               __end_of_init 1503              rotate@direction 0025                       ??_Menu 0020  
              ?_readDistance 0028       readAvgDistance@fullval 0030                       ??_isr1 0078  
                     ??_main 0067                ___fttol@sign1 0030                       ??_init 0023  
        __end_of_ReadButtons 1533                Menu@BTN_input 0020                       _ADCON0 001F  
                     _ADCON1 009F                       _ADRESH 001E                       _ADRESL 009E  
                     _EEDATA 010C                       _EECON1 018C                       _EECON2 018D  
           __end_of___awtoft 147B             __end_of___ftpack 0A44             __end_of_adc_read 13F8  
                ?_ChargeMode 0072                       i1l2220 0F06                       i1l2212 0EB5  
                     i1l2221 0F05                       i1l2213 0E57                       i1l2222 0F06  
                     i1l2214 0E70                       i1l2215 0E89                       i1l2216 0EA6  
                     i1l2217 0EB4                       i1l2218 0EDD                       i1l2219 0EDC  
                     i1l4550 0B26                       i1l4542 0AE6                       i1l4551 0B40  
                     i1l4543 0AE5                       i1l4552 0B3F                       i1l4544 0AEA  
                     i1l4560 1510                       i1l4553 0B44                       i1l4545 0B04  
                     i1l4561 1532                       i1l4554 0B5E                       i1l4546 0B03  
                     i1l4562 1518                       i1l4555 0B5D                       i1l4547 0B08  
                     i1l4563 1520                       i1l4556 0B63                       i1l4548 0B22  
                     i1l4564 1528                       i1l4557 0B63                       i1l4549 0B21  
                     i1l4565 1530                       i1l7550 15E6                       i1l7543 15DF  
                     i1l7544 15B9                       i1l7545 15AD                       i1l7546 15BE  
                     i1l7547 15BF                       i1l7548 15D0                       i1l7549 15DE  
                     u400_20 0B5A                       u400_21 0B59                       u361_20 0E34  
                     u361_21 0E33                       u370_20 0EE7                       u362_20 0E55  
                     u370_21 0EE6                       u362_21 0E54                       u371_20 0F01  
                     u363_20 0E6E                       u371_21 0F00                       u363_21 0E6D  
                     u372_20 150C                       u364_20 0E87                       u372_21 150B  
                     u364_21 0E86                       u373_20 1514                       u365_20 0EA0  
                     u373_21 1513                       u365_21 0E9F                       u390_20 0AFC  
                     u374_20 151C                       u366_20 0EAB                       u390_21 0AFB  
                     u374_21 151B                       u366_21 0EAA                  _DistLowByte 00C6  
                     u391_20 0B00                       u375_20 1524                       u367_20 0EBB  
                     u391_21 0AFF                       u375_21 1523                       u367_21 0EBA  
                     u392_20 0B0E                       u376_20 152C                       u368_20 0ED3  
                     u392_21 0B0D                       u376_21 152B                       u368_21 0ED2  
                     u393_20 0B1A                       u369_20 0EE1                       u393_21 0B19  
                     u369_21 0EE0                       u394_20 0B1E                       u386_20 0AD2  
                     u394_21 0B1D                       u386_21 0AD1                       u395_20 0B2C  
                     u387_20 0ADE                       u395_21 0B2B                       u387_21 0ADD  
                     u396_20 0B38                       u388_20 0AE2                       u396_21 0B37  
                     u388_21 0AE1                       u397_20 0B3C                       u389_20 0AF0  
                     u397_21 0B3B                       u389_21 0AEF                       u398_20 0B4A  
                     u494_20 15A9                       u398_21 0B49                       u494_21 15A8  
                     u399_20 0B56                       u399_21 0B55                       u495_25 15AE  
                     u496_20 15BD                       u496_21 15BC                       u497_20 15C9  
                     u497_21 15C8                       u497_25 15C5                       u498_25 15D1  
                     u499_20 15DD                       u499_21 15DC                       _TMR0IE 005D  
                     _TMR0IF 005A                 scan360@steps 005F                       _SSPCON 0014  
                     _SSPBUF 0013            ?_straightLineTest 0064                   _UpReleased 038E  
         ??_straightLineTest 0066             __end_of_lcd_init 1423                       _adcVal 006A  
            _UpDebounceCount 00CA                       ___wmul 1423                    ??___awmod 0024  
               _turnhighByte 00D1                    ??___ftmul 0042                 ??_ADCconvert 002E  
                  ??___fttol 002C                    ??___lwdiv 002A                    ??___lwmod 0032  
           __end_of_init_adc 1332               ??_readDistance 002A              ___awmod@divisor 0020  
   __end_of_lcd_write_string 14A7              ___awmod@counter 0025                       _rotate 170A  
                     _rxfifo 00A0                       clrloop 08C5                       _txfifo 01A0  
                     _rxiptr 006D                       _rxoptr 006E                  _BumpSensors 006C  
                     _txiptr 006F                    ??_scan360 005B        ___ftmul@f3_as_product 0047  
                     _txoptr 00D3             __end_of_ser_init 13CF             __end_of_ser_isrx 135F  
          __end_ofi1___lwmod 15E7                       saved_w 007E                main@shortwall 00E8  
                _LeftPressed 0384                    ??_sprintf 0039                  _DownPressed 0382  
          lcd_write_string@s 0027           __end_of_ADCconvert 04D2                   ___awtoft@c 0036  
                 ___ftmul@f1 003C                   ___ftmul@f2 003F                   ___fttol@f1 0028  
             __pcstackCOMMON 0072                 __pidataBANK1 12BF                  _ReadButtons 1503  
   straightLineTest@menuflag 0064          __size_of_ChargeMode 0046             ??_lcd_set_cursor 0023  
                  ?_Debounce 0072                _buttonPressed 007D                   __pbssBANK0 006A  
                 __pbssBANK1 00A0                   __pbssBANK3 0190            _DownDebounceCount 00C7  
             main@direction1 00E3           _RightDebounceCount 00C9                   __pmaintext 0015  
          robotTurn@distance 0022                      ?___wmul 0020                   __pintentry 0004  
               _DistHighByte 00C5                   __ptext1100 1348                   __ptext1101 12F4  
                 __ptext1110 0000                   __ptext1102 1673                   __ptext1103 1381  
                 __ptext1104 13A7                   __ptext1105 13CF        __end_of_UpdateDisplay 06F3  
                 __ptext1106 0E30                   __ptext1107 1503                   __ptext1108 15A3  
                 __ptext1109 0ACC                   __ptext1070 094D                   __ptext1071 162D  
                 __ptext1080 07F3                   __ptext1072 0D67                   __ptext1081 144F  
                 __ptext1073 17AB                   __ptext1090 12CE                   __ptext1082 0F12  
                 __ptext1074 04D2                   __ptext1091 1308                   __ptext1083 1533  
                 __ptext1075 14D4                   __ptext1092 131C                   __ptext1084 135F  
                 __ptext1076 1332                   __ptext1068 0CB1                   __ptext1093 1568  
                 __ptext1085 06F3                   __ptext1077 175A                   __ptext1069 0C0A  
                 __ptext1094 08E5                   __ptext1086 02AF                   __ptext1078 13F8  
                 __ptext1095 0B64                   __ptext1087 170A                   __ptext1079 147B  
                 __ptext1096 09C7                   __ptext1088 0A44                   __ptext1097 15E7  
                 __ptext1089 08CC                   __ptext1098 16BA                   __ptext1099 1423  
         __size_of_ser_getch 0022                    ?___awtoft 0036                    ?___ftpack 0020  
                  ?_adc_read 0020                      ?_rotate 0023           __size_of_ser_putch 0026  
         __size_of_robo_init 0019                      i1l11201 15BF                      i1l11211 15E6  
                    i1l11203 15C9                      i1l11205 15D0           __size_of_robotMove 00A7  
                    i1l11207 15D7                      i1l10511 0E3F                      i1l11209 15DF  
                    i1l10521 0E70                      i1l10513 0E40                      i1l10505 0E30  
                    i1l10531 0EA6                      i1l10523 0E87                      i1l10515 0E55  
                    i1l10507 0E34                      i1l10541 0ECB                      i1l10533 0EAB  
                    i1l10525 0E89                      i1l10517 0E57                      i1l10509 0E35  
                    i1l11191 15A3                      i1l10551 0EEF                      i1l10543 0ED3  
                    i1l10527 0EA0                      i1l10519 0E6E                      i1l10535 0EB5  
                    i1l10801 0B5A                      i1l11193 15A9                      i1l10561 1508  
                    i1l10553 0EF5                      i1l10537 0EBB                      i1l10545 0EDD  
                    i1l10529 0EA1                      i1l11195 15AD                      i1l10571 1515  
                    i1l10563 150C                      i1l10555 0EF9                      i1l10547 0EE1  
                    i1l10539 0EC3                      i1l11197 15B4                      i1l10581 1524  
                    i1l10573 1517                      i1l10565 150D                      i1l10557 0F01  
                    i1l10549 0EE7                      i1l11199 15B9                      i1l10591 152F  
                    i1l10583 1525                      i1l10575 151C                      i1l10567 150F  
                    i1l10559 1503                      i1l10761 0ACC                      i1l10593 1530  
                    i1l10585 1527                      i1l10577 151D                      i1l10569 1514  
                    i1l10771 0AF0                      i1l10763 0AD2                      i1l10595 1532  
                    i1l10587 152C                      i1l10579 151F                      i1l10781 0B14  
                    i1l10773 0AF6                      i1l10765 0AD8                      i1l10589 152D  
                    i1l10791 0B38                      i1l10783 0B1A                      i1l10775 0AFC  
                    i1l10767 0ADE                      i1l10793 0B3C                      i1l10785 0B1E  
                    i1l10777 0B00                      i1l10769 0AE2                      i1l10795 0B4A  
                    i1l10787 0B2C                      i1l10779 0B0E                      i1l10797 0B50  
                    i1l10789 0B32                      i1l10799 0B56           __size_of_robotTurn 0088  
                 ??_Debounce 0072             ??_lcd_write_data 0020                    ?_lcd_init 0072  
                    _SSPSTAT 0094         __end_of_readDistance 1348                    ?_init_adc 0072  
                  ?_ser_init 0072                    ?_ser_isrx 0072                      ___awmod 08E5  
            __size_of___wmul 002C                      ___ftmul 0F12                      ___fttol 0B64  
                    ___lwdiv 16BA                      ___lwmod 15E7    __size_of_adc_read_channel 003B  
                 ??___awtoft 0039                   ??___ftpack 0025                   ??_adc_read 0022  
            __size_of_rotate 0050                      _scan360 094D                      _dpowers 0810  
               __size_of_abs 0035             ___awmod@dividend 0022                      _lowByte 00CE  
                    _ser_tmp 00CF                      _sprintf 06F3                   ??_lcd_init 0023  
       end_of_initialization 14D0                 ??_ChargeMode 0059            __end_of_ser_getch 1381  
                    init_ram 12E5                   ??_init_adc 0020      __size_of_robotMoveSpeed 00C9  
          __end_of_ser_putch 13A7            __end_of_robo_init 08E5            __end_of_robotMove 0CB1  
               _LeftReleased 0385            __end_of_robotTurn 0ACC                   ??_ser_init 0020  
                 ??_ser_isrx 0020                      rotate@i 0028                 _DownReleased 0383  
              _RightReleased 038C     __size_of_readAvgDistance 0055                   _robot_read 175A  
          ?_lcd_write_string 0027           __end_of_ChargeMode 1673    __size_of_straightLineTest 00B6  
         ??_lcd_write_string 0029                  AT25256A@CS0 0038                  AT25256A@CS1 0039  
          adc_read@adc_value 0024                    i1___lwmod 15A3                   _totalSteps 00C2  
                 main@choice 00E7                ?_spi_transfer 0072                  ___ftmul@exp 0046  
              _CenterPressed 0380                 ?_ReadButtons 0072               __end_of___wmul 144F  
          i1___lwmod@divisor 0072            i1___lwmod@counter 0077   robotMoveSpeed@speedlowByte 0060  
             __end_of_rotate 175A          start_initialization 14A7                  __end_of_abs 1568  
      __size_of_readDistance 0016            __size_of_Debounce 0098                   ?i1___lwmod 0072  
             ??_spi_transfer 0020        lcd_set_cursor@address 0023                    _UpPressed 038D  
             _RTC_FLAG_250MS 0388               _RTC_FLAG_500MS 0389                     ??___wmul 0024  
             rotate@numsteps 0023                  __pdataBANK1 00D4             _adc_read_channel 1568  
                ?_robot_read 0072                     ??_rotate 0026                 _readDistance 1332  
          __size_of___awtoft 002C            __size_of___ftpack 007D            __size_of_adc_read 0029  
                __pbssCOMMON 007D            ??_readAvgDistance 0030                __pcstackBANK0 0020  
              __pcstackBANK1 00E3       robotMoveSpeed@distance 0059            __size_of_lcd_init 002B  
             _robotMoveSpeed 0D67                  sprintf@_val 003F                  sprintf@flag 003D  
          robotMove@distance 0059                  sprintf@prec 003E                 _current_step 00E2  
           readAvgDistance@i 0032            __size_of_init_adc 0016             ___lwdiv@dividend 0028  
                   ?___awmod 0020                     ?___ftmul 003C            __size_of_ser_init 0028  
                   ?___fttol 0028            __size_of_ser_isrx 0017                     ?___lwdiv 0026  
                   ?___lwmod 002E                    __pstrings 0800                    _dist_high 00B6  
           _straightLineTest 0CB1                     ?_scan360 0059          readDistance@fullval 002C  
                 ser_getch@c 0021             ___lwdiv@quotient 002B                  ??i1___lwmod 0076  
                   ?_sprintf 0034       __end_of_robotMoveSpeed 0E30      __size_of_lcd_set_cursor 000B  
          interrupt_function 0004       __size_of_UpdateDisplay 0221               ___wmul@product 0024  
        __size_of_robot_read 0051                   ser_putch@c 0021                    _ser_getch 135F  
                  _ser_putch 1381                    _robo_init 08CC                    _robotMove 0C0A  
                  _robotTurn 0A44                 _RightPressed 038B         __size_of_ReadButtons 0030  
       __end_of_spi_transfer 1308                  __stringbase 080F            ___wmul@multiplier 0020  
     UpdateDisplay@adcOutput 0049             spi_transfer@data 0022             spi_transfer@temp 0021  
                   _Debounce 0ACC            _LeftDebounceCount 00C8              ?_robotMoveSpeed 0059  
  __size_of_lcd_write_string 002C                     _d2travel 00B2           scan360@lowestSteps 005D  
    __size_of_lcd_write_data 0013                   ?_ser_getch 0072                   ?_ser_putch 0072  
    adc_read_channel@channel 0027                _RTC_FLAG_10MS 0386                _RTC_FLAG_50MS 038A  
                 ?_robo_init 0072                    init_fetch 12E1                   ?_robotMove 0059  
                 ?_robotTurn 0022                   _ADCconvert 02AF             __size_of___awmod 0068  
           __size_of___ftmul 00EE             __size_of___fttol 00A6             __size_of___lwdiv 0050  
           __size_of___lwmod 0046                     ___awtoft 144F                     ___ftpack 09C7  
              _UpdateDisplay 04D2                     _adc_read 13CF                  _currentMenu 00CB  
           __size_of_scan360 007A              ___lwdiv@divisor 0026              ___lwdiv@counter 002D  
                _menuStrings 00D4                     _highByte 00CD                     _lcd_init 13F8  
                   _distance 00BA                     _dist_low 00B8             __size_of_sprintf 0100  
   __end_of_adc_read_channel 15A3    lcd_write_control@databyte 0022                __size_of_Menu 0047  
                   _init_adc 131C                __size_of_isr1 00E2                __size_of_main 029A  
              __size_of_init 002F                     clear_ram 08C4                     _ser_init 13A7  
                   _ser_isrx 1348                     main@RT2A 00E5                     main@RT2P 00EA  
            _readAvgDistance 17AB               ?_UpdateDisplay 0072                 ??_robot_read 0022  
        _CenterDebounceCount 00C4                 _RTC_FLAG_1MS 0387           UpdateDisplay@F1236 0190  
                   intlevel1 0000               _lcd_set_cursor 07F3                    sprintf@ap 003C  
                  sprintf@sp 0043             ___lwmod@dividend 0030     __end_of_straightLineTest 0D67  
         __end_of_robot_read 17AB                    stringcode 080A                  ??_ser_getch 0020  
                _serialInput 00D0                  ??_ser_putch 0020                _distTravelled 00B4  
                ??_robo_init 0022        __size_of_spi_transfer 0014                  ??_robotMove 005B  
                ??_robotTurn 0024                  ?_ADCconvert 0072            _lcd_write_control 1308  
           scan360@lowestVal 005B           ?_lcd_write_control 0072                   _OPTION_REG 0081  
                   sprintf@c 0044                     sprintf@f 0034          robotMoveSpeed@temp1 0062  
        robotMoveSpeed@speed 005B              ___lwmod@divisor 002E              ___lwmod@counter 0033  
                   stringdir 080A                     stringtab 0800          ??_lcd_write_control 0020  
     __end_of_lcd_set_cursor 07FE             _lcd_write_string 147B                 _spi_transfer 12F4  
          _current_direction 00CC                  _RTC_Counter 00B0      __end_of_readAvgDistance 1800  
             _lcd_write_data 12CE  
